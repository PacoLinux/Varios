VERSION E05

PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:1    
        1        1        /*M*   FMD$BUF - Routines to manipulate pool buffers                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*   NAME:   FMD$BUF
        9        9        *      PURPOSE:  Routines to allocate, deallocate, read, write
       10       10        *              and move data to pool buffers.                                */
       11       11        %EJECT;
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:2    
       12       12        /*F*   NAME:   FMD$GETBUF
       13       13        *      PURPOSE:  Obtain a pool buffer for a DCB.
       14       14        *      DESCRIPTION:  A pool buffer is obtained from memory management         */
       15       15        /*D*   NAME:   FMD$GETBUF
       16       16        *      CALL:   CALL FMD$GETBUF(BUFNUM,BUFSIZE,BUF$);
       17       17        *      INTERFACE:  MMJ$GFBUF,FMD$FLSHBUF,FTT$TRUNC
       18       18        *      INPUT:  BUFNUM - DCB buffer number to get (0-4)
       19       19        *              BUFSIZ - Size of buffer in pages
       20       20        *      OUTPUT: DCB.BFR1.BUFX  contains the buffer number (1-30)
       21       21        *              BUF$ - Pointer to the buffer obtained
       22       22                 DESCRIPTION:
       23       23
       24       24                      If we already have a buffer, then just set the pointers.
       25       25                 Otherwise, get a buffer, then set the appropriate values.
       26       26                                                                                      */
       27       27        FMD$GETBUF: PROC(BUFNUM,BUFSIZE,BUF$);
       28       28        /* PARAMETERS */
       29       29    1   DCL BUFNUM UBIN(36);
       30       30    1   DCL BUFNUM$ REDEF BUFNUM PTR;
       31       31    1   DCL BUFSIZE UBIN(36);
       32       32    1   DCL BUF$ PTR;
       33       33        /* EXTERNAL ROUTINES */
       34       34    1   DCL MMJ$GFBUF ENTRY(2);
       35       35    1   DCL SC_FMD84 ENTRY CONV(2,0);
       36       36        /* LOCAL AUTOMATIC STORAGE */
       37       37    1   DCL I SBIN WORD;
       38       38    1   DCL JDCB$ PTR;
       39       39        /* EXTERNAL DATA */
       40       40    1   DCL B$JIT$ PTR SYMREF READONLY;
       41       41    1   DCL FM$BUF$(0:0) PTR SYMREF READONLY;
       42       42        /* INCLUDE FILES */
       43       43        %INCLUDE B$JIT;
       44      646        %MACRO F$DCB(BASED=BASED);
       45      647        %INCLUDE F$DCB;
       46      696        %MEND;
       47      697        %INCLUDE FM_DATA_R;
       48      711        %INCLUDE CP_6_SUBS;
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:3    
       49     1251        /* BASED STRUCTURES */
       50     1252        %F$DCB (BASED="BASED(JDCB$)");
       51     1302        /* */
       52     1303    1           JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */
       53     1304    1           IF BUFSIZE=0 OR BUFNUM>4 THEN
       54     1305    1           CALL SC_FMD84;                  /* ILLEGAL ARGS                       */
       55     1306        /*S*   SCREECH_CODE:  FMD-S$FM84
       56     1307        *      TYPE:   SUA
       57     1308        *      MESSAGE:  FMD$GETBUF called with bad args */
       58     1309    1           IF F$DCB.BFR.BUFX(BUFNUM) = 0
       59     1310    2           THEN DO;
       60     1311    2              CALL MMJ$GFBUF(BUFSIZE,I);
       61     1312    2              F$DCB.BFR.BUFX(BUFNUM)=I;    /* Buffer number                      */
       62     1313    2              F$DCB.BFR1.SIZ(BUFNUM)=BUFSIZE;
       63     1314    2              END;
       64     1315    1           IF ADDR(BUF$)~=ADDR(NIL) THEN
       65     1316    1              BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));
       66     1317    1           RETURN;
       67     1318        /* */
       68     1319    1   FMD$GBUF: ENTRY(BUFNUM);
       69     1320        /* */
       70     1321    1           CALL MMJ$GFBUF(1,I);
       71     1322    1           BUFNUM$=FM$BUF$(I);
       72     1323    1           RETURN;
       73     1324    1   END FMD$GETBUF;
       74     1325        %EOD;

PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:4    
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$GETBUF.

   Procedure FMD$GETBUF requires 69 words for executable code.
   Procedure FMD$GETBUF requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:5    

 Object Unit name= FMD$GETBUF                                 File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:39:12.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    69    105  FMD$GETBUF
    1  RoData even  none     1      1  FMD$GETBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  FMD$GETBUF
     0     66                  yes      Std        1  FMD$GBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 MMJ$GFBUF
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMD84                         r    B$JIT$                           r    FM$BUF$
     B_VECTNIL
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:6    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:7    


        1        1        /*M*   FMD$BUF - Routines to manipulate pool buffers                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*P*   NAME:   FMD$BUF
        9        9        *      PURPOSE:  Routines to allocate, deallocate, read, write
       10       10        *              and move data to pool buffers.                                */
       11       11        %EJECT;
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:8    
       12       12        /*F*   NAME:   FMD$GETBUF
       13       13        *      PURPOSE:  Obtain a pool buffer for a DCB.
       14       14        *      DESCRIPTION:  A pool buffer is obtained from memory management         */
       15       15        /*D*   NAME:   FMD$GETBUF
       16       16        *      CALL:   CALL FMD$GETBUF(BUFNUM,BUFSIZE,BUF$);
       17       17        *      INTERFACE:  MMJ$GFBUF,FMD$FLSHBUF,FTT$TRUNC
       18       18        *      INPUT:  BUFNUM - DCB buffer number to get (0-4)
       19       19        *              BUFSIZ - Size of buffer in pages
       20       20        *      OUTPUT: DCB.BFR1.BUFX  contains the buffer number (1-30)
       21       21        *              BUF$ - Pointer to the buffer obtained
       22       22                 DESCRIPTION:
       23       23
       24       24                      If we already have a buffer, then just set the pointers.
       25       25                 Otherwise, get a buffer, then set the appropriate values.
       26       26                                                                                      */
       27       27        FMD$GETBUF: PROC(BUFNUM,BUFSIZE,BUF$);

     27  0 000000   000000 700200 xent  FMD$GETBUF   TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

       28       28        /* PARAMETERS */
       29       29    1   DCL BUFNUM UBIN(36);
       30       30    1   DCL BUFNUM$ REDEF BUFNUM PTR;
       31       31    1   DCL BUFSIZE UBIN(36);
       32       32    1   DCL BUF$ PTR;
       33       33        /* EXTERNAL ROUTINES */
       34       34    1   DCL MMJ$GFBUF ENTRY(2);
       35       35    1   DCL SC_FMD84 ENTRY CONV(2,0);
       36       36        /* LOCAL AUTOMATIC STORAGE */
       37       37    1   DCL I SBIN WORD;
       38       38    1   DCL JDCB$ PTR;
       39       39        /* EXTERNAL DATA */
       40       40    1   DCL B$JIT$ PTR SYMREF READONLY;
       41       41    1   DCL FM$BUF$(0:0) PTR SYMREF READONLY;
       42       42        /* INCLUDE FILES */
       43       43        %INCLUDE B$JIT;
       44      646        %MACRO F$DCB(BASED=BASED);
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:9    
       45      647        %INCLUDE F$DCB;
       46      696        %MEND;
       47      697        %INCLUDE FM_DATA_R;
       48      711        %INCLUDE CP_6_SUBS;
       49     1251        /* BASED STRUCTURES */
       50     1252        %F$DCB (BASED="BASED(JDCB$)");
       51     1302        /* */
       52     1303    1           JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */

   1303  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200007 756100                    STQ     JDCB$,,AUTO

       53     1304    1           IF BUFSIZE=0 OR BUFNUM>4 THEN

   1304  0 000005   200004 471500                    LDP1    @BUFSIZE,,AUTO
         0 000006   100000 235100                    LDA     0,,PR1
         0 000007   000014 600000 0                  TZE     s:1305
         0 000010   200003 473500                    LDP3    @BUFNUM,,AUTO
         0 000011   300000 235100                    LDA     0,,PR3
         0 000012   000005 115007                    CMPA    5,DL
         0 000013   000016 602000 0                  TNC     s:1309

       54     1305    1           CALL SC_FMD84;                  /* ILLEGAL ARGS                       */

   1305  0 000014   000000 713400 xsym               CLIMB   SC_FMD84
         0 000015   000000 600000 xsid               climb   nvectors=         0

       55     1306        /*S*   SCREECH_CODE:  FMD-S$FM84
       56     1307        *      TYPE:   SUA
       57     1308        *      MESSAGE:  FMD$GETBUF called with bad args */
       58     1309    1           IF F$DCB.BFR.BUFX(BUFNUM) = 0

   1309  0 000016   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000017   000000 720100                    LXL0    0,,PR0
         0 000020   200007 471500                    LDP1    JDCB$,,AUTO
         0 000021   100115 236110                    LDQ     77,X0,PR1
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:10   
         0 000022   037000 316003                    CANQ    15872,DU
         0 000023   000053 601000 0                  TNZ     s:1315

       59     1310    2           THEN DO;

       60     1311    2              CALL MMJ$GFBUF(BUFSIZE,I);

   1311  0 000024   200006 633500                    EPPR3   I,,AUTO
         0 000025   200011 453500                    STP3    JDCB$+2,,AUTO
         0 000026   200004 236100                    LDQ     @BUFSIZE,,AUTO
         0 000027   200010 756100                    STQ     JDCB$+1,,AUTO
         0 000030   200010 630500                    EPPR0   JDCB$+1,,AUTO
         0 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000032   000000 701000 xent               TSX1    MMJ$GFBUF
         0 000033   000000 011000                    NOP     0

       61     1312    2              F$DCB.BFR.BUFX(BUFNUM)=I;    /* Buffer number                      */

   1312  0 000034   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000035   000000 720100                    LXL0    0,,PR0
         0 000036   200007 471500                    LDP1    JDCB$,,AUTO
         0 000037   200006 236100                    LDQ     I,,AUTO
         0 000040   000033 736000                    QLS     27
         0 000041   100115 676110                    ERQ     77,X0,PR1
         0 000042   037000 376003                    ANQ     15872,DU
         0 000043   100115 656110                    ERSQ    77,X0,PR1

       62     1313    2              F$DCB.BFR1.SIZ(BUFNUM)=BUFSIZE;

   1313  0 000044   000000 720100                    LXL0    0,,PR0
         0 000045   200004 473500                    LDP3    @BUFSIZE,,AUTO
         0 000046   300000 236100                    LDQ     0,,PR3
         0 000047   000022 736000                    QLS     18
         0 000050   100122 676110                    ERQ     82,X0,PR1
         0 000051   000777 376003                    ANQ     511,DU
         0 000052   100122 656110                    ERSQ    82,X0,PR1

PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:11   
       63     1314    2              END;

       64     1315    1           IF ADDR(BUF$)~=ADDR(NIL) THEN

   1315  0 000053   200005 236100                    LDQ     @BUF$,,AUTO
         0 000054   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000055   000065 600000 0                  TZE     s:1317

       65     1316    1              BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));

   1316  0 000056   000000 720100                    LXL0    0,,PR0
         0 000057   100115 236110                    LDQ     77,X0,PR1
         0 000060   000033 772000                    QRL     27
         0 000061   000037 376007                    ANQ     31,DL
         0 000062   000000 236006 xsym               LDQ     FM$BUF$,QL
         0 000063   200005 473500                    LDP3    @BUF$,,AUTO
         0 000064   300000 756100                    STQ     0,,PR3

       66     1317    1           RETURN;

   1317  0 000065   000000 702200 xent               TSX2  ! X66_ARET

       67     1318        /* */
       68     1319    1   FMD$GBUF: ENTRY(BUFNUM);

   1319  0 000066   000000 700200 xent  FMD$GBUF     TSX0  ! X66_AUTO_3
         0 000067   000012 000003                    ZERO    10,3

       69     1320        /* */
       70     1321    1           CALL MMJ$GFBUF(1,I);

   1321  0 000070   200006 630500                    EPPR0   I,,AUTO
         0 000071   200011 450500                    STP0    JDCB$+2,,AUTO
         0 000072   000000 236000 1                  LDQ     0
         0 000073   200010 756100                    STQ     JDCB$+1,,AUTO
         0 000074   200010 630500                    EPPR0   JDCB$+1,,AUTO
         0 000075   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:12   
         0 000076   000000 701000 xent               TSX1    MMJ$GFBUF
         0 000077   000000 011000                    NOP     0

       71     1322    1           BUFNUM$=FM$BUF$(I);

   1322  0 000100   200006 720100                    LXL0    I,,AUTO
         0 000101   000000 236010 xsym               LDQ     FM$BUF$,X0
         0 000102   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000103   000000 756100                    STQ     0,,PR0

       72     1323    1           RETURN;

   1323  0 000104   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000                                                    ....
       73     1324    1   END FMD$GETBUF;
       74     1325        %EOD;

PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:13   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$GETBUF.
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:14   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BUF$                      3-0-0/w PTR         r     1 @BUFNUM
     4-0-0/w PTR         r     1 @BUFSIZE                  *0-0-0/w PTR         r     1 BUF$
    *0-0-0/w UBIN        r     1 BUFNUM                    *0-0-0/w PTR         r     1 BUFNUM$
    *0-0-0/w UBIN        r     1 BUFSIZE                    6-0-0/w SBIN        r     1 I
     7-0-0/w PTR         r     1 JDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 FM$BUF$(0:0)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure FMD$GETBUF requires 69 words for executable code.
   Procedure FMD$GETBUF requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:15   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:16   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       464**DCL       464--REDEF
B$JIT.DCB$
       538**DCL      1303>>ASSIGN
B$JIT.ERR.MID
       371**DCL       371--REDEF
B$JIT.JRESPEAK
       532**DCL       533--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       641**DCL       641--REDEF     642--REDEF
B$JIT.PNR
       545**DCL       545--REDEF
B$JIT.TSLINE
       639**DCL       640--REDEF
B$JIT$
        40**DCL       365--IMP-PTR  1303>>ASSIGN
BUF$
        32**DCL        27--PROC     1315--IF       1316<<ASSIGN
BUFNUM
        29**DCL        27--PROC       30--REDEF    1304>>IF       1309>>IF       1312>>ASSIGN   1313>>ASSIGN
      1316>>ASSIGN   1319--ENTRY
BUFNUM$
        30**DCL      1322<<ASSIGN
BUFSIZE
        31**DCL        27--PROC     1304>>IF       1311<>CALL     1313>>ASSIGN
F$DCB.ACTPOS
      1278**DCL      1278--REDEF
F$DCB.ARS
      1253**DCL      1253--REDEF
F$DCB.ATTR
      1271**DCL      1272--REDEF
F$DCB.BFR.BUFX
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:17   
      1298**DCL      1309>>IF       1312<<ASSIGN   1316>>ASSIGN
F$DCB.BFR1.SIZ
      1298**DCL      1313<<ASSIGN
F$DCB.BORROW
      1286**DCL      1286--REDEF    1286--REDEF    1286--REDEF
F$DCB.DCBNAME.L
      1300**DCL      1300--IMP-SIZ
F$DCB.EOMCHAR
      1257**DCL      1257--REDEF
F$DCB.FLDID
      1281**DCL      1281--REDEF
F$DCB.FORM$
      1275**DCL      1275--REDEF
F$DCB.FSECT
      1291**DCL      1291--REDEF
F$DCB.FSN
      1268**DCL      1268--REDEF    1268--REDEF    1269--REDEF
F$DCB.HEADER$
      1274**DCL      1274--REDEF
F$DCB.IXTNSIZE
      1272**DCL      1272--REDEF
F$DCB.LASTSTA$
      1262**DCL      1262--REDEF
F$DCB.LVL
      1287**DCL      1287--REDEF
F$DCB.NAME.C
      1262**DCL      1262--REDEF
F$DCB.NOEOF
      1283**DCL      1283--REDEF
F$DCB.NRECS
      1273**DCL      1273--REDEF
F$DCB.NRECX
      1292**DCL      1292--REDEF
F$DCB.OHDR
      1284**DCL      1284--REDEF
F$DCB.ORG
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:18   
      1267**DCL      1267--REDEF
F$DCB.PRECNO
      1290**DCL      1290--REDEF
F$DCB.RCSZ
      1295**DCL      1295--REDEF
F$DCB.RES
      1263**DCL      1263--REDEF
F$DCB.SETX
      1275**DCL      1275--REDEF
F$DCB.TAB$
      1274**DCL      1275--REDEF
F$DCB.TDA
      1289**DCL      1289--REDEF
F$DCB.WSN
      1264**DCL      1264--REDEF
FM$BUF$
        41**DCL      1316>>ASSIGN   1322>>ASSIGN
I
        37**DCL      1311<>CALL     1312>>ASSIGN   1321<>CALL     1322>>ASSIGN
JDCB$
        38**DCL      1253--IMP-PTR  1303<<ASSIGN   1309>>IF       1312>>ASSIGN   1313>>ASSIGN   1316>>ASSIGN
MMJ$GFBUF
        34**DCL-ENT  1311--CALL     1321--CALL
SC_FMD84
        35**DCL-ENT  1305--CALL
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:19   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FMD$GETBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:20   
              MINI UREF LISTING

F$CFU$     708**DCL
FM$SET$     709**DCL
FMD$GBUF    1319**ENTRY
FMD$GETBUF      27**PROC
FM_CFUWAIT     708**DCL
FM_CFUWGRB     708**DCL
FM_EOP     706**DCL
FM_FRMAX     705**DCL
FM_FRZERO     705**DCL
FM_GCT     709**DCL
FM_GIP     709**DCL
FM_GPSDA     706**DCL
FM_HASH     707**DCL
FM_MADSDA     706**DCL
FM_PADSDA     706**DCL
FM_SRMAX     705**DCL
FM_SRZERO     705**DCL
FM_SYSACCTX     709**DCL
FM_SYSSETX     709**DCL
FM_TRUNC     707**DCL
FM_WSQ     707**DCL
F_CWLK     708**DCL
F_CWUSER     708**DCL
F_DCBLOCK     707**DCL

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:21   
       75        1        /*T***********************************************************/
       76        2        /*T*                                                         */
       77        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       78        4        /*T*                                                         */
       79        5        /*T***********************************************************/
       80        6        /*D*     NAME:     FMD$TRUNC
       81        7                 PURPOSE:  To get rid of the oldest buffer at the request of
       82        8                           memory management.
       83        9                 DESCRIPTION:
       84       10
       85       11                      When we call memory management to get a buffer, it will
       86       12                 check to make sure the user has not exceeded his allowed
       87       13                 number of FPOOLS.  If he has, then MM will call FMD$TRNC
       88       14                 to get rid of the oldest buffer that is not part of the
       89       15                 current DCB.  Loop once through the list of the user's
       90       16                 DCBs, looking for the oldest one.  Loop once through the
       91       17                 buffer table, releasing the first buffer we find.  If we
       92       18                 can't find one, then scrag the user.
       93       19        */
       94       20                 %EJECT;
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:22   
       95       21        FMD$TRNC: PROC;
       96       22        /* */
       97       23    1          DCL FMD$FLSHBUF ENTRY(1);
       98       24    1          DCL FMD$RELBUF ENTRY(1);
       99       25    1          DCL FTT$TRUNC ENTRY ALTRET;
      100       26    1          DCL SC_FMD85 ENTRY CONV(2, 0);
      101       27    1          DCL SSR$REG ENTRY(3) ALTRET;
      102       28        /* */
      103       29    1          DCL P$ PTR BASED ALIGNED;
      104       30        /* */
      105       31    1          DCL JDCB$ PTR;
      106       32    1          DCL OLDAGE SBIN;
      107       33    1          DCL I SBIN;
      108       34    1          DCL SAVDCB$ PTR;
      109       35    1          DCL PTRTBL$ PTR;
      110       36    1          DCL TDCB$ PTR;
      111       37    1          DCL DCBCNT SBIN;
      112       38    1          DCL OLDAGE_WIO SBIN;
      113       39    1          DCL BCDCB$ PTR;
      114       40    1          DCL 1 BCDCB REDEF BCDCB$,
      115       41    1               2 * BIT(24),
      116       42    1               2 SID BIT(12);
      117       43        /* */
      118       44    1          DCL B$JIT$ PTR SYMREF;
      119       45    1          DCL B$ROSEG$ PTR SYMREF;
      120       46    1          DCL B$UPT$ PTR SYMREF;
      121       47    1          DCL FM$BUF$(0:0) PTR SYMREF;
      122       48        /* */
      123       49               %INCLUDE B$JIT;
      124      652               %MACRO F$DCB(BASED=BASED);
      125      653               %INCLUDE F$DCB;
      126      702               %MEND;
      127      703               %INCLUDE B$ROSEG;
      128      766               %INCLUDE B$MAP;
      129      865               %INCLUDE M_INFO_C;
      130     1005               %INCLUDE B_SEGIDS_C;
      131     1544               %INCLUDE SS_SCHED_C;
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:23   
      132     1777               %INCLUDE B_STRINGS_C;
      133     1906               %INCLUDE FM_DATA_R;
      134     1920               %INCLUDE CP_6_SUBS;
      135     2460        /* */
      136     2461               %F$DCB(BASED="BASED(JDCB$)");
      137     2511        /* */
      138     2512                                      /* Ptr to first neg DCB in DCB pointer table    */
      139     2513    1          JDCB$=B$JIT.DCB$;
      140     2514    1          PTRTBL$=PINCRW(B$ROSEG$->B$ROSEG.DCBPTR$,%M$MAXNEG#-1);
      141     2515                                           /* Total number of DCB pointers in table   */
      142     2516    1          DCBCNT=B$ROSEG$->B$ROSEG.NUMDCBS-%M$MAXNEG#+1;
      143     2517    1          SAVDCB$=ADDR(NIL);
      144     2518    1          BCDCB$ = ADDR(NIL) ;
      145     2519    1          OLDAGE_WIO=-1;
      146     2520    1          OLDAGE=-1;
      147     2521    2          DO WHILE(DCBCNT>0);
      148     2522    2             PTRTBL$=PINCRW(PTRTBL$,1);   /* ADVANCE TO NEXT DCB POINTER        */
      149     2523    2             TDCB$=PTRTBL$->P$;           /* POINTER TO THIS DCB                */
      150     2524    2             IF TDCB$=ADDR(NIL) THEN
      151     2525    2                GOTO NXTDCB;
      152     2526    2             IF NOT TDCB$->F$DCB.FCD THEN
      153     2527    2                GOTO NXTDCB;
      154     2528    2             IF TDCB$->F$DCB.IASN=%STREAM# THEN
      155     2529    2                TDCB$=TDCB$->F$DCB.CFU$;
      156     2530    2             IF TDCB$=JDCB$ THEN
      157     2531    2                IF F$DCB.IASN~=%RANDOM# OR NOT F$DCB.BFR1(0) THEN
      158     2532    2                   GOTO NXTDCB;  /* Skip current DCB unless RANDOM,
      159     2533                               in which case it is OK to take buffer 0 */
      160     2534    3             DO I=0 TO 4;
      161     2535    3                IF TDCB$->F$DCB.BFR.BUFX(I)~=0 THEN
      162     2536    3                   GOTO GOTONE;           /* Real page here                     */
      163     2537    3                END;
      164     2538    2             GOTO NXTDCB;                 /* THIS DCB HAS NO BUFFERS            */
      165     2539        /* */
      166     2540           /* The first IF finds the OLDEST DCB without an IO pending,
      167     2541              The second finds the OLDEST DCB with an IO pending.  If the
      168     2542              First one fails to find a DCB without an IO pending, we will
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:24   
      169     2543              be forced to Wait for the IO to complete on the second.      */
      170     2544    3   GOTONE:   IF NOT TDCB$->F$DCB.FCN(0) THEN DO;              /* No IO pending */
      171     2545    4                IF TDCB$->F$DCB.AGE<OLDAGE OR OLDAGE=-1 THEN DO; /* FOUND OLDER */
      172     2546    4                   OLDAGE=TDCB$->F$DCB.AGE;  /* REMEMBER AGE OF THIS ONE        */
      173     2547    4                   SAVDCB$=TDCB$;            /* REMEMBER POINTER TO IT          */
      174     2548    4                   END;
      175     2549    3                END ;
      176     2550    3             ELSE DO;              /* Has an IO pending.  Use it if we have to. */
      177     2551    3                IF TDCB$->F$DCB.AGE<OLDAGE_WIO OR
      178     2552    4                        OLDAGE_WIO=-1 THEN DO;                /* FOUND OLDER    */
      179     2553    4                   OLDAGE_WIO=TDCB$->F$DCB.AGE;  /* REMEMBER AGE OF THIS ONE    */
      180     2554    4                   BCDCB$=TDCB$;                 /* REMEMBER POINTER TO IT      */
      181     2555    4                   END;
      182     2556    3                END ;
      183     2557    2   NXTDCB:   DCBCNT=DCBCNT-1;
      184     2558    2             END;
      185     2559        /* */
      186     2560        /* ALL DCBS HAVE BEEN LOOKED AT
      187     2561           If we didn't find a DCB without an IO use one with an IO */
      188     2562    1           IF SAVDCB$=ADDR(NIL) THEN SAVDCB$ = BCDCB$;
      189     2563    1           IF SAVDCB$=ADDR(NIL) THEN
      190     2564    1           IF B$JIT.FBUC > 8 THEN CALL SC_FMD85; /* ERROR IF NO DCB HAD BUFFERS  */
      191     2565    1           ELSE RETURN;
      192     2566    1           BCDCB$=SAVDCB$;
      193     2567    1           BCDCB.SID=%RONCSID;             /* BYPASS CACHE PTR                   */
      194     2568    1           IF BCDCB$->F$DCB.FCN(0) THEN    /* WAIT FOR I/O TO COMPLETE           */
      195     2569    1              CALL SSR$REG(%SS_IIP,BCDCB$->F$DCB.FCN(0));
      196     2570    2           DO I=0 TO 4;
      197     2571    2              IF SAVDCB$->F$DCB.BFR.BUFX(I)~=0 THEN
      198     2572    3                 DO;
      199     2573    3                 FM_TRUNC=FM_TRUNC+1;
      200     2574    3                 B$JIT.DCB$=SAVDCB$;       /* CHANGE JIT DCB PTR FOR FTT & FMD   */
      201     2575    4                 DO CASE(SAVDCB$->F$DCB.IASN);
      202     2576    4                    CASE(%FILE#);
      203     2577    4                       IF SAVDCB$ -> F$DCB.BFR.CVM(I) THEN
      204     2578    4                          CALL FMD$RELBUF(I);
      205     2579    4                       ELSE
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:25   
      206     2580    4                          CALL FMD$FLSHBUF(I);
      207     2581    4                    CASE (%TAPE#, %OD#); /* Optical Disk and Tape DCB  */
      208     2582    4                       CALL FTT$TRUNC;
      209     2583    4                    CASE(%DEVICE#,%FPRGIASN#);
      210     2584    4                       CALL FMD$RELBUF(I);
      211     2585    4                    CASE(ELSE);
      212     2586    4                       CALL SC_FMD85;
      213     2587    4                 END;
      214     2588    3                 B$JIT.DCB$=JDCB$;         /* RESTORE DCB PTR                    */
      215     2589    3                 RETURN;
      216     2590    3                 END;
      217     2591    2           END;
      218     2592
      219     2593        /*S*   SCREECH_CODE:  FMD-S$FM85
      220     2594        *      TYPE:   SUA
      221     2595        *      MESSAGE:  Can't find any pool buffers */
      222     2596    1          END FMD$TRNC;
      223     2597               %EOD;

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:26   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$TRNC.

   Procedure FMD$TRNC requires 181 words for executable code.
   Procedure FMD$TRNC requires 14 words of local(AUTO) storage.

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:27   

 Object Unit name= FMD$TRNC                                   File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:39:25.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   181    265  FMD$TRNC
    1  RoData even  none     1      1  FMD$TRNC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  FMD$TRNC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 SSR$REG
         yes           Std       1 FMD$RELBUF
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       0 FTT$TRUNC
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:28   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMD85                              B$JIT$                                B$ROSEG$
     FM_TRUNC                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:29   


       75        1        /*T***********************************************************/
       76        2        /*T*                                                         */
       77        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       78        4        /*T*                                                         */
       79        5        /*T***********************************************************/
       80        6        /*D*     NAME:     FMD$TRUNC
       81        7                 PURPOSE:  To get rid of the oldest buffer at the request of
       82        8                           memory management.
       83        9                 DESCRIPTION:
       84       10
       85       11                      When we call memory management to get a buffer, it will
       86       12                 check to make sure the user has not exceeded his allowed
       87       13                 number of FPOOLS.  If he has, then MM will call FMD$TRNC
       88       14                 to get rid of the oldest buffer that is not part of the
       89       15                 current DCB.  Loop once through the list of the user's
       90       16                 DCBs, looking for the oldest one.  Loop once through the
       91       17                 buffer table, releasing the first buffer we find.  If we
       92       18                 can't find one, then scrag the user.
       93       19        */
       94       20                 %EJECT;
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:30   
       95       21        FMD$TRNC: PROC;

     21  0 000000   000000 700200 xent  FMD$TRNC     TSX0  ! X66_AUTO_0
         0 000001   000016 000000                    ZERO    14,0

       96       22        /* */
       97       23    1          DCL FMD$FLSHBUF ENTRY(1);
       98       24    1          DCL FMD$RELBUF ENTRY(1);
       99       25    1          DCL FTT$TRUNC ENTRY ALTRET;
      100       26    1          DCL SC_FMD85 ENTRY CONV(2, 0);
      101       27    1          DCL SSR$REG ENTRY(3) ALTRET;
      102       28        /* */
      103       29    1          DCL P$ PTR BASED ALIGNED;
      104       30        /* */
      105       31    1          DCL JDCB$ PTR;
      106       32    1          DCL OLDAGE SBIN;
      107       33    1          DCL I SBIN;
      108       34    1          DCL SAVDCB$ PTR;
      109       35    1          DCL PTRTBL$ PTR;
      110       36    1          DCL TDCB$ PTR;
      111       37    1          DCL DCBCNT SBIN;
      112       38    1          DCL OLDAGE_WIO SBIN;
      113       39    1          DCL BCDCB$ PTR;
      114       40    1          DCL 1 BCDCB REDEF BCDCB$,
      115       41    1               2 * BIT(24),
      116       42    1               2 SID BIT(12);
      117       43        /* */
      118       44    1          DCL B$JIT$ PTR SYMREF;
      119       45    1          DCL B$ROSEG$ PTR SYMREF;
      120       46    1          DCL B$UPT$ PTR SYMREF;
      121       47    1          DCL FM$BUF$(0:0) PTR SYMREF;
      122       48        /* */
      123       49               %INCLUDE B$JIT;
      124      652               %MACRO F$DCB(BASED=BASED);
      125      653               %INCLUDE F$DCB;
      126      702               %MEND;
      127      703               %INCLUDE B$ROSEG;
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:31   
      128      766               %INCLUDE B$MAP;
      129      865               %INCLUDE M_INFO_C;
      130     1005               %INCLUDE B_SEGIDS_C;
      131     1544               %INCLUDE SS_SCHED_C;
      132     1777               %INCLUDE B_STRINGS_C;
      133     1906               %INCLUDE FM_DATA_R;
      134     1920               %INCLUDE CP_6_SUBS;
      135     2460        /* */
      136     2461               %F$DCB(BASED="BASED(JDCB$)");
      137     2511        /* */
      138     2512                                      /* Ptr to first neg DCB in DCB pointer table    */
      139     2513    1          JDCB$=B$JIT.DCB$;

   2513  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200003 756100                    STQ     JDCB$,,AUTO

      140     2514    1          PTRTBL$=PINCRW(B$ROSEG$->B$ROSEG.DCBPTR$,%M$MAXNEG#-1);

   2514  0 000005   000000 471400 xsym               LDP1    B$ROSEG$
         0 000006   100000 236100                    LDQ     0,,PR1
         0 000007   777737 036003                    ADLQ    -33,DU
         0 000010   200007 756100                    STQ     PTRTBL$,,AUTO

      141     2515                                           /* Total number of DCB pointers in table   */
      142     2516    1          DCBCNT=B$ROSEG$->B$ROSEG.NUMDCBS-%M$MAXNEG#+1;

   2516  0 000011   100002 236100                    LDQ     2,,PR1
         0 000012   000022 772000                    QRL     18
         0 000013   000041 036007                    ADLQ    33,DL
         0 000014   200011 756100                    STQ     DCBCNT,,AUTO

      143     2517    1          SAVDCB$=ADDR(NIL);

   2517  0 000015   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000016   200006 756100                    STQ     SAVDCB$,,AUTO

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:32   
      144     2518    1          BCDCB$ = ADDR(NIL) ;

   2518  0 000017   200013 756100                    STQ     BCDCB$,,AUTO

      145     2519    1          OLDAGE_WIO=-1;

   2519  0 000020   000001 335007                    LCA     1,DL
         0 000021   200012 755100                    STA     OLDAGE_WIO,,AUTO

      146     2520    1          OLDAGE=-1;

   2520  0 000022   200004 755100                    STA     OLDAGE,,AUTO

      147     2521    2          DO WHILE(DCBCNT>0);

   2521  0 000023   200011 235100                    LDA     DCBCNT,,AUTO
         0 000024   000125 604400 0                  TMOZ    s:2562

      148     2522    2             PTRTBL$=PINCRW(PTRTBL$,1);   /* ADVANCE TO NEXT DCB POINTER        */

   2522  0 000025   200007 236100                    LDQ     PTRTBL$,,AUTO
         0 000026   000001 036003                    ADLQ    1,DU
         0 000027   200007 756100                    STQ     PTRTBL$,,AUTO

      149     2523    2             TDCB$=PTRTBL$->P$;           /* POINTER TO THIS DCB                */

   2523  0 000030   200007 470500                    LDP0    PTRTBL$,,AUTO
         0 000031   000000 236100                    LDQ     0,,PR0
         0 000032   200010 756100                    STQ     TDCB$,,AUTO

      150     2524    2             IF TDCB$=ADDR(NIL) THEN

   2524  0 000033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000034   000122 600000 0                  TZE     NXTDCB

      151     2525    2                GOTO NXTDCB;
      152     2526    2             IF NOT TDCB$->F$DCB.FCD THEN
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:33   

   2526  0 000035   200010 471500                    LDP1    TDCB$,,AUTO
         0 000036   100031 236100                    LDQ     25,,PR1
         0 000037   020000 316007                    CANQ    8192,DL
         0 000040   000122 600000 0                  TZE     NXTDCB

      153     2527    2                GOTO NXTDCB;
      154     2528    2             IF TDCB$->F$DCB.IASN=%STREAM# THEN

   2528  0 000041   100103 236100                    LDQ     67,,PR1
         0 000042   000777 376007                    ANQ     511,DL
         0 000043   000005 116007                    CMPQ    5,DL
         0 000044   000047 601000 0                  TNZ     s:2530

      155     2529    2                TDCB$=TDCB$->F$DCB.CFU$;

   2529  0 000045   100066 236100                    LDQ     54,,PR1
         0 000046   200010 756100                    STQ     TDCB$,,AUTO

      156     2530    2             IF TDCB$=JDCB$ THEN

   2530  0 000047   200010 236100                    LDQ     TDCB$,,AUTO
         0 000050   200003 116100                    CMPQ    JDCB$,,AUTO
         0 000051   000061 601000 0                  TNZ     s:2534

      157     2531    2                IF F$DCB.IASN~=%RANDOM# OR NOT F$DCB.BFR1(0) THEN

   2531  0 000052   200003 471500                    LDP1    JDCB$,,AUTO
         0 000053   100103 236100                    LDQ     67,,PR1
         0 000054   000777 376007                    ANQ     511,DL
         0 000055   000003 116007                    CMPQ    3,DL
         0 000056   000122 601000 0                  TNZ     NXTDCB
         0 000057   100122 235100                    LDA     82,,PR1
         0 000060   000122 600000 0                  TZE     NXTDCB

      158     2532    2                   GOTO NXTDCB;  /* Skip current DCB unless RANDOM,
      159     2533                               in which case it is OK to take buffer 0 */
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:34   
      160     2534    3             DO I=0 TO 4;

   2534  0 000061   200005 450100                    STZ     I,,AUTO

      161     2535    3                IF TDCB$->F$DCB.BFR.BUFX(I)~=0 THEN

   2535  0 000062   200010 470500                    LDP0    TDCB$,,AUTO
         0 000063   200005 720100                    LXL0    I,,AUTO
         0 000064   000115 236110                    LDQ     77,X0,PR0
         0 000065   037000 316003                    CANQ    15872,DU
         0 000066   000074 601000 0                  TNZ     GOTONE

      162     2536    3                   GOTO GOTONE;           /* Real page here                     */
      163     2537    3                END;

   2537  0 000067   200005 054100                    AOS     I,,AUTO
         0 000070   200005 235100                    LDA     I,,AUTO
         0 000071   000004 115007                    CMPA    4,DL
         0 000072   000062 604400 0                  TMOZ    s:2535

      164     2538    2             GOTO NXTDCB;                 /* THIS DCB HAS NO BUFFERS            */

   2538  0 000073   000122 710000 0                  TRA     NXTDCB

      165     2539        /* */
      166     2540           /* The first IF finds the OLDEST DCB without an IO pending,
      167     2541              The second finds the OLDEST DCB with an IO pending.  If the
      168     2542              First one fails to find a DCB without an IO pending, we will
      169     2543              be forced to Wait for the IO to complete on the second.      */
      170     2544    3   GOTONE:   IF NOT TDCB$->F$DCB.FCN(0) THEN DO;              /* No IO pending */

   2544  0 000074   000074 236100       GOTONE       LDQ     60,,PR0
         0 000075   777000 316003                    CANQ    -512,DU
         0 000076   000111 601000 0                  TNZ     s:2551

      171     2545    4                IF TDCB$->F$DCB.AGE<OLDAGE OR OLDAGE=-1 THEN DO; /* FOUND OLDER */

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:35   
   2545  0 000077   000114 236100                    LDQ     76,,PR0
         0 000100   200004 116100                    CMPQ    OLDAGE,,AUTO
         0 000101   000105 604000 0                  TMI     s:2546
         0 000102   200004 235100                    LDA     OLDAGE,,AUTO
         0 000103   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 000104   000122 601000 0                  TNZ     NXTDCB

      172     2546    4                   OLDAGE=TDCB$->F$DCB.AGE;  /* REMEMBER AGE OF THIS ONE        */

   2546  0 000105   200004 756100                    STQ     OLDAGE,,AUTO

      173     2547    4                   SAVDCB$=TDCB$;            /* REMEMBER POINTER TO IT          */

   2547  0 000106   200010 236100                    LDQ     TDCB$,,AUTO
         0 000107   200006 756100                    STQ     SAVDCB$,,AUTO

      174     2548    4                   END;

      175     2549    3                END ;

   2549  0 000110   000122 710000 0                  TRA     NXTDCB

      176     2550    3             ELSE DO;              /* Has an IO pending.  Use it if we have to. */

      177     2551    3                IF TDCB$->F$DCB.AGE<OLDAGE_WIO OR

   2551  0 000111   000114 236100                    LDQ     76,,PR0
         0 000112   200012 116100                    CMPQ    OLDAGE_WIO,,AUTO
         0 000113   000117 604000 0                  TMI     s:2553
         0 000114   200012 235100                    LDA     OLDAGE_WIO,,AUTO
         0 000115   000027 115000 xsym               CMPA    B_VECTNIL+23
         0 000116   000122 601000 0                  TNZ     NXTDCB

      178     2552    4                        OLDAGE_WIO=-1 THEN DO;                /* FOUND OLDER    */

      179     2553    4                   OLDAGE_WIO=TDCB$->F$DCB.AGE;  /* REMEMBER AGE OF THIS ONE    */

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:36   
   2553  0 000117   200012 756100                    STQ     OLDAGE_WIO,,AUTO

      180     2554    4                   BCDCB$=TDCB$;                 /* REMEMBER POINTER TO IT      */

   2554  0 000120   200010 236100                    LDQ     TDCB$,,AUTO
         0 000121   200013 756100                    STQ     BCDCB$,,AUTO

      181     2555    4                   END;

      182     2556    3                END ;

      183     2557    2   NXTDCB:   DCBCNT=DCBCNT-1;

   2557  0 000122   000001 336007       NXTDCB       LCQ     1,DL
         0 000123   200011 056100                    ASQ     DCBCNT,,AUTO

      184     2558    2             END;

   2558  0 000124   000025 605400 0                  TPNZ    s:2522

      185     2559        /* */
      186     2560        /* ALL DCBS HAVE BEEN LOOKED AT
      187     2561           If we didn't find a DCB without an IO use one with an IO */
      188     2562    1           IF SAVDCB$=ADDR(NIL) THEN SAVDCB$ = BCDCB$;

   2562  0 000125   200006 236100                    LDQ     SAVDCB$,,AUTO
         0 000126   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000127   000132 601000 0                  TNZ     s:2563

   2562  0 000130   200013 236100                    LDQ     BCDCB$,,AUTO
         0 000131   200006 756100                    STQ     SAVDCB$,,AUTO

      189     2563    1           IF SAVDCB$=ADDR(NIL) THEN

   2563  0 000132   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000133   000144 601000 0                  TNZ     s:2566

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:37   
      190     2564    1           IF B$JIT.FBUC > 8 THEN CALL SC_FMD85; /* ERROR IF NO DCB HAD BUFFERS  */

   2564  0 000134   000000 470400 xsym               LDP0    B$JIT$
         0 000135   000205 220100                    LDX0    133,,PR0
         0 000136   000011 100003                    CMPX0   9,DU
         0 000137   000143 602000 0                  TNC     s:2565

   2564  0 000140   000000 713400 xsym               CLIMB   SC_FMD85
         0 000141   000000 600000 xsid               climb   nvectors=         0
         0 000142   000144 710000 0                  TRA     s:2566

      191     2565    1           ELSE RETURN;

   2565  0 000143   000000 702200 xent               TSX2  ! X66_ARET

      192     2566    1           BCDCB$=SAVDCB$;

   2566  0 000144   200006 236100                    LDQ     SAVDCB$,,AUTO
         0 000145   200013 756100                    STQ     BCDCB$,,AUTO

      193     2567    1           BCDCB.SID=%RONCSID;             /* BYPASS CACHE PTR                   */

   2567  0 000146   006124 236007                    LDQ     3156,DL
         0 000147   200013 752103                    STCQ    BCDCB$,'03'O,AUTO

      194     2568    1           IF BCDCB$->F$DCB.FCN(0) THEN    /* WAIT FOR I/O TO COMPLETE           */

   2568  0 000150   200013 470500                    LDP0    BCDCB$,,AUTO
         0 000151   000074 236100                    LDQ     60,,PR0
         0 000152   777000 316003                    CANQ    -512,DU
         0 000153   000164 600000 0                  TZE     s:2570

      195     2569    1              CALL SSR$REG(%SS_IIP,BCDCB$->F$DCB.FCN(0));

   2569  0 000154   200013 236100                    LDQ     BCDCB$,,AUTO
         0 000155   000074 036003                    ADLQ    60,DU
         0 000156   000000 235000 1                  LDA     0
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:38   
         0 000157   200014 757100                    STAQ    BCDCB$+1,,AUTO
         0 000160   200014 630500                    EPPR0   BCDCB$+1,,AUTO
         0 000161   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000162   000000 701000 xent               TSX1    SSR$REG
         0 000163   000000 011000                    NOP     0

      196     2570    2           DO I=0 TO 4;

   2570  0 000164   200005 450100                    STZ     I,,AUTO

      197     2571    2              IF SAVDCB$->F$DCB.BFR.BUFX(I)~=0 THEN

   2571  0 000165   200006 470500                    LDP0    SAVDCB$,,AUTO
         0 000166   200005 720100                    LXL0    I,,AUTO
         0 000167   000115 236110                    LDQ     77,X0,PR0
         0 000170   037000 316003                    CANQ    15872,DU
         0 000171   000260 600000 0                  TZE     s:2591

      198     2572    3                 DO;

      199     2573    3                 FM_TRUNC=FM_TRUNC+1;

   2573  0 000172   000000 054000 xsym               AOS     FM_TRUNC

      200     2574    3                 B$JIT.DCB$=SAVDCB$;       /* CHANGE JIT DCB PTR FOR FTT & FMD   */

   2574  0 000173   200006 236100                    LDQ     SAVDCB$,,AUTO
         0 000174   000000 471400 xsym               LDP1    B$JIT$
         0 000175   100232 756100                    STQ     154,,PR1

      201     2575    4                 DO CASE(SAVDCB$->F$DCB.IASN);

   2575  0 000176   000103 721100                    LXL1    67,,PR0
         0 000177   000777 361003                    ANX1    511,DU
         0 000200   000013 101003                    CMPX1   11,DU
         0 000201   000203 602011 0                  TNC     s:2575+5,X1
         0 000202   000252 710000 0                  TRA     s:2586
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:39   
         0 000203   000252 710000 0                  TRA     s:2586
         0 000204   000216 710000 0                  TRA     s:2577
         0 000205   000237 710000 0                  TRA     s:2582
         0 000206   000243 710000 0                  TRA     s:2584
         0 000207   000252 710000 0                  TRA     s:2586
         0 000210   000252 710000 0                  TRA     s:2586
         0 000211   000252 710000 0                  TRA     s:2586
         0 000212   000252 710000 0                  TRA     s:2586
         0 000213   000243 710000 0                  TRA     s:2584
         0 000214   000252 710000 0                  TRA     s:2586
         0 000215   000237 710000 0                  TRA     s:2582

      202     2576    4                    CASE(%FILE#);

      203     2577    4                       IF SAVDCB$ -> F$DCB.BFR.CVM(I) THEN

   2577  0 000216   000115 236110                    LDQ     77,X0,PR0
         0 000217   040000 316003                    CANQ    16384,DU
         0 000220   000230 600000 0                  TZE     s:2580

      204     2578    4                          CALL FMD$RELBUF(I);

   2578  0 000221   200005 633500                    EPPR3   I,,AUTO
         0 000222   200014 453500                    STP3    BCDCB$+1,,AUTO
         0 000223   200014 630500                    EPPR0   BCDCB$+1,,AUTO
         0 000224   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000225   000000 701000 xent               TSX1    FMD$RELBUF
         0 000226   000000 011000                    NOP     0
         0 000227   000254 710000 0                  TRA     s:2588

      205     2579    4                       ELSE
      206     2580    4                          CALL FMD$FLSHBUF(I);

   2580  0 000230   200005 633500                    EPPR3   I,,AUTO
         0 000231   200014 453500                    STP3    BCDCB$+1,,AUTO
         0 000232   200014 630500                    EPPR0   BCDCB$+1,,AUTO
         0 000233   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:40   
         0 000234   000000 701000 xent               TSX1    FMD$FLSHBUF
         0 000235   000000 011000                    NOP     0
         0 000236   000254 710000 0                  TRA     s:2588

      207     2581    4                    CASE (%TAPE#, %OD#); /* Optical Disk and Tape DCB  */

      208     2582    4                       CALL FTT$TRUNC;

   2582  0 000237   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000240   000000 701000 xent               TSX1    FTT$TRUNC
         0 000241   000000 011000                    NOP     0
         0 000242   000254 710000 0                  TRA     s:2588

      209     2583    4                    CASE(%DEVICE#,%FPRGIASN#);

      210     2584    4                       CALL FMD$RELBUF(I);

   2584  0 000243   200005 633500                    EPPR3   I,,AUTO
         0 000244   200014 453500                    STP3    BCDCB$+1,,AUTO
         0 000245   200014 630500                    EPPR0   BCDCB$+1,,AUTO
         0 000246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000247   000000 701000 xent               TSX1    FMD$RELBUF
         0 000250   000000 011000                    NOP     0
         0 000251   000254 710000 0                  TRA     s:2588

      211     2585    4                    CASE(ELSE);

      212     2586    4                       CALL SC_FMD85;

   2586  0 000252   000000 713400 xsym               CLIMB   SC_FMD85
         0 000253   000000 600000 xsid               climb   nvectors=         0

      213     2587    4                 END;

      214     2588    3                 B$JIT.DCB$=JDCB$;         /* RESTORE DCB PTR                    */

   2588  0 000254   200003 236100                    LDQ     JDCB$,,AUTO
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:41   
         0 000255   000000 470400 xsym               LDP0    B$JIT$
         0 000256   000232 756100                    STQ     154,,PR0

      215     2589    3                 RETURN;

   2589  0 000257   000000 702200 xent               TSX2  ! X66_ARET

      216     2590    3                 END;
      217     2591    2           END;

   2591  0 000260   200005 054100                    AOS     I,,AUTO
         0 000261   200005 235100                    LDA     I,,AUTO
         0 000262   000004 115007                    CMPA    4,DL
         0 000263   000165 604400 0                  TMOZ    s:2571

      218     2592
      219     2593        /*S*   SCREECH_CODE:  FMD-S$FM85
      220     2594        *      TYPE:   SUA
      221     2595        *      MESSAGE:  Can't find any pool buffers */
      222     2596    1          END FMD$TRNC;

   2596  0 000264   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000                                                    ....
      223     2597               %EOD;

PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:42   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$TRNC.
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:43   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w STRC        r     1 BCDCB                     13-0-0/w PTR         r     1 BCDCB$
    11-0-0/w SBIN        r     1 DCBCNT                     5-0-0/w SBIN        r     1 I
     3-0-0/w PTR         r     1 JDCB$                      4-0-0/w SBIN        r     1 OLDAGE
    12-0-0/w SBIN        r     1 OLDAGE_WIO                 7-0-0/w PTR         r     1 PTRTBL$
     6-0-0/w PTR         r     1 SAVDCB$                   10-0-0/w PTR         r     1 TDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w SBIN        r     1 FM_TRUNC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w PTR         r     1 P$


   Procedure FMD$TRNC requires 181 words for executable code.
   Procedure FMD$TRNC requires 14 words of local(AUTO) storage.
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:44   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:45   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       470**DCL       470--REDEF
B$JIT.DCB$
       544**DCL      2513>>ASSIGN   2574<<ASSIGN   2588<<ASSIGN
B$JIT.ERR.MID
       377**DCL       377--REDEF
B$JIT.FBUC
       536**DCL      2564>>IF
B$JIT.JRESPEAK
       538**DCL       539--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       647**DCL       647--REDEF     648--REDEF
B$JIT.PNR
       551**DCL       551--REDEF
B$JIT.TSLINE
       645**DCL       646--REDEF
B$JIT$
        44**DCL       371--IMP-PTR  2513>>ASSIGN   2564>>IF       2574>>ASSIGN   2588>>ASSIGN
B$MAP.SCTRL
       809**DCL       810--REDEF
B$ROSEG.DCBPTR$
       714**DCL      2514>>ASSIGN
B$ROSEG.NUMDCBS
       716**DCL      2516>>ASSIGN
B$ROSEG$
        45**DCL      2514>>ASSIGN   2516>>ASSIGN
BCDCB.SID
        42**DCL      2567<<ASSIGN
BCDCB$
        39**DCL        40--REDEF    2518<<ASSIGN   2554<<ASSIGN   2562>>ASSIGN   2566<<ASSIGN   2568>>IF
      2569>>CALL
DCBCNT
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:46   
        37**DCL      2516<<ASSIGN   2521>>DOWHILE  2557<<ASSIGN   2557>>ASSIGN
F$DCB.ACTPOS
      2487**DCL      2487--REDEF
F$DCB.AGE
      2506**DCL      2545>>IF       2546>>ASSIGN   2551>>IF       2553>>ASSIGN
F$DCB.ARS
      2462**DCL      2462--REDEF
F$DCB.ATTR
      2480**DCL      2481--REDEF
F$DCB.BFR.BUFX
      2507**DCL      2535>>IF       2571>>IF
F$DCB.BFR.CVM
      2507**DCL      2577>>IF
F$DCB.BFR1
      2507**DCL      2531>>IF
F$DCB.BORROW
      2495**DCL      2495--REDEF    2495--REDEF    2495--REDEF
F$DCB.CFU$
      2496**DCL      2529>>ASSIGN
F$DCB.DCBNAME.L
      2509**DCL      2509--IMP-SIZ
F$DCB.EOMCHAR
      2466**DCL      2466--REDEF
F$DCB.FCD
      2475**DCL      2526>>IF
F$DCB.FCN
      2499**DCL      2544>>IF       2568>>IF       2569<>CALL
F$DCB.FLDID
      2490**DCL      2490--REDEF
F$DCB.FORM$
      2484**DCL      2484--REDEF
F$DCB.FSECT
      2500**DCL      2500--REDEF
F$DCB.FSN
      2477**DCL      2477--REDEF    2477--REDEF    2478--REDEF
F$DCB.HEADER$
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:47   
      2483**DCL      2483--REDEF
F$DCB.IASN
      2503**DCL      2528>>IF       2531>>IF       2575>>DOCASE
F$DCB.IXTNSIZE
      2481**DCL      2481--REDEF
F$DCB.LASTSTA$
      2471**DCL      2471--REDEF
F$DCB.LVL
      2496**DCL      2496--REDEF
F$DCB.NAME.C
      2471**DCL      2471--REDEF
F$DCB.NOEOF
      2492**DCL      2492--REDEF
F$DCB.NRECS
      2482**DCL      2482--REDEF
F$DCB.NRECX
      2501**DCL      2501--REDEF
F$DCB.OHDR
      2493**DCL      2493--REDEF
F$DCB.ORG
      2476**DCL      2476--REDEF
F$DCB.PRECNO
      2499**DCL      2499--REDEF
F$DCB.RCSZ
      2504**DCL      2504--REDEF
F$DCB.RES
      2472**DCL      2472--REDEF
F$DCB.SETX
      2484**DCL      2484--REDEF
F$DCB.TAB$
      2483**DCL      2484--REDEF
F$DCB.TDA
      2498**DCL      2498--REDEF
F$DCB.WSN
      2473**DCL      2473--REDEF
FMD$FLSHBUF
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:48   
        23**DCL-ENT  2580--CALL
FMD$RELBUF
        24**DCL-ENT  2578--CALL     2584--CALL
FM_TRUNC
      1916**DCL      2573<<ASSIGN   2573>>ASSIGN
FTT$TRUNC
        25**DCL-ENT  2582--CALL
GOTONE
      2544**LABEL    2536--GOTO
I
        33**DCL      2534<<DOINDEX  2535>>IF       2570<<DOINDEX  2571>>IF       2577>>IF       2578<>CALL
      2580<>CALL     2584<>CALL
JDCB$
        31**DCL      2462--IMP-PTR  2513<<ASSIGN   2530>>IF       2531>>IF       2531>>IF       2588>>ASSIGN
NXTDCB
      2557**LABEL    2525--GOTO     2527--GOTO     2532--GOTO     2538--GOTO
OLDAGE
        32**DCL      2520<<ASSIGN   2545>>IF       2545>>IF       2546<<ASSIGN
OLDAGE_WIO
        38**DCL      2519<<ASSIGN   2551>>IF       2551>>IF       2553<<ASSIGN
P$
        29**DCL      2523>>ASSIGN
PTRTBL$
        35**DCL      2514<<ASSIGN   2522<<ASSIGN   2522>>ASSIGN   2523>>ASSIGN
SAVDCB$
        34**DCL      2517<<ASSIGN   2547<<ASSIGN   2562>>IF       2562<<ASSIGN   2563>>IF       2566>>ASSIGN
      2571>>IF       2574>>ASSIGN   2575>>DOCASE   2577>>IF
SC_FMD85
        26**DCL-ENT  2564--CALL     2586--CALL
SSR$REG
        27**DCL-ENT  2569--CALL
TDCB$
        36**DCL      2523<<ASSIGN   2524>>IF       2526>>IF       2528>>IF       2529<<ASSIGN   2529>>ASSIGN
      2530>>IF       2535>>IF       2544>>IF       2545>>IF       2546>>ASSIGN   2547>>ASSIGN   2551>>IF
      2553>>ASSIGN   2554>>ASSIGN
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:49   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FMD$TRNC File=FMD$BUF.:E05TSI                                 TUE 07/29/97 16:39 Page:50   
              MINI UREF LISTING

B$PAGE     858**DCL
B$ROAVAIL     753**DCL
B$RODCB$     750**DCL
B$SECT     848**DCL
B$UPT$      46**DCL
F$CFU$    1917**DCL
FM$BUF$      47**DCL
FM$SET$    1918**DCL
FMD$TRNC      21**PROC
FM_CFUWAIT    1917**DCL
FM_CFUWGRB    1917**DCL
FM_EOP    1915**DCL
FM_FRMAX    1914**DCL
FM_FRZERO    1914**DCL
FM_GCT    1918**DCL
FM_GIP    1918**DCL
FM_GPSDA    1915**DCL
FM_HASH    1916**DCL
FM_MADSDA    1915**DCL
FM_PADSDA    1915**DCL
FM_SRMAX    1914**DCL
FM_SRZERO    1914**DCL
FM_SYSACCTX    1918**DCL
FM_SYSSETX    1918**DCL
FM_WSQ    1916**DCL
F_CWLK    1917**DCL
F_CWUSER    1917**DCL
F_DCBLOCK    1916**DCL
MM$IPHY_MAP     863**DCL

PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:51   
      224        1        /*T***********************************************************/
      225        2        /*T*                                                         */
      226        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      227        4        /*T*                                                         */
      228        5        /*T***********************************************************/
      229        6        /*F*   NAME:   FMD$RELBUF
      230        7        *      PURPOSE:  Release a pool buffer belonging to a DCB.
      231        8        *      DESCRIPTION:  The buffer is written and/or stashed in the
      232        9        *    I/O cache and then released.                                            */
      233       10        /* */
      234       11        /*D*   NAME:   FMD$RELBUF
      235       12        *      CALL:   CALL FMD$RELBUF(BUFNUM)
      236       13        *      INTERFACE:  MMG$SFVP,FMD$FLSHBUF
      237       14        *      INPUT:  BUFNUM - DCB buffer number (0-4)
      238       15        *      OUTPUT: The appropriate DCB.BFR  entry is cleared except for
      239       16        *    DA, which is left alone.
      240       17        *      DESCRIPTION:  No action is taken if there is no buffer.
      241       18        *    Call FMD$FLSHBUF to write and/or stash the granule in the
      242       19        *    I/O cache.  Call MMG$SFVP to release the pages.  SCREECH if
      243       20        *    there was an error releasing the pages.  Zero all of the
      244       21        *    DCB.BFR  entry except DA.                                               */
      245       22                                                /*                                    */
      246       23        FMD$RELBUF: PROC(BUFNUM);
      247       24        /* PARAMETERS */
      248       25    1   DCL BUFNUM UBIN;
      249       26    1   DCL BUFNUM$ REDEF BUFNUM PTR;
      250       27        /* EXTERNAL PROCEDURES */
      251       28    1   DCL FMC$RELCACHE ENTRY(1);
      252       29    1   DCL MMJ$UNMAPIOP ENTRY(1);
      253       30    1   DCL MMJ$FFBUF ENTRY(2);
      254       31    1   DCL SC_FMD86 ENTRY CONV(2,0);
      255       32        /* LOCAL AUTOMATIC STORAGE */
      256       33    1   DCL JDCB$ PTR;
      257       34    1   DCL VPNO UBIN;
      258       35    1   DCL I UBIN;
      259       36    1   DCL ERR BIT(36);
      260       37        /* EXTERNAL DATA */
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:52   
      261       38    1   DCL B$JIT$ PTR SYMREF;
      262       39    1   DCL FM_WSQ UBIN SYMREF;
      263       40    1   DCL FM$BUF$(0:31) PTR SYMREF;
      264       41        /* INCLUDE FILES */
      265       42        %INCLUDE F$JIT_C;
      266      472        %INCLUDE FM$MACROS;
      267      847        %MACRO F$DCB(BASED=BASED);
      268      848        %INCLUDE F$DCB;
      269      897        %MEND;
      270      898        %INCLUDE B_SEGIDS_C;
      271     1437        %INCLUDE M_INFO_C;
      272     1577        %FM$CFUJ;
      273     1582        /* BASED STRUCTURES */
      274     1583        %F$DCB (BASED="BASED(JDCB$)");
      275     1633                                                /*                                    */
      276     1634    1           IF BUFNUM>4 THEN
      277     1635    1           CALL SC_FMD86;                  /* BAD BUFFER NUMBER                  */
      278     1636    1           JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */
      279     1637    2           IF JDCB$->F$DCB.BFR1.CX(BUFNUM)~=0 THEN DO;
      280     1638    2              CALL FMC$RELCACHE(BUFNUM);   /* GET RID OF CVM'D BUFFER            */
      281     1639    2              RETURN;
      282     1640    2              END;
      283     1641    1           VPNO=F$DCB.BFR.BUFX(BUFNUM);    /* Buffer number                      */
      284     1642    1           IF VPNO=0 THEN RETURN;          /* DO NOTHING IF NO BUFFER            */
      285     1643    2           IF JDCB$->F$DCB.BFR.CVM(BUFNUM) THEN DO;
      286     1644    2              CALL MMJ$UNMAPIOP(VPNO);
      287     1645    2              END;
      288     1646    2           ELSE DO;
      289     1647    2              I=JDCB$->F$DCB.BFR1.SIZ(BUFNUM); /* # PAGES IN BUFFER              */
      290     1648    2              CALL MMJ$FFBUF(I,VPNO);
      291     1649    2              END;
      292     1650    1           JDCB$->F$DCB.BFR(BUFNUM)=JDCB$->F$DCB.BFR(BUFNUM)&'000777777777'O;
      293     1651    1           JDCB$->F$DCB.BFR1(BUFNUM)='0'B;
      294     1652    1           RETURN;
      295     1653                                                /*                                    */
      296     1654        /*S*   SCREECH_CODE:  FMD-S$FM86
      297     1655        *      TYPE:   SUA
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:53   
      298     1656        *      MESSAGE:  Attempt to release a pool buffer that doesn't exist */
      299     1657        /* */
      300     1658    1   FMD$RBUF: ENTRY(BUFNUM);
      301     1659        /* */
      302     1660    1           IF BUFNUM$=ADDR(NIL) THEN
      303     1661    1              RETURN;
      304     1662    1           VPNO=POFFW(BUFNUM$,FM$BUF$(1))/1024+1;
      305     1663    1           IF VPNO > %FMSEGHI-%FMSEGLO+1 THEN
      306     1664    1           CALL SC_FMD86;                  /* Bad buffer pointer                 */
      307     1665    1           CALL MMJ$FFBUF(1, VPNO);
      308     1666    1           RETURN;
      309     1667        /**/
      310     1668    1   END FMD$RELBUF;
      311     1669        %EOD;

PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:54   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$RELBUF.

   Procedure FMD$RELBUF requires 88 words for executable code.
   Procedure FMD$RELBUF requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:55   

 Object Unit name= FMD$RELBUF                                 File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:39:45.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    88    130  FMD$RELBUF
    1  RoData even  none     1      1  FMD$RELBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMD$RELBUF
     0     73                  yes      Std        1  FMD$RBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMC$RELCACHE
         yes           Std       1 MMJ$UNMAPIOP
         yes           Std       2 MMJ$FFBUF
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:56   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMD86                              B$JIT$                                FM$BUF$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:57   


      224        1        /*T***********************************************************/
      225        2        /*T*                                                         */
      226        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      227        4        /*T*                                                         */
      228        5        /*T***********************************************************/
      229        6        /*F*   NAME:   FMD$RELBUF
      230        7        *      PURPOSE:  Release a pool buffer belonging to a DCB.
      231        8        *      DESCRIPTION:  The buffer is written and/or stashed in the
      232        9        *    I/O cache and then released.                                            */
      233       10        /* */
      234       11        /*D*   NAME:   FMD$RELBUF
      235       12        *      CALL:   CALL FMD$RELBUF(BUFNUM)
      236       13        *      INTERFACE:  MMG$SFVP,FMD$FLSHBUF
      237       14        *      INPUT:  BUFNUM - DCB buffer number (0-4)
      238       15        *      OUTPUT: The appropriate DCB.BFR  entry is cleared except for
      239       16        *    DA, which is left alone.
      240       17        *      DESCRIPTION:  No action is taken if there is no buffer.
      241       18        *    Call FMD$FLSHBUF to write and/or stash the granule in the
      242       19        *    I/O cache.  Call MMG$SFVP to release the pages.  SCREECH if
      243       20        *    there was an error releasing the pages.  Zero all of the
      244       21        *    DCB.BFR  entry except DA.                                               */
      245       22                                                /*                                    */
      246       23        FMD$RELBUF: PROC(BUFNUM);

     23  0 000000   000000 700200 xent  FMD$RELBUF   TSX0  ! X66_AUTO_1
         0 000001   000012 000001                    ZERO    10,1

      247       24        /* PARAMETERS */
      248       25    1   DCL BUFNUM UBIN;
      249       26    1   DCL BUFNUM$ REDEF BUFNUM PTR;
      250       27        /* EXTERNAL PROCEDURES */
      251       28    1   DCL FMC$RELCACHE ENTRY(1);
      252       29    1   DCL MMJ$UNMAPIOP ENTRY(1);
      253       30    1   DCL MMJ$FFBUF ENTRY(2);
      254       31    1   DCL SC_FMD86 ENTRY CONV(2,0);
      255       32        /* LOCAL AUTOMATIC STORAGE */
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:58   
      256       33    1   DCL JDCB$ PTR;
      257       34    1   DCL VPNO UBIN;
      258       35    1   DCL I UBIN;
      259       36    1   DCL ERR BIT(36);
      260       37        /* EXTERNAL DATA */
      261       38    1   DCL B$JIT$ PTR SYMREF;
      262       39    1   DCL FM_WSQ UBIN SYMREF;
      263       40    1   DCL FM$BUF$(0:31) PTR SYMREF;
      264       41        /* INCLUDE FILES */
      265       42        %INCLUDE F$JIT_C;
      266      472        %INCLUDE FM$MACROS;
      267      847        %MACRO F$DCB(BASED=BASED);
      268      848        %INCLUDE F$DCB;
      269      897        %MEND;
      270      898        %INCLUDE B_SEGIDS_C;
      271     1437        %INCLUDE M_INFO_C;
      272     1577        %FM$CFUJ;
      273     1582        /* BASED STRUCTURES */
      274     1583        %F$DCB (BASED="BASED(JDCB$)");
      275     1633                                                /*                                    */
      276     1634    1           IF BUFNUM>4 THEN

   1634  0 000002   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000005 115007                    CMPA    5,DL
         0 000005   000010 602000 0                  TNC     s:1636

      277     1635    1           CALL SC_FMD86;                  /* BAD BUFFER NUMBER                  */

   1635  0 000006   000000 713400 xsym               CLIMB   SC_FMD86
         0 000007   000000 600000 xsid               climb   nvectors=         0

      278     1636    1           JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */

   1636  0 000010   000000 470400 xsym               LDP0    B$JIT$
         0 000011   000232 236100                    LDQ     154,,PR0
         0 000012   200004 756100                    STQ     JDCB$,,AUTO
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:59   

      279     1637    2           IF JDCB$->F$DCB.BFR1.CX(BUFNUM)~=0 THEN DO;

   1637  0 000013   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000014   100000 720100                    LXL0    0,,PR1
         0 000015   200004 473500                    LDP3    JDCB$,,AUTO
         0 000016   300122 721110                    LXL1    82,X0,PR3
         0 000017   000025 600000 0                  TZE     s:1641

      280     1638    2              CALL FMC$RELCACHE(BUFNUM);   /* GET RID OF CVM'D BUFFER            */

   1638  0 000020   200003 630500                    EPPR0   @BUFNUM,,AUTO
         0 000021   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000022   000000 701000 xent               TSX1    FMC$RELCACHE
         0 000023   000000 011000                    NOP     0

      281     1639    2              RETURN;

   1639  0 000024   000000 702200 xent               TSX2  ! X66_ARET

      282     1640    2              END;
      283     1641    1           VPNO=F$DCB.BFR.BUFX(BUFNUM);    /* Buffer number                      */

   1641  0 000025   300115 236110                    LDQ     77,X0,PR3
         0 000026   000033 772000                    QRL     27
         0 000027   000037 376007                    ANQ     31,DL
         0 000030   200005 756100                    STQ     VPNO,,AUTO

      284     1642    1           IF VPNO=0 THEN RETURN;          /* DO NOTHING IF NO BUFFER            */

   1642  0 000031   000033 601000 0                  TNZ     s:1643

   1642  0 000032   000000 702200 xent               TSX2  ! X66_ARET

      285     1643    2           IF JDCB$->F$DCB.BFR.CVM(BUFNUM) THEN DO;

   1643  0 000033   100000 720100                    LXL0    0,,PR1
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:60   
         0 000034   300115 236110                    LDQ     77,X0,PR3
         0 000035   040000 316003                    CANQ    16384,DU
         0 000036   000046 600000 0                  TZE     s:1647

      286     1644    2              CALL MMJ$UNMAPIOP(VPNO);

   1644  0 000037   200005 634500                    EPPR4   VPNO,,AUTO
         0 000040   200010 454500                    STP4    I+2,,AUTO
         0 000041   200010 630500                    EPPR0   I+2,,AUTO
         0 000042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000043   000000 701000 xent               TSX1    MMJ$UNMAPIOP
         0 000044   000000 011000                    NOP     0

      287     1645    2              END;

   1645  0 000045   000062 710000 0                  TRA     s:1650

      288     1646    2           ELSE DO;

      289     1647    2              I=JDCB$->F$DCB.BFR1.SIZ(BUFNUM); /* # PAGES IN BUFFER              */

   1647  0 000046   300122 236110                    LDQ     82,X0,PR3
         0 000047   000022 772000                    QRL     18
         0 000050   000777 376007                    ANQ     511,DL
         0 000051   200006 756100                    STQ     I,,AUTO

      290     1648    2              CALL MMJ$FFBUF(I,VPNO);

   1648  0 000052   200005 634500                    EPPR4   VPNO,,AUTO
         0 000053   200011 454500                    STP4    I+3,,AUTO
         0 000054   200006 635500                    EPPR5   I,,AUTO
         0 000055   200010 455500                    STP5    I+2,,AUTO
         0 000056   200010 630500                    EPPR0   I+2,,AUTO
         0 000057   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000060   000000 701000 xent               TSX1    MMJ$FFBUF
         0 000061   000000 011000                    NOP     0

PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:61   
      291     1649    2              END;

      292     1650    1           JDCB$->F$DCB.BFR(BUFNUM)=JDCB$->F$DCB.BFR(BUFNUM)&'000777777777'O;

   1650  0 000062   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000063   000000 720100                    LXL0    0,,PR0
         0 000064   200004 471500                    LDP1    JDCB$,,AUTO
         0 000065   100115 236110                    LDQ     77,X0,PR1
         0 000066   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000067   100115 756110                    STQ     77,X0,PR1

      293     1651    1           JDCB$->F$DCB.BFR1(BUFNUM)='0'B;

   1651  0 000070   000000 720100                    LXL0    0,,PR0
         0 000071   100122 450110                    STZ     82,X0,PR1

      294     1652    1           RETURN;

   1652  0 000072   000000 702200 xent               TSX2  ! X66_ARET

      295     1653                                                /*                                    */
      296     1654        /*S*   SCREECH_CODE:  FMD-S$FM86
      297     1655        *      TYPE:   SUA
      298     1656        *      MESSAGE:  Attempt to release a pool buffer that doesn't exist */
      299     1657        /* */
      300     1658    1   FMD$RBUF: ENTRY(BUFNUM);

   1658  0 000073   000000 700200 xent  FMD$RBUF     TSX0  ! X66_AUTO_1
         0 000074   000012 000001                    ZERO    10,1

      301     1659        /* */
      302     1660    1           IF BUFNUM$=ADDR(NIL) THEN

   1660  0 000075   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000076   000000 236100                    LDQ     0,,PR0
         0 000077   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000100   000102 601000 0                  TNZ     s:1662
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:62   

      303     1661    1              RETURN;

   1661  0 000101   000000 702200 xent               TSX2  ! X66_ARET

      304     1662    1           VPNO=POFFW(BUFNUM$,FM$BUF$(1))/1024+1;

   1662  0 000102   000001 235000 xsym               LDA     FM$BUF$+1
         0 000103   000022 771000                    ARL     18
         0 000104   200010 755100                    STA     I+2,,AUTO
         0 000105   000000 236100                    LDQ     0,,PR0
         0 000106   000022 772000                    QRL     18
         0 000107   200010 136100                    SBLQ    I+2,,AUTO
         0 000110   002000 506007                    DIV     1024,DL
         0 000111   000001 036007                    ADLQ    1,DL
         0 000112   200005 756100                    STQ     VPNO,,AUTO

      305     1663    1           IF VPNO > %FMSEGHI-%FMSEGLO+1 THEN

   1663  0 000113   000040 116007                    CMPQ    32,DL
         0 000114   000117 602000 0                  TNC     s:1665

      306     1664    1           CALL SC_FMD86;                  /* Bad buffer pointer                 */

   1664  0 000115   000000 713400 xsym               CLIMB   SC_FMD86
         0 000116   000000 600000 xsid               climb   nvectors=         0

      307     1665    1           CALL MMJ$FFBUF(1, VPNO);

   1665  0 000117   200005 630500                    EPPR0   VPNO,,AUTO
         0 000120   200011 450500                    STP0    I+3,,AUTO
         0 000121   000000 236000 1                  LDQ     0
         0 000122   200010 756100                    STQ     I+2,,AUTO
         0 000123   200010 630500                    EPPR0   I+2,,AUTO
         0 000124   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000125   000000 701000 xent               TSX1    MMJ$FFBUF
         0 000126   000000 011000                    NOP     0
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:63   

      308     1666    1           RETURN;

   1666  0 000127   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000                                                    ....
      309     1667        /**/
      310     1668    1   END FMD$RELBUF;
      311     1669        %EOD;

PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:64   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$RELBUF.
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:65   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFNUM                   *0-0-0/w UBIN        r     1 BUFNUM
    *0-0-0/w PTR         r     1 BUFNUM$                    6-0-0/w UBIN        r     1 I
     4-0-0/w PTR         r     1 JDCB$                      5-0-0/w UBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FM$BUF$(0:31)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure FMD$RELBUF requires 88 words for executable code.
   Procedure FMD$RELBUF requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:66   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:67   
          MINI XREF LISTING

B$JIT.DCB$
       459**DCL      1636>>ASSIGN
B$JIT.ERR.MID
       370**DCL       370--REDEF
B$JIT$
        38**DCL       364--IMP-PTR  1636>>ASSIGN
BUFNUM
        25**DCL        23--PROC       26--REDEF    1634>>IF       1637>>IF       1638<>CALL     1641>>ASSIGN
      1643>>IF       1647>>ASSIGN   1650>>ASSIGN   1650>>ASSIGN   1651>>ASSIGN   1658--ENTRY
BUFNUM$
        26**DCL      1660>>IF       1662>>ASSIGN
F$DCB.ACTPOS
      1609**DCL      1609--REDEF
F$DCB.ARS
      1584**DCL      1584--REDEF
F$DCB.ATTR
      1602**DCL      1603--REDEF
F$DCB.BFR
      1628**DCL      1650<<ASSIGN   1650>>ASSIGN
F$DCB.BFR.BUFX
      1629**DCL      1641>>ASSIGN
F$DCB.BFR.CVM
      1629**DCL      1643>>IF
F$DCB.BFR1
      1629**DCL      1651<<ASSIGN
F$DCB.BFR1.CX
      1630**DCL      1637>>IF
F$DCB.BFR1.SIZ
      1629**DCL      1647>>ASSIGN
F$DCB.BORROW
      1617**DCL      1617--REDEF    1617--REDEF    1617--REDEF
F$DCB.DCBNAME.L
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:68   
      1631**DCL      1631--IMP-SIZ
F$DCB.EOMCHAR
      1588**DCL      1588--REDEF
F$DCB.FLDID
      1612**DCL      1612--REDEF
F$DCB.FORM$
      1606**DCL      1606--REDEF
F$DCB.FSECT
      1622**DCL      1622--REDEF
F$DCB.FSN
      1599**DCL      1599--REDEF    1599--REDEF    1600--REDEF
F$DCB.HEADER$
      1605**DCL      1605--REDEF
F$DCB.IXTNSIZE
      1603**DCL      1603--REDEF
F$DCB.LASTSTA$
      1593**DCL      1593--REDEF
F$DCB.LVL
      1618**DCL      1618--REDEF
F$DCB.NAME.C
      1593**DCL      1593--REDEF
F$DCB.NOEOF
      1614**DCL      1614--REDEF
F$DCB.NRECS
      1604**DCL      1604--REDEF
F$DCB.NRECX
      1623**DCL      1623--REDEF
F$DCB.OHDR
      1615**DCL      1615--REDEF
F$DCB.ORG
      1598**DCL      1598--REDEF
F$DCB.PRECNO
      1621**DCL      1621--REDEF
F$DCB.RCSZ
      1626**DCL      1626--REDEF
F$DCB.RES
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:69   
      1594**DCL      1594--REDEF
F$DCB.SETX
      1606**DCL      1606--REDEF
F$DCB.TAB$
      1605**DCL      1606--REDEF
F$DCB.TDA
      1620**DCL      1620--REDEF
F$DCB.WSN
      1595**DCL      1595--REDEF
FM$BUF$
        40**DCL      1662>>ASSIGN
FMC$RELCACHE
        28**DCL-ENT  1638--CALL
I
        35**DCL      1647<<ASSIGN   1648<>CALL
JDCB$
        33**DCL      1584--IMP-PTR  1636<<ASSIGN   1637>>IF       1641>>ASSIGN   1643>>IF       1647>>ASSIGN
      1650>>ASSIGN   1650>>ASSIGN   1651>>ASSIGN
MMJ$FFBUF
        30**DCL-ENT  1648--CALL     1665--CALL
MMJ$UNMAPIOP
        29**DCL-ENT  1644--CALL
SC_FMD86
        31**DCL-ENT  1635--CALL     1664--CALL
VPNO
        34**DCL      1641<<ASSIGN   1642>>IF       1644<>CALL     1648<>CALL     1662<<ASSIGN   1663>>IF
      1665<>CALL
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:70   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FMD$RELBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:71   
              MINI UREF LISTING

ERR      36**DCL
FM$CFUJ    1578**DCL
FMD$RBUF    1658**ENTRY
FMD$RELBUF      23**PROC
FM_WSQ      39**DCL

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:72   
      312        1        /*T***********************************************************/
      313        2        /*T*                                                         */
      314        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      315        4        /*T*                                                         */
      316        5        /*T***********************************************************/
      317        6        /* */
      318        7        /*F*   NAME:   FMD$REDBUF
      319        8               PURPOSE:  Read and verify the header of all managed granules          */
      320        9        /* */
      321       10        /*D*   NAME:   FMD$REDBUF
      322       11        *              CALL FMD$REDBUF(BUF$,BUFNUM,DA,,LCDA,EFLG) ALTRET(LOC);
      323       12               INTERFACE:  FMB$QUEUE,FMD$FLSHBUF,FMD$GETBUF,FMD$RELBUF,
      324       13                           FMC$IOCGET,FMB$LOGERR,FMB$CHKDA,FAF$CHKDAFR
      325       14               INPUT:  BUFNUM - DCB buffer number (0-4) to read into
      326       15                       DA - Disk address to read
      327       16                       LCDA - Disk address for link check (-1 if no check)
      328       17                       EFLG - Type of errlog entry to make in case of
      329       18                                fatal error.  Zero or absence of parameter
      330       19                                means to log fatal error.  -1 means to log
      331       20                                no error.  1 means to log fast path error.
      332       21                       DCB fields that must be set:
      333       22                         GTYP - Set to indicate type of granule being read
      334       23                         LVL - Level # (files only)
      335       24                         ORG - File organization (files only)
      336       25                         HASH - FD and files only
      337       26               OUTPUT: BUF$ - Pointer to buffer
      338       27                       Normal return if no error,
      339       28                       ALTRET if I/O error or header verification failure.
      340       29                       JIT.ERR set if ALTRET
      341       30                 DESCRIPTION:
      342       31
      343       32                      First, check the buffer table to see if we already
      344       33                 have the buffer.  If we do, do the verification.  Next,
      345       34                 try the FMC routines to see if we can get a cached buffer.
      346       35                 FMC$NOCACHE is called when the user wants a buffer that
      347       36                 he can muck with that is not in the cache table.
      348       37
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:73   
      349       38                      If all else fails, then try reading the granule up
      350       39                 to four times.  Do some clean up, log any errors we might
      351       40                 have found, then return.
      352       41        */
      353       42                 %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:74   
      354       43                                                /*                                    */
      355       44        FMD$REDBUF: PROC(BUF$,BUFNUM,DA,DDA,LCDA,EFLG) ALTRET;
      356       45        /* PARAMETERS */
      357       46    1   DCL BUF$ PTR;
      358       47    1   DCL BUFNUM UBIN;
      359       48    1   DCL DA UBIN;
      360       49    1   DCL DDA UBIN;
      361       50    1   DCL LCDA SBIN;
      362       51    1   DCL EFLG SBIN;
      363       52        /* EXTERNAL ROUTINES */
      364       53    1   DCL FMD$FLSHBUF ENTRY(1);
      365       54    1   DCL FMD$FLSHBUFNR ENTRY(1);
      366       55    1   DCL FMD$WRTSV ENTRY(1);
      367       56    1   DCL FMD$GETBUF ENTRY(3);
      368       57    1   DCL FMC$GET ENTRY(4) ALTRET;
      369       58    1   DCL FMC$NOCACHE ENTRY(4) ALTRET;
      370       59    1   DCL FMC$FINISH ENTRY(4) ALTRET;
      371       60    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      372       61    1   DCL FMB$CHKDA ENTRY(1) ALTRET;
      373       62    1   DCL FAF$CHKDAFR ENTRY(1) ALTRET;
      374       63    1   DCL FMD$RELBUF ENTRY(1);
      375       64    1   DCL FMB$LOGERR ENTRY(11);
      376       65    1   DCL FMB$ERRTYP ENTRY(1);
      377       66    1   DCL FMO$FDHASH ENTRY(2);
      378       67    1   DCL NIQ$GET ENTRY(1) ALTRET;
      379       68    1   DCL NIQ$REL ENTRY(1) ALTRET;
      380       69    1   DCL SC_FMD87 ENTRY CONV(2,0);
      381       70    1   DCL SC_FMD100 ENTRY CONV(2,0);
      382       71        /* LOCAL AUTOMATIC STORAGE */
      383       72    1   DCL JDCB$ PTR;
      384       73    1   DCL TDA UBIN;
      385       74    1   DCL RETRY SBIN;
      386       75    1   DCL RREAD SBIN;
      387       76    1   DCL ERRNUM UBIN;
      388       77    1   DCL CODE UBIN;
      389       78    1   DCL 1 STAMP,
      390       79    1         2 HASH UBIN(27) UNAL,
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:75   
      391       80    1         2 GMOD UBIN(9) UNAL;
      392       81    1   DCL STMPUBIN REDEF STAMP UBIN;
      393       82    1   DCL BFR1X UBIN;
      394       83    1   DCL BFR2X UBIN;
      395       84    1   DCL BFR3X UBIN;
      396       85    1   DCL MISC SBIN;
      397       86    1   DCL FLAG SBIN;
      398       87    1   DCL 1 SAVBUF,
      399       88    1         2 *(0:4) UBIN;
      400       89    1   DCL 1 SAVQ,
      401       90    1         2 STATUS BIT(36),
      402       91    1         2 REQID UBIN,
      403       92    1         2 TYC BIT(36);
      404       93    1   DCL BCFLG SBIN;
      405       94    1   DCL GTYP UBIN;
      406       95    1   DCL Q$ PTR;
      407       96    1   DCL T$ PTR;
      408       97        /* EXTERNAL DATA */
      409       98    1   DCL B$JIT$ PTR SYMREF;
      410       99    1   DCL FM$BUF$(0:0) PTR SYMREF;
      411      100        /* INCLUDE FILES */
      412      101        %INCLUDE F$JIT_C;
      413      531        %MACRO F$DCB(BASED=BASED);
      414      532        %INCLUDE F$DCB;
      415      581        %MEND;
      416      582        %INCLUDE FM$MACROS;
      417      957        %INCLUDE FM_DATA_R;
      418      971        %INCLUDE FM_CACHE_R;
      419      983        %INCLUDE FM_CACHE_C;
      420     1049        %INCLUDE F_ERRORS_C;
      421     1289        %INCLUDE N_FC_C;
      422     1326        %INCLUDE N$REQ;
      423     1400        %INCLUDE CP_6_SUBS;
      424     1940        /* SUBSTITUTIONS */
      425     1941        %SUB FCG#='0615'O;
      426     1942        %SUB MID#='04'O;
      427     1943        /* CONSTANT STORAGE */
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:76   
      428     1944    1   DCL BFRTBL1(0:10) UBIN(3) CONSTANT INIT(0,0,0,0,0,0,0,0,1,1,1);
      429     1945    1   DCL BFRTBL2(0:10) UBIN(3) CONSTANT INIT(0,1,1,1,1,1,1,1,3,5,3);
      430     1946    1   DCL BFRTBL3(0:10) UBIN(3) CONSTANT INIT(0,2,2,2,2,2,2,2,4,6,4);
      431     1947    1   DCL ZAPBUF(0:4) CONSTANT BIT(36)
      432     1948    1       INIT('111111111111'O,'222222222222'O,'333333333333'O,
      433     1949    1            '444444444444'O,'555555555555'O);
      434     1950        %ERRCODE (NAME=ERRWD,COD#=0);
      435     1954        %ERRCODE (NAME=ERRDI,COD#=%E$DI);
      436     1958        /* BASED STRUCTURES */
      437     1959        %F$DCB  (BASED="BASED(JDCB$)");
      438     2009        %FM$CFU;
      439     2015        %FMC$CACHE;
      440     2038        %FM$GRAN (BASED="BASED(BUF$)");
      441     2042        %N$REQ (STCLASS="BASED(Q$)");
      442     2100    1   DCL WRD SBIN BASED ALIGNED;
      443     2101    1   DCL SDA UBIN WORD;
      444     2102        /* */
      445     2103    1          BCFLG=0;
      446     2104    1          GOTO COMMON;
      447     2105    1   FMD$REDBUFBC: ENTRY(BUF$, BUFNUM, DA, DDA, LCDA, EFLG) ALTRET;
      448     2106    1          BCFLG=1;
      449     2107
      450     2108    1   COMMON: ;
      451     2109        /* */
      452     2110    1          JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */
      453     2111    1          Q$=ADDR(NIL);
      454     2112    1          SDA = DA;                       /* SAVE DA IN SDA                     */
      455     2113    1          GTYP=F$DCB.GTYP;
      456     2114    1          IF BUFNUM>4 THEN
      457     2115    1             CALL SC_FMD87;
      458     2116        /*S*  SCREECH_CODE:  FMD-S$FM87
      459     2117              TYPE:   SUA
      460     2118              MESSAGE:  Illegal arguments to FMD$REDBUF */
      461     2119                                                /*                                    */
      462     2120    1          IF GTYP=FMGTFILE THEN           /* File-relative disk address         */
      463     2121    2             DO;
      464     2122    2             IF DA > FM_FRMAX THEN
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:77   
      465     2123    3                DO;
      466     2124    3                CALL LOGERR(1);
      467     2125    3                ALTRETURN;
      468     2126    3                END;
      469     2127    2             END;
      470     2128    1          ELSE
      471     2129    2             DO;
      472     2130    2             IF DA < FM_SRZERO THEN
      473     2131    3                DO;
      474     2132    3                CALL LOGERR(1);
      475     2133    3                ALTRETURN;
      476     2134    3                END;
      477     2135    2             END;
      478     2136                                                /*                                    */
      479     2137    1          IF F$DCB.BFR.BUFX(BUFNUM)~=0 AND F$DCB.BFR.DA(BUFNUM)=DA THEN
      480     2138    2             DO;
      481     2139    2             RETRY=5;
      482     2140    2             CALL VERIFY ALTRET(READBUF);
      483     2141    2             GOTO DONE;
      484     2142    2             END;
      485     2143        /* */
      486     2144    2          DO BFR1X=0 TO 4;
      487     2145    2             IF F$DCB.BFR.DA(BFR1X)=DA AND F$DCB.BFR.BUFX(BFR1X)~=0 THEN
      488     2146    3                DO;
      489     2147    3                CALL FMD$FLSHBUF(BUFNUM); /* Release any old buffer             */
      490     2148    3                F$DCB.BFR(BUFNUM)=F$DCB.BFR(BFR1X); /* Move FIT                 */
      491     2149    3                F$DCB.BFR1(BUFNUM)=F$DCB.BFR1(BFR1X);
      492     2150    3                F$DCB.BFR(BFR1X)='0'B;
      493     2151    3                F$DCB.BFR1(BFR1X)='0'B;
      494     2152    3                RETRY=6;                  /* Flag for buffer already in         */
      495     2153    3                CALL VERIFY ALTRET(READBUF);
      496     2154    3                GOTO DONE;
      497     2155    3                END;
      498     2156    2          END;
      499     2157        /* */
      500     2158    1          RETRY=7;
      501     2159    1          IF BCFLG = 0 THEN
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:78   
      502     2160    1             CALL FMC$GET(BUF$, BUFNUM, DA, FLAG) ALTRET(ERR1);
      503     2161    1          ELSE
      504     2162    1             CALL FMC$NOCACHE(BUF$, BUFNUM, DA, FLAG) ALTRET(ERR1);
      505     2163    1          IF FLAG > 0 THEN
      506     2164    2             DO;
      507     2165    2             CALL VERIFY ALTRET(READBUF);
      508     2166    2             END;
      509     2167    1          ELSE
      510     2168    2             DO;
      511     2169    2   READBUF:  RETRY=4;
      512     2170    2             CALL FMD$FLSHBUFNR(BUFNUM);
      513     2171    3             DO UNTIL (RREAD = 0 OR RETRY = 0);
      514     2172    3                RREAD=0;
      515     2173    3                IF F$DCB.BFR.BUFX(BUFNUM) = 0 THEN
      516     2174    3                   CALL FMD$GETBUF(BUFNUM, 1, BUF$);
      517     2175    3                ELSE
      518     2176    3                   BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));
      519     2177    3                FM$GRAN=ZAPBUF;           /* Zap buffer contents                */
      520     2178    3                IF Q$~=ADDR(NIL) THEN
      521     2179    4                   DO;
      522     2180    4                   CALL NIQ$REL(Q$);
      523     2181    4                   Q$=ADDR(NIL);
      524     2182    4                   END;
      525     2183    3                CALL FMB$QUEUE(BUF$,1,4096,SDA,%N_RDBIN,-1,
      526     2184    3                   ENTADDR(NIL),0,Q$) ALTRET(ERR1);
      527     2185    3                IF N$REQ.TYC~='1'B THEN
      528     2186    4                   DO;   /* I/O ERROR */
      529     2187    4                   CALL LOGERR(2);
      530     2188    4                   END;  /* I/O ERROR */
      531     2189    3                ELSE
      532     2190    3                   CALL VERIFY;
      533     2191    3                END;
      534     2192    2             END;
      535     2193
      536     2194    1          IF RREAD = 1 AND RETRY = 0 THEN
      537     2195    2             DO;   /* CANT GET A GOOD GRAN */
      538     2196    2             GOTO ERR;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:79   
      539     2197    2             END;
      540     2198
      541     2199    1   DONE:  F$DCB.BFR.DA(BUFNUM)=DA;
      542     2200    1          IF RETRY<4 THEN
      543     2201    2             DO;
      544     2202    2             T$=Q$;                       /* Save current request packet        */
      545     2203    2             CALL NIQ$GET(Q$);
      546     2204    2             N$REQ.STATUS=SAVQ.STATUS;
      547     2205    2             N$REQ.TYC=SAVQ.TYC;
      548     2206    2             N$REQ.REQID=SAVQ.REQID;
      549     2207    2             CALL FMB$LOGERR(CODE,ERRNUM,1,DA,ADDR(SAVBUF),BFR1X,BFR2X,
      550     2208    2                BFR3X,MISC,,Q$);
      551     2209    2             CALL NIQ$REL(Q$);
      552     2210    2             Q$=ADDR(NIL);
      553     2211    2             CALL FMB$LOGERR(CODE,ERRNUM,2,DA,BUF$,BFR1X,BFR2X,BFR3X,
      554     2212    2                4-RETRY,,T$);
      555     2213    2             CALL NIQ$REL(T$);
      556     2214    2             END;
      557     2215    1          ELSE
      558     2216    1             IF Q$~=ADDR(NIL) THEN
      559     2217    1                CALL NIQ$REL(Q$);
      560     2218
      561     2219    1             RETURN;
      562     2220    1   ERR1:     CALL LOGERR(1);
      563     2221    1   ERR:   IF Q$ ~= ADDR(NIL) THEN
      564     2222    1             CALL NIQ$REL(Q$);
      565     2223    1          ALTRETURN;
      566     2224               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:80   
      567     2225        /*I*     NAME:     VERIFY
      568     2226                 PURPOSE:  To verify a buffer that we have found.
      569     2227                 DESCRIPTION:
      570     2228
      571     2229                      Depending on the granule type, check the stamp,
      572     2230                 ORG, and level.  Next check NAVX and AVAIL to make sure
      573     2231                 the make sense.  Then check the links if the file has
      574     2232                 any.  Call LOGERR to report any errors we might have
      575     2233                 found.
      576     2234        */
      577     2235               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:81   
      578     2236    1   VERIFY: PROC ALTRET;
      579     2237        /* VERIFY LVL AND ORG IN GRANULE HEADER */
      580     2238    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));
      581     2239    2          STAMP.HASH=F$DCB.HASH;          /* File hash                          */
      582     2240    2          STAMP.GMOD=DA;                  /* LOW ORDER 9 BITS OF DISK ADDR      */
      583     2241        /* */
      584     2242    3          DO CASE(GTYP);
      585     2243    3             CASE(FMGTGP,FMGTPAD,FMGTMAD);
      586     2244    3                STAMP.HASH=FM_HASH(GTYP);
      587     2245    3   DRCTRY:      IF FM$GRAN.STAMP~=STAMP THEN
      588     2246    4                   DO;
      589     2247    4                   CALL LOGERR(5);
      590     2248    4                   ALTRETURN;
      591     2249    4                   END;
      592     2250
      593     2251    3                IF FM$GRAN.ORG~=0 THEN
      594     2252    4                   DO;
      595     2253    4                   CALL LOGERR(3);
      596     2254    4                   ALTRETURN;
      597     2255    4                   END;
      598     2256
      599     2257    3                IF FM$GRAN.LVL~=GTYP THEN
      600     2258    3                   IF GTYP~=FMGTFDSTAR THEN
      601     2259    4                   DO;
      602     2260    4                   CALL LOGERR(4);
      603     2261    4                   ALTRETURN;
      604     2262    4                   END;
      605     2263    3                ELSE
      606     2264    3                   IF FM$GRAN.LVL~=FMGTFD THEN
      607     2265    4                      DO;
      608     2266    4                      CALL LOGERR(4);
      609     2267    4                      ALTRETURN;
      610     2268    4                      END;
      611     2269
      612     2270    3             CASE(FMGTFD);
      613     2271    3                CALL FMO$FDHASH(JDCB$,STAMP.HASH);
      614     2272    3                GOTO DRCTRY;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:82   
      615     2273
      616     2274    3             CASE(FMGTFDSTAR);
      617     2275    3                STAMP.HASH=F$DCB.HASH;
      618     2276    3                GOTO DRCTRY;
      619     2277
      620     2278    3             CASE(FMGTFILE);
      621     2279    3                IF FM$GRAN.STAMP~=STAMP THEN
      622     2280    4                   IF F$DCB.ORG=%RELATIVE# THEN DO;
      623     2281    4                   B$JIT.ERR=ERRDI;
      624     2282    4                   RETURN;
      625     2283    4                   END;
      626     2284    3                ELSE
      627     2285    4                   DO;
      628     2286    4                   CALL LOGERR(5);
      629     2287    4                   ALTRETURN;
      630     2288    4                   END;
      631     2289
      632     2290    3                IF F$DCB.ORG ~= FM$GRAN.ORG THEN
      633     2291    4                   DO;
      634     2292    4                   CALL LOGERR(3);
      635     2293    4                   ALTRETURN;
      636     2294    4                   END;
      637     2295
      638     2296    3               IF F$DCB.LVL~=FM$GRAN.LVL AND ~F$DCB.SEZ_OK THEN
      639     2297    4                  IF F$DCB.ACS ~= %BLOCK# THEN DO;
      640     2298    4                     CALL LOGERR(4);
      641     2299    4                     ALTRETURN;
      642     2300    4                     END;
      643     2301
      644     2302    3             CASE(FMGTFIT);
      645     2303    3                IF FM$GRAN.LVL=6 THEN
      646     2304    3                   IF FM$GRAN.STAMP.GMOD~=STAMP.GMOD THEN
      647     2305    4                      DO;
      648     2306    4                      CALL LOGERR(5);
      649     2307    4                      ALTRETURN;
      650     2308    4                      END;
      651     2309    3                   ELSE ;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:83   
      652     2310    3                ELSE
      653     2311    4                   DO;
      654     2312    4                   IF FM$GRAN.STAMP.GMOD ~= 0 THEN
      655     2313    5                      DO;
      656     2314    5                      CALL LOGERR(5);
      657     2315    5                      ALTRETURN;
      658     2316    5                      END;
      659     2317    4                   IF FM$GRAN.LVL ~= 0 THEN
      660     2318    5                      DO;
      661     2319    5                      CALL LOGERR(4);
      662     2320    5                      ALTRETURN;
      663     2321    5                      END;
      664     2322    4                END;
      665     2323    3          END;
      666     2324        /* */
      667     2325    2          IF FM$GRAN.NAVX+FM$GRAN.AVAIL > 1024 THEN
      668     2326    3             DO;
      669     2327    3             CALL LOGERR(6);
      670     2328    3             ALTRETURN;
      671     2329    3             END;
      672     2330
      673     2331    2          IF NOT FM$GRAN.HDR THEN
      674     2332    2             RETURN;
      675     2333        /* */
      676     2334    2          IF FM$GRAN.FCEX>FM$GRAN.NAVX THEN
      677     2335    3             DO;
      678     2336    3             CALL LOGERR(7);
      679     2337    3             ALTRETURN;
      680     2338    3             END;
      681     2339        /* */
      682     2340    2          IF GTYP~=FMGTFIT THEN
      683     2341    3             DO;   /* DONT CHECK FIT LINKS */
      684     2342    3             TDA=BUF$->FM$GRAN.BLINK;
      685     2343    3             IF TDA~=0 THEN
      686     2344    3                IF BUF$->FM$GRAN.ORG>0 THEN
      687     2345    3                   CALL FAF$CHKDAFR(TDA) ALTRET(ERR8);
      688     2346    3                ELSE                      /* DIRECTORY - BLINK IS SET-RELATIVE  */
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:84   
      689     2347    3                   CALL FMB$CHKDA(TDA) ALTRET(ERR8);
      690     2348    3                TDA=BUF$->FM$GRAN.FLINK;
      691     2349    3             IF TDA~=0 THEN
      692     2350    3                IF BUF$->FM$GRAN.ORG>0 THEN
      693     2351    3                   CALL FAF$CHKDAFR(TDA) ALTRET(ERR8);
      694     2352    3                ELSE                      /* DIRECTORY - FLINK IS SET-RELATIVE  */
      695     2353    3                   CALL FMB$CHKDA(TDA) ALTRET(ERR8);
      696     2354    3             END;
      697     2355    2          IF ADDR(LCDA) ~= ADDR(NIL) AND LCDA >= 0 THEN
      698     2356    2             IF LCDA~=FM$GRAN.BLINK AND LCDA~=FM$GRAN.FLINK THEN
      699     2357    3                DO;
      700     2358    3                CALL LOGERR(10);
      701     2359    3                ALTRETURN;
      702     2360    3                END;
      703     2361    2          RETURN;
      704     2362    2   ERR8:  CALL LOGERR(8);
      705     2363    2          ALTRETURN;
      706     2364    2          END VERIFY;
      707     2365               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:85   
      708     2366        /*I*     NAME:     LOGERR
      709     2367                 PURPOSE:  To report any errors we found while checking out
      710     2368                           the granule
      711     2369                 DESCRIPTION:
      712     2370
      713     2371                      Use MISC to save some interesting information depending
      714     2372                 on the error number.  Get the error type.  If the RETRY
      715     2373                 value is greater than 5, then snap to try to find out
      716     2374                 what went wrong.  If retry is greater than zero, then
      717     2375                 maybe we got a disk error, try again.
      718     2376
      719     2377                      Log the error, the set the error code in the JIT.
      720     2378        */
      721     2379                 %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:86   
      722     2380    1   LOGERR: PROC(ERR);
      723     2381    2   DCL ERR SBIN;
      724     2382        /* */
      725     2383    2          ERRNUM=ERR;
      726     2384    3          DO CASE(ERR);
      727     2385    3             CASE(1);   /* BAD DA */
      728     2386    3                CALL FMB$ERRTYP(CODE);
      729     2387    3                BFR1X=0;
      730     2388    3                BFR2X=0;
      731     2389    3                BFR3X=0;
      732     2390    3                BUF$=ADDR(NIL);
      733     2391    3                IF DA > FM_FRMAX OR F$DCB.CFU$=ADDR(NIL) THEN
      734     2392    3                   MISC=-1;
      735     2393    3                ELSE
      736     2394    3                   MISC=F$DCB.CFU$->FM$CFU.UGRANS;
      737     2395    3                GOTO LOG;
      738     2396
      739     2397    3             CASE(2);
      740     2398    3                MISC=BITBIN(N$REQ.TYC);
      741     2399
      742     2400    3             CASE(3);   /* ORG WRONG */
      743     2401    3                MISC=0;
      744     2402
      745     2403    3             CASE(4);   /* LVL WRONG */
      746     2404    3                MISC=F$DCB.LVL;
      747     2405
      748     2406    3             CASE(5);   /* STAMP WRONG  */
      749     2407    3                MISC=STMPUBIN;
      750     2408
      751     2409    3             CASE(6);   /* NAVX+AVAIL BAD */
      752     2410    3                MISC=0;
      753     2411
      754     2412    3             CASE(7);   /* FECX TOO LARGE */
      755     2413    3                MISC=0;
      756     2414
      757     2415    3             CASE(8);   /* BLINK OR FLINK IS BAD DISC ADDRESS */
      758     2416    3                IF DA > FM_FRMAX OR F$DCB.CFU$=ADDR(NIL) THEN
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:87   
      759     2417    3                   MISC=-1;
      760     2418    3                ELSE
      761     2419    3                   MISC=F$DCB.CFU$->FM$CFU.UGRANS;
      762     2420
      763     2421    3             CASE(10);
      764     2422    3                MISC=LCDA;
      765     2423    3          END;   /* CASE */
      766     2424
      767     2425    2          CALL FMB$ERRTYP(CODE);          /* CALC ERROR CODE                    */
      768     2426    2          BFR1X=BFRTBL1(ERRNUM);
      769     2427    2          BFR2X=BFRTBL2(ERRNUM);
      770     2428    2          BFR3X=BFRTBL3(ERRNUM);
      771     2429
      772     2430    2          IF RETRY>=4 THEN
      773     2431    3             DO;
      774     2432    3             IF BUF$~=ADDR(NIL) THEN
      775     2433    3                SAVBUF=FM$GRAN;           /* Save bad header                    */
      776     2434    3             IF Q$~=ADDR(NIL) THEN
      777     2435    4                DO;
      778     2436    4                SAVQ.STATUS=N$REQ.STATUS;
      779     2437    4                SAVQ.TYC=N$REQ.TYC;
      780     2438    4                SAVQ.REQID=N$REQ.REQID;
      781     2439    4                END;
      782     2440    3             END;
      783     2441
      784     2442    2          IF RETRY>=5 THEN
      785     2443    2             IF ERRNUM=5 AND FM$GRAN.STAMP.HASH=0 AND GTYP=FMGTFILE THEN
      786     2444    3                DO;
      787     2445    3                RREAD=1;
      788     2446    3                RETURN;
      789     2447    3                END;
      790     2448    2             ELSE
      791     2449    3                DO;
      792     2450    3                IF FLAG = 1 THEN
      793     2451    3                   CALL SC_FMD100;
      794     2452    3                IF F$DCB.BFR1.CX(BUFNUM) > 0 THEN
      795     2453    4                   DO;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:88   
      796     2454    4                   FMC$CACHETBL.FLAGS.ERR(F$DCB.BFR1.CX(BUFNUM))='1'B;
      797     2455    4                   CALL FMC$FINISH(BUFNUM, 0, 0, FLAG);
      798     2456    4                   END;
      799     2457    3                ELSE
      800     2458    3                   CALL FMD$RELBUF(BUFNUM);
      801     2459    3                RETRY=5;
      802     2460    3                END;
      803     2461        /*S*  SCREECH_CODE:  FMD-S$FM100
      804     2462        *     TYPE:  DUMP
      805     2463        *     MESSAGE:  An error was found in a buffer that was already
      806     2464        *       in core.
      807     2465        */
      808     2466        /* */
      809     2467    2          F$DCB.TYC(1)='0'B;              /* Clear any I/O error status         */
      810     2468    2          RETRY=RETRY-1;
      811     2469    2          IF Q$ ~= ADDR(NIL) THEN
      812     2470    2             IF N$REQ.TYC.OPER THEN
      813     2471    2                RETRY=0;
      814     2472    2          RREAD=1;
      815     2473    2          IF RETRY > 0 THEN
      816     2474    2             RETURN;
      817     2475        /* */
      818     2476    2          F$DCB.BFR.DA(BUFNUM)=DA;
      819     2477        /* */
      820     2478    2   LOG:   IF CODE=%E$ULMI THEN
      821     2479    2             TDA=0;
      822     2480    2          ELSE
      823     2481    2             TDA=8;
      824     2482    2          IF ADDR(EFLG)=ADDR(NIL) THEN
      825     2483    2             GOTO LOG5;
      826     2484    2          IF EFLG >= 0 THEN
      827     2485    3             DO;
      828     2486    3             IF EFLG>0 THEN
      829     2487    3                TDA=6;                    /* FAST PATH ERROR                    */
      830     2488    3   LOG5:     CALL FMB$LOGERR(CODE,ERRNUM,TDA,DA,BUF$,BFR1X,
      831     2489    3                BFR2X,BFR3X,MISC,,Q$);
      832     2490    3             END;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:89   
      833     2491    2          IF Q$~=ADDR(NIL) THEN
      834     2492    3             DO;
      835     2493    3             CALL NIQ$REL(Q$);
      836     2494    3             Q$=ADDR(NIL);
      837     2495    3             END;
      838     2496    2          IF CODE~=%E$DI AND ERRNUM=2 THEN
      839     2497    2             CODE=CODE-%E$MI+%E$MIIO;     /* CONVERT CODE TO I/O ERROR TYPE     */
      840     2498    2          B$JIT$->B$JIT.ERR=ERRWD;
      841     2499    2          B$JIT$->B$JIT.ERR.CODE=CODE;
      842     2500    2          IF JDCB$->F$DCB.GTYP=FMGTFILE AND CODE~=%E$ULMI THEN
      843     2501    2             JDCB$->F$DCB.CFU$->FM$CFU.B=1; /* SET BROKEN FILE FLAG             */
      844     2502    2          CALL FMD$RELBUF(BUFNUM);
      845     2503    2          BUF$=ADDR(NIL);
      846     2504    2          RETURN;
      847     2505    2          END LOGERR;
      848     2506               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:90   
      849     2507
      850     2508        /*E*    ERROR:   -E$MI-2
      851     2509                MESSAGE: System error - master index% of file %FN% is broken
      852     2510                MESSAGE1: One or more records in file %FN are lost
      853     2511                DESCRIPTION:  An inconsistency has been detected in a master
      854     2512                index granule.  All records in this granule are inaccessible.           */
      855     2513        /*E*    ERROR:   -E$ULMI-0
      856     2514                MESSAGE: Inconsistency in upper level index
      857     2515                DESCRIPTION:  An inconsistency has been detected in the
      858     2516                  upper level index of a keyed or indexed file.  This
      859     2517                  error is not reported to the user - it is only logged
      860     2518                  in the error log.
      861     2519        */
      862     2520        /*E*    ERROR:   -E$FIT-2
      863     2521                MESSAGE: System error - FIT% of file %FN% is broken
      864     2522                MESSAGE1: Entire file %FN is lost
      865     2523                DESCRIPTION:  An inconsistency has been detected in the file's
      866     2524                FIT.  The entire file is inaccessible.                                  */
      867     2525        /*E*    ERROR:   -E$FD-2
      868     2526                MESSAGE: System error - file directory% of account %AC% is broken
      869     2527                MESSAGE1: File %FN and all files beyond it in this account
      870     2528                  are lost
      871     2529                DESCRIPTION:  An inconsistency has been detected in the file
      872     2530                directory.  All files from this point to the end of the
      873     2531                directory have been lost.                                               */
      874     2532        /*E*    ERROR:   -E$PAD-2
      875     2533                MESSAGE: System error - account directory% on set %SN% is broken
      876     2534                MESSAGE1: Inconsistency in account directory on set %SN
      877     2535                DESCRIPTION:  An inconsistency has been detected in the
      878     2536                account directory.  All accounts on this pack set beyond this
      879     2537                point are inaccessible.                                                 */
      880     2538        /*E*    ERROR:   -E$MAD-2
      881     2539                MESSAGE: System error - master account directory is broken
      882     2540        */
      883     2541        /*E*    ERROR:  -E$GP-2
      884     2542                MESSAGE: System error - granule allocation pool% of pack %SN% is broken
      885     2543        */
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:91   
      886     2544        /*E*    ERROR:   -E$MIIO-2
      887     2545                MESSAGE: Disk error reading index granule from file %FN
      888     2546                DESCRIPTION:  Unable to read a master index granule due to
      889     2547                hardware error.  All records in this granule are lost.                  */
      890     2548        /*E*    ERROR:   -E$ULMIIO-0
      891     2549                MESSAGE: Disk error reading upper level index
      892     2550                DESCRIPTION:  A disk error occurred reading the upper
      893     2551                  level index of a keyed or indexed file.  This error
      894     2552                  is not reported to the user - it is only logged in
      895     2553                  the error log.
      896     2554        */
      897     2555        /*E*    ERROR:   -E$FITIO-2
      898     2556                MESSAGE: Disk error reading FIT of file %FN
      899     2557                DESCRIPTION:  Unable to read the file's FIT due to a
      900     2558                hardware error.  The entire file is inaccessible.                       */
      901     2559        /*E*    ERROR:   -E$FDIO-2
      902     2560                MESSAGE: Disk error reading file directory% for account %AC%
      903     2561                DESCRIPTION:  Unable to read a file directory granule due to
      904     2562                a hardware error.  All files from this point to the end of the
      905     2563                directory are lost.                                                     */
      906     2564        /*E*    ERROR:  FMD-E$PADIO-2
      907     2565                MESSAGE: Disk error reading PAD% for set %SN%
      908     2566        */
      909     2567        /*E*    ERROR:   -E$MADIO-2
      910     2568                MESSAGE: Disk error reading MAD
      911     2569        */
      912     2570        /*E*    ERROR:   -E$GPIO-2
      913     2571                MESSAGE: Disk error reading granule pool for pack set %SN
      914     2572        */
      915     2573    1          END FMD$REDBUF;
      916     2574               %EOD;

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:92   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$REDBUF.

   Procedure FMD$REDBUF requires 913 words for executable code.
   Procedure FMD$REDBUF requires 50 words of local(AUTO) storage.

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:93   

 Object Unit name= FMD$REDBUF                                 File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:39:56.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     40     50  FMD$REDBUF
    1   Proc  even  none   913   1621  FMD$REDBUF
    2  RoData even  none    17     21  FMD$REDBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        6  FMD$REDBUF
     1      4          yes     yes      Std        6  FMD$REDBUFBC
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:94   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMD$FLSHBUFNR
 yes     yes           Std       9 FMB$QUEUE
 yes     yes           Std       1 NIQ$REL
         yes           Std       1 FMD$FLSHBUF
 yes     yes           Std       4 FMC$GET
         yes           Std       3 FMD$GETBUF
 yes     yes           Std       1 NIQ$GET
         yes           Std      11 FMB$LOGERR
 yes     yes           Std       4 FMC$NOCACHE
         yes           Std       2 FMO$FDHASH
 yes     yes           Std       1 FAF$CHKDAFR
 yes     yes           Std       1 FMB$CHKDA
         yes           Std       1 FMB$ERRTYP
 yes     yes           Std       4 FMC$FINISH
         yes           Std       1 FMD$RELBUF
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMD87                              SC_FMD100                             B$JIT$
     FM$BUF$                          r    FM_FRMAX                         r    FM_SRZERO
r    FM_HASH                               FMC_CACHE$                            FMC_CACHEPGCNT$
     B_VECTNIL
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:95   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:96   


      312        1        /*T***********************************************************/
      313        2        /*T*                                                         */
      314        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      315        4        /*T*                                                         */
      316        5        /*T***********************************************************/
      317        6        /* */
      318        7        /*F*   NAME:   FMD$REDBUF
      319        8               PURPOSE:  Read and verify the header of all managed granules          */
      320        9        /* */
      321       10        /*D*   NAME:   FMD$REDBUF
      322       11        *              CALL FMD$REDBUF(BUF$,BUFNUM,DA,,LCDA,EFLG) ALTRET(LOC);
      323       12               INTERFACE:  FMB$QUEUE,FMD$FLSHBUF,FMD$GETBUF,FMD$RELBUF,
      324       13                           FMC$IOCGET,FMB$LOGERR,FMB$CHKDA,FAF$CHKDAFR
      325       14               INPUT:  BUFNUM - DCB buffer number (0-4) to read into
      326       15                       DA - Disk address to read
      327       16                       LCDA - Disk address for link check (-1 if no check)
      328       17                       EFLG - Type of errlog entry to make in case of
      329       18                                fatal error.  Zero or absence of parameter
      330       19                                means to log fatal error.  -1 means to log
      331       20                                no error.  1 means to log fast path error.
      332       21                       DCB fields that must be set:
      333       22                         GTYP - Set to indicate type of granule being read
      334       23                         LVL - Level # (files only)
      335       24                         ORG - File organization (files only)
      336       25                         HASH - FD and files only
      337       26               OUTPUT: BUF$ - Pointer to buffer
      338       27                       Normal return if no error,
      339       28                       ALTRET if I/O error or header verification failure.
      340       29                       JIT.ERR set if ALTRET
      341       30                 DESCRIPTION:
      342       31
      343       32                      First, check the buffer table to see if we already
      344       33                 have the buffer.  If we do, do the verification.  Next,
      345       34                 try the FMC routines to see if we can get a cached buffer.
      346       35                 FMC$NOCACHE is called when the user wants a buffer that
      347       36                 he can muck with that is not in the cache table.
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:97   
      348       37
      349       38                      If all else fails, then try reading the granule up
      350       39                 to four times.  Do some clean up, log any errors we might
      351       40                 have found, then return.
      352       41        */
      353       42                 %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:98   
      354       43                                                /*                                    */
      355       44        FMD$REDBUF: PROC(BUF$,BUFNUM,DA,DDA,LCDA,EFLG) ALTRET;

     44  1 000000   000000 700200 xent  FMD$REDBUF   TSX0  ! X66_AUTO_N
         1 000001   000062 000006                    ZERO    50,6

      356       45        /* PARAMETERS */
      357       46    1   DCL BUF$ PTR;
      358       47    1   DCL BUFNUM UBIN;
      359       48    1   DCL DA UBIN;
      360       49    1   DCL DDA UBIN;
      361       50    1   DCL LCDA SBIN;
      362       51    1   DCL EFLG SBIN;
      363       52        /* EXTERNAL ROUTINES */
      364       53    1   DCL FMD$FLSHBUF ENTRY(1);
      365       54    1   DCL FMD$FLSHBUFNR ENTRY(1);
      366       55    1   DCL FMD$WRTSV ENTRY(1);
      367       56    1   DCL FMD$GETBUF ENTRY(3);
      368       57    1   DCL FMC$GET ENTRY(4) ALTRET;
      369       58    1   DCL FMC$NOCACHE ENTRY(4) ALTRET;
      370       59    1   DCL FMC$FINISH ENTRY(4) ALTRET;
      371       60    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      372       61    1   DCL FMB$CHKDA ENTRY(1) ALTRET;
      373       62    1   DCL FAF$CHKDAFR ENTRY(1) ALTRET;
      374       63    1   DCL FMD$RELBUF ENTRY(1);
      375       64    1   DCL FMB$LOGERR ENTRY(11);
      376       65    1   DCL FMB$ERRTYP ENTRY(1);
      377       66    1   DCL FMO$FDHASH ENTRY(2);
      378       67    1   DCL NIQ$GET ENTRY(1) ALTRET;
      379       68    1   DCL NIQ$REL ENTRY(1) ALTRET;
      380       69    1   DCL SC_FMD87 ENTRY CONV(2,0);
      381       70    1   DCL SC_FMD100 ENTRY CONV(2,0);
      382       71        /* LOCAL AUTOMATIC STORAGE */
      383       72    1   DCL JDCB$ PTR;
      384       73    1   DCL TDA UBIN;
      385       74    1   DCL RETRY SBIN;
      386       75    1   DCL RREAD SBIN;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:99   
      387       76    1   DCL ERRNUM UBIN;
      388       77    1   DCL CODE UBIN;
      389       78    1   DCL 1 STAMP,
      390       79    1         2 HASH UBIN(27) UNAL,
      391       80    1         2 GMOD UBIN(9) UNAL;
      392       81    1   DCL STMPUBIN REDEF STAMP UBIN;
      393       82    1   DCL BFR1X UBIN;
      394       83    1   DCL BFR2X UBIN;
      395       84    1   DCL BFR3X UBIN;
      396       85    1   DCL MISC SBIN;
      397       86    1   DCL FLAG SBIN;
      398       87    1   DCL 1 SAVBUF,
      399       88    1         2 *(0:4) UBIN;
      400       89    1   DCL 1 SAVQ,
      401       90    1         2 STATUS BIT(36),
      402       91    1         2 REQID UBIN,
      403       92    1         2 TYC BIT(36);
      404       93    1   DCL BCFLG SBIN;
      405       94    1   DCL GTYP UBIN;
      406       95    1   DCL Q$ PTR;
      407       96    1   DCL T$ PTR;
      408       97        /* EXTERNAL DATA */
      409       98    1   DCL B$JIT$ PTR SYMREF;
      410       99    1   DCL FM$BUF$(0:0) PTR SYMREF;
      411      100        /* INCLUDE FILES */
      412      101        %INCLUDE F$JIT_C;
      413      531        %MACRO F$DCB(BASED=BASED);
      414      532        %INCLUDE F$DCB;
      415      581        %MEND;
      416      582        %INCLUDE FM$MACROS;
      417      957        %INCLUDE FM_DATA_R;
      418      971        %INCLUDE FM_CACHE_R;
      419      983        %INCLUDE FM_CACHE_C;
      420     1049        %INCLUDE F_ERRORS_C;
      421     1289        %INCLUDE N_FC_C;
      422     1326        %INCLUDE N$REQ;
      423     1400        %INCLUDE CP_6_SUBS;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:100  
      424     1940        /* SUBSTITUTIONS */
      425     1941        %SUB FCG#='0615'O;
      426     1942        %SUB MID#='04'O;
      427     1943        /* CONSTANT STORAGE */
      428     1944    1   DCL BFRTBL1(0:10) UBIN(3) CONSTANT INIT(0,0,0,0,0,0,0,0,1,1,1);
      429     1945    1   DCL BFRTBL2(0:10) UBIN(3) CONSTANT INIT(0,1,1,1,1,1,1,1,3,5,3);
      430     1946    1   DCL BFRTBL3(0:10) UBIN(3) CONSTANT INIT(0,2,2,2,2,2,2,2,4,6,4);
      431     1947    1   DCL ZAPBUF(0:4) CONSTANT BIT(36)
      432     1948    1       INIT('111111111111'O,'222222222222'O,'333333333333'O,
      433     1949    1            '444444444444'O,'555555555555'O);
      434     1950        %ERRCODE (NAME=ERRWD,COD#=0);
      435     1954        %ERRCODE (NAME=ERRDI,COD#=%E$DI);
      436     1958        /* BASED STRUCTURES */
      437     1959        %F$DCB  (BASED="BASED(JDCB$)");
      438     2009        %FM$CFU;
      439     2015        %FMC$CACHE;
      440     2038        %FM$GRAN (BASED="BASED(BUF$)");
      441     2042        %N$REQ (STCLASS="BASED(Q$)");
      442     2100    1   DCL WRD SBIN BASED ALIGNED;
      443     2101    1   DCL SDA UBIN WORD;
      444     2102        /* */
      445     2103    1          BCFLG=0;

   2103  1 000002   200035 450100                    STZ     BCFLG,,AUTO

      446     2104    1          GOTO COMMON;

   2104  1 000003   000010 710000 1                  TRA     COMMON

      447     2105    1   FMD$REDBUFBC: ENTRY(BUF$, BUFNUM, DA, DDA, LCDA, EFLG) ALTRET;

   2105  1 000004   000000 700200 xent  FMD$REDBUFBC TSX0  ! X66_AUTO_N
         1 000005   000062 000006                    ZERO    50,6

      448     2106    1          BCFLG=1;

   2106  1 000006   000001 235007                    LDA     1,DL
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:101  
         1 000007   200035 755100                    STA     BCFLG,,AUTO

   2106  1 000010                       COMMON       null
      449     2107
      450     2108    1   COMMON: ;
      451     2109        /* */
      452     2110    1          JDCB$=B$JIT.DCB$;               /* POINTER TO CURRENT DCB             */

   2110  1 000010   000000 470400 xsym               LDP0    B$JIT$
         1 000011   000232 236100                    LDQ     154,,PR0
         1 000012   200011 756100                    STQ     JDCB$,,AUTO

      453     2111    1          Q$=ADDR(NIL);

   2111  1 000013   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000014   200037 756100                    STQ     Q$,,AUTO

      454     2112    1          SDA = DA;                       /* SAVE DA IN SDA                     */

   2112  1 000015   200005 471500                    LDP1    @DA,,AUTO
         1 000016   100000 235100                    LDA     0,,PR1
         1 000017   200041 755100                    STA     SDA,,AUTO

      455     2113    1          GTYP=F$DCB.GTYP;

   2113  1 000020   200011 473500                    LDP3    JDCB$,,AUTO
         1 000021   300064 236100                    LDQ     52,,PR3
         1 000022   000035 772000                    QRL     29
         1 000023   000007 376007                    ANQ     7,DL
         1 000024   200036 756100                    STQ     GTYP,,AUTO

      456     2114    1          IF BUFNUM>4 THEN

   2114  1 000025   200004 474500                    LDP4    @BUFNUM,,AUTO
         1 000026   400000 235100                    LDA     0,,PR4
         1 000027   000005 115007                    CMPA    5,DL
         1 000030   000033 602000 1                  TNC     s:2120
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:102  

      457     2115    1             CALL SC_FMD87;

   2115  1 000031   000000 713400 xsym               CLIMB   SC_FMD87
         1 000032   000000 600000 xsid               climb   nvectors=         0

      458     2116        /*S*  SCREECH_CODE:  FMD-S$FM87
      459     2117              TYPE:   SUA
      460     2118              MESSAGE:  Illegal arguments to FMD$REDBUF */
      461     2119                                                /*                                    */
      462     2120    1          IF GTYP=FMGTFILE THEN           /* File-relative disk address         */

   2120  1 000033   200036 235100                    LDA     GTYP,,AUTO
         1 000034   000006 115007                    CMPA    6,DL
         1 000035   000047 601000 1                  TNZ     s:2130

      463     2121    2             DO;

      464     2122    2             IF DA > FM_FRMAX THEN

   2122  1 000036   200005 470500                    LDP0    @DA,,AUTO
         1 000037   000000 236000 xsym               LDQ     FM_FRMAX
         1 000040   000000 116100                    CMPQ    0,,PR0
         1 000041   000060 603000 1                  TRC     s:2137

      465     2123    3                DO;

      466     2124    3                CALL LOGERR(1);

   2124  1 000042   000000 236000 2                  LDQ     0
         1 000043   200045 756100                    STQ     SDA+4,,AUTO
         1 000044   001157 701000 1                  TSX1    LOGERR
         1 000045   000000 011000                    NOP     0

      467     2125    3                ALTRETURN;

   2125  1 000046   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:103  

      468     2126    3                END;
      469     2127    2             END;
      470     2128    1          ELSE
      471     2129    2             DO;

      472     2130    2             IF DA < FM_SRZERO THEN

   2130  1 000047   200005 470500                    LDP0    @DA,,AUTO
         1 000050   000000 236100                    LDQ     0,,PR0
         1 000051   000000 116000 xsym               CMPQ    FM_SRZERO
         1 000052   000060 603000 1                  TRC     s:2137

      473     2131    3                DO;

      474     2132    3                CALL LOGERR(1);

   2132  1 000053   000000 236000 2                  LDQ     0
         1 000054   200045 756100                    STQ     SDA+4,,AUTO
         1 000055   001157 701000 1                  TSX1    LOGERR
         1 000056   000000 011000                    NOP     0

      475     2133    3                ALTRETURN;

   2133  1 000057   000000 702200 xent               TSX2  ! X66_AALT

      476     2134    3                END;
      477     2135    2             END;
      478     2136                                                /*                                    */
      479     2137    1          IF F$DCB.BFR.BUFX(BUFNUM)~=0 AND F$DCB.BFR.DA(BUFNUM)=DA THEN

   2137  1 000060   200004 471500                    LDP1    @BUFNUM,,AUTO
         1 000061   100000 720100                    LXL0    0,,PR1
         1 000062   200011 473500                    LDP3    JDCB$,,AUTO
         1 000063   300115 236110                    LDQ     77,X0,PR3
         1 000064   037000 316003                    CANQ    15872,DU
         1 000065   000077 600000 1                  TZE     s:2144
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:104  
         1 000066   300115 236110                    LDQ     77,X0,PR3
         1 000067   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000070   000000 116100                    CMPQ    0,,PR0
         1 000071   000077 601000 1                  TNZ     s:2144

      480     2138    2             DO;

      481     2139    2             RETRY=5;

   2139  1 000072   000005 235007                    LDA     5,DL
         1 000073   200013 755100                    STA     RETRY,,AUTO

      482     2140    2             CALL VERIFY ALTRET(READBUF);

   2140  1 000074   000527 701000 1                  TSX1    VERIFY
         1 000075   000211 702000 1                  TSX2    READBUF

      483     2141    2             GOTO DONE;

   2141  1 000076   000334 710000 1                  TRA     DONE

      484     2142    2             END;
      485     2143        /* */
      486     2144    2          DO BFR1X=0 TO 4;

   2144  1 000077   200020 450100                    STZ     BFR1X,,AUTO

      487     2145    2             IF F$DCB.BFR.DA(BFR1X)=DA AND F$DCB.BFR.BUFX(BFR1X)~=0 THEN

   2145  1 000100   200005 470500                    LDP0    @DA,,AUTO
         1 000101   200011 471500                    LDP1    JDCB$,,AUTO
         1 000102   200020 720100                    LXL0    BFR1X,,AUTO
         1 000103   100115 236110                    LDQ     77,X0,PR1
         1 000104   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000105   000000 116100                    CMPQ    0,,PR0
         1 000106   000144 601000 1                  TNZ     s:2156
         1 000107   100115 236110                    LDQ     77,X0,PR1
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:105  
         1 000110   037000 316003                    CANQ    15872,DU
         1 000111   000144 600000 1                  TZE     s:2156

      488     2146    3                DO;

      489     2147    3                CALL FMD$FLSHBUF(BUFNUM); /* Release any old buffer             */

   2147  1 000112   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000114   000000 701000 xent               TSX1    FMD$FLSHBUF
         1 000115   000000 011000                    NOP     0

      490     2148    3                F$DCB.BFR(BUFNUM)=F$DCB.BFR(BFR1X); /* Move FIT                 */

   2148  1 000116   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000117   000000 720100                    LXL0    0,,PR0
         1 000120   200011 471500                    LDP1    JDCB$,,AUTO
         1 000121   200020 721100                    LXL1    BFR1X,,AUTO
         1 000122   100115 236111                    LDQ     77,X1,PR1
         1 000123   100115 756110                    STQ     77,X0,PR1

      491     2149    3                F$DCB.BFR1(BUFNUM)=F$DCB.BFR1(BFR1X);

   2149  1 000124   000000 720100                    LXL0    0,,PR0
         1 000125   200011 471500                    LDP1    JDCB$,,AUTO
         1 000126   200020 721100                    LXL1    BFR1X,,AUTO
         1 000127   100122 236111                    LDQ     82,X1,PR1
         1 000130   100122 756110                    STQ     82,X0,PR1

      492     2150    3                F$DCB.BFR(BFR1X)='0'B;

   2150  1 000131   200011 471500                    LDP1    JDCB$,,AUTO
         1 000132   200020 720100                    LXL0    BFR1X,,AUTO
         1 000133   100115 450110                    STZ     77,X0,PR1

      493     2151    3                F$DCB.BFR1(BFR1X)='0'B;

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:106  
   2151  1 000134   200011 471500                    LDP1    JDCB$,,AUTO
         1 000135   200020 720100                    LXL0    BFR1X,,AUTO
         1 000136   100122 450110                    STZ     82,X0,PR1

      494     2152    3                RETRY=6;                  /* Flag for buffer already in         */

   2152  1 000137   000006 235007                    LDA     6,DL
         1 000140   200013 755100                    STA     RETRY,,AUTO

      495     2153    3                CALL VERIFY ALTRET(READBUF);

   2153  1 000141   000527 701000 1                  TSX1    VERIFY
         1 000142   000211 702000 1                  TSX2    READBUF

      496     2154    3                GOTO DONE;

   2154  1 000143   000334 710000 1                  TRA     DONE

      497     2155    3                END;
      498     2156    2          END;

   2156  1 000144   200020 235100                    LDA     BFR1X,,AUTO
         1 000145   000001 035007                    ADLA    1,DL
         1 000146   200020 755100                    STA     BFR1X,,AUTO
         1 000147   000005 115007                    CMPA    5,DL
         1 000150   000100 602000 1                  TNC     s:2145

      499     2157        /* */
      500     2158    1          RETRY=7;

   2158  1 000151   000007 236007                    LDQ     7,DL
         1 000152   200013 756100                    STQ     RETRY,,AUTO

      501     2159    1          IF BCFLG = 0 THEN

   2159  1 000153   200035 235100                    LDA     BCFLG,,AUTO
         1 000154   000171 601000 1                  TNZ     s:2162
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:107  

      502     2160    1             CALL FMC$GET(BUF$, BUFNUM, DA, FLAG) ALTRET(ERR1);

   2160  1 000155   200024 633500                    EPPR3   FLAG,,AUTO
         1 000156   200051 453500                    STP3    @ERR+4,,AUTO
         1 000157   200005 236100                    LDQ     @DA,,AUTO
         1 000160   200050 756100                    STQ     @ERR+3,,AUTO
         1 000161   200004 236100                    LDQ     @BUFNUM,,AUTO
         1 000162   200003 235100                    LDA     @BUF$,,AUTO
         1 000163   200046 757100                    STAQ    @ERR+1,,AUTO
         1 000164   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000165   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000166   000000 701000 xent               TSX1    FMC$GET
         1 000167   000511 702000 1                  TSX2    ERR1
         1 000170   000204 710000 1                  TRA     s:2163

      503     2161    1          ELSE
      504     2162    1             CALL FMC$NOCACHE(BUF$, BUFNUM, DA, FLAG) ALTRET(ERR1);

   2162  1 000171   200024 633500                    EPPR3   FLAG,,AUTO
         1 000172   200051 453500                    STP3    @ERR+4,,AUTO
         1 000173   200005 236100                    LDQ     @DA,,AUTO
         1 000174   200050 756100                    STQ     @ERR+3,,AUTO
         1 000175   200004 236100                    LDQ     @BUFNUM,,AUTO
         1 000176   200003 235100                    LDA     @BUF$,,AUTO
         1 000177   200046 757100                    STAQ    @ERR+1,,AUTO
         1 000200   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000201   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000202   000000 701000 xent               TSX1    FMC$NOCACHE
         1 000203   000511 702000 1                  TSX2    ERR1

      505     2163    1          IF FLAG > 0 THEN

   2163  1 000204   200024 235100                    LDA     FLAG,,AUTO
         1 000205   000211 604400 1                  TMOZ    READBUF

      506     2164    2             DO;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:108  

      507     2165    2             CALL VERIFY ALTRET(READBUF);

   2165  1 000206   000527 701000 1                  TSX1    VERIFY
         1 000207   000211 702000 1                  TSX2    READBUF

      508     2166    2             END;

   2166  1 000210   000326 710000 1                  TRA     s:2194

      509     2167    1          ELSE
      510     2168    2             DO;

      511     2169    2   READBUF:  RETRY=4;

   2169  1 000211   000004 235007       READBUF      LDA     4,DL
         1 000212   200013 755100                    STA     RETRY,,AUTO

      512     2170    2             CALL FMD$FLSHBUFNR(BUFNUM);

   2170  1 000213   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 000214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000215   000000 701000 xent               TSX1    FMD$FLSHBUFNR
         1 000216   000000 011000                    NOP     0

      513     2171    3             DO UNTIL (RREAD = 0 OR RETRY = 0);

      514     2172    3                RREAD=0;

   2172  1 000217   200014 450100                    STZ     RREAD,,AUTO

      515     2173    3                IF F$DCB.BFR.BUFX(BUFNUM) = 0 THEN

   2173  1 000220   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000221   000000 720100                    LXL0    0,,PR0
         1 000222   200011 471500                    LDP1    JDCB$,,AUTO
         1 000223   100115 236110                    LDQ     77,X0,PR1
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:109  
         1 000224   037000 316003                    CANQ    15872,DU
         1 000225   000240 601000 1                  TNZ     s:2176

      516     2174    3                   CALL FMD$GETBUF(BUFNUM, 1, BUF$);

   2174  1 000226   200003 236100                    LDQ     @BUF$,,AUTO
         1 000227   200050 756100                    STQ     @ERR+3,,AUTO
         1 000230   000000 236000 2                  LDQ     0
         1 000231   200004 235100                    LDA     @BUFNUM,,AUTO
         1 000232   200046 757100                    STAQ    @ERR+1,,AUTO
         1 000233   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000234   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000235   000000 701000 xent               TSX1    FMD$GETBUF
         1 000236   000000 011000                    NOP     0
         1 000237   000246 710000 1                  TRA     s:2177

      517     2175    3                ELSE
      518     2176    3                   BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));

   2176  1 000240   100115 236110                    LDQ     77,X0,PR1
         1 000241   000033 772000                    QRL     27
         1 000242   000037 376007                    ANQ     31,DL
         1 000243   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 000244   200003 473500                    LDP3    @BUF$,,AUTO
         1 000245   300000 756100                    STQ     0,,PR3

      519     2177    3                FM$GRAN=ZAPBUF;           /* Zap buffer contents                */

   2177  1 000246   200003 470500                    LDP0    @BUF$,,AUTO
         1 000247   000000 471500                    LDP1    0,,PR0
         1 000250   000100 100400                    MLR     fill='000'O
         1 000251   000041 000024 0                  ADSC9   ZAPBUF                   cn=0,n=20
         1 000252   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20

      520     2178    3                IF Q$~=ADDR(NIL) THEN

   2178  1 000253   200037 236100                    LDQ     Q$,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:110  
         1 000254   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000255   000266 600000 1                  TZE     s:2183

      521     2179    4                   DO;

      522     2180    4                   CALL NIQ$REL(Q$);

   2180  1 000256   200037 631500                    EPPR1   Q$,,AUTO
         1 000257   200046 451500                    STP1    @ERR+1,,AUTO
         1 000260   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000261   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000262   000000 701000 xent               TSX1    NIQ$REL
         1 000263   000000 011000                    NOP     0

      523     2181    4                   Q$=ADDR(NIL);

   2181  1 000264   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000265   200037 756100                    STQ     Q$,,AUTO

      524     2182    4                   END;

      525     2183    3                CALL FMB$QUEUE(BUF$,1,4096,SDA,%N_RDBIN,-1,

   2183  1 000266   200037 630500                    EPPR0   Q$,,AUTO
         1 000267   200056 450500                    STP0    @ERR+9,,AUTO
         1 000270   000004 237000 2                  LDAQ    4
         1 000271   200054 757100                    STAQ    @ERR+7,,AUTO
         1 000272   000006 237000 2                  LDAQ    6
         1 000273   200052 757100                    STAQ    @ERR+5,,AUTO
         1 000274   200041 631500                    EPPR1   SDA,,AUTO
         1 000275   200051 451500                    STP1    @ERR+4,,AUTO
         1 000276   000003 236000 2                  LDQ     3
         1 000277   200050 756100                    STQ     @ERR+3,,AUTO
         1 000300   000000 236000 2                  LDQ     0
         1 000301   200003 235100                    LDA     @BUF$,,AUTO
         1 000302   200046 757100                    STAQ    @ERR+1,,AUTO
         1 000303   200046 630500                    EPPR0   @ERR+1,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:111  
         1 000304   000001 631400 2                  EPPR1   1
         1 000305   000000 701000 xent               TSX1    FMB$QUEUE
         1 000306   000511 702000 1                  TSX2    ERR1

      526     2184    3                   ENTADDR(NIL),0,Q$) ALTRET(ERR1);
      527     2185    3                IF N$REQ.TYC~='1'B THEN

   2185  1 000307   200037 470500                    LDP0    Q$,,AUTO
         1 000310   000021 236100                    LDQ     17,,PR0
         1 000311   400000 116003                    CMPQ    -131072,DU
         1 000312   000320 600000 1                  TZE     s:2190

      528     2186    4                   DO;   /* I/O ERROR */

      529     2187    4                   CALL LOGERR(2);

   2187  1 000313   000006 236000 2                  LDQ     6
         1 000314   200045 756100                    STQ     SDA+4,,AUTO
         1 000315   001157 701000 1                  TSX1    LOGERR
         1 000316   000000 011000                    NOP     0

      530     2188    4                   END;  /* I/O ERROR */

   2188  1 000317   000322 710000 1                  TRA     s:2191

      531     2189    3                ELSE
      532     2190    3                   CALL VERIFY;

   2190  1 000320   000527 701000 1                  TSX1    VERIFY
         1 000321   000000 011000                    NOP     0

      533     2191    3                END;

   2191  1 000322   200014 235100                    LDA     RREAD,,AUTO
         1 000323   000326 600000 1                  TZE     s:2194
         1 000324   200013 236100                    LDQ     RETRY,,AUTO
         1 000325   000217 601000 1                  TNZ     s:2172
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:112  

      534     2192    2             END;

      535     2193
      536     2194    1          IF RREAD = 1 AND RETRY = 0 THEN

   2194  1 000326   200014 235100                    LDA     RREAD,,AUTO
         1 000327   000001 115007                    CMPA    1,DL
         1 000330   000334 601000 1                  TNZ     DONE
         1 000331   200013 236100                    LDQ     RETRY,,AUTO
         1 000332   000334 601000 1                  TNZ     DONE

      537     2195    2             DO;   /* CANT GET A GOOD GRAN */

      538     2196    2             GOTO ERR;

   2196  1 000333   000515 710000 1                  TRA     ERR

      539     2197    2             END;
      540     2198
      541     2199    1   DONE:  F$DCB.BFR.DA(BUFNUM)=DA;

   2199  1 000334   200004 470500       DONE         LDP0    @BUFNUM,,AUTO
         1 000335   000000 720100                    LXL0    0,,PR0
         1 000336   200005 471500                    LDP1    @DA,,AUTO
         1 000337   200011 473500                    LDP3    JDCB$,,AUTO
         1 000340   100000 236100                    LDQ     0,,PR1
         1 000341   300115 676110                    ERQ     77,X0,PR3
         1 000342   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 000343   300115 656110                    ERSQ    77,X0,PR3

      542     2200    1          IF RETRY<4 THEN

   2200  1 000344   200013 235100                    LDA     RETRY,,AUTO
         1 000345   000004 115007                    CMPA    4,DL
         1 000346   000477 605000 1                  TPL     s:2216

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:113  
      543     2201    2             DO;

      544     2202    2             T$=Q$;                       /* Save current request packet        */

   2202  1 000347   200037 236100                    LDQ     Q$,,AUTO
         1 000350   200040 756100                    STQ     T$,,AUTO

      545     2203    2             CALL NIQ$GET(Q$);

   2203  1 000351   200037 633500                    EPPR3   Q$,,AUTO
         1 000352   200046 453500                    STP3    @ERR+1,,AUTO
         1 000353   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000354   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000355   000000 701000 xent               TSX1    NIQ$GET
         1 000356   000000 011000                    NOP     0

      546     2204    2             N$REQ.STATUS=SAVQ.STATUS;

   2204  1 000357   200032 235100                    LDA     SAVQ,,AUTO
         1 000360   000000 236003                    LDQ     0,DU
         1 000361   200037 470500                    LDP0    Q$,,AUTO
         1 000362   000014 757100                    STAQ    12,,PR0

      547     2205    2             N$REQ.TYC=SAVQ.TYC;

   2205  1 000363   200034 236100                    LDQ     SAVQ+2,,AUTO
         1 000364   200037 470500                    LDP0    Q$,,AUTO
         1 000365   000021 756100                    STQ     17,,PR0

      548     2206    2             N$REQ.REQID=SAVQ.REQID;

   2206  1 000366   200033 720100                    LXL0    SAVQ+1,,AUTO
         1 000367   200037 470500                    LDP0    Q$,,AUTO
         1 000370   000010 740100                    STX0    8,,PR0

      549     2207    2             CALL FMB$LOGERR(CODE,ERRNUM,1,DA,ADDR(SAVBUF),BFR1X,BFR2X,

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:114  
   2207  1 000371   200025 630500                    EPPR0   SAVBUF,,AUTO
         1 000372   200046 450500                    STP0    @ERR+1,,AUTO
         1 000373   200037 631500                    EPPR1   Q$,,AUTO
         1 000374   200061 451500                    STP1    @ERR+12,,AUTO
         1 000375   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000376   200060 756100                    STQ     @ERR+11,,AUTO
         1 000377   200023 633500                    EPPR3   MISC,,AUTO
         1 000400   200057 453500                    STP3    @ERR+10,,AUTO
         1 000401   200022 634500                    EPPR4   BFR3X,,AUTO
         1 000402   200056 454500                    STP4    @ERR+9,,AUTO
         1 000403   200021 635500                    EPPR5   BFR2X,,AUTO
         1 000404   200055 455500                    STP5    @ERR+8,,AUTO
         1 000405   200020 636500                    EPPR6   BFR1X,,AUTO
         1 000406   200054 456500                    STP6    @ERR+7,,AUTO
         1 000407   200046 637500                    EPPR7   @ERR+1,,AUTO
         1 000410   200053 457500                    STP7    @ERR+6,,AUTO
         1 000411   200005 236100                    LDQ     @DA,,AUTO
         1 000412   200052 756100                    STQ     @ERR+5,,AUTO
         1 000413   000000 236000 2                  LDQ     0
         1 000414   200051 756100                    STQ     @ERR+4,,AUTO
         1 000415   200015 630500                    EPPR0   ERRNUM,,AUTO
         1 000416   200050 450500                    STP0    @ERR+3,,AUTO
         1 000417   200016 630500                    EPPR0   CODE,,AUTO
         1 000420   200047 450500                    STP0    @ERR+2,,AUTO
         1 000421   200047 630500                    EPPR0   @ERR+2,,AUTO
         1 000422   000010 631400 2                  EPPR1   8
         1 000423   000000 701000 xent               TSX1    FMB$LOGERR
         1 000424   000000 011000                    NOP     0

      550     2208    2                BFR3X,MISC,,Q$);
      551     2209    2             CALL NIQ$REL(Q$);

   2209  1 000425   200037 630500                    EPPR0   Q$,,AUTO
         1 000426   200046 450500                    STP0    @ERR+1,,AUTO
         1 000427   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000430   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000431   000000 701000 xent               TSX1    NIQ$REL
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:115  
         1 000432   000000 011000                    NOP     0

      552     2210    2             Q$=ADDR(NIL);

   2210  1 000433   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000434   200037 756100                    STQ     Q$,,AUTO

      553     2211    2             CALL FMB$LOGERR(CODE,ERRNUM,2,DA,BUF$,BFR1X,BFR2X,BFR3X,

   2211  1 000435   000004 235007                    LDA     4,DL
         1 000436   200013 135100                    SBLA    RETRY,,AUTO
         1 000437   200046 755100                    STA     @ERR+1,,AUTO
         1 000440   200040 630500                    EPPR0   T$,,AUTO
         1 000441   200061 450500                    STP0    @ERR+12,,AUTO
         1 000442   200060 756100                    STQ     @ERR+11,,AUTO
         1 000443   200046 631500                    EPPR1   @ERR+1,,AUTO
         1 000444   200057 451500                    STP1    @ERR+10,,AUTO
         1 000445   200022 633500                    EPPR3   BFR3X,,AUTO
         1 000446   200056 453500                    STP3    @ERR+9,,AUTO
         1 000447   200021 634500                    EPPR4   BFR2X,,AUTO
         1 000450   200055 454500                    STP4    @ERR+8,,AUTO
         1 000451   200020 635500                    EPPR5   BFR1X,,AUTO
         1 000452   200054 455500                    STP5    @ERR+7,,AUTO
         1 000453   200003 236100                    LDQ     @BUF$,,AUTO
         1 000454   200005 235100                    LDA     @DA,,AUTO
         1 000455   200052 757100                    STAQ    @ERR+5,,AUTO
         1 000456   000006 236000 2                  LDQ     6
         1 000457   200051 756100                    STQ     @ERR+4,,AUTO
         1 000460   200015 636500                    EPPR6   ERRNUM,,AUTO
         1 000461   200050 456500                    STP6    @ERR+3,,AUTO
         1 000462   200016 637500                    EPPR7   CODE,,AUTO
         1 000463   200047 457500                    STP7    @ERR+2,,AUTO
         1 000464   200047 630500                    EPPR0   @ERR+2,,AUTO
         1 000465   000010 631400 2                  EPPR1   8
         1 000466   000000 701000 xent               TSX1    FMB$LOGERR
         1 000467   000000 011000                    NOP     0

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:116  
      554     2212    2                4-RETRY,,T$);
      555     2213    2             CALL NIQ$REL(T$);

   2213  1 000470   200040 630500                    EPPR0   T$,,AUTO
         1 000471   200046 450500                    STP0    @ERR+1,,AUTO
         1 000472   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000473   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000474   000000 701000 xent               TSX1    NIQ$REL
         1 000475   000000 011000                    NOP     0

      556     2214    2             END;

   2214  1 000476   000510 710000 1                  TRA     s:2219

      557     2215    1          ELSE
      558     2216    1             IF Q$~=ADDR(NIL) THEN

   2216  1 000477   200037 236100                    LDQ     Q$,,AUTO
         1 000500   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000501   000510 600000 1                  TZE     s:2219

      559     2217    1                CALL NIQ$REL(Q$);

   2217  1 000502   200037 633500                    EPPR3   Q$,,AUTO
         1 000503   200046 453500                    STP3    @ERR+1,,AUTO
         1 000504   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000505   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000506   000000 701000 xent               TSX1    NIQ$REL
         1 000507   000000 011000                    NOP     0

      560     2218
      561     2219    1             RETURN;

   2219  1 000510   000000 702200 xent               TSX2  ! X66_ARET

      562     2220    1   ERR1:     CALL LOGERR(1);

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:117  
   2220  1 000511   000000 236000 2     ERR1         LDQ     0
         1 000512   200045 756100                    STQ     SDA+4,,AUTO
         1 000513   001157 701000 1                  TSX1    LOGERR
         1 000514   000000 011000                    NOP     0

      563     2221    1   ERR:   IF Q$ ~= ADDR(NIL) THEN

   2221  1 000515   200037 236100       ERR          LDQ     Q$,,AUTO
         1 000516   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000517   000526 600000 1                  TZE     s:2223

      564     2222    1             CALL NIQ$REL(Q$);

   2222  1 000520   200037 630500                    EPPR0   Q$,,AUTO
         1 000521   200046 450500                    STP0    @ERR+1,,AUTO
         1 000522   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000523   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000524   000000 701000 xent               TSX1    NIQ$REL
         1 000525   000000 011000                    NOP     0

      565     2223    1          ALTRETURN;

   2223  1 000526   000000 702200 xent               TSX2  ! X66_AALT

      566     2224               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:118  
      567     2225        /*I*     NAME:     VERIFY
      568     2226                 PURPOSE:  To verify a buffer that we have found.
      569     2227                 DESCRIPTION:
      570     2228
      571     2229                      Depending on the granule type, check the stamp,
      572     2230                 ORG, and level.  Next check NAVX and AVAIL to make sure
      573     2231                 the make sense.  Then check the links if the file has
      574     2232                 any.  Call LOGERR to report any errors we might have
      575     2233                 found.
      576     2234        */
      577     2235               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:119  
      578     2236    1   VERIFY: PROC ALTRET;

   2236  1 000527   200042 741300       VERIFY       STX1  ! SDA+1,,AUTO

      579     2237        /* VERIFY LVL AND ORG IN GRANULE HEADER */
      580     2238    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM));

   2238  1 000530   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 000531   000000 720100                    LXL0    0,,PR0
         1 000532   200011 471500                    LDP1    JDCB$,,AUTO
         1 000533   100115 236110                    LDQ     77,X0,PR1
         1 000534   000033 772000                    QRL     27
         1 000535   000037 376007                    ANQ     31,DL
         1 000536   000000 236006 xsym               LDQ     FM$BUF$,QL
         1 000537   200003 473500                    LDP3    @BUF$,,AUTO
         1 000540   300000 756100                    STQ     0,,PR3

      581     2239    2          STAMP.HASH=F$DCB.HASH;          /* File hash                          */

   2239  1 000541   200011 471500                    LDP1    JDCB$,,AUTO
         1 000542   100073 236100                    LDQ     59,,PR1
         1 000543   200017 552170                    STBQ    STAMP,'70'O,AUTO

      582     2240    2          STAMP.GMOD=DA;                  /* LOW ORDER 9 BITS OF DISK ADDR      */

   2240  1 000544   200005 474500                    LDP4    @DA,,AUTO
         1 000545   400000 236100                    LDQ     0,,PR4
         1 000546   200017 552104                    STBQ    STAMP,'04'O,AUTO

      583     2241        /* */
      584     2242    3          DO CASE(GTYP);

   2242  1 000547   200036 235100                    LDA     GTYP,,AUTO
         1 000550   000010 115007                    CMPA    8,DL
         1 000551   000553 602005 1                  TNC     s:2242+4,AL
         1 000552   001010 710000 1                  TRA     s:2325
         1 000553   001010 710000 1                  TRA     s:2325
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:120  
         1 000554   000563 710000 1                  TRA     s:2244
         1 000555   000563 710000 1                  TRA     s:2244
         1 000556   000563 710000 1                  TRA     s:2244
         1 000557   000641 710000 1                  TRA     s:2271
         1 000560   000747 710000 1                  TRA     s:2303
         1 000561   000655 710000 1                  TRA     s:2279
         1 000562   000652 710000 1                  TRA     s:2275

      585     2243    3             CASE(FMGTGP,FMGTPAD,FMGTMAD);

      586     2244    3                STAMP.HASH=FM_HASH(GTYP);

   2244  1 000563   000000 236005 xsym               LDQ     FM_HASH,AL
         1 000564   000011 736000                    QLS     9
         1 000565   200017 552170                    STBQ    STAMP,'70'O,AUTO

      587     2245    3   DRCTRY:      IF FM$GRAN.STAMP~=STAMP THEN

   2245  1 000566   200003 470500       DRCTRY       LDP0    @BUF$,,AUTO
         1 000567   000000 471500                    LDP1    0,,PR0
         1 000570   100000 236100                    LDQ     0,,PR1
         1 000571   200017 116100                    CMPQ    STAMP,,AUTO
         1 000572   000601 600000 1                  TZE     s:2251

      588     2246    4                   DO;

      589     2247    4                   CALL LOGERR(5);

   2247  1 000573   000011 236000 2                  LDQ     9
         1 000574   200045 756100                    STQ     SDA+4,,AUTO
         1 000575   001157 701000 1                  TSX1    LOGERR
         1 000576   000000 011000                    NOP     0

      590     2248    4                   ALTRETURN;

   2248  1 000577   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000600   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:121  

      591     2249    4                   END;
      592     2250
      593     2251    3                IF FM$GRAN.ORG~=0 THEN

   2251  1 000601   100001 236100                    LDQ     1,,PR1
         1 000602   036000 316007                    CANQ    15360,DL
         1 000603   000612 600000 1                  TZE     s:2257

      594     2252    4                   DO;

      595     2253    4                   CALL LOGERR(3);

   2253  1 000604   000012 236000 2                  LDQ     10
         1 000605   200045 756100                    STQ     SDA+4,,AUTO
         1 000606   001157 701000 1                  TSX1    LOGERR
         1 000607   000000 011000                    NOP     0

      596     2254    4                   ALTRETURN;

   2254  1 000610   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000611   000000 702211                    TSX2  ! 0,X1

      597     2255    4                   END;
      598     2256
      599     2257    3                IF FM$GRAN.LVL~=GTYP THEN

   2257  1 000612   100001 236100                    LDQ     1,,PR1
         1 000613   000016 772000                    QRL     14
         1 000614   000007 376007                    ANQ     7,DL
         1 000615   200036 116100                    CMPQ    GTYP,,AUTO
         1 000616   001010 600000 1                  TZE     s:2325

      600     2258    3                   IF GTYP~=FMGTFDSTAR THEN

   2258  1 000617   200036 235100                    LDA     GTYP,,AUTO
         1 000620   000007 115007                    CMPA    7,DL
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:122  
         1 000621   000630 600000 1                  TZE     s:2264

      601     2259    4                   DO;

      602     2260    4                   CALL LOGERR(4);

   2260  1 000622   000013 236000 2                  LDQ     11
         1 000623   200045 756100                    STQ     SDA+4,,AUTO
         1 000624   001157 701000 1                  TSX1    LOGERR
         1 000625   000000 011000                    NOP     0

      603     2261    4                   ALTRETURN;

   2261  1 000626   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000627   000000 702211                    TSX2  ! 0,X1

      604     2262    4                   END;
      605     2263    3                ELSE
      606     2264    3                   IF FM$GRAN.LVL~=FMGTFD THEN

   2264  1 000630   000016 736000                    QLS     14
         1 000631   200000 116007                    CMPQ    65536,DL
         1 000632   001010 600000 1                  TZE     s:2325

      607     2265    4                      DO;

      608     2266    4                      CALL LOGERR(4);

   2266  1 000633   000013 236000 2                  LDQ     11
         1 000634   200045 756100                    STQ     SDA+4,,AUTO
         1 000635   001157 701000 1                  TSX1    LOGERR
         1 000636   000000 011000                    NOP     0

      609     2267    4                      ALTRETURN;

   2267  1 000637   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000640   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:123  

      610     2268    4                      END;
      611     2269
      612     2270    3             CASE(FMGTFD);

      613     2271    3                CALL FMO$FDHASH(JDCB$,STAMP.HASH);

   2271  1 000641   200017 635500                    EPPR5   STAMP,,AUTO
         1 000642   200047 455500                    STP5    @ERR+2,,AUTO
         1 000643   200011 636500                    EPPR6   JDCB$,,AUTO
         1 000644   200046 456500                    STP6    @ERR+1,,AUTO
         1 000645   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 000646   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000647   000000 701000 xent               TSX1    FMO$FDHASH
         1 000650   000000 011000                    NOP     0

      614     2272    3                GOTO DRCTRY;

   2272  1 000651   000566 710000 1                  TRA     DRCTRY

      615     2273
      616     2274    3             CASE(FMGTFDSTAR);

      617     2275    3                STAMP.HASH=F$DCB.HASH;

   2275  1 000652   100073 236100                    LDQ     59,,PR1
         1 000653   200017 552170                    STBQ    STAMP,'70'O,AUTO

      618     2276    3                GOTO DRCTRY;

   2276  1 000654   000566 710000 1                  TRA     DRCTRY

      619     2277
      620     2278    3             CASE(FMGTFILE);

      621     2279    3                IF FM$GRAN.STAMP~=STAMP THEN

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:124  
   2279  1 000655   300000 475500                    LDP5    0,,PR3
         1 000656   500000 236100                    LDQ     0,,PR5
         1 000657   200017 116100                    CMPQ    STAMP,,AUTO
         1 000660   000700 600000 1                  TZE     s:2290

      622     2280    4                   IF F$DCB.ORG=%RELATIVE# THEN DO;

   2280  1 000661   100032 236100                    LDQ     26,,PR1
         1 000662   777000 376003                    ANQ     -512,DU
         1 000663   005000 116003                    CMPQ    2560,DU
         1 000664   000672 601000 1                  TNZ     s:2286

      623     2281    4                   B$JIT.ERR=ERRDI;

   2281  1 000665   000047 236000 0                  LDQ     ERRDI
         1 000666   000000 476400 xsym               LDP6    B$JIT$
         1 000667   600012 756100                    STQ     10,,PR6

      624     2282    4                   RETURN;

   2282  1 000670   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000671   000001 702211                    TSX2  ! 1,X1

      625     2283    4                   END;
      626     2284    3                ELSE
      627     2285    4                   DO;

      628     2286    4                   CALL LOGERR(5);

   2286  1 000672   000011 236000 2                  LDQ     9
         1 000673   200045 756100                    STQ     SDA+4,,AUTO
         1 000674   001157 701000 1                  TSX1    LOGERR
         1 000675   000000 011000                    NOP     0

      629     2287    4                   ALTRETURN;

   2287  1 000676   200042 221300                    LDX1  ! SDA+1,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:125  
         1 000677   000000 702211                    TSX2  ! 0,X1

      630     2288    4                   END;
      631     2289
      632     2290    3                IF F$DCB.ORG ~= FM$GRAN.ORG THEN

   2290  1 000700   500001 236100                    LDQ     1,,PR5
         1 000701   000012 772000                    QRL     10
         1 000702   000017 376007                    ANQ     15,DL
         1 000703   200046 756100                    STQ     @ERR+1,,AUTO
         1 000704   100032 236100                    LDQ     26,,PR1
         1 000705   000033 772000                    QRL     27
         1 000706   200046 116100                    CMPQ    @ERR+1,,AUTO
         1 000707   000716 600000 1                  TZE     s:2296

      633     2291    4                   DO;

      634     2292    4                   CALL LOGERR(3);

   2292  1 000710   000012 236000 2                  LDQ     10
         1 000711   200045 756100                    STQ     SDA+4,,AUTO
         1 000712   001157 701000 1                  TSX1    LOGERR
         1 000713   000000 011000                    NOP     0

      635     2293    4                   ALTRETURN;

   2293  1 000714   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000715   000000 702211                    TSX2  ! 0,X1

      636     2294    4                   END;
      637     2295
      638     2296    3               IF F$DCB.LVL~=FM$GRAN.LVL AND ~F$DCB.SEZ_OK THEN

   2296  1 000716   300000 475500                    LDP5    0,,PR3
         1 000717   500001 236100                    LDQ     1,,PR5
         1 000720   000016 772000                    QRL     14
         1 000721   000007 376007                    ANQ     7,DL
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:126  
         1 000722   200046 756100                    STQ     @ERR+1,,AUTO
         1 000723   100067 236100                    LDQ     55,,PR1
         1 000724   000036 772000                    QRL     30
         1 000725   000007 376007                    ANQ     7,DL
         1 000726   200046 116100                    CMPQ    @ERR+1,,AUTO
         1 000727   001010 600000 1                  TZE     s:2325
         1 000730   100064 236100                    LDQ     52,,PR1
         1 000731   000017 736000                    QLS     15
         1 000732   400000 376003                    ANQ     -131072,DU
         1 000733   400000 676003                    ERQ     -131072,DU
         1 000734   001010 600000 1                  TZE     s:2325

      639     2297    4                  IF F$DCB.ACS ~= %BLOCK# THEN DO;

   2297  1 000735   100036 236100                    LDQ     30,,PR1
         1 000736   000777 376007                    ANQ     511,DL
         1 000737   000003 116007                    CMPQ    3,DL
         1 000740   001010 600000 1                  TZE     s:2325

      640     2298    4                     CALL LOGERR(4);

   2298  1 000741   000013 236000 2                  LDQ     11
         1 000742   200045 756100                    STQ     SDA+4,,AUTO
         1 000743   001157 701000 1                  TSX1    LOGERR
         1 000744   000000 011000                    NOP     0

      641     2299    4                     ALTRETURN;

   2299  1 000745   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000746   000000 702211                    TSX2  ! 0,X1

      642     2300    4                     END;
      643     2301
      644     2302    3             CASE(FMGTFIT);

      645     2303    3                IF FM$GRAN.LVL=6 THEN

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:127  
   2303  1 000747   300000 475500                    LDP5    0,,PR3
         1 000750   500001 236100                    LDQ     1,,PR5
         1 000751   340000 376007                    ANQ     114688,DL
         1 000752   300000 116007                    CMPQ    98304,DL
         1 000753   000766 601000 1                  TNZ     s:2312

      646     2304    3                   IF FM$GRAN.STAMP.GMOD~=STAMP.GMOD THEN

   2304  1 000754   500000 236100                    LDQ     0,,PR5
         1 000755   200017 676100                    ERQ     STAMP,,AUTO
         1 000756   000777 376007                    ANQ     511,DL
         1 000757   001010 600000 1                  TZE     s:2325

      647     2305    4                      DO;

      648     2306    4                      CALL LOGERR(5);

   2306  1 000760   000011 236000 2                  LDQ     9
         1 000761   200045 756100                    STQ     SDA+4,,AUTO
         1 000762   001157 701000 1                  TSX1    LOGERR
         1 000763   000000 011000                    NOP     0

      649     2307    4                      ALTRETURN;

   2307  1 000764   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000765   000000 702211                    TSX2  ! 0,X1

      650     2308    4                      END;
      651     2309    3                   ELSE ;
      652     2310    3                ELSE
      653     2311    4                   DO;

      654     2312    4                   IF FM$GRAN.STAMP.GMOD ~= 0 THEN

   2312  1 000766   500000 236100                    LDQ     0,,PR5
         1 000767   000777 316007                    CANQ    511,DL
         1 000770   000777 600000 1                  TZE     s:2317
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:128  

      655     2313    5                      DO;

      656     2314    5                      CALL LOGERR(5);

   2314  1 000771   000011 236000 2                  LDQ     9
         1 000772   200045 756100                    STQ     SDA+4,,AUTO
         1 000773   001157 701000 1                  TSX1    LOGERR
         1 000774   000000 011000                    NOP     0

      657     2315    5                      ALTRETURN;

   2315  1 000775   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 000776   000000 702211                    TSX2  ! 0,X1

      658     2316    5                      END;
      659     2317    4                   IF FM$GRAN.LVL ~= 0 THEN

   2317  1 000777   500001 236100                    LDQ     1,,PR5
         1 001000   340000 316007                    CANQ    114688,DL
         1 001001   001010 600000 1                  TZE     s:2325

      660     2318    5                      DO;

      661     2319    5                      CALL LOGERR(4);

   2319  1 001002   000013 236000 2                  LDQ     11
         1 001003   200045 756100                    STQ     SDA+4,,AUTO
         1 001004   001157 701000 1                  TSX1    LOGERR
         1 001005   000000 011000                    NOP     0

      662     2320    5                      ALTRETURN;

   2320  1 001006   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001007   000000 702211                    TSX2  ! 0,X1

      663     2321    5                      END;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:129  
      664     2322    4                END;
      665     2323    3          END;

      666     2324        /* */
      667     2325    2          IF FM$GRAN.NAVX+FM$GRAN.AVAIL > 1024 THEN

   2325  1 001010   200003 470500                    LDP0    @BUF$,,AUTO
         1 001011   000000 471500                    LDP1    0,,PR0
         1 001012   100001 236100                    LDQ     1,,PR1
         1 001013   001777 376007                    ANQ     1023,DL
         1 001014   200046 756100                    STQ     @ERR+1,,AUTO
         1 001015   100001 236100                    LDQ     1,,PR1
         1 001016   000022 772000                    QRL     18
         1 001017   200046 036100                    ADLQ    @ERR+1,,AUTO
         1 001020   002001 116007                    CMPQ    1025,DL
         1 001021   001030 602000 1                  TNC     s:2331

      668     2326    3             DO;

      669     2327    3             CALL LOGERR(6);

   2327  1 001022   000014 236000 2                  LDQ     12
         1 001023   200045 756100                    STQ     SDA+4,,AUTO
         1 001024   001157 701000 1                  TSX1    LOGERR
         1 001025   000000 011000                    NOP     0

      670     2328    3             ALTRETURN;

   2328  1 001026   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001027   000000 702211                    TSX2  ! 0,X1

      671     2329    3             END;
      672     2330
      673     2331    2          IF NOT FM$GRAN.HDR THEN

   2331  1 001030   000000 471500                    LDP1    0,,PR0
         1 001031   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:130  
         1 001032   400000 316007                    CANQ    -131072,DL
         1 001033   001036 601000 1                  TNZ     s:2334

      674     2332    2             RETURN;

   2332  1 001034   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001035   000001 702211                    TSX2  ! 1,X1

      675     2333        /* */
      676     2334    2          IF FM$GRAN.FCEX>FM$GRAN.NAVX THEN

   2334  1 001036   100001 220100                    LDX0    1,,PR1
         1 001037   100002 100100                    CMPX0   2,,PR1
         1 001040   001047 603000 1                  TRC     s:2340

      677     2335    3             DO;

      678     2336    3             CALL LOGERR(7);

   2336  1 001041   000015 236000 2                  LDQ     13
         1 001042   200045 756100                    STQ     SDA+4,,AUTO
         1 001043   001157 701000 1                  TSX1    LOGERR
         1 001044   000000 011000                    NOP     0

      679     2337    3             ALTRETURN;

   2337  1 001045   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001046   000000 702211                    TSX2  ! 0,X1

      680     2338    3             END;
      681     2339        /* */
      682     2340    2          IF GTYP~=FMGTFIT THEN

   2340  1 001047   200036 235100                    LDA     GTYP,,AUTO
         1 001050   000005 115007                    CMPA    5,DL
         1 001051   001124 600000 1                  TZE     s:2355

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:131  
      683     2341    3             DO;   /* DONT CHECK FIT LINKS */

      684     2342    3             TDA=BUF$->FM$GRAN.BLINK;

   2342  1 001052   100003 235100                    LDA     3,,PR1
         1 001053   200012 755100                    STA     TDA,,AUTO

      685     2343    3             IF TDA~=0 THEN

   2343  1 001054   001076 600000 1                  TZE     s:2348

      686     2344    3                IF BUF$->FM$GRAN.ORG>0 THEN

   2344  1 001055   000000 471500                    LDP1    0,,PR0
         1 001056   100001 236100                    LDQ     1,,PR1
         1 001057   036000 316007                    CANQ    15360,DL
         1 001060   001070 600000 1                  TZE     s:2347

      687     2345    3                   CALL FAF$CHKDAFR(TDA) ALTRET(ERR8);

   2345  1 001061   200012 633500                    EPPR3   TDA,,AUTO
         1 001062   200046 453500                    STP3    @ERR+1,,AUTO
         1 001063   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001065   000000 701000 xent               TSX1    FAF$CHKDAFR
         1 001066   001151 702000 1                  TSX2    ERR8
         1 001067   001076 710000 1                  TRA     s:2348

      688     2346    3                ELSE                      /* DIRECTORY - BLINK IS SET-RELATIVE  */
      689     2347    3                   CALL FMB$CHKDA(TDA) ALTRET(ERR8);

   2347  1 001070   200012 633500                    EPPR3   TDA,,AUTO
         1 001071   200046 453500                    STP3    @ERR+1,,AUTO
         1 001072   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001073   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001074   000000 701000 xent               TSX1    FMB$CHKDA
         1 001075   001151 702000 1                  TSX2    ERR8
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:132  

      690     2348    3                TDA=BUF$->FM$GRAN.FLINK;

   2348  1 001076   200003 470500                    LDP0    @BUF$,,AUTO
         1 001077   000000 471500                    LDP1    0,,PR0
         1 001100   100004 235100                    LDA     4,,PR1
         1 001101   200012 755100                    STA     TDA,,AUTO

      691     2349    3             IF TDA~=0 THEN

   2349  1 001102   001124 600000 1                  TZE     s:2355

      692     2350    3                IF BUF$->FM$GRAN.ORG>0 THEN

   2350  1 001103   000000 471500                    LDP1    0,,PR0
         1 001104   100001 236100                    LDQ     1,,PR1
         1 001105   036000 316007                    CANQ    15360,DL
         1 001106   001116 600000 1                  TZE     s:2353

      693     2351    3                   CALL FAF$CHKDAFR(TDA) ALTRET(ERR8);

   2351  1 001107   200012 633500                    EPPR3   TDA,,AUTO
         1 001110   200046 453500                    STP3    @ERR+1,,AUTO
         1 001111   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001112   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001113   000000 701000 xent               TSX1    FAF$CHKDAFR
         1 001114   001151 702000 1                  TSX2    ERR8
         1 001115   001124 710000 1                  TRA     s:2355

      694     2352    3                ELSE                      /* DIRECTORY - FLINK IS SET-RELATIVE  */
      695     2353    3                   CALL FMB$CHKDA(TDA) ALTRET(ERR8);

   2353  1 001116   200012 633500                    EPPR3   TDA,,AUTO
         1 001117   200046 453500                    STP3    @ERR+1,,AUTO
         1 001120   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001122   000000 701000 xent               TSX1    FMB$CHKDA
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:133  
         1 001123   001151 702000 1                  TSX2    ERR8

      696     2354    3             END;

      697     2355    2          IF ADDR(LCDA) ~= ADDR(NIL) AND LCDA >= 0 THEN

   2355  1 001124   200007 236100                    LDQ     @LCDA,,AUTO
         1 001125   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001126   001147 600000 1                  TZE     s:2361
         1 001127   200007 470500                    LDP0    @LCDA,,AUTO
         1 001130   000000 235100                    LDA     0,,PR0
         1 001131   001147 604000 1                  TMI     s:2361

      698     2356    2             IF LCDA~=FM$GRAN.BLINK AND LCDA~=FM$GRAN.FLINK THEN

   2356  1 001132   200003 471500                    LDP1    @BUF$,,AUTO
         1 001133   100000 473500                    LDP3    0,,PR1
         1 001134   000000 236100                    LDQ     0,,PR0
         1 001135   300003 116100                    CMPQ    3,,PR3
         1 001136   001147 600000 1                  TZE     s:2361
         1 001137   300004 116100                    CMPQ    4,,PR3
         1 001140   001147 600000 1                  TZE     s:2361

      699     2357    3                DO;

      700     2358    3                CALL LOGERR(10);

   2358  1 001141   000016 236000 2                  LDQ     14
         1 001142   200045 756100                    STQ     SDA+4,,AUTO
         1 001143   001157 701000 1                  TSX1    LOGERR
         1 001144   000000 011000                    NOP     0

      701     2359    3                ALTRETURN;

   2359  1 001145   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001146   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:134  
      702     2360    3                END;
      703     2361    2          RETURN;

   2361  1 001147   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001150   000001 702211                    TSX2  ! 1,X1

      704     2362    2   ERR8:  CALL LOGERR(8);

   2362  1 001151   000017 236000 2     ERR8         LDQ     15
         1 001152   200045 756100                    STQ     SDA+4,,AUTO
         1 001153   001157 701000 1                  TSX1    LOGERR
         1 001154   000000 011000                    NOP     0

      705     2363    2          ALTRETURN;

   2363  1 001155   200042 221300                    LDX1  ! SDA+1,,AUTO
         1 001156   000000 702211                    TSX2  ! 0,X1

      706     2364    2          END VERIFY;
      707     2365               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:135  
      708     2366        /*I*     NAME:     LOGERR
      709     2367                 PURPOSE:  To report any errors we found while checking out
      710     2368                           the granule
      711     2369                 DESCRIPTION:
      712     2370
      713     2371                      Use MISC to save some interesting information depending
      714     2372                 on the error number.  Get the error type.  If the RETRY
      715     2373                 value is greater than 5, then snap to try to find out
      716     2374                 what went wrong.  If retry is greater than zero, then
      717     2375                 maybe we got a disk error, try again.
      718     2376
      719     2377                      Log the error, the set the error code in the JIT.
      720     2378        */
      721     2379                 %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:136  
      722     2380    1   LOGERR: PROC(ERR);

   2380  1 001157   200044 741300       LOGERR       STX1  ! SDA+3,,AUTO

      723     2381    2   DCL ERR SBIN;
      724     2382        /* */
      725     2383    2          ERRNUM=ERR;

   2383  1 001160   200045 470500                    LDP0    @ERR,,AUTO
         1 001161   000000 235100                    LDA     0,,PR0
         1 001162   200015 755100                    STA     ERRNUM,,AUTO

      726     2384    3          DO CASE(ERR);

   2384  1 001163   000000 235100                    LDA     0,,PR0
         1 001164   000013 115007                    CMPA    11,DL
         1 001165   001167 602005 1                  TNC     s:2384+4,AL
         1 001166   001304 710000 1                  TRA     s:2425
         1 001167   001304 710000 1                  TRA     s:2425
         1 001170   001202 710000 1                  TRA     s:2386
         1 001171   001236 710000 1                  TRA     s:2398
         1 001172   001242 710000 1                  TRA     s:2401
         1 001173   001244 710000 1                  TRA     s:2404
         1 001174   001252 710000 1                  TRA     s:2407
         1 001175   001255 710000 1                  TRA     s:2410
         1 001176   001257 710000 1                  TRA     s:2413
         1 001177   001261 710000 1                  TRA     s:2416
         1 001200   001304 710000 1                  TRA     s:2425
         1 001201   001301 710000 1                  TRA     s:2422

      727     2385    3             CASE(1);   /* BAD DA */

      728     2386    3                CALL FMB$ERRTYP(CODE);

   2386  1 001202   200016 631500                    EPPR1   CODE,,AUTO
         1 001203   200046 451500                    STP1    @ERR+1,,AUTO
         1 001204   200046 630500                    EPPR0   @ERR+1,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:137  
         1 001205   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001206   000000 701000 xent               TSX1    FMB$ERRTYP
         1 001207   000000 011000                    NOP     0

      729     2387    3                BFR1X=0;

   2387  1 001210   200020 450100                    STZ     BFR1X,,AUTO

      730     2388    3                BFR2X=0;

   2388  1 001211   200021 450100                    STZ     BFR2X,,AUTO

      731     2389    3                BFR3X=0;

   2389  1 001212   200022 450100                    STZ     BFR3X,,AUTO

      732     2390    3                BUF$=ADDR(NIL);

   2390  1 001213   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001214   200003 470500                    LDP0    @BUF$,,AUTO
         1 001215   000000 756100                    STQ     0,,PR0

      733     2391    3                IF DA > FM_FRMAX OR F$DCB.CFU$=ADDR(NIL) THEN

   2391  1 001216   200005 471500                    LDP1    @DA,,AUTO
         1 001217   000000 236000 xsym               LDQ     FM_FRMAX
         1 001220   100000 116100                    CMPQ    0,,PR1
         1 001221   001226 602000 1                  TNC     s:2392
         1 001222   200011 473500                    LDP3    JDCB$,,AUTO
         1 001223   300066 236100                    LDQ     54,,PR3
         1 001224   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001225   001231 601000 1                  TNZ     s:2394

      734     2392    3                   MISC=-1;

   2392  1 001226   000001 335007                    LCA     1,DL
         1 001227   200023 755100                    STA     MISC,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:138  
         1 001230   001235 710000 1                  TRA     s:2395

      735     2393    3                ELSE
      736     2394    3                   MISC=F$DCB.CFU$->FM$CFU.UGRANS;

   2394  1 001231   300066 474500                    LDP4    54,,PR3
         1 001232   400004 236100                    LDQ     4,,PR4
         1 001233   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001234   200023 756100                    STQ     MISC,,AUTO

      737     2395    3                GOTO LOG;

   2395  1 001235   001467 710000 1                  TRA     LOG

      738     2396
      739     2397    3             CASE(2);

      740     2398    3                MISC=BITBIN(N$REQ.TYC);

   2398  1 001236   200037 471500                    LDP1    Q$,,AUTO
         1 001237   100021 235100                    LDA     17,,PR1
         1 001240   200023 755100                    STA     MISC,,AUTO
         1 001241   001304 710000 1                  TRA     s:2425

      741     2399
      742     2400    3             CASE(3);   /* ORG WRONG */

      743     2401    3                MISC=0;

   2401  1 001242   200023 450100                    STZ     MISC,,AUTO
         1 001243   001304 710000 1                  TRA     s:2425

      744     2402
      745     2403    3             CASE(4);   /* LVL WRONG */

      746     2404    3                MISC=F$DCB.LVL;

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:139  
   2404  1 001244   200011 471500                    LDP1    JDCB$,,AUTO
         1 001245   100067 236100                    LDQ     55,,PR1
         1 001246   000036 772000                    QRL     30
         1 001247   000007 376007                    ANQ     7,DL
         1 001250   200023 756100                    STQ     MISC,,AUTO
         1 001251   001304 710000 1                  TRA     s:2425

      747     2405
      748     2406    3             CASE(5);   /* STAMP WRONG  */

      749     2407    3                MISC=STMPUBIN;

   2407  1 001252   200017 236100                    LDQ     STAMP,,AUTO
         1 001253   200023 756100                    STQ     MISC,,AUTO
         1 001254   001304 710000 1                  TRA     s:2425

      750     2408
      751     2409    3             CASE(6);   /* NAVX+AVAIL BAD */

      752     2410    3                MISC=0;

   2410  1 001255   200023 450100                    STZ     MISC,,AUTO
         1 001256   001304 710000 1                  TRA     s:2425

      753     2411
      754     2412    3             CASE(7);   /* FECX TOO LARGE */

      755     2413    3                MISC=0;

   2413  1 001257   200023 450100                    STZ     MISC,,AUTO
         1 001260   001304 710000 1                  TRA     s:2425

      756     2414
      757     2415    3             CASE(8);   /* BLINK OR FLINK IS BAD DISC ADDRESS */

      758     2416    3                IF DA > FM_FRMAX OR F$DCB.CFU$=ADDR(NIL) THEN

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:140  
   2416  1 001261   200005 471500                    LDP1    @DA,,AUTO
         1 001262   000000 236000 xsym               LDQ     FM_FRMAX
         1 001263   100000 116100                    CMPQ    0,,PR1
         1 001264   001271 602000 1                  TNC     s:2417
         1 001265   200011 473500                    LDP3    JDCB$,,AUTO
         1 001266   300066 236100                    LDQ     54,,PR3
         1 001267   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001270   001274 601000 1                  TNZ     s:2419

      759     2417    3                   MISC=-1;

   2417  1 001271   000001 336007                    LCQ     1,DL
         1 001272   200023 756100                    STQ     MISC,,AUTO
         1 001273   001304 710000 1                  TRA     s:2425

      760     2418    3                ELSE
      761     2419    3                   MISC=F$DCB.CFU$->FM$CFU.UGRANS;

   2419  1 001274   300066 474500                    LDP4    54,,PR3
         1 001275   400004 236100                    LDQ     4,,PR4
         1 001276   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001277   200023 756100                    STQ     MISC,,AUTO
         1 001300   001304 710000 1                  TRA     s:2425

      762     2420
      763     2421    3             CASE(10);

      764     2422    3                MISC=LCDA;

   2422  1 001301   200007 471500                    LDP1    @LCDA,,AUTO
         1 001302   100000 235100                    LDA     0,,PR1
         1 001303   200023 755100                    STA     MISC,,AUTO

      765     2423    3          END;   /* CASE */

      766     2424
      767     2425    2          CALL FMB$ERRTYP(CODE);          /* CALC ERROR CODE                    */
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:141  

   2425  1 001304   200016 631500                    EPPR1   CODE,,AUTO
         1 001305   200046 451500                    STP1    @ERR+1,,AUTO
         1 001306   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001307   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001310   000000 701000 xent               TSX1    FMB$ERRTYP
         1 001311   000000 011000                    NOP     0

      768     2426    2          BFR1X=BFRTBL1(ERRNUM);

   2426  1 001312   200015 720100                    LXL0    ERRNUM,,AUTO
         1 001313   000000 236010 0                  LDQ     BFRTBL1,X0
         1 001314   000041 772000                    QRL     33
         1 001315   200020 756100                    STQ     BFR1X,,AUTO

      769     2427    2          BFR2X=BFRTBL2(ERRNUM);

   2427  1 001316   000013 236010 0                  LDQ     BFRTBL2,X0
         1 001317   000041 772000                    QRL     33
         1 001320   200021 756100                    STQ     BFR2X,,AUTO

      770     2428    2          BFR3X=BFRTBL3(ERRNUM);

   2428  1 001321   000026 236010 0                  LDQ     BFRTBL3,X0
         1 001322   000041 772000                    QRL     33
         1 001323   200022 756100                    STQ     BFR3X,,AUTO

      771     2429
      772     2430    2          IF RETRY>=4 THEN

   2430  1 001324   200013 235100                    LDA     RETRY,,AUTO
         1 001325   000004 115007                    CMPA    4,DL
         1 001326   001352 604000 1                  TMI     s:2442

      773     2431    3             DO;

      774     2432    3             IF BUF$~=ADDR(NIL) THEN
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:142  

   2432  1 001327   200003 470500                    LDP0    @BUF$,,AUTO
         1 001330   000000 236100                    LDQ     0,,PR0
         1 001331   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001332   001337 600000 1                  TZE     s:2434

      775     2433    3                SAVBUF=FM$GRAN;           /* Save bad header                    */

   2433  1 001333   000000 471500                    LDP1    0,,PR0
         1 001334   000100 100500                    MLR     fill='000'O
         1 001335   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20
         1 001336   200025 000024                    ADSC9   SAVBUF,,AUTO             cn=0,n=20

      776     2434    3             IF Q$~=ADDR(NIL) THEN

   2434  1 001337   200037 236100                    LDQ     Q$,,AUTO
         1 001340   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001341   001352 600000 1                  TZE     s:2442

      777     2435    4                DO;

      778     2436    4                SAVQ.STATUS=N$REQ.STATUS;

   2436  1 001342   200037 471500                    LDP1    Q$,,AUTO
         1 001343   100014 236100                    LDQ     12,,PR1
         1 001344   200032 756100                    STQ     SAVQ,,AUTO

      779     2437    4                SAVQ.TYC=N$REQ.TYC;

   2437  1 001345   100021 236100                    LDQ     17,,PR1
         1 001346   200034 756100                    STQ     SAVQ+2,,AUTO

      780     2438    4                SAVQ.REQID=N$REQ.REQID;

   2438  1 001347   100010 236100                    LDQ     8,,PR1
         1 001350   000022 772000                    QRL     18
         1 001351   200033 756100                    STQ     SAVQ+1,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:143  

      781     2439    4                END;

      782     2440    3             END;

      783     2441
      784     2442    2          IF RETRY>=5 THEN

   2442  1 001352   000005 115007                    CMPA    5,DL
         1 001353   001435 604000 1                  TMI     s:2467

      785     2443    2             IF ERRNUM=5 AND FM$GRAN.STAMP.HASH=0 AND GTYP=FMGTFILE THEN

   2443  1 001354   200015 236100                    LDQ     ERRNUM,,AUTO
         1 001355   000005 116007                    CMPQ    5,DL
         1 001356   001373 601000 1                  TNZ     s:2450
         1 001357   200003 470500                    LDP0    @BUF$,,AUTO
         1 001360   000000 471500                    LDP1    0,,PR0
         1 001361   100000 236100                    LDQ     0,,PR1
         1 001362   000020 316000 2                  CANQ    16
         1 001363   001373 601000 1                  TNZ     s:2450
         1 001364   200036 235100                    LDA     GTYP,,AUTO
         1 001365   000006 115007                    CMPA    6,DL
         1 001366   001373 601000 1                  TNZ     s:2450

      786     2444    3                DO;

      787     2445    3                RREAD=1;

   2445  1 001367   000001 235007                    LDA     1,DL
         1 001370   200014 755100                    STA     RREAD,,AUTO

      788     2446    3                RETURN;

   2446  1 001371   200044 221300                    LDX1  ! SDA+3,,AUTO
         1 001372   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:144  
      789     2447    3                END;
      790     2448    2             ELSE
      791     2449    3                DO;

      792     2450    3                IF FLAG = 1 THEN

   2450  1 001373   200024 235100                    LDA     FLAG,,AUTO
         1 001374   000001 115007                    CMPA    1,DL
         1 001375   001400 601000 1                  TNZ     s:2452

      793     2451    3                   CALL SC_FMD100;

   2451  1 001376   000000 713400 xsym               CLIMB   SC_FMD100
         1 001377   000000 600000 xsid               climb   nvectors=         0

      794     2452    3                IF F$DCB.BFR1.CX(BUFNUM) > 0 THEN

   2452  1 001400   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 001401   000000 720100                    LXL0    0,,PR0
         1 001402   200011 471500                    LDP1    JDCB$,,AUTO
         1 001403   100122 721110                    LXL1    82,X0,PR1
         1 001404   001427 600000 1                  TZE     s:2458

      795     2453    4                   DO;

      796     2454    4                   FMC$CACHETBL.FLAGS.ERR(F$DCB.BFR1.CX(BUFNUM))='1'B;

   2454  1 001405   100122 236110                    LDQ     82,X0,PR1
         1 001406   777777 376007                    ANQ     -1,DL
         1 001407   000006 402007                    MPY     6,DL
         1 001410   000000 473400 xsym               LDP3    FMC_CACHE$
         1 001411   000000 622006                    EAX2    0,QL
         1 001412   000002 236007                    LDQ     2,DL
         1 001413   300004 256112                    ORSQ    4,X2,PR3

      797     2455    4                   CALL FMC$FINISH(BUFNUM, 0, 0, FLAG);

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:145  
   2455  1 001414   200024 631500                    EPPR1   FLAG,,AUTO
         1 001415   200051 451500                    STP1    @ERR+4,,AUTO
         1 001416   000004 236000 2                  LDQ     4
         1 001417   200050 756100                    STQ     @ERR+3,,AUTO
         1 001420   200004 235100                    LDA     @BUFNUM,,AUTO
         1 001421   200046 757100                    STAQ    @ERR+1,,AUTO
         1 001422   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001423   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001424   000000 701000 xent               TSX1    FMC$FINISH
         1 001425   000000 011000                    NOP     0

      798     2456    4                   END;

   2456  1 001426   001433 710000 1                  TRA     s:2459

      799     2457    3                ELSE
      800     2458    3                   CALL FMD$RELBUF(BUFNUM);

   2458  1 001427   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 001430   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001431   000000 701000 xent               TSX1    FMD$RELBUF
         1 001432   000000 011000                    NOP     0

      801     2459    3                RETRY=5;

   2459  1 001433   000005 235007                    LDA     5,DL
         1 001434   200013 755100                    STA     RETRY,,AUTO

      802     2460    3                END;

      803     2461        /*S*  SCREECH_CODE:  FMD-S$FM100
      804     2462        *     TYPE:  DUMP
      805     2463        *     MESSAGE:  An error was found in a buffer that was already
      806     2464        *       in core.
      807     2465        */
      808     2466        /* */
      809     2467    2          F$DCB.TYC(1)='0'B;              /* Clear any I/O error status         */
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:146  

   2467  1 001435   200011 470500                    LDP0    JDCB$,,AUTO
         1 001436   000002 450100                    STZ     2,,PR0

      810     2468    2          RETRY=RETRY-1;

   2468  1 001437   000001 336007                    LCQ     1,DL
         1 001440   200013 056100                    ASQ     RETRY,,AUTO

      811     2469    2          IF Q$ ~= ADDR(NIL) THEN

   2469  1 001441   200037 236100                    LDQ     Q$,,AUTO
         1 001442   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001443   001451 600000 1                  TZE     s:2472

      812     2470    2             IF N$REQ.TYC.OPER THEN

   2470  1 001444   200037 470500                    LDP0    Q$,,AUTO
         1 001445   000021 236100                    LDQ     17,,PR0
         1 001446   200000 316003                    CANQ    65536,DU
         1 001447   001451 600000 1                  TZE     s:2472

      813     2471    2                RETRY=0;

   2471  1 001450   200013 450100                    STZ     RETRY,,AUTO

      814     2472    2          RREAD=1;

   2472  1 001451   000001 235007                    LDA     1,DL
         1 001452   200014 755100                    STA     RREAD,,AUTO

      815     2473    2          IF RETRY > 0 THEN

   2473  1 001453   200013 236100                    LDQ     RETRY,,AUTO
         1 001454   001457 604400 1                  TMOZ    s:2476

      816     2474    2             RETURN;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:147  

   2474  1 001455   200044 221300                    LDX1  ! SDA+3,,AUTO
         1 001456   000001 702211                    TSX2  ! 1,X1

      817     2475        /* */
      818     2476    2          F$DCB.BFR.DA(BUFNUM)=DA;

   2476  1 001457   200004 470500                    LDP0    @BUFNUM,,AUTO
         1 001460   000000 720100                    LXL0    0,,PR0
         1 001461   200005 471500                    LDP1    @DA,,AUTO
         1 001462   200011 473500                    LDP3    JDCB$,,AUTO
         1 001463   100000 236100                    LDQ     0,,PR1
         1 001464   300115 676110                    ERQ     77,X0,PR3
         1 001465   000032 376000 xsym               ANQ     B_VECTNIL+26
         1 001466   300115 656110                    ERSQ    77,X0,PR3

      819     2477        /* */
      820     2478    2   LOG:   IF CODE=%E$ULMI THEN

   2478  1 001467   200016 235100       LOG          LDA     CODE,,AUTO
         1 001470   000050 115007                    CMPA    40,DL
         1 001471   001474 601000 1                  TNZ     s:2481

      821     2479    2             TDA=0;

   2479  1 001472   200012 450100                    STZ     TDA,,AUTO
         1 001473   001476 710000 1                  TRA     s:2482

      822     2480    2          ELSE
      823     2481    2             TDA=8;

   2481  1 001474   000010 236007                    LDQ     8,DL
         1 001475   200012 756100                    STQ     TDA,,AUTO

      824     2482    2          IF ADDR(EFLG)=ADDR(NIL) THEN

   2482  1 001476   200010 236100                    LDQ     @EFLG,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:148  
         1 001477   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001500   001507 600000 1                  TZE     LOG5

      825     2483    2             GOTO LOG5;
      826     2484    2          IF EFLG >= 0 THEN

   2484  1 001501   200010 470500                    LDP0    @EFLG,,AUTO
         1 001502   000000 235100                    LDA     0,,PR0
         1 001503   001541 604000 1                  TMI     s:2491

      827     2485    3             DO;

      828     2486    3             IF EFLG>0 THEN

   2486  1 001504   001507 604400 1                  TMOZ    LOG5

      829     2487    3                TDA=6;                    /* FAST PATH ERROR                    */

   2487  1 001505   000006 235007                    LDA     6,DL
         1 001506   200012 755100                    STA     TDA,,AUTO

      830     2488    3   LOG5:     CALL FMB$LOGERR(CODE,ERRNUM,TDA,DA,BUF$,BFR1X,

   2488  1 001507   200037 630500       LOG5         EPPR0   Q$,,AUTO
         1 001510   200060 450500                    STP0    @ERR+11,,AUTO
         1 001511   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001512   200057 756100                    STQ     @ERR+10,,AUTO
         1 001513   200023 633500                    EPPR3   MISC,,AUTO
         1 001514   200056 453500                    STP3    @ERR+9,,AUTO
         1 001515   200022 634500                    EPPR4   BFR3X,,AUTO
         1 001516   200055 454500                    STP4    @ERR+8,,AUTO
         1 001517   200021 635500                    EPPR5   BFR2X,,AUTO
         1 001520   200054 455500                    STP5    @ERR+7,,AUTO
         1 001521   200020 636500                    EPPR6   BFR1X,,AUTO
         1 001522   200053 456500                    STP6    @ERR+6,,AUTO
         1 001523   200003 236100                    LDQ     @BUF$,,AUTO
         1 001524   200052 756100                    STQ     @ERR+5,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:149  
         1 001525   200005 236100                    LDQ     @DA,,AUTO
         1 001526   200051 756100                    STQ     @ERR+4,,AUTO
         1 001527   200012 637500                    EPPR7   TDA,,AUTO
         1 001530   200050 457500                    STP7    @ERR+3,,AUTO
         1 001531   200015 630500                    EPPR0   ERRNUM,,AUTO
         1 001532   200047 450500                    STP0    @ERR+2,,AUTO
         1 001533   200016 630500                    EPPR0   CODE,,AUTO
         1 001534   200046 450500                    STP0    @ERR+1,,AUTO
         1 001535   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001536   000010 631400 2                  EPPR1   8
         1 001537   000000 701000 xent               TSX1    FMB$LOGERR
         1 001540   000000 011000                    NOP     0

      831     2489    3                BFR2X,BFR3X,MISC,,Q$);
      832     2490    3             END;

      833     2491    2          IF Q$~=ADDR(NIL) THEN

   2491  1 001541   200037 236100                    LDQ     Q$,,AUTO
         1 001542   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001543   001554 600000 1                  TZE     s:2496

      834     2492    3             DO;

      835     2493    3             CALL NIQ$REL(Q$);

   2493  1 001544   200037 630500                    EPPR0   Q$,,AUTO
         1 001545   200046 450500                    STP0    @ERR+1,,AUTO
         1 001546   200046 630500                    EPPR0   @ERR+1,,AUTO
         1 001547   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001550   000000 701000 xent               TSX1    NIQ$REL
         1 001551   000000 011000                    NOP     0

      836     2494    3             Q$=ADDR(NIL);

   2494  1 001552   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001553   200037 756100                    STQ     Q$,,AUTO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:150  

      837     2495    3             END;

      838     2496    2          IF CODE~=%E$DI AND ERRNUM=2 THEN

   2496  1 001554   200016 235100                    LDA     CODE,,AUTO
         1 001555   000011 115007                    CMPA    9,DL
         1 001556   001565 600000 1                  TZE     s:2498
         1 001557   200015 235100                    LDA     ERRNUM,,AUTO
         1 001560   000002 115007                    CMPA    2,DL
         1 001561   001565 601000 1                  TNZ     s:2498

      839     2497    2             CODE=CODE-%E$MI+%E$MIIO;     /* CONVERT CODE TO I/O ERROR TYPE     */

   2497  1 001562   200016 235100                    LDA     CODE,,AUTO
         1 001563   000007 035007                    ADLA    7,DL
         1 001564   200016 755100                    STA     CODE,,AUTO

      840     2498    2          B$JIT$->B$JIT.ERR=ERRWD;

   2498  1 001565   000046 236000 0                  LDQ     ERRWD
         1 001566   000000 470400 xsym               LDP0    B$JIT$
         1 001567   000012 756100                    STQ     10,,PR0

      841     2499    2          B$JIT$->B$JIT.ERR.CODE=CODE;

   2499  1 001570   200016 236100                    LDQ     CODE,,AUTO
         1 001571   000003 736000                    QLS     3
         1 001572   000012 676100                    ERQ     10,,PR0
         1 001573   377770 376007                    ANQ     131064,DL
         1 001574   000012 656100                    ERSQ    10,,PR0

      842     2500    2          IF JDCB$->F$DCB.GTYP=FMGTFILE AND CODE~=%E$ULMI THEN

   2500  1 001575   200011 471500                    LDP1    JDCB$,,AUTO
         1 001576   100064 236100                    LDQ     52,,PR1
         1 001577   034000 376003                    ANQ     14336,DU
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:151  
         1 001600   030000 116003                    CMPQ    12288,DU
         1 001601   001610 601000 1                  TNZ     s:2502
         1 001602   200016 235100                    LDA     CODE,,AUTO
         1 001603   000050 115007                    CMPA    40,DL
         1 001604   001610 600000 1                  TZE     s:2502

      843     2501    2             JDCB$->F$DCB.CFU$->FM$CFU.B=1; /* SET BROKEN FILE FLAG             */

   2501  1 001605   100066 473500                    LDP3    54,,PR1
         1 001606   000002 236003                    LDQ     2,DU
         1 001607   300006 256100                    ORSQ    6,,PR3

      844     2502    2          CALL FMD$RELBUF(BUFNUM);

   2502  1 001610   200004 630500                    EPPR0   @BUFNUM,,AUTO
         1 001611   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001612   000000 701000 xent               TSX1    FMD$RELBUF
         1 001613   000000 011000                    NOP     0

      845     2503    2          BUF$=ADDR(NIL);

   2503  1 001614   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001615   200003 470500                    LDP0    @BUF$,,AUTO
         1 001616   000000 756100                    STQ     0,,PR0

      846     2504    2          RETURN;

   2504  1 001617   200044 221300                    LDX1  ! SDA+3,,AUTO
         1 001620   000001 702211                    TSX2  ! 1,X1

BFRTBL1
 Sect OctLoc
   0     000   0***** ******   0***** ******   0***** ******   0***** ******    ................
   0     010*  1***** ******   1***** ******   1***** ******                    @...@...@...

BFRTBL2
 Sect OctLoc
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:152  
   0     013   0***** ******   1***** ******   1***** ******   1***** ******    ....@...@...@...
   0     017   1***** ******   1***** ******   1***** ******   1***** ******    @...@...@...@...
   0     023   3***** ******   5***** ******   3***** ******                    ............

BFRTBL3
 Sect OctLoc
   0     026   0***** ******   2***** ******   2***** ******   2***** ******    ................
   0     032   2***** ******   2***** ******   2***** ******   2***** ******    ................
   0     036   4***** ******   6***** ******   4***** ******                    ............

ZAPBUF
 Sect OctLoc
   0     041   111111 111111   222222 222222   333333 333333   444444 444444    IIII............
   0     045   555555 555555                                                    ....

ERRWD
 Sect OctLoc
   0     046   061504 000002                                                    1...

ERRDI
 Sect OctLoc
   0     047   061504 000112                                                    1..J

(unnamed)
 Sect OctLoc
   2     000   000003 006000   000011 000000   000000 010000   000002 006000    ................
   2     004   000002 006000   000002 006000   000004 006000   000027 006000    ................
   2     010   000013 000000   000007 006000   000005 006000   000006 006000    ................
   2     014   000010 006000   000011 006000   000014 006000   000012 006000    ................
   2     020   777777 777000                                                    ....
      847     2505    2          END LOGERR;
      848     2506               %EJECT;
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:153  
      849     2507
      850     2508        /*E*    ERROR:   -E$MI-2
      851     2509                MESSAGE: System error - master index% of file %FN% is broken
      852     2510                MESSAGE1: One or more records in file %FN are lost
      853     2511                DESCRIPTION:  An inconsistency has been detected in a master
      854     2512                index granule.  All records in this granule are inaccessible.           */
      855     2513        /*E*    ERROR:   -E$ULMI-0
      856     2514                MESSAGE: Inconsistency in upper level index
      857     2515                DESCRIPTION:  An inconsistency has been detected in the
      858     2516                  upper level index of a keyed or indexed file.  This
      859     2517                  error is not reported to the user - it is only logged
      860     2518                  in the error log.
      861     2519        */
      862     2520        /*E*    ERROR:   -E$FIT-2
      863     2521                MESSAGE: System error - FIT% of file %FN% is broken
      864     2522                MESSAGE1: Entire file %FN is lost
      865     2523                DESCRIPTION:  An inconsistency has been detected in the file's
      866     2524                FIT.  The entire file is inaccessible.                                  */
      867     2525        /*E*    ERROR:   -E$FD-2
      868     2526                MESSAGE: System error - file directory% of account %AC% is broken
      869     2527                MESSAGE1: File %FN and all files beyond it in this account
      870     2528                  are lost
      871     2529                DESCRIPTION:  An inconsistency has been detected in the file
      872     2530                directory.  All files from this point to the end of the
      873     2531                directory have been lost.                                               */
      874     2532        /*E*    ERROR:   -E$PAD-2
      875     2533                MESSAGE: System error - account directory% on set %SN% is broken
      876     2534                MESSAGE1: Inconsistency in account directory on set %SN
      877     2535                DESCRIPTION:  An inconsistency has been detected in the
      878     2536                account directory.  All accounts on this pack set beyond this
      879     2537                point are inaccessible.                                                 */
      880     2538        /*E*    ERROR:   -E$MAD-2
      881     2539                MESSAGE: System error - master account directory is broken
      882     2540        */
      883     2541        /*E*    ERROR:  -E$GP-2
      884     2542                MESSAGE: System error - granule allocation pool% of pack %SN% is broken
      885     2543        */
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:154  
      886     2544        /*E*    ERROR:   -E$MIIO-2
      887     2545                MESSAGE: Disk error reading index granule from file %FN
      888     2546                DESCRIPTION:  Unable to read a master index granule due to
      889     2547                hardware error.  All records in this granule are lost.                  */
      890     2548        /*E*    ERROR:   -E$ULMIIO-0
      891     2549                MESSAGE: Disk error reading upper level index
      892     2550                DESCRIPTION:  A disk error occurred reading the upper
      893     2551                  level index of a keyed or indexed file.  This error
      894     2552                  is not reported to the user - it is only logged in
      895     2553                  the error log.
      896     2554        */
      897     2555        /*E*    ERROR:   -E$FITIO-2
      898     2556                MESSAGE: Disk error reading FIT of file %FN
      899     2557                DESCRIPTION:  Unable to read the file's FIT due to a
      900     2558                hardware error.  The entire file is inaccessible.                       */
      901     2559        /*E*    ERROR:   -E$FDIO-2
      902     2560                MESSAGE: Disk error reading file directory% for account %AC%
      903     2561                DESCRIPTION:  Unable to read a file directory granule due to
      904     2562                a hardware error.  All files from this point to the end of the
      905     2563                directory are lost.                                                     */
      906     2564        /*E*    ERROR:  FMD-E$PADIO-2
      907     2565                MESSAGE: Disk error reading PAD% for set %SN%
      908     2566        */
      909     2567        /*E*    ERROR:   -E$MADIO-2
      910     2568                MESSAGE: Disk error reading MAD
      911     2569        */
      912     2570        /*E*    ERROR:   -E$GPIO-2
      913     2571                MESSAGE: Disk error reading granule pool for pack set %SN
      914     2572        */
      915     2573    1          END FMD$REDBUF;
      916     2574               %EOD;

PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:155  
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM_CACHE_R.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$REDBUF.
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:156  

 **** Variables and constants ****

  ****  Section 000 RoData FMD$REDBUF

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(3)     r     1 BFRTBL1(0:10)             13-0-0/w UBIN(3)     r     1 BFRTBL2(0:10)
    26-0-0/w UBIN(3)     r     1 BFRTBL3(0:10)             47-0-0/b STRC        r     1 ERRDI
    46-0-0/b STRC        r     1 ERRWD                     41-0-0/b BIT         r     1 ZAPBUF(0:4)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUF$                      4-0-0/w PTR         r     1 @BUFNUM
     5-0-0/w PTR         r     1 @DA                        6-0-0/w PTR         r     1 @DDA
    10-0-0/w PTR         r     1 @EFLG                     45-0-0/w PTR         r     1 @ERR
     7-0-0/w PTR         r     1 @LCDA                     35-0-0/w SBIN        r     1 BCFLG
    20-0-0/w UBIN        r     1 BFR1X                     21-0-0/w UBIN        r     1 BFR2X
    22-0-0/w UBIN        r     1 BFR3X                     *0-0-0/w PTR         r     1 BUF$
    *0-0-0/w UBIN        r     1 BUFNUM                    16-0-0/w UBIN        r     1 CODE
    *0-0-0/w UBIN        r     1 DA                        *0-0-0/w UBIN        r     1 DDA
    *0-0-0/w SBIN        r     1 EFLG                      *0-0-0/w SBIN        r     1 ERR
    15-0-0/w UBIN        r     1 ERRNUM                    24-0-0/w SBIN        r     1 FLAG
    36-0-0/w UBIN        r     1 GTYP                      11-0-0/w PTR         r     1 JDCB$
    *0-0-0/w SBIN        r     1 LCDA                      23-0-0/w SBIN        r     1 MISC
    37-0-0/w PTR         r     1 Q$                        13-0-0/w SBIN        r     1 RETRY
    14-0-0/w SBIN        r     1 RREAD                     25-0-0/w STRC(180)   r     1 SAVBUF
    32-0-0/w STRC(108)   r     1 SAVQ                      41-0-0/w UBIN        r     1 SDA
    17-0-0/b STRC        r     1 STAMP                     17-0-0/w UBIN        r     1 STMPUBIN
    40-0-0/w PTR         r     1 T$                        12-0-0/w UBIN        r     1 TDA

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:157  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w PTR         r     1 FMC_CACHE$                 0-0-0/w PTR         r     1 FMC_CACHEPGCNT$
     0-0-0/w UBIN        r     1 FM_FRMAX
     0-0-0/w UBIN        r     1 FM_HASH(0:3)
     0-0-0/w UBIN        r     1 FM_SRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w STRC(216)   r     1 FMC$CACHETBL(0:0)
     0-0-0/d STRC(1080)  r     1 N$REQ


   Procedure FMD$REDBUF requires 913 words for executable code.
   Procedure FMD$REDBUF requires 50 words of local(AUTO) storage.
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:158  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:159  
          MINI XREF LISTING

B$JIT.DCB$
       518**DCL      2110>>ASSIGN
B$JIT.ERR
       428**DCL      2281<<ASSIGN   2498<<ASSIGN
B$JIT.ERR.CODE
       429**DCL      2499<<ASSIGN
B$JIT.ERR.MID
       429**DCL       429--REDEF
B$JIT$
        98**DCL       423--IMP-PTR  2110>>ASSIGN   2281>>ASSIGN   2498>>ASSIGN   2499>>ASSIGN
BCFLG
        93**DCL      2103<<ASSIGN   2106<<ASSIGN   2159>>IF
BFR1X
        82**DCL      2144<<DOINDEX  2145>>IF       2145>>IF       2148>>ASSIGN   2149>>ASSIGN   2150>>ASSIGN
      2151>>ASSIGN   2207<>CALL     2211<>CALL     2387<<ASSIGN   2426<<ASSIGN   2488<>CALL
BFR2X
        83**DCL      2207<>CALL     2211<>CALL     2388<<ASSIGN   2427<<ASSIGN   2488<>CALL
BFR3X
        84**DCL      2207<>CALL     2211<>CALL     2389<<ASSIGN   2428<<ASSIGN   2488<>CALL
BFRTBL1
      1944**DCL      2426>>ASSIGN
BFRTBL2
      1945**DCL      2427>>ASSIGN
BFRTBL3
      1946**DCL      2428>>ASSIGN
BUF$
        46**DCL        44--PROC     2039--IMP-PTR  2105--ENTRY    2160<>CALL     2162<>CALL     2174<>CALL
      2176<<ASSIGN   2177>>ASSIGN   2183<>CALL     2211<>CALL     2238<<ASSIGN   2245>>IF       2251>>IF
      2257>>IF       2264>>IF       2279>>IF       2290>>IF       2296>>IF       2303>>IF       2304>>IF
      2312>>IF       2317>>IF       2325>>IF       2325>>IF       2331>>IF       2334>>IF       2334>>IF
      2342>>ASSIGN   2344>>IF       2348>>ASSIGN   2350>>IF       2356>>IF       2356>>IF       2390<<ASSIGN
      2432>>IF       2433>>ASSIGN   2443>>IF       2488<>CALL     2503<<ASSIGN
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:160  
BUFNUM
        47**DCL        44--PROC     2105--ENTRY    2114>>IF       2137>>IF       2137>>IF       2147<>CALL
      2148>>ASSIGN   2149>>ASSIGN   2160<>CALL     2162<>CALL     2170<>CALL     2173>>IF       2174<>CALL
      2176>>ASSIGN   2199>>ASSIGN   2238>>ASSIGN   2452>>IF       2454>>ASSIGN   2455<>CALL     2458<>CALL
      2476>>ASSIGN   2502<>CALL
CODE
        77**DCL      2207<>CALL     2211<>CALL     2386<>CALL     2425<>CALL     2478>>IF       2488<>CALL
      2496>>IF       2497<<ASSIGN   2497>>ASSIGN   2499>>ASSIGN   2500>>IF
COMMON
      2106**LABEL    2104--GOTO
DA
        48**DCL        44--PROC     2105--ENTRY    2112>>ASSIGN   2122>>IF       2130>>IF       2137>>IF
      2145>>IF       2160<>CALL     2162<>CALL     2199>>ASSIGN   2207<>CALL     2211<>CALL     2240>>ASSIGN
      2391>>IF       2416>>IF       2476>>ASSIGN   2488<>CALL
DDA
        49**DCL        44--PROC     2105--ENTRY
DONE
      2199**LABEL    2141--GOTO     2154--GOTO
DRCTRY IN PROCEDURE VERIFY
      2245**LABEL    2272--GOTO     2276--GOTO
EFLG
        51**DCL        44--PROC     2105--ENTRY    2482--IF       2484>>IF       2486>>IF
ERR
      2221**LABEL    2196--GOTO
ERR IN PROCEDURE LOGERR
      2381**DCL      2380--PROC     2383>>ASSIGN   2384>>DOCASE
ERR1
      2220**LABEL    2160--CALLALT  2162--CALLALT  2183--CALLALT
ERR8 IN PROCEDURE VERIFY
      2362**LABEL    2345--CALLALT  2347--CALLALT  2351--CALLALT  2353--CALLALT
ERRDI
      1955**DCL      2281>>ASSIGN
ERRNUM
        76**DCL      2207<>CALL     2211<>CALL     2383<<ASSIGN   2426>>ASSIGN   2427>>ASSIGN   2428>>ASSIGN
      2443>>IF       2488<>CALL     2496>>IF
ERRWD
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:161  
      1951**DCL      2498>>ASSIGN
F$DCB.ACS
      1977**DCL      2297>>IF
F$DCB.ACTPOS
      1985**DCL      1985--REDEF
F$DCB.ARS
      1960**DCL      1960--REDEF
F$DCB.ATTR
      1978**DCL      1979--REDEF
F$DCB.BFR
      2004**DCL      2148<<ASSIGN   2148>>ASSIGN   2150<<ASSIGN
F$DCB.BFR.BUFX
      2005**DCL      2137>>IF       2145>>IF       2173>>IF       2176>>ASSIGN   2238>>ASSIGN
F$DCB.BFR.DA
      2005**DCL      2137>>IF       2145>>IF       2199<<ASSIGN   2476<<ASSIGN
F$DCB.BFR1
      2005**DCL      2149<<ASSIGN   2149>>ASSIGN   2151<<ASSIGN
F$DCB.BFR1.CX
      2006**DCL      2452>>IF       2454>>ASSIGN
F$DCB.BORROW
      1993**DCL      1993--REDEF    1993--REDEF    1993--REDEF
F$DCB.CFU$
      1994**DCL      2391>>IF       2394>>ASSIGN   2416>>IF       2419>>ASSIGN   2501>>ASSIGN
F$DCB.DCBNAME.L
      2007**DCL      2007--IMP-SIZ
F$DCB.EOMCHAR
      1964**DCL      1964--REDEF
F$DCB.FLDID
      1988**DCL      1988--REDEF
F$DCB.FORM$
      1982**DCL      1982--REDEF
F$DCB.FSECT
      1998**DCL      1998--REDEF
F$DCB.FSN
      1975**DCL      1975--REDEF    1975--REDEF    1976--REDEF
F$DCB.GTYP
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:162  
      1989**DCL      2113>>ASSIGN   2500>>IF
F$DCB.HASH
      1997**DCL      2239>>ASSIGN   2275>>ASSIGN
F$DCB.HEADER$
      1981**DCL      1981--REDEF
F$DCB.IXTNSIZE
      1979**DCL      1979--REDEF
F$DCB.LASTSTA$
      1969**DCL      1969--REDEF
F$DCB.LVL
      1994**DCL      1994--REDEF    2296>>IF       2404>>ASSIGN
F$DCB.NAME.C
      1969**DCL      1969--REDEF
F$DCB.NOEOF
      1990**DCL      1990--REDEF
F$DCB.NRECS
      1980**DCL      1980--REDEF
F$DCB.NRECX
      1999**DCL      1999--REDEF
F$DCB.OHDR
      1991**DCL      1991--REDEF
F$DCB.ORG
      1974**DCL      1974--REDEF    2280>>IF       2290>>IF
F$DCB.PRECNO
      1997**DCL      1997--REDEF
F$DCB.RCSZ
      2002**DCL      2002--REDEF
F$DCB.RES
      1970**DCL      1970--REDEF
F$DCB.SETX
      1982**DCL      1982--REDEF
F$DCB.SEZ_OK
      1990**DCL      2296>>IF
F$DCB.TAB$
      1981**DCL      1982--REDEF
F$DCB.TDA
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:163  
      1996**DCL      1996--REDEF
F$DCB.TYC
      1960**DCL      2467<<ASSIGN
F$DCB.WSN
      1971**DCL      1971--REDEF
FAF$CHKDAFR
        62**DCL-ENT  2345--CALL     2351--CALL
FLAG
        86**DCL      2160<>CALL     2162<>CALL     2163>>IF       2450>>IF       2455<>CALL
FM$BUF$
        99**DCL      2176>>ASSIGN   2238>>ASSIGN
FM$CFU.ACCTX
      2011**DCL      2011--REDEF
FM$CFU.B
      2013**DCL      2501<<ASSIGN
FM$CFU.UGRANS
      2012**DCL      2394>>ASSIGN   2419>>ASSIGN
FM$GRAN
      2039**DCL      2177<<ASSIGN   2433>>ASSIGN
FM$GRAN.AVAIL
      2040**DCL      2325>>IF
FM$GRAN.BLINK
      2040**DCL      2342>>ASSIGN   2356>>IF
FM$GRAN.FCEX
      2040**DCL      2334>>IF
FM$GRAN.FLINK
      2040**DCL      2348>>ASSIGN   2356>>IF
FM$GRAN.HDR
      2039**DCL      2331>>IF
FM$GRAN.LVL
      2039**DCL      2257>>IF       2264>>IF       2296>>IF       2303>>IF       2317>>IF
FM$GRAN.NAVX
      2039**DCL      2325>>IF       2334>>IF
FM$GRAN.ORG
      2039**DCL      2251>>IF       2290>>IF       2344>>IF       2350>>IF
FM$GRAN.STAMP
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:164  
      2039**DCL      2245>>IF       2279>>IF
FM$GRAN.STAMP.GMOD
      2039**DCL      2304>>IF       2312>>IF
FM$GRAN.STAMP.HASH
      2039**DCL      2443>>IF
FMB$CHKDA
        61**DCL-ENT  2347--CALL     2353--CALL
FMB$ERRTYP
        65**DCL-ENT  2386--CALL     2425--CALL
FMB$LOGERR
        64**DCL-ENT  2207--CALL     2211--CALL     2488--CALL
FMB$QUEUE
        60**DCL-ENT  2183--CALL
FMC$CACHETBL.FLAGS.ERR
      2034**DCL      2454<<ASSIGN
FMC$FINISH
        59**DCL-ENT  2455--CALL
FMC$GET
        57**DCL-ENT  2160--CALL
FMC$NOCACHE
        58**DCL-ENT  2162--CALL
FMC_CACHE$
       979**DCL      2017--IMP-PTR  2454>>ASSIGN
FMC_CACHEPGCNT$
       980**DCL       980--IMP-PTR   980--REDEF
FMD$FLSHBUF
        53**DCL-ENT  2147--CALL
FMD$FLSHBUFNR
        54**DCL-ENT  2170--CALL
FMD$GETBUF
        56**DCL-ENT  2174--CALL
FMD$RELBUF
        63**DCL-ENT  2458--CALL     2502--CALL
FMO$FDHASH
        66**DCL-ENT  2271--CALL
FM_FRMAX
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:165  
       965**DCL      2122>>IF       2391>>IF       2416>>IF
FM_HASH
       967**DCL      2244>>ASSIGN
FM_SRZERO
       965**DCL      2130>>IF
GTYP
        94**DCL      2113<<ASSIGN   2120>>IF       2242>>DOCASE   2244>>ASSIGN   2257>>IF       2258>>IF
      2340>>IF       2443>>IF
JDCB$
        72**DCL      1960--IMP-PTR  2110<<ASSIGN   2113>>ASSIGN   2137>>IF       2137>>IF       2145>>IF
      2145>>IF       2148>>ASSIGN   2148>>ASSIGN   2149>>ASSIGN   2149>>ASSIGN   2150>>ASSIGN   2151>>ASSIGN
      2173>>IF       2176>>ASSIGN   2199>>ASSIGN   2238>>ASSIGN   2239>>ASSIGN   2271<>CALL     2275>>ASSIGN
      2280>>IF       2290>>IF       2296>>IF       2296>>IF       2297>>IF       2391>>IF       2394>>ASSIGN
      2404>>ASSIGN   2416>>IF       2419>>ASSIGN   2452>>IF       2454>>ASSIGN   2467>>ASSIGN   2476>>ASSIGN
      2500>>IF       2501>>ASSIGN
LCDA
        50**DCL        44--PROC     2105--ENTRY    2355--IF       2355>>IF       2356>>IF       2356>>IF
      2422>>ASSIGN
LOG IN PROCEDURE LOGERR
      2478**LABEL    2395--GOTO
LOG5 IN PROCEDURE LOGERR
      2488**LABEL    2483--GOTO
LOGERR
      2380**PROC     2124--CALL     2132--CALL     2187--CALL     2220--CALL     2247--CALL     2253--CALL
      2260--CALL     2266--CALL     2286--CALL     2292--CALL     2298--CALL     2306--CALL     2314--CALL
      2319--CALL     2327--CALL     2336--CALL     2358--CALL     2362--CALL
MISC
        85**DCL      2207<>CALL     2392<<ASSIGN   2394<<ASSIGN   2398<<ASSIGN   2401<<ASSIGN   2404<<ASSIGN
      2407<<ASSIGN   2410<<ASSIGN   2413<<ASSIGN   2417<<ASSIGN   2419<<ASSIGN   2422<<ASSIGN   2488<>CALL
N$REQ.BUFADDR
      2060**DCL      2061--REDEF    2061--REDEF
N$REQ.DLA.DRELADDR
      2052**DCL      2052--REDEF
N$REQ.DVE.EOMCHAR
      2089**DCL      2090--REDEF
N$REQ.EAINFO
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:166  
      2083**DCL      2083--REDEF
N$REQ.EAINFOX
      2083**DCL      2084--REDEF
N$REQ.EVNTINFO
      2084**DCL      2084--REDEF
N$REQ.REQID
      2062**DCL      2206<<ASSIGN   2438>>ASSIGN
N$REQ.STATUS
      2065**DCL      2071--REDEF    2204<<ASSIGN   2436>>ASSIGN
N$REQ.TYC
      2073**DCL      2185>>IF       2205<<ASSIGN   2398>>ASSIGN   2437>>ASSIGN
N$REQ.TYC.OPER
      2074**DCL      2470>>IF
NIQ$GET
        67**DCL-ENT  2203--CALL
NIQ$REL
        68**DCL-ENT  2180--CALL     2209--CALL     2213--CALL     2217--CALL     2222--CALL     2493--CALL
Q$
        95**DCL      2051--IMP-PTR  2111<<ASSIGN   2178>>IF       2180<>CALL     2181<<ASSIGN   2183<>CALL
      2185>>IF       2202>>ASSIGN   2203<>CALL     2204>>ASSIGN   2205>>ASSIGN   2206>>ASSIGN   2207<>CALL
      2209<>CALL     2210<<ASSIGN   2216>>IF       2217<>CALL     2221>>IF       2222<>CALL     2398>>ASSIGN
      2434>>IF       2436>>ASSIGN   2437>>ASSIGN   2438>>ASSIGN   2469>>IF       2470>>IF       2488<>CALL
      2491>>IF       2493<>CALL     2494<<ASSIGN
READBUF
      2169**LABEL    2140--CALLALT  2153--CALLALT  2165--CALLALT
RETRY
        74**DCL      2139<<ASSIGN   2152<<ASSIGN   2158<<ASSIGN   2169<<ASSIGN   2171>>DOUNTIL  2194>>IF
      2200>>IF       2211>>CALL     2430>>IF       2442>>IF       2459<<ASSIGN   2468<<ASSIGN   2468>>ASSIGN
      2471<<ASSIGN   2473>>IF
RREAD
        75**DCL      2171>>DOUNTIL  2172<<ASSIGN   2194>>IF       2445<<ASSIGN   2472<<ASSIGN
SAVBUF
        87**DCL      2207--CALL     2433<<ASSIGN
SAVQ.REQID
        91**DCL      2206>>ASSIGN   2438<<ASSIGN
SAVQ.STATUS
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:167  
        90**DCL      2204>>ASSIGN   2436<<ASSIGN
SAVQ.TYC
        92**DCL      2205>>ASSIGN   2437<<ASSIGN
SC_FMD100
        70**DCL-ENT  2451--CALL
SC_FMD87
        69**DCL-ENT  2115--CALL
SDA
      2101**DCL      2112<<ASSIGN   2183<>CALL
STAMP
        78**DCL        81--REDEF    2245>>IF       2279>>IF
STAMP.GMOD
        80**DCL      2240<<ASSIGN   2304>>IF
STAMP.HASH
        79**DCL      2239<<ASSIGN   2244<<ASSIGN   2271<>CALL     2275<<ASSIGN
STMPUBIN
        81**DCL      2407>>ASSIGN
T$
        96**DCL      2202<<ASSIGN   2211<>CALL     2213<>CALL
TDA
        73**DCL      2342<<ASSIGN   2343>>IF       2345<>CALL     2347<>CALL     2348<<ASSIGN   2349>>IF
      2351<>CALL     2353<>CALL     2479<<ASSIGN   2481<<ASSIGN   2487<<ASSIGN   2488<>CALL
VERIFY
      2236**PROC     2140--CALL     2153--CALL     2165--CALL     2190--CALL
ZAPBUF
      1947**DCL      2177>>ASSIGN
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:168  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:169  
              MINI UREF LISTING

F$CFU$     968**DCL
FM$SET$     969**DCL
FMC$CACHEPGCNT     980**DCL
FMC_CACHEPGCNT     980**DCL
FMC_CACHEPGCNT$R     980**DCL
FMC_CACHESIZ     979**DCL
FMC_CACHESIZN     979**DCL
FMC_LOCK     981**DCL
FMC_MASK     981**DCL
FMC_MASKTBL     981**DCL
FMC_STATS$     979**DCL
FMC_TYPTBL$     979**DCL
FMD$REDBUF      44**PROC
FMD$REDBUFBC    2105**ENTRY
FMD$WRTSV      55**DCL-ENT
FM_CFUWAIT     968**DCL
FM_CFUWGRB     968**DCL
FM_EOP     966**DCL
FM_FRZERO     965**DCL
FM_GCT     969**DCL
FM_GIP     969**DCL
FM_GPSDA     966**DCL
FM_MADSDA     966**DCL
FM_PADSDA     966**DCL
FM_SRMAX     965**DCL
FM_SYSACCTX     969**DCL
FM_SYSSETX     969**DCL
FM_TRUNC     967**DCL
FM_WSQ     967**DCL
F_CWLK     968**DCL
F_CWUSER     968**DCL
F_DCBLOCK     967**DCL
PL6.E3A0      #004=FMD$REDBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:39 Page:170  
WRD    2100**DCL

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:171  
      917        1        /*T***********************************************************/
      918        2        /*T*                                                         */
      919        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      920        4        /*T*                                                         */
      921        5        /*T***********************************************************/
      922        6        /*F*   NAME:   FMD$WRTBUF
      923        7               PURPOSE:  Write pool buffer to disk and enter it into
      924        8             the I/O cache if appropriate.                                           */
      925        9
      926       10        /*D*     NAME:     FMD$WRTBUF
      927       11                 ENTRY:    FMD$FLSHBUF, FMD$WRTSV, FMD$WRTSVNW
      928       12                 CALL:     CALL FMD$WRTBUF(BUFNUM)
      929       13                 INPUT:    BUFNUM - Buffer number
      930       14                 DESCRIPTION:
      931       15
      932       16                      Call CALCSIZ to find out how many bytes we have to
      933       17                 write, and set up some other information.  Then call
      934       18                 FMC$FINISH to finish off the buffer if it is cached.
      935       19                 If FLAG is zero, then it wasn't cached, and we weren't
      936       20                 able to cache it.  If the buffer was updated, then
      937       21                 get the user off of the page, and start a no-wait I/O.
      938       22                 If it wasn't updated, then just release the buffer.
      939       23        */
      940       24                 %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:172  
      941       25
      942       26        FMD$WRTBUF: PROC(BUFNUM);
      943       27        /* PARAMETERS */
      944       28    1   DCL BUFNUM UBIN;
      945       29        /* EXTERNAL ROUTINES */
      946       30    1   DCL FMC$FINISH ENTRY(4) ALTRET;
      947       31    1   DCL FMC$UPLIMIT ENTRY(4) ALTRET;
      948       32    1   DCL FMC$STASH ENTRY(1);
      949       33    1   DCL FMC$CLR1 ENTRY(1);
      950       34    1   DCL MMD$GIOP ENTRY(1) ALTRET;
      951       35    1   DCL MMJ$FIOP ENTRY(1);
      952       36    1   DCL FMB$IOSPIN ENTRY;
      953       37    1   DCL FMD$RELBUF ENTRY(1);
      954       38    1   DCL FMD$GETBUF ENTRY(3);
      955       39    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      956       40    1   DCL FMB$RIO ENTRY(9) ALTRET;
      957       41    1   DCL FMD$WRTAHDEA ENTRY(1);
      958       42    1   DCL MMJ$FBTOIOPM ENTRY(2);
      959       43    1   DCL MMJ$UNMAPIOP ENTRY(1);
      960       44    1   DCL SC_FMD89 ENTRY CONV(2,0);
      961       45    1   DCL SC_FMD90 ENTRY CONV(2,0);
      962       46    1   DCL SC_FMD91 ENTRY CONV(2,0);
      963       47    1   DCL SC_FMD101 ENTRY CONV(2,0);
      964       48        /* LOCAL AUTOMATIC STORAGE */
      965       49    1   DCL JDCB$ PTR;
      966       50    1   DCL BUF$ PTR;
      967       51    1   DCL VPNO UBIN;
      968       52    1   DCL PPNO UBIN;
      969       53    1   DCL OLDPP UBIN;
      970       54    1   DCL ENTFLG SBIN;
      971       55    1   DCL BYTES UBIN;
      972       56    1   DCL DA UBIN;
      973       57    1   DCL FC UBIN;
      974       58    1   DCL N UBIN;
      975       59    1   DCL WAITFLG SBIN;
      976       60    1   DCL FLAG SBIN;
      977       61    1   DCL GTYP UBIN;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:173  
      978       62    1   DCL LVL UBIN;
      979       63    1   DCL 1 EAINFO,
      980       64    1         2 * BIT(18),
      981       65    1         2 PAGE UBIN(18) UNAL;
      982       66        /* EXTERNAL DATA */
      983       67    1   DCL B$JIT$ PTR SYMREF;
      984       68    1   DCL FM$BUF$(0:0) PTR SYMREF;
      985       69        /* INCLUDE FILES */
      986       70        %MACRO F$DCB(BASED=BASED);
      987       71        %INCLUDE F$DCB;
      988      120        %MEND;
      989      121        %INCLUDE FM$MACROS;
      990      496        %INCLUDE FM_DATA_R;
      991      510        %INCLUDE F$JIT_C;
      992      940        %INCLUDE N_FC_C;
      993      977        %INCLUDE M_INFO_C;
      994     1117        /* BASED STRUCTURES */
      995     1118        %F$DCB (BASED="BASED(JDCB$)");
      996     1168        %FM$GRAN (BASED="BASED(BUF$)");
      997     1172        %FM$CFUJ;
      998     1177        %FM$SET (BASED="BASED(FM$SET$)");
      999     1182    1   DCL WRD SBIN BASED ALIGNED;
     1000     1183    1   DCL 1 ZAP BASED ALIGNED,
     1001     1184    1         2 * UBIN,
     1002     1185    1         2 X CHAR(4092);
     1003     1186        /* */
     1004     1187    1          ENTFLG=0;
     1005     1188    1          GOTO COMMON;
     1006     1189    1   FMD$FLSHBUF: ENTRY(BUFNUM);
     1007     1190    1          ENTFLG=1;
     1008     1191    1          GOTO COMMON;
     1009     1192    1   FMD$FLSHBUFNR: ENTRY(BUFNUM);
     1010     1193    1          ENTFLG=2;
     1011     1194
     1012     1195    1   COMMON: ;
     1013     1196    1          JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */
     1014     1197    1          IF ENTFLG = 0 THEN
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:174  
     1015     1198    1             F$DCB.BFR.BUFUP(BUFNUM)='1'B;
     1016     1199    1          IF F$DCB.BFR.BUFX(BUFNUM) = 0 AND ENTFLG > 0 THEN
     1017     1200    1             RETURN;
     1018     1201    1          IF BUFNUM>4 THEN
     1019     1202    1             CALL SC_FMD90;
     1020     1203        /*S*   SCREECH_CODE:  FMD-S$FM90
     1021     1204        *      TYPE:   SUA
     1022     1205        *      MESSAGE:  Bad arguments to FMD$WRTBUF
     1023     1206        */
     1024     1207        /* ATTEMPT TO STASH BUFFER IN THE I/O CACHE */
     1025     1208    1          FLAG=0;
     1026     1209    1          GTYP=F$DCB.GTYP;
     1027     1210    1          LVL=F$DCB.LVL;
     1028     1211    1          CALL CALCSIZ;                   /* Calc # words to write              */
     1029     1212    1          IF (~F$DCB.BFR.CVM(BUFNUM) AND F$DCB.BFR.BUFUP(BUFNUM) AND
     1030     1213    1             F$DCB.BFR.DA(BUFNUM) ~= 0) OR F$DCB.BFR1.CX(BUFNUM) > 0 THEN
     1031     1214    1             CALL FMC$FINISH(BUFNUM, BYTES, FC, FLAG) ALTRET(ERR);
     1032     1215    1          F$DCB.GTYP=GTYP;
     1033     1216    1          F$DCB.LVL=LVL;
     1034     1217
     1035     1218    1          IF FLAG = 0 THEN
     1036     1219    2             DO;   /* WASN'T CACHED */
     1037     1220    2             DA=F$DCB.BFR.DA(BUFNUM);
     1038     1221    2             IF F$DCB.CFU$ ~= ADDR(NIL) AND DA ~= 0 THEN
     1039     1222    2                CALL FMC$CLR1(DA);
     1040     1223    2             IF F$DCB.BFR.BUFUP(BUFNUM) THEN
     1041     1224    3                DO;   /* WRITE THE BUFFER */
     1042     1225    3                EAINFO='0'B;
     1043     1226    3                VPNO=F$DCB.BFR.BUFX(BUFNUM);
     1044     1227    3                IF NOT(JDCB$->F$DCB.BFR.CVM(BUFNUM)) THEN
     1045     1228    3                   CALL MMJ$FBTOIOPM(VPNO, OLDPP);
     1046     1229    3                ELSE
     1047     1230    4                   DO;
     1048     1231    4                   OLDPP=JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#;
     1049     1232    4                   IF OLDPP=0 THEN
     1050     1233    4                      GOTO XMAPERR;
     1051     1234    4                   END;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:175  
     1052     1235
     1053     1236    3                EAINFO.PAGE=OLDPP;
     1054     1237
     1055     1238    3                DA=JDCB$->F$DCB.BFR.DA(BUFNUM);
     1056     1239    3                CALL FMC$CLR1(DA);
     1057     1240    3                CALL FMB$RIO(0,OLDPP,BYTES,DA,FC,0,
     1058     1241    3                   ENTADDR(FMD$WRTAHDEA),EAINFO) ALTRET(ERR);
     1059     1242
     1060     1243    3                CALL MMJ$UNMAPIOP(VPNO);
     1061     1244    3                IF (JDCB$->F$DCB.BFR.CVM(BUFNUM)) THEN
     1062     1245    3                   JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#=0;
     1063     1246
     1064     1247    3                F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;
     1065     1248    3                F$DCB.BFR1(BUFNUM)='0'B;
     1066     1249    3                END;  /* WRITE THE BUFFER */
     1067     1250    2             ELSE
     1068     1251    2                IF ENTFLG ~= 2 THEN
     1069     1252    3                   DO;   /* RELEASE BUFFER */
     1070     1253    3                   IF JDCB$->F$DCB.BFR.CVM(BUFNUM) AND
     1071     1254    3                      JDCB$->F$DCB.CFU$ ~= ADDR(NIL) THEN
     1072     1255    4                      DO;   /* FREE JRNL PAGE */
     1073     1256    4                      CALL FMD$RELBUF(BUFNUM);
     1074     1257    4                      PPNO=JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#;
     1075     1258    4                      CALL MMJ$FIOP(PPNO);
     1076     1259    4                      JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#=0;
     1077     1260    4                      END;  /* FREE JRNL PAGE */
     1078     1261    3                   ELSE
     1079     1262    3                      CALL FMD$RELBUF(BUFNUM);
     1080     1263    3                   END;   /* RELEASE BUFFER */
     1081     1264    2             END;  /* WASN'T CACHED */
     1082     1265
     1083     1266    1          IF F$DCB.BFR.BUFX(BUFNUM) = 0 AND ENTFLG = 2 THEN
     1084     1267    1             CALL FMD$GETBUF(BUFNUM, 1, BUF$);
     1085     1268    1          RETURN;
     1086     1269
     1087     1270    1   ERR:   EAINFO=F$DCB.BFR(BUFNUM);
     1088     1271    1          F$DCB.BFR.BUFUP(BUFNUM)='0'B;   /* CLEAR FOR RUNDOWN                  */
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:176  
     1089     1272    1          IF BINBIT(DA,36) = '777777777777'O THEN /* DISK NOT SPINNING? */
     1090     1273    1             CALL SC_FMD101;
     1091     1274        /*S*   SCREECH_CODE:  FMD-S$FM101
     1092     1275        *      TYPE:   SUA
     1093     1276        *      MESSAGE:  Disk not spinning on write of uncached pool buffer */
     1094     1277
     1095     1278    1          CALL SC_FMD91;
     1096     1279        /*S*   SCREECH_CODE:  FMD-S$FM91
     1097     1280        *      TYPE:   SUA
     1098     1281        *      MESSAGE:  Illegal disk address for pool buffer */
     1099     1282
     1100     1283    1   XMAPERR: N=BITBIN(JDCB$->F$DCB.BFR1(BUFNUM)); /* SAVE                         */
     1101     1284    1          EAINFO=JDCB$->F$DCB.BFR(BUFNUM);
     1102     1285    1          JDCB$->F$DCB.BFR(BUFNUM)='0'B;  /* CLEAR SO THAT RUNDOWN              */
     1103     1286    1          JDCB$->F$DCB.BFR1(BUFNUM)='0'B; /* WON'T SCREECH AGAIN                */
     1104     1287    1          CALL SC_FMD89;
     1105     1288        /*S*   SCREECH_CODE:  FMD-S$FM89
     1106     1289        *      TYPE:   SUA
     1107     1290        *      MESSAGE:  Error manipulating map during write-ahead */
     1108     1291               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:177  
     1109     1292        /*D*     ENTRY:    FMD$WRTCACHE
     1110     1293                 DESCRIPTION:
     1111     1294                      Calculates the size of the passed buffer (which is guaranteed
     1112     1295                      to be cached), and calls FMC$UPLIMIT to write it, if necessary.
     1113     1296        */
     1114     1297
     1115     1298    1   FMD$WRTCACHE: ENTRY(BUFNUM);
     1116     1299
     1117     1300    1           JDCB$ = B$JIT$->B$JIT.DCB$;
     1118     1301    1           FLAG = 0;
     1119     1302    1           GTYP = F$DCB.GTYP;
     1120     1303    1           LVL = F$DCB.LVL;
     1121     1304    1           CALL CALCSIZ;
     1122     1305    1           CALL FMC$UPLIMIT(BUFNUM,BYTES,FC,FLAG) ALTRET(ERR);
     1123     1306    1           F$DCB.BFR.BUFUP(BUFNUM) = '0'B;
     1124     1307    1           F$DCB.GTYP = GTYP;
     1125     1308    1           F$DCB.LVL = LVL;
     1126     1309    1           RETURN;
     1127     1310               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:178  
     1128     1311        /*D*     ENTRY:    FMD$WRTSV
     1129     1312                 ENTRY:    FMD$WRTSVNW
     1130     1313                 DESCRIPTION:
     1131     1314
     1132     1315                      These routines just write out a buffer without releasing
     1133     1316                 it.  One waits, one doesn't (guess).
     1134     1317        */
     1135     1318               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:179  
     1136     1319    1   FMD$WRTSV: ENTRY(BUFNUM);
     1137     1320    1          WAITFLG=1;
     1138     1321    1          GOTO BEGSV;
     1139     1322        /* */
     1140     1323    1   FMD$WRTSVNW: ENTRY(BUFNUM);
     1141     1324    1          WAITFLG=0;
     1142     1325        /* */
     1143     1326    1   BEGSV:  JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */
     1144     1327    1          IF BUFNUM>4 THEN
     1145     1328    1             CALL SC_FMD90;
     1146     1329    1          CALL WRTBFR ALTRET(ERR);
     1147     1330    1          RETURN;
     1148     1331               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:180  
     1149     1332        /*I*     NAME:     WRTBFR
     1150     1333                 PURPOSE:  To write a buffer out
     1151     1334                 DESCRIPTION:
     1152     1335
     1153     1336                      Call CALCSIZ to set up some values, then write the
     1154     1337                 buffer out.
     1155     1338        */
     1156     1339                 %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:181  
     1157     1340        /* WRITE BUFFER IN-PLACE NO-WAIT */
     1158     1341    1   WRTBFR: PROC ALTRET;
     1159     1342        /* */
     1160     1343    2          LVL=F$DCB.LVL;
     1161     1344    2          GTYP=F$DCB.GTYP;
     1162     1345    2          CALL CALCSIZ;
     1163     1346    2          IF ~F$DCB.BFR.CVM(BUFNUM) AND F$DCB.BFR.DA(BUFNUM) ~= 0 AND
     1164     1347    2             F$DCB.BFR1.CX(BUFNUM) = 0 THEN
     1165     1348    2             CALL FMC$STASH(BUFNUM);
     1166     1349    2          ELSE
     1167     1350    2             IF F$DCB.BFR1.CX(BUFNUM) = 0 AND F$DCB.BFR.DA(BUFNUM) ~= 0 THEN
     1168     1351    3                DO;   /* CLEAR CACHE */
     1169     1352    3                DA=F$DCB.BFR.DA(BUFNUM);
     1170     1353    3                CALL FMC$CLR1(DA);
     1171     1354    3                END;  /* CLEAR CACHE */
     1172     1355
     1173     1356    2          F$DCB.LVL=LVL;
     1174     1357    2          F$DCB.GTYP=GTYP;
     1175     1358    2          DA=JDCB$->F$DCB.BFR.DA(BUFNUM);
     1176     1359    2          CALL FMB$QUEUE(BUF$,0,BYTES,DA,FC,WAITFLG,ENTADDR(NIL),0) ALTRET(ERR);
     1177     1360    2          JDCB$->F$DCB.BFR.BUFUP(BUFNUM)='0'B;
     1178     1361    2          RETURN;
     1179     1362    2   ERR:   IF BINBIT(DA,36) = '777777777777'O AND F$DCB.BFR1.CX(BUFNUM) ~= 0 THEN
     1180     1363    2             RETURN;
     1181     1364    2          ALTRETURN;
     1182     1365    2          END WRTBFR;
     1183     1366               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:182  
     1184     1367        /*I*     NAME:     CALCSIZ
     1185     1368                 PURPOSE:  To set up value for the write
     1186     1369                 DESCRIPTION:
     1187     1370
     1188     1371                      Set up GTYP and LVL in the DCB for use by FMC.  Set up
     1189     1372                 the type of write we are going to do.  Set up the number
     1190     1373                 of bytes we want to write.
     1191     1374        */
     1192     1375                 %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:183  
     1193     1376        /* Calculate # words to write, and scrub if necessary */
     1194     1377    1   CALCSIZ: PROC;
     1195     1378        /* LOCAL AUTOMATIC STORAGE */
     1196     1379    2   DCL NUM UBIN;
     1197     1380        /* BASED STORAGE */
     1198     1381    2   DCL ZAP CHAR(NUM) BASED ALIGNED;
     1199     1382
     1200     1383    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM)); /* Buffer pointer               */
     1201     1384    2          IF FM$GRAN.ORG = 0 THEN
     1202     1385    2             F$DCB.GTYP=FM$GRAN.LVL;
     1203     1386    2          ELSE
     1204     1387    3             DO;
     1205     1388    3             F$DCB.GTYP=FMGTFILE;
     1206     1389    3             F$DCB.LVL=FM$GRAN.LVL;
     1207     1390    3             END;
     1208     1391    2          FC=%N_WRBIN;                    /* Assume regular write               */
     1209     1392    2          IF FM$GRAN.ORG=0 THEN
     1210     1393    3             DO CASE(FM$GRAN.LVL);
     1211     1394    3                CASE(FMGTGP,FMGTMAD,FMGTPAD);
     1212     1395    3   CHKSET:         IF FM$SET.WRCMP(F$DCB.SETX) THEN
     1213     1396    3                      FC=%N_WRCMP;  /* Write and compare */
     1214     1397    3                CASE(FMGTFD,FMGTFDSTAR);
     1215     1398    3                   IF F$DCB.STARF THEN
     1216     1399    3                      GOTO CHKSET;
     1217     1400    3                   ELSE
     1218     1401    3                     IF F$DCB.WRCMP THEN
     1219     1402    3                        FC=%N_WRCMP;
     1220     1403    3             END;
     1221     1404
     1222     1405    2          IF BUF$->FM$GRAN.NAVX+BUF$->FM$GRAN.AVAIL~=1024 THEN
     1223     1406    2             BYTES=4096;
     1224     1407    2          ELSE                            /* ONLY WRITE WHAT IS USED            */
     1225     1408    2             BYTES=BUF$->FM$GRAN.NAVX*4;
     1226     1409
     1227     1410    2          IF JDCB$->F$DCB.BFR.SCRUB(BUFNUM) THEN
     1228     1411    3             DO; /* SCRUB AVAIL AREA */
     1229     1412    3             JDCB$->F$DCB.BFR.SCRUB(BUFNUM)='0'B;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:184  
     1230     1413    3             BYTES=4096;
     1231     1414    3             NUM=BUF$->FM$GRAN.AVAIL*4;
     1232     1415    3             PINCRW(BUF$,BUF$->FM$GRAN.NAVX)->ZAP=' ';
     1233     1416    3             END;
     1234     1417
     1235     1418    2          RETURN;
     1236     1419    2          END CALCSIZ;
     1237     1420    1          END FMD$WRTBUF;
     1238     1421               %EOD;

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:185  
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
      No diagnostics issued in procedure FMD$WRTBUF.

   Procedure FMD$WRTBUF requires 539 words for executable code.
   Procedure FMD$WRTBUF requires 34 words of local(AUTO) storage.

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:186  

 Object Unit name= FMD$WRTBUF                                 File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:40:33.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   539   1033  FMD$WRTBUF
    1  RoData even  none     8     10  FMD$WRTBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMD$WRTBUF
     0      4                  yes      Std        1  FMD$FLSHBUF
     0     11                  yes      Std        1  FMD$FLSHBUFNR
     0    420                  yes      Std        1  FMD$WRTCACHE
     0    475                  yes      Std        1  FMD$WRTSV
     0    502                  yes      Std        1  FMD$WRTSVNW
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:187  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 FMC$FINISH
         yes           Std       1 MMJ$UNMAPIOP
         yes           Std       1 FMD$RELBUF
         yes           Std       1 FMD$WRTAHDEA
         yes           Std       1 MMJ$FIOP
         yes           Std       3 FMD$GETBUF
 yes     yes           Std       9 FMB$RIO
         yes           Std       1 FMC$CLR1
         yes           Std       2 MMJ$FBTOIOPM
 yes     yes           Std       4 FMC$UPLIMIT
         yes           Std       1 FMC$STASH
 yes     yes           Std       9 FMB$QUEUE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_FMD90                              SC_FMD91                              SC_FMD89
     SC_FMD101                             B$JIT$                                FM$BUF$
r    FM$SET$                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:188  


      917        1        /*T***********************************************************/
      918        2        /*T*                                                         */
      919        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      920        4        /*T*                                                         */
      921        5        /*T***********************************************************/
      922        6        /*F*   NAME:   FMD$WRTBUF
      923        7               PURPOSE:  Write pool buffer to disk and enter it into
      924        8             the I/O cache if appropriate.                                           */
      925        9
      926       10        /*D*     NAME:     FMD$WRTBUF
      927       11                 ENTRY:    FMD$FLSHBUF, FMD$WRTSV, FMD$WRTSVNW
      928       12                 CALL:     CALL FMD$WRTBUF(BUFNUM)
      929       13                 INPUT:    BUFNUM - Buffer number
      930       14                 DESCRIPTION:
      931       15
      932       16                      Call CALCSIZ to find out how many bytes we have to
      933       17                 write, and set up some other information.  Then call
      934       18                 FMC$FINISH to finish off the buffer if it is cached.
      935       19                 If FLAG is zero, then it wasn't cached, and we weren't
      936       20                 able to cache it.  If the buffer was updated, then
      937       21                 get the user off of the page, and start a no-wait I/O.
      938       22                 If it wasn't updated, then just release the buffer.
      939       23        */
      940       24                 %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:189  
      941       25
      942       26        FMD$WRTBUF: PROC(BUFNUM);

     26  0 000000   000000 700200 xent  FMD$WRTBUF   TSX0  ! X66_AUTO_1
         0 000001   000042 000001                    ZERO    34,1

      943       27        /* PARAMETERS */
      944       28    1   DCL BUFNUM UBIN;
      945       29        /* EXTERNAL ROUTINES */
      946       30    1   DCL FMC$FINISH ENTRY(4) ALTRET;
      947       31    1   DCL FMC$UPLIMIT ENTRY(4) ALTRET;
      948       32    1   DCL FMC$STASH ENTRY(1);
      949       33    1   DCL FMC$CLR1 ENTRY(1);
      950       34    1   DCL MMD$GIOP ENTRY(1) ALTRET;
      951       35    1   DCL MMJ$FIOP ENTRY(1);
      952       36    1   DCL FMB$IOSPIN ENTRY;
      953       37    1   DCL FMD$RELBUF ENTRY(1);
      954       38    1   DCL FMD$GETBUF ENTRY(3);
      955       39    1   DCL FMB$QUEUE ENTRY(9) ALTRET;
      956       40    1   DCL FMB$RIO ENTRY(9) ALTRET;
      957       41    1   DCL FMD$WRTAHDEA ENTRY(1);
      958       42    1   DCL MMJ$FBTOIOPM ENTRY(2);
      959       43    1   DCL MMJ$UNMAPIOP ENTRY(1);
      960       44    1   DCL SC_FMD89 ENTRY CONV(2,0);
      961       45    1   DCL SC_FMD90 ENTRY CONV(2,0);
      962       46    1   DCL SC_FMD91 ENTRY CONV(2,0);
      963       47    1   DCL SC_FMD101 ENTRY CONV(2,0);
      964       48        /* LOCAL AUTOMATIC STORAGE */
      965       49    1   DCL JDCB$ PTR;
      966       50    1   DCL BUF$ PTR;
      967       51    1   DCL VPNO UBIN;
      968       52    1   DCL PPNO UBIN;
      969       53    1   DCL OLDPP UBIN;
      970       54    1   DCL ENTFLG SBIN;
      971       55    1   DCL BYTES UBIN;
      972       56    1   DCL DA UBIN;
      973       57    1   DCL FC UBIN;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:190  
      974       58    1   DCL N UBIN;
      975       59    1   DCL WAITFLG SBIN;
      976       60    1   DCL FLAG SBIN;
      977       61    1   DCL GTYP UBIN;
      978       62    1   DCL LVL UBIN;
      979       63    1   DCL 1 EAINFO,
      980       64    1         2 * BIT(18),
      981       65    1         2 PAGE UBIN(18) UNAL;
      982       66        /* EXTERNAL DATA */
      983       67    1   DCL B$JIT$ PTR SYMREF;
      984       68    1   DCL FM$BUF$(0:0) PTR SYMREF;
      985       69        /* INCLUDE FILES */
      986       70        %MACRO F$DCB(BASED=BASED);
      987       71        %INCLUDE F$DCB;
      988      120        %MEND;
      989      121        %INCLUDE FM$MACROS;
      990      496        %INCLUDE FM_DATA_R;
      991      510        %INCLUDE F$JIT_C;
      992      940        %INCLUDE N_FC_C;
      993      977        %INCLUDE M_INFO_C;
      994     1117        /* BASED STRUCTURES */
      995     1118        %F$DCB (BASED="BASED(JDCB$)");
      996     1168        %FM$GRAN (BASED="BASED(BUF$)");
      997     1172        %FM$CFUJ;
      998     1177        %FM$SET (BASED="BASED(FM$SET$)");
      999     1182    1   DCL WRD SBIN BASED ALIGNED;
     1000     1183    1   DCL 1 ZAP BASED ALIGNED,
     1001     1184    1         2 * UBIN,
     1002     1185    1         2 X CHAR(4092);
     1003     1186        /* */
     1004     1187    1          ENTFLG=0;

   1187  0 000002   200011 450100                    STZ     ENTFLG,,AUTO

     1005     1188    1          GOTO COMMON;

   1188  0 000003   000015 710000 0                  TRA     COMMON
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:191  

     1006     1189    1   FMD$FLSHBUF: ENTRY(BUFNUM);

   1189  0 000004   000000 700200 xent  FMD$FLSHBUF  TSX0  ! X66_AUTO_1
         0 000005   000042 000001                    ZERO    34,1

     1007     1190    1          ENTFLG=1;

   1190  0 000006   000001 235007                    LDA     1,DL
         0 000007   200011 755100                    STA     ENTFLG,,AUTO

     1008     1191    1          GOTO COMMON;

   1191  0 000010   000015 710000 0                  TRA     COMMON

     1009     1192    1   FMD$FLSHBUFNR: ENTRY(BUFNUM);

   1192  0 000011   000000 700200 xent  FMD$FLSHBUF* TSX0  ! X66_AUTO_1
         0 000012   000042 000001                    ZERO    34,1

     1010     1193    1          ENTFLG=2;

   1193  0 000013   000002 235007                    LDA     2,DL
         0 000014   200011 755100                    STA     ENTFLG,,AUTO

   1193  0 000015                       COMMON       null
     1011     1194
     1012     1195    1   COMMON: ;
     1013     1196    1          JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */

   1196  0 000015   000000 470400 xsym               LDP0    B$JIT$
         0 000016   000232 236100                    LDQ     154,,PR0
         0 000017   200004 756100                    STQ     JDCB$,,AUTO

     1014     1197    1          IF ENTFLG = 0 THEN

   1197  0 000020   200011 235100                    LDA     ENTFLG,,AUTO
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:192  
         0 000021   000027 601000 0                  TNZ     s:1199

     1015     1198    1             F$DCB.BFR.BUFUP(BUFNUM)='1'B;

   1198  0 000022   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000023   100000 720100                    LXL0    0,,PR1
         0 000024   200004 473500                    LDP3    JDCB$,,AUTO
         0 000025   400000 236003                    LDQ     -131072,DU
         0 000026   300115 256110                    ORSQ    77,X0,PR3

     1016     1199    1          IF F$DCB.BFR.BUFX(BUFNUM) = 0 AND ENTFLG > 0 THEN

   1199  0 000027   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000030   000000 720100                    LXL0    0,,PR0
         0 000031   200004 471500                    LDP1    JDCB$,,AUTO
         0 000032   100115 236110                    LDQ     77,X0,PR1
         0 000033   037000 316003                    CANQ    15872,DU
         0 000034   000040 601000 0                  TNZ     s:1201
         0 000035   000000 115003                    CMPA    0,DU
         0 000036   000040 604400 0                  TMOZ    s:1201

     1017     1200    1             RETURN;

   1200  0 000037   000000 702200 xent               TSX2  ! X66_ARET

     1018     1201    1          IF BUFNUM>4 THEN

   1201  0 000040   000000 235100                    LDA     0,,PR0
         0 000041   000005 115007                    CMPA    5,DL
         0 000042   000045 602000 0                  TNC     s:1208

     1019     1202    1             CALL SC_FMD90;

   1202  0 000043   000000 713400 xsym               CLIMB   SC_FMD90
         0 000044   000000 600000 xsid               climb   nvectors=         0

     1020     1203        /*S*   SCREECH_CODE:  FMD-S$FM90
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:193  
     1021     1204        *      TYPE:   SUA
     1022     1205        *      MESSAGE:  Bad arguments to FMD$WRTBUF
     1023     1206        */
     1024     1207        /* ATTEMPT TO STASH BUFFER IN THE I/O CACHE */
     1025     1208    1          FLAG=0;

   1208  0 000045   200017 450100                    STZ     FLAG,,AUTO

     1026     1209    1          GTYP=F$DCB.GTYP;

   1209  0 000046   200004 470500                    LDP0    JDCB$,,AUTO
         0 000047   000064 236100                    LDQ     52,,PR0
         0 000050   000035 772000                    QRL     29
         0 000051   000007 376007                    ANQ     7,DL
         0 000052   200020 756100                    STQ     GTYP,,AUTO

     1027     1210    1          LVL=F$DCB.LVL;

   1210  0 000053   000067 236100                    LDQ     55,,PR0
         0 000054   000036 772000                    QRL     30
         0 000055   000007 376007                    ANQ     7,DL
         0 000056   200021 756100                    STQ     LVL,,AUTO

     1028     1211    1          CALL CALCSIZ;                   /* Calc # words to write              */

   1211  0 000057   000662 701000 0                  TSX1    CALCSIZ
         0 000060   000000 011000                    NOP     0

     1029     1212    1          IF (~F$DCB.BFR.CVM(BUFNUM) AND F$DCB.BFR.BUFUP(BUFNUM) AND

   1212  0 000061   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000062   000000 720100                    LXL0    0,,PR0
         0 000063   200004 471500                    LDP1    JDCB$,,AUTO
         0 000064   100115 236110                    LDQ     77,X0,PR1
         0 000065   000003 736000                    QLS     3
         0 000066   400000 376003                    ANQ     -131072,DU
         0 000067   400000 676003                    ERQ     -131072,DU
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:194  
         0 000070   000076 600000 0                  TZE     s:1212+13
         0 000071   100115 234110                    SZN     77,X0,PR1
         0 000072   000076 605000 0                  TPL     s:1212+13
         0 000073   100115 236110                    LDQ     77,X0,PR1
         0 000074   000032 316000 xsym               CANQ    B_VECTNIL+26
         0 000075   000100 601000 0                  TNZ     s:1214
         0 000076   100122 721110                    LXL1    82,X0,PR1
         0 000077   000114 600000 0                  TZE     s:1215

     1030     1213    1             F$DCB.BFR.DA(BUFNUM) ~= 0) OR F$DCB.BFR1.CX(BUFNUM) > 0 THEN
     1031     1214    1             CALL FMC$FINISH(BUFNUM, BYTES, FC, FLAG) ALTRET(ERR);

   1214  0 000100   200017 633500                    EPPR3   FLAG,,AUTO
         0 000101   200033 453500                    STP3    NUM+4,,AUTO
         0 000102   200014 634500                    EPPR4   FC,,AUTO
         0 000103   200032 454500                    STP4    NUM+3,,AUTO
         0 000104   200012 635500                    EPPR5   BYTES,,AUTO
         0 000105   200031 455500                    STP5    NUM+2,,AUTO
         0 000106   200003 236100                    LDQ     @BUFNUM,,AUTO
         0 000107   200030 756100                    STQ     NUM+1,,AUTO
         0 000110   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000111   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000112   000000 701000 xent               TSX1    FMC$FINISH
         0 000113   000363 702000 0                  TSX2    ERR

     1032     1215    1          F$DCB.GTYP=GTYP;

   1215  0 000114   200004 470500                    LDP0    JDCB$,,AUTO
         0 000115   200020 236100                    LDQ     GTYP,,AUTO
         0 000116   000035 736000                    QLS     29
         0 000117   000064 676100                    ERQ     52,,PR0
         0 000120   034000 376003                    ANQ     14336,DU
         0 000121   000064 656100                    ERSQ    52,,PR0

     1033     1216    1          F$DCB.LVL=LVL;

   1216  0 000122   200021 236100                    LDQ     LVL,,AUTO
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:195  
         0 000123   000036 736000                    QLS     30
         0 000124   000067 676100                    ERQ     55,,PR0
         0 000125   070000 376003                    ANQ     28672,DU
         0 000126   000067 656100                    ERSQ    55,,PR0

     1034     1217
     1035     1218    1          IF FLAG = 0 THEN

   1218  0 000127   200017 235100                    LDA     FLAG,,AUTO
         0 000130   000340 601000 0                  TNZ     s:1266

     1036     1219    2             DO;   /* WASN'T CACHED */

     1037     1220    2             DA=F$DCB.BFR.DA(BUFNUM);

   1220  0 000131   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000132   100000 720100                    LXL0    0,,PR1
         0 000133   000115 236110                    LDQ     77,X0,PR0
         0 000134   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000135   200013 756100                    STQ     DA,,AUTO

     1038     1221    2             IF F$DCB.CFU$ ~= ADDR(NIL) AND DA ~= 0 THEN

   1221  0 000136   000066 236100                    LDQ     54,,PR0
         0 000137   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000140   000151 600000 0                  TZE     s:1223
         0 000141   200013 235100                    LDA     DA,,AUTO
         0 000142   000151 600000 0                  TZE     s:1223

     1039     1222    2                CALL FMC$CLR1(DA);

   1222  0 000143   200013 633500                    EPPR3   DA,,AUTO
         0 000144   200030 453500                    STP3    NUM+1,,AUTO
         0 000145   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000147   000000 701000 xent               TSX1    FMC$CLR1
         0 000150   000000 011000                    NOP     0
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:196  

     1040     1223    2             IF F$DCB.BFR.BUFUP(BUFNUM) THEN

   1223  0 000151   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000152   000000 720100                    LXL0    0,,PR0
         0 000153   200004 471500                    LDP1    JDCB$,,AUTO
         0 000154   100115 234110                    SZN     77,X0,PR1
         0 000155   000277 605000 0                  TPL     s:1251

     1041     1224    3                DO;   /* WRITE THE BUFFER */

     1042     1225    3                EAINFO='0'B;

   1225  0 000156   200022 450100                    STZ     EAINFO,,AUTO

     1043     1226    3                VPNO=F$DCB.BFR.BUFX(BUFNUM);

   1226  0 000157   000000 720100                    LXL0    0,,PR0
         0 000160   100115 236110                    LDQ     77,X0,PR1
         0 000161   000033 772000                    QRL     27
         0 000162   000037 376007                    ANQ     31,DL
         0 000163   200006 756100                    STQ     VPNO,,AUTO

     1044     1227    3                IF NOT(JDCB$->F$DCB.BFR.CVM(BUFNUM)) THEN

   1227  0 000164   000000 720100                    LXL0    0,,PR0
         0 000165   100115 236110                    LDQ     77,X0,PR1
         0 000166   040000 316003                    CANQ    16384,DU
         0 000167   000201 601000 0                  TNZ     s:1231

     1045     1228    3                   CALL MMJ$FBTOIOPM(VPNO, OLDPP);

   1228  0 000170   200010 633500                    EPPR3   OLDPP,,AUTO
         0 000171   200031 453500                    STP3    NUM+2,,AUTO
         0 000172   200006 634500                    EPPR4   VPNO,,AUTO
         0 000173   200030 454500                    STP4    NUM+1,,AUTO
         0 000174   200030 630500                    EPPR0   NUM+1,,AUTO
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:197  
         0 000175   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000176   000000 701000 xent               TSX1    MMJ$FBTOIOPM
         0 000177   000000 011000                    NOP     0
         0 000200   000206 710000 0                  TRA     s:1236

     1046     1229    3                ELSE
     1047     1230    4                   DO;

     1048     1231    4                   OLDPP=JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#;

   1231  0 000201   100066 473500                    LDP3    54,,PR1
         0 000202   300005 236100                    LDQ     5,,PR3
         0 000203   777777 376007                    ANQ     -1,DL
         0 000204   200010 756100                    STQ     OLDPP,,AUTO

     1049     1232    4                   IF OLDPP=0 THEN

   1232  0 000205   000402 600000 0                  TZE     XMAPERR

     1050     1233    4                      GOTO XMAPERR;
     1051     1234    4                   END;

     1052     1235
     1053     1236    3                EAINFO.PAGE=OLDPP;

   1236  0 000206   200010 720100                    LXL0    OLDPP,,AUTO
         0 000207   200022 440100                    SXL0    EAINFO,,AUTO

     1054     1237
     1055     1238    3                DA=JDCB$->F$DCB.BFR.DA(BUFNUM);

   1238  0 000210   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000211   000000 721100                    LXL1    0,,PR0
         0 000212   200004 471500                    LDP1    JDCB$,,AUTO
         0 000213   100115 236111                    LDQ     77,X1,PR1
         0 000214   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000215   200013 756100                    STQ     DA,,AUTO
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:198  

     1056     1239    3                CALL FMC$CLR1(DA);

   1239  0 000216   200013 633500                    EPPR3   DA,,AUTO
         0 000217   200030 453500                    STP3    NUM+1,,AUTO
         0 000220   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000222   000000 701000 xent               TSX1    FMC$CLR1
         0 000223   000000 011000                    NOP     0

     1057     1240    3                CALL FMB$RIO(0,OLDPP,BYTES,DA,FC,0,

   1240  0 000224   000000 636000 xent               EAQ     FMD$WRTAHDEA
         0 000225   200030 756100                    STQ     NUM+1,,AUTO
         0 000226   200022 630500                    EPPR0   EAINFO,,AUTO
         0 000227   200041 450500                    STP0    NUM+10,,AUTO
         0 000230   200030 631500                    EPPR1   NUM+1,,AUTO
         0 000231   200040 451500                    STP1    NUM+9,,AUTO
         0 000232   000000 236000 1                  LDQ     0
         0 000233   200037 756100                    STQ     NUM+8,,AUTO
         0 000234   200014 633500                    EPPR3   FC,,AUTO
         0 000235   200036 453500                    STP3    NUM+7,,AUTO
         0 000236   200013 634500                    EPPR4   DA,,AUTO
         0 000237   200035 454500                    STP4    NUM+6,,AUTO
         0 000240   200012 635500                    EPPR5   BYTES,,AUTO
         0 000241   200034 455500                    STP5    NUM+5,,AUTO
         0 000242   200010 636500                    EPPR6   OLDPP,,AUTO
         0 000243   200033 456500                    STP6    NUM+4,,AUTO
         0 000244   200032 756100                    STQ     NUM+3,,AUTO
         0 000245   200032 630500                    EPPR0   NUM+3,,AUTO
         0 000246   000026 631400 xsym               EPPR1   B_VECTNIL+22
         0 000247   000000 701000 xent               TSX1    FMB$RIO
         0 000250   000363 702000 0                  TSX2    ERR

     1058     1241    3                   ENTADDR(FMD$WRTAHDEA),EAINFO) ALTRET(ERR);
     1059     1242
     1060     1243    3                CALL MMJ$UNMAPIOP(VPNO);
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:199  

   1243  0 000251   200006 630500                    EPPR0   VPNO,,AUTO
         0 000252   200030 450500                    STP0    NUM+1,,AUTO
         0 000253   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000254   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000255   000000 701000 xent               TSX1    MMJ$UNMAPIOP
         0 000256   000000 011000                    NOP     0

     1061     1244    3                IF (JDCB$->F$DCB.BFR.CVM(BUFNUM)) THEN

   1244  0 000257   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000260   000000 720100                    LXL0    0,,PR0
         0 000261   200004 471500                    LDP1    JDCB$,,AUTO
         0 000262   100115 236110                    LDQ     77,X0,PR1
         0 000263   040000 316003                    CANQ    16384,DU
         0 000264   000270 600000 0                  TZE     s:1247

     1062     1245    3                   JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#=0;

   1245  0 000265   100066 473500                    LDP3    54,,PR1
         0 000266   000000 221003                    LDX1    0,DU
         0 000267   300005 441100                    SXL1    5,,PR3

     1063     1246
     1064     1247    3                F$DCB.BFR(BUFNUM)=F$DCB.BFR(BUFNUM)&'000777777777'O;

   1247  0 000270   000000 720100                    LXL0    0,,PR0
         0 000271   100115 236110                    LDQ     77,X0,PR1
         0 000272   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000273   100115 756110                    STQ     77,X0,PR1

     1065     1248    3                F$DCB.BFR1(BUFNUM)='0'B;

   1248  0 000274   000000 720100                    LXL0    0,,PR0
         0 000275   100122 450110                    STZ     82,X0,PR1

     1066     1249    3                END;  /* WRITE THE BUFFER */
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:200  

   1249  0 000276   000340 710000 0                  TRA     s:1266

     1067     1250    2             ELSE
     1068     1251    2                IF ENTFLG ~= 2 THEN

   1251  0 000277   200011 235100                    LDA     ENTFLG,,AUTO
         0 000300   000002 115007                    CMPA    2,DL
         0 000301   000340 600000 0                  TZE     s:1266

     1069     1252    3                   DO;   /* RELEASE BUFFER */

     1070     1253    3                   IF JDCB$->F$DCB.BFR.CVM(BUFNUM) AND

   1253  0 000302   100115 236110                    LDQ     77,X0,PR1
         0 000303   040000 316003                    CANQ    16384,DU
         0 000304   000334 600000 0                  TZE     s:1262
         0 000305   100066 236100                    LDQ     54,,PR1
         0 000306   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000307   000334 600000 0                  TZE     s:1262

     1071     1254    3                      JDCB$->F$DCB.CFU$ ~= ADDR(NIL) THEN
     1072     1255    4                      DO;   /* FREE JRNL PAGE */

     1073     1256    4                      CALL FMD$RELBUF(BUFNUM);

   1256  0 000310   200003 630500                    EPPR0   @BUFNUM,,AUTO
         0 000311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000312   000000 701000 xent               TSX1    FMD$RELBUF
         0 000313   000000 011000                    NOP     0

     1074     1257    4                      PPNO=JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#;

   1257  0 000314   200004 470500                    LDP0    JDCB$,,AUTO
         0 000315   000066 471500                    LDP1    54,,PR0
         0 000316   100005 236100                    LDQ     5,,PR1
         0 000317   777777 376007                    ANQ     -1,DL
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:201  
         0 000320   200007 756100                    STQ     PPNO,,AUTO

     1075     1258    4                      CALL MMJ$FIOP(PPNO);

   1258  0 000321   200007 633500                    EPPR3   PPNO,,AUTO
         0 000322   200030 453500                    STP3    NUM+1,,AUTO
         0 000323   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000324   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000325   000000 701000 xent               TSX1    MMJ$FIOP
         0 000326   000000 011000                    NOP     0

     1076     1259    4                      JDCB$->F$DCB.CFU$->FM$CFUJ.PAGE#=0;

   1259  0 000327   200004 470500                    LDP0    JDCB$,,AUTO
         0 000330   000066 471500                    LDP1    54,,PR0
         0 000331   000000 220003                    LDX0    0,DU
         0 000332   100005 440100                    SXL0    5,,PR1

     1077     1260    4                      END;  /* FREE JRNL PAGE */

   1260  0 000333   000340 710000 0                  TRA     s:1266

     1078     1261    3                   ELSE
     1079     1262    3                      CALL FMD$RELBUF(BUFNUM);

   1262  0 000334   200003 630500                    EPPR0   @BUFNUM,,AUTO
         0 000335   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000336   000000 701000 xent               TSX1    FMD$RELBUF
         0 000337   000000 011000                    NOP     0

     1080     1263    3                   END;   /* RELEASE BUFFER */

     1081     1264    2             END;  /* WASN'T CACHED */

     1082     1265
     1083     1266    1          IF F$DCB.BFR.BUFX(BUFNUM) = 0 AND ENTFLG = 2 THEN

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:202  
   1266  0 000340   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000341   000000 720100                    LXL0    0,,PR0
         0 000342   200004 471500                    LDP1    JDCB$,,AUTO
         0 000343   100115 236110                    LDQ     77,X0,PR1
         0 000344   037000 316003                    CANQ    15872,DU
         0 000345   000362 601000 0                  TNZ     s:1268
         0 000346   200011 235100                    LDA     ENTFLG,,AUTO
         0 000347   000002 115007                    CMPA    2,DL
         0 000350   000362 601000 0                  TNZ     s:1268

     1084     1267    1             CALL FMD$GETBUF(BUFNUM, 1, BUF$);

   1267  0 000351   200005 633500                    EPPR3   BUF$,,AUTO
         0 000352   200032 453500                    STP3    NUM+3,,AUTO
         0 000353   000001 236000 1                  LDQ     1
         0 000354   200003 235100                    LDA     @BUFNUM,,AUTO
         0 000355   200030 757100                    STAQ    NUM+1,,AUTO
         0 000356   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000357   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000360   000000 701000 xent               TSX1    FMD$GETBUF
         0 000361   000000 011000                    NOP     0

     1085     1268    1          RETURN;

   1268  0 000362   000000 702200 xent               TSX2  ! X66_ARET

     1086     1269
     1087     1270    1   ERR:   EAINFO=F$DCB.BFR(BUFNUM);

   1270  0 000363   200003 470500       ERR          LDP0    @BUFNUM,,AUTO
         0 000364   000000 720100                    LXL0    0,,PR0
         0 000365   200004 471500                    LDP1    JDCB$,,AUTO
         0 000366   100115 236110                    LDQ     77,X0,PR1
         0 000367   200022 756100                    STQ     EAINFO,,AUTO

     1088     1271    1          F$DCB.BFR.BUFUP(BUFNUM)='0'B;   /* CLEAR FOR RUNDOWN                  */

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:203  
   1271  0 000370   000000 720100                    LXL0    0,,PR0
         0 000371   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000372   100115 356110                    ANSQ    77,X0,PR1

     1089     1272    1          IF BINBIT(DA,36) = '777777777777'O THEN /* DISK NOT SPINNING? */

   1272  0 000373   200013 236100                    LDQ     DA,,AUTO
         0 000374   000027 116000 xsym               CMPQ    B_VECTNIL+23
         0 000375   000400 601000 0                  TNZ     s:1278

     1090     1273    1             CALL SC_FMD101;

   1273  0 000376   000000 713400 xsym               CLIMB   SC_FMD101
         0 000377   000000 600000 xsid               climb   nvectors=         0

     1091     1274        /*S*   SCREECH_CODE:  FMD-S$FM101
     1092     1275        *      TYPE:   SUA
     1093     1276        *      MESSAGE:  Disk not spinning on write of uncached pool buffer */
     1094     1277
     1095     1278    1          CALL SC_FMD91;

   1278  0 000400   000000 713400 xsym               CLIMB   SC_FMD91
         0 000401   000000 600000 xsid               climb   nvectors=         0

     1096     1279        /*S*   SCREECH_CODE:  FMD-S$FM91
     1097     1280        *      TYPE:   SUA
     1098     1281        *      MESSAGE:  Illegal disk address for pool buffer */
     1099     1282
     1100     1283    1   XMAPERR: N=BITBIN(JDCB$->F$DCB.BFR1(BUFNUM)); /* SAVE                         */

   1283  0 000402   200003 470500       XMAPERR      LDP0    @BUFNUM,,AUTO
         0 000403   000000 720100                    LXL0    0,,PR0
         0 000404   200004 471500                    LDP1    JDCB$,,AUTO
         0 000405   100122 235110                    LDA     82,X0,PR1
         0 000406   200015 755100                    STA     N,,AUTO

     1101     1284    1          EAINFO=JDCB$->F$DCB.BFR(BUFNUM);
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:204  

   1284  0 000407   100115 236110                    LDQ     77,X0,PR1
         0 000410   200022 756100                    STQ     EAINFO,,AUTO

     1102     1285    1          JDCB$->F$DCB.BFR(BUFNUM)='0'B;  /* CLEAR SO THAT RUNDOWN              */

   1285  0 000411   000000 720100                    LXL0    0,,PR0
         0 000412   100115 450110                    STZ     77,X0,PR1

     1103     1286    1          JDCB$->F$DCB.BFR1(BUFNUM)='0'B; /* WON'T SCREECH AGAIN                */

   1286  0 000413   000000 720100                    LXL0    0,,PR0
         0 000414   100122 450110                    STZ     82,X0,PR1

     1104     1287    1          CALL SC_FMD89;

   1287  0 000415   000000 713400 xsym               CLIMB   SC_FMD89
         0 000416   000000 600000 xsid               climb   nvectors=         0
         0 000417   000422 710000 0                  TRA     s:1300

     1105     1288        /*S*   SCREECH_CODE:  FMD-S$FM89
     1106     1289        *      TYPE:   SUA
     1107     1290        *      MESSAGE:  Error manipulating map during write-ahead */
     1108     1291               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:205  
     1109     1292        /*D*     ENTRY:    FMD$WRTCACHE
     1110     1293                 DESCRIPTION:
     1111     1294                      Calculates the size of the passed buffer (which is guaranteed
     1112     1295                      to be cached), and calls FMC$UPLIMIT to write it, if necessary.
     1113     1296        */
     1114     1297
     1115     1298    1   FMD$WRTCACHE: ENTRY(BUFNUM);

   1298  0 000420   000000 700200 xent  FMD$WRTCACHE TSX0  ! X66_AUTO_1
         0 000421   000042 000001                    ZERO    34,1

     1116     1299
     1117     1300    1           JDCB$ = B$JIT$->B$JIT.DCB$;

   1300  0 000422   000000 470400 xsym               LDP0    B$JIT$
         0 000423   000232 236100                    LDQ     154,,PR0
         0 000424   200004 756100                    STQ     JDCB$,,AUTO

     1118     1301    1           FLAG = 0;

   1301  0 000425   200017 450100                    STZ     FLAG,,AUTO

     1119     1302    1           GTYP = F$DCB.GTYP;

   1302  0 000426   200004 471500                    LDP1    JDCB$,,AUTO
         0 000427   100064 236100                    LDQ     52,,PR1
         0 000430   000035 772000                    QRL     29
         0 000431   000007 376007                    ANQ     7,DL
         0 000432   200020 756100                    STQ     GTYP,,AUTO

     1120     1303    1           LVL = F$DCB.LVL;

   1303  0 000433   100067 236100                    LDQ     55,,PR1
         0 000434   000036 772000                    QRL     30
         0 000435   000007 376007                    ANQ     7,DL
         0 000436   200021 756100                    STQ     LVL,,AUTO

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:206  
     1121     1304    1           CALL CALCSIZ;

   1304  0 000437   000662 701000 0                  TSX1    CALCSIZ
         0 000440   000000 011000                    NOP     0

     1122     1305    1           CALL FMC$UPLIMIT(BUFNUM,BYTES,FC,FLAG) ALTRET(ERR);

   1305  0 000441   200017 630500                    EPPR0   FLAG,,AUTO
         0 000442   200033 450500                    STP0    NUM+4,,AUTO
         0 000443   200014 631500                    EPPR1   FC,,AUTO
         0 000444   200032 451500                    STP1    NUM+3,,AUTO
         0 000445   200012 633500                    EPPR3   BYTES,,AUTO
         0 000446   200031 453500                    STP3    NUM+2,,AUTO
         0 000447   200003 236100                    LDQ     @BUFNUM,,AUTO
         0 000450   200030 756100                    STQ     NUM+1,,AUTO
         0 000451   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000452   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000453   000000 701000 xent               TSX1    FMC$UPLIMIT
         0 000454   000363 702000 0                  TSX2    ERR

     1123     1306    1           F$DCB.BFR.BUFUP(BUFNUM) = '0'B;

   1306  0 000455   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000456   000000 720100                    LXL0    0,,PR0
         0 000457   200004 471500                    LDP1    JDCB$,,AUTO
         0 000460   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000461   100115 356110                    ANSQ    77,X0,PR1

     1124     1307    1           F$DCB.GTYP = GTYP;

   1307  0 000462   200020 236100                    LDQ     GTYP,,AUTO
         0 000463   000035 736000                    QLS     29
         0 000464   100064 676100                    ERQ     52,,PR1
         0 000465   034000 376003                    ANQ     14336,DU
         0 000466   100064 656100                    ERSQ    52,,PR1

     1125     1308    1           F$DCB.LVL = LVL;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:207  

   1308  0 000467   200021 236100                    LDQ     LVL,,AUTO
         0 000470   000036 736000                    QLS     30
         0 000471   100067 676100                    ERQ     55,,PR1
         0 000472   070000 376003                    ANQ     28672,DU
         0 000473   100067 656100                    ERSQ    55,,PR1

     1126     1309    1           RETURN;

   1309  0 000474   000000 702200 xent               TSX2  ! X66_ARET

     1127     1310               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:208  
     1128     1311        /*D*     ENTRY:    FMD$WRTSV
     1129     1312                 ENTRY:    FMD$WRTSVNW
     1130     1313                 DESCRIPTION:
     1131     1314
     1132     1315                      These routines just write out a buffer without releasing
     1133     1316                 it.  One waits, one doesn't (guess).
     1134     1317        */
     1135     1318               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:209  
     1136     1319    1   FMD$WRTSV: ENTRY(BUFNUM);

   1319  0 000475   000000 700200 xent  FMD$WRTSV    TSX0  ! X66_AUTO_1
         0 000476   000042 000001                    ZERO    34,1

     1137     1320    1          WAITFLG=1;

   1320  0 000477   000001 235007                    LDA     1,DL
         0 000500   200016 755100                    STA     WAITFLG,,AUTO

     1138     1321    1          GOTO BEGSV;

   1321  0 000501   000505 710000 0                  TRA     BEGSV

     1139     1322        /* */
     1140     1323    1   FMD$WRTSVNW: ENTRY(BUFNUM);

   1323  0 000502   000000 700200 xent  FMD$WRTSVNW  TSX0  ! X66_AUTO_1
         0 000503   000042 000001                    ZERO    34,1

     1141     1324    1          WAITFLG=0;

   1324  0 000504   200016 450100                    STZ     WAITFLG,,AUTO

     1142     1325        /* */
     1143     1326    1   BEGSV:  JDCB$=B$JIT$->B$JIT.DCB$;       /* POINTER TO CURRENT DCB             */

   1326  0 000505   000000 470400 xsym  BEGSV        LDP0    B$JIT$
         0 000506   000232 236100                    LDQ     154,,PR0
         0 000507   200004 756100                    STQ     JDCB$,,AUTO

     1144     1327    1          IF BUFNUM>4 THEN

   1327  0 000510   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000511   100000 235100                    LDA     0,,PR1
         0 000512   000005 115007                    CMPA    5,DL
         0 000513   000516 602000 0                  TNC     s:1329
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:210  

     1145     1328    1             CALL SC_FMD90;

   1328  0 000514   000000 713400 xsym               CLIMB   SC_FMD90
         0 000515   000000 600000 xsid               climb   nvectors=         0

     1146     1329    1          CALL WRTBFR ALTRET(ERR);

   1329  0 000516   000521 701000 0                  TSX1    WRTBFR
         0 000517   000363 702000 0                  TSX2    ERR

     1147     1330    1          RETURN;

   1330  0 000520   000000 702200 xent               TSX2  ! X66_ARET

     1148     1331               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:211  
     1149     1332        /*I*     NAME:     WRTBFR
     1150     1333                 PURPOSE:  To write a buffer out
     1151     1334                 DESCRIPTION:
     1152     1335
     1153     1336                      Call CALCSIZ to set up some values, then write the
     1154     1337                 buffer out.
     1155     1338        */
     1156     1339                 %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:212  
     1157     1340        /* WRITE BUFFER IN-PLACE NO-WAIT */
     1158     1341    1   WRTBFR: PROC ALTRET;

   1341  0 000521   200024 741300       WRTBFR       STX1  ! EAINFO+2,,AUTO

     1159     1342        /* */
     1160     1343    2          LVL=F$DCB.LVL;

   1343  0 000522   200004 470500                    LDP0    JDCB$,,AUTO
         0 000523   000067 236100                    LDQ     55,,PR0
         0 000524   000036 772000                    QRL     30
         0 000525   000007 376007                    ANQ     7,DL
         0 000526   200021 756100                    STQ     LVL,,AUTO

     1161     1344    2          GTYP=F$DCB.GTYP;

   1344  0 000527   000064 236100                    LDQ     52,,PR0
         0 000530   000035 772000                    QRL     29
         0 000531   000007 376007                    ANQ     7,DL
         0 000532   200020 756100                    STQ     GTYP,,AUTO

     1162     1345    2          CALL CALCSIZ;

   1345  0 000533   000662 701000 0                  TSX1    CALCSIZ
         0 000534   000000 011000                    NOP     0

     1163     1346    2          IF ~F$DCB.BFR.CVM(BUFNUM) AND F$DCB.BFR.DA(BUFNUM) ~= 0 AND

   1346  0 000535   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000536   000000 720100                    LXL0    0,,PR0
         0 000537   200004 471500                    LDP1    JDCB$,,AUTO
         0 000540   100115 236110                    LDQ     77,X0,PR1
         0 000541   000003 736000                    QLS     3
         0 000542   400000 376003                    ANQ     -131072,DU
         0 000543   400000 676003                    ERQ     -131072,DU
         0 000544   000557 600000 0                  TZE     s:1350
         0 000545   100115 236110                    LDQ     77,X0,PR1
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:213  
         0 000546   000032 316000 xsym               CANQ    B_VECTNIL+26
         0 000547   000557 600000 0                  TZE     s:1350
         0 000550   100122 721110                    LXL1    82,X0,PR1
         0 000551   000557 601000 0                  TNZ     s:1350

     1164     1347    2             F$DCB.BFR1.CX(BUFNUM) = 0 THEN
     1165     1348    2             CALL FMC$STASH(BUFNUM);

   1348  0 000552   200003 630500                    EPPR0   @BUFNUM,,AUTO
         0 000553   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000554   000000 701000 xent               TSX1    FMC$STASH
         0 000555   000000 011000                    NOP     0
         0 000556   000575 710000 0                  TRA     s:1356

     1166     1349    2          ELSE
     1167     1350    2             IF F$DCB.BFR1.CX(BUFNUM) = 0 AND F$DCB.BFR.DA(BUFNUM) ~= 0 THEN

   1350  0 000557   100122 721110                    LXL1    82,X0,PR1
         0 000560   000575 601000 0                  TNZ     s:1356
         0 000561   100115 236110                    LDQ     77,X0,PR1
         0 000562   000032 316000 xsym               CANQ    B_VECTNIL+26
         0 000563   000575 600000 0                  TZE     s:1356

     1168     1351    3                DO;   /* CLEAR CACHE */

     1169     1352    3                DA=F$DCB.BFR.DA(BUFNUM);

   1352  0 000564   100115 236110                    LDQ     77,X0,PR1
         0 000565   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000566   200013 756100                    STQ     DA,,AUTO

     1170     1353    3                CALL FMC$CLR1(DA);

   1353  0 000567   200013 633500                    EPPR3   DA,,AUTO
         0 000570   200030 453500                    STP3    NUM+1,,AUTO
         0 000571   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000572   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:214  
         0 000573   000000 701000 xent               TSX1    FMC$CLR1
         0 000574   000000 011000                    NOP     0

     1171     1354    3                END;  /* CLEAR CACHE */

     1172     1355
     1173     1356    2          F$DCB.LVL=LVL;

   1356  0 000575   200004 470500                    LDP0    JDCB$,,AUTO
         0 000576   200021 236100                    LDQ     LVL,,AUTO
         0 000577   000036 736000                    QLS     30
         0 000600   000067 676100                    ERQ     55,,PR0
         0 000601   070000 376003                    ANQ     28672,DU
         0 000602   000067 656100                    ERSQ    55,,PR0

     1174     1357    2          F$DCB.GTYP=GTYP;

   1357  0 000603   200020 236100                    LDQ     GTYP,,AUTO
         0 000604   000035 736000                    QLS     29
         0 000605   000064 676100                    ERQ     52,,PR0
         0 000606   034000 376003                    ANQ     14336,DU
         0 000607   000064 656100                    ERSQ    52,,PR0

     1175     1358    2          DA=JDCB$->F$DCB.BFR.DA(BUFNUM);

   1358  0 000610   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 000611   100000 720100                    LXL0    0,,PR1
         0 000612   000115 236110                    LDQ     77,X0,PR0
         0 000613   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000614   200013 756100                    STQ     DA,,AUTO

     1176     1359    2          CALL FMB$QUEUE(BUF$,0,BYTES,DA,FC,WAITFLG,ENTADDR(NIL),0) ALTRET(ERR);

   1359  0 000615   000002 237000 1                  LDAQ    2
         0 000616   200036 757100                    STAQ    NUM+7,,AUTO
         0 000617   200016 633500                    EPPR3   WAITFLG,,AUTO
         0 000620   200035 453500                    STP3    NUM+6,,AUTO
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:215  
         0 000621   200014 634500                    EPPR4   FC,,AUTO
         0 000622   200034 454500                    STP4    NUM+5,,AUTO
         0 000623   200013 635500                    EPPR5   DA,,AUTO
         0 000624   200033 455500                    STP5    NUM+4,,AUTO
         0 000625   200012 636500                    EPPR6   BYTES,,AUTO
         0 000626   200032 456500                    STP6    NUM+3,,AUTO
         0 000627   000000 236000 1                  LDQ     0
         0 000630   200031 756100                    STQ     NUM+2,,AUTO
         0 000631   200005 637500                    EPPR7   BUF$,,AUTO
         0 000632   200030 457500                    STP7    NUM+1,,AUTO
         0 000633   200030 630500                    EPPR0   NUM+1,,AUTO
         0 000634   000026 631400 xsym               EPPR1   B_VECTNIL+22
         0 000635   000000 701000 xent               TSX1    FMB$QUEUE
         0 000636   000646 702000 0                  TSX2    ERR

     1177     1360    2          JDCB$->F$DCB.BFR.BUFUP(BUFNUM)='0'B;

   1360  0 000637   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000640   000000 720100                    LXL0    0,,PR0
         0 000641   200004 471500                    LDP1    JDCB$,,AUTO
         0 000642   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000643   100115 356110                    ANSQ    77,X0,PR1

     1178     1361    2          RETURN;

   1361  0 000644   200024 221300                    LDX1  ! EAINFO+2,,AUTO
         0 000645   000001 702211                    TSX2  ! 1,X1

     1179     1362    2   ERR:   IF BINBIT(DA,36) = '777777777777'O AND F$DCB.BFR1.CX(BUFNUM) ~= 0 THEN

   1362  0 000646   200013 236100       ERR          LDQ     DA,,AUTO
         0 000647   000027 116000 xsym               CMPQ    B_VECTNIL+23
         0 000650   000660 601000 0                  TNZ     s:1364
         0 000651   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000652   000000 720100                    LXL0    0,,PR0
         0 000653   200004 471500                    LDP1    JDCB$,,AUTO
         0 000654   100122 721110                    LXL1    82,X0,PR1
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:216  
         0 000655   000660 600000 0                  TZE     s:1364

     1180     1363    2             RETURN;

   1363  0 000656   200024 221300                    LDX1  ! EAINFO+2,,AUTO
         0 000657   000001 702211                    TSX2  ! 1,X1

     1181     1364    2          ALTRETURN;

   1364  0 000660   200024 221300                    LDX1  ! EAINFO+2,,AUTO
         0 000661   000000 702211                    TSX2  ! 0,X1

     1182     1365    2          END WRTBFR;
     1183     1366               %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:217  
     1184     1367        /*I*     NAME:     CALCSIZ
     1185     1368                 PURPOSE:  To set up value for the write
     1186     1369                 DESCRIPTION:
     1187     1370
     1188     1371                      Set up GTYP and LVL in the DCB for use by FMC.  Set up
     1189     1372                 the type of write we are going to do.  Set up the number
     1190     1373                 of bytes we want to write.
     1191     1374        */
     1192     1375                 %EJECT;
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:218  
     1193     1376        /* Calculate # words to write, and scrub if necessary */
     1194     1377    1   CALCSIZ: PROC;

   1377  0 000662   200026 741300       CALCSIZ      STX1  ! EAINFO+4,,AUTO

     1195     1378        /* LOCAL AUTOMATIC STORAGE */
     1196     1379    2   DCL NUM UBIN;
     1197     1380        /* BASED STORAGE */
     1198     1381    2   DCL ZAP CHAR(NUM) BASED ALIGNED;
     1199     1382
     1200     1383    2          BUF$=FM$BUF$(F$DCB.BFR.BUFX(BUFNUM)); /* Buffer pointer               */

   1383  0 000663   200003 470500                    LDP0    @BUFNUM,,AUTO
         0 000664   000000 720100                    LXL0    0,,PR0
         0 000665   200004 471500                    LDP1    JDCB$,,AUTO
         0 000666   100115 236110                    LDQ     77,X0,PR1
         0 000667   000033 772000                    QRL     27
         0 000670   000037 376007                    ANQ     31,DL
         0 000671   000000 236006 xsym               LDQ     FM$BUF$,QL
         0 000672   200005 756100                    STQ     BUF$,,AUTO

     1201     1384    2          IF FM$GRAN.ORG = 0 THEN

   1384  0 000673   200005 473500                    LDP3    BUF$,,AUTO
         0 000674   300001 236100                    LDQ     1,,PR3
         0 000675   036000 316007                    CANQ    15360,DL
         0 000676   000704 601000 0                  TNZ     s:1388

     1202     1385    2             F$DCB.GTYP=FM$GRAN.LVL;

   1385  0 000677   000017 736000                    QLS     15
         0 000700   100064 676100                    ERQ     52,,PR1
         0 000701   034000 376003                    ANQ     14336,DU
         0 000702   100064 656100                    ERSQ    52,,PR1
         0 000703   000715 710000 0                  TRA     s:1391

     1203     1386    2          ELSE
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:219  
     1204     1387    3             DO;

     1205     1388    3             F$DCB.GTYP=FMGTFILE;

   1388  0 000704   100064 236100                    LDQ     52,,PR1
         0 000705   000004 376000 1                  ANQ     4
         0 000706   030000 276003                    ORQ     12288,DU
         0 000707   100064 756100                    STQ     52,,PR1

     1206     1389    3             F$DCB.LVL=FM$GRAN.LVL;

   1389  0 000710   300001 236100                    LDQ     1,,PR3
         0 000711   000020 736000                    QLS     16
         0 000712   100067 676100                    ERQ     55,,PR1
         0 000713   070000 376003                    ANQ     28672,DU
         0 000714   100067 656100                    ERSQ    55,,PR1

     1207     1390    3             END;

     1208     1391    2          FC=%N_WRBIN;                    /* Assume regular write               */

   1391  0 000715   000003 235007                    LDA     3,DL
         0 000716   200014 755100                    STA     FC,,AUTO

     1209     1392    2          IF FM$GRAN.ORG=0 THEN

   1392  0 000717   300001 236100                    LDQ     1,,PR3
         0 000720   036000 316007                    CANQ    15360,DL
         0 000721   000763 601000 0                  TNZ     s:1405

     1210     1393    3             DO CASE(FM$GRAN.LVL);

   1393  0 000722   300001 236100                    LDQ     1,,PR3
         0 000723   000016 772000                    QRL     14
         0 000724   000007 376007                    ANQ     7,DL
         0 000725   000010 116007                    CMPQ    8,DL
         0 000726   000730 602006 0                  TNC     s:1393+6,QL
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:220  
         0 000727   000763 710000 0                  TRA     s:1405
         0 000730   000763 710000 0                  TRA     s:1405
         0 000731   000740 710000 0                  TRA     CHKSET
         0 000732   000740 710000 0                  TRA     CHKSET
         0 000733   000740 710000 0                  TRA     CHKSET
         0 000734   000753 710000 0                  TRA     s:1398
         0 000735   000763 710000 0                  TRA     s:1405
         0 000736   000763 710000 0                  TRA     s:1405
         0 000737   000753 710000 0                  TRA     s:1398

     1211     1394    3                CASE(FMGTGP,FMGTMAD,FMGTPAD);

     1212     1395    3   CHKSET:         IF FM$SET.WRCMP(F$DCB.SETX) THEN

   1395  0 000740   200004 470500       CHKSET       LDP0    JDCB$,,AUTO
         0 000741   000051 236100                    LDQ     41,,PR0
         0 000742   000003 736000                    QLS     3
         0 000743   000005 376000 1                  ANQ     5
         0 000744   000000 471400 xsym               LDP1    FM$SET$
         0 000745   100002 236106                    LDQ     2,QL,PR1
         0 000746   100000 316003                    CANQ    32768,DU
         0 000747   000763 600000 0                  TZE     s:1405

     1213     1396    3                      FC=%N_WRCMP;  /* Write and compare */

   1396  0 000750   000007 235007                    LDA     7,DL
         0 000751   200014 755100                    STA     FC,,AUTO
         0 000752   000763 710000 0                  TRA     s:1405

     1214     1397    3                CASE(FMGTFD,FMGTFDSTAR);

     1215     1398    3                   IF F$DCB.STARF THEN

   1398  0 000753   100064 236100                    LDQ     52,,PR1
         0 000754   200000 316003                    CANQ    65536,DU
         0 000755   000740 601000 0                  TNZ     CHKSET

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:221  
     1216     1399    3                      GOTO CHKSET;
     1217     1400    3                   ELSE
     1218     1401    3                     IF F$DCB.WRCMP THEN

   1401  0 000756   100067 236100                    LDQ     55,,PR1
         0 000757   004000 316003                    CANQ    2048,DU
         0 000760   000763 600000 0                  TZE     s:1405

     1219     1402    3                        FC=%N_WRCMP;

   1402  0 000761   000007 235007                    LDA     7,DL
         0 000762   200014 755100                    STA     FC,,AUTO

     1220     1403    3             END;

     1221     1404
     1222     1405    2          IF BUF$->FM$GRAN.NAVX+BUF$->FM$GRAN.AVAIL~=1024 THEN

   1405  0 000763   200005 470500                    LDP0    BUF$,,AUTO
         0 000764   000001 236100                    LDQ     1,,PR0
         0 000765   001777 376007                    ANQ     1023,DL
         0 000766   200030 756100                    STQ     NUM+1,,AUTO
         0 000767   000001 236100                    LDQ     1,,PR0
         0 000770   000022 772000                    QRL     18
         0 000771   200030 036100                    ADLQ    NUM+1,,AUTO
         0 000772   002000 116007                    CMPQ    1024,DL
         0 000773   000777 600000 0                  TZE     s:1408

     1223     1406    2             BYTES=4096;

   1406  0 000774   010000 235007                    LDA     4096,DL
         0 000775   200012 755100                    STA     BYTES,,AUTO
         0 000776   001003 710000 0                  TRA     s:1410

     1224     1407    2          ELSE                            /* ONLY WRITE WHAT IS USED            */
     1225     1408    2             BYTES=BUF$->FM$GRAN.NAVX*4;

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:222  
   1408  0 000777   000001 236100                    LDQ     1,,PR0
         0 001000   000020 772000                    QRL     16
         0 001001   000006 376000 1                  ANQ     6
         0 001002   200012 756100                    STQ     BYTES,,AUTO

     1226     1409
     1227     1410    2          IF JDCB$->F$DCB.BFR.SCRUB(BUFNUM) THEN

   1410  0 001003   200003 471500                    LDP1    @BUFNUM,,AUTO
         0 001004   100000 720100                    LXL0    0,,PR1
         0 001005   200004 473500                    LDP3    JDCB$,,AUTO
         0 001006   300115 236110                    LDQ     77,X0,PR3
         0 001007   200000 316003                    CANQ    65536,DU
         0 001010   001031 600000 0                  TZE     s:1418

     1228     1411    3             DO; /* SCRUB AVAIL AREA */

     1229     1412    3             JDCB$->F$DCB.BFR.SCRUB(BUFNUM)='0'B;

   1412  0 001011   000007 236000 1                  LDQ     7
         0 001012   300115 356110                    ANSQ    77,X0,PR3

     1230     1413    3             BYTES=4096;

   1413  0 001013   010000 235007                    LDA     4096,DL
         0 001014   200012 755100                    STA     BYTES,,AUTO

     1231     1414    3             NUM=BUF$->FM$GRAN.AVAIL*4;

   1414  0 001015   200005 470500                    LDP0    BUF$,,AUTO
         0 001016   000001 236100                    LDQ     1,,PR0
         0 001017   000002 736000                    QLS     2
         0 001020   007774 376007                    ANQ     4092,DL
         0 001021   200027 756100                    STQ     NUM,,AUTO

     1232     1415    3             PINCRW(BUF$,BUF$->FM$GRAN.NAVX)->ZAP=' ';

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:223  
   1415  0 001022   000001 220100                    LDX0    1,,PR0
         0 001023   000000 635010                    EAA     0,X0
         0 001024   000020 771000                    ARL     16
         0 001025   000000 621006                    EAX1    0,QL
         0 001026   040145 100400                    MLR     fill='040'O
         0 001027   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         0 001030   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1

     1233     1416    3             END;

     1234     1417
     1235     1418    2          RETURN;

   1418  0 001031   200026 221300                    LDX1  ! EAINFO+4,,AUTO
         0 001032   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   1     000   000002 006000   000003 006000   000002 006000   000002 006000    ................
   1     004   743777 777777   000007 777770   000003 777774   577777 777777    ................
     1236     1419    2          END CALCSIZ;
     1237     1420    1          END FMD$WRTBUF;
     1238     1421               %EOD;

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:224  
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   FM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FM$MACROS.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
      No diagnostics issued in procedure FMD$WRTBUF.
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:225  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @BUFNUM                    5-0-0/w PTR         r     1 BUF$
    *0-0-0/w UBIN        r     1 BUFNUM                    12-0-0/w UBIN        r     1 BYTES
    13-0-0/w UBIN        r     1 DA                        22-0-0/b STRC        r     1 EAINFO
    11-0-0/w SBIN        r     1 ENTFLG                    14-0-0/w UBIN        r     1 FC
    17-0-0/w SBIN        r     1 FLAG                      20-0-0/w UBIN        r     1 GTYP
     4-0-0/w PTR         r     1 JDCB$                     21-0-0/w UBIN        r     1 LVL
    15-0-0/w UBIN        r     1 N                         27-0-0/w UBIN        r     1 NUM
    10-0-0/w UBIN        r     1 OLDPP                      7-0-0/w UBIN        r     1 PPNO
     6-0-0/w UBIN        r     1 VPNO                      16-0-0/w SBIN        r     1 WAITFLG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 FM$BUF$(0:0)
     0-0-0/w PTR         r     1 FM$SET$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUJ                    0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w STRC(288)   r     1 FM$SET(0:0)                0-0-0/w ACHR        r     1 ZAP

PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:226  

   Procedure FMD$WRTBUF requires 539 words for executable code.
   Procedure FMD$WRTBUF requires 34 words of local(AUTO) storage.
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:227  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:228  
          MINI XREF LISTING

B$JIT.DCB$
       927**DCL      1196>>ASSIGN   1300>>ASSIGN   1326>>ASSIGN
B$JIT.ERR.MID
       838**DCL       838--REDEF
B$JIT$
        67**DCL       832--IMP-PTR  1196>>ASSIGN   1300>>ASSIGN   1326>>ASSIGN
BEGSV
      1326**LABEL    1321--GOTO
BUF$
        50**DCL      1169--IMP-PTR  1267<>CALL     1359<>CALL     1383<<ASSIGN   1384>>IF       1385>>ASSIGN
      1389>>ASSIGN   1392>>IF       1393>>DOCASE   1405>>IF       1405>>IF       1408>>ASSIGN   1414>>ASSIGN
      1415>>ASSIGN   1415>>ASSIGN
BUFNUM
        28**DCL        26--PROC     1189--ENTRY    1192--ENTRY    1198>>ASSIGN   1199>>IF       1201>>IF
      1212>>IF       1212>>IF       1212>>IF       1212>>IF       1214<>CALL     1220>>ASSIGN   1223>>IF
      1226>>ASSIGN   1227>>IF       1238>>ASSIGN   1244>>IF       1247>>ASSIGN   1247>>ASSIGN   1248>>ASSIGN
      1253>>IF       1256<>CALL     1262<>CALL     1266>>IF       1267<>CALL     1270>>ASSIGN   1271>>ASSIGN
      1283>>ASSIGN   1284>>ASSIGN   1285>>ASSIGN   1286>>ASSIGN   1298--ENTRY    1305<>CALL     1306>>ASSIGN
      1319--ENTRY    1323--ENTRY    1327>>IF       1346>>IF       1346>>IF       1346>>IF       1348<>CALL
      1350>>IF       1350>>IF       1352>>ASSIGN   1358>>ASSIGN   1360>>ASSIGN   1362>>IF       1383>>ASSIGN
      1410>>IF       1412>>ASSIGN
BYTES
        55**DCL      1214<>CALL     1240<>CALL     1305<>CALL     1359<>CALL     1406<<ASSIGN   1408<<ASSIGN
      1413<<ASSIGN
CALCSIZ
      1377**PROC     1211--CALL     1304--CALL     1345--CALL
CHKSET IN PROCEDURE CALCSIZ
      1395**LABEL    1399--GOTO
COMMON
      1193**LABEL    1188--GOTO     1191--GOTO
DA
        56**DCL      1220<<ASSIGN   1221>>IF       1222<>CALL     1238<<ASSIGN   1239<>CALL     1240<>CALL
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:229  
      1272>>IF       1352<<ASSIGN   1353<>CALL     1358<<ASSIGN   1359<>CALL     1362>>IF
EAINFO
        63**DCL      1225<<ASSIGN   1240<>CALL     1270<<ASSIGN   1284<<ASSIGN
EAINFO.PAGE
        65**DCL      1236<<ASSIGN
ENTFLG
        54**DCL      1187<<ASSIGN   1190<<ASSIGN   1193<<ASSIGN   1197>>IF       1199>>IF       1251>>IF
      1266>>IF
ERR
      1270**LABEL    1214--CALLALT  1240--CALLALT  1305--CALLALT  1329--CALLALT
ERR IN PROCEDURE WRTBFR
      1362**LABEL    1359--CALLALT
F$DCB.ACTPOS
      1144**DCL      1144--REDEF
F$DCB.ARS
      1119**DCL      1119--REDEF
F$DCB.ATTR
      1137**DCL      1138--REDEF
F$DCB.BFR
      1163**DCL      1247<<ASSIGN   1247>>ASSIGN   1270>>ASSIGN   1284>>ASSIGN   1285<<ASSIGN
F$DCB.BFR.BUFUP
      1163**DCL      1198<<ASSIGN   1212>>IF       1223>>IF       1271<<ASSIGN   1306<<ASSIGN   1360<<ASSIGN
F$DCB.BFR.BUFX
      1164**DCL      1199>>IF       1226>>ASSIGN   1266>>IF       1383>>ASSIGN
F$DCB.BFR.CVM
      1164**DCL      1212>>IF       1227>>IF       1244>>IF       1253>>IF       1346>>IF
F$DCB.BFR.DA
      1164**DCL      1212>>IF       1220>>ASSIGN   1238>>ASSIGN   1346>>IF       1350>>IF       1352>>ASSIGN
      1358>>ASSIGN
F$DCB.BFR.SCRUB
      1163**DCL      1410>>IF       1412<<ASSIGN
F$DCB.BFR1
      1164**DCL      1248<<ASSIGN   1283>>ASSIGN   1286<<ASSIGN
F$DCB.BFR1.CX
      1165**DCL      1212>>IF       1346>>IF       1350>>IF       1362>>IF
F$DCB.BORROW
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:230  
      1152**DCL      1152--REDEF    1152--REDEF    1152--REDEF
F$DCB.CFU$
      1153**DCL      1221>>IF       1231>>ASSIGN   1245>>ASSIGN   1253>>IF       1257>>ASSIGN   1259>>ASSIGN
F$DCB.DCBNAME.L
      1166**DCL      1166--IMP-SIZ
F$DCB.EOMCHAR
      1123**DCL      1123--REDEF
F$DCB.FLDID
      1147**DCL      1147--REDEF
F$DCB.FORM$
      1141**DCL      1141--REDEF
F$DCB.FSECT
      1157**DCL      1157--REDEF
F$DCB.FSN
      1134**DCL      1134--REDEF    1134--REDEF    1135--REDEF
F$DCB.GTYP
      1148**DCL      1209>>ASSIGN   1215<<ASSIGN   1302>>ASSIGN   1307<<ASSIGN   1344>>ASSIGN   1357<<ASSIGN
      1385<<ASSIGN   1388<<ASSIGN
F$DCB.HEADER$
      1140**DCL      1140--REDEF
F$DCB.IXTNSIZE
      1138**DCL      1138--REDEF
F$DCB.LASTSTA$
      1128**DCL      1128--REDEF
F$DCB.LVL
      1153**DCL      1153--REDEF    1210>>ASSIGN   1216<<ASSIGN   1303>>ASSIGN   1308<<ASSIGN   1343>>ASSIGN
      1356<<ASSIGN   1389<<ASSIGN
F$DCB.NAME.C
      1128**DCL      1128--REDEF
F$DCB.NOEOF
      1149**DCL      1149--REDEF
F$DCB.NRECS
      1139**DCL      1139--REDEF
F$DCB.NRECX
      1158**DCL      1158--REDEF
F$DCB.OHDR
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:231  
      1150**DCL      1150--REDEF
F$DCB.ORG
      1133**DCL      1133--REDEF
F$DCB.PRECNO
      1156**DCL      1156--REDEF
F$DCB.RCSZ
      1161**DCL      1161--REDEF
F$DCB.RES
      1129**DCL      1129--REDEF
F$DCB.SETX
      1141**DCL      1141--REDEF    1395>>IF
F$DCB.STARF
      1148**DCL      1398>>IF
F$DCB.TAB$
      1140**DCL      1141--REDEF
F$DCB.TDA
      1155**DCL      1155--REDEF
F$DCB.WRCMP
      1153**DCL      1401>>IF
F$DCB.WSN
      1130**DCL      1130--REDEF
FC
        57**DCL      1214<>CALL     1240<>CALL     1305<>CALL     1359<>CALL     1391<<ASSIGN   1396<<ASSIGN
      1402<<ASSIGN
FLAG
        60**DCL      1208<<ASSIGN   1214<>CALL     1218>>IF       1301<<ASSIGN   1305<>CALL
FM$BUF$
        68**DCL      1383>>ASSIGN
FM$CFUJ.PAGE#
      1174**DCL      1231>>ASSIGN   1245<<ASSIGN   1257>>ASSIGN   1259<<ASSIGN
FM$GRAN.AVAIL
      1170**DCL      1405>>IF       1414>>ASSIGN
FM$GRAN.LVL
      1169**DCL      1385>>ASSIGN   1389>>ASSIGN   1393>>DOCASE
FM$GRAN.NAVX
      1169**DCL      1405>>IF       1408>>ASSIGN   1415>>ASSIGN
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:232  
FM$GRAN.ORG
      1169**DCL      1384>>IF       1392>>IF
FM$SET.USERLIST
      1179**DCL      1179--REDEF
FM$SET.WRCMP
      1178**DCL      1395>>IF
FM$SET$
       508**DCL      1178--IMP-PTR  1395>>IF
FMB$QUEUE
        39**DCL-ENT  1359--CALL
FMB$RIO
        40**DCL-ENT  1240--CALL
FMC$CLR1
        33**DCL-ENT  1222--CALL     1239--CALL     1353--CALL
FMC$FINISH
        30**DCL-ENT  1214--CALL
FMC$STASH
        32**DCL-ENT  1348--CALL
FMC$UPLIMIT
        31**DCL-ENT  1305--CALL
FMD$GETBUF
        38**DCL-ENT  1267--CALL
FMD$RELBUF
        37**DCL-ENT  1256--CALL     1262--CALL
FMD$WRTAHDEA
        41**DCL-ENT  1240--CALL
GTYP
        61**DCL      1209<<ASSIGN   1215>>ASSIGN   1302<<ASSIGN   1307>>ASSIGN   1344<<ASSIGN   1357>>ASSIGN
JDCB$
        49**DCL      1119--IMP-PTR  1196<<ASSIGN   1198>>ASSIGN   1199>>IF       1209>>ASSIGN   1210>>ASSIGN
      1212>>IF       1212>>IF       1212>>IF       1212>>IF       1215>>ASSIGN   1216>>ASSIGN   1220>>ASSIGN
      1221>>IF       1223>>IF       1226>>ASSIGN   1227>>IF       1231>>ASSIGN   1238>>ASSIGN   1244>>IF
      1245>>ASSIGN   1247>>ASSIGN   1247>>ASSIGN   1248>>ASSIGN   1253>>IF       1253>>IF       1257>>ASSIGN
      1259>>ASSIGN   1266>>IF       1270>>ASSIGN   1271>>ASSIGN   1283>>ASSIGN   1284>>ASSIGN   1285>>ASSIGN
      1286>>ASSIGN   1300<<ASSIGN   1302>>ASSIGN   1303>>ASSIGN   1306>>ASSIGN   1307>>ASSIGN   1308>>ASSIGN
      1326<<ASSIGN   1343>>ASSIGN   1344>>ASSIGN   1346>>IF       1346>>IF       1346>>IF       1350>>IF
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:233  
      1350>>IF       1352>>ASSIGN   1356>>ASSIGN   1357>>ASSIGN   1358>>ASSIGN   1360>>ASSIGN   1362>>IF
      1383>>ASSIGN   1385>>ASSIGN   1388>>ASSIGN   1389>>ASSIGN   1395>>IF       1398>>IF       1401>>IF
      1410>>IF       1412>>ASSIGN
LVL
        62**DCL      1210<<ASSIGN   1216>>ASSIGN   1303<<ASSIGN   1308>>ASSIGN   1343<<ASSIGN   1356>>ASSIGN
MMJ$FBTOIOPM
        42**DCL-ENT  1228--CALL
MMJ$FIOP
        35**DCL-ENT  1258--CALL
MMJ$UNMAPIOP
        43**DCL-ENT  1243--CALL
N
        58**DCL      1283<<ASSIGN
NUM IN PROCEDURE CALCSIZ
      1379**DCL      1381--IMP-SIZ  1414<<ASSIGN   1415>>ASSIGN
OLDPP
        53**DCL      1228<>CALL     1231<<ASSIGN   1232>>IF       1236>>ASSIGN   1240<>CALL
PPNO
        52**DCL      1257<<ASSIGN   1258<>CALL
SC_FMD101
        47**DCL-ENT  1273--CALL
SC_FMD89
        44**DCL-ENT  1287--CALL
SC_FMD90
        45**DCL-ENT  1202--CALL     1328--CALL
SC_FMD91
        46**DCL-ENT  1278--CALL
VPNO
        51**DCL      1226<<ASSIGN   1228<>CALL     1243<>CALL
WAITFLG
        59**DCL      1320<<ASSIGN   1324<<ASSIGN   1359<>CALL
WRTBFR
      1341**PROC     1329--CALL
XMAPERR
      1283**LABEL    1233--GOTO
ZAP IN PROCEDURE CALCSIZ
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:234  
      1381**DCL      1415<<ASSIGN
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:235  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FMD$WRTBUF File=FMD$BUF.:E05TSI                               TUE 07/29/97 16:40 Page:236  
              MINI UREF LISTING

F$CFU$     507**DCL
FMB$IOSPIN      36**DCL-ENT
FMD$FLSHBUF    1189**ENTRY
FMD$FLSHBUFNR    1192**ENTRY
FMD$WRTBUF      26**PROC
FMD$WRTCACHE    1298**ENTRY
FMD$WRTSV    1319**ENTRY
FMD$WRTSVNW    1323**ENTRY
FM_CFUWAIT     507**DCL
FM_CFUWGRB     507**DCL
FM_EOP     505**DCL
FM_FRMAX     504**DCL
FM_FRZERO     504**DCL
FM_GCT     508**DCL
FM_GIP     508**DCL
FM_GPSDA     505**DCL
FM_HASH     506**DCL
FM_MADSDA     505**DCL
FM_PADSDA     505**DCL
FM_SRMAX     504**DCL
FM_SRZERO     504**DCL
FM_SYSACCTX     508**DCL
FM_SYSSETX     508**DCL
FM_TRUNC     506**DCL
FM_WSQ     506**DCL
F_CWLK     507**DCL
F_CWUSER     507**DCL
F_DCBLOCK     506**DCL
MMD$GIOP      34**DCL-ENT
WRD    1182**DCL
ZAP    1183**DCL

PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:237  
     1239        1        /*T***********************************************************/
     1240        2        /*T*                                                         */
     1241        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1242        4        /*T*                                                         */
     1243        5        /*T***********************************************************/
     1244        6        /*F*   NAME:   FMD$WRTAHDEA
     1245        7        *       PURPOSE:  End-action routine for FMD$WRTBUF
     1246        8        */
     1247        9        /* */
     1248       10        /*D*     NAME:     FMD$WRTAHDEA
     1249       11                 CALL:     CALL FMD$WRTAHDEA
     1250       12                 PURPOSE:  End action routine for FMD$WRTBUF
     1251       13                 DESCRIPTION:
     1252       14
     1253       15                      The I/O has completed, free the page.
     1254       16        */
     1255       17        /* */
     1256       18        /* */
     1257       19        FMD$WRTAHDEA: PROC(N$REQ);
     1258       20        /* PARAMETERS */
     1259       21        %INCLUDE N$REQ;
     1260       95        %N$REQ (STCLASS="");
     1261      153        /* EXTERNAL ROUTINES */
     1262      154    1   DCL MMJ$FIOP ENTRY(1);
     1263      155        /* LOCAL AUTOMATIC STORAGE */
     1264      156    1   DCL 1 EAINFO,
     1265      157    1         2 * BIT(18),
     1266      158    1         2 PAGE UBIN(18) UNAL;
     1267      159    1   DCL EAINFOWD REDEF EAINFO SBIN;
     1268      160    1   DCL PP UBIN;
     1269      161        /* */
     1270      162    1          EAINFOWD=N$REQ.EAINFO;
     1271      163        /* */
     1272      164    1          PP=EAINFO.PAGE;                 /* PHYSICAL PAGE #                    */
     1273      165    1          CALL MMJ$FIOP(PP);
     1274      166    1   RET:   RETURN;
     1275      167    1          END FMD$WRTAHDEA;
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:238  
     1276      168               %EOD;

PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:239  
--  Include file information  --

   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FMD$WRTAHDEA.

   Procedure FMD$WRTAHDEA requires 15 words for executable code.
   Procedure FMD$WRTAHDEA requires 8 words of local(AUTO) storage.

PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:240  

 Object Unit name= FMD$WRTAHDEA                               File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:40:59.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    15     17  FMD$WRTAHDEA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMD$WRTAHDEA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 MMJ$FIOP
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:241  


     1239        1        /*T***********************************************************/
     1240        2        /*T*                                                         */
     1241        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1242        4        /*T*                                                         */
     1243        5        /*T***********************************************************/
     1244        6        /*F*   NAME:   FMD$WRTAHDEA
     1245        7        *       PURPOSE:  End-action routine for FMD$WRTBUF
     1246        8        */
     1247        9        /* */
     1248       10        /*D*     NAME:     FMD$WRTAHDEA
     1249       11                 CALL:     CALL FMD$WRTAHDEA
     1250       12                 PURPOSE:  End action routine for FMD$WRTBUF
     1251       13                 DESCRIPTION:
     1252       14
     1253       15                      The I/O has completed, free the page.
     1254       16        */
     1255       17        /* */
     1256       18        /* */
     1257       19        FMD$WRTAHDEA: PROC(N$REQ);

     19  0 000000   000000 700200 xent  FMD$WRTAHDEA TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

     1258       20        /* PARAMETERS */
     1259       21        %INCLUDE N$REQ;
     1260       95        %N$REQ (STCLASS="");
     1261      153        /* EXTERNAL ROUTINES */
     1262      154    1   DCL MMJ$FIOP ENTRY(1);
     1263      155        /* LOCAL AUTOMATIC STORAGE */
     1264      156    1   DCL 1 EAINFO,
     1265      157    1         2 * BIT(18),
     1266      158    1         2 PAGE UBIN(18) UNAL;
     1267      159    1   DCL EAINFOWD REDEF EAINFO SBIN;
     1268      160    1   DCL PP UBIN;
     1269      161        /* */
     1270      162    1          EAINFOWD=N$REQ.EAINFO;
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:242  

    162  0 000002   200003 470500                    LDP0    @N$REQ,,AUTO
         0 000003   000024 235100                    LDA     20,,PR0
         0 000004   200004 755100                    STA     EAINFO,,AUTO

     1271      163        /* */
     1272      164    1          PP=EAINFO.PAGE;                 /* PHYSICAL PAGE #                    */

    164  0 000005   200004 236100                    LDQ     EAINFO,,AUTO
         0 000006   777777 376007                    ANQ     -1,DL
         0 000007   200005 756100                    STQ     PP,,AUTO

     1273      165    1          CALL MMJ$FIOP(PP);

    165  0 000010   200005 631500                    EPPR1   PP,,AUTO
         0 000011   200006 451500                    STP1    PP+1,,AUTO
         0 000012   200006 630500                    EPPR0   PP+1,,AUTO
         0 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000014   000000 701000 xent               TSX1    MMJ$FIOP
         0 000015   000000 011000                    NOP     0

     1274      166    1   RET:   RETURN;

    166  0 000016   000000 702200 xent  RET          TSX2  ! X66_ARET
     1275      167    1          END FMD$WRTAHDEA;
     1276      168               %EOD;

PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:243  
--  Include file information  --

   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FMD$WRTAHDEA.
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:244  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @N$REQ                     4-0-0/b STRC        r     1 EAINFO
     4-0-0/w SBIN        r     1 EAINFOWD                  *0-0-0/d STRC(1080)  r     1 N$REQ
     5-0-0/w UBIN        r     1 PP


   Procedure FMD$WRTAHDEA requires 15 words for executable code.
   Procedure FMD$WRTAHDEA requires 8 words of local(AUTO) storage.
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:245  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:246  
          MINI XREF LISTING

EAINFO
       156**DCL       159--REDEF
EAINFO.PAGE
       158**DCL       164>>ASSIGN
EAINFOWD
       159**DCL       162<<ASSIGN
MMJ$FIOP
       154**DCL-ENT   165--CALL
N$REQ
       104**DCL        19--PROC
N$REQ.BUFADDR
       113**DCL       114--REDEF     114--REDEF
N$REQ.DLA.DRELADDR
       105**DCL       105--REDEF
N$REQ.DVE.EOMCHAR
       142**DCL       143--REDEF
N$REQ.EAINFO
       136**DCL       136--REDEF     162>>ASSIGN
N$REQ.EAINFOX
       136**DCL       137--REDEF
N$REQ.EVNTINFO
       137**DCL       137--REDEF
N$REQ.STATUS
       118**DCL       124--REDEF
PP
       160**DCL       164<<ASSIGN    165<>CALL
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:247  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #006=FMD$WRTAHDEA File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:40 Page:248  
              MINI UREF LISTING

FMD$WRTAHDEA      19**PROC
RET     166**LABEL

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:249  
     1277        1        /*T***********************************************************/
     1278        2        /*T*                                                         */
     1279        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1280        4        /*T*                                                         */
     1281        5        /*T***********************************************************/
     1282        6        /*F*   NAME:   FMD$RECTRAN
     1283        7        *      PURPOSE:  Move bytes between user buffer and monitor buffer,
     1284        8        *                performing all necessary data conversion                    */
     1285        9        /**/
     1286       10        /**/
     1287       11        /**/
     1288       12        /*D*   NAME:   FMD$RECTRAN
     1289       13        *      CALL:   CALL FMD$RECTRAN(G$,GBYTES,BUFNUM,DIR,FAK,SEED,VFC,FPTCODE) ALTRET(ER
                13        R);
     1290       14        *      INPUT:  G$ - Pointer to data segment in monitor buffer
     1291       15        *              GBYTES - Size of data segment in bytes
     1292       16        *              BUFNUM - Monitor buffer number
     1293       17        *              DIR - 0 if moving monitor buffer to user,
     1294       18        *                    1 if moving user buffer to monitor
     1295       19        *              FAK - Zero if not first segment of record
     1296       20        *              SEED - Encryption seed (optional)
     1297       21        *              VFC - VFC char to insert (optional)
     1298       22        *              FPTCODE - FPT code for this operation
     1299       23        *              DCB.UB$ - Current pointer into user buffer
     1300       24        *              DCB.UBYTES - # bytes remaining in user buffer
     1301       25        *              DCB.ARS - # bytes moved to/from user so far
     1302       26        *              DCB.CSEED - Current intermediate encryption seed
     1303       27        *              DCB.SHFT - Current state of compression shift
     1304       28        *      OUTPUT: GBYTES - If DIR=0, # bytes remaining in mon buf
     1305       29        *                       If DIR=1, # bytes transfered into mon buf
     1306       30        *              DCB.UB$ - Updated by # bytes moved
     1307       31        *              DCB.UBYTES - Updated by # bytes moved
     1308       32        *              DCB.ARS - Updated by # bytes moved
     1309       33        *              DCB.CSEED - Current intermediate encryption seed
     1310       34        *              DCB.ARS - Incremented by # bytes moved
     1311       35        *              DCB.BFR.BUFUP(BUFNUM) - Set if moving to mon buffer
     1312       36        *              DCB.SHFT - Current state of compression shift
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:250  
     1313       37        *      DESCRIPTION:                                                          */
     1314       38        FMD$RECTRAN: PROC(G$,GBYTES,BUFNUM,DIR,FAK,PSEED,VFC,FPTCODE) ALTRET;
     1315       39        /* PARAMETERS */
     1316       40    1   DCL G$ PTR;              /* POINTER TO BEGINNING OF DATA AREA IN POOL BUFFER  */
     1317       41    1   DCL GBYTES SBIN;                        /* SIZE OF POOL BUFFER AREA IN BYTES  */
     1318       42    1   DCL BUFNUM UBIN(36);                    /* POOL BUFFER NUMBER                 */
     1319       43    1   DCL DIR SBIN;                      /* 0=MON BUFFER TO USER, 1=USER TO MON     */
     1320       44    1   DCL FAK SBIN;                      /* 0 IF NOT FIRST SEG OF RECORD, ELSE 1    */
     1321       45    1   DCL PSEED BIT(36) ALIGNED;             /* Passed encryption seed              */
     1322       46    1   DCL VFC CHAR(1);                   /* VFC char to insert - none if absent     */
     1323       47    1   DCL FPTCODE UBIN;                       /* FPT code for this operation        */
     1324       48    1   DCL CWORD$ PTR;
     1325       49    1   DCL TEMP_FAK SBIN;
     1326       50        /* LOCAL AUTOMATIC STORAGE */
     1327       51    1   DCL CSEED SBIN;
     1328       52    1   DCL ISEED BIT(36) ALIGNED;             /* Local encryption seed               */
     1329       53    1   DCL WRDS SBIN;
     1330       54    1   DCL BUF$ PTR;
     1331       55    1   DCL JDCB$ PTR;
     1332       56    1   DCL TFPTCODE UBIN;
     1333       57    1   DCL WORD_NUM SBIN;
     1334       58        /* BASED STRUCTURES */
     1335       59    1   DCL UBIN4 UBIN(4) UNAL BASED;
     1336       60    1   DCL BASED_WORD(0:0) CHAR(4) CALIGNED BASED;
     1337       61        /* EXTERNAL ROUTINES */
     1338       62    1   DCL FMD$WRTSV ENTRY(1);
     1339       63    1   DCL FMD$ENCRYPT ENTRY(5);
     1340       64    1   DCL FMD$DECRYPT ENTRY(5);
     1341       65        /* EXTERNAL DATA */
     1342       66    1   DCL B$JIT$ PTR SYMREF READONLY;
     1343       67    1   DCL B$PS0$ PTR SYMREF READONLY;
     1344       68    1   DCL FM$BUF$(0:0) PTR SYMREF;
     1345       69    1   DCL B$ROSEG$ PTR SYMREF;
     1346       70        %INCLUDE B$TABLES_C;
     1347      178        %B$XL_UR(NAME=NK_URTBL);
     1348      182        %B$XL_UPPER_UR(NAME=NK_URTBLUC);
     1349      186        /* INCLUDE FILES */
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:251  
     1350      187        %INCLUDE B_MICROPS_C;
     1351      359        %INCLUDE F$JIT_C;
     1352      789        %MACRO F$DCB(BASED=BASED);
     1353      790        %INCLUDE F$DCB;
     1354      839        %MEND;
     1355      840        %INCLUDE F_MACROS_C;
     1356      851        %INCLUDE F$CP6V_C;
     1357     1077        %INCLUDE F_ERRORS_C;
     1358     1317        %INCLUDE F_FPTCODE_C;
     1359     1353        %INCLUDE FM$GRAN;
     1360     1422        /* CONSTANT STORAGE */
     1361     1423        %SUB FCG#='0615'O;
     1362     1424        %SUB MID#='04'O;
     1363     1425        %ERRCODE (COD#=%E$DECOMP);
     1364     1429        /* MACRO CALLS */
     1365     1430        %F$DCB (BASED="BASED(JDCB$)");
     1366     1480        %FPT$READ_V (BASED="BASED(B$PS0$)");
     1367     1487        %FM$GRAN;
     1368     1491        /**/
     1369     1492    1           JDCB$=B$JIT.DCB$;
     1370     1493        /**/
     1371     1494    1           IF PSEED THEN                  /* Get the right seed value.           */
     1372     1495    1              ISEED = PSEED;              /* From FPT. */
     1373     1496    1           ELSE
     1374     1497    1              ISEED = F$DCB.SEED; /* From DCB. */
     1375     1498
     1376     1499    2           IF F$DCB.COMP THEN DO;
     1377     1500        /* COMPRESSION */
     1378     1501    2              IF DIR=0 THEN
     1379     1502    2              CALL DECOMP ALTRET(ERR);
     1380     1503    2              ELSE
     1381     1504    2              CALL COMPRESS;
     1382     1505    2              RETURN;
     1383     1506    2              END;
     1384     1507                                                /*                                    */
     1385     1508    2           IF NOT ISEED THEN DO;
     1386     1509        /* NO COMPRESSION OR ENCRYPTION */
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:252  
     1387     1510    2              CALL MOVE;
     1388     1511    2              RETURN;
     1389     1512    2              END;
     1390     1513                                                /*                                    */
     1391     1514        /* ENCRYPTION SPECIFIED */
     1392     1515    2           IF DIR~=0 THEN DO;              /* USER TO MONITOR                    */
     1393     1516    2              CALL MOVE;
     1394     1517    2              WRDS=(GBYTES+3)/4;           /* # WORDS TO ENCRYPT                 */
     1395     1518    2              CALL FMD$ENCRYPT(G$,WRDS,ISEED,JDCB$->F$DCB.CSEED,FAK);
              1518                       /* ENCRYPT IN MON BUFFER */
     1396     1519    2              END;
     1397     1520    2           ELSE DO;                        /* MONITOR TO USER                    */
     1398     1521    2              CALL MOVE;                   /* Move into user's buffer.           */
     1399     1522    2              F$DCB.DECRYPT = '1'B;        /* Decrypt later.                     */
     1400     1523    2              END;
     1401     1524    1           RETURN;
     1402     1525                                                /*                                    */
     1403     1526    1   ERR:    ALTRETURN;
     1404     1527        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:253  
     1405     1528        /* LEVEL 2 ROUTINE TO MOVE BYTES WITHOUT MODIFICATION */
     1406     1529    1   MOVE:   PROC;
     1407     1530    2   DCL NUM SBIN;
     1408     1531    2   DCL CHRS CHAR(NUM) BASED;
     1409     1532    2   DCL CHAR1 CHAR(1) BASED;
     1410     1533    2   DCL 1 CHARS BASED,
     1411     1534    2         2 * CHAR(1),
     1412     1535    2         2 SKIP1 CHAR(NUM);
     1413     1536    2           NUM=GBYTES;                     /* # bytes to xfer                    */
     1414     1537    3           IF DIR=0 THEN DO;               /* Monitor to user                    */
     1415     1538    3              IF FPT$READ_V.STRPVFC AND F$DCB.DVBYTE.VFC AND FAK = 1 THEN
     1416     1539    4                 DO;  /* STRIP VFC */
     1417     1540    4                 F$DCB.VFCCHAR=G$->CHAR1;
     1418     1541    4                 F$DCB.GDISP=F$DCB.GDISP+1;
     1419     1542    4                 NUM=NUM-1;
     1420     1543    4                 GBYTES=GBYTES-1;
     1421     1544    4                 G$=PINCRC(G$, 1);
     1422     1545    4                 END;  /* STRIP VFC */
     1423     1546    3              IF NUM > F$DCB.UBYTES THEN
     1424     1547    3                 NUM=F$DCB.UBYTES;
     1425     1548    3              F$DCB.UB$->CHRS=G$->CHRS;
     1426     1549    3              GBYTES=GBYTES-NUM;
     1427     1550    3              F$DCB.ARS=F$DCB.ARS+NUM;
     1428     1551    3              END;
     1429     1552    3           ELSE DO;                        /* User to monitor                    */
     1430     1553    3              IF NUM>F$DCB.UBYTES THEN
     1431     1554    3                 NUM=F$DCB.UBYTES;
     1432     1555    3              IF ADDR(FPTCODE)=ADDR(NIL) THEN
     1433     1556    3                 TFPTCODE=MFC_WRITE;
     1434     1557    3              ELSE
     1435     1558    3                 TFPTCODE=FPTCODE;
     1436     1559    3              IF ADDR(VFC)~=ADDR(NIL) AND FAK~=0 THEN
     1437     1560    4                 IF GBYTES~=0 THEN DO;
     1438     1561    4                    NUM=GBYTES-1;
     1439     1562    4                    IF NUM>F$DCB.UBYTES THEN
     1440     1563    4                       NUM=F$DCB.UBYTES;
     1441     1564    4                    G$->CHAR1=VFC;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:254  
     1442     1565    5                    DO CASE(TFPTCODE);     /* Move or translate data to monitor.*/
     1443     1566    5                     CASE(MFC_WRUR);
     1444     1567    5                       CALL XLATE(G$->CHARS.SKIP1,NK_URTBL,F$DCB.UB$->CHRS);
     1445     1568    5                     CASE(MFC_WRURUC);
     1446     1569    5                       CALL XLATE(G$->CHARS.SKIP1,NK_URTBLUC,F$DCB.UB$->CHRS);
     1447     1570    5                     CASE(ELSE);
     1448     1571    5                       G$->CHARS.SKIP1=F$DCB.UB$->CHRS;
     1449     1572    5                     END;
     1450     1573    4                    GBYTES=NUM+1;
     1451     1574    4                    F$DCB.GDISP=F$DCB.GDISP+1;
     1452     1575    4                    END;
     1453     1576    3                 ELSE ;
     1454     1577    4              ELSE DO;
     1455     1578    5                 DO CASE(TFPTCODE);        /* Move or translate data to monitor.*/
     1456     1579    5                  CASE(MFC_WRUR);
     1457     1580    5                    CALL XLATE(G$->CHRS,NK_URTBL,F$DCB.UB$->CHRS);
     1458     1581    5                  CASE(MFC_WRURUC);
     1459     1582    5                    CALL XLATE(G$->CHRS,NK_URTBLUC,F$DCB.UB$->CHRS);
     1460     1583    5                  CASE(ELSE);
     1461     1584    5                    G$->CHRS=F$DCB.UB$->CHRS;
     1462     1585    5                  END;
     1463     1586    4                 GBYTES=NUM;
     1464     1587    4                 END;
     1465     1588    3              F$DCB.BFR.BUFUP(BUFNUM)='1'B;
     1466     1589    3              END;
     1467     1590    2           F$DCB.UB$=PINCRC(F$DCB.UB$,NUM);
     1468     1591    2           F$DCB.UBYTES=F$DCB.UBYTES-NUM;
     1469     1592    2           F$DCB.GDISP=F$DCB.GDISP+NUM;
     1470     1593    2           RETURN;
     1471     1594    2   END MOVE;
     1472     1595        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:255  
     1473     1596        /* Level 2 routine to compress records */
     1474     1597        /************************************************************/
     1475     1598        /*                                                          */
     1476     1599        /*  Great care must be taken when modifying the code        */
     1477     1600        /*  for compression/decompression.  It has been carefully   */
     1478     1601        /*  diddled (that's a technical term) to make sure that CSRs*/
     1479     1602        /*  rather than CSLs are always used when referencing an    */
     1480     1603        /*  FPOOL because of the DPS90 prepaging problem.  Since    */
     1481     1604        /*  none of this code can reference the first two words of  */
     1482     1605        /*  a block (control words are there) CSRs are immune from  */
     1483     1606        /*  the prepaging error.  This is somewhat anti-performant  */
     1484     1607        /*  as CSLs are considerably faster on some models, but we  */
     1485     1608        /*  have no real alternative.                               */
     1486     1609        /*                                                          */
     1487     1610        /************************************************************/
     1488     1611    1   COMPRESS: PROC;
     1489     1612        /* SUBS */
     1490     1613        %SUB CODUNK=0;
     1491     1614        %SUB CODSHIFT=1;
     1492     1615        %SUB CODDUP=2;
     1493     1616        /* CONSTANT STORAGE */
     1494     1617    2   DCL XLATETBL(0:511) UBIN CONSTANT INIT(
     1495     1618    2           0,0,0,0,0,0,0,0,0,0,
     1496     1619    2           0,0,0,0,0,0,0,0,0,0,
     1497     1620    2           0,0,0,0,0,0,0,0,0,0,
     1498     1621    2           0,0,3,4,5,6,7,8,0,9,
     1499     1622    2           10,11,12,13,14,15,16,17,18,19,
     1500     1623    2           20,21,22,23,24,25,26,27,28,29,
     1501     1624    2           30,31,32,33,34,419,420,421,422,423,
     1502     1625    2           424,425,426,427,428,429,430,431,432,433,
     1503     1626    2           434,435,436,437,438,439,440,441,442,443,
     1504     1627    2           444,0,0,0,0,61,0,163,164,165,
     1505     1628    2           166,167,168,169,170,171,172,173,174,175,
     1506     1629    2           176,177,178,179,180,181,182,183,184,185,
     1507     1630    2           186,187,188,0,62,0,63,0,0*0);
     1508     1631        /* LOCAL AUTOMATIC STORAGE */
     1509     1632    2   DCL CHR UBIN;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:256  
     1510     1633    2   DCL PCHR UBIN;
     1511     1634    2   DCL PREVCHR UBIN;
     1512     1635    2   DCL PREV# SBIN;
     1513     1636    2   DCL N SBIN;
     1514     1637    2   DCL 1 NB REDEF N,
     1515     1638    2         2 * BIT(27),
     1516     1639    2         2 UC BIT(1),
     1517     1640    2         2 ALPHA BIT(1),
     1518     1641    2         2 * BIT(7);
     1519     1642    2   DCL GBITS SBIN;
     1520     1643    2   DCL T$ PTR;
     1521     1644    2   DCL CX UBIN;
     1522     1645    2   DCL CXS REDEF CX SBIN;
     1523     1646    2   DCL CNT SBIN;
     1524     1647    2   DCL SHFT SBIN;
     1525     1648    2   DCL 1 SHFTBIT REDEF SHFT,
     1526     1649    2         2 * BIT(35),
     1527     1650    2         2 B BIT(1);
     1528     1651    2   DCL UB$ PTR;
     1529     1652    2   DCL TEMPCHAR CHAR(1) CALIGNED;
     1530     1653        /* BASED STRUCTURES */
     1531     1654    2   DCL UBIN6 UBIN(6) UNAL BASED;
     1532     1655    2   DCL UBIN9 UBIN(9) UNAL BASED;
     1533     1656    2   DCL UBIN3 UBIN(3) UNAL BASED;
     1534     1657    2   DCL CHARS(0:0) CHAR(1) CALIGNED BASED;
     1535     1658    2   DCL 1 SKIP6 BASED UNAL,
     1536     1659    2         2 * BIT(6),
     1537     1660    2         2 UBIN6 UBIN(6) UNAL;
     1538     1661        /**/
     1539     1662    2           SHFT=1;                    /* Record segment starts in upper case     */
     1540     1663    2           F$DCB.BFR.BUFUP(BUFNUM)='1'B;   /* Buffer modified                    */
     1541     1664    2           IF ADDR(NIL)=ADDR(FPTCODE) THEN
     1542     1665    2              TFPTCODE=MFC_WRITE;
     1543     1666    2           ELSE
     1544     1667    2              TFPTCODE=FPTCODE;
     1545     1668    2           GBITS=GBYTES*9;                 /* # BITS IN MONITOR BUFFER AREA      */
     1546     1669    2           T$=G$;                          /* POINTER TO MONITOR BUFFER AREA     */
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:257  
     1547     1670    2           PREV#=0;                        /* NO PREV DUPLICATES                 */
     1548     1671    2           PREVCHR=32;                     /* PREV CHAR WAS BLANK                */
     1549     1672    2           CX=0;                           /* INDEX INTO USER BUFFER             */
     1550     1673    2           CNT=F$DCB.UBYTES;               /* SIZE OF USER BUFFER                */
     1551     1674    2           UB$=F$DCB.UB$;                  /* User buffer pointer                */
     1552     1675    2           TEMP_FAK=FAK;
     1553     1676    2           CWORD$=ADDR(F$DCB.CWORD);
     1554     1677    2           WORD_NUM=0;
     1555     1678    2           IF ISEED THEN
     1556     1679    2              IF FAK=1 THEN
     1557     1680    2                 CALL GET_WORD;
     1558     1681    2              ELSE IF TFPTCODE ~= MFC_WRUR AND TFPTCODE ~= MFC_WRURUC THEN
     1559     1682    2                 UB$=PINCRC(UB$,4-F$DCB.CX);
     1560     1683
     1561     1684    3           IF ADDR(VFC)~=ADDR(NIL) AND FAK~=0 THEN DO;
     1562     1685    3              CNT=CNT+1;                   /* Incr to include VFC                */
     1563     1686    3              CXS=-1;
     1564     1687    3              CHR=ASCBIN(VFC);
     1565     1688    3              GOTO GOTCHR;
     1566     1689    3              END;
     1567     1690    3           DO WHILE(CNT>0);
     1568     1691    4              DO CASE(TFPTCODE);      /* Get next byte (or translation thereof)*/
     1569     1692    4               CASE(MFC_WRUR);
     1570     1693    4                 TEMPCHAR=UB$->CHARS(CX);
     1571     1694    4                 CHR=ASCBIN(NK_URTBL.C(ASCBIN(TEMPCHAR)));
     1572     1695    4               CASE(MFC_WRURUC);
     1573     1696    4                 TEMPCHAR=UB$->CHARS(CX);
     1574     1697    4                 CHR=ASCBIN(NK_URTBLUC.C(ASCBIN(TEMPCHAR)));
     1575     1698    4               CASE(ELSE);
     1576     1699    4                 IF ISEED THEN
     1577     1700    4                    CALL GETCHAR;
     1578     1701    4                 ELSE
     1579     1702    5                    DO;   /* GET NEXT CHARACTER */
     1580     1703    5                    TEMPCHAR=UB$->CHARS(CX);
     1581     1704    5                    CHR=ASCBIN(TEMPCHAR);
     1582     1705    5                    END;  /* GET NEXT CHARACTER */
     1583     1706    4               END;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:258  
     1584     1707    4   GOTCHR:    IF PREVCHR=CHR AND PREV#<63 THEN DO;
     1585     1708                                           /* EDITSTR can't do more than 63 at a time */
     1586     1709    4   PUTDUP:       PREV#=PREV#+1;
     1587     1710    4                 GOTO PUTOK;
     1588     1711    4                 END;
     1589     1712    4              ELSE DO;                     /* DIFF CHAR OR REACHED DUP MAX COUNT */
     1590     1713    4                 IF PREV#~=0 THEN          /* GOT SOME DUPS                      */
     1591     1714    4                 CALL DUMPPREV ALTRET(FULL);
     1592     1715    4                 IF PREVCHR=CHR THEN
     1593     1716    4                    GOTO PUTDUP;
     1594     1717    4                 PREVCHR=CHR;              /* NEW PREVIOUS CHAR                  */
     1595     1718    4                 END;
     1596     1719        /**/
     1597     1720    3              N=XLATETBL(CHR);
     1598     1721    4              IF NB.ALPHA THEN DO;         /* Alphabetic                         */
     1599     1722    4                 IF NB.UC=SHFTBIT.B THEN
     1600     1723    4                    GOTO NOSHIFT;
     1601     1724    4                 IF GBITS<6 THEN GOTO FULL; /* NO ROOM FOR SHIFT CHAR            */
     1602     1725    4                 T$->UBIN6=CODSHIFT;       /* MOVE IN SHIFT CHAR                 */
     1603     1726    4                 T$=PINCRB(T$,6);
     1604     1727    4                 GBITS=GBITS-6;
     1605     1728    4                 SHFT=SHFT+1;              /* Toggle shift                       */
     1606     1729    4                 END;
     1607     1730                                                /*                                    */
     1608     1731    3   NOSHIFT:   PCHR=CHR;
     1609     1732    3              CALL PUT ALTRET(FULL);       /* Put char in buffer                 */
     1610     1733    3   PUTOK:     CXS=CXS+1;
     1611     1734    3              CNT=CNT-1;
     1612     1735    3              END;
     1613     1736        /**/
     1614     1737    2           IF PREV#~=0 THEN
     1615     1738    2           CALL DUMPPREV;
     1616     1739        /**/
     1617     1740    3           DO WHILE('0'B);
     1618     1741    3   FULL:      F$DCB.CX=F$DCB.CX-1;
     1619     1742    3           END;  /* WHILE */
     1620     1743    2           N=MOD(GBITS,9);
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:259  
     1621     1744    2           IF N = 3                        /* ZERO TO NEXT BYTE BOUNDARY         */
     1622     1745    2           THEN
     1623     1746    2              T$ -> UBIN3 = 0;
     1624     1747    2           ELSE
     1625     1748    2              IF N = 6
     1626     1749    2              THEN
     1627     1750    2                 T$ -> UBIN6 = 0;
     1628     1751    2           F$DCB.UBYTES=CNT;
     1629     1752    2           F$DCB.UB$=PINCRC(F$DCB.UB$,CX);
     1630     1753    2           GBYTES=GBYTES-(GBITS/9);        /* # BYTES USED                       */
     1631     1754    2           F$DCB.GDISP=GBYTES;
     1632     1755    2           RETURN;
     1633     1756        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:260  
     1634     1757    2   GETCHAR: PROC;
     1635     1758    3          DCL CHAR_TEMP CHAR(1);
     1636     1759        /* */
     1637     1760    3          IF F$DCB.CX >= 4 THEN
     1638     1761    3             CALL GET_WORD;
     1639     1762
     1640     1763    3          CALL INSERT(CHAR_TEMP, 0, 1,
     1641     1764    3             SUBSTR(F$DCB.CWORD, F$DCB.CX, 1));
     1642     1765    3          CHR=ASCBIN(CHAR_TEMP);
     1643     1766    3          F$DCB.CX=F$DCB.CX+1;
     1644     1767
     1645     1768    3          RETURN;
     1646     1769    3          END GETCHAR;
     1647     1770    2   GET_WORD: PROC;
     1648     1771    3          DCL MOVE UBIN;
     1649     1772        /* */
     1650     1773    3          IF CNT < 4 THEN
     1651     1774    3             MOVE=CNT;
     1652     1775    3          ELSE
     1653     1776    3             MOVE=4;
     1654     1777
     1655     1778    3          CALL INSERT(F$DCB.CWORD, 0, 4,
     1656     1779    3             SUBSTR(UB$->BASED_WORD(WORD_NUM), 0, MOVE));
     1657     1780    3          CALL FMD$ENCRYPT(CWORD$, 1, ISEED, F$DCB.CSEED,
     1658     1781    3             TEMP_FAK);
     1659     1782    3          TEMP_FAK=0;
     1660     1783    3          WORD_NUM=WORD_NUM+1;
     1661     1784    3          F$DCB.CX=0;
     1662     1785
     1663     1786    3          RETURN;
     1664     1787    3          END GET_WORD;
     1665     1788        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:261  
     1666     1789        /* LEVEL 3 ROUTINE TO MOVE BITS INTO MONITOR BUFFER */
     1667     1790    2   PUT:    PROC ALTRET;
     1668     1791    3   DCL 1 SKIP6 BASED UNAL,
     1669     1792    3         2 * BIT(6),
     1670     1793    3         2 UBIN12 UBIN(12) UNAL;
     1671     1794        /**/
     1672     1795    4           IF N=0 THEN DO;                 /* UNKNOWN CHARACTER                  */
     1673     1796    4              IF GBITS<18 THEN ALTRETURN;  /* NO ROOM                            */
     1674     1797    4              T$->UBIN6=CODUNK;
     1675     1798    4              T$->SKIP6.UBIN12=PCHR;
     1676     1799    4              T$=PINCRB(T$,18);
     1677     1800    4              GBITS=GBITS-18;
     1678     1801    4              RETURN;
     1679     1802    4              END;
     1680     1803                                                /*                                    */
     1681     1804    3           IF GBITS<6 THEN ALTRETURN;
     1682     1805    3           T$->UBIN6=N;
     1683     1806    3           T$=PINCRB(T$,6);
     1684     1807    3           GBITS=GBITS-6;
     1685     1808    3           RETURN;
     1686     1809    3   END PUT;
     1687     1810        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:262  
     1688     1811        /* LEVEL 3 ROUTINE TO DUMP DUP CHARS */
     1689     1812    2   DUMPPREV: PROC ALTRET;
     1690     1813    4           IF PREV#>=3 THEN DO;            /* ENUF FOR DUP CODE                  */
     1691     1814    5              IF GBITS<12 THEN DO;         /* NOT ENUF ROOM                      */
     1692     1815    5   BACKUP:       CX=CX-PREV#;              /* BACKUP TO GET THESE CHARS AGAIN    */
     1693     1816    5                 CNT=CNT+PREV#;
     1694     1817    5                 ALTRETURN;
     1695     1818    5                 END;
     1696     1819    4              T$->UBIN6=CODDUP;            /* MOVE IN DUP CODE                   */
     1697     1820    4              T$->SKIP6.UBIN6=PREV#-3;     /* COUNT-3                            */
     1698     1821    4              T$=PINCRB(T$,12);
     1699     1822    4              GBITS=GBITS-12;
     1700     1823    4              END;
     1701     1824    4           ELSE DO;                   /* NOT ENOUGH FOR DUP - PUT THE CHARS IN   */
     1702     1825    4              N=XLATETBL(PREVCHR);
     1703     1826    4              PCHR=PREVCHR;
     1704     1827    5              DO WHILE(PREV#>0);
     1705     1828    5                 CALL PUT ALTRET(BACKUP);
     1706     1829    5                 PREV#=PREV#-1;
     1707     1830    5                 END;
     1708     1831    4              END;
     1709     1832    3           PREV#=0;
     1710     1833    3           RETURN;
     1711     1834    3   END DUMPPREV;
     1712     1835    2   END COMPRESS;
     1713     1836        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:263  
     1714     1837        /* Level 2 routine to compress records */
     1715     1838        /************************************************************/
     1716     1839        /*                                                          */
     1717     1840        /*  Great care must be taken when modifying the code        */
     1718     1841        /*  for compression/decompression.  It has been carefully   */
     1719     1842        /*  diddled (that's a technical term) to make sure that CSRs*/
     1720     1843        /*  rather than CSLs are always used when referencing an    */
     1721     1844        /*  FPOOL because of the DPS90 prepaging problem.  Since    */
     1722     1845        /*  none of this code can reference the first two words of  */
     1723     1846        /*  a block (control words are there) CSRs are immune from  */
     1724     1847        /*  the prepaging error.  This is somewhat anti-performant  */
     1725     1848        /*  as CSLs are considerably faster on some models, but we  */
     1726     1849        /*  have no real alternative.                               */
     1727     1850        /*                                                          */
     1728     1851        /************************************************************/
     1729     1852    1   DECOMP: PROC ALTRET;
     1730     1853        /* CONSTANT STORAGE */
     1731     1854    2   DCL 1 CHRTBL(0:127) UBIN CONSTANT INIT(
     1732     1855    2         0,0,0,32,33,34,35,36,37,39,
     1733     1856    2         40,41,42,43,44,45,46,47,48,49,
     1734     1857    2         50,51,52,53,54,55,56,57,58,59,
     1735     1858    2         60,61,62,63,64,65,66,67,68,69,
     1736     1859    2         70,71,72,73,74,75,76,77,78,79,
     1737     1860    2         80,81,82,83,84,85,86,87,88,89,
     1738     1861    2         90,95,124,126,
     1739     1862    2         0,0,0,32,33,34,35,36,37,39,
     1740     1863    2         40,41,42,43,44,45,46,47,48,49,
     1741     1864    2         50,51,52,53,54,55,56,57,58,59,
     1742     1865    2         60,61,62,63,64,97,98,99,100,101,
     1743     1866    2         102,103,104,105,106,107,108,109,110,111,
     1744     1867    2         112,113,114,115,116,117,118,119,120,121,
     1745     1868    2         122,95,124,126);
     1746     1869        /* LOCAL AUTOMATIC STORAGE */
     1747     1870    2   DCL GBITS SBIN;
     1748     1871    2   DCL T$ PTR;
     1749     1872    2   DCL PREVCHR UBIN;
     1750     1873    2   DCL I UBIN;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:264  
     1751     1874    2   DCL N UBIN;
     1752     1875    2   DCL 1 NB REDEF N,
     1753     1876    2         2 * BIT(30),
     1754     1877    2         2 LB6 BIT(6);
     1755     1878    2   DCL CNT SBIN;
     1756     1879    2   DCL CX UBIN;
     1757     1880    2   DCL CXS REDEF CX SBIN;
     1758     1881    2   DCL 1 MICROPS DALIGNED,
     1759     1882    2         2 C CHAR(1),
     1760     1883    2         2 FILL UBIN(9) UNAL,
     1761     1884    2         2 * BIT(36);
     1762     1885    2   DCL SHFT SBIN;
     1763     1886    2   DCL 1 SHFTBIT REDEF SHFT,
     1764     1887    2         2 * BIT(35),
     1765     1888    2         2 B BIT(1);
     1766     1889    2   DCL UB$ PTR;
     1767     1890        /* BASED */
     1768     1891    2   DCL CHAR1 CHAR(1) BASED;
     1769     1892    2   DCL 1 SKIP6 BASED UNAL,
     1770     1893    2         2 * BIT(6),
     1771     1894    2         2 UBIN6 UBIN(6) UNAL;
     1772     1895    2   DCL 1 SKIP9 BASED UNAL,
     1773     1896    2         2 * BIT(9),
     1774     1897    2         2 UBIN9 UBIN(9) UNAL;
     1775     1898    2   DCL UBIN6 UBIN(6) UNAL BASED;
     1776     1899    2   DCL UBIN9 UBIN(9) UNAL BASED;
     1777     1900    2   DCL CHARS(0:0) CHAR(1) BASED;
     1778     1901        /* CONSTANT STORAGE */
     1779     1902    2   DCL 1 INITMICROPS CONSTANT DALIGNED,
     1780     1903    2         2 * BIT(9) INIT(%LTE1),
     1781     1904    2         2 * CHAR(1),
     1782     1905    2         2 * BIT(9) INIT(%INSM16),
     1783     1906    2         2 * BIT(9) INIT(%INSM16),
     1784     1907    2         2 * BIT(9) INIT(%INSM16),
     1785     1908    2         2 * BIT(9) INIT(%INSM16);
     1786     1909        /**/
     1787     1910    2           SHFT=1;                    /* Record segment starts in upper case     */
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:265  
     1788     1911    2           GBITS=GBYTES*9;                 /* SIZE OF MON BUFFER AREA IN BITS    */
     1789     1912    2           T$=G$;
     1790     1913    2           PREVCHR=32;                     /* PREVIOUS CHAR IS BLANK             */
     1791     1914    2           CX=0;                           /* INDEX INTO USER BUFFER             */
     1792     1915    2           CNT=F$DCB.UBYTES;               /* # BYTES REMAINING                  */
     1793     1916    2           UB$=F$DCB.UB$;                  /* User buffer pointer                */
     1794     1917    2           IF FAK = 1 AND FPT$READ_V.STRPVFC AND F$DCB.DVBYTE.VFC THEN
     1795     1918    2              TEMP_FAK=1;
     1796     1919    2           ELSE
     1797     1920    2              TEMP_FAK=0;
     1798     1921    2           IF ISEED THEN
     1799     1922    3              DO;   /* DECRYPT LATER */
     1800     1923    3              F$DCB.DECRYPT='1'B;
     1801     1924    3              END;  /* DECRYPT LATER */
     1802     1925    3           DO WHILE(CNT>0);
     1803     1926    4              IF GBITS<6 THEN DO;          /* At end                             */
     1804     1927    4                 GOTO DONE;
     1805     1928    4                 END;
     1806     1929    3              N=T$->UBIN6;
     1807     1930    4              DO CASE(N);
     1808     1931    4               CASE(2);                    /* DUPLICATE CHARS                    */
     1809     1932    4                 IF GBITS<12 THEN GOTO ERR; /* COUNT MUST BE PRESENT             */
     1810     1933    4                 N=T$->SKIP6.UBIN6;        /* Get the count                      */
     1811     1934    4                 N=N+3;
     1812     1935    4                 T$=PINCRB(T$,12);
     1813     1936    4                 GBITS=GBITS-12;
     1814     1937    4                 IF N>CNT
     1815     1938    4                 THEN  /* NOT ENOUGH ROOM IN USER BUFFER FOR ENTIRE REPEAT ITEM.
     1816     1939                              MUST SET N TO THE SMALLER AMOUNT, AND BACK UP T$ AND
     1817     1940                              GBITS SO THAT THE CODE AT THE END WILL REALIZE THAT
     1818     1941                              NOT ALL OF THE MON BUFFER INFO WAS PROCESSED. */
     1819     1942    5                 DO;
     1820     1943    5                    N=CNT;
     1821     1944    5                    T$=PINCRB(T$,-12);     /* BACK UP OVER COUNT AND DUP CODE    */
     1822     1945    5                    GBITS=GBITS+12;
     1823     1946    5                    END;
     1824     1947    4                 IF TEMP_FAK = 1 THEN
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:266  
     1825     1948    5                    DO;   /* STRIP VFC */
     1826     1949    5                    F$DCB.VFCCHAR=BINASC(PREVCHR);
     1827     1950    5                    N=N-1;
     1828     1951    5                    TEMP_FAK=0;
     1829     1952    5                    END;  /* STRIP VFC */
     1830     1953    4                 MICROPS=INITMICROPS;      /* MICRO OP CODES FOR EDITSTR         */
     1831     1954    4                 MICROPS.FILL=PREVCHR;     /* CHAR TO FILL WITH                  */
     1832     1955    4                 CALL EDITSTR(UB$->CHAR1,CX,N,MICROPS,' ');
     1833     1956    4                 CNT=CNT-N;
     1834     1957    4                 CXS=CXS+N;
     1835     1958    4                 GOTO ENDLOOP;
     1836     1959    4               CASE(1);                    /* SHIFT                              */
     1837     1960    4                 SHFT=SHFT+1;              /* TOGGLE SHIFT                       */
     1838     1961    4                 T$=PINCRB(T$,6);
     1839     1962    4                 GBITS=GBITS-6;
     1840     1963    4                 GOTO ENDLOOP;
     1841     1964    4               CASE(0);                    /* UNKNOWN                            */
     1842     1965    5                 IF GBITS<18 THEN DO;
     1843     1966    5                    GOTO DONE;
     1844     1967    5                    END;
     1845     1968    4                 I=T$->SKIP9.UBIN9;
     1846     1969    4                 ADDR(MICROPS.C)->UBIN9=I;
     1847     1970    4                 IF TEMP_FAK = 1 THEN
     1848     1971    5                    DO;
     1849     1972    5                    F$DCB.VFCCHAR=MICROPS.C;
     1850     1973    5                    CXS=CXS-1;
     1851     1974    5                    CNT=CNT+1;
     1852     1975    5                    TEMP_FAK=0;
     1853     1976    5                    END;
     1854     1977    4                 ELSE
     1855     1978    4                    UB$->CHARS(CX)=MICROPS.C;
     1856     1979    4                 PREVCHR=ASCBIN(MICROPS.C); /* REMEMBER AS PREV CHAR             */
     1857     1980    4                 T$=PINCRB(T$,18);
     1858     1981    4                 GBITS=GBITS-18;
     1859     1982    4               CASE(ELSE);                 /* KNOWN ASCII CHAR                   */
     1860     1983    4                 IF SHFTBIT.B THEN
     1861     1984    4                    PREVCHR=CHRTBL(N);
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:267  
     1862     1985    4                 ELSE
     1863     1986    4                    PREVCHR=CHRTBL(N+64);
     1864     1987    4                 IF TEMP_FAK = 1 THEN
     1865     1988    5                    DO;
     1866     1989    5                    F$DCB.VFCCHAR=BINASC(PREVCHR);
     1867     1990    5                    CXS=CXS-1;
     1868     1991    5                    CNT=CNT+1;
     1869     1992    5                    TEMP_FAK=0;
     1870     1993    5                    END;
     1871     1994    4                 ELSE
     1872     1995    4                    UB$->CHARS(CX)=BINASC(PREVCHR);
     1873     1996    4                 T$=PINCRB(T$,6);
     1874     1997    4                 GBITS=GBITS-6;
     1875     1998    4               END;
     1876     1999    3              CXS=CXS+1;
     1877     2000    3              CNT=CNT-1;
     1878     2001    3   ENDLOOP:   END;
     1879     2002        /* */
     1880     2003    2           IF GBITS>8 THEN GOTO EXITL;
     1881     2004        /**/
     1882     2005    2   DONE:   GBYTES=0;
     1883     2006    2   EXITL:  F$DCB.UB$=PINCRC(F$DCB.UB$,CX);
     1884     2007    2           F$DCB.UBYTES=CNT;
     1885     2008    2           F$DCB.ARS=F$DCB.ARS+CX;
     1886     2009    2           RETURN;
     1887     2010        /* */
     1888     2011    2   ERR:    B$JIT.ERR=ERRWD;
     1889     2012    2           F$DCB.UB$=PINCRC(F$DCB.UB$,CX);
     1890     2013    2           F$DCB.UBYTES=CNT;
     1891     2014    2           F$DCB.ARS=F$DCB.ARS+CX;
     1892     2015    2           ALTRETURN;
     1893     2016        /*E*    ERROR:   FMD-E$DECOMP-2
     1894     2017        *       MESSAGE: Decompression error% in file %FN%
     1895     2018        *       MESSAGE1: This record contains illegal compressed language
     1896     2019        */
     1897     2020    2   END DECOMP;
     1898     2021        /* */
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:268  
     1899     2022    1   END FMD$RECTRAN;
     1900     2023               %EOD;

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:269  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$RECTRAN.

   Procedure FMD$RECTRAN requires 838 words for executable code.
   Procedure FMD$RECTRAN requires 44 words of local(AUTO) storage.

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:270  

 Object Unit name= FMD$RECTRAN                                File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:41:03.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    644   1204  FMD$RECTRAN
    1   Proc  even  none   838   1506  FMD$RECTRAN
    2  RoData even  none     3      3  FMD$RECTRAN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        8  FMD$RECTRAN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       5 FMD$ENCRYPT
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:271  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    B$PS0$                           r    B$XL_UR$
r    B$XL_UPPER_UR$                        B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:272  


     1277        1        /*T***********************************************************/
     1278        2        /*T*                                                         */
     1279        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1280        4        /*T*                                                         */
     1281        5        /*T***********************************************************/
     1282        6        /*F*   NAME:   FMD$RECTRAN
     1283        7        *      PURPOSE:  Move bytes between user buffer and monitor buffer,
     1284        8        *                performing all necessary data conversion                    */
     1285        9        /**/
     1286       10        /**/
     1287       11        /**/
     1288       12        /*D*   NAME:   FMD$RECTRAN
     1289       13        *      CALL:  CALL FMD$RECTRAN(G$,GBYTES,BUFNUM,DIR,FAK,SEED,VFC,FPTCODE) ALTRET(ER
                13        R);
     1290       14        *      INPUT:  G$ - Pointer to data segment in monitor buffer
     1291       15        *              GBYTES - Size of data segment in bytes
     1292       16        *              BUFNUM - Monitor buffer number
     1293       17        *              DIR - 0 if moving monitor buffer to user,
     1294       18        *                    1 if moving user buffer to monitor
     1295       19        *              FAK - Zero if not first segment of record
     1296       20        *              SEED - Encryption seed (optional)
     1297       21        *              VFC - VFC char to insert (optional)
     1298       22        *              FPTCODE - FPT code for this operation
     1299       23        *              DCB.UB$ - Current pointer into user buffer
     1300       24        *              DCB.UBYTES - # bytes remaining in user buffer
     1301       25        *              DCB.ARS - # bytes moved to/from user so far
     1302       26        *              DCB.CSEED - Current intermediate encryption seed
     1303       27        *              DCB.SHFT - Current state of compression shift
     1304       28        *      OUTPUT: GBYTES - If DIR=0, # bytes remaining in mon buf
     1305       29        *                       If DIR=1, # bytes transfered into mon buf
     1306       30        *              DCB.UB$ - Updated by # bytes moved
     1307       31        *              DCB.UBYTES - Updated by # bytes moved
     1308       32        *              DCB.ARS - Updated by # bytes moved
     1309       33        *              DCB.CSEED - Current intermediate encryption seed
     1310       34        *              DCB.ARS - Incremented by # bytes moved
     1311       35        *              DCB.BFR.BUFUP(BUFNUM) - Set if moving to mon buffer
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:273  
     1312       36        *              DCB.SHFT - Current state of compression shift
     1313       37        *      DESCRIPTION:                                                          */
     1314       38        FMD$RECTRAN: PROC(G$,GBYTES,BUFNUM,DIR,FAK,PSEED,VFC,FPTCODE) ALTRET;

     38  1 000000   000000 700200 xent  FMD$RECTRAN  TSX0  ! X66_AUTO_N
         1 000001   000054 000010                    ZERO    44,8

     1315       39        /* PARAMETERS */
     1316       40    1   DCL G$ PTR;              /* POINTER TO BEGINNING OF DATA AREA IN POOL BUFFER  */
     1317       41    1   DCL GBYTES SBIN;                        /* SIZE OF POOL BUFFER AREA IN BYTES  */
     1318       42    1   DCL BUFNUM UBIN(36);                    /* POOL BUFFER NUMBER                 */
     1319       43    1   DCL DIR SBIN;                      /* 0=MON BUFFER TO USER, 1=USER TO MON     */
     1320       44    1   DCL FAK SBIN;                      /* 0 IF NOT FIRST SEG OF RECORD, ELSE 1    */
     1321       45    1   DCL PSEED BIT(36) ALIGNED;             /* Passed encryption seed              */
     1322       46    1   DCL VFC CHAR(1);                   /* VFC char to insert - none if absent     */
     1323       47    1   DCL FPTCODE UBIN;                       /* FPT code for this operation        */
     1324       48    1   DCL CWORD$ PTR;
     1325       49    1   DCL TEMP_FAK SBIN;
     1326       50        /* LOCAL AUTOMATIC STORAGE */
     1327       51    1   DCL CSEED SBIN;
     1328       52    1   DCL ISEED BIT(36) ALIGNED;             /* Local encryption seed               */
     1329       53    1   DCL WRDS SBIN;
     1330       54    1   DCL BUF$ PTR;
     1331       55    1   DCL JDCB$ PTR;
     1332       56    1   DCL TFPTCODE UBIN;
     1333       57    1   DCL WORD_NUM SBIN;
     1334       58        /* BASED STRUCTURES */
     1335       59    1   DCL UBIN4 UBIN(4) UNAL BASED;
     1336       60    1   DCL BASED_WORD(0:0) CHAR(4) CALIGNED BASED;
     1337       61        /* EXTERNAL ROUTINES */
     1338       62    1   DCL FMD$WRTSV ENTRY(1);
     1339       63    1   DCL FMD$ENCRYPT ENTRY(5);
     1340       64    1   DCL FMD$DECRYPT ENTRY(5);
     1341       65        /* EXTERNAL DATA */
     1342       66    1   DCL B$JIT$ PTR SYMREF READONLY;
     1343       67    1   DCL B$PS0$ PTR SYMREF READONLY;
     1344       68    1   DCL FM$BUF$(0:0) PTR SYMREF;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:274  
     1345       69    1   DCL B$ROSEG$ PTR SYMREF;
     1346       70        %INCLUDE B$TABLES_C;
     1347      178        %B$XL_UR(NAME=NK_URTBL);
     1348      182        %B$XL_UPPER_UR(NAME=NK_URTBLUC);
     1349      186        /* INCLUDE FILES */
     1350      187        %INCLUDE B_MICROPS_C;
     1351      359        %INCLUDE F$JIT_C;
     1352      789        %MACRO F$DCB(BASED=BASED);
     1353      790        %INCLUDE F$DCB;
     1354      839        %MEND;
     1355      840        %INCLUDE F_MACROS_C;
     1356      851        %INCLUDE F$CP6V_C;
     1357     1077        %INCLUDE F_ERRORS_C;
     1358     1317        %INCLUDE F_FPTCODE_C;
     1359     1353        %INCLUDE FM$GRAN;
     1360     1422        /* CONSTANT STORAGE */
     1361     1423        %SUB FCG#='0615'O;
     1362     1424        %SUB MID#='04'O;
     1363     1425        %ERRCODE (COD#=%E$DECOMP);
     1364     1429        /* MACRO CALLS */
     1365     1430        %F$DCB (BASED="BASED(JDCB$)");
     1366     1480        %FPT$READ_V (BASED="BASED(B$PS0$)");
     1367     1487        %FM$GRAN;
     1368     1491        /**/
     1369     1492    1           JDCB$=B$JIT.DCB$;

   1492  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200021 756100                    STQ     JDCB$,,AUTO

     1370     1493        /**/
     1371     1494    1           IF PSEED THEN                  /* Get the right seed value.           */

   1494  1 000005   200010 471500                    LDP1    @PSEED,,AUTO
         1 000006   100000 235100                    LDA     0,,PR1
         1 000007   000013 600000 1                  TZE     s:1497

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:275  
     1372     1495    1              ISEED = PSEED;              /* From FPT. */

   1495  1 000010   100000 236100                    LDQ     0,,PR1
         1 000011   200016 756100                    STQ     ISEED,,AUTO
         1 000012   000016 710000 1                  TRA     s:1499

     1373     1496    1           ELSE
     1374     1497    1              ISEED = F$DCB.SEED; /* From DCB. */

   1497  1 000013   200021 473500                    LDP3    JDCB$,,AUTO
         1 000014   300062 236100                    LDQ     50,,PR3
         1 000015   200016 756100                    STQ     ISEED,,AUTO

     1375     1498
     1376     1499    2           IF F$DCB.COMP THEN DO;

   1499  1 000016   200021 473500                    LDP3    JDCB$,,AUTO
         1 000017   300031 236100                    LDQ     25,,PR3
         1 000020   000100 316007                    CANQ    64,DL
         1 000021   000033 600000 1                  TZE     s:1508

     1377     1500        /* COMPRESSION */
     1378     1501    2              IF DIR=0 THEN

   1501  1 000022   200006 474500                    LDP4    @DIR,,AUTO
         1 000023   400000 235100                    LDA     0,,PR4
         1 000024   000030 601000 1                  TNZ     s:1504

     1379     1502    2              CALL DECOMP ALTRET(ERR);

   1502  1 000025   001144 701000 1                  TSX1    DECOMP
         1 000026   000100 702000 1                  TSX2    ERR
         1 000027   000032 710000 1                  TRA     s:1505

     1380     1503    2              ELSE
     1381     1504    2              CALL COMPRESS;

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:276  
   1504  1 000030   000376 701000 1                  TSX1    COMPRESS
         1 000031   000000 011000                    NOP     0

     1382     1505    2              RETURN;

   1505  1 000032   000000 702200 xent               TSX2  ! X66_ARET

     1383     1506    2              END;
     1384     1507                                                /*                                    */
     1385     1508    2           IF NOT ISEED THEN DO;

   1508  1 000033   200016 235100                    LDA     ISEED,,AUTO
         1 000034   000040 601000 1                  TNZ     s:1515

     1386     1509        /* NO COMPRESSION OR ENCRYPTION */
     1387     1510    2              CALL MOVE;

   1510  1 000035   000101 701000 1                  TSX1    MOVE
         1 000036   000000 011000                    NOP     0

     1388     1511    2              RETURN;

   1511  1 000037   000000 702200 xent               TSX2  ! X66_ARET

     1389     1512    2              END;
     1390     1513                                                /*                                    */
     1391     1514        /* ENCRYPTION SPECIFIED */
     1392     1515    2           IF DIR~=0 THEN DO;              /* USER TO MONITOR                    */

   1515  1 000040   200006 474500                    LDP4    @DIR,,AUTO
         1 000041   400000 235100                    LDA     0,,PR4
         1 000042   000072 600000 1                  TZE     s:1521

     1393     1516    2              CALL MOVE;

   1516  1 000043   000101 701000 1                  TSX1    MOVE
         1 000044   000000 011000                    NOP     0
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:277  

     1394     1517    2              WRDS=(GBYTES+3)/4;           /* # WORDS TO ENCRYPT                 */

   1517  1 000045   200004 470500                    LDP0    @GBYTES,,AUTO
         1 000046   000000 236100                    LDQ     0,,PR0
         1 000047   000003 036007                    ADLQ    3,DL
         1 000050   000004 506007                    DIV     4,DL
         1 000051   200017 756100                    STQ     WRDS,,AUTO

     1395     1518    2              CALL FMD$ENCRYPT(G$,WRDS,ISEED,JDCB$->F$DCB.CSEED,FAK);
              1518                       /* ENCRYPT IN MON BUFFER */

   1518  1 000052   200007 236100                    LDQ     @FAK,,AUTO
         1 000053   200052 756100                    STQ     MOVE+5,,AUTO
         1 000054   200021 236100                    LDQ     JDCB$,,AUTO
         1 000055   000072 036003                    ADLQ    58,DU
         1 000056   200051 756100                    STQ     MOVE+4,,AUTO
         1 000057   200016 631500                    EPPR1   ISEED,,AUTO
         1 000060   200050 451500                    STP1    MOVE+3,,AUTO
         1 000061   200017 633500                    EPPR3   WRDS,,AUTO
         1 000062   200047 453500                    STP3    MOVE+2,,AUTO
         1 000063   200003 236100                    LDQ     @G$,,AUTO
         1 000064   200046 756100                    STQ     MOVE+1,,AUTO
         1 000065   200046 630500                    EPPR0   MOVE+1,,AUTO
         1 000066   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000067   000000 701000 xent               TSX1    FMD$ENCRYPT
         1 000070   000000 011000                    NOP     0

     1396     1519    2              END;

   1519  1 000071   000077 710000 1                  TRA     s:1524

     1397     1520    2           ELSE DO;                        /* MONITOR TO USER                    */

     1398     1521    2              CALL MOVE;                   /* Move into user's buffer.           */

   1521  1 000072   000101 701000 1                  TSX1    MOVE
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:278  
         1 000073   000000 011000                    NOP     0

     1399     1522    2              F$DCB.DECRYPT = '1'B;        /* Decrypt later.                     */

   1522  1 000074   200021 470500                    LDP0    JDCB$,,AUTO
         1 000075   001000 236007                    LDQ     512,DL
         1 000076   000102 256100                    ORSQ    66,,PR0

     1400     1523    2              END;

     1401     1524    1           RETURN;

   1524  1 000077   000000 702200 xent               TSX2  ! X66_ARET

     1402     1525                                                /*                                    */
     1403     1526    1   ERR:    ALTRETURN;

   1526  1 000100   000000 702200 xent  ERR          TSX2  ! X66_AALT

     1404     1527        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:279  
     1405     1528        /* LEVEL 2 ROUTINE TO MOVE BYTES WITHOUT MODIFICATION */
     1406     1529    1   MOVE:   PROC;

   1529  1 000101   200024 741300       MOVE         STX1  ! WORD_NUM+1,,AUTO

     1407     1530    2   DCL NUM SBIN;
     1408     1531    2   DCL CHRS CHAR(NUM) BASED;
     1409     1532    2   DCL CHAR1 CHAR(1) BASED;
     1410     1533    2   DCL 1 CHARS BASED,
     1411     1534    2         2 * CHAR(1),
     1412     1535    2         2 SKIP1 CHAR(NUM);
     1413     1536    2           NUM=GBYTES;                     /* # bytes to xfer                    */

   1536  1 000102   200004 470500                    LDP0    @GBYTES,,AUTO
         1 000103   000000 235100                    LDA     0,,PR0
         1 000104   200025 755100                    STA     NUM,,AUTO

     1414     1537    3           IF DIR=0 THEN DO;               /* Monitor to user                    */

   1537  1 000105   200006 471500                    LDP1    @DIR,,AUTO
         1 000106   100000 235100                    LDA     0,,PR1
         1 000107   000166 601000 1                  TNZ     s:1553

     1415     1538    3              IF FPT$READ_V.STRPVFC AND F$DCB.DVBYTE.VFC AND FAK = 1 THEN

   1538  1 000110   000000 473400 xsym               LDP3    B$PS0$
         1 000111   300003 236100                    LDQ     3,,PR3
         1 000112   000400 316003                    CANQ    256,DU
         1 000113   000142 600000 1                  TZE     s:1546
         1 000114   200021 474500                    LDP4    JDCB$,,AUTO
         1 000115   400003 236100                    LDQ     3,,PR4
         1 000116   100000 316003                    CANQ    32768,DU
         1 000117   000142 600000 1                  TZE     s:1546
         1 000120   200007 475500                    LDP5    @FAK,,AUTO
         1 000121   500000 235100                    LDA     0,,PR5
         1 000122   000001 115007                    CMPA    1,DL
         1 000123   000142 601000 1                  TNZ     s:1546
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:280  

     1416     1539    4                 DO;  /* STRIP VFC */

     1417     1540    4                 F$DCB.VFCCHAR=G$->CHAR1;

   1540  1 000124   200003 476500                    LDP6    @G$,,AUTO
         1 000125   600000 477500                    LDP7    0,,PR6
         1 000126   040100 100500                    MLR     fill='040'O
         1 000127   700000 000001                    ADSC9   0,,PR7                   cn=0,n=1
         1 000130   400056 000001                    ADSC9   46,,PR4                  cn=0,n=1

     1418     1541    4                 F$DCB.GDISP=F$DCB.GDISP+1;

   1541  1 000131   400101 235100                    LDA     65,,PR4
         1 000132   000001 035007                    ADLA    1,DL
         1 000133   400101 755100                    STA     65,,PR4

     1419     1542    4                 NUM=NUM-1;

   1542  1 000134   000001 336007                    LCQ     1,DL
         1 000135   200025 056100                    ASQ     NUM,,AUTO

     1420     1543    4                 GBYTES=GBYTES-1;

   1543  1 000136   000000 056100                    ASQ     0,,PR0

     1421     1544    4                 G$=PINCRC(G$, 1);

   1544  1 000137   600000 236100                    LDQ     0,,PR6
         1 000140   200000 036007                    ADLQ    65536,DL
         1 000141   600000 756100                    STQ     0,,PR6

     1422     1545    4                 END;  /* STRIP VFC */

     1423     1546    3              IF NUM > F$DCB.UBYTES THEN

   1546  1 000142   200021 474500                    LDP4    JDCB$,,AUTO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:281  
         1 000143   400076 236100                    LDQ     62,,PR4
         1 000144   000150 604000 1                  TMI     s:1548
         1 000145   200025 116100                    CMPQ    NUM,,AUTO
         1 000146   000150 605000 1                  TPL     s:1548

     1424     1547    3                 NUM=F$DCB.UBYTES;

   1547  1 000147   200025 756100                    STQ     NUM,,AUTO

     1425     1548    3              F$DCB.UB$->CHRS=G$->CHRS;

   1548  1 000150   400075 475500                    LDP5    61,,PR4
         1 000151   200003 476500                    LDP6    @G$,,AUTO
         1 000152   600000 477500                    LDP7    0,,PR6
         1 000153   200025 720100                    LXL0    NUM,,AUTO
         1 000154   040140 100540                    MLR     fill='040'O
         1 000155   700000 000010                    ADSC9   0,,PR7                   cn=0,n=*X0
         1 000156   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0

     1426     1549    3              GBYTES=GBYTES-NUM;

   1549  1 000157   000000 236100                    LDQ     0,,PR0
         1 000160   200025 136100                    SBLQ    NUM,,AUTO
         1 000161   000000 756100                    STQ     0,,PR0

     1427     1550    3              F$DCB.ARS=F$DCB.ARS+NUM;

   1550  1 000162   400000 236100                    LDQ     0,,PR4
         1 000163   200025 036100                    ADLQ    NUM,,AUTO
         1 000164   400000 756100                    STQ     0,,PR4

     1428     1551    3              END;

   1551  1 000165   000355 710000 1                  TRA     s:1590

     1429     1552    3           ELSE DO;                        /* User to monitor                    */

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:282  
     1430     1553    3              IF NUM>F$DCB.UBYTES THEN

   1553  1 000166   200021 473500                    LDP3    JDCB$,,AUTO
         1 000167   300076 236100                    LDQ     62,,PR3
         1 000170   000174 604000 1                  TMI     s:1555
         1 000171   200025 116100                    CMPQ    NUM,,AUTO
         1 000172   000174 605000 1                  TPL     s:1555

     1431     1554    3                 NUM=F$DCB.UBYTES;

   1554  1 000173   200025 756100                    STQ     NUM,,AUTO

     1432     1555    3              IF ADDR(FPTCODE)=ADDR(NIL) THEN

   1555  1 000174   200012 236100                    LDQ     @FPTCODE,,AUTO
         1 000175   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000176   000202 601000 1                  TNZ     s:1558

     1433     1556    3                 TFPTCODE=MFC_WRITE;

   1556  1 000177   000001 235007                    LDA     1,DL
         1 000200   200022 755100                    STA     TFPTCODE,,AUTO
         1 000201   000205 710000 1                  TRA     s:1559

     1434     1557    3              ELSE
     1435     1558    3                 TFPTCODE=FPTCODE;

   1558  1 000202   200012 474500                    LDP4    @FPTCODE,,AUTO
         1 000203   400000 235100                    LDA     0,,PR4
         1 000204   200022 755100                    STA     TFPTCODE,,AUTO

     1436     1559    3              IF ADDR(VFC)~=ADDR(NIL) AND FAK~=0 THEN

   1559  1 000205   200011 236100                    LDQ     @VFC,,AUTO
         1 000206   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000207   000303 600000 1                  TZE     s:1578
         1 000210   200007 474500                    LDP4    @FAK,,AUTO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:283  
         1 000211   400000 235100                    LDA     0,,PR4
         1 000212   000303 600000 1                  TZE     s:1578

     1437     1560    4                 IF GBYTES~=0 THEN DO;

   1560  1 000213   000000 235100                    LDA     0,,PR0
         1 000214   000351 600000 1                  TZE     s:1588

     1438     1561    4                    NUM=GBYTES-1;

   1561  1 000215   000001 135007                    SBLA    1,DL
         1 000216   200025 755100                    STA     NUM,,AUTO

     1439     1562    4                    IF NUM>F$DCB.UBYTES THEN

   1562  1 000217   300076 236100                    LDQ     62,,PR3
         1 000220   000224 604000 1                  TMI     s:1564
         1 000221   200025 116100                    CMPQ    NUM,,AUTO
         1 000222   000224 605000 1                  TPL     s:1564

     1440     1563    4                       NUM=F$DCB.UBYTES;

   1563  1 000223   200025 756100                    STQ     NUM,,AUTO

     1441     1564    4                    G$->CHAR1=VFC;

   1564  1 000224   200003 475500                    LDP5    @G$,,AUTO
         1 000225   500000 476500                    LDP6    0,,PR5
         1 000226   200011 477500                    LDP7    @VFC,,AUTO
         1 000227   040100 100500                    MLR     fill='040'O
         1 000230   700000 000001                    ADSC9   0,,PR7                   cn=0,n=1
         1 000231   600000 000001                    ADSC9   0,,PR6                   cn=0,n=1

     1442     1565    5                    DO CASE(TFPTCODE);     /* Move or translate data to monitor.*/

   1565  1 000232   200022 235100                    LDA     TFPTCODE,,AUTO
         1 000233   000012 135007                    SBLA    10,DL
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:284  
         1 000234   000004 115007                    CMPA    4,DL
         1 000235   000237 602005 1                  TNC     s:1565+5,AL
         1 000236   000265 710000 1                  TRA     s:1571
         1 000237   000243 710000 1                  TRA     s:1567
         1 000240   000265 710000 1                  TRA     s:1571
         1 000241   000265 710000 1                  TRA     s:1571
         1 000242   000254 710000 1                  TRA     s:1569

     1443     1566    5                     CASE(MFC_WRUR);

     1444     1567    5                       CALL XLATE(G$->CHARS.SKIP1,NK_URTBL,F$DCB.UB$->CHRS);

   1567  1 000243   500000 476500                    LDP6    0,,PR5
         1 000244   300075 470500                    LDP0    61,,PR3
         1 000245   200025 720100                    LXL0    NUM,,AUTO
         1 000246   000000 471400 xsym               LDP1    B$XL_UR$
         1 000247   040140 160540                    MVT     fill='040'O
         1 000250   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000251   600000 200010                    ADSC9   0,,PR6                   cn=1,n=*X0
         1 000252   100000 000100                    ARG     0,,PR1
         1 000253   000273 710000 1                  TRA     s:1573

     1445     1568    5                     CASE(MFC_WRURUC);

     1446     1569    5                       CALL XLATE(G$->CHARS.SKIP1,NK_URTBLUC,F$DCB.UB$->CHRS);

   1569  1 000254   500000 476500                    LDP6    0,,PR5
         1 000255   300075 470500                    LDP0    61,,PR3
         1 000256   200025 720100                    LXL0    NUM,,AUTO
         1 000257   000000 471400 xsym               LDP1    B$XL_UPPER_UR$
         1 000260   040140 160540                    MVT     fill='040'O
         1 000261   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000262   600000 200010                    ADSC9   0,,PR6                   cn=1,n=*X0
         1 000263   100000 000100                    ARG     0,,PR1
         1 000264   000273 710000 1                  TRA     s:1573

     1447     1570    5                     CASE(ELSE);
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:285  

     1448     1571    5                       G$->CHARS.SKIP1=F$DCB.UB$->CHRS;

   1571  1 000265   500000 476500                    LDP6    0,,PR5
         1 000266   300075 470500                    LDP0    61,,PR3
         1 000267   200025 720100                    LXL0    NUM,,AUTO
         1 000270   040140 100540                    MLR     fill='040'O
         1 000271   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000272   600000 200010                    ADSC9   0,,PR6                   cn=1,n=*X0

     1449     1572    5                     END;

     1450     1573    4                    GBYTES=NUM+1;

   1573  1 000273   200004 470500                    LDP0    @GBYTES,,AUTO
         1 000274   200025 236100                    LDQ     NUM,,AUTO
         1 000275   000001 036007                    ADLQ    1,DL
         1 000276   000000 756100                    STQ     0,,PR0

     1451     1574    4                    F$DCB.GDISP=F$DCB.GDISP+1;

   1574  1 000277   300101 235100                    LDA     65,,PR3
         1 000300   000001 035007                    ADLA    1,DL
         1 000301   300101 755100                    STA     65,,PR3

     1452     1575    4                    END;

   1575  1 000302   000351 710000 1                  TRA     s:1588

     1453     1576    3                 ELSE ;
     1454     1577    4              ELSE DO;

     1455     1578    5                 DO CASE(TFPTCODE);        /* Move or translate data to monitor.*/

   1578  1 000303   200022 235100                    LDA     TFPTCODE,,AUTO
         1 000304   000012 135007                    SBLA    10,DL
         1 000305   000004 115007                    CMPA    4,DL
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:286  
         1 000306   000310 602005 1                  TNC     s:1578+5,AL
         1 000307   000340 710000 1                  TRA     s:1584
         1 000310   000314 710000 1                  TRA     s:1580
         1 000311   000340 710000 1                  TRA     s:1584
         1 000312   000340 710000 1                  TRA     s:1584
         1 000313   000326 710000 1                  TRA     s:1582

     1456     1579    5                  CASE(MFC_WRUR);

     1457     1580    5                    CALL XLATE(G$->CHRS,NK_URTBL,F$DCB.UB$->CHRS);

   1580  1 000314   200003 474500                    LDP4    @G$,,AUTO
         1 000315   400000 475500                    LDP5    0,,PR4
         1 000316   300075 476500                    LDP6    61,,PR3
         1 000317   200025 720100                    LXL0    NUM,,AUTO
         1 000320   000000 477400 xsym               LDP7    B$XL_UR$
         1 000321   040140 160540                    MVT     fill='040'O
         1 000322   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 000323   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         1 000324   700000 000100                    ARG     0,,PR7
         1 000325   000347 710000 1                  TRA     s:1586

     1458     1581    5                  CASE(MFC_WRURUC);

     1459     1582    5                    CALL XLATE(G$->CHRS,NK_URTBLUC,F$DCB.UB$->CHRS);

   1582  1 000326   200003 474500                    LDP4    @G$,,AUTO
         1 000327   400000 475500                    LDP5    0,,PR4
         1 000330   300075 476500                    LDP6    61,,PR3
         1 000331   200025 720100                    LXL0    NUM,,AUTO
         1 000332   000000 477400 xsym               LDP7    B$XL_UPPER_UR$
         1 000333   040140 160540                    MVT     fill='040'O
         1 000334   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 000335   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         1 000336   700000 000100                    ARG     0,,PR7
         1 000337   000347 710000 1                  TRA     s:1586

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:287  
     1460     1583    5                  CASE(ELSE);

     1461     1584    5                    G$->CHRS=F$DCB.UB$->CHRS;

   1584  1 000340   200003 474500                    LDP4    @G$,,AUTO
         1 000341   400000 475500                    LDP5    0,,PR4
         1 000342   300075 476500                    LDP6    61,,PR3
         1 000343   200025 720100                    LXL0    NUM,,AUTO
         1 000344   040140 100540                    MLR     fill='040'O
         1 000345   600000 000010                    ADSC9   0,,PR6                   cn=0,n=*X0
         1 000346   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0

     1462     1585    5                  END;

     1463     1586    4                 GBYTES=NUM;

   1586  1 000347   200025 235100                    LDA     NUM,,AUTO
         1 000350   000000 755100                    STA     0,,PR0

     1464     1587    4                 END;

     1465     1588    3              F$DCB.BFR.BUFUP(BUFNUM)='1'B;

   1588  1 000351   200005 471500                    LDP1    @BUFNUM,,AUTO
         1 000352   100000 720100                    LXL0    0,,PR1
         1 000353   400000 236003                    LDQ     -131072,DU
         1 000354   300115 256110                    ORSQ    77,X0,PR3

     1466     1589    3              END;

     1467     1590    2           F$DCB.UB$=PINCRC(F$DCB.UB$,NUM);

   1590  1 000355   200021 471500                    LDP1    JDCB$,,AUTO
         1 000356   100075 473500                    LDP3    61,,PR1
         1 000357   200025 236100                    LDQ     NUM,,AUTO
         1 000360   000011 402007                    MPY     9,DL
         1 000361   000000 116003                    CMPQ    0,DU
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:288  
         1 000362   000364 605000 1                  TPL     s:1590+7
         1 000363   000044 036003                    ADLQ    36,DU
         1 000364   300000 503506                    ABD     0,QL,PR3
         1 000365   100075 453500                    STP3    61,,PR1

     1468     1591    2           F$DCB.UBYTES=F$DCB.UBYTES-NUM;

   1591  1 000366   100076 236100                    LDQ     62,,PR1
         1 000367   200025 136100                    SBLQ    NUM,,AUTO
         1 000370   100076 756100                    STQ     62,,PR1

     1469     1592    2           F$DCB.GDISP=F$DCB.GDISP+NUM;

   1592  1 000371   100101 236100                    LDQ     65,,PR1
         1 000372   200025 036100                    ADLQ    NUM,,AUTO
         1 000373   100101 756100                    STQ     65,,PR1

     1470     1593    2           RETURN;

   1593  1 000374   200024 221300                    LDX1  ! WORD_NUM+1,,AUTO
         1 000375   000001 702211                    TSX2  ! 1,X1

     1471     1594    2   END MOVE;
     1472     1595        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:289  
     1473     1596        /* Level 2 routine to compress records */
     1474     1597        /************************************************************/
     1475     1598        /*                                                          */
     1476     1599        /*  Great care must be taken when modifying the code        */
     1477     1600        /*  for compression/decompression.  It has been carefully   */
     1478     1601        /*  diddled (that's a technical term) to make sure that CSRs*/
     1479     1602        /*  rather than CSLs are always used when referencing an    */
     1480     1603        /*  FPOOL because of the DPS90 prepaging problem.  Since    */
     1481     1604        /*  none of this code can reference the first two words of  */
     1482     1605        /*  a block (control words are there) CSRs are immune from  */
     1483     1606        /*  the prepaging error.  This is somewhat anti-performant  */
     1484     1607        /*  as CSLs are considerably faster on some models, but we  */
     1485     1608        /*  have no real alternative.                               */
     1486     1609        /*                                                          */
     1487     1610        /************************************************************/
     1488     1611    1   COMPRESS: PROC;

   1611  1 000376   200024 741300       COMPRESS     STX1  ! WORD_NUM+1,,AUTO

     1489     1612        /* SUBS */
     1490     1613        %SUB CODUNK=0;
     1491     1614        %SUB CODSHIFT=1;
     1492     1615        %SUB CODDUP=2;
     1493     1616        /* CONSTANT STORAGE */
     1494     1617    2   DCL XLATETBL(0:511) UBIN CONSTANT INIT(
     1495     1618    2           0,0,0,0,0,0,0,0,0,0,
     1496     1619    2           0,0,0,0,0,0,0,0,0,0,
     1497     1620    2           0,0,0,0,0,0,0,0,0,0,
     1498     1621    2           0,0,3,4,5,6,7,8,0,9,
     1499     1622    2           10,11,12,13,14,15,16,17,18,19,
     1500     1623    2           20,21,22,23,24,25,26,27,28,29,
     1501     1624    2           30,31,32,33,34,419,420,421,422,423,
     1502     1625    2           424,425,426,427,428,429,430,431,432,433,
     1503     1626    2           434,435,436,437,438,439,440,441,442,443,
     1504     1627    2           444,0,0,0,0,61,0,163,164,165,
     1505     1628    2           166,167,168,169,170,171,172,173,174,175,
     1506     1629    2           176,177,178,179,180,181,182,183,184,185,
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:290  
     1507     1630    2           186,187,188,0,62,0,63,0,0*0);
     1508     1631        /* LOCAL AUTOMATIC STORAGE */
     1509     1632    2   DCL CHR UBIN;
     1510     1633    2   DCL PCHR UBIN;
     1511     1634    2   DCL PREVCHR UBIN;
     1512     1635    2   DCL PREV# SBIN;
     1513     1636    2   DCL N SBIN;
     1514     1637    2   DCL 1 NB REDEF N,
     1515     1638    2         2 * BIT(27),
     1516     1639    2         2 UC BIT(1),
     1517     1640    2         2 ALPHA BIT(1),
     1518     1641    2         2 * BIT(7);
     1519     1642    2   DCL GBITS SBIN;
     1520     1643    2   DCL T$ PTR;
     1521     1644    2   DCL CX UBIN;
     1522     1645    2   DCL CXS REDEF CX SBIN;
     1523     1646    2   DCL CNT SBIN;
     1524     1647    2   DCL SHFT SBIN;
     1525     1648    2   DCL 1 SHFTBIT REDEF SHFT,
     1526     1649    2         2 * BIT(35),
     1527     1650    2         2 B BIT(1);
     1528     1651    2   DCL UB$ PTR;
     1529     1652    2   DCL TEMPCHAR CHAR(1) CALIGNED;
     1530     1653        /* BASED STRUCTURES */
     1531     1654    2   DCL UBIN6 UBIN(6) UNAL BASED;
     1532     1655    2   DCL UBIN9 UBIN(9) UNAL BASED;
     1533     1656    2   DCL UBIN3 UBIN(3) UNAL BASED;
     1534     1657    2   DCL CHARS(0:0) CHAR(1) CALIGNED BASED;
     1535     1658    2   DCL 1 SKIP6 BASED UNAL,
     1536     1659    2         2 * BIT(6),
     1537     1660    2         2 UBIN6 UBIN(6) UNAL;
     1538     1661        /**/
     1539     1662    2           SHFT=1;                    /* Record segment starts in upper case     */

   1662  1 000377   000001 235007                    LDA     1,DL
         1 000400   200036 755100                    STA     SHFT,,AUTO

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:291  
     1540     1663    2           F$DCB.BFR.BUFUP(BUFNUM)='1'B;   /* Buffer modified                    */

   1663  1 000401   200005 470500                    LDP0    @BUFNUM,,AUTO
         1 000402   000000 720100                    LXL0    0,,PR0
         1 000403   200021 471500                    LDP1    JDCB$,,AUTO
         1 000404   400000 236003                    LDQ     -131072,DU
         1 000405   100115 256110                    ORSQ    77,X0,PR1

     1541     1664    2           IF ADDR(NIL)=ADDR(FPTCODE) THEN

   1664  1 000406   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000407   200012 116100                    CMPQ    @FPTCODE,,AUTO
         1 000410   000413 601000 1                  TNZ     s:1667

     1542     1665    2              TFPTCODE=MFC_WRITE;

   1665  1 000411   200022 755100                    STA     TFPTCODE,,AUTO
         1 000412   000416 710000 1                  TRA     s:1668

     1543     1666    2           ELSE
     1544     1667    2              TFPTCODE=FPTCODE;

   1667  1 000413   200012 473500                    LDP3    @FPTCODE,,AUTO
         1 000414   300000 235100                    LDA     0,,PR3
         1 000415   200022 755100                    STA     TFPTCODE,,AUTO

     1545     1668    2           GBITS=GBYTES*9;                 /* # BITS IN MONITOR BUFFER AREA      */

   1668  1 000416   200004 473500                    LDP3    @GBYTES,,AUTO
         1 000417   300000 236100                    LDQ     0,,PR3
         1 000420   000011 402007                    MPY     9,DL
         1 000421   200032 756100                    STQ     GBITS,,AUTO

     1546     1669    2           T$=G$;                          /* POINTER TO MONITOR BUFFER AREA     */

   1669  1 000422   200003 474500                    LDP4    @G$,,AUTO
         1 000423   400000 236100                    LDQ     0,,PR4
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:292  
         1 000424   200033 756100                    STQ     T$,,AUTO

     1547     1670    2           PREV#=0;                        /* NO PREV DUPLICATES                 */

   1670  1 000425   200030 450100                    STZ     PREV#,,AUTO

     1548     1671    2           PREVCHR=32;                     /* PREV CHAR WAS BLANK                */

   1671  1 000426   000040 235007                    LDA     32,DL
         1 000427   200027 755100                    STA     PREVCHR,,AUTO

     1549     1672    2           CX=0;                           /* INDEX INTO USER BUFFER             */

   1672  1 000430   200034 450100                    STZ     CX,,AUTO

     1550     1673    2           CNT=F$DCB.UBYTES;               /* SIZE OF USER BUFFER                */

   1673  1 000431   100076 235100                    LDA     62,,PR1
         1 000432   200035 755100                    STA     CNT,,AUTO

     1551     1674    2           UB$=F$DCB.UB$;                  /* User buffer pointer                */

   1674  1 000433   100075 236100                    LDQ     61,,PR1
         1 000434   200037 756100                    STQ     UB$,,AUTO

     1552     1675    2           TEMP_FAK=FAK;

   1675  1 000435   200007 475500                    LDP5    @FAK,,AUTO
         1 000436   500000 235100                    LDA     0,,PR5
         1 000437   200014 755100                    STA     TEMP_FAK,,AUTO

     1553     1676    2           CWORD$=ADDR(F$DCB.CWORD);

   1676  1 000440   200021 236100                    LDQ     JDCB$,,AUTO
         1 000441   000105 036003                    ADLQ    69,DU
         1 000442   200013 756100                    STQ     CWORD$,,AUTO

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:293  
     1554     1677    2           WORD_NUM=0;

   1677  1 000443   200023 450100                    STZ     WORD_NUM,,AUTO

     1555     1678    2           IF ISEED THEN

   1678  1 000444   200016 235100                    LDA     ISEED,,AUTO
         1 000445   000470 600000 1                  TZE     s:1684

     1556     1679    2              IF FAK=1 THEN

   1679  1 000446   500000 235100                    LDA     0,,PR5
         1 000447   000001 115007                    CMPA    1,DL
         1 000450   000454 601000 1                  TNZ     s:1681

     1557     1680    2                 CALL GET_WORD;

   1680  1 000451   000754 701000 1                  TSX1    GET_WORD
         1 000452   000000 011000                    NOP     0
         1 000453   000470 710000 1                  TRA     s:1684

     1558     1681    2              ELSE IF TFPTCODE ~= MFC_WRUR AND TFPTCODE ~= MFC_WRURUC THEN

   1681  1 000454   200022 235100                    LDA     TFPTCODE,,AUTO
         1 000455   000012 115007                    CMPA    10,DL
         1 000456   000470 600000 1                  TZE     s:1684
         1 000457   000015 115007                    CMPA    13,DL
         1 000460   000470 600000 1                  TZE     s:1684

     1559     1682    2                 UB$=PINCRC(UB$,4-F$DCB.CX);

   1682  1 000461   100104 236100                    LDQ     68,,PR1
         1 000462   000777 376007                    ANQ     511,DL
         1 000463   000020 736000                    QLS     16
         1 000464   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000465   000000 036000 2                  ADLQ    0
         1 000466   200037 036100                    ADLQ    UB$,,AUTO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:294  
         1 000467   200037 756100                    STQ     UB$,,AUTO

     1560     1683
     1561     1684    3           IF ADDR(VFC)~=ADDR(NIL) AND FAK~=0 THEN DO;

   1684  1 000470   200011 236100                    LDQ     @VFC,,AUTO
         1 000471   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000472   000510 600000 1                  TZE     s:1690
         1 000473   200007 470500                    LDP0    @FAK,,AUTO
         1 000474   000000 235100                    LDA     0,,PR0
         1 000475   000510 600000 1                  TZE     s:1690

     1562     1685    3              CNT=CNT+1;                   /* Incr to include VFC                */

   1685  1 000476   200035 054100                    AOS     CNT,,AUTO

     1563     1686    3              CXS=-1;

   1686  1 000477   000001 335007                    LCA     1,DL
         1 000500   200034 755100                    STA     CX,,AUTO

     1564     1687    3              CHR=ASCBIN(VFC);

   1687  1 000501   200011 471500                    LDP1    @VFC,,AUTO
         1 000502   000100 101500                    MRL     fill='000'O
         1 000503   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000504   200046 000004                    ADSC9   MOVE+1,,AUTO             cn=0,n=4
         1 000505   200046 236100                    LDQ     MOVE+1,,AUTO
         1 000506   200025 756100                    STQ     CHR,,AUTO

     1565     1688    3              GOTO GOTCHR;

   1688  1 000507   000574 710000 1                  TRA     GOTCHR

     1566     1689    3              END;
     1567     1690    3           DO WHILE(CNT>0);

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:295  
   1690  1 000510   200035 235100                    LDA     CNT,,AUTO
         1 000511   000653 604400 1                  TMOZ    s:1737

     1568     1691    4              DO CASE(TFPTCODE);      /* Get next byte (or translation thereof)*/

   1691  1 000512   200022 235100                    LDA     TFPTCODE,,AUTO
         1 000513   000012 135007                    SBLA    10,DL
         1 000514   000004 115007                    CMPA    4,DL
         1 000515   000517 602005 1                  TNC     s:1691+5,AL
         1 000516   000557 710000 1                  TRA     s:1699
         1 000517   000523 710000 1                  TRA     s:1693
         1 000520   000557 710000 1                  TRA     s:1699
         1 000521   000557 710000 1                  TRA     s:1699
         1 000522   000541 710000 1                  TRA     s:1696

     1569     1692    4               CASE(MFC_WRUR);

     1570     1693    4                 TEMPCHAR=UB$->CHARS(CX);

   1693  1 000523   200037 470500                    LDP0    UB$,,AUTO
         1 000524   200034 236100                    LDQ     CX,,AUTO
         1 000525   040100 100506                    MLR     fill='040'O
         1 000526   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 000527   200040 000001                    ADSC9   TEMPCHAR,,AUTO           cn=0,n=1

     1571     1694    4                 CHR=ASCBIN(NK_URTBL.C(ASCBIN(TEMPCHAR)));

   1694  1 000530   200040 236100                    LDQ     TEMPCHAR,,AUTO
         1 000531   000033 772000                    QRL     27
         1 000532   000000 471400 xsym               LDP1    B$XL_UR$
         1 000533   000100 101506                    MRL     fill='000'O
         1 000534   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 000535   200046 000004                    ADSC9   MOVE+1,,AUTO             cn=0,n=4
         1 000536   200046 236100                    LDQ     MOVE+1,,AUTO
         1 000537   200025 756100                    STQ     CHR,,AUTO
         1 000540   000574 710000 1                  TRA     GOTCHR

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:296  
     1572     1695    4               CASE(MFC_WRURUC);

     1573     1696    4                 TEMPCHAR=UB$->CHARS(CX);

   1696  1 000541   200037 470500                    LDP0    UB$,,AUTO
         1 000542   200034 236100                    LDQ     CX,,AUTO
         1 000543   040100 100506                    MLR     fill='040'O
         1 000544   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         1 000545   200040 000001                    ADSC9   TEMPCHAR,,AUTO           cn=0,n=1

     1574     1697    4                 CHR=ASCBIN(NK_URTBLUC.C(ASCBIN(TEMPCHAR)));

   1697  1 000546   200040 236100                    LDQ     TEMPCHAR,,AUTO
         1 000547   000033 772000                    QRL     27
         1 000550   000000 471400 xsym               LDP1    B$XL_UPPER_UR$
         1 000551   000100 101506                    MRL     fill='000'O
         1 000552   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1
         1 000553   200046 000004                    ADSC9   MOVE+1,,AUTO             cn=0,n=4
         1 000554   200046 236100                    LDQ     MOVE+1,,AUTO
         1 000555   200025 756100                    STQ     CHR,,AUTO
         1 000556   000574 710000 1                  TRA     GOTCHR

     1575     1698    4               CASE(ELSE);

     1576     1699    4                 IF ISEED THEN

   1699  1 000557   200016 236100                    LDQ     ISEED,,AUTO
         1 000560   000564 600000 1                  TZE     s:1703

     1577     1700    4                    CALL GETCHAR;

   1700  1 000561   000726 701000 1                  TSX1    GETCHAR
         1 000562   000000 011000                    NOP     0
         1 000563   000574 710000 1                  TRA     GOTCHR

     1578     1701    4                 ELSE
     1579     1702    5                    DO;   /* GET NEXT CHARACTER */
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:297  

     1580     1703    5                    TEMPCHAR=UB$->CHARS(CX);

   1703  1 000564   200037 470500                    LDP0    UB$,,AUTO
         1 000565   200034 235100                    LDA     CX,,AUTO
         1 000566   040100 100505                    MLR     fill='040'O
         1 000567   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         1 000570   200040 000001                    ADSC9   TEMPCHAR,,AUTO           cn=0,n=1

     1581     1704    5                    CHR=ASCBIN(TEMPCHAR);

   1704  1 000571   200040 236100                    LDQ     TEMPCHAR,,AUTO
         1 000572   000033 772000                    QRL     27
         1 000573   200025 756100                    STQ     CHR,,AUTO

     1582     1705    5                    END;  /* GET NEXT CHARACTER */

     1583     1706    4               END;

     1584     1707    4   GOTCHR:    IF PREVCHR=CHR AND PREV#<63 THEN DO;

   1707  1 000574   200027 236100       GOTCHR       LDQ     PREVCHR,,AUTO
         1 000575   200025 116100                    CMPQ    CHR,,AUTO
         1 000576   000604 601000 1                  TNZ     s:1713
         1 000577   200030 235100                    LDA     PREV#,,AUTO
         1 000600   000077 115007                    CMPA    63,DL
         1 000601   000604 605000 1                  TPL     s:1713

     1585     1708                                           /* EDITSTR can't do more than 63 at a time */
     1586     1709    4   PUTDUP:       PREV#=PREV#+1;

   1709  1 000602   200030 054100       PUTDUP       AOS     PREV#,,AUTO

     1587     1710    4                 GOTO PUTOK;

   1710  1 000603   000647 710000 1                  TRA     PUTOK

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:298  
     1588     1711    4                 END;
     1589     1712    4              ELSE DO;                     /* DIFF CHAR OR REACHED DUP MAX COUNT */

     1590     1713    4                 IF PREV#~=0 THEN          /* GOT SOME DUPS                      */

   1713  1 000604   200030 235100                    LDA     PREV#,,AUTO
         1 000605   000610 600000 1                  TZE     s:1715

     1591     1714    4                 CALL DUMPPREV ALTRET(FULL);

   1714  1 000606   001066 701000 1                  TSX1    DUMPPREV
         1 000607   000660 702000 1                  TSX2    FULL

     1592     1715    4                 IF PREVCHR=CHR THEN

   1715  1 000610   200027 236100                    LDQ     PREVCHR,,AUTO
         1 000611   200025 116100                    CMPQ    CHR,,AUTO
         1 000612   000602 600000 1                  TZE     PUTDUP

     1593     1716    4                    GOTO PUTDUP;
     1594     1717    4                 PREVCHR=CHR;              /* NEW PREVIOUS CHAR                  */

   1717  1 000613   200025 235100                    LDA     CHR,,AUTO
         1 000614   200027 755100                    STA     PREVCHR,,AUTO

     1595     1718    4                 END;

     1596     1719        /**/
     1597     1720    3              N=XLATETBL(CHR);

   1720  1 000615   000001 235005 0                  LDA     XLATETBL,AL
         1 000616   200031 755100                    STA     N,,AUTO

     1598     1721    4              IF NB.ALPHA THEN DO;         /* Alphabetic                         */

   1721  1 000617   200031 236100                    LDQ     N,,AUTO
         1 000620   000200 316007                    CANQ    128,DL
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:299  
         1 000621   000643 600000 1                  TZE     NOSHIFT

     1599     1722    4                 IF NB.UC=SHFTBIT.B THEN

   1722  1 000622   000100 066500                    CMPB    filb='0'B
         1 000623   200031 600001                    BDSC    N,,AUTO                  by=3,bit=0,n=1
         1 000624   200036 700001                    BDSC    SHFT,,AUTO               by=3,bit=8,n=1
         1 000625   000643 600000 1                  TZE     NOSHIFT

     1600     1723    4                    GOTO NOSHIFT;
     1601     1724    4                 IF GBITS<6 THEN GOTO FULL; /* NO ROOM FOR SHIFT CHAR            */

   1724  1 000626   200032 235100                    LDA     GBITS,,AUTO
         1 000627   000006 115007                    CMPA    6,DL
         1 000630   000660 604000 1                  TMI     FULL

     1602     1725    4                 T$->UBIN6=CODSHIFT;       /* MOVE IN SHIFT CHAR                 */

   1725  1 000631   200033 470500                    LDP0    T$,,AUTO
         1 000632   003100 061400                    CSR     bolr='003'O
         1 000633   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         1 000634   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6

     1603     1726    4                 T$=PINCRB(T$,6);

   1726  1 000635   000006 220003                    LDX0    6,DU
         1 000636   000000 503510                    ABD     0,X0,PR0
         1 000637   200033 450500                    STP0    T$,,AUTO

     1604     1727    4                 GBITS=GBITS-6;

   1727  1 000640   000006 336007                    LCQ     6,DL
         1 000641   200032 056100                    ASQ     GBITS,,AUTO

     1605     1728    4                 SHFT=SHFT+1;              /* Toggle shift                       */

   1728  1 000642   200036 054100                    AOS     SHFT,,AUTO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:300  

     1606     1729    4                 END;

     1607     1730                                                /*                                    */
     1608     1731    3   NOSHIFT:   PCHR=CHR;

   1731  1 000643   200025 235100       NOSHIFT      LDA     CHR,,AUTO
         1 000644   200026 755100                    STA     PCHR,,AUTO

     1609     1732    3              CALL PUT ALTRET(FULL);       /* Put char in buffer                 */

   1732  1 000645   001022 701000 1                  TSX1    PUT
         1 000646   000660 702000 1                  TSX2    FULL

     1610     1733    3   PUTOK:     CXS=CXS+1;

   1733  1 000647   200034 054100       PUTOK        AOS     CX,,AUTO

     1611     1734    3              CNT=CNT-1;

   1734  1 000650   000001 336007                    LCQ     1,DL
         1 000651   200035 056100                    ASQ     CNT,,AUTO

     1612     1735    3              END;

   1735  1 000652   000512 605400 1                  TPNZ    s:1691

     1613     1736        /**/
     1614     1737    2           IF PREV#~=0 THEN

   1737  1 000653   200030 235100                    LDA     PREV#,,AUTO
         1 000654   000657 600000 1                  TZE     s:1740

     1615     1738    2           CALL DUMPPREV;

   1738  1 000655   001066 701000 1                  TSX1    DUMPPREV
         1 000656   000000 011000                    NOP     0
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:301  

     1616     1739        /**/
     1617     1740    3           DO WHILE('0'B);

   1740  1 000657   000664 710000 1                  TRA     s:1743

     1618     1741    3   FULL:      F$DCB.CX=F$DCB.CX-1;

   1741  1 000660   200021 470500       FULL         LDP0    JDCB$,,AUTO
         1 000661   000104 236100                    LDQ     68,,PR0
         1 000662   000777 036007                    ADLQ    511,DL
         1 000663   000104 552104                    STBQ    68,'04'O,PR0

     1619     1742    3           END;  /* WHILE */

     1620     1743    2           N=MOD(GBITS,9);

   1743  1 000664   200032 236100                    LDQ     GBITS,,AUTO
         1 000665   000011 506007                    DIV     9,DL
         1 000666   200031 755100                    STA     N,,AUTO

     1621     1744    2           IF N = 3                        /* ZERO TO NEXT BYTE BOUNDARY         */

   1744  1 000667   000003 115007                    CMPA    3,DL
         1 000670   000676 601000 1                  TNZ     s:1748

     1622     1745    2           THEN
     1623     1746    2              T$ -> UBIN3 = 0;

   1746  1 000671   200033 470500                    LDP0    T$,,AUTO
         1 000672   003100 061400                    CSR     bolr='003'O
         1 000673   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000674   000000 000003                    BDSC    0,,PR0                   by=0,bit=0,n=3
         1 000675   000704 710000 1                  TRA     s:1751

     1624     1747    2           ELSE
     1625     1748    2              IF N = 6
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:302  

   1748  1 000676   000006 115007                    CMPA    6,DL
         1 000677   000704 601000 1                  TNZ     s:1751

     1626     1749    2              THEN
     1627     1750    2                 T$ -> UBIN6 = 0;

   1750  1 000700   200033 470500                    LDP0    T$,,AUTO
         1 000701   003100 061400                    CSR     bolr='003'O
         1 000702   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 000703   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6

     1628     1751    2           F$DCB.UBYTES=CNT;

   1751  1 000704   200035 236100                    LDQ     CNT,,AUTO
         1 000705   200021 470500                    LDP0    JDCB$,,AUTO
         1 000706   000076 756100                    STQ     62,,PR0

     1629     1752    2           F$DCB.UB$=PINCRC(F$DCB.UB$,CX);

   1752  1 000707   000075 471500                    LDP1    61,,PR0
         1 000710   200034 236100                    LDQ     CX,,AUTO
         1 000711   000011 402007                    MPY     9,DL
         1 000712   100000 503506                    ABD     0,QL,PR1
         1 000713   000075 451500                    STP1    61,,PR0

     1630     1753    2           GBYTES=GBYTES-(GBITS/9);        /* # BYTES USED                       */

   1753  1 000714   200032 236100                    LDQ     GBITS,,AUTO
         1 000715   000011 506007                    DIV     9,DL
         1 000716   200046 756100                    STQ     MOVE+1,,AUTO
         1 000717   200004 473500                    LDP3    @GBYTES,,AUTO
         1 000720   300000 236100                    LDQ     0,,PR3
         1 000721   200046 136100                    SBLQ    MOVE+1,,AUTO
         1 000722   300000 756100                    STQ     0,,PR3

     1631     1754    2           F$DCB.GDISP=GBYTES;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:303  

   1754  1 000723   000101 756100                    STQ     65,,PR0

     1632     1755    2           RETURN;

   1755  1 000724   200024 221300                    LDX1  ! WORD_NUM+1,,AUTO
         1 000725   000001 702211                    TSX2  ! 1,X1

     1633     1756        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:304  
     1634     1757    2   GETCHAR: PROC;

   1757  1 000726   200042 741300       GETCHAR      STX1  ! TEMPCHAR+2,,AUTO

     1635     1758    3          DCL CHAR_TEMP CHAR(1);
     1636     1759        /* */
     1637     1760    3          IF F$DCB.CX >= 4 THEN

   1760  1 000727   200021 470500                    LDP0    JDCB$,,AUTO
         1 000730   000104 236100                    LDQ     68,,PR0
         1 000731   000777 376007                    ANQ     511,DL
         1 000732   000004 116007                    CMPQ    4,DL
         1 000733   000736 602000 1                  TNC     s:1763

     1638     1761    3             CALL GET_WORD;

   1761  1 000734   000754 701000 1                  TSX1    GET_WORD
         1 000735   000000 011000                    NOP     0

     1639     1762
     1640     1763    3          CALL INSERT(CHAR_TEMP, 0, 1,

   1763  1 000736   200021 470500                    LDP0    JDCB$,,AUTO
         1 000737   000104 236100                    LDQ     68,,PR0
         1 000740   000777 376007                    ANQ     511,DL
         1 000741   040100 100506                    MLR     fill='040'O
         1 000742   000105 000001                    ADSC9   69,Q,PR0                 cn=0,n=1
         1 000743   200043 000001                    ADSC9   CHAR_TEMP,,AUTO          cn=0,n=1

     1641     1764    3             SUBSTR(F$DCB.CWORD, F$DCB.CX, 1));
     1642     1765    3          CHR=ASCBIN(CHAR_TEMP);

   1765  1 000744   200043 236100                    LDQ     CHAR_TEMP,,AUTO
         1 000745   000033 772000                    QRL     27
         1 000746   200025 756100                    STQ     CHR,,AUTO

     1643     1766    3          F$DCB.CX=F$DCB.CX+1;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:305  

   1766  1 000747   000104 236100                    LDQ     68,,PR0
         1 000750   000001 036007                    ADLQ    1,DL
         1 000751   000104 552104                    STBQ    68,'04'O,PR0

     1644     1767
     1645     1768    3          RETURN;

   1768  1 000752   200042 221300                    LDX1  ! TEMPCHAR+2,,AUTO
         1 000753   000001 702211                    TSX2  ! 1,X1

     1646     1769    3          END GETCHAR;
     1647     1770    2   GET_WORD: PROC;

   1770  1 000754   200044 741300       GET_WORD     STX1  ! CHAR_TEMP+1,,AUTO

     1648     1771    3          DCL MOVE UBIN;
     1649     1772        /* */
     1650     1773    3          IF CNT < 4 THEN

   1773  1 000755   200035 235100                    LDA     CNT,,AUTO
         1 000756   000004 115007                    CMPA    4,DL
         1 000757   000762 605000 1                  TPL     s:1776

     1651     1774    3             MOVE=CNT;

   1774  1 000760   200045 755100                    STA     MOVE,,AUTO
         1 000761   000764 710000 1                  TRA     s:1778

     1652     1775    3          ELSE
     1653     1776    3             MOVE=4;

   1776  1 000762   000004 236007                    LDQ     4,DL
         1 000763   200045 756100                    STQ     MOVE,,AUTO

     1654     1777
     1655     1778    3          CALL INSERT(F$DCB.CWORD, 0, 4,
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:306  

   1778  1 000764   200023 236100                    LDQ     WORD_NUM,,AUTO
         1 000765   000002 736000                    QLS     2
         1 000766   200037 470500                    LDP0    UB$,,AUTO
         1 000767   200045 720100                    LXL0    MOVE,,AUTO
         1 000770   200021 471500                    LDP1    JDCB$,,AUTO
         1 000771   040100 100546                    MLR     fill='040'O
         1 000772   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0
         1 000773   100105 000004                    ADSC9   69,,PR1                  cn=0,n=4

     1656     1779    3             SUBSTR(UB$->BASED_WORD(WORD_NUM), 0, MOVE));
     1657     1780    3          CALL FMD$ENCRYPT(CWORD$, 1, ISEED, F$DCB.CSEED,

   1780  1 000774   200014 633500                    EPPR3   TEMP_FAK,,AUTO
         1 000775   200052 453500                    STP3    MOVE+5,,AUTO
         1 000776   200021 236100                    LDQ     JDCB$,,AUTO
         1 000777   000072 036003                    ADLQ    58,DU
         1 001000   200051 756100                    STQ     MOVE+4,,AUTO
         1 001001   200016 634500                    EPPR4   ISEED,,AUTO
         1 001002   200050 454500                    STP4    MOVE+3,,AUTO
         1 001003   000001 236000 2                  LDQ     1
         1 001004   200047 756100                    STQ     MOVE+2,,AUTO
         1 001005   200013 635500                    EPPR5   CWORD$,,AUTO
         1 001006   200046 455500                    STP5    MOVE+1,,AUTO
         1 001007   200046 630500                    EPPR0   MOVE+1,,AUTO
         1 001010   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001011   000000 701000 xent               TSX1    FMD$ENCRYPT
         1 001012   000000 011000                    NOP     0

     1658     1781    3             TEMP_FAK);
     1659     1782    3          TEMP_FAK=0;

   1782  1 001013   200014 450100                    STZ     TEMP_FAK,,AUTO

     1660     1783    3          WORD_NUM=WORD_NUM+1;

   1783  1 001014   200023 054100                    AOS     WORD_NUM,,AUTO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:307  

     1661     1784    3          F$DCB.CX=0;

   1784  1 001015   200021 470500                    LDP0    JDCB$,,AUTO
         1 001016   000000 236003                    LDQ     0,DU
         1 001017   000104 552104                    STBQ    68,'04'O,PR0

     1662     1785
     1663     1786    3          RETURN;

   1786  1 001020   200044 221300                    LDX1  ! CHAR_TEMP+1,,AUTO
         1 001021   000001 702211                    TSX2  ! 1,X1

     1664     1787    3          END GET_WORD;
     1665     1788        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:308  
     1666     1789        /* LEVEL 3 ROUTINE TO MOVE BITS INTO MONITOR BUFFER */
     1667     1790    2   PUT:    PROC ALTRET;

   1790  1 001022   200044 741300       PUT          STX1  ! CHAR_TEMP+1,,AUTO

     1668     1791    3   DCL 1 SKIP6 BASED UNAL,
     1669     1792    3         2 * BIT(6),
     1670     1793    3         2 UBIN12 UBIN(12) UNAL;
     1671     1794        /**/
     1672     1795    4           IF N=0 THEN DO;                 /* UNKNOWN CHARACTER                  */

   1795  1 001023   200031 235100                    LDA     N,,AUTO
         1 001024   001047 601000 1                  TNZ     s:1804

     1673     1796    4              IF GBITS<18 THEN ALTRETURN;  /* NO ROOM                            */

   1796  1 001025   200032 236100                    LDQ     GBITS,,AUTO
         1 001026   000022 116007                    CMPQ    18,DL
         1 001027   001031 605000 1                  TPL     s:1797

   1796  1 001030   000000 702211                    TSX2  ! 0,X1

     1674     1797    4              T$->UBIN6=CODUNK;

   1797  1 001031   200033 470500                    LDP0    T$,,AUTO
         1 001032   003100 061400                    CSR     bolr='003'O
         1 001033   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         1 001034   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6

     1675     1798    4              T$->SKIP6.UBIN12=PCHR;

   1798  1 001035   003100 061500                    CSR     bolr='003'O
         1 001036   200026 000044                    BDSC    PCHR,,AUTO               by=0,bit=0,n=36
         1 001037   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12

     1676     1799    4              T$=PINCRB(T$,18);

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:309  
   1799  1 001040   200033 236100                    LDQ     T$,,AUTO
         1 001041   400000 036007                    ADLQ    -131072,DL
         1 001042   200033 756100                    STQ     T$,,AUTO

     1677     1800    4              GBITS=GBITS-18;

   1800  1 001043   000022 336007                    LCQ     18,DL
         1 001044   200032 056100                    ASQ     GBITS,,AUTO

     1678     1801    4              RETURN;

   1801  1 001045   200044 221300                    LDX1  ! CHAR_TEMP+1,,AUTO
         1 001046   000001 702211                    TSX2  ! 1,X1

     1679     1802    4              END;
     1680     1803                                                /*                                    */
     1681     1804    3           IF GBITS<6 THEN ALTRETURN;

   1804  1 001047   200032 236100                    LDQ     GBITS,,AUTO
         1 001050   000006 116007                    CMPQ    6,DL
         1 001051   001053 605000 1                  TPL     s:1805

   1804  1 001052   000000 702211                    TSX2  ! 0,X1

     1682     1805    3           T$->UBIN6=N;

   1805  1 001053   200033 470500                    LDP0    T$,,AUTO
         1 001054   003100 061500                    CSR     bolr='003'O
         1 001055   200031 000044                    BDSC    N,,AUTO                  by=0,bit=0,n=36
         1 001056   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6

     1683     1806    3           T$=PINCRB(T$,6);

   1806  1 001057   000006 220003                    LDX0    6,DU
         1 001060   000000 503510                    ABD     0,X0,PR0
         1 001061   200033 450500                    STP0    T$,,AUTO

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:310  
     1684     1807    3           GBITS=GBITS-6;

   1807  1 001062   000006 336007                    LCQ     6,DL
         1 001063   200032 056100                    ASQ     GBITS,,AUTO

     1685     1808    3           RETURN;

   1808  1 001064   200044 221300                    LDX1  ! CHAR_TEMP+1,,AUTO
         1 001065   000001 702211                    TSX2  ! 1,X1

     1686     1809    3   END PUT;
     1687     1810        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:311  
     1688     1811        /* LEVEL 3 ROUTINE TO DUMP DUP CHARS */
     1689     1812    2   DUMPPREV: PROC ALTRET;

   1812  1 001066   200042 741300       DUMPPREV     STX1  ! TEMPCHAR+2,,AUTO

     1690     1813    4           IF PREV#>=3 THEN DO;            /* ENUF FOR DUP CODE                  */

   1813  1 001067   200030 235100                    LDA     PREV#,,AUTO
         1 001070   000003 115007                    CMPA    3,DL
         1 001071   001125 604000 1                  TMI     s:1825

     1691     1814    5              IF GBITS<12 THEN DO;         /* NOT ENUF ROOM                      */

   1814  1 001072   200032 236100                    LDQ     GBITS,,AUTO
         1 001073   000014 116007                    CMPQ    12,DL
         1 001074   001105 605000 1                  TPL     s:1819

     1692     1815    5   BACKUP:       CX=CX-PREV#;              /* BACKUP TO GET THESE CHARS AGAIN    */

   1815  1 001075   200034 236100       BACKUP       LDQ     CX,,AUTO
         1 001076   200030 136100                    SBLQ    PREV#,,AUTO
         1 001077   200034 756100                    STQ     CX,,AUTO

     1693     1816    5                 CNT=CNT+PREV#;

   1816  1 001100   200035 236100                    LDQ     CNT,,AUTO
         1 001101   200030 036100                    ADLQ    PREV#,,AUTO
         1 001102   200035 756100                    STQ     CNT,,AUTO

     1694     1817    5                 ALTRETURN;

   1817  1 001103   200042 221300                    LDX1  ! TEMPCHAR+2,,AUTO
         1 001104   000000 702211                    TSX2  ! 0,X1

     1695     1818    5                 END;
     1696     1819    4              T$->UBIN6=CODDUP;            /* MOVE IN DUP CODE                   */

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:312  
   1819  1 001105   200033 470500                    LDP0    T$,,AUTO
         1 001106   003100 061400                    CSR     bolr='003'O
         1 001107   000004 000044 xsym               BDSC    B_VECTNIL+4              by=0,bit=0,n=36
         1 001110   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6

     1697     1820    4              T$->SKIP6.UBIN6=PREV#-3;     /* COUNT-3                            */

   1820  1 001111   200030 236100                    LDQ     PREV#,,AUTO
         1 001112   000003 136007                    SBLQ    3,DL
         1 001113   200046 756100                    STQ     MOVE+1,,AUTO
         1 001114   003100 061500                    CSR     bolr='003'O
         1 001115   200046 000044                    BDSC    MOVE+1,,AUTO             by=0,bit=0,n=36
         1 001116   000000 060006                    BDSC    0,,PR0                   by=0,bit=6,n=6

     1698     1821    4              T$=PINCRB(T$,12);

   1821  1 001117   000014 220003                    LDX0    12,DU
         1 001120   000000 503510                    ABD     0,X0,PR0
         1 001121   200033 450500                    STP0    T$,,AUTO

     1699     1822    4              GBITS=GBITS-12;

   1822  1 001122   000014 336007                    LCQ     12,DL
         1 001123   200032 056100                    ASQ     GBITS,,AUTO

     1700     1823    4              END;

   1823  1 001124   001141 710000 1                  TRA     s:1832

     1701     1824    4           ELSE DO;                   /* NOT ENOUGH FOR DUP - PUT THE CHARS IN   */

     1702     1825    4              N=XLATETBL(PREVCHR);

   1825  1 001125   200027 720100                    LXL0    PREVCHR,,AUTO
         1 001126   000001 235010 0                  LDA     XLATETBL,X0
         1 001127   200031 755100                    STA     N,,AUTO

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:313  
     1703     1826    4              PCHR=PREVCHR;

   1826  1 001130   200027 236100                    LDQ     PREVCHR,,AUTO
         1 001131   200026 756100                    STQ     PCHR,,AUTO

     1704     1827    5              DO WHILE(PREV#>0);

   1827  1 001132   200030 235100                    LDA     PREV#,,AUTO
         1 001133   001141 604400 1                  TMOZ    s:1832

     1705     1828    5                 CALL PUT ALTRET(BACKUP);

   1828  1 001134   001022 701000 1                  TSX1    PUT
         1 001135   001075 702000 1                  TSX2    BACKUP

     1706     1829    5                 PREV#=PREV#-1;

   1829  1 001136   000001 336007                    LCQ     1,DL
         1 001137   200030 056100                    ASQ     PREV#,,AUTO

     1707     1830    5                 END;

   1830  1 001140   001134 605400 1                  TPNZ    s:1828

     1708     1831    4              END;

     1709     1832    3           PREV#=0;

   1832  1 001141   200030 450100                    STZ     PREV#,,AUTO

     1710     1833    3           RETURN;

   1833  1 001142   200042 221300                    LDX1  ! TEMPCHAR+2,,AUTO
         1 001143   000001 702211                    TSX2  ! 1,X1

     1711     1834    3   END DUMPPREV;
     1712     1835    2   END COMPRESS;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:314  
     1713     1836        %EJECT;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:315  
     1714     1837        /* Level 2 routine to compress records */
     1715     1838        /************************************************************/
     1716     1839        /*                                                          */
     1717     1840        /*  Great care must be taken when modifying the code        */
     1718     1841        /*  for compression/decompression.  It has been carefully   */
     1719     1842        /*  diddled (that's a technical term) to make sure that CSRs*/
     1720     1843        /*  rather than CSLs are always used when referencing an    */
     1721     1844        /*  FPOOL because of the DPS90 prepaging problem.  Since    */
     1722     1845        /*  none of this code can reference the first two words of  */
     1723     1846        /*  a block (control words are there) CSRs are immune from  */
     1724     1847        /*  the prepaging error.  This is somewhat anti-performant  */
     1725     1848        /*  as CSLs are considerably faster on some models, but we  */
     1726     1849        /*  have no real alternative.                               */
     1727     1850        /*                                                          */
     1728     1851        /************************************************************/
     1729     1852    1   DECOMP: PROC ALTRET;

   1852  1 001144   200024 741300       DECOMP       STX1  ! WORD_NUM+1,,AUTO

     1730     1853        /* CONSTANT STORAGE */
     1731     1854    2   DCL 1 CHRTBL(0:127) UBIN CONSTANT INIT(
     1732     1855    2         0,0,0,32,33,34,35,36,37,39,
     1733     1856    2         40,41,42,43,44,45,46,47,48,49,
     1734     1857    2         50,51,52,53,54,55,56,57,58,59,
     1735     1858    2         60,61,62,63,64,65,66,67,68,69,
     1736     1859    2         70,71,72,73,74,75,76,77,78,79,
     1737     1860    2         80,81,82,83,84,85,86,87,88,89,
     1738     1861    2         90,95,124,126,
     1739     1862    2         0,0,0,32,33,34,35,36,37,39,
     1740     1863    2         40,41,42,43,44,45,46,47,48,49,
     1741     1864    2         50,51,52,53,54,55,56,57,58,59,
     1742     1865    2         60,61,62,63,64,97,98,99,100,101,
     1743     1866    2         102,103,104,105,106,107,108,109,110,111,
     1744     1867    2         112,113,114,115,116,117,118,119,120,121,
     1745     1868    2         122,95,124,126);
     1746     1869        /* LOCAL AUTOMATIC STORAGE */
     1747     1870    2   DCL GBITS SBIN;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:316  
     1748     1871    2   DCL T$ PTR;
     1749     1872    2   DCL PREVCHR UBIN;
     1750     1873    2   DCL I UBIN;
     1751     1874    2   DCL N UBIN;
     1752     1875    2   DCL 1 NB REDEF N,
     1753     1876    2         2 * BIT(30),
     1754     1877    2         2 LB6 BIT(6);
     1755     1878    2   DCL CNT SBIN;
     1756     1879    2   DCL CX UBIN;
     1757     1880    2   DCL CXS REDEF CX SBIN;
     1758     1881    2   DCL 1 MICROPS DALIGNED,
     1759     1882    2         2 C CHAR(1),
     1760     1883    2         2 FILL UBIN(9) UNAL,
     1761     1884    2         2 * BIT(36);
     1762     1885    2   DCL SHFT SBIN;
     1763     1886    2   DCL 1 SHFTBIT REDEF SHFT,
     1764     1887    2         2 * BIT(35),
     1765     1888    2         2 B BIT(1);
     1766     1889    2   DCL UB$ PTR;
     1767     1890        /* BASED */
     1768     1891    2   DCL CHAR1 CHAR(1) BASED;
     1769     1892    2   DCL 1 SKIP6 BASED UNAL,
     1770     1893    2         2 * BIT(6),
     1771     1894    2         2 UBIN6 UBIN(6) UNAL;
     1772     1895    2   DCL 1 SKIP9 BASED UNAL,
     1773     1896    2         2 * BIT(9),
     1774     1897    2         2 UBIN9 UBIN(9) UNAL;
     1775     1898    2   DCL UBIN6 UBIN(6) UNAL BASED;
     1776     1899    2   DCL UBIN9 UBIN(9) UNAL BASED;
     1777     1900    2   DCL CHARS(0:0) CHAR(1) BASED;
     1778     1901        /* CONSTANT STORAGE */
     1779     1902    2   DCL 1 INITMICROPS CONSTANT DALIGNED,
     1780     1903    2         2 * BIT(9) INIT(%LTE1),
     1781     1904    2         2 * CHAR(1),
     1782     1905    2         2 * BIT(9) INIT(%INSM16),
     1783     1906    2         2 * BIT(9) INIT(%INSM16),
     1784     1907    2         2 * BIT(9) INIT(%INSM16),
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:317  
     1785     1908    2         2 * BIT(9) INIT(%INSM16);
     1786     1909        /**/
     1787     1910    2           SHFT=1;                    /* Record segment starts in upper case     */

   1910  1 001145   000001 235007                    LDA     1,DL
         1 001146   200036 755100                    STA     SHFT,,AUTO

     1788     1911    2           GBITS=GBYTES*9;                 /* SIZE OF MON BUFFER AREA IN BITS    */

   1911  1 001147   200004 470500                    LDP0    @GBYTES,,AUTO
         1 001150   000000 236100                    LDQ     0,,PR0
         1 001151   000011 402007                    MPY     9,DL
         1 001152   200025 756100                    STQ     GBITS,,AUTO

     1789     1912    2           T$=G$;

   1912  1 001153   200003 471500                    LDP1    @G$,,AUTO
         1 001154   100000 236100                    LDQ     0,,PR1
         1 001155   200026 756100                    STQ     T$,,AUTO

     1790     1913    2           PREVCHR=32;                     /* PREVIOUS CHAR IS BLANK             */

   1913  1 001156   000040 235007                    LDA     32,DL
         1 001157   200027 755100                    STA     PREVCHR,,AUTO

     1791     1914    2           CX=0;                           /* INDEX INTO USER BUFFER             */

   1914  1 001160   200033 450100                    STZ     CX,,AUTO

     1792     1915    2           CNT=F$DCB.UBYTES;               /* # BYTES REMAINING                  */

   1915  1 001161   200021 473500                    LDP3    JDCB$,,AUTO
         1 001162   300076 235100                    LDA     62,,PR3
         1 001163   200032 755100                    STA     CNT,,AUTO

     1793     1916    2           UB$=F$DCB.UB$;                  /* User buffer pointer                */

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:318  
   1916  1 001164   300075 236100                    LDQ     61,,PR3
         1 001165   200037 756100                    STQ     UB$,,AUTO

     1794     1917    2           IF FAK = 1 AND FPT$READ_V.STRPVFC AND F$DCB.DVBYTE.VFC THEN

   1917  1 001166   200007 474500                    LDP4    @FAK,,AUTO
         1 001167   400000 235100                    LDA     0,,PR4
         1 001170   000001 115007                    CMPA    1,DL
         1 001171   001204 601000 1                  TNZ     s:1920
         1 001172   000000 475400 xsym               LDP5    B$PS0$
         1 001173   500003 236100                    LDQ     3,,PR5
         1 001174   000400 316003                    CANQ    256,DU
         1 001175   001204 600000 1                  TZE     s:1920
         1 001176   300003 236100                    LDQ     3,,PR3
         1 001177   100000 316003                    CANQ    32768,DU
         1 001200   001204 600000 1                  TZE     s:1920

     1795     1918    2              TEMP_FAK=1;

   1918  1 001201   000001 235007                    LDA     1,DL
         1 001202   200014 755100                    STA     TEMP_FAK,,AUTO
         1 001203   001205 710000 1                  TRA     s:1921

     1796     1919    2           ELSE
     1797     1920    2              TEMP_FAK=0;

   1920  1 001204   200014 450100                    STZ     TEMP_FAK,,AUTO

     1798     1921    2           IF ISEED THEN

   1921  1 001205   200016 235100                    LDA     ISEED,,AUTO
         1 001206   001211 600000 1                  TZE     s:1925

     1799     1922    3              DO;   /* DECRYPT LATER */

     1800     1923    3              F$DCB.DECRYPT='1'B;

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:319  
   1923  1 001207   001000 236007                    LDQ     512,DL
         1 001210   300102 256100                    ORSQ    66,,PR3

     1801     1924    3              END;  /* DECRYPT LATER */

     1802     1925    3           DO WHILE(CNT>0);

   1925  1 001211   200032 236100                    LDQ     CNT,,AUTO
         1 001212   001444 604400 1                  TMOZ    s:2003

     1803     1926    4              IF GBITS<6 THEN DO;          /* At end                             */

   1926  1 001213   200025 235100                    LDA     GBITS,,AUTO
         1 001214   000006 115007                    CMPA    6,DL
         1 001215   001217 605000 1                  TPL     s:1929

     1804     1927    4                 GOTO DONE;

   1927  1 001216   001447 710000 1                  TRA     DONE

     1805     1928    4                 END;
     1806     1929    3              N=T$->UBIN6;

   1929  1 001217   200026 470500                    LDP0    T$,,AUTO
         1 001220   003100 061500                    CSR     bolr='003'O
         1 001221   000000 000006                    BDSC    0,,PR0                   by=0,bit=0,n=6
         1 001222   200031 000044                    BDSC    N,,AUTO                  by=0,bit=0,n=36

     1807     1930    4              DO CASE(N);

   1930  1 001223   200031 236100                    LDQ     N,,AUTO
         1 001224   000003 116007                    CMPQ    3,DL
         1 001225   001227 602006 1                  TNC     s:1930+4,QL
         1 001226   001372 710000 1                  TRA     s:1983
         1 001227   001330 710000 1                  TRA     s:1965
         1 001230   001321 710000 1                  TRA     s:1960
         1 001231   001232 710000 1                  TRA     s:1932
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:320  

     1808     1931    4               CASE(2);                    /* DUPLICATE CHARS                    */

     1809     1932    4                 IF GBITS<12 THEN GOTO ERR; /* COUNT MUST BE PRESENT             */

   1932  1 001232   000014 115007                    CMPA    12,DL
         1 001233   001466 604000 1                  TMI     ERR

     1810     1933    4                 N=T$->SKIP6.UBIN6;        /* Get the count                      */

   1933  1 001234   003100 061500                    CSR     bolr='003'O
         1 001235   000000 060006                    BDSC    0,,PR0                   by=0,bit=6,n=6
         1 001236   200031 000044                    BDSC    N,,AUTO                  by=0,bit=0,n=36

     1811     1934    4                 N=N+3;

   1934  1 001237   200031 236100                    LDQ     N,,AUTO
         1 001240   000003 036007                    ADLQ    3,DL
         1 001241   200031 756100                    STQ     N,,AUTO

     1812     1935    4                 T$=PINCRB(T$,12);

   1935  1 001242   000014 220003                    LDX0    12,DU
         1 001243   000000 503510                    ABD     0,X0,PR0
         1 001244   200026 450500                    STP0    T$,,AUTO

     1813     1936    4                 GBITS=GBITS-12;

   1936  1 001245   000014 336007                    LCQ     12,DL
         1 001246   200025 056100                    ASQ     GBITS,,AUTO

     1814     1937    4                 IF N>CNT

   1937  1 001247   200031 236100                    LDQ     N,,AUTO
         1 001250   001253 604000 1                  TMI     s:1943
         1 001251   200032 116100                    CMPQ    CNT,,AUTO
         1 001252   001261 604400 1                  TMOZ    s:1947
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:321  

     1815     1938    4                 THEN  /* NOT ENOUGH ROOM IN USER BUFFER FOR ENTIRE REPEAT ITEM.
     1816     1939                              MUST SET N TO THE SMALLER AMOUNT, AND BACK UP T$ AND
     1817     1940                              GBITS SO THAT THE CODE AT THE END WILL REALIZE THAT
     1818     1941                              NOT ALL OF THE MON BUFFER INFO WAS PROCESSED. */
     1819     1942    5                 DO;

     1820     1943    5                    N=CNT;

   1943  1 001253   200032 235100                    LDA     CNT,,AUTO
         1 001254   200031 755100                    STA     N,,AUTO

     1821     1944    5                    T$=PINCRB(T$,-12);     /* BACK UP OVER COUNT AND DUP CODE    */

   1944  1 001255   000000 523510                    SBD     0,X0,PR0
         1 001256   200026 450500                    STP0    T$,,AUTO

     1822     1945    5                    GBITS=GBITS+12;

   1945  1 001257   000014 236007                    LDQ     12,DL
         1 001260   200025 056100                    ASQ     GBITS,,AUTO

     1823     1946    5                    END;

     1824     1947    4                 IF TEMP_FAK = 1 THEN

   1947  1 001261   200014 235100                    LDA     TEMP_FAK,,AUTO
         1 001262   000001 115007                    CMPA    1,DL
         1 001263   001275 601000 1                  TNZ     s:1953

     1825     1948    5                    DO;   /* STRIP VFC */

     1826     1949    5                    F$DCB.VFCCHAR=BINASC(PREVCHR);

   1949  1 001264   200027 236100                    LDQ     PREVCHR,,AUTO
         1 001265   000033 736000                    QLS     27
         1 001266   000002 276000 2                  ORQ     2
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:322  
         1 001267   200021 471500                    LDP1    JDCB$,,AUTO
         1 001270   100056 552140                    STBQ    46,'40'O,PR1

     1827     1950    5                    N=N-1;

   1950  1 001271   200031 236100                    LDQ     N,,AUTO
         1 001272   000001 136007                    SBLQ    1,DL
         1 001273   200031 756100                    STQ     N,,AUTO

     1828     1951    5                    TEMP_FAK=0;

   1951  1 001274   200014 450100                    STZ     TEMP_FAK,,AUTO

     1829     1952    5                    END;  /* STRIP VFC */

     1830     1953    4                 MICROPS=INITMICROPS;      /* MICRO OP CODES FOR EDITSTR         */

   1953  1 001275   000100 100400                    MLR     fill='000'O
         1 001276   001202 000006 0                  ADSC9   INITMICROPS              cn=0,n=6
         1 001277   200034 000006                    ADSC9   MICROPS,,AUTO            cn=0,n=6

     1831     1954    4                 MICROPS.FILL=PREVCHR;     /* CHAR TO FILL WITH                  */

   1954  1 001300   200027 236100                    LDQ     PREVCHR,,AUTO
         1 001301   000022 736000                    QLS     18
         1 001302   200034 552120                    STBQ    MICROPS,'20'O,AUTO

     1832     1955    4                 CALL EDITSTR(UB$->CHAR1,CX,N,MICROPS,' ');

   1955  1 001303   200037 471500                    LDP1    UB$,,AUTO
         1 001304   200031 721100                    LXL1    N,,AUTO
         1 001305   200033 235100                    LDA     CX,,AUTO
         1 001306   145100 020400                    MVE
         1 001307   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 001310   200034 000006                    ADSC9   MICROPS,,AUTO            cn=0,n=6
         1 001311   100000 000011                    ADSC9   0,A,PR1                  cn=0,n=*X1

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:323  
     1833     1956    4                 CNT=CNT-N;

   1956  1 001312   200032 236100                    LDQ     CNT,,AUTO
         1 001313   200031 136100                    SBLQ    N,,AUTO
         1 001314   200032 756100                    STQ     CNT,,AUTO

     1834     1957    4                 CXS=CXS+N;

   1957  1 001315   200033 236100                    LDQ     CX,,AUTO
         1 001316   200031 036100                    ADLQ    N,,AUTO
         1 001317   200033 756100                    STQ     CX,,AUTO

     1835     1958    4                 GOTO ENDLOOP;

   1958  1 001320   001442 710000 1                  TRA     ENDLOOP

     1836     1959    4               CASE(1);                    /* SHIFT                              */

     1837     1960    4                 SHFT=SHFT+1;              /* TOGGLE SHIFT                       */

   1960  1 001321   200036 054100                    AOS     SHFT,,AUTO

     1838     1961    4                 T$=PINCRB(T$,6);

   1961  1 001322   000006 220003                    LDX0    6,DU
         1 001323   000000 503510                    ABD     0,X0,PR0
         1 001324   200026 450500                    STP0    T$,,AUTO

     1839     1962    4                 GBITS=GBITS-6;

   1962  1 001325   000006 336007                    LCQ     6,DL
         1 001326   200025 056100                    ASQ     GBITS,,AUTO

     1840     1963    4                 GOTO ENDLOOP;

   1963  1 001327   001442 710000 1                  TRA     ENDLOOP

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:324  
     1841     1964    4               CASE(0);                    /* UNKNOWN                            */

     1842     1965    5                 IF GBITS<18 THEN DO;

   1965  1 001330   000022 115007                    CMPA    18,DL
         1 001331   001333 605000 1                  TPL     s:1968

     1843     1966    5                    GOTO DONE;

   1966  1 001332   001447 710000 1                  TRA     DONE

     1844     1967    5                    END;
     1845     1968    4                 I=T$->SKIP9.UBIN9;

   1968  1 001333   003100 061500                    CSR     bolr='003'O
         1 001334   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         1 001335   200030 000044                    BDSC    I,,AUTO                  by=0,bit=0,n=36

     1846     1969    4                 ADDR(MICROPS.C)->UBIN9=I;

   1969  1 001336   200030 236100                    LDQ     I,,AUTO
         1 001337   000033 736000                    QLS     27
         1 001340   200034 552140                    STBQ    MICROPS,'40'O,AUTO

     1847     1970    4                 IF TEMP_FAK = 1 THEN

   1970  1 001341   200014 236100                    LDQ     TEMP_FAK,,AUTO
         1 001342   000001 116007                    CMPQ    1,DL
         1 001343   001354 601000 1                  TNZ     s:1978

     1848     1971    5                    DO;

     1849     1972    5                    F$DCB.VFCCHAR=MICROPS.C;

   1972  1 001344   200021 471500                    LDP1    JDCB$,,AUTO
         1 001345   200034 236100                    LDQ     MICROPS,,AUTO
         1 001346   100056 552140                    STBQ    46,'40'O,PR1
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:325  

     1850     1973    5                    CXS=CXS-1;

   1973  1 001347   000001 336007                    LCQ     1,DL
         1 001350   200033 056100                    ASQ     CX,,AUTO

     1851     1974    5                    CNT=CNT+1;

   1974  1 001351   200032 054100                    AOS     CNT,,AUTO

     1852     1975    5                    TEMP_FAK=0;

   1975  1 001352   200014 450100                    STZ     TEMP_FAK,,AUTO

     1853     1976    5                    END;

   1976  1 001353   001361 710000 1                  TRA     s:1979

     1854     1977    4                 ELSE
     1855     1978    4                    UB$->CHARS(CX)=MICROPS.C;

   1978  1 001354   200037 471500                    LDP1    UB$,,AUTO
         1 001355   200033 235100                    LDA     CX,,AUTO
         1 001356   040105 100500                    MLR     fill='040'O
         1 001357   200034 000001                    ADSC9   MICROPS,,AUTO            cn=0,n=1
         1 001360   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1

     1856     1979    4                 PREVCHR=ASCBIN(MICROPS.C); /* REMEMBER AS PREV CHAR             */

   1979  1 001361   200034 236100                    LDQ     MICROPS,,AUTO
         1 001362   000033 772000                    QRL     27
         1 001363   200027 756100                    STQ     PREVCHR,,AUTO

     1857     1980    4                 T$=PINCRB(T$,18);

   1980  1 001364   200026 236100                    LDQ     T$,,AUTO
         1 001365   400000 036007                    ADLQ    -131072,DL
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:326  
         1 001366   200026 756100                    STQ     T$,,AUTO

     1858     1981    4                 GBITS=GBITS-18;

   1981  1 001367   000022 336007                    LCQ     18,DL
         1 001370   200025 056100                    ASQ     GBITS,,AUTO
         1 001371   001437 710000 1                  TRA     s:1999

     1859     1982    4               CASE(ELSE);                 /* KNOWN ASCII CHAR                   */

     1860     1983    4                 IF SHFTBIT.B THEN

   1983  1 001372   200036 236100                    LDQ     SHFT,,AUTO
         1 001373   000001 316007                    CANQ    1,DL
         1 001374   001401 600000 1                  TZE     s:1986

     1861     1984    4                    PREVCHR=CHRTBL(N);

   1984  1 001375   200031 720100                    LXL0    N,,AUTO
         1 001376   001001 235010 0                  LDA     CHRTBL,X0
         1 001377   200027 755100                    STA     PREVCHR,,AUTO
         1 001400   001404 710000 1                  TRA     s:1987

     1862     1985    4                 ELSE
     1863     1986    4                    PREVCHR=CHRTBL(N+64);

   1986  1 001401   200031 720100                    LXL0    N,,AUTO
         1 001402   001101 235010 0                  LDA     CHRTBL+64,X0
         1 001403   200027 755100                    STA     PREVCHR,,AUTO

     1864     1987    4                 IF TEMP_FAK = 1 THEN

   1987  1 001404   200014 235100                    LDA     TEMP_FAK,,AUTO
         1 001405   000001 115007                    CMPA    1,DL
         1 001406   001421 601000 1                  TNZ     s:1995

     1865     1988    5                    DO;
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:327  

     1866     1989    5                    F$DCB.VFCCHAR=BINASC(PREVCHR);

   1989  1 001407   200027 236100                    LDQ     PREVCHR,,AUTO
         1 001410   000033 736000                    QLS     27
         1 001411   000002 276000 2                  ORQ     2
         1 001412   200021 471500                    LDP1    JDCB$,,AUTO
         1 001413   100056 552140                    STBQ    46,'40'O,PR1

     1867     1990    5                    CXS=CXS-1;

   1990  1 001414   000001 336007                    LCQ     1,DL
         1 001415   200033 056100                    ASQ     CX,,AUTO

     1868     1991    5                    CNT=CNT+1;

   1991  1 001416   200032 054100                    AOS     CNT,,AUTO

     1869     1992    5                    TEMP_FAK=0;

   1992  1 001417   200014 450100                    STZ     TEMP_FAK,,AUTO

     1870     1993    5                    END;

   1993  1 001420   001432 710000 1                  TRA     s:1996

     1871     1994    4                 ELSE
     1872     1995    4                    UB$->CHARS(CX)=BINASC(PREVCHR);

   1995  1 001421   200027 236100                    LDQ     PREVCHR,,AUTO
         1 001422   000033 736000                    QLS     27
         1 001423   000002 276000 2                  ORQ     2
         1 001424   200046 756100                    STQ     MOVE+1,,AUTO
         1 001425   200037 471500                    LDP1    UB$,,AUTO
         1 001426   200033 235100                    LDA     CX,,AUTO
         1 001427   040105 100500                    MLR     fill='040'O
         1 001430   200046 000004                    ADSC9   MOVE+1,,AUTO             cn=0,n=4
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:328  
         1 001431   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1

     1873     1996    4                 T$=PINCRB(T$,6);

   1996  1 001432   000006 221003                    LDX1    6,DU
         1 001433   000000 503511                    ABD     0,X1,PR0
         1 001434   200026 450500                    STP0    T$,,AUTO

     1874     1997    4                 GBITS=GBITS-6;

   1997  1 001435   000006 336007                    LCQ     6,DL
         1 001436   200025 056100                    ASQ     GBITS,,AUTO

     1875     1998    4               END;

     1876     1999    3              CXS=CXS+1;

   1999  1 001437   200033 054100                    AOS     CX,,AUTO

     1877     2000    3              CNT=CNT-1;

   2000  1 001440   000001 336007                    LCQ     1,DL
         1 001441   200032 056100                    ASQ     CNT,,AUTO

     1878     2001    3   ENDLOOP:   END;

   2001  1 001442   200032 235100       ENDLOOP      LDA     CNT,,AUTO
         1 001443   001213 605400 1                  TPNZ    s:1926

     1879     2002        /* */
     1880     2003    2           IF GBITS>8 THEN GOTO EXITL;

   2003  1 001444   200025 235100                    LDA     GBITS,,AUTO
         1 001445   000010 115007                    CMPA    8,DL
         1 001446   001451 605400 1                  TPNZ    EXITL

     1881     2004        /**/
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:329  
     1882     2005    2   DONE:   GBYTES=0;

   2005  1 001447   200004 470500       DONE         LDP0    @GBYTES,,AUTO
         1 001450   000000 450100                    STZ     0,,PR0

     1883     2006    2   EXITL:  F$DCB.UB$=PINCRC(F$DCB.UB$,CX);

   2006  1 001451   200021 470500       EXITL        LDP0    JDCB$,,AUTO
         1 001452   000075 471500                    LDP1    61,,PR0
         1 001453   200033 236100                    LDQ     CX,,AUTO
         1 001454   000011 402007                    MPY     9,DL
         1 001455   100000 503506                    ABD     0,QL,PR1
         1 001456   000075 451500                    STP1    61,,PR0

     1884     2007    2           F$DCB.UBYTES=CNT;

   2007  1 001457   200032 235100                    LDA     CNT,,AUTO
         1 001460   000076 755100                    STA     62,,PR0

     1885     2008    2           F$DCB.ARS=F$DCB.ARS+CX;

   2008  1 001461   000000 236100                    LDQ     0,,PR0
         1 001462   200033 036100                    ADLQ    CX,,AUTO
         1 001463   000000 756100                    STQ     0,,PR0

     1886     2009    2           RETURN;

   2009  1 001464   200024 221300                    LDX1  ! WORD_NUM+1,,AUTO
         1 001465   000001 702211                    TSX2  ! 1,X1

     1887     2010        /* */
     1888     2011    2   ERR:    B$JIT.ERR=ERRWD;

   2011  1 001466   000000 236000 0     ERR          LDQ     ERRWD
         1 001467   000000 471400 xsym               LDP1    B$JIT$
         1 001470   100012 756100                    STQ     10,,PR1

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:330  
     1889     2012    2           F$DCB.UB$=PINCRC(F$DCB.UB$,CX);

   2012  1 001471   200021 473500                    LDP3    JDCB$,,AUTO
         1 001472   300075 474500                    LDP4    61,,PR3
         1 001473   200033 236100                    LDQ     CX,,AUTO
         1 001474   000011 402007                    MPY     9,DL
         1 001475   400000 503506                    ABD     0,QL,PR4
         1 001476   300075 454500                    STP4    61,,PR3

     1890     2013    2           F$DCB.UBYTES=CNT;

   2013  1 001477   200032 235100                    LDA     CNT,,AUTO
         1 001500   300076 755100                    STA     62,,PR3

     1891     2014    2           F$DCB.ARS=F$DCB.ARS+CX;

   2014  1 001501   300000 236100                    LDQ     0,,PR3
         1 001502   200033 036100                    ADLQ    CX,,AUTO
         1 001503   300000 756100                    STQ     0,,PR3

     1892     2015    2           ALTRETURN;

   2015  1 001504   200024 221300                    LDX1  ! WORD_NUM+1,,AUTO
         1 001505   000000 702211                    TSX2  ! 0,X1

ERRWD
 Sect OctLoc
   0     000   061504 001062                                                    1..2

XLATETBL
 Sect OctLoc
   0     001   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     041*  000000 000003   000000 000004   000000 000005   000000 000006    ................
   0     045   000000 000007   000000 000010   000000 000000   000000 000011    ................
   0     051   000000 000012   000000 000013   000000 000014   000000 000015    ................
   0     055   000000 000016   000000 000017   000000 000020   000000 000021    ................
   0     061   000000 000022   000000 000023   000000 000024   000000 000025    ................
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:331  
   0     065   000000 000026   000000 000027   000000 000030   000000 000031    ................
   0     071   000000 000032   000000 000033   000000 000034   000000 000035    ................
   0     075   000000 000036   000000 000037   000000 000040   000000 000041    ........... ...!
   0     101   000000 000042   000000 000643   000000 000644   000000 000645    ..."............
   0     105   000000 000646   000000 000647   000000 000650   000000 000651    ................
   0     111   000000 000652   000000 000653   000000 000654   000000 000655    ................
   0     115   000000 000656   000000 000657   000000 000660   000000 000661    ................
   0     121   000000 000662   000000 000663   000000 000664   000000 000665    ................
   0     125   000000 000666   000000 000667   000000 000670   000000 000671    ................
   0     131   000000 000672   000000 000673   000000 000674   000000 000000    ................
   0     135   000000 000000   000000 000000   000000 000000   000000 000075    ...............=
   0     141   000000 000000   000000 000243   000000 000244   000000 000245    ................
   0     145   000000 000246   000000 000247   000000 000250   000000 000251    ................
   0     151   000000 000252   000000 000253   000000 000254   000000 000255    ................
   0     155   000000 000256   000000 000257   000000 000260   000000 000261    ................
   0     161   000000 000262   000000 000263   000000 000264   000000 000265    ................
   0     165   000000 000266   000000 000267   000000 000270   000000 000271    ................
   0     171   000000 000272   000000 000273   000000 000274   000000 000000    ................
   0     175   000000 000076   000000 000000   000000 000077   000000 000000    ...>.......?....
   0     201   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     775*  000000 000000   000000 000000   000000 000000   000000 000000    ................

CHRTBL
 Sect OctLoc
   0    1001   000000 000000   000000 000000   000000 000000   000000 000040    ...............
   0    1005   000000 000041   000000 000042   000000 000043   000000 000044    ...!..."...#...$
   0    1011   000000 000045   000000 000047   000000 000050   000000 000051    ...%...'...(...)
   0    1015   000000 000052   000000 000053   000000 000054   000000 000055    ...*...+...,...-
   0    1021   000000 000056   000000 000057   000000 000060   000000 000061    ......./...0...1
   0    1025   000000 000062   000000 000063   000000 000064   000000 000065    ...2...3...4...5
   0    1031   000000 000066   000000 000067   000000 000070   000000 000071    ...6...7...8...9
   0    1035   000000 000072   000000 000073   000000 000074   000000 000075    ...:...;...<...=
   0    1041   000000 000076   000000 000077   000000 000100   000000 000101    ...>...?...@...A
   0    1045   000000 000102   000000 000103   000000 000104   000000 000105    ...B...C...D...E
   0    1051   000000 000106   000000 000107   000000 000110   000000 000111    ...F...G...H...I
   0    1055   000000 000112   000000 000113   000000 000114   000000 000115    ...J...K...L...M
   0    1061   000000 000116   000000 000117   000000 000120   000000 000121    ...N...O...P...Q
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:332  
   0    1065   000000 000122   000000 000123   000000 000124   000000 000125    ...R...S...T...U
   0    1071   000000 000126   000000 000127   000000 000130   000000 000131    ...V...W...X...Y
   0    1075   000000 000132   000000 000137   000000 000174   000000 000176    ...Z..._...|...~
   0    1101   000000 000000   000000 000000   000000 000000   000000 000040    ...............
   0    1105   000000 000041   000000 000042   000000 000043   000000 000044    ...!..."...#...$
   0    1111   000000 000045   000000 000047   000000 000050   000000 000051    ...%...'...(...)
   0    1115   000000 000052   000000 000053   000000 000054   000000 000055    ...*...+...,...-
   0    1121   000000 000056   000000 000057   000000 000060   000000 000061    ......./...0...1
   0    1125   000000 000062   000000 000063   000000 000064   000000 000065    ...2...3...4...5
   0    1131   000000 000066   000000 000067   000000 000070   000000 000071    ...6...7...8...9
   0    1135   000000 000072   000000 000073   000000 000074   000000 000075    ...:...;...<...=
   0    1141   000000 000076   000000 000077   000000 000100   000000 000141    ...>...?...@...a
   0    1145   000000 000142   000000 000143   000000 000144   000000 000145    ...b...c...d...e
   0    1151   000000 000146   000000 000147   000000 000150   000000 000151    ...f...g...h...i
   0    1155   000000 000152   000000 000153   000000 000154   000000 000155    ...j...k...l...m
   0    1161   000000 000156   000000 000157   000000 000160   000000 000161    ...n...o...p...q
   0    1165   000000 000162   000000 000163   000000 000164   000000 000165    ...r...s...t...u
   0    1171   000000 000166   000000 000167   000000 000170   000000 000171    ...v...w...x...y
   0    1175   000000 000172   000000 000137   000000 000174   000000 000176    ...z..._...|...~

INITMICROPS
 Sect OctLoc
   0    1202   401*** 020020   020020 ******                                    ........

(unnamed)
 Sect OctLoc
   2     000   000001 000001   000003 006000   000040 040040                    .........
     1893     2016        /*E*    ERROR:   FMD-E$DECOMP-2
     1894     2017        *       MESSAGE: Decompression error% in file %FN%
     1895     2018        *       MESSAGE1: This record contains illegal compressed language
     1896     2019        */
     1897     2020    2   END DECOMP;
     1898     2021        /* */
     1899     2022    1   END FMD$RECTRAN;
     1900     2023               %EOD;

PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:333  
--  Include file information  --

   FM$GRAN.:E05TOU  is referenced.
   F_FPTCODE_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$RECTRAN.
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:334  

 **** Variables and constants ****

  ****  Section 000 RoData FMD$RECTRAN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1001-0-0/w UBIN        r     1 CHRTBL(0:127)              0-0-0/b STRC        r     1 ERRWD
  1202-0-0/d STRC(54)    r     1 INITMICROPS                1-0-0/w UBIN        r     1 XLATETBL(0:511)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @BUFNUM                    6-0-0/w PTR         r     1 @DIR
     7-0-0/w PTR         r     1 @FAK                      12-0-0/w PTR         r     1 @FPTCODE
     3-0-0/w PTR         r     1 @G$                        4-0-0/w PTR         r     1 @GBYTES
    10-0-0/w PTR         r     1 @PSEED                    11-0-0/w PTR         r     1 @VFC
    *0-0-0/w UBIN        r     1 BUFNUM                    43-0-0/c CHAR        r     1 CHAR_TEMP
    25-0-0/w UBIN        r     1 CHR                       35-0-0/w SBIN        r     1 CNT
    32-0-0/w SBIN        r     1 CNT                       13-0-0/w PTR         r     1 CWORD$
    34-0-0/w UBIN        r     1 CX                        33-0-0/w UBIN        r     1 CX
    34-0-0/w SBIN        r     1 CXS                       33-0-0/w SBIN        r     1 CXS
    *0-0-0/w SBIN        r     1 DIR                       *0-0-0/w SBIN        r     1 FAK
    *0-0-0/w UBIN        r     1 FPTCODE                   *0-0-0/w PTR         r     1 G$
    32-0-0/w SBIN        r     1 GBITS                     25-0-0/w SBIN        r     1 GBITS
    *0-0-0/w SBIN        r     1 GBYTES                    30-0-0/w UBIN        r     1 I
    16-0-0/w BIT         r     1 ISEED                     21-0-0/w PTR         r     1 JDCB$
    34-0-0/d STRC(54)    r     1 MICROPS                   45-0-0/w UBIN        r     1 MOVE
    31-0-0/w SBIN        r     1 N                         31-0-0/w UBIN        r     1 N
    31-0-0/w STRC        r     1 NB                        25-0-0/w SBIN        r     1 NUM
    26-0-0/w UBIN        r     1 PCHR                      30-0-0/w SBIN        r     1 PREV#
    27-0-0/w UBIN        r     1 PREVCHR                   27-0-0/w UBIN        r     1 PREVCHR
    *0-0-0/w BIT         r     1 PSEED                     36-0-0/w SBIN        r     1 SHFT
    36-0-0/w SBIN        r     1 SHFT                      36-0-0/w STRC        r     1 SHFTBIT
    36-0-0/w STRC        r     1 SHFTBIT                   33-0-0/w PTR         r     1 T$
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:335  
    26-0-0/w PTR         r     1 T$                        40-0-0/c CHAR        r     1 TEMPCHAR
    14-0-0/w SBIN        r     1 TEMP_FAK                  22-0-0/w UBIN        r     1 TFPTCODE
    37-0-0/w PTR         r     1 UB$                       37-0-0/w PTR         r     1 UB$
    *0-0-0/c CHAR        r     1 VFC                       23-0-0/w SBIN        r     1 WORD_NUM
    17-0-0/w SBIN        r     1 WRDS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$XL_UPPER_UR$             0-0-0/w PTR         r     1 B$XL_UR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/c CHAR(4)     r     1 BASED_WORD(0:0)
     0-0-0/c CHAR        r     1 CHAR1                      0-0-0/c CHAR        r     1 CHAR1
     0-0-0/c ASTR(9)     r     1 CHARS                      0-0-0/c CHAR        r     1 CHARS(0:0)
     0-0-0/c CHAR        r     1 CHARS(0:0)                 0-0-0/c ACHR        r     1 CHRS
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC(216)   r     1 FPT$READ_V
     0-0-0/d STRC(4608)  r     1 NK_URTBL                   0-0-0/d STRC(4608)  r     1 NK_URTBLUC
     0-0-0/b STRC(12)    r     1 SKIP6                      0-0-0/b STRC(18)    r     1 SKIP6
     0-0-0/b STRC(12)    r     1 SKIP6                      0-0-0/b STRC(18)    r     1 SKIP9
     0-0-0/b UBIN(3)     r     1 UBIN3                      0-0-0/b UBIN(6)     r     1 UBIN6
     0-0-0/b UBIN(6)     r     1 UBIN6                      0-0-0/b UBIN(9)     r     1 UBIN9


   Procedure FMD$RECTRAN requires 838 words for executable code.
   Procedure FMD$RECTRAN requires 44 words of local(AUTO) storage.
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:336  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:337  
          MINI XREF LISTING

B$JIT.DCB$
       776**DCL      1492>>ASSIGN
B$JIT.ERR
       686**DCL      2011<<ASSIGN
B$JIT.ERR.MID
       687**DCL       687--REDEF
B$JIT$
        66**DCL       681--IMP-PTR  1492>>ASSIGN   2011>>ASSIGN
B$PS0$
        67**DCL      1481--IMP-PTR  1538>>IF       1917>>IF
B$XL_UPPER_UR$
       183**DCL       184--IMP-PTR  1569>>CALLBLT  1582>>CALLBLT  1697>>ASSIGN
B$XL_UR$
       179**DCL       180--IMP-PTR  1567>>CALLBLT  1580>>CALLBLT  1694>>ASSIGN
BACKUP IN PROCEDURE DUMPPREV
      1815**LABEL    1828--CALLALT
BASED_WORD
        60**DCL      1778>>CALLBLT
BUFNUM
        42**DCL        38--PROC     1588>>ASSIGN   1663>>ASSIGN
CHAR1 IN PROCEDURE DECOMP
      1891**DCL      1955<<CALLBLT
CHAR1 IN PROCEDURE MOVE
      1532**DCL      1540>>ASSIGN   1564<<ASSIGN
CHARS IN PROCEDURE COMPRESS
      1657**DCL      1693>>ASSIGN   1696>>ASSIGN   1703>>ASSIGN
CHARS IN PROCEDURE DECOMP
      1900**DCL      1978<<ASSIGN   1995<<ASSIGN
CHARS.SKIP1 IN PROCEDURE MOVE
      1535**DCL      1567<<CALLBLT  1569<<CALLBLT  1571<<ASSIGN
CHAR_TEMP IN PROCEDURE GETCHAR
      1758**DCL      1763<<CALLBLT  1765>>ASSIGN
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:338  
CHR IN PROCEDURE COMPRESS
      1632**DCL      1687<<ASSIGN   1694<<ASSIGN   1697<<ASSIGN   1704<<ASSIGN   1707>>IF       1715>>IF
      1717>>ASSIGN   1720>>ASSIGN   1731>>ASSIGN   1765<<ASSIGN
CHRS IN PROCEDURE MOVE
      1531**DCL      1548<<ASSIGN   1548>>ASSIGN   1567>>CALLBLT  1569>>CALLBLT  1571>>ASSIGN   1580<<CALLBLT
      1580>>CALLBLT  1582<<CALLBLT  1582>>CALLBLT  1584<<ASSIGN   1584>>ASSIGN
CHRTBL IN PROCEDURE DECOMP
      1854**DCL      1984>>ASSIGN   1986>>ASSIGN
CNT IN PROCEDURE COMPRESS
      1646**DCL      1673<<ASSIGN   1685<<ASSIGN   1685>>ASSIGN   1690>>DOWHILE  1734<<ASSIGN   1734>>ASSIGN
      1751>>ASSIGN   1773>>IF       1774>>ASSIGN   1816<<ASSIGN   1816>>ASSIGN
CNT IN PROCEDURE DECOMP
      1878**DCL      1915<<ASSIGN   1925>>DOWHILE  1937>>IF       1943>>ASSIGN   1956<<ASSIGN   1956>>ASSIGN
      1974<<ASSIGN   1974>>ASSIGN   1991<<ASSIGN   1991>>ASSIGN   2000<<ASSIGN   2000>>ASSIGN   2007>>ASSIGN
      2013>>ASSIGN
COMPRESS
      1611**PROC     1504--CALL
CWORD$
        48**DCL      1676<<ASSIGN   1780<>CALL
CX IN PROCEDURE COMPRESS
      1644**DCL      1645--REDEF    1672<<ASSIGN   1693>>ASSIGN   1696>>ASSIGN   1703>>ASSIGN   1752>>ASSIGN
      1815<<ASSIGN   1815>>ASSIGN
CX IN PROCEDURE DECOMP
      1879**DCL      1880--REDEF    1914<<ASSIGN   1955>>CALLBLT  1978>>ASSIGN   1995>>ASSIGN   2006>>ASSIGN
      2008>>ASSIGN   2012>>ASSIGN   2014>>ASSIGN
CXS IN PROCEDURE COMPRESS
      1645**DCL      1686<<ASSIGN   1733<<ASSIGN   1733>>ASSIGN
CXS IN PROCEDURE DECOMP
      1880**DCL      1957<<ASSIGN   1957>>ASSIGN   1973<<ASSIGN   1973>>ASSIGN   1990<<ASSIGN   1990>>ASSIGN
      1999<<ASSIGN   1999>>ASSIGN
DECOMP
      1852**PROC     1502--CALL
DIR
        43**DCL        38--PROC     1501>>IF       1515>>IF       1537>>IF
DONE IN PROCEDURE DECOMP
      2005**LABEL    1927--GOTO     1966--GOTO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:339  
DUMPPREV IN PROCEDURE COMPRESS
      1812**PROC     1714--CALL     1738--CALL
ENDLOOP IN PROCEDURE DECOMP
      2001**LABEL    1958--GOTO     1963--GOTO
ERR
      1526**LABEL    1502--CALLALT
ERR IN PROCEDURE DECOMP
      2011**LABEL    1932--GOTO
ERRWD
      1426**DCL      2011>>ASSIGN
EXITL IN PROCEDURE DECOMP
      2006**LABEL    2003--GOTO
F$DCB.ACTPOS
      1456**DCL      1456--REDEF
F$DCB.ARS
      1431**DCL      1431--REDEF    1550<<ASSIGN   1550>>ASSIGN   2008<<ASSIGN   2008>>ASSIGN   2014<<ASSIGN
      2014>>ASSIGN
F$DCB.ATTR
      1449**DCL      1450--REDEF
F$DCB.BFR.BUFUP
      1475**DCL      1588<<ASSIGN   1663<<ASSIGN
F$DCB.BORROW
      1464**DCL      1464--REDEF    1464--REDEF    1464--REDEF
F$DCB.COMP
      1444**DCL      1499>>IF
F$DCB.CSEED
      1468**DCL      1518<>CALL     1780<>CALL
F$DCB.CWORD
      1473**DCL      1676--ASSIGN   1763>>CALLBLT  1778<<CALLBLT
F$DCB.CX
      1473**DCL      1682>>ASSIGN   1741<<ASSIGN   1741>>ASSIGN   1760>>IF       1763>>CALLBLT  1766<<ASSIGN
      1766>>ASSIGN   1784<<ASSIGN
F$DCB.DCBNAME.L
      1478**DCL      1478--IMP-SIZ
F$DCB.DECRYPT
      1471**DCL      1522<<ASSIGN   1923<<ASSIGN
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:340  
F$DCB.DVBYTE.VFC
      1434**DCL      1538>>IF       1917>>IF
F$DCB.EOMCHAR
      1435**DCL      1435--REDEF
F$DCB.FLDID
      1459**DCL      1459--REDEF
F$DCB.FORM$
      1453**DCL      1453--REDEF
F$DCB.FSECT
      1469**DCL      1469--REDEF
F$DCB.FSN
      1446**DCL      1446--REDEF    1446--REDEF    1447--REDEF
F$DCB.GDISP
      1470**DCL      1541<<ASSIGN   1541>>ASSIGN   1574<<ASSIGN   1574>>ASSIGN   1592<<ASSIGN   1592>>ASSIGN
      1754<<ASSIGN
F$DCB.HEADER$
      1452**DCL      1452--REDEF
F$DCB.IXTNSIZE
      1450**DCL      1450--REDEF
F$DCB.LASTSTA$
      1440**DCL      1440--REDEF
F$DCB.LVL
      1465**DCL      1465--REDEF
F$DCB.NAME.C
      1440**DCL      1440--REDEF
F$DCB.NOEOF
      1461**DCL      1461--REDEF
F$DCB.NRECS
      1451**DCL      1451--REDEF
F$DCB.NRECX
      1470**DCL      1470--REDEF
F$DCB.OHDR
      1462**DCL      1462--REDEF
F$DCB.ORG
      1445**DCL      1445--REDEF
F$DCB.PRECNO
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:341  
      1468**DCL      1468--REDEF
F$DCB.RCSZ
      1473**DCL      1473--REDEF
F$DCB.RES
      1441**DCL      1441--REDEF
F$DCB.SEED
      1459**DCL      1497>>ASSIGN
F$DCB.SETX
      1453**DCL      1453--REDEF
F$DCB.TAB$
      1452**DCL      1453--REDEF
F$DCB.TDA
      1467**DCL      1467--REDEF
F$DCB.UB$
      1469**DCL      1548>>ASSIGN   1567>>CALLBLT  1569>>CALLBLT  1571>>ASSIGN   1580>>CALLBLT  1582>>CALLBLT
      1584>>ASSIGN   1590<<ASSIGN   1590>>ASSIGN   1674>>ASSIGN   1752<<ASSIGN   1752>>ASSIGN   1916>>ASSIGN
      2006<<ASSIGN   2006>>ASSIGN   2012<<ASSIGN   2012>>ASSIGN
F$DCB.UBYTES
      1469**DCL      1546>>IF       1547>>ASSIGN   1553>>IF       1554>>ASSIGN   1562>>IF       1563>>ASSIGN
      1591<<ASSIGN   1591>>ASSIGN   1673>>ASSIGN   1751<<ASSIGN   1915>>ASSIGN   2007<<ASSIGN   2013<<ASSIGN
F$DCB.VFCCHAR
      1455**DCL      1540<<ASSIGN   1949<<ASSIGN   1972<<ASSIGN   1989<<ASSIGN
F$DCB.WSN
      1442**DCL      1442--REDEF
FAK
        44**DCL        38--PROC     1518<>CALL     1538>>IF       1559>>IF       1675>>ASSIGN   1679>>IF
      1684>>IF       1917>>IF
FMD$ENCRYPT
        63**DCL-ENT  1518--CALL     1780--CALL
FPT$READ_V.DVBYTE.REREAD
      1483**DCL      1484--REDEF
FPT$READ_V.INDX
      1483**DCL      1483--REDEF
FPT$READ_V.STRPVFC
      1484**DCL      1538>>IF       1917>>IF
FPTCODE
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:342  
        47**DCL        38--PROC     1555--IF       1558>>ASSIGN   1664--IF       1667>>ASSIGN
FULL IN PROCEDURE COMPRESS
      1741**LABEL    1714--CALLALT  1724--GOTO     1732--CALLALT
G$
        40**DCL        38--PROC     1518<>CALL     1540>>ASSIGN   1544<<ASSIGN   1544>>ASSIGN   1548>>ASSIGN
      1564>>ASSIGN   1567>>CALLBLT  1569>>CALLBLT  1571>>ASSIGN   1580>>CALLBLT  1582>>CALLBLT  1584>>ASSIGN
      1669>>ASSIGN   1912>>ASSIGN
GBITS IN PROCEDURE COMPRESS
      1642**DCL      1668<<ASSIGN   1724>>IF       1727<<ASSIGN   1727>>ASSIGN   1743>>ASSIGN   1753>>ASSIGN
      1796>>IF       1800<<ASSIGN   1800>>ASSIGN   1804>>IF       1807<<ASSIGN   1807>>ASSIGN   1814>>IF
      1822<<ASSIGN   1822>>ASSIGN
GBITS IN PROCEDURE DECOMP
      1870**DCL      1911<<ASSIGN   1926>>IF       1932>>IF       1936<<ASSIGN   1936>>ASSIGN   1945<<ASSIGN
      1945>>ASSIGN   1962<<ASSIGN   1962>>ASSIGN   1965>>IF       1981<<ASSIGN   1981>>ASSIGN   1997<<ASSIGN
      1997>>ASSIGN   2003>>IF
GBYTES
        41**DCL        38--PROC     1517>>ASSIGN   1536>>ASSIGN   1543<<ASSIGN   1543>>ASSIGN   1549<<ASSIGN
      1549>>ASSIGN   1560>>IF       1561>>ASSIGN   1573<<ASSIGN   1586<<ASSIGN   1668>>ASSIGN   1753<<ASSIGN
      1753>>ASSIGN   1754>>ASSIGN   1911>>ASSIGN   2005<<ASSIGN
GETCHAR IN PROCEDURE COMPRESS
      1757**PROC     1700--CALL
GET_WORD IN PROCEDURE COMPRESS
      1770**PROC     1680--CALL     1761--CALL
GOTCHR IN PROCEDURE COMPRESS
      1707**LABEL    1688--GOTO
I IN PROCEDURE DECOMP
      1873**DCL      1968<<ASSIGN   1969>>ASSIGN
INITMICROPS IN PROCEDURE DECOMP
      1902**DCL      1953>>ASSIGN
ISEED
        52**DCL      1495<<ASSIGN   1497<<ASSIGN   1508>>IF       1518<>CALL     1678>>IF       1699>>IF
      1780<>CALL     1921>>IF
JDCB$
        55**DCL      1431--IMP-PTR  1492<<ASSIGN   1497>>ASSIGN   1499>>IF       1518>>CALL     1522>>ASSIGN
      1538>>IF       1540>>ASSIGN   1541>>ASSIGN   1541>>ASSIGN   1546>>IF       1547>>ASSIGN   1548>>ASSIGN
      1550>>ASSIGN   1550>>ASSIGN   1553>>IF       1554>>ASSIGN   1562>>IF       1563>>ASSIGN   1567>>CALLBLT
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:343  
      1569>>CALLBLT  1571>>ASSIGN   1574>>ASSIGN   1574>>ASSIGN   1580>>CALLBLT  1582>>CALLBLT  1584>>ASSIGN
      1588>>ASSIGN   1590>>ASSIGN   1590>>ASSIGN   1591>>ASSIGN   1591>>ASSIGN   1592>>ASSIGN   1592>>ASSIGN
      1663>>ASSIGN   1673>>ASSIGN   1674>>ASSIGN   1676>>ASSIGN   1682>>ASSIGN   1741>>ASSIGN   1741>>ASSIGN
      1751>>ASSIGN   1752>>ASSIGN   1752>>ASSIGN   1754>>ASSIGN   1760>>IF       1763>>CALLBLT  1763>>CALLBLT
      1766>>ASSIGN   1766>>ASSIGN   1778>>CALLBLT  1780>>CALL     1784>>ASSIGN   1915>>ASSIGN   1916>>ASSIGN
      1917>>IF       1923>>ASSIGN   1949>>ASSIGN   1972>>ASSIGN   1989>>ASSIGN   2006>>ASSIGN   2006>>ASSIGN
      2007>>ASSIGN   2008>>ASSIGN   2008>>ASSIGN   2012>>ASSIGN   2012>>ASSIGN   2013>>ASSIGN   2014>>ASSIGN
      2014>>ASSIGN
MICROPS IN PROCEDURE DECOMP
      1881**DCL      1953<<ASSIGN   1955>>CALLBLT
MICROPS.C IN PROCEDURE DECOMP
      1882**DCL      1969--ASSIGN   1972>>ASSIGN   1978>>ASSIGN   1979>>ASSIGN
MICROPS.FILL IN PROCEDURE DECOMP
      1883**DCL      1954<<ASSIGN
MOVE
      1529**PROC     1510--CALL     1516--CALL     1521--CALL
MOVE IN PROCEDURE GET_WORD
      1771**DCL      1774<<ASSIGN   1776<<ASSIGN   1778>>CALLBLT
N IN PROCEDURE COMPRESS
      1636**DCL      1637--REDEF    1720<<ASSIGN   1743<<ASSIGN   1744>>IF       1748>>IF       1795>>IF
      1805>>ASSIGN   1825<<ASSIGN
N IN PROCEDURE DECOMP
      1874**DCL      1875--REDEF    1929<<ASSIGN   1930>>DOCASE   1933<<ASSIGN   1934<<ASSIGN   1934>>ASSIGN
      1937>>IF       1943<<ASSIGN   1950<<ASSIGN   1950>>ASSIGN   1955>>CALLBLT  1956>>ASSIGN   1957>>ASSIGN
      1984>>ASSIGN   1986>>ASSIGN
NB.ALPHA IN PROCEDURE COMPRESS
      1640**DCL      1721>>IF
NB.UC IN PROCEDURE COMPRESS
      1639**DCL      1722>>IF
NK_URTBL
       180**DCL      1567>>CALLBLT  1580>>CALLBLT
NK_URTBL.C
       180**DCL      1694>>ASSIGN
NK_URTBLUC
       184**DCL      1569>>CALLBLT  1582>>CALLBLT
NK_URTBLUC.C
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:344  
       184**DCL      1697>>ASSIGN
NOSHIFT IN PROCEDURE COMPRESS
      1731**LABEL    1723--GOTO
NUM IN PROCEDURE MOVE
      1530**DCL      1531--IMP-SIZ  1535--IMP-SIZ  1536<<ASSIGN   1542<<ASSIGN   1542>>ASSIGN   1546>>IF
      1547<<ASSIGN   1548>>ASSIGN   1548>>ASSIGN   1549>>ASSIGN   1550>>ASSIGN   1553>>IF       1554<<ASSIGN
      1561<<ASSIGN   1562>>IF       1563<<ASSIGN   1567>>CALLBLT  1567>>CALLBLT  1569>>CALLBLT  1569>>CALLBLT
      1571>>ASSIGN   1571>>ASSIGN   1573>>ASSIGN   1580>>CALLBLT  1580>>CALLBLT  1582>>CALLBLT  1582>>CALLBLT
      1584>>ASSIGN   1584>>ASSIGN   1586>>ASSIGN   1590>>ASSIGN   1591>>ASSIGN   1592>>ASSIGN
PCHR IN PROCEDURE COMPRESS
      1633**DCL      1731<<ASSIGN   1798>>ASSIGN   1826<<ASSIGN
PREV# IN PROCEDURE COMPRESS
      1635**DCL      1670<<ASSIGN   1707>>IF       1709<<ASSIGN   1709>>ASSIGN   1713>>IF       1737>>IF
      1813>>IF       1815>>ASSIGN   1816>>ASSIGN   1820>>ASSIGN   1827>>DOWHILE  1829<<ASSIGN   1829>>ASSIGN
      1832<<ASSIGN
PREVCHR IN PROCEDURE COMPRESS
      1634**DCL      1671<<ASSIGN   1707>>IF       1715>>IF       1717<<ASSIGN   1825>>ASSIGN   1826>>ASSIGN
PREVCHR IN PROCEDURE DECOMP
      1872**DCL      1913<<ASSIGN   1949>>ASSIGN   1954>>ASSIGN   1979<<ASSIGN   1984<<ASSIGN   1986<<ASSIGN
      1989>>ASSIGN   1995>>ASSIGN
PSEED
        45**DCL        38--PROC     1494>>IF       1495>>ASSIGN
PUT IN PROCEDURE COMPRESS
      1790**PROC     1732--CALL     1828--CALL
PUTDUP IN PROCEDURE COMPRESS
      1709**LABEL    1716--GOTO
PUTOK IN PROCEDURE COMPRESS
      1733**LABEL    1710--GOTO
SHFT IN PROCEDURE COMPRESS
      1647**DCL      1648--REDEF    1662<<ASSIGN   1728<<ASSIGN   1728>>ASSIGN
SHFT IN PROCEDURE DECOMP
      1885**DCL      1886--REDEF    1910<<ASSIGN   1960<<ASSIGN   1960>>ASSIGN
SHFTBIT.B IN PROCEDURE COMPRESS
      1650**DCL      1722>>IF
SHFTBIT.B IN PROCEDURE DECOMP
      1888**DCL      1983>>IF
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:345  
SKIP6.UBIN6 IN PROCEDURE COMPRESS
      1660**DCL      1820<<ASSIGN
SKIP6.UBIN6 IN PROCEDURE DECOMP
      1894**DCL      1933>>ASSIGN
SKIP6.UBIN12 IN PROCEDURE PUT
      1793**DCL      1798<<ASSIGN
SKIP9.UBIN9 IN PROCEDURE DECOMP
      1897**DCL      1968>>ASSIGN
T$ IN PROCEDURE COMPRESS
      1643**DCL      1669<<ASSIGN   1725>>ASSIGN   1726<<ASSIGN   1726>>ASSIGN   1746>>ASSIGN   1750>>ASSIGN
      1797>>ASSIGN   1798>>ASSIGN   1799<<ASSIGN   1799>>ASSIGN   1805>>ASSIGN   1806<<ASSIGN   1806>>ASSIGN
      1819>>ASSIGN   1820>>ASSIGN   1821<<ASSIGN   1821>>ASSIGN
T$ IN PROCEDURE DECOMP
      1871**DCL      1912<<ASSIGN   1929>>ASSIGN   1933>>ASSIGN   1935<<ASSIGN   1935>>ASSIGN   1944<<ASSIGN
      1944>>ASSIGN   1961<<ASSIGN   1961>>ASSIGN   1968>>ASSIGN   1980<<ASSIGN   1980>>ASSIGN   1996<<ASSIGN
      1996>>ASSIGN
TEMPCHAR IN PROCEDURE COMPRESS
      1652**DCL      1693<<ASSIGN   1694>>ASSIGN   1696<<ASSIGN   1697>>ASSIGN   1703<<ASSIGN   1704>>ASSIGN
TEMP_FAK
        49**DCL      1675<<ASSIGN   1780<>CALL     1782<<ASSIGN   1918<<ASSIGN   1920<<ASSIGN   1947>>IF
      1951<<ASSIGN   1970>>IF       1975<<ASSIGN   1987>>IF       1992<<ASSIGN
TFPTCODE
        56**DCL      1556<<ASSIGN   1558<<ASSIGN   1565>>DOCASE   1578>>DOCASE   1665<<ASSIGN   1667<<ASSIGN
      1681>>IF       1681>>IF       1691>>DOCASE
UB$ IN PROCEDURE COMPRESS
      1651**DCL      1674<<ASSIGN   1682<<ASSIGN   1682>>ASSIGN   1693>>ASSIGN   1696>>ASSIGN   1703>>ASSIGN
      1778>>CALLBLT
UB$ IN PROCEDURE DECOMP
      1889**DCL      1916<<ASSIGN   1955>>CALLBLT  1978>>ASSIGN   1995>>ASSIGN
UBIN3 IN PROCEDURE COMPRESS
      1656**DCL      1746<<ASSIGN
UBIN6 IN PROCEDURE COMPRESS
      1654**DCL      1725<<ASSIGN   1750<<ASSIGN   1797<<ASSIGN   1805<<ASSIGN   1819<<ASSIGN
UBIN6 IN PROCEDURE DECOMP
      1898**DCL      1929>>ASSIGN
UBIN9 IN PROCEDURE DECOMP
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:346  
      1899**DCL      1969<<ASSIGN
VFC
        46**DCL        38--PROC     1559--IF       1564>>ASSIGN   1684--IF       1687>>ASSIGN
WORD_NUM
        57**DCL      1677<<ASSIGN   1778>>CALLBLT  1783<<ASSIGN   1783>>ASSIGN
WRDS
        53**DCL      1517<<ASSIGN   1518<>CALL
XLATETBL IN PROCEDURE COMPRESS
      1617**DCL      1720>>ASSIGN   1825>>ASSIGN
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:347  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #007=FMD$RECTRAN File=FMD$BUF.:E05TSI                              TUE 07/29/97 16:41 Page:348  
              MINI UREF LISTING

B$ROSEG$      69**DCL
BUF$      54**DCL
B_POINTER     120**DCL-ENT
CSEED      51**DCL
FM$BUF$      68**DCL
FM$GRAN    1488**DCL
FMD$DECRYPT      64**DCL-ENT
FMD$RECTRAN      38**PROC
FMD$WRTSV      62**DCL-ENT
NB IN PROCEDURE DECOMP   1875**DCL
UBIN4      59**DCL
UBIN9 IN PROCEDURE COMPRESS   1655**DCL

PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:349  
     1901        1        /*T***********************************************************/
     1902        2        /*T*                                                         */
     1903        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1904        4        /*T*                                                         */
     1905        5        /*T***********************************************************/
     1906        6        FMD$DECRYPT_BUFFER: PROC(PSEED);
     1907        7    1          DCL PSEED UBIN;
     1908        8        /* */
     1909        9               %INCLUDE B$JIT;
     1910      612               %INCLUDE F$CP6V_C;
     1911      838               %MACRO F$DCB(BASED=BASED);
     1912      839               %INCLUDE F$DCB;
     1913      888               %MEND;
     1914      889        /* */
     1915      890               %F$DCB(BASED="BASED(JDCB$)");
     1916      940               %FPT$READ_V(BASED="BASED(B$PS0$)");
     1917      947        /* */
     1918      948    1          DCL JDCB$ PTR;
     1919      949    1          DCL MOVE UBIN;
     1920      950    1          DCL COUNT SBIN;
     1921      951    1          DCL BUF$ PTR;
     1922      952    1          DCL ISEED UBIN;
     1923      953    1          DCL TEMP_WORD CHAR(4);
     1924      954    1          DCL TEMP_WORD$ PTR;
     1925      955    1          DCL FAK UBIN;
     1926      956    1          DCL STRPVFC UBIN;
     1927      957        /* */
     1928      958    1          DCL BASED_WORD CHAR(4) CALIGNED BASED;
     1929      959        /* */
     1930      960    1          DCL B$JIT$ PTR SYMREF;
     1931      961    1          DCL B$PS2$ PTR SYMREF;
     1932      962    1          DCL B$PS0$ PTR SYMREF;
     1933      963        /* */
     1934      964    1          DCL FMD$DECRYPT ENTRY(5);
     1935      965        /* */
     1936      966    1          JDCB$=B$JIT.DCB$;
     1937      967    1          IF PSEED ~= 0 THEN
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:350  
     1938      968    1             ISEED = PSEED;
     1939      969    1          ELSE
     1940      970    1             ISEED = BITBIN(F$DCB.SEED);
     1941      971    1          COUNT=F$DCB.ARS;
     1942      972    1          FAK=1;
     1943      973    1          BUF$=B$PS2$;
     1944      974    1          IF FPT$READ_V.STRPVFC AND F$DCB.DVBYTE.VFC THEN
     1945      975    1             STRPVFC=1;
     1946      976    1          ELSE
     1947      977    1             STRPVFC=0;
     1948      978    1          TEMP_WORD$=ADDR(TEMP_WORD);
     1949      979
     1950      980    2          DO WHILE(COUNT > 0 OR STRPVFC = 1);
     1951      981    2             IF COUNT > 4 THEN
     1952      982    2                MOVE=4;
     1953      983    2             ELSE
     1954      984    2                MOVE=COUNT;
     1955      985
     1956      986    2             IF STRPVFC = 1 THEN
     1957      987    3                DO;   /* NEED VFC CHAR */
     1958      988    3                CALL INSERT(TEMP_WORD, 0, 1, F$DCB.VFCCHAR);
     1959      989    3                CALL INSERT(TEMP_WORD, 1, 3,
     1960      990    3                   SUBSTR(BUF$->BASED_WORD, 0, MOVE-1));
     1961      991    3                END;  /* NEED VFC CHAR */
     1962      992    2             ELSE
     1963      993    2                CALL INSERT(TEMP_WORD, 0, 4,
     1964      994    2                   SUBSTR(BUF$->BASED_WORD, 0, MOVE));
     1965      995
     1966      996    2             CALL FMD$DECRYPT(TEMP_WORD$, 1, ISEED, F$DCB.CSEED, FAK);
     1967      997
     1968      998    2             IF STRPVFC = 1 THEN
     1969      999    3                DO;   /* STRIP VFC */
     1970     1000    3                CALL INSERT(F$DCB.VFCCHAR, 0, 1, SUBSTR(TEMP_WORD, 0, 1));
     1971     1001    3                IF MOVE > 0 THEN
     1972     1002    3                   CALL INSERT(BUF$->BASED_WORD, 0, MOVE-1, SUBSTR(TEMP_WORD, 1, MOVE))
              1002                            ;
     1973     1003    3                BUF$=PINCRC(BUF$, 3);
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:351  
     1974     1004    3                COUNT=COUNT-3;
     1975     1005    3                END;  /* STRIP VFC */
     1976     1006    2             ELSE
     1977     1007    3                DO;   /* DONT STRIP VFC */
     1978     1008    3                CALL INSERT(BUF$->BASED_WORD, 0, MOVE, TEMP_WORD);
     1979     1009    3                BUF$=PINCRW(BUF$, 1);
     1980     1010    3                COUNT=COUNT-4;
     1981     1011    3                END;  /* DONT STRIP VFC */
     1982     1012    2             FAK=0;
     1983     1013    2             STRPVFC=0;
     1984     1014    2          END;  /* WHILE */
     1985     1015
     1986     1016    1          F$DCB.DECRYPT='0'B;
     1987     1017    1          RETURN;
     1988     1018    1          END FMD$DECRYPT_BUFFER;
     1989     1019               %EOD;

PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:352  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$DECRYPT_BUFFER.

   Procedure FMD$DECRYPT_BUFFER requires 114 words for executable code.
   Procedure FMD$DECRYPT_BUFFER requires 20 words of local(AUTO) storage.

PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:353  

 Object Unit name= FMD$DECRYPT_BUFFER                         File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:41:40.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   114    162  FMD$DECRYPT_BUFFER
    1  RoData even  none     2      2  FMD$DECRYPT_BUFFER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  FMD$DECRYPT_BUFFER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 FMD$DECRYPT
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                B$PS2$                                B$PS0$
     B_VECTNIL
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:354  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:355  


     1901        1        /*T***********************************************************/
     1902        2        /*T*                                                         */
     1903        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1904        4        /*T*                                                         */
     1905        5        /*T***********************************************************/
     1906        6        FMD$DECRYPT_BUFFER: PROC(PSEED);

      6  0 000000   000000 700200 xent  FMD$DECRYPT* TSX0  ! X66_AUTO_1
         0 000001   000024 000001                    ZERO    20,1

     1907        7    1          DCL PSEED UBIN;
     1908        8        /* */
     1909        9               %INCLUDE B$JIT;
     1910      612               %INCLUDE F$CP6V_C;
     1911      838               %MACRO F$DCB(BASED=BASED);
     1912      839               %INCLUDE F$DCB;
     1913      888               %MEND;
     1914      889        /* */
     1915      890               %F$DCB(BASED="BASED(JDCB$)");
     1916      940               %FPT$READ_V(BASED="BASED(B$PS0$)");
     1917      947        /* */
     1918      948    1          DCL JDCB$ PTR;
     1919      949    1          DCL MOVE UBIN;
     1920      950    1          DCL COUNT SBIN;
     1921      951    1          DCL BUF$ PTR;
     1922      952    1          DCL ISEED UBIN;
     1923      953    1          DCL TEMP_WORD CHAR(4);
     1924      954    1          DCL TEMP_WORD$ PTR;
     1925      955    1          DCL FAK UBIN;
     1926      956    1          DCL STRPVFC UBIN;
     1927      957        /* */
     1928      958    1          DCL BASED_WORD CHAR(4) CALIGNED BASED;
     1929      959        /* */
     1930      960    1          DCL B$JIT$ PTR SYMREF;
     1931      961    1          DCL B$PS2$ PTR SYMREF;
     1932      962    1          DCL B$PS0$ PTR SYMREF;
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:356  
     1933      963        /* */
     1934      964    1          DCL FMD$DECRYPT ENTRY(5);
     1935      965        /* */
     1936      966    1          JDCB$=B$JIT.DCB$;

    966  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200004 756100                    STQ     JDCB$,,AUTO

     1937      967    1          IF PSEED ~= 0 THEN

    967  0 000005   200003 471500                    LDP1    @PSEED,,AUTO
         0 000006   100000 235100                    LDA     0,,PR1
         0 000007   000012 600000 0                  TZE     s:970

     1938      968    1             ISEED = PSEED;

    968  0 000010   200010 755100                    STA     ISEED,,AUTO
         0 000011   000015 710000 0                  TRA     s:971

     1939      969    1          ELSE
     1940      970    1             ISEED = BITBIN(F$DCB.SEED);

    970  0 000012   200004 473500                    LDP3    JDCB$,,AUTO
         0 000013   300062 235100                    LDA     50,,PR3
         0 000014   200010 755100                    STA     ISEED,,AUTO

     1941      971    1          COUNT=F$DCB.ARS;

    971  0 000015   200004 473500                    LDP3    JDCB$,,AUTO
         0 000016   300000 235100                    LDA     0,,PR3
         0 000017   200006 755100                    STA     COUNT,,AUTO

     1942      972    1          FAK=1;

    972  0 000020   000001 235007                    LDA     1,DL
         0 000021   200013 755100                    STA     FAK,,AUTO
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:357  

     1943      973    1          BUF$=B$PS2$;

    973  0 000022   000000 236000 xsym               LDQ     B$PS2$
         0 000023   200007 756100                    STQ     BUF$,,AUTO

     1944      974    1          IF FPT$READ_V.STRPVFC AND F$DCB.DVBYTE.VFC THEN

    974  0 000024   000000 474400 xsym               LDP4    B$PS0$
         0 000025   400003 236100                    LDQ     3,,PR4
         0 000026   000400 316003                    CANQ    256,DU
         0 000027   000035 600000 0                  TZE     s:977
         0 000030   300003 236100                    LDQ     3,,PR3
         0 000031   100000 316003                    CANQ    32768,DU
         0 000032   000035 600000 0                  TZE     s:977

     1945      975    1             STRPVFC=1;

    975  0 000033   200014 755100                    STA     STRPVFC,,AUTO
         0 000034   000036 710000 0                  TRA     s:978

     1946      976    1          ELSE
     1947      977    1             STRPVFC=0;

    977  0 000035   200014 450100                    STZ     STRPVFC,,AUTO

     1948      978    1          TEMP_WORD$=ADDR(TEMP_WORD);

    978  0 000036   200011 635500                    EPPR5   TEMP_WORD,,AUTO
         0 000037   200012 455500                    STP5    TEMP_WORD$,,AUTO

     1949      979
     1950      980    2          DO WHILE(COUNT > 0 OR STRPVFC = 1);

    980  0 000040   000151 710000 0                  TRA     s:1014

     1951      981    2             IF COUNT > 4 THEN
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:358  

    981  0 000041   200006 235100                    LDA     COUNT,,AUTO
         0 000042   000004 115007                    CMPA    4,DL
         0 000043   000047 604400 0                  TMOZ    s:984

     1952      982    2                MOVE=4;

    982  0 000044   000004 236007                    LDQ     4,DL
         0 000045   200005 756100                    STQ     MOVE,,AUTO
         0 000046   000050 710000 0                  TRA     s:986

     1953      983    2             ELSE
     1954      984    2                MOVE=COUNT;

    984  0 000047   200005 755100                    STA     MOVE,,AUTO

     1955      985
     1956      986    2             IF STRPVFC = 1 THEN

    986  0 000050   200014 236100                    LDQ     STRPVFC,,AUTO
         0 000051   000001 116007                    CMPQ    1,DL
         0 000052   000065 601000 0                  TNZ     s:993

     1957      987    3                DO;   /* NEED VFC CHAR */

     1958      988    3                CALL INSERT(TEMP_WORD, 0, 1, F$DCB.VFCCHAR);

    988  0 000053   200004 470500                    LDP0    JDCB$,,AUTO
         0 000054   000056 236100                    LDQ     46,,PR0
         0 000055   200011 552140                    STBQ    TEMP_WORD,'40'O,AUTO

     1959      989    3                CALL INSERT(TEMP_WORD, 1, 3,

    989  0 000056   200005 720100                    LXL0    MOVE,,AUTO
         0 000057   777777 621010                    EAX1    -1,X0
         0 000060   200007 471500                    LDP1    BUF$,,AUTO
         0 000061   040100 100540                    MLR     fill='040'O
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:359  
         0 000062   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         0 000063   200011 200003                    ADSC9   TEMP_WORD,,AUTO          cn=1,n=3

     1960      990    3                   SUBSTR(BUF$->BASED_WORD, 0, MOVE-1));
     1961      991    3                END;  /* NEED VFC CHAR */

    991  0 000064   000072 710000 0                  TRA     s:996

     1962      992    2             ELSE
     1963      993    2                CALL INSERT(TEMP_WORD, 0, 4,

    993  0 000065   200007 470500                    LDP0    BUF$,,AUTO
         0 000066   200005 720100                    LXL0    MOVE,,AUTO
         0 000067   040100 100540                    MLR     fill='040'O
         0 000070   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         0 000071   200011 000004                    ADSC9   TEMP_WORD,,AUTO          cn=0,n=4

     1964      994    2                   SUBSTR(BUF$->BASED_WORD, 0, MOVE));
     1965      995
     1966      996    2             CALL FMD$DECRYPT(TEMP_WORD$, 1, ISEED, F$DCB.CSEED, FAK);

    996  0 000072   200013 630500                    EPPR0   FAK,,AUTO
         0 000073   200022 450500                    STP0    STRPVFC+6,,AUTO
         0 000074   200004 236100                    LDQ     JDCB$,,AUTO
         0 000075   000072 036003                    ADLQ    58,DU
         0 000076   200021 756100                    STQ     STRPVFC+5,,AUTO
         0 000077   200010 631500                    EPPR1   ISEED,,AUTO
         0 000100   200020 451500                    STP1    STRPVFC+4,,AUTO
         0 000101   000000 236000 1                  LDQ     0
         0 000102   200017 756100                    STQ     STRPVFC+3,,AUTO
         0 000103   200012 633500                    EPPR3   TEMP_WORD$,,AUTO
         0 000104   200016 453500                    STP3    STRPVFC+2,,AUTO
         0 000105   200016 630500                    EPPR0   STRPVFC+2,,AUTO
         0 000106   000023 631400 xsym               EPPR1   B_VECTNIL+19
         0 000107   000000 701000 xent               TSX1    FMD$DECRYPT
         0 000110   000000 011000                    NOP     0

PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:360  
     1967      997
     1968      998    2             IF STRPVFC = 1 THEN

    998  0 000111   200014 235100                    LDA     STRPVFC,,AUTO
         0 000112   000001 115007                    CMPA    1,DL
         0 000113   000135 601000 0                  TNZ     s:1008

     1969      999    3                DO;   /* STRIP VFC */

     1970     1000    3                CALL INSERT(F$DCB.VFCCHAR, 0, 1, SUBSTR(TEMP_WORD, 0, 1));

   1000  0 000114   200004 470500                    LDP0    JDCB$,,AUTO
         0 000115   200011 236100                    LDQ     TEMP_WORD,,AUTO
         0 000116   000056 552140                    STBQ    46,'40'O,PR0

     1971     1001    3                IF MOVE > 0 THEN

   1001  0 000117   200005 235100                    LDA     MOVE,,AUTO
         0 000120   000127 600000 0                  TZE     s:1003

     1972     1002    3                  CALL INSERT(BUF$->BASED_WORD, 0, MOVE-1, SUBSTR(TEMP_WORD, 1, MOVE))
              1002                            ;

   1002  0 000121   777777 620005                    EAX0    -1,AL
         0 000122   000000 621005                    EAX1    0,AL
         0 000123   200007 471500                    LDP1    BUF$,,AUTO
         0 000124   040140 100540                    MLR     fill='040'O
         0 000125   200011 200011                    ADSC9   TEMP_WORD,,AUTO          cn=1,n=*X1
         0 000126   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1973     1003    3                BUF$=PINCRC(BUF$, 3);

   1003  0 000127   200007 236100                    LDQ     BUF$,,AUTO
         0 000130   600000 036007                    ADLQ    -65536,DL
         0 000131   200007 756100                    STQ     BUF$,,AUTO

     1974     1004    3                COUNT=COUNT-3;
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:361  

   1004  0 000132   000003 336007                    LCQ     3,DL
         0 000133   200006 056100                    ASQ     COUNT,,AUTO

     1975     1005    3                END;  /* STRIP VFC */

   1005  0 000134   000147 710000 0                  TRA     s:1012

     1976     1006    2             ELSE
     1977     1007    3                DO;   /* DONT STRIP VFC */

     1978     1008    3                CALL INSERT(BUF$->BASED_WORD, 0, MOVE, TEMP_WORD);

   1008  0 000135   200007 470500                    LDP0    BUF$,,AUTO
         0 000136   200005 720100                    LXL0    MOVE,,AUTO
         0 000137   040140 100500                    MLR     fill='040'O
         0 000140   200011 000004                    ADSC9   TEMP_WORD,,AUTO          cn=0,n=4
         0 000141   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     1979     1009    3                BUF$=PINCRW(BUF$, 1);

   1009  0 000142   200007 236100                    LDQ     BUF$,,AUTO
         0 000143   000001 036003                    ADLQ    1,DU
         0 000144   200007 756100                    STQ     BUF$,,AUTO

     1980     1010    3                COUNT=COUNT-4;

   1010  0 000145   000004 336007                    LCQ     4,DL
         0 000146   200006 056100                    ASQ     COUNT,,AUTO

     1981     1011    3                END;  /* DONT STRIP VFC */

     1982     1012    2             FAK=0;

   1012  0 000147   200013 450100                    STZ     FAK,,AUTO

     1983     1013    2             STRPVFC=0;
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:362  

   1013  0 000150   200014 450100                    STZ     STRPVFC,,AUTO

     1984     1014    2          END;  /* WHILE */

   1014  0 000151   200006 235100                    LDA     COUNT,,AUTO
         0 000152   000041 605400 0                  TPNZ    s:981
         0 000153   200014 236100                    LDQ     STRPVFC,,AUTO
         0 000154   000001 116007                    CMPQ    1,DL
         0 000155   000041 600000 0                  TZE     s:981

     1985     1015
     1986     1016    1          F$DCB.DECRYPT='0'B;

   1016  0 000156   200004 470500                    LDP0    JDCB$,,AUTO
         0 000157   000001 236000 1                  LDQ     1
         0 000160   000102 356100                    ANSQ    66,,PR0

     1987     1017    1          RETURN;

   1017  0 000161   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000   777777 776777                                    ........
     1988     1018    1          END FMD$DECRYPT_BUFFER;
     1989     1019               %EOD;

PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:363  
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$DECRYPT_BUFFER.
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:364  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PSEED                     7-0-0/w PTR         r     1 BUF$
     6-0-0/w SBIN        r     1 COUNT                     13-0-0/w UBIN        r     1 FAK
    10-0-0/w UBIN        r     1 ISEED                      4-0-0/w PTR         r     1 JDCB$
     5-0-0/w UBIN        r     1 MOVE                      *0-0-0/w UBIN        r     1 PSEED
    14-0-0/w UBIN        r     1 STRPVFC                   11-0-0/c CHAR(4)     r     1 TEMP_WORD
    12-0-0/w PTR         r     1 TEMP_WORD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$PS2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/c CHAR(4)     r     1 BASED_WORD
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/d STRC(216)   r     1 FPT$READ_V


   Procedure FMD$DECRYPT_BUFFER requires 114 words for executable code.
   Procedure FMD$DECRYPT_BUFFER requires 20 words of local(AUTO) storage.
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:365  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:366  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       430**DCL       430--REDEF
B$JIT.DCB$
       504**DCL       966>>ASSIGN
B$JIT.ERR.MID
       337**DCL       337--REDEF
B$JIT.JRESPEAK
       498**DCL       499--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       607**DCL       607--REDEF     608--REDEF
B$JIT.PNR
       511**DCL       511--REDEF
B$JIT.TSLINE
       605**DCL       606--REDEF
B$JIT$
       960**DCL       331--IMP-PTR   966>>ASSIGN
B$PS0$
       962**DCL       941--IMP-PTR   974>>IF
B$PS2$
       961**DCL       973>>ASSIGN
BASED_WORD
       958**DCL       989>>CALLBLT   993>>CALLBLT  1002<<CALLBLT  1008<<CALLBLT
BUF$
       951**DCL       973<<ASSIGN    989>>CALLBLT   993>>CALLBLT  1002>>CALLBLT  1003<<ASSIGN   1003>>ASSIGN
      1008>>CALLBLT  1009<<ASSIGN   1009>>ASSIGN
COUNT
       950**DCL       971<<ASSIGN    980>>DOWHILE   981>>IF        984>>ASSIGN   1004<<ASSIGN   1004>>ASSIGN
      1010<<ASSIGN   1010>>ASSIGN
F$DCB.ACTPOS
       916**DCL       916--REDEF
F$DCB.ARS
       891**DCL       891--REDEF     971>>ASSIGN
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:367  
F$DCB.ATTR
       909**DCL       910--REDEF
F$DCB.BORROW
       924**DCL       924--REDEF     924--REDEF     924--REDEF
F$DCB.CSEED
       928**DCL       996<>CALL
F$DCB.DCBNAME.L
       938**DCL       938--IMP-SIZ
F$DCB.DECRYPT
       931**DCL      1016<<ASSIGN
F$DCB.DVBYTE.VFC
       894**DCL       974>>IF
F$DCB.EOMCHAR
       895**DCL       895--REDEF
F$DCB.FLDID
       919**DCL       919--REDEF
F$DCB.FORM$
       913**DCL       913--REDEF
F$DCB.FSECT
       929**DCL       929--REDEF
F$DCB.FSN
       906**DCL       906--REDEF     906--REDEF     907--REDEF
F$DCB.HEADER$
       912**DCL       912--REDEF
F$DCB.IXTNSIZE
       910**DCL       910--REDEF
F$DCB.LASTSTA$
       900**DCL       900--REDEF
F$DCB.LVL
       925**DCL       925--REDEF
F$DCB.NAME.C
       900**DCL       900--REDEF
F$DCB.NOEOF
       921**DCL       921--REDEF
F$DCB.NRECS
       911**DCL       911--REDEF
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:368  
F$DCB.NRECX
       930**DCL       930--REDEF
F$DCB.OHDR
       922**DCL       922--REDEF
F$DCB.ORG
       905**DCL       905--REDEF
F$DCB.PRECNO
       928**DCL       928--REDEF
F$DCB.RCSZ
       933**DCL       933--REDEF
F$DCB.RES
       901**DCL       901--REDEF
F$DCB.SEED
       919**DCL       970>>ASSIGN
F$DCB.SETX
       913**DCL       913--REDEF
F$DCB.TAB$
       912**DCL       913--REDEF
F$DCB.TDA
       927**DCL       927--REDEF
F$DCB.VFCCHAR
       915**DCL       988>>CALLBLT  1000<<CALLBLT
F$DCB.WSN
       902**DCL       902--REDEF
FAK
       955**DCL       972<<ASSIGN    996<>CALL     1012<<ASSIGN
FMD$DECRYPT
       964**DCL-ENT   996--CALL
FPT$READ_V.DVBYTE.REREAD
       943**DCL       944--REDEF
FPT$READ_V.INDX
       943**DCL       943--REDEF
FPT$READ_V.STRPVFC
       944**DCL       974>>IF
ISEED
       952**DCL       968<<ASSIGN    970<<ASSIGN    996<>CALL
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:369  
JDCB$
       948**DCL       891--IMP-PTR   966<<ASSIGN    970>>ASSIGN    971>>ASSIGN    974>>IF        988>>CALLBLT
       996>>CALL     1000>>CALLBLT  1016>>ASSIGN
MOVE
       949**DCL       982<<ASSIGN    984<<ASSIGN    989>>CALLBLT   993>>CALLBLT  1001>>IF       1002>>CALLBLT
      1002>>CALLBLT  1008>>CALLBLT
PSEED
         7**DCL         6--PROC      967>>IF        968>>ASSIGN
STRPVFC
       956**DCL       975<<ASSIGN    977<<ASSIGN    980>>DOWHILE   986>>IF        998>>IF       1013<<ASSIGN
TEMP_WORD
       953**DCL       978--ASSIGN    988<<CALLBLT   989<<CALLBLT   993<<CALLBLT  1000>>CALLBLT  1002>>CALLBLT
      1008>>CALLBLT
TEMP_WORD$
       954**DCL       978<<ASSIGN    996<>CALL
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:370  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #008=FMD$DECRYPT_BUFFER File=FMD$BUF.:E05TSI                       TUE 07/29/97 16:41 Page:371  
              MINI UREF LISTING

FMD$DECRYPT_BUFFER       6**PROC

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:372  
     1990        1        /*T***********************************************************/
     1991        2        /*T*                                                         */
     1992        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1993        4        /*T*                                                         */
     1994        5        /*T***********************************************************/
     1995        6        /*F*     NAME:     FMD$CHKFIELD
     1996        7                 PURPOSE:  To check key fields in a record or key buffer for
     1997        8                           an operation on an IREL file.
     1998        9        */
     1999       10        /*D*     NAME:     FMD$CHKFIELD
     2000       11                 CALL:     CALL FMD$CHKFIELD(F$, FTYP) ALTRET(ERR);
     2001       12                 INPUT:    F$   - Pointer to record or key
     2002       13                           FTYP - Type of field to check (record or key).
     2003       14                                  (See FM_FIELD_C for equates.)
     2004       15                 OUTPUT:   Validated key buffer or key fields.
     2005       16                 DESCRIPTION:
     2006       17                 If we're checking a key buffer, we need to know which
     2007       18                 fields are used for that particular key.  So, we set up the
     2008       19                 structures to access the list of fields for the key.  If
     2009       20                 we're checking the key fields in a record buffer, we only
     2010       21                 need to set up the RECFIELD, FIELD_START, and KFIELD
     2011       22                 structures to be able to access all the key fields.
     2012       23
     2013       24                 Loop through, checking all fields in the key buffer or all
     2014       25                 the key fields in the record.  If this is a key buffer, we
     2015       26                 have to be able to check partial keys (keys missing some
     2016       27                 fields at the end).  After setting up the start and length,
     2017       28                 check the field.  Since fields with data types NO, TEXTC,
     2018       29                 TEXTH, LIST, and VLIST cannot be used in keys, we
     2019       30                 don't need to check those.  We also don't need to check
     2020       31                 fields with data types CHAR, SFLT, DFLT, UBIN, SBIN, or
     2021       32                 UTS since they won't cause us to fault.  So, the only fields
     2022       33                 we actually validate have decimal data types.
     2023       34        */
     2024       35        FMD$CHKFIELD: PROC(F$, FTYP) ALTRET;
     2025       36    1          DCL F$ PTR;
     2026       37    1          DCL FTYP UBIN;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:373  
     2027       38        /* */
     2028       39               %INCLUDE B$JIT;
     2029      642               %MACRO F$DCB(BASED=BASED);
     2030      643               %INCLUDE F$DCB;
     2031      692               %MEND;
     2032      693               %INCLUDE F$CP6V_C;
     2033      919               %INCLUDE CP_6_SUBS;
     2034     1459               %INCLUDE F_MACROS_C;
     2035     1470               %INCLUDE F_ERRORS_C;
     2036     1710               %INCLUDE FM_FIELD_C;
     2037     1751               %INCLUDE B$OBJECT_C;
     2038     5181        /* */
     2039     5182               %F$DCB(BASED="BASED(JDCB$)");
     2040     5232               %VLP$RECFIELD_V(FPTN=RECFIELD, BASED="BASED(RECFIELD$)");
     2041     5269               %FM$FIELD_START(FPTN=FIELD_START, STCLASS="BASED(START$)");
     2042     5291               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
     2043     5298               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
     2044     5301               %VREBL_DATATYPES;
     2045     5376        /* */
     2046     5377               %SUB FCG#='0615'O;
     2047     5378               %SUB MID#='04'O;
     2048     5379               %ERRCODE(NAME=ERRBADRFIELD, COD#=%E$BADRFIELD);
     2049     5383               %ERRCODE(NAME=ERRBADIRKEY, COD#=%E$BADIRKEY);
     2050     5387               %ERRCODE(NAME=ERRINDBC, COD#=%E$INDBC);
     2051     5391        /* */
     2052     5392    1          DCL B$JIT$ PTR SYMREF READONLY;
     2053     5393    1          DCL B$ROSEG$ PTR SYMREF READONLY;
     2054     5394        /* */
     2055     5395    1          DCL HFF$DSIZ ENTRY(2);
     2056     5396        /* */
     2057     5397               %INCLUDE B$TABLES_C;
     2058     5505               %B$SR_NON_DEC(NAME=DTABLE);
     2059     5509    1          DCL PTABLE(0:511) UBIN(9) CALIGNED CONSTANT INIT(
     2060     5510    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 0 - 15 */
     2061     5511    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 16 - 31 */
     2062     5512    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 32 - 47 */
     2063     5513    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 48 - 63 */
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:374  
     2064     5514    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 64 - 79 */
     2065     5515    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 80 - 95 */
     2066     5516    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 96 - 111 */
     2067     5517    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 112 - 127 */
     2068     5518    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 128 - 143 */
     2069     5519    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 144 - 159 */
     2070     5520    1             1*352);
     2071     5521        /* */
     2072     5522    1          DCL REC(0:0) CHAR(1) BASED(FIELD$);
     2073     5523    1          DCL FIELD CHAR(NCHARS) BASED(FIELD$);
     2074     5524        /* */
     2075     5525    1          DCL JDCB$ PTR;
     2076     5526    1          DCL RECFIELD$ PTR;
     2077     5527    1          DCL START$ PTR;
     2078     5528    1          DCL ALTKEY$ PTR;
     2079     5529    1          DCL KFIELD$ PTR;
     2080     5530    1          DCL KEYSIZE UBIN;
     2081     5531    1          DCL N UBIN;
     2082     5532    1          DCL FN UBIN;
     2083     5533    1          DCL F UBIN;
     2084     5534    1          DCL FIRST UBIN;
     2085     5535    1          DCL START UBIN;
     2086     5536    1          DCL NEW_START UBIN;
     2087     5537    1          DCL LEN UBIN;
     2088     5538    1          DCL NCHARS UBIN;
     2089     5539    1          DCL BOUNDRY UBIN;
     2090     5540    1          DCL NDIG UBIN;
     2091     5541    1          DCL I UBIN;
     2092     5542    1          DCL DUMMY UBIN;
     2093     5543    1          DCL FIELD$ PTR;
     2094     5544    1          DCL 1 BYT,
     2095     5545    1               2 HBIT UBIN(1) UNAL,
     2096     5546    1               2 UPPER UBIN(4) UNAL,
     2097     5547    1               2 LOWER UBIN(4) UNAL;
     2098     5548    1          DCL BTEMP REDEF BYT UBIN(9) CALIGNED;
     2099     5549    1          DCL PACKED_FIELD BIT(1);
     2100     5550    1          DCL TEMP_START UBIN;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:375  
     2101     5551    1          DCL TEMP_SUM UBIN;
     2102     5552    1          DCL TEMP_CHAR CHAR(1) CALIGNED;
     2103     5553        /* */
     2104     5554               %EQU EVEN=0;
     2105     5555               %EQU ODD=1;
     2106     5556        /* */
     2107     5557    1          JDCB$=B$JIT.DCB$;
     2108     5558    1          RECFIELD$=PINCRW(B$ROSEG$, F$DCB.FIELDX);
     2109     5559    1          START$=PINCRW(B$ROSEG$, F$DCB.STARTX);
     2110     5560    1          KFIELD$=PINCRW(B$ROSEG$, F$DCB.KFIELDX);
     2111     5561
     2112     5562    1          IF FTYP = %FMD_CHKTYP_KEY THEN
     2113     5563    2             DO;   /* DO KEY SETUP */
     2114     5564    2             ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);
     2115     5565    2             CALL HFF$DSIZ(F$, KEYSIZE);
     2116     5566    2             N=IRKEYS.K.NFIELDS(F$DCB.INDX-1);
     2117     5567    2             FIRST=IRKEYS.K.FIRSTFIELD(F$DCB.INDX-1);
     2118     5568    2             NEW_START=0;
     2119     5569    2             END;
     2120     5570    1          ELSE
     2121     5571    1             N=KFIELD.NFIELDS;
     2122     5572
     2123     5573    2   LOOP:  DO FN=0 TO N-1;
     2124     5574    2             PACKED_FIELD=%NO#;
     2125     5575    2             IF FTYP = %FMD_CHKTYP_REC THEN
     2126     5576    3                DO;   /* RECORD */
     2127     5577                     /* Since a field may be used in several keys, we may
     2128     5578                        end up checking some fields more than once. Sigh. */
     2129     5579    3                F=KFIELD.FIELD(FN);
     2130     5580    3                CALL SET_START(F);
     2131     5581    3                CALL SET_LEN(F);
     2132     5582    3                TEMP_START=START;
     2133     5583    3                TEMP_SUM=START+LEN;
     2134     5584    3                IF PACKED_FIELD = %YES# THEN
     2135     5585    4                   DO;   /* PACKED DECIMAL FIELD */
     2136     5586    4                   TEMP_START=(TEMP_START+1)/2;
     2137     5587    4                   TEMP_SUM=(TEMP_SUM+1)/2;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:376  
     2138     5588    4                   END;  /* PACKED DECIMAL FIELD */
     2139     5589
     2140     5590                     /* This check shouldn't fail since F$DCB.UBYTES should
     2141     5591                        have been checked against IRKEYS.MINSIZE before we
     2142     5592                        were called. But, to be safe . . .               */
     2143     5593    3                IF TEMP_SUM > F$DCB.UBYTES THEN
     2144     5594    3                   GOTO REC_TOO_SMALL;
     2145     5595
     2146     5596    3                CALL CHECK_TYPE ALTRET(ERR);
     2147     5597    3                END;  /* RECORD */
     2148     5598    2             ELSE
     2149     5599    3                DO;   /* KEY */
     2150     5600    3                START=NEW_START;
     2151     5601    3                F=KFIELD.FIELD(FN+FIRST);
     2152     5602    3                CALL SET_LEN(F);
     2153     5603    3                CALL CALC_START;
     2154     5604    3                IF START < KEYSIZE THEN
     2155     5605    4                   DO;   /* CHECK FOR FULL KEY SEG */
     2156     5606    4                   IF NEW_START > KEYSIZE THEN
     2157     5607    4                      GOTO ERR;
     2158     5608    4                   END;  /* CHECK FOR FULL KEY SEG */
     2159     5609    3                ELSE
     2160     5610    3                   EXIT LOOP; /* partial key */
     2161     5611
     2162     5612                     /* If the field is packed, convert START to nibbles.
     2163     5613                        This is easy since, in key buffers, all fields must
     2164     5614                        begin on a byte bound.                           */
     2165     5615    3                IF PACKED_FIELD THEN
     2166     5616    3                   START=START*2;
     2167     5617    3                CALL CHECK_TYPE ALTRET(ERR);
     2168     5618    3                END;  /* KEY */
     2169     5619
     2170     5620    2          END;  /* DO FN */
     2171     5621
     2172     5622    1          RETURN;
     2173     5623    2   ERR:   IF FTYP = %FMD_CHKTYP_KEY THEN DO;
     2174     5624    2             B$JIT.ERR=ERRBADIRKEY;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:377  
     2175     5625    2             F$DCB.ARS=FN;
     2176     5626    2             END;
     2177     5627    2          ELSE DO;
     2178     5628    2             B$JIT.ERR=ERRBADRFIELD;
     2179     5629    2             F$DCB.ARS=F;
     2180     5630    2             END;
     2181     5631    1          ALTRETURN;
     2182     5632        /*E*   ERROR:      FMD-E$BADRFIELD-2
     2183     5633               MESSAGE: The record contains a bad key field %in %UF%
     2184     5634               MESSAGE1: One of the key fields in the record %in %UF%
     2185     5635                         contains bad data.  This is likely because the field
     2186     5636                         is a decimal field with an illegal decimal value.
     2187     5637                         F$DCB.ARS# contains the index into the RECFIELD field
     2188     5638                         array of the bad field.
     2189     5639        */
     2190     5640        /*E*   ERROR:   FMD-E$BADIRKEY-2
     2191     5641               MESSAGE: The key buffer specified %for %UF% contains a bad key segment
     2192     5642               MESSAGE1: The key buffer specified %for %UF% contains a badly
     2193     5643                         defined field or an incomplete key fragment.  The bad
     2194     5644                         key segment number is in F$DCB.ARS#.
     2195     5645        */
     2196     5646    1   REC_TOO_SMALL:;
     2197     5647    1          B$JIT.ERR=ERRINDBC;
     2198     5648    1          F$DCB.ARS=F;
     2199     5649    1          ALTRETURN;
     2200     5650
     2201     5651        /*E*   ERROR:    FMD-E$INDBC-2
     2202     5652               MESSAGE:  Byte count too small on M$WRITE to IREL file% %UF%
     2203     5653               MESSAGE1: The byte count of the record buffer on an M$WRITE
     2204     5654                         to an IREL file% %UF% was too small to contain all
     2205     5655                         the key(s).  F$DCB.ARS# contains the index into the
     2206     5656                         RECFIELD field array of the first key field not
     2207     5657                         contained in the record.
     2208     5658        */
     2209     5659               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:378  
     2210     5660        /*I*     NAME:     CALC_START
     2211     5661                 PURPOSE:  To calculate the byte offset to the start of a field
     2212     5662                           in a key buffer.
     2213     5663                 DESCRIPTION:
     2214     5664                      If this is a packed decimal field, then the offset is a
     2215     5665                 nibble offset, calculate it in bytes.  Otherwise, just add the
     2216     5666                 byte offset.
     2217     5667        */
     2218     5668    1   CALC_START: PROC;
     2219     5669        /* */
     2220     5670    3          DO CASE(RECFIELD.FIELD.TYPE(F));
     2221     5671    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
     2222     5672    3                  %PDFLT_DATATYPE, %PDLE_DATATYPE, %PDTE_DATATYPE,
     2223     5673    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2224     5674    3                NEW_START=START+(LEN+1)/2;
     2225     5675    3                PACKED_FIELD=%YES#;
     2226     5676
     2227     5677    3             CASE(ELSE);
     2228     5678    3                NEW_START=START+LEN;
     2229     5679
     2230     5680    3          END;  /* CASE */
     2231     5681
     2232     5682    2          RETURN;
     2233     5683    2          END CALC_START;
     2234     5684               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:379  
     2235     5685        /*I*     NAME:     CHECK_TYPE
     2236     5686                 PURPOSE:  To check a field
     2237     5687                 DESCRIPTION:
     2238     5688                      If this is a packed decimal field, then call PACKCHECK.
     2239     5689
     2240     5690                      If this is unpacked decimal, then call UNPACKCHECK.
     2241     5691
     2242     5692                      If this is unpacked floating, then make sure that the
     2243     5693                 exponent is valid, then call UNPACKCHECK to check the rest.
     2244     5694
     2245     5695                      If this is packed floating, then we need to check the
     2246     5696                 exponent.  This is tricky, because the exponent is two nibbles
     2247     5697                 that can start on any nibble boundary, so it may be split
     2248     5698                 across a byte.
     2249     5699        */
     2250     5700                 %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:380  
     2251     5701    1   CHECK_TYPE: PROC ALTRET;
     2252     5702        /* */
     2253     5703    3          DO CASE(RECFIELD.FIELD.TYPE(F));
     2254     5704    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,
     2255     5705    3                  %PDLE_DATATYPE, %PDTE_DATATYPE ,%DATE_DATATYPE,
     2256     5706    3                  %TIME_DATATYPE);
     2257     5707    3                CALL PACKCHECK ALTRET(ERR);
     2258     5708
     2259     5709    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,
     2260     5710    3                  %UDLO_DATATYPE, %UDTO_DATATYPE);
     2261     5711    3                CALL UNPACKCHECK ALTRET(ERR);
     2262     5712
     2263     5713    3             CASE(%UDFLT_DATATYPE);
     2264     5714    3                FIELD$=PINCRC(F$, START);
     2265     5715    3                TEMP_CHAR=REC(LEN-1);
     2266     5716    3                IF ASCBIN(TEMP_CHAR) > 255 THEN
     2267     5717    3                   ALTRETURN;
     2268     5718    3                LEN=LEN-1;
     2269     5719    3                CALL UNPACKCHECK ALTRET(ERR);
     2270     5720
     2271     5721    3             CASE(%PDFLT_DATATYPE);
     2272     5722    3                FIELD$=PINCRC(F$, START/2);
     2273     5723    3                NCHARS=(LEN+1)/2;
     2274     5724    3                IF MOD(START+LEN, 2) = 0 THEN
     2275     5725    4                   DO;   /* EVEN */
     2276     5726    4                   TEMP_CHAR=REC(NCHARS-1);
     2277     5727    4                   IF ASCBIN(TEMP_CHAR) > 255 THEN
     2278     5728    4                      ALTRETURN;
     2279     5729    4                   END;  /* EVEN */
     2280     5730    3                ELSE
     2281     5731    4                   DO;   /* ODD */
     2282     5732    4                   TEMP_CHAR=REC(NCHARS-1);
     2283     5733    4                   BTEMP=ASCBIN(TEMP_CHAR);
     2284     5734    4                   IF BYT.HBIT = 1 THEN
     2285     5735    4                      ALTRETURN;
     2286     5736    4                   END;  /* ODD */
     2287     5737
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:381  
     2288     5738    3                LEN=LEN-2;
     2289     5739    3                CALL PACKCHECK ALTRET(ERR);
     2290     5740
     2291     5741    3          END;  /* CASE */
     2292     5742
     2293     5743    2          RETURN;
     2294     5744    2   ERR:   ALTRETURN;
     2295     5745    2          END CHECK_TYPE;
     2296     5746               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:382  
     2297     5747        /*I*     NAME:     PACKCHECK
     2298     5748                 PURPOSE:  To check packed decimal fields
     2299     5749                 DESCRIPTION:
     2300     5750                      Point to the byte start of the field, and determine if the
     2301     5751                 nibble is on an even or odd boundary, same thing for the length.
     2302     5752
     2303     5753                      Next, check the sign.  Find the nibble that contains the
     2304     5754                 sign.  The sign must be greater than or equal to 10.
     2305     5755
     2306     5756                      Now, check the number itself.  We want the number to begin
     2307     5757                 and end on a byte boundary, so if the first or last digits are on
     2308     5758                 odd nibble boundaries, check these.
     2309     5759
     2310     5760                      The SEARCH call will now check the remainder of the string
     2311     5761                 against a table of all possible legal bytes that can contain legal
     2312     5762                 decimal values.
     2313     5763        */
     2314     5764                 %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:383  
     2315     5765    1   PACKCHECK: PROC ALTRET;
     2316     5766        /* */
     2317     5767    2          FIELD$=PINCRC(F$, START/2);
     2318     5768
     2319     5769    2          IF MOD(START, 2) = 0 THEN
     2320     5770    2             BOUNDRY=%EVEN;
     2321     5771    2          ELSE
     2322     5772    2             BOUNDRY=%ODD;
     2323     5773
     2324     5774    2          IF MOD(LEN, 2) = 0 THEN
     2325     5775    2             NDIG=%EVEN;
     2326     5776    2          ELSE
     2327     5777    2             NDIG=%ODD;
     2328     5778
     2329     5779    3          DO CASE(RECFIELD.FIELD.TYPE(F));
     2330     5780    3             CASE(%PDLA_DATATYPE, %PDFLT_DATATYPE, %PDLE_DATATYPE,
     2331     5781    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2332     5782    3                TEMP_CHAR=REC(0);
     2333     5783    3                BTEMP=ASCBIN(TEMP_CHAR);
     2334     5784    3                IF BOUNDRY = %EVEN THEN
     2335     5785    4                   DO;   /* EVEN BOUNDRY */
     2336     5786    4                   IF BYT.UPPER < 10 THEN
     2337     5787    4                      ALTRETURN;
     2338     5788    4                   END;  /* EVEN BOUNDRY */
     2339     5789    3                ELSE
     2340     5790    4                   DO;   /* ODD BOUNDRY  */
     2341     5791    4                   IF BYT.LOWER < 10 THEN
     2342     5792    4                      ALTRETURN;
     2343     5793    4                   END;  /* ODD BOUNDRY  */
     2344     5794
     2345     5795    3                LEN=LEN-1;
     2346     5796    3                START=START+1;
     2347     5797
     2348     5798    3             CASE(%PDTA_DATATYPE, %PDTE_DATATYPE);
     2349     5799    3                TEMP_CHAR=REC((LEN+1)/2-1);
     2350     5800    3                BTEMP=ASCBIN(TEMP_CHAR);
     2351     5801    3                IF MOD(BOUNDRY+NDIG, 2) = %EVEN THEN
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:384  
     2352     5802    4                   DO;   /* EVEN */
     2353     5803    4                   IF BYT.LOWER < 10 THEN
     2354     5804    4                      ALTRETURN;
     2355     5805    4                   END;  /* EVEN */
     2356     5806    3                ELSE
     2357     5807    4                   DO;   /* ODD  */
     2358     5808    4                   IF BYT.UPPER < 10 THEN
     2359     5809    4                      ALTRETURN;
     2360     5810    4                   END;  /* ODD  */
     2361     5811
     2362     5812    3                LEN=LEN-1;
     2363     5813
     2364     5814    3          END;  /* CASE */
     2365     5815
     2366     5816    2          FIELD$=PINCRC(F$, START/2);
     2367     5817
     2368     5818    2          IF MOD(START, 2) = 1 THEN
     2369     5819    3             DO;   /* CHECK FIRST DIGIT */
     2370     5820    3             TEMP_CHAR=REC(0);
     2371     5821    3             BTEMP=ASCBIN(TEMP_CHAR);
     2372     5822    3             IF BYT.LOWER > 9 THEN
     2373     5823    3                ALTRETURN;
     2374     5824    3             START=START+1;
     2375     5825    3             FIELD$=PINCRC(FIELD$, 1);
     2376     5826    3             LEN=LEN-1;
     2377     5827    3             END;  /* CHECK FIRST DIGIT */
     2378     5828
     2379     5829    2          IF MOD(LEN, 2) = 1 THEN
     2380     5830    3             DO;   /* CHECK LAST */
     2381     5831    3             TEMP_CHAR=REC((LEN+1)/2-1);
     2382     5832    3             BTEMP=ASCBIN(TEMP_CHAR);
     2383     5833    3             IF BYT.UPPER > 9 THEN
     2384     5834    3                ALTRETURN;
     2385     5835    3             IF BYT.HBIT = 1 THEN
     2386     5836    3                ALTRETURN;
     2387     5837    3             LEN=LEN-1;
     2388     5838    3             END;  /* CHECK LAST */
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:385  
     2389     5839
     2390     5840    2          NCHARS=LEN/2;
     2391     5841    2          IF NCHARS > 0 THEN
     2392     5842    2             CALL SEARCH(I, DUMMY, PTABLE, FIELD);
     2393     5843
     2394     5844    2          IF I < NCHARS THEN
     2395     5845    2             ALTRETURN;
     2396     5846
     2397     5847    2          RETURN;
     2398     5848    2          END PACKCHECK;
     2399     5849               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:386  
     2400     5850        /*I*     NAME:     SET_LEN
     2401     5851                 PURPOSE:  To get the length of a field
     2402     5852                 DESCRIPTION:
     2403     5853                 The length of the field is stored differently depending upon
     2404     5854                 whether the field is a scaled decimal field or not.  If the
     2405     5855                 field is packed decimal, the length will be in nibbles.
     2406     5856                 All other legal key fields must start and end on a byte
     2407     5857                 boundary, so their lengths will either already be in bytes
     2408     5858                 or can be calculated in bytes.
     2409     5859        */
     2410     5860    1   SET_LEN: PROC(FN);
     2411     5861    2          DCL FN UBIN;
     2412     5862        /* */
     2413     5863    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
     2414     5864    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,
     2415     5865    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %PDLA_DATATYPE,
     2416     5866    3                  %PDLE_DATATYPE, %PDTA_DATATYPE, %PDTE_DATATYPE,
     2417     5867    3                  %PDNS_DATATYPE, %PDFLT_DATATYPE, %UDFLT_DATATYPE,
     2418     5868    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2419     5869    3                LEN=RECFIELD.DECFIELD.LEN(FN);
     2420     5870
     2421     5871    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);
     2422     5872    3                LEN=RECFIELD.FIELD.LEN(FN)/9;
     2423     5873
     2424     5874    3             CASE(ELSE);
     2425     5875    3                LEN=RECFIELD.FIELD.LEN(FN);
     2426     5876
     2427     5877    3          END;  /* CASE */
     2428     5878
     2429     5879    2          RETURN;
     2430     5880    2          END SET_LEN;
     2431     5881               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:387  
     2432     5882        /*I*     NAME:     SET_START
     2433     5883                 PURPOSE:  To calculate the offset to the start of a field in
     2434     5884                           a record buffer.
     2435     5885                 DESCRIPTION:
     2436     5886                 If the field is packed decimal, calculate the start in
     2437     5887                 nibbles, so we can add it to the nibble length from RECFIELD.
     2438     5888                 All other legal key fields must be byte aligned (and end on
     2439     5889                 a byte boundary), so calculate the start in bytes.
     2440     5890        */
     2441     5891    1   SET_START: PROC(FN);
     2442     5892    2          DCL FN UBIN;
     2443     5893        /* */
     2444     5894    3          DO CASE(RECFIELD.FIELD.TYPE(FN));
     2445     5895    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDLE_DATATYPE,
     2446     5896    3                  %PDTE_DATATYPE, %PDNS_DATATYPE, %PDFLT_DATATYPE,
     2447     5897    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2448     5898    3                IF MOD(FIELD_START.OFFSET(FN),9)=0 THEN
     2449     5899    3                   START=(FIELD_START.OFFSET(FN)/9)*2;
     2450     5900    3                ELSE START=(FIELD_START.OFFSET(FN)/9)*2 + 1;
     2451     5901    3                PACKED_FIELD=%YES#;
     2452     5902
     2453     5903    3             CASE(ELSE);
     2454     5904    3                START=FIELD_START.OFFSET(FN)/9;
     2455     5905
     2456     5906    3          END;
     2457     5907
     2458     5908    2          RETURN;
     2459     5909    2          END SET_START;
     2460     5910               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:388  
     2461     5911        /*I*     NAME:     UNPACKCHECK
     2462     5912                 PURPOSE:  To check unpacked decimal fields
     2463     5913                 DESCRIPTION:
     2464     5914                      First check the sign.  It can either be at the beginning
     2465     5915                 or end of the number depending on the datatype.
     2466     5916
     2467     5917                      Overpunched sign is fun.  A sign and digit is contained in
     2468     5918                 a single byte.  The '{' and '}' are plus and minus 0.  'A' through
     2469     5919                 'I' are plus 1 to 9, and 'J' to 'R' are minus 1 to 9.
     2470     5920
     2471     5921                      Next, the number is check.  This is done by searching the
     2472     5922                 string against a table of all possible decimal values.  In this
     2473     5923                 case, this means the string can only contain the characters
     2474     5924                 '0' through '9'.
     2475     5925        */
     2476     5926                 %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:389  
     2477     5927    1   UNPACKCHECK: PROC ALTRET;
     2478     5928        /* */
     2479     5929    2          FIELD$=PINCRC(F$, START);
     2480     5930    2          NCHARS=LEN;
     2481     5931
     2482     5932    3          DO CASE(RECFIELD.FIELD.TYPE(F));
     2483     5933    3             CASE(%UDLS_DATATYPE, %UDFLT_DATATYPE);
     2484     5934    3                IF REC(0) ~= '+' AND REC(0) ~= '-' THEN
     2485     5935    3                   ALTRETURN;
     2486     5936    3                FIELD$=PINCRC(FIELD$, 1);
     2487     5937    3                NCHARS=NCHARS-1;
     2488     5938
     2489     5939    3             CASE(%UDTS_DATATYPE);
     2490     5940    3                IF REC(NCHARS-1) ~= '+' AND REC(NCHARS-1) ~= '-' THEN
     2491     5941    3                   ALTRETURN;
     2492     5942    3                NCHARS=NCHARS-1;
     2493     5943
     2494     5944    3             CASE(%UDLO_DATATYPE);
     2495     5945    3                IF REC(0) ~= '{' AND REC(0) ~= '}' AND
     2496     5946    3                   (REC(0) < 'A' OR REC(0) > 'R') THEN
     2497     5947    3                   ALTRETURN;
     2498     5948    3                FIELD$=PINCRC(FIELD$, 1);
     2499     5949    3                NCHARS=NCHARS-1;
     2500     5950
     2501     5951    3             CASE(%UDTO_DATATYPE);
     2502     5952    3                IF REC(NCHARS-1) ~= '{' AND REC(NCHARS-1) ~= '}' AND
     2503     5953    3                   (REC(NCHARS-1) < 'A' OR REC(NCHARS-1) > 'R') THEN
     2504     5954    3                   ALTRETURN;
     2505     5955    3                NCHARS=NCHARS-1;
     2506     5956
     2507     5957    3          END;  /* CASE                               */
     2508     5958
     2509     5959    2          CALL SEARCH(I, DUMMY, DTABLE, FIELD);
     2510     5960
     2511     5961    2          IF I < NCHARS THEN
     2512     5962    2             ALTRETURN;
     2513     5963
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:390  
     2514     5964    2          RETURN;
     2515     5965    2          END UNPACKCHECK;
     2516     5966    1          END FMD$CHKFIELD;

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:391  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$CHKFIELD.

   Procedure FMD$CHKFIELD requires 873 words for executable code.
   Procedure FMD$CHKFIELD requires 36 words of local(AUTO) storage.

    No errors detected in file FMD$BUF.:E05TSI    .

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:392  

 Object Unit name= FMD$CHKFIELD                               File name= FMD$BUF.:E05TOU
 UTS= JUL 29 '97 16:41:54.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    131    203  FMD$CHKFIELD
    1   Proc  even  none   873   1551  FMD$CHKFIELD
    2  RoData even  none     6      6  FMD$CHKFIELD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  FMD$CHKFIELD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       2 HFF$DSIZ
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:393  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    B$ROSEG$                         r    B$SR_NON_DEC$
     B_VECTNIL
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:394  


     1990        1        /*T***********************************************************/
     1991        2        /*T*                                                         */
     1992        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1993        4        /*T*                                                         */
     1994        5        /*T***********************************************************/
     1995        6        /*F*     NAME:     FMD$CHKFIELD
     1996        7                 PURPOSE:  To check key fields in a record or key buffer for
     1997        8                           an operation on an IREL file.
     1998        9        */
     1999       10        /*D*     NAME:     FMD$CHKFIELD
     2000       11                 CALL:     CALL FMD$CHKFIELD(F$, FTYP) ALTRET(ERR);
     2001       12                 INPUT:    F$   - Pointer to record or key
     2002       13                           FTYP - Type of field to check (record or key).
     2003       14                                  (See FM_FIELD_C for equates.)
     2004       15                 OUTPUT:   Validated key buffer or key fields.
     2005       16                 DESCRIPTION:
     2006       17                 If we're checking a key buffer, we need to know which
     2007       18                 fields are used for that particular key.  So, we set up the
     2008       19                 structures to access the list of fields for the key.  If
     2009       20                 we're checking the key fields in a record buffer, we only
     2010       21                 need to set up the RECFIELD, FIELD_START, and KFIELD
     2011       22                 structures to be able to access all the key fields.
     2012       23
     2013       24                 Loop through, checking all fields in the key buffer or all
     2014       25                 the key fields in the record.  If this is a key buffer, we
     2015       26                 have to be able to check partial keys (keys missing some
     2016       27                 fields at the end).  After setting up the start and length,
     2017       28                 check the field.  Since fields with data types NO, TEXTC,
     2018       29                 TEXTH, LIST, and VLIST cannot be used in keys, we
     2019       30                 don't need to check those.  We also don't need to check
     2020       31                 fields with data types CHAR, SFLT, DFLT, UBIN, SBIN, or
     2021       32                 UTS since they won't cause us to fault.  So, the only fields
     2022       33                 we actually validate have decimal data types.
     2023       34        */
     2024       35        FMD$CHKFIELD: PROC(F$, FTYP) ALTRET;

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:395  
     35  1 000000   000000 700200 xent  FMD$CHKFIELD TSX0  ! X66_AUTO_2
         1 000001   000044 000002                    ZERO    36,2

     2025       36    1          DCL F$ PTR;
     2026       37    1          DCL FTYP UBIN;
     2027       38        /* */
     2028       39               %INCLUDE B$JIT;
     2029      642               %MACRO F$DCB(BASED=BASED);
     2030      643               %INCLUDE F$DCB;
     2031      692               %MEND;
     2032      693               %INCLUDE F$CP6V_C;
     2033      919               %INCLUDE CP_6_SUBS;
     2034     1459               %INCLUDE F_MACROS_C;
     2035     1470               %INCLUDE F_ERRORS_C;
     2036     1710               %INCLUDE FM_FIELD_C;
     2037     1751               %INCLUDE B$OBJECT_C;
     2038     5181        /* */
     2039     5182               %F$DCB(BASED="BASED(JDCB$)");
     2040     5232               %VLP$RECFIELD_V(FPTN=RECFIELD, BASED="BASED(RECFIELD$)");
     2041     5269               %FM$FIELD_START(FPTN=FIELD_START, STCLASS="BASED(START$)");
     2042     5291               %FMG$IRKEYS(FPTN=IRKEYS, STCLASS="BASED(ALTKEY$)");
     2043     5298               %FMG$KFIELD(FPTN=KFIELD, STCLASS="BASED(KFIELD$)");
     2044     5301               %VREBL_DATATYPES;
     2045     5376        /* */
     2046     5377               %SUB FCG#='0615'O;
     2047     5378               %SUB MID#='04'O;
     2048     5379               %ERRCODE(NAME=ERRBADRFIELD, COD#=%E$BADRFIELD);
     2049     5383               %ERRCODE(NAME=ERRBADIRKEY, COD#=%E$BADIRKEY);
     2050     5387               %ERRCODE(NAME=ERRINDBC, COD#=%E$INDBC);
     2051     5391        /* */
     2052     5392    1          DCL B$JIT$ PTR SYMREF READONLY;
     2053     5393    1          DCL B$ROSEG$ PTR SYMREF READONLY;
     2054     5394        /* */
     2055     5395    1          DCL HFF$DSIZ ENTRY(2);
     2056     5396        /* */
     2057     5397               %INCLUDE B$TABLES_C;
     2058     5505               %B$SR_NON_DEC(NAME=DTABLE);
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:396  
     2059     5509    1          DCL PTABLE(0:511) UBIN(9) CALIGNED CONSTANT INIT(
     2060     5510    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 0 - 15 */
     2061     5511    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 16 - 31 */
     2062     5512    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 32 - 47 */
     2063     5513    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 48 - 63 */
     2064     5514    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 64 - 79 */
     2065     5515    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 80 - 95 */
     2066     5516    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 96 - 111 */
     2067     5517    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 112 - 127 */
     2068     5518    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 128 - 143 */
     2069     5519    1             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, /* 144 - 159 */
     2070     5520    1             1*352);
     2071     5521        /* */
     2072     5522    1          DCL REC(0:0) CHAR(1) BASED(FIELD$);
     2073     5523    1          DCL FIELD CHAR(NCHARS) BASED(FIELD$);
     2074     5524        /* */
     2075     5525    1          DCL JDCB$ PTR;
     2076     5526    1          DCL RECFIELD$ PTR;
     2077     5527    1          DCL START$ PTR;
     2078     5528    1          DCL ALTKEY$ PTR;
     2079     5529    1          DCL KFIELD$ PTR;
     2080     5530    1          DCL KEYSIZE UBIN;
     2081     5531    1          DCL N UBIN;
     2082     5532    1          DCL FN UBIN;
     2083     5533    1          DCL F UBIN;
     2084     5534    1          DCL FIRST UBIN;
     2085     5535    1          DCL START UBIN;
     2086     5536    1          DCL NEW_START UBIN;
     2087     5537    1          DCL LEN UBIN;
     2088     5538    1          DCL NCHARS UBIN;
     2089     5539    1          DCL BOUNDRY UBIN;
     2090     5540    1          DCL NDIG UBIN;
     2091     5541    1          DCL I UBIN;
     2092     5542    1          DCL DUMMY UBIN;
     2093     5543    1          DCL FIELD$ PTR;
     2094     5544    1          DCL 1 BYT,
     2095     5545    1               2 HBIT UBIN(1) UNAL,
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:397  
     2096     5546    1               2 UPPER UBIN(4) UNAL,
     2097     5547    1               2 LOWER UBIN(4) UNAL;
     2098     5548    1          DCL BTEMP REDEF BYT UBIN(9) CALIGNED;
     2099     5549    1          DCL PACKED_FIELD BIT(1);
     2100     5550    1          DCL TEMP_START UBIN;
     2101     5551    1          DCL TEMP_SUM UBIN;
     2102     5552    1          DCL TEMP_CHAR CHAR(1) CALIGNED;
     2103     5553        /* */
     2104     5554               %EQU EVEN=0;
     2105     5555               %EQU ODD=1;
     2106     5556        /* */
     2107     5557    1          JDCB$=B$JIT.DCB$;

   5557  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000232 236100                    LDQ     154,,PR0
         1 000004   200005 756100                    STQ     JDCB$,,AUTO

     2108     5558    1          RECFIELD$=PINCRW(B$ROSEG$, F$DCB.FIELDX);

   5558  1 000005   200005 471500                    LDP1    JDCB$,,AUTO
         1 000006   100054 720100                    LXL0    44,,PR1
         1 000007   000000 636010                    EAQ     0,X0
         1 000010   000000 036000 xsym               ADLQ    B$ROSEG$
         1 000011   200006 756100                    STQ     RECFIELD$,,AUTO

     2109     5559    1          START$=PINCRW(B$ROSEG$, F$DCB.STARTX);

   5559  1 000012   100057 221100                    LDX1    47,,PR1
         1 000013   000000 636011                    EAQ     0,X1
         1 000014   000000 036000 xsym               ADLQ    B$ROSEG$
         1 000015   200007 756100                    STQ     START$,,AUTO

     2110     5560    1          KFIELD$=PINCRW(B$ROSEG$, F$DCB.KFIELDX);

   5560  1 000016   100056 722100                    LXL2    46,,PR1
         1 000017   000000 636012                    EAQ     0,X2
         1 000020   000000 036000 xsym               ADLQ    B$ROSEG$
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:398  
         1 000021   200011 756100                    STQ     KFIELD$,,AUTO

     2111     5561
     2112     5562    1          IF FTYP = %FMD_CHKTYP_KEY THEN

   5562  1 000022   200004 473500                    LDP3    @FTYP,,AUTO
         1 000023   300000 235100                    LDA     0,,PR3
         1 000024   000001 115007                    CMPA    1,DL
         1 000025   000062 601000 1                  TNZ     s:5571

     2113     5563    2             DO;   /* DO KEY SETUP */

     2114     5564    2             ALTKEY$=PINCRW(B$ROSEG$, F$DCB.ALTKEYX);

   5564  1 000026   100052 723100                    LXL3    42,,PR1
         1 000027   000000 636013                    EAQ     0,X3
         1 000030   000000 036000 xsym               ADLQ    B$ROSEG$
         1 000031   200010 756100                    STQ     ALTKEY$,,AUTO

     2115     5565    2             CALL HFF$DSIZ(F$, KEYSIZE);

   5565  1 000032   200012 634500                    EPPR4   KEYSIZE,,AUTO
         1 000033   200043 454500                    STP4    @FN+4,,AUTO
         1 000034   200003 236100                    LDQ     @F$,,AUTO
         1 000035   200042 756100                    STQ     @FN+3,,AUTO
         1 000036   200042 630500                    EPPR0   @FN+3,,AUTO
         1 000037   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000040   000000 701000 xent               TSX1    HFF$DSIZ
         1 000041   000000 011000                    NOP     0

     2116     5566    2             N=IRKEYS.K.NFIELDS(F$DCB.INDX-1);

   5566  1 000042   200005 470500                    LDP0    JDCB$,,AUTO
         1 000043   000077 236100                    LDQ     63,,PR0
         1 000044   000022 772000                    QRL     18
         1 000045   000007 402007                    MPY     7,DL
         1 000046   200010 471500                    LDP1    ALTKEY$,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:399  
         1 000047   177775 236106                    LDQ     -3,QL,PR1
         1 000050   777777 376007                    ANQ     -1,DL
         1 000051   200013 756100                    STQ     N,,AUTO

     2117     5567    2             FIRST=IRKEYS.K.FIRSTFIELD(F$DCB.INDX-1);

   5567  1 000052   000077 236100                    LDQ     63,,PR0
         1 000053   000022 772000                    QRL     18
         1 000054   000007 402007                    MPY     7,DL
         1 000055   177775 236106                    LDQ     -3,QL,PR1
         1 000056   000022 772000                    QRL     18
         1 000057   200016 756100                    STQ     FIRST,,AUTO

     2118     5568    2             NEW_START=0;

   5568  1 000060   200020 450100                    STZ     NEW_START,,AUTO

     2119     5569    2             END;

   5569  1 000061   000065 710000 1                  TRA     LOOP

     2120     5570    1          ELSE
     2121     5571    1             N=KFIELD.NFIELDS;

   5571  1 000062   200011 474500                    LDP4    KFIELD$,,AUTO
         1 000063   400001 235100                    LDA     1,,PR4
         1 000064   200013 755100                    STA     N,,AUTO

     2122     5572
     2123     5573    2   LOOP:  DO FN=0 TO N-1;

   5573  1 000065   200014 450100       LOOP         STZ     FN,,AUTO
         1 000066   000175 710000 1                  TRA     s:5620+3

     2124     5574    2             PACKED_FIELD=%NO#;

   5574  1 000067   200031 450100                    STZ     PACKED_FIELD,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:400  

     2125     5575    2             IF FTYP = %FMD_CHKTYP_REC THEN

   5575  1 000070   200004 470500                    LDP0    @FTYP,,AUTO
         1 000071   000000 235100                    LDA     0,,PR0
         1 000072   000136 601000 1                  TNZ     s:5600

     2126     5576    3                DO;   /* RECORD */

     2127     5577                     /* Since a field may be used in several keys, we may
     2128     5578                        end up checking some fields more than once. Sigh. */
     2129     5579    3                F=KFIELD.FIELD(FN);

   5579  1 000073   200011 471500                    LDP1    KFIELD$,,AUTO
         1 000074   200014 236100                    LDQ     FN,,AUTO
         1 000075   000100 101506                    MRL     fill='000'O
         1 000076   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1
         1 000077   200015 000004                    ADSC9   F,,AUTO                  cn=0,n=4

     2130     5580    3                CALL SET_START(F);

   5580  1 000100   200015 633500                    EPPR3   F,,AUTO
         1 000101   200037 453500                    STP3    TEMP_CHAR+3,,AUTO
         1 000102   001233 701000 1                  TSX1    SET_START
         1 000103   000000 011000                    NOP     0

     2131     5581    3                CALL SET_LEN(F);

   5581  1 000104   200015 630500                    EPPR0   F,,AUTO
         1 000105   200037 450500                    STP0    TEMP_CHAR+3,,AUTO
         1 000106   001100 701000 1                  TSX1    SET_LEN
         1 000107   000000 011000                    NOP     0

     2132     5582    3                TEMP_START=START;

   5582  1 000110   200017 235100                    LDA     START,,AUTO
         1 000111   200032 755100                    STA     TEMP_START,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:401  

     2133     5583    3                TEMP_SUM=START+LEN;

   5583  1 000112   200017 236100                    LDQ     START,,AUTO
         1 000113   200021 036100                    ADLQ    LEN,,AUTO
         1 000114   200033 756100                    STQ     TEMP_SUM,,AUTO

     2134     5584    3                IF PACKED_FIELD = %YES# THEN

   5584  1 000115   200031 234100                    SZN     PACKED_FIELD,,AUTO
         1 000116   000127 605000 1                  TPL     s:5593

     2135     5585    4                   DO;   /* PACKED DECIMAL FIELD */

     2136     5586    4                   TEMP_START=(TEMP_START+1)/2;

   5586  1 000117   200032 236100                    LDQ     TEMP_START,,AUTO
         1 000120   000001 036007                    ADLQ    1,DL
         1 000121   000001 772000                    QRL     1
         1 000122   200032 756100                    STQ     TEMP_START,,AUTO

     2137     5587    4                   TEMP_SUM=(TEMP_SUM+1)/2;

   5587  1 000123   200033 236100                    LDQ     TEMP_SUM,,AUTO
         1 000124   000001 036007                    ADLQ    1,DL
         1 000125   000001 772000                    QRL     1
         1 000126   200033 756100                    STQ     TEMP_SUM,,AUTO

     2138     5588    4                   END;  /* PACKED DECIMAL FIELD */

     2139     5589
     2140     5590                     /* This check shouldn't fail since F$DCB.UBYTES should
     2141     5591                        have been checked against IRKEYS.MINSIZE before we
     2142     5592                        were called. But, to be safe . . .               */
     2143     5593    3                IF TEMP_SUM > F$DCB.UBYTES THEN

   5593  1 000127   200005 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:402  
         1 000130   000076 116100                    CMPQ    62,,PR0
         1 000131   000133 600000 1                  TZE     s:5596
         1 000132   000223 603000 1                  TRC     REC_TOO_SMALL

     2144     5594    3                   GOTO REC_TOO_SMALL;
     2145     5595
     2146     5596    3                CALL CHECK_TYPE ALTRET(ERR);

   5596  1 000133   000342 701000 1                  TSX1    CHECK_TYPE
         1 000134   000201 702000 1                  TSX2    ERR

     2147     5597    3                END;  /* RECORD */

   5597  1 000135   000172 710000 1                  TRA     s:5620

     2148     5598    2             ELSE
     2149     5599    3                DO;   /* KEY */

     2150     5600    3                START=NEW_START;

   5600  1 000136   200020 236100                    LDQ     NEW_START,,AUTO
         1 000137   200017 756100                    STQ     START,,AUTO

     2151     5601    3                F=KFIELD.FIELD(FN+FIRST);

   5601  1 000140   200014 236100                    LDQ     FN,,AUTO
         1 000141   200016 036100                    ADLQ    FIRST,,AUTO
         1 000142   200011 471500                    LDP1    KFIELD$,,AUTO
         1 000143   000100 101506                    MRL     fill='000'O
         1 000144   100002 000001                    ADSC9   2,Q,PR1                  cn=0,n=1
         1 000145   200015 000004                    ADSC9   F,,AUTO                  cn=0,n=4

     2152     5602    3                CALL SET_LEN(F);

   5602  1 000146   200015 633500                    EPPR3   F,,AUTO
         1 000147   200037 453500                    STP3    TEMP_CHAR+3,,AUTO
         1 000150   001100 701000 1                  TSX1    SET_LEN
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:403  
         1 000151   000000 011000                    NOP     0

     2153     5603    3                CALL CALC_START;

   5603  1 000152   000231 701000 1                  TSX1    CALC_START
         1 000153   000000 011000                    NOP     0

     2154     5604    3                IF START < KEYSIZE THEN

   5604  1 000154   200017 236100                    LDQ     START,,AUTO
         1 000155   200012 116100                    CMPQ    KEYSIZE,,AUTO
         1 000156   000200 603000 1                  TRC     s:5622

     2155     5605    4                   DO;   /* CHECK FOR FULL KEY SEG */

     2156     5606    4                   IF NEW_START > KEYSIZE THEN

   5606  1 000157   200012 236100                    LDQ     KEYSIZE,,AUTO
         1 000160   200020 116100                    CMPQ    NEW_START,,AUTO
         1 000161   000201 602000 1                  TNC     ERR

     2157     5607    4                      GOTO ERR;
     2158     5608    4                   END;  /* CHECK FOR FULL KEY SEG */

   5608  1 000162   000163 710000 1                  TRA     s:5615

     2159     5609    3                ELSE
     2160     5610    3                   EXIT LOOP; /* partial key */
     2161     5611
     2162     5612                     /* If the field is packed, convert START to nibbles.
     2163     5613                        This is easy since, in key buffers, all fields must
     2164     5614                        begin on a byte bound.                           */
     2165     5615    3                IF PACKED_FIELD THEN

   5615  1 000163   200031 234100                    SZN     PACKED_FIELD,,AUTO
         1 000164   000170 605000 1                  TPL     s:5617

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:404  
     2166     5616    3                   START=START*2;

   5616  1 000165   200017 235100                    LDA     START,,AUTO
         1 000166   000001 735000                    ALS     1
         1 000167   200017 755100                    STA     START,,AUTO

     2167     5617    3                CALL CHECK_TYPE ALTRET(ERR);

   5617  1 000170   000342 701000 1                  TSX1    CHECK_TYPE
         1 000171   000201 702000 1                  TSX2    ERR

     2168     5618    3                END;  /* KEY */

     2169     5619
     2170     5620    2          END;  /* DO FN */

   5620  1 000172   200014 235100                    LDA     FN,,AUTO
         1 000173   000001 035007                    ADLA    1,DL
         1 000174   200014 755100                    STA     FN,,AUTO
         1 000175   200014 236100                    LDQ     FN,,AUTO
         1 000176   200013 116100                    CMPQ    N,,AUTO
         1 000177   000067 602000 1                  TNC     s:5574

     2171     5621
     2172     5622    1          RETURN;

   5622  1 000200   000000 702200 xent               TSX2  ! X66_ARET

     2173     5623    2   ERR:   IF FTYP = %FMD_CHKTYP_KEY THEN DO;

   5623  1 000201   200004 470500       ERR          LDP0    @FTYP,,AUTO
         1 000202   000000 235100                    LDA     0,,PR0
         1 000203   000001 115007                    CMPA    1,DL
         1 000204   000214 601000 1                  TNZ     s:5628

     2174     5624    2             B$JIT.ERR=ERRBADIRKEY;

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:405  
   5624  1 000205   000001 236000 0                  LDQ     ERRBADIRKEY
         1 000206   000000 471400 xsym               LDP1    B$JIT$
         1 000207   100012 756100                    STQ     10,,PR1

     2175     5625    2             F$DCB.ARS=FN;

   5625  1 000210   200014 235100                    LDA     FN,,AUTO
         1 000211   200005 473500                    LDP3    JDCB$,,AUTO
         1 000212   300000 755100                    STA     0,,PR3

     2176     5626    2             END;

   5626  1 000213   000222 710000 1                  TRA     s:5631

     2177     5627    2          ELSE DO;

     2178     5628    2             B$JIT.ERR=ERRBADRFIELD;

   5628  1 000214   000000 236000 0                  LDQ     ERRBADRFIELD
         1 000215   000000 471400 xsym               LDP1    B$JIT$
         1 000216   100012 756100                    STQ     10,,PR1

     2179     5629    2             F$DCB.ARS=F;

   5629  1 000217   200015 235100                    LDA     F,,AUTO
         1 000220   200005 473500                    LDP3    JDCB$,,AUTO
         1 000221   300000 755100                    STA     0,,PR3

     2180     5630    2             END;

     2181     5631    1          ALTRETURN;

   5631  1 000222   000000 702200 xent               TSX2  ! X66_AALT

   5623  1 000223                       REC_TOO_SMA* null
     2182     5632        /*E*   ERROR:      FMD-E$BADRFIELD-2
     2183     5633               MESSAGE: The record contains a bad key field %in %UF%
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:406  
     2184     5634               MESSAGE1: One of the key fields in the record %in %UF%
     2185     5635                         contains bad data.  This is likely because the field
     2186     5636                         is a decimal field with an illegal decimal value.
     2187     5637                         F$DCB.ARS# contains the index into the RECFIELD field
     2188     5638                         array of the bad field.
     2189     5639        */
     2190     5640        /*E*   ERROR:   FMD-E$BADIRKEY-2
     2191     5641               MESSAGE: The key buffer specified %for %UF% contains a bad key segment
     2192     5642               MESSAGE1: The key buffer specified %for %UF% contains a badly
     2193     5643                         defined field or an incomplete key fragment.  The bad
     2194     5644                         key segment number is in F$DCB.ARS#.
     2195     5645        */
     2196     5646    1   REC_TOO_SMALL:;
     2197     5647    1          B$JIT.ERR=ERRINDBC;

   5647  1 000223   000002 236000 0                  LDQ     ERRINDBC
         1 000224   000000 471400 xsym               LDP1    B$JIT$
         1 000225   100012 756100                    STQ     10,,PR1

     2198     5648    1          F$DCB.ARS=F;

   5648  1 000226   200015 235100                    LDA     F,,AUTO
         1 000227   000000 755100                    STA     0,,PR0

     2199     5649    1          ALTRETURN;

   5649  1 000230   000000 702200 xent               TSX2  ! X66_AALT

     2200     5650
     2201     5651        /*E*   ERROR:    FMD-E$INDBC-2
     2202     5652               MESSAGE:  Byte count too small on M$WRITE to IREL file% %UF%
     2203     5653               MESSAGE1: The byte count of the record buffer on an M$WRITE
     2204     5654                         to an IREL file% %UF% was too small to contain all
     2205     5655                         the key(s).  F$DCB.ARS# contains the index into the
     2206     5656                         RECFIELD field array of the first key field not
     2207     5657                         contained in the record.
     2208     5658        */
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:407  
     2209     5659               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:408  
     2210     5660        /*I*     NAME:     CALC_START
     2211     5661                 PURPOSE:  To calculate the byte offset to the start of a field
     2212     5662                           in a key buffer.
     2213     5663                 DESCRIPTION:
     2214     5664                      If this is a packed decimal field, then the offset is a
     2215     5665                 nibble offset, calculate it in bytes.  Otherwise, just add the
     2216     5666                 byte offset.
     2217     5667        */
     2218     5668    1   CALC_START: PROC;

   5668  1 000231   200036 741300       CALC_START   STX1  ! TEMP_CHAR+2,,AUTO

     2219     5669        /* */
     2220     5670    3          DO CASE(RECFIELD.FIELD.TYPE(F));

   5670  1 000232   200015 236100                    LDQ     F,,AUTO
         1 000233   000003 402007                    MPY     3,DL
         1 000234   200006 470500                    LDP0    RECFIELD$,,AUTO
         1 000235   000100 101506                    MRL     fill='000'O
         1 000236   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 000237   200042 020006                    ADSC6   @FN+3,,AUTO              cn=0,n=6
         1 000240   200042 236100                    LDQ     @FN+3,,AUTO
         1 000241   000011 136007                    SBLQ    9,DL
         1 000242   000061 116007                    CMPQ    49,DL
         1 000243   000245 602006 1                  TNC     s:5670+11,QL
         1 000244   000336 710000 1                  TRA     s:5678
         1 000245   000326 710000 1                  TRA     s:5674
         1 000246   000326 710000 1                  TRA     s:5674
         1 000247   000336 710000 1                  TRA     s:5678
         1 000250   000336 710000 1                  TRA     s:5678
         1 000251   000336 710000 1                  TRA     s:5678
         1 000252   000336 710000 1                  TRA     s:5678
         1 000253   000336 710000 1                  TRA     s:5678
         1 000254   000336 710000 1                  TRA     s:5678
         1 000255   000336 710000 1                  TRA     s:5678
         1 000256   000336 710000 1                  TRA     s:5678
         1 000257   000336 710000 1                  TRA     s:5678
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:409  
         1 000260   000336 710000 1                  TRA     s:5678
         1 000261   000336 710000 1                  TRA     s:5678
         1 000262   000336 710000 1                  TRA     s:5678
         1 000263   000336 710000 1                  TRA     s:5678
         1 000264   000336 710000 1                  TRA     s:5678
         1 000265   000326 710000 1                  TRA     s:5674
         1 000266   000336 710000 1                  TRA     s:5678
         1 000267   000336 710000 1                  TRA     s:5678
         1 000270   000336 710000 1                  TRA     s:5678
         1 000271   000336 710000 1                  TRA     s:5678
         1 000272   000336 710000 1                  TRA     s:5678
         1 000273   000326 710000 1                  TRA     s:5674
         1 000274   000336 710000 1                  TRA     s:5678
         1 000275   000336 710000 1                  TRA     s:5678
         1 000276   000336 710000 1                  TRA     s:5678
         1 000277   000336 710000 1                  TRA     s:5678
         1 000300   000336 710000 1                  TRA     s:5678
         1 000301   000336 710000 1                  TRA     s:5678
         1 000302   000336 710000 1                  TRA     s:5678
         1 000303   000336 710000 1                  TRA     s:5678
         1 000304   000326 710000 1                  TRA     s:5674
         1 000305   000336 710000 1                  TRA     s:5678
         1 000306   000336 710000 1                  TRA     s:5678
         1 000307   000336 710000 1                  TRA     s:5678
         1 000310   000336 710000 1                  TRA     s:5678
         1 000311   000336 710000 1                  TRA     s:5678
         1 000312   000336 710000 1                  TRA     s:5678
         1 000313   000336 710000 1                  TRA     s:5678
         1 000314   000336 710000 1                  TRA     s:5678
         1 000315   000336 710000 1                  TRA     s:5678
         1 000316   000336 710000 1                  TRA     s:5678
         1 000317   000326 710000 1                  TRA     s:5674
         1 000320   000336 710000 1                  TRA     s:5678
         1 000321   000336 710000 1                  TRA     s:5678
         1 000322   000326 710000 1                  TRA     s:5674
         1 000323   000336 710000 1                  TRA     s:5678
         1 000324   000336 710000 1                  TRA     s:5678
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:410  
         1 000325   000326 710000 1                  TRA     s:5674

     2221     5671    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,

     2222     5672    3                  %PDFLT_DATATYPE, %PDLE_DATATYPE, %PDTE_DATATYPE,
     2223     5673    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2224     5674    3                NEW_START=START+(LEN+1)/2;

   5674  1 000326   200021 236100                    LDQ     LEN,,AUTO
         1 000327   000001 036007                    ADLQ    1,DL
         1 000330   000001 772000                    QRL     1
         1 000331   200017 036100                    ADLQ    START,,AUTO
         1 000332   200020 756100                    STQ     NEW_START,,AUTO

     2225     5675    3                PACKED_FIELD=%YES#;

   5675  1 000333   400000 236003                    LDQ     -131072,DU
         1 000334   200031 756100                    STQ     PACKED_FIELD,,AUTO
         1 000335   000341 710000 1                  TRA     s:5682

     2226     5676
     2227     5677    3             CASE(ELSE);

     2228     5678    3                NEW_START=START+LEN;

   5678  1 000336   200017 236100                    LDQ     START,,AUTO
         1 000337   200021 036100                    ADLQ    LEN,,AUTO
         1 000340   200020 756100                    STQ     NEW_START,,AUTO

     2229     5679
     2230     5680    3          END;  /* CASE */

     2231     5681
     2232     5682    2          RETURN;

   5682  1 000341   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:411  
     2233     5683    2          END CALC_START;
     2234     5684               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:412  
     2235     5685        /*I*     NAME:     CHECK_TYPE
     2236     5686                 PURPOSE:  To check a field
     2237     5687                 DESCRIPTION:
     2238     5688                      If this is a packed decimal field, then call PACKCHECK.
     2239     5689
     2240     5690                      If this is unpacked decimal, then call UNPACKCHECK.
     2241     5691
     2242     5692                      If this is unpacked floating, then make sure that the
     2243     5693                 exponent is valid, then call UNPACKCHECK to check the rest.
     2244     5694
     2245     5695                      If this is packed floating, then we need to check the
     2246     5696                 exponent.  This is tricky, because the exponent is two nibbles
     2247     5697                 that can start on any nibble boundary, so it may be split
     2248     5698                 across a byte.
     2249     5699        */
     2250     5700                 %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:413  
     2251     5701    1   CHECK_TYPE: PROC ALTRET;

   5701  1 000342   200036 741300       CHECK_TYPE   STX1  ! TEMP_CHAR+2,,AUTO

     2252     5702        /* */
     2253     5703    3          DO CASE(RECFIELD.FIELD.TYPE(F));

   5703  1 000343   200015 236100                    LDQ     F,,AUTO
         1 000344   000003 402007                    MPY     3,DL
         1 000345   200006 470500                    LDP0    RECFIELD$,,AUTO
         1 000346   000100 101506                    MRL     fill='000'O
         1 000347   000001 020001                    ADSC6   1,Q,PR0                  cn=0,n=1
         1 000350   200042 020006                    ADSC6   @FN+3,,AUTO              cn=0,n=6
         1 000351   200042 236100                    LDQ     @FN+3,,AUTO
         1 000352   000011 136007                    SBLQ    9,DL
         1 000353   000061 116007                    CMPQ    49,DL
         1 000354   000356 602006 1                  TNC     s:5703+11,QL
         1 000355   000545 710000 1                  TRA     s:5743
         1 000356   000437 710000 1                  TRA     s:5707
         1 000357   000471 710000 1                  TRA     s:5722
         1 000360   000545 710000 1                  TRA     s:5743
         1 000361   000545 710000 1                  TRA     s:5743
         1 000362   000545 710000 1                  TRA     s:5743
         1 000363   000545 710000 1                  TRA     s:5743
         1 000364   000545 710000 1                  TRA     s:5743
         1 000365   000545 710000 1                  TRA     s:5743
         1 000366   000545 710000 1                  TRA     s:5743
         1 000367   000545 710000 1                  TRA     s:5743
         1 000370   000545 710000 1                  TRA     s:5743
         1 000371   000545 710000 1                  TRA     s:5743
         1 000372   000545 710000 1                  TRA     s:5743
         1 000373   000545 710000 1                  TRA     s:5743
         1 000374   000545 710000 1                  TRA     s:5743
         1 000375   000545 710000 1                  TRA     s:5743
         1 000376   000437 710000 1                  TRA     s:5707
         1 000377   000545 710000 1                  TRA     s:5743
         1 000400   000545 710000 1                  TRA     s:5743
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:414  
         1 000401   000545 710000 1                  TRA     s:5743
         1 000402   000545 710000 1                  TRA     s:5743
         1 000403   000545 710000 1                  TRA     s:5743
         1 000404   000437 710000 1                  TRA     s:5707
         1 000405   000545 710000 1                  TRA     s:5743
         1 000406   000545 710000 1                  TRA     s:5743
         1 000407   000545 710000 1                  TRA     s:5743
         1 000410   000545 710000 1                  TRA     s:5743
         1 000411   000545 710000 1                  TRA     s:5743
         1 000412   000545 710000 1                  TRA     s:5743
         1 000413   000545 710000 1                  TRA     s:5743
         1 000414   000545 710000 1                  TRA     s:5743
         1 000415   000437 710000 1                  TRA     s:5707
         1 000416   000442 710000 1                  TRA     s:5711
         1 000417   000442 710000 1                  TRA     s:5711
         1 000420   000442 710000 1                  TRA     s:5711
         1 000421   000442 710000 1                  TRA     s:5711
         1 000422   000442 710000 1                  TRA     s:5711
         1 000423   000545 710000 1                  TRA     s:5743
         1 000424   000545 710000 1                  TRA     s:5743
         1 000425   000545 710000 1                  TRA     s:5743
         1 000426   000545 710000 1                  TRA     s:5743
         1 000427   000445 710000 1                  TRA     s:5714
         1 000430   000437 710000 1                  TRA     s:5707
         1 000431   000545 710000 1                  TRA     s:5743
         1 000432   000545 710000 1                  TRA     s:5743
         1 000433   000437 710000 1                  TRA     s:5707
         1 000434   000545 710000 1                  TRA     s:5743
         1 000435   000545 710000 1                  TRA     s:5743
         1 000436   000437 710000 1                  TRA     s:5707

     2254     5704    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDNS_DATATYPE,

     2255     5705    3                  %PDLE_DATATYPE, %PDTE_DATATYPE ,%DATE_DATATYPE,
     2256     5706    3                  %TIME_DATATYPE);
     2257     5707    3                CALL PACKCHECK ALTRET(ERR);

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:415  
   5707  1 000437   000551 701000 1                  TSX1    PACKCHECK
         1 000440   000547 702000 1                  TSX2    ERR
         1 000441   000545 710000 1                  TRA     s:5743

     2258     5708
     2259     5709    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,

     2260     5710    3                  %UDLO_DATATYPE, %UDTO_DATATYPE);
     2261     5711    3                CALL UNPACKCHECK ALTRET(ERR);

   5711  1 000442   001363 701000 1                  TSX1    UNPACKCHECK
         1 000443   000547 702000 1                  TSX2    ERR
         1 000444   000545 710000 1                  TRA     s:5743

     2262     5712
     2263     5713    3             CASE(%UDFLT_DATATYPE);

     2264     5714    3                FIELD$=PINCRC(F$, START);

   5714  1 000445   200003 471500                    LDP1    @F$,,AUTO
         1 000446   100000 473500                    LDP3    0,,PR1
         1 000447   200017 236100                    LDQ     START,,AUTO
         1 000450   000011 402007                    MPY     9,DL
         1 000451   300000 503506                    ABD     0,QL,PR3
         1 000452   200027 453500                    STP3    FIELD$,,AUTO

     2265     5715    3                TEMP_CHAR=REC(LEN-1);

   5715  1 000453   200021 235100                    LDA     LEN,,AUTO
         1 000454   040100 100505                    MLR     fill='040'O
         1 000455   377777 600001                    ADSC9   -1,A,PR3                 cn=3,n=1
         1 000456   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2266     5716    3                IF ASCBIN(TEMP_CHAR) > 255 THEN

   5716  1 000457   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 000460   000033 772000                    QRL     27
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:416  
         1 000461   000400 116007                    CMPQ    256,DL
         1 000462   000464 602000 1                  TNC     s:5718

     2267     5717    3                   ALTRETURN;

   5717  1 000463   000000 702211                    TSX2  ! 0,X1

     2268     5718    3                LEN=LEN-1;

   5718  1 000464   000001 135007                    SBLA    1,DL
         1 000465   200021 755100                    STA     LEN,,AUTO

     2269     5719    3                CALL UNPACKCHECK ALTRET(ERR);

   5719  1 000466   001363 701000 1                  TSX1    UNPACKCHECK
         1 000467   000547 702000 1                  TSX2    ERR
         1 000470   000545 710000 1                  TRA     s:5743

     2270     5720
     2271     5721    3             CASE(%PDFLT_DATATYPE);

     2272     5722    3                FIELD$=PINCRC(F$, START/2);

   5722  1 000471   200017 236100                    LDQ     START,,AUTO
         1 000472   000001 772000                    QRL     1
         1 000473   200003 471500                    LDP1    @F$,,AUTO
         1 000474   100000 473500                    LDP3    0,,PR1
         1 000475   000011 402007                    MPY     9,DL
         1 000476   300000 503506                    ABD     0,QL,PR3
         1 000477   200027 453500                    STP3    FIELD$,,AUTO

     2273     5723    3                NCHARS=(LEN+1)/2;

   5723  1 000500   200021 236100                    LDQ     LEN,,AUTO
         1 000501   000001 036007                    ADLQ    1,DL
         1 000502   000001 772000                    QRL     1
         1 000503   200022 756100                    STQ     NCHARS,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:417  

     2274     5724    3                IF MOD(START+LEN, 2) = 0 THEN

   5724  1 000504   200017 236100                    LDQ     START,,AUTO
         1 000505   200021 036100                    ADLQ    LEN,,AUTO
         1 000506   000001 376007                    ANQ     1,DL
         1 000507   000521 601000 1                  TNZ     s:5732

     2275     5725    4                   DO;   /* EVEN */

     2276     5726    4                   TEMP_CHAR=REC(NCHARS-1);

   5726  1 000510   200022 235100                    LDA     NCHARS,,AUTO
         1 000511   040100 100505                    MLR     fill='040'O
         1 000512   377777 600001                    ADSC9   -1,A,PR3                 cn=3,n=1
         1 000513   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2277     5727    4                   IF ASCBIN(TEMP_CHAR) > 255 THEN

   5727  1 000514   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 000515   000033 772000                    QRL     27
         1 000516   000400 116007                    CMPQ    256,DL
         1 000517   000540 602000 1                  TNC     s:5738

     2278     5728    4                      ALTRETURN;

   5728  1 000520   000000 702211                    TSX2  ! 0,X1

     2279     5729    4                   END;  /* EVEN */
     2280     5730    3                ELSE
     2281     5731    4                   DO;   /* ODD */

     2282     5732    4                   TEMP_CHAR=REC(NCHARS-1);

   5732  1 000521   200022 235100                    LDA     NCHARS,,AUTO
         1 000522   040100 100505                    MLR     fill='040'O
         1 000523   377777 600001                    ADSC9   -1,A,PR3                 cn=3,n=1
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:418  
         1 000524   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2283     5733    4                   BTEMP=ASCBIN(TEMP_CHAR);

   5733  1 000525   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 000526   000033 772000                    QRL     27
         1 000527   000033 736000                    QLS     27
         1 000530   200030 552140                    STBQ    BYT,'40'O,AUTO

     2284     5734    4                   IF BYT.HBIT = 1 THEN

   5734  1 000531   200030 236100                    LDQ     BYT,,AUTO
         1 000532   400000 376003                    ANQ     -131072,DU
         1 000533   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000534   000001 036007                    ADLQ    1,DL
         1 000535   400000 116003                    CMPQ    -131072,DU
         1 000536   000540 601000 1                  TNZ     s:5738

     2285     5735    4                      ALTRETURN;

   5735  1 000537   000000 702211                    TSX2  ! 0,X1

     2286     5736    4                   END;  /* ODD */
     2287     5737
     2288     5738    3                LEN=LEN-2;

   5738  1 000540   200021 236100                    LDQ     LEN,,AUTO
         1 000541   000002 136007                    SBLQ    2,DL
         1 000542   200021 756100                    STQ     LEN,,AUTO

     2289     5739    3                CALL PACKCHECK ALTRET(ERR);

   5739  1 000543   000551 701000 1                  TSX1    PACKCHECK
         1 000544   000547 702000 1                  TSX2    ERR

     2290     5740
     2291     5741    3          END;  /* CASE */
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:419  

     2292     5742
     2293     5743    2          RETURN;

   5743  1 000545   200036 221300                    LDX1  ! TEMP_CHAR+2,,AUTO
         1 000546   000001 702211                    TSX2  ! 1,X1

     2294     5744    2   ERR:   ALTRETURN;

   5744  1 000547   200036 221300       ERR          LDX1  ! TEMP_CHAR+2,,AUTO
         1 000550   000000 702211                    TSX2  ! 0,X1

     2295     5745    2          END CHECK_TYPE;
     2296     5746               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:420  
     2297     5747        /*I*     NAME:     PACKCHECK
     2298     5748                 PURPOSE:  To check packed decimal fields
     2299     5749                 DESCRIPTION:
     2300     5750                      Point to the byte start of the field, and determine if the
     2301     5751                 nibble is on an even or odd boundary, same thing for the length.
     2302     5752
     2303     5753                      Next, check the sign.  Find the nibble that contains the
     2304     5754                 sign.  The sign must be greater than or equal to 10.
     2305     5755
     2306     5756                      Now, check the number itself.  We want the number to begin
     2307     5757                 and end on a byte boundary, so if the first or last digits are on
     2308     5758                 odd nibble boundaries, check these.
     2309     5759
     2310     5760                      The SEARCH call will now check the remainder of the string
     2311     5761                 against a table of all possible legal bytes that can contain legal
     2312     5762                 decimal values.
     2313     5763        */
     2314     5764                 %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:421  
     2315     5765    1   PACKCHECK: PROC ALTRET;

   5765  1 000551   200040 741300       PACKCHECK    STX1  ! @FN+1,,AUTO

     2316     5766        /* */
     2317     5767    2          FIELD$=PINCRC(F$, START/2);

   5767  1 000552   200017 236100                    LDQ     START,,AUTO
         1 000553   000001 772000                    QRL     1
         1 000554   200003 470500                    LDP0    @F$,,AUTO
         1 000555   000000 471500                    LDP1    0,,PR0
         1 000556   000011 402007                    MPY     9,DL
         1 000557   100000 503506                    ABD     0,QL,PR1
         1 000560   200027 451500                    STP1    FIELD$,,AUTO

     2318     5768
     2319     5769    2          IF MOD(START, 2) = 0 THEN

   5769  1 000561   200017 236100                    LDQ     START,,AUTO
         1 000562   000001 376007                    ANQ     1,DL
         1 000563   000566 601000 1                  TNZ     s:5772

     2320     5770    2             BOUNDRY=%EVEN;

   5770  1 000564   200023 450100                    STZ     BOUNDRY,,AUTO
         1 000565   000570 710000 1                  TRA     s:5774

     2321     5771    2          ELSE
     2322     5772    2             BOUNDRY=%ODD;

   5772  1 000566   000001 235007                    LDA     1,DL
         1 000567   200023 755100                    STA     BOUNDRY,,AUTO

     2323     5773
     2324     5774    2          IF MOD(LEN, 2) = 0 THEN

   5774  1 000570   200021 236100                    LDQ     LEN,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:422  
         1 000571   000001 376007                    ANQ     1,DL
         1 000572   000575 601000 1                  TNZ     s:5777

     2325     5775    2             NDIG=%EVEN;

   5775  1 000573   200024 450100                    STZ     NDIG,,AUTO
         1 000574   000577 710000 1                  TRA     s:5779

     2326     5776    2          ELSE
     2327     5777    2             NDIG=%ODD;

   5777  1 000575   000001 235007                    LDA     1,DL
         1 000576   200024 755100                    STA     NDIG,,AUTO

     2328     5778
     2329     5779    3          DO CASE(RECFIELD.FIELD.TYPE(F));

   5779  1 000577   200015 236100                    LDQ     F,,AUTO
         1 000600   000003 402007                    MPY     3,DL
         1 000601   200006 473500                    LDP3    RECFIELD$,,AUTO
         1 000602   000100 101506                    MRL     fill='000'O
         1 000603   300001 020001                    ADSC6   1,Q,PR3                  cn=0,n=1
         1 000604   200042 020006                    ADSC6   @FN+3,,AUTO              cn=0,n=6
         1 000605   200042 236100                    LDQ     @FN+3,,AUTO
         1 000606   000011 136007                    SBLQ    9,DL
         1 000607   000061 116007                    CMPQ    49,DL
         1 000610   000612 602006 1                  TNC     s:5779+11,QL
         1 000611   000760 710000 1                  TRA     s:5816
         1 000612   000673 710000 1                  TRA     s:5782
         1 000613   000673 710000 1                  TRA     s:5782
         1 000614   000760 710000 1                  TRA     s:5816
         1 000615   000760 710000 1                  TRA     s:5816
         1 000616   000760 710000 1                  TRA     s:5816
         1 000617   000760 710000 1                  TRA     s:5816
         1 000620   000760 710000 1                  TRA     s:5816
         1 000621   000760 710000 1                  TRA     s:5816
         1 000622   000760 710000 1                  TRA     s:5816
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:423  
         1 000623   000760 710000 1                  TRA     s:5816
         1 000624   000760 710000 1                  TRA     s:5816
         1 000625   000760 710000 1                  TRA     s:5816
         1 000626   000760 710000 1                  TRA     s:5816
         1 000627   000760 710000 1                  TRA     s:5816
         1 000630   000760 710000 1                  TRA     s:5816
         1 000631   000760 710000 1                  TRA     s:5816
         1 000632   000725 710000 1                  TRA     s:5799
         1 000633   000760 710000 1                  TRA     s:5816
         1 000634   000760 710000 1                  TRA     s:5816
         1 000635   000760 710000 1                  TRA     s:5816
         1 000636   000760 710000 1                  TRA     s:5816
         1 000637   000760 710000 1                  TRA     s:5816
         1 000640   000725 710000 1                  TRA     s:5799
         1 000641   000760 710000 1                  TRA     s:5816
         1 000642   000760 710000 1                  TRA     s:5816
         1 000643   000760 710000 1                  TRA     s:5816
         1 000644   000760 710000 1                  TRA     s:5816
         1 000645   000760 710000 1                  TRA     s:5816
         1 000646   000760 710000 1                  TRA     s:5816
         1 000647   000760 710000 1                  TRA     s:5816
         1 000650   000760 710000 1                  TRA     s:5816
         1 000651   000760 710000 1                  TRA     s:5816
         1 000652   000760 710000 1                  TRA     s:5816
         1 000653   000760 710000 1                  TRA     s:5816
         1 000654   000760 710000 1                  TRA     s:5816
         1 000655   000760 710000 1                  TRA     s:5816
         1 000656   000760 710000 1                  TRA     s:5816
         1 000657   000760 710000 1                  TRA     s:5816
         1 000660   000760 710000 1                  TRA     s:5816
         1 000661   000760 710000 1                  TRA     s:5816
         1 000662   000760 710000 1                  TRA     s:5816
         1 000663   000760 710000 1                  TRA     s:5816
         1 000664   000673 710000 1                  TRA     s:5782
         1 000665   000760 710000 1                  TRA     s:5816
         1 000666   000760 710000 1                  TRA     s:5816
         1 000667   000673 710000 1                  TRA     s:5782
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:424  
         1 000670   000760 710000 1                  TRA     s:5816
         1 000671   000760 710000 1                  TRA     s:5816
         1 000672   000673 710000 1                  TRA     s:5782

     2330     5780    3             CASE(%PDLA_DATATYPE, %PDFLT_DATATYPE, %PDLE_DATATYPE,

     2331     5781    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2332     5782    3                TEMP_CHAR=REC(0);

   5782  1 000673   040100 100500                    MLR     fill='040'O
         1 000674   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000675   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2333     5783    3                BTEMP=ASCBIN(TEMP_CHAR);

   5783  1 000676   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 000677   000033 772000                    QRL     27
         1 000700   000033 736000                    QLS     27
         1 000701   200030 552140                    STBQ    BYT,'40'O,AUTO

     2334     5784    3                IF BOUNDRY = %EVEN THEN

   5784  1 000702   200023 235100                    LDA     BOUNDRY,,AUTO
         1 000703   000711 601000 1                  TNZ     s:5791

     2335     5785    4                   DO;   /* EVEN BOUNDRY */

     2336     5786    4                   IF BYT.UPPER < 10 THEN

   5786  1 000704   200030 236100                    LDQ     BYT,,AUTO
         1 000705   360000 376003                    ANQ     122880,DU
         1 000706   240000 116003                    CMPQ    81920,DU
         1 000707   000716 603000 1                  TRC     s:5795

     2337     5787    4                      ALTRETURN;

   5787  1 000710   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:425  

     2338     5788    4                   END;  /* EVEN BOUNDRY */
     2339     5789    3                ELSE
     2340     5790    4                   DO;   /* ODD BOUNDRY  */

     2341     5791    4                   IF BYT.LOWER < 10 THEN

   5791  1 000711   200030 236100                    LDQ     BYT,,AUTO
         1 000712   017000 376003                    ANQ     7680,DU
         1 000713   012000 116003                    CMPQ    5120,DU
         1 000714   000716 603000 1                  TRC     s:5795

     2342     5792    4                      ALTRETURN;

   5792  1 000715   000000 702211                    TSX2  ! 0,X1

     2343     5793    4                   END;  /* ODD BOUNDRY  */
     2344     5794
     2345     5795    3                LEN=LEN-1;

   5795  1 000716   200021 236100                    LDQ     LEN,,AUTO
         1 000717   000001 136007                    SBLQ    1,DL
         1 000720   200021 756100                    STQ     LEN,,AUTO

     2346     5796    3                START=START+1;

   5796  1 000721   200017 235100                    LDA     START,,AUTO
         1 000722   000001 035007                    ADLA    1,DL
         1 000723   200017 755100                    STA     START,,AUTO
         1 000724   000760 710000 1                  TRA     s:5816

     2347     5797
     2348     5798    3             CASE(%PDTA_DATATYPE, %PDTE_DATATYPE);

     2349     5799    3                TEMP_CHAR=REC((LEN+1)/2-1);

   5799  1 000725   200021 236100                    LDQ     LEN,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:426  
         1 000726   000001 036007                    ADLQ    1,DL
         1 000727   000001 772000                    QRL     1
         1 000730   040100 100506                    MLR     fill='040'O
         1 000731   177777 600001                    ADSC9   -1,Q,PR1                 cn=3,n=1
         1 000732   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2350     5800    3                BTEMP=ASCBIN(TEMP_CHAR);

   5800  1 000733   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 000734   000033 772000                    QRL     27
         1 000735   000033 736000                    QLS     27
         1 000736   200030 552140                    STBQ    BYT,'40'O,AUTO

     2351     5801    3                IF MOD(BOUNDRY+NDIG, 2) = %EVEN THEN

   5801  1 000737   200023 236100                    LDQ     BOUNDRY,,AUTO
         1 000740   200024 036100                    ADLQ    NDIG,,AUTO
         1 000741   000001 376007                    ANQ     1,DL
         1 000742   000750 601000 1                  TNZ     s:5808

     2352     5802    4                   DO;   /* EVEN */

     2353     5803    4                   IF BYT.LOWER < 10 THEN

   5803  1 000743   200030 236100                    LDQ     BYT,,AUTO
         1 000744   017000 376003                    ANQ     7680,DU
         1 000745   012000 116003                    CMPQ    5120,DU
         1 000746   000755 603000 1                  TRC     s:5812

     2354     5804    4                      ALTRETURN;

   5804  1 000747   000000 702211                    TSX2  ! 0,X1

     2355     5805    4                   END;  /* EVEN */
     2356     5806    3                ELSE
     2357     5807    4                   DO;   /* ODD  */

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:427  
     2358     5808    4                   IF BYT.UPPER < 10 THEN

   5808  1 000750   200030 236100                    LDQ     BYT,,AUTO
         1 000751   360000 376003                    ANQ     122880,DU
         1 000752   240000 116003                    CMPQ    81920,DU
         1 000753   000755 603000 1                  TRC     s:5812

     2359     5809    4                      ALTRETURN;

   5809  1 000754   000000 702211                    TSX2  ! 0,X1

     2360     5810    4                   END;  /* ODD  */
     2361     5811
     2362     5812    3                LEN=LEN-1;

   5812  1 000755   200021 235100                    LDA     LEN,,AUTO
         1 000756   000001 135007                    SBLA    1,DL
         1 000757   200021 755100                    STA     LEN,,AUTO

     2363     5813
     2364     5814    3          END;  /* CASE */

     2365     5815
     2366     5816    2          FIELD$=PINCRC(F$, START/2);

   5816  1 000760   200017 236100                    LDQ     START,,AUTO
         1 000761   000001 772000                    QRL     1
         1 000762   000000 474500                    LDP4    0,,PR0
         1 000763   000011 402007                    MPY     9,DL
         1 000764   400000 503506                    ABD     0,QL,PR4
         1 000765   200027 454500                    STP4    FIELD$,,AUTO

     2367     5817
     2368     5818    2          IF MOD(START, 2) = 1 THEN

   5818  1 000766   200017 236100                    LDQ     START,,AUTO
         1 000767   000001 376007                    ANQ     1,DL
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:428  
         1 000770   000001 116007                    CMPQ    1,DL
         1 000771   001017 601000 1                  TNZ     s:5829

     2369     5819    3             DO;   /* CHECK FIRST DIGIT */

     2370     5820    3             TEMP_CHAR=REC(0);

   5820  1 000772   040100 100500                    MLR     fill='040'O
         1 000773   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         1 000774   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2371     5821    3             BTEMP=ASCBIN(TEMP_CHAR);

   5821  1 000775   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 000776   000033 772000                    QRL     27
         1 000777   000033 736000                    QLS     27
         1 001000   200030 552140                    STBQ    BYT,'40'O,AUTO

     2372     5822    3             IF BYT.LOWER > 9 THEN

   5822  1 001001   200030 236100                    LDQ     BYT,,AUTO
         1 001002   017000 376003                    ANQ     7680,DU
         1 001003   012000 116003                    CMPQ    5120,DU
         1 001004   001006 602000 1                  TNC     s:5824

     2373     5823    3                ALTRETURN;

   5823  1 001005   000000 702211                    TSX2  ! 0,X1

     2374     5824    3             START=START+1;

   5824  1 001006   200017 235100                    LDA     START,,AUTO
         1 001007   000001 035007                    ADLA    1,DL
         1 001010   200017 755100                    STA     START,,AUTO

     2375     5825    3             FIELD$=PINCRC(FIELD$, 1);

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:429  
   5825  1 001011   200027 236100                    LDQ     FIELD$,,AUTO
         1 001012   200000 036007                    ADLQ    65536,DL
         1 001013   200027 756100                    STQ     FIELD$,,AUTO

     2376     5826    3             LEN=LEN-1;

   5826  1 001014   200021 235100                    LDA     LEN,,AUTO
         1 001015   000001 135007                    SBLA    1,DL
         1 001016   200021 755100                    STA     LEN,,AUTO

     2377     5827    3             END;  /* CHECK FIRST DIGIT */

     2378     5828
     2379     5829    2          IF MOD(LEN, 2) = 1 THEN

   5829  1 001017   200021 236100                    LDQ     LEN,,AUTO
         1 001020   000001 376007                    ANQ     1,DL
         1 001021   000001 116007                    CMPQ    1,DL
         1 001022   001055 601000 1                  TNZ     s:5840

     2380     5830    3             DO;   /* CHECK LAST */

     2381     5831    3             TEMP_CHAR=REC((LEN+1)/2-1);

   5831  1 001023   200021 236100                    LDQ     LEN,,AUTO
         1 001024   000001 036007                    ADLQ    1,DL
         1 001025   000001 772000                    QRL     1
         1 001026   200027 471500                    LDP1    FIELD$,,AUTO
         1 001027   040100 100506                    MLR     fill='040'O
         1 001030   177777 600001                    ADSC9   -1,Q,PR1                 cn=3,n=1
         1 001031   200034 000001                    ADSC9   TEMP_CHAR,,AUTO          cn=0,n=1

     2382     5832    3             BTEMP=ASCBIN(TEMP_CHAR);

   5832  1 001032   200034 236100                    LDQ     TEMP_CHAR,,AUTO
         1 001033   000033 772000                    QRL     27
         1 001034   000033 736000                    QLS     27
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:430  
         1 001035   200030 552140                    STBQ    BYT,'40'O,AUTO

     2383     5833    3             IF BYT.UPPER > 9 THEN

   5833  1 001036   200030 236100                    LDQ     BYT,,AUTO
         1 001037   360000 376003                    ANQ     122880,DU
         1 001040   240000 116003                    CMPQ    81920,DU
         1 001041   001043 602000 1                  TNC     s:5835

     2384     5834    3                ALTRETURN;

   5834  1 001042   000000 702211                    TSX2  ! 0,X1

     2385     5835    3             IF BYT.HBIT = 1 THEN

   5835  1 001043   200030 236100                    LDQ     BYT,,AUTO
         1 001044   400000 376003                    ANQ     -131072,DU
         1 001045   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 001046   000001 036007                    ADLQ    1,DL
         1 001047   400000 116003                    CMPQ    -131072,DU
         1 001050   001052 601000 1                  TNZ     s:5837

     2386     5836    3                ALTRETURN;

   5836  1 001051   000000 702211                    TSX2  ! 0,X1

     2387     5837    3             LEN=LEN-1;

   5837  1 001052   200021 235100                    LDA     LEN,,AUTO
         1 001053   000001 135007                    SBLA    1,DL
         1 001054   200021 755100                    STA     LEN,,AUTO

     2388     5838    3             END;  /* CHECK LAST */

     2389     5839
     2390     5840    2          NCHARS=LEN/2;

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:431  
   5840  1 001055   200021 236100                    LDQ     LEN,,AUTO
         1 001056   000001 772000                    QRL     1
         1 001057   200022 756100                    STQ     NCHARS,,AUTO

     2391     5841    2          IF NCHARS > 0 THEN

   5841  1 001060   001073 600000 1                  TZE     s:5844

     2392     5842    2             CALL SEARCH(I, DUMMY, PTABLE, FIELD);

   5842  1 001061   200027 471500                    LDP1    FIELD$,,AUTO
         1 001062   000000 620006                    EAX0    0,QL
         1 001063   000000 164540                    TCT
         1 001064   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         1 001065   000003 000000 0                  ARG     PTABLE
         1 001066   200025 000100                    ARG     I,,AUTO
         1 001067   200025 235100                    LDA     I,,AUTO
         1 001070   000033 771000                    ARL     27
         1 001071   200026 755100                    STA     DUMMY,,AUTO
         1 001072   200025 551140                    STBA    I,'40'O,AUTO

     2393     5843
     2394     5844    2          IF I < NCHARS THEN

   5844  1 001073   200025 236100                    LDQ     I,,AUTO
         1 001074   200022 116100                    CMPQ    NCHARS,,AUTO
         1 001075   001077 603000 1                  TRC     s:5847

     2395     5845    2             ALTRETURN;

   5845  1 001076   000000 702211                    TSX2  ! 0,X1

     2396     5846
     2397     5847    2          RETURN;

   5847  1 001077   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:432  
     2398     5848    2          END PACKCHECK;
     2399     5849               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:433  
     2400     5850        /*I*     NAME:     SET_LEN
     2401     5851                 PURPOSE:  To get the length of a field
     2402     5852                 DESCRIPTION:
     2403     5853                 The length of the field is stored differently depending upon
     2404     5854                 whether the field is a scaled decimal field or not.  If the
     2405     5855                 field is packed decimal, the length will be in nibbles.
     2406     5856                 All other legal key fields must start and end on a byte
     2407     5857                 boundary, so their lengths will either already be in bytes
     2408     5858                 or can be calculated in bytes.
     2409     5859        */
     2410     5860    1   SET_LEN: PROC(FN);

   5860  1 001100   200036 741300       SET_LEN      STX1  ! TEMP_CHAR+2,,AUTO

     2411     5861    2          DCL FN UBIN;
     2412     5862        /* */
     2413     5863    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   5863  1 001101   200037 470500                    LDP0    @FN,,AUTO
         1 001102   000000 236100                    LDQ     0,,PR0
         1 001103   000003 402007                    MPY     3,DL
         1 001104   200006 471500                    LDP1    RECFIELD$,,AUTO
         1 001105   000100 101506                    MRL     fill='000'O
         1 001106   100001 020001                    ADSC6   1,Q,PR1                  cn=0,n=1
         1 001107   200042 020003                    ADSC6   @FN+3,,AUTO              cn=0,n=3
         1 001110   200042 220100                    LDX0    @FN+3,,AUTO
         1 001111   000072 100003                    CMPX0   58,DU
         1 001112   001114 602010 1                  TNC     s:5863+11,X0
         1 001113   001225 710000 1                  TRA     s:5875
         1 001114   001225 710000 1                  TRA     s:5875
         1 001115   001214 710000 1                  TRA     s:5872
         1 001116   001225 710000 1                  TRA     s:5875
         1 001117   001225 710000 1                  TRA     s:5875
         1 001120   001225 710000 1                  TRA     s:5875
         1 001121   001225 710000 1                  TRA     s:5875
         1 001122   001225 710000 1                  TRA     s:5875
         1 001123   001225 710000 1                  TRA     s:5875
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:434  
         1 001124   001225 710000 1                  TRA     s:5875
         1 001125   001206 710000 1                  TRA     s:5869
         1 001126   001206 710000 1                  TRA     s:5869
         1 001127   001225 710000 1                  TRA     s:5875
         1 001130   001225 710000 1                  TRA     s:5875
         1 001131   001225 710000 1                  TRA     s:5875
         1 001132   001225 710000 1                  TRA     s:5875
         1 001133   001225 710000 1                  TRA     s:5875
         1 001134   001225 710000 1                  TRA     s:5875
         1 001135   001225 710000 1                  TRA     s:5875
         1 001136   001225 710000 1                  TRA     s:5875
         1 001137   001225 710000 1                  TRA     s:5875
         1 001140   001225 710000 1                  TRA     s:5875
         1 001141   001225 710000 1                  TRA     s:5875
         1 001142   001225 710000 1                  TRA     s:5875
         1 001143   001225 710000 1                  TRA     s:5875
         1 001144   001214 710000 1                  TRA     s:5872
         1 001145   001206 710000 1                  TRA     s:5869
         1 001146   001225 710000 1                  TRA     s:5875
         1 001147   001225 710000 1                  TRA     s:5875
         1 001150   001225 710000 1                  TRA     s:5875
         1 001151   001225 710000 1                  TRA     s:5875
         1 001152   001225 710000 1                  TRA     s:5875
         1 001153   001206 710000 1                  TRA     s:5869
         1 001154   001225 710000 1                  TRA     s:5875
         1 001155   001225 710000 1                  TRA     s:5875
         1 001156   001225 710000 1                  TRA     s:5875
         1 001157   001225 710000 1                  TRA     s:5875
         1 001160   001225 710000 1                  TRA     s:5875
         1 001161   001225 710000 1                  TRA     s:5875
         1 001162   001225 710000 1                  TRA     s:5875
         1 001163   001225 710000 1                  TRA     s:5875
         1 001164   001206 710000 1                  TRA     s:5869
         1 001165   001206 710000 1                  TRA     s:5869
         1 001166   001206 710000 1                  TRA     s:5869
         1 001167   001206 710000 1                  TRA     s:5869
         1 001170   001206 710000 1                  TRA     s:5869
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:435  
         1 001171   001206 710000 1                  TRA     s:5869
         1 001172   001225 710000 1                  TRA     s:5875
         1 001173   001225 710000 1                  TRA     s:5875
         1 001174   001225 710000 1                  TRA     s:5875
         1 001175   001225 710000 1                  TRA     s:5875
         1 001176   001206 710000 1                  TRA     s:5869
         1 001177   001206 710000 1                  TRA     s:5869
         1 001200   001225 710000 1                  TRA     s:5875
         1 001201   001225 710000 1                  TRA     s:5875
         1 001202   001206 710000 1                  TRA     s:5869
         1 001203   001214 710000 1                  TRA     s:5872
         1 001204   001225 710000 1                  TRA     s:5875
         1 001205   001206 710000 1                  TRA     s:5869

     2414     5864    3             CASE(%UDLS_DATATYPE, %UDTS_DATATYPE, %UDNS_DATATYPE,

     2415     5865    3                  %UDLO_DATATYPE, %UDTO_DATATYPE, %PDLA_DATATYPE,
     2416     5866    3                  %PDLE_DATATYPE, %PDTA_DATATYPE, %PDTE_DATATYPE,
     2417     5867    3                  %PDNS_DATATYPE, %PDFLT_DATATYPE, %UDFLT_DATATYPE,
     2418     5868    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2419     5869    3                LEN=RECFIELD.DECFIELD.LEN(FN);

   5869  1 001206   000000 236100                    LDQ     0,,PR0
         1 001207   000003 402007                    MPY     3,DL
         1 001210   000100 101506                    MRL     fill='000'O
         1 001211   100001 120001                    ADSC6   1,Q,PR1                  cn=1,n=1
         1 001212   200021 020006                    ADSC6   LEN,,AUTO                cn=0,n=6
         1 001213   001232 710000 1                  TRA     s:5879

     2420     5870
     2421     5871    3             CASE(%SBIN_DATATYPE, %UBIN_DATATYPE, %UTS_DATATYPE);

     2422     5872    3                LEN=RECFIELD.FIELD.LEN(FN)/9;

   5872  1 001214   000000 236100                    LDQ     0,,PR0
         1 001215   000003 402007                    MPY     3,DL
         1 001216   000100 101506                    MRL     fill='000'O
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:436  
         1 001217   100001 120002                    ADSC6   1,Q,PR1                  cn=1,n=2
         1 001220   200042 020006                    ADSC6   @FN+3,,AUTO              cn=0,n=6
         1 001221   200042 236100                    LDQ     @FN+3,,AUTO
         1 001222   000011 506007                    DIV     9,DL
         1 001223   200021 756100                    STQ     LEN,,AUTO
         1 001224   001232 710000 1                  TRA     s:5879

     2423     5873
     2424     5874    3             CASE(ELSE);

     2425     5875    3                LEN=RECFIELD.FIELD.LEN(FN);

   5875  1 001225   000000 236100                    LDQ     0,,PR0
         1 001226   000003 402007                    MPY     3,DL
         1 001227   000100 101506                    MRL     fill='000'O
         1 001230   100001 120002                    ADSC6   1,Q,PR1                  cn=1,n=2
         1 001231   200021 020006                    ADSC6   LEN,,AUTO                cn=0,n=6

     2426     5876
     2427     5877    3          END;  /* CASE */

     2428     5878
     2429     5879    2          RETURN;

   5879  1 001232   000001 702211                    TSX2  ! 1,X1

     2430     5880    2          END SET_LEN;
     2431     5881               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:437  
     2432     5882        /*I*     NAME:     SET_START
     2433     5883                 PURPOSE:  To calculate the offset to the start of a field in
     2434     5884                           a record buffer.
     2435     5885                 DESCRIPTION:
     2436     5886                 If the field is packed decimal, calculate the start in
     2437     5887                 nibbles, so we can add it to the nibble length from RECFIELD.
     2438     5888                 All other legal key fields must be byte aligned (and end on
     2439     5889                 a byte boundary), so calculate the start in bytes.
     2440     5890        */
     2441     5891    1   SET_START: PROC(FN);

   5891  1 001233   200036 741300       SET_START    STX1  ! TEMP_CHAR+2,,AUTO

     2442     5892    2          DCL FN UBIN;
     2443     5893        /* */
     2444     5894    3          DO CASE(RECFIELD.FIELD.TYPE(FN));

   5894  1 001234   200037 470500                    LDP0    @FN,,AUTO
         1 001235   000000 236100                    LDQ     0,,PR0
         1 001236   000003 402007                    MPY     3,DL
         1 001237   200006 471500                    LDP1    RECFIELD$,,AUTO
         1 001240   000100 101506                    MRL     fill='000'O
         1 001241   100001 020001                    ADSC6   1,Q,PR1                  cn=0,n=1
         1 001242   200042 020006                    ADSC6   @FN+3,,AUTO              cn=0,n=6
         1 001243   200042 236100                    LDQ     @FN+3,,AUTO
         1 001244   000011 136007                    SBLQ    9,DL
         1 001245   000061 116007                    CMPQ    49,DL
         1 001246   001250 602006 1                  TNC     s:5894+12,QL
         1 001247   001355 710000 1                  TRA     s:5904
         1 001250   001331 710000 1                  TRA     s:5898
         1 001251   001331 710000 1                  TRA     s:5898
         1 001252   001355 710000 1                  TRA     s:5904
         1 001253   001355 710000 1                  TRA     s:5904
         1 001254   001355 710000 1                  TRA     s:5904
         1 001255   001355 710000 1                  TRA     s:5904
         1 001256   001355 710000 1                  TRA     s:5904
         1 001257   001355 710000 1                  TRA     s:5904
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:438  
         1 001260   001355 710000 1                  TRA     s:5904
         1 001261   001355 710000 1                  TRA     s:5904
         1 001262   001355 710000 1                  TRA     s:5904
         1 001263   001355 710000 1                  TRA     s:5904
         1 001264   001355 710000 1                  TRA     s:5904
         1 001265   001355 710000 1                  TRA     s:5904
         1 001266   001355 710000 1                  TRA     s:5904
         1 001267   001355 710000 1                  TRA     s:5904
         1 001270   001331 710000 1                  TRA     s:5898
         1 001271   001355 710000 1                  TRA     s:5904
         1 001272   001355 710000 1                  TRA     s:5904
         1 001273   001355 710000 1                  TRA     s:5904
         1 001274   001355 710000 1                  TRA     s:5904
         1 001275   001355 710000 1                  TRA     s:5904
         1 001276   001331 710000 1                  TRA     s:5898
         1 001277   001355 710000 1                  TRA     s:5904
         1 001300   001355 710000 1                  TRA     s:5904
         1 001301   001355 710000 1                  TRA     s:5904
         1 001302   001355 710000 1                  TRA     s:5904
         1 001303   001355 710000 1                  TRA     s:5904
         1 001304   001355 710000 1                  TRA     s:5904
         1 001305   001355 710000 1                  TRA     s:5904
         1 001306   001355 710000 1                  TRA     s:5904
         1 001307   001331 710000 1                  TRA     s:5898
         1 001310   001355 710000 1                  TRA     s:5904
         1 001311   001355 710000 1                  TRA     s:5904
         1 001312   001355 710000 1                  TRA     s:5904
         1 001313   001355 710000 1                  TRA     s:5904
         1 001314   001355 710000 1                  TRA     s:5904
         1 001315   001355 710000 1                  TRA     s:5904
         1 001316   001355 710000 1                  TRA     s:5904
         1 001317   001355 710000 1                  TRA     s:5904
         1 001320   001355 710000 1                  TRA     s:5904
         1 001321   001355 710000 1                  TRA     s:5904
         1 001322   001331 710000 1                  TRA     s:5898
         1 001323   001355 710000 1                  TRA     s:5904
         1 001324   001355 710000 1                  TRA     s:5904
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:439  
         1 001325   001331 710000 1                  TRA     s:5898
         1 001326   001355 710000 1                  TRA     s:5904
         1 001327   001355 710000 1                  TRA     s:5904
         1 001330   001331 710000 1                  TRA     s:5898

     2445     5895    3             CASE(%PDLA_DATATYPE, %PDTA_DATATYPE, %PDLE_DATATYPE,

     2446     5896    3                  %PDTE_DATATYPE, %PDNS_DATATYPE, %PDFLT_DATATYPE,
     2447     5897    3                  %DATE_DATATYPE, %TIME_DATATYPE);
     2448     5898    3                IF MOD(FIELD_START.OFFSET(FN),9)=0 THEN

   5898  1 001331   000000 720100                    LXL0    0,,PR0
         1 001332   200007 473500                    LDP3    START$,,AUTO
         1 001333   300001 236110                    LDQ     1,X0,PR3
         1 001334   000011 506007                    DIV     9,DL
         1 001335   000044 733000                    LRS     36
         1 001336   000000 116003                    CMPQ    0,DU
         1 001337   001345 601000 1                  TNZ     s:5900

     2449     5899    3                   START=(FIELD_START.OFFSET(FN)/9)*2;

   5899  1 001340   300001 236110                    LDQ     1,X0,PR3
         1 001341   000011 506007                    DIV     9,DL
         1 001342   000001 736000                    QLS     1
         1 001343   200017 756100                    STQ     START,,AUTO
         1 001344   001352 710000 1                  TRA     s:5901

     2450     5900    3                ELSE START=(FIELD_START.OFFSET(FN)/9)*2 + 1;

   5900  1 001345   300001 236110                    LDQ     1,X0,PR3
         1 001346   000011 506007                    DIV     9,DL
         1 001347   000001 736000                    QLS     1
         1 001350   000001 036007                    ADLQ    1,DL
         1 001351   200017 756100                    STQ     START,,AUTO

     2451     5901    3                PACKED_FIELD=%YES#;

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:440  
   5901  1 001352   400000 236003                    LDQ     -131072,DU
         1 001353   200031 756100                    STQ     PACKED_FIELD,,AUTO
         1 001354   001362 710000 1                  TRA     s:5908

     2452     5902
     2453     5903    3             CASE(ELSE);

     2454     5904    3                START=FIELD_START.OFFSET(FN)/9;

   5904  1 001355   000000 720100                    LXL0    0,,PR0
         1 001356   200007 473500                    LDP3    START$,,AUTO
         1 001357   300001 236110                    LDQ     1,X0,PR3
         1 001360   000011 506007                    DIV     9,DL
         1 001361   200017 756100                    STQ     START,,AUTO

     2455     5905
     2456     5906    3          END;

     2457     5907
     2458     5908    2          RETURN;

   5908  1 001362   000001 702211                    TSX2  ! 1,X1

     2459     5909    2          END SET_START;
     2460     5910               %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:441  
     2461     5911        /*I*     NAME:     UNPACKCHECK
     2462     5912                 PURPOSE:  To check unpacked decimal fields
     2463     5913                 DESCRIPTION:
     2464     5914                      First check the sign.  It can either be at the beginning
     2465     5915                 or end of the number depending on the datatype.
     2466     5916
     2467     5917                      Overpunched sign is fun.  A sign and digit is contained in
     2468     5918                 a single byte.  The '{' and '}' are plus and minus 0.  'A' through
     2469     5919                 'I' are plus 1 to 9, and 'J' to 'R' are minus 1 to 9.
     2470     5920
     2471     5921                      Next, the number is check.  This is done by searching the
     2472     5922                 string against a table of all possible decimal values.  In this
     2473     5923                 case, this means the string can only contain the characters
     2474     5924                 '0' through '9'.
     2475     5925        */
     2476     5926                 %EJECT;
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:442  
     2477     5927    1   UNPACKCHECK: PROC ALTRET;

   5927  1 001363   200040 741300       UNPACKCHECK  STX1  ! @FN+1,,AUTO

     2478     5928        /* */
     2479     5929    2          FIELD$=PINCRC(F$, START);

   5929  1 001364   200003 470500                    LDP0    @F$,,AUTO
         1 001365   000000 471500                    LDP1    0,,PR0
         1 001366   200017 236100                    LDQ     START,,AUTO
         1 001367   000011 402007                    MPY     9,DL
         1 001370   100000 503506                    ABD     0,QL,PR1
         1 001371   200027 451500                    STP1    FIELD$,,AUTO

     2480     5930    2          NCHARS=LEN;

   5930  1 001372   200021 235100                    LDA     LEN,,AUTO
         1 001373   200022 755100                    STA     NCHARS,,AUTO

     2481     5931
     2482     5932    3          DO CASE(RECFIELD.FIELD.TYPE(F));

   5932  1 001374   200015 236100                    LDQ     F,,AUTO
         1 001375   000003 402007                    MPY     3,DL
         1 001376   200006 473500                    LDP3    RECFIELD$,,AUTO
         1 001377   000100 101506                    MRL     fill='000'O
         1 001400   300001 020001                    ADSC6   1,Q,PR3                  cn=0,n=1
         1 001401   200042 020006                    ADSC6   @FN+3,,AUTO              cn=0,n=6
         1 001402   200042 236100                    LDQ     @FN+3,,AUTO
         1 001403   000052 136007                    SBLQ    42,DL
         1 001404   000011 116007                    CMPQ    9,DL
         1 001405   001407 602006 1                  TNC     s:5932+11,QL
         1 001406   001531 710000 1                  TRA     s:5959
         1 001407   001420 710000 1                  TRA     s:5934
         1 001410   001440 710000 1                  TRA     s:5940
         1 001411   001455 710000 1                  TRA     s:5945
         1 001412   001505 710000 1                  TRA     s:5952
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:443  
         1 001413   001531 710000 1                  TRA     s:5959
         1 001414   001531 710000 1                  TRA     s:5959
         1 001415   001531 710000 1                  TRA     s:5959
         1 001416   001531 710000 1                  TRA     s:5959
         1 001417   001420 710000 1                  TRA     s:5934

     2483     5933    3             CASE(%UDLS_DATATYPE, %UDFLT_DATATYPE);

     2484     5934    3                IF REC(0) ~= '+' AND REC(0) ~= '-' THEN

   5934  1 001420   040000 106500                    CMPC    fill='040'O
         1 001421   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 001422   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 001423   001431 600000 1                  TZE     s:5936
         1 001424   040000 106500                    CMPC    fill='040'O
         1 001425   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 001426   000001 000001 2                  ADSC9   1                        cn=0,n=1
         1 001427   001431 600000 1                  TZE     s:5936

     2485     5935    3                   ALTRETURN;

   5935  1 001430   000000 702211                    TSX2  ! 0,X1

     2486     5936    3                FIELD$=PINCRC(FIELD$, 1);

   5936  1 001431   200027 236100                    LDQ     FIELD$,,AUTO
         1 001432   200000 036007                    ADLQ    65536,DL
         1 001433   200027 756100                    STQ     FIELD$,,AUTO

     2487     5937    3                NCHARS=NCHARS-1;

   5937  1 001434   200022 235100                    LDA     NCHARS,,AUTO
         1 001435   000001 135007                    SBLA    1,DL
         1 001436   200022 755100                    STA     NCHARS,,AUTO
         1 001437   001531 710000 1                  TRA     s:5959

     2488     5938
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:444  
     2489     5939    3             CASE(%UDTS_DATATYPE);

     2490     5940    3                IF REC(NCHARS-1) ~= '+' AND REC(NCHARS-1) ~= '-' THEN

   5940  1 001440   200022 235100                    LDA     NCHARS,,AUTO
         1 001441   040000 106505                    CMPC    fill='040'O
         1 001442   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         1 001443   000000 000001 2                  ADSC9   0                        cn=0,n=1
         1 001444   001452 600000 1                  TZE     s:5942
         1 001445   040000 106505                    CMPC    fill='040'O
         1 001446   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         1 001447   000001 000001 2                  ADSC9   1                        cn=0,n=1
         1 001450   001452 600000 1                  TZE     s:5942

     2491     5941    3                   ALTRETURN;

   5941  1 001451   000000 702211                    TSX2  ! 0,X1

     2492     5942    3                NCHARS=NCHARS-1;

   5942  1 001452   000001 135007                    SBLA    1,DL
         1 001453   200022 755100                    STA     NCHARS,,AUTO
         1 001454   001531 710000 1                  TRA     s:5959

     2493     5943
     2494     5944    3             CASE(%UDLO_DATATYPE);

     2495     5945    3                IF REC(0) ~= '{' AND REC(0) ~= '}' AND

   5945  1 001455   040000 106500                    CMPC    fill='040'O
         1 001456   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 001457   000002 000001 2                  ADSC9   2                        cn=0,n=1
         1 001460   001476 600000 1                  TZE     s:5948
         1 001461   040000 106500                    CMPC    fill='040'O
         1 001462   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 001463   000003 000001 2                  ADSC9   3                        cn=0,n=1
         1 001464   001476 600000 1                  TZE     s:5948
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:445  
         1 001465   040000 106500                    CMPC    fill='040'O
         1 001466   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 001467   000004 000001 2                  ADSC9   4                        cn=0,n=1
         1 001470   001475 602000 1                  TNC     s:5947
         1 001471   040100 106400                    CMPC    fill='040'O
         1 001472   000005 000001 2                  ADSC9   5                        cn=0,n=1
         1 001473   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 001474   001476 603000 1                  TRC     s:5948

     2496     5946    3                   (REC(0) < 'A' OR REC(0) > 'R') THEN
     2497     5947    3                   ALTRETURN;

   5947  1 001475   000000 702211                    TSX2  ! 0,X1

     2498     5948    3                FIELD$=PINCRC(FIELD$, 1);

   5948  1 001476   200027 236100                    LDQ     FIELD$,,AUTO
         1 001477   200000 036007                    ADLQ    65536,DL
         1 001500   200027 756100                    STQ     FIELD$,,AUTO

     2499     5949    3                NCHARS=NCHARS-1;

   5949  1 001501   200022 235100                    LDA     NCHARS,,AUTO
         1 001502   000001 135007                    SBLA    1,DL
         1 001503   200022 755100                    STA     NCHARS,,AUTO
         1 001504   001531 710000 1                  TRA     s:5959

     2500     5950
     2501     5951    3             CASE(%UDTO_DATATYPE);

     2502     5952    3                IF REC(NCHARS-1) ~= '{' AND REC(NCHARS-1) ~= '}' AND

   5952  1 001505   200022 235100                    LDA     NCHARS,,AUTO
         1 001506   040000 106505                    CMPC    fill='040'O
         1 001507   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         1 001510   000002 000001 2                  ADSC9   2                        cn=0,n=1
         1 001511   001527 600000 1                  TZE     s:5955
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:446  
         1 001512   040000 106505                    CMPC    fill='040'O
         1 001513   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         1 001514   000003 000001 2                  ADSC9   3                        cn=0,n=1
         1 001515   001527 600000 1                  TZE     s:5955
         1 001516   040000 106505                    CMPC    fill='040'O
         1 001517   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         1 001520   000004 000001 2                  ADSC9   4                        cn=0,n=1
         1 001521   001526 602000 1                  TNC     s:5954
         1 001522   040105 106400                    CMPC    fill='040'O
         1 001523   000005 000001 2                  ADSC9   5                        cn=0,n=1
         1 001524   177777 600001                    ADSC9   -1,A,PR1                 cn=3,n=1
         1 001525   001527 603000 1                  TRC     s:5955

     2503     5953    3                   (REC(NCHARS-1) < 'A' OR REC(NCHARS-1) > 'R') THEN
     2504     5954    3                   ALTRETURN;

   5954  1 001526   000000 702211                    TSX2  ! 0,X1

     2505     5955    3                NCHARS=NCHARS-1;

   5955  1 001527   000001 135007                    SBLA    1,DL
         1 001530   200022 755100                    STA     NCHARS,,AUTO

     2506     5956
     2507     5957    3          END;  /* CASE                               */

     2508     5958
     2509     5959    2          CALL SEARCH(I, DUMMY, DTABLE, FIELD);

   5959  1 001531   000000 471400 xsym               LDP1    B$SR_NON_DEC$
         1 001532   200027 474500                    LDP4    FIELD$,,AUTO
         1 001533   200022 720100                    LXL0    NCHARS,,AUTO
         1 001534   000000 164540                    TCT
         1 001535   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         1 001536   100000 000100                    ARG     0,,PR1
         1 001537   200025 000100                    ARG     I,,AUTO
         1 001540   200025 235100                    LDA     I,,AUTO
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:447  
         1 001541   000033 771000                    ARL     27
         1 001542   200026 755100                    STA     DUMMY,,AUTO
         1 001543   200025 551140                    STBA    I,'40'O,AUTO

     2510     5960
     2511     5961    2          IF I < NCHARS THEN

   5961  1 001544   200025 236100                    LDQ     I,,AUTO
         1 001545   200022 116100                    CMPQ    NCHARS,,AUTO
         1 001546   001550 603000 1                  TRC     s:5964

     2512     5962    2             ALTRETURN;

   5962  1 001547   000000 702211                    TSX2  ! 0,X1

     2513     5963
     2514     5964    2          RETURN;

   5964  1 001550   000001 702211                    TSX2  ! 1,X1

ERRBADRFIELD
 Sect OctLoc
   0     000   061504 002122                                                    1..R

ERRBADIRKEY
 Sect OctLoc
   0     001   061504 002132                                                    1..Z

ERRINDBC
 Sect OctLoc
   0     002   061504 001102                                                    1..B

PTABLE
 Sect OctLoc
   0     003   000000 000000   000000 000000   000000 001001   001001 001001    ................
   0     053*  001001 001001   001001 001001   001001 001001   001001 001001    ................
   0     177*  001001 001001   001001 001001   001001 001001   001001 001001    ................
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:448  

(unnamed)
 Sect OctLoc
   2     000   053040 040040   055040 040040   173040 040040   175040 040040    +   -   {   }
   2     004   101040 040040   122040 040040                                    A   R
     2515     5965    2          END UNPACKCHECK;
     2516     5966    1          END FMD$CHKFIELD;

PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:449  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   FM_FIELD_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FMD$CHKFIELD.
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:450  

 **** Variables and constants ****

  ****  Section 000 RoData FMD$CHKFIELD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/b STRC        r     1 ERRBADIRKEY                0-0-0/b STRC        r     1 ERRBADRFIELD
     2-0-0/b STRC        r     1 ERRINDBC                   3-0-0/c UBIN(9)     r     1 PTABLE(0:511)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @F$                       37-0-0/w PTR         r     1 @FN
    37-0-0/w PTR         r     1 @FN                        4-0-0/w PTR         r     1 @FTYP
    10-0-0/w PTR         r     1 ALTKEY$                   23-0-0/w UBIN        r     1 BOUNDRY
    30-0-0/c UBIN(9)     r     1 BTEMP                     30-0-0/b STRC(9)     r     1 BYT
    26-0-0/w UBIN        r     1 DUMMY                     15-0-0/w UBIN        r     1 F
    *0-0-0/w PTR         r     1 F$                        27-0-0/w PTR         r     1 FIELD$
    16-0-0/w UBIN        r     1 FIRST                     14-0-0/w UBIN        r     1 FN
    *0-0-0/w UBIN        r     1 FN                        *0-0-0/w UBIN        r     1 FN
    *0-0-0/w UBIN        r     1 FTYP                      25-0-0/w UBIN        r     1 I
     5-0-0/w PTR         r     1 JDCB$                     12-0-0/w UBIN        r     1 KEYSIZE
    11-0-0/w PTR         r     1 KFIELD$                   21-0-0/w UBIN        r     1 LEN
    13-0-0/w UBIN        r     1 N                         22-0-0/w UBIN        r     1 NCHARS
    24-0-0/w UBIN        r     1 NDIG                      20-0-0/w UBIN        r     1 NEW_START
    31-0-0/b BIT         r     1 PACKED_FIELD               6-0-0/w PTR         r     1 RECFIELD$
    17-0-0/w UBIN        r     1 START                      7-0-0/w PTR         r     1 START$
    34-0-0/c CHAR        r     1 TEMP_CHAR                 32-0-0/w UBIN        r     1 TEMP_START
    33-0-0/w UBIN        r     1 TEMP_SUM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:451  

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 B$SR_NON_DEC$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(4608)  r     1 DTABLE
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/c ACHR        r     1 FIELD
     0-0-0/w STRC(72)    r     1 FIELD_START                0-0-0/w STRC(360)   r     1 IRKEYS
     0-0-0/w STRC(81)    r     1 KFIELD                     0-0-0/c CHAR        r     1 REC(0:0)
     0-0-0/d STRC(54)    r     1 RECFIELD


   Procedure FMD$CHKFIELD requires 873 words for executable code.
   Procedure FMD$CHKFIELD requires 36 words of local(AUTO) storage.

    No errors detected in file FMD$BUF.:E05TSI    .
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:452  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:453  
          MINI XREF LISTING

ALTKEY$
      5528**DCL      5292--IMP-PTR  5564<<ASSIGN   5566>>ASSIGN   5567>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       460**DCL       460--REDEF
B$JIT.DCB$
       534**DCL      5557>>ASSIGN
B$JIT.ERR
       366**DCL      5624<<ASSIGN   5628<<ASSIGN   5647<<ASSIGN
B$JIT.ERR.MID
       367**DCL       367--REDEF
B$JIT.JRESPEAK
       528**DCL       529--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       637**DCL       637--REDEF     638--REDEF
B$JIT.PNR
       541**DCL       541--REDEF
B$JIT.TSLINE
       635**DCL       636--REDEF
B$JIT$
      5392**DCL       361--IMP-PTR  5557>>ASSIGN   5624>>ASSIGN   5628>>ASSIGN   5647>>ASSIGN
B$ROSEG$
      5393**DCL      5558>>ASSIGN   5559>>ASSIGN   5560>>ASSIGN   5564>>ASSIGN
B$SR_NON_DEC$
      5506**DCL      5507--IMP-PTR  5959>>CALLBLT
BOUNDRY
      5539**DCL      5770<<ASSIGN   5772<<ASSIGN   5784>>IF       5801>>IF
BTEMP
      5548**DCL      5733<<ASSIGN   5783<<ASSIGN   5800<<ASSIGN   5821<<ASSIGN   5832<<ASSIGN
BYT
      5544**DCL      5548--REDEF
BYT.HBIT
      5545**DCL      5734>>IF       5835>>IF
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:454  
BYT.LOWER
      5547**DCL      5791>>IF       5803>>IF       5822>>IF
BYT.UPPER
      5546**DCL      5786>>IF       5808>>IF       5833>>IF
CALC_START
      5668**PROC     5603--CALL
CHECK_TYPE
      5701**PROC     5596--CALL     5617--CALL
DTABLE
      5507**DCL      5959>>CALLBLT
DUMMY
      5542**DCL      5842<<CALLBLT  5959<<CALLBLT
ERR
      5623**LABEL    5596--CALLALT  5607--GOTO     5617--CALLALT
ERR IN PROCEDURE CHECK_TYPE
      5744**LABEL    5707--CALLALT  5711--CALLALT  5719--CALLALT  5739--CALLALT
ERRBADIRKEY
      5384**DCL      5624>>ASSIGN
ERRBADRFIELD
      5380**DCL      5628>>ASSIGN
ERRINDBC
      5388**DCL      5647>>ASSIGN
F
      5533**DCL      5579<<ASSIGN   5580<>CALL     5581<>CALL     5601<<ASSIGN   5602<>CALL     5629>>ASSIGN
      5648>>ASSIGN   5670>>DOCASE   5703>>DOCASE   5779>>DOCASE   5932>>DOCASE
F$
        36**DCL        35--PROC     5565<>CALL     5714>>ASSIGN   5722>>ASSIGN   5767>>ASSIGN   5816>>ASSIGN
      5929>>ASSIGN
F$DCB.ACTPOS
      5208**DCL      5208--REDEF
F$DCB.ALTKEYX
      5206**DCL      5564>>ASSIGN
F$DCB.ARS
      5183**DCL      5183--REDEF    5625<<ASSIGN   5629<<ASSIGN   5648<<ASSIGN
F$DCB.ATTR
      5201**DCL      5202--REDEF
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:455  
F$DCB.BORROW
      5216**DCL      5216--REDEF    5216--REDEF    5216--REDEF
F$DCB.DCBNAME.L
      5230**DCL      5230--IMP-SIZ
F$DCB.EOMCHAR
      5187**DCL      5187--REDEF
F$DCB.FIELDX
      5207**DCL      5558>>ASSIGN
F$DCB.FLDID
      5211**DCL      5211--REDEF
F$DCB.FORM$
      5205**DCL      5205--REDEF
F$DCB.FSECT
      5221**DCL      5221--REDEF
F$DCB.FSN
      5198**DCL      5198--REDEF    5198--REDEF    5199--REDEF
F$DCB.HEADER$
      5204**DCL      5204--REDEF
F$DCB.INDX
      5221**DCL      5566>>ASSIGN   5567>>ASSIGN
F$DCB.IXTNSIZE
      5202**DCL      5202--REDEF
F$DCB.KFIELDX
      5208**DCL      5560>>ASSIGN
F$DCB.LASTSTA$
      5192**DCL      5192--REDEF
F$DCB.LVL
      5217**DCL      5217--REDEF
F$DCB.NAME.C
      5192**DCL      5192--REDEF
F$DCB.NOEOF
      5213**DCL      5213--REDEF
F$DCB.NRECS
      5203**DCL      5203--REDEF
F$DCB.NRECX
      5222**DCL      5222--REDEF
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:456  
F$DCB.OHDR
      5214**DCL      5214--REDEF
F$DCB.ORG
      5197**DCL      5197--REDEF
F$DCB.PRECNO
      5220**DCL      5220--REDEF
F$DCB.RCSZ
      5225**DCL      5225--REDEF
F$DCB.RES
      5193**DCL      5193--REDEF
F$DCB.SETX
      5205**DCL      5205--REDEF
F$DCB.STARTX
      5208**DCL      5559>>ASSIGN
F$DCB.TAB$
      5204**DCL      5205--REDEF
F$DCB.TDA
      5219**DCL      5219--REDEF
F$DCB.UBYTES
      5221**DCL      5593>>IF
F$DCB.WSN
      5194**DCL      5194--REDEF
FIELD
      5523**DCL      5842>>CALLBLT  5959>>CALLBLT
FIELD$
      5543**DCL      5522--IMP-PTR  5523--IMP-PTR  5714<<ASSIGN   5715>>ASSIGN   5722<<ASSIGN   5726>>ASSIGN
      5732>>ASSIGN   5767<<ASSIGN   5782>>ASSIGN   5799>>ASSIGN   5816<<ASSIGN   5820>>ASSIGN   5825<<ASSIGN
      5825>>ASSIGN   5831>>ASSIGN   5842>>CALLBLT  5929<<ASSIGN   5934>>IF       5934>>IF       5936<<ASSIGN
      5936>>ASSIGN   5940>>IF       5940>>IF       5945>>IF       5945>>IF       5945>>IF       5945>>IF
      5948<<ASSIGN   5948>>ASSIGN   5952>>IF       5952>>IF       5952>>IF       5952>>IF       5959>>CALLBLT
FIELD_START.OFFSET
      5285**DCL      5898>>IF       5899>>ASSIGN   5900>>ASSIGN   5904>>ASSIGN
FIRST
      5534**DCL      5567<<ASSIGN   5601>>ASSIGN
FN
      5532**DCL      5573<<DOINDEX  5579>>ASSIGN   5601>>ASSIGN   5625>>ASSIGN
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:457  
FN IN PROCEDURE SET_LEN
      5861**DCL      5860--PROC     5863>>DOCASE   5869>>ASSIGN   5872>>ASSIGN   5875>>ASSIGN
FN IN PROCEDURE SET_START
      5892**DCL      5891--PROC     5894>>DOCASE   5898>>IF       5899>>ASSIGN   5900>>ASSIGN   5904>>ASSIGN
FTYP
        37**DCL        35--PROC     5562>>IF       5575>>IF       5623>>IF
HFF$DSIZ
      5395**DCL-ENT  5565--CALL
I
      5541**DCL      5842<<CALLBLT  5844>>IF       5959<<CALLBLT  5961>>IF
IRKEYS.K.FIRSTFIELD
      5293**DCL      5567>>ASSIGN
IRKEYS.K.NFIELDS
      5293**DCL      5566>>ASSIGN
JDCB$
      5525**DCL      5183--IMP-PTR  5557<<ASSIGN   5558>>ASSIGN   5559>>ASSIGN   5560>>ASSIGN   5564>>ASSIGN
      5566>>ASSIGN   5567>>ASSIGN   5593>>IF       5625>>ASSIGN   5629>>ASSIGN   5648>>ASSIGN
KEYSIZE
      5530**DCL      5565<>CALL     5604>>IF       5606>>IF
KFIELD.FIELD
      5299**DCL      5579>>ASSIGN   5601>>ASSIGN
KFIELD.NFIELDS
      5299**DCL      5571>>ASSIGN
KFIELD$
      5529**DCL      5299--IMP-PTR  5560<<ASSIGN   5571>>ASSIGN   5579>>ASSIGN   5601>>ASSIGN
LEN
      5537**DCL      5583>>ASSIGN   5674>>ASSIGN   5678>>ASSIGN   5715>>ASSIGN   5718<<ASSIGN   5718>>ASSIGN
      5723>>ASSIGN   5724>>IF       5738<<ASSIGN   5738>>ASSIGN   5774>>IF       5795<<ASSIGN   5795>>ASSIGN
      5799>>ASSIGN   5812<<ASSIGN   5812>>ASSIGN   5826<<ASSIGN   5826>>ASSIGN   5829>>IF       5831>>ASSIGN
      5837<<ASSIGN   5837>>ASSIGN   5840>>ASSIGN   5869<<ASSIGN   5872<<ASSIGN   5875<<ASSIGN   5930>>ASSIGN
LOOP
      5573**LABEL    5610--EXIT
N
      5531**DCL      5566<<ASSIGN   5571<<ASSIGN   5573>>DOINDEX
NCHARS
      5538**DCL      5523--IMP-SIZ  5723<<ASSIGN   5726>>ASSIGN   5732>>ASSIGN   5840<<ASSIGN   5841>>IF
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:458  
      5842>>CALLBLT  5844>>IF       5930<<ASSIGN   5937<<ASSIGN   5937>>ASSIGN   5940>>IF       5940>>IF
      5942<<ASSIGN   5942>>ASSIGN   5949<<ASSIGN   5949>>ASSIGN   5952>>IF       5952>>IF       5952>>IF
      5952>>IF       5955<<ASSIGN   5955>>ASSIGN   5959>>CALLBLT  5961>>IF
NDIG
      5540**DCL      5775<<ASSIGN   5777<<ASSIGN   5801>>IF
NEW_START
      5536**DCL      5568<<ASSIGN   5600>>ASSIGN   5606>>IF       5674<<ASSIGN   5678<<ASSIGN
PACKCHECK
      5765**PROC     5707--CALL     5739--CALL
PACKED_FIELD
      5549**DCL      5574<<ASSIGN   5584>>IF       5615>>IF       5675<<ASSIGN   5901<<ASSIGN
PTABLE
      5509**DCL      5842>>CALLBLT
REC
      5522**DCL      5715>>ASSIGN   5726>>ASSIGN   5732>>ASSIGN   5782>>ASSIGN   5799>>ASSIGN   5820>>ASSIGN
      5831>>ASSIGN   5934>>IF       5934>>IF       5940>>IF       5940>>IF       5945>>IF       5945>>IF
      5945>>IF       5945>>IF       5952>>IF       5952>>IF       5952>>IF       5952>>IF
RECFIELD.DECFIELD.LEN
      5245**DCL      5869>>ASSIGN
RECFIELD.FIELD
      5245**DCL      5245--REDEF
RECFIELD.FIELD.LEN
      5245**DCL      5872>>ASSIGN   5875>>ASSIGN
RECFIELD.FIELD.TYPE
      5245**DCL      5670>>DOCASE   5703>>DOCASE   5779>>DOCASE   5863>>DOCASE   5894>>DOCASE   5932>>DOCASE
RECFIELD$
      5526**DCL      5238--IMP-PTR  5558<<ASSIGN   5670>>DOCASE   5703>>DOCASE   5779>>DOCASE   5863>>DOCASE
      5869>>ASSIGN   5872>>ASSIGN   5875>>ASSIGN   5894>>DOCASE   5932>>DOCASE
REC_TOO_SMALL
      5623**LABEL    5594--GOTO
SET_LEN
      5860**PROC     5581--CALL     5602--CALL
SET_START
      5891**PROC     5580--CALL
START
      5535**DCL      5582>>ASSIGN   5583>>ASSIGN   5600<<ASSIGN   5604>>IF       5616<<ASSIGN   5616>>ASSIGN
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:459  
      5674>>ASSIGN   5678>>ASSIGN   5714>>ASSIGN   5722>>ASSIGN   5724>>IF       5767>>ASSIGN   5769>>IF
      5796<<ASSIGN   5796>>ASSIGN   5816>>ASSIGN   5818>>IF       5824<<ASSIGN   5824>>ASSIGN   5899<<ASSIGN
      5900<<ASSIGN   5904<<ASSIGN   5929>>ASSIGN
START$
      5527**DCL      5282--IMP-PTR  5559<<ASSIGN   5898>>IF       5899>>ASSIGN   5900>>ASSIGN   5904>>ASSIGN
TEMP_CHAR
      5552**DCL      5715<<ASSIGN   5716>>IF       5726<<ASSIGN   5727>>IF       5732<<ASSIGN   5733>>ASSIGN
      5782<<ASSIGN   5783>>ASSIGN   5799<<ASSIGN   5800>>ASSIGN   5820<<ASSIGN   5821>>ASSIGN   5831<<ASSIGN
      5832>>ASSIGN
TEMP_START
      5550**DCL      5582<<ASSIGN   5586<<ASSIGN   5586>>ASSIGN
TEMP_SUM
      5551**DCL      5583<<ASSIGN   5587<<ASSIGN   5587>>ASSIGN   5593>>IF
UNPACKCHECK
      5927**PROC     5711--CALL     5719--CALL
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:460  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #009=FMD$CHKFIELD File=FMD$BUF.:E05TSI                             TUE 07/29/97 16:41 Page:461  
              MINI UREF LISTING

B_POINTER    5447**DCL-ENT
FMD$CHKFIELD      35**PROC
