

14:58 JUL 28 '97 KY_URP_M.:E05SI                                           1    
    1      /*M* KY_URP_M - URP handler macros */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      %MACRO KY$STT_URP (NAME=KY$STT_URP,LVL=1,STCLASS=BASED,LAST=";");
    8      %LSET LISTDIR='0'B;
    9      %LSET LISTEXP='1'B;
   10      %LSET LISTCOM='0'B;
   11      %LSET LISTSUB='1'B;
   12      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   13      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   14      %LSET INIT=CHARTEXT('INIT');
   15      %ELSE;
   16      %LSET INIT=CHARTEXT('/*');
   17      %ENDIF;
   18      %LSET LVL0=LVL;
   19      %LSET LVL1=%(LVL0+1);
   20      %IF LVL=1;
   21      DCL 1 NAME STCLASS ALIGNED,
   22      %ELSE;
   23      %LVL0 NAME ALIGNED,
   24      %ENDIF;
   25      %KL_REQSTATS(NAME=REQSTATS,LVL=%LVL1,STCLASS=STCLASS,LAST=",");
   26      %KH$STT(LAST=",",LVL=%LVL1,STCLASS=STCLASS,NAME=USRSTT);
   27      /* Number of devices of each type (LP, CP, or CR).  Indexed by %KY#TYP_type. */
   28      %LVL1 NUMDVC(0:%KY#TYP_CR) UBIN(32) %INIT(0*0)%CHARTEXT('/**/') LAST
   29      %MEND;
   30      %MACRO KY$CTX(NAME=KY$CTX,STCLASS=);
   31
   32      %LSET LISTDIR='0'B;
   33      %LSET LISTEXP='1'B;
   34      %LSET LISTCOM='0'B;
   35      %LSET LISTSUB='1'B;
   36      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   37      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           2    
   38      %LSET INIT=CHARTEXT('INIT');
   39      %ELSE;
   40      %LSET INIT=CHARTEXT('/*');
   41      %ENDIF;
   42
   43      DCL 1 NAME ALIGNED STCLASS,
   44         2  NEXT$       PTR ALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   45         2  PRIOR$      PTR ALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   46
   47         2  DVC_STATE   UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
   48         2  DVC_STATUS  UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
   49         2  LAST_IOSTAT UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
   50      %IF NOT(MODE_FEP);
   51        2 * BIT(1),
   52      %ENDIF;
   53         2  DSCPND      BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   54         2  VFU_LOADED  BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   55           2 LPI BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),   /* 1=8lpi, 0=6lpi*/
   56         2  *           UBIN(5) UNAL %INIT(0)%CHARTEXT('/**/'),
   57            %IF NOT(MODE_FEP);
   58              2 STATUSW,
   59                 3 * BIT(2) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   60                 3 BYT UBIN(16) UNAL %INIT(0)%CHARTEXT('/**/'),
   61            %ELSE;
   62              2 STATUSW UBIN(%(18-(2*BITBIN(MODE_FEP)))) %INIT(0)%CHARTEXT('/**/'),
   63            %ENDIF;
   64         2  LP_STATUS   REDEF STATUSW CALIGNED,
   65           3   DEV_READY     BIT(1)  UNAL,
   66           3   STATUS_CHANGE BIT(1)  UNAL,
   67           3   *             BIT(10) UNAL,
   68           3   CORRECT_MEM   BIT(1)  UNAL,
   69           3   NON_RESOURCE  BIT(1)  UNAL,
   70           3   PARITY_ERROR  BIT(1)  UNAL,
   71           3   BAD_MEM       BIT(1)  UNAL,
   72
   73         2  LP_PR54_STATUS   REDEF STATUSW CALIGNED,
   74           3   DEV_READY     BIT(1)  UNAL,
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           3    
   75           3   STATUS_CHANGE BIT(1)  UNAL,
   76           3   LOST_DATA     BIT(1)  UNAL,
   77           3   EOF           BIT(1)  UNAL,
   78           3   LOST_PRIOR    BIT(1)  UNAL,
   79           3   PRTCL_ERR     BIT(1)  UNAL,
   80           3   POWER_UP      BIT(1)  UNAL,
   81           3   BIT_8_MODE    BIT(1)  UNAL,
   82           3   *             BIT(4)  UNAL,
   83           3   CORRECT_MEM   BIT(1)  UNAL,
   84           3   NON_RESOURCE  BIT(1)  UNAL,
   85           3   PARITY_ERROR  BIT(1)  UNAL,
   86           3   BAD_MEM       BIT(1)  UNAL,
   87         2  CP_STATUS   REDEF STATUSW CALIGNED,
   88           3   DEV_READY     BIT(1)  UNAL,
   89           3   STATUS_CHANGE BIT(1)  UNAL,
   90           3   SERVICE_RATE  BIT(1)  UNAL,
   91           3   BAD_ASCII     BIT(1)  UNAL,    /* not useful for punch */
   92           3   PUNCH_ERROR   BIT(1)  UNAL,
   93           3   PUNCH_DVC_DTC BIT(1)  UNAL,
   94           3   CARD_JAM      BIT(1)  UNAL,
   95           3   HOPPER_EMPTY  BIT(1)  UNAL,
   96           3   *             BIT(4)  UNAL,
   97           3   CORRECT_MEM   BIT(1)  UNAL,
   98           3   NON_RESOURCE  BIT(1)  UNAL,
   99           3   PARITY_ERROR  BIT(1)  UNAL,
  100           3   BAD_MEM       BIT(1)  UNAL,
  101         2  CR_9111_STATUS REDEF STATUSW CALIGNED,
  102           3   DEV_READY BIT(1) UNAL,
  103           3   ATTEN BIT(1) UNAL,
  104           3   SERV_RATE BIT(1) UNAL,
  105           3   MARK BIT(1) UNAL,
  106           3   FORTY_CLM BIT(1) UNAL,
  107           3   * BIT(2) UNAL,
  108           3   READ_CHK BIT(1) UNAL,
  109           3   BAD_ASC BIT(1) UNAL,
  110           3   * BIT(3) UNAL,
  111           3   MEM_CORR BIT(1) UNAL,
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           4    
  112           3   NON_RES BIT(1) UNAL,
  113           3   PARITY BIT(1) UNAL,
  114           3   BAD_MEM BIT(1) UNAL,
  115         2  CR_9107_STATUS REDEF STATUSW CALIGNED,
  116           3   DEV_READY BIT(1) UNAL,
  117           3   ATTEN BIT(1) UNAL,
  118           3   SERV_RATE BIT(1) UNAL,
  119           3   BAD_ASC BIT(1) UNAL,
  120           3   READ_REG BIT(1) UNAL,
  121           3   READ_CHK BIT(1) UNAL,
  122           3   CARD_JAM BIT(1) UNAL,
  123           3   HOPPER_EMPTY BIT(1) UNAL,
  124           3   * BIT(4) UNAL,
  125           3   MEM_CORR BIT(1) UNAL,
  126           3   NON_RES BIT(1) UNAL,
  127           3   PARITY BIT(1) UNAL,
  128           3   BAD_MEM BIT(1) UNAL,
  129         2  DVC_ID      UBIN(%(18-(2*BITBIN(MODE_FEP)))) CALIGNED %INIT(0)%CHARTEXT('/**/'),
  130         2  VDI$        PTR ALIGNED %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  131         2  CHAN        UBIN(10) UNAL %INIT(0)%CHARTEXT('/**/'),
  132         2  *           UBIN(%(8-(2*BITBIN(MODE_FEP))))  UNAL %INIT(0)%CHARTEXT('/**/'),
  133         2  DVCTYP      UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  134         2  TIMEOUT     UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  135         2  RTRYNUM     UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  136
  137         2  MODE        CALIGNED,
  138      %IF NOT(MODE_FEP);
  139           3   * BIT(1),
  140      %ENDIF;
  141           3   BIN_CURR      BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  142           3   BIN_NEXT      UBIN(1) UNAL %INIT(0)%CHARTEXT('/**/'),
  143           3   BIN_IN        BIT(1)  UNAL %INIT('0'B)%CHARTEXT('/**/'),
  144           3   *             UBIN(5) UNAL %INIT(1)%CHARTEXT('/**/'),
  145
  146         2  PST         REDEF MODE CALIGNED,
  147           3   LIN           UBIN BYTE UNAL,
  148
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           5    
  149         2 *            BIT(%(18-(2*BITBIN(MODE_FEP)))) CALIGNED %INIT('0'B)%CHARTEXT('/**/'),
  150         2  Q           CALIGNED,
  151           3   FIRST$        PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  152           3   CURRENT$      PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  153           3   INPUT$        PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  154           3   OUTPUT$       PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  155           3   THRTL         UNAL,
  156      %IF NOT(MODE_FEP);
  157             4 * BIT(1),
  158      %ENDIF;
  159             4   BUF_OVRFLOW     BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  160             4   OUTAMEM         BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  161      %IF NOT(MODE_FEP);
  162             4   * BIT(1),
  163      %ENDIF;
  164             4   *               BIT(14) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  165           3   CURRSIZE      UBIN(%(18-(2*BITBIN(MODE_FEP)))) UNAL %INIT(0)%CHARTEXT('/**/'),
  166           3   UPRLIMIT      UBIN(%(18-(2*BITBIN(MODE_FEP)))) CALIGNED %INIT(700)%CHARTEXT('/**/'),
  167           3   LOWRLIMIT     UBIN(%(18-(2*BITBIN(MODE_FEP)))) UNAL %INIT(200)%CHARTEXT('/**/'),
  168
  169         2  INPUT       CALIGNED,
  170           3   BUF$          PTR CALIGNED,
  171           3   BUF_SIZE      UBIN(%(18-(2*BITBIN(MODE_FEP)))) CALIGNED,
  172           3   REC_SIZE      UBIN(%(18-(2*BITBIN(MODE_FEP)))) UNAL,
  173      %IF NOT(MODE_FEP);
  174           3   * BIT(1),
  175      %ENDIF;
  176           3   BIN           BIT(1) UNAL,
  177           3   EOF           BIT(1) UNAL,
  178      %IF NOT(MODE_FEP);
  179           3   * BIT(1),
  180      %ENDIF;
  181           3   *             UBIN(14) UNAL,
  182
  183         2  DEFRD       CALIGNED,
  184      %IF NOT(MODE_FEP);
  185           3   * BIT(1),
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           6    
  186      %ENDIF;
  187           3   INTRPT        BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  188      %IF NOT(MODE_FEP);
  189           3   * BIT(1),
  190      %ENDIF;
  191           3   *             BIT(15) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  192           3   STATUSW       UBIN(%(18-(2*BITBIN(MODE_FEP)))) UNAL %INIT(0)%CHARTEXT('/**/'),
  193      %IF MODE_FEP;
  194           3   ONLINE        REDEF STATUSW BIT(1) ALIGNED,
  195      %ENDIF;
  196
  197         2  RESCHEDULE  CALIGNED,
  198      %IF NOT(MODE_FEP);
  199           3   * BIT(1),
  200      %ENDIF;
  201           3   TIMER         BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  202           3   INTERRUPT     BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  203           3   BRK           BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  204           3   DSC           BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  205           3   *             UBIN(4) UNAL %INIT(0)%CHARTEXT('/**/'),
  206
  207         2  DSCRSN      UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  208
  209         2  VDIENB      ALIGNED,
  210           3   STRENB        (0:%KV_USR_FNC_HI) BIT(1) UNAL %INIT('0'B*0)%CHARTEXT('/**/'),
  211           3   EVTENB        (0:%KV_USR_EVT_ID_HI) BIT(1) UNAL %INIT('0'B*0)%CHARTEXT('/**/'),
  212      %LSET INDX = %KV_USR_FNC_HI + %KV_USR_EVT_ID_HI + 2;
  213           3   *             UBIN(%(54-(6*BITBIN(MODE_FEP)) - %INDX)) UNAL %INIT(0)%CHARTEXT('/**/'),
  214           3   *             UBIN(%(18-(2*BITBIN(MODE_FEP)))) UNAL %INIT(0)%CHARTEXT('/**/'),
  215
  216         2  CLEAR_VDIENB REDEF VDIENB ALIGNED,
  217           3   PTR1          PTR,
  218           3   PTR2          PTR;
  219      %MEND;
  220
  221      %MACRO KY$REC ( NAME = KY$REC, STCLASS = BASED, TEXT = 'none' );
  222
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           7    
  223      %LSET LISTDIR='0'B;
  224      %LSET LISTEXP='1'B;
  225      %LSET LISTCOM='0'B;
  226      %LSET LISTSUB='1'B;
  227      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  228      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  229      %LSET INIT=CHARTEXT('INIT');
  230      %LSET KLUGE = CHARTEXT('/*');
  231      %LSET TXT_LEN = CHARTEXT('0');
  232      %IF TEXT = 'none';
  233      %LSET KLUGE_TEXT = ' ';
  234      %LSET KLUGE_LEN = CHARTEXT('0');
  235      %ELSE;
  236      %LSET KLUGE_LEN = LENGTHC(TEXT);
  237      %LSET KLUGE_TEXT = TEXT;
  238      %ENDIF;
  239      %ELSE;
  240      %LSET INIT=CHARTEXT('/*');
  241      %LSET KLUGE = CHARTEXT('');
  242      %LSET KLUGE_TEXT = ' ';
  243      %LSET KLUGE_LEN = ' ';
  244      %LSET TXT_LEN = CHARTEXT(CONCAT(TEXTCHAR(NAME),'.RECSIZE'));
  245      %ENDIF;
  246
  247      DCL 1 NAME ALIGNED STCLASS,
  248         2  BLK_END   BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  249         2  TYPE      UBIN(7) UNAL %INIT(%KY#TYPE_REC)%CHARTEXT('/**/'),
  250         2  RECSIZE   UBIN BYTE CALIGNED %INIT(%KLUGE_LEN)%CHARTEXT('/**/'),
  251         2  PRINTED   BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  252         2  BIN       BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  253         2  TOF       BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  254         2  REP_OTPMRK BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  255         2  *         BIT(4) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  256         2  SPACE_N   UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  257         2  OTPMRK    ALIGNED,
  258           3  *         CHAR(6) UNAL %INIT(' ')%CHARTEXT('/**/'),
  259         %KLUGE 2  TXTARRAY (0:0) CHAR(1) UNAL ,%CHARTEXT('/**/')
14:58 JUL 28 '97 KY_URP_M.:E05SI                                           8    
  260         2  TXT       %KLUGE REDEF TXTARRAY %CHARTEXT('/**/') CHAR(%TXT_LEN) ALIGNED %INIT(%KLUGE_TEXT)%CHARTEXT('/**/');
  261
  262      %MEND;
  263
  264      %MACRO KY$OUTMRK ( NAME = KY$OUTMRK, STCLASS = BASED );
  265
  266      %LSET LISTDIR='0'B;
  267      %LSET LISTEXP='1'B;
  268      %LSET LISTCOM='0'B;
  269      %LSET LISTSUB='1'B;
  270      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  271      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  272      %LSET INIT=CHARTEXT('INIT');
  273      %ELSE;
  274      %LSET INIT=CHARTEXT('/*');
  275      %ENDIF;
  276
  277      DCL 1 NAME ALIGNED STCLASS,
  278         2  BLK_END   BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  279         2  TYPE      UBIN(7) UNAL %INIT(%KY#TYPE_OUTMRK)%CHARTEXT('/**/'),
  280         2  MARKER    ALIGNED,
  281           3  *         CHAR(6) UNAL %INIT(' ')%CHARTEXT('/**/');
  282
  283      %MEND;
  284      %MACRO KY$Q_BLOCK (NAME=KY$Q_BLOCK,STCLASS=BASED);
  285      DCL 1 NAME STCLASS ALIGNED,
  286        2   NEXT$    PTR,
  287        2   DUMMY(0:%(KY#QBLOCK_SIZE-3)) UBIN WORD;
  288      %MEND;
  289      %MACRO TRACE(WHEREAT = JUNK,INPUT$ = JUNK);
  290        TRACE_BUF.WHERE(TRACE_CNT) = WHEREAT;
  291        TRACE_BUF.IN$(TRACE_CNT) = INPUT$;
  292        TRACE_CNT = TRACE_CNT + 1;
  293        IF TRACE_CNT > 200 THEN TRACE_CNT = 0;
  294      %MEND;

