

14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          1    
    1      /*M* KZ$HIPDEV - Device context for HIP devices */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* */
    8
    9      /*F* NAME:       KZ$HIPDEV
   10           PURPOSE:    Device-specific context for all HIP devices
   11      */
   12
   13      %MACRO KZ$HIPDEV(NAME=KZ$HIPDEV,LAST=";",STCLASS=BASED);
   14      %LSET LISTDIR='0'B;
   15      %LSET LISTEXP='1'B;
   16      %LSET LISTCOM='0'B;
   17      %LSET LISTSUB='1'B;
   18      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   19      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   20      %LSET INIT=CHARTEXT('INIT');
   21      %ELSE;
   22      %LSET INIT=CHARTEXT('/*');
   23      %ENDIF;
   24
   25      DCL 1 NAME STCLASS ALIGNED,
   26
   27            2 LNK$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   28                               /* LNK$ - Ptr to next dev ctx for this controller    */
   29
   30            2 CTR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   31                                    /* CTR$ - Ptr to controller ctx for this device */
   32
   33            2 VDI$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   34                                    /* VDI$ - Ptr to VDI context for this device    */
   35
   36            2 CHN$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   37                                              /* CHN$ - Pointer to channel entry.   */
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          2    
   38
   39            2 OTPHD$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   40                     /* OTPHD$ - Ptr to head of KZ$OTPBFR chain of output
   41                                 ready to be sent. */
   42
   43            2 OTPTL$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   44                                              /* OTPTL$ - Tail of OTPHD$ chain      */
   45
   46            2 DFRHD$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   47                     /* DFRHD$ - Head of chain of KZ$OTPBFR and/or KZ$INPBFR
   48                                 buffers that will be processed when VDH
   49                                 releases control. */
   50
   51            2 DFRTL$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   52                                              /* DFRTL$ - Tail of DFRHD$ chain      */
   53
   54            2 OTPCNT UBIN (%(18-BITBIN(MODE_FEP)*2)) %INIT(0)%CHARTEXT('/**/'),
   55                                    /* OTPCNT.. COUNT OF BUFFERS QUEUED FOR DEVICE  */
   56
   57            2 PRO,
   58                                              /* PRO - Items from the profile       */
   59
   60              %IF NOT (MODE_FEP);
   61              3 * BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   62              %ENDIF;
   63
   64              3 EWALT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   65                               /* EWALT - Set if this device needs EWALT command    */
   66
   67              3 FF BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   68                               /* FF - Set if this printer understands Form-Feed    */
   69
   70              3 OVRPRT,
   71                               /* OVRPRT - Non-zero if this printer can overprint   */
   72
   73                4 CR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   74                               /* CR - Set if printer overprints via CR character   */
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          3    
   75
   76                4 SI BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   77                               /* SI - Set if printer overprints via SI character   */
   78
   79              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
   80
   81            2 AID UBIN BYTE CALIGNED,
   82                                              /* AID - Last AID char received       */
   83
   84            %IF NOT (MODE_FEP);
   85            2 * BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
   86            %ENDIF;
   87
   88            2 PERM BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   89                     /* PERM - Set if this is a permanent context block,
   90                               that is it was created from SUPER defined
   91                               info and must not be released until the
   92                               line disconnects. */
   93
   94            2 ACTIVE BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   95                     /* ACTIVE - Set if this device is active, that is the
   96                                 device is turned on and not broken.  It does
   97                                 not mean that a user is associated. */
   98
   99            2 EWALT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  100                     /* EWALT - Set if this device was defined by SUPER
  101                                to be a 3278 type device. */
  102
  103            2 THROTL BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  104                     /* THROTL - Set if we are throttled down, that is we have
  105                                 told VDH not to send any more data. */
  106
  107            2 PRINTER BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  108                                    /* PRINTER - Set if this device is a printer.   */
  109
  110            2 OTPBSY BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  111                     /* OTPBSY - Output has been taken by the device manager
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          4    
  112                                 and given to the line manager, and it has
  113                                 not yet been sent. */
  114
  115            2 DONE BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  116                     /* DONE - Set if VDH has exited, and when he exited
  117                               there was output queued and current output
  118                               existed.  It means that when all queued
  119                               output has been sent, we should call VDH
  120                               for CMPOTP and send the current output. */
  121
  122            2 IGN_INP BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  123                    /* IGN_INP - Set if the remaining blocks of input are
  124                                 to be ignored */
  125
  126            2 HLT,
  127                     /* HLT - If any of these flags are set, the device is
  128                              halted (no output may be sent). */
  129
  130              %IF NOT (MODE_FEP);
  131              3 * BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  132              %ENDIF;
  133
  134              3 WACK BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  135                     /* WACK - Device answered WACK - will be reset when
  136                               device sends status. */
  137
  138              3 ERR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  139                                              /* ERR - Device error ocurred.        */
  140
  141              3 PAG BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  142                               /* PAG - Stopped at bottom of page awaiting ENTER.   */
  143
  144              3 ESCH BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  145                                              /* ESCH - User typed ESC-H.           */
  146
  147              3 INP BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  148                                              /* INP - Terminal is in input mode.   */
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          5    
  149
  150              3 DEVERR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  151                                              /* DEVERR - Set if device error       */
  152
  153              3 * UBIN(2) UNAL %INIT(0)%CHARTEXT('/**/'),
  154
  155            2 STATUS,
  156                                              /* STATUS - Last status received.     */
  157
  158              3 S1 UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
  159
  160              3 S2 UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
  161
  162            2 OTPBYTES UBIN (%(18-BITBIN(MODE_FEP)*2)) %INIT(0)%CHARTEXT('/**/'),
  163                     /* OTPBYTES - Number of bytes of data given to device
  164                                   manager but not sent yet.  Used for
  165                                   throttling. */
  166
  167            2 ADR UBIN BYTE %INIT(0)%CHARTEXT('/**/') CALIGNED,
  168                                              /* ADR - Address of device, 0-31.     */
  169
  170            2 DSC,
  171                     /* DSC - If any of these flags are set, this device is
  172                              in disconnect process.  The flags are set in
  173                              order as disconnect proceeds. */
  174
  175              %IF NOT (MODE_FEP);
  176              3 * BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  177              %ENDIF;
  178
  179              3 INT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  180                                         /* INT - Set when disconnect is initiated  */
  181
  182              3 TOLD_VDH BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  183                               /* TOLD_VDH - Set when VDH is told about disconnect  */
  184
  185              3 VDH_FINAL BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          6    
  186                                    /* VDH_FINAL - Set when VDH says he is all done */
  187
  188              3 DEV_FINAL BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  189                                         /* DEV_FINAL - Set when device is all done */
  190
  191              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
  192
  193
  194            2 DFR,
  195                     /* DFR - Flags to indicate operations that are deferred
  196                              until the next time we enter VDH */
  197
  198              %IF NOT (MODE_FEP);
  199              3 * BIT(1)  %INIT('0'B)%CHARTEXT('/**/'),
  200              %ENDIF;
  201
  202              3 DSCI BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  203                                              /* DSCI - Initial disconnect          */
  204
  205              3 DSCF BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  206                                              /* DSCF - Final disconnect            */
  207
  208              3 CMPOTP BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  209                                         /* CMPOTP - Call VDH for Complete Output   */
  210
  211              3 CLR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  212                                              /* CLR - Do a KZT$CLEARIMM            */
  213
  214              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
  215
  216            2 LSTOPR UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  217                                              /* LSTOPR - Last operation performed. */
  218
  219            2 LGN$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  220                                              /* LGN$ - Ptr to logon string         */
  221
  222            2 ROWS UBIN BYTE %INIT(0)%CHARTEXT('/**/') CALIGNED,
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          7    
  223                                    /* ROWS - Default number of rows on device.     */
  224
  225            2 COLS UBIN BYTE %INIT(0)%CHARTEXT('/**/') CALIGNED,
  226                                    /* COLS - Default number of columns on device.  */
  227
  228            2 OTPBFRSIZ UBIN (%(18-BITBIN(MODE_FEP)*2)) %INIT(7)%CHARTEXT('/**/') CALIGNED,
  229            /* OTPBFRSIZ - For printers = BFR SIZ (Max size for display stations )
  230                        output buffer in bytes */
  231
  232            2 LSTOTPLINX UBIN (%(18-BITBIN(MODE_FEP)*2)) %INIT(0)%CHARTEXT('/**/'),
  233                    /* LSTOTPLINX - For printers, the index into the
  234                       printer buffer where the last output line began */
  235
  236            2 SBA BIT(%(9-BITBIN(MODE_FEP))) %INIT('0'B)%CHARTEXT('/**/'),
  237                                    /* SBA - First of a pair of SBAs to convert     */
  238
  239            2 KBDLCK BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  240                                              /* KBDLCK - Set if keyboard is locked */
  241
  242            2 REACT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  243                     /* REACT - Set if dev is to be reconnected after disconnect    */
  244
  245            2 DSC_LATER BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  246                                         /*  Set if dev is to disconnected later    */
  247
  248            2 ONOTP BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  249                     /* SET WHEN THE DEVICE IS ON THE OUTPUT QUEUE IN LINE CONTEXT  */
  250            2 AWAIT_ENABLE BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  251                               /* SET IF DEVICE TRIED TO CONNECT BEFORE ENABLED     */
  252
  253            2 CLRD BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
  254                                              /* Set if device context cleared      */
  255
  256            2 OTPLNK$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
  257                                              /* LINK FOR OUTPUT QUEUE              */
  258
  259            2 RTRCNT UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
14:59 JUL 28 '97 KZ$HIPDEV.:E05SI                                          8    
  260                               /* RETRY COUNT FOR BUFFER ON HEAD OF OUTPUT QUEUE    */
  261
  262            2 XMT_TIME UBIN(%(36-BITBIN(MODE_FEP)*4)) %INIT(0)%CHARTEXT('/**/'),
  263                                              /* TIME STAMP OF BUFFER TRANSMISSION  */
  264
  265            2 * UBIN %INIT(0)%CHARTEXT('/**/') LAST
  266      %MEND;

