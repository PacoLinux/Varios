VERSION E05

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:1    
        1        1        /*M* FTC$CLOSE Contains tape closing routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CRT=1,CTI=4,DCI=6,SQB,ECI=3,CSI=3,IPC,DIN=2,SDI=3 */
        8        8
        9        9        FTC$CLOSE: PROC(PN$);
       10       10
       11       11        /*F*     NAME: FTC$CLOSE
       12       12                 PURPOSE: Close a tape DCB.
       13       13                 INPUT: PN$ - pointer to V area of FPT$CLOSE.
       14       14                    PN.ULBL_ - pointer to user trailing labels if not ADDR(NIL).
       15       15                    PN$.SN_ - pointer to serial number list if not ADDR(NIL).
       16       16         ***/
       17       17        /*P*     NAME: FTC$CLOSE
       18       18                 PURPOSE: Close a tape DCB.
       19       19                 DESCRIPTION: FTC$CLOSE is called with the pointer area
       20       20                    of the close FPT.  The tape is positioned
       21       21                    to the end of the current tape file and, if the file
       22       22                    has been modified, EOF labels are written.  If
       23       23                    the file has not been modified, the block count is
       24       24                    verified.  User specified close positioning and calls
       25       25                    to resource management are performed. The serial number
       26       26                    list is returned if requested.
       27       27         ***/
       28       28
       29       29         /***
       30       30          *** INCLUDE data:
       31       31          ***/
       32       32
       33       33        %INCLUDE B$JIT_C;
       34      347         %B$JIT0;
       35      436         %U$JIT1X;
       36      439         %M$JIT2X;
       37      442         %F$JIT3;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:2    
       38      447         %S$JIT4X;
       39      450         %J$JIT5X;
       40      453         %A$JIT6X;
       41      456        %INCLUDE B_PTRS_R;
       42      464        %INCLUDE CP_6_SUBS;
       43     1004        %INCLUDE CP_6;
       44     6563        %INCLUDE F$CP6P_C;
       45     6574        %INCLUDE F$CP6V_C;
       46     6800         %FPT$CLOSE_V;
       47     6809         %FPT$REM_V;
       48     6812         %FPT$REW_V;
       49     6815         %VLP$SN_V;
       50     6818        %MACRO F$DCBBJ(BASED=BASED);
       51     6819        %INCLUDE F$DCB;
       52     6868        %MEND;
       53     6869         %F$DCBBJ(BASED="BASED(JDCB$)");
       54     6919        %INCLUDE F_ERRORS_C;
       55     7159        %INCLUDE FM$CFU;
       56     7204         %FM$CFUJ;
       57     7209         %FT$CFUSN;
       58     7212        %INCLUDE FR_SUBS;
       59     7280        %MACRO FT$DDTBD(BASED=BASED);
       60     7281        %INCLUDE FT$DDT;
       61     7342        %MEND;
       62     7343         %FT$DDTBD(BASED="BASED(DDDT$)");
       63     7405        %INCLUDE FT_SUBS;
       64     7485        %INCLUDE NK$LDCT;
       65     7587         %NK$LDCT;
       66     7633        %INCLUDE NK_LDCT_R;
       67     7642        %INCLUDE FR$RAT;
       68     7695         %FR$RAT;
       69     7735
       70     7736         /***
       71     7737          *** External routines:
       72     7738          ***/
       73     7739
       74     7740    1     DCL FMP$CLSF ENTRY(1);                /* Close JRNL file                    */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:3    
       75     7741    1     DCL FPO$REWIND ENTRY(1) ALTRET;       /* Rewind optical disk volume.        */
       76     7742    1     DCL FRB$CLS ENTRY;                    /* Close resource                     */
       77     7743    1     DCL FRB$CREL ENTRY;                   /* Close resource and release         */
       78     7744    1     DCL FRB$CREM ENTRY;                   /* Close resource and remove          */
       79     7745    1     DCL FRZ$RRR ENTRY(3) ALTRET;       /* Remove/release drive by serial number */
       80     7746    1     DCL FSA$FSP ENTRY(2) ALTRET;          /* Free RO space                      */
       81     7747    1     DCL FTI$REWIND ENTRY ALTRET;          /* Rewind tape                        */
       82     7748    1     DCL FTI$REWINDDEV ENTRY(1) ALTRET;    /* Rewind tape by DCTX only           */
       83     7749    1     DCL FTI$SPFILE ENTRY ALTRET;          /* Skip DCB.ARS file marks            */
       84     7750    1     DCL FTI$WRFM ENTRY ALTRET;            /* Write file mark                    */
       85     7751    1     DCL FTI$WRFMDEV ENTRY(1) ALTRET;      /* Write file mark                    */
       86     7752    1     DCL FTR$JRNLDCB ENTRY ALTRET;         /* Moves JRNL CFU info to DCB         */
       87     7753    1     DCL FTR$RELCFUS ENTRY ALTRET;         /* Release all CFUs                   */
       88     7754    1     DCL FTR$RELFPOOLS ENTRY ALTRET;       /* Release all FPOOL buffer           */
       89     7755    1     DCL FTL$CLOSE ENTRY(5) ALTRET;        /* Process end of file labels         */
       90     7756    1     DCL FTL$GETFSN ENTRY ALTRET;          /* Get FSN from next HDR1             */
       91     7757    1     DCL FTL$PBSN ENTRY(3) ALTRET;         /* Position to beginning of section   */
       92     7758    1     DCL FTR$DPT ENTRY ALTRET;             /* Density, permit, type check/set    */
       93     7759    1     DCL FTW$TRNCHLD ENTRY ALTRET;         /* Trunc but hold FPOOL buffer        */
       94     7760    1     DCL HFF$DSIZ ENTRY(2) ALTRET;         /* Determine size of segment          */
       95     7761
       96     7762         /***
       97     7763          *** SYMREF data:
       98     7764          ***/
       99     7765
      100     7766    1     DCL B$JIT$ PTR SYMREF;                /* Pointer to JIT                     */
      101     7767    1     DCL F$CFU$ PTR SYMREF;                /* Pointer to CFU area                */
      102     7768
      103     7769         /***
      104     7770          *** Parameter:
      105     7771          ***/
      106     7772
      107     7773        %FPT$CLOSE_P(FPTN=PN$,PFMT=PTR,STCLASS=" ");
      108     7777
      109     7778         /***
      110     7779          *** AUTO data:
      111     7780          ***/
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:4    
      112     7781
      113     7782    1     DCL BUFSIZ SBIN WORD AUTO;            /* User buffer size                   */
      114     7783    1     DCL CFU$ PTR;                         /* Pointer to current SN CFU          */
      115     7784    1     DCL DCTX UBIN WORD AUTO;              /* Returned DCTX                      */
      116     7785    1     DCL DDDT$ PTR AUTO;                   /* Pointer to DDT entry for drive     */
      117     7786    1     DCL DFLTCLOSE SBIN AUTO;         /* Flag indicating if default close or not */
      118     7787    1     DCL DSRDLBL CHAR(3) AUTO;            /* Used to pass and receive label type */
      119     7788    1     DCL ERRSAV BIT(36) AUTO;              /* To save JIT.ERR                    */
      120     7789    1     DCL FCN UBIN WORD AUTO;               /* Function code                      */
      121     7790    1     DCL I SBIN AUTO;                      /* Indexing uses                      */
      122     7791    1     DCL J SBIN AUTO;                      /* Indexing uses                      */
      123     7792    1     DCL JDCB$ PTR AUTO;                   /* Pointer to DCB                     */
      124     7793    1     DCL POS SBIN AUTO;                    /* Positioning information            */
      125     7794    1     DCL SN$ PTR AUTO;                     /* Pointer to user's SN list          */
      126     7795    1     DCL TEMP SBIN AUTO;                   /* Temporary integer                  */
      127     7796    1     DCL TEMP$ PTR AUTO;                   /* Temp pointer                       */
      128     7797    1     DCL A_SN CHAR(6) AUTO;                /* A serial number                    */
      129     7798    1     DCL TOTLEFT SBIN WORD AUTO;           /* Number of items left               */
      130     7799
      131     7800         /***
      132     7801          *** EQUs:
      133     7802          ***/
      134     7803
      135     7804        %EQU SNSPERCFU=4;                       /* Number of serial number per CFU    */
      136     7805         /***
      137     7806          *** CONSTANT:
      138     7807          ***/
      139     7808
      140     7809        %FT$ERR( ERRNAME=E_NOSN, MID='03'O, CODE=%E$NOSN, SEV=2 );
      141     7817        /*E*     ERROR: FTC-E$NOSN-2
      142     7818                 MESSAGE: Blank serial number
      143     7819                 MESSAGE1: A serial number must be specified on a M$REM/M$REW call.
      144     7820         ***/
      145     7821
      146     7822        %FT$ERR( ERRNAME=E_PARTIALSN, MID='03'O, CODE=%E$PARTIALSN, SEV=0 );
      147     7830        /*E*     ERROR: FTC-E$PARTIALSN
      148     7831                 MESSAGE: Incomplete SN list returned% for DCB %DC%
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:5    
      149     7832                 MESSAGE1: Not enough space was supplied to return the
      150     7833                           entire serial number list% for DCB %DC%.
      151     7834         ***/
      152     7835
      153     7836        /********************/
      154     7837
      155     7838    1           DFLTCLOSE = 0;                  /* Not default close                  */
      156     7839    1           GOTO BEGINCLOSE;
      157     7840
      158     7841    1   FTC$DFLTCLOSE: ENTRY;
      159     7842        /*F*     NAME: FTC$DFLTCLOSE
      160     7843                 PURPOSE: Close a tape DCB with no FPT.
      161     7844                 DESCRIPTION: The tape is positioned to the end of the current
      162     7845                    tape file and, if the file has been modified, EOF labels
      163     7846                    are written.  If the file has not been modified, the block
      164     7847                    count is verified.  Tape resource management is called to
      165     7848                    close the volume without removing or releasing it.
      166     7849         ***/
      167     7850
      168     7851
      169     7852    1           DFLTCLOSE = 1;                  /* Default close                      */
      170     7853
      171     7854    1   BEGINCLOSE: ;
      172     7855
      173     7856         /***
      174     7857          *** Handle journaling.
      175     7858          ***/
      176     7859
      177     7860    1           JDCB$ = B$JIT.DCB$;
      178     7861    1           IF F$DCB.ACS = %JRNL#
      179     7862    2           THEN DO;
      180     7863    2              IF NOT F$DCB.OWNER
      181     7864    3              THEN DO;                     /* Close for non-owner                */
      182     7865    3                 CALL FMP$CLSF;
      183     7866    3                 RETURN;
      184     7867    3                 END;
      185     7868    3              ELSE DO;                     /* Close for owner                    */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:6    
      186     7869    3                 CALL FTR$JRNLDCB;
      187     7870    3                 END;
      188     7871    2              END;
      189     7872
      190     7873         /***
      191     7874          *** Undo RECL for possible subsequent M$OPEN.
      192     7875          ***/
      193     7876
      194     7877    1           IF F$DCB.ORG = %VARIABLE#
      195     7878    2           THEN DO;
      196     7879    2              IF F$DCB.EBCDIC
      197     7880    2              THEN F$DCB.RECL = F$DCB.RECL - 4;
      198     7881    2              ELSE IF F$DCB.RECL ~= 0
      199     7882    2                 THEN IF F$DCB.SPANNED
      200     7883    2                    THEN F$DCB.RECL = F$DCB.RECL - 5;
      201     7884    2                    ELSE F$DCB.RECL = F$DCB.RECL - 4;
      202     7885    2              END;
      203     7886
      204     7887         /***
      205     7888          *** Abnormal conditions which might affect tape close are:
      206     7889          *** 1) drive (and tape) were "lost" during a change volume
      207     7890          *** operation or 2) a position lost condition was previously
      208     7891          *** detected--only rewind and remove operations are allowed.
      209     7892          ***/
      210     7893
      211     7894    1           I = F$DCB.SETX;                 /* Get X of drive                     */
      212     7895    1           IF I <= 0
      213     7896    2           THEN DO;              /* Drive was probably lost during volume change */
      214     7897    2              CALL FTC_CLOSEUP;
      215     7898    2              RETURN;
      216     7899    2              END;
      217     7900    1           DDDT$ = NK$LDCT$(I)->NK$LDCT.DDT$;
      218     7901    1           IF FT$DDT.POSLOST OR FT$DDT.FUNNYPOS
      219     7902    2           THEN DO;                        /* Just close tape                    */
      220     7903    2              IF DFLTCLOSE = 0
      221     7904    2              THEN IF PN$.V_ ~= ADDR(NIL)
      222     7905    3                 THEN DO;                  /* Perform valid positioning          */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:7    
      223     7906    3                    I = PN$.V_->FPT$CLOSE_V.POS;
      224     7907    3                    IF I = %PTV# OR I = %REM# OR I = %REL# THEN GOTO DOPOSITIONING;
      225     7908    3                    END;
      226     7909    2              CALL FTC_CLOSEUP(%PTV#);
      227     7910    2              RETURN;
      228     7911    2              END;
      229     7912
      230     7913         /***
      231     7914          *** Perform basic close positioning.  For labelled tape files
      232     7915          *** position just after the file mark following the EOF label
      233     7916          *** group (writing label group and file mark if neccessary).
      234     7917          *** For free tapes leave position unchanged unless the file
      235     7918          *** was modified in which case file marks may be desired.
      236     7919          ***/
      237     7920
      238     7921    1           IF F$DCB.ASN ~= %DEVICE#
      239     7922    2           THEN DO;
      240     7923    3              DO CASE(DFLTCLOSE);
      241     7924    3                 CASE(0);            /* Non-default close...may have user labels */
      242     7925    3                    TEMP = POFFW(ADDR(PN$.UTL_),ADDR(PN$.V_));
      243     7926    3                    TEMP$ = PN$.UTL_;
      244     7927    3                 CASE(1);                /* Default close ... have no user labels*/
      245     7928    3                    TEMP = 0;
      246     7929    3                    TEMP$ = ADDR(NIL);
      247     7930    3                 END;
      248     7931    2              DSRDLBL = 'EOF';
      249     7932    2              POS = 0;
      250     7933    2              IF DFLTCLOSE ~= 0 THEN GOTO CLOSE ;
      251     7934    3              IF PN$.V_ ~= ADDR(NIL) THEN DO;
      252     7935    3                 IF (PN$.V_->FPT$CLOSE_V.POS = %POT#) AND
      253     7936    3                     (B$JIT.PRIV.ACTIVE & %PR_FMSEC#) THEN
      254     7937    3                    DSRDLBL = 'EOV'; /* PO tape positioning...use EOV not EOF labels */
      255     7938    3                 POS = BITBIN(PN$.V_->FPT$CLOSE_V.TRUNCATE);
      256     7939    3                 END;
      257     7940    2              IF (PN$.V_ = ADDR(NIL) ) OR
      258     7941    2                  NOT (PN$.V_->FPT$CLOSE_V.NOMARKS) OR
      259     7942    2                  NOT (F$DCB.NOEOF)
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:8    
      260     7943    3              THEN DO;
      261     7944    3   CLOSE:        ;
      262     7945    3                 CALL FTR$DPT ALTRET(CLSTAP);
      263     7946    3                 CALL FTL$CLOSE( DSRDLBL, TEMP$, TEMP , , POS) ALTRET(CLSTAP);
      264     7947    3                 END;
      265     7948    2              DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
              7948                       /* Get new ptr in case vol change */
      266     7949    2              FT$DDT.FSN = F$DCB.FSN;      /* Set FSN of file pos'd after        */
      267     7950    2              END;
      268     7951    2           ELSE DO;               /* Device tape...write file marks if necessary */
      269     7952    3              IF NOT F$DCB.NOEOF THEN DO;  /* Input close                        */
      270     7953    3                 CALL HFF$DSIZ( POFFW(ADDR(PN$.UTL_),ADDR(PN$.V_)), TEMP ) ALTRET(
              7953                          NOUTL );
      271     7954    3                 TEMP$ = PN$.UTL_;         /* Zero UTL count for device          */
      272     7955    3                 IF TEMP$ ~= ADDR(NIL) AND TEMP >= 4 THEN
      273     7956    3                    TEMP$->VLP$SN_V.NUM = 0;
      274     7957    3   NOUTL:        ;
      275     7958    4                 IF F$DCB.TYC.EOF(1) AND ~F$DCB.TAPTYP.MANAGED THEN DO;
      276     7959    4                    TEMP = 1;              /* Already past file's end            */
      277     7960    4                    FT$DDT.POS = FTP_CHK#;
      278     7961    4                    END;
      279     7962    3                 ELSE
      280     7963    3                    TEMP = 0;              /* Must position past end             */
      281     7964    3                 IF PN$.V_ ~= ADDR(NIL) THEN
      282     7965    3                    IF PN$.V_->FPT$CLOSE_V.NOMARKS THEN
      283     7966    3                       TEMP = 1;           /* No close positioning               */
      284     7967    4                 IF TEMP = 0 THEN DO;      /* Position past file's end           */
      285     7968    4                    F$DCB.ARS = 1;
      286     7969    4                    CALL FTI$SPFILE ALTRET(CLSTAP);
      287     7970    4                    FT$DDT.POS = FTP_CHK#;
      288     7971    4                    END;
      289     7972    3                 END;
      290     7973    3              ELSE DO;                     /* Output close                       */
      291     7974    3                 IF F$DCB.TAPTYP.MANAGED
      292     7975    4                 THEN DO;                  /* Trunc last buffer                  */
      293     7976    4                    IF NOT F$DCB.TAPTYP.USRBUF THEN CALL FTW$TRNCHLD ALTRET(CLSTAP);
      294     7977    4                    TEMP = 0;              /* Write file mark                    */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:9    
      295     7978    4                    END;
      296     7979    4                 ELSE DO;
      297     7980    4                    IF PN$.V_ = ADDR(NIL)
      298     7981    4                    THEN TEMP = 0;         /* Write file marks                   */
      299     7982    4                    ELSE IF PN$.V_->FPT$CLOSE_V.NOMARKS
      300     7983    4                       THEN TEMP = 1;      /* No file marks desired              */
      301     7984    4                       ELSE TEMP = 0;      /* Write file marks                   */
      302     7985    4                    END;
      303     7986    3                 IF TEMP = 0
      304     7987    4                 THEN DO;
      305     7988    4                    IF NOT F$DCB.TAPTYP.PASTFM THEN CALL FTI$WRFM ALTRET(CLSTAP);
      306     7989                             /* If last thing done was write file mark, only need one */
      307     7990    4                    CALL FTI$WRFM ALTRET(CLSTAP);
      308     7991    4                    F$DCB.ARS = -1;
      309     7992    4                    CALL FTI$SPFILE ALTRET(CLSTAP);
      310     7993    4                    FT$DDT.POS = FTP_HDR#;
      311     7994    4                    END;
      312     7995    3                 END;
      313     7996    2              END;
      314     7997
      315     7998         /***
      316     7999          *** Basic close position has been realized.  Perform position
      317     8000          *** modifying close options.
      318     8001          *** PTL (position to label) is assumed if no POS is specified
      319     8002          *** and DISP=SCRATCH is specified for a file opened FUN=CREATE.
      320     8003          *** Position options and actions are:
      321     8004          *** PTL -
      322     8005          ***     labelled tape - position before the HDR label group of the
      323     8006          ***          first section of the file; this may involve backing
      324     8007          ***          up to a previous volume of the set
      325     8008          ***     free tape - position after the file mark immediately
      326     8009          ***          preceeding the current file
      327     8010          *** PTV (position to volume beginning) -
      328     8011          ***     labelled tape - rewind tape to beginning
      329     8012          ***     free tape - same as labelled tape
      330     8013          *** REM (remove volume) -
      331     8014          ***     labelled tape - dismount volume
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:10   
      332     8015          ***     free tape - same as labelled tape
      333     8016          *** REL (release volume) -
      334     8017          ***     labelled tape - dismount volume, release resource
      335     8018          ***     free tape - same as labelled tape
      336     8019          *** none specified -
      337     8020          ***     labelled tape - close volume
      338     8021          ***     free tape - same as labelled tape
      339     8022          ***/
      340     8023
      341     8024    1           IF DFLTCLOSE = 0
      342     8025    1           THEN IF PN$.V_ ~= ADDR(NIL)
      343     8026    2              THEN DO;
      344     8027    2                 POS = PN$.V_->FPT$CLOSE_V.POS; /* Get close positioning info    */
      345     8028    2                 IF POS = 0 AND PN$.V_->FPT$CLOSE_V.DISP = %SCRATCH#
      346     8029    2                     AND F$DCB.FUN = %CREATE#
      347     8030    2                 THEN POS = %PTL#;         /* Get ready to write over file       */
      348     8031
      349     8032    2   DOPOSITIONING: ;
      350     8033    3                 DO CASE(POS);
      351     8034
      352     8035    3                    CASE(%PTL#);           /* Position tape to HDR label group   */
      353     8036    4                       IF F$DCB.ASN ~= %DEVICE# THEN DO;
      354     8037    5                          IF F$DCB.FSECT = 1 THEN DO;
      355     8038                                   /* In first (and only) file section...just back up */
      356     8039    6                             IF FT$DDT.FMNEEDED THEN DO;
      357     8040    6                                FT$DDT.FMNEEDED = %NO#;
      358     8041    6                                CALL FTI$WRFM ALTRET(CLSTAP);
      359     8042    6                                F$DCB.ARS = -5;
      360     8043    6                                END;
      361     8044    5                             ELSE
      362     8045    5                                IF FT$DDT.NOTEOF THEN
      363     8046    5                                   F$DCB.ARS = -2;
      364     8047    5                                ELSE
      365     8048    5                                   F$DCB.ARS = -4;
      366     8049    5                             CALL FTI$SPFILE ALTRET(CLSTAP);
      367     8050    5                             END;
      368     8051    5                          ELSE DO;         /* Must be on different volume        */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:11   
      369     8052    5                             CALL FTL$PBSN(0,ADDR(NIL),1) ALTRET(CLSTAP);
      370     8053    5                             DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
              8053                                      /* Vol changed */
      371     8054    5                             F$DCB.ARS = -2; /* Position to file mark before HDR1 */
      372     8055    5                             CALL FTI$SPFILE ALTRET(CLSTAP);
      373     8056    5                             END;
      374     8057    4                          FT$DDT.NOTEOF = %NO#; /* No longer in middle of file.  */
      375     8058    5                          IF FT$DDT.POS ~= FTP_BOV# THEN DO;
      376     8059    5                             F$DCB.ARS = 1;
      377     8060    5                             CALL FTI$SPFILE ALTRET(CLSTAP);
      378     8061    5                             END;
      379     8062    4                          ELSE
      380     8063    4                             FT$DDT.POS = FTP_BOV#; /* At BOV                    */
      381     8064    4                          CALL FTL$GETFSN ALTRET(CLSTAP);
      382     8065    4                          END;
      383     8066    4                       ELSE DO;
              8066                                /* Device tape...position to beginning of previous file */
      384     8067    4                          IF FT$DDT.POS ~= FTP_BOD# THEN
      385     8068    4                             F$DCB.ARS = -2; /* After file data mark following file */
      386     8069    4                          ELSE
      387     8070    4                             F$DCB.ARS = -1; /* Still in file                    */
      388     8071    4                          CALL FTI$SPFILE ALTRET(CLSTAP);
      389     8072    5                          IF NOT F$DCB.TYC.BOT(1) THEN DO;
              8072                                   /* Skip over next file mark */
      390     8073    5                             F$DCB.ARS = 1;
      391     8074    5                             CALL FTI$SPFILE ALTRET(CLSTAP);
      392     8075    5                             END;
      393     8076    4                          FT$DDT.POS = FTP_HDR#;
              8076                                   /* Ready to begin PO tape if necessary */
      394     8077    4                          FT$DDT.FMNEEDED = %NO#;
              8077                                   /* Dont need file marks. Fix for #19294 */
      395     8078    4                          END;
      396     8079    3                       CALL FTC_CLOSEUP(%PTV#);
      397     8080
      398     8081    3                    CASE(%PTV#);           /* Position to VOL1 of current tape   */
      399     8082    3                       FT$DDT.POSLOST = %NO#; /* Permit position redetermination */
      400     8083    3                       FT$DDT.NOTEOF = %NO#; /* No longer in middle of file.     */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:12   
      401     8084    4                       IF FT$DDT.FMNEEDED THEN DO; /* Need file mark before rewind */
      402     8085    4                          FT$DDT.FMNEEDED = %NO#;
      403     8086    4                          CALL FTI$WRFM ALTRET(CLSTAP);
      404     8087    4                          END;
      405     8088    3                       CALL FTI$REWIND ALTRET(CLSTAP);
      406     8089    3                       DDDT$->FT$DDT.FSN = DDDT$->FT$DDT.FRSTFSN;
              8089                                /* FSN is that of first on tape */
      407     8090    3                       CALL FTC_CLOSEUP(%PTV#);
      408     8091
      409     8092    3                    CASE(%REM#,%REL#,ELSE);
      410     8093    3                       CALL FTC_CLOSEUP(POS);
      411     8094
      412     8095    3                    END;
      413     8096    2                 END;
      414     8097    1              ELSE CALL FTC_CLOSEUP(%PTV#);
      415     8098    1           ELSE CALL FTC_CLOSEUP(%PTV#);
      416     8099
      417     8100    2           DO WHILE ('0'B);
      418     8101    2   CLSTAP:    ;
      419     8102    2              FT$DDT.POS = FTP_UND#;       /* Don't know where we are            */
      420     8103    2              ERRSAV = B$JIT.ERR;
      421     8104    2              CALL FTC_CLOSEUP(%PTV#);
      422     8105    2              B$JIT.ERR = ERRSAV;
      423     8106    2              END;
      424     8107
      425     8108    1           IF F$DCB.ACS = %JRNL#
      426     8109    2           THEN DO;                        /* Close JRNL file                    */
      427     8110    2              CALL FMP$CLSF;
      428     8111    2              IF F$DCB.CFU$ ~= ADDR(NIL)
      429     8112    2              THEN F$DCB.CFU$->FM$CFUJ.ERR_WAIT = %NO#;
      430     8113    2              END;
      431     8114    1           RETURN;
      432     8115
      433     8116        /******************************************************************************/
      434     8117        %EJECT;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:13   
      435     8118        /******************************************************************************/
      436     8119    1   FTC_CLOSEUP: PROC( POS );
      437     8120        /*F*     NAME: FTC_CLOSEUP
      438     8121                 PURPOSE: Finish closing DCB.
      439     8122                 DESCRIPTION: Return serial number list if requested.  Free
      440     8123                    any space used for this DCB (FPOOL, CFU, RO).
      441     8124         ***/
      442     8125
      443     8126         /***
      444     8127          *** Parameters:
      445     8128          ***/
      446     8129
      447     8130    2     DCL POS SBIN;                         /* Positioning information            */
      448     8131
      449     8132        /********************/
      450     8133
      451     8134         /***
      452     8135          *** If a buffer has been provided, return the serial number list.
      453     8136          ***/
      454     8137
      455     8138    2              IF DFLTCLOSE = 0
      456     8139    3              THEN DO;                     /* Non-default close                  */
      457     8140    3                 CALL HFF$DSIZ(POFFW(ADDR(PN$.SN_),ADDR(PN$.V_)),BUFSIZ) ALTRET(
              8140                          FREEFPOOLS);
      458     8141                                                /* Calc number of bytes in SN buffer  */
      459     8142    3                 SN$ = PN$.SN_;            /* Get pointer to SN list buffer      */
      460     8143    3                 CALL FTC_SNLIST;
      461     8144    3                 END;
      462     8145
      463     8146         /***
      464     8147          *** Free FPOOLs, CFUs, and any RO space.
      465     8148          ***/
      466     8149
      467     8150    2   FREEFPOOLS: ;
      468     8151    2              IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED#
      469     8152    2              THEN IF F$DCB.ACS = %SEQUEN#
      470     8153    2                 THEN IF F$DCB.FUN = %CREATE# OR F$DCB.FUN = %UPDATE#
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:14   
      471     8154    2                    THEN CALL FSA$FSP(64,F$DCB.LASTKEY$);
              8154                             /* Free RO space used for last key area */
      472     8155    2              CALL FTR$RELFPOOLS;
      473     8156    2              CALL FTR$RELCFUS;
      474     8157
      475     8158         /***
      476     8159          *** Make call on resource management depending on positioning info.
      477     8160          ***/
      478     8161
      479     8162    2              IF ADDR(POS) ~= ADDR(NIL)
      480     8163    3              THEN DO CASE( POS );
      481     8164    3                 CASE(%REM#);
      482     8165    3                    CALL FRB$CREM;
      483     8166    3                 CASE(%REL#);
      484     8167    3                    CALL FRB$CREL;
      485     8168    3                 CASE(ELSE);
      486     8169    3                    CALL FRB$CLS;
      487     8170    3                 END;
      488     8171
      489     8172    2              RETURN;
      490     8173
      491     8174    2      END FTC_CLOSEUP;
      492     8175        /*********************************************************************/
      493     8176        %EJECT;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:15   
      494     8177        /*********************************************************************/
      495     8178    1   FTC_SNLIST: PROC;
      496     8179        /*F*     NAME: FTC_SNLIST
      497     8180                 PURPOSE: Return serial number list in user buffer.
      498     8181         ***/
      499     8182
      500     8183        /********************/
      501     8184
      502     8185         /***
      503     8186          *** If no user buffer, just return.  If no CFU SN list,
      504     8187          *** just return single SN.
      505     8188          ***/
      506     8189
      507     8190    2              IF SN$=ADDR(NIL) OR BUFSIZ <= 0 THEN RETURN;
      508     8191    2              BUFSIZ = (BUFSIZ - LENGTHC(SN$->VLP$SN_V.NUM))
      509     8192    2                  / LENGTHC(SN$->VLP$SN_V.SN(0)); /* Calc number of SNs          */
      510     8193    2              CFU$ = F$DCB.CFU$;           /* Get CFU pointer                    */
      511     8194    2              IF CFU$ = ADDR(NIL)          /* Any SN list?                       */
      512     8195    3              THEN DO;                     /* No--return single SN only          */
      513     8196    3                 SN$->VLP$SN_V.NUM = 1;
      514     8197    3                 SN$->VLP$SN_V.SN(0) = F$DCB.PSN;
      515     8198    3                 RETURN;
      516     8199    3                 END;
      517     8200
      518     8201         /***
      519     8202          ***   We have a list of SNs.   Move as many as we can to the
      520     8203          ***   user's buffer.
      521     8204          ***/
      522     8205
      523     8206    2              I = 0;
      524     8207    2              TOTLEFT = BUFSIZ;            /* Remember # that can be moved       */
      525     8208    3              DO WHILE( CFU$ ~= ADDR(NIL) );
      526     8209    3                 TEMP = 0;
      527     8210    4                 DO WHILE( TEMP < CFU$->FT$CFUSN.NUM );
      528     8211    4                    SN$->VLP$SN_V.SN(I) = CFU$->FT$CFUSN.SN(TEMP);
      529     8212    4                    I = I + 1;
      530     8213    4                    TEMP = TEMP + 1;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:16   
      531     8214    4                    TOTLEFT = TOTLEFT - 1;
      532     8215    4                    IF TOTLEFT <= 0
      533     8216    5                    THEN DO;               /* Run out of space?                  */
      534     8217    5                       IF TEMP < CFU$->FT$CFUSN.NUM OR CFU$->FT$CFUSN.LINKX ~= 0
      535     8218    6                       THEN DO;            /* No space for SNs                   */
      536     8219    6                          IF NOT B$JIT.ERR THEN B$JIT.ERR = E_PARTIALSN;
      537     8220         /*E* ERROR: FTC-E$PARTIALSN */
      538     8221    6                          SN$->VLP$SN_V.NUM = BUFSIZ;
      539     8222    6                          RETURN;
      540     8223    6                          END;
      541     8224    5                       END;
      542     8225    4                    END;
      543     8226    3                 J = CFU$->FT$CFUSN.LINKX; /* On to next CFU                     */
      544     8227    3                 IF J = 0
      545     8228    3                 THEN CFU$ = ADDR(NIL);
      546     8229    3                 ELSE CFU$ = PINCRW( F$CFU$, J );
      547     8230    3                 END;
      548     8231
      549     8232         /***
      550     8233          *** Return number of SNs.
      551     8234          ***/
      552     8235
      553     8236    2              SN$->VLP$SN_V.NUM = BUFSIZ - TOTLEFT;
      554     8237    2              RETURN;
      555     8238
      556     8239    2      END FTC_SNLIST;
      557     8240        /**********************************************************************/
      558     8241        %EJECT;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:17   
      559     8242        /**********************************************************************/
      560     8243    1   FTC$REM:   ENTRY;
      561     8244        /*F*  NAME: FTC$REM
      562     8245              PURPOSE: Handle M$REM PMME.
      563     8246              INPUT: B$PS$(0) - FPT_REM V area
      564     8247         ***/
      565     8248
      566     8249        /********************/
      567     8250
      568     8251         /***
      569     8252          *** Assume remove by default.
      570     8253          ***/
      571     8254
      572     8255    2              DO CASE(B$PS$(0)->FPT$REM_V.DISP);
      573     8256    2                 CASE(%REM#);
      574     8257    2                    FCN = FRR_REM#;
      575     8258    2                 CASE(%REL#);
      576     8259    2                    FCN = FRR_REL#;
      577     8260    2                 CASE(%PTV#);
      578     8261    2                    FCN = FRR_REW#;
      579     8262    2                 CASE(ELSE);               /* Anything else assume remove        */
      580     8263    2                    FCN = FRR_REM#;
      581     8264    2                 END;
      582     8265    1              A_SN = B$PS$(0)->FPT$REM_V.PSN;
      583     8266    1              GOTO REMW;
      584     8267
      585     8268    1   FTC$REW:   ENTRY;
      586     8269        /*F*  NAME: FTC$REW
      587     8270              PURPOSE: Handle M$REW PMME when no DCB# specified.
      588     8271              INPUT: See FTC$REM
      589     8272         ***/
      590     8273    1              FCN = FRR_REW#;              /* Rewind                             */
      591     8274    1              A_SN = B$PS$(0)->FPT$REW_V.PSN;
      592     8275
      593     8276    1   REMW:      ;
      594     8277
      595     8278    1              IF A_SN = ' '
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:18   
      596     8279    2              THEN DO;                     /* No serial number specified         */
      597     8280    2                 B$JIT.ERR = E_NOSN;
      598     8281    2                 RETURN;
      599     8282    2                 END;
      600     8283
      601     8284         /***
      602     8285          ***
      603     8286          ***/
      604     8287
      605     8288    1              CALL FRZ$RRR( FCN, A_SN, DCTX ) ALTRET( JUSTRET );
      606     8289    1              DDDT$ = NK$LDCT$(DCTX)->NK$LDCT.DDT$;
      607     8290    1              FT$DDT.NOTEOF = %NO#;        /* No longer in middle of file.       */
      608     8291    2              IF FCN = FRR_REW# THEN DO;   /* Rewind tape or optical disk.       */
      609     8292    2                 IF NK$LDCT$(DCTX)->NK$LDCT.RAT$->FR$RAT.TYP = 'OD' THEN
      610     8293    2                    CALL FPO$REWIND(DCTX) ALTRET(JUSTRET);
      611     8294    3                 ELSE DO;
      612     8295    3                    FT$DDT.POSLOST = %NO#; /* Permit I/O again                   */
      613     8296    4                    IF FT$DDT.FMNEEDED THEN DO; /* Need file mark before rewind  */
      614     8297    4                       FT$DDT.FMNEEDED = %NO#;
      615     8298    4                       CALL FTI$WRFMDEV(DCTX) ALTRET(JUSTRET);
      616     8299    4                       END;
      617     8300    3                    CALL FTI$REWINDDEV(DCTX) ALTRET(JUSTRET);
      618     8301    3                    END;
      619     8302    2                 FT$DDT.FSN = FT$DDT.FRSTFSN; /* Back to BOV                     */
      620     8303    2                 END;
      621     8304    1   JUSTRET:   ;
      622     8305    1              RETURN;
      623     8306        /**********************************************************************/
      624     8307    1   END FTC$CLOSE;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:19   
--  Include file information  --

   FR$RAT.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FTC$CLOSE.

   Procedure FTC$CLOSE requires 784 words for executable code.
   Procedure FTC$CLOSE requires 32 words of local(AUTO) storage.

    No errors detected in file FTC$CLOSE.:E05TSI    .

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:20   

 Object Unit name= FTC$CLOSE                                  File name= FTC$CLOSE.:E05TOU
 UTS= JUL 29 '97 17:39:53.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      6      6  FTC$CLOSE
    2   Proc  even  none   784   1420  FTC$CLOSE
    3  RoData even  none    11     13  FTC$CLOSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  FTC$CLOSE
     2      4                  yes      Std        0  FTC$DFLTCLOSE
     2   1257                  yes      Std        0  FTC$REM
     2   1312                  yes      Std        0  FTC$REW
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:21   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 FMP$CLSF
 yes     yes           Std       1 FPO$REWIND
 yes     yes           Std       0 FTR$JRNLDCB
 yes     yes           Std       0 FTI$WRFM
 yes     yes           Std       1 FTI$REWINDDEV
 yes     yes           Std       2 HFF$DSIZ
 yes     yes           Std       0 FTW$TRNCHLD
 yes     yes           Std       3 FTL$PBSN
 yes     yes           Std       0 FTL$GETFSN
 yes     yes           Std       0 FTR$DPT
 yes     yes           Std       5 FTL$CLOSE
 yes     yes           Std       0 FTI$SPFILE
 yes     yes           Std       3 FRZ$RRR
 yes     yes           Std       0 FTI$REWIND
 yes     yes           Std       1 FTI$WRFMDEV
         yes           Std       0 FRB$CLS
 yes     yes           Std       0 FTR$RELFPOOLS
 yes     yes           Std       2 FSA$FSP
 yes     yes           Std       0 FTR$RELCFUS
         yes           Std       0 FRB$CREM
         yes           Std       0 FRB$CREL
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$PS$                                 M$UC                                  N$DCT$$
     B$JIT$                                F$CFU$                                B_VECTNIL
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:22   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:23   


        1        1        /*M* FTC$CLOSE Contains tape closing routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CRT=1,CTI=4,DCI=6,SQB,ECI=3,CSI=3,IPC,DIN=2,SDI=3 */
        8        8
        9        9        FTC$CLOSE: PROC(PN$);

      9  2 000000   000000 700200 xent  FTC$CLOSE    TSX0  ! X66_AUTO_1
         2 000001   000040 000001                    ZERO    32,1

       10       10
       11       11        /*F*     NAME: FTC$CLOSE
       12       12                 PURPOSE: Close a tape DCB.
       13       13                 INPUT: PN$ - pointer to V area of FPT$CLOSE.
       14       14                    PN.ULBL_ - pointer to user trailing labels if not ADDR(NIL).
       15       15                    PN$.SN_ - pointer to serial number list if not ADDR(NIL).
       16       16         ***/
       17       17        /*P*     NAME: FTC$CLOSE
       18       18                 PURPOSE: Close a tape DCB.
       19       19                 DESCRIPTION: FTC$CLOSE is called with the pointer area
       20       20                    of the close FPT.  The tape is positioned
       21       21                    to the end of the current tape file and, if the file
       22       22                    has been modified, EOF labels are written.  If
       23       23                    the file has not been modified, the block count is
       24       24                    verified.  User specified close positioning and calls
       25       25                    to resource management are performed. The serial number
       26       26                    list is returned if requested.
       27       27         ***/
       28       28
       29       29         /***
       30       30          *** INCLUDE data:
       31       31          ***/
       32       32
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:24   
       33       33        %INCLUDE B$JIT_C;
       34      347         %B$JIT0;
       35      436         %U$JIT1X;
       36      439         %M$JIT2X;
       37      442         %F$JIT3;
       38      447         %S$JIT4X;
       39      450         %J$JIT5X;
       40      453         %A$JIT6X;
       41      456        %INCLUDE B_PTRS_R;
       42      464        %INCLUDE CP_6_SUBS;
       43     1004        %INCLUDE CP_6;
       44     6563        %INCLUDE F$CP6P_C;
       45     6574        %INCLUDE F$CP6V_C;
       46     6800         %FPT$CLOSE_V;
       47     6809         %FPT$REM_V;
       48     6812         %FPT$REW_V;
       49     6815         %VLP$SN_V;
       50     6818        %MACRO F$DCBBJ(BASED=BASED);
       51     6819        %INCLUDE F$DCB;
       52     6868        %MEND;
       53     6869         %F$DCBBJ(BASED="BASED(JDCB$)");
       54     6919        %INCLUDE F_ERRORS_C;
       55     7159        %INCLUDE FM$CFU;
       56     7204         %FM$CFUJ;
       57     7209         %FT$CFUSN;
       58     7212        %INCLUDE FR_SUBS;
       59     7280        %MACRO FT$DDTBD(BASED=BASED);
       60     7281        %INCLUDE FT$DDT;
       61     7342        %MEND;
       62     7343         %FT$DDTBD(BASED="BASED(DDDT$)");
       63     7405        %INCLUDE FT_SUBS;
       64     7485        %INCLUDE NK$LDCT;
       65     7587         %NK$LDCT;
       66     7633        %INCLUDE NK_LDCT_R;
       67     7642        %INCLUDE FR$RAT;
       68     7695         %FR$RAT;
       69     7735
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:25   
       70     7736         /***
       71     7737          *** External routines:
       72     7738          ***/
       73     7739
       74     7740    1     DCL FMP$CLSF ENTRY(1);                /* Close JRNL file                    */
       75     7741    1     DCL FPO$REWIND ENTRY(1) ALTRET;       /* Rewind optical disk volume.        */
       76     7742    1     DCL FRB$CLS ENTRY;                    /* Close resource                     */
       77     7743    1     DCL FRB$CREL ENTRY;                   /* Close resource and release         */
       78     7744    1     DCL FRB$CREM ENTRY;                   /* Close resource and remove          */
       79     7745    1     DCL FRZ$RRR ENTRY(3) ALTRET;       /* Remove/release drive by serial number */
       80     7746    1     DCL FSA$FSP ENTRY(2) ALTRET;          /* Free RO space                      */
       81     7747    1     DCL FTI$REWIND ENTRY ALTRET;          /* Rewind tape                        */
       82     7748    1     DCL FTI$REWINDDEV ENTRY(1) ALTRET;    /* Rewind tape by DCTX only           */
       83     7749    1     DCL FTI$SPFILE ENTRY ALTRET;          /* Skip DCB.ARS file marks            */
       84     7750    1     DCL FTI$WRFM ENTRY ALTRET;            /* Write file mark                    */
       85     7751    1     DCL FTI$WRFMDEV ENTRY(1) ALTRET;      /* Write file mark                    */
       86     7752    1     DCL FTR$JRNLDCB ENTRY ALTRET;         /* Moves JRNL CFU info to DCB         */
       87     7753    1     DCL FTR$RELCFUS ENTRY ALTRET;         /* Release all CFUs                   */
       88     7754    1     DCL FTR$RELFPOOLS ENTRY ALTRET;       /* Release all FPOOL buffer           */
       89     7755    1     DCL FTL$CLOSE ENTRY(5) ALTRET;        /* Process end of file labels         */
       90     7756    1     DCL FTL$GETFSN ENTRY ALTRET;          /* Get FSN from next HDR1             */
       91     7757    1     DCL FTL$PBSN ENTRY(3) ALTRET;         /* Position to beginning of section   */
       92     7758    1     DCL FTR$DPT ENTRY ALTRET;             /* Density, permit, type check/set    */
       93     7759    1     DCL FTW$TRNCHLD ENTRY ALTRET;         /* Trunc but hold FPOOL buffer        */
       94     7760    1     DCL HFF$DSIZ ENTRY(2) ALTRET;         /* Determine size of segment          */
       95     7761
       96     7762         /***
       97     7763          *** SYMREF data:
       98     7764          ***/
       99     7765
      100     7766    1     DCL B$JIT$ PTR SYMREF;                /* Pointer to JIT                     */
      101     7767    1     DCL F$CFU$ PTR SYMREF;                /* Pointer to CFU area                */
      102     7768
      103     7769         /***
      104     7770          *** Parameter:
      105     7771          ***/
      106     7772
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:26   
      107     7773        %FPT$CLOSE_P(FPTN=PN$,PFMT=PTR,STCLASS=" ");
      108     7777
      109     7778         /***
      110     7779          *** AUTO data:
      111     7780          ***/
      112     7781
      113     7782    1     DCL BUFSIZ SBIN WORD AUTO;            /* User buffer size                   */
      114     7783    1     DCL CFU$ PTR;                         /* Pointer to current SN CFU          */
      115     7784    1     DCL DCTX UBIN WORD AUTO;              /* Returned DCTX                      */
      116     7785    1     DCL DDDT$ PTR AUTO;                   /* Pointer to DDT entry for drive     */
      117     7786    1     DCL DFLTCLOSE SBIN AUTO;         /* Flag indicating if default close or not */
      118     7787    1     DCL DSRDLBL CHAR(3) AUTO;            /* Used to pass and receive label type */
      119     7788    1     DCL ERRSAV BIT(36) AUTO;              /* To save JIT.ERR                    */
      120     7789    1     DCL FCN UBIN WORD AUTO;               /* Function code                      */
      121     7790    1     DCL I SBIN AUTO;                      /* Indexing uses                      */
      122     7791    1     DCL J SBIN AUTO;                      /* Indexing uses                      */
      123     7792    1     DCL JDCB$ PTR AUTO;                   /* Pointer to DCB                     */
      124     7793    1     DCL POS SBIN AUTO;                    /* Positioning information            */
      125     7794    1     DCL SN$ PTR AUTO;                     /* Pointer to user's SN list          */
      126     7795    1     DCL TEMP SBIN AUTO;                   /* Temporary integer                  */
      127     7796    1     DCL TEMP$ PTR AUTO;                   /* Temp pointer                       */
      128     7797    1     DCL A_SN CHAR(6) AUTO;                /* A serial number                    */
      129     7798    1     DCL TOTLEFT SBIN WORD AUTO;           /* Number of items left               */
      130     7799
      131     7800         /***
      132     7801          *** EQUs:
      133     7802          ***/
      134     7803
      135     7804        %EQU SNSPERCFU=4;                       /* Number of serial number per CFU    */
      136     7805         /***
      137     7806          *** CONSTANT:
      138     7807          ***/
      139     7808
      140     7809        %FT$ERR( ERRNAME=E_NOSN, MID='03'O, CODE=%E$NOSN, SEV=2 );
      141     7817        /*E*     ERROR: FTC-E$NOSN-2
      142     7818                 MESSAGE: Blank serial number
      143     7819                 MESSAGE1: A serial number must be specified on a M$REM/M$REW call.
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:27   
      144     7820         ***/
      145     7821
      146     7822        %FT$ERR( ERRNAME=E_PARTIALSN, MID='03'O, CODE=%E$PARTIALSN, SEV=0 );
      147     7830        /*E*     ERROR: FTC-E$PARTIALSN
      148     7831                 MESSAGE: Incomplete SN list returned% for DCB %DC%
      149     7832                 MESSAGE1: Not enough space was supplied to return the
      150     7833                           entire serial number list% for DCB %DC%.
      151     7834         ***/
      152     7835
      153     7836        /********************/
      154     7837
      155     7838    1           DFLTCLOSE = 0;                  /* Not default close                  */

   7838  2 000002   200010 450100                    STZ     DFLTCLOSE,,AUTO

      156     7839    1           GOTO BEGINCLOSE;

   7839  2 000003   000010 710000 2                  TRA     BEGINCLOSE

      157     7840
      158     7841    1   FTC$DFLTCLOSE: ENTRY;

   7841  2 000004   000000 700200 xent  FTC$DFLTCLO* TSX0  ! X66_AUTO_1
         2 000005   000040 000001                    ZERO    32,1

      159     7842        /*F*     NAME: FTC$DFLTCLOSE
      160     7843                 PURPOSE: Close a tape DCB with no FPT.
      161     7844                 DESCRIPTION: The tape is positioned to the end of the current
      162     7845                    tape file and, if the file has been modified, EOF labels
      163     7846                    are written.  If the file has not been modified, the block
      164     7847                    count is verified.  Tape resource management is called to
      165     7848                    close the volume without removing or releasing it.
      166     7849         ***/
      167     7850
      168     7851
      169     7852    1           DFLTCLOSE = 1;                  /* Default close                      */

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:28   
   7852  2 000006   000001 235007                    LDA     1,DL
         2 000007   200010 755100                    STA     DFLTCLOSE,,AUTO

   7852  2 000010                       BEGINCLOSE   null
      170     7853
      171     7854    1   BEGINCLOSE: ;
      172     7855
      173     7856         /***
      174     7857          *** Handle journaling.
      175     7858          ***/
      176     7859
      177     7860    1           JDCB$ = B$JIT.DCB$;

   7860  2 000010   000000 470400 xsym               LDP0    B$JIT$
         2 000011   000232 236100                    LDQ     154,,PR0
         2 000012   200016 756100                    STQ     JDCB$,,AUTO

      178     7861    1           IF F$DCB.ACS = %JRNL#

   7861  2 000013   200016 471500                    LDP1    JDCB$,,AUTO
         2 000014   100036 236100                    LDQ     30,,PR1
         2 000015   000777 376007                    ANQ     511,DL
         2 000016   000004 116007                    CMPQ    4,DL
         2 000017   000032 601000 2                  TNZ     s:7877

      179     7862    2           THEN DO;

      180     7863    2              IF NOT F$DCB.OWNER

   7863  2 000020   100064 236100                    LDQ     52,,PR1
         2 000021   040000 316007                    CANQ    16384,DL
         2 000022   000027 601000 2                  TNZ     s:7869

      181     7864    3              THEN DO;                     /* Close for non-owner                */

      182     7865    3                 CALL FMP$CLSF;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:29   
   7865  2 000023   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000024   000000 701000 xent               TSX1    FMP$CLSF
         2 000025   000000 011000                    NOP     0

      183     7866    3                 RETURN;

   7866  2 000026   000000 702200 xent               TSX2  ! X66_ARET

      184     7867    3                 END;
      185     7868    3              ELSE DO;                     /* Close for owner                    */

      186     7869    3                 CALL FTR$JRNLDCB;

   7869  2 000027   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000030   000000 701000 xent               TSX1    FTR$JRNLDCB
         2 000031   000000 011000                    NOP     0

      187     7870    3                 END;

      188     7871    2              END;

      189     7872
      190     7873         /***
      191     7874          *** Undo RECL for possible subsequent M$OPEN.
      192     7875          ***/
      193     7876
      194     7877    1           IF F$DCB.ORG = %VARIABLE#

   7877  2 000032   200016 470500                    LDP0    JDCB$,,AUTO
         2 000033   000032 236100                    LDQ     26,,PR0
         2 000034   777000 376003                    ANQ     -512,DU
         2 000035   020000 116003                    CMPQ    8192,DU
         2 000036   000057 601000 2                  TNZ     s:7894

      195     7878    2           THEN DO;

      196     7879    2              IF F$DCB.EBCDIC
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:30   

   7879  2 000037   000031 236100                    LDQ     25,,PR0
         2 000040   100000 316007                    CANQ    32768,DL
         2 000041   000046 600000 2                  TZE     s:7881

      197     7880    2              THEN F$DCB.RECL = F$DCB.RECL - 4;

   7880  2 000042   000033 720100                    LXL0    27,,PR0
         2 000043   777774 621010                    EAX1    -4,X0
         2 000044   000033 441100                    SXL1    27,,PR0
         2 000045   000057 710000 2                  TRA     s:7894

      198     7881    2              ELSE IF F$DCB.RECL ~= 0

   7881  2 000046   000033 720100                    LXL0    27,,PR0
         2 000047   000057 600000 2                  TZE     s:7894

      199     7882    2                 THEN IF F$DCB.SPANNED

   7882  2 000050   000004 316007                    CANQ    4,DL
         2 000051   000055 600000 2                  TZE     s:7884

      200     7883    2                    THEN F$DCB.RECL = F$DCB.RECL - 5;

   7883  2 000052   777773 621010                    EAX1    -5,X0
         2 000053   000033 441100                    SXL1    27,,PR0
         2 000054   000057 710000 2                  TRA     s:7894

      201     7884    2                    ELSE F$DCB.RECL = F$DCB.RECL - 4;

   7884  2 000055   777774 621010                    EAX1    -4,X0
         2 000056   000033 441100                    SXL1    27,,PR0

      202     7885    2              END;

      203     7886
      204     7887         /***
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:31   
      205     7888          *** Abnormal conditions which might affect tape close are:
      206     7889          *** 1) drive (and tape) were "lost" during a change volume
      207     7890          *** operation or 2) a position lost condition was previously
      208     7891          *** detected--only rewind and remove operations are allowed.
      209     7892          ***/
      210     7893
      211     7894    1           I = F$DCB.SETX;                 /* Get X of drive                     */

   7894  2 000057   000051 236100                    LDQ     41,,PR0
         2 000060   777777 376007                    ANQ     -1,DL
         2 000061   200014 756100                    STQ     I,,AUTO

      212     7895    1           IF I <= 0

   7895  2 000062   000070 605400 2                  TPNZ    s:7900

      213     7896    2           THEN DO;              /* Drive was probably lost during volume change */

      214     7897    2              CALL FTC_CLOSEUP;

   7897  2 000063   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000064   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000065   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000066   000000 011000                    NOP     0

      215     7898    2              RETURN;

   7898  2 000067   000000 702200 xent               TSX2  ! X66_ARET

      216     7899    2              END;
      217     7900    1           DDDT$ = NK$LDCT$(I)->NK$LDCT.DDT$;

   7900  2 000070   000000 471400 xsym               LDP1    N$DCT$$
         2 000071   100000 473506                    LDP3    0,QL,PR1
         2 000072   300004 236100                    LDQ     4,,PR3
         2 000073   200007 756100                    STQ     DDDT$,,AUTO

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:32   
      218     7901    1           IF FT$DDT.POSLOST OR FT$DDT.FUNNYPOS

   7901  2 000074   200007 473500                    LDP3    DDDT$,,AUTO
         2 000075   300006 236100                    LDQ     6,,PR3
         2 000076   004000 316007                    CANQ    2048,DL
         2 000077   000103 601000 2                  TNZ     s:7903
         2 000100   300007 236100                    LDQ     7,,PR3
         2 000101   400000 316007                    CANQ    -131072,DL
         2 000102   000130 600000 2                  TZE     s:7921

      219     7902    2           THEN DO;                        /* Just close tape                    */

      220     7903    2              IF DFLTCLOSE = 0

   7903  2 000103   200010 235100                    LDA     DFLTCLOSE,,AUTO
         2 000104   000123 601000 2                  TNZ     s:7909

      221     7904    2              THEN IF PN$.V_ ~= ADDR(NIL)

   7904  2 000105   200003 474500                    LDP4    @PN$,,AUTO
         2 000106   400000 236100                    LDQ     0,,PR4
         2 000107   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000110   000123 600000 2                  TZE     s:7909

      222     7905    3                 THEN DO;                  /* Perform valid positioning          */

      223     7906    3                    I = PN$.V_->FPT$CLOSE_V.POS;

   7906  2 000111   400000 475500                    LDP5    0,,PR4
         2 000112   500002 236100                    LDQ     2,,PR5
         2 000113   000033 772000                    QRL     27
         2 000114   200014 756100                    STQ     I,,AUTO

      224     7907    3                    IF I = %PTV# OR I = %REM# OR I = %REL# THEN GOTO DOPOSITIONING;

   7907  2 000115   000004 116007                    CMPQ    4,DL
         2 000116   000477 600000 2                  TZE     DOPOSITIONING
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:33   
         2 000117   000002 116007                    CMPQ    2,DL
         2 000120   000477 600000 2                  TZE     DOPOSITIONING
         2 000121   000003 116007                    CMPQ    3,DL
         2 000122   000477 600000 2                  TZE     DOPOSITIONING

      225     7908    3                    END;

      226     7909    2              CALL FTC_CLOSEUP(%PTV#);

   7909  2 000123   000000 236000 3                  LDQ     0
         2 000124   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000125   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000126   000000 011000                    NOP     0

      227     7910    2              RETURN;

   7910  2 000127   000000 702200 xent               TSX2  ! X66_ARET

      228     7911    2              END;
      229     7912
      230     7913         /***
      231     7914          *** Perform basic close positioning.  For labelled tape files
      232     7915          *** position just after the file mark following the EOF label
      233     7916          *** group (writing label group and file mark if neccessary).
      234     7917          *** For free tapes leave position unchanged unless the file
      235     7918          *** was modified in which case file marks may be desired.
      236     7919          ***/
      237     7920
      238     7921    1           IF F$DCB.ASN ~= %DEVICE#

   7921  2 000130   000032 236100                    LDQ     26,,PR0
         2 000131   777000 376007                    ANQ     -512,DL
         2 000132   003000 116007                    CMPQ    1536,DL
         2 000133   000263 600000 2                  TZE     s:7952

      239     7922    2           THEN DO;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:34   
      240     7923    3              DO CASE(DFLTCLOSE);

   7923  2 000134   200010 235100                    LDA     DFLTCLOSE,,AUTO
         2 000135   000002 115007                    CMPA    2,DL
         2 000136   000140 602005 2                  TNC     s:7923+4,AL
         2 000137   000161 710000 2                  TRA     s:7931
         2 000140   000142 710000 2                  TRA     s:7925
         2 000141   000156 710000 2                  TRA     s:7928

      241     7924    3                 CASE(0);            /* Non-default close...may have user labels */

      242     7925    3                    TEMP = POFFW(ADDR(PN$.UTL_),ADDR(PN$.V_));

   7925  2 000142   200003 236100                    LDQ     @PN$,,AUTO
         2 000143   000022 772000                    QRL     18
         2 000144   200032 756100                    STQ     @POS+3,,AUTO
         2 000145   200003 236100                    LDQ     @PN$,,AUTO
         2 000146   000002 036003                    ADLQ    2,DU
         2 000147   000022 772000                    QRL     18
         2 000150   200032 136100                    SBLQ    @POS+3,,AUTO
         2 000151   200021 756100                    STQ     TEMP,,AUTO

      243     7926    3                    TEMP$ = PN$.UTL_;

   7926  2 000152   200003 474500                    LDP4    @PN$,,AUTO
         2 000153   400002 236100                    LDQ     2,,PR4
         2 000154   200022 756100                    STQ     TEMP$,,AUTO
         2 000155   000161 710000 2                  TRA     s:7931

      244     7927    3                 CASE(1);                /* Default close ... have no user labels*/

      245     7928    3                    TEMP = 0;

   7928  2 000156   200021 450100                    STZ     TEMP,,AUTO

      246     7929    3                    TEMP$ = ADDR(NIL);

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:35   
   7929  2 000157   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000160   200022 756100                    STQ     TEMP$,,AUTO

      247     7930    3                 END;

      248     7931    2              DSRDLBL = 'EOF';

   7931  2 000161   000002 236000 1                  LDQ     E_PARTIALSN+1
         2 000162   000001 376000 3                  ANQ     1
         2 000163   000040 276007                    ORQ     32,DL
         2 000164   200011 756100                    STQ     DSRDLBL,,AUTO

      249     7932    2              POS = 0;

   7932  2 000165   200017 450100                    STZ     POS,,AUTO

      250     7933    2              IF DFLTCLOSE ~= 0 THEN GOTO CLOSE ;

   7933  2 000166   000000 115003                    CMPA    0,DU
         2 000167   000230 601000 2                  TNZ     CLOSE

      251     7934    3              IF PN$.V_ ~= ADDR(NIL) THEN DO;

   7934  2 000170   200003 474500                    LDP4    @PN$,,AUTO
         2 000171   400000 236100                    LDQ     0,,PR4
         2 000172   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000173   000216 600000 2                  TZE     s:7940

      252     7935    3                 IF (PN$.V_->FPT$CLOSE_V.POS = %POT#) AND

   7935  2 000174   400000 475500                    LDP5    0,,PR4
         2 000175   500002 236100                    LDQ     2,,PR5
         2 000176   777000 376003                    ANQ     -512,DU
         2 000177   005000 116003                    CMPQ    2560,DU
         2 000200   000211 601000 2                  TNZ     s:7938
         2 000201   000000 476400 xsym               LDP6    B$JIT$
         2 000202   600013 236100                    LDQ     11,,PR6
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:36   
         2 000203   000003 376000 1                  ANQ     E_PARTIALSN+2
         2 000204   000211 600000 2                  TZE     s:7938

      253     7936    3                     (B$JIT.PRIV.ACTIVE & %PR_FMSEC#) THEN
      254     7937    3                   DSRDLBL = 'EOV'; /* PO tape positioning...use EOV not EOF labels */

   7937  2 000205   000004 236000 1                  LDQ     E_PARTIALSN+3
         2 000206   000001 376000 3                  ANQ     1
         2 000207   000040 276007                    ORQ     32,DL
         2 000210   200011 756100                    STQ     DSRDLBL,,AUTO

      255     7938    3                 POS = BITBIN(PN$.V_->FPT$CLOSE_V.TRUNCATE);

   7938  2 000211   400000 475500                    LDP5    0,,PR4
         2 000212   500000 236100                    LDQ     0,,PR5
         2 000213   000011 772000                    QRL     9
         2 000214   000001 376007                    ANQ     1,DL
         2 000215   200017 756100                    STQ     POS,,AUTO

      256     7939    3                 END;

      257     7940    2              IF (PN$.V_ = ADDR(NIL) ) OR

   7940  2 000216   400000 236100                    LDQ     0,,PR4
         2 000217   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000220   000230 600000 2                  TZE     CLOSE
         2 000221   400000 475500                    LDP5    0,,PR4
         2 000222   500002 236100                    LDQ     2,,PR5
         2 000223   000100 316003                    CANQ    64,DU
         2 000224   000230 600000 2                  TZE     CLOSE
         2 000225   000064 236100                    LDQ     52,,PR0
         2 000226   400000 316007                    CANQ    -131072,DL
         2 000227   000251 601000 2                  TNZ     s:7948

      258     7941    2                  NOT (PN$.V_->FPT$CLOSE_V.NOMARKS) OR
      259     7942    2                  NOT (F$DCB.NOEOF)
      260     7943    3              THEN DO;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:37   

   7938  2 000230                       CLOSE        null
      261     7944    3   CLOSE:        ;
      262     7945    3                 CALL FTR$DPT ALTRET(CLSTAP);

   7945  2 000230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000231   000000 701000 xent               TSX1    FTR$DPT
         2 000232   000737 702000 2                  TSX2    CLSTAP

      263     7946    3                 CALL FTL$CLOSE( DSRDLBL, TEMP$, TEMP , , POS) ALTRET(CLSTAP);

   7946  2 000233   200017 630500                    EPPR0   POS,,AUTO
         2 000234   200036 450500                    STP0    @POS+7,,AUTO
         2 000235   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000236   200035 756100                    STQ     @POS+6,,AUTO
         2 000237   200021 631500                    EPPR1   TEMP,,AUTO
         2 000240   200034 451500                    STP1    @POS+5,,AUTO
         2 000241   200022 633500                    EPPR3   TEMP$,,AUTO
         2 000242   200033 453500                    STP3    @POS+4,,AUTO
         2 000243   200011 634500                    EPPR4   DSRDLBL,,AUTO
         2 000244   200032 454500                    STP4    @POS+3,,AUTO
         2 000245   200032 630500                    EPPR0   @POS+3,,AUTO
         2 000246   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000247   000000 701000 xent               TSX1    FTL$CLOSE
         2 000250   000737 702000 2                  TSX2    CLSTAP

      264     7947    3                 END;

      265     7948    2              DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
              7948                       /* Get new ptr in case vol change */

   7948  2 000251   200016 470500                    LDP0    JDCB$,,AUTO
         2 000252   000051 720100                    LXL0    41,,PR0
         2 000253   000000 471400 xsym               LDP1    N$DCT$$
         2 000254   100000 473510                    LDP3    0,X0,PR1
         2 000255   300004 236100                    LDQ     4,,PR3
         2 000256   200007 756100                    STQ     DDDT$,,AUTO
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:38   

      266     7949    2              FT$DDT.FSN = F$DCB.FSN;      /* Set FSN of file pos'd after        */

   7949  2 000257   000034 221100                    LDX1    28,,PR0
         2 000260   200007 474500                    LDP4    DDDT$,,AUTO
         2 000261   400005 741100                    STX1    5,,PR4

      267     7950    2              END;

   7950  2 000262   000450 710000 2                  TRA     s:8024

      268     7951    2           ELSE DO;               /* Device tape...write file marks if necessary */

      269     7952    3              IF NOT F$DCB.NOEOF THEN DO;  /* Input close                        */

   7952  2 000263   000064 236100                    LDQ     52,,PR0
         2 000264   400000 316007                    CANQ    -131072,DL
         2 000265   000371 601000 2                  TNZ     s:7974

      270     7953    3                 CALL HFF$DSIZ( POFFW(ADDR(PN$.UTL_),ADDR(PN$.V_)), TEMP ) ALTRET(
              7953                          NOUTL );

   7953  2 000266   200003 236100                    LDQ     @PN$,,AUTO
         2 000267   000022 772000                    QRL     18
         2 000270   200032 756100                    STQ     @POS+3,,AUTO
         2 000271   200003 236100                    LDQ     @PN$,,AUTO
         2 000272   000002 036003                    ADLQ    2,DU
         2 000273   000022 772000                    QRL     18
         2 000274   200032 136100                    SBLQ    @POS+3,,AUTO
         2 000275   200033 756100                    STQ     @POS+4,,AUTO
         2 000276   200021 634500                    EPPR4   TEMP,,AUTO
         2 000277   200035 454500                    STP4    @POS+6,,AUTO
         2 000300   200033 635500                    EPPR5   @POS+4,,AUTO
         2 000301   200034 455500                    STP5    @POS+5,,AUTO
         2 000302   200034 630500                    EPPR0   @POS+5,,AUTO
         2 000303   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000304   000000 701000 xent               TSX1    HFF$DSIZ
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:39   
         2 000305   000320 702000 2                  TSX2    NOUTL

      271     7954    3                 TEMP$ = PN$.UTL_;         /* Zero UTL count for device          */

   7954  2 000306   200003 470500                    LDP0    @PN$,,AUTO
         2 000307   000002 236100                    LDQ     2,,PR0
         2 000310   200022 756100                    STQ     TEMP$,,AUTO

      272     7955    3                 IF TEMP$ ~= ADDR(NIL) AND TEMP >= 4 THEN

   7955  2 000311   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000312   000320 600000 2                  TZE     NOUTL
         2 000313   200021 235100                    LDA     TEMP,,AUTO
         2 000314   000004 115007                    CMPA    4,DL
         2 000315   000320 604000 2                  TMI     NOUTL

      273     7956    3                    TEMP$->VLP$SN_V.NUM = 0;

   7956  2 000316   200022 471500                    LDP1    TEMP$,,AUTO
         2 000317   100000 450100                    STZ     0,,PR1

   7955  2 000320                       NOUTL        null
      274     7957    3   NOUTL:        ;
      275     7958    4                 IF F$DCB.TYC.EOF(1) AND ~F$DCB.TAPTYP.MANAGED THEN DO;

   7958  2 000320   200016 470500                    LDP0    JDCB$,,AUTO
         2 000321   000002 236100                    LDQ     2,,PR0
         2 000322   004000 316003                    CANQ    2048,DU
         2 000323   000341 600000 2                  TZE     s:7963
         2 000324   000067 236100                    LDQ     55,,PR0
         2 000325   000016 736000                    QLS     14
         2 000326   400000 376003                    ANQ     -131072,DU
         2 000327   400000 676003                    ERQ     -131072,DU
         2 000330   000341 600000 2                  TZE     s:7963

      276     7959    4                    TEMP = 1;              /* Already past file's end            */

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:40   
   7959  2 000331   000001 235007                    LDA     1,DL
         2 000332   200021 755100                    STA     TEMP,,AUTO

      277     7960    4                    FT$DDT.POS = FTP_CHK#;

   7960  2 000333   200007 471500                    LDP1    DDDT$,,AUTO
         2 000334   100006 236100                    LDQ     6,,PR1
         2 000335   000002 376000 3                  ANQ     2
         2 000336   000120 276007                    ORQ     80,DL
         2 000337   100006 756100                    STQ     6,,PR1

      278     7961    4                    END;

   7961  2 000340   000342 710000 2                  TRA     s:7964

      279     7962    3                 ELSE
      280     7963    3                    TEMP = 0;              /* Must position past end             */

   7963  2 000341   200021 450100                    STZ     TEMP,,AUTO

      281     7964    3                 IF PN$.V_ ~= ADDR(NIL) THEN

   7964  2 000342   200003 471500                    LDP1    @PN$,,AUTO
         2 000343   100000 236100                    LDQ     0,,PR1
         2 000344   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000345   000354 600000 2                  TZE     s:7967

      282     7965    3                    IF PN$.V_->FPT$CLOSE_V.NOMARKS THEN

   7965  2 000346   100000 473500                    LDP3    0,,PR1
         2 000347   300002 236100                    LDQ     2,,PR3
         2 000350   000100 316003                    CANQ    64,DU
         2 000351   000354 600000 2                  TZE     s:7967

      283     7966    3                       TEMP = 1;           /* No close positioning               */

   7966  2 000352   000001 235007                    LDA     1,DL
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:41   
         2 000353   200021 755100                    STA     TEMP,,AUTO

      284     7967    4                 IF TEMP = 0 THEN DO;      /* Position past file's end           */

   7967  2 000354   200021 235100                    LDA     TEMP,,AUTO
         2 000355   000450 601000 2                  TNZ     s:8024

      285     7968    4                    F$DCB.ARS = 1;

   7968  2 000356   000001 236007                    LDQ     1,DL
         2 000357   000000 756100                    STQ     0,,PR0

      286     7969    4                    CALL FTI$SPFILE ALTRET(CLSTAP);

   7969  2 000360   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000361   000000 701000 xent               TSX1    FTI$SPFILE
         2 000362   000737 702000 2                  TSX2    CLSTAP

      287     7970    4                    FT$DDT.POS = FTP_CHK#;

   7970  2 000363   200007 470500                    LDP0    DDDT$,,AUTO
         2 000364   000006 236100                    LDQ     6,,PR0
         2 000365   000002 376000 3                  ANQ     2
         2 000366   000120 276007                    ORQ     80,DL
         2 000367   000006 756100                    STQ     6,,PR0

      288     7971    4                    END;

      289     7972    3                 END;

   7972  2 000370   000450 710000 2                  TRA     s:8024

      290     7973    3              ELSE DO;                     /* Output close                       */

      291     7974    3                 IF F$DCB.TAPTYP.MANAGED

   7974  2 000371   000067 236100                    LDQ     55,,PR0
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:42   
         2 000372   000010 316003                    CANQ    8,DU
         2 000373   000403 600000 2                  TZE     s:7980

      292     7975    4                 THEN DO;                  /* Trunc last buffer                  */

      293     7976    4                    IF NOT F$DCB.TAPTYP.USRBUF THEN CALL FTW$TRNCHLD ALTRET(CLSTAP);

   7976  2 000374   000100 316003                    CANQ    64,DU
         2 000375   000401 601000 2                  TNZ     s:7977

   7976  2 000376   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000377   000000 701000 xent               TSX1    FTW$TRNCHLD
         2 000400   000737 702000 2                  TSX2    CLSTAP

      294     7977    4                    TEMP = 0;              /* Write file mark                    */

   7977  2 000401   200021 450100                    STZ     TEMP,,AUTO

      295     7978    4                    END;

   7978  2 000402   000421 710000 2                  TRA     s:7986

      296     7979    4                 ELSE DO;

      297     7980    4                    IF PN$.V_ = ADDR(NIL)

   7980  2 000403   200003 474500                    LDP4    @PN$,,AUTO
         2 000404   400000 236100                    LDQ     0,,PR4
         2 000405   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000406   000411 601000 2                  TNZ     s:7982

      298     7981    4                    THEN TEMP = 0;         /* Write file marks                   */

   7981  2 000407   200021 450100                    STZ     TEMP,,AUTO
         2 000410   000421 710000 2                  TRA     s:7986

      299     7982    4                    ELSE IF PN$.V_->FPT$CLOSE_V.NOMARKS
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:43   

   7982  2 000411   400000 475500                    LDP5    0,,PR4
         2 000412   500002 236100                    LDQ     2,,PR5
         2 000413   000100 316003                    CANQ    64,DU
         2 000414   000420 600000 2                  TZE     s:7984

      300     7983    4                       THEN TEMP = 1;      /* No file marks desired              */

   7983  2 000415   000001 235007                    LDA     1,DL
         2 000416   200021 755100                    STA     TEMP,,AUTO
         2 000417   000421 710000 2                  TRA     s:7986

      301     7984    4                       ELSE TEMP = 0;      /* Write file marks                   */

   7984  2 000420   200021 450100                    STZ     TEMP,,AUTO

      302     7985    4                    END;

      303     7986    3                 IF TEMP = 0

   7986  2 000421   200021 235100                    LDA     TEMP,,AUTO
         2 000422   000450 601000 2                  TNZ     s:8024

      304     7987    4                 THEN DO;

      305     7988    4                    IF NOT F$DCB.TAPTYP.PASTFM THEN CALL FTI$WRFM ALTRET(CLSTAP);

   7988  2 000423   200016 470500                    LDP0    JDCB$,,AUTO
         2 000424   000067 236100                    LDQ     55,,PR0
         2 000425   000004 316003                    CANQ    4,DU
         2 000426   000432 601000 2                  TNZ     s:7990

   7988  2 000427   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000430   000000 701000 xent               TSX1    FTI$WRFM
         2 000431   000737 702000 2                  TSX2    CLSTAP

      306     7989                             /* If last thing done was write file mark, only need one */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:44   
      307     7990    4                    CALL FTI$WRFM ALTRET(CLSTAP);

   7990  2 000432   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000433   000000 701000 xent               TSX1    FTI$WRFM
         2 000434   000737 702000 2                  TSX2    CLSTAP

      308     7991    4                    F$DCB.ARS = -1;

   7991  2 000435   000001 335007                    LCA     1,DL
         2 000436   200016 470500                    LDP0    JDCB$,,AUTO
         2 000437   000000 755100                    STA     0,,PR0

      309     7992    4                    CALL FTI$SPFILE ALTRET(CLSTAP);

   7992  2 000440   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000441   000000 701000 xent               TSX1    FTI$SPFILE
         2 000442   000737 702000 2                  TSX2    CLSTAP

      310     7993    4                    FT$DDT.POS = FTP_HDR#;

   7993  2 000443   200007 470500                    LDP0    DDDT$,,AUTO
         2 000444   000006 236100                    LDQ     6,,PR0
         2 000445   000002 376000 3                  ANQ     2
         2 000446   000040 276007                    ORQ     32,DL
         2 000447   000006 756100                    STQ     6,,PR0

      311     7994    4                    END;

      312     7995    3                 END;

      313     7996    2              END;

      314     7997
      315     7998         /***
      316     7999          *** Basic close position has been realized.  Perform position
      317     8000          *** modifying close options.
      318     8001          *** PTL (position to label) is assumed if no POS is specified
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:45   
      319     8002          *** and DISP=SCRATCH is specified for a file opened FUN=CREATE.
      320     8003          *** Position options and actions are:
      321     8004          *** PTL -
      322     8005          ***     labelled tape - position before the HDR label group of the
      323     8006          ***          first section of the file; this may involve backing
      324     8007          ***          up to a previous volume of the set
      325     8008          ***     free tape - position after the file mark immediately
      326     8009          ***          preceeding the current file
      327     8010          *** PTV (position to volume beginning) -
      328     8011          ***     labelled tape - rewind tape to beginning
      329     8012          ***     free tape - same as labelled tape
      330     8013          *** REM (remove volume) -
      331     8014          ***     labelled tape - dismount volume
      332     8015          ***     free tape - same as labelled tape
      333     8016          *** REL (release volume) -
      334     8017          ***     labelled tape - dismount volume, release resource
      335     8018          ***     free tape - same as labelled tape
      336     8019          *** none specified -
      337     8020          ***     labelled tape - close volume
      338     8021          ***     free tape - same as labelled tape
      339     8022          ***/
      340     8023
      341     8024    1           IF DFLTCLOSE = 0

   8024  2 000450   200010 235100                    LDA     DFLTCLOSE,,AUTO
         2 000451   000732 601000 2                  TNZ     s:8098

      342     8025    1           THEN IF PN$.V_ ~= ADDR(NIL)

   8025  2 000452   200003 470500                    LDP0    @PN$,,AUTO
         2 000453   000000 236100                    LDQ     0,,PR0
         2 000454   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000455   000725 600000 2                  TZE     s:8097

      343     8026    2              THEN DO;

      344     8027    2                 POS = PN$.V_->FPT$CLOSE_V.POS; /* Get close positioning info    */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:46   

   8027  2 000456   000000 471500                    LDP1    0,,PR0
         2 000457   100002 236100                    LDQ     2,,PR1
         2 000460   000033 772000                    QRL     27
         2 000461   200017 756100                    STQ     POS,,AUTO

      345     8028    2                 IF POS = 0 AND PN$.V_->FPT$CLOSE_V.DISP = %SCRATCH#

   8028  2 000462   000477 601000 2                  TNZ     DOPOSITIONING
         2 000463   000000 471500                    LDP1    0,,PR0
         2 000464   100000 236100                    LDQ     0,,PR1
         2 000465   000777 376007                    ANQ     511,DL
         2 000466   000001 116007                    CMPQ    1,DL
         2 000467   000477 601000 2                  TNZ     DOPOSITIONING
         2 000470   200016 473500                    LDP3    JDCB$,,AUTO
         2 000471   300032 236100                    LDQ     26,,PR3
         2 000472   000777 376003                    ANQ     511,DU
         2 000473   000003 116003                    CMPQ    3,DU
         2 000474   000477 601000 2                  TNZ     DOPOSITIONING

      346     8029    2                     AND F$DCB.FUN = %CREATE#
      347     8030    2                 THEN POS = %PTL#;         /* Get ready to write over file       */

   8030  2 000475   000001 235007                    LDA     1,DL
         2 000476   200017 755100                    STA     POS,,AUTO

   8028  2 000477                       DOPOSITIONI* null
      348     8031
      349     8032    2   DOPOSITIONING: ;
      350     8033    3                 DO CASE(POS);

   8033  2 000477   200017 235100                    LDA     POS,,AUTO
         2 000500   000005 115007                    CMPA    5,DL
         2 000501   000503 602005 2                  TNC     DOPOSITIONING+4,AL
         2 000502   000720 710000 2                  TRA     s:8093
         2 000503   000720 710000 2                  TRA     s:8093
         2 000504   000510 710000 2                  TRA     s:8036
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:47   
         2 000505   000720 710000 2                  TRA     s:8093
         2 000506   000720 710000 2                  TRA     s:8093
         2 000507   000670 710000 2                  TRA     s:8082

      351     8034
      352     8035    3                    CASE(%PTL#);           /* Position tape to HDR label group   */

      353     8036    4                       IF F$DCB.ASN ~= %DEVICE# THEN DO;

   8036  2 000510   200016 470500                    LDP0    JDCB$,,AUTO
         2 000511   000032 236100                    LDQ     26,,PR0
         2 000512   777000 376007                    ANQ     -512,DL
         2 000513   003000 116007                    CMPQ    1536,DL
         2 000514   000626 600000 2                  TZE     s:8067

      354     8037    5                          IF F$DCB.FSECT = 1 THEN DO;

   8037  2 000515   000077 220100                    LDX0    63,,PR0
         2 000516   000001 100003                    CMPX0   1,DU
         2 000517   000551 601000 2                  TNZ     s:8052

      355     8038                                   /* In first (and only) file section...just back up */
      356     8039    6                             IF FT$DDT.FMNEEDED THEN DO;

   8039  2 000520   200007 471500                    LDP1    DDDT$,,AUTO
         2 000521   100006 236100                    LDQ     6,,PR1
         2 000522   000200 316007                    CANQ    128,DL
         2 000523   000535 600000 2                  TZE     s:8045

      357     8040    6                                FT$DDT.FMNEEDED = %NO#;

   8040  2 000524   000003 236000 3                  LDQ     3
         2 000525   100006 356100                    ANSQ    6,,PR1

      358     8041    6                                CALL FTI$WRFM ALTRET(CLSTAP);

   8041  2 000526   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:48   
         2 000527   000000 701000 xent               TSX1    FTI$WRFM
         2 000530   000737 702000 2                  TSX2    CLSTAP

      359     8042    6                                F$DCB.ARS = -5;

   8042  2 000531   000005 335007                    LCA     5,DL
         2 000532   200016 470500                    LDP0    JDCB$,,AUTO
         2 000533   000000 755100                    STA     0,,PR0

      360     8043    6                                END;

   8043  2 000534   000545 710000 2                  TRA     s:8049

      361     8044    5                             ELSE
      362     8045    5                                IF FT$DDT.NOTEOF THEN

   8045  2 000535   100007 236100                    LDQ     7,,PR1
         2 000536   200000 316007                    CANQ    65536,DL
         2 000537   000543 600000 2                  TZE     s:8048

      363     8046    5                                   F$DCB.ARS = -2;

   8046  2 000540   000002 335007                    LCA     2,DL
         2 000541   000000 755100                    STA     0,,PR0
         2 000542   000545 710000 2                  TRA     s:8049

      364     8047    5                                ELSE
      365     8048    5                                   F$DCB.ARS = -4;

   8048  2 000543   000004 335007                    LCA     4,DL
         2 000544   000000 755100                    STA     0,,PR0

      366     8049    5                             CALL FTI$SPFILE ALTRET(CLSTAP);

   8049  2 000545   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000546   000000 701000 xent               TSX1    FTI$SPFILE
         2 000547   000737 702000 2                  TSX2    CLSTAP
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:49   

      367     8050    5                             END;

   8050  2 000550   000600 710000 2                  TRA     s:8057

      368     8051    5                          ELSE DO;         /* Must be on different volume        */

      369     8052    5                             CALL FTL$PBSN(0,ADDR(NIL),1) ALTRET(CLSTAP);

   8052  2 000551   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000552   200032 756100                    STQ     @POS+3,,AUTO
         2 000553   000004 236000 3                  LDQ     4
         2 000554   200035 756100                    STQ     @POS+6,,AUTO
         2 000555   200032 631500                    EPPR1   @POS+3,,AUTO
         2 000556   200034 451500                    STP1    @POS+5,,AUTO
         2 000557   000005 236000 3                  LDQ     5
         2 000560   200033 756100                    STQ     @POS+4,,AUTO
         2 000561   200033 630500                    EPPR0   @POS+4,,AUTO
         2 000562   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000563   000000 701000 xent               TSX1    FTL$PBSN
         2 000564   000737 702000 2                  TSX2    CLSTAP

      370     8053    5                             DDDT$ = NK$LDCT$(F$DCB.SETX)->NK$LDCT.DDT$;
              8053                                      /* Vol changed */

   8053  2 000565   200016 470500                    LDP0    JDCB$,,AUTO
         2 000566   000051 720100                    LXL0    41,,PR0
         2 000567   000000 471400 xsym               LDP1    N$DCT$$
         2 000570   100000 473510                    LDP3    0,X0,PR1
         2 000571   300004 236100                    LDQ     4,,PR3
         2 000572   200007 756100                    STQ     DDDT$,,AUTO

      371     8054    5                             F$DCB.ARS = -2; /* Position to file mark before HDR1 */

   8054  2 000573   000002 335007                    LCA     2,DL
         2 000574   000000 755100                    STA     0,,PR0

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:50   
      372     8055    5                             CALL FTI$SPFILE ALTRET(CLSTAP);

   8055  2 000575   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000576   000000 701000 xent               TSX1    FTI$SPFILE
         2 000577   000737 702000 2                  TSX2    CLSTAP

      373     8056    5                             END;

      374     8057    4                          FT$DDT.NOTEOF = %NO#; /* No longer in middle of file.  */

   8057  2 000600   200007 470500                    LDP0    DDDT$,,AUTO
         2 000601   000006 236000 3                  LDQ     6
         2 000602   000007 356100                    ANSQ    7,,PR0

      375     8058    5                          IF FT$DDT.POS ~= FTP_BOV# THEN DO;

   8058  2 000603   000006 236100                    LDQ     6,,PR0
         2 000604   000160 376007                    ANQ     112,DL
         2 000605   000020 116007                    CMPQ    16,DL
         2 000606   000616 600000 2                  TZE     s:8063

      376     8059    5                             F$DCB.ARS = 1;

   8059  2 000607   000001 235007                    LDA     1,DL
         2 000610   200016 471500                    LDP1    JDCB$,,AUTO
         2 000611   100000 755100                    STA     0,,PR1

      377     8060    5                             CALL FTI$SPFILE ALTRET(CLSTAP);

   8060  2 000612   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000613   000000 701000 xent               TSX1    FTI$SPFILE
         2 000614   000737 702000 2                  TSX2    CLSTAP

      378     8061    5                             END;

   8061  2 000615   000622 710000 2                  TRA     s:8064

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:51   
      379     8062    4                          ELSE
      380     8063    4                             FT$DDT.POS = FTP_BOV#; /* At BOV                    */

   8063  2 000616   000006 236100                    LDQ     6,,PR0
         2 000617   000002 376000 3                  ANQ     2
         2 000620   000020 276007                    ORQ     16,DL
         2 000621   000006 756100                    STQ     6,,PR0

      381     8064    4                          CALL FTL$GETFSN ALTRET(CLSTAP);

   8064  2 000622   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000623   000000 701000 xent               TSX1    FTL$GETFSN
         2 000624   000737 702000 2                  TSX2    CLSTAP

      382     8065    4                          END;

   8065  2 000625   000663 710000 2                  TRA     s:8079

      383     8066    4                       ELSE DO;
              8066                                /* Device tape...position to beginning of previous file */

      384     8067    4                          IF FT$DDT.POS ~= FTP_BOD# THEN

   8067  2 000626   200007 471500                    LDP1    DDDT$,,AUTO
         2 000627   100006 236100                    LDQ     6,,PR1
         2 000630   000160 376007                    ANQ     112,DL
         2 000631   000060 116007                    CMPQ    48,DL
         2 000632   000636 600000 2                  TZE     s:8070

      385     8068    4                             F$DCB.ARS = -2; /* After file data mark following file */

   8068  2 000633   000002 335007                    LCA     2,DL
         2 000634   000000 755100                    STA     0,,PR0
         2 000635   000640 710000 2                  TRA     s:8071

      386     8069    4                          ELSE
      387     8070    4                             F$DCB.ARS = -1; /* Still in file                    */
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:52   

   8070  2 000636   000001 335007                    LCA     1,DL
         2 000637   000000 755100                    STA     0,,PR0

      388     8071    4                          CALL FTI$SPFILE ALTRET(CLSTAP);

   8071  2 000640   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000641   000000 701000 xent               TSX1    FTI$SPFILE
         2 000642   000737 702000 2                  TSX2    CLSTAP

      389     8072    5                          IF NOT F$DCB.TYC.BOT(1) THEN DO;
              8072                                   /* Skip over next file mark */

   8072  2 000643   200016 470500                    LDP0    JDCB$,,AUTO
         2 000644   000002 236100                    LDQ     2,,PR0
         2 000645   040000 316003                    CANQ    16384,DU
         2 000646   000654 601000 2                  TNZ     s:8076

      390     8073    5                             F$DCB.ARS = 1;

   8073  2 000647   000001 235007                    LDA     1,DL
         2 000650   000000 755100                    STA     0,,PR0

      391     8074    5                             CALL FTI$SPFILE ALTRET(CLSTAP);

   8074  2 000651   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000652   000000 701000 xent               TSX1    FTI$SPFILE
         2 000653   000737 702000 2                  TSX2    CLSTAP

      392     8075    5                             END;

      393     8076    4                          FT$DDT.POS = FTP_HDR#;
              8076                                   /* Ready to begin PO tape if necessary */

   8076  2 000654   200007 470500                    LDP0    DDDT$,,AUTO
         2 000655   000006 236100                    LDQ     6,,PR0
         2 000656   000002 376000 3                  ANQ     2
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:53   
         2 000657   000040 276007                    ORQ     32,DL
         2 000660   000006 756100                    STQ     6,,PR0

      394     8077    4                          FT$DDT.FMNEEDED = %NO#;
              8077                                   /* Dont need file marks. Fix for #19294 */

   8077  2 000661   000003 236000 3                  LDQ     3
         2 000662   000006 356100                    ANSQ    6,,PR0

      395     8078    4                          END;

      396     8079    3                       CALL FTC_CLOSEUP(%PTV#);

   8079  2 000663   000000 236000 3                  LDQ     0
         2 000664   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000665   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000666   000000 011000                    NOP     0
         2 000667   000736 710000 2                  TRA     s:8100

      397     8080
      398     8081    3                    CASE(%PTV#);           /* Position to VOL1 of current tape   */

      399     8082    3                       FT$DDT.POSLOST = %NO#; /* Permit position redetermination */

   8082  2 000670   200007 470500                    LDP0    DDDT$,,AUTO
         2 000671   000007 236000 3                  LDQ     7
         2 000672   000006 356100                    ANSQ    6,,PR0

      400     8083    3                       FT$DDT.NOTEOF = %NO#; /* No longer in middle of file.     */

   8083  2 000673   000006 236000 3                  LDQ     6
         2 000674   000007 356100                    ANSQ    7,,PR0

      401     8084    4                       IF FT$DDT.FMNEEDED THEN DO; /* Need file mark before rewind */

   8084  2 000675   000006 236100                    LDQ     6,,PR0
         2 000676   000200 316007                    CANQ    128,DL
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:54   
         2 000677   000705 600000 2                  TZE     s:8088

      402     8085    4                          FT$DDT.FMNEEDED = %NO#;

   8085  2 000700   000003 236000 3                  LDQ     3
         2 000701   000006 356100                    ANSQ    6,,PR0

      403     8086    4                          CALL FTI$WRFM ALTRET(CLSTAP);

   8086  2 000702   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000703   000000 701000 xent               TSX1    FTI$WRFM
         2 000704   000737 702000 2                  TSX2    CLSTAP

      404     8087    4                          END;

      405     8088    3                       CALL FTI$REWIND ALTRET(CLSTAP);

   8088  2 000705   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000706   000000 701000 xent               TSX1    FTI$REWIND
         2 000707   000737 702000 2                  TSX2    CLSTAP

      406     8089    3                       DDDT$->FT$DDT.FSN = DDDT$->FT$DDT.FRSTFSN;
              8089                                /* FSN is that of first on tape */

   8089  2 000710   200007 470500                    LDP0    DDDT$,,AUTO
         2 000711   000005 720100                    LXL0    5,,PR0
         2 000712   000005 740100                    STX0    5,,PR0

      407     8090    3                       CALL FTC_CLOSEUP(%PTV#);

   8090  2 000713   000000 236000 3                  LDQ     0
         2 000714   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000715   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000716   000000 011000                    NOP     0
         2 000717   000736 710000 2                  TRA     s:8100

      408     8091
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:55   
      409     8092    3                    CASE(%REM#,%REL#,ELSE);

      410     8093    3                       CALL FTC_CLOSEUP(POS);

   8093  2 000720   200017 630500                    EPPR0   POS,,AUTO
         2 000721   200027 450500                    STP0    TOTLEFT+2,,AUTO
         2 000722   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000723   000000 011000                    NOP     0

      411     8094
      412     8095    3                    END;

      413     8096    2                 END;

   8096  2 000724   000736 710000 2                  TRA     s:8100

      414     8097    1              ELSE CALL FTC_CLOSEUP(%PTV#);

   8097  2 000725   000000 236000 3                  LDQ     0
         2 000726   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000727   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000730   000000 011000                    NOP     0
         2 000731   000736 710000 2                  TRA     s:8100

      415     8098    1           ELSE CALL FTC_CLOSEUP(%PTV#);

   8098  2 000732   000000 236000 3                  LDQ     0
         2 000733   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000734   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000735   000000 011000                    NOP     0

      416     8099
      417     8100    2           DO WHILE ('0'B);

   8100  2 000736   000754 710000 2                  TRA     s:8108

   8089  2 000737                       CLSTAP       null
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:56   
      418     8101    2   CLSTAP:    ;
      419     8102    2              FT$DDT.POS = FTP_UND#;       /* Don't know where we are            */

   8102  2 000737   200007 470500                    LDP0    DDDT$,,AUTO
         2 000740   000002 236000 3                  LDQ     2
         2 000741   000006 356100                    ANSQ    6,,PR0

      420     8103    2              ERRSAV = B$JIT.ERR;

   8103  2 000742   000000 471400 xsym               LDP1    B$JIT$
         2 000743   100012 236100                    LDQ     10,,PR1
         2 000744   200012 756100                    STQ     ERRSAV,,AUTO

      421     8104    2              CALL FTC_CLOSEUP(%PTV#);

   8104  2 000745   000000 236000 3                  LDQ     0
         2 000746   200027 756100                    STQ     TOTLEFT+2,,AUTO
         2 000747   000774 701000 2                  TSX1    FTC_CLOSEUP
         2 000750   000000 011000                    NOP     0

      422     8105    2              B$JIT.ERR = ERRSAV;

   8105  2 000751   200012 236100                    LDQ     ERRSAV,,AUTO
         2 000752   000000 470400 xsym               LDP0    B$JIT$
         2 000753   000012 756100                    STQ     10,,PR0

      423     8106    2              END;

      424     8107
      425     8108    1           IF F$DCB.ACS = %JRNL#

   8108  2 000754   200016 470500                    LDP0    JDCB$,,AUTO
         2 000755   000036 236100                    LDQ     30,,PR0
         2 000756   000777 376007                    ANQ     511,DL
         2 000757   000004 116007                    CMPQ    4,DL
         2 000760   000773 601000 2                  TNZ     s:8114

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:57   
      426     8109    2           THEN DO;                        /* Close JRNL file                    */

      427     8110    2              CALL FMP$CLSF;

   8110  2 000761   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000762   000000 701000 xent               TSX1    FMP$CLSF
         2 000763   000000 011000                    NOP     0

      428     8111    2              IF F$DCB.CFU$ ~= ADDR(NIL)

   8111  2 000764   200016 470500                    LDP0    JDCB$,,AUTO
         2 000765   000066 236100                    LDQ     54,,PR0
         2 000766   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000767   000773 600000 2                  TZE     s:8114

      429     8112    2              THEN F$DCB.CFU$->FM$CFUJ.ERR_WAIT = %NO#;

   8112  2 000770   000066 471500                    LDP1    54,,PR0
         2 000771   000010 236000 3                  LDQ     8
         2 000772   100005 356100                    ANSQ    5,,PR1

      430     8113    2              END;

      431     8114    1           RETURN;

   8114  2 000773   000000 702200 xent               TSX2  ! X66_ARET

      432     8115
      433     8116        /******************************************************************************/
      434     8117        %EJECT;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:58   
      435     8118        /******************************************************************************/
      436     8119    1   FTC_CLOSEUP: PROC( POS );

   8119  2 000774   200026 741300       FTC_CLOSEUP  STX1  ! TOTLEFT+1,,AUTO

      437     8120        /*F*     NAME: FTC_CLOSEUP
      438     8121                 PURPOSE: Finish closing DCB.
      439     8122                 DESCRIPTION: Return serial number list if requested.  Free
      440     8123                    any space used for this DCB (FPOOL, CFU, RO).
      441     8124         ***/
      442     8125
      443     8126         /***
      444     8127          *** Parameters:
      445     8128          ***/
      446     8129
      447     8130    2     DCL POS SBIN;                         /* Positioning information            */
      448     8131
      449     8132        /********************/
      450     8133
      451     8134         /***
      452     8135          *** If a buffer has been provided, return the serial number list.
      453     8136          ***/
      454     8137
      455     8138    2              IF DFLTCLOSE = 0

   8138  2 000775   200010 235100                    LDA     DFLTCLOSE,,AUTO
         2 000776   001024 601000 2                  TNZ     FREEFPOOLS

      456     8139    3              THEN DO;                     /* Non-default close                  */

      457     8140    3                 CALL HFF$DSIZ(POFFW(ADDR(PN$.SN_),ADDR(PN$.V_)),BUFSIZ) ALTRET(
              8140                          FREEFPOOLS);

   8140  2 000777   200003 236100                    LDQ     @PN$,,AUTO
         2 001000   000022 772000                    QRL     18
         2 001001   200032 756100                    STQ     @POS+3,,AUTO
         2 001002   200003 236100                    LDQ     @PN$,,AUTO
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:59   
         2 001003   000001 036003                    ADLQ    1,DU
         2 001004   000022 772000                    QRL     18
         2 001005   200032 136100                    SBLQ    @POS+3,,AUTO
         2 001006   200033 756100                    STQ     @POS+4,,AUTO
         2 001007   200004 630500                    EPPR0   BUFSIZ,,AUTO
         2 001010   200035 450500                    STP0    @POS+6,,AUTO
         2 001011   200033 631500                    EPPR1   @POS+4,,AUTO
         2 001012   200034 451500                    STP1    @POS+5,,AUTO
         2 001013   200034 630500                    EPPR0   @POS+5,,AUTO
         2 001014   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001015   000000 701000 xent               TSX1    HFF$DSIZ
         2 001016   001024 702000 2                  TSX2    FREEFPOOLS

      458     8141                                                /* Calc number of bytes in SN buffer  */
      459     8142    3                 SN$ = PN$.SN_;            /* Get pointer to SN list buffer      */

   8142  2 001017   200003 470500                    LDP0    @PN$,,AUTO
         2 001020   000001 236100                    LDQ     1,,PR0
         2 001021   200020 756100                    STQ     SN$,,AUTO

      460     8143    3                 CALL FTC_SNLIST;

   8143  2 001022   001114 701000 2                  TSX1    FTC_SNLIST
         2 001023   000000 011000                    NOP     0

      461     8144    3                 END;

   8139  2 001024                       FREEFPOOLS   null
      462     8145
      463     8146         /***
      464     8147          *** Free FPOOLs, CFUs, and any RO space.
      465     8148          ***/
      466     8149
      467     8150    2   FREEFPOOLS: ;
      468     8151    2              IF F$DCB.ORG = %KEYED# OR F$DCB.ORG = %INDEXED#

   8151  2 001024   200016 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:60   
         2 001025   000032 236100                    LDQ     26,,PR0
         2 001026   777000 376003                    ANQ     -512,DU
         2 001027   002000 116003                    CMPQ    1024,DU
         2 001030   001033 600000 2                  TZE     s:8152
         2 001031   006000 116003                    CMPQ    3072,DU
         2 001032   001055 601000 2                  TNZ     s:8155

      469     8152    2              THEN IF F$DCB.ACS = %SEQUEN#

   8152  2 001033   000036 236100                    LDQ     30,,PR0
         2 001034   000777 376007                    ANQ     511,DL
         2 001035   000001 116007                    CMPQ    1,DL
         2 001036   001055 601000 2                  TNZ     s:8155

      470     8153    2                 THEN IF F$DCB.FUN = %CREATE# OR F$DCB.FUN = %UPDATE#

   8153  2 001037   000032 236100                    LDQ     26,,PR0
         2 001040   000777 376003                    ANQ     511,DU
         2 001041   000003 116003                    CMPQ    3,DU
         2 001042   001045 600000 2                  TZE     s:8154
         2 001043   000001 116003                    CMPQ    1,DU
         2 001044   001055 601000 2                  TNZ     s:8155

      471     8154    2                    THEN CALL FSA$FSP(64,F$DCB.LASTKEY$);
              8154                             /* Free RO space used for last key area */

   8154  2 001045   200016 236100                    LDQ     JDCB$,,AUTO
         2 001046   000065 036003                    ADLQ    53,DU
         2 001047   000012 235000 3                  LDA     10
         2 001050   200032 757100                    STAQ    @POS+3,,AUTO
         2 001051   200032 630500                    EPPR0   @POS+3,,AUTO
         2 001052   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001053   000000 701000 xent               TSX1    FSA$FSP
         2 001054   000000 011000                    NOP     0

      472     8155    2              CALL FTR$RELFPOOLS;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:61   
   8155  2 001055   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001056   000000 701000 xent               TSX1    FTR$RELFPOOLS
         2 001057   000000 011000                    NOP     0

      473     8156    2              CALL FTR$RELCFUS;

   8156  2 001060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001061   000000 701000 xent               TSX1    FTR$RELCFUS
         2 001062   000000 011000                    NOP     0

      474     8157
      475     8158         /***
      476     8159          *** Make call on resource management depending on positioning info.
      477     8160          ***/
      478     8161
      479     8162    2              IF ADDR(POS) ~= ADDR(NIL)

   8162  2 001063   200027 236100                    LDQ     @POS,,AUTO
         2 001064   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001065   001112 600000 2                  TZE     s:8172

      480     8163    3              THEN DO CASE( POS );

   8163  2 001066   200027 470500                    LDP0    @POS,,AUTO
         2 001067   000000 235100                    LDA     0,,PR0
         2 001070   000004 115007                    CMPA    4,DL
         2 001071   001073 602005 2                  TNC     s:8163+5,AL
         2 001072   001107 710000 2                  TRA     s:8169
         2 001073   001107 710000 2                  TRA     s:8169
         2 001074   001107 710000 2                  TRA     s:8169
         2 001075   001077 710000 2                  TRA     s:8165
         2 001076   001103 710000 2                  TRA     s:8167

      481     8164    3                 CASE(%REM#);

      482     8165    3                    CALL FRB$CREM;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:62   
   8165  2 001077   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001100   000000 701000 xent               TSX1    FRB$CREM
         2 001101   000000 011000                    NOP     0
         2 001102   001112 710000 2                  TRA     s:8172

      483     8166    3                 CASE(%REL#);

      484     8167    3                    CALL FRB$CREL;

   8167  2 001103   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001104   000000 701000 xent               TSX1    FRB$CREL
         2 001105   000000 011000                    NOP     0
         2 001106   001112 710000 2                  TRA     s:8172

      485     8168    3                 CASE(ELSE);

      486     8169    3                    CALL FRB$CLS;

   8169  2 001107   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001110   000000 701000 xent               TSX1    FRB$CLS
         2 001111   000000 011000                    NOP     0

      487     8170    3                 END;

      488     8171
      489     8172    2              RETURN;

   8172  2 001112   200026 221300                    LDX1  ! TOTLEFT+1,,AUTO
         2 001113   000001 702211                    TSX2  ! 1,X1

      490     8173
      491     8174    2      END FTC_CLOSEUP;
      492     8175        /*********************************************************************/
      493     8176        %EJECT;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:63   
      494     8177        /*********************************************************************/
      495     8178    1   FTC_SNLIST: PROC;

   8178  2 001114   200030 741300       FTC_SNLIST   STX1  ! @POS+1,,AUTO

      496     8179        /*F*     NAME: FTC_SNLIST
      497     8180                 PURPOSE: Return serial number list in user buffer.
      498     8181         ***/
      499     8182
      500     8183        /********************/
      501     8184
      502     8185         /***
      503     8186          *** If no user buffer, just return.  If no CFU SN list,
      504     8187          *** just return single SN.
      505     8188          ***/
      506     8189
      507     8190    2              IF SN$=ADDR(NIL) OR BUFSIZ <= 0 THEN RETURN;

   8190  2 001115   200020 236100                    LDQ     SN$,,AUTO
         2 001116   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001117   001122 600000 2                  TZE     s:8190+5
         2 001120   200004 235100                    LDA     BUFSIZ,,AUTO
         2 001121   001123 605400 2                  TPNZ    s:8191

   8190  2 001122   000001 702211                    TSX2  ! 1,X1

      508     8191    2              BUFSIZ = (BUFSIZ - LENGTHC(SN$->VLP$SN_V.NUM))

   8191  2 001123   200004 236100                    LDQ     BUFSIZ,,AUTO
         2 001124   000004 136007                    SBLQ    4,DL
         2 001125   000006 506007                    DIV     6,DL
         2 001126   200004 756100                    STQ     BUFSIZ,,AUTO

      509     8192    2                  / LENGTHC(SN$->VLP$SN_V.SN(0)); /* Calc number of SNs          */
      510     8193    2              CFU$ = F$DCB.CFU$;           /* Get CFU pointer                    */

   8193  2 001127   200016 470500                    LDP0    JDCB$,,AUTO
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:64   
         2 001130   000066 236100                    LDQ     54,,PR0
         2 001131   200005 756100                    STQ     CFU$,,AUTO

      511     8194    2              IF CFU$ = ADDR(NIL)          /* Any SN list?                       */

   8194  2 001132   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001133   001144 601000 2                  TNZ     s:8206

      512     8195    3              THEN DO;                     /* No--return single SN only          */

      513     8196    3                 SN$->VLP$SN_V.NUM = 1;

   8196  2 001134   000001 235007                    LDA     1,DL
         2 001135   200020 471500                    LDP1    SN$,,AUTO
         2 001136   100000 755100                    STA     0,,PR1

      514     8197    3                 SN$->VLP$SN_V.SN(0) = F$DCB.PSN;

   8197  2 001137   040100 100500                    MLR     fill='040'O
         2 001140   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 001141   100001 000006                    ADSC9   1,,PR1                   cn=0,n=6

      515     8198    3                 RETURN;

   8198  2 001142   200030 221300                    LDX1  ! @POS+1,,AUTO
         2 001143   000001 702211                    TSX2  ! 1,X1

      516     8199    3                 END;
      517     8200
      518     8201         /***
      519     8202          ***   We have a list of SNs.   Move as many as we can to the
      520     8203          ***   user's buffer.
      521     8204          ***/
      522     8205
      523     8206    2              I = 0;

   8206  2 001144   200014 450100                    STZ     I,,AUTO
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:65   

      524     8207    2              TOTLEFT = BUFSIZ;            /* Remember # that can be moved       */

   8207  2 001145   200004 235100                    LDA     BUFSIZ,,AUTO
         2 001146   200025 755100                    STA     TOTLEFT,,AUTO

      525     8208    3              DO WHILE( CFU$ ~= ADDR(NIL) );

   8208  2 001147   001247 710000 2                  TRA     s:8230

      526     8209    3                 TEMP = 0;

   8209  2 001150   200021 450100                    STZ     TEMP,,AUTO

      527     8210    4                 DO WHILE( TEMP < CFU$->FT$CFUSN.NUM );

   8210  2 001151   200005 470500                    LDP0    CFU$,,AUTO
         2 001152   000100 101500                    MRL     fill='000'O
         2 001153   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 001154   200032 000004                    ADSC9   @POS+3,,AUTO             cn=0,n=4
         2 001155   200032 236100                    LDQ     @POS+3,,AUTO
         2 001156   200021 116100                    CMPQ    TEMP,,AUTO
         2 001157   001233 604400 2                  TMOZ    s:8226

      528     8211    4                    SN$->VLP$SN_V.SN(I) = CFU$->FT$CFUSN.SN(TEMP);

   8211  2 001160   200021 236100                    LDQ     TEMP,,AUTO
         2 001161   000006 402007                    MPY     6,DL
         2 001162   200032 756100                    STQ     @POS+3,,AUTO
         2 001163   200014 236100                    LDQ     I,,AUTO
         2 001164   000006 402007                    MPY     6,DL
         2 001165   200005 470500                    LDP0    CFU$,,AUTO
         2 001166   200032 235100                    LDA     @POS+3,,AUTO
         2 001167   200020 471500                    LDP1    SN$,,AUTO
         2 001170   040106 100505                    MLR     fill='040'O
         2 001171   000001 000006                    ADSC9   1,A,PR0                  cn=0,n=6
         2 001172   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:66   

      529     8212    4                    I = I + 1;

   8212  2 001173   200014 054100                    AOS     I,,AUTO

      530     8213    4                    TEMP = TEMP + 1;

   8213  2 001174   200021 054100                    AOS     TEMP,,AUTO

      531     8214    4                    TOTLEFT = TOTLEFT - 1;

   8214  2 001175   000001 336007                    LCQ     1,DL
         2 001176   200025 056100                    ASQ     TOTLEFT,,AUTO

      532     8215    4                    IF TOTLEFT <= 0

   8215  2 001177   001225 605400 2                  TPNZ    s:8225

      533     8216    5                    THEN DO;               /* Run out of space?                  */

      534     8217    5                       IF TEMP < CFU$->FT$CFUSN.NUM OR CFU$->FT$CFUSN.LINKX ~= 0

   8217  2 001200   000100 101500                    MRL     fill='000'O
         2 001201   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 001202   200032 000004                    ADSC9   @POS+3,,AUTO             cn=0,n=4
         2 001203   200032 236100                    LDQ     @POS+3,,AUTO
         2 001204   200021 116100                    CMPQ    TEMP,,AUTO
         2 001205   001214 605400 2                  TPNZ    s:8219
         2 001206   000100 101500                    MRL     fill='000'O
         2 001207   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 001210   200033 000004                    ADSC9   @POS+4,,AUTO             cn=0,n=4
         2 001211   200033 236100                    LDQ     @POS+4,,AUTO
         2 001212   000000 116003                    CMPQ    0,DU
         2 001213   001225 600000 2                  TZE     s:8225

      535     8218    6                       THEN DO;            /* No space for SNs                   */

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:67   
      536     8219    6                          IF NOT B$JIT.ERR THEN B$JIT.ERR = E_PARTIALSN;

   8219  2 001214   000000 473400 xsym               LDP3    B$JIT$
         2 001215   300012 235100                    LDA     10,,PR3
         2 001216   001221 601000 2                  TNZ     s:8221

   8219  2 001217   000001 236000 1                  LDQ     E_PARTIALSN
         2 001220   300012 756100                    STQ     10,,PR3

      537     8220         /*E* ERROR: FTC-E$PARTIALSN */
      538     8221    6                          SN$->VLP$SN_V.NUM = BUFSIZ;

   8221  2 001221   200004 235100                    LDA     BUFSIZ,,AUTO
         2 001222   100000 755100                    STA     0,,PR1

      539     8222    6                          RETURN;

   8222  2 001223   200030 221300                    LDX1  ! @POS+1,,AUTO
         2 001224   000001 702211                    TSX2  ! 1,X1

      540     8223    6                          END;
      541     8224    5                       END;
      542     8225    4                    END;

   8225  2 001225   000100 101500                    MRL     fill='000'O
         2 001226   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 001227   200032 000004                    ADSC9   @POS+3,,AUTO             cn=0,n=4
         2 001230   200032 236100                    LDQ     @POS+3,,AUTO
         2 001231   200021 116100                    CMPQ    TEMP,,AUTO
         2 001232   001160 605400 2                  TPNZ    s:8211

      543     8226    3                 J = CFU$->FT$CFUSN.LINKX; /* On to next CFU                     */

   8226  2 001233   000100 101500                    MRL     fill='000'O
         2 001234   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 001235   200015 000004                    ADSC9   J,,AUTO                  cn=0,n=4

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:68   
      544     8227    3                 IF J = 0

   8227  2 001236   200015 235100                    LDA     J,,AUTO
         2 001237   001243 601000 2                  TNZ     s:8229

      545     8228    3                 THEN CFU$ = ADDR(NIL);

   8228  2 001240   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001241   200005 756100                    STQ     CFU$,,AUTO
         2 001242   001247 710000 2                  TRA     s:8230

      546     8229    3                 ELSE CFU$ = PINCRW( F$CFU$, J );

   8229  2 001243   200015 236100                    LDQ     J,,AUTO
         2 001244   000022 736000                    QLS     18
         2 001245   000000 036000 xsym               ADLQ    F$CFU$
         2 001246   200005 756100                    STQ     CFU$,,AUTO

      547     8230    3                 END;

   8230  2 001247   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001250   001150 601000 2                  TNZ     s:8209

      548     8231
      549     8232         /***
      550     8233          *** Return number of SNs.
      551     8234          ***/
      552     8235
      553     8236    2              SN$->VLP$SN_V.NUM = BUFSIZ - TOTLEFT;

   8236  2 001251   200004 236100                    LDQ     BUFSIZ,,AUTO
         2 001252   200025 136100                    SBLQ    TOTLEFT,,AUTO
         2 001253   200020 470500                    LDP0    SN$,,AUTO
         2 001254   000000 756100                    STQ     0,,PR0

      554     8237    2              RETURN;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:69   
   8237  2 001255   200030 221300                    LDX1  ! @POS+1,,AUTO
         2 001256   000001 702211                    TSX2  ! 1,X1

      555     8238
      556     8239    2      END FTC_SNLIST;
      557     8240        /**********************************************************************/
      558     8241        %EJECT;
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:70   
      559     8242        /**********************************************************************/
      560     8243    1   FTC$REM:   ENTRY;

   8243  2 001257   000000 700200 xent  FTC$REM      TSX0  ! X66_AUTO_1
         2 001260   000040 000001                    ZERO    32,1

      561     8244        /*F*  NAME: FTC$REM
      562     8245              PURPOSE: Handle M$REM PMME.
      563     8246              INPUT: B$PS$(0) - FPT_REM V area
      564     8247         ***/
      565     8248
      566     8249        /********************/
      567     8250
      568     8251         /***
      569     8252          *** Assume remove by default.
      570     8253          ***/
      571     8254
      572     8255    2              DO CASE(B$PS$(0)->FPT$REM_V.DISP);

   8255  2 001261   000000 470400 xsym               LDP0    B$PS$
         2 001262   000000 236100                    LDQ     0,,PR0
         2 001263   000033 772000                    QRL     27
         2 001264   000005 116007                    CMPQ    5,DL
         2 001265   001267 602006 2                  TNC     s:8255+6,QL
         2 001266   001304 710000 2                  TRA     s:8263
         2 001267   001304 710000 2                  TRA     s:8263
         2 001270   001304 710000 2                  TRA     s:8263
         2 001271   001274 710000 2                  TRA     s:8257
         2 001272   001277 710000 2                  TRA     s:8259
         2 001273   001302 710000 2                  TRA     s:8261

      573     8256    2                 CASE(%REM#);

      574     8257    2                    FCN = FRR_REM#;

   8257  2 001274   000001 235007                    LDA     1,DL
         2 001275   200013 755100                    STA     FCN,,AUTO
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:71   
         2 001276   001306 710000 2                  TRA     s:8265

      575     8258    2                 CASE(%REL#);

      576     8259    2                    FCN = FRR_REL#;

   8259  2 001277   000002 235007                    LDA     2,DL
         2 001300   200013 755100                    STA     FCN,,AUTO
         2 001301   001306 710000 2                  TRA     s:8265

      577     8260    2                 CASE(%PTV#);

      578     8261    2                    FCN = FRR_REW#;

   8261  2 001302   200013 450100                    STZ     FCN,,AUTO
         2 001303   001306 710000 2                  TRA     s:8265

      579     8262    2                 CASE(ELSE);               /* Anything else assume remove        */

      580     8263    2                    FCN = FRR_REM#;

   8263  2 001304   000001 235007                    LDA     1,DL
         2 001305   200013 755100                    STA     FCN,,AUTO

      581     8264    2                 END;

      582     8265    1              A_SN = B$PS$(0)->FPT$REM_V.PSN;

   8265  2 001306   040100 100500                    MLR     fill='040'O
         2 001307   000000 400006                    ADSC9   0,,PR0                   cn=2,n=6
         2 001310   200023 000006                    ADSC9   A_SN,,AUTO               cn=0,n=6

      583     8266    1              GOTO REMW;

   8266  2 001311   001321 710000 2                  TRA     REMW

      584     8267
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:72   
      585     8268    1   FTC$REW:   ENTRY;

   8268  2 001312   000000 700200 xent  FTC$REW      TSX0  ! X66_AUTO_1
         2 001313   000040 000001                    ZERO    32,1

      586     8269        /*F*  NAME: FTC$REW
      587     8270              PURPOSE: Handle M$REW PMME when no DCB# specified.
      588     8271              INPUT: See FTC$REM
      589     8272         ***/
      590     8273    1              FCN = FRR_REW#;              /* Rewind                             */

   8273  2 001314   200013 450100                    STZ     FCN,,AUTO

      591     8274    1              A_SN = B$PS$(0)->FPT$REW_V.PSN;

   8274  2 001315   000000 470400 xsym               LDP0    B$PS$
         2 001316   040100 100500                    MLR     fill='040'O
         2 001317   000001 400006                    ADSC9   1,,PR0                   cn=2,n=6
         2 001320   200023 000006                    ADSC9   A_SN,,AUTO               cn=0,n=6

   8274  2 001321                       REMW         null
      592     8275
      593     8276    1   REMW:      ;
      594     8277
      595     8278    1              IF A_SN = ' '

   8278  2 001321   040000 106500                    CMPC    fill='040'O
         2 001322   200023 000006                    ADSC9   A_SN,,AUTO               cn=0,n=6
         2 001323   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001324   001331 601000 2                  TNZ     s:8288

      596     8279    2              THEN DO;                     /* No serial number specified         */

      597     8280    2                 B$JIT.ERR = E_NOSN;

   8280  2 001325   000000 236000 1                  LDQ     E_NOSN
         2 001326   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:73   
         2 001327   100012 756100                    STQ     10,,PR1

      598     8281    2                 RETURN;

   8281  2 001330   000000 702200 xent               TSX2  ! X66_ARET

      599     8282    2                 END;
      600     8283
      601     8284         /***
      602     8285          ***
      603     8286          ***/
      604     8287
      605     8288    1              CALL FRZ$RRR( FCN, A_SN, DCTX ) ALTRET( JUSTRET );

   8288  2 001331   200006 631500                    EPPR1   DCTX,,AUTO
         2 001332   200034 451500                    STP1    @POS+5,,AUTO
         2 001333   200023 633500                    EPPR3   A_SN,,AUTO
         2 001334   200033 453500                    STP3    @POS+4,,AUTO
         2 001335   200013 634500                    EPPR4   FCN,,AUTO
         2 001336   200032 454500                    STP4    @POS+3,,AUTO
         2 001337   200032 630500                    EPPR0   @POS+3,,AUTO
         2 001340   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001341   000000 701000 xent               TSX1    FRZ$RRR
         2 001342   001417 702000 2                  TSX2    JUSTRET

      606     8289    1              DDDT$ = NK$LDCT$(DCTX)->NK$LDCT.DDT$;

   8289  2 001343   000000 470400 xsym               LDP0    N$DCT$$
         2 001344   200006 720100                    LXL0    DCTX,,AUTO
         2 001345   000000 471510                    LDP1    0,X0,PR0
         2 001346   100004 236100                    LDQ     4,,PR1
         2 001347   200007 756100                    STQ     DDDT$,,AUTO

      607     8290    1              FT$DDT.NOTEOF = %NO#;        /* No longer in middle of file.       */

   8290  2 001350   200007 473500                    LDP3    DDDT$,,AUTO
         2 001351   000006 236000 3                  LDQ     6
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:74   
         2 001352   300007 356100                    ANSQ    7,,PR3

      608     8291    2              IF FCN = FRR_REW# THEN DO;   /* Rewind tape or optical disk.       */

   8291  2 001353   200013 235100                    LDA     FCN,,AUTO
         2 001354   001417 601000 2                  TNZ     JUSTRET

      609     8292    2                 IF NK$LDCT$(DCTX)->NK$LDCT.RAT$->FR$RAT.TYP = 'OD' THEN

   8292  2 001355   000000 471510                    LDP1    0,X0,PR0
         2 001356   100005 474500                    LDP4    5,,PR1
         2 001357   400010 221100                    LDX1    8,,PR4
         2 001360   000005 101000 1                  CMPX1   E_PARTIALSN+4
         2 001361   001371 601000 2                  TNZ     s:8295

      610     8293    2                    CALL FPO$REWIND(DCTX) ALTRET(JUSTRET);

   8293  2 001362   200006 635500                    EPPR5   DCTX,,AUTO
         2 001363   200032 455500                    STP5    @POS+3,,AUTO
         2 001364   200032 630500                    EPPR0   @POS+3,,AUTO
         2 001365   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001366   000000 701000 xent               TSX1    FPO$REWIND
         2 001367   001417 702000 2                  TSX2    JUSTRET
         2 001370   001414 710000 2                  TRA     s:8302

      611     8294    3                 ELSE DO;

      612     8295    3                    FT$DDT.POSLOST = %NO#; /* Permit I/O again                   */

   8295  2 001371   000007 236000 3                  LDQ     7
         2 001372   300006 356100                    ANSQ    6,,PR3

      613     8296    4                    IF FT$DDT.FMNEEDED THEN DO; /* Need file mark before rewind  */

   8296  2 001373   300006 236100                    LDQ     6,,PR3
         2 001374   000200 316007                    CANQ    128,DL
         2 001375   001406 600000 2                  TZE     s:8300
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:75   

      614     8297    4                       FT$DDT.FMNEEDED = %NO#;

   8297  2 001376   000003 236000 3                  LDQ     3
         2 001377   300006 356100                    ANSQ    6,,PR3

      615     8298    4                       CALL FTI$WRFMDEV(DCTX) ALTRET(JUSTRET);

   8298  2 001400   200006 631500                    EPPR1   DCTX,,AUTO
         2 001401   200032 451500                    STP1    @POS+3,,AUTO
         2 001402   200032 630500                    EPPR0   @POS+3,,AUTO
         2 001403   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001404   000000 701000 xent               TSX1    FTI$WRFMDEV
         2 001405   001417 702000 2                  TSX2    JUSTRET

      616     8299    4                       END;

      617     8300    3                    CALL FTI$REWINDDEV(DCTX) ALTRET(JUSTRET);

   8300  2 001406   200006 630500                    EPPR0   DCTX,,AUTO
         2 001407   200032 450500                    STP0    @POS+3,,AUTO
         2 001410   200032 630500                    EPPR0   @POS+3,,AUTO
         2 001411   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001412   000000 701000 xent               TSX1    FTI$REWINDDEV
         2 001413   001417 702000 2                  TSX2    JUSTRET

      618     8301    3                    END;

      619     8302    2                 FT$DDT.FSN = FT$DDT.FRSTFSN; /* Back to BOV                     */

   8302  2 001414   200007 470500                    LDP0    DDDT$,,AUTO
         2 001415   000005 720100                    LXL0    5,,PR0
         2 001416   000005 740100                    STX0    5,,PR0

      620     8303    2                 END;

   8297  2 001417                       JUSTRET      null
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:76   
      621     8304    1   JUSTRET:   ;
      622     8305    1              RETURN;

   8305  2 001417   000000 702200 xent               TSX2  ! X66_ARET

E_NOSN
 Sect OctLoc
   1     000   062403 413062                                                    2..2

E_PARTIALSN
 Sect OctLoc
   1     001   062403 412760                                                    2...

(unnamed)
 Sect OctLoc
   1     002   105117 106040   100000 000000   105117 126040   117104 040040    EOF @...EOV OD

(unnamed)
 Sect OctLoc
   3     000   000006 006000   777777 777000   777777 777617   777777 777577    ................
   3     004   000003 006000   000002 006000   777777 577777   777777 773777    ................
   3     010   577777 777777   000000 000100   000011 006000                    .......@....
      623     8306        /**********************************************************************/
      624     8307    1   END FTC$CLOSE;

PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:77   
--  Include file information  --

   FR$RAT.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  is referenced.
   F$CP6V_C.:E05TOU  is referenced.
   F$CP6P_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FTC$CLOSE.
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:78   

 **** Variables and constants ****

  ****  Section 001 RoData FTC$CLOSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 E_NOSN                     1-0-0/b STRC        r     1 E_PARTIALSN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PN$                      27-0-0/w PTR         r     1 @POS
    23-0-0/c CHAR(6)     r     1 A_SN                       4-0-0/w SBIN        r     1 BUFSIZ
     5-0-0/w PTR         r     1 CFU$                       6-0-0/w UBIN        r     1 DCTX
     7-0-0/w PTR         r     1 DDDT$                     10-0-0/w SBIN        r     1 DFLTCLOSE
    11-0-0/c CHAR(3)     r     1 DSRDLBL                   12-0-0/b BIT         r     1 ERRSAV
    13-0-0/w UBIN        r     1 FCN                       14-0-0/w SBIN        r     1 I
    15-0-0/w SBIN        r     1 J                         16-0-0/w PTR         r     1 JDCB$
    *0-0-0/w STRC(504)   r     1 PN$                       17-0-0/w SBIN        r     1 POS
    *0-0-0/w SBIN        r     1 POS                       20-0-0/w PTR         r     1 SN$
    21-0-0/w SBIN        r     1 TEMP                      22-0-0/w PTR         r     1 TEMP$
    25-0-0/w SBIN        r     1 TOTLEFT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS$(0:19)
     0-0-0/w PTR         r     1 F$CFU$                     0-0-0/w PTR         r     1 N$DCT$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:79   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFUJ                    0-0-0/d STRC(144)   r     1 FPT$CLOSE_V
     0-0-0/d STRC(72)    r     1 FPT$REM_V                  0-0-0/d STRC(108)   r     1 FPT$REW_V
     0-0-0/w STRC(324)   r     1 FR$RAT                     0-0-0/c STRC(288)   r     1 FT$CFUSN
     0-0-0/w STRC(288)   r     1 FT$DDT                     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)
     0-0-0/d STRC(90)    r     1 VLP$SN_V


   Procedure FTC$CLOSE requires 784 words for executable code.
   Procedure FTC$CLOSE requires 32 words of local(AUTO) storage.

    No errors detected in file FTC$CLOSE.:E05TSI    .
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:81   
          MINI XREF LISTING

A_SN
      7797**DCL      8265<<ASSIGN   8274<<ASSIGN   8278>>IF       8288<>CALL
B$JIT.DCB$
       443**DCL      7860>>ASSIGN
B$JIT.ERR
       353**DCL      8103>>ASSIGN   8105<<ASSIGN   8219>>IF       8219<<ASSIGN   8280<<ASSIGN
B$JIT.ERR.MID
       354**DCL       354--REDEF
B$JIT.PRIV.ACTIVE
       354**DCL      7935>>IF
B$JIT$
      7766**DCL       348--IMP-PTR  7860>>ASSIGN   7935>>IF       8103>>ASSIGN   8105>>ASSIGN   8219>>IF
      8219>>ASSIGN   8280>>ASSIGN
B$PS$
       463**DCL      8255>>DOCASE   8265>>ASSIGN   8274>>ASSIGN
BEGINCLOSE
      7852**LABEL    7839--GOTO
BUFSIZ
      7782**DCL      8140<>CALL     8190>>IF       8191<<ASSIGN   8191>>ASSIGN   8207>>ASSIGN   8221>>ASSIGN
      8236>>ASSIGN
CFU$
      7783**DCL      8193<<ASSIGN   8194>>IF       8208>>DOWHILE  8210>>DOWHILE  8211>>ASSIGN   8217>>IF
      8217>>IF       8226>>ASSIGN   8228<<ASSIGN   8229<<ASSIGN
CLOSE
      7938**LABEL    7933--GOTO
CLSTAP
      8089**LABEL    7945--CALLALT  7946--CALLALT  7969--CALLALT  7976--CALLALT  7988--CALLALT  7990--CALLALT
      7992--CALLALT  8041--CALLALT  8049--CALLALT  8052--CALLALT  8055--CALLALT  8060--CALLALT  8064--CALLALT
      8071--CALLALT  8074--CALLALT  8086--CALLALT  8088--CALLALT
DCTX
      7784**DCL      8288<>CALL     8289>>ASSIGN   8292>>IF       8293<>CALL     8298<>CALL     8300<>CALL
DDDT$
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:82   
      7785**DCL      7351--IMP-PTR  7900<<ASSIGN   7901>>IF       7901>>IF       7948<<ASSIGN   7949>>ASSIGN
      7960>>ASSIGN   7970>>ASSIGN   7993>>ASSIGN   8039>>IF       8040>>ASSIGN   8045>>IF       8053<<ASSIGN
      8057>>ASSIGN   8058>>IF       8063>>ASSIGN   8067>>IF       8076>>ASSIGN   8077>>ASSIGN   8082>>ASSIGN
      8083>>ASSIGN   8084>>IF       8085>>ASSIGN   8089>>ASSIGN   8089>>ASSIGN   8102>>ASSIGN   8289<<ASSIGN
      8290>>ASSIGN   8295>>ASSIGN   8296>>IF       8297>>ASSIGN   8302>>ASSIGN   8302>>ASSIGN
DFLTCLOSE
      7786**DCL      7838<<ASSIGN   7852<<ASSIGN   7903>>IF       7923>>DOCASE   7933>>IF       8024>>IF
      8138>>IF
DOPOSITIONING
      8028**LABEL    7907--GOTO
DSRDLBL
      7787**DCL      7931<<ASSIGN   7937<<ASSIGN   7946<>CALL
ERRSAV
      7788**DCL      8103<<ASSIGN   8105>>ASSIGN
E_NOSN
      7810**DCL      8280>>ASSIGN
E_PARTIALSN
      7823**DCL      8219>>ASSIGN
F$CFU$
      7767**DCL      8229>>ASSIGN
F$DCB.ACS
      6887**DCL      7861>>IF       8108>>IF       8152>>IF
F$DCB.ACTPOS
      6895**DCL      6895--REDEF
F$DCB.ARS
      6870**DCL      6870--REDEF    7968<<ASSIGN   7991<<ASSIGN   8042<<ASSIGN   8046<<ASSIGN   8048<<ASSIGN
      8054<<ASSIGN   8059<<ASSIGN   8068<<ASSIGN   8070<<ASSIGN   8073<<ASSIGN
F$DCB.ASN
      6885**DCL      7921>>IF       8036>>IF
F$DCB.ATTR
      6888**DCL      6889--REDEF
F$DCB.BORROW
      6903**DCL      6903--REDEF    6903--REDEF    6903--REDEF
F$DCB.CFU$
      6904**DCL      8111>>IF       8112>>ASSIGN   8193>>ASSIGN
F$DCB.DCBNAME.L
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:83   
      6917**DCL      6917--IMP-SIZ
F$DCB.EBCDIC
      6882**DCL      7879>>IF
F$DCB.EOMCHAR
      6874**DCL      6874--REDEF
F$DCB.FLDID
      6898**DCL      6898--REDEF
F$DCB.FORM$
      6892**DCL      6892--REDEF
F$DCB.FSECT
      6908**DCL      6908--REDEF    8037>>IF
F$DCB.FSN
      6885**DCL      6885--REDEF    6885--REDEF    6886--REDEF    7949>>ASSIGN
F$DCB.FUN
      6884**DCL      8028>>IF       8153>>IF       8153>>IF
F$DCB.HEADER$
      6891**DCL      6891--REDEF
F$DCB.IXTNSIZE
      6889**DCL      6889--REDEF
F$DCB.LASTKEY$
      6903**DCL      8154<>CALL
F$DCB.LASTSTA$
      6879**DCL      6879--REDEF
F$DCB.LVL
      6904**DCL      6904--REDEF
F$DCB.NAME.C
      6879**DCL      6879--REDEF
F$DCB.NOEOF
      6900**DCL      6900--REDEF    7940>>IF       7952>>IF
F$DCB.NRECS
      6890**DCL      6890--REDEF
F$DCB.NRECX
      6909**DCL      6909--REDEF
F$DCB.OHDR
      6901**DCL      6901--REDEF
F$DCB.ORG
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:84   
      6884**DCL      6884--REDEF    7877>>IF       8151>>IF       8151>>IF
F$DCB.OWNER
      6901**DCL      7863>>IF
F$DCB.PRECNO
      6907**DCL      6907--REDEF
F$DCB.PSN
      6880**DCL      8197>>ASSIGN
F$DCB.RCSZ
      6912**DCL      6912--REDEF
F$DCB.RECL
      6885**DCL      7880<<ASSIGN   7880>>ASSIGN   7881>>IF       7883<<ASSIGN   7883>>ASSIGN   7884<<ASSIGN
      7884>>ASSIGN
F$DCB.RES
      6880**DCL      6880--REDEF
F$DCB.SETX
      6892**DCL      6892--REDEF    7894>>ASSIGN   7948>>ASSIGN   8053>>ASSIGN
F$DCB.SPANNED
      6884**DCL      7882>>IF
F$DCB.TAB$
      6891**DCL      6892--REDEF
F$DCB.TAPTYP.MANAGED
      6905**DCL      7958>>IF       7974>>IF
F$DCB.TAPTYP.PASTFM
      6905**DCL      7988>>IF
F$DCB.TAPTYP.USRBUF
      6905**DCL      7976>>IF
F$DCB.TDA
      6906**DCL      6906--REDEF
F$DCB.TYC.BOT
      6870**DCL      8072>>IF
F$DCB.TYC.EOF
      6871**DCL      7958>>IF
F$DCB.WSN
      6881**DCL      6881--REDEF
FCN
      7789**DCL      8257<<ASSIGN   8259<<ASSIGN   8261<<ASSIGN   8263<<ASSIGN   8273<<ASSIGN   8288<>CALL
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:85   
      8291>>IF
FM$CFUJ.ERR_WAIT
      7206**DCL      8112<<ASSIGN
FMP$CLSF
      7740**DCL-ENT  7865--CALL     8110--CALL
FPO$REWIND
      7741**DCL-ENT  8293--CALL
FPT$CLOSE_V.DISP
      6802**DCL      8028>>IF
FPT$CLOSE_V.EXPIRE
      6806**DCL      6806--REDEF
FPT$CLOSE_V.NOMARKS
      6805**DCL      7940>>IF       7965>>IF       7982>>IF
FPT$CLOSE_V.POS
      6805**DCL      7906>>ASSIGN   7935>>IF       8027>>ASSIGN
FPT$CLOSE_V.TRUNCATE
      6802**DCL      7938>>ASSIGN
FPT$CLOSE_V.TYPE
      6805**DCL      6805--REDEF
FPT$CLOSE_V.XTNSIZE
      6802**DCL      6802--REDEF    6804--REDEF
FPT$REM_V.DISP
      6810**DCL      8255>>DOCASE
FPT$REM_V.PSN
      6810**DCL      8265>>ASSIGN
FPT$REW_V.PSN
      6813**DCL      8274>>ASSIGN
FR$RAT.TYP
      7721**DCL      8292>>IF
FRB$CLS
      7742**DCL-ENT  8169--CALL
FRB$CREL
      7743**DCL-ENT  8167--CALL
FRB$CREM
      7744**DCL-ENT  8165--CALL
FREEFPOOLS IN PROCEDURE FTC_CLOSEUP
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:86   
      8139**LABEL    8140--CALLALT
FRZ$RRR
      7745**DCL-ENT  8288--CALL
FSA$FSP
      7746**DCL-ENT  8154--CALL
FT$CFUSN.LINKX
      7210**DCL      8217>>IF       8226>>ASSIGN
FT$CFUSN.NUM
      7210**DCL      8210>>DOWHILE  8217>>IF
FT$CFUSN.SN
      7210**DCL      8211>>ASSIGN
FT$DDT.FMNEEDED
      7383**DCL      8039>>IF       8040<<ASSIGN   8077<<ASSIGN   8084>>IF       8085<<ASSIGN   8296>>IF
      8297<<ASSIGN
FT$DDT.FRSTFSN
      7363**DCL      8089>>ASSIGN   8302>>ASSIGN
FT$DDT.FSN
      7361**DCL      7949<<ASSIGN   8089<<ASSIGN   8302<<ASSIGN
FT$DDT.FUNNYPOS
      7390**DCL      7901>>IF
FT$DDT.NOTEOF
      7398**DCL      8045>>IF       8057<<ASSIGN   8083<<ASSIGN   8290<<ASSIGN
FT$DDT.POS
      7385**DCL      7960<<ASSIGN   7970<<ASSIGN   7993<<ASSIGN   8058>>IF       8063<<ASSIGN   8067>>IF
      8076<<ASSIGN   8102<<ASSIGN
FT$DDT.POSLOST
      7378**DCL      7901>>IF       8082<<ASSIGN   8295<<ASSIGN
FTC_CLOSEUP
      8119**PROC     7897--CALL     7909--CALL     8079--CALL     8090--CALL     8093--CALL     8097--CALL
      8098--CALL     8104--CALL
FTC_SNLIST
      8178**PROC     8143--CALL
FTI$REWIND
      7747**DCL-ENT  8088--CALL
FTI$REWINDDEV
      7748**DCL-ENT  8300--CALL
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:87   
FTI$SPFILE
      7749**DCL-ENT  7969--CALL     7992--CALL     8049--CALL     8055--CALL     8060--CALL     8071--CALL
      8074--CALL
FTI$WRFM
      7750**DCL-ENT  7988--CALL     7990--CALL     8041--CALL     8086--CALL
FTI$WRFMDEV
      7751**DCL-ENT  8298--CALL
FTL$CLOSE
      7755**DCL-ENT  7946--CALL
FTL$GETFSN
      7756**DCL-ENT  8064--CALL
FTL$PBSN
      7757**DCL-ENT  8052--CALL
FTR$DPT
      7758**DCL-ENT  7945--CALL
FTR$JRNLDCB
      7752**DCL-ENT  7869--CALL
FTR$RELCFUS
      7753**DCL-ENT  8156--CALL
FTR$RELFPOOLS
      7754**DCL-ENT  8155--CALL
FTW$TRNCHLD
      7759**DCL-ENT  7976--CALL
HFF$DSIZ
      7760**DCL-ENT  7953--CALL     8140--CALL
I
      7790**DCL      7894<<ASSIGN   7895>>IF       7900>>ASSIGN   7906<<ASSIGN   7907>>IF       7907>>IF
      7907>>IF       8206<<ASSIGN   8211>>ASSIGN   8212<<ASSIGN   8212>>ASSIGN
J
      7791**DCL      8226<<ASSIGN   8227>>IF       8229>>ASSIGN
JDCB$
      7792**DCL      6870--IMP-PTR  7860<<ASSIGN   7861>>IF       7863>>IF       7877>>IF       7879>>IF
      7880>>ASSIGN   7880>>ASSIGN   7881>>IF       7882>>IF       7883>>ASSIGN   7883>>ASSIGN   7884>>ASSIGN
      7884>>ASSIGN   7894>>ASSIGN   7921>>IF       7940>>IF       7948>>ASSIGN   7949>>ASSIGN   7952>>IF
      7958>>IF       7958>>IF       7968>>ASSIGN   7974>>IF       7976>>IF       7988>>IF       7991>>ASSIGN
      8028>>IF       8036>>IF       8037>>IF       8042>>ASSIGN   8046>>ASSIGN   8048>>ASSIGN   8053>>ASSIGN
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:88   
      8054>>ASSIGN   8059>>ASSIGN   8068>>ASSIGN   8070>>ASSIGN   8072>>IF       8073>>ASSIGN   8108>>IF
      8111>>IF       8112>>ASSIGN   8151>>IF       8151>>IF       8152>>IF       8153>>IF       8153>>IF
      8154>>CALL     8193>>ASSIGN   8197>>ASSIGN
JUSTRET
      8297**LABEL    8288--CALLALT  8293--CALLALT  8298--CALLALT  8300--CALLALT
N$DCT$$
      7640**DCL      7640--IMP-PTR  7900>>ASSIGN   7948>>ASSIGN   8053>>ASSIGN   8289>>ASSIGN   8292>>IF
NK$LDCT.DDT$
      7602**DCL      7602--REDEF    7900>>ASSIGN   7948>>ASSIGN   8053>>ASSIGN   8289>>ASSIGN
NK$LDCT.IOQ$
      7601**DCL      7602--REDEF
NK$LDCT.LDCTX
      7603**DCL      7603--REDEF
NK$LDCT.LKFLG.ABORTED
      7615**DCL      7616--REDEF
NK$LDCT.RAT$
      7603**DCL      8292>>IF
NK$LDCT.RLCID.LDCTX
      7625**DCL      7625--REDEF
NK$LDCT.STA$
      7621**DCL      7622--REDEF
NK$LDCT.SYMB$
      7600**DCL      7600--REDEF    7600--REDEF    7601--REDEF
NK$LDCT$
      7640**DCL      7900>>ASSIGN   7948>>ASSIGN   8053>>ASSIGN   8289>>ASSIGN   8292>>IF
NOUTL
      7955**LABEL    7953--CALLALT
PN$
      7774**DCL         9--PROC
PN$.SN_
      7774**DCL      7774--REDEF    8140--CALL     8142>>ASSIGN
PN$.UTL_
      7774**DCL      7774--REDEF    7925--ASSIGN   7926>>ASSIGN   7953--CALL     7954>>ASSIGN
PN$.V_
      7774**DCL      7904>>IF       7906>>ASSIGN   7925--ASSIGN   7934>>IF       7935>>IF       7938>>ASSIGN
      7940>>IF       7940>>IF       7953--CALL     7964>>IF       7965>>IF       7980>>IF       7982>>IF
PL6.E3A0      #001=FTC$CLOSE File=FTC$CLOSE.:E05TSI                              TUE 07/29/97 17:39 Page:89   
      8025>>IF       8027>>ASSIGN   8028>>IF       8140--CALL
POS
      7793**DCL      7932<<ASSIGN   7938<<ASSIGN   7946<>CALL     8027<<ASSIGN   8028>>IF       8030<<ASSIGN
      8033>>DOCASE   8093<>CALL
POS IN PROCEDURE FTC_CLOSEUP
      8130**DCL      8119--PROC     8162--IF       8163>>DOCASE
REMW
      8274**LABEL    8266--GOTO
SN$
      7794**DCL      8142<<ASSIGN   8190>>IF       8191>>ASSIGN   8191>>ASSIGN   8196>>ASSIGN   8197>>ASSIGN
      8211>>ASSIGN   8221>>ASSIGN   8236>>ASSIGN
TEMP
      7795**DCL      7925<<ASSIGN   7928<<ASSIGN   7946<>CALL     7953<>CALL     7955>>IF       7959<<ASSIGN
      7963<<ASSIGN   7966<<ASSIGN   7967>>IF       7977<<ASSIGN   7981<<ASSIGN   7983<<ASSIGN   7984<<ASSIGN
      7986>>IF       8209<<ASSIGN   8210>>DOWHILE  8211>>ASSIGN   8213<<ASSIGN   8213>>ASSIGN   8217>>IF
TEMP$
      7796**DCL      7926<<ASSIGN   7929<<ASSIGN   7946<>CALL     7954<<ASSIGN   7955>>IF       7956>>ASSIGN
TOTLEFT
      7798**DCL      8207<<ASSIGN   8214<<ASSIGN   8214>>ASSIGN   8215>>IF       8236>>ASSIGN
VLP$SN_V.NUM
      6816**DCL      7956<<ASSIGN   8191--ASSIGN   8196<<ASSIGN   8221<<ASSIGN   8236<<ASSIGN
VLP$SN_V.SN
      6816**DCL      8191--ASSIGN   8197<<ASSIGN   8211<<ASSIGN
