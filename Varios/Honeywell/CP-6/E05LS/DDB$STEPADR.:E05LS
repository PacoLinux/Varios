VERSION E05

PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:1    
        1        1        /*M* DDB$STEPADR - COMPUTE RET AND ALTRET LOCATIONS FOR CALLS TO SHARED LIBRARIES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCC,DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DDB$STEPADR.
        9        9             PURPOSE: TO DETERMINE THE RET AND ALTRET POINTS FOR CALLS
       10       10                  TO SHARED LIBRARY ROUTINES. */
       11       11        /*D* NAME: DDB$STEPADR.
       12       12             DESCRIPTION: IF NOT XDELTA, AND THE Y FIELD OF THE INSTRUCTION
       13       13                  AT IC IS >= %LIBLO (LOW BOUND FOR SHARED LIBRARIES), AND A SHARED
       14       14                  LIBRARY IS ASSOCIATED, AND THE INSTRUCTION
       15       15                  AT IC IS PART OF A KNOWN CALLING SEQUENCE,
       16       16                  DDB$STEPADR WILL DETERMINE THE RET AND ALTRET POINTS.
       17       17                  OTHERWISE, IF XDELTA OR THE CALL IS NOT TO A SHARED ROUTINE,
       18       18                  DDB$STEPADR RETURNS WITH THE Y FIELD AS RETIC.
       19       19                  IF THE CALL IS TO A SHARED ROUTINE, BUT IS OF
       20       20                  UNKNOWN TYPE, DDB$STEPADR ALTRETS.
       21       21                  IF USER DELTA, AND THE DOIT FLAG IS SET, THE CALL IS TREATED
       22       22                  AS IF IT WERE A CALL TO SHARED CODE, EVEN IF ITS NOT.  THIS
       23       23                  IS USED BY THE STEP ONECALL COMMAND.
       24       24
       25       25                  THIS ROUTINE SHOULD ONLY BE CALLED WHEN IC
       26       26                  POINTS TO AN UNCONDITIONAL TRANSFER.
       27       27                                      */
       28       28        DDB$STEPADR: PROC(DOIT, IC, RETIC, ALT_SET, ALTIC) ALTRET;
       29       29                                                /**/
       30       30    1   DCL DOIT BIT(1) ALIGNED;
       31       31    1   DCL IC UBIN;
       32       32    1   DCL IC$ PTR;
       33       33    1   DCL RETIC UBIN;
       34       34    1   DCL RETICB REDEF RETIC BIT(36);
       35       35    1   DCL ARGS UBIN;
       36       36    1   DCL ALT_SET BIT(1) ALIGNED;
       37       37    1   DCL ALTIC UBIN;
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:2    
       38       38    1   DCL TEMPIC$ PTR;
       39       39    1   DCL UBIN36 UBIN(36) BASED;
       40       40    1   DCL X1 UBIN;
       41       41    1   DCL ST# UBIN;
       42       42    1   DCL SST# UBIN;
       43       43    1   DCL SST UBIN;
       44       44    1   DCL ST$ PTR;
       45       45    1   DCL ENTRY$ PTR;
       46       46        %INCLUDE DD_ERR_C;
       47      443        %INCLUDE DD_SUBS_C;
       48      714        %INCLUDE XUH_MACRO_C;
       49      798        %INCLUDE DD_SD_M;
       50     2134        %S_D;
       51     3452        %INCLUDE DD$BASED;
       52     4755        %HOST_INSTR(NAME=INSTR);
       53     4777        %AUTO$BASE;
       54     4787        %AUTO$FRAME;
       55     4798        %INCLUDE M_INFO_C;
       56     4938        %INCLUDE B$JIT;
       57     5228        %INCLUDE B$SS;
       58     5407        %INCLUDE B$OBJECT_C;
       59     8837        %B$EDEF;
       60     8907        %B$EXST;
       61     9014        %SUB_CST;
       62     9030        %B$STTYPESUBS;
       63     9099    1   DCL B$JIT$ PTR SYMREF;
       64     9100    1   DCL UIS$ PTR SYMREF;
       65     9101    1   DCL UDR2$ PTR SYMREF;
       66     9102    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;
       67     9103    1   DCL DDB$TEFFADD ENTRY(2) ALTRET;
       68     9104    1   DCL DDE$ERROR ENTRY;
       69     9105    1   DCL DDF$STATEMENT ENTRY(4) ALTRET;
       70     9106    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       71     9107    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
       72     9108                                                /**/
       73     9109                                                /* Establish a tentative return point */
       74     9110    1        ALT_SET = '0'B;
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:3    
       75     9111    1        IC$ = PINCRW(UIS$, IC);
       76     9112    1        CALL DDB$TEFFADD(IC$, RETIC) ALTRET(DELBUG);
       77     9113    1        IF NOT D_XDELTA
       78     9114    1        THEN IF S_D.ISBASE ~= 0
       79     9115    2             THEN DO;
       80     9116    2                  RETIC = RETIC + S_D.ISBASE;
       81     9117    2                  RETURN;
       82     9118    2                END;
       83     9119    1             ELSE IF NOT DOIT AND ((RETIC < %LIBLO*1024 - %ISEGLO*1024 OR B$JIT.TDP > %
              9119                      LIBLO)
       84     9120    1                    OR (B$JIT.PCL > 0 AND RETIC >= %LIBLO*1024 - %ISEGLO*1024))
       85     9121    1                  THEN RETURN;        /* If this isn't in shared code, and the doit
       86     9122                                           flag is reset, then retic is good enuff */
       87     9123    1                  ELSE ;
       88     9124    1        ELSE IF NOT DOIT
       89     9125    1             THEN RETURN;
       90     9126
       91     9127    2        IF S_D.S$TEP.ONE_FLAG THEN DO;     /* If we're at [proc], step proc */
       92     9128    2             CALL DDF$STATEMENT (IC, ST#, SST#, SST) ALTRET (CONT);
       93     9129    2             IF SST=0
       94     9130    2             THEN CALL DDF$EXST_# (ST#, ST$) ALTRET (CONT);
       95     9131    2             ELSE CALL DDF$EXST_# (SST#,ST$) ALTRET (CONT);
       96     9132    2             IF ST$->B$EXST.STTYPE~=%S@PROC AND ST$->B$EXST.STTYPE~=%S@ENTRY THEN GOTO
              9132                      CONT;
       97     9133    2             CALL DDF$FIND_PEDEF (IC, ENTRY$) ALTRET (CONT);
       98     9134    2             IF ENTRY$->B$EDEF.CST ~= %STD# AND
       99     9135    2               ENTRY$->B$EDEF.CST ~= %XSTD# AND
      100     9136    2               ENTRY$->B$EDEF.CST ~= %FUNC# AND
      101     9137    2               ENTRY$->B$EDEF.CST ~= %XFUNC# THEN GOTO CONT;
      102     9138    2             X1 = S_D.USS$ -> B$SS.X1 - 1;
      103     9139    2             REMEMBER BAD_RET_ADDR IN S_D.REM_ACCESS;
      104     9140    2             S_D.ACCESS = '1'B;
      105     9141    2             IF PINCRW(UIS$, X1)->INSTR.OP = T_TSX1
      106     9142    3             THEN DO;
      107     9143                            /* Now make a recursive call to stepadr to get brkpnts */
      108     9144    3                  S_D.ACCESS = '0'B;
      109     9145    3                  CALL DDB$STEPADR('1'B, X1, RETIC, ALT_SET, ALTIC) ALTRET (CONT);
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:4    
      110     9146    3                  RETURN;
      111     9147    3                END;
      112     9148    2   BAD_RET_ADDR:
      113     9149    2             S_D.ERROR = E@BAD_SOC_RET;
      114     9150    2             CALL DDE$ERROR;
      115     9151    2             S_D.ACCESS = '0'B;
      116     9152    2           END;
      117     9153
      118     9154    1   CONT:
      119     9155                                                /* Retic is in shared code */
      120     9156    1        IF IC$->INSTR.OP = T_TSX0 OR IC$->INSTR.OP = T_TSX3
      121     9157    1        THEN RETIC = IC+2;
      122     9158    1        ELSE IF IC$->INSTR.OP = T_TSX1
      123     9159    2             THEN DO;
      124     9160    2                  S_D.S$TEP.DOING_SOC = '1'B; /* Do this only once */
      125     9161    2                  TEMPIC$ = PINCRW(IC$, 1);
      126     9162        /*             If TEMPIC$->INSTR.OP = T_TRA and TEMPIC$->INSTR.TAGG >= 8
      127     9163                         and TEMPIC$->INSTR.TAGG <= 15
      128     9164                       then retic = IC+2;
      129     9165                       else do;             */
      130     9166        /* Above commented out for star #11529 - seems like index modified
      131     9167           tra isn't something special */
      132     9168    2                  ALT_SET = '1'B;
      133     9169    2                  ALTIC = IC+1;
      134     9170    2                  TEMPIC$ = PINCRW(IC$, 2);
      135     9171    2                  IF TEMPIC$->INSTR.OP = T_TRA AND TEMPIC$->INSTR.TAGG=4
      136     9172    2                  THEN RETIC=IC+2+TEMPIC$->INSTR.Y;
      137     9173    2                  ELSE RETIC = IC+2;
      138     9174        /*                End; */
      139     9175    2                  RETICB = RETICB & '000000777777'O;
      140     9176    2                END;
      141     9177    1             ELSE IF IC$->INSTR.OP = T_TSX2 OR IC$->INSTR.OP = T_TRA
      142     9178    2                  THEN DO;                 /* Get return address from auto stack */
      143     9179    2                       REMEMBER BAD_STACK IN S_D.REM_ACCESS;
      144     9180    2                       S_D.ACCESS = '1'B;
      145     9181    2                       TEMPIC$ = PINCRW(UDR2$, -(UDR2$->AUTO$BASE.
              9181                                NEG_CURR_FRAME_OFFSET_MINUS_1+1));
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:5    
      146     9182    2                       ALTIC = TEMPIC$->AUTO$FRAME.RETURN_ADDRESS;
      147     9183    2                       ALT_SET = '1'B;
      148     9184    2                       RETIC = TEMPIC$->AUTO$FRAME.RETURN_ADDRESS + 1;
      149     9185    2                       S_D.ACCESS = '0'B;
      150     9186    2                     END;
      151     9187    2                  ELSE DO;
      152     9188    2                       S_D.ERROR = E@BAD_SHARED_CALL; /* E@BAD_SHARED_CALL */
      153     9189    2                       GOTO ERR_RETURN;
      154     9190    2                     END;
      155     9191    1        RETURN;
      156     9192    1   ERR_RETURN:
      157     9193    1        CALL DDE$ERROR;
      158     9194    1   DELBUG:
      159     9195    1        ALTRETURN;
      160     9196    1   BAD_STACK:
      161     9197    1        S_D.ERROR = E@BADSHARESTACK;       /*E@BADSHARESTACK*/
      162     9198    1        GOTO ERR_RETURN;
      163     9199    1   END DDB$STEPADR;

PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:6    
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$STEPADR.

   Procedure DDB$STEPADR requires 249 words for executable code.
   Procedure DDB$STEPADR requires 24 words of local(AUTO) storage.

    No errors detected in file DDB$STEPADR.:E05TSI    .

PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:7    

 Object Unit name= DDB$STEPADR                                File name= DDB$STEPADR.:E05TOU
 UTS= JUL 29 '97 13:48:03.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  DDB$STEPADR
    1   Proc  even  none   249    371  DDB$STEPADR
    2  RoData even  none     1      1  DDB$STEPADR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        5  DDB$STEPADR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDB$TEFFADD
 yes     yes           Std       4 DDF$STATEMENT
 yes     yes           Std       2 DDF$EXST_#
 yes     yes           Std       2 DDF$FIND_PEDEF
         yes           Std       0 DDE$ERROR
                       nStd      0 X66_AUTO_5
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B$JIT$                                UIS$
     UDR2$                                 D_XDELTA                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:9    


        1        1       /*M* DDB$STEPADR - COMPUTE RET AND ALTRET LOCATIONS FOR CALLS TO SHARED LIBRARIES */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCC,DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DDB$STEPADR.
        9        9             PURPOSE: TO DETERMINE THE RET AND ALTRET POINTS FOR CALLS
       10       10                  TO SHARED LIBRARY ROUTINES. */
       11       11        /*D* NAME: DDB$STEPADR.
       12       12             DESCRIPTION: IF NOT XDELTA, AND THE Y FIELD OF THE INSTRUCTION
       13       13                  AT IC IS >= %LIBLO (LOW BOUND FOR SHARED LIBRARIES), AND A SHARED
       14       14                  LIBRARY IS ASSOCIATED, AND THE INSTRUCTION
       15       15                  AT IC IS PART OF A KNOWN CALLING SEQUENCE,
       16       16                  DDB$STEPADR WILL DETERMINE THE RET AND ALTRET POINTS.
       17       17                  OTHERWISE, IF XDELTA OR THE CALL IS NOT TO A SHARED ROUTINE,
       18       18                  DDB$STEPADR RETURNS WITH THE Y FIELD AS RETIC.
       19       19                  IF THE CALL IS TO A SHARED ROUTINE, BUT IS OF
       20       20                  UNKNOWN TYPE, DDB$STEPADR ALTRETS.
       21       21                  IF USER DELTA, AND THE DOIT FLAG IS SET, THE CALL IS TREATED
       22       22                  AS IF IT WERE A CALL TO SHARED CODE, EVEN IF ITS NOT.  THIS
       23       23                  IS USED BY THE STEP ONECALL COMMAND.
       24       24
       25       25                  THIS ROUTINE SHOULD ONLY BE CALLED WHEN IC
       26       26                  POINTS TO AN UNCONDITIONAL TRANSFER.
       27       27                                      */
       28       28        DDB$STEPADR: PROC(DOIT, IC, RETIC, ALT_SET, ALTIC) ALTRET;

     28  1 000000   000000 700200 xent  DDB$STEPADR  TSX0  ! X66_AUTO_5
         1 000001   000030 000005                    ZERO    24,5

       29       29                                                /**/
       30       30    1   DCL DOIT BIT(1) ALIGNED;
       31       31    1   DCL IC UBIN;
       32       32    1   DCL IC$ PTR;
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:10   
       33       33    1   DCL RETIC UBIN;
       34       34    1   DCL RETICB REDEF RETIC BIT(36);
       35       35    1   DCL ARGS UBIN;
       36       36    1   DCL ALT_SET BIT(1) ALIGNED;
       37       37    1   DCL ALTIC UBIN;
       38       38    1   DCL TEMPIC$ PTR;
       39       39    1   DCL UBIN36 UBIN(36) BASED;
       40       40    1   DCL X1 UBIN;
       41       41    1   DCL ST# UBIN;
       42       42    1   DCL SST# UBIN;
       43       43    1   DCL SST UBIN;
       44       44    1   DCL ST$ PTR;
       45       45    1   DCL ENTRY$ PTR;
       46       46        %INCLUDE DD_ERR_C;
       47      443        %INCLUDE DD_SUBS_C;
       48      714        %INCLUDE XUH_MACRO_C;
       49      798        %INCLUDE DD_SD_M;
       50     2134        %S_D;
       51     3452        %INCLUDE DD$BASED;
       52     4755        %HOST_INSTR(NAME=INSTR);
       53     4777        %AUTO$BASE;
       54     4787        %AUTO$FRAME;
       55     4798        %INCLUDE M_INFO_C;
       56     4938        %INCLUDE B$JIT;
       57     5228        %INCLUDE B$SS;
       58     5407        %INCLUDE B$OBJECT_C;
       59     8837        %B$EDEF;
       60     8907        %B$EXST;
       61     9014        %SUB_CST;
       62     9030        %B$STTYPESUBS;
       63     9099    1   DCL B$JIT$ PTR SYMREF;
       64     9100    1   DCL UIS$ PTR SYMREF;
       65     9101    1   DCL UDR2$ PTR SYMREF;
       66     9102    1   DCL D_XDELTA BIT(1) ALIGNED SYMREF;
       67     9103    1   DCL DDB$TEFFADD ENTRY(2) ALTRET;
       68     9104    1   DCL DDE$ERROR ENTRY;
       69     9105    1   DCL DDF$STATEMENT ENTRY(4) ALTRET;
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:11   
       70     9106    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       71     9107    1   DCL DDF$FIND_PEDEF ENTRY(2) ALTRET;
       72     9108                                                /**/
       73     9109                                                /* Establish a tentative return point */
       74     9110    1        ALT_SET = '0'B;

   9110  1 000002   200006 470500                    LDP0    @ALT_SET,,AUTO
         1 000003   000000 450100                    STZ     0,,PR0

       75     9111    1        IC$ = PINCRW(UIS$, IC);

   9111  1 000004   200004 471500                    LDP1    @IC,,AUTO
         1 000005   100000 720100                    LXL0    0,,PR1
         1 000006   000000 636010                    EAQ     0,X0
         1 000007   000000 036000 xsym               ADLQ    UIS$
         1 000010   200010 756100                    STQ     IC$,,AUTO

       76     9112    1        CALL DDB$TEFFADD(IC$, RETIC) ALTRET(DELBUG);

   9112  1 000011   200005 236100                    LDQ     @RETIC,,AUTO
         1 000012   200023 756100                    STQ     ENTRY$+3,,AUTO
         1 000013   200010 633500                    EPPR3   IC$,,AUTO
         1 000014   200022 453500                    STP3    ENTRY$+2,,AUTO
         1 000015   200022 630500                    EPPR0   ENTRY$+2,,AUTO
         1 000016   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000017   000000 701000 xent               TSX1    DDB$TEFFADD
         1 000020   000364 702000 1                  TSX2    DELBUG

       77     9113    1        IF NOT D_XDELTA

   9113  1 000021   000000 234000 xsym               SZN     D_XDELTA
         1 000022   000053 604000 1                  TMI     s:9124

       78     9114    1        THEN IF S_D.ISBASE ~= 0

   9114  1 000023   000000 470400 xsym               LDP0    S_D$
         1 000024   000720 235100                    LDA     464,,PR0
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:12   
         1 000025   000033 600000 1                  TZE     s:9119

       79     9115    2             THEN DO;

       80     9116    2                  RETIC = RETIC + S_D.ISBASE;

   9116  1 000026   200005 471500                    LDP1    @RETIC,,AUTO
         1 000027   100000 236100                    LDQ     0,,PR1
         1 000030   000720 036100                    ADLQ    464,,PR0
         1 000031   100000 756100                    STQ     0,,PR1

       81     9117    2                  RETURN;

   9117  1 000032   000000 702200 xent               TSX2  ! X66_ARET

       82     9118    2                END;
       83     9119    1            ELSE IF NOT DOIT AND ((RETIC < %LIBLO*1024 - %ISEGLO*1024 OR B$JIT.TDP > %
              9119                      LIBLO)

   9119  1 000033   200003 471500                    LDP1    @DOIT,,AUTO
         1 000034   100000 234100                    SZN     0,,PR1
         1 000035   000057 604000 1                  TMI     s:9127
         1 000036   200005 473500                    LDP3    @RETIC,,AUTO
         1 000037   300000 235100                    LDA     0,,PR3
         1 000040   700000 115007                    CMPA    -32768,DL
         1 000041   000052 602000 1                  TNC     s:9121
         1 000042   000000 474400 xsym               LDP4    B$JIT$
         1 000043   400204 220100                    LDX0    132,,PR4
         1 000044   000441 100003                    CMPX0   289,DU
         1 000045   000052 603000 1                  TRC     s:9121
         1 000046   400215 721100                    LXL1    141,,PR4
         1 000047   000057 600000 1                  TZE     s:9127
         1 000050   700000 115007                    CMPA    -32768,DL
         1 000051   000057 602000 1                  TNC     s:9127

       84     9120    1                    OR (B$JIT.PCL > 0 AND RETIC >= %LIBLO*1024 - %ISEGLO*1024))
       85     9121    1                  THEN RETURN;        /* If this isn't in shared code, and the doit
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:13   

   9121  1 000052   000000 702200 xent               TSX2  ! X66_ARET

       86     9122                                           flag is reset, then retic is good enuff */
       87     9123    1                  ELSE ;
       88     9124    1        ELSE IF NOT DOIT

   9124  1 000053   200003 470500                    LDP0    @DOIT,,AUTO
         1 000054   000000 234100                    SZN     0,,PR0
         1 000055   000057 604000 1                  TMI     s:9127

       89     9125    1             THEN RETURN;

   9125  1 000056   000000 702200 xent               TSX2  ! X66_ARET

       90     9126
       91     9127    2        IF S_D.S$TEP.ONE_FLAG THEN DO;     /* If we're at [proc], step proc */

   9127  1 000057   000000 470400 xsym               LDP0    S_D$
         1 000060   005277 236100                    LDQ     2751,,PR0
         1 000061   200000 316003                    CANQ    65536,DU
         1 000062   000225 600000 1                  TZE     CONT

       92     9128    2             CALL DDF$STATEMENT (IC, ST#, SST#, SST) ALTRET (CONT);

   9128  1 000063   200016 631500                    EPPR1   SST,,AUTO
         1 000064   200025 451500                    STP1    ENTRY$+5,,AUTO
         1 000065   200015 633500                    EPPR3   SST#,,AUTO
         1 000066   200024 453500                    STP3    ENTRY$+4,,AUTO
         1 000067   200014 634500                    EPPR4   ST#,,AUTO
         1 000070   200023 454500                    STP4    ENTRY$+3,,AUTO
         1 000071   200004 236100                    LDQ     @IC,,AUTO
         1 000072   200022 756100                    STQ     ENTRY$+2,,AUTO
         1 000073   200022 630500                    EPPR0   ENTRY$+2,,AUTO
         1 000074   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000075   000000 701000 xent               TSX1    DDF$STATEMENT
         1 000076   000225 702000 1                  TSX2    CONT
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:14   

       93     9129    2             IF SST=0

   9129  1 000077   200016 235100                    LDA     SST,,AUTO
         1 000100   000112 601000 1                  TNZ     s:9131

       94     9130    2             THEN CALL DDF$EXST_# (ST#, ST$) ALTRET (CONT);

   9130  1 000101   200017 630500                    EPPR0   ST$,,AUTO
         1 000102   200023 450500                    STP0    ENTRY$+3,,AUTO
         1 000103   200014 631500                    EPPR1   ST#,,AUTO
         1 000104   200022 451500                    STP1    ENTRY$+2,,AUTO
         1 000105   200022 630500                    EPPR0   ENTRY$+2,,AUTO
         1 000106   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000107   000000 701000 xent               TSX1    DDF$EXST_#
         1 000110   000225 702000 1                  TSX2    CONT
         1 000111   000122 710000 1                  TRA     s:9132

       95     9131    2             ELSE CALL DDF$EXST_# (SST#,ST$) ALTRET (CONT);

   9131  1 000112   200017 630500                    EPPR0   ST$,,AUTO
         1 000113   200023 450500                    STP0    ENTRY$+3,,AUTO
         1 000114   200015 631500                    EPPR1   SST#,,AUTO
         1 000115   200022 451500                    STP1    ENTRY$+2,,AUTO
         1 000116   200022 630500                    EPPR0   ENTRY$+2,,AUTO
         1 000117   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000120   000000 701000 xent               TSX1    DDF$EXST_#
         1 000121   000225 702000 1                  TSX2    CONT

       96     9132    2             IF ST$->B$EXST.STTYPE~=%S@PROC AND ST$->B$EXST.STTYPE~=%S@ENTRY THEN GOTO
              9132                      CONT;

   9132  1 000122   200017 470500                    LDP0    ST$,,AUTO
         1 000123   000002 236100                    LDQ     2,,PR0
         1 000124   000177 376003                    ANQ     127,DU
         1 000125   000145 116003                    CMPQ    101,DU
         1 000126   000131 600000 1                  TZE     s:9133
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:15   
         1 000127   000147 116003                    CMPQ    103,DU
         1 000130   000225 601000 1                  TNZ     CONT

       97     9133    2             CALL DDF$FIND_PEDEF (IC, ENTRY$) ALTRET (CONT);

   9133  1 000131   200020 631500                    EPPR1   ENTRY$,,AUTO
         1 000132   200023 451500                    STP1    ENTRY$+3,,AUTO
         1 000133   200004 236100                    LDQ     @IC,,AUTO
         1 000134   200022 756100                    STQ     ENTRY$+2,,AUTO
         1 000135   200022 630500                    EPPR0   ENTRY$+2,,AUTO
         1 000136   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000137   000000 701000 xent               TSX1    DDF$FIND_PEDEF
         1 000140   000225 702000 1                  TSX2    CONT

       98     9134    2             IF ENTRY$->B$EDEF.CST ~= %STD# AND

   9134  1 000141   200020 470500                    LDP0    ENTRY$,,AUTO
         1 000142   000001 236100                    LDQ     1,,PR0
         1 000143   074000 316007                    CANQ    30720,DL
         1 000144   000155 600000 1                  TZE     s:9138
         1 000145   000001 236100                    LDQ     1,,PR0
         1 000146   074000 376007                    ANQ     30720,DL
         1 000147   024000 116007                    CMPQ    10240,DL
         1 000150   000155 600000 1                  TZE     s:9138
         1 000151   020000 116007                    CMPQ    8192,DL
         1 000152   000155 600000 1                  TZE     s:9138
         1 000153   044000 116007                    CMPQ    18432,DL
         1 000154   000225 601000 1                  TNZ     CONT

       99     9135    2               ENTRY$->B$EDEF.CST ~= %XSTD# AND
      100     9136    2               ENTRY$->B$EDEF.CST ~= %FUNC# AND
      101     9137    2               ENTRY$->B$EDEF.CST ~= %XFUNC# THEN GOTO CONT;
      102     9138    2             X1 = S_D.USS$ -> B$SS.X1 - 1;

   9138  1 000155   000000 471400 xsym               LDP1    S_D$
         1 000156   100005 473500                    LDP3    5,,PR1
         1 000157   300050 236100                    LDQ     40,,PR3
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:16   
         1 000160   777777 376007                    ANQ     -1,DL
         1 000161   000001 136007                    SBLQ    1,DL
         1 000162   200013 756100                    STQ     X1,,AUTO

      103     9139    2             REMEMBER BAD_RET_ADDR IN S_D.REM_ACCESS;

   9139  1 000163   000215 635000 1                  EAA     BAD_RET_ADDR
         1 000164   100024 452500                    STP2    20,,PR1
         1 000165   100025 755100                    STA     21,,PR1

      104     9140    2             S_D.ACCESS = '1'B;

   9140  1 000166   400000 236003                    LDQ     -131072,DU
         1 000167   100016 756100                    STQ     14,,PR1

      105     9141    2             IF PINCRW(UIS$, X1)->INSTR.OP = T_TSX1

   9141  1 000170   000000 470400 xsym               LDP0    UIS$
         1 000171   200013 720100                    LXL0    X1,,AUTO
         1 000172   000000 236110                    LDQ     0,X0,PR0
         1 000173   777400 376007                    ANQ     -256,DL
         1 000174   701000 116007                    CMPQ    -32256,DL
         1 000175   000215 601000 1                  TNZ     BAD_RET_ADDR

      106     9142    3             THEN DO;

      107     9143                            /* Now make a recursive call to stepadr to get brkpnts */
      108     9144    3                  S_D.ACCESS = '0'B;

   9144  1 000176   100016 450100                    STZ     14,,PR1

      109     9145    3                  CALL DDB$STEPADR('1'B, X1, RETIC, ALT_SET, ALTIC) ALTRET (CONT);

   9145  1 000177   200007 236100                    LDQ     @ALTIC,,AUTO
         1 000200   200026 756100                    STQ     ENTRY$+6,,AUTO
         1 000201   200006 236100                    LDQ     @ALT_SET,,AUTO
         1 000202   200005 235100                    LDA     @RETIC,,AUTO
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:17   
         1 000203   200024 757100                    STAQ    ENTRY$+4,,AUTO
         1 000204   200013 633500                    EPPR3   X1,,AUTO
         1 000205   200023 453500                    STP3    ENTRY$+3,,AUTO
         1 000206   000000 236000 2                  LDQ     0
         1 000207   200022 756100                    STQ     ENTRY$+2,,AUTO
         1 000210   200022 630500                    EPPR0   ENTRY$+2,,AUTO
         1 000211   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000212   000000 701000 1                  TSX1    s:28
         1 000213   000225 702000 1                  TSX2    CONT

      110     9146    3                  RETURN;

   9146  1 000214   000000 702200 xent               TSX2  ! X66_ARET

      111     9147    3                END;
      112     9148    2   BAD_RET_ADDR:
      113     9149    2             S_D.ERROR = E@BAD_SOC_RET;

   9149  1 000215   001144 235007       BAD_RET_ADDR LDA     612,DL
         1 000216   000000 470400 xsym               LDP0    S_D$
         1 000217   000013 755100                    STA     11,,PR0

      114     9150    2             CALL DDE$ERROR;

   9150  1 000220   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000221   000000 701000 xent               TSX1    DDE$ERROR
         1 000222   000000 011000                    NOP     0

      115     9151    2             S_D.ACCESS = '0'B;

   9151  1 000223   000000 470400 xsym               LDP0    S_D$
         1 000224   000016 450100                    STZ     14,,PR0

      116     9152    2           END;

      117     9153
      118     9154    1   CONT:
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:18   
      119     9155                                                /* Retic is in shared code */
      120     9156    1        IF IC$->INSTR.OP = T_TSX0 OR IC$->INSTR.OP = T_TSX3

   9156  1 000225   200010 470500       CONT         LDP0    IC$,,AUTO
         1 000226   000000 236100                    LDQ     0,,PR0
         1 000227   777400 376007                    ANQ     -256,DL
         1 000230   700000 116007                    CMPQ    -32768,DL
         1 000231   000234 600000 1                  TZE     s:9157
         1 000232   703000 116007                    CMPQ    -31232,DL
         1 000233   000242 601000 1                  TNZ     s:9158

      121     9157    1        THEN RETIC = IC+2;

   9157  1 000234   200004 471500                    LDP1    @IC,,AUTO
         1 000235   200005 473500                    LDP3    @RETIC,,AUTO
         1 000236   100000 235100                    LDA     0,,PR1
         1 000237   000002 035007                    ADLA    2,DL
         1 000240   300000 755100                    STA     0,,PR3
         1 000241   000360 710000 1                  TRA     s:9191

      122     9158    1        ELSE IF IC$->INSTR.OP = T_TSX1

   9158  1 000242   701000 116007                    CMPQ    -32256,DL
         1 000243   000315 601000 1                  TNZ     s:9177

      123     9159    2             THEN DO;

      124     9160    2                  S_D.S$TEP.DOING_SOC = '1'B; /* Do this only once */

   9160  1 000244   000000 471400 xsym               LDP1    S_D$
         1 000245   100000 236003                    LDQ     32768,DU
         1 000246   105277 256100                    ORSQ    2751,,PR1

      125     9161    2                  TEMPIC$ = PINCRW(IC$, 1);

   9161  1 000247   200010 236100                    LDQ     IC$,,AUTO
         1 000250   000001 036003                    ADLQ    1,DU
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:19   
         1 000251   200012 756100                    STQ     TEMPIC$,,AUTO

      126     9162        /*             If TEMPIC$->INSTR.OP = T_TRA and TEMPIC$->INSTR.TAGG >= 8
      127     9163                         and TEMPIC$->INSTR.TAGG <= 15
      128     9164                       then retic = IC+2;
      129     9165                       else do;             */
      130     9166        /* Above commented out for star #11529 - seems like index modified
      131     9167           tra isn't something special */
      132     9168    2                  ALT_SET = '1'B;

   9168  1 000252   400000 236003                    LDQ     -131072,DU
         1 000253   200006 473500                    LDP3    @ALT_SET,,AUTO
         1 000254   300000 756100                    STQ     0,,PR3

      133     9169    2                  ALTIC = IC+1;

   9169  1 000255   200004 470500                    LDP0    @IC,,AUTO
         1 000256   200007 474500                    LDP4    @ALTIC,,AUTO
         1 000257   000000 235100                    LDA     0,,PR0
         1 000260   000001 035007                    ADLA    1,DL
         1 000261   400000 755100                    STA     0,,PR4

      134     9170    2                  TEMPIC$ = PINCRW(IC$, 2);

   9170  1 000262   200010 236100                    LDQ     IC$,,AUTO
         1 000263   000002 036003                    ADLQ    2,DU
         1 000264   200012 756100                    STQ     TEMPIC$,,AUTO

      135     9171    2                  IF TEMPIC$->INSTR.OP = T_TRA AND TEMPIC$->INSTR.TAGG=4

   9171  1 000265   200012 475500                    LDP5    TEMPIC$,,AUTO
         1 000266   500000 236100                    LDQ     0,,PR5
         1 000267   777400 376007                    ANQ     -256,DL
         1 000270   710000 116007                    CMPQ    -28672,DL
         1 000271   000305 601000 1                  TNZ     s:9173
         1 000272   500000 236100                    LDQ     0,,PR5
         1 000273   000077 376007                    ANQ     63,DL
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:20   
         1 000274   000004 116007                    CMPQ    4,DL
         1 000275   000305 601000 1                  TNZ     s:9173

      136     9172    2                  THEN RETIC=IC+2+TEMPIC$->INSTR.Y;

   9172  1 000276   500000 236100                    LDQ     0,,PR5
         1 000277   000022 772000                    QRL     18
         1 000300   000000 036100                    ADLQ    0,,PR0
         1 000301   000002 036007                    ADLQ    2,DL
         1 000302   200005 476500                    LDP6    @RETIC,,AUTO
         1 000303   600000 756100                    STQ     0,,PR6
         1 000304   000311 710000 1                  TRA     s:9175

      137     9173    2                  ELSE RETIC = IC+2;

   9173  1 000305   200005 476500                    LDP6    @RETIC,,AUTO
         1 000306   000000 235100                    LDA     0,,PR0
         1 000307   000002 035007                    ADLA    2,DL
         1 000310   600000 755100                    STA     0,,PR6

      138     9174        /*                End; */
      139     9175    2                  RETICB = RETICB & '000000777777'O;

   9175  1 000311   600000 236100                    LDQ     0,,PR6
         1 000312   000000 376000 0                  ANQ     0
         1 000313   600000 756100                    STQ     0,,PR6

      140     9176    2                END;

   9176  1 000314   000360 710000 1                  TRA     s:9191

      141     9177    1             ELSE IF IC$->INSTR.OP = T_TSX2 OR IC$->INSTR.OP = T_TRA

   9177  1 000315   702000 116007                    CMPQ    -31744,DL
         1 000316   000321 600000 1                  TZE     s:9179
         1 000317   710000 116007                    CMPQ    -28672,DL
         1 000320   000354 601000 1                  TNZ     s:9188
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:21   

      142     9178    2                  THEN DO;                 /* Get return address from auto stack */

      143     9179    2                       REMEMBER BAD_STACK IN S_D.REM_ACCESS;

   9179  1 000321   000365 635000 1                  EAA     BAD_STACK
         1 000322   000000 471400 xsym               LDP1    S_D$
         1 000323   100024 452500                    STP2    20,,PR1
         1 000324   100025 755100                    STA     21,,PR1

      144     9180    2                       S_D.ACCESS = '1'B;

   9180  1 000325   400000 236003                    LDQ     -131072,DU
         1 000326   100016 756100                    STQ     14,,PR1

      145     9181    2                       TEMPIC$ = PINCRW(UDR2$, -(UDR2$->AUTO$BASE.
              9181                                NEG_CURR_FRAME_OFFSET_MINUS_1+1));

   9181  1 000327   000000 473400 xsym               LDP3    UDR2$
         1 000330   300000 720100                    LXL0    0,,PR3
         1 000331   000000 636010                    EAQ     0,X0
         1 000332   777777 676003                    ERQ     -1,DU
         1 000333   000000 036000 xsym               ADLQ    UDR2$
         1 000334   200012 756100                    STQ     TEMPIC$,,AUTO

      146     9182    2                       ALTIC = TEMPIC$->AUTO$FRAME.RETURN_ADDRESS;

   9182  1 000335   200012 474500                    LDP4    TEMPIC$,,AUTO
         1 000336   400000 236100                    LDQ     0,,PR4
         1 000337   000022 772000                    QRL     18
         1 000340   200007 475500                    LDP5    @ALTIC,,AUTO
         1 000341   500000 756100                    STQ     0,,PR5

      147     9183    2                       ALT_SET = '1'B;

   9183  1 000342   400000 236003                    LDQ     -131072,DU
         1 000343   200006 470500                    LDP0    @ALT_SET,,AUTO
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:22   
         1 000344   000000 756100                    STQ     0,,PR0

      148     9184    2                       RETIC = TEMPIC$->AUTO$FRAME.RETURN_ADDRESS + 1;

   9184  1 000345   400000 236100                    LDQ     0,,PR4
         1 000346   000022 772000                    QRL     18
         1 000347   000001 036007                    ADLQ    1,DL
         1 000350   200005 473500                    LDP3    @RETIC,,AUTO
         1 000351   300000 756100                    STQ     0,,PR3

      149     9185    2                       S_D.ACCESS = '0'B;

   9185  1 000352   100016 450100                    STZ     14,,PR1

      150     9186    2                     END;

   9186  1 000353   000360 710000 1                  TRA     s:9191

      151     9187    2                  ELSE DO;

      152     9188    2                       S_D.ERROR = E@BAD_SHARED_CALL; /* E@BAD_SHARED_CALL */

   9188  1 000354   000252 235007                    LDA     170,DL
         1 000355   000000 471400 xsym               LDP1    S_D$
         1 000356   100013 755100                    STA     11,,PR1

      153     9189    2                       GOTO ERR_RETURN;

   9189  1 000357   000361 710000 1                  TRA     ERR_RETURN

      154     9190    2                     END;
      155     9191    1        RETURN;

   9191  1 000360   000000 702200 xent               TSX2  ! X66_ARET

      156     9192    1   ERR_RETURN:
      157     9193    1        CALL DDE$ERROR;
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:23   

   9193  1 000361   000002 631400 xsym  ERR_RETURN   EPPR1   B_VECTNIL+2
         1 000362   000000 701000 xent               TSX1    DDE$ERROR
         1 000363   000000 011000                    NOP     0

      158     9194    1   DELBUG:
      159     9195    1        ALTRETURN;

   9195  1 000364   000000 702200 xent  DELBUG       TSX2  ! X66_AALT

      160     9196    1   BAD_STACK:
      161     9197    1        S_D.ERROR = E@BADSHARESTACK;       /*E@BADSHARESTACK*/

   9197  1 000365   000337 235007       BAD_STACK    LDA     223,DL
         1 000366   000000 470400 xsym               LDP0    S_D$
         1 000367   000013 755100                    STA     11,,PR0

      162     9198    1        GOTO ERR_RETURN;

   9198  1 000370   000361 710000 1                  TRA     ERR_RETURN

(unnamed)
 Sect OctLoc
   0     000   000000 777777                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000030 006000                                                    ....
      163     9199    1   END DDB$STEPADR;

PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:24   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$STEPADR.

   Procedure DDB$STEPADR requires 249 words for executable code.
   Procedure DDB$STEPADR requires 24 words of local(AUTO) storage.

    No errors detected in file DDB$STEPADR.:E05TSI    .
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:26   
          MINI XREF LISTING

ALTIC
        37**DCL        28--PROC     9145<>CALL     9169<<ASSIGN   9182<<ASSIGN
ALT_SET
        36**DCL        28--PROC     9110<<ASSIGN   9145<>CALL     9168<<ASSIGN   9183<<ASSIGN
AUTO$BASE.NEG_CURR_FRAME_OFFSET_MINUS_1
      4780**DCL      9181>>ASSIGN
AUTO$FRAME.NEG_PREV_FRAME_OFFSET_MINUS_1
      4790**DCL      4791--REDEF
AUTO$FRAME.RETURN_ADDRESS
      4789**DCL      9182>>ASSIGN   9184>>ASSIGN
B$EDEF.CST
      8884**DCL      9134>>IF       9134>>IF       9134>>IF       9134>>IF
B$EDEF.OU
      8855**DCL      8861--REDEF
B$EXST.OU
      8917**DCL      8923--REDEF
B$EXST.STTYPE
      8941**DCL      9132>>IF       9132>>IF
B$JIT.CPFLAGS1.SLEAZE
      5046**DCL      5046--REDEF
B$JIT.ERR.MID
      4953**DCL      4953--REDEF
B$JIT.JRESPEAK
      5114**DCL      5115--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      5223**DCL      5223--REDEF    5224--REDEF
B$JIT.PCL
      5116**DCL      9119>>IF
B$JIT.PNR
      5127**DCL      5127--REDEF
B$JIT.TDP
      5112**DCL      9119>>IF
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:27   
B$JIT.TSLINE
      5221**DCL      5222--REDEF
B$JIT$
      9099**DCL      4947--IMP-PTR  9119>>IF       9119>>IF
B$SS.RVA
      5280**DCL      5281--REDEF
B$SS.X1
      5379**DCL      9138>>ASSIGN
BAD_RET_ADDR
      9149**LABEL    9139--REMEMBR
BAD_STACK
      9197**LABEL    9179--REMEMBR
CONT
      9156**LABEL    9128--CALLALT  9130--CALLALT  9131--CALLALT  9132--GOTO     9133--CALLALT  9137--GOTO
      9145--CALLALT
DDB$STEPADR
        28**PROC     9145--CALL
DDB$TEFFADD
      9103**DCL-ENT  9112--CALL
DDE$ERROR
      9104**DCL-ENT  9150--CALL     9193--CALL
DDF$EXST_#
      9106**DCL-ENT  9130--CALL     9131--CALL
DDF$FIND_PEDEF
      9107**DCL-ENT  9133--CALL
DDF$STATEMENT
      9105**DCL-ENT  9128--CALL
DELBUG
      9195**LABEL    9112--CALLALT
DOIT
        30**DCL        28--PROC     9119>>IF       9124>>IF
D_XDELTA
      9102**DCL      9113>>IF
ENTRY$
        45**DCL      9133<>CALL     9134>>IF       9134>>IF       9134>>IF       9134>>IF
ERR_RETURN
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:28   
      9193**LABEL    9189--GOTO     9198--GOTO
IC
        31**DCL        28--PROC     9111>>ASSIGN   9128<>CALL     9133<>CALL     9157>>ASSIGN   9169>>ASSIGN
      9172>>ASSIGN   9173>>ASSIGN
IC$
        32**DCL      9111<<ASSIGN   9112<>CALL     9156>>IF       9156>>IF       9158>>IF       9161>>ASSIGN
      9170>>ASSIGN   9177>>IF       9177>>IF
INSTR.OP
      4766**DCL      9141>>IF       9156>>IF       9156>>IF       9158>>IF       9171>>IF       9177>>IF
      9177>>IF
INSTR.TAG.TD
      4772**DCL      4773--REDEF
INSTR.TAGG
      4769**DCL      4770--REDEF    9171>>IF
INSTR.Y
      4757**DCL      4758--REDEF    4761--REDEF    9172>>ASSIGN
RETIC
        33**DCL        28--PROC       34--REDEF    9112<>CALL     9116<<ASSIGN   9116>>ASSIGN   9119>>IF
      9119>>IF       9145<>CALL     9157<<ASSIGN   9172<<ASSIGN   9173<<ASSIGN   9184<<ASSIGN
RETICB
        34**DCL      9175<<ASSIGN   9175>>ASSIGN
SST
        43**DCL      9128<>CALL     9129>>IF
SST#
        42**DCL      9128<>CALL     9131<>CALL
ST#
        41**DCL      9128<>CALL     9130<>CALL
ST$
        44**DCL      9130<>CALL     9131<>CALL     9132>>IF       9132>>IF
S_D.ACCESS
      2173**DCL      9140<<ASSIGN   9144<<ASSIGN   9151<<ASSIGN   9180<<ASSIGN   9185<<ASSIGN
S_D.CURRENT_CHANNEL
      3086**DCL      3088--REDEF
S_D.DEBUGA
      2238**DCL      2240--REDEF
S_D.EIS
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:29   
      3196**DCL      3225--REDEF
S_D.ERROR
      2167**DCL      9149<<ASSIGN   9188<<ASSIGN   9197<<ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      3129**DCL      3130--REDEF    3144--REDEF
S_D.ISBASE
      2416**DCL      9114>>IF       9116>>ASSIGN
S_D.JDE
      2743**DCL      2744--REDEF
S_D.L$.VALUE
      2296**DCL      2302--REDEF    2310--REDEF    2313--REDEF    2316--REDEF    2319--REDEF
S_D.L$.VALUE.L
      2297**DCL      2298--REDEF    2299--REDEF
S_D.L6_MESSAGE_BUF
      3150**DCL      3152--REDEF
S_D.OUTPUT
      3116**DCL      3118--REDEF
S_D.REMOTE_MSG.FNCC
      3135**DCL      3136--REDEF
S_D.REMOTE_MSG.STXC
      3131**DCL      3132--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3139**DCL      3140--REDEF
S_D.REM_ACCESS
      2181**DCL      9139<<REMEMBR  9179<<REMEMBR
S_D.S$TEP.DOING_SOC
      3044**DCL      9160<<ASSIGN
S_D.S$TEP.ONE_FLAG
      3042**DCL      9127>>IF
S_D.SV
      2195**DCL      2216--REDEF
S_D.USS$
      2155**DCL      9138>>ASSIGN
S_D$
      3447**DCL      2143--IMP-PTR  9114>>IF       9116>>ASSIGN   9127>>IF       9138>>ASSIGN   9139>>REMEMBR
      9140>>ASSIGN   9144>>ASSIGN   9149>>ASSIGN   9151>>ASSIGN   9160>>ASSIGN   9179>>REMEMBR  9180>>ASSIGN
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:30   
      9185>>ASSIGN   9188>>ASSIGN   9197>>ASSIGN
TEMPIC$
        38**DCL      9161<<ASSIGN   9170<<ASSIGN   9171>>IF       9171>>IF       9172>>ASSIGN   9181<<ASSIGN
      9182>>ASSIGN   9184>>ASSIGN
UDR2$
      9101**DCL      9181>>ASSIGN   9181>>ASSIGN
UIS$
      9100**DCL      9111>>ASSIGN   9141>>IF
X1
        40**DCL      9138<<ASSIGN   9141>>IF       9145<>CALL
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:31   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$STEPADR File=DDB$STEPADR.:E05TSI                          TUE 07/29/97 13:48 Page:32   
              MINI UREF LISTING

ARGS      35**DCL
UBIN36      39**DCL
