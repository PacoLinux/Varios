VERSION E05

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:1    
        1        1        /*M* TOU$MERGE     DEckfile Editor Routine MERGE Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$MERGE
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine MERGE Function
       14       14              DESCRIPTION: This program will provide the  MERGE function for
       15       15                           the DEckfile Editor Routine (DEER).  This program
       16       16                           is  used to  insert  DIPPER diskettes  into  CP-6
       17       17                           deckfiles.
       18       18              REFERENCE:   CP-6 Release C0P0
       19       19              LAST UPDATE: 4/30/84
       20       20        */
       21       21        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:2    
       22       22        /*F*  NAME:        TOU$MERGE
       23       23              DESCRIPTION: Procedure Nesting Hierarchy
       24       24
       25       25              TOU$MERGE: procedure
       26       26
       27       27                 M_INIT_DUP: procedure
       28       28                 M_COMMAND_SETUP: procedure ALTRET
       29       29                 M_GET_CURRENT_DF_VALUES: procedure ALTRET
       30       30                 M_INIT_MCA_B: procedure
       31       31
       32       32                 M_STORE_MCA_DATA: procedure (CE, FE) ALTRET
       33       33                    M_SET_CATALOG_KEY: procedure (KD)
       34       34                    M_PROCESS_MCA_INPUT: procedure (CE, FE) ALTRET
       35       35                    M_GET_HEADER: procedure (D) ALTRET
       36       36                       M_HANDLE_ERROR: procedure (RP, DN)
       37       37                          M_PROMPT_SAME_DRIVE: procedure ALTRET
       38       38                          M_PROMPT_NEXT_DRIVE: procedure (DN) ALTRET
       39       39                    M_SETUP_CATALOG: procedure ALTRET
       40       40                    M_CHECK_TND_DISKETTE: procedure ALTRET
       41       41                    M_COMPUTE_LAST_DISKETTE: procedure (LD, S) ALTRET
       42       42                    M_CHECK_ALREADY_MERGED: procedure ALTRET
       43       43                    M_CHECK_PRODUCT_SET: procedure (D, S) ALTRET
       44       44                    M_COMPUTE_LAST_DIR: procedure (LD)
       45       45                    M_GET_NEXT_DECK: procedure
       46       46                    M_STORE_OBJECT_DECK: procedure ALTRET
       47       47                    M_STORE_CATALOG_ENTRY: procedure ALTRET
       48       48                    M_STORE_SUBCATALOG: procedure ALTRET
       49       49                    M_STORE_MASTER_CHANGES: procedure ALTRET
       50       50
       51       51                 M_SAVE_MCA_DATA: procedure (CE, FE) ALTRET
       52       52                    M_PROCESS_TEMP: procedure (CE, FE) ALTRET
       53       53                    M_SAVE_MASTER_CHANGES: procedure ALTRET
       54       54                    M_SAVE_SUBCATALOG: procedure ALTRET
       55       55                    M_SAVE_CATALOG_ENTRY: procedure ALTRET
       56       56                    M_SAVE_OBJECT_DECK: procedure ALTRET
       57       57                       M_SAVE_NEW_DECK: procedure ALTRET
       58       58                       M_REPLACE_OLD_DECK: procedure ALTRET
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:3    
       59       59                    M_SAVE_LOG: procedure ALTRET
       60       60                    M_SETUP_PRINT: procedure
       61       61                    M_PRINT_MERGED_MSG: procedure (CE)
       62       62
       63       63                 M_GET_RESPONSE: procedure (MC) ALTRET
       64       64        */
       65       65        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:4    
       66       66        TOU$MERGE: PROC ;
       67       67
       68       68        /* Include Files */
       69       69
       70       70           %INCLUDE TOU_DEER_M ;
       71     1481           %INCLUDE TOU_RQSTS_E ;
       72     1556           %INCLUDE TO_PERR_C ;
       73     2141           %INCLUDE XU_MACRO_C ;
       74     5247
       75     5248        /* Macros */
       76     5249
       77     5250           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       78     5262           %BCD_CARD (STCLASS = SYMREF) ;
       79     5282           %BCD_KEY (STCLASS = SYMREF) ;
       80     5296           %BINARY_CARD (STCLASS = SYMREF) ;
       81     5323           %BINARY_KEY (STCLASS = SYMREF) ;
       82     5337           %CATALOG_DATA (STCLASS = SYMREF) ;
       83     5351           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       84     5365           %CATALOG_KEY (STCLASS = SYMREF) ;
       85     5379           %CATALOG_SEARCH_KEY (STCLASS = SYMREF) ;
       86     5391           %DKEND (STCLASS = SYMREF) ;
       87     5415           %DUP (STCLASS = SYMREF) ;
       88     5558           %ID (STCLASS = SYMREF) ;
       89     5575           %LAST (STCLASS = SYMREF) ;
       90     5588           %MASTER_DATA (STCLASS = SYMREF) ;
       91     5602           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       92     5616           %MCA_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
       93     5686           %OBJECT (STCLASS = SYMREF) ;
       94     5749           %OBJECT_KEY (STCLASS = SYMREF) ;
       95     5762           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       96     5776           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       97     5791           %SUBCATALOG_DATA (STCLASS = SYMREF) ;
       98     5804           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
       99     5818           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:5    
      100     5819        /* Variables */
      101     5820
      102     5821    1      DCL EXISTED                    BIT (1) ALIGNED ;
      103     5822    1      DCL FIRST                      UBIN WORD ALIGNED ;
      104     5823    1      DCL BCD#                       UBIN WORD SYMREF ALIGNED ;
      105     5824    1      DCL BIN#                       UBIN WORD SYMREF ALIGNED ;
      106     5825
      107     5826        /* External Entry Points */
      108     5827
      109     5828    1      DCL TOU$DU_SET_MCA                 ENTRY ALTRET ;
      110     5829    1      DCL TOU$DU_OPEN_MCA                ENTRY ALTRET ;
      111     5830    1      DCL TOU$DU_CLOSE_MCA               ENTRY ALTRET ;
      112     5831    1      DCL TOU$DU_MCA_RESET_STATUS        ENTRY ALTRET ;
      113     5832
      114     5833    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
      115     5834    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
      116     5835    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
      117     5836
      118     5837    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
      119     5838    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
      120     5839    1      DCL TOU$DU_OPERATOR_TEXT           ENTRY ALTRET ;
      121     5840    1      DCL TOU$DU_UPDATE_LOG              ENTRY ALTRET ;
      122     5841
      123     5842    1      DCL TOU$CHECKSUM                   ENTRY (4) ALTRET ;
      124     5843    1      DCL TOU$ND_SAVE_CATALOG_CONTROL    ENTRY ALTRET ;
      125     5844    1      DCL TOU$ND_SAVE_LAST_DECK#         ENTRY ALTRET ;
      126     5845           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:6    
      127     5846        /* External Entry Points */
      128     5847
      129     5848    1      DCL TOU$CLEAR_IFAD                 ENTRY ALTRET ;
      130     5849    1      DCL TOU$GET_HEADER                 ENTRY ALTRET ;
      131     5850    1      DCL TOU$GET_CONFIG                 ENTRY ALTRET ;
      132     5851    1      DCL TOU$GET_DIRECTORY              ENTRY ALTRET ;
      133     5852    1      DCL TOU$GET_FILE                   ENTRY ALTRET ;
      134     5853    1      DCL TOU$MAKE_OBJECT_CARD           ENTRY ALTRET ;
      135     5854    1      DCL TOU$MAKE_DKEND_CARD            ENTRY ALTRET ;
      136     5855    1      DCL TOU$MAKE_DIR_OBJECT_CARD       ENTRY ALTRET ;
      137     5856    1      DCL TOU$MAKE_HDR_OBJECT_CARD       ENTRY ALTRET ;
      138     5857           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:7    
      139     5858        /* External Entry Points */
      140     5859
      141     5860    1      DCL TOU$B_SHOW_DCBS                ENTRY ALTRET ;
      142     5861    1      DCL TOU$B_GET_CATALOG              ENTRY ALTRET ;
      143     5862    1      DCL TOU$B_SET_OBJECT_KEY           ENTRY ALTRET ;
      144     5863    1      DCL TOU$B_PRINT_DECK_LINE          ENTRY ALTRET ;
      145     5864    1      DCL TOU$B_CHECK_FOR_CATALOG        ENTRY ALTRET ;
      146     5865
      147     5866    1      DCL TOU$DFU_DF_RD_CATALOG_CONTROL  ENTRY ALTRET ;
      148     5867    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      149     5868    1      DCL TOU$DFU_DF_RD_LAST_DECK#       ENTRY ALTRET ;
      150     5869    1      DCL TOU$DFU_DF_RD_LOG              ENTRY ALTRET ;
      151     5870
      152     5871    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
      153     5872    1      DCL TOU$DFU_DF_DL_DECK             ENTRY ALTRET ;
      154     5873
      155     5874    1      DCL TOU$DFU_DF_WR_MASTER_CONTROL   ENTRY ALTRET ;
      156     5875    1      DCL TOU$DFU_DF_WR_MASTER_ENTRY     ENTRY ALTRET ;
      157     5876    1      DCL TOU$DFU_DF_WR_SUBCATALOG       ENTRY ALTRET ;
      158     5877    1      DCL TOU$DFU_DF_WR_CATALOG_ENTRY    ENTRY ALTRET ;
      159     5878    1      DCL TOU$DFU_DF_WR_OBJECT           ENTRY ALTRET ;
      160     5879    1      DCL TOU$DFU_DF_WR_FILE             ENTRY ALTRET ;
      161     5880    1      DCL TOU$DFU_DF_WR_HDR              ENTRY ALTRET ;
      162     5881    1      DCL TOU$DFU_DF_WR_DIR              ENTRY ALTRET ;
      163     5882    1      DCL TOU$DFU_DF_WR_BCD_CARDS        ENTRY ALTRET ;
      164     5883    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      165     5884    1      DCL TOU$DFU_DF_WR_LOG              ENTRY ALTRET ;
      166     5885           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:8    
      167     5886        /* External Entry Points */
      168     5887
      169     5888    1      DCL TOU$DFU_OPEN_TEMP              ENTRY ALTRET ;
      170     5889    1      DCL TOU$DFU_CLOSE_TEMP             ENTRY ALTRET ;
      171     5890
      172     5891    1      DCL TOU$DFU_TF_RD_MASTER_CONTROL   ENTRY ALTRET ;
      173     5892    1      DCL TOU$DFU_TF_RD_MASTER_ENTRY     ENTRY ALTRET ;
      174     5893    1      DCL TOU$DFU_TF_RD_SUBCATALOG       ENTRY ALTRET ;
      175     5894    1      DCL TOU$DFU_TF_RD_CATALOG_ENTRY    ENTRY ALTRET ;
      176     5895    1      DCL TOU$DFU_TF_RD_OBJECT           ENTRY ALTRET ;
      177     5896    1      DCL TOU$DFU_TF_RD_FILE             ENTRY ALTRET ;
      178     5897    1      DCL TOU$DFU_TF_RD_HDR              ENTRY ALTRET ;
      179     5898    1      DCL TOU$DFU_TF_RD_DIR              ENTRY ALTRET ;
      180     5899    1      DCL TOU$DFU_TF_RD_BCD_CARDS        ENTRY ALTRET ;
      181     5900
      182     5901    1      DCL TOU$DFU_TF_WR_MASTER_CONTROL   ENTRY ALTRET ;
      183     5902    1      DCL TOU$DFU_TF_WR_MASTER_ENTRY     ENTRY ALTRET ;
      184     5903    1      DCL TOU$DFU_TF_WR_CATALOG_CONTROL  ENTRY ALTRET ;
      185     5904    1      DCL TOU$DFU_TF_WR_SUBCATALOG       ENTRY ALTRET ;
      186     5905    1      DCL TOU$DFU_TF_WR_CATALOG_ENTRY    ENTRY ALTRET ;
      187     5906    1      DCL TOU$DFU_TF_WR_OBJECT           ENTRY ALTRET ;
      188     5907    1      DCL TOU$DFU_TF_WR_FILE             ENTRY ALTRET ;
      189     5908    1      DCL TOU$DFU_TF_WR_DIR              ENTRY ALTRET ;
      190     5909    1      DCL TOU$DFU_TF_WR_HDR              ENTRY ALTRET ;
      191     5910    1      DCL TOU$DFU_TF_WR_BCD_CARDS        ENTRY ALTRET ;
      192     5911    1      DCL TOU$DFU_TF_WR_LAST_DECK#       ENTRY ALTRET ;
      193     5912           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:9    
      194     5913        /* ********************
      195     5914           ********************
      196     5915           **  Main Program  **
      197     5916           ********************
      198     5917           ******************** */
      199     5918
      200     5919    1      CALL M_INIT_DUP ;
      201     5920    1      CALL M_COMMAND_SETUP ALTRET (ERROR_RETURN) ;
      202     5921    1      CALL TOU$B_SHOW_DCBS ;
      203     5922    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;
      204     5923    1      CALL M_GET_CURRENT_DF_VALUES ALTRET (ERROR_RETURN) ;
      205     5924    1      CALL M_INIT_MCA_B ;
      206     5925    1      CALL TOU$DU_OPEN_MCA ALTRET (ERROR_RETURN) ;
      207     5926    1      CALL M_STORE_MCA_DATA (EXISTED, FIRST) ALTRET (ERROR_RETURN) ;
      208     5927    1      CALL TOU$DU_CLOSE_MCA ALTRET (ERROR_RETURN) ;
      209     5928    1      CALL M_SAVE_MCA_DATA (EXISTED, FIRST) ALTRET (ERROR_RETURN) ;
      210     5929    1      CALL TOU$DU_CLOSE_DF ;
      211     5930
      212     5931        /* NORMAL_RETURN: */
      213     5932    1      DUP.MSG_CODE = %T$M_SUCCESS;
      214     5933    1      CALL TOU$DU_USER_WRITE ;
      215     5934    1      RETURN ;
      216     5935
      217     5936    1   ERROR_RETURN:
      218     5937    1      CALL TOU$DU_CLOSE_MCA ;
      219     5938    1      CALL TOU$DU_CLOSE_DF ;
      220     5939    1      DUP.MSG_CODE = %T$M_FAILURE;
      221     5940    1      CALL TOU$DU_USER_WRITE ;
      222     5941    1      RETURN ;
      223     5942
      224     5943        /* ********************
      225     5944           ********************
      226     5945           **  End Of  Main  **
      227     5946           ********************
      228     5947           ******************** */
      229     5948        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:10   
      230     5949        /*I*  NAME:        M_INIT_DUP
      231     5950              AUTHOR:      Scott S. Sheppard
      232     5951              PURPOSE:     Initilization
      233     5952              INTERFACE:   None called.
      234     5953              INPUT:       Set of system equates.
      235     5954              OUTPUT:      DUP - Deckfile Utility Parameter
      236     5955              DESCRIPTION: This procedure initializes variables to
      237     5956                           appropriate starting values.
      238     5957        */
      239     5958
      240     5959    1   M_INIT_DUP: PROC ;
      241     5960
      242     5961        /* Code */
      243     5962
      244     5963    2      DUP.HDR_CODE = %H$MERGE ;
      245     5964    2      DUP.LINE_VFC = %SKIP_WRITE ;
      246     5965    2      DUP.FORCE_NEW_PAGE = %TRUE ;
      247     5966    2      DUP.IFAD.ME_ALLOWED = %FALSE ;
      248     5967    2      DUP.IFAD.ENTERED = %FALSE ;
      249     5968    2      DUP.IFAD.DRIVE_NUMBER = '1' ;
      250     5969    2      DUP.DF.ENTERED = %FALSE ;
      251     5970    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;
      252     5971    2      DUP.DF.REPORT_ERROR = %TRUE ;
      253     5972    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;
      254     5973    2      RETURN ;
      255     5974
      256     5975    2   END M_INIT_DUP ;
      257     5976        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:11   
      258     5977        /*I*  NAME:        M_COMMAND_SETUP
      259     5978              AUTHOR:      Scott S. Sheppard
      260     5979              PURPOSE:     Sets up MERGE Command
      261     5980              INTERFACE:   TOU$DU_SET_MCA
      262     5981                           TOU$DU_SET_DF_FID
      263     5982              INPUT:       DUP.CMD$ - pointer to the parse control block
      264     5983              OUTPUT:      DUP.DF.HOLD_AREA
      265     5984                           DUP.DF.HOLD_AREA_LGTH
      266     5985              DESCRIPTION: This procedure sets up the MERGE command from the
      267     5986                           information entered by the user.    DUP.CMD$ is a
      268     5987                           pointer to a   parse control block  that contains
      269     5988                           the tokens entered by the user.
      270     5989                           COMMAND FORMS:
      271     5990              Case 1: MERGE
      272     5991              Case 2: MERGE <IMU identifier>
      273     5992              Case 3: MERGE INTO <deckfile fid>
      274     5993              Case 4: MERGE <IMU identifier> INTO <deckfile fid>
      275     5994        */
      276     5995
      277     5996    1   M_COMMAND_SETUP: PROC ALTRET ;
      278     5997
      279     5998    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      280     5999    2      DCL OUTBLK$                    PTR ALIGNED ;
      281     6000           %PARSE$OUT (STCLASS = BASED) ;
      282     6045           %PARSE$SYM (STCLASS = BASED) ;
      283     6083           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:12   
      284     6084        /* Code */
      285     6085
      286     6086    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;
      287     6087    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;
      288     6088    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;
      289     6089    4            CASE (%IFAD_FID) ;
      290     6090    4               DUP.IFAD.ENTERED = %TRUE ;
      291     6091    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      292     6092    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      293     6093    4               CALL TOU$DU_SET_MCA ALTRET (ERROR) ;
      294     6094    4            CASE (%DECKFILE_FID) ;
      295     6095    4               DUP.DF.ENTERED = %TRUE ;
      296     6096    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      297     6097    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      298     6098    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      299     6099    4         END /* CASE */ ;
      300     6100    3      END /* DO */ ;
      301     6101
      302     6102    2      IF DUP.IFAD.ENTERED
      303     6103    2      THEN /* FID set from DEER command */ ;
      304     6104    2      ELSE CALL TOU$DU_SET_MCA ALTRET (ERROR) ;
      305     6105    2      IF DUP.DF.ENTERED
      306     6106    2      THEN /* FID set from DEER command */ ;
      307     6107    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      308     6108    2      RETURN ;
      309     6109
      310     6110    2   ERROR:
      311     6111    2      ALTRETURN ;
      312     6112
      313     6113    2   END M_COMMAND_SETUP ;
      314     6114        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:13   
      315     6115        /*I* NAME:         M_GET_CURRENT_DF_VALUES
      316     6116             AUTHOR:       Scott S. Sheppard
      317     6117             PURPOSE:      Gets current deckfile values
      318     6118             INTERFACE:    TOU$DFU_DF_RD_LAST_DECK#
      319     6119                           TOU$DFU_DF_RD_LOG
      320     6120             PARAMETERS:   None passed.
      321     6121             DATA:         MASTER_DATA - output
      322     6122                           LAST - output
      323     6123                           LOG_B - output
      324     6124             DESCRIPTION:  This  procedure  obtains  the  current  values
      325     6125                           stored in the deckfile so that new information
      326     6126                           may  be added  to the  deckfile based on these
      327     6127                           current values.
      328     6128        */
      329     6129
      330     6130    1   M_GET_CURRENT_DF_VALUES: PROC ALTRET ;
      331     6131
      332     6132        /* Code */
      333     6133
      334     6134    2      CALL TOU$DFU_DF_RD_LAST_DECK# ALTRET (ERROR) ;
      335     6135    2      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR) ;
      336     6136    2      RETURN ;
      337     6137
      338     6138    2   ERROR:
      339     6139    2      ALTRETURN ;
      340     6140
      341     6141    2   END M_GET_CURRENT_DF_VALUES ;
      342     6142        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:14   
      343     6143        /*I* NAME:         M_INIT_MCA_B
      344     6144             AUTHOR:       Scott S. Sheppard
      345     6145             PURPOSE:      Initializes the MCA info Buffer
      346     6146             INTERFACE:    None called.
      347     6147             PARAMETERS:   None passed.
      348     6148             DATA:         MCA_B - output
      349     6149             DESCRIPTION:  This procedure initializes the MCA buffer to all
      350     6150                           zeroes so that the numerous fields which must be
      351     6151                           zero do not have to be set individually.
      352     6152                           The IDCW values (which remain constant) are also
      353     6153                           set for the TDIO call to be done later.
      354     6154        */
      355     6155
      356     6156    1   M_INIT_MCA_B: PROC ;
      357     6157
      358     6158        /* Code */
      359     6159
      360     6160    2      MCA_B = '0'B ;
      361     6161    2      MCA_B.DCW_LIST.IDCW1 = '130000720002'O ;
      362     6162    2      MCA_B.DCW_LIST.IDCW2 = '030000700001'O ;
      363     6163    2      RETURN ;
      364     6164
      365     6165    2   END M_INIT_MCA_B ;
      366     6166        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:15   
      367     6167        /*I* NAME:         M_STORE_MCA_DATA
      368     6168             AUTHOR:       Scott S. Sheppard
      369     6169             PURPOSE:      Saves MCA changes in a TEMP file
      370     6170             INTERFACE:    M_SET_CATALOG_KEY
      371     6171                           TOU$B_CHECK_FOR_CATALOG
      372     6172                           M_PROCESS_MCA_INPUT
      373     6173                           TOU$DFU_OPEN_TEMP
      374     6174                           TOU$DFU_CLOSE_TEMP
      375     6175                           TOU$CLEAR_IFAD
      376     6176             PARAMETERS:   EXISTED - output
      377     6177                           FIRST - output
      378     6178             DATA:         DUP.TEMP.OPEN_TYPE - output
      379     6179                           DUP.TEMP.CLOSE_TYPE - output
      380     6180             DESCRIPTION:  This  procedure  is  the  driver  used to read
      381     6181                           information from the MCA diskettes and save it
      382     6182                           in  a  temporary  file.  The temporary file is
      383     6183                           used  so  that  no  changes  are  made  to the
      384     6184                           deckfile  until after  all data  to be altered
      385     6185                           has successfully been read and validated.
      386     6186        */
      387     6187        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:16   
      388     6188    1   M_STORE_MCA_DATA: PROC (EXISTED, FIRST) ALTRET ;
      389     6189
      390     6190    2      DCL EXISTED BIT (1) ALIGNED ;
      391     6191    2      DCL FIRST   UBIN WORD ALIGNED ;
      392     6192
      393     6193        /* Code */
      394     6194
      395     6195    2      DUP.TEMP.OPEN_TYPE = %CREATE_FILE ;
      396     6196    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;
      397     6197    2      CALL TOU$CLEAR_IFAD ;
      398     6198
      399     6199    2      CALL M_SET_CATALOG_KEY (CATALOG_SEARCH_KEY.DATA) ;
      400     6200    2      CALL TOU$B_CHECK_FOR_CATALOG WHENRETURN
      401     6201    3           DO ;
      402     6202    3              EXISTED = %TRUE ;
      403     6203    3              CALL M_PROCESS_MCA_INPUT (EXISTED, FIRST) ALTRET (ERROR) ;
      404     6204    3           END /* WHENRETURN */ ;
      405     6205    2      WHENALTRETURN
      406     6206    3           DO ;
      407     6207    3              EXISTED = %FALSE ;
      408     6208    3              CALL M_PROCESS_MCA_INPUT (EXISTED, FIRST) ALTRET (ERROR) ;
      409     6209    3           END /* WHENALTRETURN */ ;
      410     6210
      411     6211    2      DUP.TEMP.CLOSE_TYPE = %SAVE_FILE ;
      412     6212    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;
      413     6213    2      RETURN ;
      414     6214
      415     6215    2   ERROR:
      416     6216    2      CALL TOU$DFU_CLOSE_TEMP ;
      417     6217    2      ALTRETURN ;
      418     6218
      419     6219        /* END M_STORE_MCA_DATA */
      420     6220        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:17   
      421     6221        /*I* NAME:         M_SET_CATALOG_KEY
      422     6222             AUTHOR:       Scott S. Sheppard
      423     6223             PURPOSE:      assigns the catalog key value
      424     6224             INTERFACE:    None called.
      425     6225             PARAMETERS:   KEY_DATA
      426     6226             DATA:         No external data accessed.
      427     6227             DESCRIPTION:  This procedure is used  to set the catalog key
      428     6228                           value for the NIO catalog in the deckfile. The
      429     6229                           procedure  is used  to set  the catalog search
      430     6230                           key to  look for a catalog or  to set the text
      431     6231                           portion  of  the  catalog  key  for the actual
      432     6232                           catalog  key.   This  procedure  is not called
      433     6233                           when  the catalog  is already  in the deckfile
      434     6234                           since the key is retrieved when the catalog is
      435     6235                           found.
      436     6236        */
      437     6237
      438     6238    2   M_SET_CATALOG_KEY: PROC (KEY_DATA) ;
      439     6239
      440     6240    3      DCL KEY_DATA   CHAR (21) CALIGNED ;
      441     6241
      442     6242        /* Code */
      443     6243
      444     6244    3      KEY_DATA = 'CATA.NIO.MCA' ;
      445     6245    3      RETURN ;
      446     6246
      447     6247    3   END M_SET_CATALOG_KEY ;
      448     6248        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:18   
      449     6249        /*I* NAME:         M_PROCESS_MCA_INPUT
      450     6250             AUTHOR:       Scott S. Sheppard
      451     6251             PURPOSE:      Driver for processing IFAD input
      452     6252             INTERFACE:    M_SETUP_CATALOG              TOU$B_GET_CATALOG
      453     6253                           M_SET_CATALOG_KEY            TOU$GET_DIRECTORY
      454     6254                           M_GET_HEADER                 TOU$GET_FILE
      455     6255                           M_COMPUTE_LAST_DISKETTE      TOU$DFU_TF_WR_CATALOG_CONTROL
      456     6256                           M_CHECK_PRODUCT_SET          TOU$DFU_TF_WR_LAST_DECK#
      457     6257                           M_COMPUTE_LAST_DIR
      458     6258                           M_BUFFER_DIRECTORY
      459     6259                           M_STORE_CATALOG_ENTRY
      460     6260                           M_STORE_OBJECT_DECK
      461     6261                           M_STORE_CATALOG_ENTRY
      462     6262                           M_STORE_DIRECTORY
      463     6263                           M_STORE_SUBCATALOG
      464     6264                           M_STORE_MASTER_CHANGES
      465     6265                           M_CHECK_TND_DISKETTE
      466     6266                           M_CHECK_ALREADY_MERGED
      467     6267             PARAMETERS:   None passed.
      468     6268             DATA:         MCA_B.DIRECTORY.CURRENT - output
      469     6269             DESCRIPTION:  DIPPER   diskettes   are   placed   into  CP-6
      470     6270                           deckfiles using a two stage process.
      471     6271                           1. Data  is  read  from  the MCA, checked, and
      472     6272                              stored in a temporary file.
      473     6273                           2. After  all data  has been  read and stored,
      474     6274                              the  data is then  read from the temporary
      475     6275                              file and saved in the deckfile.
      476     6276             This two stage strategy ensures that no alterations are made
      477     6277             to  a CP-6 deckfile  before all data to be modified has been
      478     6278             verified.  This prevents  the deckfile  from being partially
      479     6279             updated  when  an  error  is  encountered and eliminates the
      480     6280             problems of backing out erroneous modifications.
      481     6281
      482     6282             This  procedure is  the driver  routine used  for stage one,
      483     6283             reading the  DIPPER  diskette data from the MCA,  converting
      484     6284             it  to deckfile  like format,  and storing  the records in a
      485     6285             temporary file.
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:19   
      486     6286
      487     6287             This  algorithm is  somewhat complex  so a  detailed step by
      488     6288             step description will follow.
      489     6289
      490     6290             1.  Set  up deckfile values  as if a  new catalog were to be
      491     6291                 added or as if the  existing  catalog is to be modified.
      492     6292                 This includes setting up the catalog key,  catalog data,
      493     6293                 and catalog entry fields.
      494     6294             2.  Read the  header of the diskette  currently mounted. Try
      495     6295                 Drive 1 first, then try Drive 2 if 1 has a malfunction.
      496     6296             3.  Compute  the  number  of  diskettes  in  this particular
      497     6297                 diskette  product  set.  Note  that the current diskette
      498     6298                 must be diskette 1 for this to be successful. Diskette 1
      499     6299                 of  1  is  perfectly  fine,  but  DEER  will  not  start
      500     6300                 processing for Diskette M of N, where M ~= 1.
      501     6301
      502     6302             For each diskette of the product set (4 - 11):
      503     6303
      504     6304             4.  Check the diskette to make sure that it is a part of the
      505     6305                 product set  currently in use  and that the  diskette is
      506     6306                 the proper one in the sequence of diskettes.
      507     6307             5.  Read the directory file which contains a directory entry
      508     6308                 for each file on the diskette.
      509     6309             6.  Compute   the  number  of   diskette  entries  for  this
      510     6310                 particular   diskette.   This  is   saved  as  the  last
      511     6311                 directory  so it may  be used as  the upper index on the
      512     6312                 iterative DO loop.   The  number of diskette entries  is
      513     6313                 computed  by dividing the  directory size  (found on the
      514     6314                 diskette header) by 16 (the size of a directory entry).
      515     6315             7.  The  directory entries  are  buffered  so that 1  object
      516     6316                 deck for all of the entries for  all of the diskettes of
      517     6317                 the product set may be saved.
      518     6318
      519     6319             For each  directory entry  of each  diskette of  the product
      520     6320             set (8 - 11):
      521     6321
      522     6322             8.  The  current  directory  field  is  loaded so other DEER
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:20   
      523     6323                 modules  do not have  to have knowledge  of the index of
      524     6324                 the iterative DO loop.
      525     6325             9.  The file is read for the current directory entry.
      526     6326            10.  The file  is saved as an  object deck  in the  temporary
      527     6327                 file. This includes:
      528     6328              a. A  $OBJECT  card  is  formed  from  the current diskette
      529     6329                 header, directory, and file information.
      530     6330              b. A  $DKEND card is  formed from the  $OBJECT card and the
      531     6331                 current file information.
      532     6332              c. The object key is set from the $OBJECT card.
      533     6333              d. The  $OBJECT, file, and $DKEND  cards are written to the
      534     6334                 temporary file.
      535     6335            11.  A  catalog entry  for the  object deck  is stored in the
      536     6336                 temporary file.
      537     6337
      538     6338            12.  The directory  for the  diskette  is saved as an  object
      539     6339                 deck in the same manner as one of the files.
      540     6340            13.  A catalog entry is saved for the directory file.
      541     6341            14.  The subcatalog for the  catalog is stored. This contains
      542     6342                 the IFAD input source and  file number used as input for
      543     6343                 this catalog.
      544     6344            15.  The  catalog record  is stored.  This contains  the deck
      545     6345                 number and the number of catalog entries.
      546     6346            16.  A master entry is  saved  for the  new  catalog.  If the
      547     6347                 catalog already existed,  no changes must be made to the
      548     6348                 master catalog.
      549     6349            17.  The last deck structure is saved. This contains the last
      550     6350                 binary deck  number used and the  last make believe edit
      551     6351                 name used.
      552     6352
      553     6353            Also, a "read config" has been added which will
      554     6354            obtain the product set tab number. This is new
      555     6355            E02 release in order to process the B.0 IMX
      556     6356            Utility diskettes, which have changed contents.
      557     6357            (The 14 previous diskettes have been compressed
      558     6358            onto 2 high-density diskettes).
      559     6359            On B.0 IMX release, the diskette header number tab comes thru
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:21   
      560     6360            as 'XXX' for both diskettes. If we find the tab = 'XXX', we
      561     6361            replace it with the actual tab which we obtained from the
      562     6362            "read config" command to the MCA. If the tab is not 'XXX', we
      563     6363            leave it asis so the logic will be compatible with previous
      564     6364            releases (e.g., it was '007' for release A.5).
      565     6365        */
      566     6366        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:22   
      567     6367    2   M_PROCESS_MCA_INPUT: PROC (CATALOG_EXISTED, FIRST_NEW_ENTRY) ALTRET ;
      568     6368
      569     6369    3      DCL DIR$            PTR ALIGNED ;
      570     6370    3      DCL WORK  SBIN;
      571     6371           %DIRECTORY_ENTRY (STCLASS = "BASED (DIR$)") ;
      572     6398    3      DCL CATALOG_EXISTED BIT (1) ALIGNED ;
      573     6399    3      DCL FIRST_NEW_ENTRY UBIN WORD ALIGNED ;
      574     6400    3      DCL DISKETTE        UBIN WORD ALIGNED ;
      575     6401    3      DCL DIRECTORY       UBIN WORD ALIGNED ;
      576     6402    3      DCL LAST_DISKETTE   UBIN WORD ALIGNED ;
      577     6403    3      DCL LAST_DIR        UBIN WORD ALIGNED ;
      578     6404    3      DCL 1 PRODUCT_SET,
      579     6405    3            2 EQUIP_TYPE  CHAR (4) CALIGNED,
      580     6406    3            2 DWG_NUM     CHAR (12) CALIGNED,
      581     6407    3            2 NUM_TAB     CHAR (3) CALIGNED ;
      582     6408
      583     6409        /* Code */
      584     6410
      585     6411    3      IF CATALOG_EXISTED
      586     6412    4      THEN DO ;
      587     6413    4              CALL M_SETUP_CATALOG ALTRET (ERROR) ;
      588     6414    4              FIRST_NEW_ENTRY = CATALOG_DATA.ENTRY_COUNT + 1 ;
      589     6415    4           END /* THEN */ ;
      590     6416    4      ELSE DO ;
      591     6417    4              CALL M_SET_CATALOG_KEY (CATALOG_KEY.DATA) ;
      592     6418    4              LAST.DECK# = LAST.DECK# + 1 ;
      593     6419    4              CALL TOU$B_GET_CATALOG ;
      594     6420    4              FIRST_NEW_ENTRY = 1 ;
      595     6421    4           END /* ELSE */ ;
      596     6422    3      IF DUP.IFAD.IMU_TAB THEN GOTO SKIP_CONFIG_READ ;
      597     6423              /* only needed to read MCA config one time */
      598     6424    3      DUP.IFAD.IMU_TAB = %FALSE ;
      599     6425    3      CALL M_GET_CONFIG
      600     6426    4      WHENRETURN DO;
      601     6427    4              WORK = MCA_B.CONFIG.DATA1.NUMTAB ;
      602     6428    4              CALL BINCHAR (DUP.IFAD.CONFIG_TAB, WORK) ;
      603     6429    4           END; /* WHENRETURN DO */
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:23   
      604     6430    4      WHENALTRETURN DO;
      605     6431    4              DUP.IFAD.IMU_TAB = %FALSE ;
      606     6432    4              DUP.MSG_CODE = %E$RD_CONFIG; /* UNABLE TO READ CONFIG */
      607     6433    4              CALL TOU$DU_OPERATOR_TEXT ;
      608     6434    4              GOTO ERROR;
      609     6435    4           END; /* WHENALTRETURN */
      610     6436    3   SKIP_CONFIG_READ:
      611     6437           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:24   
      612     6438    3      DISKETTE = 1 ;
      613     6439    3      LAST_DISKETTE = 1 ;
      614     6440    4      DO WHILE (DISKETTE <= LAST_DISKETTE) ;
      615     6441    4   TRY_AGAIN :
      616     6442    4         CALL M_GET_HEADER (DISKETTE) ALTRET (ERROR) ;
      617     6443    4         CALL M_CHECK_TND_DISKETTE ALTRET (ASK_ABORT) ;
      618     6444    4         IF DUP.IFAD.IMU_TAB THEN
      619     6445    4            PRODUCT_SET.NUM_TAB = DUP.IFAD.CONFIG_TAB ;
      620     6446    4         IF DISKETTE = 1
      621     6447    5         THEN DO ;
      622     6448    5                 CALL M_COMPUTE_LAST_DISKETTE (LAST_DISKETTE, PRODUCT_SET)
      623     6449    5                         ALTRET (ASK_ABORT) ;
      624     6450    5                 CALL M_CHECK_ALREADY_MERGED ALTRET (ERROR) ;
      625     6451    5              END /* THEN */ ;
      626     6452    4         ELSE ;
      627     6453    4         CALL M_CHECK_PRODUCT_SET (DISKETTE, PRODUCT_SET) ALTRET (ASK_ABORT) ;
      628     6454    4         CALL M_STORE_OBJECT_DECK ('HEADER   ', 136) ALTRET (ERROR) ;
      629     6455    4         CALL M_STORE_CATALOG_ENTRY ALTRET (ERROR) ;
      630     6456    4         CALL TOU$GET_DIRECTORY ALTRET (ERROR) ;
      631     6457    4         CALL M_STORE_OBJECT_DECK ('DIRECTORY', MCA_B.DIRECTORY.SIZE)
      632     6458    4                 ALTRET (ERROR) ;
      633     6459    4         CALL M_STORE_CATALOG_ENTRY ALTRET (ERROR) ;
      634     6460    4         CALL M_COMPUTE_LAST_DIR (LAST_DIR) ;
      635     6461    5         DO DIRECTORY = 0 TO LAST_DIR ;
      636     6462    5            MCA_B.DIRECTORY.CURRENT = MCA_B.DIRECTORY.DATA(DIRECTORY) ;
      637     6463    5            DIR$ = ADDR (MCA_B.DIRECTORY.CURRENT) ;
      638     6464    5            IF (DIRECTORY_ENTRY.ATTRIBUTES.LSB) OR
      639     6465    5                    (DIRECTORY_ENTRY.PATH_NAME = '.DPSFILE') OR
      640     6466    5                    (DIRECTORY_ENTRY.PATH_NULL(0) = 0)
      641     6467    5            THEN /* the file should not be cataloged */ ;
      642     6468    6            ELSE DO ;
      643     6469    6                    CALL TOU$GET_FILE ALTRET (ERROR) ;
      644     6470    6                    CALL M_STORE_OBJECT_DECK ('FILE     ', MCA_B.FILE.SIZE) ALTRET (
              6470                             ERROR) ;
      645     6471    6                    CALL M_STORE_CATALOG_ENTRY ALTRET (ERROR) ;
      646     6472    6                 END /* ELSE DO */ ;
      647     6473    5         END /* DO */ ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:25   
      648     6474    4         DISKETTE = DISKETTE + 1 ;
      649     6475    4      END /* WHILE */ ;
      650     6476           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:26   
      651     6477
      652     6478    3      CALL M_STORE_SUBCATALOG ALTRET (ERROR) ;
      653     6479    3      CALL TOU$DFU_TF_WR_CATALOG_CONTROL ALTRET (ERROR) ;
      654     6480    3      IF CATALOG_EXISTED
      655     6481    3      THEN /* No MASTER catalog entry needed */ ;
      656     6482    3      ELSE CALL M_STORE_MASTER_CHANGES ALTRET (ERROR) ;
      657     6483    3      CALL TOU$DFU_TF_WR_LAST_DECK# ALTRET (ERROR) ;
      658     6484    3      RETURN ;
      659     6485
      660     6486    3   ASK_ABORT :
      661     6487    3      DUP.MSG_CODE = %E$MPMI_RETRY ;
      662     6488    3      CALL TOU$DU_OPERATOR_TEXT ;
      663     6489    3      CALL M_GET_RESPONSE (%E$MPMI_ABORTQ) ALTRET (TRY_AGAIN) ;
      664     6490    3      DUP.MSG_CODE = %E$MPMI_DISKETTE_ERR ;
      665     6491    3      CALL TOU$DU_USER_WRITE ;
      666     6492    3   ERROR:
      667     6493    3      ALTRETURN ;
      668     6494
      669     6495
      670     6496    3   END M_PROCESS_MCA_INPUT ;
      671     6497        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:27   
      672     6498        /*I* NAME:         M_SETUP_CATALOG
      673     6499             AUTHOR:       Scott S. Sheppard
      674     6500             PURPOSE:      obtains current catalog values
      675     6501             INTERFACE:    TOU$DFU_DF_RD_CATALOG_CONTROL
      676     6502             PARAMETERS:   None passed.
      677     6503             DATA:         CATALOG_KEY - must already be set
      678     6504                           CATALOG_DATA - output then input
      679     6505                           CATALOG_ENTRY_KEY - output
      680     6506             DESCRIPTION:  This  procedure  sets  up  a  catalog  to  its
      681     6507                           current  values. When a  catalog is built from
      682     6508                           scratch,    the   routine   TOU$B_GET_CATALOG,
      683     6509                           initializes  these fields  to starting values.
      684     6510                           Since the catalog  exists, starting values can
      685     6511                           not  be used;  current ones  must be read from
      686     6512                           the deckfile.
      687     6513        */
      688     6514
      689     6515    2   M_SETUP_CATALOG: PROC ALTRET ;
      690     6516
      691     6517        /* Code */
      692     6518
      693     6519    3      CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;
      694     6520    3      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;
      695     6521    3      CATALOG_ENTRY_KEY.ENTRY# = CATALOG_DATA.ENTRY_COUNT + 1 ;
      696     6522    3      RETURN ;
      697     6523
      698     6524    3   ERROR:
      699     6525    3      ALTRETURN ;
      700     6526
      701     6527    3   END M_SETUP_CATALOG ;
      702     6528        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:28   
      703     6529        /*I* NAME:          M_GET_CONFIG
      704     6530             AUTHOR:        Kirk J. Dixon
      705     6531             INTERFACE:     TOU$GET_CARD
      706     6532             PARAMETERS:    None passed.
      707     6533             DATA:          MCA-B contains the IDCW's and appropriate HDR for
      708     6534                            the read_config.
      709     6535             DESCRIPTION:   This procedure obtains the config information
      710     6536                            from the MCA diskette. We are particularly
      711     6537                            interested in the product set tab number.
      712     6538                            (Also reference config-related documentation
      713     6539                             M_PROCESS_MCA_INPUT ).
      714     6540        */
      715     6541        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:29   
      716     6542    2   M_GET_CONFIG: PROC  ALTRET ;
      717     6543
      718     6544
      719     6545        /* Code */
      720     6546
      721     6547    3      CALL TOU$DU_MCA_RESET_STATUS ALTRET (ERROR) ;
      722     6548
      723     6549    3      CALL TOU$GET_CONFIG WHENRETURN
      724     6550    4           DO ;
      725     6551    4              CALL TOU$DU_MCA_RESET_STATUS ALTRET (ERROR) ;
      726     6552    4              RETURN;
      727     6553    4           END /* WHENRETURN */ ;
      728     6554    3      WHENALTRETURN
      729     6555    4           DO ;
      730     6556    4              ALTRETURN;
      731     6557    4           END /* WHENALTRETURN */ ;
      732     6558
      733     6559    3   ERROR:
      734     6560    3      ALTRETURN;
      735     6561
      736     6562    3   END M_GET_CONFIG ;
      737     6563        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:30   
      738     6564        /*I* NAME:         M_GET_HEADER
      739     6565             AUTHOR:       Scott S. Sheppard
      740     6566             PURPOSE:      Obtains a Diskette Header
      741     6567             INTERFACE:    M_GET_RESPONSE
      742     6568                           M_HANDLE_ERROR
      743     6569                           TOU$GET_HEADER
      744     6570             PARAMETERS:   DISKETTE - input
      745     6571             DATA:         No external data accessed.
      746     6572             DESCRIPTION:  This procedure  obtains the header information
      747     6573                           for  an  MCA  diskette.   The procedure loops,
      748     6574                           attempting  to read  the information  from the
      749     6575                           diskette  in  the  drive  until  the  data  is
      750     6576                           obtained or an  irrecoverable error occurs. If
      751     6577                           the data is obtained the procedure RETURNS and
      752     6578                           ALTRETURNS otherwise.
      753     6579        */
      754     6580        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:31   
      755     6581    2   M_GET_HEADER: PROC (DISKETTE) ALTRET ;
      756     6582
      757     6583    3      DCL DISKETTE      UBIN WORD ALIGNED ;
      758     6584    3      DCL DATA_OBTAINED BIT (1) ALIGNED ;
      759     6585    3      DCL READ_POSSIBLE BIT (1) ALIGNED ;
      760     6586    3      DCL CUR#          UBIN WORD SYMREF ALIGNED ;
      761     6587
      762     6588        /* Code */
      763     6589
      764     6590    3      DATA_OBTAINED = %FALSE ;
      765     6591    3      READ_POSSIBLE = %TRUE ;
      766     6592    3      CUR# = DISKETTE ;
      767     6593    3      CALL TOU$DU_MCA_RESET_STATUS ALTRET (ERROR) ;
      768     6594
      769     6595    3      DUP.MSG_CODE = %E$MRC_STORY ;
      770     6596    3      CALL TOU$DU_OPERATOR_TEXT ;
      771     6597    3      CALL M_GET_RESPONSE (%E$MGH_LOADQ) ALTRET (ERROR) ;
      772     6598
      773     6599    4      DO WHILE (~DATA_OBTAINED & READ_POSSIBLE) ;
      774     6600    4         CALL TOU$GET_HEADER WHENRETURN
      775     6601    5              DO ;
      776     6602    5                 DATA_OBTAINED = %TRUE ;
      777     6603    5              END /* WHENRETURN */ ;
      778     6604    4         WHENALTRETURN
      779     6605    5              DO ;
      780     6606    5                 CALL M_HANDLE_ERROR (READ_POSSIBLE, DUP.IFAD.DRIVE_NUMBER) ;
      781     6607    5              END /* WHENALTRETURN */ ;
      782     6608    4      END /* WHILE */ ;
      783     6609
      784     6610    3   ERROR:
      785     6611    3      IF DATA_OBTAINED
      786     6612    3      THEN RETURN ;
      787     6613    3      ELSE ALTRETURN ;
      788     6614
      789     6615        /* END M_GET_HEADER */
      790     6616        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:32   
      791     6617        /*I* NAME:         M_HANDLE_ERROR
      792     6618             AUTHOR:       Scott S. Sheppard
      793     6619             PURPOSE:      Handles Diskette I/O Errors
      794     6620             INTERFACE:    M_PROMPT_SAME_DRIVE
      795     6621                           M_PROMPT_NEXT_DRIVE
      796     6622             PARAMETERS:   READ_POSSIBLE - output
      797     6623                           DRIVE_NUMBER - passed to other routines
      798     6624             DATA:         No external data accessed.
      799     6625             DESCRIPTION:  This procedure attempts to handle the kinds of
      800     6626                           errors  that may  arise when  DEER attempts to
      801     6627                           read  the  header  from  an  MCA diskette. The
      802     6628                           header  is  the  first  thing  read  so if the
      803     6629                           shit's  going to  hit the  fan, it will happen
      804     6630                           here.  When  the  M_GET_HEADER  routine fails,
      805     6631                           this  procedure is called  with the STATUS and
      806     6632                           DRIVE_NUMBER  currently  set.   If  the  major
      807     6633                           status is attention diskette, the error may be
      808     6634                           a simple problem such as "DOOR LEFT OPEN." For
      809     6635                           these  types of errors,  DEER prompts the user
      810     6636                           to   determine   if   the   situation  can  be
      811     6637                           corrected,  and  thus  a  re-read  of the same
      812     6638                           drive may be  issued. For more serious errors,
      813     6639                           the operator is asked if  he wishes to try the
      814     6640                           other drive.
      815     6641        */
      816     6642
      817     6643    3   M_HANDLE_ERROR: PROC (READ_POSSIBLE, DRIVE_NUMBER) ;
      818     6644
      819     6645    4      DCL READ_POSSIBLE    BIT (1) ALIGNED ;
      820     6646    4      DCL DRIVE_NUMBER     CHAR (1) CALIGNED ;
      821     6647           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:33   
      822     6648        /* Code */
      823     6649
      824     6650    5      DO SELECT (MCA_B.STATUS.MAJOR) ;
      825     6651    5         SELECT (%ATTN_DISKETTE) ;
      826     6652    6         DO SELECT (MCA_B.STATUS.SUB.VALUE) ;
      827     6653    6            SELECT (%DEV_NOT_PRESENT, %DEV_IN_STANDBY) ;
      828     6654    6            CALL M_PROMPT_SAME_DRIVE WHENRETURN
      829     6655    7                 DO ;
      830     6656    7                    READ_POSSIBLE = %TRUE ;
      831     6657    7                 END /* WHENRETURN */ ;
      832     6658    6            WHENALTRETURN
      833     6659    7                 DO ;
      834     6660    7                    CALL M_PROMPT_NEXT_DRIVE (DRIVE_NUMBER) WHENRETURN
      835     6661    8                         DO ;
      836     6662    8                            READ_POSSIBLE = %TRUE ;
      837     6663    8                         END /* WHENRETURN */ ;
      838     6664    7                    WHENALTRETURN
      839     6665    8                         DO ;
      840     6666    8                            READ_POSSIBLE = %FALSE ;
      841     6667    8                         END /* WHENALTRETURN */ ;
      842     6668    7                 END /* WHENALTRETURN */ ;
      843     6669    6            SELECT (ELSE) ;
      844     6670    6         CALL M_PROMPT_NEXT_DRIVE (DRIVE_NUMBER) WHENRETURN
      845     6671    7              DO ;
      846     6672    7                 READ_POSSIBLE = %TRUE ;
      847     6673    7              END /* WHENRETURN */ ;
      848     6674    6         WHENALTRETURN
      849     6675    7              DO ;
      850     6676    7                 READ_POSSIBLE = %FALSE ;
      851     6677    7              END /* WHENALTRETURN */ ;
      852     6678    6         END /* SELECT */ ;
      853     6679    5      SELECT (ELSE) ;
      854     6680    5      READ_POSSIBLE = %FALSE ;
      855     6681    5      END /* SELECT */ ;
      856     6682    4      RETURN ;
      857     6683        /* END M_HANDLE_ERROR */
      858     6684        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:34   
      859     6685        /*I* NAME:         M_PROMPT_SAME_DRIVE
      860     6686             AUTHOR:       Scott S. Sheppard
      861     6687             PURPOSE:      Asks operator to try on same drive
      862     6688             INTERFACE:    M_GET_RESPONSE
      863     6689                           TOU$DU_OPERATOR_TEXT
      864     6690             DATA:         No external data accessed.
      865     6691             DESCRIPTION:  This procedure determines if the operartor wishes
      866     6692                           to do a read  on the same drive that currently
      867     6693                           had a read failure.
      868     6694        */
      869     6695
      870     6696    4   M_PROMPT_SAME_DRIVE: PROC ALTRET ;
      871     6697
      872     6698        /* Code */
      873     6699
      874     6700    5      DUP.MSG_CODE = %E$MPSD_SAME ;
      875     6701    5      CALL TOU$DU_OPERATOR_TEXT ;
      876     6702    5      CALL M_GET_RESPONSE (%E$MPSD_SAMEQ) WHENRETURN
      877     6703    6           DO ;
      878     6704    6              RETURN ;
      879     6705    6           END /* WHENRETURN */ ;
      880     6706    5      WHENALTRETURN
      881     6707    6           DO ;
      882     6708    6              ALTRETURN ;
      883     6709    6           END /* WHENALTRETURN */ ;
      884     6710
      885     6711    5   END M_PROMPT_SAME_DRIVE ;
      886     6712        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:35   
      887     6713        /*I* NAME:         M_PROMPT_NEXT_DRIVE
      888     6714             AUTHOR:       Scott S. Sheppard
      889     6715             PURPOSE:      Asks operator to try on other drive
      890     6716             INTERFACE:    M_GET_RESPONSE
      891     6717                           TOU$DU_OPERATOR_TEXT
      892     6718             PARAMETERS:   DRIVE_NUMBER - input / output
      893     6719             DATA:         No external data accessed.
      894     6720             DESCRIPTION:  This  procedure determines if  the user wishes
      895     6721                           to do a read  on the next drive on the IMU. An
      896     6722                           IMU may at most have  2  drives,  drive 0  and
      897     6723                           drive 1.    DEER processing always starts with
      898     6724                           drive 1 and then reverts to drive 0 if needed.
      899     6725        */
      900     6726
      901     6727    4   M_PROMPT_NEXT_DRIVE: PROC (DRIVE_NUMBER) ALTRET ;
      902     6728
      903     6729    5      DCL DRIVE_NUMBER CHAR (1) CALIGNED ;
      904     6730
      905     6731    5      IF DRIVE_NUMBER = '1'
      906     6732    6      THEN DO ;
      907     6733    6              DUP.MSG_CODE = %E$MPND_NEXT ;
      908     6734    6              CALL TOU$DU_OPERATOR_TEXT ;
      909     6735    6              CALL M_GET_RESPONSE (%E$MPND_NEXTQ) WHENRETURN
      910     6736    7                   DO ;
      911     6737    7                      DRIVE_NUMBER = '0' ;
      912     6738    7                      RETURN ;
      913     6739    7                   END /* WHENRETURN */ ;
      914     6740    6              WHENALTRETURN
      915     6741    7                   DO ;
      916     6742    7                      ALTRETURN ;
      917     6743    7                   END /* WHENALTRETURN */ ;
      918     6744    6           END /* THEN */ ;
      919     6745    5      ELSE ALTRETURN ;
      920     6746
      921     6747    5   END M_PROMPT_NEXT_DRIVE ;
      922     6748    4   END M_HANDLE_ERROR ;
      923     6749    3   END M_GET_HEADER ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:36   
      924     6750        /*I* NAME:         M_CHECK_TND_DISKETTE
      925     6751             AUTHOR:       Scott S. Sheppard
      926     6752                           Kathy Larkin
      927     6753             PURPOSE:      Ensures that a diskette is for T&D
      928     6754             INTERFACE:    ADDR function
      929     6755                           TOU$DU_OPERATOR_TEXT
      930     6756             PARAMETERS:   None passed.
      931     6757             DATA:         MCA_B.DISKETTE_HEADER.DATA - input
      932     6758                              DISKETTE_HEADER.TITLE
      933     6759                              DISKETTE_HEADER.DISK_TYPE
      934     6760                           DUP.MSG_CODE - output
      935     6761                           CUR# - output
      936     6762             DESCRIPTION:  This procedure is  the first level of checking
      937     6763                           for a  diskette that has been  inserted into a
      938     6764                           drive  on  the   DIPPER  box.  This  procedure
      939     6765                           ensures  that the  diskette is  actually a TND
      940     6766                           diskette.
      941     6767                              DISK_TYPE binary should be: 3 for UTIL
      942     6768                                               error  if: 1 for PHXSHP
      943     6769                                                          2 for PRODFW
      944     6770        */
      945     6771        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:37   
      946     6772    2   M_CHECK_TND_DISKETTE: PROC ALTRET ;
      947     6773
      948     6774    3      DCL PTR$        PTR ALIGNED ;
      949     6775    3      DCL CUR#        UBIN WORD SYMREF ALIGNED ;
      950     6776           %DISKETTE_HEADER (STCLASS = "BASED (PTR$)") ;
      951     6812
      952     6813        /* Code */
      953     6814
      954     6815    3      PTR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;
      955     6816    3      IF SUBSTR (DISKETTE_HEADER.TITLE, 0, 4) = 'UTIL'
      956     6817    3      THEN IF DISKETTE_HEADER.DISK_TYPE = 3
      957     6818    4         THEN DO;
      958     6819    4                 IF (DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB = '001') OR
      959     6820    4                         (DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB = 'XXX')
      960     6821    5                 THEN DO;  /* GET TAB FROM  MCA CONFIG */
      961     6822    5                         DUP.IFAD.IMU_TAB = %TRUE;
      962     6823    5                         DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB =
      963     6824    5                                 DUP.IFAD.CONFIG_TAB ;
      964     6825    5                      END; /* THEN DO */
      965     6826    4                 ELSE ; /* ALL OK, LEAVE DISKETTE_HEADER ASIS */
      966     6827    4                 RETURN;
      967     6828    4              END; /* THEN DO */
      968     6829    4         ELSE DO ;
      969     6830    4                 DUP.MSG_CODE = %E$MCTD_BAD_DISK_TYPE ;
      970     6831    4                 CUR# = DISKETTE_HEADER.DISK_TYPE ;
      971     6832    4              END /* ELSE */ ;
      972     6833    3      ELSE DUP.MSG_CODE = %E$MCTD_BAD_DISK_TITLE ;
      973     6834
      974     6835    3      CALL TOU$DU_OPERATOR_TEXT ;
      975     6836    3      ALTRETURN ;
      976     6837
      977     6838    3   END M_CHECK_TND_DISKETTE ;
      978     6839        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:38   
      979     6840        /*I* NAME:         M_COMPUTE_LAST_DISKETTE
      980     6841             AUTHOR:       Scott S. Sheppard
      981     6842             PURPOSE:      Computes last diskette of product set
      982     6843             INTERFACE:    ADDR function
      983     6844                           TOU$DU_OPERATOR_TEXT
      984     6845             PARAMETERS:   LAST_DISKETTE - output
      985     6846                           PRODUCT_SET - output
      986     6847             DATA:         MCA_B.DISKETTE_HEADER.DATA - input
      987     6848                           DISKETTE_HEADER.TITLE
      988     6849                           DISKETTE_HEADER.X_OF_N
      989     6850             DESCRIPTION:  This   procedure  determines   the  number  of
      990     6851                           diskettes  in  the  diskette  product set. The
      991     6852                           routine  M_CHECK_PRODUCT_SET ensures  that the
      992     6853                           diskettes are mounted  in the proper sequence.
      993     6854                           This routine merely ensures that diskette 1 is
      994     6855                           mounted  first. If  it is  the header when has
      995     6856                           already  been  read  is  overlaid  and  the  N
      996     6857                           portion of the X of N field is grabbed.
      997     6858
      998     6859                           This procedure also sets the PRODUCT_SET param
      999     6860                           so other diskettes  for  the  same product set
     1000     6861                           may be checked for a match.
     1001     6862        */
     1002     6863        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:39   
     1003     6864    2   M_COMPUTE_LAST_DISKETTE: PROC (LAST_DISKETTE, PRODUCT_SET) ALTRET ;
     1004     6865
     1005     6866    3      DCL LAST_DISKETTE  UBIN WORD ALIGNED ;
     1006     6867    3      DCL 1 PRODUCT_SET,
     1007     6868    3            2 EQUIP_TYPE  CHAR (4) CALIGNED,
     1008     6869    3            2 DWG_NUM     CHAR (12) CALIGNED,
     1009     6870    3            2 NUM_TAB     CHAR (3) CALIGNED ;
     1010     6871    3      DCL PTR$           PTR ALIGNED ;
     1011     6872           %DISKETTE_HEADER (STCLASS = "BASED (PTR$)") ;
     1012     6908
     1013     6909        /* Code */
     1014     6910
     1015     6911    3      PTR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;
     1016     6912    3      IF (DISKETTE_HEADER.X_OF_N.X = '1')
     1017     6913    4      THEN DO ;
     1018     6914    4              CALL CHARBIN (LAST_DISKETTE, DISKETTE_HEADER.X_OF_N.N) ;
     1019     6915    4              PRODUCT_SET.EQUIP_TYPE = DISKETTE_HEADER.EQUIP_TYPE ;
     1020     6916    4              PRODUCT_SET.DWG_NUM = DISKETTE_HEADER.DISK_DWG_NUM ;
     1021     6917    4              PRODUCT_SET.NUM_TAB = DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB ;
     1022     6918    4              RETURN ;
     1023     6919    4           END /* THEN */ ;
     1024     6920    4      ELSE DO ;
     1025     6921    4              DUP.MSG_CODE = %E$MCLD_NOT_FIRST ;
     1026     6922    4              CALL TOU$DU_OPERATOR_TEXT ;
     1027     6923    4              ALTRETURN ;
     1028     6924    4           END /* ELSE */ ;
     1029     6925
     1030     6926    3   END M_COMPUTE_LAST_DISKETTE ;
     1031     6927        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:40   
     1032     6928        /*I* NAME:         M_CHECK_ALREADY_MERGED
     1033     6929             AUTHOR:       Scott S. Sheppard
     1034     6930             PURPOSE:      ensures that a diskette set is not mounted twice
     1035     6931             INTERFACE:    ADDR function
     1036     6932                           BINCHAR function
     1037     6933                           CONCAT function
     1038     6934                           TOU$DFU_DF_CHECK_ALREADY_SAVED
     1039     6935                           TOU$DU_USER_WRITE
     1040     6936             PARAMETERS:   None passed.
     1041     6937             DATA:         MCA_B.DISKETTE_HEADER.DATA - input
     1042     6938                              DISKETTE_HEADER.EQUIP_TYPE
     1043     6939                              DISKETTE_HEADER.DISK_DWG_NUM
     1044     6940                              DISKETTE_HEADER.X_OF_N.N
     1045     6941                           OBJECT_KEY.DATA - output
     1046     6942                           DUP.MSG_CODE - output
     1047     6943             DESCRIPTION:  This procedure ensures that a diskette product
     1048     6944                           set  is not  mounted twice.  This procedure is
     1049     6945                           called  after the  header information  is read
     1050     6946                           from the diskette. This information is used to
     1051     6947                           set up  the deckfile object key  for the first
     1052     6948                           hdr file of the  product set.  A keyed read is
     1053     6949                           then  done  on   the  deckfile.  If  the  read
     1054     6950                           returns, the key exists, and thus the diskette
     1055     6951                           product set must  have already been merged in.
     1056     6952                           Note,  this  is  possible  because each time a
     1057     6953                           diskette product set is modified, the diskette
     1058     6954                           product  tab number changes.  Hence, a product
     1059     6955                           set  can uniquely  be identified  by equipment
     1060     6956                           type and product tab number.
     1061     6957        */
     1062     6958        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:41   
     1063     6959    2   M_CHECK_ALREADY_MERGED: PROC ALTRET ;
     1064     6960
     1065     6961    3      DCL HDR$        PTR ALIGNED ;
     1066     6962           %DISKETTE_HEADER (STCLASS = "BASED (HDR$)") ;
     1067     6998
     1068     6999        /* Code */
     1069     7000
     1070     7001           /* set up the object key for the first diskette header */
     1071     7002    3      HDR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;
     1072     7003    3      CALL CONCAT (OBJECT_KEY.DATA,
     1073     7004    3              'H',
     1074     7005    3              DISKETTE_HEADER.EQUIP_TYPE,
     1075     7006    3              DISKETTE_HEADER.UNIQUE_ID,
     1076     7007    3              DISKETTE_HEADER.X_OF_N_,
     1077     7008    3              DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB,
     1078     7009    3              '000') ;
     1079     7010
     1080     7011           /* see if the key exists in the deckfile */
     1081     7012    3      CALL TOU$DFU_DF_CHECK_FOR_KEY WHENRETURN
     1082     7013    4           DO ;
     1083     7014    4              DUP.MSG_CODE = %E$MSH_ALREADY_IN ;
     1084     7015    4              CALL TOU$DU_USER_WRITE ;
     1085     7016    4              ALTRETURN ;
     1086     7017    4           END /* WHENRETURN */ ;
     1087     7018    3      WHENALTRETURN
     1088     7019    4           DO ;
     1089     7020    4              RETURN ;
     1090     7021    4           END /* WHENALTRETURN */ ;
     1091     7022
     1092     7023    3   END M_CHECK_ALREADY_MERGED ;
     1093     7024        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:42   
     1094     7025        /*I* NAME:         M_CHECK_PRODUCT_SET
     1095     7026             AUTHOR:       Scott S. Sheppard
     1096     7027             PURPOSE:      Checks product set and sequence number
     1097     7028             INTERFACE:    ADDR function
     1098     7029                           TOU$DU_OPERATOR_TEXT
     1099     7030             PARAMETERS:   DISKETTE - input
     1100     7031                           PRODUCT_SET - input
     1101     7032             DATA:         DUP.ERROR_IMAGE - output
     1102     7033                           CUR# - output
     1103     7034                           MCA_B.DISKETTE_HEADER.DATA - input
     1104     7035                           DISKETTE_HEADER.DISK_DWG_NUM
     1105     7036                           DISKETTE_HEADER.X_OF_N.X
     1106     7037             DESCRIPTION:  Dipper diskettes may be part of a product set.
     1107     7038                           A product set may be 3 diskettes, 1, 2, and 3.
     1108     7039                           This  procedure  checks  to  ensure  that if a
     1109     7040                           product set is  being added into the deckfile,
     1110     7041                           the diskettes are mounted in the proper order.
     1111     7042        */
     1112     7043
     1113     7044    2   M_CHECK_PRODUCT_SET: PROC (DISKETTE, PRODUCT_SET) ALTRET ;
     1114     7045
     1115     7046    3      DCL DISKETTE    UBIN WORD ALIGNED ;
     1116     7047    3      DCL DISKETTE_X  UBIN WORD ALIGNED ;
     1117     7048    3      DCL 1 PRODUCT_SET,
     1118     7049    3            2 EQUIP_TYPE  CHAR (4) CALIGNED,
     1119     7050    3            2 DWG_NUM     CHAR (12) CALIGNED,
     1120     7051    3            2 NUM_TAB     CHAR (3) CALIGNED ;
     1121     7052    3      DCL PTR$        PTR ALIGNED ;
     1122     7053    3      DCL CUR#        UBIN WORD SYMREF ALIGNED ;
     1123     7054           %DISKETTE_HEADER (STCLASS = "BASED (PTR$)") ;
     1124     7090           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:43   
     1125     7091        /* Code */
     1126     7092
     1127     7093    3      PTR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;
     1128     7094    3      IF DISKETTE_HEADER.EQUIP_TYPE = PRODUCT_SET.EQUIP_TYPE
     1129     7095    4      THEN DO;
     1130     7096    4              IF NOT DUP.IFAD.IMU_TAB
     1131     7097    5              THEN DO;
     1132     7098    5                      IF DISKETTE_HEADER.DISK_DWG_NUM ~= PRODUCT_SET.DWG_NUM
     1133     7099    6                      THEN DO;
     1134     7100    6                              DUP.MSG_CODE = %E$MCPS_WRONG_DWGNUM ;
     1135     7101    6                              DUP.ERROR_IMAGE = PRODUCT_SET.DWG_NUM ;
     1136     7102    6                              GOTO M_PS_ERROR;
     1137     7103    6                           END; /* THEN DO */
     1138     7104    5                      ELSE IF DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB ~=
     1139     7105    5                                 PRODUCT_SET.NUM_TAB
     1140     7106    6                         THEN DO ;
     1141     7107    6                                 DUP.MSG_CODE = %E$MCPS_WRONG_NUMTAB ;
     1142     7108    6                                 DUP.ERROR_IMAGE = PRODUCT_SET.NUM_TAB ;
     1143     7109    6                                 GOTO M_PS_ERROR;
     1144     7110    6                              END; /* THEN DO */
     1145     7111    5                   END; /* THEN DO */
     1146     7112    4           END ; /* IF DISKETTE_HEADER.EQUIP_TYPE   THEN DO */
     1147     7113    4      ELSE DO ;
     1148     7114    4              DUP.MSG_CODE = %E$MCPS_WRONG_EQUIP ;
     1149     7115    4              DUP.ERROR_IMAGE = PRODUCT_SET.EQUIP_TYPE ;
     1150     7116    4              GOTO M_PS_ERROR;
     1151     7117    4           END; /* ELSE DO */
     1152     7118    3      CALL CHARBIN (DISKETTE_X, DISKETTE_HEADER.X_OF_N.X) ;
     1153     7119    3      IF DISKETTE_X = DISKETTE
     1154     7120    3      THEN RETURN ;
     1155     7121    4      ELSE DO;
     1156     7122    4              DUP.MSG_CODE = %E$MCPS_WRONG_DISK;
     1157     7123    4              CUR# = DISKETTE;
     1158     7124    4           END; /* ELSE DO */
     1159     7125    3   M_PS_ERROR:
     1160     7126    3      CALL TOU$DU_OPERATOR_TEXT;
     1161     7127    3      ALTRETURN;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:44   
     1162     7128
     1163     7129    3   END M_CHECK_PRODUCT_SET ;
     1164     7130        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:45   
     1165     7131        /*I* NAME:         M_COMPUTE_LAST_DIR
     1166     7132             AUTHOR:       Scott S. Sheppard
     1167     7133             PURPOSE:      Computes Last Directory Index
     1168     7134             INTERFACE:    None called.
     1169     7135             PARAMETERS:   LAST_DIR - output
     1170     7136             DATA:         MCA_B.DIRECTORY.SIZE - input
     1171     7137             DESCRIPTION:  When a directory is read, the size in bytes is
     1172     7138                           stored in MCA_B.DIRECTORY.SIZE.     Since each
     1173     7139                           directory  entry  is  16  bytes, the number of
     1174     7140                           directories  can be  computed by  dividing the
     1175     7141                           size by  the length of a  directory. Since the
     1176     7142                           computed value  is used as the  upper bound of
     1177     7143                           an  iterative loop,  the last  directory index
     1178     7144                           instead  of  the   number  of  directories  is
     1179     7145                           returned, i.e. NUMBER - 1.
     1180     7146        */
     1181     7147
     1182     7148    2   M_COMPUTE_LAST_DIR: PROC (LAST_DIR) ;
     1183     7149
     1184     7150    3      DCL LAST_DIR  UBIN WORD ALIGNED ;
     1185     7151
     1186     7152        /* Code */
     1187     7153
     1188     7154    3      LAST_DIR = (MCA_B.DIRECTORY.SIZE / 16) - 1 ;
     1189     7155    3      RETURN ;
     1190     7156
     1191     7157    3   END M_COMPUTE_LAST_DIR ;
     1192     7158        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:46   
     1193     7159        /*I* NAME:         M_GET_NEXT_DECK
     1194     7160             AUTHOR:       Scott S. Sheppard
     1195     7161             PURPOSE:      advances to the next deck
     1196     7162             INTERFACE:    INDEX function
     1197     7163                           SUBSTR function
     1198     7164             PARAMETERS:   None passed.
     1199     7165             DATA:         LAST.DECK# - output
     1200     7166                           LAST.EDIT_NAME - output
     1201     7167             DESCRIPTION:  This procedure advances program values so that
     1202     7168                           they may be used  for the next objecxt deck to
     1203     7169                           be stored. The last deck number is incremented
     1204     7170                           by one and the last edit name is advanced. The
     1205     7171                           last  edit name  is a  four character sequence
     1206     7172                           which  begins  with  a  $  sign  followed by 3
     1207     7173                           characters.  The  3  character  portion  is  a
     1208     7174                           sequence:
     1209     7175                              000
     1210     7176                              001
     1211     7177                              002
     1212     7178                              .
     1213     7179                              .
     1214     7180                              .
     1215     7181                              00Z
     1216     7182                              010
     1217     7183                              .
     1218     7184                              .
     1219     7185                              .
     1220     7186                              ZZZ
     1221     7187        */
     1222     7188        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:47   
     1223     7189    2   M_GET_NEXT_DECK: PROC ;
     1224     7190
     1225     7191    3      DCL CHANGE_NEEDED BIT (1) CALIGNED ;
     1226     7192    3      DCL POSITION      UBIN WORD ALIGNED ;
     1227     7193    3      DCL INX           UBIN WORD ALIGNED ;
     1228     7194    3      DCL STRING        CHAR (0) CONSTANT CALIGNED INIT
     1229     7195    3             ('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') ;
     1230     7196
     1231     7197        /* Code */
     1232     7198
     1233     7199    3      LAST.DECK# = LAST.DECK# + 1 ;
     1234     7200    3      CHANGE_NEEDED = %TRUE ;
     1235     7201    3      POSITION = 3 ;
     1236     7202    4      DO WHILE (CHANGE_NEEDED) ;
     1237     7203    5         DO SELECT (SUBSTR (LAST.EDIT_NAME, POSITION, 1)) ;
     1238     7204    5            SELECT ('Z') ;
     1239     7205    5            SUBSTR (LAST.EDIT_NAME, POSITION, 1) = '0' ;
     1240     7206    5            IF POSITION > 1
     1241     7207    6            THEN DO ;
     1242     7208    6                    CHANGE_NEEDED = %TRUE ;
     1243     7209    6                    POSITION = POSITION - 1 ;
     1244     7210    6                 END /* THEN */ ;
     1245     7211    5            ELSE CHANGE_NEEDED = %FALSE ;
     1246     7212    5            SELECT (ELSE) ;
     1247     7213    5         CALL INDEX (INX, SUBSTR (LAST.EDIT_NAME, POSITION, 1), STRING, 0);
     1248     7214    5         SUBSTR (LAST.EDIT_NAME, POSITION, 1) = SUBSTR (STRING, INX+1, 1) ;
     1249     7215    5         CHANGE_NEEDED = %FALSE ;
     1250     7216    5         END /* SELECT */ ;
     1251     7217    4      END /* WHILE */ ;
     1252     7218    3      RETURN ;
     1253     7219
     1254     7220    3   END M_GET_NEXT_DECK ;
     1255     7221        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:48   
     1256     7222        /*I*  NAME:        M_STORE_OBJECT_DECK
     1257     7223              AUTHORS:     Dave Augustine
     1258     7224                           Scott Sheppard
     1259     7225                           Kathy Larkin
     1260     7226              PURPOSE:     Saves a Binary Deck in Tempfile
     1261     7227              INTERFACE:   TOU$CHECKSUM
     1262     7228                           TOU$MAKE_OBJECT_CARD
     1263     7229                           TOU$MAKE_DIR_OBJECT_CARD
     1264     7230                           TOU$MAKE_HDR_OBJECT_CARD
     1265     7231                           TOU$MAKE_DKEND_CARD
     1266     7232                           TOU$B_SET_OBJECT_KEY
     1267     7233                           TOU$DFU_TF_WR_OBJECT
     1268     7234                           TOU$DFU_TF_WR_FILE
     1269     7235                           TOU$DFU_TF_WR_DIR
     1270     7236                           TOU$DFU_TF_WR_HDR
     1271     7237                           TOU$DFU_TF_WR_BCD_CARDS
     1272     7238                           ADDR function
     1273     7239              PARAMETERS:  TYPE - input ('HEADER', 'DIRECTORY', or 'FILE')
     1274     7240                           SIZE - input
     1275     7241              INPUT:       LAST.DECK#
     1276     7242              OUTPUT:      OBJECT.DECK#
     1277     7243                           OBJECT.BINARY_COUNT - number of sectors
     1278     7244                           OBJECT.TOTAL_COUNT
     1279     7245                           OBJECT.LOAD_SIZE - number of words
     1280     7246                           OBJECT.DECK_CHECKSUM
     1281     7247                           OBJECT.CHECKSUM
     1282     7248                           OBJECT_KEY
     1283     7249                           BINARY_KEY.DECK#
     1284     7250                           BCD_KEY.DECK#
     1285     7251              DESCRIPTION: This procedure saves all of the records for an
     1286     7252                           object deck in the temporary file.
     1287     7253        */
     1288     7254        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:49   
     1289     7255    2   M_STORE_OBJECT_DECK: PROC (TYPE, SIZE) ALTRET ;
     1290     7256
     1291     7257    3      DCL TYPE        CHAR (9)  CALIGNED ;
     1292     7258    3      DCL SIZE        UBIN WORD ALIGNED ;
     1293     7259
     1294     7260        /* Code */
     1295     7261
     1296     7262    3      CALL M_GET_NEXT_DECK ;
     1297     7263
     1298     7264    4      DO SELECT (TYPE) ;
     1299     7265    4         SELECT ('FILE') ;
     1300     7266    4         CALL TOU$MAKE_OBJECT_CARD ALTRET (ERROR) ;
     1301     7267    4         SELECT ('HEADER') ;
     1302     7268    4         CALL TOU$MAKE_HDR_OBJECT_CARD ALTRET (ERROR) ;
     1303     7269    4         SELECT ('DIRECTORY') ;
     1304     7270    4         CALL TOU$MAKE_DIR_OBJECT_CARD ALTRET (ERROR) ;
     1305     7271    4      END /* SELECT */ ;
     1306     7272    3      CALL TOU$MAKE_DKEND_CARD ALTRET (ERROR) ;
     1307     7273    3      CALL TOU$B_SET_OBJECT_KEY ALTRET (ERROR) ;
     1308     7274    3      OBJECT.DECK# = LAST.DECK#;
     1309     7275    3      OBJECT.BINARY_COUNT = (SIZE + 255) / 256 ;
     1310     7276    3      OBJECT.TOTAL_COUNT = OBJECT.BINARY_COUNT + 2 ;
     1311     7277    3      OBJECT.LOAD_SIZE = (SIZE + 3) / 4 ;
     1312     7278    3      OBJECT.DECK_CHECKSUM = 0 ;
     1313     7279    3      CALL TOU$CHECKSUM (0, ADDR (OBJECT), 23, OBJECT.CHECKSUM) ;
     1314     7280
     1315     7281    3      CALL TOU$DFU_TF_WR_OBJECT ALTRET (ERROR) ;
     1316     7282    3      BINARY_KEY.DECK# = OBJECT.DECK# ;
     1317     7283    4      DO SELECT (TYPE) ;
     1318     7284    4         SELECT ('FILE') ;
     1319     7285    4         CALL TOU$DFU_TF_WR_FILE ALTRET (ERROR) ;
     1320     7286    4         SELECT ('HEADER') ;
     1321     7287    4         CALL TOU$DFU_TF_WR_HDR ALTRET (ERROR) ;
     1322     7288    4         SELECT ('DIRECTORY') ;
     1323     7289    4         CALL TOU$DFU_TF_WR_DIR ALTRET (ERROR) ;
     1324     7290    4      END /* SELECT */ ;
     1325     7291
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:50   
     1326     7292    3      BCD_KEY.DECK# = OBJECT.DECK# ;
     1327     7293    3      CALL TOU$DFU_TF_WR_BCD_CARDS ALTRET (ERROR) ;
     1328     7294    3      RETURN ;
     1329     7295
     1330     7296    3   ERROR:
     1331     7297    3      ALTRETURN ;
     1332     7298
     1333     7299    3   END M_STORE_OBJECT_DECK;
     1334     7300        %EJECT;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:51   
     1335     7301        /*I*  NAME:        M_STORE_CATALOG_ENTRY
     1336     7302              AUTHORS:     David M. Augustine
     1337     7303                           Scott S. Sheppard
     1338     7304              PURPOSE:     Saves the Deck as a Catalog Entry
     1339     7305              INTERFACE:   TOU$DFU_TF_WR_CATALOG_ENTRY
     1340     7306              INPUT:       OBJECT_KEY
     1341     7307                           CATALOG_ENTRY_KEY.ENTRY#
     1342     7308                           CATALOG_ENTRY_KEY.ENTRY_COUNT
     1343     7309              OUTPUT:      CATALOG_DATA.CHECKSUM
     1344     7310                           CATALOG_ENTRY_KEY.ENTRY#
     1345     7311                           CATALOG_DATA.ENTRY_COUNT
     1346     7312              DESCRIPTION: This procedure is called to save the object deck as
     1347     7313                           an entry of the current catalog.
     1348     7314        */
     1349     7315
     1350     7316    2   M_STORE_CATALOG_ENTRY: PROC ALTRET ;
     1351     7317
     1352     7318        /* Code */
     1353     7319
     1354     7320    3      CALL TOU$DFU_TF_WR_CATALOG_ENTRY ALTRET (ERROR) ;
     1355     7321    3      CATALOG_ENTRY_KEY.ENTRY# = CATALOG_ENTRY_KEY.ENTRY# + 1;
     1356     7322    3      CATALOG_DATA.ENTRY_COUNT = CATALOG_DATA.ENTRY_COUNT + 1;
     1357     7323    3      RETURN;
     1358     7324
     1359     7325    3   ERROR:
     1360     7326    3      ALTRETURN ;
     1361     7327
     1362     7328    3   END M_STORE_CATALOG_ENTRY;
     1363     7329        %EJECT;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:52   
     1364     7330        /*I*  NAME:        M_STORE_SUBCATALOG
     1365     7331              AUTHORS:     David M. Augustine
     1366     7332                           Scott S. Sheppard
     1367     7333              PURPOSE:     Saves Subcatalog
     1368     7334              INTERFACE:   TOU$DFU_TF_WR_SUBCATALOG
     1369     7335              INPUT:       DUP.IFAD.FID
     1370     7336                           CATALOG_DATA.DECK#
     1371     7337              OUTPUT:      SUBCATALOG_DATA.IFAD_FID
     1372     7338                           SUBCATALOG_DATA.IFAD_FN
     1373     7339                           SUBCATALOG_KEY.DECK#
     1374     7340              DESCRIPTION: This procedure saves the subcatalog information
     1375     7341                           (IFAD file identifier and file number) for  the
     1376     7342                           current catalog being procesed.
     1377     7343        */
     1378     7344
     1379     7345    2   M_STORE_SUBCATALOG: PROC ALTRET ;
     1380     7346
     1381     7347        /* Code */
     1382     7348
     1383     7349    3      SUBCATALOG_KEY.DECK# = CATALOG_DATA.DECK# ;
     1384     7350    3      SUBCATALOG_DATA.IFAD_FID = DUP.IFAD.FID ;
     1385     7351    3      SUBCATALOG_DATA.IFAD_FN = 'diskettes' ;
     1386     7352    3      CALL TOU$DFU_TF_WR_SUBCATALOG ALTRET (ERROR) ;
     1387     7353    3      RETURN ;
     1388     7354
     1389     7355    3   ERROR:
     1390     7356    3      ALTRETURN ;
     1391     7357
     1392     7358    3   END M_STORE_SUBCATALOG ;
     1393     7359        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:53   
     1394     7360        /*I*  NAME:        M_STORE_MASTER_CHANGES
     1395     7361              AUTHORS:     David M. Augustine
     1396     7362                           Scott S. Sheppard
     1397     7363              PURPOSE:     Saves Catalog as a Master Entry
     1398     7364              INTERFACE:   TOU$CHECKSUM
     1399     7365                           TOU$DFU_TF_WR_MASTER_ENTRY
     1400     7366                           TOU$DFU_TF_WR_MASTER_CONTROL
     1401     7367              INPUT:       MASTER_DATA
     1402     7368              OUTPUT:      MASTER_ENTRY_KEY
     1403     7369                           MASTER_DATA
     1404     7370              DESCRIPTION: This procedure saves the current catalog as an entry
     1405     7371                           of the master catalog.
     1406     7372        */
     1407     7373
     1408     7374    2   M_STORE_MASTER_CHANGES: PROC ALTRET ;
     1409     7375
     1410     7376        /* Code */
     1411     7377
     1412     7378    3      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;
     1413     7379    3      MASTER_ENTRY_KEY.ENTRY# = MASTER_DATA.ENTRY_COUNT + 1;
     1414     7380    3      MASTER_DATA.ENTRY_COUNT = MASTER_DATA.ENTRY_COUNT + 1;
     1415     7381    3      CALL TOU$DFU_TF_WR_MASTER_ENTRY ALTRET (ERROR) ;
     1416     7382    3      CALL TOU$DFU_TF_WR_MASTER_CONTROL ALTRET (ERROR) ;
     1417     7383    3      RETURN ;
     1418     7384
     1419     7385    3   ERROR:
     1420     7386    3      ALTRETURN ;
     1421     7387
     1422     7388    3   END M_STORE_MASTER_CHANGES ;
     1423     7389    2   END M_STORE_MCA_DATA ;
     1424     7390        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:54   
     1425     7391        /*I* NAME:         M_SAVE_MCA_DATA
     1426     7392             AUTHOR:       Scott S. Sheppard
     1427     7393             PURPOSE:      Saves TEMP file data into the deckfile
     1428     7394             INTERFACE:    M_PROCESS_TEMP
     1429     7395                           TOU$DFU_OPEN_TEMP
     1430     7396                           TOU$DFU_CLOSE_TEMP
     1431     7397             PARAMETERS:   EXISTED - input
     1432     7398                           FIRST - input
     1433     7399             DATA:         DUP.TEMP.OPEN_TYPE - output
     1434     7400                           DUP.TEMP.CLOSE_TYPE - output
     1435     7401             DESCRIPTION:  This  procedure  is  the  driver  used to read
     1436     7402                           information from the temporary  file and  save
     1437     7403                           it  in  the   deckfile.  The temporary file is
     1438     7404                           used  so  that  no  changes  are  made  to the
     1439     7405                           deckfile  until after  all data  to be altered
     1440     7406                           has successfully been read and validated.
     1441     7407        */
     1442     7408        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:55   
     1443     7409    1   M_SAVE_MCA_DATA: PROC (EXISTED, FIRST) ALTRET ;
     1444     7410
     1445     7411    2      DCL EXISTED BIT (1) ALIGNED ;
     1446     7412    2      DCL FIRST   UBIN WORD ALIGNED ;
     1447     7413
     1448     7414        /* Code */
     1449     7415
     1450     7416    2      DUP.BREAK_DISABLED = %TRUE ;
     1451     7417    2      DUP.TEMP.OPEN_TYPE = %READ_FILE ;
     1452     7418    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;
     1453     7419
     1454     7420    2      CALL M_PROCESS_TEMP (EXISTED, FIRST) ALTRET (ERROR) ;
     1455     7421
     1456     7422    2      DUP.TEMP.CLOSE_TYPE = %DISCARD_FILE ;
     1457     7423    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;
     1458     7424    2      DUP.BREAK_DISABLED = %FALSE ;
     1459     7425    2      RETURN ;
     1460     7426
     1461     7427    2   ERROR:
     1462     7428    2      CALL TOU$DFU_CLOSE_TEMP ;
     1463     7429    2      DUP.BREAK_DISABLED = %FALSE ;
     1464     7430    2      ALTRETURN ;
     1465     7431
     1466     7432        /* END M_SAVE_MCA_DATA */
     1467     7433        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:56   
     1468     7434        /*I*  NAME:        M_PROCESS_TEMP
     1469     7435              AUTHOR:      Scott S. Sheppard
     1470     7436              PURPOSE:     Processes TEMP Input to Deckfile
     1471     7437              INTERFACE:   M_SAVE_MASTER_CHANGES
     1472     7438                           M_SAVE_CATALOG_CONTROL
     1473     7439                           M_SAVE_SUBCATALOG
     1474     7440                           M_SAVE_CATALOG_ENTRY
     1475     7441                           M_SAVE_OBJECT_DECK
     1476     7442                           M_SAVE_LOG
     1477     7443                           M_ADJUST_REFLIST
     1478     7444                           M_SETUP_PRINT
     1479     7445                           TOU$B_PRINT_DECK_LINE
     1480     7446                           M_PRINT_MERGED_MSG
     1481     7447                           M_SAVE_LAST_DECK#
     1482     7448              INPUT:       DEER temporary file - contains catalog records
     1483     7449              OUTPUT:      DECKFILE            - catalog copied in
     1484     7450              DESCRIPTION: This procedure processes the temporary file. It adds
     1485     7451                           in any  object decks  for the catalog  (that are not
     1486     7452                           already in the file) and the catalog control inform-
     1487     7453                           ation to the deckfile.
     1488     7454        */
     1489     7455
     1490     7456    2   M_PROCESS_TEMP: PROC (CATALOG_EXISTED, FIRST_NEW) ALTRET ;
     1491     7457
     1492     7458    3      DCL CATALOG_EXISTED BIT (1) ALIGNED ;
     1493     7459    3      DCL FIRST_NEW       UBIN WORD ALIGNED ;
     1494     7460           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:57   
     1495     7461        /* Code */
     1496     7462
     1497     7463    3      DUP.BREAK_DISABLED = %TRUE ;
     1498     7464    3      IF CATALOG_EXISTED
     1499     7465    3      THEN /* Do Nothing */ ;
     1500     7466    3      ELSE CALL M_SAVE_MASTER_CHANGES ALTRET (ERROR) ;
     1501     7467    3      CALL TOU$ND_SAVE_CATALOG_CONTROL ALTRET (ERROR) ;
     1502     7468    3      CALL M_SAVE_SUBCATALOG ALTRET (ERROR) ;
     1503     7469    3      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;
     1504     7470    4      DO CATALOG_ENTRY_KEY.ENTRY# = FIRST_NEW TO CATALOG_DATA.ENTRY_COUNT ;
     1505     7471    4         CALL M_SAVE_CATALOG_ENTRY ALTRET (ERROR) ;
     1506     7472    4         CALL M_SAVE_OBJECT_DECK ALTRET (ERROR) ;
     1507     7473    4         CALL M_SETUP_PRINT ;
     1508     7474    4         CALL TOU$B_PRINT_DECK_LINE ;
     1509     7475    4      END /* DO */ ;
     1510     7476    3      CALL M_PRINT_MERGED_MSG (CATALOG_EXISTED) ;
     1511     7477    3      CALL TOU$ND_SAVE_LAST_DECK# ALTRET (ERROR) ;
     1512     7478    3      CALL M_SAVE_LOG (CATALOG_EXISTED) ALTRET (ERROR) ;
     1513     7479    3      DUP.BREAK_DISABLED = %FALSE ;
     1514     7480    3      RETURN ;
     1515     7481
     1516     7482    3   ERROR:
     1517     7483    3      DUP.BREAK_DISABLED = %FALSE ;
     1518     7484    3      DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;
     1519     7485    3      DUP.MSG_CODE = %E$NPT_BAD_DECKFILE ;
     1520     7486    3      CALL TOU$DU_USER_WRITE ;
     1521     7487    3      ALTRETURN ;
     1522     7488
     1523     7489    3   END M_PROCESS_TEMP ;
     1524     7490        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:58   
     1525     7491        /*I*  NAME:        M_SAVE_MASTER_CHANGES
     1526     7492              AUTHOR:      Scott S. Sheppard
     1527     7493              PURPOSE:     Saves Master Entry and new Master Control
     1528     7494              INTERFACE:   TOU$DFU_TF_RD_MASTER_CONTROL
     1529     7495                           TOU$DFU_DF_WR_MASTER_CONTROL
     1530     7496                           TOU$DFU_TF_RD_MASTER_ENTRY
     1531     7497                           TOU$DFU_DF_WR_MASTER_ENTRY
     1532     7498              INPUT:       MASTER_DATA
     1533     7499              OUTPUT:      MASTER_ENTRY
     1534     7500              DESCRIPTION: This procedure saves the master entry for the
     1535     7501                           new catalog and the new Master Control.
     1536     7502        */
     1537     7503
     1538     7504    2   M_SAVE_MASTER_CHANGES: PROC ALTRET ;
     1539     7505
     1540     7506        /* Code */
     1541     7507
     1542     7508    3      CALL TOU$DFU_TF_RD_MASTER_CONTROL ALTRET (ERROR) ;
     1543     7509    3      CALL TOU$DFU_DF_WR_MASTER_CONTROL ALTRET (ERROR) ;
     1544     7510    3      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;
     1545     7511    3      MASTER_ENTRY_KEY.ENTRY# = MASTER_DATA.ENTRY_COUNT ;
     1546     7512    3      CALL TOU$DFU_TF_RD_MASTER_ENTRY ALTRET (ERROR) ;
     1547     7513    3      CALL TOU$DFU_DF_WR_MASTER_ENTRY ALTRET (ERROR) ;
     1548     7514    3      RETURN ;
     1549     7515
     1550     7516    3   ERROR:
     1551     7517    3      ALTRETURN ;
     1552     7518
     1553     7519    3   END M_SAVE_MASTER_CHANGES ;
     1554     7520        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:59   
     1555     7521        /*I*  NAME:        M_SAVE_SUBCATALOG
     1556     7522              AUTHOR:      Scott S. Sheppard
     1557     7523              PURPOSE:     Saves Subcatalog
     1558     7524              INTERFACE:   TOU$DFU_TF_RD_SUBCATALOG
     1559     7525                           TOU$DFU_DF_WR_SUBCATALOG
     1560     7526              INPUT:       CATALOG_DATA
     1561     7527              OUTPUT:      SUBCATALOG_KEY
     1562     7528              DESCRIPTION: This procedure saves the  IFAD file id and file
     1563     7529                           number of the new catalog in the subcatalog for
     1564     7530                           the new catalog.
     1565     7531        */
     1566     7532
     1567     7533    2   M_SAVE_SUBCATALOG: PROC ALTRET ;
     1568     7534
     1569     7535        /* Code */
     1570     7536
     1571     7537    3      SUBCATALOG_KEY.DECK# = CATALOG_DATA.DECK# ;
     1572     7538    3      CALL TOU$DFU_TF_RD_SUBCATALOG ALTRET (ERROR) ;
     1573     7539    3      CALL TOU$DFU_DF_WR_SUBCATALOG ALTRET (ERROR) ;
     1574     7540    3      RETURN ;
     1575     7541
     1576     7542    3   ERROR:
     1577     7543    3      ALTRETURN ;
     1578     7544
     1579     7545    3   END M_SAVE_SUBCATALOG ;
     1580     7546        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:60   
     1581     7547        /*I*  NAME:        M_SAVE_CATALOG_ENTRY
     1582     7548              AUTHOR:      Scott S. Sheppard
     1583     7549              PURPOSE:     Saves Catalog Entry
     1584     7550              INTERFACE:   TOU$DFU_TF_RD_CATALOG_ENTRY
     1585     7551                           TOU$DFU_DF_WR_CATALOG_ENTRY
     1586     7552              INPUT:       CATALOG_ENTRY
     1587     7553              OUTPUT:      CATALOG_ENTRY
     1588     7554              DESCRIPTION: This procedure save a catalog entry for an object
     1589     7555                           deck of the new catalog.
     1590     7556        */
     1591     7557
     1592     7558    2   M_SAVE_CATALOG_ENTRY: PROC ALTRET ;
     1593     7559
     1594     7560        /* Code */
     1595     7561
     1596     7562    3      CALL TOU$DFU_TF_RD_CATALOG_ENTRY ALTRET (ERROR) ;
     1597     7563    3      CALL TOU$DFU_DF_WR_CATALOG_ENTRY ALTRET (ERROR) ;
     1598     7564    3      RETURN ;
     1599     7565
     1600     7566    3   ERROR:
     1601     7567    3      ALTRETURN ;
     1602     7568
     1603     7569    3   END M_SAVE_CATALOG_ENTRY ;
     1604     7570        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:61   
     1605     7571        /*I*  NAME:        M_SAVE_OBJECT_DECK
     1606     7572              PURPOSE:     Saves an Object Deck in the deckfile
     1607     7573              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
     1608     7574                           M_SAVE_NEW_DECK
     1609     7575                           M_REPLACE_OLD_DECK
     1610     7576              INPUT:       OBJECT_KEY
     1611     7577              OUTPUT:      Appropriate module called to proces the deck
     1612     7578              DESCRIPTION: This procedure determines if the deck to be added
     1613     7579                           is already in the deckfile as part of a different
     1614     7580                           catalog.   If the deck exists, the reference list
     1615     7581                           is  changed  to  show  that  the  current catalog
     1616     7582                           references the deck.  If the deck does not exist,
     1617     7583                           the $object, binary, patch, and  $dkend cards are
     1618     7584                           added to the deckfile.
     1619     7585        */
     1620     7586
     1621     7587    2   M_SAVE_OBJECT_DECK: PROC ALTRET ;
     1622     7588
     1623     7589        /* Code */
     1624     7590
     1625     7591    3      CALL TOU$DFU_DF_CHECK_FOR_KEY WHENRETURN
     1626     7592    4           DO ;
     1627     7593    4              CALL M_REPLACE_OLD_DECK ALTRET (ERROR) ;
     1628     7594    4           END /* WHENRETURN */ ;
     1629     7595    3      WHENALTRETURN
     1630     7596    4           DO ;
     1631     7597    4              CALL M_SAVE_NEW_DECK ALTRET (ERROR) ;
     1632     7598    4           END /* WHENALTRETURN */ ;
     1633     7599    3      RETURN ;
     1634     7600
     1635     7601    3   ERROR:
     1636     7602    3      ALTRETURN ;
     1637     7603
     1638     7604        /* END M_SAVE_OBJECT_DECK */
     1639     7605        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:62   
     1640     7606        /*I*  NAME:        M_SAVE_NEW_DECK
     1641     7607              AUTHOR:      Scott S. Sheppard
     1642     7608              PURPOSE:     Saves an Object Deck
     1643     7609              INTERFACE:   TOU$DFU_DF_WR_OBJECT
     1644     7610                           TOU$DFU_TF_RD_FILE
     1645     7611                           TOU$DFU_TF_RD_DIR
     1646     7612                           TOU$DFU_TF_RD_HDR
     1647     7613                           TOU$DFU_DF_WR_FILE
     1648     7614                           TOU$DFU_DF_WR_DIR
     1649     7615                           TOU$DFU_DF_WR_HDR
     1650     7616                           TOU$DFU_TF_RD_BCD_CARDS
     1651     7617                           TOU$DFU_DF_WR_BCD_CARDS
     1652     7618                           TOU$DFU_DF_WR_OBJECT_REFLIST
     1653     7619              INPUT:       OBJECT
     1654     7620              OUTPUT:      BIN#
     1655     7621                           BINARY_KEY
     1656     7622                           BCD_KEY
     1657     7623                           BCD#
     1658     7624                           OBJECT_REFLIST_KEY
     1659     7625                           OBJECT_REFLIST_DATA
     1660     7626              DESCRIPTION: This procedure saves all of the records necessary
     1661     7627                           to add an object deck to the deckfile.    Records
     1662     7628                           are  read  from  the temporary file and  directly
     1663     7629                           copied into the deckfile.
     1664     7630        */
     1665     7631
     1666     7632    3   M_SAVE_NEW_DECK: PROC ALTRET ;
     1667     7633
     1668     7634           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:63   
     1669     7635        /* Code */
     1670     7636
     1671     7637    4      CALL TOU$DFU_TF_RD_OBJECT ALTRET (ERROR) ;
     1672     7638    4      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;
     1673     7639
     1674     7640    4      BINARY_KEY.DECK# = OBJECT.DECK# ;
     1675     7641    4      BIN# = OBJECT.BINARY_COUNT ;
     1676     7642    5      DO SELECT (OBJECT.NIO_BCD.FILE_NAME) ;
     1677     7643    5         SELECT ('DIRECTRY') ;
     1678     7644    5         CALL TOU$DFU_TF_RD_DIR ALTRET (ERROR) ;
     1679     7645    5         CALL TOU$DFU_DF_WR_DIR ALTRET (ERROR) ;
     1680     7646    5         SELECT (ELSE) ;
     1681     7647    5      IF OBJECT.NIO_BCD.CLASS = 'H'
     1682     7648    6      THEN DO ;
     1683     7649    6              CALL TOU$DFU_TF_RD_HDR ALTRET (ERROR) ;
     1684     7650    6              CALL TOU$DFU_DF_WR_HDR ALTRET (ERROR) ;
     1685     7651    6           END /* THEN */ ;
     1686     7652    6      ELSE DO ;
     1687     7653    6              CALL TOU$DFU_TF_RD_FILE ALTRET (ERROR) ;
     1688     7654    6              CALL TOU$DFU_DF_WR_FILE ALTRET (ERROR) ;
     1689     7655    6           END /* ELSE */ ;
     1690     7656    5      END /* SELECT */ ;
     1691     7657
     1692     7658    4      BCD_KEY.DECK# = OBJECT.DECK# ;
     1693     7659    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
     1694     7660    4      CALL TOU$DFU_TF_RD_BCD_CARDS ALTRET (ERROR) ;
     1695     7661    4      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (ERROR) ;
     1696     7662
     1697     7663    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
     1698     7664    4      OBJECT_REFLIST_DATA.NUM_REFS = 1 ;
     1699     7665    4      OBJECT_REFLIST_DATA.REFS.ME#(0) = MASTER_ENTRY_KEY.ENTRY# ;
     1700     7666    4      OBJECT_REFLIST_DATA.REFS.CE#(0) = CATALOG_ENTRY_KEY.ENTRY# ;
     1701     7667    4      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
     1702     7668    4      RETURN ;
     1703     7669
     1704     7670    4   ERROR:
     1705     7671    4      ALTRETURN ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:64   
     1706     7672
     1707     7673    4   END M_SAVE_NEW_DECK ;
     1708     7674        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:65   
     1709     7675        /*I*  NAME:        M_REPLACE_OLD_DECK
     1710     7676              AUTHOR:      Scott S. Sheppard
     1711     7677              PURPOSE:     Saves an Object Deck
     1712     7678              INTERFACE:   TOU$DFU_DF_DL_DECK
     1713     7679                           TOU$DFU_TF_RD_OBJECT
     1714     7680                           TOU$DFU_DF_WR_OBJECT
     1715     7681                           TOU$DFU_TF_RD_FILE
     1716     7682                           TOU$DFU_DF_WR_FILE
     1717     7683                           TOU$DFU_TF_RD_BCD_CARDS
     1718     7684                           TOU$DFU_DF_WR_BCD_CARDS
     1719     7685                           TOU$DFU_DF_RD_OBJECT_REFLIST
     1720     7686                           TOU$DFU_DF_WR_OBJECT_REFLIST
     1721     7687              INPUT:       OBJECT
     1722     7688              OUTPUT:      BIN#
     1723     7689                           BINARY_KEY
     1724     7690                           BCD_KEY
     1725     7691                           BCD#
     1726     7692                           OBJECT_REFLIST_KEY
     1727     7693                           OBJECT_REFLIST_DATA
     1728     7694              DESCRIPTION: This procedure replaces  an existing  object deck
     1729     7695                           with  another  version of the same deck  from the
     1730     7696                           temporary file.   The old version is deleted from
     1731     7697                           the deckfile and the new one is then added.   The
     1732     7698                           deck  in  the  temporary file is keyed  by a deck
     1733     7699                           number that would be used if the deck were a  new
     1734     7700                           deck.
     1735     7701        */
     1736     7702
     1737     7703    3   M_REPLACE_OLD_DECK: PROC ALTRET ;
     1738     7704
     1739     7705    4      DCL OLD_COUNT   UBIN WORD ALIGNED ;
     1740     7706           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:66   
     1741     7707        /* Code */
     1742     7708
     1743     7709    4      BINARY_KEY.DECK# = OBJECT.DECK# ;
     1744     7710    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
     1745     7711    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
     1746     7712    4      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
     1747     7713    4      CALL TOU$DFU_DF_DL_DECK ALTRET (ERROR) ;
     1748     7714
     1749     7715    4      CALL TOU$DFU_TF_RD_OBJECT ALTRET (ERROR) ;
     1750     7716    4      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;
     1751     7717
     1752     7718    4      BINARY_KEY.DECK# = OBJECT.DECK# ;
     1753     7719    4      BIN# = OBJECT.BINARY_COUNT ;
     1754     7720    5      DO SELECT (OBJECT.NIO_BCD.FILE_NAME) ;
     1755     7721    5         SELECT ('DIRECTRY') ;
     1756     7722    5         CALL TOU$DFU_TF_RD_DIR ALTRET (ERROR) ;
     1757     7723    5         CALL TOU$DFU_DF_WR_DIR ALTRET (ERROR) ;
     1758     7724    5         SELECT (ELSE) ;
     1759     7725    5      IF OBJECT.NIO_BCD.CLASS = 'H'
     1760     7726    6      THEN DO ;
     1761     7727    6              CALL TOU$DFU_TF_RD_HDR ALTRET (ERROR) ;
     1762     7728    6              CALL TOU$DFU_DF_WR_HDR ALTRET (ERROR) ;
     1763     7729    6           END /* THEN */ ;
     1764     7730    6      ELSE DO ;
     1765     7731    6              CALL TOU$DFU_TF_RD_FILE ALTRET (ERROR) ;
     1766     7732    6              CALL TOU$DFU_DF_WR_FILE ALTRET (ERROR) ;
     1767     7733    6           END /* ELSE */ ;
     1768     7734    5      END /* SELECT */ ;
     1769     7735           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:67   
     1770     7736
     1771     7737    4      BCD_KEY.DECK# = OBJECT.DECK# ;
     1772     7738    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
     1773     7739    4      CALL TOU$DFU_TF_RD_BCD_CARDS ALTRET (ERROR) ;
     1774     7740    4      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (ERROR) ;
     1775     7741    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
     1776     7742    4      OLD_COUNT = OBJECT_REFLIST_DATA.NUM_REFS ;
     1777     7743    4      OBJECT_REFLIST_DATA.REFS.ME#(OLD_COUNT) = MASTER_ENTRY_KEY.ENTRY# ;
     1778     7744    4      OBJECT_REFLIST_DATA.REFS.CE#(OLD_COUNT) = CATALOG_ENTRY_KEY.ENTRY# ;
     1779     7745    4      OBJECT_REFLIST_DATA.NUM_REFS = OLD_COUNT + 1 ;
     1780     7746    4      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;
     1781     7747    4      RETURN ;
     1782     7748
     1783     7749    4   ERROR:
     1784     7750    4      ALTRETURN ;
     1785     7751
     1786     7752    4   END M_REPLACE_OLD_DECK ;
     1787     7753    3   END M_SAVE_OBJECT_DECK ;
     1788     7754        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:68   
     1789     7755        /*I*  NAME:        M_SAVE_LOG
     1790     7756              AUTHOR:      Scott S. Sheppard
     1791     7757              PURPOSE:     Saves the deckfile history log
     1792     7758              INTERFACE:   TOU$DU_UPDATE_LOG
     1793     7759                           TOU$DFU_DF_WR_LOG
     1794     7760              INPUT:       EXISTED - did the catalog already exist
     1795     7761              OUTPUT:      DUP.LOG.CATALOG
     1796     7762                           DUP.LOG.DECK
     1797     7763                           DUP.HOLD_AREA
     1798     7764              DESCRIPTION: This procedure stores the deckfile history log.
     1799     7765        */
     1800     7766
     1801     7767    2   M_SAVE_LOG: PROC (EXISTED) ALTRET ;
     1802     7768
     1803     7769    3      DCL EXISTED BIT (1) ALIGNED ;
     1804     7770
     1805     7771        /* Code */
     1806     7772
     1807     7773    3      IF EXISTED
     1808     7774    3      THEN DUP.LOG.TYPE = %T$SF_MERGE2 ;
     1809     7775    3      ELSE DUP.LOG.TYPE = %T$SF_MERGE1 ;
     1810     7776    3      DUP.LOG.CATALOG = CATALOG_KEY.DATA ;
     1811     7777    3      DUP.LOG.DECK = ' ' ;
     1812     7778    3      DUP.HOLD_AREA = DUP.IFAD.FID ;
     1813     7779    3      CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;
     1814     7780    3      CALL TOU$DFU_DF_WR_LOG ALTRET (ERROR) ;
     1815     7781    3      RETURN ;
     1816     7782
     1817     7783    3   ERROR:
     1818     7784    3      ALTRETURN ;
     1819     7785
     1820     7786    3   END M_SAVE_LOG ;
     1821     7787        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:69   
     1822     7788        /*I*  NAME:        M_SETUP_PRINT
     1823     7789              AUTHOR:      Scott S. Sheppard
     1824     7790              PURPOSE:     Assign Replacement Variables
     1825     7791              INTERFACE:   None Called.
     1826     7792              INPUT:       OBJECT.BCD.LIBRARY - used to determine GECALL or not
     1827     7793                           OBJECT.BCD.CLASS   - used to determine ITR or MDR
     1828     7794                           BCD_B(BCD#-1)      - $DKEND card saved
     1829     7795              OUTPUT:      DUP.HDR_CODE  - set to correct heading
     1830     7796                           DUP.MSG_CODE  - used to write messages
     1831     7797                           ID.ID         - set for IDENT CODE field
     1832     7798                           ID.REVISION  - set for REV field
     1833     7799                           DKEND         - $DKEND Card Structure
     1834     7800              DESCRIPTION: This procedure assigns variables needed values so
     1835     7801                           that TOU$REPLACE  will insert proper  values  for
     1836     7802                           the dummy ~strings.
     1837     7803        */
     1838     7804
     1839     7805    2   M_SETUP_PRINT: PROC ;
     1840     7806
     1841     7807        /* Code */
     1842     7808
     1843     7809    3      ID.ID = 'DIPPER' ;
     1844     7810    3      DKEND.BCD_ = BCD_B(BCD#-1) ;
     1845     7811    3      ID.REVISION = DKEND.BCD.REVISION ;
     1846     7812    3      DUP.HDR_CODE = %H$MERGE_NIO ;
     1847     7813    3      DUP.MSG_CODE = %T$B_ITR ;
     1848     7814    3      RETURN ;
     1849     7815
     1850     7816    3   END M_SETUP_PRINT ;
     1851     7817        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:70   
     1852     7818        /*I*  NAME:        M_PRINT_MERGED_MSG
     1853     7819              AUTHOR:      Scott S. Sheppard
     1854     7820              PURPOSE:     Prints added Catalog line
     1855     7821              INTERFACE:   TOU$DU_USER_WRITE
     1856     7822                           TOU$DU_PRINTER_WRITE
     1857     7823              INPUT:       T$B_CATALOG
     1858     7824                           T$M_INFORM
     1859     7825              OUTPUT:      DUP.MSG_CODE - integer message number
     1860     7826              DESCRIPTION: This procedure adds the completed catalog message
     1861     7827                           to the edit listing  by calling  TOU$DU_PRINTER_WRITE
     1862     7828                           with the proper message numbers. The catalog info
     1863     7829                           message is also displayed to the user.
     1864     7830        */
     1865     7831
     1866     7832    2   M_PRINT_MERGED_MSG: PROC (CATALOG_EXISTED) ;
     1867     7833
     1868     7834    3      DCL CATALOG_EXISTED BIT (1) ALIGNED ;
     1869     7835
     1870     7836        /* Code */
     1871     7837
     1872     7838    3      DUP.MSG_CODE = %T$B_CATALOG ;
     1873     7839    3      CALL TOU$DU_PRINTER_WRITE ;
     1874     7840    3      IF CATALOG_EXISTED
     1875     7841    3      THEN DUP.MSG_CODE = %T$M_INFORM1 ;
     1876     7842    3      ELSE DUP.MSG_CODE = %T$M_INFORM2 ;
     1877     7843    3      CALL TOU$DU_USER_WRITE ;
     1878     7844    3      CALL TOU$DU_PRINTER_WRITE ;
     1879     7845    3      RETURN ;
     1880     7846
     1881     7847    3   END M_PRINT_MERGED_MSG ;
     1882     7848    2   END M_SAVE_MCA_DATA ;
     1883     7849        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:71   
     1884     7850        /*I*  NAME:        M_GET_RESPONSE
     1885     7851              AUTHOR:      Scott S. Sheppard
     1886     7852                           Kathy Larkin
     1887     7853              PURPOSE:     Get Operator Response
     1888     7854              INTERFACE:   TOU$DU_OPERATOR_TEXT
     1889     7855              INPUT:       No external data accessed.
     1890     7856              PARAMETERS:  DUP.MSG_CODE - input
     1891     7857              DESCRIPTION: This procedure prompts the operator for YES or NO
     1892     7858                           and returns on YES and altreturns otherwise.
     1893     7859        */
     1894     7860
     1895     7861    1   M_GET_RESPONSE: PROC (MSG_CODE) ALTRET ;
     1896     7862
     1897     7863    2      DCL MSG_CODE  UBIN WORD ALIGNED ;
     1898     7864    2      DCL RESPONSE_ CHAR (40) CALIGNED ;
     1899     7865    2      DCL RESPONSE  (0:39) REDEF RESPONSE_ CHAR (1) CALIGNED ;
     1900     7866    2      DCL RESPONSE_LGTH    UBIN WORD ALIGNED ;
     1901     7867    2      DCL CHR_INX   UBIN WORD ALIGNED ;
     1902     7868    2      DCL BL_INX    UBIN WORD ALIGNED ;
     1903     7869    2      DCL VALID_RESPONSE BIT (1) ;
     1904     7870
     1905     7871           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:72   
     1906     7872        /* Code */
     1907     7873    2      VALID_RESPONSE = %FALSE ;
     1908     7874    3      DO UNTIL VALID_RESPONSE ;
     1909     7875    3         DUP.MSG_CODE = MSG_CODE ;
     1910     7876    3         CALL TOU$DU_OPERATOR_TEXT ;
     1911     7877    3         RESPONSE_ = DUP.RESPONSE ;
     1912     7878    3         RESPONSE_LGTH = DUP.RESPONSE_LGTH ;
     1913     7879
     1914     7880              /* Skip leading spaces */
     1915     7881    3         CHR_INX = 0 ;
     1916     7882    4         DO WHILE RESPONSE(CHR_INX) = ' ' & (CHR_INX < RESPONSE_LGTH) ;
     1917     7883    4            CHR_INX = CHR_INX + 1 ;
     1918     7884    4         END /* WHILE */ ;
     1919     7885
     1920     7886              /* Find first blank following first non-blank */
     1921     7887    3         CALL INDEX (BL_INX, ' ', RESPONSE_, CHR_INX) ;
     1922     7888    3         IF (BL_INX > RESPONSE_LGTH)
     1923     7889    3         THEN BL_INX = RESPONSE_LGTH ;
     1924     7890    3         ELSE /* SPACES AFTER RESPONSE */ ;
     1925     7891
     1926     7892              /* Check Response for Yes or No */
     1927     7893    4         DO SELECT (SUBSTR (RESPONSE_, CHR_INX, BL_INX - CHR_INX)) ;
     1928     7894    4            SELECT ('Y', 'YE', 'YES', 'N', 'NO') ;
     1929     7895    4            VALID_RESPONSE = %TRUE ;
     1930     7896    4            SELECT (ELSE) ;
     1931     7897    4         VALID_RESPONSE = %FALSE ;
     1932     7898    4         DUP.MSG_CODE = %E$NVA_INVALID_REPLY ;
     1933     7899    4         CALL TOU$DU_OPERATOR_TEXT ;
     1934     7900    4         END /* SELECT */ ;
     1935     7901    3      END /* UNTIL */ ;
     1936     7902
     1937     7903           /* If not affirmative then take alternate return */
     1938     7904    2      IF RESPONSE(CHR_INX) = 'Y'
     1939     7905    2      THEN RETURN ;
     1940     7906    2      ELSE ALTRETURN ;
     1941     7907
     1942     7908    2   END M_GET_RESPONSE ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:73   
     1943     7909    1   END TOU$MERGE ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:74   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$MERGE.

   Procedure TOU$MERGE requires 1489 words for executable code.
   Procedure TOU$MERGE requires 56 words of local(AUTO) storage.

    No errors detected in file TOU$MERGE.:E05TSI    .

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:75   

 Object Unit name= TOU$MERGE                                  File name= TOU$MERGE.:E05TOU
 UTS= JUL 30 '97 06:47:17.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     39     47  TOU$MERGE
    1   Proc  even  none  1489   2721  TOU$MERGE
    2  RoData even  none    28     34  TOU$MERGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  TOU$MERGE
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:76   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$B_SHOW_DCBS
 yes     yes           Std       0 TOU$DU_OPEN_DF
 yes     yes           Std       0 TOU$DU_CLOSE_MCA
 yes     yes           Std       0 TOU$DU_CLOSE_DF
 yes     yes           Std       0 TOU$DU_OPEN_MCA
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SET_MCA
 yes     yes           Std       0 TOU$DU_SET_DF_FID
 yes     yes           Std       0 TOU$DFU_DF_RD_LAST_DECK#
 yes     yes           Std       0 TOU$DFU_DF_RD_LOG
 yes     yes           Std       0 TOU$DFU_OPEN_TEMP
 yes     yes           Std       0 TOU$CLEAR_IFAD
 yes     yes           Std       0 TOU$B_CHECK_FOR_CATALOG
 yes     yes           Std       0 TOU$DFU_CLOSE_TEMP
 yes     yes           Std       0 TOU$B_GET_CATALOG
 yes     yes           Std       0 TOU$DU_OPERATOR_TEXT
 yes     yes           Std       0 TOU$DFU_TF_WR_CATALOG_CONTROL
 yes     yes           Std       0 TOU$GET_DIRECTORY
 yes     yes           Std       0 TOU$GET_FILE
 yes     yes           Std       0 TOU$DFU_TF_WR_LAST_DECK#
 yes     yes           Std       0 TOU$DFU_DF_RD_CATALOG_CONTROL
 yes     yes           Std       0 TOU$DU_MCA_RESET_STATUS
 yes     yes           Std       0 TOU$GET_CONFIG
 yes     yes           Std       0 TOU$GET_HEADER
 yes     yes           Std       0 TOU$DFU_DF_CHECK_FOR_KEY
 yes     yes           Std       0 TOU$MAKE_OBJECT_CARD
 yes     yes           Std       0 TOU$MAKE_HDR_OBJECT_CARD
 yes     yes           Std       0 TOU$B_SET_OBJECT_KEY
 yes     yes           Std       0 TOU$MAKE_DIR_OBJECT_CARD
 yes     yes           Std       0 TOU$MAKE_DKEND_CARD
 yes     yes           Std       0 TOU$DFU_TF_WR_BCD_CARDS
 yes     yes           Std       4 TOU$CHECKSUM
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:77   
 yes     yes           Std       0 TOU$DFU_TF_WR_OBJECT
 yes     yes           Std       0 TOU$DFU_TF_WR_FILE
 yes     yes           Std       0 TOU$DFU_TF_WR_DIR
 yes     yes           Std       0 TOU$DFU_TF_WR_HDR
 yes     yes           Std       0 TOU$DFU_TF_WR_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DFU_TF_WR_SUBCATALOG
 yes     yes           Std       0 TOU$DFU_TF_WR_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_TF_WR_MASTER_CONTROL
 yes     yes           Std       0 TOU$ND_SAVE_CATALOG_CONTROL
 yes     yes           Std       0 TOU$B_PRINT_DECK_LINE
 yes     yes           Std       0 TOU$ND_SAVE_LAST_DECK#
 yes     yes           Std       0 TOU$DFU_TF_RD_MASTER_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_WR_MASTER_CONTROL
 yes     yes           Std       0 TOU$DFU_TF_RD_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_WR_MASTER_ENTRY
 yes     yes           Std       0 TOU$DFU_TF_RD_SUBCATALOG
 yes     yes           Std       0 TOU$DFU_DF_WR_SUBCATALOG
 yes     yes           Std       0 TOU$DFU_TF_RD_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DFU_DF_WR_CATALOG_ENTRY
 yes     yes           Std       0 TOU$DFU_TF_RD_OBJECT
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT
 yes     yes           Std       0 TOU$DFU_TF_RD_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_WR_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_WR_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_TF_RD_DIR
 yes     yes           Std       0 TOU$DFU_DF_WR_DIR
 yes     yes           Std       0 TOU$DFU_TF_RD_HDR
 yes     yes           Std       0 TOU$DFU_DF_WR_HDR
 yes     yes           Std       0 TOU$DFU_DF_WR_FILE
 yes     yes           Std       0 TOU$DFU_TF_RD_FILE
 yes     yes           Std       0 TOU$DFU_DF_RD_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_DF_DL_DECK
 yes     yes           Std       0 TOU$DU_UPDATE_LOG
 yes     yes           Std       0 TOU$DFU_DF_WR_LOG
 yes     yes           Std       0 TOU$DU_PRINTER_WRITE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:78   
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BCD_CARD                              BCD_KEY                               BINARY_CARD
     BINARY_KEY                            CATALOG_DATA                          CATALOG_ENTRY_KEY
     CATALOG_KEY                           CATALOG_SEARCH_KEY                    DKEND
     DUP                                   ID                                    LAST
     MASTER_DATA                           MASTER_ENTRY_KEY                      OBJECT
     OBJECT_KEY                            OBJECT_REFLIST_KEY                    OBJECT_REFLIST_DATA
     SUBCATALOG_DATA                       SUBCATALOG_KEY                        BCD#
     BIN#                                  CUR#                                  CUR#
     CUR#                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:79   


        1        1        /*M* TOU$MERGE     DEckfile Editor Routine MERGE Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$MERGE
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine MERGE Function
       14       14              DESCRIPTION: This program will provide the  MERGE function for
       15       15                           the DEckfile Editor Routine (DEER).  This program
       16       16                           is  used to  insert  DIPPER diskettes  into  CP-6
       17       17                           deckfiles.
       18       18              REFERENCE:   CP-6 Release C0P0
       19       19              LAST UPDATE: 4/30/84
       20       20        */
       21       21        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:80   
       22       22        /*F*  NAME:        TOU$MERGE
       23       23              DESCRIPTION: Procedure Nesting Hierarchy
       24       24
       25       25              TOU$MERGE: procedure
       26       26
       27       27                 M_INIT_DUP: procedure
       28       28                 M_COMMAND_SETUP: procedure ALTRET
       29       29                 M_GET_CURRENT_DF_VALUES: procedure ALTRET
       30       30                 M_INIT_MCA_B: procedure
       31       31
       32       32                 M_STORE_MCA_DATA: procedure (CE, FE) ALTRET
       33       33                    M_SET_CATALOG_KEY: procedure (KD)
       34       34                    M_PROCESS_MCA_INPUT: procedure (CE, FE) ALTRET
       35       35                    M_GET_HEADER: procedure (D) ALTRET
       36       36                       M_HANDLE_ERROR: procedure (RP, DN)
       37       37                          M_PROMPT_SAME_DRIVE: procedure ALTRET
       38       38                          M_PROMPT_NEXT_DRIVE: procedure (DN) ALTRET
       39       39                    M_SETUP_CATALOG: procedure ALTRET
       40       40                    M_CHECK_TND_DISKETTE: procedure ALTRET
       41       41                    M_COMPUTE_LAST_DISKETTE: procedure (LD, S) ALTRET
       42       42                    M_CHECK_ALREADY_MERGED: procedure ALTRET
       43       43                    M_CHECK_PRODUCT_SET: procedure (D, S) ALTRET
       44       44                    M_COMPUTE_LAST_DIR: procedure (LD)
       45       45                    M_GET_NEXT_DECK: procedure
       46       46                    M_STORE_OBJECT_DECK: procedure ALTRET
       47       47                    M_STORE_CATALOG_ENTRY: procedure ALTRET
       48       48                    M_STORE_SUBCATALOG: procedure ALTRET
       49       49                    M_STORE_MASTER_CHANGES: procedure ALTRET
       50       50
       51       51                 M_SAVE_MCA_DATA: procedure (CE, FE) ALTRET
       52       52                    M_PROCESS_TEMP: procedure (CE, FE) ALTRET
       53       53                    M_SAVE_MASTER_CHANGES: procedure ALTRET
       54       54                    M_SAVE_SUBCATALOG: procedure ALTRET
       55       55                    M_SAVE_CATALOG_ENTRY: procedure ALTRET
       56       56                    M_SAVE_OBJECT_DECK: procedure ALTRET
       57       57                       M_SAVE_NEW_DECK: procedure ALTRET
       58       58                       M_REPLACE_OLD_DECK: procedure ALTRET
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:81   
       59       59                    M_SAVE_LOG: procedure ALTRET
       60       60                    M_SETUP_PRINT: procedure
       61       61                    M_PRINT_MERGED_MSG: procedure (CE)
       62       62
       63       63                 M_GET_RESPONSE: procedure (MC) ALTRET
       64       64        */
       65       65        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:82   
       66       66        TOU$MERGE: PROC ;

     66  1 000000   000000 700200 xent  TOU$MERGE    TSX0  ! X66_AUTO_0
         1 000001   000070 000000                    ZERO    56,0

       67       67
       68       68        /* Include Files */
       69       69
       70       70           %INCLUDE TOU_DEER_M ;
       71     1481           %INCLUDE TOU_RQSTS_E ;
       72     1556           %INCLUDE TO_PERR_C ;
       73     2141           %INCLUDE XU_MACRO_C ;
       74     5247
       75     5248        /* Macros */
       76     5249
       77     5250           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       78     5262           %BCD_CARD (STCLASS = SYMREF) ;
       79     5282           %BCD_KEY (STCLASS = SYMREF) ;
       80     5296           %BINARY_CARD (STCLASS = SYMREF) ;
       81     5323           %BINARY_KEY (STCLASS = SYMREF) ;
       82     5337           %CATALOG_DATA (STCLASS = SYMREF) ;
       83     5351           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       84     5365           %CATALOG_KEY (STCLASS = SYMREF) ;
       85     5379           %CATALOG_SEARCH_KEY (STCLASS = SYMREF) ;
       86     5391           %DKEND (STCLASS = SYMREF) ;
       87     5415           %DUP (STCLASS = SYMREF) ;
       88     5558           %ID (STCLASS = SYMREF) ;
       89     5575           %LAST (STCLASS = SYMREF) ;
       90     5588           %MASTER_DATA (STCLASS = SYMREF) ;
       91     5602           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       92     5616           %MCA_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
       93     5686           %OBJECT (STCLASS = SYMREF) ;
       94     5749           %OBJECT_KEY (STCLASS = SYMREF) ;
       95     5762           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       96     5776           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       97     5791           %SUBCATALOG_DATA (STCLASS = SYMREF) ;
       98     5804           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:83   
       99     5818           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:84   
      100     5819        /* Variables */
      101     5820
      102     5821    1      DCL EXISTED                    BIT (1) ALIGNED ;
      103     5822    1      DCL FIRST                      UBIN WORD ALIGNED ;
      104     5823    1      DCL BCD#                       UBIN WORD SYMREF ALIGNED ;
      105     5824    1      DCL BIN#                       UBIN WORD SYMREF ALIGNED ;
      106     5825
      107     5826        /* External Entry Points */
      108     5827
      109     5828    1      DCL TOU$DU_SET_MCA                 ENTRY ALTRET ;
      110     5829    1      DCL TOU$DU_OPEN_MCA                ENTRY ALTRET ;
      111     5830    1      DCL TOU$DU_CLOSE_MCA               ENTRY ALTRET ;
      112     5831    1      DCL TOU$DU_MCA_RESET_STATUS        ENTRY ALTRET ;
      113     5832
      114     5833    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
      115     5834    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
      116     5835    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
      117     5836
      118     5837    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
      119     5838    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
      120     5839    1      DCL TOU$DU_OPERATOR_TEXT           ENTRY ALTRET ;
      121     5840    1      DCL TOU$DU_UPDATE_LOG              ENTRY ALTRET ;
      122     5841
      123     5842    1      DCL TOU$CHECKSUM                   ENTRY (4) ALTRET ;
      124     5843    1      DCL TOU$ND_SAVE_CATALOG_CONTROL    ENTRY ALTRET ;
      125     5844    1      DCL TOU$ND_SAVE_LAST_DECK#         ENTRY ALTRET ;
      126     5845           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:85   
      127     5846        /* External Entry Points */
      128     5847
      129     5848    1      DCL TOU$CLEAR_IFAD                 ENTRY ALTRET ;
      130     5849    1      DCL TOU$GET_HEADER                 ENTRY ALTRET ;
      131     5850    1      DCL TOU$GET_CONFIG                 ENTRY ALTRET ;
      132     5851    1      DCL TOU$GET_DIRECTORY              ENTRY ALTRET ;
      133     5852    1      DCL TOU$GET_FILE                   ENTRY ALTRET ;
      134     5853    1      DCL TOU$MAKE_OBJECT_CARD           ENTRY ALTRET ;
      135     5854    1      DCL TOU$MAKE_DKEND_CARD            ENTRY ALTRET ;
      136     5855    1      DCL TOU$MAKE_DIR_OBJECT_CARD       ENTRY ALTRET ;
      137     5856    1      DCL TOU$MAKE_HDR_OBJECT_CARD       ENTRY ALTRET ;
      138     5857           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:86   
      139     5858        /* External Entry Points */
      140     5859
      141     5860    1      DCL TOU$B_SHOW_DCBS                ENTRY ALTRET ;
      142     5861    1      DCL TOU$B_GET_CATALOG              ENTRY ALTRET ;
      143     5862    1      DCL TOU$B_SET_OBJECT_KEY           ENTRY ALTRET ;
      144     5863    1      DCL TOU$B_PRINT_DECK_LINE          ENTRY ALTRET ;
      145     5864    1      DCL TOU$B_CHECK_FOR_CATALOG        ENTRY ALTRET ;
      146     5865
      147     5866    1      DCL TOU$DFU_DF_RD_CATALOG_CONTROL  ENTRY ALTRET ;
      148     5867    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
      149     5868    1      DCL TOU$DFU_DF_RD_LAST_DECK#       ENTRY ALTRET ;
      150     5869    1      DCL TOU$DFU_DF_RD_LOG              ENTRY ALTRET ;
      151     5870
      152     5871    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
      153     5872    1      DCL TOU$DFU_DF_DL_DECK             ENTRY ALTRET ;
      154     5873
      155     5874    1      DCL TOU$DFU_DF_WR_MASTER_CONTROL   ENTRY ALTRET ;
      156     5875    1      DCL TOU$DFU_DF_WR_MASTER_ENTRY     ENTRY ALTRET ;
      157     5876    1      DCL TOU$DFU_DF_WR_SUBCATALOG       ENTRY ALTRET ;
      158     5877    1      DCL TOU$DFU_DF_WR_CATALOG_ENTRY    ENTRY ALTRET ;
      159     5878    1      DCL TOU$DFU_DF_WR_OBJECT           ENTRY ALTRET ;
      160     5879    1      DCL TOU$DFU_DF_WR_FILE             ENTRY ALTRET ;
      161     5880    1      DCL TOU$DFU_DF_WR_HDR              ENTRY ALTRET ;
      162     5881    1      DCL TOU$DFU_DF_WR_DIR              ENTRY ALTRET ;
      163     5882    1      DCL TOU$DFU_DF_WR_BCD_CARDS        ENTRY ALTRET ;
      164     5883    1      DCL TOU$DFU_DF_WR_OBJECT_REFLIST   ENTRY ALTRET ;
      165     5884    1      DCL TOU$DFU_DF_WR_LOG              ENTRY ALTRET ;
      166     5885           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:87   
      167     5886        /* External Entry Points */
      168     5887
      169     5888    1      DCL TOU$DFU_OPEN_TEMP              ENTRY ALTRET ;
      170     5889    1      DCL TOU$DFU_CLOSE_TEMP             ENTRY ALTRET ;
      171     5890
      172     5891    1      DCL TOU$DFU_TF_RD_MASTER_CONTROL   ENTRY ALTRET ;
      173     5892    1      DCL TOU$DFU_TF_RD_MASTER_ENTRY     ENTRY ALTRET ;
      174     5893    1      DCL TOU$DFU_TF_RD_SUBCATALOG       ENTRY ALTRET ;
      175     5894    1      DCL TOU$DFU_TF_RD_CATALOG_ENTRY    ENTRY ALTRET ;
      176     5895    1      DCL TOU$DFU_TF_RD_OBJECT           ENTRY ALTRET ;
      177     5896    1      DCL TOU$DFU_TF_RD_FILE             ENTRY ALTRET ;
      178     5897    1      DCL TOU$DFU_TF_RD_HDR              ENTRY ALTRET ;
      179     5898    1      DCL TOU$DFU_TF_RD_DIR              ENTRY ALTRET ;
      180     5899    1      DCL TOU$DFU_TF_RD_BCD_CARDS        ENTRY ALTRET ;
      181     5900
      182     5901    1      DCL TOU$DFU_TF_WR_MASTER_CONTROL   ENTRY ALTRET ;
      183     5902    1      DCL TOU$DFU_TF_WR_MASTER_ENTRY     ENTRY ALTRET ;
      184     5903    1      DCL TOU$DFU_TF_WR_CATALOG_CONTROL  ENTRY ALTRET ;
      185     5904    1      DCL TOU$DFU_TF_WR_SUBCATALOG       ENTRY ALTRET ;
      186     5905    1      DCL TOU$DFU_TF_WR_CATALOG_ENTRY    ENTRY ALTRET ;
      187     5906    1      DCL TOU$DFU_TF_WR_OBJECT           ENTRY ALTRET ;
      188     5907    1      DCL TOU$DFU_TF_WR_FILE             ENTRY ALTRET ;
      189     5908    1      DCL TOU$DFU_TF_WR_DIR              ENTRY ALTRET ;
      190     5909    1      DCL TOU$DFU_TF_WR_HDR              ENTRY ALTRET ;
      191     5910    1      DCL TOU$DFU_TF_WR_BCD_CARDS        ENTRY ALTRET ;
      192     5911    1      DCL TOU$DFU_TF_WR_LAST_DECK#       ENTRY ALTRET ;
      193     5912           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:88   
      194     5913        /* ********************
      195     5914           ********************
      196     5915           **  Main Program  **
      197     5916           ********************
      198     5917           ******************** */
      199     5918
      200     5919    1      CALL M_INIT_DUP ;

   5919  1 000002   000067 701000 1                  TSX1    M_INIT_DUP
         1 000003   000000 011000                    NOP     0

      201     5920    1      CALL M_COMMAND_SETUP ALTRET (ERROR_RETURN) ;

   5920  1 000004   000114 701000 1                  TSX1    M_COMMAND_SETUP
         1 000005   000053 702000 1                  TSX2    ERROR_RETURN

      202     5921    1      CALL TOU$B_SHOW_DCBS ;

   5921  1 000006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000007   000000 701000 xent               TSX1    TOU$B_SHOW_DCBS
         1 000010   000000 011000                    NOP     0

      203     5922    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;

   5922  1 000011   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000012   000000 701000 xent               TSX1    TOU$DU_OPEN_DF
         1 000013   000053 702000 1                  TSX2    ERROR_RETURN

      204     5923    1      CALL M_GET_CURRENT_DF_VALUES ALTRET (ERROR_RETURN) ;

   5923  1 000014   000222 701000 1                  TSX1    M_GET_CURRENT_DF_VALUES
         1 000015   000053 702000 1                  TSX2    ERROR_RETURN

      205     5924    1      CALL M_INIT_MCA_B ;

   5924  1 000016   000235 701000 1                  TSX1    M_INIT_MCA_B
         1 000017   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:89   

      206     5925    1      CALL TOU$DU_OPEN_MCA ALTRET (ERROR_RETURN) ;

   5925  1 000020   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000021   000000 701000 xent               TSX1    TOU$DU_OPEN_MCA
         1 000022   000053 702000 1                  TSX2    ERROR_RETURN

      207     5926    1      CALL M_STORE_MCA_DATA (EXISTED, FIRST) ALTRET (ERROR_RETURN) ;

   5926  1 000023   200004 630500                    EPPR0   FIRST,,AUTO
         1 000024   200010 450500                    STP0    @EXISTED+1,,AUTO
         1 000025   200003 631500                    EPPR1   EXISTED,,AUTO
         1 000026   200007 451500                    STP1    FIRST+3,,AUTO
         1 000027   000253 701000 1                  TSX1    M_STORE_MCA_DATA
         1 000030   000053 702000 1                  TSX2    ERROR_RETURN

      208     5927    1      CALL TOU$DU_CLOSE_MCA ALTRET (ERROR_RETURN) ;

   5927  1 000031   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000032   000000 701000 xent               TSX1    TOU$DU_CLOSE_MCA
         1 000033   000053 702000 1                  TSX2    ERROR_RETURN

      209     5928    1      CALL M_SAVE_MCA_DATA (EXISTED, FIRST) ALTRET (ERROR_RETURN) ;

   5928  1 000034   200004 630500                    EPPR0   FIRST,,AUTO
         1 000035   200010 450500                    STP0    @EXISTED+1,,AUTO
         1 000036   200003 631500                    EPPR1   EXISTED,,AUTO
         1 000037   200007 451500                    STP1    FIRST+3,,AUTO
         1 000040   001704 701000 1                  TSX1    M_SAVE_MCA_DATA
         1 000041   000053 702000 1                  TSX2    ERROR_RETURN

      210     5929    1      CALL TOU$DU_CLOSE_DF ;

   5929  1 000042   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000043   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         1 000044   000000 011000                    NOP     0

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:90   
      211     5930
      212     5931        /* NORMAL_RETURN: */
      213     5932    1      DUP.MSG_CODE = %T$M_SUCCESS;

   5932  1 000045   000276 235007                    LDA     190,DL
         1 000046   000020 755000 xsym               STA     DUP+16

      214     5933    1      CALL TOU$DU_USER_WRITE ;

   5933  1 000047   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000050   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000051   000000 011000                    NOP     0

      215     5934    1      RETURN ;

   5934  1 000052   000000 702200 xent               TSX2  ! X66_ARET

      216     5935
      217     5936    1   ERROR_RETURN:
      218     5937    1      CALL TOU$DU_CLOSE_MCA ;

   5937  1 000053   000002 631400 xsym  ERROR_RETURN EPPR1   B_VECTNIL+2
         1 000054   000000 701000 xent               TSX1    TOU$DU_CLOSE_MCA
         1 000055   000000 011000                    NOP     0

      219     5938    1      CALL TOU$DU_CLOSE_DF ;

   5938  1 000056   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000057   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         1 000060   000000 011000                    NOP     0

      220     5939    1      DUP.MSG_CODE = %T$M_FAILURE;

   5939  1 000061   000277 235007                    LDA     191,DL
         1 000062   000020 755000 xsym               STA     DUP+16

      221     5940    1      CALL TOU$DU_USER_WRITE ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:91   

   5940  1 000063   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000064   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000065   000000 011000                    NOP     0

      222     5941    1      RETURN ;

   5941  1 000066   000000 702200 xent               TSX2  ! X66_ARET

      223     5942
      224     5943        /* ********************
      225     5944           ********************
      226     5945           **  End Of  Main  **
      227     5946           ********************
      228     5947           ******************** */
      229     5948        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:92   
      230     5949        /*I*  NAME:        M_INIT_DUP
      231     5950              AUTHOR:      Scott S. Sheppard
      232     5951              PURPOSE:     Initilization
      233     5952              INTERFACE:   None called.
      234     5953              INPUT:       Set of system equates.
      235     5954              OUTPUT:      DUP - Deckfile Utility Parameter
      236     5955              DESCRIPTION: This procedure initializes variables to
      237     5956                           appropriate starting values.
      238     5957        */
      239     5958
      240     5959    1   M_INIT_DUP: PROC ;

   5959  1 000067   200006 741300       M_INIT_DUP   STX1  ! FIRST+2,,AUTO

      241     5960
      242     5961        /* Code */
      243     5962
      244     5963    2      DUP.HDR_CODE = %H$MERGE ;

   5963  1 000070   001522 235007                    LDA     850,DL
         1 000071   000021 755000 xsym               STA     DUP+17

      245     5964    2      DUP.LINE_VFC = %SKIP_WRITE ;

   5964  1 000072   142000 236003                    LDQ     50176,DU
         1 000073   000026 756000 xsym               STQ     DUP+22

      246     5965    2      DUP.FORCE_NEW_PAGE = %TRUE ;

   5965  1 000074   400000 236003                    LDQ     -131072,DU
         1 000075   000056 756000 xsym               STQ     DUP+46

      247     5966    2      DUP.IFAD.ME_ALLOWED = %FALSE ;

   5966  1 000076   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000077   000057 356000 xsym               ANSQ    DUP+47

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:93   
      248     5967    2      DUP.IFAD.ENTERED = %FALSE ;

   5967  1 000100   000000 236000 2                  LDQ     0
         1 000101   000057 356000 xsym               ANSQ    DUP+47

      249     5968    2      DUP.IFAD.DRIVE_NUMBER = '1' ;

   5968  1 000102   061000 236003                    LDQ     25088,DU
         1 000103   000063 552040 xsym               STBQ    DUP+51,'40'O

      250     5969    2      DUP.DF.ENTERED = %FALSE ;

   5969  1 000104   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000105   000104 356000 xsym               ANSQ    DUP+68

      251     5970    2      DUP.DF.OPEN_TYPE = %UPDATE_FILE ;

   5970  1 000106   000001 235007                    LDA     1,DL
         1 000107   000105 755000 xsym               STA     DUP+69

      252     5971    2      DUP.DF.REPORT_ERROR = %TRUE ;

   5971  1 000110   400000 236007                    LDQ     -131072,DL
         1 000111   000104 256000 xsym               ORSQ    DUP+68

      253     5972    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;

   5972  1 000112   000106 450000 xsym               STZ     DUP+70

      254     5973    2      RETURN ;

   5973  1 000113   000001 702211                    TSX2  ! 1,X1

      255     5974
      256     5975    2   END M_INIT_DUP ;
      257     5976        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:94   
      258     5977        /*I*  NAME:        M_COMMAND_SETUP
      259     5978              AUTHOR:      Scott S. Sheppard
      260     5979              PURPOSE:     Sets up MERGE Command
      261     5980              INTERFACE:   TOU$DU_SET_MCA
      262     5981                           TOU$DU_SET_DF_FID
      263     5982              INPUT:       DUP.CMD$ - pointer to the parse control block
      264     5983              OUTPUT:      DUP.DF.HOLD_AREA
      265     5984                           DUP.DF.HOLD_AREA_LGTH
      266     5985              DESCRIPTION: This procedure sets up the MERGE command from the
      267     5986                           information entered by the user.    DUP.CMD$ is a
      268     5987                           pointer to a   parse control block  that contains
      269     5988                           the tokens entered by the user.
      270     5989                           COMMAND FORMS:
      271     5990              Case 1: MERGE
      272     5991              Case 2: MERGE <IMU identifier>
      273     5992              Case 3: MERGE INTO <deckfile fid>
      274     5993              Case 4: MERGE <IMU identifier> INTO <deckfile fid>
      275     5994        */
      276     5995
      277     5996    1   M_COMMAND_SETUP: PROC ALTRET ;

   5996  1 000114   200006 741300       M_COMMAND_S* STX1  ! FIRST+2,,AUTO

      278     5997
      279     5998    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      280     5999    2      DCL OUTBLK$                    PTR ALIGNED ;
      281     6000           %PARSE$OUT (STCLASS = BASED) ;
      282     6045           %PARSE$SYM (STCLASS = BASED) ;
      283     6083           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:95   
      284     6084        /* Code */
      285     6085
      286     6086    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;

   6086  1 000115   200007 450100                    STZ     OUTBLK#,,AUTO
         1 000116   000175 710000 1                  TRA     s:6100+3

      287     6087    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;

   6087  1 000117   000017 470400 xsym               LDP0    DUP+15
         1 000120   200007 720100                    LXL0    OUTBLK#,,AUTO
         1 000121   000003 236110                    LDQ     3,X0,PR0
         1 000122   200010 756100                    STQ     OUTBLK$,,AUTO

      288     6088    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;

   6088  1 000123   200010 471500                    LDP1    OUTBLK$,,AUTO
         1 000124   100000 721100                    LXL1    0,,PR1
         1 000125   000005 101003                    CMPX1   5,DU
         1 000126   000130 602011 1                  TNC     s:6088+5,X1
         1 000127   000172 710000 1                  TRA     s:6100
         1 000130   000172 710000 1                  TRA     s:6100
         1 000131   000135 710000 1                  TRA     s:6090
         1 000132   000172 710000 1                  TRA     s:6100
         1 000133   000172 710000 1                  TRA     s:6100
         1 000134   000154 710000 1                  TRA     s:6095

      289     6089    4            CASE (%IFAD_FID) ;

      290     6090    4               DUP.IFAD.ENTERED = %TRUE ;

   6090  1 000135   000400 236003                    LDQ     256,DU
         1 000136   000057 256000 xsym               ORSQ    DUP+47

      291     6091    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   6091  1 000137   100004 236100                    LDQ     4,,PR1
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:96   
         1 000140   000033 772000                    QRL     27
         1 000141   000000 621006                    EAX1    0,QL
         1 000142   040000 100540                    MLR     fill='040'O
         1 000143   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         1 000144   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      292     6092    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   6092  1 000145   100004 236100                    LDQ     4,,PR1
         1 000146   000033 772000                    QRL     27
         1 000147   000154 756000 xsym               STQ     DUP+108

      293     6093    4               CALL TOU$DU_SET_MCA ALTRET (ERROR) ;

   6093  1 000150   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000151   000000 701000 xent               TSX1    TOU$DU_SET_MCA
         1 000152   000220 702000 1                  TSX2    ERROR
         1 000153   000172 710000 1                  TRA     s:6100

      294     6094    4            CASE (%DECKFILE_FID) ;

      295     6095    4               DUP.DF.ENTERED = %TRUE ;

   6095  1 000154   400000 236003                    LDQ     -131072,DU
         1 000155   000104 256000 xsym               ORSQ    DUP+68

      296     6096    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   6096  1 000156   100004 236100                    LDQ     4,,PR1
         1 000157   000033 772000                    QRL     27
         1 000160   000000 621006                    EAX1    0,QL
         1 000161   040000 100540                    MLR     fill='040'O
         1 000162   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         1 000163   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      297     6097    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:97   
   6097  1 000164   100004 236100                    LDQ     4,,PR1
         1 000165   000033 772000                    QRL     27
         1 000166   000154 756000 xsym               STQ     DUP+108

      298     6098    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   6098  1 000167   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000170   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         1 000171   000220 702000 1                  TSX2    ERROR

      299     6099    4         END /* CASE */ ;

      300     6100    3      END /* DO */ ;

   6100  1 000172   200007 235100                    LDA     OUTBLK#,,AUTO
         1 000173   000001 035007                    ADLA    1,DL
         1 000174   200007 755100                    STA     OUTBLK#,,AUTO
         1 000175   000017 470400 xsym               LDP0    DUP+15
         1 000176   000001 236100                    LDQ     1,,PR0
         1 000177   000022 772000                    QRL     18
         1 000200   200007 116100                    CMPQ    OUTBLK#,,AUTO
         1 000201   000203 600000 1                  TZE     s:6102
         1 000202   000117 603000 1                  TRC     s:6087

      301     6101
      302     6102    2      IF DUP.IFAD.ENTERED

   6102  1 000203   000057 236000 xsym               LDQ     DUP+47
         1 000204   000400 316003                    CANQ    256,DU
         1 000205   000211 601000 1                  TNZ     s:6105

      303     6103    2      THEN /* FID set from DEER command */ ;
      304     6104    2      ELSE CALL TOU$DU_SET_MCA ALTRET (ERROR) ;

   6104  1 000206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000207   000000 701000 xent               TSX1    TOU$DU_SET_MCA
         1 000210   000220 702000 1                  TSX2    ERROR
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:98   

      305     6105    2      IF DUP.DF.ENTERED

   6105  1 000211   000104 234000 xsym               SZN     DUP+68
         1 000212   000216 604000 1                  TMI     s:6108

      306     6106    2      THEN /* FID set from DEER command */ ;
      307     6107    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   6107  1 000213   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000214   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         1 000215   000220 702000 1                  TSX2    ERROR

      308     6108    2      RETURN ;

   6108  1 000216   200006 221300                    LDX1  ! FIRST+2,,AUTO
         1 000217   000001 702211                    TSX2  ! 1,X1

      309     6109
      310     6110    2   ERROR:
      311     6111    2      ALTRETURN ;

   6111  1 000220   200006 221300       ERROR        LDX1  ! FIRST+2,,AUTO
         1 000221   000000 702211                    TSX2  ! 0,X1

      312     6112
      313     6113    2   END M_COMMAND_SETUP ;
      314     6114        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:99   
      315     6115        /*I* NAME:         M_GET_CURRENT_DF_VALUES
      316     6116             AUTHOR:       Scott S. Sheppard
      317     6117             PURPOSE:      Gets current deckfile values
      318     6118             INTERFACE:    TOU$DFU_DF_RD_LAST_DECK#
      319     6119                           TOU$DFU_DF_RD_LOG
      320     6120             PARAMETERS:   None passed.
      321     6121             DATA:         MASTER_DATA - output
      322     6122                           LAST - output
      323     6123                           LOG_B - output
      324     6124             DESCRIPTION:  This  procedure  obtains  the  current  values
      325     6125                           stored in the deckfile so that new information
      326     6126                           may  be added  to the  deckfile based on these
      327     6127                           current values.
      328     6128        */
      329     6129
      330     6130    1   M_GET_CURRENT_DF_VALUES: PROC ALTRET ;

   6130  1 000222   200006 741300       M_GET_CURRE* STX1  ! FIRST+2,,AUTO

      331     6131
      332     6132        /* Code */
      333     6133
      334     6134    2      CALL TOU$DFU_DF_RD_LAST_DECK# ALTRET (ERROR) ;

   6134  1 000223   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000224   000000 701000 xent               TSX1    TOU$DFU_DF_RD_LAST_DECK#
         1 000225   000233 702000 1                  TSX2    ERROR

      335     6135    2      CALL TOU$DFU_DF_RD_LOG ALTRET (ERROR) ;

   6135  1 000226   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000227   000000 701000 xent               TSX1    TOU$DFU_DF_RD_LOG
         1 000230   000233 702000 1                  TSX2    ERROR

      336     6136    2      RETURN ;

   6136  1 000231   200006 221300                    LDX1  ! FIRST+2,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:100  
         1 000232   000001 702211                    TSX2  ! 1,X1

      337     6137
      338     6138    2   ERROR:
      339     6139    2      ALTRETURN ;

   6139  1 000233   200006 221300       ERROR        LDX1  ! FIRST+2,,AUTO
         1 000234   000000 702211                    TSX2  ! 0,X1

      340     6140
      341     6141    2   END M_GET_CURRENT_DF_VALUES ;
      342     6142        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:101  
      343     6143        /*I* NAME:         M_INIT_MCA_B
      344     6144             AUTHOR:       Scott S. Sheppard
      345     6145             PURPOSE:      Initializes the MCA info Buffer
      346     6146             INTERFACE:    None called.
      347     6147             PARAMETERS:   None passed.
      348     6148             DATA:         MCA_B - output
      349     6149             DESCRIPTION:  This procedure initializes the MCA buffer to all
      350     6150                           zeroes so that the numerous fields which must be
      351     6151                           zero do not have to be set individually.
      352     6152                           The IDCW values (which remain constant) are also
      353     6153                           set for the TDIO call to be done later.
      354     6154        */
      355     6155
      356     6156    1   M_INIT_MCA_B: PROC ;

   6156  1 000235   200006 741300       M_INIT_MCA_B STX1  ! FIRST+2,,AUTO

      357     6157
      358     6158        /* Code */
      359     6159
      360     6160    2      MCA_B = '0'B ;

   6160  1 000236   000101 470400 xsym               LDP0    DUP+65
         1 000237   245444 220003                    LDX0    84772,DU
         1 000240   000140 100400                    MLR     fill='000'O
         1 000241   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000242   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      361     6161    2      MCA_B.DCW_LIST.IDCW1 = '130000720002'O ;

   6161  1 000243   000011 236000 0                  LDQ     STRING+9
         1 000244   000101 470400 xsym               LDP0    DUP+65
         1 000245   000000 756100                    STQ     0,,PR0

      362     6162    2      MCA_B.DCW_LIST.IDCW2 = '030000700001'O ;

   6162  1 000246   000012 236000 0                  LDQ     STRING+10
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:102  
         1 000247   000101 470400 xsym               LDP0    DUP+65
         1 000250   000002 756100                    STQ     2,,PR0

      363     6163    2      RETURN ;

   6163  1 000251   200006 221300                    LDX1  ! FIRST+2,,AUTO
         1 000252   000001 702211                    TSX2  ! 1,X1

      364     6164
      365     6165    2   END M_INIT_MCA_B ;
      366     6166        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:103  
      367     6167        /*I* NAME:         M_STORE_MCA_DATA
      368     6168             AUTHOR:       Scott S. Sheppard
      369     6169             PURPOSE:      Saves MCA changes in a TEMP file
      370     6170             INTERFACE:    M_SET_CATALOG_KEY
      371     6171                           TOU$B_CHECK_FOR_CATALOG
      372     6172                           M_PROCESS_MCA_INPUT
      373     6173                           TOU$DFU_OPEN_TEMP
      374     6174                           TOU$DFU_CLOSE_TEMP
      375     6175                           TOU$CLEAR_IFAD
      376     6176             PARAMETERS:   EXISTED - output
      377     6177                           FIRST - output
      378     6178             DATA:         DUP.TEMP.OPEN_TYPE - output
      379     6179                           DUP.TEMP.CLOSE_TYPE - output
      380     6180             DESCRIPTION:  This  procedure  is  the  driver  used to read
      381     6181                           information from the MCA diskettes and save it
      382     6182                           in  a  temporary  file.  The temporary file is
      383     6183                           used  so  that  no  changes  are  made  to the
      384     6184                           deckfile  until after  all data  to be altered
      385     6185                           has successfully been read and validated.
      386     6186        */
      387     6187        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:104  
      388     6188    1   M_STORE_MCA_DATA: PROC (EXISTED, FIRST) ALTRET ;

   6188  1 000253   200006 741300       M_STORE_MCA* STX1  ! FIRST+2,,AUTO

      389     6189
      390     6190    2      DCL EXISTED BIT (1) ALIGNED ;
      391     6191    2      DCL FIRST   UBIN WORD ALIGNED ;
      392     6192
      393     6193        /* Code */
      394     6194
      395     6195    2      DUP.TEMP.OPEN_TYPE = %CREATE_FILE ;

   6195  1 000254   000140 450000 xsym               STZ     DUP+96

      396     6196    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;

   6196  1 000255   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000256   000000 701000 xent               TSX1    TOU$DFU_OPEN_TEMP
         1 000257   000322 702000 1                  TSX2    ERROR

      397     6197    2      CALL TOU$CLEAR_IFAD ;

   6197  1 000260   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000261   000000 701000 xent               TSX1    TOU$CLEAR_IFAD
         1 000262   000000 011000                    NOP     0

      398     6198
      399     6199    2      CALL M_SET_CATALOG_KEY (CATALOG_SEARCH_KEY.DATA) ;

   6199  1 000263   000001 236000 2                  LDQ     1
         1 000264   200031 756100                    STQ     PRODUCT_SET+6,,AUTO
         1 000265   000327 701000 1                  TSX1    M_SET_CATALOG_KEY
         1 000266   000000 011000                    NOP     0

      400     6200    2      CALL TOU$B_CHECK_FOR_CATALOG WHENRETURN

   6200  1 000267   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:105  
         1 000270   000000 701000 xent               TSX1    TOU$B_CHECK_FOR_CATALOG
         1 000271   000304 702000 1                  TSX2    s:6207

      401     6201    3           DO ;

      402     6202    3              EXISTED = %TRUE ;

   6202  1 000272   400000 236003                    LDQ     -131072,DU
         1 000273   200007 470500                    LDP0    @EXISTED,,AUTO
         1 000274   000000 756100                    STQ     0,,PR0

      403     6203    3              CALL M_PROCESS_MCA_INPUT (EXISTED, FIRST) ALTRET (ERROR) ;

   6203  1 000275   200010 236100                    LDQ     @FIRST,,AUTO
         1 000276   200014 756100                    STQ     @CATALOG_EXISTED+1,,AUTO
         1 000277   200007 236100                    LDQ     @EXISTED,,AUTO
         1 000300   200013 756100                    STQ     @FIRST+3,,AUTO
         1 000301   000336 701000 1                  TSX1    M_PROCESS_MCA_INPUT
         1 000302   000322 702000 1                  TSX2    ERROR

      404     6204    3           END /* WHENRETURN */ ;

   6204  1 000303   000314 710000 1                  TRA     s:6211

      405     6205    2      WHENALTRETURN
      406     6206    3           DO ;

      407     6207    3              EXISTED = %FALSE ;

   6207  1 000304   200007 470500                    LDP0    @EXISTED,,AUTO
         1 000305   000000 450100                    STZ     0,,PR0

      408     6208    3              CALL M_PROCESS_MCA_INPUT (EXISTED, FIRST) ALTRET (ERROR) ;

   6208  1 000306   200010 236100                    LDQ     @FIRST,,AUTO
         1 000307   200014 756100                    STQ     @CATALOG_EXISTED+1,,AUTO
         1 000310   200007 236100                    LDQ     @EXISTED,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:106  
         1 000311   200013 756100                    STQ     @FIRST+3,,AUTO
         1 000312   000336 701000 1                  TSX1    M_PROCESS_MCA_INPUT
         1 000313   000322 702000 1                  TSX2    ERROR

      409     6209    3           END /* WHENALTRETURN */ ;

      410     6210
      411     6211    2      DUP.TEMP.CLOSE_TYPE = %SAVE_FILE ;

   6211  1 000314   000141 450000 xsym               STZ     DUP+97

      412     6212    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;

   6212  1 000315   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000316   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         1 000317   000322 702000 1                  TSX2    ERROR

      413     6213    2      RETURN ;

   6213  1 000320   200006 221300                    LDX1  ! FIRST+2,,AUTO
         1 000321   000001 702211                    TSX2  ! 1,X1

      414     6214
      415     6215    2   ERROR:
      416     6216    2      CALL TOU$DFU_CLOSE_TEMP ;

   6216  1 000322   000002 631400 xsym  ERROR        EPPR1   B_VECTNIL+2
         1 000323   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         1 000324   000000 011000                    NOP     0

      417     6217    2      ALTRETURN ;

   6217  1 000325   200006 221300                    LDX1  ! FIRST+2,,AUTO
         1 000326   000000 702211                    TSX2  ! 0,X1

      418     6218
      419     6219        /* END M_STORE_MCA_DATA */
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:107  
      420     6220        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:108  
      421     6221        /*I* NAME:         M_SET_CATALOG_KEY
      422     6222             AUTHOR:       Scott S. Sheppard
      423     6223             PURPOSE:      assigns the catalog key value
      424     6224             INTERFACE:    None called.
      425     6225             PARAMETERS:   KEY_DATA
      426     6226             DATA:         No external data accessed.
      427     6227             DESCRIPTION:  This procedure is used  to set the catalog key
      428     6228                           value for the NIO catalog in the deckfile. The
      429     6229                           procedure  is used  to set  the catalog search
      430     6230                           key to  look for a catalog or  to set the text
      431     6231                           portion  of  the  catalog  key  for the actual
      432     6232                           catalog  key.   This  procedure  is not called
      433     6233                           when  the catalog  is already  in the deckfile
      434     6234                           since the key is retrieved when the catalog is
      435     6235                           found.
      436     6236        */
      437     6237
      438     6238    2   M_SET_CATALOG_KEY: PROC (KEY_DATA) ;

   6238  1 000327   200030 741300       M_SET_CATAL* STX1  ! PRODUCT_SET+5,,AUTO

      439     6239
      440     6240    3      DCL KEY_DATA   CHAR (21) CALIGNED ;
      441     6241
      442     6242        /* Code */
      443     6243
      444     6244    3      KEY_DATA = 'CATA.NIO.MCA' ;

   6244  1 000330   200031 470500                    LDP0    @KEY_DATA,,AUTO
         1 000331   040100 100400                    MLR     fill='040'O
         1 000332   000013 000014 0                  ADSC9   STRING+11                cn=0,n=12
         1 000333   000000 000025                    ADSC9   0,,PR0                   cn=0,n=21

      445     6245    3      RETURN ;

   6245  1 000334   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 000335   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:109  

      446     6246
      447     6247    3   END M_SET_CATALOG_KEY ;
      448     6248        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:110  
      449     6249        /*I* NAME:         M_PROCESS_MCA_INPUT
      450     6250             AUTHOR:       Scott S. Sheppard
      451     6251             PURPOSE:      Driver for processing IFAD input
      452     6252             INTERFACE:    M_SETUP_CATALOG              TOU$B_GET_CATALOG
      453     6253                           M_SET_CATALOG_KEY            TOU$GET_DIRECTORY
      454     6254                           M_GET_HEADER                 TOU$GET_FILE
      455     6255                           M_COMPUTE_LAST_DISKETTE      TOU$DFU_TF_WR_CATALOG_CONTROL
      456     6256                           M_CHECK_PRODUCT_SET          TOU$DFU_TF_WR_LAST_DECK#
      457     6257                           M_COMPUTE_LAST_DIR
      458     6258                           M_BUFFER_DIRECTORY
      459     6259                           M_STORE_CATALOG_ENTRY
      460     6260                           M_STORE_OBJECT_DECK
      461     6261                           M_STORE_CATALOG_ENTRY
      462     6262                           M_STORE_DIRECTORY
      463     6263                           M_STORE_SUBCATALOG
      464     6264                           M_STORE_MASTER_CHANGES
      465     6265                           M_CHECK_TND_DISKETTE
      466     6266                           M_CHECK_ALREADY_MERGED
      467     6267             PARAMETERS:   None passed.
      468     6268             DATA:         MCA_B.DIRECTORY.CURRENT - output
      469     6269             DESCRIPTION:  DIPPER   diskettes   are   placed   into  CP-6
      470     6270                           deckfiles using a two stage process.
      471     6271                           1. Data  is  read  from  the MCA, checked, and
      472     6272                              stored in a temporary file.
      473     6273                           2. After  all data  has been  read and stored,
      474     6274                              the  data is then  read from the temporary
      475     6275                              file and saved in the deckfile.
      476     6276             This two stage strategy ensures that no alterations are made
      477     6277             to  a CP-6 deckfile  before all data to be modified has been
      478     6278             verified.  This prevents  the deckfile  from being partially
      479     6279             updated  when  an  error  is  encountered and eliminates the
      480     6280             problems of backing out erroneous modifications.
      481     6281
      482     6282             This  procedure is  the driver  routine used  for stage one,
      483     6283             reading the  DIPPER  diskette data from the MCA,  converting
      484     6284             it  to deckfile  like format,  and storing  the records in a
      485     6285             temporary file.
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:111  
      486     6286
      487     6287             This  algorithm is  somewhat complex  so a  detailed step by
      488     6288             step description will follow.
      489     6289
      490     6290             1.  Set  up deckfile values  as if a  new catalog were to be
      491     6291                 added or as if the  existing  catalog is to be modified.
      492     6292                 This includes setting up the catalog key,  catalog data,
      493     6293                 and catalog entry fields.
      494     6294             2.  Read the  header of the diskette  currently mounted. Try
      495     6295                 Drive 1 first, then try Drive 2 if 1 has a malfunction.
      496     6296             3.  Compute  the  number  of  diskettes  in  this particular
      497     6297                 diskette  product  set.  Note  that the current diskette
      498     6298                 must be diskette 1 for this to be successful. Diskette 1
      499     6299                 of  1  is  perfectly  fine,  but  DEER  will  not  start
      500     6300                 processing for Diskette M of N, where M ~= 1.
      501     6301
      502     6302             For each diskette of the product set (4 - 11):
      503     6303
      504     6304             4.  Check the diskette to make sure that it is a part of the
      505     6305                 product set  currently in use  and that the  diskette is
      506     6306                 the proper one in the sequence of diskettes.
      507     6307             5.  Read the directory file which contains a directory entry
      508     6308                 for each file on the diskette.
      509     6309             6.  Compute   the  number  of   diskette  entries  for  this
      510     6310                 particular   diskette.   This  is   saved  as  the  last
      511     6311                 directory  so it may  be used as  the upper index on the
      512     6312                 iterative DO loop.   The  number of diskette entries  is
      513     6313                 computed  by dividing the  directory size  (found on the
      514     6314                 diskette header) by 16 (the size of a directory entry).
      515     6315             7.  The  directory entries  are  buffered  so that 1  object
      516     6316                 deck for all of the entries for  all of the diskettes of
      517     6317                 the product set may be saved.
      518     6318
      519     6319             For each  directory entry  of each  diskette of  the product
      520     6320             set (8 - 11):
      521     6321
      522     6322             8.  The  current  directory  field  is  loaded so other DEER
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:112  
      523     6323                 modules  do not have  to have knowledge  of the index of
      524     6324                 the iterative DO loop.
      525     6325             9.  The file is read for the current directory entry.
      526     6326            10.  The file  is saved as an  object deck  in the  temporary
      527     6327                 file. This includes:
      528     6328              a. A  $OBJECT  card  is  formed  from  the current diskette
      529     6329                 header, directory, and file information.
      530     6330              b. A  $DKEND card is  formed from the  $OBJECT card and the
      531     6331                 current file information.
      532     6332              c. The object key is set from the $OBJECT card.
      533     6333              d. The  $OBJECT, file, and $DKEND  cards are written to the
      534     6334                 temporary file.
      535     6335            11.  A  catalog entry  for the  object deck  is stored in the
      536     6336                 temporary file.
      537     6337
      538     6338            12.  The directory  for the  diskette  is saved as an  object
      539     6339                 deck in the same manner as one of the files.
      540     6340            13.  A catalog entry is saved for the directory file.
      541     6341            14.  The subcatalog for the  catalog is stored. This contains
      542     6342                 the IFAD input source and  file number used as input for
      543     6343                 this catalog.
      544     6344            15.  The  catalog record  is stored.  This contains  the deck
      545     6345                 number and the number of catalog entries.
      546     6346            16.  A master entry is  saved  for the  new  catalog.  If the
      547     6347                 catalog already existed,  no changes must be made to the
      548     6348                 master catalog.
      549     6349            17.  The last deck structure is saved. This contains the last
      550     6350                 binary deck  number used and the  last make believe edit
      551     6351                 name used.
      552     6352
      553     6353            Also, a "read config" has been added which will
      554     6354            obtain the product set tab number. This is new
      555     6355            E02 release in order to process the B.0 IMX
      556     6356            Utility diskettes, which have changed contents.
      557     6357            (The 14 previous diskettes have been compressed
      558     6358            onto 2 high-density diskettes).
      559     6359            On B.0 IMX release, the diskette header number tab comes thru
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:113  
      560     6360            as 'XXX' for both diskettes. If we find the tab = 'XXX', we
      561     6361            replace it with the actual tab which we obtained from the
      562     6362            "read config" command to the MCA. If the tab is not 'XXX', we
      563     6363            leave it asis so the logic will be compatible with previous
      564     6364            releases (e.g., it was '007' for release A.5).
      565     6365        */
      566     6366        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:114  
      567     6367    2   M_PROCESS_MCA_INPUT: PROC (CATALOG_EXISTED, FIRST_NEW_ENTRY) ALTRET ;

   6367  1 000336   200012 741300       M_PROCESS_M* STX1  ! @FIRST+2,,AUTO

      568     6368
      569     6369    3      DCL DIR$            PTR ALIGNED ;
      570     6370    3      DCL WORK  SBIN;
      571     6371           %DIRECTORY_ENTRY (STCLASS = "BASED (DIR$)") ;
      572     6398    3      DCL CATALOG_EXISTED BIT (1) ALIGNED ;
      573     6399    3      DCL FIRST_NEW_ENTRY UBIN WORD ALIGNED ;
      574     6400    3      DCL DISKETTE        UBIN WORD ALIGNED ;
      575     6401    3      DCL DIRECTORY       UBIN WORD ALIGNED ;
      576     6402    3      DCL LAST_DISKETTE   UBIN WORD ALIGNED ;
      577     6403    3      DCL LAST_DIR        UBIN WORD ALIGNED ;
      578     6404    3      DCL 1 PRODUCT_SET,
      579     6405    3            2 EQUIP_TYPE  CHAR (4) CALIGNED,
      580     6406    3            2 DWG_NUM     CHAR (12) CALIGNED,
      581     6407    3            2 NUM_TAB     CHAR (3) CALIGNED ;
      582     6408
      583     6409        /* Code */
      584     6410
      585     6411    3      IF CATALOG_EXISTED

   6411  1 000337   200013 470500                    LDP0    @CATALOG_EXISTED,,AUTO
         1 000340   000000 234100                    SZN     0,,PR0
         1 000341   000352 605000 1                  TPL     s:6417

      586     6412    4      THEN DO ;

      587     6413    4              CALL M_SETUP_CATALOG ALTRET (ERROR) ;

   6413  1 000342   000632 701000 1                  TSX1    M_SETUP_CATALOG
         1 000343   000630 702000 1                  TSX2    ERROR

      588     6414    4              FIRST_NEW_ENTRY = CATALOG_DATA.ENTRY_COUNT + 1 ;

   6414  1 000344   000000 236000 xsym               LDQ     CATALOG_DATA
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:115  
         1 000345   777777 376007                    ANQ     -1,DL
         1 000346   000001 036007                    ADLQ    1,DL
         1 000347   200014 470500                    LDP0    @FIRST_NEW_ENTRY,,AUTO
         1 000350   000000 756100                    STQ     0,,PR0

      589     6415    4           END /* THEN */ ;

   6415  1 000351   000367 710000 1                  TRA     s:6422

      590     6416    4      ELSE DO ;

      591     6417    4              CALL M_SET_CATALOG_KEY (CATALOG_KEY.DATA) ;

   6417  1 000352   000002 236000 2                  LDQ     2
         1 000353   200031 756100                    STQ     @KEY_DATA,,AUTO
         1 000354   000327 701000 1                  TSX1    M_SET_CATALOG_KEY
         1 000355   000000 011000                    NOP     0

      592     6418    4              LAST.DECK# = LAST.DECK# + 1 ;

   6418  1 000356   000000 220000 xsym               LDX0    LAST
         1 000357   000001 621010                    EAX1    1,X0
         1 000360   000000 741000 xsym               STX1    LAST

      593     6419    4              CALL TOU$B_GET_CATALOG ;

   6419  1 000361   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000362   000000 701000 xent               TSX1    TOU$B_GET_CATALOG
         1 000363   000000 011000                    NOP     0

      594     6420    4              FIRST_NEW_ENTRY = 1 ;

   6420  1 000364   000001 235007                    LDA     1,DL
         1 000365   200014 470500                    LDP0    @FIRST_NEW_ENTRY,,AUTO
         1 000366   000000 755100                    STA     0,,PR0

      595     6421    4           END /* ELSE */ ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:116  

      596     6422    3      IF DUP.IFAD.IMU_TAB THEN GOTO SKIP_CONFIG_READ ;

   6422  1 000367   000057 236000 xsym               LDQ     DUP+47
         1 000370   000400 316007                    CANQ    256,DL
         1 000371   000417 601000 1                  TNZ     SKIP_CONFIG_READ

      597     6423              /* only needed to read MCA config one time */
      598     6424    3      DUP.IFAD.IMU_TAB = %FALSE ;

   6424  1 000372   000003 236000 2                  LDQ     3
         1 000373   000057 356000 xsym               ANSQ    DUP+47

      599     6425    3      CALL M_GET_CONFIG

   6425  1 000374   000654 701000 1                  TSX1    M_GET_CONFIG
         1 000375   000407 702000 1                  TSX2    s:6431

      600     6426    4      WHENRETURN DO;

      601     6427    4              WORK = MCA_B.CONFIG.DATA1.NUMTAB ;

   6427  1 000376   000101 470400 xsym               LDP0    DUP+65
         1 000377   040000 220003                    LDX0    16384,DU
         1 000400   011256 236110                    LDQ     4782,X0,PR0
         1 000401   777777 376007                    ANQ     -1,DL
         1 000402   200016 756100                    STQ     WORK,,AUTO

      602     6428    4              CALL BINCHAR (DUP.IFAD.CONFIG_TAB, WORK) ;

   6428  1 000403   000000 301500                    BTD
         1 000404   200016 000004                    NDSC9   WORK,,AUTO               cn=0,s=lsgnf,sf=0,n=4
         1 000405   000060 030003 xsym               NDSC9   DUP+48                   cn=0,s=nosgn,sf=0,n=3

      603     6429    4           END; /* WHENRETURN DO */

   6429  1 000406   000417 710000 1                  TRA     SKIP_CONFIG_READ
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:117  

      604     6430    4      WHENALTRETURN DO;

      605     6431    4              DUP.IFAD.IMU_TAB = %FALSE ;

   6431  1 000407   000003 236000 2                  LDQ     3
         1 000410   000057 356000 xsym               ANSQ    DUP+47

      606     6432    4              DUP.MSG_CODE = %E$RD_CONFIG; /* UNABLE TO READ CONFIG */

   6432  1 000411   001151 235007                    LDA     617,DL
         1 000412   000020 755000 xsym               STA     DUP+16

      607     6433    4              CALL TOU$DU_OPERATOR_TEXT ;

   6433  1 000413   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000414   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 000415   000000 011000                    NOP     0

      608     6434    4              GOTO ERROR;

   6434  1 000416   000630 710000 1                  TRA     ERROR

      609     6435    4           END; /* WHENALTRETURN */
      610     6436    3   SKIP_CONFIG_READ:
      611     6437           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:118  
      612     6438    3      DISKETTE = 1 ;

   6438  1 000417   000001 235007       SKIP_CONFIG* LDA     1,DL
         1 000420   200017 755100                    STA     DISKETTE,,AUTO

      613     6439    3      LAST_DISKETTE = 1 ;

   6439  1 000421   200021 755100                    STA     LAST_DISKETTE,,AUTO

      614     6440    4      DO WHILE (DISKETTE <= LAST_DISKETTE) ;

   6440  1 000422   200021 236100                    LDQ     LAST_DISKETTE,,AUTO
         1 000423   200017 116100                    CMPQ    DISKETTE,,AUTO
         1 000424   000573 602000 1                  TNC     s:6478

      615     6441    4   TRY_AGAIN :
      616     6442    4         CALL M_GET_HEADER (DISKETTE) ALTRET (ERROR) ;

   6442  1 000425   200017 630500       TRY_AGAIN    EPPR0   DISKETTE,,AUTO
         1 000426   200031 450500                    STP0    @KEY_DATA,,AUTO
         1 000427   000674 701000 1                  TSX1    M_GET_HEADER
         1 000430   000630 702000 1                  TSX2    ERROR

      617     6443    4         CALL M_CHECK_TND_DISKETTE ALTRET (ASK_ABORT) ;

   6443  1 000431   001106 701000 1                  TSX1    M_CHECK_TND_DISKETTE
         1 000432   000612 702000 1                  TSX2    ASK_ABORT

      618     6444    4         IF DUP.IFAD.IMU_TAB THEN

   6444  1 000433   000057 236000 xsym               LDQ     DUP+47
         1 000434   000400 316007                    CANQ    256,DL
         1 000435   000440 600000 1                  TZE     s:6446

      619     6445    4            PRODUCT_SET.NUM_TAB = DUP.IFAD.CONFIG_TAB ;

   6445  1 000436   000060 236000 xsym               LDQ     DUP+48
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:119  
         1 000437   200027 552170                    STBQ    PRODUCT_SET+4,'70'O,AUTO

      620     6446    4         IF DISKETTE = 1

   6446  1 000440   200017 235100                    LDA     DISKETTE,,AUTO
         1 000441   000001 115007                    CMPA    1,DL
         1 000442   000453 601000 1                  TNZ     s:6453

      621     6447    5         THEN DO ;

      622     6448    5                 CALL M_COMPUTE_LAST_DISKETTE (LAST_DISKETTE, PRODUCT_SET)

   6448  1 000443   200023 630500                    EPPR0   PRODUCT_SET,,AUTO
         1 000444   200032 450500                    STP0    @TYPE+1,,AUTO
         1 000445   200021 631500                    EPPR1   LAST_DISKETTE,,AUTO
         1 000446   200031 451500                    STP1    @KEY_DATA,,AUTO
         1 000447   001160 701000 1                  TSX1    M_COMPUTE_LAST_DISKETTE
         1 000450   000612 702000 1                  TSX2    ASK_ABORT

      623     6449    5                         ALTRET (ASK_ABORT) ;
      624     6450    5                 CALL M_CHECK_ALREADY_MERGED ALTRET (ERROR) ;

   6450  1 000451   001220 701000 1                  TSX1    M_CHECK_ALREADY_MERGED
         1 000452   000630 702000 1                  TSX2    ERROR

      625     6451    5              END /* THEN */ ;

      626     6452    4         ELSE ;
      627     6453    4         CALL M_CHECK_PRODUCT_SET (DISKETTE, PRODUCT_SET) ALTRET (ASK_ABORT) ;

   6453  1 000453   200023 630500                    EPPR0   PRODUCT_SET,,AUTO
         1 000454   200032 450500                    STP0    @TYPE+1,,AUTO
         1 000455   200017 631500                    EPPR1   DISKETTE,,AUTO
         1 000456   200031 451500                    STP1    @KEY_DATA,,AUTO
         1 000457   001262 701000 1                  TSX1    M_CHECK_PRODUCT_SET
         1 000460   000612 702000 1                  TSX2    ASK_ABORT

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:120  
      628     6454    4         CALL M_STORE_OBJECT_DECK ('HEADER   ', 136) ALTRET (ERROR) ;

   6454  1 000461   000005 236000 2                  LDQ     5
         1 000462   200032 756100                    STQ     @TYPE+1,,AUTO
         1 000463   000006 236000 2                  LDQ     6
         1 000464   200031 756100                    STQ     @KEY_DATA,,AUTO
         1 000465   001434 701000 1                  TSX1    M_STORE_OBJECT_DECK
         1 000466   000630 702000 1                  TSX2    ERROR

      629     6455    4         CALL M_STORE_CATALOG_ENTRY ALTRET (ERROR) ;

   6455  1 000467   001607 701000 1                  TSX1    M_STORE_CATALOG_ENTRY
         1 000470   000630 702000 1                  TSX2    ERROR

      630     6456    4         CALL TOU$GET_DIRECTORY ALTRET (ERROR) ;

   6456  1 000471   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000472   000000 701000 xent               TSX1    TOU$GET_DIRECTORY
         1 000473   000630 702000 1                  TSX2    ERROR

      631     6457    4         CALL M_STORE_OBJECT_DECK ('DIRECTORY', MCA_B.DIRECTORY.SIZE)

   6457  1 000474   000101 236000 xsym               LDQ     DUP+65
         1 000475   001310 036003                    ADLQ    712,DU
         1 000476   200032 756100                    STQ     @TYPE+1,,AUTO
         1 000477   000007 236000 2                  LDQ     7
         1 000500   200031 756100                    STQ     @KEY_DATA,,AUTO
         1 000501   001434 701000 1                  TSX1    M_STORE_OBJECT_DECK
         1 000502   000630 702000 1                  TSX2    ERROR

      632     6458    4                 ALTRET (ERROR) ;
      633     6459    4         CALL M_STORE_CATALOG_ENTRY ALTRET (ERROR) ;

   6459  1 000503   001607 701000 1                  TSX1    M_STORE_CATALOG_ENTRY
         1 000504   000630 702000 1                  TSX2    ERROR

      634     6460    4         CALL M_COMPUTE_LAST_DIR (LAST_DIR) ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:121  

   6460  1 000505   200022 630500                    EPPR0   LAST_DIR,,AUTO
         1 000506   200031 450500                    STP0    @KEY_DATA,,AUTO
         1 000507   001352 701000 1                  TSX1    M_COMPUTE_LAST_DIR
         1 000510   000000 011000                    NOP     0

      635     6461    5         DO DIRECTORY = 0 TO LAST_DIR ;

   6461  1 000511   200020 450100                    STZ     DIRECTORY,,AUTO
         1 000512   000562 710000 1                  TRA     s:6473+3

      636     6462    5            MCA_B.DIRECTORY.CURRENT = MCA_B.DIRECTORY.DATA(DIRECTORY) ;

   6462  1 000513   200020 235100                    LDA     DIRECTORY,,AUTO
         1 000514   000004 735000                    ALS     4
         1 000515   000101 470400 xsym               LDP0    DUP+65
         1 000516   040100 100505                    MLR     fill='040'O
         1 000517   000110 000020                    ADSC9   72,A,PR0                 cn=0,n=16
         1 000520   001311 000020                    ADSC9   713,,PR0                 cn=0,n=16

      637     6463    5            DIR$ = ADDR (MCA_B.DIRECTORY.CURRENT) ;

   6463  1 000521   000101 236000 xsym               LDQ     DUP+65
         1 000522   001311 036003                    ADLQ    713,DU
         1 000523   200015 756100                    STQ     DIR$,,AUTO

      638     6464    5            IF (DIRECTORY_ENTRY.ATTRIBUTES.LSB) OR

   6464  1 000524   200015 471500                    LDP1    DIR$,,AUTO
         1 000525   000000 066500                    CMPB    filb='0'B
         1 000526   100003 500001                    BDSC    3,,PR1                   by=2,bit=8,n=1
         1 000527   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000530   000557 601000 1                  TNZ     s:6473
         1 000531   040000 106500                    CMPC    fill='040'O
         1 000532   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         1 000533   000024 000010 0                  ADSC9   STRING+20                cn=0,n=8
         1 000534   000557 600000 1                  TZE     s:6473
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:122  
         1 000535   000100 100500                    MLR     fill='000'O
         1 000536   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 000537   200062 000004                    ADSC9   VALID_RESPONSE+1,,AUTO   cn=0,n=4
         1 000540   200062 236100                    LDQ     VALID_RESPONSE+1,,AUTO
         1 000541   000000 116003                    CMPQ    0,DU
         1 000542   000557 600000 1                  TZE     s:6473

      639     6465    5                    (DIRECTORY_ENTRY.PATH_NAME = '.DPSFILE') OR
      640     6466    5                    (DIRECTORY_ENTRY.PATH_NULL(0) = 0)
      641     6467    5            THEN /* the file should not be cataloged */ ;
      642     6468    6            ELSE DO ;

      643     6469    6                    CALL TOU$GET_FILE ALTRET (ERROR) ;

   6469  1 000543   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000544   000000 701000 xent               TSX1    TOU$GET_FILE
         1 000545   000630 702000 1                  TSX2    ERROR

      644     6470    6                    CALL M_STORE_OBJECT_DECK ('FILE     ', MCA_B.FILE.SIZE) ALTRET (
              6470                             ERROR) ;

   6470  1 000546   000101 236000 xsym               LDQ     DUP+65
         1 000547   041325 036003                    ADLQ    17109,DU
         1 000550   200032 756100                    STQ     @TYPE+1,,AUTO
         1 000551   000010 236000 2                  LDQ     8
         1 000552   200031 756100                    STQ     @KEY_DATA,,AUTO
         1 000553   001434 701000 1                  TSX1    M_STORE_OBJECT_DECK
         1 000554   000630 702000 1                  TSX2    ERROR

      645     6471    6                    CALL M_STORE_CATALOG_ENTRY ALTRET (ERROR) ;

   6471  1 000555   001607 701000 1                  TSX1    M_STORE_CATALOG_ENTRY
         1 000556   000630 702000 1                  TSX2    ERROR

      646     6472    6                 END /* ELSE DO */ ;

      647     6473    5         END /* DO */ ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:123  

   6473  1 000557   200020 235100                    LDA     DIRECTORY,,AUTO
         1 000560   000001 035007                    ADLA    1,DL
         1 000561   200020 755100                    STA     DIRECTORY,,AUTO
         1 000562   200022 236100                    LDQ     LAST_DIR,,AUTO
         1 000563   200020 116100                    CMPQ    DIRECTORY,,AUTO
         1 000564   000513 603000 1                  TRC     s:6462

      648     6474    4         DISKETTE = DISKETTE + 1 ;

   6474  1 000565   200017 235100                    LDA     DISKETTE,,AUTO
         1 000566   000001 035007                    ADLA    1,DL
         1 000567   200017 755100                    STA     DISKETTE,,AUTO

      649     6475    4      END /* WHILE */ ;

   6475  1 000570   200021 236100                    LDQ     LAST_DISKETTE,,AUTO
         1 000571   200017 116100                    CMPQ    DISKETTE,,AUTO
         1 000572   000425 603000 1                  TRC     TRY_AGAIN

      650     6476           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:124  
      651     6477
      652     6478    3      CALL M_STORE_SUBCATALOG ALTRET (ERROR) ;

   6478  1 000573   001633 701000 1                  TSX1    M_STORE_SUBCATALOG
         1 000574   000630 702000 1                  TSX2    ERROR

      653     6479    3      CALL TOU$DFU_TF_WR_CATALOG_CONTROL ALTRET (ERROR) ;

   6479  1 000575   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000576   000000 701000 xent               TSX1    TOU$DFU_TF_WR_CATALOG_CONTROL
         1 000577   000630 702000 1                  TSX2    ERROR

      654     6480    3      IF CATALOG_EXISTED

   6480  1 000600   200013 470500                    LDP0    @CATALOG_EXISTED,,AUTO
         1 000601   000000 234100                    SZN     0,,PR0
         1 000602   000605 604000 1                  TMI     s:6483

      655     6481    3      THEN /* No MASTER catalog entry needed */ ;
      656     6482    3      ELSE CALL M_STORE_MASTER_CHANGES ALTRET (ERROR) ;

   6482  1 000603   001654 701000 1                  TSX1    M_STORE_MASTER_CHANGES
         1 000604   000630 702000 1                  TSX2    ERROR

      657     6483    3      CALL TOU$DFU_TF_WR_LAST_DECK# ALTRET (ERROR) ;

   6483  1 000605   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000606   000000 701000 xent               TSX1    TOU$DFU_TF_WR_LAST_DECK#
         1 000607   000630 702000 1                  TSX2    ERROR

      658     6484    3      RETURN ;

   6484  1 000610   200012 221300                    LDX1  ! @FIRST+2,,AUTO
         1 000611   000001 702211                    TSX2  ! 1,X1

      659     6485
      660     6486    3   ASK_ABORT :
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:125  
      661     6487    3      DUP.MSG_CODE = %E$MPMI_RETRY ;

   6487  1 000612   001150 235007       ASK_ABORT    LDA     616,DL
         1 000613   000020 755000 xsym               STA     DUP+16

      662     6488    3      CALL TOU$DU_OPERATOR_TEXT ;

   6488  1 000614   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000615   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 000616   000000 011000                    NOP     0

      663     6489    3      CALL M_GET_RESPONSE (%E$MPMI_ABORTQ) ALTRET (TRY_AGAIN) ;

   6489  1 000617   000012 236000 2                  LDQ     10
         1 000620   200043 756100                    STQ     @DRIVE_NUMBER+2,,AUTO
         1 000621   002546 701000 1                  TSX1    M_GET_RESPONSE
         1 000622   000425 702000 1                  TSX2    TRY_AGAIN

      664     6490    3      DUP.MSG_CODE = %E$MPMI_DISKETTE_ERR ;

   6490  1 000623   001144 235007                    LDA     612,DL
         1 000624   000020 755000 xsym               STA     DUP+16

      665     6491    3      CALL TOU$DU_USER_WRITE ;

   6491  1 000625   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000626   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000627   000000 011000                    NOP     0

      666     6492    3   ERROR:
      667     6493    3      ALTRETURN ;

   6493  1 000630   200012 221300       ERROR        LDX1  ! @FIRST+2,,AUTO
         1 000631   000000 702211                    TSX2  ! 0,X1

      668     6494
      669     6495
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:126  
      670     6496    3   END M_PROCESS_MCA_INPUT ;
      671     6497        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:127  
      672     6498        /*I* NAME:         M_SETUP_CATALOG
      673     6499             AUTHOR:       Scott S. Sheppard
      674     6500             PURPOSE:      obtains current catalog values
      675     6501             INTERFACE:    TOU$DFU_DF_RD_CATALOG_CONTROL
      676     6502             PARAMETERS:   None passed.
      677     6503             DATA:         CATALOG_KEY - must already be set
      678     6504                           CATALOG_DATA - output then input
      679     6505                           CATALOG_ENTRY_KEY - output
      680     6506             DESCRIPTION:  This  procedure  sets  up  a  catalog  to  its
      681     6507                           current  values. When a  catalog is built from
      682     6508                           scratch,    the   routine   TOU$B_GET_CATALOG,
      683     6509                           initializes  these fields  to starting values.
      684     6510                           Since the catalog  exists, starting values can
      685     6511                           not  be used;  current ones  must be read from
      686     6512                           the deckfile.
      687     6513        */
      688     6514
      689     6515    2   M_SETUP_CATALOG: PROC ALTRET ;

   6515  1 000632   200030 741300       M_SETUP_CAT* STX1  ! PRODUCT_SET+5,,AUTO

      690     6516
      691     6517        /* Code */
      692     6518
      693     6519    3      CALL TOU$DFU_DF_RD_CATALOG_CONTROL ALTRET (ERROR) ;

   6519  1 000633   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000634   000000 701000 xent               TSX1    TOU$DFU_DF_RD_CATALOG_CONTROL
         1 000635   000652 702000 1                  TSX2    ERROR

      694     6520    3      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;

   6520  1 000636   000000 236000 xsym               LDQ     CATALOG_DATA
         1 000637   000011 772000                    QRL     9
         1 000640   000000 552030 xsym               STBQ    CATALOG_ENTRY_KEY,'30'O

      695     6521    3      CATALOG_ENTRY_KEY.ENTRY# = CATALOG_DATA.ENTRY_COUNT + 1 ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:128  

   6521  1 000641   000000 236000 xsym               LDQ     CATALOG_DATA
         1 000642   777777 376007                    ANQ     -1,DL
         1 000643   000001 036007                    ADLQ    1,DL
         1 000644   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 000645   000000 101500                    MRL     fill='000'O
         1 000646   200062 000004                    ADSC9   VALID_RESPONSE+1,,AUTO   cn=0,n=4
         1 000647   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      696     6522    3      RETURN ;

   6522  1 000650   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 000651   000001 702211                    TSX2  ! 1,X1

      697     6523
      698     6524    3   ERROR:
      699     6525    3      ALTRETURN ;

   6525  1 000652   200030 221300       ERROR        LDX1  ! PRODUCT_SET+5,,AUTO
         1 000653   000000 702211                    TSX2  ! 0,X1

      700     6526
      701     6527    3   END M_SETUP_CATALOG ;
      702     6528        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:129  
      703     6529        /*I* NAME:          M_GET_CONFIG
      704     6530             AUTHOR:        Kirk J. Dixon
      705     6531             INTERFACE:     TOU$GET_CARD
      706     6532             PARAMETERS:    None passed.
      707     6533             DATA:          MCA-B contains the IDCW's and appropriate HDR for
      708     6534                            the read_config.
      709     6535             DESCRIPTION:   This procedure obtains the config information
      710     6536                            from the MCA diskette. We are particularly
      711     6537                            interested in the product set tab number.
      712     6538                            (Also reference config-related documentation
      713     6539                             M_PROCESS_MCA_INPUT ).
      714     6540        */
      715     6541        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:130  
      716     6542    2   M_GET_CONFIG: PROC  ALTRET ;

   6542  1 000654   200030 741300       M_GET_CONFIG STX1  ! PRODUCT_SET+5,,AUTO

      717     6543
      718     6544
      719     6545        /* Code */
      720     6546
      721     6547    3      CALL TOU$DU_MCA_RESET_STATUS ALTRET (ERROR) ;

   6547  1 000655   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000656   000000 701000 xent               TSX1    TOU$DU_MCA_RESET_STATUS
         1 000657   000672 702000 1                  TSX2    ERROR

      722     6548
      723     6549    3      CALL TOU$GET_CONFIG WHENRETURN

   6549  1 000660   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000661   000000 701000 xent               TSX1    TOU$GET_CONFIG
         1 000662   000670 702000 1                  TSX2    s:6556

      724     6550    4           DO ;

      725     6551    4              CALL TOU$DU_MCA_RESET_STATUS ALTRET (ERROR) ;

   6551  1 000663   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000664   000000 701000 xent               TSX1    TOU$DU_MCA_RESET_STATUS
         1 000665   000672 702000 1                  TSX2    ERROR

      726     6552    4              RETURN;

   6552  1 000666   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 000667   000001 702211                    TSX2  ! 1,X1

      727     6553    4           END /* WHENRETURN */ ;
      728     6554    3      WHENALTRETURN
      729     6555    4           DO ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:131  

      730     6556    4              ALTRETURN;

   6556  1 000670   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 000671   000000 702211                    TSX2  ! 0,X1

      731     6557    4           END /* WHENALTRETURN */ ;
      732     6558
      733     6559    3   ERROR:
      734     6560    3      ALTRETURN;

   6560  1 000672   200030 221300       ERROR        LDX1  ! PRODUCT_SET+5,,AUTO
         1 000673   000000 702211                    TSX2  ! 0,X1

      735     6561
      736     6562    3   END M_GET_CONFIG ;
      737     6563        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:132  
      738     6564        /*I* NAME:         M_GET_HEADER
      739     6565             AUTHOR:       Scott S. Sheppard
      740     6566             PURPOSE:      Obtains a Diskette Header
      741     6567             INTERFACE:    M_GET_RESPONSE
      742     6568                           M_HANDLE_ERROR
      743     6569                           TOU$GET_HEADER
      744     6570             PARAMETERS:   DISKETTE - input
      745     6571             DATA:         No external data accessed.
      746     6572             DESCRIPTION:  This procedure  obtains the header information
      747     6573                           for  an  MCA  diskette.   The procedure loops,
      748     6574                           attempting  to read  the information  from the
      749     6575                           diskette  in  the  drive  until  the  data  is
      750     6576                           obtained or an  irrecoverable error occurs. If
      751     6577                           the data is obtained the procedure RETURNS and
      752     6578                           ALTRETURNS otherwise.
      753     6579        */
      754     6580        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:133  
      755     6581    2   M_GET_HEADER: PROC (DISKETTE) ALTRET ;

   6581  1 000674   200030 741300       M_GET_HEADER STX1  ! PRODUCT_SET+5,,AUTO

      756     6582
      757     6583    3      DCL DISKETTE      UBIN WORD ALIGNED ;
      758     6584    3      DCL DATA_OBTAINED BIT (1) ALIGNED ;
      759     6585    3      DCL READ_POSSIBLE BIT (1) ALIGNED ;
      760     6586    3      DCL CUR#          UBIN WORD SYMREF ALIGNED ;
      761     6587
      762     6588        /* Code */
      763     6589
      764     6590    3      DATA_OBTAINED = %FALSE ;

   6590  1 000675   200032 450100                    STZ     DATA_OBTAINED,,AUTO

      765     6591    3      READ_POSSIBLE = %TRUE ;

   6591  1 000676   400000 236003                    LDQ     -131072,DU
         1 000677   200033 756100                    STQ     READ_POSSIBLE,,AUTO

      766     6592    3      CUR# = DISKETTE ;

   6592  1 000700   200031 470500                    LDP0    @DISKETTE,,AUTO
         1 000701   000000 235100                    LDA     0,,PR0
         1 000702   000000 755000 xsym               STA     CUR#

      767     6593    3      CALL TOU$DU_MCA_RESET_STATUS ALTRET (ERROR) ;

   6593  1 000703   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000704   000000 701000 xent               TSX1    TOU$DU_MCA_RESET_STATUS
         1 000705   000746 702000 1                  TSX2    ERROR

      768     6594
      769     6595    3      DUP.MSG_CODE = %E$MRC_STORY ;

   6595  1 000706   001130 235007                    LDA     600,DL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:134  
         1 000707   000020 755000 xsym               STA     DUP+16

      770     6596    3      CALL TOU$DU_OPERATOR_TEXT ;

   6596  1 000710   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000711   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 000712   000000 011000                    NOP     0

      771     6597    3      CALL M_GET_RESPONSE (%E$MGH_LOADQ) ALTRET (ERROR) ;

   6597  1 000713   000014 236000 2                  LDQ     12
         1 000714   200043 756100                    STQ     @DRIVE_NUMBER+2,,AUTO
         1 000715   002546 701000 1                  TSX1    M_GET_RESPONSE
         1 000716   000746 702000 1                  TSX2    ERROR

      772     6598
      773     6599    4      DO WHILE (~DATA_OBTAINED & READ_POSSIBLE) ;

   6599  1 000717   000734 710000 1                  TRA     s:6608

      774     6600    4         CALL TOU$GET_HEADER WHENRETURN

   6600  1 000720   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000721   000000 701000 xent               TSX1    TOU$GET_HEADER
         1 000722   000726 702000 1                  TSX2    s:6606

      775     6601    5              DO ;

      776     6602    5                 DATA_OBTAINED = %TRUE ;

   6602  1 000723   400000 236003                    LDQ     -131072,DU
         1 000724   200032 756100                    STQ     DATA_OBTAINED,,AUTO

      777     6603    5              END /* WHENRETURN */ ;

   6603  1 000725   000734 710000 1                  TRA     s:6608

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:135  
      778     6604    4         WHENALTRETURN
      779     6605    5              DO ;

      780     6606    5                 CALL M_HANDLE_ERROR (READ_POSSIBLE, DUP.IFAD.DRIVE_NUMBER) ;

   6606  1 000726   000015 236000 2                  LDQ     13
         1 000727   200036 756100                    STQ     CHANGE_NEEDED+1,,AUTO
         1 000730   200033 630500                    EPPR0   READ_POSSIBLE,,AUTO
         1 000731   200035 450500                    STP0    PTR$+1,,AUTO
         1 000732   000754 701000 1                  TSX1    M_HANDLE_ERROR
         1 000733   000000 011000                    NOP     0

      781     6607    5              END /* WHENALTRETURN */ ;

      782     6608    4      END /* WHILE */ ;

   6608  1 000734   200032 236100                    LDQ     DATA_OBTAINED,,AUTO
         1 000735   400000 376003                    ANQ     -131072,DU
         1 000736   400000 676003                    ERQ     -131072,DU
         1 000737   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 000740   200033 236100                    LDQ     READ_POSSIBLE,,AUTO
         1 000741   400000 376003                    ANQ     -131072,DU
         1 000742   200063 756100                    STQ     VALID_RESPONSE+2,,AUTO
         1 000743   200062 236100                    LDQ     VALID_RESPONSE+1,,AUTO
         1 000744   200063 376100                    ANQ     VALID_RESPONSE+2,,AUTO
         1 000745   000720 601000 1                  TNZ     s:6600

      783     6609
      784     6610    3   ERROR:
      785     6611    3      IF DATA_OBTAINED

   6611  1 000746   200032 234100       ERROR        SZN     DATA_OBTAINED,,AUTO
         1 000747   000752 605000 1                  TPL     s:6613

      786     6612    3      THEN RETURN ;

   6612  1 000750   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:136  
         1 000751   000001 702211                    TSX2  ! 1,X1

      787     6613    3      ELSE ALTRETURN ;

   6613  1 000752   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 000753   000000 702211                    TSX2  ! 0,X1

      788     6614
      789     6615        /* END M_GET_HEADER */
      790     6616        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:137  
      791     6617        /*I* NAME:         M_HANDLE_ERROR
      792     6618             AUTHOR:       Scott S. Sheppard
      793     6619             PURPOSE:      Handles Diskette I/O Errors
      794     6620             INTERFACE:    M_PROMPT_SAME_DRIVE
      795     6621                           M_PROMPT_NEXT_DRIVE
      796     6622             PARAMETERS:   READ_POSSIBLE - output
      797     6623                           DRIVE_NUMBER - passed to other routines
      798     6624             DATA:         No external data accessed.
      799     6625             DESCRIPTION:  This procedure attempts to handle the kinds of
      800     6626                           errors  that may  arise when  DEER attempts to
      801     6627                           read  the  header  from  an  MCA diskette. The
      802     6628                           header  is  the  first  thing  read  so if the
      803     6629                           shit's  going to  hit the  fan, it will happen
      804     6630                           here.  When  the  M_GET_HEADER  routine fails,
      805     6631                           this  procedure is called  with the STATUS and
      806     6632                           DRIVE_NUMBER  currently  set.   If  the  major
      807     6633                           status is attention diskette, the error may be
      808     6634                           a simple problem such as "DOOR LEFT OPEN." For
      809     6635                           these  types of errors,  DEER prompts the user
      810     6636                           to   determine   if   the   situation  can  be
      811     6637                           corrected,  and  thus  a  re-read  of the same
      812     6638                           drive may be  issued. For more serious errors,
      813     6639                           the operator is asked if  he wishes to try the
      814     6640                           other drive.
      815     6641        */
      816     6642
      817     6643    3   M_HANDLE_ERROR: PROC (READ_POSSIBLE, DRIVE_NUMBER) ;

   6643  1 000754   200034 741300       M_HANDLE_ER* STX1  ! DISKETTE_X+1,,AUTO

      818     6644
      819     6645    4      DCL READ_POSSIBLE    BIT (1) ALIGNED ;
      820     6646    4      DCL DRIVE_NUMBER     CHAR (1) CALIGNED ;
      821     6647           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:138  
      822     6648        /* Code */
      823     6649
      824     6650    5      DO SELECT (MCA_B.STATUS.MAJOR) ;

   6650  1 000755   000101 470400 xsym               LDP0    DUP+65
         1 000756   000024 236100                    LDQ     20,,PR0
         1 000757   170000 376003                    ANQ     61440,DU
         1 000760   020000 116003                    CMPQ    8192,DU
         1 000761   001034 601000 1                  TNZ     s:6680
         1 000762   000763 710000 1                  TRA     s:6652

      825     6651    5         SELECT (%ATTN_DISKETTE) ;

      826     6652    6         DO SELECT (MCA_B.STATUS.SUB.VALUE) ;

   6652  1 000763   000024 236100                    LDQ     20,,PR0
         1 000764   003700 376003                    ANQ     1984,DU
         1 000765   000400 116003                    CMPQ    256,DU
         1 000766   001021 602000 1                  TNC     s:6670
         1 000767   000024 236100                    LDQ     20,,PR0
         1 000770   003700 376003                    ANQ     1984,DU
         1 000771   000400 116003                    CMPQ    256,DU
         1 000772   001000 600000 1                  TZE     s:6654
         1 000773   000024 236100                    LDQ     20,,PR0
         1 000774   003700 376003                    ANQ     1984,DU
         1 000775   002000 116003                    CMPQ    1024,DU
         1 000776   001021 601000 1                  TNZ     s:6670
         1 000777   001000 710000 1                  TRA     s:6654

      827     6653    6            SELECT (%DEV_NOT_PRESENT, %DEV_IN_STANDBY) ;

      828     6654    6            CALL M_PROMPT_SAME_DRIVE WHENRETURN

   6654  1 001000   001040 701000 1                  TSX1    M_PROMPT_SAME_DRIVE
         1 001001   001006 702000 1                  TSX2    s:6660

      829     6655    7                 DO ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:139  

      830     6656    7                    READ_POSSIBLE = %TRUE ;

   6656  1 001002   400000 236003                    LDQ     -131072,DU
         1 001003   200035 470500                    LDP0    @READ_POSSIBLE,,AUTO
         1 001004   000000 756100                    STQ     0,,PR0

      831     6657    7                 END /* WHENRETURN */ ;

   6657  1 001005   001020 710000 1                  TRA     s:6668

      832     6658    6            WHENALTRETURN
      833     6659    7                 DO ;

      834     6660    7                    CALL M_PROMPT_NEXT_DRIVE (DRIVE_NUMBER) WHENRETURN

   6660  1 001006   200036 236100                    LDQ     @DRIVE_NUMBER,,AUTO
         1 001007   200041 756100                    STQ     INX+2,,AUTO
         1 001010   001056 701000 1                  TSX1    M_PROMPT_NEXT_DRIVE
         1 001011   001016 702000 1                  TSX2    s:6666

      835     6661    8                         DO ;

      836     6662    8                            READ_POSSIBLE = %TRUE ;

   6662  1 001012   400000 236003                    LDQ     -131072,DU
         1 001013   200035 470500                    LDP0    @READ_POSSIBLE,,AUTO
         1 001014   000000 756100                    STQ     0,,PR0

      837     6663    8                         END /* WHENRETURN */ ;

   6663  1 001015   001020 710000 1                  TRA     s:6668

      838     6664    7                    WHENALTRETURN
      839     6665    8                         DO ;

      840     6666    8                            READ_POSSIBLE = %FALSE ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:140  

   6666  1 001016   200035 470500                    LDP0    @READ_POSSIBLE,,AUTO
         1 001017   000000 450100                    STZ     0,,PR0

      841     6667    8                         END /* WHENALTRETURN */ ;

      842     6668    7                 END /* WHENALTRETURN */ ;

   6668  1 001020   001036 710000 1                  TRA     s:6682

      843     6669    6            SELECT (ELSE) ;

      844     6670    6         CALL M_PROMPT_NEXT_DRIVE (DRIVE_NUMBER) WHENRETURN

   6670  1 001021   200036 236100                    LDQ     @DRIVE_NUMBER,,AUTO
         1 001022   200041 756100                    STQ     INX+2,,AUTO
         1 001023   001056 701000 1                  TSX1    M_PROMPT_NEXT_DRIVE
         1 001024   001031 702000 1                  TSX2    s:6676

      845     6671    7              DO ;

      846     6672    7                 READ_POSSIBLE = %TRUE ;

   6672  1 001025   400000 236003                    LDQ     -131072,DU
         1 001026   200035 470500                    LDP0    @READ_POSSIBLE,,AUTO
         1 001027   000000 756100                    STQ     0,,PR0

      847     6673    7              END /* WHENRETURN */ ;

   6673  1 001030   001033 710000 1                  TRA     s:6678

      848     6674    6         WHENALTRETURN
      849     6675    7              DO ;

      850     6676    7                 READ_POSSIBLE = %FALSE ;

   6676  1 001031   200035 470500                    LDP0    @READ_POSSIBLE,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:141  
         1 001032   000000 450100                    STZ     0,,PR0

      851     6677    7              END /* WHENALTRETURN */ ;

      852     6678    6         END /* SELECT */ ;

   6678  1 001033   001036 710000 1                  TRA     s:6682

      853     6679    5      SELECT (ELSE) ;

      854     6680    5      READ_POSSIBLE = %FALSE ;

   6680  1 001034   200035 471500                    LDP1    @READ_POSSIBLE,,AUTO
         1 001035   100000 450100                    STZ     0,,PR1

      855     6681    5      END /* SELECT */ ;

      856     6682    4      RETURN ;

   6682  1 001036   200034 221300                    LDX1  ! DISKETTE_X+1,,AUTO
         1 001037   000001 702211                    TSX2  ! 1,X1

      857     6683        /* END M_HANDLE_ERROR */
      858     6684        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:142  
      859     6685        /*I* NAME:         M_PROMPT_SAME_DRIVE
      860     6686             AUTHOR:       Scott S. Sheppard
      861     6687             PURPOSE:      Asks operator to try on same drive
      862     6688             INTERFACE:    M_GET_RESPONSE
      863     6689                           TOU$DU_OPERATOR_TEXT
      864     6690             DATA:         No external data accessed.
      865     6691             DESCRIPTION:  This procedure determines if the operartor wishes
      866     6692                           to do a read  on the same drive that currently
      867     6693                           had a read failure.
      868     6694        */
      869     6695
      870     6696    4   M_PROMPT_SAME_DRIVE: PROC ALTRET ;

   6696  1 001040   200040 741300       M_PROMPT_SA* STX1  ! INX+1,,AUTO

      871     6697
      872     6698        /* Code */
      873     6699
      874     6700    5      DUP.MSG_CODE = %E$MPSD_SAME ;

   6700  1 001041   001131 235007                    LDA     601,DL
         1 001042   000020 755000 xsym               STA     DUP+16

      875     6701    5      CALL TOU$DU_OPERATOR_TEXT ;

   6701  1 001043   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001044   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 001045   000000 011000                    NOP     0

      876     6702    5      CALL M_GET_RESPONSE (%E$MPSD_SAMEQ) WHENRETURN

   6702  1 001046   000017 236000 2                  LDQ     15
         1 001047   200043 756100                    STQ     @DRIVE_NUMBER+2,,AUTO
         1 001050   002546 701000 1                  TSX1    M_GET_RESPONSE
         1 001051   001054 702000 1                  TSX2    s:6708

      877     6703    6           DO ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:143  

      878     6704    6              RETURN ;

   6704  1 001052   200040 221300                    LDX1  ! INX+1,,AUTO
         1 001053   000001 702211                    TSX2  ! 1,X1

      879     6705    6           END /* WHENRETURN */ ;
      880     6706    5      WHENALTRETURN
      881     6707    6           DO ;

      882     6708    6              ALTRETURN ;

   6708  1 001054   200040 221300                    LDX1  ! INX+1,,AUTO
         1 001055   000000 702211                    TSX2  ! 0,X1

      883     6709    6           END /* WHENALTRETURN */ ;
      884     6710
      885     6711    5   END M_PROMPT_SAME_DRIVE ;
      886     6712        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:144  
      887     6713        /*I* NAME:         M_PROMPT_NEXT_DRIVE
      888     6714             AUTHOR:       Scott S. Sheppard
      889     6715             PURPOSE:      Asks operator to try on other drive
      890     6716             INTERFACE:    M_GET_RESPONSE
      891     6717                           TOU$DU_OPERATOR_TEXT
      892     6718             PARAMETERS:   DRIVE_NUMBER - input / output
      893     6719             DATA:         No external data accessed.
      894     6720             DESCRIPTION:  This  procedure determines if  the user wishes
      895     6721                           to do a read  on the next drive on the IMU. An
      896     6722                           IMU may at most have  2  drives,  drive 0  and
      897     6723                           drive 1.    DEER processing always starts with
      898     6724                           drive 1 and then reverts to drive 0 if needed.
      899     6725        */
      900     6726
      901     6727    4   M_PROMPT_NEXT_DRIVE: PROC (DRIVE_NUMBER) ALTRET ;

   6727  1 001056   200040 741300       M_PROMPT_NE* STX1  ! INX+1,,AUTO

      902     6728
      903     6729    5      DCL DRIVE_NUMBER CHAR (1) CALIGNED ;
      904     6730
      905     6731    5      IF DRIVE_NUMBER = '1'

   6731  1 001057   200041 470500                    LDP0    @DRIVE_NUMBER,,AUTO
         1 001060   040000 106500                    CMPC    fill='040'O
         1 001061   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 001062   000020 000001 2                  ADSC9   16                       cn=0,n=1
         1 001063   001105 601000 1                  TNZ     s:6745

      906     6732    6      THEN DO ;

      907     6733    6              DUP.MSG_CODE = %E$MPND_NEXT ;

   6733  1 001064   001132 235007                    LDA     602,DL
         1 001065   000020 755000 xsym               STA     DUP+16

      908     6734    6              CALL TOU$DU_OPERATOR_TEXT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:145  

   6734  1 001066   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001067   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 001070   000000 011000                    NOP     0

      909     6735    6              CALL M_GET_RESPONSE (%E$MPND_NEXTQ) WHENRETURN

   6735  1 001071   000022 236000 2                  LDQ     18
         1 001072   200043 756100                    STQ     @DRIVE_NUMBER+2,,AUTO
         1 001073   002546 701000 1                  TSX1    M_GET_RESPONSE
         1 001074   001103 702000 1                  TSX2    s:6742

      910     6736    7                   DO ;

      911     6737    7                      DRIVE_NUMBER = '0' ;

   6737  1 001075   200041 470500                    LDP0    @DRIVE_NUMBER,,AUTO
         1 001076   040100 100400                    MLR     fill='040'O
         1 001077   000023 000001 2                  ADSC9   19                       cn=0,n=1
         1 001100   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      912     6738    7                      RETURN ;

   6738  1 001101   200040 221300                    LDX1  ! INX+1,,AUTO
         1 001102   000001 702211                    TSX2  ! 1,X1

      913     6739    7                   END /* WHENRETURN */ ;
      914     6740    6              WHENALTRETURN
      915     6741    7                   DO ;

      916     6742    7                      ALTRETURN ;

   6742  1 001103   200040 221300                    LDX1  ! INX+1,,AUTO
         1 001104   000000 702211                    TSX2  ! 0,X1

      917     6743    7                   END /* WHENALTRETURN */ ;
      918     6744    6           END /* THEN */ ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:146  
      919     6745    5      ELSE ALTRETURN ;

   6745  1 001105   000000 702211                    TSX2  ! 0,X1

      920     6746
      921     6747    5   END M_PROMPT_NEXT_DRIVE ;
      922     6748    4   END M_HANDLE_ERROR ;
      923     6749    3   END M_GET_HEADER ;
      924     6750        /*I* NAME:         M_CHECK_TND_DISKETTE
      925     6751             AUTHOR:       Scott S. Sheppard
      926     6752                           Kathy Larkin
      927     6753             PURPOSE:      Ensures that a diskette is for T&D
      928     6754             INTERFACE:    ADDR function
      929     6755                           TOU$DU_OPERATOR_TEXT
      930     6756             PARAMETERS:   None passed.
      931     6757             DATA:         MCA_B.DISKETTE_HEADER.DATA - input
      932     6758                              DISKETTE_HEADER.TITLE
      933     6759                              DISKETTE_HEADER.DISK_TYPE
      934     6760                           DUP.MSG_CODE - output
      935     6761                           CUR# - output
      936     6762             DESCRIPTION:  This procedure is  the first level of checking
      937     6763                           for a  diskette that has been  inserted into a
      938     6764                           drive  on  the   DIPPER  box.  This  procedure
      939     6765                           ensures  that the  diskette is  actually a TND
      940     6766                           diskette.
      941     6767                              DISK_TYPE binary should be: 3 for UTIL
      942     6768                                               error  if: 1 for PHXSHP
      943     6769                                                          2 for PRODFW
      944     6770        */
      945     6771        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:147  
      946     6772    2   M_CHECK_TND_DISKETTE: PROC ALTRET ;

   6772  1 001106   200030 741300       M_CHECK_TND* STX1  ! PRODUCT_SET+5,,AUTO

      947     6773
      948     6774    3      DCL PTR$        PTR ALIGNED ;
      949     6775    3      DCL CUR#        UBIN WORD SYMREF ALIGNED ;
      950     6776           %DISKETTE_HEADER (STCLASS = "BASED (PTR$)") ;
      951     6812
      952     6813        /* Code */
      953     6814
      954     6815    3      PTR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;

   6815  1 001107   000101 236000 xsym               LDQ     DUP+65
         1 001110   000036 036003                    ADLQ    30,DU
         1 001111   200031 756100                    STQ     PTR$,,AUTO

      955     6816    3      IF SUBSTR (DISKETTE_HEADER.TITLE, 0, 4) = 'UTIL'

   6816  1 001112   200031 470500                    LDP0    PTR$,,AUTO
         1 001113   040000 106500                    CMPC    fill='040'O
         1 001114   000015 600004                    ADSC9   13,,PR0                  cn=3,n=4
         1 001115   000031 000004 0                  ADSC9   STRING+25                cn=0,n=4
         1 001116   001151 601000 1                  TNZ     s:6833

      956     6817    3      THEN IF DISKETTE_HEADER.DISK_TYPE = 3

   6817  1 001117   000100 101500                    MRL     fill='000'O
         1 001120   000032 000001                    ADSC9   26,,PR0                  cn=0,n=1
         1 001121   200062 000004                    ADSC9   VALID_RESPONSE+1,,AUTO   cn=0,n=4
         1 001122   200062 236100                    LDQ     VALID_RESPONSE+1,,AUTO
         1 001123   000003 116007                    CMPQ    3,DL
         1 001124   001143 601000 1                  TNZ     s:6830

      957     6818    4         THEN DO;

      958     6819    4                 IF (DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB = '001') OR
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:148  

   6819  1 001125   040000 106500                    CMPC    fill='040'O
         1 001126   000035 600003                    ADSC9   29,,PR0                  cn=3,n=3
         1 001127   000032 000003 0                  ADSC9   STRING+26                cn=0,n=3
         1 001130   001135 600000 1                  TZE     s:6822
         1 001131   040000 106500                    CMPC    fill='040'O
         1 001132   000035 600003                    ADSC9   29,,PR0                  cn=3,n=3
         1 001133   000033 000003 0                  ADSC9   STRING+27                cn=0,n=3
         1 001134   001142 601000 1                  TNZ     s:6827

      959     6820    4                         (DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB = 'XXX')
      960     6821    5                 THEN DO;  /* GET TAB FROM  MCA CONFIG */

      961     6822    5                         DUP.IFAD.IMU_TAB = %TRUE;

   6822  1 001135   000400 236007                    LDQ     256,DL
         1 001136   000057 256000 xsym               ORSQ    DUP+47

      962     6823    5                         DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB =

   6823  1 001137   040100 100400                    MLR     fill='040'O
         1 001140   000060 000003 xsym               ADSC9   DUP+48                   cn=0,n=3
         1 001141   000035 600003                    ADSC9   29,,PR0                  cn=3,n=3

      963     6824    5                                 DUP.IFAD.CONFIG_TAB ;
      964     6825    5                      END; /* THEN DO */

      965     6826    4                 ELSE ; /* ALL OK, LEAVE DISKETTE_HEADER ASIS */
      966     6827    4                 RETURN;

   6827  1 001142   000001 702211                    TSX2  ! 1,X1

      967     6828    4              END; /* THEN DO */
      968     6829    4         ELSE DO ;

      969     6830    4                 DUP.MSG_CODE = %E$MCTD_BAD_DISK_TYPE ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:149  
   6830  1 001143   001133 235007                    LDA     603,DL
         1 001144   000020 755000 xsym               STA     DUP+16

      970     6831    4                 CUR# = DISKETTE_HEADER.DISK_TYPE ;

   6831  1 001145   000000 101500                    MRL     fill='000'O
         1 001146   000032 000001                    ADSC9   26,,PR0                  cn=0,n=1
         1 001147   000000 000004 xsym               ADSC9   CUR#                     cn=0,n=4

      971     6832    4              END /* ELSE */ ;

   6832  1 001150   001153 710000 1                  TRA     s:6835

      972     6833    3      ELSE DUP.MSG_CODE = %E$MCTD_BAD_DISK_TITLE ;

   6833  1 001151   001134 235007                    LDA     604,DL
         1 001152   000020 755000 xsym               STA     DUP+16

      973     6834
      974     6835    3      CALL TOU$DU_OPERATOR_TEXT ;

   6835  1 001153   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001154   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 001155   000000 011000                    NOP     0

      975     6836    3      ALTRETURN ;

   6836  1 001156   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001157   000000 702211                    TSX2  ! 0,X1

      976     6837
      977     6838    3   END M_CHECK_TND_DISKETTE ;
      978     6839        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:150  
      979     6840        /*I* NAME:         M_COMPUTE_LAST_DISKETTE
      980     6841             AUTHOR:       Scott S. Sheppard
      981     6842             PURPOSE:      Computes last diskette of product set
      982     6843             INTERFACE:    ADDR function
      983     6844                           TOU$DU_OPERATOR_TEXT
      984     6845             PARAMETERS:   LAST_DISKETTE - output
      985     6846                           PRODUCT_SET - output
      986     6847             DATA:         MCA_B.DISKETTE_HEADER.DATA - input
      987     6848                           DISKETTE_HEADER.TITLE
      988     6849                           DISKETTE_HEADER.X_OF_N
      989     6850             DESCRIPTION:  This   procedure  determines   the  number  of
      990     6851                           diskettes  in  the  diskette  product set. The
      991     6852                           routine  M_CHECK_PRODUCT_SET ensures  that the
      992     6853                           diskettes are mounted  in the proper sequence.
      993     6854                           This routine merely ensures that diskette 1 is
      994     6855                           mounted  first. If  it is  the header when has
      995     6856                           already  been  read  is  overlaid  and  the  N
      996     6857                           portion of the X of N field is grabbed.
      997     6858
      998     6859                           This procedure also sets the PRODUCT_SET param
      999     6860                           so other diskettes  for  the  same product set
     1000     6861                           may be checked for a match.
     1001     6862        */
     1002     6863        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:151  
     1003     6864    2   M_COMPUTE_LAST_DISKETTE: PROC (LAST_DISKETTE, PRODUCT_SET) ALTRET ;

   6864  1 001160   200030 741300       M_COMPUTE_L* STX1  ! PRODUCT_SET+5,,AUTO

     1004     6865
     1005     6866    3      DCL LAST_DISKETTE  UBIN WORD ALIGNED ;
     1006     6867    3      DCL 1 PRODUCT_SET,
     1007     6868    3            2 EQUIP_TYPE  CHAR (4) CALIGNED,
     1008     6869    3            2 DWG_NUM     CHAR (12) CALIGNED,
     1009     6870    3            2 NUM_TAB     CHAR (3) CALIGNED ;
     1010     6871    3      DCL PTR$           PTR ALIGNED ;
     1011     6872           %DISKETTE_HEADER (STCLASS = "BASED (PTR$)") ;
     1012     6908
     1013     6909        /* Code */
     1014     6910
     1015     6911    3      PTR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;

   6911  1 001161   000101 236000 xsym               LDQ     DUP+65
         1 001162   000036 036003                    ADLQ    30,DU
         1 001163   200033 756100                    STQ     PTR$,,AUTO

     1016     6912    3      IF (DISKETTE_HEADER.X_OF_N.X = '1')

   6912  1 001164   200033 470500                    LDP0    PTR$,,AUTO
         1 001165   040000 106500                    CMPC    fill='040'O
         1 001166   000041 400001                    ADSC9   33,,PR0                  cn=2,n=1
         1 001167   000020 000001 2                  ADSC9   16                       cn=0,n=1
         1 001170   001211 601000 1                  TNZ     s:6921

     1017     6913    4      THEN DO ;

     1018     6914    4              CALL CHARBIN (LAST_DISKETTE, DISKETTE_HEADER.X_OF_N.N) ;

   6914  1 001171   200031 471500                    LDP1    @LAST_DISKETTE,,AUTO
         1 001172   000100 305500                    DTB
         1 001173   000041 630001                    NDSC9   33,,PR0                  cn=3,s=nosgn,sf=0,n=1
         1 001174   100000 000004                    NDSC9   0,,PR1                   cn=0,s=lsgnf,sf=0,n=4
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:152  

     1019     6915    4              PRODUCT_SET.EQUIP_TYPE = DISKETTE_HEADER.EQUIP_TYPE ;

   6915  1 001175   200032 473500                    LDP3    @PRODUCT_SET,,AUTO
         1 001176   040100 100500                    MLR     fill='040'O
         1 001177   000032 400004                    ADSC9   26,,PR0                  cn=2,n=4
         1 001200   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

     1020     6916    4              PRODUCT_SET.DWG_NUM = DISKETTE_HEADER.DISK_DWG_NUM ;

   6916  1 001201   040100 100500                    MLR     fill='040'O
         1 001202   000036 400014                    ADSC9   30,,PR0                  cn=2,n=12
         1 001203   300001 000014                    ADSC9   1,,PR3                   cn=0,n=12

     1021     6917    4              PRODUCT_SET.NUM_TAB = DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB ;

   6917  1 001204   040100 100500                    MLR     fill='040'O
         1 001205   000035 600003                    ADSC9   29,,PR0                  cn=3,n=3
         1 001206   300004 000003                    ADSC9   4,,PR3                   cn=0,n=3

     1022     6918    4              RETURN ;

   6918  1 001207   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001210   000001 702211                    TSX2  ! 1,X1

     1023     6919    4           END /* THEN */ ;
     1024     6920    4      ELSE DO ;

     1025     6921    4              DUP.MSG_CODE = %E$MCLD_NOT_FIRST ;

   6921  1 001211   001135 235007                    LDA     605,DL
         1 001212   000020 755000 xsym               STA     DUP+16

     1026     6922    4              CALL TOU$DU_OPERATOR_TEXT ;

   6922  1 001213   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001214   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:153  
         1 001215   000000 011000                    NOP     0

     1027     6923    4              ALTRETURN ;

   6923  1 001216   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001217   000000 702211                    TSX2  ! 0,X1

     1028     6924    4           END /* ELSE */ ;
     1029     6925
     1030     6926    3   END M_COMPUTE_LAST_DISKETTE ;
     1031     6927        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:154  
     1032     6928        /*I* NAME:         M_CHECK_ALREADY_MERGED
     1033     6929             AUTHOR:       Scott S. Sheppard
     1034     6930             PURPOSE:      ensures that a diskette set is not mounted twice
     1035     6931             INTERFACE:    ADDR function
     1036     6932                           BINCHAR function
     1037     6933                           CONCAT function
     1038     6934                           TOU$DFU_DF_CHECK_ALREADY_SAVED
     1039     6935                           TOU$DU_USER_WRITE
     1040     6936             PARAMETERS:   None passed.
     1041     6937             DATA:         MCA_B.DISKETTE_HEADER.DATA - input
     1042     6938                              DISKETTE_HEADER.EQUIP_TYPE
     1043     6939                              DISKETTE_HEADER.DISK_DWG_NUM
     1044     6940                              DISKETTE_HEADER.X_OF_N.N
     1045     6941                           OBJECT_KEY.DATA - output
     1046     6942                           DUP.MSG_CODE - output
     1047     6943             DESCRIPTION:  This procedure ensures that a diskette product
     1048     6944                           set  is not  mounted twice.  This procedure is
     1049     6945                           called  after the  header information  is read
     1050     6946                           from the diskette. This information is used to
     1051     6947                           set up  the deckfile object key  for the first
     1052     6948                           hdr file of the  product set.  A keyed read is
     1053     6949                           then  done  on   the  deckfile.  If  the  read
     1054     6950                           returns, the key exists, and thus the diskette
     1055     6951                           product set must  have already been merged in.
     1056     6952                           Note,  this  is  possible  because each time a
     1057     6953                           diskette product set is modified, the diskette
     1058     6954                           product  tab number changes.  Hence, a product
     1059     6955                           set  can uniquely  be identified  by equipment
     1060     6956                           type and product tab number.
     1061     6957        */
     1062     6958        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:155  
     1063     6959    2   M_CHECK_ALREADY_MERGED: PROC ALTRET ;

   6959  1 001220   200030 741300       M_CHECK_ALR* STX1  ! PRODUCT_SET+5,,AUTO

     1064     6960
     1065     6961    3      DCL HDR$        PTR ALIGNED ;
     1066     6962           %DISKETTE_HEADER (STCLASS = "BASED (HDR$)") ;
     1067     6998
     1068     6999        /* Code */
     1069     7000
     1070     7001           /* set up the object key for the first diskette header */
     1071     7002    3      HDR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;

   7002  1 001221   000101 236000 xsym               LDQ     DUP+65
         1 001222   000036 036003                    ADLQ    30,DU
         1 001223   200031 756100                    STQ     HDR$,,AUTO

     1072     7003    3      CALL CONCAT (OBJECT_KEY.DATA,

   7003  1 001224   000110 236003                    LDQ     72,DU
         1 001225   000000 552020 xsym               STBQ    OBJECT_KEY,'20'O
         1 001226   200031 470500                    LDP0    HDR$,,AUTO
         1 001227   040000 100500                    MLR     fill='040'O
         1 001230   000032 400004                    ADSC9   26,,PR0                  cn=2,n=4
         1 001231   000000 400004 xsym               ADSC9   OBJECT_KEY               cn=2,n=4
         1 001232   040000 100500                    MLR     fill='040'O
         1 001233   000017 600010                    ADSC9   15,,PR0                  cn=3,n=8
         1 001234   000001 400010 xsym               ADSC9   OBJECT_KEY+1             cn=2,n=8
         1 001235   040000 100500                    MLR     fill='040'O
         1 001236   000041 400002                    ADSC9   33,,PR0                  cn=2,n=2
         1 001237   000003 400002 xsym               ADSC9   OBJECT_KEY+3             cn=2,n=2
         1 001240   040000 100500                    MLR     fill='040'O
         1 001241   000035 600003                    ADSC9   29,,PR0                  cn=3,n=3
         1 001242   000004 000003 xsym               ADSC9   OBJECT_KEY+4             cn=0,n=3
         1 001243   040000 100400                    MLR     fill='040'O
         1 001244   000034 000003 0                  ADSC9   STRING+28                cn=0,n=3
         1 001245   000004 600005 xsym               ADSC9   OBJECT_KEY+4             cn=3,n=5
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:156  

     1073     7004    3              'H',
     1074     7005    3              DISKETTE_HEADER.EQUIP_TYPE,
     1075     7006    3              DISKETTE_HEADER.UNIQUE_ID,
     1076     7007    3              DISKETTE_HEADER.X_OF_N_,
     1077     7008    3              DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB,
     1078     7009    3              '000') ;
     1079     7010
     1080     7011           /* see if the key exists in the deckfile */
     1081     7012    3      CALL TOU$DFU_DF_CHECK_FOR_KEY WHENRETURN

   7012  1 001246   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001247   000000 701000 xent               TSX1    TOU$DFU_DF_CHECK_FOR_KEY
         1 001250   001260 702000 1                  TSX2    s:7020

     1082     7013    4           DO ;

     1083     7014    4              DUP.MSG_CODE = %E$MSH_ALREADY_IN ;

   7014  1 001251   001142 235007                    LDA     610,DL
         1 001252   000020 755000 xsym               STA     DUP+16

     1084     7015    4              CALL TOU$DU_USER_WRITE ;

   7015  1 001253   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001254   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 001255   000000 011000                    NOP     0

     1085     7016    4              ALTRETURN ;

   7016  1 001256   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001257   000000 702211                    TSX2  ! 0,X1

     1086     7017    4           END /* WHENRETURN */ ;
     1087     7018    3      WHENALTRETURN
     1088     7019    4           DO ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:157  
     1089     7020    4              RETURN ;

   7020  1 001260   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001261   000001 702211                    TSX2  ! 1,X1

     1090     7021    4           END /* WHENALTRETURN */ ;
     1091     7022
     1092     7023    3   END M_CHECK_ALREADY_MERGED ;
     1093     7024        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:158  
     1094     7025        /*I* NAME:         M_CHECK_PRODUCT_SET
     1095     7026             AUTHOR:       Scott S. Sheppard
     1096     7027             PURPOSE:      Checks product set and sequence number
     1097     7028             INTERFACE:    ADDR function
     1098     7029                           TOU$DU_OPERATOR_TEXT
     1099     7030             PARAMETERS:   DISKETTE - input
     1100     7031                           PRODUCT_SET - input
     1101     7032             DATA:         DUP.ERROR_IMAGE - output
     1102     7033                           CUR# - output
     1103     7034                           MCA_B.DISKETTE_HEADER.DATA - input
     1104     7035                           DISKETTE_HEADER.DISK_DWG_NUM
     1105     7036                           DISKETTE_HEADER.X_OF_N.X
     1106     7037             DESCRIPTION:  Dipper diskettes may be part of a product set.
     1107     7038                           A product set may be 3 diskettes, 1, 2, and 3.
     1108     7039                           This  procedure  checks  to  ensure  that if a
     1109     7040                           product set is  being added into the deckfile,
     1110     7041                           the diskettes are mounted in the proper order.
     1111     7042        */
     1112     7043
     1113     7044    2   M_CHECK_PRODUCT_SET: PROC (DISKETTE, PRODUCT_SET) ALTRET ;

   7044  1 001262   200030 741300       M_CHECK_PRO* STX1  ! PRODUCT_SET+5,,AUTO

     1114     7045
     1115     7046    3      DCL DISKETTE    UBIN WORD ALIGNED ;
     1116     7047    3      DCL DISKETTE_X  UBIN WORD ALIGNED ;
     1117     7048    3      DCL 1 PRODUCT_SET,
     1118     7049    3            2 EQUIP_TYPE  CHAR (4) CALIGNED,
     1119     7050    3            2 DWG_NUM     CHAR (12) CALIGNED,
     1120     7051    3            2 NUM_TAB     CHAR (3) CALIGNED ;
     1121     7052    3      DCL PTR$        PTR ALIGNED ;
     1122     7053    3      DCL CUR#        UBIN WORD SYMREF ALIGNED ;
     1123     7054           %DISKETTE_HEADER (STCLASS = "BASED (PTR$)") ;
     1124     7090           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:159  
     1125     7091        /* Code */
     1126     7092
     1127     7093    3      PTR$ = ADDR (MCA_B.DISKETTE_HEADER.DATA) ;

   7093  1 001263   000101 236000 xsym               LDQ     DUP+65
         1 001264   000036 036003                    ADLQ    30,DU
         1 001265   200034 756100                    STQ     PTR$,,AUTO

     1128     7094    3      IF DISKETTE_HEADER.EQUIP_TYPE = PRODUCT_SET.EQUIP_TYPE

   7094  1 001266   200034 470500                    LDP0    PTR$,,AUTO
         1 001267   200032 471500                    LDP1    @PRODUCT_SET,,AUTO
         1 001270   040100 106500                    CMPC    fill='040'O
         1 001271   000032 400004                    ADSC9   26,,PR0                  cn=2,n=4
         1 001272   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 001273   001323 601000 1                  TNZ     s:7114

     1129     7095    4      THEN DO;

     1130     7096    4              IF NOT DUP.IFAD.IMU_TAB

   7096  1 001274   000057 236000 xsym               LDQ     DUP+47
         1 001275   000400 316007                    CANQ    256,DL
         1 001276   001331 601000 1                  TNZ     s:7118

     1131     7097    5              THEN DO;

     1132     7098    5                      IF DISKETTE_HEADER.DISK_DWG_NUM ~= PRODUCT_SET.DWG_NUM

   7098  1 001277   040100 106500                    CMPC    fill='040'O
         1 001300   000036 400014                    ADSC9   30,,PR0                  cn=2,n=12
         1 001301   100001 000014                    ADSC9   1,,PR1                   cn=0,n=12
         1 001302   001311 600000 1                  TZE     s:7104

     1133     7099    6                      THEN DO;

     1134     7100    6                              DUP.MSG_CODE = %E$MCPS_WRONG_DWGNUM ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:160  

   7100  1 001303   001137 235007                    LDA     607,DL
         1 001304   000020 755000 xsym               STA     DUP+16

     1135     7101    6                              DUP.ERROR_IMAGE = PRODUCT_SET.DWG_NUM ;

   7101  1 001305   040000 100500                    MLR     fill='040'O
         1 001306   100001 000014                    ADSC9   1,,PR1                   cn=0,n=12
         1 001307   000032 000120 xsym               ADSC9   DUP+26                   cn=0,n=80

     1136     7102    6                              GOTO M_PS_ERROR;

   7102  1 001310   001345 710000 1                  TRA     M_PS_ERROR

     1137     7103    6                           END; /* THEN DO */
     1138     7104    5                      ELSE IF DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB ~=

   7104  1 001311   040100 106500                    CMPC    fill='040'O
         1 001312   000035 600003                    ADSC9   29,,PR0                  cn=3,n=3
         1 001313   100004 000003                    ADSC9   4,,PR1                   cn=0,n=3
         1 001314   001331 600000 1                  TZE     s:7118

     1139     7105    5                                 PRODUCT_SET.NUM_TAB
     1140     7106    6                         THEN DO ;

     1141     7107    6                                 DUP.MSG_CODE = %E$MCPS_WRONG_NUMTAB ;

   7107  1 001315   001141 235007                    LDA     609,DL
         1 001316   000020 755000 xsym               STA     DUP+16

     1142     7108    6                                 DUP.ERROR_IMAGE = PRODUCT_SET.NUM_TAB ;

   7108  1 001317   040000 100500                    MLR     fill='040'O
         1 001320   100004 000003                    ADSC9   4,,PR1                   cn=0,n=3
         1 001321   000032 000120 xsym               ADSC9   DUP+26                   cn=0,n=80

     1143     7109    6                                 GOTO M_PS_ERROR;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:161  

   7109  1 001322   001345 710000 1                  TRA     M_PS_ERROR

     1144     7110    6                              END; /* THEN DO */
     1145     7111    5                   END; /* THEN DO */
     1146     7112    4           END ; /* IF DISKETTE_HEADER.EQUIP_TYPE   THEN DO */
     1147     7113    4      ELSE DO ;

     1148     7114    4              DUP.MSG_CODE = %E$MCPS_WRONG_EQUIP ;

   7114  1 001323   001140 235007                    LDA     608,DL
         1 001324   000020 755000 xsym               STA     DUP+16

     1149     7115    4              DUP.ERROR_IMAGE = PRODUCT_SET.EQUIP_TYPE ;

   7115  1 001325   040000 100500                    MLR     fill='040'O
         1 001326   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 001327   000032 000120 xsym               ADSC9   DUP+26                   cn=0,n=80

     1150     7116    4              GOTO M_PS_ERROR;

   7116  1 001330   001345 710000 1                  TRA     M_PS_ERROR

     1151     7117    4           END; /* ELSE DO */
     1152     7118    3      CALL CHARBIN (DISKETTE_X, DISKETTE_HEADER.X_OF_N.X) ;

   7118  1 001331   000100 305500                    DTB
         1 001332   000041 430001                    NDSC9   33,,PR0                  cn=2,s=nosgn,sf=0,n=1
         1 001333   200033 000004                    NDSC9   DISKETTE_X,,AUTO         cn=0,s=lsgnf,sf=0,n=4

     1153     7119    3      IF DISKETTE_X = DISKETTE

   7119  1 001334   200031 473500                    LDP3    @DISKETTE,,AUTO
         1 001335   200033 236100                    LDQ     DISKETTE_X,,AUTO
         1 001336   300000 116100                    CMPQ    0,,PR3
         1 001337   001341 601000 1                  TNZ     s:7122

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:162  
     1154     7120    3      THEN RETURN ;

   7120  1 001340   000001 702211                    TSX2  ! 1,X1

     1155     7121    4      ELSE DO;

     1156     7122    4              DUP.MSG_CODE = %E$MCPS_WRONG_DISK;

   7122  1 001341   001136 235007                    LDA     606,DL
         1 001342   000020 755000 xsym               STA     DUP+16

     1157     7123    4              CUR# = DISKETTE;

   7123  1 001343   300000 235100                    LDA     0,,PR3
         1 001344   000000 755000 xsym               STA     CUR#

     1158     7124    4           END; /* ELSE DO */

     1159     7125    3   M_PS_ERROR:
     1160     7126    3      CALL TOU$DU_OPERATOR_TEXT;

   7126  1 001345   000002 631400 xsym  M_PS_ERROR   EPPR1   B_VECTNIL+2
         1 001346   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 001347   000000 011000                    NOP     0

     1161     7127    3      ALTRETURN;

   7127  1 001350   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001351   000000 702211                    TSX2  ! 0,X1

     1162     7128
     1163     7129    3   END M_CHECK_PRODUCT_SET ;
     1164     7130        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:163  
     1165     7131        /*I* NAME:         M_COMPUTE_LAST_DIR
     1166     7132             AUTHOR:       Scott S. Sheppard
     1167     7133             PURPOSE:      Computes Last Directory Index
     1168     7134             INTERFACE:    None called.
     1169     7135             PARAMETERS:   LAST_DIR - output
     1170     7136             DATA:         MCA_B.DIRECTORY.SIZE - input
     1171     7137             DESCRIPTION:  When a directory is read, the size in bytes is
     1172     7138                           stored in MCA_B.DIRECTORY.SIZE.     Since each
     1173     7139                           directory  entry  is  16  bytes, the number of
     1174     7140                           directories  can be  computed by  dividing the
     1175     7141                           size by  the length of a  directory. Since the
     1176     7142                           computed value  is used as the  upper bound of
     1177     7143                           an  iterative loop,  the last  directory index
     1178     7144                           instead  of  the   number  of  directories  is
     1179     7145                           returned, i.e. NUMBER - 1.
     1180     7146        */
     1181     7147
     1182     7148    2   M_COMPUTE_LAST_DIR: PROC (LAST_DIR) ;

   7148  1 001352   200030 741300       M_COMPUTE_L* STX1  ! PRODUCT_SET+5,,AUTO

     1183     7149
     1184     7150    3      DCL LAST_DIR  UBIN WORD ALIGNED ;
     1185     7151
     1186     7152        /* Code */
     1187     7153
     1188     7154    3      LAST_DIR = (MCA_B.DIRECTORY.SIZE / 16) - 1 ;

   7154  1 001353   000101 470400 xsym               LDP0    DUP+65
         1 001354   001310 236100                    LDQ     712,,PR0
         1 001355   000004 772000                    QRL     4
         1 001356   000001 136007                    SBLQ    1,DL
         1 001357   200031 471500                    LDP1    @LAST_DIR,,AUTO
         1 001360   100000 756100                    STQ     0,,PR1

     1189     7155    3      RETURN ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:164  
   7155  1 001361   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001362   000001 702211                    TSX2  ! 1,X1

     1190     7156
     1191     7157    3   END M_COMPUTE_LAST_DIR ;
     1192     7158        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:165  
     1193     7159        /*I* NAME:         M_GET_NEXT_DECK
     1194     7160             AUTHOR:       Scott S. Sheppard
     1195     7161             PURPOSE:      advances to the next deck
     1196     7162             INTERFACE:    INDEX function
     1197     7163                           SUBSTR function
     1198     7164             PARAMETERS:   None passed.
     1199     7165             DATA:         LAST.DECK# - output
     1200     7166                           LAST.EDIT_NAME - output
     1201     7167             DESCRIPTION:  This procedure advances program values so that
     1202     7168                           they may be used  for the next objecxt deck to
     1203     7169                           be stored. The last deck number is incremented
     1204     7170                           by one and the last edit name is advanced. The
     1205     7171                           last  edit name  is a  four character sequence
     1206     7172                           which  begins  with  a  $  sign  followed by 3
     1207     7173                           characters.  The  3  character  portion  is  a
     1208     7174                           sequence:
     1209     7175                              000
     1210     7176                              001
     1211     7177                              002
     1212     7178                              .
     1213     7179                              .
     1214     7180                              .
     1215     7181                              00Z
     1216     7182                              010
     1217     7183                              .
     1218     7184                              .
     1219     7185                              .
     1220     7186                              ZZZ
     1221     7187        */
     1222     7188        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:166  
     1223     7189    2   M_GET_NEXT_DECK: PROC ;

   7189  1 001363   200034 741300       M_GET_NEXT_* STX1  ! PTR$,,AUTO

     1224     7190
     1225     7191    3      DCL CHANGE_NEEDED BIT (1) CALIGNED ;
     1226     7192    3      DCL POSITION      UBIN WORD ALIGNED ;
     1227     7193    3      DCL INX           UBIN WORD ALIGNED ;
     1228     7194    3      DCL STRING        CHAR (0) CONSTANT CALIGNED INIT
     1229     7195    3             ('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') ;
     1230     7196
     1231     7197        /* Code */
     1232     7198
     1233     7199    3      LAST.DECK# = LAST.DECK# + 1 ;

   7199  1 001364   000000 220000 xsym               LDX0    LAST
         1 001365   000001 622010                    EAX2    1,X0
         1 001366   000000 742000 xsym               STX2    LAST

     1234     7200    3      CHANGE_NEEDED = %TRUE ;

   7200  1 001367   400000 236003                    LDQ     -131072,DU
         1 001370   200035 756100                    STQ     CHANGE_NEEDED,,AUTO

     1235     7201    3      POSITION = 3 ;

   7201  1 001371   000003 235007                    LDA     3,DL
         1 001372   200036 755100                    STA     POSITION,,AUTO

     1236     7202    4      DO WHILE (CHANGE_NEEDED) ;

   7202  1 001373   200035 234100                    SZN     CHANGE_NEEDED,,AUTO
         1 001374   001432 605000 1                  TPL     s:7218

     1237     7203    5         DO SELECT (SUBSTR (LAST.EDIT_NAME, POSITION, 1)) ;

   7203  1 001375   200036 235100                    LDA     POSITION,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:167  
         1 001376   040000 106405                    CMPC    fill='040'O
         1 001377   000000 400001 xsym               ADSC9   LAST,A                   cn=2,n=1
         1 001400   000024 000001 2                  ADSC9   20                       cn=0,n=1
         1 001401   001417 601000 1                  TNZ     s:7213
         1 001402   001403 710000 1                  TRA     s:7205

     1238     7204    5            SELECT ('Z') ;

     1239     7205    5            SUBSTR (LAST.EDIT_NAME, POSITION, 1) = '0' ;

   7205  1 001403   040005 100400                    MLR     fill='040'O
         1 001404   000023 000001 2                  ADSC9   19                       cn=0,n=1
         1 001405   000000 400001 xsym               ADSC9   LAST,A                   cn=2,n=1

     1240     7206    5            IF POSITION > 1

   7206  1 001406   000002 115007                    CMPA    2,DL
         1 001407   001415 602000 1                  TNC     s:7211

     1241     7207    6            THEN DO ;

     1242     7208    6                    CHANGE_NEEDED = %TRUE ;

   7208  1 001410   400000 236003                    LDQ     -131072,DU
         1 001411   200035 756100                    STQ     CHANGE_NEEDED,,AUTO

     1243     7209    6                    POSITION = POSITION - 1 ;

   7209  1 001412   000001 135007                    SBLA    1,DL
         1 001413   200036 755100                    STA     POSITION,,AUTO

     1244     7210    6                 END /* THEN */ ;

   7210  1 001414   001430 710000 1                  TRA     s:7217

     1245     7211    5            ELSE CHANGE_NEEDED = %FALSE ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:168  
   7211  1 001415   200035 450100                    STZ     CHANGE_NEEDED,,AUTO
         1 001416   001430 710000 1                  TRA     s:7217

     1246     7212    5            SELECT (ELSE) ;

     1247     7213    5         CALL INDEX (INX, SUBSTR (LAST.EDIT_NAME, POSITION, 1), STRING, 0);

   7213  1 001417   000005 124400                    SCM     mask='000'O
         1 001420   000000 000044 0                  ADSC9   STRING                   cn=0,n=36
         1 001421   000000 400001 xsym               ADSC9   LAST,A                   cn=2,n=1
         1 001422   200037 000100                    ARG     INX,,AUTO

     1248     7214    5         SUBSTR (LAST.EDIT_NAME, POSITION, 1) = SUBSTR (STRING, INX+1, 1) ;

   7214  1 001423   200037 236100                    LDQ     INX,,AUTO
         1 001424   040005 100406                    MLR     fill='040'O
         1 001425   000000 200001 0                  ADSC9   STRING,Q                 cn=1,n=1
         1 001426   000000 400001 xsym               ADSC9   LAST,A                   cn=2,n=1

     1249     7215    5         CHANGE_NEEDED = %FALSE ;

   7215  1 001427   200035 450100                    STZ     CHANGE_NEEDED,,AUTO

     1250     7216    5         END /* SELECT */ ;

     1251     7217    4      END /* WHILE */ ;

   7217  1 001430   200035 234100                    SZN     CHANGE_NEEDED,,AUTO
         1 001431   001375 604000 1                  TMI     s:7203

     1252     7218    3      RETURN ;

   7218  1 001432   200034 221300                    LDX1  ! PTR$,,AUTO
         1 001433   000001 702211                    TSX2  ! 1,X1

     1253     7219
     1254     7220    3   END M_GET_NEXT_DECK ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:169  
     1255     7221        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:170  
     1256     7222        /*I*  NAME:        M_STORE_OBJECT_DECK
     1257     7223              AUTHORS:     Dave Augustine
     1258     7224                           Scott Sheppard
     1259     7225                           Kathy Larkin
     1260     7226              PURPOSE:     Saves a Binary Deck in Tempfile
     1261     7227              INTERFACE:   TOU$CHECKSUM
     1262     7228                           TOU$MAKE_OBJECT_CARD
     1263     7229                           TOU$MAKE_DIR_OBJECT_CARD
     1264     7230                           TOU$MAKE_HDR_OBJECT_CARD
     1265     7231                           TOU$MAKE_DKEND_CARD
     1266     7232                           TOU$B_SET_OBJECT_KEY
     1267     7233                           TOU$DFU_TF_WR_OBJECT
     1268     7234                           TOU$DFU_TF_WR_FILE
     1269     7235                           TOU$DFU_TF_WR_DIR
     1270     7236                           TOU$DFU_TF_WR_HDR
     1271     7237                           TOU$DFU_TF_WR_BCD_CARDS
     1272     7238                           ADDR function
     1273     7239              PARAMETERS:  TYPE - input ('HEADER', 'DIRECTORY', or 'FILE')
     1274     7240                           SIZE - input
     1275     7241              INPUT:       LAST.DECK#
     1276     7242              OUTPUT:      OBJECT.DECK#
     1277     7243                           OBJECT.BINARY_COUNT - number of sectors
     1278     7244                           OBJECT.TOTAL_COUNT
     1279     7245                           OBJECT.LOAD_SIZE - number of words
     1280     7246                           OBJECT.DECK_CHECKSUM
     1281     7247                           OBJECT.CHECKSUM
     1282     7248                           OBJECT_KEY
     1283     7249                           BINARY_KEY.DECK#
     1284     7250                           BCD_KEY.DECK#
     1285     7251              DESCRIPTION: This procedure saves all of the records for an
     1286     7252                           object deck in the temporary file.
     1287     7253        */
     1288     7254        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:171  
     1289     7255    2   M_STORE_OBJECT_DECK: PROC (TYPE, SIZE) ALTRET ;

   7255  1 001434   200030 741300       M_STORE_OBJ* STX1  ! PRODUCT_SET+5,,AUTO

     1290     7256
     1291     7257    3      DCL TYPE        CHAR (9)  CALIGNED ;
     1292     7258    3      DCL SIZE        UBIN WORD ALIGNED ;
     1293     7259
     1294     7260        /* Code */
     1295     7261
     1296     7262    3      CALL M_GET_NEXT_DECK ;

   7262  1 001435   001363 701000 1                  TSX1    M_GET_NEXT_DECK
         1 001436   000000 011000                    NOP     0

     1297     7263
     1298     7264    4      DO SELECT (TYPE) ;

   7264  1 001437   200031 470500                    LDP0    @TYPE,,AUTO
         1 001440   040000 106500                    CMPC    fill='040'O
         1 001441   000000 000011                    ADSC9   0,,PR0                   cn=0,n=9
         1 001442   000025 000004 0                  ADSC9   STRING+21                cn=0,n=4
         1 001443   001452 602000 1                  TNC     s:7264+11
         1 001444   001457 600000 1                  TZE     s:7266
         1 001445   040000 106500                    CMPC    fill='040'O
         1 001446   000000 000011                    ADSC9   0,,PR0                   cn=0,n=9
         1 001447   000016 000006 0                  ADSC9   STRING+14                cn=0,n=6
         1 001450   001472 601000 1                  TNZ     s:7272
         1 001451   001463 710000 1                  TRA     s:7268
         1 001452   040000 106500                    CMPC    fill='040'O
         1 001453   000000 000011                    ADSC9   0,,PR0                   cn=0,n=9
         1 001454   000021 000011 0                  ADSC9   STRING+17                cn=0,n=9
         1 001455   001472 601000 1                  TNZ     s:7272
         1 001456   001467 710000 1                  TRA     s:7270

     1299     7265    4         SELECT ('FILE') ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:172  
     1300     7266    4         CALL TOU$MAKE_OBJECT_CARD ALTRET (ERROR) ;

   7266  1 001457   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001460   000000 701000 xent               TSX1    TOU$MAKE_OBJECT_CARD
         1 001461   001605 702000 1                  TSX2    ERROR
         1 001462   001472 710000 1                  TRA     s:7272

     1301     7267    4         SELECT ('HEADER') ;

     1302     7268    4         CALL TOU$MAKE_HDR_OBJECT_CARD ALTRET (ERROR) ;

   7268  1 001463   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001464   000000 701000 xent               TSX1    TOU$MAKE_HDR_OBJECT_CARD
         1 001465   001605 702000 1                  TSX2    ERROR
         1 001466   001472 710000 1                  TRA     s:7272

     1303     7269    4         SELECT ('DIRECTORY') ;

     1304     7270    4         CALL TOU$MAKE_DIR_OBJECT_CARD ALTRET (ERROR) ;

   7270  1 001467   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001470   000000 701000 xent               TSX1    TOU$MAKE_DIR_OBJECT_CARD
         1 001471   001605 702000 1                  TSX2    ERROR

     1305     7271    4      END /* SELECT */ ;

     1306     7272    3      CALL TOU$MAKE_DKEND_CARD ALTRET (ERROR) ;

   7272  1 001472   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001473   000000 701000 xent               TSX1    TOU$MAKE_DKEND_CARD
         1 001474   001605 702000 1                  TSX2    ERROR

     1307     7273    3      CALL TOU$B_SET_OBJECT_KEY ALTRET (ERROR) ;

   7273  1 001475   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001476   000000 701000 xent               TSX1    TOU$B_SET_OBJECT_KEY
         1 001477   001605 702000 1                  TSX2    ERROR
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:173  

     1308     7274    3      OBJECT.DECK# = LAST.DECK#;

   7274  1 001500   000000 220000 xsym               LDX0    LAST
         1 001501   000024 740000 xsym               STX0    OBJECT+20

     1309     7275    3      OBJECT.BINARY_COUNT = (SIZE + 255) / 256 ;

   7275  1 001502   200032 470500                    LDP0    @SIZE,,AUTO
         1 001503   000000 236100                    LDQ     0,,PR0
         1 001504   000377 036007                    ADLQ    255,DL
         1 001505   000010 772000                    QRL     8
         1 001506   000000 621006                    EAX1    0,QL
         1 001507   000024 441000 xsym               SXL1    OBJECT+20

     1310     7276    3      OBJECT.TOTAL_COUNT = OBJECT.BINARY_COUNT + 2 ;

   7276  1 001510   000002 622011                    EAX2    2,X1
         1 001511   000025 742000 xsym               STX2    OBJECT+21

     1311     7277    3      OBJECT.LOAD_SIZE = (SIZE + 3) / 4 ;

   7277  1 001512   000000 236100                    LDQ     0,,PR0
         1 001513   000003 036007                    ADLQ    3,DL
         1 001514   000002 772000                    QRL     2
         1 001515   000000 623006                    EAX3    0,QL
         1 001516   000025 443000 xsym               SXL3    OBJECT+21

     1312     7278    3      OBJECT.DECK_CHECKSUM = 0 ;

   7278  1 001517   000026 450000 xsym               STZ     OBJECT+22

     1313     7279    3      CALL TOU$CHECKSUM (0, ADDR (OBJECT), 23, OBJECT.CHECKSUM) ;

   7279  1 001520   000025 236000 2                  LDQ     21
         1 001521   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 001522   000030 237000 2                  LDAQ    24
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:174  
         1 001523   200066 757100                    STAQ    VALID_RESPONSE+5,,AUTO
         1 001524   200062 631500                    EPPR1   VALID_RESPONSE+1,,AUTO
         1 001525   200065 451500                    STP1    VALID_RESPONSE+4,,AUTO
         1 001526   000027 236000 2                  LDQ     23
         1 001527   200064 756100                    STQ     VALID_RESPONSE+3,,AUTO
         1 001530   200064 630500                    EPPR0   VALID_RESPONSE+3,,AUTO
         1 001531   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 001532   000000 701000 xent               TSX1    TOU$CHECKSUM
         1 001533   000000 011000                    NOP     0

     1314     7280
     1315     7281    3      CALL TOU$DFU_TF_WR_OBJECT ALTRET (ERROR) ;

   7281  1 001534   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001535   000000 701000 xent               TSX1    TOU$DFU_TF_WR_OBJECT
         1 001536   001605 702000 1                  TSX2    ERROR

     1316     7282    3      BINARY_KEY.DECK# = OBJECT.DECK# ;

   7282  1 001537   000024 236000 xsym               LDQ     OBJECT+20
         1 001540   000011 772000                    QRL     9
         1 001541   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

     1317     7283    4      DO SELECT (TYPE) ;

   7283  1 001542   200031 470500                    LDP0    @TYPE,,AUTO
         1 001543   040000 106500                    CMPC    fill='040'O
         1 001544   000000 000011                    ADSC9   0,,PR0                   cn=0,n=9
         1 001545   000025 000004 0                  ADSC9   STRING+21                cn=0,n=4
         1 001546   001555 602000 1                  TNC     s:7283+11
         1 001547   001562 600000 1                  TZE     s:7285
         1 001550   040000 106500                    CMPC    fill='040'O
         1 001551   000000 000011                    ADSC9   0,,PR0                   cn=0,n=9
         1 001552   000016 000006 0                  ADSC9   STRING+14                cn=0,n=6
         1 001553   001575 601000 1                  TNZ     s:7292
         1 001554   001566 710000 1                  TRA     s:7287
         1 001555   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:175  
         1 001556   000000 000011                    ADSC9   0,,PR0                   cn=0,n=9
         1 001557   000021 000011 0                  ADSC9   STRING+17                cn=0,n=9
         1 001560   001575 601000 1                  TNZ     s:7292
         1 001561   001572 710000 1                  TRA     s:7289

     1318     7284    4         SELECT ('FILE') ;

     1319     7285    4         CALL TOU$DFU_TF_WR_FILE ALTRET (ERROR) ;

   7285  1 001562   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001563   000000 701000 xent               TSX1    TOU$DFU_TF_WR_FILE
         1 001564   001605 702000 1                  TSX2    ERROR
         1 001565   001575 710000 1                  TRA     s:7292

     1320     7286    4         SELECT ('HEADER') ;

     1321     7287    4         CALL TOU$DFU_TF_WR_HDR ALTRET (ERROR) ;

   7287  1 001566   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001567   000000 701000 xent               TSX1    TOU$DFU_TF_WR_HDR
         1 001570   001605 702000 1                  TSX2    ERROR
         1 001571   001575 710000 1                  TRA     s:7292

     1322     7288    4         SELECT ('DIRECTORY') ;

     1323     7289    4         CALL TOU$DFU_TF_WR_DIR ALTRET (ERROR) ;

   7289  1 001572   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001573   000000 701000 xent               TSX1    TOU$DFU_TF_WR_DIR
         1 001574   001605 702000 1                  TSX2    ERROR

     1324     7290    4      END /* SELECT */ ;

     1325     7291
     1326     7292    3      BCD_KEY.DECK# = OBJECT.DECK# ;

   7292  1 001575   000024 236000 xsym               LDQ     OBJECT+20
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:176  
         1 001576   000011 772000                    QRL     9
         1 001577   000000 552030 xsym               STBQ    BCD_KEY,'30'O

     1327     7293    3      CALL TOU$DFU_TF_WR_BCD_CARDS ALTRET (ERROR) ;

   7293  1 001600   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001601   000000 701000 xent               TSX1    TOU$DFU_TF_WR_BCD_CARDS
         1 001602   001605 702000 1                  TSX2    ERROR

     1328     7294    3      RETURN ;

   7294  1 001603   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001604   000001 702211                    TSX2  ! 1,X1

     1329     7295
     1330     7296    3   ERROR:
     1331     7297    3      ALTRETURN ;

   7297  1 001605   200030 221300       ERROR        LDX1  ! PRODUCT_SET+5,,AUTO
         1 001606   000000 702211                    TSX2  ! 0,X1

     1332     7298
     1333     7299    3   END M_STORE_OBJECT_DECK;
     1334     7300        %EJECT;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:177  
     1335     7301        /*I*  NAME:        M_STORE_CATALOG_ENTRY
     1336     7302              AUTHORS:     David M. Augustine
     1337     7303                           Scott S. Sheppard
     1338     7304              PURPOSE:     Saves the Deck as a Catalog Entry
     1339     7305              INTERFACE:   TOU$DFU_TF_WR_CATALOG_ENTRY
     1340     7306              INPUT:       OBJECT_KEY
     1341     7307                           CATALOG_ENTRY_KEY.ENTRY#
     1342     7308                           CATALOG_ENTRY_KEY.ENTRY_COUNT
     1343     7309              OUTPUT:      CATALOG_DATA.CHECKSUM
     1344     7310                           CATALOG_ENTRY_KEY.ENTRY#
     1345     7311                           CATALOG_DATA.ENTRY_COUNT
     1346     7312              DESCRIPTION: This procedure is called to save the object deck as
     1347     7313                           an entry of the current catalog.
     1348     7314        */
     1349     7315
     1350     7316    2   M_STORE_CATALOG_ENTRY: PROC ALTRET ;

   7316  1 001607   200030 741300       M_STORE_CAT* STX1  ! PRODUCT_SET+5,,AUTO

     1351     7317
     1352     7318        /* Code */
     1353     7319
     1354     7320    3      CALL TOU$DFU_TF_WR_CATALOG_ENTRY ALTRET (ERROR) ;

   7320  1 001610   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001611   000000 701000 xent               TSX1    TOU$DFU_TF_WR_CATALOG_ENTRY
         1 001612   001631 702000 1                  TSX2    ERROR

     1355     7321    3      CATALOG_ENTRY_KEY.ENTRY# = CATALOG_ENTRY_KEY.ENTRY# + 1;

   7321  1 001613   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         1 001614   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         1 001615   000033 773000                    LRL     27
         1 001616   777777 376007                    ANQ     -1,DL
         1 001617   000001 036007                    ADLQ    1,DL
         1 001620   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 001621   000000 101500                    MRL     fill='000'O
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:178  
         1 001622   200062 000004                    ADSC9   VALID_RESPONSE+1,,AUTO   cn=0,n=4
         1 001623   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

     1356     7322    3      CATALOG_DATA.ENTRY_COUNT = CATALOG_DATA.ENTRY_COUNT + 1;

   7322  1 001624   000000 720000 xsym               LXL0    CATALOG_DATA
         1 001625   000001 621010                    EAX1    1,X0
         1 001626   000000 441000 xsym               SXL1    CATALOG_DATA

     1357     7323    3      RETURN;

   7323  1 001627   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001630   000001 702211                    TSX2  ! 1,X1

     1358     7324
     1359     7325    3   ERROR:
     1360     7326    3      ALTRETURN ;

   7326  1 001631   200030 221300       ERROR        LDX1  ! PRODUCT_SET+5,,AUTO
         1 001632   000000 702211                    TSX2  ! 0,X1

     1361     7327
     1362     7328    3   END M_STORE_CATALOG_ENTRY;
     1363     7329        %EJECT;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:179  
     1364     7330        /*I*  NAME:        M_STORE_SUBCATALOG
     1365     7331              AUTHORS:     David M. Augustine
     1366     7332                           Scott S. Sheppard
     1367     7333              PURPOSE:     Saves Subcatalog
     1368     7334              INTERFACE:   TOU$DFU_TF_WR_SUBCATALOG
     1369     7335              INPUT:       DUP.IFAD.FID
     1370     7336                           CATALOG_DATA.DECK#
     1371     7337              OUTPUT:      SUBCATALOG_DATA.IFAD_FID
     1372     7338                           SUBCATALOG_DATA.IFAD_FN
     1373     7339                           SUBCATALOG_KEY.DECK#
     1374     7340              DESCRIPTION: This procedure saves the subcatalog information
     1375     7341                           (IFAD file identifier and file number) for  the
     1376     7342                           current catalog being procesed.
     1377     7343        */
     1378     7344
     1379     7345    2   M_STORE_SUBCATALOG: PROC ALTRET ;

   7345  1 001633   200030 741300       M_STORE_SUB* STX1  ! PRODUCT_SET+5,,AUTO

     1380     7346
     1381     7347        /* Code */
     1382     7348
     1383     7349    3      SUBCATALOG_KEY.DECK# = CATALOG_DATA.DECK# ;

   7349  1 001634   000000 236000 xsym               LDQ     CATALOG_DATA
         1 001635   000011 772000                    QRL     9
         1 001636   000000 552030 xsym               STBQ    SUBCATALOG_KEY,'30'O

     1384     7350    3      SUBCATALOG_DATA.IFAD_FID = DUP.IFAD.FID ;

   7350  1 001637   040000 100400                    MLR     fill='040'O
         1 001640   000063 200050 xsym               ADSC9   DUP+51                   cn=1,n=40
         1 001641   000000 000050 xsym               ADSC9   SUBCATALOG_DATA          cn=0,n=40

     1385     7351    3      SUBCATALOG_DATA.IFAD_FN = 'diskettes' ;

   7351  1 001642   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:180  
         1 001643   000035 000011 0                  ADSC9   STRING+29                cn=0,n=9
         1 001644   000012 000014 xsym               ADSC9   SUBCATALOG_DATA+10       cn=0,n=12

     1386     7352    3      CALL TOU$DFU_TF_WR_SUBCATALOG ALTRET (ERROR) ;

   7352  1 001645   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001646   000000 701000 xent               TSX1    TOU$DFU_TF_WR_SUBCATALOG
         1 001647   001652 702000 1                  TSX2    ERROR

     1387     7353    3      RETURN ;

   7353  1 001650   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001651   000001 702211                    TSX2  ! 1,X1

     1388     7354
     1389     7355    3   ERROR:
     1390     7356    3      ALTRETURN ;

   7356  1 001652   200030 221300       ERROR        LDX1  ! PRODUCT_SET+5,,AUTO
         1 001653   000000 702211                    TSX2  ! 0,X1

     1391     7357
     1392     7358    3   END M_STORE_SUBCATALOG ;
     1393     7359        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:181  
     1394     7360        /*I*  NAME:        M_STORE_MASTER_CHANGES
     1395     7361              AUTHORS:     David M. Augustine
     1396     7362                           Scott S. Sheppard
     1397     7363              PURPOSE:     Saves Catalog as a Master Entry
     1398     7364              INTERFACE:   TOU$CHECKSUM
     1399     7365                           TOU$DFU_TF_WR_MASTER_ENTRY
     1400     7366                           TOU$DFU_TF_WR_MASTER_CONTROL
     1401     7367              INPUT:       MASTER_DATA
     1402     7368              OUTPUT:      MASTER_ENTRY_KEY
     1403     7369                           MASTER_DATA
     1404     7370              DESCRIPTION: This procedure saves the current catalog as an entry
     1405     7371                           of the master catalog.
     1406     7372        */
     1407     7373
     1408     7374    2   M_STORE_MASTER_CHANGES: PROC ALTRET ;

   7374  1 001654   200030 741300       M_STORE_MAS* STX1  ! PRODUCT_SET+5,,AUTO

     1409     7375
     1410     7376        /* Code */
     1411     7377
     1412     7378    3      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;

   7378  1 001655   000000 236000 xsym               LDQ     MASTER_DATA
         1 001656   000011 772000                    QRL     9
         1 001657   000000 552030 xsym               STBQ    MASTER_ENTRY_KEY,'30'O

     1413     7379    3      MASTER_ENTRY_KEY.ENTRY# = MASTER_DATA.ENTRY_COUNT + 1;

   7379  1 001660   000000 236000 xsym               LDQ     MASTER_DATA
         1 001661   777777 376007                    ANQ     -1,DL
         1 001662   000001 036007                    ADLQ    1,DL
         1 001663   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 001664   000000 101500                    MRL     fill='000'O
         1 001665   200062 000004                    ADSC9   VALID_RESPONSE+1,,AUTO   cn=0,n=4
         1 001666   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:182  
     1414     7380    3      MASTER_DATA.ENTRY_COUNT = MASTER_DATA.ENTRY_COUNT + 1;

   7380  1 001667   000000 720000 xsym               LXL0    MASTER_DATA
         1 001670   000001 622010                    EAX2    1,X0
         1 001671   000000 442000 xsym               SXL2    MASTER_DATA

     1415     7381    3      CALL TOU$DFU_TF_WR_MASTER_ENTRY ALTRET (ERROR) ;

   7381  1 001672   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001673   000000 701000 xent               TSX1    TOU$DFU_TF_WR_MASTER_ENTRY
         1 001674   001702 702000 1                  TSX2    ERROR

     1416     7382    3      CALL TOU$DFU_TF_WR_MASTER_CONTROL ALTRET (ERROR) ;

   7382  1 001675   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001676   000000 701000 xent               TSX1    TOU$DFU_TF_WR_MASTER_CONTROL
         1 001677   001702 702000 1                  TSX2    ERROR

     1417     7383    3      RETURN ;

   7383  1 001700   200030 221300                    LDX1  ! PRODUCT_SET+5,,AUTO
         1 001701   000001 702211                    TSX2  ! 1,X1

     1418     7384
     1419     7385    3   ERROR:
     1420     7386    3      ALTRETURN ;

   7386  1 001702   200030 221300       ERROR        LDX1  ! PRODUCT_SET+5,,AUTO
         1 001703   000000 702211                    TSX2  ! 0,X1

     1421     7387
     1422     7388    3   END M_STORE_MASTER_CHANGES ;
     1423     7389    2   END M_STORE_MCA_DATA ;
     1424     7390        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:183  
     1425     7391        /*I* NAME:         M_SAVE_MCA_DATA
     1426     7392             AUTHOR:       Scott S. Sheppard
     1427     7393             PURPOSE:      Saves TEMP file data into the deckfile
     1428     7394             INTERFACE:    M_PROCESS_TEMP
     1429     7395                           TOU$DFU_OPEN_TEMP
     1430     7396                           TOU$DFU_CLOSE_TEMP
     1431     7397             PARAMETERS:   EXISTED - input
     1432     7398                           FIRST - input
     1433     7399             DATA:         DUP.TEMP.OPEN_TYPE - output
     1434     7400                           DUP.TEMP.CLOSE_TYPE - output
     1435     7401             DESCRIPTION:  This  procedure  is  the  driver  used to read
     1436     7402                           information from the temporary  file and  save
     1437     7403                           it  in  the   deckfile.  The temporary file is
     1438     7404                           used  so  that  no  changes  are  made  to the
     1439     7405                           deckfile  until after  all data  to be altered
     1440     7406                           has successfully been read and validated.
     1441     7407        */
     1442     7408        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:184  
     1443     7409    1   M_SAVE_MCA_DATA: PROC (EXISTED, FIRST) ALTRET ;

   7409  1 001704   200006 741300       M_SAVE_MCA_* STX1  ! FIRST+2,,AUTO

     1444     7410
     1445     7411    2      DCL EXISTED BIT (1) ALIGNED ;
     1446     7412    2      DCL FIRST   UBIN WORD ALIGNED ;
     1447     7413
     1448     7414        /* Code */
     1449     7415
     1450     7416    2      DUP.BREAK_DISABLED = %TRUE ;

   7416  1 001705   000400 236003                    LDQ     256,DU
         1 001706   000155 256000 xsym               ORSQ    DUP+109

     1451     7417    2      DUP.TEMP.OPEN_TYPE = %READ_FILE ;

   7417  1 001707   000002 235007                    LDA     2,DL
         1 001710   000140 755000 xsym               STA     DUP+96

     1452     7418    2      CALL TOU$DFU_OPEN_TEMP ALTRET (ERROR) ;

   7418  1 001711   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001712   000000 701000 xent               TSX1    TOU$DFU_OPEN_TEMP
         1 001713   001733 702000 1                  TSX2    ERROR

     1453     7419
     1454     7420    2      CALL M_PROCESS_TEMP (EXISTED, FIRST) ALTRET (ERROR) ;

   7420  1 001714   200010 236100                    LDQ     @FIRST,,AUTO
         1 001715   200014 756100                    STQ     @FIRST_NEW_ENTRY,,AUTO
         1 001716   200007 236100                    LDQ     @EXISTED,,AUTO
         1 001717   200013 756100                    STQ     @CATALOG_EXISTED,,AUTO
         1 001720   001742 701000 1                  TSX1    M_PROCESS_TEMP
         1 001721   001733 702000 1                  TSX2    ERROR

     1455     7421
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:185  
     1456     7422    2      DUP.TEMP.CLOSE_TYPE = %DISCARD_FILE ;

   7422  1 001722   000001 235007                    LDA     1,DL
         1 001723   000141 755000 xsym               STA     DUP+97

     1457     7423    2      CALL TOU$DFU_CLOSE_TEMP ALTRET (ERROR) ;

   7423  1 001724   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001725   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         1 001726   001733 702000 1                  TSX2    ERROR

     1458     7424    2      DUP.BREAK_DISABLED = %FALSE ;

   7424  1 001727   000000 236000 2                  LDQ     0
         1 001730   000155 356000 xsym               ANSQ    DUP+109

     1459     7425    2      RETURN ;

   7425  1 001731   200006 221300                    LDX1  ! FIRST+2,,AUTO
         1 001732   000001 702211                    TSX2  ! 1,X1

     1460     7426
     1461     7427    2   ERROR:
     1462     7428    2      CALL TOU$DFU_CLOSE_TEMP ;

   7428  1 001733   000002 631400 xsym  ERROR        EPPR1   B_VECTNIL+2
         1 001734   000000 701000 xent               TSX1    TOU$DFU_CLOSE_TEMP
         1 001735   000000 011000                    NOP     0

     1463     7429    2      DUP.BREAK_DISABLED = %FALSE ;

   7429  1 001736   000000 236000 2                  LDQ     0
         1 001737   000155 356000 xsym               ANSQ    DUP+109

     1464     7430    2      ALTRETURN ;

   7430  1 001740   200006 221300                    LDX1  ! FIRST+2,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:186  
         1 001741   000000 702211                    TSX2  ! 0,X1

     1465     7431
     1466     7432        /* END M_SAVE_MCA_DATA */
     1467     7433        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:187  
     1468     7434        /*I*  NAME:        M_PROCESS_TEMP
     1469     7435              AUTHOR:      Scott S. Sheppard
     1470     7436              PURPOSE:     Processes TEMP Input to Deckfile
     1471     7437              INTERFACE:   M_SAVE_MASTER_CHANGES
     1472     7438                           M_SAVE_CATALOG_CONTROL
     1473     7439                           M_SAVE_SUBCATALOG
     1474     7440                           M_SAVE_CATALOG_ENTRY
     1475     7441                           M_SAVE_OBJECT_DECK
     1476     7442                           M_SAVE_LOG
     1477     7443                           M_ADJUST_REFLIST
     1478     7444                           M_SETUP_PRINT
     1479     7445                           TOU$B_PRINT_DECK_LINE
     1480     7446                           M_PRINT_MERGED_MSG
     1481     7447                           M_SAVE_LAST_DECK#
     1482     7448              INPUT:       DEER temporary file - contains catalog records
     1483     7449              OUTPUT:      DECKFILE            - catalog copied in
     1484     7450              DESCRIPTION: This procedure processes the temporary file. It adds
     1485     7451                           in any  object decks  for the catalog  (that are not
     1486     7452                           already in the file) and the catalog control inform-
     1487     7453                           ation to the deckfile.
     1488     7454        */
     1489     7455
     1490     7456    2   M_PROCESS_TEMP: PROC (CATALOG_EXISTED, FIRST_NEW) ALTRET ;

   7456  1 001742   200012 741300       M_PROCESS_T* STX1  ! @FIRST+2,,AUTO

     1491     7457
     1492     7458    3      DCL CATALOG_EXISTED BIT (1) ALIGNED ;
     1493     7459    3      DCL FIRST_NEW       UBIN WORD ALIGNED ;
     1494     7460           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:188  
     1495     7461        /* Code */
     1496     7462
     1497     7463    3      DUP.BREAK_DISABLED = %TRUE ;

   7463  1 001743   000400 236003                    LDQ     256,DU
         1 001744   000155 256000 xsym               ORSQ    DUP+109

     1498     7464    3      IF CATALOG_EXISTED

   7464  1 001745   200013 470500                    LDP0    @CATALOG_EXISTED,,AUTO
         1 001746   000000 234100                    SZN     0,,PR0
         1 001747   001752 604000 1                  TMI     s:7467

     1499     7465    3      THEN /* Do Nothing */ ;
     1500     7466    3      ELSE CALL M_SAVE_MASTER_CHANGES ALTRET (ERROR) ;

   7466  1 001750   002054 701000 1                  TSX1    M_SAVE_MASTER_CHANGES
         1 001751   002041 702000 1                  TSX2    ERROR

     1501     7467    3      CALL TOU$ND_SAVE_CATALOG_CONTROL ALTRET (ERROR) ;

   7467  1 001752   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001753   000000 701000 xent               TSX1    TOU$ND_SAVE_CATALOG_CONTROL
         1 001754   002041 702000 1                  TSX2    ERROR

     1502     7468    3      CALL M_SAVE_SUBCATALOG ALTRET (ERROR) ;

   7468  1 001755   002103 701000 1                  TSX1    M_SAVE_SUBCATALOG
         1 001756   002041 702000 1                  TSX2    ERROR

     1503     7469    3      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;

   7469  1 001757   000000 236000 xsym               LDQ     CATALOG_DATA
         1 001760   000011 772000                    QRL     9
         1 001761   000000 552030 xsym               STBQ    CATALOG_ENTRY_KEY,'30'O

     1504     7470    4      DO CATALOG_ENTRY_KEY.ENTRY# = FIRST_NEW TO CATALOG_DATA.ENTRY_COUNT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:189  

   7470  1 001762   200014 470500                    LDP0    @FIRST_NEW,,AUTO
         1 001763   000000 101500                    MRL     fill='000'O
         1 001764   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 001765   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2
         1 001766   002011 710000 1                  TRA     s:7475+9

     1505     7471    4         CALL M_SAVE_CATALOG_ENTRY ALTRET (ERROR) ;

   7471  1 001767   002121 701000 1                  TSX1    M_SAVE_CATALOG_ENTRY
         1 001770   002041 702000 1                  TSX2    ERROR

     1506     7472    4         CALL M_SAVE_OBJECT_DECK ALTRET (ERROR) ;

   7472  1 001771   002134 701000 1                  TSX1    M_SAVE_OBJECT_DECK
         1 001772   002041 702000 1                  TSX2    ERROR

     1507     7473    4         CALL M_SETUP_PRINT ;

   7473  1 001773   002476 701000 1                  TSX1    M_SETUP_PRINT
         1 001774   000000 011000                    NOP     0

     1508     7474    4         CALL TOU$B_PRINT_DECK_LINE ;

   7474  1 001775   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001776   000000 701000 xent               TSX1    TOU$B_PRINT_DECK_LINE
         1 001777   000000 011000                    NOP     0

     1509     7475    4      END /* DO */ ;

   7475  1 002000   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         1 002001   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         1 002002   000033 773000                    LRL     27
         1 002003   777777 376007                    ANQ     -1,DL
         1 002004   000001 036007                    ADLQ    1,DL
         1 002005   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 002006   000000 101500                    MRL     fill='000'O
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:190  
         1 002007   200062 000004                    ADSC9   VALID_RESPONSE+1,,AUTO   cn=0,n=4
         1 002010   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2
         1 002011   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         1 002012   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         1 002013   000033 773000                    LRL     27
         1 002014   777777 376007                    ANQ     -1,DL
         1 002015   200063 756100                    STQ     VALID_RESPONSE+2,,AUTO
         1 002016   000000 236000 xsym               LDQ     CATALOG_DATA
         1 002017   777777 376007                    ANQ     -1,DL
         1 002020   200063 116100                    CMPQ    VALID_RESPONSE+2,,AUTO
         1 002021   001767 605000 1                  TPL     s:7471

     1510     7476    3      CALL M_PRINT_MERGED_MSG (CATALOG_EXISTED) ;

   7476  1 002022   200013 236100                    LDQ     @CATALOG_EXISTED,,AUTO
         1 002023   200017 756100                    STQ     DISKETTE,,AUTO
         1 002024   002520 701000 1                  TSX1    M_PRINT_MERGED_MSG
         1 002025   000000 011000                    NOP     0

     1511     7477    3      CALL TOU$ND_SAVE_LAST_DECK# ALTRET (ERROR) ;

   7477  1 002026   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002027   000000 701000 xent               TSX1    TOU$ND_SAVE_LAST_DECK#
         1 002030   002041 702000 1                  TSX2    ERROR

     1512     7478    3      CALL M_SAVE_LOG (CATALOG_EXISTED) ALTRET (ERROR) ;

   7478  1 002031   200013 236100                    LDQ     @CATALOG_EXISTED,,AUTO
         1 002032   200017 756100                    STQ     DISKETTE,,AUTO
         1 002033   002442 701000 1                  TSX1    M_SAVE_LOG
         1 002034   002041 702000 1                  TSX2    ERROR

     1513     7479    3      DUP.BREAK_DISABLED = %FALSE ;

   7479  1 002035   000000 236000 2                  LDQ     0
         1 002036   000155 356000 xsym               ANSQ    DUP+109

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:191  
     1514     7480    3      RETURN ;

   7480  1 002037   200012 221300                    LDX1  ! @FIRST+2,,AUTO
         1 002040   000001 702211                    TSX2  ! 1,X1

     1515     7481
     1516     7482    3   ERROR:
     1517     7483    3      DUP.BREAK_DISABLED = %FALSE ;

   7483  1 002041   000000 236000 2     ERROR        LDQ     0
         1 002042   000155 356000 xsym               ANSQ    DUP+109

     1518     7484    3      DUP.DF.CLOSE_TYPE = %DISCARD_FILE ;

   7484  1 002043   000001 235007                    LDA     1,DL
         1 002044   000106 755000 xsym               STA     DUP+70

     1519     7485    3      DUP.MSG_CODE = %E$NPT_BAD_DECKFILE ;

   7485  1 002045   000674 235007                    LDA     444,DL
         1 002046   000020 755000 xsym               STA     DUP+16

     1520     7486    3      CALL TOU$DU_USER_WRITE ;

   7486  1 002047   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002050   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 002051   000000 011000                    NOP     0

     1521     7487    3      ALTRETURN ;

   7487  1 002052   200012 221300                    LDX1  ! @FIRST+2,,AUTO
         1 002053   000000 702211                    TSX2  ! 0,X1

     1522     7488
     1523     7489    3   END M_PROCESS_TEMP ;
     1524     7490        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:192  
     1525     7491        /*I*  NAME:        M_SAVE_MASTER_CHANGES
     1526     7492              AUTHOR:      Scott S. Sheppard
     1527     7493              PURPOSE:     Saves Master Entry and new Master Control
     1528     7494              INTERFACE:   TOU$DFU_TF_RD_MASTER_CONTROL
     1529     7495                           TOU$DFU_DF_WR_MASTER_CONTROL
     1530     7496                           TOU$DFU_TF_RD_MASTER_ENTRY
     1531     7497                           TOU$DFU_DF_WR_MASTER_ENTRY
     1532     7498              INPUT:       MASTER_DATA
     1533     7499              OUTPUT:      MASTER_ENTRY
     1534     7500              DESCRIPTION: This procedure saves the master entry for the
     1535     7501                           new catalog and the new Master Control.
     1536     7502        */
     1537     7503
     1538     7504    2   M_SAVE_MASTER_CHANGES: PROC ALTRET ;

   7504  1 002054   200016 741300       M_SAVE_MAST* STX1  ! WORK,,AUTO

     1539     7505
     1540     7506        /* Code */
     1541     7507
     1542     7508    3      CALL TOU$DFU_TF_RD_MASTER_CONTROL ALTRET (ERROR) ;

   7508  1 002055   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002056   000000 701000 xent               TSX1    TOU$DFU_TF_RD_MASTER_CONTROL
         1 002057   002101 702000 1                  TSX2    ERROR

     1543     7509    3      CALL TOU$DFU_DF_WR_MASTER_CONTROL ALTRET (ERROR) ;

   7509  1 002060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002061   000000 701000 xent               TSX1    TOU$DFU_DF_WR_MASTER_CONTROL
         1 002062   002101 702000 1                  TSX2    ERROR

     1544     7510    3      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;

   7510  1 002063   000000 236000 xsym               LDQ     MASTER_DATA
         1 002064   000011 772000                    QRL     9
         1 002065   000000 552030 xsym               STBQ    MASTER_ENTRY_KEY,'30'O
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:193  

     1545     7511    3      MASTER_ENTRY_KEY.ENTRY# = MASTER_DATA.ENTRY_COUNT ;

   7511  1 002066   000000 100400                    MLR     fill='000'O
         1 002067   000000 400002 xsym               ADSC9   MASTER_DATA              cn=2,n=2
         1 002070   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2

     1546     7512    3      CALL TOU$DFU_TF_RD_MASTER_ENTRY ALTRET (ERROR) ;

   7512  1 002071   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002072   000000 701000 xent               TSX1    TOU$DFU_TF_RD_MASTER_ENTRY
         1 002073   002101 702000 1                  TSX2    ERROR

     1547     7513    3      CALL TOU$DFU_DF_WR_MASTER_ENTRY ALTRET (ERROR) ;

   7513  1 002074   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002075   000000 701000 xent               TSX1    TOU$DFU_DF_WR_MASTER_ENTRY
         1 002076   002101 702000 1                  TSX2    ERROR

     1548     7514    3      RETURN ;

   7514  1 002077   200016 221300                    LDX1  ! WORK,,AUTO
         1 002100   000001 702211                    TSX2  ! 1,X1

     1549     7515
     1550     7516    3   ERROR:
     1551     7517    3      ALTRETURN ;

   7517  1 002101   200016 221300       ERROR        LDX1  ! WORK,,AUTO
         1 002102   000000 702211                    TSX2  ! 0,X1

     1552     7518
     1553     7519    3   END M_SAVE_MASTER_CHANGES ;
     1554     7520        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:194  
     1555     7521        /*I*  NAME:        M_SAVE_SUBCATALOG
     1556     7522              AUTHOR:      Scott S. Sheppard
     1557     7523              PURPOSE:     Saves Subcatalog
     1558     7524              INTERFACE:   TOU$DFU_TF_RD_SUBCATALOG
     1559     7525                           TOU$DFU_DF_WR_SUBCATALOG
     1560     7526              INPUT:       CATALOG_DATA
     1561     7527              OUTPUT:      SUBCATALOG_KEY
     1562     7528              DESCRIPTION: This procedure saves the  IFAD file id and file
     1563     7529                           number of the new catalog in the subcatalog for
     1564     7530                           the new catalog.
     1565     7531        */
     1566     7532
     1567     7533    2   M_SAVE_SUBCATALOG: PROC ALTRET ;

   7533  1 002103   200016 741300       M_SAVE_SUBC* STX1  ! WORK,,AUTO

     1568     7534
     1569     7535        /* Code */
     1570     7536
     1571     7537    3      SUBCATALOG_KEY.DECK# = CATALOG_DATA.DECK# ;

   7537  1 002104   000000 236000 xsym               LDQ     CATALOG_DATA
         1 002105   000011 772000                    QRL     9
         1 002106   000000 552030 xsym               STBQ    SUBCATALOG_KEY,'30'O

     1572     7538    3      CALL TOU$DFU_TF_RD_SUBCATALOG ALTRET (ERROR) ;

   7538  1 002107   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002110   000000 701000 xent               TSX1    TOU$DFU_TF_RD_SUBCATALOG
         1 002111   002117 702000 1                  TSX2    ERROR

     1573     7539    3      CALL TOU$DFU_DF_WR_SUBCATALOG ALTRET (ERROR) ;

   7539  1 002112   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002113   000000 701000 xent               TSX1    TOU$DFU_DF_WR_SUBCATALOG
         1 002114   002117 702000 1                  TSX2    ERROR

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:195  
     1574     7540    3      RETURN ;

   7540  1 002115   200016 221300                    LDX1  ! WORK,,AUTO
         1 002116   000001 702211                    TSX2  ! 1,X1

     1575     7541
     1576     7542    3   ERROR:
     1577     7543    3      ALTRETURN ;

   7543  1 002117   200016 221300       ERROR        LDX1  ! WORK,,AUTO
         1 002120   000000 702211                    TSX2  ! 0,X1

     1578     7544
     1579     7545    3   END M_SAVE_SUBCATALOG ;
     1580     7546        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:196  
     1581     7547        /*I*  NAME:        M_SAVE_CATALOG_ENTRY
     1582     7548              AUTHOR:      Scott S. Sheppard
     1583     7549              PURPOSE:     Saves Catalog Entry
     1584     7550              INTERFACE:   TOU$DFU_TF_RD_CATALOG_ENTRY
     1585     7551                           TOU$DFU_DF_WR_CATALOG_ENTRY
     1586     7552              INPUT:       CATALOG_ENTRY
     1587     7553              OUTPUT:      CATALOG_ENTRY
     1588     7554              DESCRIPTION: This procedure save a catalog entry for an object
     1589     7555                           deck of the new catalog.
     1590     7556        */
     1591     7557
     1592     7558    2   M_SAVE_CATALOG_ENTRY: PROC ALTRET ;

   7558  1 002121   200016 741300       M_SAVE_CATA* STX1  ! WORK,,AUTO

     1593     7559
     1594     7560        /* Code */
     1595     7561
     1596     7562    3      CALL TOU$DFU_TF_RD_CATALOG_ENTRY ALTRET (ERROR) ;

   7562  1 002122   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002123   000000 701000 xent               TSX1    TOU$DFU_TF_RD_CATALOG_ENTRY
         1 002124   002132 702000 1                  TSX2    ERROR

     1597     7563    3      CALL TOU$DFU_DF_WR_CATALOG_ENTRY ALTRET (ERROR) ;

   7563  1 002125   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002126   000000 701000 xent               TSX1    TOU$DFU_DF_WR_CATALOG_ENTRY
         1 002127   002132 702000 1                  TSX2    ERROR

     1598     7564    3      RETURN ;

   7564  1 002130   200016 221300                    LDX1  ! WORK,,AUTO
         1 002131   000001 702211                    TSX2  ! 1,X1

     1599     7565
     1600     7566    3   ERROR:
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:197  
     1601     7567    3      ALTRETURN ;

   7567  1 002132   200016 221300       ERROR        LDX1  ! WORK,,AUTO
         1 002133   000000 702211                    TSX2  ! 0,X1

     1602     7568
     1603     7569    3   END M_SAVE_CATALOG_ENTRY ;
     1604     7570        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:198  
     1605     7571        /*I*  NAME:        M_SAVE_OBJECT_DECK
     1606     7572              PURPOSE:     Saves an Object Deck in the deckfile
     1607     7573              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
     1608     7574                           M_SAVE_NEW_DECK
     1609     7575                           M_REPLACE_OLD_DECK
     1610     7576              INPUT:       OBJECT_KEY
     1611     7577              OUTPUT:      Appropriate module called to proces the deck
     1612     7578              DESCRIPTION: This procedure determines if the deck to be added
     1613     7579                           is already in the deckfile as part of a different
     1614     7580                           catalog.   If the deck exists, the reference list
     1615     7581                           is  changed  to  show  that  the  current catalog
     1616     7582                           references the deck.  If the deck does not exist,
     1617     7583                           the $object, binary, patch, and  $dkend cards are
     1618     7584                           added to the deckfile.
     1619     7585        */
     1620     7586
     1621     7587    2   M_SAVE_OBJECT_DECK: PROC ALTRET ;

   7587  1 002134   200016 741300       M_SAVE_OBJE* STX1  ! WORK,,AUTO

     1622     7588
     1623     7589        /* Code */
     1624     7590
     1625     7591    3      CALL TOU$DFU_DF_CHECK_FOR_KEY WHENRETURN

   7591  1 002135   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002136   000000 701000 xent               TSX1    TOU$DFU_DF_CHECK_FOR_KEY
         1 002137   002143 702000 1                  TSX2    s:7597

     1626     7592    4           DO ;

     1627     7593    4              CALL M_REPLACE_OLD_DECK ALTRET (ERROR) ;

   7593  1 002140   002274 701000 1                  TSX1    M_REPLACE_OLD_DECK
         1 002141   002147 702000 1                  TSX2    ERROR

     1628     7594    4           END /* WHENRETURN */ ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:199  

   7594  1 002142   002145 710000 1                  TRA     s:7599

     1629     7595    3      WHENALTRETURN
     1630     7596    4           DO ;

     1631     7597    4              CALL M_SAVE_NEW_DECK ALTRET (ERROR) ;

   7597  1 002143   002151 701000 1                  TSX1    M_SAVE_NEW_DECK
         1 002144   002147 702000 1                  TSX2    ERROR

     1632     7598    4           END /* WHENALTRETURN */ ;

     1633     7599    3      RETURN ;

   7599  1 002145   200016 221300                    LDX1  ! WORK,,AUTO
         1 002146   000001 702211                    TSX2  ! 1,X1

     1634     7600
     1635     7601    3   ERROR:
     1636     7602    3      ALTRETURN ;

   7602  1 002147   200016 221300       ERROR        LDX1  ! WORK,,AUTO
         1 002150   000000 702211                    TSX2  ! 0,X1

     1637     7603
     1638     7604        /* END M_SAVE_OBJECT_DECK */
     1639     7605        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:200  
     1640     7606        /*I*  NAME:        M_SAVE_NEW_DECK
     1641     7607              AUTHOR:      Scott S. Sheppard
     1642     7608              PURPOSE:     Saves an Object Deck
     1643     7609              INTERFACE:   TOU$DFU_DF_WR_OBJECT
     1644     7610                           TOU$DFU_TF_RD_FILE
     1645     7611                           TOU$DFU_TF_RD_DIR
     1646     7612                           TOU$DFU_TF_RD_HDR
     1647     7613                           TOU$DFU_DF_WR_FILE
     1648     7614                           TOU$DFU_DF_WR_DIR
     1649     7615                           TOU$DFU_DF_WR_HDR
     1650     7616                           TOU$DFU_TF_RD_BCD_CARDS
     1651     7617                           TOU$DFU_DF_WR_BCD_CARDS
     1652     7618                           TOU$DFU_DF_WR_OBJECT_REFLIST
     1653     7619              INPUT:       OBJECT
     1654     7620              OUTPUT:      BIN#
     1655     7621                           BINARY_KEY
     1656     7622                           BCD_KEY
     1657     7623                           BCD#
     1658     7624                           OBJECT_REFLIST_KEY
     1659     7625                           OBJECT_REFLIST_DATA
     1660     7626              DESCRIPTION: This procedure saves all of the records necessary
     1661     7627                           to add an object deck to the deckfile.    Records
     1662     7628                           are  read  from  the temporary file and  directly
     1663     7629                           copied into the deckfile.
     1664     7630        */
     1665     7631
     1666     7632    3   M_SAVE_NEW_DECK: PROC ALTRET ;

   7632  1 002151   200020 741300       M_SAVE_NEW_* STX1  ! DIRECTORY,,AUTO

     1667     7633
     1668     7634           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:201  
     1669     7635        /* Code */
     1670     7636
     1671     7637    4      CALL TOU$DFU_TF_RD_OBJECT ALTRET (ERROR) ;

   7637  1 002152   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002153   000000 701000 xent               TSX1    TOU$DFU_TF_RD_OBJECT
         1 002154   002272 702000 1                  TSX2    ERROR

     1672     7638    4      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;

   7638  1 002155   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002156   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT
         1 002157   002272 702000 1                  TSX2    ERROR

     1673     7639
     1674     7640    4      BINARY_KEY.DECK# = OBJECT.DECK# ;

   7640  1 002160   000024 236000 xsym               LDQ     OBJECT+20
         1 002161   000011 772000                    QRL     9
         1 002162   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

     1675     7641    4      BIN# = OBJECT.BINARY_COUNT ;

   7641  1 002163   000024 236000 xsym               LDQ     OBJECT+20
         1 002164   777777 376007                    ANQ     -1,DL
         1 002165   000000 756000 xsym               STQ     BIN#

     1676     7642    5      DO SELECT (OBJECT.NIO_BCD.FILE_NAME) ;

   7642  1 002166   040000 106400                    CMPC    fill='040'O
         1 002167   000013 600010 xsym               ADSC9   OBJECT+11                cn=3,n=8
         1 002170   000040 000010 0                  ADSC9   STRING+32                cn=0,n=8
         1 002171   002202 601000 1                  TNZ     s:7647
         1 002172   002173 710000 1                  TRA     s:7644

     1677     7643    5         SELECT ('DIRECTRY') ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:202  
     1678     7644    5         CALL TOU$DFU_TF_RD_DIR ALTRET (ERROR) ;

   7644  1 002173   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002174   000000 701000 xent               TSX1    TOU$DFU_TF_RD_DIR
         1 002175   002272 702000 1                  TSX2    ERROR

     1679     7645    5         CALL TOU$DFU_DF_WR_DIR ALTRET (ERROR) ;

   7645  1 002176   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002177   000000 701000 xent               TSX1    TOU$DFU_DF_WR_DIR
         1 002200   002272 702000 1                  TSX2    ERROR
         1 002201   002223 710000 1                  TRA     s:7658

     1680     7646    5         SELECT (ELSE) ;

     1681     7647    5      IF OBJECT.NIO_BCD.CLASS = 'H'

   7647  1 002202   000005 236000 xsym               LDQ     OBJECT+5
         1 002203   777000 376007                    ANQ     -512,DL
         1 002204   110000 116007                    CMPQ    36864,DL
         1 002205   002215 601000 1                  TNZ     s:7653

     1682     7648    6      THEN DO ;

     1683     7649    6              CALL TOU$DFU_TF_RD_HDR ALTRET (ERROR) ;

   7649  1 002206   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002207   000000 701000 xent               TSX1    TOU$DFU_TF_RD_HDR
         1 002210   002272 702000 1                  TSX2    ERROR

     1684     7650    6              CALL TOU$DFU_DF_WR_HDR ALTRET (ERROR) ;

   7650  1 002211   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002212   000000 701000 xent               TSX1    TOU$DFU_DF_WR_HDR
         1 002213   002272 702000 1                  TSX2    ERROR

     1685     7651    6           END /* THEN */ ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:203  

   7651  1 002214   002223 710000 1                  TRA     s:7658

     1686     7652    6      ELSE DO ;

     1687     7653    6              CALL TOU$DFU_TF_RD_FILE ALTRET (ERROR) ;

   7653  1 002215   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002216   000000 701000 xent               TSX1    TOU$DFU_TF_RD_FILE
         1 002217   002272 702000 1                  TSX2    ERROR

     1688     7654    6              CALL TOU$DFU_DF_WR_FILE ALTRET (ERROR) ;

   7654  1 002220   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002221   000000 701000 xent               TSX1    TOU$DFU_DF_WR_FILE
         1 002222   002272 702000 1                  TSX2    ERROR

     1689     7655    6           END /* ELSE */ ;

     1690     7656    5      END /* SELECT */ ;

     1691     7657
     1692     7658    4      BCD_KEY.DECK# = OBJECT.DECK# ;

   7658  1 002223   000024 236000 xsym               LDQ     OBJECT+20
         1 002224   000011 772000                    QRL     9
         1 002225   000000 552030 xsym               STBQ    BCD_KEY,'30'O

     1693     7659    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;

   7659  1 002226   000024 236000 xsym               LDQ     OBJECT+20
         1 002227   777777 376007                    ANQ     -1,DL
         1 002230   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 002231   000025 236000 xsym               LDQ     OBJECT+21
         1 002232   000022 772000                    QRL     18
         1 002233   200062 136100                    SBLQ    VALID_RESPONSE+1,,AUTO
         1 002234   000001 136007                    SBLQ    1,DL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:204  
         1 002235   000000 756000 xsym               STQ     BCD#

     1694     7660    4      CALL TOU$DFU_TF_RD_BCD_CARDS ALTRET (ERROR) ;

   7660  1 002236   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002237   000000 701000 xent               TSX1    TOU$DFU_TF_RD_BCD_CARDS
         1 002240   002272 702000 1                  TSX2    ERROR

     1695     7661    4      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (ERROR) ;

   7661  1 002241   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002242   000000 701000 xent               TSX1    TOU$DFU_DF_WR_BCD_CARDS
         1 002243   002272 702000 1                  TSX2    ERROR

     1696     7662
     1697     7663    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   7663  1 002244   000024 236000 xsym               LDQ     OBJECT+20
         1 002245   000011 772000                    QRL     9
         1 002246   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

     1698     7664    4      OBJECT_REFLIST_DATA.NUM_REFS = 1 ;

   7664  1 002247   000001 235007                    LDA     1,DL
         1 002250   000000 755000 xsym               STA     OBJECT_REFLIST_DATA

     1699     7665    4      OBJECT_REFLIST_DATA.REFS.ME#(0) = MASTER_ENTRY_KEY.ENTRY# ;

   7665  1 002251   000000 235000 xsym               LDA     MASTER_ENTRY_KEY
         1 002252   000001 236000 xsym               LDQ     MASTER_ENTRY_KEY+1
         1 002253   000033 773000                    LRL     27
         1 002254   777777 376007                    ANQ     -1,DL
         1 002255   000000 620006                    EAX0    0,QL
         1 002256   000001 740000 xsym               STX0    OBJECT_REFLIST_DATA+1

     1700     7666    4      OBJECT_REFLIST_DATA.REFS.CE#(0) = CATALOG_ENTRY_KEY.ENTRY# ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:205  
   7666  1 002257   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         1 002260   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         1 002261   000033 773000                    LRL     27
         1 002262   777777 376007                    ANQ     -1,DL
         1 002263   000000 621006                    EAX1    0,QL
         1 002264   000001 441000 xsym               SXL1    OBJECT_REFLIST_DATA+1

     1701     7667    4      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   7667  1 002265   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002266   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         1 002267   002272 702000 1                  TSX2    ERROR

     1702     7668    4      RETURN ;

   7668  1 002270   200020 221300                    LDX1  ! DIRECTORY,,AUTO
         1 002271   000001 702211                    TSX2  ! 1,X1

     1703     7669
     1704     7670    4   ERROR:
     1705     7671    4      ALTRETURN ;

   7671  1 002272   200020 221300       ERROR        LDX1  ! DIRECTORY,,AUTO
         1 002273   000000 702211                    TSX2  ! 0,X1

     1706     7672
     1707     7673    4   END M_SAVE_NEW_DECK ;
     1708     7674        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:206  
     1709     7675        /*I*  NAME:        M_REPLACE_OLD_DECK
     1710     7676              AUTHOR:      Scott S. Sheppard
     1711     7677              PURPOSE:     Saves an Object Deck
     1712     7678              INTERFACE:   TOU$DFU_DF_DL_DECK
     1713     7679                           TOU$DFU_TF_RD_OBJECT
     1714     7680                           TOU$DFU_DF_WR_OBJECT
     1715     7681                           TOU$DFU_TF_RD_FILE
     1716     7682                           TOU$DFU_DF_WR_FILE
     1717     7683                           TOU$DFU_TF_RD_BCD_CARDS
     1718     7684                           TOU$DFU_DF_WR_BCD_CARDS
     1719     7685                           TOU$DFU_DF_RD_OBJECT_REFLIST
     1720     7686                           TOU$DFU_DF_WR_OBJECT_REFLIST
     1721     7687              INPUT:       OBJECT
     1722     7688              OUTPUT:      BIN#
     1723     7689                           BINARY_KEY
     1724     7690                           BCD_KEY
     1725     7691                           BCD#
     1726     7692                           OBJECT_REFLIST_KEY
     1727     7693                           OBJECT_REFLIST_DATA
     1728     7694              DESCRIPTION: This procedure replaces  an existing  object deck
     1729     7695                           with  another  version of the same deck  from the
     1730     7696                           temporary file.   The old version is deleted from
     1731     7697                           the deckfile and the new one is then added.   The
     1732     7698                           deck  in  the  temporary file is keyed  by a deck
     1733     7699                           number that would be used if the deck were a  new
     1734     7700                           deck.
     1735     7701        */
     1736     7702
     1737     7703    3   M_REPLACE_OLD_DECK: PROC ALTRET ;

   7703  1 002274   200020 741300       M_REPLACE_O* STX1  ! DIRECTORY,,AUTO

     1738     7704
     1739     7705    4      DCL OLD_COUNT   UBIN WORD ALIGNED ;
     1740     7706           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:207  
     1741     7707        /* Code */
     1742     7708
     1743     7709    4      BINARY_KEY.DECK# = OBJECT.DECK# ;

   7709  1 002275   000024 236000 xsym               LDQ     OBJECT+20
         1 002276   000011 772000                    QRL     9
         1 002277   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

     1744     7710    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   7710  1 002300   000024 236000 xsym               LDQ     OBJECT+20
         1 002301   000011 772000                    QRL     9
         1 002302   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

     1745     7711    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   7711  1 002303   000024 236000 xsym               LDQ     OBJECT+20
         1 002304   000011 772000                    QRL     9
         1 002305   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

     1746     7712    4      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   7712  1 002306   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002307   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         1 002310   002440 702000 1                  TSX2    ERROR

     1747     7713    4      CALL TOU$DFU_DF_DL_DECK ALTRET (ERROR) ;

   7713  1 002311   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002312   000000 701000 xent               TSX1    TOU$DFU_DF_DL_DECK
         1 002313   002440 702000 1                  TSX2    ERROR

     1748     7714
     1749     7715    4      CALL TOU$DFU_TF_RD_OBJECT ALTRET (ERROR) ;

   7715  1 002314   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002315   000000 701000 xent               TSX1    TOU$DFU_TF_RD_OBJECT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:208  
         1 002316   002440 702000 1                  TSX2    ERROR

     1750     7716    4      CALL TOU$DFU_DF_WR_OBJECT ALTRET (ERROR) ;

   7716  1 002317   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002320   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT
         1 002321   002440 702000 1                  TSX2    ERROR

     1751     7717
     1752     7718    4      BINARY_KEY.DECK# = OBJECT.DECK# ;

   7718  1 002322   000024 236000 xsym               LDQ     OBJECT+20
         1 002323   000011 772000                    QRL     9
         1 002324   000000 552030 xsym               STBQ    BINARY_KEY,'30'O

     1753     7719    4      BIN# = OBJECT.BINARY_COUNT ;

   7719  1 002325   000024 236000 xsym               LDQ     OBJECT+20
         1 002326   777777 376007                    ANQ     -1,DL
         1 002327   000000 756000 xsym               STQ     BIN#

     1754     7720    5      DO SELECT (OBJECT.NIO_BCD.FILE_NAME) ;

   7720  1 002330   040000 106400                    CMPC    fill='040'O
         1 002331   000013 600010 xsym               ADSC9   OBJECT+11                cn=3,n=8
         1 002332   000040 000010 0                  ADSC9   STRING+32                cn=0,n=8
         1 002333   002344 601000 1                  TNZ     s:7725
         1 002334   002335 710000 1                  TRA     s:7722

     1755     7721    5         SELECT ('DIRECTRY') ;

     1756     7722    5         CALL TOU$DFU_TF_RD_DIR ALTRET (ERROR) ;

   7722  1 002335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002336   000000 701000 xent               TSX1    TOU$DFU_TF_RD_DIR
         1 002337   002440 702000 1                  TSX2    ERROR

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:209  
     1757     7723    5         CALL TOU$DFU_DF_WR_DIR ALTRET (ERROR) ;

   7723  1 002340   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002341   000000 701000 xent               TSX1    TOU$DFU_DF_WR_DIR
         1 002342   002440 702000 1                  TSX2    ERROR
         1 002343   002365 710000 1                  TRA     s:7737

     1758     7724    5         SELECT (ELSE) ;

     1759     7725    5      IF OBJECT.NIO_BCD.CLASS = 'H'

   7725  1 002344   000005 236000 xsym               LDQ     OBJECT+5
         1 002345   777000 376007                    ANQ     -512,DL
         1 002346   110000 116007                    CMPQ    36864,DL
         1 002347   002357 601000 1                  TNZ     s:7731

     1760     7726    6      THEN DO ;

     1761     7727    6              CALL TOU$DFU_TF_RD_HDR ALTRET (ERROR) ;

   7727  1 002350   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002351   000000 701000 xent               TSX1    TOU$DFU_TF_RD_HDR
         1 002352   002440 702000 1                  TSX2    ERROR

     1762     7728    6              CALL TOU$DFU_DF_WR_HDR ALTRET (ERROR) ;

   7728  1 002353   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002354   000000 701000 xent               TSX1    TOU$DFU_DF_WR_HDR
         1 002355   002440 702000 1                  TSX2    ERROR

     1763     7729    6           END /* THEN */ ;

   7729  1 002356   002365 710000 1                  TRA     s:7737

     1764     7730    6      ELSE DO ;

     1765     7731    6              CALL TOU$DFU_TF_RD_FILE ALTRET (ERROR) ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:210  

   7731  1 002357   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002360   000000 701000 xent               TSX1    TOU$DFU_TF_RD_FILE
         1 002361   002440 702000 1                  TSX2    ERROR

     1766     7732    6              CALL TOU$DFU_DF_WR_FILE ALTRET (ERROR) ;

   7732  1 002362   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002363   000000 701000 xent               TSX1    TOU$DFU_DF_WR_FILE
         1 002364   002440 702000 1                  TSX2    ERROR

     1767     7733    6           END /* ELSE */ ;

     1768     7734    5      END /* SELECT */ ;

     1769     7735           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:211  
     1770     7736
     1771     7737    4      BCD_KEY.DECK# = OBJECT.DECK# ;

   7737  1 002365   000024 236000 xsym               LDQ     OBJECT+20
         1 002366   000011 772000                    QRL     9
         1 002367   000000 552030 xsym               STBQ    BCD_KEY,'30'O

     1772     7738    4      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;

   7738  1 002370   000024 236000 xsym               LDQ     OBJECT+20
         1 002371   777777 376007                    ANQ     -1,DL
         1 002372   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 002373   000025 236000 xsym               LDQ     OBJECT+21
         1 002374   000022 772000                    QRL     18
         1 002375   200062 136100                    SBLQ    VALID_RESPONSE+1,,AUTO
         1 002376   000001 136007                    SBLQ    1,DL
         1 002377   000000 756000 xsym               STQ     BCD#

     1773     7739    4      CALL TOU$DFU_TF_RD_BCD_CARDS ALTRET (ERROR) ;

   7739  1 002400   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002401   000000 701000 xent               TSX1    TOU$DFU_TF_RD_BCD_CARDS
         1 002402   002440 702000 1                  TSX2    ERROR

     1774     7740    4      CALL TOU$DFU_DF_WR_BCD_CARDS ALTRET (ERROR) ;

   7740  1 002403   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002404   000000 701000 xent               TSX1    TOU$DFU_DF_WR_BCD_CARDS
         1 002405   002440 702000 1                  TSX2    ERROR

     1775     7741    4      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   7741  1 002406   000024 236000 xsym               LDQ     OBJECT+20
         1 002407   000011 772000                    QRL     9
         1 002410   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

     1776     7742    4      OLD_COUNT = OBJECT_REFLIST_DATA.NUM_REFS ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:212  

   7742  1 002411   000000 235000 xsym               LDA     OBJECT_REFLIST_DATA
         1 002412   200021 755100                    STA     OLD_COUNT,,AUTO

     1777     7743    4      OBJECT_REFLIST_DATA.REFS.ME#(OLD_COUNT) = MASTER_ENTRY_KEY.ENTRY# ;

   7743  1 002413   000000 235000 xsym               LDA     MASTER_ENTRY_KEY
         1 002414   000001 236000 xsym               LDQ     MASTER_ENTRY_KEY+1
         1 002415   000033 773000                    LRL     27
         1 002416   777777 376007                    ANQ     -1,DL
         1 002417   000000 620006                    EAX0    0,QL
         1 002420   200021 721100                    LXL1    OLD_COUNT,,AUTO
         1 002421   000001 740011 xsym               STX0    OBJECT_REFLIST_DATA+1,X1

     1778     7744    4      OBJECT_REFLIST_DATA.REFS.CE#(OLD_COUNT) = CATALOG_ENTRY_KEY.ENTRY# ;

   7744  1 002422   000000 235000 xsym               LDA     CATALOG_ENTRY_KEY
         1 002423   000001 236000 xsym               LDQ     CATALOG_ENTRY_KEY+1
         1 002424   000033 773000                    LRL     27
         1 002425   777777 376007                    ANQ     -1,DL
         1 002426   000000 622006                    EAX2    0,QL
         1 002427   000001 442011 xsym               SXL2    OBJECT_REFLIST_DATA+1,X1

     1779     7745    4      OBJECT_REFLIST_DATA.NUM_REFS = OLD_COUNT + 1 ;

   7745  1 002430   200021 235100                    LDA     OLD_COUNT,,AUTO
         1 002431   000001 035007                    ADLA    1,DL
         1 002432   000000 755000 xsym               STA     OBJECT_REFLIST_DATA

     1780     7746    4      CALL TOU$DFU_DF_WR_OBJECT_REFLIST ALTRET (ERROR) ;

   7746  1 002433   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002434   000000 701000 xent               TSX1    TOU$DFU_DF_WR_OBJECT_REFLIST
         1 002435   002440 702000 1                  TSX2    ERROR

     1781     7747    4      RETURN ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:213  
   7747  1 002436   200020 221300                    LDX1  ! DIRECTORY,,AUTO
         1 002437   000001 702211                    TSX2  ! 1,X1

     1782     7748
     1783     7749    4   ERROR:
     1784     7750    4      ALTRETURN ;

   7750  1 002440   200020 221300       ERROR        LDX1  ! DIRECTORY,,AUTO
         1 002441   000000 702211                    TSX2  ! 0,X1

     1785     7751
     1786     7752    4   END M_REPLACE_OLD_DECK ;
     1787     7753    3   END M_SAVE_OBJECT_DECK ;
     1788     7754        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:214  
     1789     7755        /*I*  NAME:        M_SAVE_LOG
     1790     7756              AUTHOR:      Scott S. Sheppard
     1791     7757              PURPOSE:     Saves the deckfile history log
     1792     7758              INTERFACE:   TOU$DU_UPDATE_LOG
     1793     7759                           TOU$DFU_DF_WR_LOG
     1794     7760              INPUT:       EXISTED - did the catalog already exist
     1795     7761              OUTPUT:      DUP.LOG.CATALOG
     1796     7762                           DUP.LOG.DECK
     1797     7763                           DUP.HOLD_AREA
     1798     7764              DESCRIPTION: This procedure stores the deckfile history log.
     1799     7765        */
     1800     7766
     1801     7767    2   M_SAVE_LOG: PROC (EXISTED) ALTRET ;

   7767  1 002442   200016 741300       M_SAVE_LOG   STX1  ! WORK,,AUTO

     1802     7768
     1803     7769    3      DCL EXISTED BIT (1) ALIGNED ;
     1804     7770
     1805     7771        /* Code */
     1806     7772
     1807     7773    3      IF EXISTED

   7773  1 002443   200017 470500                    LDP0    @EXISTED,,AUTO
         1 002444   000000 234100                    SZN     0,,PR0
         1 002445   002451 605000 1                  TPL     s:7775

     1808     7774    3      THEN DUP.LOG.TYPE = %T$SF_MERGE2 ;

   7774  1 002446   000124 235007                    LDA     84,DL
         1 002447   000122 755000 xsym               STA     DUP+82
         1 002450   002453 710000 1                  TRA     s:7776

     1809     7775    3      ELSE DUP.LOG.TYPE = %T$SF_MERGE1 ;

   7775  1 002451   000123 235007                    LDA     83,DL
         1 002452   000122 755000 xsym               STA     DUP+82
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:215  

     1810     7776    3      DUP.LOG.CATALOG = CATALOG_KEY.DATA ;

   7776  1 002453   040000 100400                    MLR     fill='040'O
         1 002454   000000 200025 xsym               ADSC9   CATALOG_KEY              cn=1,n=21
         1 002455   000123 000025 xsym               ADSC9   DUP+83                   cn=0,n=21

     1811     7777    3      DUP.LOG.DECK = ' ' ;

   7777  1 002456   040000 100400                    MLR     fill='040'O
         1 002457   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 002460   000130 200027 xsym               ADSC9   DUP+88                   cn=1,n=23

     1812     7778    3      DUP.HOLD_AREA = DUP.IFAD.FID ;

   7778  1 002461   040000 100400                    MLR     fill='040'O
         1 002462   000063 200050 xsym               ADSC9   DUP+51                   cn=1,n=40
         1 002463   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

     1813     7779    3      CALL TOU$DU_UPDATE_LOG ALTRET (ERROR) ;

   7779  1 002464   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002465   000000 701000 xent               TSX1    TOU$DU_UPDATE_LOG
         1 002466   002474 702000 1                  TSX2    ERROR

     1814     7780    3      CALL TOU$DFU_DF_WR_LOG ALTRET (ERROR) ;

   7780  1 002467   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002470   000000 701000 xent               TSX1    TOU$DFU_DF_WR_LOG
         1 002471   002474 702000 1                  TSX2    ERROR

     1815     7781    3      RETURN ;

   7781  1 002472   200016 221300                    LDX1  ! WORK,,AUTO
         1 002473   000001 702211                    TSX2  ! 1,X1

     1816     7782
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:216  
     1817     7783    3   ERROR:
     1818     7784    3      ALTRETURN ;

   7784  1 002474   200016 221300       ERROR        LDX1  ! WORK,,AUTO
         1 002475   000000 702211                    TSX2  ! 0,X1

     1819     7785
     1820     7786    3   END M_SAVE_LOG ;
     1821     7787        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:217  
     1822     7788        /*I*  NAME:        M_SETUP_PRINT
     1823     7789              AUTHOR:      Scott S. Sheppard
     1824     7790              PURPOSE:     Assign Replacement Variables
     1825     7791              INTERFACE:   None Called.
     1826     7792              INPUT:       OBJECT.BCD.LIBRARY - used to determine GECALL or not
     1827     7793                           OBJECT.BCD.CLASS   - used to determine ITR or MDR
     1828     7794                           BCD_B(BCD#-1)      - $DKEND card saved
     1829     7795              OUTPUT:      DUP.HDR_CODE  - set to correct heading
     1830     7796                           DUP.MSG_CODE  - used to write messages
     1831     7797                           ID.ID         - set for IDENT CODE field
     1832     7798                           ID.REVISION  - set for REV field
     1833     7799                           DKEND         - $DKEND Card Structure
     1834     7800              DESCRIPTION: This procedure assigns variables needed values so
     1835     7801                           that TOU$REPLACE  will insert proper  values  for
     1836     7802                           the dummy ~strings.
     1837     7803        */
     1838     7804
     1839     7805    2   M_SETUP_PRINT: PROC ;

   7805  1 002476   200016 741300       M_SETUP_PRI* STX1  ! WORK,,AUTO

     1840     7806
     1841     7807        /* Code */
     1842     7808
     1843     7809    3      ID.ID = 'DIPPER' ;

   7809  1 002477   040000 100400                    MLR     fill='040'O
         1 002500   000042 000006 0                  ADSC9   STRING+34                cn=0,n=6
         1 002501   000000 000006 xsym               ADSC9   ID                       cn=0,n=6

     1844     7810    3      DKEND.BCD_ = BCD_B(BCD#-1) ;

   7810  1 002502   000000 236000 xsym               LDQ     BCD#
         1 002503   000124 402007                    MPY     84,DL
         1 002504   000103 470400 xsym               LDP0    DUP+67
         1 002505   040000 100506                    MLR     fill='040'O
         1 002506   077753 000120                    ADSC9   -21,Q,PR0                cn=0,n=80
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:218  
         1 002507   000000 000120 xsym               ADSC9   DKEND                    cn=0,n=80

     1845     7811    3      ID.REVISION = DKEND.BCD.REVISION ;

   7811  1 002510   040000 100400                    MLR     fill='040'O
         1 002511   000020 400006 xsym               ADSC9   DKEND+16                 cn=2,n=6
         1 002512   000001 400006 xsym               ADSC9   ID+1                     cn=2,n=6

     1846     7812    3      DUP.HDR_CODE = %H$MERGE_NIO ;

   7812  1 002513   001523 235007                    LDA     851,DL
         1 002514   000021 755000 xsym               STA     DUP+17

     1847     7813    3      DUP.MSG_CODE = %T$B_ITR ;

   7813  1 002515   000031 235007                    LDA     25,DL
         1 002516   000020 755000 xsym               STA     DUP+16

     1848     7814    3      RETURN ;

   7814  1 002517   000001 702211                    TSX2  ! 1,X1

     1849     7815
     1850     7816    3   END M_SETUP_PRINT ;
     1851     7817        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:219  
     1852     7818        /*I*  NAME:        M_PRINT_MERGED_MSG
     1853     7819              AUTHOR:      Scott S. Sheppard
     1854     7820              PURPOSE:     Prints added Catalog line
     1855     7821              INTERFACE:   TOU$DU_USER_WRITE
     1856     7822                           TOU$DU_PRINTER_WRITE
     1857     7823              INPUT:       T$B_CATALOG
     1858     7824                           T$M_INFORM
     1859     7825              OUTPUT:      DUP.MSG_CODE - integer message number
     1860     7826              DESCRIPTION: This procedure adds the completed catalog message
     1861     7827                           to the edit listing  by calling  TOU$DU_PRINTER_WRITE
     1862     7828                           with the proper message numbers. The catalog info
     1863     7829                           message is also displayed to the user.
     1864     7830        */
     1865     7831
     1866     7832    2   M_PRINT_MERGED_MSG: PROC (CATALOG_EXISTED) ;

   7832  1 002520   200016 741300       M_PRINT_MER* STX1  ! WORK,,AUTO

     1867     7833
     1868     7834    3      DCL CATALOG_EXISTED BIT (1) ALIGNED ;
     1869     7835
     1870     7836        /* Code */
     1871     7837
     1872     7838    3      DUP.MSG_CODE = %T$B_CATALOG ;

   7838  1 002521   000027 235007                    LDA     23,DL
         1 002522   000020 755000 xsym               STA     DUP+16

     1873     7839    3      CALL TOU$DU_PRINTER_WRITE ;

   7839  1 002523   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002524   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         1 002525   000000 011000                    NOP     0

     1874     7840    3      IF CATALOG_EXISTED

   7840  1 002526   200017 470500                    LDP0    @CATALOG_EXISTED,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:220  
         1 002527   000000 234100                    SZN     0,,PR0
         1 002530   002534 605000 1                  TPL     s:7842

     1875     7841    3      THEN DUP.MSG_CODE = %T$M_INFORM1 ;

   7841  1 002531   000300 235007                    LDA     192,DL
         1 002532   000020 755000 xsym               STA     DUP+16
         1 002533   002536 710000 1                  TRA     s:7843

     1876     7842    3      ELSE DUP.MSG_CODE = %T$M_INFORM2 ;

   7842  1 002534   000301 235007                    LDA     193,DL
         1 002535   000020 755000 xsym               STA     DUP+16

     1877     7843    3      CALL TOU$DU_USER_WRITE ;

   7843  1 002536   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002537   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 002540   000000 011000                    NOP     0

     1878     7844    3      CALL TOU$DU_PRINTER_WRITE ;

   7844  1 002541   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002542   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         1 002543   000000 011000                    NOP     0

     1879     7845    3      RETURN ;

   7845  1 002544   200016 221300                    LDX1  ! WORK,,AUTO
         1 002545   000001 702211                    TSX2  ! 1,X1

     1880     7846
     1881     7847    3   END M_PRINT_MERGED_MSG ;
     1882     7848    2   END M_SAVE_MCA_DATA ;
     1883     7849        %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:221  
     1884     7850        /*I*  NAME:        M_GET_RESPONSE
     1885     7851              AUTHOR:      Scott S. Sheppard
     1886     7852                           Kathy Larkin
     1887     7853              PURPOSE:     Get Operator Response
     1888     7854              INTERFACE:   TOU$DU_OPERATOR_TEXT
     1889     7855              INPUT:       No external data accessed.
     1890     7856              PARAMETERS:  DUP.MSG_CODE - input
     1891     7857              DESCRIPTION: This procedure prompts the operator for YES or NO
     1892     7858                           and returns on YES and altreturns otherwise.
     1893     7859        */
     1894     7860
     1895     7861    1   M_GET_RESPONSE: PROC (MSG_CODE) ALTRET ;

   7861  1 002546   200042 741300       M_GET_RESPO* STX1  ! @DRIVE_NUMBER+1,,AUTO

     1896     7862
     1897     7863    2      DCL MSG_CODE  UBIN WORD ALIGNED ;
     1898     7864    2      DCL RESPONSE_ CHAR (40) CALIGNED ;
     1899     7865    2      DCL RESPONSE  (0:39) REDEF RESPONSE_ CHAR (1) CALIGNED ;
     1900     7866    2      DCL RESPONSE_LGTH    UBIN WORD ALIGNED ;
     1901     7867    2      DCL CHR_INX   UBIN WORD ALIGNED ;
     1902     7868    2      DCL BL_INX    UBIN WORD ALIGNED ;
     1903     7869    2      DCL VALID_RESPONSE BIT (1) ;
     1904     7870
     1905     7871           %EJECT ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:222  
     1906     7872        /* Code */
     1907     7873    2      VALID_RESPONSE = %FALSE ;

   7873  1 002547   200061 450100                    STZ     VALID_RESPONSE,,AUTO

     1908     7874    3      DO UNTIL VALID_RESPONSE ;

     1909     7875    3         DUP.MSG_CODE = MSG_CODE ;

   7875  1 002550   200043 470500                    LDP0    @MSG_CODE,,AUTO
         1 002551   000000 235100                    LDA     0,,PR0
         1 002552   000020 755000 xsym               STA     DUP+16

     1910     7876    3         CALL TOU$DU_OPERATOR_TEXT ;

   7876  1 002553   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002554   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 002555   000000 011000                    NOP     0

     1911     7877    3         RESPONSE_ = DUP.RESPONSE ;

   7877  1 002556   040100 100400                    MLR     fill='040'O
         1 002557   000004 000050 xsym               ADSC9   DUP+4                    cn=0,n=40
         1 002560   200044 000050                    ADSC9   RESPONSE_,,AUTO          cn=0,n=40

     1912     7878    3         RESPONSE_LGTH = DUP.RESPONSE_LGTH ;

   7878  1 002561   000016 235000 xsym               LDA     DUP+14
         1 002562   200056 755100                    STA     RESPONSE_LGTH,,AUTO

     1913     7879
     1914     7880              /* Skip leading spaces */
     1915     7881    3         CHR_INX = 0 ;

   7881  1 002563   200057 450100                    STZ     CHR_INX,,AUTO

     1916     7882    4         DO WHILE RESPONSE(CHR_INX) = ' ' & (CHR_INX < RESPONSE_LGTH) ;
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:223  

   7882  1 002564   002570 710000 1                  TRA     s:7884

     1917     7883    4            CHR_INX = CHR_INX + 1 ;

   7883  1 002565   200057 235100                    LDA     CHR_INX,,AUTO
         1 002566   000001 035007                    ADLA    1,DL
         1 002567   200057 755100                    STA     CHR_INX,,AUTO

     1918     7884    4         END /* WHILE */ ;

   7884  1 002570   400000 220003                    LDX0    -131072,DU
         1 002571   200057 235100                    LDA     CHR_INX,,AUTO
         1 002572   040000 106505                    CMPC    fill='040'O
         1 002573   200044 000001                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=1
         1 002574   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 002575   002577 600000 1                  TZE     s:7884+7
         1 002576   000000 220003                    LDX0    0,DU
         1 002577   400000 221003                    LDX1    -131072,DU
         1 002600   200057 236100                    LDQ     CHR_INX,,AUTO
         1 002601   200056 116100                    CMPQ    RESPONSE_LGTH,,AUTO
         1 002602   002604 602000 1                  TNC     s:7884+12
         1 002603   000000 221003                    LDX1    0,DU
         1 002604   000000 636011                    EAQ     0,X1
         1 002605   200062 756100                    STQ     VALID_RESPONSE+1,,AUTO
         1 002606   000000 636010                    EAQ     0,X0
         1 002607   200062 376100                    ANQ     VALID_RESPONSE+1,,AUTO
         1 002610   002565 601000 1                  TNZ     s:7883

     1919     7885
     1920     7886              /* Find first blank following first non-blank */
     1921     7887    3         CALL INDEX (BL_INX, ' ', RESPONSE_, CHR_INX) ;

   7887  1 002611   777727 620005                    EAX0    -41,AL
         1 002612   777777 660003                    ERX0    -1,DU
         1 002613   200057 236100                    LDQ     CHR_INX,,AUTO
         1 002614   000000 124545                    SCM     mask='000'O
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:224  
         1 002615   200044 000010                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X0
         1 002616   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 002617   200060 000100                    ARG     BL_INX,,AUTO
         1 002620   200060 056100                    ASQ     BL_INX,,AUTO

     1922     7888    3         IF (BL_INX > RESPONSE_LGTH)

   7888  1 002621   200056 236100                    LDQ     RESPONSE_LGTH,,AUTO
         1 002622   200060 116100                    CMPQ    BL_INX,,AUTO
         1 002623   002625 603000 1                  TRC     s:7893

     1923     7889    3         THEN BL_INX = RESPONSE_LGTH ;

   7889  1 002624   200060 756100                    STQ     BL_INX,,AUTO

     1924     7890    3         ELSE /* SPACES AFTER RESPONSE */ ;
     1925     7891
     1926     7892              /* Check Response for Yes or No */
     1927     7893    4         DO SELECT (SUBSTR (RESPONSE_, CHR_INX, BL_INX - CHR_INX)) ;

   7893  1 002625   200060 236100                    LDQ     BL_INX,,AUTO
         1 002626   200057 136100                    SBLQ    CHR_INX,,AUTO
         1 002627   000000 621006                    EAX1    0,QL
         1 002630   040000 106545                    CMPC    fill='040'O
         1 002631   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002632   000044 000002 0                  ADSC9   STRING+36                cn=0,n=2
         1 002633   002647 602000 1                  TNC     s:7893+18
         1 002634   000000 621006                    EAX1    0,QL
         1 002635   040000 106545                    CMPC    fill='040'O
         1 002636   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002637   000044 000002 0                  ADSC9   STRING+36                cn=0,n=2
         1 002640   002675 600000 1                  TZE     s:7895
         1 002641   000000 621006                    EAX1    0,QL
         1 002642   040000 106545                    CMPC    fill='040'O
         1 002643   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002644   000045 000003 0                  ADSC9   STRING+37                cn=0,n=3
         1 002645   002700 601000 1                  TNZ     s:7897
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:225  
         1 002646   002675 710000 1                  TRA     s:7895
         1 002647   000000 621006                    EAX1    0,QL
         1 002650   040000 106545                    CMPC    fill='040'O
         1 002651   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002652   000046 000002 0                  ADSC9   STRING+38                cn=0,n=2
         1 002653   002667 602000 1                  TNC     s:7893+34
         1 002654   000000 621006                    EAX1    0,QL
         1 002655   040000 106545                    CMPC    fill='040'O
         1 002656   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002657   000046 000002 0                  ADSC9   STRING+38                cn=0,n=2
         1 002660   002675 600000 1                  TZE     s:7895
         1 002661   000000 621006                    EAX1    0,QL
         1 002662   040000 106545                    CMPC    fill='040'O
         1 002663   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002664   000032 000001 2                  ADSC9   26                       cn=0,n=1
         1 002665   002700 601000 1                  TNZ     s:7897
         1 002666   002675 710000 1                  TRA     s:7895
         1 002667   000000 621006                    EAX1    0,QL
         1 002670   040000 106545                    CMPC    fill='040'O
         1 002671   200044 000011                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=*X1
         1 002672   000033 000001 2                  ADSC9   27                       cn=0,n=1
         1 002673   002700 601000 1                  TNZ     s:7897
         1 002674   002675 710000 1                  TRA     s:7895

     1928     7894    4            SELECT ('Y', 'YE', 'YES', 'N', 'NO') ;

     1929     7895    4            VALID_RESPONSE = %TRUE ;

   7895  1 002675   400000 236003                    LDQ     -131072,DU
         1 002676   200061 756100                    STQ     VALID_RESPONSE,,AUTO
         1 002677   002706 710000 1                  TRA     s:7901

     1930     7896    4            SELECT (ELSE) ;

     1931     7897    4         VALID_RESPONSE = %FALSE ;

   7897  1 002700   200061 450100                    STZ     VALID_RESPONSE,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:226  

     1932     7898    4         DUP.MSG_CODE = %E$NVA_INVALID_REPLY ;

   7898  1 002701   000672 236007                    LDQ     442,DL
         1 002702   000020 756000 xsym               STQ     DUP+16

     1933     7899    4         CALL TOU$DU_OPERATOR_TEXT ;

   7899  1 002703   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 002704   000000 701000 xent               TSX1    TOU$DU_OPERATOR_TEXT
         1 002705   000000 011000                    NOP     0

     1934     7900    4         END /* SELECT */ ;

     1935     7901    3      END /* UNTIL */ ;

   7901  1 002706   200061 234100                    SZN     VALID_RESPONSE,,AUTO
         1 002707   002550 605000 1                  TPL     s:7875

     1936     7902
     1937     7903           /* If not affirmative then take alternate return */
     1938     7904    2      IF RESPONSE(CHR_INX) = 'Y'

   7904  1 002710   200057 235100                    LDA     CHR_INX,,AUTO
         1 002711   040000 106505                    CMPC    fill='040'O
         1 002712   200044 000001                    ADSC9   RESPONSE_,A,AUTO         cn=0,n=1
         1 002713   000032 000001 2                  ADSC9   26                       cn=0,n=1
         1 002714   002717 601000 1                  TNZ     s:7906

     1939     7905    2      THEN RETURN ;

   7905  1 002715   200042 221300                    LDX1  ! @DRIVE_NUMBER+1,,AUTO
         1 002716   000001 702211                    TSX2  ! 1,X1

     1940     7906    2      ELSE ALTRETURN ;

   7906  1 002717   200042 221300                    LDX1  ! @DRIVE_NUMBER+1,,AUTO
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:227  
         1 002720   000000 702211                    TSX2  ! 0,X1

STRING
 Sect OctLoc
   0     000   060061 062063   064065 066067   070071 101102   103104 105106    0123456789ABCDEF
   0     004   107110 111112   113114 115116   117120 121122   123124 125126    GHIJKLMNOPQRSTUV
   0     010   127130 131132                                                    WXYZ

(unnamed)
 Sect OctLoc
   0     011   130000 720002   030000 700001   103101 124101   056116 111117    X.......CATA.NIO
   0     015   056115 103101   110105 101104   105122 040040   040040 040040    .MCAHEADER
   0     021   104111 122105   103124 117122   131040 040040   056104 120123    DIRECTORY   .DPS
   0     025   106111 114105   106111 114105   040040 040040   040040 040040    FILEFILE
   0     031   125124 111114   060060 061040   130130 130040   060060 060040    UTIL001 XXX 000
   0     035   144151 163153   145164 164145   163040 040040   104111 122105    diskettes   DIRE
   0     041   103124 122131   104111 120120   105122 040040   131105 040040    CTRYDIPPER  YE
   0     045   131105 123040   116117 040040                                    YES NO

(unnamed)
 Sect OctLoc
   2     000   777377 777777   000000 006000   000000 206000   777777 777377    ................
   2     004   000000 000210   000004 006000   000016 006000   000021 006000    ................
   2     010   000026 006000   000000 001143   000011 006000   000000 001145    .......c.......e
   2     014   000013 006000   000063 006000   000000 001146   000016 006000    .....3.....f....
   2     020   061040 040040   000000 001147   000021 006000   060040 040040    1   ...g....0
   2     024   132040 040040   000000 006000   000000 000027   000002 006000    Z   ............
   2     030   000026 006000   000027 006000   131040 040040   116040 040040    ........Y   N
     1941     7907
     1942     7908    2   END M_GET_RESPONSE ;
     1943     7909    1   END TOU$MERGE ;

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:228  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$MERGE.
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:229  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    66-  7909    572   113     1      0  y   y    0   1 TOU$MERGE
  1  5959-  5975     12     0     1     67  y   y    0     2 M_INIT_DUP
  2  5996-  6113     22     9     1    114  y y y    0     2 M_COMMAND_SETUP
  3  6130-  6141      5     0     1    222  y y y    0     2 M_GET_CURRENT_DF_VALUES
  4  6156-  6165      5     0     1    235  y   y    0     2 M_INIT_MCA_B
  5  6188-  7389    322     4     1    253  y y y    2     2 M_STORE_MCA_DATA
  6  6238-  6247      3     2     1    327  y   y    1      3 M_SET_CATALOG_KEY
  7  6367-  6496     67    17     1    336  y y y    2      3 M_PROCESS_MCA_INPUT
  8  6515-  6527      6     0     1    632  y y y    0      3 M_SETUP_CATALOG
  9  6542-  6562      9     0     1    654  y y y    0      3 M_GET_CONFIG
 10  6581-  6749     71     5     1    674  y y y    1      3 M_GET_HEADER
 11  6643-  6748     51     4     1    754  y   y    2       4 M_HANDLE_ERROR
 12  6696-  6711      8     0     1   1040  y y y    0        5 M_PROMPT_SAME_DRIVE
 13  6727-  6747     12     2     1   1056  y y y    1        5 M_PROMPT_NEXT_DRIVE
 14  6772-  6838     18     7     1   1106  y y y    0      3 M_CHECK_TND_DISKETTE
 15  6864-  6926     13    16     1   1160  y y y    2      3 M_COMPUTE_LAST_DISKETTE
 16  6959-  7023     10     7     1   1220  y y y    0      3 M_CHECK_ALREADY_MERGED
 17  7044-  7129     29    17     1   1262  y y y    2      3 M_CHECK_PRODUCT_SET
 18  7148-  7157      3     2     1   1352  y   y    1      3 M_COMPUTE_LAST_DIR
 19  7189-  7220     21     4     1   1363  y   y    0      3 M_GET_NEXT_DECK
 20  7255-  7299     32     4     1   1434  y y y    2      3 M_STORE_OBJECT_DECK
 21  7316-  7328      6     0     1   1607  y y y    0      3 M_STORE_CATALOG_ENTRY
 22  7345-  7358      7     0     1   1633  y y y    0      3 M_STORE_SUBCATALOG
 23  7374-  7388      8     0     1   1654  y y y    0      3 M_STORE_MASTER_CHANGES
 24  7409-  7848    160     4     1   1704  y y y    2     2 M_SAVE_MCA_DATA
 25  7456-  7489     23     4     1   1742  y y y    2      3 M_PROCESS_TEMP
 26  7504-  7519      9     0     1   2054  y y y    0      3 M_SAVE_MASTER_CHANGES
 27  7533-  7545      6     0     1   2103  y y y    0      3 M_SAVE_SUBCATALOG
 28  7558-  7569      5     0     1   2121  y y y    0      3 M_SAVE_CATALOG_ENTRY
 29  7587-  7753     78     0     1   2134  y y y    0      3 M_SAVE_OBJECT_DECK
 30  7632-  7673     31     0     1   2151  y y y    0       4 M_SAVE_NEW_DECK
 31  7703-  7752     37     1     1   2274  y y y    0       4 M_REPLACE_OLD_DECK
 32  7767-  7786     11     2     1   2442  y y y    1      3 M_SAVE_LOG
 33  7805-  7816      7     0     1   2476  y   y    0      3 M_SETUP_PRINT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:230  
 34  7832-  7847      9     2     1   2520  y   y    1      3 M_PRINT_MERGED_MSG
 35  7861-  7908     26     8     1   2546  y y y    1     2 M_GET_RESPONSE
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:231  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              66   1      0 Proc    0                              5919   1      2 Call    0
            5920   1      4 Call    0                              5921   1      6 Call    0
            5922   1     11 Call    0                              5923   1     14 Call    0
            5924   1     16 Call    0                              5925   1     20 Call    0
         $  5926   1     23 Call    0                              5927   1     31 Call    0
         $  5928   1     34 Call    0                              5929   1     42 Call    0
            5932   1     45 Assign  0                              5933   1     47 Call    0
            5934   1     52 Return  0                              5937   1     53 Call    0 ERROR_RETURN
            5938   1     56 Call    0                              5939   1     61 Assign  0
            5940   1     63 Call    0                              5941   1     66 Return  0
            5959   1     67 Proc    1                              5963   1     70 Assign  1
            5964   1     72 Assign  1                              5965   1     74 Assign  1
            5966   1     76 Assign  1                              5967   1    100 Assign  1
            5968   1    102 Assign  1                              5969   1    104 Assign  1
            5970   1    106 Assign  1                              5971   1    110 Assign  1
            5972   1    112 Assign  1                              5973   1    113 Return  1
            5996   1    114 Proc    2                              6086   1    115 DoIndx  2
         $  6087   1    117 Assign  2                         $$$  6088   1    123 DoCase  2
            6089   1    135 Case    2                              6090   1    135 Assign  2
         $  6091   1    137 Assign  2                              6092   1    145 Assign  2
            6093   1    150 Call    2                              6094   1    154 Case    2
            6095   1    154 Assign  2                           $  6096   1    156 Assign  2
            6097   1    164 Assign  2                              6098   1    167 Call    2
            6099   1    172 EndCse  2                          $$  6100   1    172 EndInd  2
            6102   1    203 If      2                              6104   1    206 Call    2
            6105   1    211 If      2                              6107   1    213 Call    2
            6108   1    216 Return  2                              6111   1    220 Altret  2 ERROR
            6130   1    222 Proc    3                              6134   1    223 Call    3
            6135   1    226 Call    3                              6136   1    231 Return  3
            6139   1    233 Altret  3 ERROR                        6156   1    235 Proc    4
         $  6160   1    236 Assign  4                              6161   1    243 Assign  4
            6162   1    246 Assign  4                              6163   1    251 Return  4
            6188   1    253 Proc    5                              6195   1    254 Assign  5
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:232  
            6196   1    255 Call    5                              6197   1    260 Call    5
            6199   1    263 Call    5                              6200   1    267 Call    5
            6201   1    272 Do      5                              6202   1    272 Assign  5
         $  6203   1    275 Call    5                              6204   1    303 EndDo   5
            6206   1    304 Do      5                              6207   1    304 Assign  5
         $  6208   1    306 Call    5                              6209   1    314 EndDo   5
            6211   1    314 Assign  5                              6212   1    315 Call    5
            6213   1    320 Return  5                              6216   1    322 Call    5 ERROR
            6217   1    325 Altret  5                              6238   1    327 Proc    6
         $  6244   1    330 Assign  6                              6245   1    334 Return  6
            6367   1    336 Proc    7                              6411   1    337 If      7
            6412   1    342 Do      7                              6413   1    342 Call    7
         $  6414   1    344 Assign  7                              6415   1    351 EndDo   7
            6416   1    352 Do      7                              6417   1    352 Call    7
            6418   1    356 Assign  7                              6419   1    361 Call    7
            6420   1    364 Assign  7                              6421   1    367 EndDo   7
            6422   1    367 If      7                              6424   1    372 Assign  7
            6425   1    374 Call    7                              6426   1    376 Do      7
         $  6427   1    376 Assign  7                     $$$$$$$  6428   1    403 IntCal  7
            6429   1    406 EndDo   7                              6430   1    407 Do      7
            6431   1    407 Assign  7                              6432   1    411 Assign  7
            6433   1    413 Call    7                              6434   1    416 GoTo    7
            6438   1    417 Assign  7 SKIP_CONFIG_READ             6439   1    421 Assign  7
            6440   1    422 DoWhil  7                              6442   1    425 Call    7 TRY_AGAIN
            6443   1    431 Call    7                              6444   1    433 If      7
            6445   1    436 Assign  7                              6446   1    440 If      7
            6447   1    443 Do      7                           $  6448   1    443 Call    7
            6450   1    451 Call    7                              6451   1    453 EndDo   7
         $  6453   1    453 Call    7                           $  6454   1    461 Call    7
            6455   1    467 Call    7                              6456   1    471 Call    7
         $  6457   1    474 Call    7                              6459   1    503 Call    7
            6460   1    505 Call    7                              6461   1    511 DoIndx  7
        $$  6462   1    513 Assign  7                              6463   1    521 Assign  7
    $$$$$$  6464   1    524 If      7                              6468   1    543 Do      7
            6469   1    543 Call    7                           $  6470   1    546 Call    7
            6471   1    555 Call    7                              6472   1    557 EndDo   7
            6473   1    557 EndInd  7                              6474   1    565 Assign  7
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:233  
            6475   1    570 EndWhi  7                              6478   1    573 Call    7
            6479   1    575 Call    7                              6480   1    600 If      7
            6482   1    603 Call    7                              6483   1    605 Call    7
            6484   1    610 Return  7                              6487   1    612 Assign  7 ASK_ABORT
            6488   1    614 Call    7                              6489   1    617 Call    7
            6490   1    623 Assign  7                              6491   1    625 Call    7
            6493   1    630 Altret  7 ERROR                        6515   1    632 Proc    8
            6519   1    633 Call    8                              6520   1    636 Assign  8
        $$  6521   1    641 Assign  8                              6522   1    650 Return  8
            6525   1    652 Altret  8 ERROR                        6542   1    654 Proc    9
            6547   1    655 Call    9                              6549   1    660 Call    9
            6550   1    663 Do      9                              6551   1    663 Call    9
            6552   1    666 Return  9                              6555   1    670 Do      9
            6556   1    670 Altret  9                              6560   1    672 Altret  9 ERROR
            6581   1    674 Proc   10                              6590   1    675 Assign 10
            6591   1    676 Assign 10                              6592   1    700 Assign 10
            6593   1    703 Call   10                              6595   1    706 Assign 10
            6596   1    710 Call   10                              6597   1    713 Call   10
            6599   1    717 DoWhil 10                              6600   1    720 Call   10
            6601   1    723 Do     10                              6602   1    723 Assign 10
            6603   1    725 EndDo  10                              6605   1    726 Do     10
         $  6606   1    726 Call   10                              6607   1    734 EndDo  10
        $$  6608   1    734 EndWhi 10                              6611   1    746 If     10 ERROR
            6612   1    750 Return 10                              6613   1    752 Altret 10
            6643   1    754 Proc   11                           $  6650   1    755 Do Sel 11
            6651   1    763 Select 11                         $$$  6652   1    763 Do Sel 11
            6653   1   1000 Select 11                              6654   1   1000 Call   11
            6655   1   1002 Do     11                              6656   1   1002 Assign 11
            6657   1   1005 EndDo  11                              6659   1   1006 Do     11
            6660   1   1006 Call   11                              6661   1   1012 Do     11
            6662   1   1012 Assign 11                              6663   1   1015 EndDo  11
            6665   1   1016 Do     11                              6666   1   1016 Assign 11
            6667   1   1020 EndDo  11                              6668   1   1020 EndDo  11
            6669   1   1021 Select 11                              6670   1   1021 Call   11
            6671   1   1025 Do     11                              6672   1   1025 Assign 11
            6673   1   1030 EndDo  11                              6675   1   1031 Do     11
            6676   1   1031 Assign 11                              6677   1   1033 EndDo  11
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:234  
            6678   1   1033 EndSel 11                              6679   1   1034 Select 11
            6680   1   1034 Assign 11                              6681   1   1036 EndSel 11
            6682   1   1036 Return 11                              6696   1   1040 Proc   12
            6700   1   1041 Assign 12                              6701   1   1043 Call   12
            6702   1   1046 Call   12                              6703   1   1052 Do     12
            6704   1   1052 Return 12                              6707   1   1054 Do     12
            6708   1   1054 Altret 12                              6727   1   1056 Proc   13
        $$  6731   1   1057 If     13                              6732   1   1064 Do     13
            6733   1   1064 Assign 13                              6734   1   1066 Call   13
            6735   1   1071 Call   13                              6736   1   1075 Do     13
         $  6737   1   1075 Assign 13                              6738   1   1101 Return 13
            6741   1   1103 Do     13                              6742   1   1103 Altret 13
            6745   1   1105 Altret 13                              6772   1   1106 Proc   14
            6815   1   1107 Assign 14                          $$  6816   1   1112 If     14
         $  6817   1   1117 If     14                              6818   1   1125 Do     14
        $$  6819   1   1125 If     14                              6821   1   1135 Do     14
            6822   1   1135 Assign 14                              6823   1   1137 Assign 14
            6825   1   1142 EndDo  14                              6827   1   1142 Return 14
            6829   1   1143 Do     14                              6830   1   1143 Assign 14
         $  6831   1   1145 Assign 14                              6832   1   1150 EndDo  14
            6833   1   1151 Assign 14                              6835   1   1153 Call   14
            6836   1   1156 Altret 14                              6864   1   1160 Proc   15
            6911   1   1161 Assign 15                          $$  6912   1   1164 If     15
            6913   1   1171 Do     15                    $$$$$$$$  6914   1   1171 IntCal 15
         $  6915   1   1175 Assign 15                              6916   1   1201 Assign 15
            6917   1   1204 Assign 15                              6918   1   1207 Return 15
            6920   1   1211 Do     15                              6921   1   1211 Assign 15
            6922   1   1213 Call   15                              6923   1   1216 Altret 15
            6959   1   1220 Proc   16                              7002   1   1221 Assign 16
  $$$$$$$$  7003   1   1224 IntCal 16                              7012   1   1246 Call   16
            7013   1   1251 Do     16                              7014   1   1251 Assign 16
            7015   1   1253 Call   16                              7016   1   1256 Altret 16
            7019   1   1260 Do     16                              7020   1   1260 Return 16
            7044   1   1262 Proc   17                              7093   1   1263 Assign 17
       $$$  7094   1   1266 If     17                              7095   1   1274 Do     17
            7096   1   1274 If     17                              7097   1   1277 Do     17
            7098   1   1277 If     17                              7099   1   1303 Do     17
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:235  
            7100   1   1303 Assign 17                              7101   1   1305 Assign 17
            7102   1   1310 GoTo   17                              7104   1   1311 If     17
            7106   1   1315 Do     17                              7107   1   1315 Assign 17
            7108   1   1317 Assign 17                              7109   1   1322 GoTo   17
            7113   1   1323 Do     17                              7114   1   1323 Assign 17
            7115   1   1325 Assign 17                              7116   1   1330 GoTo   17
    $$$$$$  7118   1   1331 IntCal 17                           $  7119   1   1334 If     17
            7120   1   1340 Return 17                              7121   1   1341 Do     17
            7122   1   1341 Assign 17                              7123   1   1343 Assign 17
            7124   1   1345 EndDo  17                              7126   1   1345 Call   17 M_PS_ERROR
            7127   1   1350 Altret 17                              7148   1   1352 Proc   18
        $$  7154   1   1353 Assign 18                              7155   1   1361 Return 18
            7189   1   1363 Proc   19                              7199   1   1364 Assign 19
            7200   1   1367 Assign 19                              7201   1   1371 Assign 19
            7202   1   1373 DoWhil 19                           $  7203   1   1375 Do Sel 19
            7204   1   1403 Select 19                              7205   1   1403 Assign 19
            7206   1   1406 If     19                              7207   1   1410 Do     19
            7208   1   1410 Assign 19                              7209   1   1412 Assign 19
            7210   1   1414 EndDo  19                              7211   1   1415 Assign 19
            7212   1   1417 Select 19                          $$  7213   1   1417 IntCal 19
            7214   1   1423 Assign 19                              7215   1   1427 Assign 19
            7216   1   1430 EndSel 19                              7217   1   1430 EndWhi 19
            7218   1   1432 Return 19                              7255   1   1434 Proc   20
            7262   1   1435 Call   20                     $$$$$$$  7264   1   1437 Do Sel 20
            7265   1   1457 Select 20                              7266   1   1457 Call   20
            7267   1   1463 Select 20                              7268   1   1463 Call   20
            7269   1   1467 Select 20                              7270   1   1467 Call   20
            7271   1   1472 EndSel 20                              7272   1   1472 Call   20
            7273   1   1475 Call   20                              7274   1   1500 Assign 20
         $  7275   1   1502 Assign 20                              7276   1   1510 Assign 20
            7277   1   1512 Assign 20                              7278   1   1517 Assign 20
       $$$  7279   1   1520 Call   20                              7281   1   1534 Call   20
            7282   1   1537 Assign 20                     $$$$$$$  7283   1   1542 Do Sel 20
            7284   1   1562 Select 20                              7285   1   1562 Call   20
            7286   1   1566 Select 20                              7287   1   1566 Call   20
            7288   1   1572 Select 20                              7289   1   1572 Call   20
            7290   1   1575 EndSel 20                              7292   1   1575 Assign 20
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:236  
            7293   1   1600 Call   20                              7294   1   1603 Return 20
            7297   1   1605 Altret 20 ERROR                        7316   1   1607 Proc   21
            7320   1   1610 Call   21                         $$$  7321   1   1613 Assign 21
            7322   1   1624 Assign 21                              7323   1   1627 Return 21
            7326   1   1631 Altret 21 ERROR                        7345   1   1633 Proc   22
            7349   1   1634 Assign 22                              7350   1   1637 Assign 22
            7351   1   1642 Assign 22                              7352   1   1645 Call   22
            7353   1   1650 Return 22                              7356   1   1652 Altret 22 ERROR
            7374   1   1654 Proc   23                              7378   1   1655 Assign 23
        $$  7379   1   1660 Assign 23                              7380   1   1667 Assign 23
            7381   1   1672 Call   23                              7382   1   1675 Call   23
            7383   1   1700 Return 23                              7386   1   1702 Altret 23 ERROR
            7409   1   1704 Proc   24                              7416   1   1705 Assign 24
            7417   1   1707 Assign 24                              7418   1   1711 Call   24
         $  7420   1   1714 Call   24                              7422   1   1722 Assign 24
            7423   1   1724 Call   24                              7424   1   1727 Assign 24
            7425   1   1731 Return 24                              7428   1   1733 Call   24 ERROR
            7429   1   1736 Assign 24                              7430   1   1740 Altret 24
            7456   1   1742 Proc   25                              7463   1   1743 Assign 25
            7464   1   1745 If     25                              7466   1   1750 Call   25
            7467   1   1752 Call   25                              7468   1   1755 Call   25
            7469   1   1757 Assign 25                          $$  7470   1   1762 DoIndx 25
            7471   1   1767 Call   25                              7472   1   1771 Call   25
            7473   1   1773 Call   25                              7474   1   1775 Call   25
    $$$$$$  7475   1   2000 EndInd 25                              7476   1   2022 Call   25
            7477   1   2026 Call   25                              7478   1   2031 Call   25
            7479   1   2035 Assign 25                              7480   1   2037 Return 25
            7483   1   2041 Assign 25 ERROR                        7484   1   2043 Assign 25
            7485   1   2045 Assign 25                              7486   1   2047 Call   25
            7487   1   2052 Altret 25                              7504   1   2054 Proc   26
            7508   1   2055 Call   26                              7509   1   2060 Call   26
            7510   1   2063 Assign 26                              7511   1   2066 Assign 26
            7512   1   2071 Call   26                              7513   1   2074 Call   26
            7514   1   2077 Return 26                              7517   1   2101 Altret 26 ERROR
            7533   1   2103 Proc   27                              7537   1   2104 Assign 27
            7538   1   2107 Call   27                              7539   1   2112 Call   27
            7540   1   2115 Return 27                              7543   1   2117 Altret 27 ERROR
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:237  
            7558   1   2121 Proc   28                              7562   1   2122 Call   28
            7563   1   2125 Call   28                              7564   1   2130 Return 28
            7567   1   2132 Altret 28 ERROR                        7587   1   2134 Proc   29
            7591   1   2135 Call   29                              7592   1   2140 Do     29
            7593   1   2140 Call   29                              7594   1   2142 EndDo  29
            7596   1   2143 Do     29                              7597   1   2143 Call   29
            7598   1   2145 EndDo  29                              7599   1   2145 Return 29
            7602   1   2147 Altret 29 ERROR                        7632   1   2151 Proc   30
            7637   1   2152 Call   30                              7638   1   2155 Call   30
            7640   1   2160 Assign 30                              7641   1   2163 Assign 30
         $  7642   1   2166 Do Sel 30                              7643   1   2173 Select 30
            7644   1   2173 Call   30                              7645   1   2176 Call   30
            7646   1   2202 Select 30                              7647   1   2202 If     30
            7648   1   2206 Do     30                              7649   1   2206 Call   30
            7650   1   2211 Call   30                              7651   1   2214 EndDo  30
            7652   1   2215 Do     30                              7653   1   2215 Call   30
            7654   1   2220 Call   30                              7655   1   2223 EndDo  30
            7656   1   2223 EndSel 30                              7658   1   2223 Assign 30
         $  7659   1   2226 Assign 30                              7660   1   2236 Call   30
            7661   1   2241 Call   30                              7663   1   2244 Assign 30
            7664   1   2247 Assign 30                           $  7665   1   2251 Assign 30
         $  7666   1   2257 Assign 30                              7667   1   2265 Call   30
            7668   1   2270 Return 30                              7671   1   2272 Altret 30 ERROR
            7703   1   2274 Proc   31                              7709   1   2275 Assign 31
            7710   1   2300 Assign 31                              7711   1   2303 Assign 31
            7712   1   2306 Call   31                              7713   1   2311 Call   31
            7715   1   2314 Call   31                              7716   1   2317 Call   31
            7718   1   2322 Assign 31                              7719   1   2325 Assign 31
         $  7720   1   2330 Do Sel 31                              7721   1   2335 Select 31
            7722   1   2335 Call   31                              7723   1   2340 Call   31
            7724   1   2344 Select 31                              7725   1   2344 If     31
            7726   1   2350 Do     31                              7727   1   2350 Call   31
            7728   1   2353 Call   31                              7729   1   2356 EndDo  31
            7730   1   2357 Do     31                              7731   1   2357 Call   31
            7732   1   2362 Call   31                              7733   1   2365 EndDo  31
            7734   1   2365 EndSel 31                              7737   1   2365 Assign 31
         $  7738   1   2370 Assign 31                              7739   1   2400 Call   31
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:238  
            7740   1   2403 Call   31                              7741   1   2406 Assign 31
            7742   1   2411 Assign 31                           $  7743   1   2413 Assign 31
         $  7744   1   2422 Assign 31                              7745   1   2430 Assign 31
            7746   1   2433 Call   31                              7747   1   2436 Return 31
            7750   1   2440 Altret 31 ERROR                        7767   1   2442 Proc   32
            7773   1   2443 If     32                              7774   1   2446 Assign 32
            7775   1   2451 Assign 32                              7776   1   2453 Assign 32
            7777   1   2456 Assign 32                              7778   1   2461 Assign 32
            7779   1   2464 Call   32                              7780   1   2467 Call   32
            7781   1   2472 Return 32                              7784   1   2474 Altret 32 ERROR
            7805   1   2476 Proc   33                              7809   1   2477 Assign 33
       $$$  7810   1   2502 Assign 33                              7811   1   2510 Assign 33
            7812   1   2513 Assign 33                              7813   1   2515 Assign 33
            7814   1   2517 Return 33                              7832   1   2520 Proc   34
            7838   1   2521 Assign 34                              7839   1   2523 Call   34
            7840   1   2526 If     34                              7841   1   2531 Assign 34
            7842   1   2534 Assign 34                              7843   1   2536 Call   34
            7844   1   2541 Call   34                              7845   1   2544 Return 34
            7861   1   2546 Proc   35                              7873   1   2547 Assign 35
            7874   1   2550 DoUntl 35                              7875   1   2550 Assign 35
            7876   1   2553 Call   35                              7877   1   2556 Assign 35
            7878   1   2561 Assign 35                              7881   1   2563 Assign 35
            7882   1   2564 DoWhil 35                              7883   1   2565 Assign 35
      $$$$  7884   1   2570 EndWhi 35                         $$$  7887   1   2611 IntCal 35
            7888   1   2621 If     35                              7889   1   2624 Assign 35
$$$$$$$$$$  7893   1   2625 Do Sel 35                              7894   1   2675 Select 35
            7895   1   2675 Assign 35                              7896   1   2700 Select 35
            7897   1   2700 Assign 35                              7898   1   2701 Assign 35
            7899   1   2703 Call   35                              7900   1   2706 EndSel 35
            7901   1   2706 EndUnt 35                           $  7904   1   2710 If     35
            7905   1   2715 Return 35                              7906   1   2717 Altret 35


  **** Statement type totals  ****

   162 Assign   149 Call      27 If         2 Case       4 GoTo      37 Return
    29 Altret     6 IntCal     8 Do Sel     8 EndSel    18 Select     1 DoUntl
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:239  
     3 DoIndx     4 DoWhil     1 DoCase    43 Do         1 EndUnt     3 EndInd
     4 EndWhi     1 EndCse    25 EndDo     36 Proc      25 Labels

 # major stmts=  457 Code/major= 3.25 # stmts=  572 Code/stmt= 2.60  Point total=107.7
 Cost/major stmt=  2.9 Cost/stmt=  2.3 Total cost=   1327.8

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$
   6-8  $$
  8-10  $
 10-12
 12-14
 14-16
 16-18
 18-20
 20-22
 22-??
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:240  

 **** Variables and constants ****

  ****  Section 000 RoData TOU$MERGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 STRING

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w PTR         r     1 @CATALOG_EXISTED          13-0-0/w PTR         r     1 @CATALOG_EXISTED
    17-0-0/w PTR         r     1 @CATALOG_EXISTED          31-0-0/w PTR         r     1 @DISKETTE
    31-0-0/w PTR         r     1 @DISKETTE                 36-0-0/w PTR         r     1 @DRIVE_NUMBER
    41-0-0/w PTR         r     1 @DRIVE_NUMBER              7-0-0/w PTR         r     1 @EXISTED
     7-0-0/w PTR         r     1 @EXISTED                  17-0-0/w PTR         r     1 @EXISTED
    10-0-0/w PTR         r     1 @FIRST                    10-0-0/w PTR         r     1 @FIRST
    14-0-0/w PTR         r     1 @FIRST_NEW                14-0-0/w PTR         r     1 @FIRST_NEW_ENTRY
    31-0-0/w PTR         r     1 @KEY_DATA                 31-0-0/w PTR         r     1 @LAST_DIR
    31-0-0/w PTR         r     1 @LAST_DISKETTE            43-0-0/w PTR         r     1 @MSG_CODE
    32-0-0/w PTR         r     1 @PRODUCT_SET              32-0-0/w PTR         r     1 @PRODUCT_SET
    35-0-0/w PTR         r     1 @READ_POSSIBLE            32-0-0/w PTR         r     1 @SIZE
    31-0-0/w PTR         r     1 @TYPE                     60-0-0/w UBIN        r     1 BL_INX
    *0-0-0/w BIT         r     1 CATALOG_EXISTED           *0-0-0/w BIT         r     1 CATALOG_EXISTED
    *0-0-0/w BIT         r     1 CATALOG_EXISTED           35-0-0/c BIT         r     1 CHANGE_NEEDED
    57-0-0/w UBIN        r     1 CHR_INX                   32-0-0/w BIT         r     1 DATA_OBTAINED
    15-0-0/w PTR         r     1 DIR$                      20-0-0/w UBIN        r     1 DIRECTORY
    17-0-0/w UBIN        r     1 DISKETTE                  *0-0-0/w UBIN        r     1 DISKETTE
    *0-0-0/w UBIN        r     1 DISKETTE                  33-0-0/w UBIN        r     1 DISKETTE_X
    *0-0-0/c CHAR        r     1 DRIVE_NUMBER              *0-0-0/c CHAR        r     1 DRIVE_NUMBER
     3-0-0/w BIT         r     1 EXISTED                   *0-0-0/w BIT         r     1 EXISTED
    *0-0-0/w BIT         r     1 EXISTED                   *0-0-0/w BIT         r     1 EXISTED
     4-0-0/w UBIN        r     1 FIRST                     *0-0-0/w UBIN        r     1 FIRST
    *0-0-0/w UBIN        r     1 FIRST                     *0-0-0/w UBIN        r     1 FIRST_NEW
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:241  
    *0-0-0/w UBIN        r     1 FIRST_NEW_ENTRY           31-0-0/w PTR         r     1 HDR$
    37-0-0/w UBIN        r     1 INX                       *0-0-0/c CHAR(21)    r     1 KEY_DATA
    22-0-0/w UBIN        r     1 LAST_DIR                  *0-0-0/w UBIN        r     1 LAST_DIR
    21-0-0/w UBIN        r     1 LAST_DISKETTE             *0-0-0/w UBIN        r     1 LAST_DISKETTE
    *0-0-0/w UBIN        r     1 MSG_CODE                  21-0-0/w UBIN        r     1 OLD_COUNT
     7-0-0/w UBIN        r     1 OUTBLK#                   10-0-0/w PTR         r     1 OUTBLK$
    36-0-0/w UBIN        r     1 POSITION                  31-0-0/w PTR         r     1 PTR$
    33-0-0/w PTR         r     1 PTR$                      34-0-0/w PTR         r     1 PTR$
    33-0-0/w BIT         r     1 READ_POSSIBLE             *0-0-0/w BIT         r     1 READ_POSSIBLE
    44-0-0/c CHAR        r     1 RESPONSE(0:39)
    44-0-0/c CHAR(40)    r     1 RESPONSE_                 56-0-0/w UBIN        r     1 RESPONSE_LGTH
    *0-0-0/w UBIN        r     1 SIZE                      *0-0-0/c CHAR(9)     r     1 TYPE
    61-0-0/b BIT         r     1 VALID_RESPONSE            16-0-0/w SBIN        r     1 WORK

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

    23-0-0/c STRC(171)   r     1 PRODUCT_SET
    27-0-0/c CHAR(3)     r         2 NUM_TAB

    *0-0-0/c STRC(171)   r     1 PRODUCT_SET
     0-0-0/c CHAR(4)     r         2 EQUIP_TYPE
     1-0-0/c CHAR(12)    r         2 DWG_NUM
     4-0-0/c CHAR(3)     r         2 NUM_TAB

    *0-0-0/c STRC(171)   r     1 PRODUCT_SET
     0-0-0/c CHAR(4)     r         2 EQUIP_TYPE
     1-0-0/c CHAR(12)    r         2 DWG_NUM
     4-0-0/c CHAR(3)     r         2 NUM_TAB


  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 BCD#                       0-0-0/w UBIN        r     1 BIN#
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:242  
     0-0-0/w UBIN        r     1 CUR#                       0-0-0/w UBIN        r     1 CUR#
     0-0-0/w UBIN        r     1 CUR#

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(45)    r     1 BCD_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 BINARY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/w STRC(72)    r     1 CATALOG_DATA
     0-0-0/b UBIN(18)    r         2 DECK#
     0-2-0/b UBIN(18)    r         2 ENTRY_COUNT

     0-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(216)   r     1 CATALOG_KEY
     0-1-0/c CHAR(21)    r         2 DATA

     0-0-0/c STRC(189)   r     1 CATALOG_SEARCH_KEY
     0-0-0/c CHAR(21)    r         2 DATA

     0-0-0/w STRC(756)   r     1 DKEND
     0-0-0/c STRC(720)   r         2 BCD
    20-2-0/c CHAR(6)     r          3 REVISION
     0-0-0/c CHAR(80)    r         2 BCD_

     0-0-0/d STRC(5220)  r     1 DUP
     4-0-0/c CHAR(40)    r         2 RESPONSE
    16-0-0/w UBIN        r         2 RESPONSE_LGTH
    17-0-0/w PTR         r         2 CMD$
    20-0-0/w UBIN        r         2 MSG_CODE
    21-0-0/w UBIN        r         2 HDR_CODE
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:243  
    26-0-0/c CHAR        r         2 LINE_VFC
    32-0-0/c CHAR(80)    r         2 ERROR_IMAGE
    56-0-0/c BIT         r         2 FORCE_NEW_PAGE
    57-0-0/w STRC(576)   r         2 IFAD
    57-0-0/c BIT         r          3 ME_ALLOWED
    57-1-0/c BIT         r          3 ENTERED
    57-3-0/c BIT         r          3 IMU_TAB
    60-0-0/c CHAR(3)     r          3 CONFIG_TAB
    63-0-0/c CHAR        r          3 DRIVE_NUMBER
    63-1-0/c CHAR(40)    r          3 FID
   100-0-0/d STRC(72)    r         2 BINARY_V
   101-0-0/b PTR         r          3 PTR$
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$
   104-0-0/w STRC(504)   r         2 DF
   104-0-0/c BIT         r          3 ENTERED
   104-2-0/c BIT         r          3 REPORT_ERROR
   105-0-0/w UBIN        r          3 OPEN_TYPE
   106-0-0/w UBIN        r          3 CLOSE_TYPE
   122-0-0/w STRC(432)   r         2 LOG
   122-0-0/w UBIN        r          3 TYPE
   123-0-0/c CHAR(21)    r          3 CATALOG
   130-1-0/c CHAR(23)    r          3 DECK
   140-0-0/w STRC(72)    r         2 TEMP
   140-0-0/w UBIN        r          3 OPEN_TYPE
   141-0-0/w UBIN        r          3 CLOSE_TYPE
   142-0-0/c CHAR(40)    r         2 HOLD_AREA
   154-0-0/w UBIN        r         2 HOLD_AREA_LGTH
   155-1-0/c BIT         r         2 BREAK_DISABLED

     0-0-0/c STRC(162)   r     1 ID
     0-0-0/c CHAR(6)     r         2 ID
     1-2-0/c CHAR(6)     r         2 REVISION

     0-0-0/c STRC(54)    r     1 LAST
     0-0-0/c UBIN(18)    r         2 DECK#
     0-2-0/c CHAR(4)     r         2 EDIT_NAME
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:244  

     0-0-0/w STRC(72)    r     1 MASTER_DATA
     0-0-0/b UBIN(18)    r         2 DECK#
     0-2-0/b UBIN(18)    r         2 ENTRY_COUNT

     0-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(864)   r     1 OBJECT
     0-0-0/c STRC(720)   r         2 NIO_BCD
     5-2-0/c CHAR        r          3 CLASS
    13-3-0/c CHAR(8)     r          3 FILE_NAME
    24-0-0/b UBIN(18)    r         2 DECK#
    24-2-0/b UBIN(18)    r         2 BINARY_COUNT
    25-0-0/b UBIN(18)    r         2 TOTAL_COUNT
    25-2-0/b UBIN(18)    r         2 LOAD_SIZE
    26-0-0/w UBIN        r         2 DECK_CHECKSUM
    27-0-0/w UBIN        r         2 CHECKSUM

     0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-1-0/c CHAR(23)    r         2 DATA

     0-0-0/w STRC(576)   r     1 OBJECT_REFLIST_DATA
     0-0-0/b UBIN        r         2 NUM_REFS
     1-0-0/b STRC        r         2 REFS(0:14)
     1-0-0/b UBIN(18)    r          3 ME#
     1-2-0/b UBIN(18)    r          3 CE#

     0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(468)   r     1 SUBCATALOG_DATA
     0-0-0/c CHAR(40)    r         2 IFAD_FID
    12-0-0/c CHAR(12)    r         2 IFAD_FN

     0-0-0/c STRC(45)    r     1 SUBCATALOG_KEY
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:245  
     0-1-0/b UBIN(18)    r         2 DECK#


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(84)    r     1 BCD_B(0:199)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(144)   r     1 DIRECTORY_ENTRY
     0-0-0/c CHAR(8)     r         2 PATH_NAME
     0-0-0/b UBIN        r         2 PATH_NULL(0:1)
     3-2-0/b STRC(9)     r         2 ATTRIBUTES
     3-2-8/b BIT         r          3 LSB

     0-0-0/c STRC(1224)  r     1 DISKETTE_HEADER
    15-3-0/c CHAR(8)     r         2 TITLE
    32-0-0/b UBIN(9)     r         2 DISK_TYPE
    33-2-0/c STRC(108)   r         2 IPI_NUM
    35-3-0/c CHAR(3)     r          3 PRD_NUM_TAB

     0-0-0/c STRC(1224)  r     1 DISKETTE_HEADER
    32-2-0/c CHAR(4)     r         2 EQUIP_TYPE
    33-2-0/c STRC(108)   r         2 IPI_NUM
    35-3-0/c CHAR(3)     r          3 PRD_NUM_TAB
    36-2-0/c CHAR(12)    r         2 DISK_DWG_NUM
    41-2-0/c STRC(18)    r         2 X_OF_N
    41-2-0/c CHAR        r          3 X
    41-3-0/c CHAR        r          3 N

     0-0-0/c STRC(1224)  r     1 DISKETTE_HEADER
    17-3-0/c CHAR(8)     r         2 UNIQUE_ID
    32-2-0/c CHAR(4)     r         2 EQUIP_TYPE
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:246  
    33-2-0/c STRC(108)   r         2 IPI_NUM
    35-3-0/c CHAR(3)     r          3 PRD_NUM_TAB
    41-2-0/c CHAR(2)     r         2 X_OF_N_

     0-0-0/c STRC(1224)  r     1 DISKETTE_HEADER
    32-2-0/c CHAR(4)     r         2 EQUIP_TYPE
    33-2-0/c STRC(108)   r         2 IPI_NUM
    35-3-0/c CHAR(3)     r          3 PRD_NUM_TAB
    36-2-0/c CHAR(12)    r         2 DISK_DWG_NUM
    41-2-0/c STRC(18)    r         2 X_OF_N
    41-2-0/c CHAR        r          3 X

     0-0-0/d STRC)       r     1 MCA_B
     0-0-0/w STRC(144)   r         2 DCW_LIST
     0-0-0/b BIT         r          3 IDCW1
     2-0-0/b BIT         r          3 IDCW2
    24-0-0/w STRC(72)    r         2 STATUS
    24-0-2/b BIT (4)     r          3 MAJOR
    24-0-6/b STRC(6)     r          3 SUB
    24-0-7/b BIT (5)     r           4 VALUE
    26-0-0/w STRC(1512)  r         2 DISKETTE_HEADER
    36-0-0/c CHAR(136)   r          3 DATA
   100-0-0/w STRC(23508) r         2 DIRECTORY
   110-0-0/c CHAR(16)    r          3 DATA(0:159)
  1310-0-0/w UBIN        r          3 SIZE
  1311-0-0/c CHAR(16)    r          3 CURRENT
  1315-0-0/w STRC(65896) r         2 FILE
 41325-0-0/w UBIN        r          3 SIZE
 51237-0-0/w STRC(1512)  r         2 CONFIG
 51247-0-0/c STRC(1224)  r          3 DATA1
 51256-2-0/b UBIN(18)    r           4 NUMTAB

     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-2-0/h UBIN(18)    r         2 CODE
     1-0-0/h UBIN(18)    r         2 NSUBLKS
     3-0-0/b PTR         r         2 SUBLK$(0:0)

PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:247  
     0-0-0/w ASTR(153)   r     1 OUT$SYM
     4-0-0/c UBIN(9)     r         2 COUNT
     4-1-0/c ACHR        r         2 TEXT



   Procedure TOU$MERGE requires 1489 words for executable code.
   Procedure TOU$MERGE requires 56 words of local(AUTO) storage.

    No errors detected in file TOU$MERGE.:E05TSI    .
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:248  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:249  
          MINI XREF LISTING

ASK_ABORT IN PROCEDURE M_PROCESS_MCA_INPUT
      6487**LABEL    6443--CALLALT  6448--CALLALT  6453--CALLALT
BCD#
      5823**DCL      7659<<ASSIGN   7738<<ASSIGN   7810>>ASSIGN
BCD_B
      5259**DCL      7810>>ASSIGN
BCD_CARD
      5271**DCL      5280--REDEF
BCD_CARD.BCD
      5272**DCL      5278--REDEF
BCD_KEY.DECK#
      5293**DCL      7292<<ASSIGN   7658<<ASSIGN   7737<<ASSIGN
BIN#
      5824**DCL      7641<<ASSIGN   7719<<ASSIGN
BINARY_CARD
      5305**DCL      5320--REDEF
BINARY_CARD.DATA
      5314**DCL      5315--REDEF
BINARY_CARD.LBL_SEQ
      5316**DCL      5317--REDEF
BINARY_CARD.WD1
      5306**DCL      5311--REDEF
BINARY_KEY.DECK#
      5334**DCL      7282<<ASSIGN   7640<<ASSIGN   7709<<ASSIGN   7718<<ASSIGN
BL_INX IN PROCEDURE M_GET_RESPONSE
      7868**DCL      7887<<CALLBLT  7888>>IF       7889<<ASSIGN   7893>>DOSELCT
CATALOG_DATA.DECK#
      5347**DCL      6520>>ASSIGN   7349>>ASSIGN   7469>>ASSIGN   7537>>ASSIGN
CATALOG_DATA.ENTRY_COUNT
      5348**DCL      6414>>ASSIGN   6521>>ASSIGN   7322<<ASSIGN   7322>>ASSIGN   7470>>DOINDEX
CATALOG_ENTRY_KEY.DECK#
      5362**DCL      6520<<ASSIGN   7469<<ASSIGN
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:250  
CATALOG_ENTRY_KEY.ENTRY#
      5363**DCL      6521<<ASSIGN   7321<<ASSIGN   7321>>ASSIGN   7470<<DOINDEX  7666>>ASSIGN   7744>>ASSIGN
CATALOG_EXISTED IN PROCEDURE M_PRINT_MERGED_MSG
      7834**DCL      7832--PROC     7840>>IF
CATALOG_EXISTED IN PROCEDURE M_PROCESS_MCA_INPUT
      6398**DCL      6367--PROC     6411>>IF       6480>>IF
CATALOG_EXISTED IN PROCEDURE M_PROCESS_TEMP
      7458**DCL      7456--PROC     7464>>IF       7476<>CALL     7478<>CALL
CATALOG_KEY.DATA
      5376**DCL      6417<>CALL     7776>>ASSIGN
CATALOG_SEARCH_KEY.DATA
      5389**DCL      6199<>CALL
CHANGE_NEEDED IN PROCEDURE M_GET_NEXT_DECK
      7191**DCL      7200<<ASSIGN   7202>>DOWHILE  7208<<ASSIGN   7211<<ASSIGN   7215<<ASSIGN
CHR_INX IN PROCEDURE M_GET_RESPONSE
      7867**DCL      7881<<ASSIGN   7882>>DOWHILE  7882>>DOWHILE  7883<<ASSIGN   7883>>ASSIGN   7887>>CALLBLT
      7893>>DOSELCT  7893>>DOSELCT  7904>>IF
CUR# IN PROCEDURE M_CHECK_PRODUCT_SET
      7053**DCL      7123<<ASSIGN
CUR# IN PROCEDURE M_CHECK_TND_DISKETTE
      6775**DCL      6831<<ASSIGN
CUR# IN PROCEDURE M_GET_HEADER
      6586**DCL      6592<<ASSIGN
DATA_OBTAINED IN PROCEDURE M_GET_HEADER
      6584**DCL      6590<<ASSIGN   6599>>DOWHILE  6602<<ASSIGN   6611>>IF
DIR$ IN PROCEDURE M_PROCESS_MCA_INPUT
      6369**DCL      6380--IMP-PTR  6463<<ASSIGN   6464>>IF       6464>>IF       6464>>IF
DIRECTORY IN PROCEDURE M_PROCESS_MCA_INPUT
      6401**DCL      6461<<DOINDEX  6462>>ASSIGN
DIRECTORY_ENTRY.ATTRIBUTES.LSB IN PROCEDURE M_PROCESS_MCA_INPUT
      6394**DCL      6464>>IF
DIRECTORY_ENTRY.ATTRIBUTES_ IN PROCEDURE M_PROCESS_MCA_INPUT
      6390**DCL      6392--REDEF
DIRECTORY_ENTRY.PATH_NAME IN PROCEDURE M_PROCESS_MCA_INPUT
      6381**DCL      6383--REDEF    6464>>IF
DIRECTORY_ENTRY.PATH_NULL IN PROCEDURE M_PROCESS_MCA_INPUT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:251  
      6383**DCL      6464>>IF
DISKETTE IN PROCEDURE M_CHECK_PRODUCT_SET
      7046**DCL      7044--PROC     7119>>IF       7123>>ASSIGN
DISKETTE IN PROCEDURE M_GET_HEADER
      6583**DCL      6581--PROC     6592>>ASSIGN
DISKETTE IN PROCEDURE M_PROCESS_MCA_INPUT
      6400**DCL      6438<<ASSIGN   6440>>DOWHILE  6442<>CALL     6446>>IF       6453<>CALL     6474<<ASSIGN
      6474>>ASSIGN
DISKETTE_HEADER.EQUIP_TYPE IN PROCEDURE M_CHECK_ALREADY_MERGED
      6987**DCL      7003>>CALLBLT
DISKETTE_HEADER.IPI_NUM IN PROCEDURE M_CHECK_ALREADY_MERGED
      6988**DCL      6991--REDEF
DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB IN PROCEDURE M_CHECK_ALREADY_MERGED
      6990**DCL      7003>>CALLBLT
DISKETTE_HEADER.UNIQUE_ID IN PROCEDURE M_CHECK_ALREADY_MERGED
      6974**DCL      7003>>CALLBLT
DISKETTE_HEADER.X_OF_N IN PROCEDURE M_CHECK_ALREADY_MERGED
      6993**DCL      6996--REDEF
DISKETTE_HEADER.X_OF_N_ IN PROCEDURE M_CHECK_ALREADY_MERGED
      6996**DCL      7003>>CALLBLT
DISKETTE_HEADER.DISK_DWG_NUM IN PROCEDURE M_CHECK_PRODUCT_SET
      7084**DCL      7098>>IF
DISKETTE_HEADER.EQUIP_TYPE IN PROCEDURE M_CHECK_PRODUCT_SET
      7079**DCL      7094>>IF
DISKETTE_HEADER.IPI_NUM IN PROCEDURE M_CHECK_PRODUCT_SET
      7080**DCL      7083--REDEF
DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB IN PROCEDURE M_CHECK_PRODUCT_SET
      7082**DCL      7104>>IF
DISKETTE_HEADER.X_OF_N IN PROCEDURE M_CHECK_PRODUCT_SET
      7085**DCL      7088--REDEF
DISKETTE_HEADER.X_OF_N.X IN PROCEDURE M_CHECK_PRODUCT_SET
      7086**DCL      7118>>CALLBLT
DISKETTE_HEADER.DISK_TYPE IN PROCEDURE M_CHECK_TND_DISKETTE
      6799**DCL      6817>>IF       6831>>ASSIGN
DISKETTE_HEADER.IPI_NUM IN PROCEDURE M_CHECK_TND_DISKETTE
      6802**DCL      6805--REDEF
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:252  
DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB IN PROCEDURE M_CHECK_TND_DISKETTE
      6804**DCL      6819>>IF       6819>>IF       6823<<ASSIGN
DISKETTE_HEADER.TITLE IN PROCEDURE M_CHECK_TND_DISKETTE
      6787**DCL      6816>>IF
DISKETTE_HEADER.X_OF_N IN PROCEDURE M_CHECK_TND_DISKETTE
      6807**DCL      6810--REDEF
DISKETTE_HEADER.DISK_DWG_NUM IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6902**DCL      6916>>ASSIGN
DISKETTE_HEADER.EQUIP_TYPE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6897**DCL      6915>>ASSIGN
DISKETTE_HEADER.IPI_NUM IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6898**DCL      6901--REDEF
DISKETTE_HEADER.IPI_NUM.PRD_NUM_TAB IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6900**DCL      6917>>ASSIGN
DISKETTE_HEADER.X_OF_N IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6903**DCL      6906--REDEF
DISKETTE_HEADER.X_OF_N.N IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6905**DCL      6914>>CALLBLT
DISKETTE_HEADER.X_OF_N.X IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6904**DCL      6912>>IF
DISKETTE_X IN PROCEDURE M_CHECK_PRODUCT_SET
      7047**DCL      7118<<CALLBLT  7119>>IF
DKEND
      5400**DCL      5413--REDEF
DKEND.BCD
      5401**DCL      5411--REDEF
DKEND.BCD.REVISION
      5408**DCL      7811>>ASSIGN
DKEND.BCD_
      5411**DCL      7810<<ASSIGN
DRIVE_NUMBER IN PROCEDURE M_HANDLE_ERROR
      6646**DCL      6643--PROC     6660<>CALL     6670<>CALL
DRIVE_NUMBER IN PROCEDURE M_PROMPT_NEXT_DRIVE
      6729**DCL      6727--PROC     6731>>IF       6737<<ASSIGN
DUP.BCD_V.PTR$
      5498**DCL      5259--IMP-PTR  7810>>ASSIGN
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:253  
DUP.BINARY_V.PTR$
      5493**DCL      5625--IMP-PTR  6160>>ASSIGN   6161>>ASSIGN   6162>>ASSIGN   6427>>ASSIGN   6457>>CALL
      6462>>ASSIGN   6462>>ASSIGN   6463>>ASSIGN   6470>>CALL     6650>>DOSELCT  6652>>DOSELCT  6815>>ASSIGN
      6911>>ASSIGN   7002>>ASSIGN   7093>>ASSIGN   7154>>ASSIGN
DUP.BREAK_DISABLED
      5544**DCL      7416<<ASSIGN   7424<<ASSIGN   7429<<ASSIGN   7463<<ASSIGN   7479<<ASSIGN   7483<<ASSIGN
DUP.CMD$
      5442**DCL      6086>>DOINDEX  6087>>ASSIGN
DUP.DF.CLOSE_TYPE
      5510**DCL      5972<<ASSIGN   7484<<ASSIGN
DUP.DF.ENTERED
      5502**DCL      5969<<ASSIGN   6095<<ASSIGN   6105>>IF
DUP.DF.OPEN_TYPE
      5508**DCL      5970<<ASSIGN
DUP.DF.REPORT_ERROR
      5506**DCL      5971<<ASSIGN
DUP.ERROR_IMAGE
      5464**DCL      7101<<ASSIGN   7108<<ASSIGN   7115<<ASSIGN
DUP.FORCE_NEW_PAGE
      5466**DCL      5965<<ASSIGN
DUP.HDR_CODE
      5447**DCL      5963<<ASSIGN   7812<<ASSIGN
DUP.HOLD_AREA
      5537**DCL      6091<<ASSIGN   6096<<ASSIGN   7778<<ASSIGN
DUP.HOLD_AREA_LGTH
      5539**DCL      6092<<ASSIGN   6097<<ASSIGN
DUP.IFAD.CONFIG_TAB
      5478**DCL      6428<<CALLBLT  6445>>ASSIGN   6823>>ASSIGN
DUP.IFAD.DRIVE_NUMBER
      5484**DCL      5968<<ASSIGN   6606<>CALL
DUP.IFAD.ENTERED
      5472**DCL      5967<<ASSIGN   6090<<ASSIGN   6102>>IF
DUP.IFAD.FID
      5486**DCL      7350>>ASSIGN   7778>>ASSIGN
DUP.IFAD.IMU_TAB
      5476**DCL      6422>>IF       6424<<ASSIGN   6431<<ASSIGN   6444>>IF       6822<<ASSIGN   7096>>IF
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:254  
DUP.IFAD.ME_ALLOWED
      5470**DCL      5966<<ASSIGN
DUP.LINE_VFC
      5456**DCL      5964<<ASSIGN
DUP.LOG.CATALOG
      5520**DCL      7776<<ASSIGN
DUP.LOG.DECK
      5522**DCL      7777<<ASSIGN
DUP.LOG.TYPE
      5518**DCL      7774<<ASSIGN   7775<<ASSIGN
DUP.LOG_V
      5524**DCL      5529--REDEF
DUP.MSG_CODE
      5445**DCL      5932<<ASSIGN   5939<<ASSIGN   6432<<ASSIGN   6487<<ASSIGN   6490<<ASSIGN   6595<<ASSIGN
      6700<<ASSIGN   6733<<ASSIGN   6830<<ASSIGN   6833<<ASSIGN   6921<<ASSIGN   7014<<ASSIGN   7100<<ASSIGN
      7107<<ASSIGN   7114<<ASSIGN   7122<<ASSIGN   7485<<ASSIGN   7813<<ASSIGN   7838<<ASSIGN   7841<<ASSIGN
      7842<<ASSIGN   7875<<ASSIGN   7898<<ASSIGN
DUP.RESPONSE
      5438**DCL      7877>>ASSIGN
DUP.RESPONSE_LGTH
      5440**DCL      7878>>ASSIGN
DUP.TEMP.CLOSE_TYPE
      5534**DCL      6211<<ASSIGN   7422<<ASSIGN
DUP.TEMP.OPEN_TYPE
      5532**DCL      6195<<ASSIGN   7417<<ASSIGN
ERROR IN PROCEDURE M_COMMAND_SETUP
      6111**LABEL    6093--CALLALT  6098--CALLALT  6104--CALLALT  6107--CALLALT
ERROR IN PROCEDURE M_GET_CONFIG
      6560**LABEL    6547--CALLALT  6551--CALLALT
ERROR IN PROCEDURE M_GET_CURRENT_DF_VALUES
      6139**LABEL    6134--CALLALT  6135--CALLALT
ERROR IN PROCEDURE M_GET_HEADER
      6611**LABEL    6593--CALLALT  6597--CALLALT
ERROR IN PROCEDURE M_PROCESS_MCA_INPUT
      6493**LABEL    6413--CALLALT  6434--GOTO     6442--CALLALT  6450--CALLALT  6454--CALLALT  6455--CALLALT
      6456--CALLALT  6457--CALLALT  6459--CALLALT  6469--CALLALT  6470--CALLALT  6471--CALLALT  6478--CALLALT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:255  
      6479--CALLALT  6482--CALLALT  6483--CALLALT
ERROR IN PROCEDURE M_PROCESS_TEMP
      7483**LABEL    7466--CALLALT  7467--CALLALT  7468--CALLALT  7471--CALLALT  7472--CALLALT  7477--CALLALT
      7478--CALLALT
ERROR IN PROCEDURE M_REPLACE_OLD_DECK
      7750**LABEL    7712--CALLALT  7713--CALLALT  7715--CALLALT  7716--CALLALT  7722--CALLALT  7723--CALLALT
      7727--CALLALT  7728--CALLALT  7731--CALLALT  7732--CALLALT  7739--CALLALT  7740--CALLALT  7746--CALLALT
ERROR IN PROCEDURE M_SAVE_CATALOG_ENTRY
      7567**LABEL    7562--CALLALT  7563--CALLALT
ERROR IN PROCEDURE M_SAVE_LOG
      7784**LABEL    7779--CALLALT  7780--CALLALT
ERROR IN PROCEDURE M_SAVE_MASTER_CHANGES
      7517**LABEL    7508--CALLALT  7509--CALLALT  7512--CALLALT  7513--CALLALT
ERROR IN PROCEDURE M_SAVE_MCA_DATA
      7428**LABEL    7418--CALLALT  7420--CALLALT  7423--CALLALT
ERROR IN PROCEDURE M_SAVE_NEW_DECK
      7671**LABEL    7637--CALLALT  7638--CALLALT  7644--CALLALT  7645--CALLALT  7649--CALLALT  7650--CALLALT
      7653--CALLALT  7654--CALLALT  7660--CALLALT  7661--CALLALT  7667--CALLALT
ERROR IN PROCEDURE M_SAVE_OBJECT_DECK
      7602**LABEL    7593--CALLALT  7597--CALLALT
ERROR IN PROCEDURE M_SAVE_SUBCATALOG
      7543**LABEL    7538--CALLALT  7539--CALLALT
ERROR IN PROCEDURE M_SETUP_CATALOG
      6525**LABEL    6519--CALLALT
ERROR IN PROCEDURE M_STORE_CATALOG_ENTRY
      7326**LABEL    7320--CALLALT
ERROR IN PROCEDURE M_STORE_MASTER_CHANGES
      7386**LABEL    7381--CALLALT  7382--CALLALT
ERROR IN PROCEDURE M_STORE_MCA_DATA
      6216**LABEL    6196--CALLALT  6203--CALLALT  6208--CALLALT  6212--CALLALT
ERROR IN PROCEDURE M_STORE_OBJECT_DECK
      7297**LABEL    7266--CALLALT  7268--CALLALT  7270--CALLALT  7272--CALLALT  7273--CALLALT  7281--CALLALT
      7285--CALLALT  7287--CALLALT  7289--CALLALT  7293--CALLALT
ERROR IN PROCEDURE M_STORE_SUBCATALOG
      7356**LABEL    7352--CALLALT
ERROR_RETURN
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:256  
      5937**LABEL    5920--CALLALT  5922--CALLALT  5923--CALLALT  5925--CALLALT  5926--CALLALT  5927--CALLALT
      5928--CALLALT
EXISTED
      5821**DCL      5926<>CALL     5928<>CALL
EXISTED IN PROCEDURE M_SAVE_LOG
      7769**DCL      7767--PROC     7773>>IF
EXISTED IN PROCEDURE M_SAVE_MCA_DATA
      7411**DCL      7409--PROC     7420<>CALL
EXISTED IN PROCEDURE M_STORE_MCA_DATA
      6190**DCL      6188--PROC     6202<<ASSIGN   6203<>CALL     6207<<ASSIGN   6208<>CALL
FIRST
      5822**DCL      5926<>CALL     5928<>CALL
FIRST IN PROCEDURE M_SAVE_MCA_DATA
      7412**DCL      7409--PROC     7420<>CALL
FIRST IN PROCEDURE M_STORE_MCA_DATA
      6191**DCL      6188--PROC     6203<>CALL     6208<>CALL
FIRST_NEW IN PROCEDURE M_PROCESS_TEMP
      7459**DCL      7456--PROC     7470>>DOINDEX
FIRST_NEW_ENTRY IN PROCEDURE M_PROCESS_MCA_INPUT
      6399**DCL      6367--PROC     6414<<ASSIGN   6420<<ASSIGN
HDR$ IN PROCEDURE M_CHECK_ALREADY_MERGED
      6961**DCL      6971--IMP-PTR  7002<<ASSIGN   7003>>CALLBLT  7003>>CALLBLT  7003>>CALLBLT  7003>>CALLBLT
ID.ID
      5568**DCL      7809<<ASSIGN
ID.REVISION
      5569**DCL      5570--REDEF    7811<<ASSIGN
INX IN PROCEDURE M_GET_NEXT_DECK
      7193**DCL      7213<<CALLBLT  7214>>ASSIGN
KEY_DATA IN PROCEDURE M_SET_CATALOG_KEY
      6240**DCL      6238--PROC     6244<<ASSIGN
LAST.DECK#
      5585**DCL      6418<<ASSIGN   6418>>ASSIGN   7199<<ASSIGN   7199>>ASSIGN   7274>>ASSIGN
LAST.EDIT_NAME
      5586**DCL      7203>>DOSELCT  7205<<ASSIGN   7213>>CALLBLT  7214<<ASSIGN
LAST_DIR IN PROCEDURE M_COMPUTE_LAST_DIR
      7150**DCL      7148--PROC     7154<<ASSIGN
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:257  
LAST_DIR IN PROCEDURE M_PROCESS_MCA_INPUT
      6403**DCL      6460<>CALL     6461>>DOINDEX
LAST_DISKETTE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6866**DCL      6864--PROC     6914<<CALLBLT
LAST_DISKETTE IN PROCEDURE M_PROCESS_MCA_INPUT
      6402**DCL      6439<<ASSIGN   6440>>DOWHILE  6448<>CALL
MASTER_DATA.DECK#
      5598**DCL      7378>>ASSIGN   7510>>ASSIGN
MASTER_DATA.ENTRY_COUNT
      5599**DCL      7379>>ASSIGN   7380<<ASSIGN   7380>>ASSIGN   7511>>ASSIGN
MASTER_ENTRY_KEY.DECK#
      5613**DCL      7378<<ASSIGN   7510<<ASSIGN
MASTER_ENTRY_KEY.ENTRY#
      5614**DCL      7379<<ASSIGN   7511<<ASSIGN   7665>>ASSIGN   7743>>ASSIGN
MCA_B
      5625**DCL      6160<<ASSIGN
MCA_B.CONFIG.DATA
      5680**DCL      5681--REDEF
MCA_B.CONFIG.DATA1.NUMTAB
      5683**DCL      6427>>ASSIGN
MCA_B.DCW_LIST.IDCW1
      5627**DCL      6161<<ASSIGN
MCA_B.DCW_LIST.IDCW2
      5631**DCL      6162<<ASSIGN
MCA_B.DIRECTORY.CURRENT
      5664**DCL      6462<<ASSIGN   6463--ASSIGN
MCA_B.DIRECTORY.DATA
      5661**DCL      6462>>ASSIGN
MCA_B.DIRECTORY.SIZE
      5663**DCL      6457<>CALL     7154>>ASSIGN
MCA_B.DISKETTE_HEADER.DATA
      5658**DCL      6815--ASSIGN   6911--ASSIGN   7002--ASSIGN   7093--ASSIGN
MCA_B.FILE.SIZE
      5672**DCL      6470<>CALL
MCA_B.STATUS.MAJOR
      5641**DCL      6650>>DOSELCT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:258  
MCA_B.STATUS.SUB.VALUE
      5644**DCL      6652>>DOSELCT
MSG_CODE IN PROCEDURE M_GET_RESPONSE
      7863**DCL      7861--PROC     7875>>ASSIGN
M_CHECK_ALREADY_MERGED IN PROCEDURE M_STORE_MCA_DATA
      6959**PROC     6450--CALL
M_CHECK_PRODUCT_SET IN PROCEDURE M_STORE_MCA_DATA
      7044**PROC     6453--CALL
M_CHECK_TND_DISKETTE IN PROCEDURE M_STORE_MCA_DATA
      6772**PROC     6443--CALL
M_COMMAND_SETUP
      5996**PROC     5920--CALL
M_COMPUTE_LAST_DIR IN PROCEDURE M_STORE_MCA_DATA
      7148**PROC     6460--CALL
M_COMPUTE_LAST_DISKETTE IN PROCEDURE M_STORE_MCA_DATA
      6864**PROC     6448--CALL
M_GET_CONFIG IN PROCEDURE M_STORE_MCA_DATA
      6542**PROC     6425--CALL
M_GET_CURRENT_DF_VALUES
      6130**PROC     5923--CALL
M_GET_HEADER IN PROCEDURE M_STORE_MCA_DATA
      6581**PROC     6442--CALL
M_GET_NEXT_DECK IN PROCEDURE M_STORE_MCA_DATA
      7189**PROC     7262--CALL
M_GET_RESPONSE
      7861**PROC     6489--CALL     6597--CALL     6702--CALL     6735--CALL
M_HANDLE_ERROR IN PROCEDURE M_GET_HEADER
      6643**PROC     6606--CALL
M_INIT_DUP
      5959**PROC     5919--CALL
M_INIT_MCA_B
      6156**PROC     5924--CALL
M_PRINT_MERGED_MSG IN PROCEDURE M_SAVE_MCA_DATA
      7832**PROC     7476--CALL
M_PROCESS_MCA_INPUT IN PROCEDURE M_STORE_MCA_DATA
      6367**PROC     6203--CALL     6208--CALL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:259  
M_PROCESS_TEMP IN PROCEDURE M_SAVE_MCA_DATA
      7456**PROC     7420--CALL
M_PROMPT_NEXT_DRIVE IN PROCEDURE M_HANDLE_ERROR
      6727**PROC     6660--CALL     6670--CALL
M_PROMPT_SAME_DRIVE IN PROCEDURE M_HANDLE_ERROR
      6696**PROC     6654--CALL
M_PS_ERROR IN PROCEDURE M_CHECK_PRODUCT_SET
      7126**LABEL    7102--GOTO     7109--GOTO     7116--GOTO
M_REPLACE_OLD_DECK IN PROCEDURE M_SAVE_OBJECT_DECK
      7703**PROC     7593--CALL
M_SAVE_CATALOG_ENTRY IN PROCEDURE M_SAVE_MCA_DATA
      7558**PROC     7471--CALL
M_SAVE_LOG IN PROCEDURE M_SAVE_MCA_DATA
      7767**PROC     7478--CALL
M_SAVE_MASTER_CHANGES IN PROCEDURE M_SAVE_MCA_DATA
      7504**PROC     7466--CALL
M_SAVE_MCA_DATA
      7409**PROC     5928--CALL
M_SAVE_NEW_DECK IN PROCEDURE M_SAVE_OBJECT_DECK
      7632**PROC     7597--CALL
M_SAVE_OBJECT_DECK IN PROCEDURE M_SAVE_MCA_DATA
      7587**PROC     7472--CALL
M_SAVE_SUBCATALOG IN PROCEDURE M_SAVE_MCA_DATA
      7533**PROC     7468--CALL
M_SETUP_CATALOG IN PROCEDURE M_STORE_MCA_DATA
      6515**PROC     6413--CALL
M_SETUP_PRINT IN PROCEDURE M_SAVE_MCA_DATA
      7805**PROC     7473--CALL
M_SET_CATALOG_KEY IN PROCEDURE M_STORE_MCA_DATA
      6238**PROC     6199--CALL     6417--CALL
M_STORE_CATALOG_ENTRY IN PROCEDURE M_STORE_MCA_DATA
      7316**PROC     6455--CALL     6459--CALL     6471--CALL
M_STORE_MASTER_CHANGES IN PROCEDURE M_STORE_MCA_DATA
      7374**PROC     6482--CALL
M_STORE_MCA_DATA
      6188**PROC     5926--CALL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:260  
M_STORE_OBJECT_DECK IN PROCEDURE M_STORE_MCA_DATA
      7255**PROC     6454--CALL     6457--CALL     6470--CALL
M_STORE_SUBCATALOG IN PROCEDURE M_STORE_MCA_DATA
      7345**PROC     6478--CALL
OBJECT
      5695**DCL      7279--CALL
OBJECT.BCD
      5696**DCL      5718--REDEF    5741--REDEF
OBJECT.BINARY_COUNT
      5743**DCL      7275<<ASSIGN   7276>>ASSIGN   7641>>ASSIGN   7659>>ASSIGN   7719>>ASSIGN   7738>>ASSIGN
OBJECT.CHECKSUM
      5747**DCL      7279<>CALL
OBJECT.DECK#
      5742**DCL      7274<<ASSIGN   7282>>ASSIGN   7292>>ASSIGN   7640>>ASSIGN   7658>>ASSIGN   7663>>ASSIGN
      7709>>ASSIGN   7710>>ASSIGN   7711>>ASSIGN   7718>>ASSIGN   7737>>ASSIGN   7741>>ASSIGN
OBJECT.DECK_CHECKSUM
      5746**DCL      7278<<ASSIGN
OBJECT.LOAD_SIZE
      5745**DCL      7277<<ASSIGN
OBJECT.NIO_BCD.CLASS
      5723**DCL      7647>>IF       7725>>IF
OBJECT.NIO_BCD.FILE_NAME
      5728**DCL      7642>>DOSELCT  7720>>DOSELCT
OBJECT.NIO_BCD.X_OF_N
      5729**DCL      5734--REDEF
OBJECT.TOTAL_COUNT
      5744**DCL      7276<<ASSIGN   7659>>ASSIGN   7738>>ASSIGN
OBJECT_KEY.DATA
      5760**DCL      7003<<CALLBLT
OBJECT_REFLIST_DATA.NUM_REFS
      5786**DCL      7664<<ASSIGN   7742>>ASSIGN   7745<<ASSIGN
OBJECT_REFLIST_DATA.REFS.CE#
      5789**DCL      7666<<ASSIGN   7744<<ASSIGN
OBJECT_REFLIST_DATA.REFS.ME#
      5788**DCL      7665<<ASSIGN   7743<<ASSIGN
OBJECT_REFLIST_KEY.DECK#
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:261  
      5773**DCL      7663<<ASSIGN   7710<<ASSIGN   7711<<ASSIGN   7741<<ASSIGN
OLD_COUNT IN PROCEDURE M_REPLACE_OLD_DECK
      7705**DCL      7742<<ASSIGN   7743>>ASSIGN   7744>>ASSIGN   7745>>ASSIGN
OUT$BLK.CODE IN PROCEDURE M_COMMAND_SETUP
      6014**DCL      6088>>DOCASE
OUT$BLK.NSUBLKS IN PROCEDURE M_COMMAND_SETUP
      6018**DCL      6086>>DOINDEX
OUT$BLK.SUBLK$ IN PROCEDURE M_COMMAND_SETUP
      6039**DCL      6087>>ASSIGN
OUT$SYM.COUNT IN PROCEDURE M_COMMAND_SETUP
      6075**DCL      6078--IMP-SIZ  6091>>ASSIGN   6092>>ASSIGN   6096>>ASSIGN   6097>>ASSIGN
OUT$SYM.TEXT IN PROCEDURE M_COMMAND_SETUP
      6078**DCL      6091>>ASSIGN   6096>>ASSIGN
OUTBLK# IN PROCEDURE M_COMMAND_SETUP
      5998**DCL      6086<<DOINDEX  6087>>ASSIGN
OUTBLK$ IN PROCEDURE M_COMMAND_SETUP
      5999**DCL      6087<<ASSIGN   6088>>DOCASE   6091>>ASSIGN   6091>>ASSIGN   6092>>ASSIGN   6096>>ASSIGN
      6096>>ASSIGN   6097>>ASSIGN
POSITION IN PROCEDURE M_GET_NEXT_DECK
      7192**DCL      7201<<ASSIGN   7203>>DOSELCT  7205>>ASSIGN   7206>>IF       7209<<ASSIGN   7209>>ASSIGN
      7213>>CALLBLT  7214>>ASSIGN
PRODUCT_SET IN PROCEDURE M_CHECK_PRODUCT_SET
      7048**DCL      7044--PROC
PRODUCT_SET.DWG_NUM IN PROCEDURE M_CHECK_PRODUCT_SET
      7050**DCL      7098>>IF       7101>>ASSIGN
PRODUCT_SET.EQUIP_TYPE IN PROCEDURE M_CHECK_PRODUCT_SET
      7049**DCL      7094>>IF       7115>>ASSIGN
PRODUCT_SET.NUM_TAB IN PROCEDURE M_CHECK_PRODUCT_SET
      7051**DCL      7104>>IF       7108>>ASSIGN
PRODUCT_SET IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6867**DCL      6864--PROC
PRODUCT_SET.DWG_NUM IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6869**DCL      6916<<ASSIGN
PRODUCT_SET.EQUIP_TYPE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6868**DCL      6915<<ASSIGN
PRODUCT_SET.NUM_TAB IN PROCEDURE M_COMPUTE_LAST_DISKETTE
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:262  
      6870**DCL      6917<<ASSIGN
PRODUCT_SET IN PROCEDURE M_PROCESS_MCA_INPUT
      6404**DCL      6448<>CALL     6453<>CALL
PRODUCT_SET.NUM_TAB IN PROCEDURE M_PROCESS_MCA_INPUT
      6407**DCL      6445<<ASSIGN
PTR$ IN PROCEDURE M_CHECK_PRODUCT_SET
      7052**DCL      7063--IMP-PTR  7093<<ASSIGN   7094>>IF       7098>>IF       7104>>IF       7118>>CALLBLT
PTR$ IN PROCEDURE M_CHECK_TND_DISKETTE
      6774**DCL      6785--IMP-PTR  6815<<ASSIGN   6816>>IF       6817>>IF       6819>>IF       6819>>IF
      6823>>ASSIGN   6831>>ASSIGN
PTR$ IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6871**DCL      6881--IMP-PTR  6911<<ASSIGN   6912>>IF       6914>>CALLBLT  6915>>ASSIGN   6916>>ASSIGN
      6917>>ASSIGN
READ_POSSIBLE IN PROCEDURE M_GET_HEADER
      6585**DCL      6591<<ASSIGN   6599>>DOWHILE  6606<>CALL
READ_POSSIBLE IN PROCEDURE M_HANDLE_ERROR
      6645**DCL      6643--PROC     6656<<ASSIGN   6662<<ASSIGN   6666<<ASSIGN   6672<<ASSIGN   6676<<ASSIGN
      6680<<ASSIGN
RESPONSE IN PROCEDURE M_GET_RESPONSE
      7865**DCL      7882>>DOWHILE  7904>>IF
RESPONSE_ IN PROCEDURE M_GET_RESPONSE
      7864**DCL      7865--REDEF    7877<<ASSIGN   7887>>CALLBLT  7893>>DOSELCT
RESPONSE_LGTH IN PROCEDURE M_GET_RESPONSE
      7866**DCL      7878<<ASSIGN   7882>>DOWHILE  7888>>IF       7889>>ASSIGN
SIZE IN PROCEDURE M_STORE_OBJECT_DECK
      7258**DCL      7255--PROC     7275>>ASSIGN   7277>>ASSIGN
SKIP_CONFIG_READ IN PROCEDURE M_PROCESS_MCA_INPUT
      6438**LABEL    6422--GOTO
STRING IN PROCEDURE M_GET_NEXT_DECK
      7194**DCL      7213>>CALLBLT  7214>>ASSIGN
SUBCATALOG_DATA.IFAD_FID
      5801**DCL      7350<<ASSIGN
SUBCATALOG_DATA.IFAD_FN
      5802**DCL      7351<<ASSIGN
SUBCATALOG_KEY.DECK#
      5815**DCL      7349<<ASSIGN   7537<<ASSIGN
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:263  
TOU$B_CHECK_FOR_CATALOG
      5864**DCL-ENT  6200--CALL
TOU$B_GET_CATALOG
      5861**DCL-ENT  6419--CALL
TOU$B_PRINT_DECK_LINE
      5863**DCL-ENT  7474--CALL
TOU$B_SET_OBJECT_KEY
      5862**DCL-ENT  7273--CALL
TOU$B_SHOW_DCBS
      5860**DCL-ENT  5921--CALL
TOU$CHECKSUM
      5842**DCL-ENT  7279--CALL
TOU$CLEAR_IFAD
      5848**DCL-ENT  6197--CALL
TOU$DFU_CLOSE_TEMP
      5889**DCL-ENT  6212--CALL     6216--CALL     7423--CALL     7428--CALL
TOU$DFU_DF_CHECK_FOR_KEY
      5871**DCL-ENT  7012--CALL     7591--CALL
TOU$DFU_DF_DL_DECK
      5872**DCL-ENT  7713--CALL
TOU$DFU_DF_RD_CATALOG_CONTROL
      5866**DCL-ENT  6519--CALL
TOU$DFU_DF_RD_LAST_DECK#
      5868**DCL-ENT  6134--CALL
TOU$DFU_DF_RD_LOG
      5869**DCL-ENT  6135--CALL
TOU$DFU_DF_RD_OBJECT_REFLIST
      5867**DCL-ENT  7712--CALL
TOU$DFU_DF_WR_BCD_CARDS
      5882**DCL-ENT  7661--CALL     7740--CALL
TOU$DFU_DF_WR_CATALOG_ENTRY
      5877**DCL-ENT  7563--CALL
TOU$DFU_DF_WR_DIR
      5881**DCL-ENT  7645--CALL     7723--CALL
TOU$DFU_DF_WR_FILE
      5879**DCL-ENT  7654--CALL     7732--CALL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:264  
TOU$DFU_DF_WR_HDR
      5880**DCL-ENT  7650--CALL     7728--CALL
TOU$DFU_DF_WR_LOG
      5884**DCL-ENT  7780--CALL
TOU$DFU_DF_WR_MASTER_CONTROL
      5874**DCL-ENT  7509--CALL
TOU$DFU_DF_WR_MASTER_ENTRY
      5875**DCL-ENT  7513--CALL
TOU$DFU_DF_WR_OBJECT
      5878**DCL-ENT  7638--CALL     7716--CALL
TOU$DFU_DF_WR_OBJECT_REFLIST
      5883**DCL-ENT  7667--CALL     7746--CALL
TOU$DFU_DF_WR_SUBCATALOG
      5876**DCL-ENT  7539--CALL
TOU$DFU_OPEN_TEMP
      5888**DCL-ENT  6196--CALL     7418--CALL
TOU$DFU_TF_RD_BCD_CARDS
      5899**DCL-ENT  7660--CALL     7739--CALL
TOU$DFU_TF_RD_CATALOG_ENTRY
      5894**DCL-ENT  7562--CALL
TOU$DFU_TF_RD_DIR
      5898**DCL-ENT  7644--CALL     7722--CALL
TOU$DFU_TF_RD_FILE
      5896**DCL-ENT  7653--CALL     7731--CALL
TOU$DFU_TF_RD_HDR
      5897**DCL-ENT  7649--CALL     7727--CALL
TOU$DFU_TF_RD_MASTER_CONTROL
      5891**DCL-ENT  7508--CALL
TOU$DFU_TF_RD_MASTER_ENTRY
      5892**DCL-ENT  7512--CALL
TOU$DFU_TF_RD_OBJECT
      5895**DCL-ENT  7637--CALL     7715--CALL
TOU$DFU_TF_RD_SUBCATALOG
      5893**DCL-ENT  7538--CALL
TOU$DFU_TF_WR_BCD_CARDS
      5910**DCL-ENT  7293--CALL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:265  
TOU$DFU_TF_WR_CATALOG_CONTROL
      5903**DCL-ENT  6479--CALL
TOU$DFU_TF_WR_CATALOG_ENTRY
      5905**DCL-ENT  7320--CALL
TOU$DFU_TF_WR_DIR
      5908**DCL-ENT  7289--CALL
TOU$DFU_TF_WR_FILE
      5907**DCL-ENT  7285--CALL
TOU$DFU_TF_WR_HDR
      5909**DCL-ENT  7287--CALL
TOU$DFU_TF_WR_LAST_DECK#
      5911**DCL-ENT  6483--CALL
TOU$DFU_TF_WR_MASTER_CONTROL
      5901**DCL-ENT  7382--CALL
TOU$DFU_TF_WR_MASTER_ENTRY
      5902**DCL-ENT  7381--CALL
TOU$DFU_TF_WR_OBJECT
      5906**DCL-ENT  7281--CALL
TOU$DFU_TF_WR_SUBCATALOG
      5904**DCL-ENT  7352--CALL
TOU$DU_CLOSE_DF
      5835**DCL-ENT  5929--CALL     5938--CALL
TOU$DU_CLOSE_MCA
      5830**DCL-ENT  5927--CALL     5937--CALL
TOU$DU_MCA_RESET_STATUS
      5831**DCL-ENT  6547--CALL     6551--CALL     6593--CALL
TOU$DU_OPEN_DF
      5834**DCL-ENT  5922--CALL
TOU$DU_OPEN_MCA
      5829**DCL-ENT  5925--CALL
TOU$DU_OPERATOR_TEXT
      5839**DCL-ENT  6433--CALL     6488--CALL     6596--CALL     6701--CALL     6734--CALL     6835--CALL
      6922--CALL     7126--CALL     7876--CALL     7899--CALL
TOU$DU_PRINTER_WRITE
      5838**DCL-ENT  7839--CALL     7844--CALL
TOU$DU_SET_DF_FID
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:266  
      5833**DCL-ENT  6098--CALL     6107--CALL
TOU$DU_SET_MCA
      5828**DCL-ENT  6093--CALL     6104--CALL
TOU$DU_UPDATE_LOG
      5840**DCL-ENT  7779--CALL
TOU$DU_USER_WRITE
      5837**DCL-ENT  5933--CALL     5940--CALL     6491--CALL     7015--CALL     7486--CALL     7843--CALL
TOU$GET_CONFIG
      5850**DCL-ENT  6549--CALL
TOU$GET_DIRECTORY
      5851**DCL-ENT  6456--CALL
TOU$GET_FILE
      5852**DCL-ENT  6469--CALL
TOU$GET_HEADER
      5849**DCL-ENT  6600--CALL
TOU$MAKE_DIR_OBJECT_CARD
      5855**DCL-ENT  7270--CALL
TOU$MAKE_DKEND_CARD
      5854**DCL-ENT  7272--CALL
TOU$MAKE_HDR_OBJECT_CARD
      5856**DCL-ENT  7268--CALL
TOU$MAKE_OBJECT_CARD
      5853**DCL-ENT  7266--CALL
TOU$ND_SAVE_CATALOG_CONTROL
      5843**DCL-ENT  7467--CALL
TOU$ND_SAVE_LAST_DECK#
      5844**DCL-ENT  7477--CALL
TRY_AGAIN IN PROCEDURE M_PROCESS_MCA_INPUT
      6442**LABEL    6489--CALLALT
TYPE IN PROCEDURE M_STORE_OBJECT_DECK
      7257**DCL      7255--PROC     7264>>DOSELCT  7283>>DOSELCT
VALID_RESPONSE IN PROCEDURE M_GET_RESPONSE
      7869**DCL      7873<<ASSIGN   7874>>DOUNTIL  7895<<ASSIGN   7897<<ASSIGN
WORK IN PROCEDURE M_PROCESS_MCA_INPUT
      6370**DCL      6427<<ASSIGN   6428>>CALLBLT
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:267  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:268  
              FULL UREF LISTING

BCD_CARD.BCD.CONTROL
      5273**DCL
BCD_CARD.BCD.DATA
      5275**DCL
BCD_CARD.BCD.LBL
      5276**DCL
BCD_CARD.BCD.SEQ
      5277**DCL
BCD_CARD.BCD.TYPE
      5274**DCL
BCD_CARD.BCD_
      5278**DCL
BCD_CARD.CHECKSUM
      5279**DCL
BCD_CARD_
      5280**DCL
BCD_KEY
      5291**DCL
BCD_KEY.CARD#
      5294**DCL
BCD_KEY.SIZE
      5292**DCL
BINARY_CARD.CHECKSUM
      5312**DCL
BINARY_CARD.DATA_CHAR
      5315**DCL
BINARY_CARD.LABEL_
      5317**DCL
BINARY_CARD.LABEL_.LBL
      5318**DCL
BINARY_CARD.LABEL_.SEQ
      5319**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:269  
BINARY_CARD.RELOCATION
      5313**DCL
BINARY_CARD.WD1.ADDRESS
      5310**DCL
BINARY_CARD.WD1.SIZE
      5309**DCL
BINARY_CARD.WD1.TYPE
      5307**DCL
BINARY_CARD.WRD_CHAR
      5311**DCL
BINARY_CARD_
      5320**DCL
BINARY_CARD_.DATA
      5321**DCL
BINARY_KEY
      5332**DCL
BINARY_KEY.ENTRY#
      5335**DCL
BINARY_KEY.SIZE
      5333**DCL
CATALOG_DATA
      5346**DCL
CATALOG_DATA.RFU
      5349**DCL
CATALOG_ENTRY_KEY
      5360**DCL
CATALOG_ENTRY_KEY.SIZE
      5361**DCL
CATALOG_KEY
      5374**DCL
CATALOG_KEY.DECK#
      5377**DCL
CATALOG_KEY.SIZE
      5375**DCL
CATALOG_SEARCH_KEY
      5388**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:270  
DIRECTORY_ENTRY IN PROCEDURE M_PROCESS_MCA_INPUT
      6380**DCL
DIRECTORY_ENTRY.ATTRIBUTES IN PROCEDURE M_PROCESS_MCA_INPUT
      6392**DCL
DIRECTORY_ENTRY.FILE_SIZE IN PROCEDURE M_PROCESS_MCA_INPUT
      6386**DCL
DIRECTORY_ENTRY.SECTOR_ADDR IN PROCEDURE M_PROCESS_MCA_INPUT
      6384**DCL
DISKETTE_HEADER IN PROCEDURE M_CHECK_ALREADY_MERGED
      6971**DCL
DISKETTE_HEADER.CONFIG_NAME IN PROCEDURE M_CHECK_ALREADY_MERGED
      6983**DCL
DISKETTE_HEADER.CPR IN PROCEDURE M_CHECK_ALREADY_MERGED
      6972**DCL
DISKETTE_HEADER.DATE_CHANGED IN PROCEDURE M_CHECK_ALREADY_MERGED
      6976**DCL
DISKETTE_HEADER.DATE_CREATED IN PROCEDURE M_CHECK_ALREADY_MERGED
      6975**DCL
DISKETTE_HEADER.DIR_ADR IN PROCEDURE M_CHECK_ALREADY_MERGED
      6980**DCL
DISKETTE_HEADER.DIR_SIZE IN PROCEDURE M_CHECK_ALREADY_MERGED
      6982**DCL
DISKETTE_HEADER.DISK_DWG_NUM IN PROCEDURE M_CHECK_ALREADY_MERGED
      6992**DCL
DISKETTE_HEADER.DISK_TYPE IN PROCEDURE M_CHECK_ALREADY_MERGED
      6985**DCL
DISKETTE_HEADER.IPI_NUM.IPI_NUM_VAL IN PROCEDURE M_CHECK_ALREADY_MERGED
      6989**DCL
DISKETTE_HEADER.IPI_NUM_ IN PROCEDURE M_CHECK_ALREADY_MERGED
      6991**DCL
DISKETTE_HEADER.SPACE_ADR IN PROCEDURE M_CHECK_ALREADY_MERGED
      6977**DCL
DISKETTE_HEADER.SPACE_SIZE IN PROCEDURE M_CHECK_ALREADY_MERGED
      6979**DCL
DISKETTE_HEADER.TITLE IN PROCEDURE M_CHECK_ALREADY_MERGED
      6973**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:271  
DISKETTE_HEADER.X_OF_N.N IN PROCEDURE M_CHECK_ALREADY_MERGED
      6995**DCL
DISKETTE_HEADER.X_OF_N.X IN PROCEDURE M_CHECK_ALREADY_MERGED
      6994**DCL
DISKETTE_HEADER IN PROCEDURE M_CHECK_PRODUCT_SET
      7063**DCL
DISKETTE_HEADER.CONFIG_NAME IN PROCEDURE M_CHECK_PRODUCT_SET
      7075**DCL
DISKETTE_HEADER.CPR IN PROCEDURE M_CHECK_PRODUCT_SET
      7064**DCL
DISKETTE_HEADER.DATE_CHANGED IN PROCEDURE M_CHECK_PRODUCT_SET
      7068**DCL
DISKETTE_HEADER.DATE_CREATED IN PROCEDURE M_CHECK_PRODUCT_SET
      7067**DCL
DISKETTE_HEADER.DIR_ADR IN PROCEDURE M_CHECK_PRODUCT_SET
      7072**DCL
DISKETTE_HEADER.DIR_SIZE IN PROCEDURE M_CHECK_PRODUCT_SET
      7074**DCL
DISKETTE_HEADER.DISK_TYPE IN PROCEDURE M_CHECK_PRODUCT_SET
      7077**DCL
DISKETTE_HEADER.IPI_NUM.IPI_NUM_VAL IN PROCEDURE M_CHECK_PRODUCT_SET
      7081**DCL
DISKETTE_HEADER.IPI_NUM_ IN PROCEDURE M_CHECK_PRODUCT_SET
      7083**DCL
DISKETTE_HEADER.SPACE_ADR IN PROCEDURE M_CHECK_PRODUCT_SET
      7069**DCL
DISKETTE_HEADER.SPACE_SIZE IN PROCEDURE M_CHECK_PRODUCT_SET
      7071**DCL
DISKETTE_HEADER.TITLE IN PROCEDURE M_CHECK_PRODUCT_SET
      7065**DCL
DISKETTE_HEADER.UNIQUE_ID IN PROCEDURE M_CHECK_PRODUCT_SET
      7066**DCL
DISKETTE_HEADER.X_OF_N.N IN PROCEDURE M_CHECK_PRODUCT_SET
      7087**DCL
DISKETTE_HEADER.X_OF_N_ IN PROCEDURE M_CHECK_PRODUCT_SET
      7088**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:272  
DISKETTE_HEADER IN PROCEDURE M_CHECK_TND_DISKETTE
      6785**DCL
DISKETTE_HEADER.CONFIG_NAME IN PROCEDURE M_CHECK_TND_DISKETTE
      6797**DCL
DISKETTE_HEADER.CPR IN PROCEDURE M_CHECK_TND_DISKETTE
      6786**DCL
DISKETTE_HEADER.DATE_CHANGED IN PROCEDURE M_CHECK_TND_DISKETTE
      6790**DCL
DISKETTE_HEADER.DATE_CREATED IN PROCEDURE M_CHECK_TND_DISKETTE
      6789**DCL
DISKETTE_HEADER.DIR_ADR IN PROCEDURE M_CHECK_TND_DISKETTE
      6794**DCL
DISKETTE_HEADER.DIR_SIZE IN PROCEDURE M_CHECK_TND_DISKETTE
      6796**DCL
DISKETTE_HEADER.DISK_DWG_NUM IN PROCEDURE M_CHECK_TND_DISKETTE
      6806**DCL
DISKETTE_HEADER.EQUIP_TYPE IN PROCEDURE M_CHECK_TND_DISKETTE
      6801**DCL
DISKETTE_HEADER.IPI_NUM.IPI_NUM_VAL IN PROCEDURE M_CHECK_TND_DISKETTE
      6803**DCL
DISKETTE_HEADER.IPI_NUM_ IN PROCEDURE M_CHECK_TND_DISKETTE
      6805**DCL
DISKETTE_HEADER.SPACE_ADR IN PROCEDURE M_CHECK_TND_DISKETTE
      6791**DCL
DISKETTE_HEADER.SPACE_SIZE IN PROCEDURE M_CHECK_TND_DISKETTE
      6793**DCL
DISKETTE_HEADER.UNIQUE_ID IN PROCEDURE M_CHECK_TND_DISKETTE
      6788**DCL
DISKETTE_HEADER.X_OF_N.N IN PROCEDURE M_CHECK_TND_DISKETTE
      6809**DCL
DISKETTE_HEADER.X_OF_N.X IN PROCEDURE M_CHECK_TND_DISKETTE
      6808**DCL
DISKETTE_HEADER.X_OF_N_ IN PROCEDURE M_CHECK_TND_DISKETTE
      6810**DCL
DISKETTE_HEADER IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6881**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:273  
DISKETTE_HEADER.CONFIG_NAME IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6893**DCL
DISKETTE_HEADER.CPR IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6882**DCL
DISKETTE_HEADER.DATE_CHANGED IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6886**DCL
DISKETTE_HEADER.DATE_CREATED IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6885**DCL
DISKETTE_HEADER.DIR_ADR IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6890**DCL
DISKETTE_HEADER.DIR_SIZE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6892**DCL
DISKETTE_HEADER.DISK_TYPE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6895**DCL
DISKETTE_HEADER.IPI_NUM.IPI_NUM_VAL IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6899**DCL
DISKETTE_HEADER.IPI_NUM_ IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6901**DCL
DISKETTE_HEADER.SPACE_ADR IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6887**DCL
DISKETTE_HEADER.SPACE_SIZE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6889**DCL
DISKETTE_HEADER.TITLE IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6883**DCL
DISKETTE_HEADER.UNIQUE_ID IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6884**DCL
DISKETTE_HEADER.X_OF_N_ IN PROCEDURE M_COMPUTE_LAST_DISKETTE
      6906**DCL
DKEND.BCD.CONTROL
      5402**DCL
DKEND.BCD.DATE
      5407**DCL
DKEND.BCD.LBL
      5409**DCL
DKEND.BCD.MOD_DATE
      5406**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:274  
DKEND.BCD.SEQ
      5410**DCL
DKEND.BCD.TTL_DATE
      5405**DCL
DKEND.BCD.TYPE
      5403**DCL
DKEND.CHECKSUM
      5412**DCL
DKEND_
      5413**DCL
DUP
      5424**DCL
DUP.BATCH_MODE
      5426**DCL
DUP.BCD_V
      5495**DCL
DUP.BINARY_V
      5490**DCL
DUP.BOTTOM_LINE#
      5462**DCL
DUP.BREAK_RETURN
      5546**DCL
DUP.BREAK_TERMINATE
      5542**DCL
DUP.CPU_TYPE
      5555**DCL
DUP.CURRENT_LINE#
      5460**DCL
DUP.CURRENT_PAGE#
      5458**DCL
DUP.DF
      5501**DCL
DUP.DF.FID
      5512**DCL
DUP.DF.FID_LGTH
      5514**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:275  
DUP.DF.NO_EXIST
      5504**DCL
DUP.DS_V
      5435**DCL
DUP.FAULT_ERROR
      5430**DCL
DUP.IFAD
      5469**DCL
DUP.IFAD.DEVICE_INPUT
      5474**DCL
DUP.IFAD.FID_LGTH
      5488**DCL
DUP.IFAD.IMU_NUMBER
      5482**DCL
DUP.IFAD.NUM_VOLUMES
      5480**DCL
DUP.LOG
      5517**DCL
DUP.LOG_V.PTR$
      5527**DCL
DUP.LOG_V_
      5529**DCL
DUP.MSG_V
      5451**DCL
DUP.MSG_V.PTR$
      5454**DCL
DUP.NUM_LINES
      5449**DCL
DUP.NUM_WORDS
      5433**DCL
DUP.PROCESS_COMPLETE
      5428**DCL
DUP.SITE_ID
      5553**DCL
DUP.SITE_NAME
      5548**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:276  
DUP.SITE_NAME.LGTH
      5549**DCL
DUP.SITE_NAME.TEXT
      5551**DCL
DUP.TEMP
      5531**DCL
ID
      5567**DCL
ID.REV
      5570**DCL
ID.REV.LEVEL
      5572**DCL
ID.USAGE
      5573**DCL
LAST
      5584**DCL
MASTER_DATA
      5597**DCL
MASTER_DATA.RFU
      5600**DCL
MASTER_ENTRY_KEY
      5611**DCL
MASTER_ENTRY_KEY.SIZE
      5612**DCL
MCA_B.COMMAND
      5635**DCL
MCA_B.COMMAND.DATA
      5637**DCL
MCA_B.COMMAND.HDR_BLK
      5636**DCL
MCA_B.CONFIG
      5678**DCL
MCA_B.CONFIG.DATA1
      5681**DCL
MCA_B.CONFIG.HDR_BLK
      5679**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:277  
MCA_B.DCW_LIST
      5626**DCL
MCA_B.DCW_LIST.DCW1
      5628**DCL
MCA_B.DCW_LIST.DCW1.ADDRESS
      5629**DCL
MCA_B.DCW_LIST.DCW1.COUNT
      5630**DCL
MCA_B.DCW_LIST.DCW2
      5632**DCL
MCA_B.DCW_LIST.DCW2.ADDRESS
      5633**DCL
MCA_B.DCW_LIST.DCW2.COUNT
      5634**DCL
MCA_B.DIRECTORY
      5659**DCL
MCA_B.DIRECTORY.HDR_BLK
      5660**DCL
MCA_B.DISKETTE_HEADER
      5656**DCL
MCA_B.DISKETTE_HEADER.HDR_BLK
      5657**DCL
MCA_B.DUMMY_BUFFER
      5674**DCL
MCA_B.DUMMY_BUFFER.DATA_WORDS
      5676**DCL
MCA_B.DUMMY_BUFFER.HDR_BLK
      5675**DCL
MCA_B.FILE
      5665**DCL
MCA_B.FILE.BYTES_READ
      5673**DCL
MCA_B.FILE.DATA
      5667**DCL
MCA_B.FILE.DATA.HDR
      5668**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:278  
MCA_B.FILE.DATA.LD_CTL
      5669**DCL
MCA_B.FILE.DATA.SECTORS
      5670**DCL
MCA_B.FILE.HDR_BLK
      5666**DCL
MCA_B.STATUS
      5638**DCL
MCA_B.STATUS.ADAPTER
      5650**DCL
MCA_B.STATUS.IIOC
      5655**DCL
MCA_B.STATUS.INITIATE
      5648**DCL
MCA_B.STATUS.MARKER
      5646**DCL
MCA_B.STATUS.ODD_WORD
      5645**DCL
MCA_B.STATUS.POWER
      5640**DCL
MCA_B.STATUS.RESIDUE
      5654**DCL
MCA_B.STATUS.SUB
      5642**DCL
MCA_B.STATUS.SUB.RDP
      5643**DCL
MCA_B.STATUS.TERMINATE
      5639**DCL
MCA_B.STATUS.TERM_POS
      5653**DCL
MCA_B.STATUS.WAS_R_W
      5652**DCL
OBJECT.BCD.ASSEMBLER
      5713**DCL
OBJECT.BCD.CLASS
      5701**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:279  
OBJECT.BCD.CONTROL
      5697**DCL
OBJECT.BCD.DATE
      5715**DCL
OBJECT.BCD.DONT_APPLY
      5702**DCL
OBJECT.BCD.DONT_APPLY.CP6
      5704**DCL
OBJECT.BCD.DONT_APPLY.DPS8000
      5707**DCL
OBJECT.BCD.DONT_APPLY.DPS90
      5706**DCL
OBJECT.BCD.FILENAME
      5711**DCL
OBJECT.BCD.GECALL
      5714**DCL
OBJECT.BCD.LBL
      5716**DCL
OBJECT.BCD.LIBRARY
      5699**DCL
OBJECT.BCD.LOAD_TYPE
      5700**DCL
OBJECT.BCD.MODEL
      5710**DCL
OBJECT.BCD.SEQ
      5717**DCL
OBJECT.BCD.TYPE
      5698**DCL
OBJECT.BCD_
      5741**DCL
OBJECT.NIO_BCD
      5718**DCL
OBJECT.NIO_BCD.ASSEMBLER
      5735**DCL
OBJECT.NIO_BCD.CONTROL
      5719**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:280  
OBJECT.NIO_BCD.DATA
      5725**DCL
OBJECT.NIO_BCD.EQUIP_TYPE
      5727**DCL
OBJECT.NIO_BCD.LBL
      5739**DCL
OBJECT.NIO_BCD.LIBRARY
      5721**DCL
OBJECT.NIO_BCD.LOAD_TYPE
      5722**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB
      5736**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB
      5737**DCL
OBJECT.NIO_BCD.SEQ
      5740**DCL
OBJECT.NIO_BCD.TYPE
      5720**DCL
OBJECT.NIO_BCD.X_OF_N.N
      5733**DCL
OBJECT.NIO_BCD.X_OF_N.X
      5731**DCL
OBJECT.NIO_BCD.X_OF_N_
      5734**DCL
OBJECT_KEY
      5758**DCL
OBJECT_KEY.SIZE
      5759**DCL
OBJECT_REFLIST_DATA
      5785**DCL
OBJECT_REFLIST_DATA.REFS
      5787**DCL
OBJECT_REFLIST_KEY
      5771**DCL
OBJECT_REFLIST_KEY.ENTRY#
      5774**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:281  
OBJECT_REFLIST_KEY.SIZE
      5772**DCL
OUT$BLK IN PROCEDURE M_COMMAND_SETUP
      6006**DCL
OUT$BLK.CPOS IN PROCEDURE M_COMMAND_SETUP
      6032**DCL
OUT$BLK.NDTYPE IN PROCEDURE M_COMMAND_SETUP
      6009**DCL
OUT$BLK.SCRITCH IN PROCEDURE M_COMMAND_SETUP
      6022**DCL
OUT$BLK.TEMP IN PROCEDURE M_COMMAND_SETUP
      6007**DCL
OUT$SYM IN PROCEDURE M_COMMAND_SETUP
      6052**DCL
OUT$SYM.CODE IN PROCEDURE M_COMMAND_SETUP
      6058**DCL
OUT$SYM.CPOS IN PROCEDURE M_COMMAND_SETUP
      6067**DCL
OUT$SYM.NDTYPE IN PROCEDURE M_COMMAND_SETUP
      6055**DCL
OUT$SYM.NSUBLKS IN PROCEDURE M_COMMAND_SETUP
      6061**DCL
OUT$SYM.SCRITCH IN PROCEDURE M_COMMAND_SETUP
      6064**DCL
OUT$SYM.TEMP IN PROCEDURE M_COMMAND_SETUP
      6053**DCL
OUT$SYM.TEXTC$ IN PROCEDURE M_COMMAND_SETUP
      6070**DCL
PRODUCT_SET.DWG_NUM IN PROCEDURE M_PROCESS_MCA_INPUT
      6406**DCL
PRODUCT_SET.EQUIP_TYPE IN PROCEDURE M_PROCESS_MCA_INPUT
      6405**DCL
SUBCATALOG_DATA
      5800**DCL
SUBCATALOG_KEY
      5813**DCL
PL6.E3A0      #001=TOU$MERGE File=TOU$MERGE.:E05TSI                              WED 07/30/97 06:47 Page:282  
SUBCATALOG_KEY.ENTRY#
      5816**DCL
SUBCATALOG_KEY.SIZE
      5814**DCL
TOU$MERGE
        66**PROC
