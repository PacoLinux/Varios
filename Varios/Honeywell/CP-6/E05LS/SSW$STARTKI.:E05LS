VERSION E05

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:1    
        1        1        /*M* SSW$STARTKI   HANDLE START AND STOP KEYINS AND TIGR START SLAVE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   */
        8        8        /*                                                                    */
        9        9        SSW$CTLCPU: PROC (KMSG) ALTRET;
       10       10        /*                                                                    */
       11       11    1   DCL 1 KMSG ALIGNED,                     /* MESSAGE FROM KEYIN                 */
       12       12    1         2 MSG# UBIN(18) UNAL,             /*KEYIN NUMBER                        */
       13       13    1         2 CADDR BIT(18) UNAL,             /* CONSOLE ADDRESS                    */
       14       14    1         2 PORT UBIN WORD,                 /* PROCESSOR PORT NUMBER              */
       15       15    1         2 * UBIN WORD,
       16       16    1         2 * UBIN WORD,
       17       17    1         2 * UBIN WORD;
       18       18    1   DCL 1 CPUM REDEF KMSG,                  /* USED FOR KEYIN REPLIES             */
       19       19    1         2 * UBIN WORD,
       20       20    1         2 KPARMS,                         /* PARAMETERS FOR OCI$MK_WR           */
       21       21    1           3 PORT UBIN WORD,               /* PROCESSOR PORT NUMBER              */
       22       22    1           3 MSTR UBIN WORD,               /* CPU TYPE (MASTER/SLAVE)            */
       23       23    1           3 USER UBIN WORD,               /* CURRENT USER OF CPU*/
       24       24    1           3 CODE UBIN WORD;               /* MESSAGE CODE                       */
       25       25    1   DCL CPUML (0:3) UBIN BYTE UNAL CONSTANT INIT(LENGTHC(CPUM.KPARMS.PORT),
       26       26    1                                           LENGTHC(CPUM.KPARMS.MSTR),
       27       27    1                                           LENGTHC(CPUM.KPARMS.USER),
       28       28    1                                           LENGTHC(CPUM.KPARMS.CODE));
       29       29        /*                                                                    */
       30       30    1   DCL   CPU# UBIN;                        /* LOGICAL PROCESSOR NUMBER           */
       31       31    1   DCL I UBIN;
       32       32    1   DCL J UBIN;
       33       33    1   DCL 1 SCUSW,
       34       34    1         2 * UBIN(21) UNAL,
       35       35    1         2 MODE UBIN(1) UNAL,
       36       36    1         2 * BIT(50) UNAL;
       37       37    1   DCL B$SCU$ PTR SYMREF;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:2    
       38       38    1   DCL   SSC$MONTIMR ENTRY(3);
       39       39    1   DCL   SSW$STARTSLV ENTRY(1) ALTRET;
       40       40    1   DCL   SSW$STRTCHK ENTRY(1);
       41       41    1   DCL SSS$BLOCK ENTRY;
       42       42    1   DCL   SSS$CACHEBP ENTRY;
       43       43    1   DCL   SSS$CACHE ENTRY;
       44       44    1   DCL   OCI$MK_WR ENTRY(7);
       45       45    1   DCL   SSW$STCHK ENTRY(1);
       46       46    1   DCL SSW$MAKECPU ENTRY(1);
       47       47    1   DCL SSW$LOGSTRT ENTRY(2);
       48       48    1   DCL HFA$STOPCPU ENTRY;
       49       49    1   DCL HFA$STARTCPU ENTRY;
       50       50    1   DCL HFB$ENAPORT ENTRY(1);
       51       51    1   DCL HFB$DISPORT ENTRY(1);
       52       52    1   DCL HFC$RSCR ENTRY(3);
       53       53    1   DCL HFC$STCPU ENTRY(1);
       54       54    1   DCL SC_SLAVE ENTRY CONV(2,0);
       55       55    1   DCL SSW$BYPASSCACHE ENTRY;
       56       56    1   DCL SSW$USECACHE ENTRY;
       57       57        %INCLUDE HF_DATA_R;
       58      100        %INCLUDE SS_SCHED_R;
       59      143        %INCLUDE SS_SCHED_C;
       60      376        %INCLUDE B$USER;
       61      592        %B$USERREFS;
       62      596        %INCLUDE OC_SUBS_C;
       63     1327        /**/
       64     1328        /* CODES FOR CPUM.KPARMS.CODE */
       65     1329        /**/
       66     1330        %SUB SSW_STD#=0/*STD*/;                 /*STARTED*/
       67     1331        %SUB SSW_SPD#=1/*SPD*/;                 /*STOPPED*/
       68     1332        %SUB SSW_HUH#=2/*HUH*/;                 /* DOESNT EXIST                       */
       69     1333        %SUB SSW_GO#=3/*GO*/;                   /*ALREADY STARTED                     */
       70     1334        %SUB SSW_STP#=4/*STP*/;                 /*ALREADY STOPPED                     */
       71     1335        %SUB SSW_NO#=5/*NO*/;                   /*WONT START*/
       72     1336        %SUB SSW_RNG#=6;                        /* RUNNING                            */
       73     1337        %SUB SSW_DIAG#=7;                       /* CPU IN DIAGNOSTIC MODE             */
       74     1338        %SUB SSW_CSM#=9;                        /* CANT STOP MASTER                   */
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:3    
       75     1339        %SUB SSW_REL#=10;                       /* CPU RELEASED FROM SYSTEM           */
       76     1340        /*                                                                    */
       77     1341        %SUB PROG#=1;
       78     1342        %EJECT;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:4    
       79     1343        /**/
       80     1344        /**/
       81     1345    1           CALL SSS$BLOCK;
       82     1346    1           CPUM.KPARMS.USER=0;
       83     1347    1           IF KMSG.MSG# = KEY_CPUS# AND KMSG.PORT = 0 THEN
       84     1348    1              GOTO GOTCPU#;
       85     1349    2           DO CPU# = 0 TO S_NSCPU;         /* SEARCH PORT NUMBER TABLE           */
       86     1350    2              IF KMSG.PORT=S_PORTNR(CPU#) THEN GOTO GOTCPU#;
       87     1351    2              END;
       88     1352    1   HUH:    ;
       89     1353    1           CPUM.KPARMS.CODE=SSW_HUH#;
       90     1354    1           GOTO CACHEDONE;
       91     1355    1   GOTCPU#:;
       92     1356    1           CALL SSS$CACHEBP;               /* BYPASS CACHE                       */
       93     1357    2           DO CASE (KMSG.MSG#);
       94     1358        %EJECT;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:5    
       95     1359    2            CASE (KEY_STARTCPU#);
       96     1360        /*         IF CPU#=0 THEN ALTRETURN;*/
       97     1361    2              IF S_MPSTATE(CPU#) = %SS_PAUSE# OR S_MPSTATE(CPU#) = %SS_RUN# THEN
       98     1362    3              DO;
       99     1363    3                 CPUM.KPARMS.CODE=SSW_GO#;
      100     1364    3                 CPUM.KPARMS.USER=B$USRT$->B$USER.SYSID(S_PCU(CPU#));
      101     1365    3                 END;
      102     1366    2              ELSE
      103     1367    3              DO;
      104     1368        /*   Stop all slaves                                                  */
      105     1369    4                 IF S_MPSTATE(CPU#) = %SS_REL# THEN DO;
      106     1370    4                    CPUM.KPARMS.CODE = SSW_REL#;
      107     1371    4                    CPUM.KPARMS.PORT = S_PORTNR(CPU#);
      108     1372    4                    GOTO MSGXIT;
      109     1373    4                    END;
      110     1374    4                 IF H_RPM_FLG THEN DO;
      111     1375    5                    IF H_DPS8000_SCU_CONF_REG.PORTS(S_PORTNR(CPU#)) = '0'B THEN DO;
      112     1376    5   NOT_VALID:
      113     1377    5                       CPUM.KPARMS.CODE = SSW_REL#;
      114     1378    5                       GOTO CACHEDONE;
      115     1379    5                       END;
      116     1380    4                    END;
      117     1381    3                 CALL HFA$STOPCPU;
      118     1382        /*   If this is first active slave, set LS dscrs to bypass cache.
      119     1383             Count up the number of active slaves and send the connect to
      120     1384             start the slave going.                                           */
      121     1385    3                 IF S_NSCPUA = 0 THEN
      122     1386    3                    CALL SSW$BYPASSCACHE;
      123     1387    3                 S_NSCPUA=S_NSCPUA+1;
      124     1388    3                 CALL HFB$ENAPORT(S_PORTNR(CPU#)); /* ENABLE SCU PORT MASK       */
      125     1389    3                 CALL HFC$STCPU(CPU#);     /* SEND START CONNECT                 */
      126     1390        /*   Start the slaves up again.                                       */
      127     1391    3                 CALL HFA$STARTCPU;
      128     1392        /*   If the slave started, put out a message on the OC and log it.
      129     1393             If it didn't, put out a message and count down the number of
      130     1394             active slaves.  If there arn't any, fix the LS dscrs to use cache */
      131     1395    3                 CALL SSS$CACHEBP;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:6    
      132     1396    3                 IF S_MPSTATE(CPU#) = %SS_RUN# THEN
      133     1397    4                 DO;
      134     1398    4                    CALL SSS$CACHE;
      135     1399    4                    CALL SSW$LOGSTRT(CPU#);
      136     1400    4                    CPUM.KPARMS.CODE=SSW_STD#;
      137     1401    4                    KMSG.CADDR=M_SYS;
      138     1402    4                    END;
      139     1403    3                 ELSE
      140     1404    4                 DO;
      141     1405    4                    CALL HFB$DISPORT(S_PORTNR(CPU#)); /* DISABLE SCU PORT MASK   */
      142     1406    4                    CALL SSS$CACHE;
      143     1407    4                    CPUM.KPARMS.CODE=SSW_NO#;
      144     1408    4                    S_NSCPUA=S_NSCPUA-1;
      145     1409    4                    IF S_NSCPUA = 0 THEN
      146     1410    4                       CALL SSW$USECACHE;
      147     1411    4                    END;
      148     1412    3                 END;
      149     1413    2            CASE (KEY_STOPCPU#);
      150     1414    3              IF CPU#=0 THEN DO;
      151     1415    3                 CPUM.KPARMS.CODE=SSW_CSM#;
      152     1416    3                 GOTO MSGXIT;
      153     1417    3                 END;
      154     1418    3              IF H_RPM_FLG THEN DO;
      155     1419    4                 IF H_DPS8000_SCU_CONF_REG.PORTS(S_PORTNR(CPU#)) = '0'B THEN DO;
      156     1420    4                    CPUM.KPARMS.CODE = SSW_REL#;
      157     1421    4                    GOTO MSGXIT;
      158     1422    4                    END;
      159     1423    3                 END;
      160     1424    2              IF CPU# = S_TDCPU# THEN
      161     1425    3              DO;
      162     1426    3                 CPUM.KPARMS.CODE=SSW_DIAG#;
      163     1427    3                 CPUM.KPARMS.USER=B$USRT$->B$USER.SYSID(S_TDCPUF);
      164     1428    3                 END;
      165     1429    2              ELSE
      166     1430    2                 IF S_MPSTATE(CPU#)=%SS_STOP# OR S_STOP(CPU#)= 1 THEN CPUM.KPARMS.CODE=
              1430                          SSW_STP#;
      167     1431    3                 ELSE DO;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:7    
      168     1432    3                    CALL SSS$CACHE;
      169     1433        /*                                 WAIT 2 QUANTUMS, THEN CHECK        */
      170     1434    3                    CALL SSC$MONTIMR (SL_QUAN/2000,ENTADDR(SSW$STCHK),CPU#);
      171     1435    3                    S_STOP(CPU#)=1;
      172     1436    3                    RETURN;
      173     1437    3                    END;
      174     1438    2            CASE (KEY_CPUS#);
      175     1439    2              IF KMSG.PORT = 0 THEN
      176     1440    3              DO CPU# = 0 TO S_NSCPU;
      177     1441    3                 CALL DICPU;
      178     1442    3                 END;
      179     1443    2              ELSE
      180     1444    2                 CALL DICPU;
      181     1445    2              RETURN;
      182     1446    2            CASE (KEY_MAKECPU#);
      183     1447    2              IF CPU# = 0
      184     1448    3              THEN DO;
      185     1449    3                 CPUM.KPARMS.CODE = SSW_RNG#; /* ALREADY RUNNING AS MASTER       */
      186     1450    3                 GOTO MSGXIT;
      187     1451    3                 END;
      188     1452    2              IF NOT HW_PROG_SCU THEN GOTO HERE;
      189     1453    2              CALL HFC$RSCR(B$SCU$,8,SCUSW); /* READ SCU CONFIGSW                */
      190     1454    2              IF SCUSW.MODE ~= PROG#
      191     1455    3              THEN DO;
      192     1456                                      /* SCU 0 NOT IN PROGRAM MODE. CAN'T SET MASK A  */
      193     1457    3                 CALL OCI$MK_WR(KMSG.CADDR,SCU_MSG#,0,0,0);
      194     1458    3                 RETURN;
      195     1459    3                 END;
      196     1460    2   HERE:      IF (S_TDCPUF ~= 0) AND (S_TDCPU# = 0 OR S_TDCPU# = CPU#)
      197     1461    3              THEN DO;
      198     1462    3                 CPUM.KPARMS.CODE = SSW_DIAG#; /* CPU IN DIAGNOSTIC MODE         */
      199     1463    3                 CPUM.KPARMS.USER = B$USRT$->B$USER.SYSID(S_TDCPUF);
      200     1464    3                 CPU# = S_TDCPU#;
      201     1465    3                 CPUM.KPARMS.PORT = S_PORTNR(S_TDCPU#);
      202     1466    3                 GOTO MSGXIT;
      203     1467    3                 END;
      204     1468    3              IF S_MPSTATE(CPU#) = %SS_REL# THEN DO;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:8    
      205     1469    3                 CPUM.KPARMS.CODE = SSW_REL#;
      206     1470    3                 CPUM.KPARMS.PORT = S_PORTNR(CPU#);
      207     1471    3                 GOTO MSGXIT;
      208     1472    3                 END;
      209     1473    2              H_MAKE_IN_PROGRESS = '1'B;
      210     1474    2              CALL SSS$CACHEBP;
      211     1475    2              IF S_MPSTATE(CPU#) = %SS_STOP#
      212     1476    2              THEN CALL SSW$MAKECPU(CPU#);
      213     1477    3              ELSE DO;
      214     1478    3                 CALL SSS$CACHE;
      215     1479    3                 CALL SSC$MONTIMR(SL_QUAN/2000,ENTADDR(SSW$MAKECPU),CPU#);
      216     1480    3                 S_STOP(CPU#) = 1;
      217     1481    3                 END;
      218     1482    2              CALL SSS$CACHE;
      219     1483    2              RETURN;                      /* DON'T PRINT MESSAGE YET            */
      220     1484    2            CASE (ELSE);
      221     1485    2              CALL SSS$CACHE;
      222     1486    2              ALTRETURN;
      223     1487    2            END;
      224     1488    1   MSGXIT: ;
      225     1489    1           CALL SSS$CACHE;
      226     1490    1   CACHEDONE:;
      227     1491    1           CPUM.KPARMS.MSTR=CPU#;
      228     1492    1           CALL OCI$MK_WR(KMSG.CADDR,CPU_MSG#,4,CPUML,CPUM.KPARMS);
      229     1493    1           RETURN;
      230     1494    1   DICPU:  PROC;
      231     1495    2           CALL SSS$CACHEBP;
      232     1496    3           DO CASE (S_MPSTATE(CPU#));
      233     1497    3            CASE(%SS_STOP#);
      234     1498    3              CPUM.KPARMS.CODE=SSW_SPD#;
      235     1499    3            CASE(%SS_PAUSE#,%SS_RUN#);
      236     1500    3              CPUM.KPARMS.CODE=SSW_RNG#;
      237     1501    3              IF CPU# ~= 0 THEN
      238     1502    3                 CPUM.KPARMS.USER=B$USRT$->B$USER.SYSID(S_PCU(CPU#));
      239     1503    3            CASE(%SS_REL#);
      240     1504    3              CPUM.KPARMS.CODE=SSW_REL#;
      241     1505    3            END;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:9    
      242     1506    2           CPUM.KPARMS.PORT=S_PORTNR(CPU#);
      243     1507    2           CPUM.KPARMS.MSTR=CPU#;
      244     1508    2           CALL SSS$CACHE;
      245     1509    2           CALL OCI$MK_WR(KMSG.CADDR,CPU_MSG#,4,CPUML,CPUM.KPARMS);
      246     1510    2           RETURN;
      247     1511    2   END DICPU;
      248     1512        /**/
      249     1513    1   END SSW$CTLCPU;
      250     1514        /**/
      251     1515        /**/
      252     1516        %EOD;

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:10   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$CTLCPU.

   Procedure SSW$CTLCPU requires 408 words for executable code.
   Procedure SSW$CTLCPU requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:11   

 Object Unit name= SSW$CTLCPU                                 File name= SSW$STARTKI.:E05TOU
 UTS= JUL 30 '97 06:01:23.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  SSW$CTLCPU
    1   Proc  even  none   408    630  SSW$CTLCPU
    2  RoData even  none    11     13  SSW$CTLCPU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  SSW$CTLCPU
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$BLOCK
         yes           Std       0 SSS$CACHEBP
         yes           Std       0 HFA$STOPCPU
         yes           Std       0 SSS$CACHE
         yes           Std       2 SSW$LOGSTRT
         yes           Std       3 SSC$MONTIMR
         yes           Std       1 SSW$STCHK
         yes           Std       7 OCI$MK_WR
         yes           Std       0 SSW$BYPASSCACHE
         yes           Std       1 HFC$STCPU
         yes           Std       3 HFC$RSCR
         yes           Std       1 SSW$MAKECPU
         yes           Std       1 HFB$ENAPORT
         yes           Std       1 HFB$DISPORT
         yes           Std       0 HFA$STARTCPU
         yes           Std       0 SSW$USECACHE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$SCU$                                H_RPM_FLG                             H_MAKE_IN_PROGRESS
     H_DPS8000_SCU_CONF_REG                HW_PROG_SCU                           SL_QUAN
     S_PCU                                 S_PORTNR                              S_MPSTATE
     S_STOP                                S_NSCPU                               S_NSCPUA
     S_TDCPUF                              S_TDCPU#                              B$USRT$
     B_VECTNIL
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:13   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:14   


        1        1        /*M* SSW$STARTKI   HANDLE START AND STOP KEYINS AND TIGR START SLAVE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   */
        8        8        /*                                                                    */
        9        9        SSW$CTLCPU: PROC (KMSG) ALTRET;

      9  1 000000   000000 700200 xent  SSW$CTLCPU   TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

       10       10        /*                                                                    */
       11       11    1   DCL 1 KMSG ALIGNED,                     /* MESSAGE FROM KEYIN                 */
       12       12    1         2 MSG# UBIN(18) UNAL,             /*KEYIN NUMBER                        */
       13       13    1         2 CADDR BIT(18) UNAL,             /* CONSOLE ADDRESS                    */
       14       14    1         2 PORT UBIN WORD,                 /* PROCESSOR PORT NUMBER              */
       15       15    1         2 * UBIN WORD,
       16       16    1         2 * UBIN WORD,
       17       17    1         2 * UBIN WORD;
       18       18    1   DCL 1 CPUM REDEF KMSG,                  /* USED FOR KEYIN REPLIES             */
       19       19    1         2 * UBIN WORD,
       20       20    1         2 KPARMS,                         /* PARAMETERS FOR OCI$MK_WR           */
       21       21    1           3 PORT UBIN WORD,               /* PROCESSOR PORT NUMBER              */
       22       22    1           3 MSTR UBIN WORD,               /* CPU TYPE (MASTER/SLAVE)            */
       23       23    1           3 USER UBIN WORD,               /* CURRENT USER OF CPU*/
       24       24    1           3 CODE UBIN WORD;               /* MESSAGE CODE                       */
       25       25    1   DCL CPUML (0:3) UBIN BYTE UNAL CONSTANT INIT(LENGTHC(CPUM.KPARMS.PORT),
       26       26    1                                           LENGTHC(CPUM.KPARMS.MSTR),
       27       27    1                                           LENGTHC(CPUM.KPARMS.USER),
       28       28    1                                           LENGTHC(CPUM.KPARMS.CODE));
       29       29        /*                                                                    */
       30       30    1   DCL   CPU# UBIN;                        /* LOGICAL PROCESSOR NUMBER           */
       31       31    1   DCL I UBIN;
       32       32    1   DCL J UBIN;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:15   
       33       33    1   DCL 1 SCUSW,
       34       34    1         2 * UBIN(21) UNAL,
       35       35    1         2 MODE UBIN(1) UNAL,
       36       36    1         2 * BIT(50) UNAL;
       37       37    1   DCL B$SCU$ PTR SYMREF;
       38       38    1   DCL   SSC$MONTIMR ENTRY(3);
       39       39    1   DCL   SSW$STARTSLV ENTRY(1) ALTRET;
       40       40    1   DCL   SSW$STRTCHK ENTRY(1);
       41       41    1   DCL SSS$BLOCK ENTRY;
       42       42    1   DCL   SSS$CACHEBP ENTRY;
       43       43    1   DCL   SSS$CACHE ENTRY;
       44       44    1   DCL   OCI$MK_WR ENTRY(7);
       45       45    1   DCL   SSW$STCHK ENTRY(1);
       46       46    1   DCL SSW$MAKECPU ENTRY(1);
       47       47    1   DCL SSW$LOGSTRT ENTRY(2);
       48       48    1   DCL HFA$STOPCPU ENTRY;
       49       49    1   DCL HFA$STARTCPU ENTRY;
       50       50    1   DCL HFB$ENAPORT ENTRY(1);
       51       51    1   DCL HFB$DISPORT ENTRY(1);
       52       52    1   DCL HFC$RSCR ENTRY(3);
       53       53    1   DCL HFC$STCPU ENTRY(1);
       54       54    1   DCL SC_SLAVE ENTRY CONV(2,0);
       55       55    1   DCL SSW$BYPASSCACHE ENTRY;
       56       56    1   DCL SSW$USECACHE ENTRY;
       57       57        %INCLUDE HF_DATA_R;
       58      100        %INCLUDE SS_SCHED_R;
       59      143        %INCLUDE SS_SCHED_C;
       60      376        %INCLUDE B$USER;
       61      592        %B$USERREFS;
       62      596        %INCLUDE OC_SUBS_C;
       63     1327        /**/
       64     1328        /* CODES FOR CPUM.KPARMS.CODE */
       65     1329        /**/
       66     1330        %SUB SSW_STD#=0/*STD*/;                 /*STARTED*/
       67     1331        %SUB SSW_SPD#=1/*SPD*/;                 /*STOPPED*/
       68     1332        %SUB SSW_HUH#=2/*HUH*/;                 /* DOESNT EXIST                       */
       69     1333        %SUB SSW_GO#=3/*GO*/;                   /*ALREADY STARTED                     */
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:16   
       70     1334        %SUB SSW_STP#=4/*STP*/;                 /*ALREADY STOPPED                     */
       71     1335        %SUB SSW_NO#=5/*NO*/;                   /*WONT START*/
       72     1336        %SUB SSW_RNG#=6;                        /* RUNNING                            */
       73     1337        %SUB SSW_DIAG#=7;                       /* CPU IN DIAGNOSTIC MODE             */
       74     1338        %SUB SSW_CSM#=9;                        /* CANT STOP MASTER                   */
       75     1339        %SUB SSW_REL#=10;                       /* CPU RELEASED FROM SYSTEM           */
       76     1340        /*                                                                    */
       77     1341        %SUB PROG#=1;
       78     1342        %EJECT;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:17   
       79     1343        /**/
       80     1344        /**/
       81     1345    1           CALL SSS$BLOCK;

   1345  1 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000003   000000 701000 xent               TSX1    SSS$BLOCK
         1 000004   000000 011000                    NOP     0

       82     1346    1           CPUM.KPARMS.USER=0;

   1346  1 000005   200003 470500                    LDP0    @KMSG,,AUTO
         1 000006   000003 450100                    STZ     3,,PR0

       83     1347    1           IF KMSG.MSG# = KEY_CPUS# AND KMSG.PORT = 0 THEN

   1347  1 000007   000000 220100                    LDX0    0,,PR0
         1 000010   000007 100003                    CMPX0   7,DU
         1 000011   000014 601000 1                  TNZ     s:1349
         1 000012   000001 235100                    LDA     1,,PR0
         1 000013   000034 600000 1                  TZE     GOTCPU#

       84     1348    1              GOTO GOTCPU#;
       85     1349    2           DO CPU# = 0 TO S_NSCPU;         /* SEARCH PORT NUMBER TABLE           */

   1349  1 000014   200004 450100                    STZ     CPU#,,AUTO
         1 000015   000026 710000 1                  TRA     s:1351+3

       86     1350    2              IF KMSG.PORT=S_PORTNR(CPU#) THEN GOTO GOTCPU#;

   1350  1 000016   200003 470500                    LDP0    @KMSG,,AUTO
         1 000017   200004 720100                    LXL0    CPU#,,AUTO
         1 000020   000001 236100                    LDQ     1,,PR0
         1 000021   000000 116010 xsym               CMPQ    S_PORTNR,X0
         1 000022   000034 600000 1                  TZE     GOTCPU#

       87     1351    2              END;

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:18   
   1351  1 000023   200004 235100                    LDA     CPU#,,AUTO
         1 000024   000001 035007                    ADLA    1,DL
         1 000025   200004 755100                    STA     CPU#,,AUTO
         1 000026   000000 236000 xsym               LDQ     S_NSCPU
         1 000027   200004 116100                    CMPQ    CPU#,,AUTO
         1 000030   000016 603000 1                  TRC     s:1350

   1349  1 000031                       HUH          null
       88     1352    1   HUH:    ;
       89     1353    1           CPUM.KPARMS.CODE=SSW_HUH#;

   1353  1 000031   000002 235007                    LDA     2,DL
         1 000032   000004 755100                    STA     4,,PR0

       90     1354    1           GOTO CACHEDONE;

   1354  1 000033   000515 710000 1                  TRA     CACHEDONE

   1353  1 000034                       GOTCPU#      null
       91     1355    1   GOTCPU#:;
       92     1356    1           CALL SSS$CACHEBP;               /* BYPASS CACHE                       */

   1356  1 000034   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000035   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000036   000000 011000                    NOP     0

       93     1357    2           DO CASE (KMSG.MSG#);

   1357  1 000037   200003 470500                    LDP0    @KMSG,,AUTO
         1 000040   000000 236100                    LDQ     0,,PR0
         1 000041   000022 772000                    QRL     18
         1 000042   000005 136007                    SBLQ    5,DL
         1 000043   000004 116007                    CMPQ    4,DL
         1 000044   000046 602006 1                  TNC     s:1357+7,QL
         1 000045   000506 710000 1                  TRA     s:1485
         1 000046   000052 710000 1                  TRA     s:1361
         1 000047   000220 710000 1                  TRA     s:1414
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:19   
         1 000050   000314 710000 1                  TRA     s:1439
         1 000051   000334 710000 1                  TRA     s:1447

       94     1358        %EJECT;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:20   
       95     1359    2            CASE (KEY_STARTCPU#);

       96     1360        /*         IF CPU#=0 THEN ALTRETURN;*/
       97     1361    2              IF S_MPSTATE(CPU#) = %SS_PAUSE# OR S_MPSTATE(CPU#) = %SS_RUN# THEN

   1361  1 000052   200004 720100                    LXL0    CPU#,,AUTO
         1 000053   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000054   000001 115007                    CMPA    1,DL
         1 000055   000060 600000 1                  TZE     s:1363
         1 000056   000002 115007                    CMPA    2,DL
         1 000057   000072 601000 1                  TNZ     s:1369

       98     1362    3              DO;

       99     1363    3                 CPUM.KPARMS.CODE=SSW_GO#;

   1363  1 000060   000003 235007                    LDA     3,DL
         1 000061   000004 755100                    STA     4,,PR0

      100     1364    3                 CPUM.KPARMS.USER=B$USRT$->B$USER.SYSID(S_PCU(CPU#));

   1364  1 000062   200004 720100                    LXL0    CPU#,,AUTO
         1 000063   000000 235010 xsym               LDA     S_PCU,X0
         1 000064   000004 735000                    ALS     4
         1 000065   000000 471400 xsym               LDP1    B$USRT$
         1 000066   100014 236105                    LDQ     12,AL,PR1
         1 000067   777777 376007                    ANQ     -1,DL
         1 000070   000003 756100                    STQ     3,,PR0

      101     1365    3                 END;

   1365  1 000071   000512 710000 1                  TRA     MSGXIT

      102     1366    2              ELSE
      103     1367    3              DO;

      104     1368        /*   Stop all slaves                                                  */
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:21   
      105     1369    4                 IF S_MPSTATE(CPU#) = %SS_REL# THEN DO;

   1369  1 000072   000003 115007                    CMPA    3,DL
         1 000073   000102 601000 1                  TNZ     s:1374

      106     1370    4                    CPUM.KPARMS.CODE = SSW_REL#;

   1370  1 000074   000012 235007                    LDA     10,DL
         1 000075   000004 755100                    STA     4,,PR0

      107     1371    4                    CPUM.KPARMS.PORT = S_PORTNR(CPU#);

   1371  1 000076   200004 720100                    LXL0    CPU#,,AUTO
         1 000077   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000100   000001 755100                    STA     1,,PR0

      108     1372    4                    GOTO MSGXIT;

   1372  1 000101   000512 710000 1                  TRA     MSGXIT

      109     1373    4                    END;
      110     1374    4                 IF H_RPM_FLG THEN DO;

   1374  1 000102   000000 234000 xsym               SZN     H_RPM_FLG
         1 000103   000114 605000 1                  TPL     s:1381

      111     1375    5                    IF H_DPS8000_SCU_CONF_REG.PORTS(S_PORTNR(CPU#)) = '0'B THEN DO;

   1375  1 000104   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000105   000000 066405                    CMPB    filb='0'B
         1 000106   000000 610001 xsym               BDSC    H_DPS8000_SCU_CONF_REG,A by=3,bit=1,n=1
         1 000107   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000110   000114 601000 1                  TNZ     s:1381

      112     1376    5   NOT_VALID:
      113     1377    5                       CPUM.KPARMS.CODE = SSW_REL#;

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:22   
   1377  1 000111   000012 235007       NOT_VALID    LDA     10,DL
         1 000112   000004 755100                    STA     4,,PR0

      114     1378    5                       GOTO CACHEDONE;

   1378  1 000113   000515 710000 1                  TRA     CACHEDONE

      115     1379    5                       END;
      116     1380    4                    END;
      117     1381    3                 CALL HFA$STOPCPU;

   1381  1 000114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000115   000000 701000 xent               TSX1    HFA$STOPCPU
         1 000116   000000 011000                    NOP     0

      118     1382        /*   If this is first active slave, set LS dscrs to bypass cache.
      119     1383             Count up the number of active slaves and send the connect to
      120     1384             start the slave going.                                           */
      121     1385    3                 IF S_NSCPUA = 0 THEN

   1385  1 000117   000000 235000 xsym               LDA     S_NSCPUA
         1 000120   000124 601000 1                  TNZ     s:1387

      122     1386    3                    CALL SSW$BYPASSCACHE;

   1386  1 000121   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000122   000000 701000 xent               TSX1    SSW$BYPASSCACHE
         1 000123   000000 011000                    NOP     0

      123     1387    3                 S_NSCPUA=S_NSCPUA+1;

   1387  1 000124   000000 235000 xsym               LDA     S_NSCPUA
         1 000125   000001 035007                    ADLA    1,DL
         1 000126   000000 755000 xsym               STA     S_NSCPUA

      124     1388    3                 CALL HFB$ENAPORT(S_PORTNR(CPU#)); /* ENABLE SCU PORT MASK       */

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:23   
   1388  1 000127   200004 720100                    LXL0    CPU#,,AUTO
         1 000130   000000 630410 xsym               EPPR0   S_PORTNR,X0
         1 000131   200014 450500                    STP0    SCUSW+5,,AUTO
         1 000132   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000134   000000 701000 xent               TSX1    HFB$ENAPORT
         1 000135   000000 011000                    NOP     0

      125     1389    3                 CALL HFC$STCPU(CPU#);     /* SEND START CONNECT                 */

   1389  1 000136   200004 630500                    EPPR0   CPU#,,AUTO
         1 000137   200014 450500                    STP0    SCUSW+5,,AUTO
         1 000140   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000142   000000 701000 xent               TSX1    HFC$STCPU
         1 000143   000000 011000                    NOP     0

      126     1390        /*   Start the slaves up again.                                       */
      127     1391    3                 CALL HFA$STARTCPU;

   1391  1 000144   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000145   000000 701000 xent               TSX1    HFA$STARTCPU
         1 000146   000000 011000                    NOP     0

      128     1392        /*   If the slave started, put out a message on the OC and log it.
      129     1393             If it didn't, put out a message and count down the number of
      130     1394             active slaves.  If there arn't any, fix the LS dscrs to use cache */
      131     1395    3                 CALL SSS$CACHEBP;

   1395  1 000147   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000150   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000151   000000 011000                    NOP     0

      132     1396    3                 IF S_MPSTATE(CPU#) = %SS_RUN# THEN

   1396  1 000152   200004 720100                    LXL0    CPU#,,AUTO
         1 000153   000000 235010 xsym               LDA     S_MPSTATE,X0
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:24   
         1 000154   000002 115007                    CMPA    2,DL
         1 000155   000174 601000 1                  TNZ     s:1405

      133     1397    4                 DO;

      134     1398    4                    CALL SSS$CACHE;

   1398  1 000156   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000157   000000 701000 xent               TSX1    SSS$CACHE
         1 000160   000000 011000                    NOP     0

      135     1399    4                    CALL SSW$LOGSTRT(CPU#);

   1399  1 000161   200004 630500                    EPPR0   CPU#,,AUTO
         1 000162   200014 450500                    STP0    SCUSW+5,,AUTO
         1 000163   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000165   000000 701000 xent               TSX1    SSW$LOGSTRT
         1 000166   000000 011000                    NOP     0

      136     1400    4                    CPUM.KPARMS.CODE=SSW_STD#;

   1400  1 000167   200003 470500                    LDP0    @KMSG,,AUTO
         1 000170   000004 450100                    STZ     4,,PR0

      137     1401    4                    KMSG.CADDR=M_SYS;

   1401  1 000171   200000 220003                    LDX0    65536,DU
         1 000172   000000 440100                    SXL0    0,,PR0

      138     1402    4                    END;

   1402  1 000173   000512 710000 1                  TRA     MSGXIT

      139     1403    3                 ELSE
      140     1404    4                 DO;

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:25   
      141     1405    4                    CALL HFB$DISPORT(S_PORTNR(CPU#)); /* DISABLE SCU PORT MASK   */

   1405  1 000174   000000 630410 xsym               EPPR0   S_PORTNR,X0
         1 000175   200014 450500                    STP0    SCUSW+5,,AUTO
         1 000176   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000177   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000200   000000 701000 xent               TSX1    HFB$DISPORT
         1 000201   000000 011000                    NOP     0

      142     1406    4                    CALL SSS$CACHE;

   1406  1 000202   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000203   000000 701000 xent               TSX1    SSS$CACHE
         1 000204   000000 011000                    NOP     0

      143     1407    4                    CPUM.KPARMS.CODE=SSW_NO#;

   1407  1 000205   000005 235007                    LDA     5,DL
         1 000206   200003 470500                    LDP0    @KMSG,,AUTO
         1 000207   000004 755100                    STA     4,,PR0

      144     1408    4                    S_NSCPUA=S_NSCPUA-1;

   1408  1 000210   000000 236000 xsym               LDQ     S_NSCPUA
         1 000211   000001 136007                    SBLQ    1,DL
         1 000212   000000 756000 xsym               STQ     S_NSCPUA

      145     1409    4                    IF S_NSCPUA = 0 THEN

   1409  1 000213   000512 601000 1                  TNZ     MSGXIT

      146     1410    4                       CALL SSW$USECACHE;

   1410  1 000214   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000215   000000 701000 xent               TSX1    SSW$USECACHE
         1 000216   000000 011000                    NOP     0

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:26   
      147     1411    4                    END;

      148     1412    3                 END;

   1412  1 000217   000512 710000 1                  TRA     MSGXIT

      149     1413    2            CASE (KEY_STOPCPU#);

      150     1414    3              IF CPU#=0 THEN DO;

   1414  1 000220   200004 235100                    LDA     CPU#,,AUTO
         1 000221   000225 601000 1                  TNZ     s:1418

      151     1415    3                 CPUM.KPARMS.CODE=SSW_CSM#;

   1415  1 000222   000011 235007                    LDA     9,DL
         1 000223   000004 755100                    STA     4,,PR0

      152     1416    3                 GOTO MSGXIT;

   1416  1 000224   000512 710000 1                  TRA     MSGXIT

      153     1417    3                 END;
      154     1418    3              IF H_RPM_FLG THEN DO;

   1418  1 000225   000000 234000 xsym               SZN     H_RPM_FLG
         1 000226   000237 605000 1                  TPL     s:1424

      155     1419    4                 IF H_DPS8000_SCU_CONF_REG.PORTS(S_PORTNR(CPU#)) = '0'B THEN DO;

   1419  1 000227   000000 235005 xsym               LDA     S_PORTNR,AL
         1 000230   000000 066405                    CMPB    filb='0'B
         1 000231   000000 610001 xsym               BDSC    H_DPS8000_SCU_CONF_REG,A by=3,bit=1,n=1
         1 000232   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000233   000237 601000 1                  TNZ     s:1424

      156     1420    4                    CPUM.KPARMS.CODE = SSW_REL#;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:27   

   1420  1 000234   000012 235007                    LDA     10,DL
         1 000235   000004 755100                    STA     4,,PR0

      157     1421    4                    GOTO MSGXIT;

   1421  1 000236   000512 710000 1                  TRA     MSGXIT

      158     1422    4                    END;
      159     1423    3                 END;
      160     1424    2              IF CPU# = S_TDCPU# THEN

   1424  1 000237   200004 236100                    LDQ     CPU#,,AUTO
         1 000240   000000 116000 xsym               CMPQ    S_TDCPU#
         1 000241   000253 601000 1                  TNZ     s:1430

      161     1425    3              DO;

      162     1426    3                 CPUM.KPARMS.CODE=SSW_DIAG#;

   1426  1 000242   000007 235007                    LDA     7,DL
         1 000243   000004 755100                    STA     4,,PR0

      163     1427    3                 CPUM.KPARMS.USER=B$USRT$->B$USER.SYSID(S_TDCPUF);

   1427  1 000244   000000 236000 xsym               LDQ     S_TDCPUF
         1 000245   000004 736000                    QLS     4
         1 000246   000000 471400 xsym               LDP1    B$USRT$
         1 000247   100014 236106                    LDQ     12,QL,PR1
         1 000250   777777 376007                    ANQ     -1,DL
         1 000251   000003 756100                    STQ     3,,PR0

      164     1428    3                 END;

   1428  1 000252   000512 710000 1                  TRA     MSGXIT

      165     1429    2              ELSE
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:28   
      166     1430    2                IF S_MPSTATE(CPU#)=%SS_STOP# OR S_STOP(CPU#)= 1 THEN CPUM.KPARMS.CODE=
              1430                          SSW_STP#;

   1430  1 000253   000000 235006 xsym               LDA     S_MPSTATE,QL
         1 000254   000261 600000 1                  TZE     s:1430+6
         1 000255   200004 720100                    LXL0    CPU#,,AUTO
         1 000256   000000 235010 xsym               LDA     S_STOP,X0
         1 000257   000001 115007                    CMPA    1,DL
         1 000260   000264 601000 1                  TNZ     s:1432

   1430  1 000261   000004 235007                    LDA     4,DL
         1 000262   000004 755100                    STA     4,,PR0
         1 000263   000512 710000 1                  TRA     MSGXIT

      167     1431    3                 ELSE DO;

      168     1432    3                    CALL SSS$CACHE;

   1432  1 000264   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000265   000000 701000 xent               TSX1    SSS$CACHE
         1 000266   000000 011000                    NOP     0

      169     1433        /*                                 WAIT 2 QUANTUMS, THEN CHECK        */
      170     1434    3                    CALL SSC$MONTIMR (SL_QUAN/2000,ENTADDR(SSW$STCHK),CPU#);

   1434  1 000267   000000 236000 xsym               LDQ     SL_QUAN
         1 000270   003720 506007                    DIV     2000,DL
         1 000271   200014 756100                    STQ     SCUSW+5,,AUTO
         1 000272   000000 636000 xent               EAQ     SSW$STCHK
         1 000273   200014 235100                    LDA     SCUSW+5,,AUTO
         1 000274   200015 755100                    STA     SCUSW+6,,AUTO
         1 000275   200016 756100                    STQ     SCUSW+7,,AUTO
         1 000276   200004 630500                    EPPR0   CPU#,,AUTO
         1 000277   200021 450500                    STP0    SCUSW+10,,AUTO
         1 000300   200016 631500                    EPPR1   SCUSW+7,,AUTO
         1 000301   200020 451500                    STP1    SCUSW+9,,AUTO
         1 000302   200015 633500                    EPPR3   SCUSW+6,,AUTO
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:29   
         1 000303   200017 453500                    STP3    SCUSW+8,,AUTO
         1 000304   200017 630500                    EPPR0   SCUSW+8,,AUTO
         1 000305   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000306   000000 701000 xent               TSX1    SSC$MONTIMR
         1 000307   000000 011000                    NOP     0

      171     1435    3                    S_STOP(CPU#)=1;

   1435  1 000310   000001 235007                    LDA     1,DL
         1 000311   200004 720100                    LXL0    CPU#,,AUTO
         1 000312   000000 755010 xsym               STA     S_STOP,X0

      172     1436    3                    RETURN;

   1436  1 000313   000000 702200 xent               TSX2  ! X66_ARET

      173     1437    3                    END;
      174     1438    2            CASE (KEY_CPUS#);

      175     1439    2              IF KMSG.PORT = 0 THEN

   1439  1 000314   000001 235100                    LDA     1,,PR0
         1 000315   000331 601000 1                  TNZ     s:1444

      176     1440    3              DO CPU# = 0 TO S_NSCPU;

   1440  1 000316   200004 450100                    STZ     CPU#,,AUTO
         1 000317   000325 710000 1                  TRA     s:1442+3

      177     1441    3                 CALL DICPU;

   1441  1 000320   000537 701000 1                  TSX1    DICPU
         1 000321   000000 011000                    NOP     0

      178     1442    3                 END;

   1442  1 000322   200004 235100                    LDA     CPU#,,AUTO
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:30   
         1 000323   000001 035007                    ADLA    1,DL
         1 000324   200004 755100                    STA     CPU#,,AUTO
         1 000325   000000 236000 xsym               LDQ     S_NSCPU
         1 000326   200004 116100                    CMPQ    CPU#,,AUTO
         1 000327   000320 603000 1                  TRC     s:1441
         1 000330   000333 710000 1                  TRA     s:1445

      179     1443    2              ELSE
      180     1444    2                 CALL DICPU;

   1444  1 000331   000537 701000 1                  TSX1    DICPU
         1 000332   000000 011000                    NOP     0

      181     1445    2              RETURN;

   1445  1 000333   000000 702200 xent               TSX2  ! X66_ARET

      182     1446    2            CASE (KEY_MAKECPU#);

      183     1447    2              IF CPU# = 0

   1447  1 000334   200004 235100                    LDA     CPU#,,AUTO
         1 000335   000341 601000 1                  TNZ     s:1452

      184     1448    3              THEN DO;

      185     1449    3                 CPUM.KPARMS.CODE = SSW_RNG#; /* ALREADY RUNNING AS MASTER       */

   1449  1 000336   000006 235007                    LDA     6,DL
         1 000337   000004 755100                    STA     4,,PR0

      186     1450    3                 GOTO MSGXIT;

   1450  1 000340   000512 710000 1                  TRA     MSGXIT

      187     1451    3                 END;
      188     1452    2              IF NOT HW_PROG_SCU THEN GOTO HERE;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:31   

   1452  1 000341   000000 234000 xsym               SZN     HW_PROG_SCU
         1 000342   000375 605000 1                  TPL     HERE

      189     1453    2              CALL HFC$RSCR(B$SCU$,8,SCUSW); /* READ SCU CONFIGSW                */

   1453  1 000343   200007 631500                    EPPR1   SCUSW,,AUTO
         1 000344   200016 451500                    STP1    SCUSW+7,,AUTO
         1 000345   000000 237000 2                  LDAQ    0
         1 000346   200014 757100                    STAQ    SCUSW+5,,AUTO
         1 000347   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000350   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000351   000000 701000 xent               TSX1    HFC$RSCR
         1 000352   000000 011000                    NOP     0

      190     1454    2              IF SCUSW.MODE ~= PROG#

   1454  1 000353   200007 236100                    LDQ     SCUSW,,AUTO
         1 000354   040000 376007                    ANQ     16384,DL
         1 000355   040000 116007                    CMPQ    16384,DL
         1 000356   000375 600000 1                  TZE     HERE

      191     1455    3              THEN DO;

      192     1456                                      /* SCU 0 NOT IN PROGRAM MODE. CAN'T SET MASK A  */
      193     1457    3                 CALL OCI$MK_WR(KMSG.CADDR,SCU_MSG#,0,0,0);

   1457  1 000357   000003 236000 2                  LDQ     3
         1 000360   200020 756100                    STQ     SCUSW+9,,AUTO
         1 000361   000004 237000 2                  LDAQ    4
         1 000362   200016 757100                    STAQ    SCUSW+7,,AUTO
         1 000363   000006 236000 2                  LDQ     6
         1 000364   200015 756100                    STQ     SCUSW+6,,AUTO
         1 000365   200003 236100                    LDQ     @KMSG,,AUTO
         1 000366   400000 036007                    ADLQ    -131072,DL
         1 000367   200014 756100                    STQ     SCUSW+5,,AUTO
         1 000370   200014 630500                    EPPR0   SCUSW+5,,AUTO
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:32   
         1 000371   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000372   000000 701000 xent               TSX1    OCI$MK_WR
         1 000373   000000 011000                    NOP     0

      194     1458    3                 RETURN;

   1458  1 000374   000000 702200 xent               TSX2  ! X66_ARET

      195     1459    3                 END;
      196     1460    2   HERE:      IF (S_TDCPUF ~= 0) AND (S_TDCPU# = 0 OR S_TDCPU# = CPU#)

   1460  1 000375   000000 235000 xsym  HERE         LDA     S_TDCPUF
         1 000376   000421 600000 1                  TZE     s:1468
         1 000377   000000 236000 xsym               LDQ     S_TDCPU#
         1 000400   000403 600000 1                  TZE     s:1462
         1 000401   200004 116100                    CMPQ    CPU#,,AUTO
         1 000402   000421 601000 1                  TNZ     s:1468

      197     1461    3              THEN DO;

      198     1462    3                 CPUM.KPARMS.CODE = SSW_DIAG#; /* CPU IN DIAGNOSTIC MODE         */

   1462  1 000403   000007 235007                    LDA     7,DL
         1 000404   200003 470500                    LDP0    @KMSG,,AUTO
         1 000405   000004 755100                    STA     4,,PR0

      199     1463    3                 CPUM.KPARMS.USER = B$USRT$->B$USER.SYSID(S_TDCPUF);

   1463  1 000406   000000 235000 xsym               LDA     S_TDCPUF
         1 000407   000004 735000                    ALS     4
         1 000410   000000 471400 xsym               LDP1    B$USRT$
         1 000411   100014 236105                    LDQ     12,AL,PR1
         1 000412   777777 376007                    ANQ     -1,DL
         1 000413   000003 756100                    STQ     3,,PR0

      200     1464    3                 CPU# = S_TDCPU#;

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:33   
   1464  1 000414   000000 235000 xsym               LDA     S_TDCPU#
         1 000415   200004 755100                    STA     CPU#,,AUTO

      201     1465    3                 CPUM.KPARMS.PORT = S_PORTNR(S_TDCPU#);

   1465  1 000416   000000 235005 xsym               LDA     S_PORTNR,AL
         1 000417   000001 755100                    STA     1,,PR0

      202     1466    3                 GOTO MSGXIT;

   1466  1 000420   000512 710000 1                  TRA     MSGXIT

      203     1467    3                 END;
      204     1468    3              IF S_MPSTATE(CPU#) = %SS_REL# THEN DO;

   1468  1 000421   200004 720100                    LXL0    CPU#,,AUTO
         1 000422   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000423   000003 115007                    CMPA    3,DL
         1 000424   000434 601000 1                  TNZ     s:1473

      205     1469    3                 CPUM.KPARMS.CODE = SSW_REL#;

   1469  1 000425   000012 236007                    LDQ     10,DL
         1 000426   200003 470500                    LDP0    @KMSG,,AUTO
         1 000427   000004 756100                    STQ     4,,PR0

      206     1470    3                 CPUM.KPARMS.PORT = S_PORTNR(CPU#);

   1470  1 000430   200004 720100                    LXL0    CPU#,,AUTO
         1 000431   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000432   000001 755100                    STA     1,,PR0

      207     1471    3                 GOTO MSGXIT;

   1471  1 000433   000512 710000 1                  TRA     MSGXIT

      208     1472    3                 END;
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:34   
      209     1473    2              H_MAKE_IN_PROGRESS = '1'B;

   1473  1 000434   400000 236003                    LDQ     -131072,DU
         1 000435   000000 756000 xsym               STQ     H_MAKE_IN_PROGRESS

      210     1474    2              CALL SSS$CACHEBP;

   1474  1 000436   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000437   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000440   000000 011000                    NOP     0

      211     1475    2              IF S_MPSTATE(CPU#) = %SS_STOP#

   1475  1 000441   200004 720100                    LXL0    CPU#,,AUTO
         1 000442   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000443   000453 601000 1                  TNZ     s:1478

      212     1476    2              THEN CALL SSW$MAKECPU(CPU#);

   1476  1 000444   200004 630500                    EPPR0   CPU#,,AUTO
         1 000445   200014 450500                    STP0    SCUSW+5,,AUTO
         1 000446   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000447   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000450   000000 701000 xent               TSX1    SSW$MAKECPU
         1 000451   000000 011000                    NOP     0
         1 000452   000502 710000 1                  TRA     s:1482

      213     1477    3              ELSE DO;

      214     1478    3                 CALL SSS$CACHE;

   1478  1 000453   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000454   000000 701000 xent               TSX1    SSS$CACHE
         1 000455   000000 011000                    NOP     0

      215     1479    3                 CALL SSC$MONTIMR(SL_QUAN/2000,ENTADDR(SSW$MAKECPU),CPU#);

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:35   
   1479  1 000456   000000 236000 xsym               LDQ     SL_QUAN
         1 000457   003720 506007                    DIV     2000,DL
         1 000460   200014 756100                    STQ     SCUSW+5,,AUTO
         1 000461   000000 636000 xent               EAQ     SSW$MAKECPU
         1 000462   200014 235100                    LDA     SCUSW+5,,AUTO
         1 000463   200015 755100                    STA     SCUSW+6,,AUTO
         1 000464   200016 756100                    STQ     SCUSW+7,,AUTO
         1 000465   200004 630500                    EPPR0   CPU#,,AUTO
         1 000466   200021 450500                    STP0    SCUSW+10,,AUTO
         1 000467   200016 631500                    EPPR1   SCUSW+7,,AUTO
         1 000470   200020 451500                    STP1    SCUSW+9,,AUTO
         1 000471   200015 633500                    EPPR3   SCUSW+6,,AUTO
         1 000472   200017 453500                    STP3    SCUSW+8,,AUTO
         1 000473   200017 630500                    EPPR0   SCUSW+8,,AUTO
         1 000474   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000475   000000 701000 xent               TSX1    SSC$MONTIMR
         1 000476   000000 011000                    NOP     0

      216     1480    3                 S_STOP(CPU#) = 1;

   1480  1 000477   000001 235007                    LDA     1,DL
         1 000500   200004 720100                    LXL0    CPU#,,AUTO
         1 000501   000000 755010 xsym               STA     S_STOP,X0

      217     1481    3                 END;

      218     1482    2              CALL SSS$CACHE;

   1482  1 000502   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000503   000000 701000 xent               TSX1    SSS$CACHE
         1 000504   000000 011000                    NOP     0

      219     1483    2              RETURN;                      /* DON'T PRINT MESSAGE YET            */

   1483  1 000505   000000 702200 xent               TSX2  ! X66_ARET

      220     1484    2            CASE (ELSE);
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:36   

      221     1485    2              CALL SSS$CACHE;

   1485  1 000506   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000507   000000 701000 xent               TSX1    SSS$CACHE
         1 000510   000000 011000                    NOP     0

      222     1486    2              ALTRETURN;

   1486  1 000511   000000 702200 xent               TSX2  ! X66_AALT

      223     1487    2            END;

   1476  1 000512                       MSGXIT       null
      224     1488    1   MSGXIT: ;
      225     1489    1           CALL SSS$CACHE;

   1489  1 000512   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000513   000000 701000 xent               TSX1    SSS$CACHE
         1 000514   000000 011000                    NOP     0

   1489  1 000515                       CACHEDONE    null
      226     1490    1   CACHEDONE:;
      227     1491    1           CPUM.KPARMS.MSTR=CPU#;

   1491  1 000515   200003 470500                    LDP0    @KMSG,,AUTO
         1 000516   200004 235100                    LDA     CPU#,,AUTO
         1 000517   000002 755100                    STA     2,,PR0

      228     1492    1           CALL OCI$MK_WR(KMSG.CADDR,CPU_MSG#,4,CPUML,CPUM.KPARMS);

   1492  1 000520   200003 236100                    LDQ     @KMSG,,AUTO
         1 000521   000001 036003                    ADLQ    1,DU
         1 000522   200020 756100                    STQ     SCUSW+9,,AUTO
         1 000523   000010 237000 2                  LDAQ    8
         1 000524   200016 757100                    STAQ    SCUSW+7,,AUTO
         1 000525   000012 236000 2                  LDQ     10
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:37   
         1 000526   200015 756100                    STQ     SCUSW+6,,AUTO
         1 000527   200003 236100                    LDQ     @KMSG,,AUTO
         1 000530   400000 036007                    ADLQ    -131072,DL
         1 000531   200014 756100                    STQ     SCUSW+5,,AUTO
         1 000532   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000533   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000534   000000 701000 xent               TSX1    OCI$MK_WR
         1 000535   000000 011000                    NOP     0

      229     1493    1           RETURN;

   1493  1 000536   000000 702200 xent               TSX2  ! X66_ARET

      230     1494    1   DICPU:  PROC;

   1494  1 000537   200012 741300       DICPU        STX1  ! SCUSW+3,,AUTO

      231     1495    2           CALL SSS$CACHEBP;

   1495  1 000540   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000541   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000542   000000 011000                    NOP     0

      232     1496    3           DO CASE (S_MPSTATE(CPU#));

   1496  1 000543   200004 720100                    LXL0    CPU#,,AUTO
         1 000544   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000545   000004 115007                    CMPA    4,DL
         1 000546   000550 602005 1                  TNC     s:1496+5,AL
         1 000547   000577 710000 1                  TRA     s:1506
         1 000550   000554 710000 1                  TRA     s:1498
         1 000551   000560 710000 1                  TRA     s:1500
         1 000552   000560 710000 1                  TRA     s:1500
         1 000553   000574 710000 1                  TRA     s:1504

      233     1497    3            CASE(%SS_STOP#);

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:38   
      234     1498    3              CPUM.KPARMS.CODE=SSW_SPD#;

   1498  1 000554   000001 236007                    LDQ     1,DL
         1 000555   200003 470500                    LDP0    @KMSG,,AUTO
         1 000556   000004 756100                    STQ     4,,PR0
         1 000557   000577 710000 1                  TRA     s:1506

      235     1499    3            CASE(%SS_PAUSE#,%SS_RUN#);

      236     1500    3              CPUM.KPARMS.CODE=SSW_RNG#;

   1500  1 000560   000006 236007                    LDQ     6,DL
         1 000561   200003 470500                    LDP0    @KMSG,,AUTO
         1 000562   000004 756100                    STQ     4,,PR0

      237     1501    3              IF CPU# ~= 0 THEN

   1501  1 000563   200004 235100                    LDA     CPU#,,AUTO
         1 000564   000577 600000 1                  TZE     s:1506

      238     1502    3                 CPUM.KPARMS.USER=B$USRT$->B$USER.SYSID(S_PCU(CPU#));

   1502  1 000565   000000 235005 xsym               LDA     S_PCU,AL
         1 000566   000004 735000                    ALS     4
         1 000567   000000 471400 xsym               LDP1    B$USRT$
         1 000570   100014 236105                    LDQ     12,AL,PR1
         1 000571   777777 376007                    ANQ     -1,DL
         1 000572   000003 756100                    STQ     3,,PR0
         1 000573   000577 710000 1                  TRA     s:1506

      239     1503    3            CASE(%SS_REL#);

      240     1504    3              CPUM.KPARMS.CODE=SSW_REL#;

   1504  1 000574   000012 236007                    LDQ     10,DL
         1 000575   200003 470500                    LDP0    @KMSG,,AUTO
         1 000576   000004 756100                    STQ     4,,PR0
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:39   

      241     1505    3            END;

      242     1506    2           CPUM.KPARMS.PORT=S_PORTNR(CPU#);

   1506  1 000577   200004 720100                    LXL0    CPU#,,AUTO
         1 000600   200003 470500                    LDP0    @KMSG,,AUTO
         1 000601   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000602   000001 755100                    STA     1,,PR0

      243     1507    2           CPUM.KPARMS.MSTR=CPU#;

   1507  1 000603   200004 236100                    LDQ     CPU#,,AUTO
         1 000604   000002 756100                    STQ     2,,PR0

      244     1508    2           CALL SSS$CACHE;

   1508  1 000605   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000606   000000 701000 xent               TSX1    SSS$CACHE
         1 000607   000000 011000                    NOP     0

      245     1509    2           CALL OCI$MK_WR(KMSG.CADDR,CPU_MSG#,4,CPUML,CPUM.KPARMS);

   1509  1 000610   200003 236100                    LDQ     @KMSG,,AUTO
         1 000611   000001 036003                    ADLQ    1,DU
         1 000612   200020 756100                    STQ     SCUSW+9,,AUTO
         1 000613   000010 237000 2                  LDAQ    8
         1 000614   200016 757100                    STAQ    SCUSW+7,,AUTO
         1 000615   000012 236000 2                  LDQ     10
         1 000616   200015 756100                    STQ     SCUSW+6,,AUTO
         1 000617   200003 236100                    LDQ     @KMSG,,AUTO
         1 000620   400000 036007                    ADLQ    -131072,DL
         1 000621   200014 756100                    STQ     SCUSW+5,,AUTO
         1 000622   200014 630500                    EPPR0   SCUSW+5,,AUTO
         1 000623   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000624   000000 701000 xent               TSX1    OCI$MK_WR
         1 000625   000000 011000                    NOP     0
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:40   

      246     1510    2           RETURN;

   1510  1 000626   200012 221300                    LDX1  ! SCUSW+3,,AUTO
         1 000627   000001 702211                    TSX2  ! 1,X1

CPUML
 Sect OctLoc
   0     000   004004 004004                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000012 006000   000000 000110   000002 006000    ...........H....
   2     004   000002 006000   000002 006000   000002 006000   000000 000106    ...............F
   2     010   000006 006000   000000 006000   000007 006000                    ............
      247     1511    2   END DICPU;
      248     1512        /**/
      249     1513    1   END SSW$CTLCPU;
      250     1514        /**/
      251     1515        /**/
      252     1516        %EOD;

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:41   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$CTLCPU.
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:42   

 **** Variables and constants ****

  ****  Section 000 RoData SSW$CTLCPU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(9)     r     1 CPUML(0:3)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @KMSG                      4-0-0/w UBIN        r     1 CPU#
    *0-0-0/w STRC(180)   r     1 CPUM                      *0-0-0/w STRC(180)   r     1 KMSG
     7-0-0/b STRC(72)    r     1 SCUSW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$SCU$                     0-0-0/w PTR         r     1 B$USRT$
     0-0-0/w BIT         r     1 HW_PROG_SCU
     0-0-0/d STRC(72)    r     1 H_DPS8000_SCU_CONF_REG
     0-0-0/b BIT         r     1 H_MAKE_IN_PROGRESS         0-0-0/w BIT         r     1 H_RPM_FLG
     0-0-0/w SBIN        r     1 SL_QUAN
     0-0-0/w SBIN        r     1 S_MPSTATE(0:7)
     0-0-0/w UBIN        r     1 S_NSCPU                    0-0-0/w UBIN        r     1 S_NSCPUA
     0-0-0/w SBIN        r     1 S_PCU(0:7)
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)
     0-0-0/w SBIN        r     1 S_STOP(0:7)                0-0-0/w UBIN        r     1 S_TDCPU#
     0-0-0/w SBIN        r     1 S_TDCPUF

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:43   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(576)   r     1 B$USER(0:0)


   Procedure SSW$CTLCPU requires 408 words for executable code.
   Procedure SSW$CTLCPU requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:44   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:45   
          MINI XREF LISTING

B$DO.ECCINFO
       527**DCL       528--REDEF
B$SCU$
        37**DCL      1453<>CALL
B$U.MISC
       506**DCL       507--REDEF
B$USER.MISC
       582**DCL       583--REDEF
B$USER.SYSID
       577**DCL      1364>>ASSIGN   1427>>ASSIGN   1463>>ASSIGN   1502>>ASSIGN
B$USRT$
       594**DCL      1364>>ASSIGN   1427>>ASSIGN   1463>>ASSIGN   1502>>ASSIGN
CACHEDONE
      1489**LABEL    1354--GOTO     1378--GOTO
CPU#
        30**DCL      1349<<DOINDEX  1350>>IF       1361>>IF       1361>>IF       1364>>ASSIGN   1369>>IF
      1371>>ASSIGN   1375>>IF       1388>>CALL     1389<>CALL     1396>>IF       1399<>CALL     1405>>CALL
      1414>>IF       1419>>IF       1424>>IF       1430>>IF       1430>>IF       1434<>CALL     1435>>ASSIGN
      1440<<DOINDEX  1447>>IF       1460>>IF       1464<<ASSIGN   1468>>IF       1470>>ASSIGN   1475>>IF
      1476<>CALL     1479<>CALL     1480>>ASSIGN   1491>>ASSIGN   1496>>DOCASE   1501>>IF       1502>>ASSIGN
      1506>>ASSIGN   1507>>ASSIGN
CPUM.KPARMS
        20**DCL      1492<>CALL     1509<>CALL
CPUM.KPARMS.CODE
        24**DCL        28--DCLINIT  1353<<ASSIGN   1363<<ASSIGN   1370<<ASSIGN   1377<<ASSIGN   1400<<ASSIGN
      1407<<ASSIGN   1415<<ASSIGN   1420<<ASSIGN   1426<<ASSIGN   1430<<ASSIGN   1449<<ASSIGN   1462<<ASSIGN
      1469<<ASSIGN   1498<<ASSIGN   1500<<ASSIGN   1504<<ASSIGN
CPUM.KPARMS.MSTR
        22**DCL        26--DCLINIT  1491<<ASSIGN   1507<<ASSIGN
CPUM.KPARMS.PORT
        21**DCL        25--DCLINIT  1371<<ASSIGN   1465<<ASSIGN   1470<<ASSIGN   1506<<ASSIGN
CPUM.KPARMS.USER
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:46   
        23**DCL        27--DCLINIT  1346<<ASSIGN   1364<<ASSIGN   1427<<ASSIGN   1463<<ASSIGN   1502<<ASSIGN
CPUML
        25**DCL      1492<>CALL     1509<>CALL
DICPU
      1494**PROC     1441--CALL     1444--CALL
GOTCPU#
      1353**LABEL    1348--GOTO     1350--GOTO
HERE
      1460**LABEL    1452--GOTO
HFA$STARTCPU
        49**DCL-ENT  1391--CALL
HFA$STOPCPU
        48**DCL-ENT  1381--CALL
HFB$DISPORT
        51**DCL-ENT  1405--CALL
HFB$ENAPORT
        50**DCL-ENT  1388--CALL
HFC$RSCR
        52**DCL-ENT  1453--CALL
HFC$STCPU
        53**DCL-ENT  1389--CALL
HW_PROG_SCU
        97**DCL      1452>>IF
H_DPS8000_SCU_CONF_REG.PORTS
        88**DCL      1375>>IF       1419>>IF
H_MAKE_IN_PROGRESS
        78**DCL      1473<<ASSIGN
H_RPM_FLG
        69**DCL      1374>>IF       1418>>IF
KMSG
        11**DCL         9--PROC       18--REDEF
KMSG.CADDR
        13**DCL      1401<<ASSIGN   1457<>CALL     1492<>CALL     1509<>CALL
KMSG.MSG#
        12**DCL      1347>>IF       1357>>DOCASE
KMSG.PORT
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:47   
        14**DCL      1347>>IF       1350>>IF       1439>>IF
MSGXIT
      1476**LABEL    1372--GOTO     1416--GOTO     1421--GOTO     1450--GOTO     1466--GOTO     1471--GOTO
OCI$MK_WR
        44**DCL-ENT  1457--CALL     1492--CALL     1509--CALL
SCUSW
        33**DCL      1453<>CALL
SCUSW.MODE
        35**DCL      1454>>IF
SL_QUAN
       116**DCL      1434>>CALL     1479>>CALL
SSC$MONTIMR
        38**DCL-ENT  1434--CALL     1479--CALL
SSS$BLOCK
        41**DCL-ENT  1345--CALL
SSS$CACHE
        43**DCL-ENT  1398--CALL     1406--CALL     1432--CALL     1478--CALL     1482--CALL     1485--CALL
      1489--CALL     1508--CALL
SSS$CACHEBP
        42**DCL-ENT  1356--CALL     1395--CALL     1474--CALL     1495--CALL
SSW$BYPASSCACHE
        55**DCL-ENT  1386--CALL
SSW$LOGSTRT
        47**DCL-ENT  1399--CALL
SSW$MAKECPU
        46**DCL-ENT  1476--CALL     1479--CALL
SSW$STCHK
        45**DCL-ENT  1434--CALL
SSW$USECACHE
        56**DCL-ENT  1410--CALL
S_MPSTATE
       129**DCL      1361>>IF       1361>>IF       1369>>IF       1396>>IF       1430>>IF       1468>>IF
      1475>>IF       1496>>DOCASE
S_NSCPU
       130**DCL      1349>>DOINDEX  1440>>DOINDEX
S_NSCPUA
PL6.E3A0      #001=SSW$CTLCPU File=SSW$STARTKI.:E05TSI                           WED 07/30/97 06:01 Page:48   
       130**DCL      1385>>IF       1387<<ASSIGN   1387>>ASSIGN   1408<<ASSIGN   1408>>ASSIGN   1409>>IF
S_PCU
       129**DCL      1364>>ASSIGN   1502>>ASSIGN
S_PORTNR
       129**DCL      1350>>IF       1371>>ASSIGN   1375>>IF       1388<>CALL     1405<>CALL     1419>>IF
      1465>>ASSIGN   1470>>ASSIGN   1506>>ASSIGN
S_STOP
       129**DCL      1430>>IF       1435<<ASSIGN   1480<<ASSIGN
S_TDCPU#
       131**DCL      1424>>IF       1460>>IF       1460>>IF       1464>>ASSIGN   1465>>ASSIGN
S_TDCPUF
       131**DCL      1427>>ASSIGN   1460>>IF       1463>>ASSIGN

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:49   
      253        1        /*T***********************************************************/
      254        2        /*T*                                                         */
      255        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      256        4        /*T*                                                         */
      257        5        /*T***********************************************************/
      258        6        /**/
      259        7        /*X*   */
      260        8        /**/
      261        9        SSW$STCHK: PROC (CPU#);
      262       10        /**/
      263       11        /*      MAKE SURE CPU STOPPED                                         */
      264       12        /**/
      265       13        %INCLUDE HF_DATA_R;
      266       56        %INCLUDE SS_SCHED_R;
      267       99        %INCLUDE OC_SUBS_C;
      268      830        %INCLUDE B$USER;
      269     1046        %B$USERREFS;
      270     1050        %INCLUDE SS_SCHED_C;
      271     1283        %INCLUDE HF_LOCK_C;
      272     1297        /**/
      273     1298        /**/
      274     1299    1   DCL CPU# UBIN WORD;                     /* LOGICAL CPU NUMBER                 */
      275     1300    1   DCL I SBIN;
      276     1301    1   DCL STARTED UBIN;
      277     1302        /**/
      278     1303    1   DCL S_MING UBIN SYMREF;
      279     1304    1   DCL B_MUAIS UBIN SYMREF;
      280     1305        /**/
      281     1306    1   DCL SSS$CACHEBP ENTRY;
      282     1307    1   DCL SSS$CACHE ENTRY;
      283     1308    1   DCL SSW$USECACHE ENTRY;
      284     1309    1   DCL SSW$BYPASSCACHE ENTRY;
      285     1310    1   DCL SSW$CTLCPU ENTRY(1) ALTRET;
      286     1311    1   DCL HFA$STOPCPU ENTRY;
      287     1312    1   DCL HFA$STARTCPU ENTRY;
      288     1313    1   DCL HFB$ENAPORT ENTRY(1);
      289     1314    1   DCL HFB$DISPORT ENTRY(1);
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:50   
      290     1315    1   DCL HFC$STCPU ENTRY(1);
      291     1316    1   DCL HFC$MAKECPU ENTRY(1);
      292     1317    1   DCL   OCI$MK_WR ENTRY(7);
      293     1318    1   DCL     SC_STOPKI ENTRY CONV(2,0);
      294     1319    1   DCL SSW$LOGSTRT ENTRY(2);
      295     1320        /**/
      296     1321    1   DCL 1 CPUM ALIGNED,                     /* USED FOR KEYIN REPLIES             */
      297     1322    1         2 * UBIN WORD,
      298     1323    1         2 KPARMS,                         /* PARAMETERS FOR OCI$MK_WR           */
      299     1324    1           3 PORT UBIN WORD,               /* PROCESSOR PORT NUMBER              */
      300     1325    1           3 MSTR UBIN WORD,               /* CPU TYPE (MASTER/SLAVE)            */
      301     1326    1           3 USER UBIN WORD,               /* CURRENT USER OF SLAVE              */
      302     1327    1           3 CODE UBIN WORD;               /* MESSAGE CODE                       */
      303     1328    1   DCL 1 KMSG REDEF CPUM,
      304     1329    1         2 MSG# UBIN(18) UNAL,
      305     1330    1         2 CADDR BIT(18)  UNAL,
      306     1331    1         2 PORT UBIN WORD,
      307     1332    1         2 *(0:2) UBIN;
      308     1333    1   DCL CPUML (0:3) UBIN BYTE UNAL CONSTANT INIT(LENGTHC(CPUM.KPARMS.PORT),
      309     1334    1                                           LENGTHC(CPUM.KPARMS.MSTR),
      310     1335    1                                           LENGTHC(CPUM.KPARMS.USER),
      311     1336    1                                           LENGTHC(CPUM.KPARMS.CODE));
      312     1337        /*                                                                    */
      313     1338        %SUB SSW_SPD#=1;                        /* STOPPED                            */
      314     1339        %SUB SSW_NO#=5;                         /* WON'T START                        */
      315     1340        %SUB SSW_NOSTOP#=8;
      316     1341        /**/
      317     1342    1           CALL SSS$CACHEBP;
      318     1343    1           IF S_MPSTATE(CPU#) ~= %SS_STOP# THEN
      319     1344    2           DO;
      320     1345    2   CNTSTOP:   S_STOP(CPU#)=0;
      321     1346    2              H_MAKE_IN_PROGRESS = '0'B;
      322     1347    2              CALL MK_WR(SSW_NOSTOP#);
      323     1348    2              KMSG.MSG#=KEY_CPUS#;
      324     1349    2              KMSG.CADDR=M_SYS;
      325     1350    2              CALL SSW$CTLCPU(KMSG);
      326     1351    2              END;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:51   
      327     1352    1           ELSE
      328     1353    2           DO;
      329     1354    2              CALL HFB$DISPORT(S_PORTNR(CPU#)); /* DISABLE SCU PORT MASK         */
      330     1355    2              CALL MK_WR(SSW_SPD#);
      331     1356    2              S_NSCPUA = S_NSCPUA-1;
      332     1357    2              IF S_NSCPUA = 0 THEN
      333     1358    2                 CALL SSW$USECACHE;
      334     1359    2              CALL SSW$LOGSTRT(CPU#);
      335     1360    2              CALL CHK_CPUREQ('0'B);
      336     1361    2              END;
      337     1362    1           RETURN;
      338     1363        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:52   
      339     1364    1   SSW$CPUHUNG: ENTRY(CPU#);
      340     1365    1           CALL SSS$CACHEBP;
      341     1366    1           CPUM.KPARMS.PORT = S_PORTNR(CPU#);
      342     1367    1           CPUM.KPARMS.USER = B$USRT$->B$USER.SYSID(S_PCU(CPU#));
      343     1368    1           IF S_MIN_HUNG(CPU#) = 0
      344     1369    1           THEN CALL SSW$LOGSTRT(CPU#,1);
      345     1370    1           CALL SSS$CACHE;
      346     1371    1           CALL OCI$MK_WR(M_SYS,
      347     1372    1             HUNGCPU_MSG#,
      348     1373    1             4,
      349     1374    1             CPUML,
      350     1375    1             CPUM.KPARMS);
      351     1376    1           RETURN;
      352     1377        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:53   
      353     1378    1   SSW$MAKECPU: ENTRY(CPU#);
      354     1379    1           CALL SSS$CACHEBP;
      355     1380    1           IF S_MPSTATE(CPU#) ~= %SS_STOP# THEN
      356     1381    1              GOTO CNTSTOP;
      357     1382        /*   The CPU that is to become the new master is stopped.  Now
      358     1383             disable and get all other CPUs into the PAUSE state.  Set the
      359     1384             LS dscrs to bypass cache.                                        */
      360     1385    1           CALL HFA$STOPCPU;
      361     1386    1           CALL SSW$BYPASSCACHE;
      362     1387        /*   Get the new master out of STOPPED state and ready to recieve the
      363     1388             MAKECPU connect.                                                 */
      364     1389    1           CALL HFB$ENAPORT(S_PORTNR(CPU#)); /* ENABLE SCU PORT MASK             */
      365     1390    1           CALL HFC$STCPU(CPU#);
      366     1391        /*   Show no slaves active.  If new master responded to connect then
      367     1392             call HFC$MAKECPU to switch roles.  The code after the call is
      368     1393             running on the other cpu ,if it started.                       */
      369     1394    1           S_NSCPUA=0;
      370     1395    1           CALL SSS$CACHEBP;
      371     1396    1           STARTED=S_MPSTATE(CPU#);
      372     1397    1           IF STARTED = 1 THEN
      373     1398    1              CALL HFC$MAKECPU(CPU#);
      374     1399        /*
      375     1400                DISABLE SCU PORT MASK FOR EITHER OLD MASTER CPU (IF NOT
      376     1401                MIXED MP SYSTEM) OR SLAVE CPU THAT WOULD NOT START
      377     1402        */
      378     1403    1           IF (H_MIXED_MP = 0) OR (STARTED = 0)
      379     1404    1           THEN CALL HFB$DISPORT(S_PORTNR(CPU#));
      380     1405    1           CALL SSS$CACHEBP;
      381     1406    2           DO I = 1 TO S_NSCPU;
      382     1407        /*   Count number of active slaves                                    */
      383     1408    2              IF S_MPSTATE(I) = %SS_PAUSE# THEN
      384     1409    2                 S_NSCPUA = S_NSCPUA+1;
      385     1410    2              END;
      386     1411        /*   Start up all slaves.                                             */
      387     1412    1           H_MAKE_IN_PROGRESS = '0'B;
      388     1413    1           CALL HFA$STARTCPU;
      389     1414        /*   If there are no active slaves then set LS dscrs to use cache     */
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:54   
      390     1415    1           IF S_NSCPUA = 0 THEN
      391     1416    1              CALL SSW$USECACHE;
      392     1417        /*   If the new master didn't start, put out the message.
      393     1418             If it did, display state of all CPUs.                            */
      394     1419    1           IF STARTED = 1 THEN
      395     1420    2           DO;
      396     1421    2              I = S_STIME(CPU#);
      397     1422    2              S_STIME(CPU#) = S_STIME(0);
      398     1423    2              S_STIME(0) = I;
      399     1424    2              CALL SSW$LOGSTRT(0);
      400     1425    2              IF H_MIXED_MP = 0
      401     1426    2              THEN CALL SSW$LOGSTRT(CPU#);
      402     1427    2              KMSG.MSG#=KEY_CPUS#;
      403     1428    2              KMSG.PORT=0;
      404     1429    2              KMSG.CADDR=M_SYS;
      405     1430    2              CALL SSW$CTLCPU(KMSG);
      406     1431    2              CALL CHK_CPUREQ('1'B);
      407     1432    2              END;
      408     1433    1           ELSE
      409     1434    1              CALL MK_WR(SSW_NO#);
      410     1435    1           RETURN;
      411     1436        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:55   
      412     1437        /*
      413     1438            Proc to check for users with a specific CPU request in their user table.
      414     1439            If requested CPU is stopped, this proc will either find another CPU of
      415     1440            the same type or it will reset the CPU request and send a message to the
      416     1441            the operator's console.
      417     1442        */
      418     1443    1   CHK_CPUREQ: PROC(MAKE);
      419     1444    2   DCL MAKE BIT(1) ALIGNED;
      420     1445        /**/
      421     1446        /* AUTO */
      422     1447    2   DCL CPU1OLD UBIN;
      423     1448    2   DCL CPU1NEW UBIN;
      424     1449    2   DCL CPU2OLD UBIN;
      425     1450    2   DCL CPU2NEW UBIN;
      426     1451    2   DCL CPU_NEW SBIN;
      427     1452        /**/
      428     1453    2           CPU1OLD = CPU#+1;
      429     1454    2           IF NOT MAKE
      430     1455    2           THEN CALL FIND_TYPE(CPU1NEW);   /* STOP CPU KEYIN                     */
      431     1456    3           ELSE DO;                        /* MAKE CPU KEYIN                     */
      432     1457    3              CPU1NEW = 1;
      433     1458    3              CPU2OLD = 1;
      434     1459    3              IF H_MIXED_MP = 0
      435     1460    3              THEN CALL FIND_TYPE(CPU2NEW); /* OLD MASTER STOPPED                */
      436     1461    3              ELSE CPU2NEW = CPU#+1;       /* OLD MASTER RUNNING                 */
      437     1462    3              IF S_PORTNR(7) ~= 0 AND S_PORTNR(7) = CPU#
      438     1463    3              THEN S_PORTNR(7) = 0;        /* NEW MASTER WAS PARTITIONED         */
      439     1464    3              END;
      440     1465        /**/
      441     1466    3           DO I = S_MING+1 TO B_MUAIS;
      442     1467    3              IF B$USRT$->B$USER.US(I) ~= %SS_SNULL
      443     1468    3                AND B$USRT$->B$USER.CPU(I) ~= 0
      444     1469    4              THEN DO;
      445     1470    4                 CPU_NEW = -1;
      446     1471    4                 IF B$USRT$->B$USER.CPU(I) = CPU1OLD
      447     1472    4                 THEN CPU_NEW = CPU1NEW;
      448     1473    5                 ELSE DO;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:56   
      449     1474    5                    IF MAKE AND B$USRT$->B$USER.CPU(I) = CPU2OLD
      450     1475    5                    THEN CPU_NEW = CPU2NEW;
      451     1476    5                    END;
      452     1477    4                 IF CPU_NEW >= 0
      453     1478    5                 THEN DO;
      454     1479                         %LOCK (G#=S_SCHDGATE);
      455     1482    5                    B$USRT$->B$USER.CPU(I) = CPU_NEW;
      456     1483    5                    CPUM.KPARMS.USER = B$USRT$->B$USER.SYSID(I);
      457     1484                         %UNLOCK (G#=S_SCHDGATE);
      458     1487    5                    IF CPU_NEW = 0
      459     1488    5                    THEN CALL OCI$MK_WR(
      460     1489    5                         M_SYS,RESETCPU_MSG#,1,CPUML,CPUM.KPARMS.USER);
      461     1490    5                    END;
      462     1491    4                 END;
      463     1492    3              END;
      464     1493    2   END CHK_CPUREQ;
      465     1494        /*
      466     1495            Proc for finding a running CPU of the same type as logical CPU CPU#.
      467     1496        */
      468     1497    1   FIND_TYPE: PROC(CPU);
      469     1498    2   DCL CPU UBIN;
      470     1499        /**/
      471     1500    2           CPU = 0;
      472     1501    2           CALL SSS$CACHEBP;
      473     1502    3           DO I = S_NSCPU DOWNTO 0;
      474     1503    3              IF S_MPSTATE(I) = %SS_RUN# AND S_PTYPE(I) = S_PTYPE(CPU#)
      475     1504    3              THEN CPU = I+1;
      476     1505    3              END;
      477     1506    2           CALL SSS$CACHE;
      478     1507    2   END FIND_TYPE;
      479     1508        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:57   
      480     1509        /*   Proc to write message about CPU status to OC.                    */
      481     1510    1   MK_WR:  PROC (MSG#);
      482     1511    2   DCL MSG# UBIN;
      483     1512        /*                                                                    */
      484     1513    2           CPUM.KPARMS.MSTR=CPU#;
      485     1514    2           CPUM.KPARMS.CODE=MSG#;
      486     1515    2           CPUM.KPARMS.PORT=S_PORTNR(CPU#);
      487     1516    2           CPUM.KPARMS.USER=0;
      488     1517    2           CALL OCI$MK_WR(M_SYS,CPU_MSG#,4,CPUML,CPUM.KPARMS);
      489     1518    2           RETURN;
      490     1519    2   END;
      491     1520    1   END SSW$STCHK;
      492     1521        /**/
      493     1522        /**/
      494     1523        %EOD;

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:58   
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$STCHK.

   Procedure SSW$STCHK requires 378 words for executable code.
   Procedure SSW$STCHK requires 28 words of local(AUTO) storage.

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:59   

 Object Unit name= SSW$STCHK                                  File name= SSW$STARTKI.:E05TOU
 UTS= JUL 30 '97 06:01:48.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  SSW$STCHK
    1   Proc  even  none   378    572  SSW$STCHK
    2  RoData even  none    20     24  SSW$STCHK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  SSW$STCHK
     1     66                  yes      Std        1  SSW$CPUHUNG
     1    136                  yes      Std        1  SSW$MAKECPU
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:60   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$CACHEBP
         yes           Std       2 SSW$LOGSTRT
         yes           Std       0 SSS$CACHE
         yes           Std       1 HFC$MAKECPU
 yes     yes           Std       1 SSW$CTLCPU
         yes           Std       1 HFB$DISPORT
         yes           Std       7 OCI$MK_WR
         yes           Std       0 HFA$STOPCPU
         yes           Std       0 SSW$BYPASSCACHE
         yes           Std       1 HFC$STCPU
         yes           Std       0 SSW$USECACHE
         yes           Std       1 HFB$ENAPORT
         yes           Std       0 HFA$STARTCPU
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 HFC$LOCK
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     H_MAKE_IN_PROGRESS               r    H_MIXED_MP                            S_PCU
     S_PORTNR                              S_MPSTATE                             S_STOP
     S_STIME                               S_PTYPE                               S_NSCPU
     S_NSCPUA                              S_MIN_HUNG                            S_SCHDGATE
     B$USRT$                               S_MING                                B_MUAIS
     B_VECTNIL
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:61   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:62   


      253        1        /*T***********************************************************/
      254        2        /*T*                                                         */
      255        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      256        4        /*T*                                                         */
      257        5        /*T***********************************************************/
      258        6        /**/
      259        7        /*X*   */
      260        8        /**/
      261        9        SSW$STCHK: PROC (CPU#);

      9  1 000000   000000 700200 xent  SSW$STCHK    TSX0  ! X66_AUTO_1
         1 000001   000034 000001                    ZERO    28,1

      262       10        /**/
      263       11        /*      MAKE SURE CPU STOPPED                                         */
      264       12        /**/
      265       13        %INCLUDE HF_DATA_R;
      266       56        %INCLUDE SS_SCHED_R;
      267       99        %INCLUDE OC_SUBS_C;
      268      830        %INCLUDE B$USER;
      269     1046        %B$USERREFS;
      270     1050        %INCLUDE SS_SCHED_C;
      271     1283        %INCLUDE HF_LOCK_C;
      272     1297        /**/
      273     1298        /**/
      274     1299    1   DCL CPU# UBIN WORD;                     /* LOGICAL CPU NUMBER                 */
      275     1300    1   DCL I SBIN;
      276     1301    1   DCL STARTED UBIN;
      277     1302        /**/
      278     1303    1   DCL S_MING UBIN SYMREF;
      279     1304    1   DCL B_MUAIS UBIN SYMREF;
      280     1305        /**/
      281     1306    1   DCL SSS$CACHEBP ENTRY;
      282     1307    1   DCL SSS$CACHE ENTRY;
      283     1308    1   DCL SSW$USECACHE ENTRY;
      284     1309    1   DCL SSW$BYPASSCACHE ENTRY;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:63   
      285     1310    1   DCL SSW$CTLCPU ENTRY(1) ALTRET;
      286     1311    1   DCL HFA$STOPCPU ENTRY;
      287     1312    1   DCL HFA$STARTCPU ENTRY;
      288     1313    1   DCL HFB$ENAPORT ENTRY(1);
      289     1314    1   DCL HFB$DISPORT ENTRY(1);
      290     1315    1   DCL HFC$STCPU ENTRY(1);
      291     1316    1   DCL HFC$MAKECPU ENTRY(1);
      292     1317    1   DCL   OCI$MK_WR ENTRY(7);
      293     1318    1   DCL     SC_STOPKI ENTRY CONV(2,0);
      294     1319    1   DCL SSW$LOGSTRT ENTRY(2);
      295     1320        /**/
      296     1321    1   DCL 1 CPUM ALIGNED,                     /* USED FOR KEYIN REPLIES             */
      297     1322    1         2 * UBIN WORD,
      298     1323    1         2 KPARMS,                         /* PARAMETERS FOR OCI$MK_WR           */
      299     1324    1           3 PORT UBIN WORD,               /* PROCESSOR PORT NUMBER              */
      300     1325    1           3 MSTR UBIN WORD,               /* CPU TYPE (MASTER/SLAVE)            */
      301     1326    1           3 USER UBIN WORD,               /* CURRENT USER OF SLAVE              */
      302     1327    1           3 CODE UBIN WORD;               /* MESSAGE CODE                       */
      303     1328    1   DCL 1 KMSG REDEF CPUM,
      304     1329    1         2 MSG# UBIN(18) UNAL,
      305     1330    1         2 CADDR BIT(18)  UNAL,
      306     1331    1         2 PORT UBIN WORD,
      307     1332    1         2 *(0:2) UBIN;
      308     1333    1   DCL CPUML (0:3) UBIN BYTE UNAL CONSTANT INIT(LENGTHC(CPUM.KPARMS.PORT),
      309     1334    1                                           LENGTHC(CPUM.KPARMS.MSTR),
      310     1335    1                                           LENGTHC(CPUM.KPARMS.USER),
      311     1336    1                                           LENGTHC(CPUM.KPARMS.CODE));
      312     1337        /*                                                                    */
      313     1338        %SUB SSW_SPD#=1;                        /* STOPPED                            */
      314     1339        %SUB SSW_NO#=5;                         /* WON'T START                        */
      315     1340        %SUB SSW_NOSTOP#=8;
      316     1341        /**/
      317     1342    1           CALL SSS$CACHEBP;

   1342  1 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000003   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000004   000000 011000                    NOP     0
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:64   

      318     1343    1           IF S_MPSTATE(CPU#) ~= %SS_STOP# THEN

   1343  1 000005   200003 470500                    LDP0    @CPU#,,AUTO
         1 000006   000000 720100                    LXL0    0,,PR0
         1 000007   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000010   000034 600000 1                  TZE     s:1354

      319     1344    2           DO;

      320     1345    2   CNTSTOP:   S_STOP(CPU#)=0;

   1345  1 000011   200003 470500       CNTSTOP      LDP0    @CPU#,,AUTO
         1 000012   000000 720100                    LXL0    0,,PR0
         1 000013   000000 450010 xsym               STZ     S_STOP,X0

      321     1346    2              H_MAKE_IN_PROGRESS = '0'B;

   1346  1 000014   000000 450000 xsym               STZ     H_MAKE_IN_PROGRESS

      322     1347    2              CALL MK_WR(SSW_NOSTOP#);

   1347  1 000015   000000 236000 2                  LDQ     0
         1 000016   200015 756100                    STQ     CPUM+7,,AUTO
         1 000017   000543 701000 1                  TSX1    MK_WR
         1 000020   000000 011000                    NOP     0

      323     1348    2              KMSG.MSG#=KEY_CPUS#;

   1348  1 000021   000007 220003                    LDX0    7,DU
         1 000022   200006 740100                    STX0    CPUM,,AUTO

      324     1349    2              KMSG.CADDR=M_SYS;

   1349  1 000023   200000 221003                    LDX1    65536,DU
         1 000024   200006 441100                    SXL1    CPUM,,AUTO

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:65   
      325     1350    2              CALL SSW$CTLCPU(KMSG);

   1350  1 000025   200006 630500                    EPPR0   CPUM,,AUTO
         1 000026   200026 450500                    STP0    @CPU+1,,AUTO
         1 000027   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000030   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000031   000000 701000 xent               TSX1    SSW$CTLCPU
         1 000032   000000 011000                    NOP     0

      326     1351    2              END;

   1351  1 000033   000065 710000 1                  TRA     s:1362

      327     1352    1           ELSE
      328     1353    2           DO;

      329     1354    2              CALL HFB$DISPORT(S_PORTNR(CPU#)); /* DISABLE SCU PORT MASK         */

   1354  1 000034   000000 631410 xsym               EPPR1   S_PORTNR,X0
         1 000035   200026 451500                    STP1    @CPU+1,,AUTO
         1 000036   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000037   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000040   000000 701000 xent               TSX1    HFB$DISPORT
         1 000041   000000 011000                    NOP     0

      330     1355    2              CALL MK_WR(SSW_SPD#);

   1355  1 000042   000001 236000 2                  LDQ     1
         1 000043   200015 756100                    STQ     CPUM+7,,AUTO
         1 000044   000543 701000 1                  TSX1    MK_WR
         1 000045   000000 011000                    NOP     0

      331     1356    2              S_NSCPUA = S_NSCPUA-1;

   1356  1 000046   000000 235000 xsym               LDA     S_NSCPUA
         1 000047   000001 135007                    SBLA    1,DL
         1 000050   000000 755000 xsym               STA     S_NSCPUA
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:66   

      332     1357    2              IF S_NSCPUA = 0 THEN

   1357  1 000051   000055 601000 1                  TNZ     s:1359

      333     1358    2                 CALL SSW$USECACHE;

   1358  1 000052   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000053   000000 701000 xent               TSX1    SSW$USECACHE
         1 000054   000000 011000                    NOP     0

      334     1359    2              CALL SSW$LOGSTRT(CPU#);

   1359  1 000055   200003 630500                    EPPR0   @CPU#,,AUTO
         1 000056   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000057   000000 701000 xent               TSX1    SSW$LOGSTRT
         1 000060   000000 011000                    NOP     0

      335     1360    2              CALL CHK_CPUREQ('0'B);

   1360  1 000061   000002 236000 2                  LDQ     2
         1 000062   200015 756100                    STQ     CPUM+7,,AUTO
         1 000063   000327 701000 1                  TSX1    CHK_CPUREQ
         1 000064   000000 011000                    NOP     0

      336     1361    2              END;

      337     1362    1           RETURN;

   1362  1 000065   000000 702200 xent               TSX2  ! X66_ARET

      338     1363        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:67   
      339     1364    1   SSW$CPUHUNG: ENTRY(CPU#);

   1364  1 000066   000000 700200 xent  SSW$CPUHUNG  TSX0  ! X66_AUTO_1
         1 000067   000034 000001                    ZERO    28,1

      340     1365    1           CALL SSS$CACHEBP;

   1365  1 000070   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000071   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000072   000000 011000                    NOP     0

      341     1366    1           CPUM.KPARMS.PORT = S_PORTNR(CPU#);

   1366  1 000073   200003 470500                    LDP0    @CPU#,,AUTO
         1 000074   000000 720100                    LXL0    0,,PR0
         1 000075   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000076   200007 755100                    STA     CPUM+1,,AUTO

      342     1367    1           CPUM.KPARMS.USER = B$USRT$->B$USER.SYSID(S_PCU(CPU#));

   1367  1 000077   000000 720100                    LXL0    0,,PR0
         1 000100   000000 235010 xsym               LDA     S_PCU,X0
         1 000101   000004 735000                    ALS     4
         1 000102   000000 471400 xsym               LDP1    B$USRT$
         1 000103   100014 236105                    LDQ     12,AL,PR1
         1 000104   777777 376007                    ANQ     -1,DL
         1 000105   200011 756100                    STQ     CPUM+3,,AUTO

      343     1368    1           IF S_MIN_HUNG(CPU#) = 0

   1368  1 000106   000000 720100                    LXL0    0,,PR0
         1 000107   000000 235010 xsym               LDA     S_MIN_HUNG,X0
         1 000110   000120 601000 1                  TNZ     s:1370

      344     1369    1           THEN CALL SSW$LOGSTRT(CPU#,1);

   1369  1 000111   000001 236000 2                  LDQ     1
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:68   
         1 000112   200003 235100                    LDA     @CPU#,,AUTO
         1 000113   200026 757100                    STAQ    @CPU+1,,AUTO
         1 000114   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000115   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000116   000000 701000 xent               TSX1    SSW$LOGSTRT
         1 000117   000000 011000                    NOP     0

      345     1370    1           CALL SSS$CACHE;

   1370  1 000120   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000121   000000 701000 xent               TSX1    SSS$CACHE
         1 000122   000000 011000                    NOP     0

      346     1371    1           CALL OCI$MK_WR(M_SYS,

   1371  1 000123   200007 630500                    EPPR0   CPUM+1,,AUTO
         1 000124   200032 450500                    STP0    @CPU+5,,AUTO
         1 000125   000006 237000 2                  LDAQ    6
         1 000126   200030 757100                    STAQ    @CPU+3,,AUTO
         1 000127   000010 237000 2                  LDAQ    8
         1 000130   200026 757100                    STAQ    @CPU+1,,AUTO
         1 000131   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000132   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000133   000000 701000 xent               TSX1    OCI$MK_WR
         1 000134   000000 011000                    NOP     0

      347     1372    1             HUNGCPU_MSG#,
      348     1373    1             4,
      349     1374    1             CPUML,
      350     1375    1             CPUM.KPARMS);
      351     1376    1           RETURN;

   1376  1 000135   000000 702200 xent               TSX2  ! X66_ARET

      352     1377        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:69   
      353     1378    1   SSW$MAKECPU: ENTRY(CPU#);

   1378  1 000136   000000 700200 xent  SSW$MAKECPU  TSX0  ! X66_AUTO_1
         1 000137   000034 000001                    ZERO    28,1

      354     1379    1           CALL SSS$CACHEBP;

   1379  1 000140   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000141   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000142   000000 011000                    NOP     0

      355     1380    1           IF S_MPSTATE(CPU#) ~= %SS_STOP# THEN

   1380  1 000143   200003 470500                    LDP0    @CPU#,,AUTO
         1 000144   000000 720100                    LXL0    0,,PR0
         1 000145   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000146   000011 601000 1                  TNZ     CNTSTOP

      356     1381    1              GOTO CNTSTOP;
      357     1382        /*   The CPU that is to become the new master is stopped.  Now
      358     1383             disable and get all other CPUs into the PAUSE state.  Set the
      359     1384             LS dscrs to bypass cache.                                        */
      360     1385    1           CALL HFA$STOPCPU;

   1385  1 000147   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000150   000000 701000 xent               TSX1    HFA$STOPCPU
         1 000151   000000 011000                    NOP     0

      361     1386    1           CALL SSW$BYPASSCACHE;

   1386  1 000152   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000153   000000 701000 xent               TSX1    SSW$BYPASSCACHE
         1 000154   000000 011000                    NOP     0

      362     1387        /*   Get the new master out of STOPPED state and ready to recieve the
      363     1388             MAKECPU connect.                                                 */
      364     1389    1           CALL HFB$ENAPORT(S_PORTNR(CPU#)); /* ENABLE SCU PORT MASK             */
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:70   

   1389  1 000155   200003 470500                    LDP0    @CPU#,,AUTO
         1 000156   000000 720100                    LXL0    0,,PR0
         1 000157   000000 631410 xsym               EPPR1   S_PORTNR,X0
         1 000160   200026 451500                    STP1    @CPU+1,,AUTO
         1 000161   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000163   000000 701000 xent               TSX1    HFB$ENAPORT
         1 000164   000000 011000                    NOP     0

      365     1390    1           CALL HFC$STCPU(CPU#);

   1390  1 000165   200003 630500                    EPPR0   @CPU#,,AUTO
         1 000166   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000167   000000 701000 xent               TSX1    HFC$STCPU
         1 000170   000000 011000                    NOP     0

      366     1391        /*   Show no slaves active.  If new master responded to connect then
      367     1392             call HFC$MAKECPU to switch roles.  The code after the call is
      368     1393             running on the other cpu ,if it started.                       */
      369     1394    1           S_NSCPUA=0;

   1394  1 000171   000000 450000 xsym               STZ     S_NSCPUA

      370     1395    1           CALL SSS$CACHEBP;

   1395  1 000172   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000173   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000174   000000 011000                    NOP     0

      371     1396    1           STARTED=S_MPSTATE(CPU#);

   1396  1 000175   200003 470500                    LDP0    @CPU#,,AUTO
         1 000176   000000 720100                    LXL0    0,,PR0
         1 000177   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000200   200005 755100                    STA     STARTED,,AUTO

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:71   
      372     1397    1           IF STARTED = 1 THEN

   1397  1 000201   000001 115007                    CMPA    1,DL
         1 000202   000207 601000 1                  TNZ     s:1403

      373     1398    1              CALL HFC$MAKECPU(CPU#);

   1398  1 000203   200003 630500                    EPPR0   @CPU#,,AUTO
         1 000204   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000205   000000 701000 xent               TSX1    HFC$MAKECPU
         1 000206   000000 011000                    NOP     0

      374     1399        /*
      375     1400                DISABLE SCU PORT MASK FOR EITHER OLD MASTER CPU (IF NOT
      376     1401                MIXED MP SYSTEM) OR SLAVE CPU THAT WOULD NOT START
      377     1402        */
      378     1403    1           IF (H_MIXED_MP = 0) OR (STARTED = 0)

   1403  1 000207   000000 235000 xsym               LDA     H_MIXED_MP
         1 000210   000213 600000 1                  TZE     s:1404
         1 000211   200005 236100                    LDQ     STARTED,,AUTO
         1 000212   000223 601000 1                  TNZ     s:1405

      379     1404    1           THEN CALL HFB$DISPORT(S_PORTNR(CPU#));

   1404  1 000213   200003 470500                    LDP0    @CPU#,,AUTO
         1 000214   000000 720100                    LXL0    0,,PR0
         1 000215   000000 631410 xsym               EPPR1   S_PORTNR,X0
         1 000216   200026 451500                    STP1    @CPU+1,,AUTO
         1 000217   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000220   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000221   000000 701000 xent               TSX1    HFB$DISPORT
         1 000222   000000 011000                    NOP     0

      380     1405    1           CALL SSS$CACHEBP;

   1405  1 000223   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:72   
         1 000224   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000225   000000 011000                    NOP     0

      381     1406    2           DO I = 1 TO S_NSCPU;

   1406  1 000226   000001 235007                    LDA     1,DL
         1 000227   200004 755100                    STA     I,,AUTO
         1 000230   000241 710000 1                  TRA     s:1410+1

      382     1407        /*   Count number of active slaves                                    */
      383     1408    2              IF S_MPSTATE(I) = %SS_PAUSE# THEN

   1408  1 000231   200004 720100                    LXL0    I,,AUTO
         1 000232   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000233   000001 115007                    CMPA    1,DL
         1 000234   000240 601000 1                  TNZ     s:1410

      384     1409    2                 S_NSCPUA = S_NSCPUA+1;

   1409  1 000235   000000 236000 xsym               LDQ     S_NSCPUA
         1 000236   000001 036007                    ADLQ    1,DL
         1 000237   000000 756000 xsym               STQ     S_NSCPUA

      385     1410    2              END;

   1410  1 000240   200004 054100                    AOS     I,,AUTO
         1 000241   000000 236000 xsym               LDQ     S_NSCPU
         1 000242   000231 604000 1                  TMI     s:1408
         1 000243   200004 116100                    CMPQ    I,,AUTO
         1 000244   000231 605000 1                  TPL     s:1408

      386     1411        /*   Start up all slaves.                                             */
      387     1412    1           H_MAKE_IN_PROGRESS = '0'B;

   1412  1 000245   000000 450000 xsym               STZ     H_MAKE_IN_PROGRESS

      388     1413    1           CALL HFA$STARTCPU;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:73   

   1413  1 000246   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000247   000000 701000 xent               TSX1    HFA$STARTCPU
         1 000250   000000 011000                    NOP     0

      389     1414        /*   If there are no active slaves then set LS dscrs to use cache     */
      390     1415    1           IF S_NSCPUA = 0 THEN

   1415  1 000251   000000 235000 xsym               LDA     S_NSCPUA
         1 000252   000256 601000 1                  TNZ     s:1419

      391     1416    1              CALL SSW$USECACHE;

   1416  1 000253   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000254   000000 701000 xent               TSX1    SSW$USECACHE
         1 000255   000000 011000                    NOP     0

      392     1417        /*   If the new master didn't start, put out the message.
      393     1418             If it did, display state of all CPUs.                            */
      394     1419    1           IF STARTED = 1 THEN

   1419  1 000256   200005 235100                    LDA     STARTED,,AUTO
         1 000257   000001 115007                    CMPA    1,DL
         1 000260   000322 601000 1                  TNZ     s:1434

      395     1420    2           DO;

      396     1421    2              I = S_STIME(CPU#);

   1421  1 000261   200003 470500                    LDP0    @CPU#,,AUTO
         1 000262   000000 720100                    LXL0    0,,PR0
         1 000263   000000 235010 xsym               LDA     S_STIME,X0
         1 000264   200004 755100                    STA     I,,AUTO

      397     1422    2              S_STIME(CPU#) = S_STIME(0);

   1422  1 000265   000000 236000 xsym               LDQ     S_STIME
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:74   
         1 000266   000000 756010 xsym               STQ     S_STIME,X0

      398     1423    2              S_STIME(0) = I;

   1423  1 000267   000000 755000 xsym               STA     S_STIME

      399     1424    2              CALL SSW$LOGSTRT(0);

   1424  1 000270   000002 630400 2                  EPPR0   2
         1 000271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000272   000000 701000 xent               TSX1    SSW$LOGSTRT
         1 000273   000000 011000                    NOP     0

      400     1425    2              IF H_MIXED_MP = 0

   1425  1 000274   000000 235000 xsym               LDA     H_MIXED_MP
         1 000275   000302 601000 1                  TNZ     s:1427

      401     1426    2              THEN CALL SSW$LOGSTRT(CPU#);

   1426  1 000276   200003 630500                    EPPR0   @CPU#,,AUTO
         1 000277   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000300   000000 701000 xent               TSX1    SSW$LOGSTRT
         1 000301   000000 011000                    NOP     0

      402     1427    2              KMSG.MSG#=KEY_CPUS#;

   1427  1 000302   000007 220003                    LDX0    7,DU
         1 000303   200006 740100                    STX0    CPUM,,AUTO

      403     1428    2              KMSG.PORT=0;

   1428  1 000304   200007 450100                    STZ     CPUM+1,,AUTO

      404     1429    2              KMSG.CADDR=M_SYS;

   1429  1 000305   200000 221003                    LDX1    65536,DU
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:75   
         1 000306   200006 441100                    SXL1    CPUM,,AUTO

      405     1430    2              CALL SSW$CTLCPU(KMSG);

   1430  1 000307   200006 630500                    EPPR0   CPUM,,AUTO
         1 000310   200026 450500                    STP0    @CPU+1,,AUTO
         1 000311   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000312   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000313   000000 701000 xent               TSX1    SSW$CTLCPU
         1 000314   000000 011000                    NOP     0

      406     1431    2              CALL CHK_CPUREQ('1'B);

   1431  1 000315   000005 236000 2                  LDQ     5
         1 000316   200015 756100                    STQ     CPUM+7,,AUTO
         1 000317   000327 701000 1                  TSX1    CHK_CPUREQ
         1 000320   000000 011000                    NOP     0

      407     1432    2              END;

   1432  1 000321   000326 710000 1                  TRA     s:1435

      408     1433    1           ELSE
      409     1434    1              CALL MK_WR(SSW_NO#);

   1434  1 000322   000012 236000 2                  LDQ     10
         1 000323   200015 756100                    STQ     CPUM+7,,AUTO
         1 000324   000543 701000 1                  TSX1    MK_WR
         1 000325   000000 011000                    NOP     0

      410     1435    1           RETURN;

   1435  1 000326   000000 702200 xent               TSX2  ! X66_ARET

      411     1436        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:76   
      412     1437        /*
      413     1438            Proc to check for users with a specific CPU request in their user table.
      414     1439            If requested CPU is stopped, this proc will either find another CPU of
      415     1440            the same type or it will reset the CPU request and send a message to the
      416     1441            the operator's console.
      417     1442        */
      418     1443    1   CHK_CPUREQ: PROC(MAKE);

   1443  1 000327   200014 741300       CHK_CPUREQ   STX1  ! CPUM+6,,AUTO

      419     1444    2   DCL MAKE BIT(1) ALIGNED;
      420     1445        /**/
      421     1446        /* AUTO */
      422     1447    2   DCL CPU1OLD UBIN;
      423     1448    2   DCL CPU1NEW UBIN;
      424     1449    2   DCL CPU2OLD UBIN;
      425     1450    2   DCL CPU2NEW UBIN;
      426     1451    2   DCL CPU_NEW SBIN;
      427     1452        /**/
      428     1453    2           CPU1OLD = CPU#+1;

   1453  1 000330   200003 470500                    LDP0    @CPU#,,AUTO
         1 000331   000000 235100                    LDA     0,,PR0
         1 000332   000001 035007                    ADLA    1,DL
         1 000333   200016 755100                    STA     CPU1OLD,,AUTO

      429     1454    2           IF NOT MAKE

   1454  1 000334   200015 471500                    LDP1    @MAKE,,AUTO
         1 000335   100000 234100                    SZN     0,,PR1
         1 000336   000344 604000 1                  TMI     s:1457

      430     1455    2           THEN CALL FIND_TYPE(CPU1NEW);   /* STOP CPU KEYIN                     */

   1455  1 000337   200017 633500                    EPPR3   CPU1NEW,,AUTO
         1 000340   200025 453500                    STP3    CPU_NEW+3,,AUTO
         1 000341   000504 701000 1                  TSX1    FIND_TYPE
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:77   
         1 000342   000000 011000                    NOP     0
         1 000343   000370 710000 1                  TRA     s:1466

      431     1456    3           ELSE DO;                        /* MAKE CPU KEYIN                     */

      432     1457    3              CPU1NEW = 1;

   1457  1 000344   000001 236007                    LDQ     1,DL
         1 000345   200017 756100                    STQ     CPU1NEW,,AUTO

      433     1458    3              CPU2OLD = 1;

   1458  1 000346   200020 756100                    STQ     CPU2OLD,,AUTO

      434     1459    3              IF H_MIXED_MP = 0

   1459  1 000347   000000 235000 xsym               LDA     H_MIXED_MP
         1 000350   000356 601000 1                  TNZ     s:1461

      435     1460    3              THEN CALL FIND_TYPE(CPU2NEW); /* OLD MASTER STOPPED                */

   1460  1 000351   200021 633500                    EPPR3   CPU2NEW,,AUTO
         1 000352   200025 453500                    STP3    CPU_NEW+3,,AUTO
         1 000353   000504 701000 1                  TSX1    FIND_TYPE
         1 000354   000000 011000                    NOP     0
         1 000355   000361 710000 1                  TRA     s:1462

      436     1461    3              ELSE CPU2NEW = CPU#+1;       /* OLD MASTER RUNNING                 */

   1461  1 000356   000000 235100                    LDA     0,,PR0
         1 000357   000001 035007                    ADLA    1,DL
         1 000360   200021 755100                    STA     CPU2NEW,,AUTO

      437     1462    3              IF S_PORTNR(7) ~= 0 AND S_PORTNR(7) = CPU#

   1462  1 000361   000007 235000 xsym               LDA     S_PORTNR+7
         1 000362   000370 600000 1                  TZE     s:1466
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:78   
         1 000363   200003 470500                    LDP0    @CPU#,,AUTO
         1 000364   000007 236000 xsym               LDQ     S_PORTNR+7
         1 000365   000000 116100                    CMPQ    0,,PR0
         1 000366   000370 601000 1                  TNZ     s:1466

      438     1463    3              THEN S_PORTNR(7) = 0;        /* NEW MASTER WAS PARTITIONED         */

   1463  1 000367   000007 450000 xsym               STZ     S_PORTNR+7

      439     1464    3              END;

      440     1465        /**/
      441     1466    3           DO I = S_MING+1 TO B_MUAIS;

   1466  1 000370   000000 235000 xsym               LDA     S_MING
         1 000371   000001 035007                    ADLA    1,DL
         1 000372   200004 755100                    STA     I,,AUTO
         1 000373   000476 710000 1                  TRA     s:1492+1

      442     1467    3              IF B$USRT$->B$USER.US(I) ~= %SS_SNULL

   1467  1 000374   200004 235100                    LDA     I,,AUTO
         1 000375   000004 735000                    ALS     4
         1 000376   000000 470400 xsym               LDP0    B$USRT$
         1 000377   000011 236105                    LDQ     9,AL,PR0
         1 000400   770000 376003                    ANQ     -4096,DU
         1 000401   300000 116003                    CMPQ    98304,DU
         1 000402   000475 600000 1                  TZE     s:1492
         1 000403   000010 236105                    LDQ     8,AL,PR0
         1 000404   000777 316007                    CANQ    511,DL
         1 000405   000475 600000 1                  TZE     s:1492

      443     1468    3                AND B$USRT$->B$USER.CPU(I) ~= 0
      444     1469    4              THEN DO;

      445     1470    4                 CPU_NEW = -1;

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:79   
   1470  1 000406   000001 335007                    LCA     1,DL
         1 000407   200022 755100                    STA     CPU_NEW,,AUTO

      446     1471    4                 IF B$USRT$->B$USER.CPU(I) = CPU1OLD

   1471  1 000410   200004 236100                    LDQ     I,,AUTO
         1 000411   000004 736000                    QLS     4
         1 000412   000010 236106                    LDQ     8,QL,PR0
         1 000413   000777 376007                    ANQ     511,DL
         1 000414   200016 116100                    CMPQ    CPU1OLD,,AUTO
         1 000415   000421 601000 1                  TNZ     s:1474

      447     1472    4                 THEN CPU_NEW = CPU1NEW;

   1472  1 000416   200017 236100                    LDQ     CPU1NEW,,AUTO
         1 000417   200022 756100                    STQ     CPU_NEW,,AUTO
         1 000420   000434 710000 1                  TRA     s:1477

      448     1473    5                 ELSE DO;

      449     1474    5                    IF MAKE AND B$USRT$->B$USER.CPU(I) = CPU2OLD

   1474  1 000421   200015 471500                    LDP1    @MAKE,,AUTO
         1 000422   100000 234100                    SZN     0,,PR1
         1 000423   000434 605000 1                  TPL     s:1477
         1 000424   200004 236100                    LDQ     I,,AUTO
         1 000425   000004 736000                    QLS     4
         1 000426   000010 236106                    LDQ     8,QL,PR0
         1 000427   000777 376007                    ANQ     511,DL
         1 000430   200020 116100                    CMPQ    CPU2OLD,,AUTO
         1 000431   000434 601000 1                  TNZ     s:1477

      450     1475    5                    THEN CPU_NEW = CPU2NEW;

   1475  1 000432   200021 236100                    LDQ     CPU2NEW,,AUTO
         1 000433   200022 756100                    STQ     CPU_NEW,,AUTO

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:80   
      451     1476    5                    END;

      452     1477    4                 IF CPU_NEW >= 0

   1477  1 000434   200022 236100                    LDQ     CPU_NEW,,AUTO
         1 000435   000475 604000 1                  TMI     s:1492

      453     1478    5                 THEN DO;

      454     1479                         %LOCK (G#=S_SCHDGATE);

   1480  1 000436   000013 630400 2                  EPPR0   11
         1 000437   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000440   000000 701000 xent               TSX1    HFC$LOCK
         1 000441   000000 011000                    NOP     0

      455     1482    5                    B$USRT$->B$USER.CPU(I) = CPU_NEW;

   1482  1 000442   200004 235100                    LDA     I,,AUTO
         1 000443   000004 735000                    ALS     4
         1 000444   000000 470400 xsym               LDP0    B$USRT$
         1 000445   200022 236100                    LDQ     CPU_NEW,,AUTO
         1 000446   000010 676105                    ERQ     8,AL,PR0
         1 000447   000777 376007                    ANQ     511,DL
         1 000450   000010 656105                    ERSQ    8,AL,PR0

      456     1483    5                    CPUM.KPARMS.USER = B$USRT$->B$USER.SYSID(I);

   1483  1 000451   000000 470400 xsym               LDP0    B$USRT$
         1 000452   000014 236105                    LDQ     12,AL,PR0
         1 000453   777777 376007                    ANQ     -1,DL
         1 000454   200011 756100                    STQ     CPUM+3,,AUTO

      457     1484                         %UNLOCK (G#=S_SCHDGATE);

   1485  1 000455   000013 630400 2                  EPPR0   11
         1 000456   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:81   
         1 000457   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000460   000000 011000                    NOP     0

      458     1487    5                    IF CPU_NEW = 0

   1487  1 000461   200022 235100                    LDA     CPU_NEW,,AUTO
         1 000462   000475 601000 1                  TNZ     s:1492

      459     1488    5                    THEN CALL OCI$MK_WR(

   1488  1 000463   200011 630500                    EPPR0   CPUM+3,,AUTO
         1 000464   200032 450500                    STP0    @CPU+5,,AUTO
         1 000465   000016 237000 2                  LDAQ    14
         1 000466   200030 757100                    STAQ    @CPU+3,,AUTO
         1 000467   000020 237000 2                  LDAQ    16
         1 000470   200026 757100                    STAQ    @CPU+1,,AUTO
         1 000471   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000472   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000473   000000 701000 xent               TSX1    OCI$MK_WR
         1 000474   000000 011000                    NOP     0

      460     1489    5                         M_SYS,RESETCPU_MSG#,1,CPUML,CPUM.KPARMS.USER);
      461     1490    5                    END;

      462     1491    4                 END;

      463     1492    3              END;

   1492  1 000475   200004 054100                    AOS     I,,AUTO
         1 000476   000000 236000 xsym               LDQ     B_MUAIS
         1 000477   000374 604000 1                  TMI     s:1467
         1 000500   200004 116100                    CMPQ    I,,AUTO
         1 000501   000374 605000 1                  TPL     s:1467

      464     1493    2   END CHK_CPUREQ;

   1493  1 000502   200014 221300                    LDX1  ! CPUM+6,,AUTO
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:82   
         1 000503   000001 702211                    TSX2  ! 1,X1

      465     1494        /*
      466     1495            Proc for finding a running CPU of the same type as logical CPU CPU#.
      467     1496        */
      468     1497    1   FIND_TYPE: PROC(CPU);

   1497  1 000504   200024 741300       FIND_TYPE    STX1  ! CPU_NEW+2,,AUTO

      469     1498    2   DCL CPU UBIN;
      470     1499        /**/
      471     1500    2           CPU = 0;

   1500  1 000505   200025 470500                    LDP0    @CPU,,AUTO
         1 000506   000000 450100                    STZ     0,,PR0

      472     1501    2           CALL SSS$CACHEBP;

   1501  1 000507   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000510   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000511   000000 011000                    NOP     0

      473     1502    3           DO I = S_NSCPU DOWNTO 0;

   1502  1 000512   000000 235000 xsym               LDA     S_NSCPU
         1 000513   200004 755100                    STA     I,,AUTO
         1 000514   000534 710000 1                  TRA     s:1505+2

      474     1503    3              IF S_MPSTATE(I) = %SS_RUN# AND S_PTYPE(I) = S_PTYPE(CPU#)

   1503  1 000515   200004 720100                    LXL0    I,,AUTO
         1 000516   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000517   000002 115007                    CMPA    2,DL
         1 000520   000532 601000 1                  TNZ     s:1505
         1 000521   200003 470500                    LDP0    @CPU#,,AUTO
         1 000522   000000 721100                    LXL1    0,,PR0
         1 000523   000000 236010 xsym               LDQ     S_PTYPE,X0
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:83   
         1 000524   000000 116011 xsym               CMPQ    S_PTYPE,X1
         1 000525   000532 601000 1                  TNZ     s:1505

      475     1504    3              THEN CPU = I+1;

   1504  1 000526   200004 235100                    LDA     I,,AUTO
         1 000527   000001 035007                    ADLA    1,DL
         1 000530   200025 471500                    LDP1    @CPU,,AUTO
         1 000531   100000 755100                    STA     0,,PR1

      476     1505    3              END;

   1505  1 000532   000001 336007                    LCQ     1,DL
         1 000533   200004 056100                    ASQ     I,,AUTO
         1 000534   200004 235100                    LDA     I,,AUTO
         1 000535   000515 605000 1                  TPL     s:1503

      477     1506    2           CALL SSS$CACHE;

   1506  1 000536   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000537   000000 701000 xent               TSX1    SSS$CACHE
         1 000540   000000 011000                    NOP     0

      478     1507    2   END FIND_TYPE;

   1507  1 000541   200024 221300                    LDX1  ! CPU_NEW+2,,AUTO
         1 000542   000001 702211                    TSX2  ! 1,X1

      479     1508        %EJECT;
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:84   
      480     1509        /*   Proc to write message about CPU status to OC.                    */
      481     1510    1   MK_WR:  PROC (MSG#);

   1510  1 000543   200014 741300       MK_WR        STX1  ! CPUM+6,,AUTO

      482     1511    2   DCL MSG# UBIN;
      483     1512        /*                                                                    */
      484     1513    2           CPUM.KPARMS.MSTR=CPU#;

   1513  1 000544   200003 470500                    LDP0    @CPU#,,AUTO
         1 000545   000000 235100                    LDA     0,,PR0
         1 000546   200010 755100                    STA     CPUM+2,,AUTO

      485     1514    2           CPUM.KPARMS.CODE=MSG#;

   1514  1 000547   200015 471500                    LDP1    @MSG#,,AUTO
         1 000550   100000 235100                    LDA     0,,PR1
         1 000551   200012 755100                    STA     CPUM+4,,AUTO

      486     1515    2           CPUM.KPARMS.PORT=S_PORTNR(CPU#);

   1515  1 000552   000000 720100                    LXL0    0,,PR0
         1 000553   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000554   200007 755100                    STA     CPUM+1,,AUTO

      487     1516    2           CPUM.KPARMS.USER=0;

   1516  1 000555   200011 450100                    STZ     CPUM+3,,AUTO

      488     1517    2           CALL OCI$MK_WR(M_SYS,CPU_MSG#,4,CPUML,CPUM.KPARMS);

   1517  1 000556   200007 633500                    EPPR3   CPUM+1,,AUTO
         1 000557   200032 453500                    STP3    @CPU+5,,AUTO
         1 000560   000006 237000 2                  LDAQ    6
         1 000561   200030 757100                    STAQ    @CPU+3,,AUTO
         1 000562   000022 237000 2                  LDAQ    18
         1 000563   200026 757100                    STAQ    @CPU+1,,AUTO
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:85   
         1 000564   200026 630500                    EPPR0   @CPU+1,,AUTO
         1 000565   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000566   000000 701000 xent               TSX1    OCI$MK_WR
         1 000567   000000 011000                    NOP     0

      489     1518    2           RETURN;

   1518  1 000570   200014 221300                    LDX1  ! CPUM+6,,AUTO
         1 000571   000001 702211                    TSX2  ! 1,X1

CPUML
 Sect OctLoc
   0     000   004004 004004                                                    ....

(unnamed)
 Sect OctLoc
   2     000   000012 006000   000003 006000   000002 006000   200000 000000    ................
   2     004   000000 000112   000030 006000   000006 006000   000000 006000    ...J............
   2     010   000003 006000   000004 006000   000007 006000   000000 006000    ................
   2     014   000000 000111   000000 000106   000003 006000   000000 006000    ...I...F........
   2     020   000003 006000   000014 006000   000003 006000   000015 006000    ................
      490     1519    2   END;
      491     1520    1   END SSW$STCHK;
      492     1521        /**/
      493     1522        /**/
      494     1523        %EOD;

PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:86   
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$STCHK.
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:87   

 **** Variables and constants ****

  ****  Section 000 RoData SSW$STCHK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(9)     r     1 CPUML(0:3)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    25-0-0/w PTR         r     1 @CPU                       3-0-0/w PTR         r     1 @CPU#
    15-0-0/w PTR         r     1 @MAKE                     15-0-0/w PTR         r     1 @MSG#
    *0-0-0/w UBIN        r     1 CPU                       *0-0-0/w UBIN        r     1 CPU#
    17-0-0/w UBIN        r     1 CPU1NEW                   16-0-0/w UBIN        r     1 CPU1OLD
    21-0-0/w UBIN        r     1 CPU2NEW                   20-0-0/w UBIN        r     1 CPU2OLD
     6-0-0/w STRC(180)   r     1 CPUM                      22-0-0/w SBIN        r     1 CPU_NEW
     4-0-0/w SBIN        r     1 I                          6-0-0/w STRC(180)   r     1 KMSG
    *0-0-0/w BIT         r     1 MAKE                      *0-0-0/w UBIN        r     1 MSG#
     5-0-0/w UBIN        r     1 STARTED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$USRT$                    0-0-0/w UBIN        r     1 B_MUAIS
     0-0-0/b BIT         r     1 H_MAKE_IN_PROGRESS         0-0-0/w SBIN        r     1 H_MIXED_MP
     0-0-0/w UBIN        r     1 S_MING
     0-0-0/w SBIN        r     1 S_MIN_HUNG(0:7)
     0-0-0/w SBIN        r     1 S_MPSTATE(0:7)
     0-0-0/w UBIN        r     1 S_NSCPU                    0-0-0/w UBIN        r     1 S_NSCPUA
     0-0-0/w SBIN        r     1 S_PCU(0:7)
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:88   
     0-0-0/w SBIN        r     1 S_PTYPE(0:7)
     0-0-0/b BIT (72)    r     1 S_SCHDGATE
     0-0-0/w SBIN        r     1 S_STIME(0:7)
     0-0-0/w SBIN        r     1 S_STOP(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(576)   r     1 B$USER(0:0)


   Procedure SSW$STCHK requires 378 words for executable code.
   Procedure SSW$STCHK requires 28 words of local(AUTO) storage.
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:89   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:90   
          MINI XREF LISTING

B$DO.ECCINFO
       981**DCL       982--REDEF
B$U.MISC
       960**DCL       961--REDEF
B$USER.CPU
      1022**DCL      1467>>IF       1471>>IF       1474>>IF       1482<<ASSIGN
B$USER.MISC
      1036**DCL      1037--REDEF
B$USER.SYSID
      1031**DCL      1367>>ASSIGN   1483>>ASSIGN
B$USER.US
      1023**DCL      1467>>IF
B$USRT$
      1048**DCL      1367>>ASSIGN   1467>>IF       1467>>IF       1471>>IF       1474>>IF       1482>>ASSIGN
      1483>>ASSIGN
B_MUAIS
      1304**DCL      1466>>DOINDEX
CHK_CPUREQ
      1443**PROC     1360--CALL     1431--CALL
CNTSTOP
      1345**LABEL    1381--GOTO
CPU IN PROCEDURE FIND_TYPE
      1498**DCL      1497--PROC     1500<<ASSIGN   1504<<ASSIGN
CPU#
      1299**DCL         9--PROC     1343>>IF       1345>>ASSIGN   1354>>CALL     1359<>CALL     1364--ENTRY
      1366>>ASSIGN   1367>>ASSIGN   1368>>IF       1369<>CALL     1378--ENTRY    1380>>IF       1389>>CALL
      1390<>CALL     1396>>ASSIGN   1398<>CALL     1404>>CALL     1421>>ASSIGN   1422>>ASSIGN   1426<>CALL
      1453>>ASSIGN   1461>>ASSIGN   1462>>IF       1503>>IF       1513>>ASSIGN   1515>>ASSIGN
CPU1NEW IN PROCEDURE CHK_CPUREQ
      1448**DCL      1455<>CALL     1457<<ASSIGN   1472>>ASSIGN
CPU1OLD IN PROCEDURE CHK_CPUREQ
      1447**DCL      1453<<ASSIGN   1471>>IF
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:91   
CPU2NEW IN PROCEDURE CHK_CPUREQ
      1450**DCL      1460<>CALL     1461<<ASSIGN   1475>>ASSIGN
CPU2OLD IN PROCEDURE CHK_CPUREQ
      1449**DCL      1458<<ASSIGN   1474>>IF
CPUM
      1321**DCL      1328--REDEF
CPUM.KPARMS
      1323**DCL      1371<>CALL     1517<>CALL
CPUM.KPARMS.CODE
      1327**DCL      1336--DCLINIT  1514<<ASSIGN
CPUM.KPARMS.MSTR
      1325**DCL      1334--DCLINIT  1513<<ASSIGN
CPUM.KPARMS.PORT
      1324**DCL      1333--DCLINIT  1366<<ASSIGN   1515<<ASSIGN
CPUM.KPARMS.USER
      1326**DCL      1335--DCLINIT  1367<<ASSIGN   1483<<ASSIGN   1488<>CALL     1516<<ASSIGN
CPUML
      1333**DCL      1371<>CALL     1488<>CALL     1517<>CALL
CPU_NEW IN PROCEDURE CHK_CPUREQ
      1451**DCL      1470<<ASSIGN   1472<<ASSIGN   1475<<ASSIGN   1477>>IF       1482>>ASSIGN   1487>>IF
FIND_TYPE
      1497**PROC     1455--CALL     1460--CALL
HFA$STARTCPU
      1312**DCL-ENT  1413--CALL
HFA$STOPCPU
      1311**DCL-ENT  1385--CALL
HFB$DISPORT
      1314**DCL-ENT  1354--CALL     1404--CALL
HFB$ENAPORT
      1313**DCL-ENT  1389--CALL
HFC$LOCK
      1296**DCL-ENT  1480--CALL
HFC$MAKECPU
      1316**DCL-ENT  1398--CALL
HFC$STCPU
      1315**DCL-ENT  1390--CALL
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:92   
HFC$UNLOCK
      1296**DCL-ENT  1485--CALL
H_MAKE_IN_PROGRESS
        34**DCL      1346<<ASSIGN   1412<<ASSIGN
H_MIXED_MP
        34**DCL      1403>>IF       1425>>IF       1459>>IF
I
      1300**DCL      1406<<DOINDEX  1408>>IF       1421<<ASSIGN   1423>>ASSIGN   1466<<DOINDEX  1467>>IF
      1467>>IF       1471>>IF       1474>>IF       1482>>ASSIGN   1483>>ASSIGN   1502<<DOINDEX  1503>>IF
      1503>>IF       1504>>ASSIGN
KMSG
      1328**DCL      1350<>CALL     1430<>CALL
KMSG.CADDR
      1330**DCL      1349<<ASSIGN   1429<<ASSIGN
KMSG.MSG#
      1329**DCL      1348<<ASSIGN   1427<<ASSIGN
KMSG.PORT
      1331**DCL      1428<<ASSIGN
MAKE IN PROCEDURE CHK_CPUREQ
      1444**DCL      1443--PROC     1454>>IF       1474>>IF
MK_WR
      1510**PROC     1347--CALL     1355--CALL     1434--CALL
MSG# IN PROCEDURE MK_WR
      1511**DCL      1510--PROC     1514>>ASSIGN
OCI$MK_WR
      1317**DCL-ENT  1371--CALL     1488--CALL     1517--CALL
SSS$CACHE
      1307**DCL-ENT  1370--CALL     1506--CALL
SSS$CACHEBP
      1306**DCL-ENT  1342--CALL     1365--CALL     1379--CALL     1395--CALL     1405--CALL     1501--CALL
SSW$BYPASSCACHE
      1309**DCL-ENT  1386--CALL
SSW$CTLCPU
      1310**DCL-ENT  1350--CALL     1430--CALL
SSW$LOGSTRT
      1319**DCL-ENT  1359--CALL     1369--CALL     1424--CALL     1426--CALL
PL6.E3A0      #002=SSW$STCHK File=SSW$STARTKI.:E05TSI                            WED 07/30/97 06:01 Page:93   
SSW$USECACHE
      1308**DCL-ENT  1358--CALL     1416--CALL
STARTED
      1301**DCL      1396<<ASSIGN   1397>>IF       1403>>IF       1419>>IF
S_MING
      1303**DCL      1466>>DOINDEX
S_MIN_HUNG
        93**DCL      1368>>IF
S_MPSTATE
        85**DCL      1343>>IF       1380>>IF       1396>>ASSIGN   1408>>IF       1503>>IF
S_NSCPU
        86**DCL      1406>>DOINDEX  1502>>DOINDEX
S_NSCPUA
        86**DCL      1356<<ASSIGN   1356>>ASSIGN   1357>>IF       1394<<ASSIGN   1409<<ASSIGN   1409>>ASSIGN
      1415>>IF
S_PCU
        85**DCL      1367>>ASSIGN
S_PORTNR
        85**DCL      1354<>CALL     1366>>ASSIGN   1389<>CALL     1404<>CALL     1462>>IF       1462>>IF
      1463<<ASSIGN   1515>>ASSIGN
S_PTYPE
        86**DCL      1503>>IF       1503>>IF
S_SCHDGATE
        97**DCL      1480<>CALL     1485<>CALL
S_STIME
        86**DCL      1421>>ASSIGN   1422<<ASSIGN   1422>>ASSIGN   1423<<ASSIGN
S_STOP
        85**DCL      1345<<ASSIGN

PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:94   
      495        1        /*T***********************************************************/
      496        2        /*T*                                                         */
      497        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      498        4        /*T*                                                         */
      499        5        /*T***********************************************************/
      500        6        /*                                                                    */
      501        7        /*         SET/RESET BYPASS CACHE FLAGS                               */
      502        8        /*                                                                    */
      503        9        SSW$USECACHE: PROC;
      504       10        /*                                                                    */
      505       11        %INCLUDE B_STRINGS_C;
      506      140        %INCLUDE B_SEGIDS_C;
      507      679    1   DCL B$LS$ PTR SYMREF;
      508      680        %INCLUDE HF_DATA_R;
      509      723        /*                                                                    */
      510      724        %SUB NUMSEGID=31;
      511      725    1   DCL KQM$BYPASSCACHE ENTRY ALTRET;
      512      726    1   DCL KQM$USECACHE ENTRY ALTRET;
      513      727    1   DCL 1 DSC(0:0) BASED DALIGNED,
      514      728    1         2 * BIT(23),
      515      729    1         2 CAC BIT(1),
      516      730    1         2 * BIT(48);
      517      731    1   DCL SEGIDTBL(0:NUMSEGID) CONSTANT UNAL
      518      732    1          BIT(12) INIT(
      519      733    1           %DS1SID,
      520      734    1           %DS2SID,
      521      735    1           %DS3SID,
      522      736    1           %DS4SID,
      523      737    1           %DS5SID,
      524      738    1           %DS6SID,
      525      739    1           %DS7SID,
      526      740    1           %ISBSID,
      527      741    1           %CGCTXTSID,
      528      742    1           %CGPTSID,
      529      743    1           %CPGT1SID,
      530      744    1           %CPGT2SID,
      531      745    1           %CPGT3SID,
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:95   
      532      746    1           %CPGT4SID,
      533      747    1           %CPGT5SID,
      534      748    1           %CPGT6SID,
      535      749    1           %CPGT7SID,
      536      750    1           %CPGT8SID,
      537      751    1           %CPGT9SID,
      538      752    1           %CPGT10SID,
      539      753    1           %CPGT11SID,
      540      754    1           %CPGT12SID,
      541      755    1           %CPGT13SID,
      542      756    1           %CPGT14SID,
      543      757    1           %CPGT15SID,
      544      758    1           %CPGT16SID,
      545      759    1           %PPUTSID,
      546      760    1           %MOUSESID,
      547      761    1           %TIGRSID,
      548      762    1           %RONCSID,
      549      763    1           %LDCTNCSID,
      550      764    1           %FIRMSID);
      551      765        /*                                                                    */
      552      766    1   DCL I UBIN;
      553      767    2           DO I=0 TO NUMSEGID;
      554      768    2              B$LS$ -> DSC.CAC(BITBIN(SEGIDTBL(I)&'1777'O))='1'B;
      555      769    2              END;
      556      770    1           IF NOT HW_SMART_CACHE THEN CALL KQM$USECACHE; /* FIX UP CG DESCRIPTORS */
      557      771    1           RETURN;
      558      772        /*                                                                    */
      559      773    1   SSW$BYPASSCACHE: ENTRY;
      560      774        /*                                                                    */
      561      775    2           DO I=0 TO NUMSEGID;
      562      776    2              B$LS$ -> DSC.CAC(BITBIN(SEGIDTBL(I)&'1777'O))='0'B;
      563      777    2              END;
      564      778    1           IF NOT HW_SMART_CACHE THEN CALL KQM$BYPASSCACHE; /* FIX UP CG DESCRIPTORS */
      565      779    1           RETURN;
      566      780    1   END;
      567      781        %EOD;

PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:96   
--  Include file information  --

   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSW$USECACHE.

   Procedure SSW$USECACHE requires 54 words for executable code.
   Procedure SSW$USECACHE requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:97   

 Object Unit name= SSW$USECACHE                               File name= SSW$STARTKI.:E05TOU
 UTS= JUL 30 '97 06:02:12.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     11     13  SSW$USECACHE
    1   Proc  even  none    54     66  SSW$USECACHE
    2  RoData even  none     1      1  SSW$USECACHE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  SSW$USECACHE
     1     33                  yes      Std        0  SSW$BYPASSCACHE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 KQM$USECACHE
 yes     yes           Std       0 KQM$BYPASSCACHE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$LS$                                 HW_SMART_CACHE                        B_VECTNIL
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:98   


      495        1        /*T***********************************************************/
      496        2        /*T*                                                         */
      497        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      498        4        /*T*                                                         */
      499        5        /*T***********************************************************/
      500        6        /*                                                                    */
      501        7        /*         SET/RESET BYPASS CACHE FLAGS                               */
      502        8        /*                                                                    */
      503        9        SSW$USECACHE: PROC;

      9  1 000000   000000 700200 xent  SSW$USECACHE TSX0  ! X66_AUTO_0
         1 000001   000006 000000                    ZERO    6,0

      504       10        /*                                                                    */
      505       11        %INCLUDE B_STRINGS_C;
      506      140        %INCLUDE B_SEGIDS_C;
      507      679    1   DCL B$LS$ PTR SYMREF;
      508      680        %INCLUDE HF_DATA_R;
      509      723        /*                                                                    */
      510      724        %SUB NUMSEGID=31;
      511      725    1   DCL KQM$BYPASSCACHE ENTRY ALTRET;
      512      726    1   DCL KQM$USECACHE ENTRY ALTRET;
      513      727    1   DCL 1 DSC(0:0) BASED DALIGNED,
      514      728    1         2 * BIT(23),
      515      729    1         2 CAC BIT(1),
      516      730    1         2 * BIT(48);
      517      731    1   DCL SEGIDTBL(0:NUMSEGID) CONSTANT UNAL
      518      732    1          BIT(12) INIT(
      519      733    1           %DS1SID,
      520      734    1           %DS2SID,
      521      735    1           %DS3SID,
      522      736    1           %DS4SID,
      523      737    1           %DS5SID,
      524      738    1           %DS6SID,
      525      739    1           %DS7SID,
      526      740    1           %ISBSID,
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:99   
      527      741    1           %CGCTXTSID,
      528      742    1           %CGPTSID,
      529      743    1           %CPGT1SID,
      530      744    1           %CPGT2SID,
      531      745    1           %CPGT3SID,
      532      746    1           %CPGT4SID,
      533      747    1           %CPGT5SID,
      534      748    1           %CPGT6SID,
      535      749    1           %CPGT7SID,
      536      750    1           %CPGT8SID,
      537      751    1           %CPGT9SID,
      538      752    1           %CPGT10SID,
      539      753    1           %CPGT11SID,
      540      754    1           %CPGT12SID,
      541      755    1           %CPGT13SID,
      542      756    1           %CPGT14SID,
      543      757    1           %CPGT15SID,
      544      758    1           %CPGT16SID,
      545      759    1           %PPUTSID,
      546      760    1           %MOUSESID,
      547      761    1           %TIGRSID,
      548      762    1           %RONCSID,
      549      763    1           %LDCTNCSID,
      550      764    1           %FIRMSID);
      551      765        /*                                                                    */
      552      766    1   DCL I UBIN;
      553      767    2           DO I=0 TO NUMSEGID;

    767  1 000002   200003 450100                    STZ     I,,AUTO

      554      768    2              B$LS$ -> DSC.CAC(BITBIN(SEGIDTBL(I)&'1777'O))='1'B;

    768  1 000003   200003 235100                    LDA     I,,AUTO
         1 000004   000001 735000                    ALS     1
         1 000005   000100 100405                    MLR     fill='000'O
         1 000006   000000 020002 0                  ADSC6   SEGIDTBL,A               cn=0,n=2
         1 000007   200004 020006                    ADSC6   I+1,,AUTO                cn=0,n=6
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:100  
         1 000010   200004 236100                    LDQ     I+1,,AUTO
         1 000011   177700 376003                    ANQ     65472,DU
         1 000012   000030 772000                    QRL     24
         1 000013   000001 736000                    QLS     1
         1 000014   000000 470400 xsym               LDP0    B$LS$
         1 000015   000000 620006                    EAX0    0,QL
         1 000016   010000 236007                    LDQ     4096,DL
         1 000017   000000 256110                    ORSQ    0,X0,PR0

      555      769    2              END;

    769  1 000020   200003 235100                    LDA     I,,AUTO
         1 000021   000001 035007                    ADLA    1,DL
         1 000022   200003 755100                    STA     I,,AUTO
         1 000023   000040 115007                    CMPA    32,DL
         1 000024   000003 602000 1                  TNC     s:768

      556      770    1           IF NOT HW_SMART_CACHE THEN CALL KQM$USECACHE; /* FIX UP CG DESCRIPTORS */

    770  1 000025   000000 234000 xsym               SZN     HW_SMART_CACHE
         1 000026   000032 604000 1                  TMI     s:771

    770  1 000027   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000030   000000 701000 xent               TSX1    KQM$USECACHE
         1 000031   000000 011000                    NOP     0

      557      771    1           RETURN;

    771  1 000032   000000 702200 xent               TSX2  ! X66_ARET

      558      772        /*                                                                    */
      559      773    1   SSW$BYPASSCACHE: ENTRY;

    773  1 000033   000000 700200 xent  SSW$BYPASSC* TSX0  ! X66_AUTO_0
         1 000034   000006 000000                    ZERO    6,0

      560      774        /*                                                                    */
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:101  
      561      775    2           DO I=0 TO NUMSEGID;

    775  1 000035   200003 450100                    STZ     I,,AUTO

      562      776    2              B$LS$ -> DSC.CAC(BITBIN(SEGIDTBL(I)&'1777'O))='0'B;

    776  1 000036   200003 235100                    LDA     I,,AUTO
         1 000037   000001 735000                    ALS     1
         1 000040   000100 100405                    MLR     fill='000'O
         1 000041   000000 020002 0                  ADSC6   SEGIDTBL,A               cn=0,n=2
         1 000042   200004 020006                    ADSC6   I+1,,AUTO                cn=0,n=6
         1 000043   200004 236100                    LDQ     I+1,,AUTO
         1 000044   177700 376003                    ANQ     65472,DU
         1 000045   000030 772000                    QRL     24
         1 000046   000001 736000                    QLS     1
         1 000047   000000 470400 xsym               LDP0    B$LS$
         1 000050   000000 620006                    EAX0    0,QL
         1 000051   000000 236000 2                  LDQ     0
         1 000052   000000 356110                    ANSQ    0,X0,PR0

      563      777    2              END;

    777  1 000053   200003 235100                    LDA     I,,AUTO
         1 000054   000001 035007                    ADLA    1,DL
         1 000055   200003 755100                    STA     I,,AUTO
         1 000056   000040 115007                    CMPA    32,DL
         1 000057   000036 602000 1                  TNC     s:776

      564      778    1          IF NOT HW_SMART_CACHE THEN CALL KQM$BYPASSCACHE; /* FIX UP CG DESCRIPTORS */

    778  1 000060   000000 234000 xsym               SZN     HW_SMART_CACHE
         1 000061   000065 604000 1                  TMI     s:779

    778  1 000062   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000063   000000 701000 xent               TSX1    KQM$BYPASSCACHE
         1 000064   000000 011000                    NOP     0

PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:102  
      565      779    1           RETURN;

    779  1 000065   000000 702200 xent               TSX2  ! X66_ARET

SEGIDTBL
 Sect OctLoc
   0     000   600460 056006   600760 106011   601260 506164   616360 756076    ......F....t...>
   0     004   607761 006101   610261 036104   610561 066107   611061 116112    ...A...D..6G.1NJ
   0     010   611361 146116   612061 236124   613461 57****                    ..fN.1.T....

(unnamed)
 Sect OctLoc
   2     000   777777 767777                                                    ....
      566      780    1   END;
      567      781        %EOD;

PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:103  
--  Include file information  --

   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure SSW$USECACHE.
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:104  

 **** Variables and constants ****

  ****  Section 000 RoData SSW$USECACHE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT (12)    r     1 SEGIDTBL(0:31)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN        r     1 I

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LS$                      0-0-0/w BIT         r     1 HW_SMART_CACHE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(72)    r     1 DSC(0:0)


   Procedure SSW$USECACHE requires 54 words for executable code.
   Procedure SSW$USECACHE requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=SSW$USECACHE File=SSW$STARTKI.:E05TSI                         WED 07/30/97 06:02 Page:106  
          MINI XREF LISTING

B$LS$
       679**DCL       768>>ASSIGN    776>>ASSIGN
DSC.CAC
       729**DCL       768<<ASSIGN    776<<ASSIGN
HW_SMART_CACHE
       720**DCL       770>>IF        778>>IF
I
       766**DCL       767<<DOINDEX   768>>ASSIGN    775<<DOINDEX   776>>ASSIGN
KQM$BYPASSCACHE
       725**DCL-ENT   778--CALL
KQM$USECACHE
       726**DCL-ENT   770--CALL
SEGIDTBL
       731**DCL       768>>ASSIGN    776>>ASSIGN

PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:107  
      568        1        /*T***********************************************************/
      569        2        /*T*                                                         */
      570        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      571        4        /*T*                                                         */
      572        5        /*T***********************************************************/
      573        6        /*        LOG CPU STARTUP AND STOP                      */
      574        7        /*                                                                    */
      575        8        SSW$LOGSTRT: PROC(CPU#,HUNG);
      576        9        /*                                                                    */
      577       10    1   DCL CPU# UBIN;                          /* CPU INDEX                          */
      578       11    1   DCL HUNG UBIN;
      579       12        /*                                                                    */
      580       13    1   DCL ERR UBIN;
      581       14        /*                                                                    */
      582       15    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      583       16    1   DCL SSS$CACHEBP ENTRY;
      584       17    1   DCL SSS$CACHE ENTRY;
      585       18    1   DCL SSS$SYSTIME ENTRY(1);
      586       19        /*                                                                    */
      587       20        %INCLUDE SS_SCHED_R;
      588       63        %INCLUDE EL$TABLES;
      589      386        %INCLUDE EL_SUBS_C;
      590      470        /*                                                                    */
      591      471        %EL$CMPSTRT (NAME=INFO,STCLASS=AUTO);
      592      474        /*                                                                    */
      593      475    1           INFO.COMP_ID='CPU';
      594      476    1           CALL SSS$CACHEBP;
      595      477    1           INFO.PNO=CPU#;
      596      478    1           INFO.COMP#=S_PORTNR(CPU#);
      597      479    1           INFO.LAST_STATE_CHANGE = S_STIME(CPU#);
      598      480    1           IF ADDR(HUNG) = ADDR(NIL)
      599      481    1           THEN INFO.STATE=S_MPSTATE(CPU#);
      600      482    1           ELSE INFO.STATE=S_MPSTATE(CPU#)+8;
      601      483    1           CALL SSS$CACHE;
      602      484    1           CALL ELA$SYSLOG(EL_CMPSTRT,INFO,SIZEW(INFO),0,1,ERR);
      603      485    1           CALL SSS$SYSTIME(S_STIME(CPU#));
      604      486    1           RETURN;
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:108  
      605      487    1   END SSW$LOGSTRT;
      606      488        %EOD;

PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:109  
--  Include file information  --

   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$LOGSTRT.

   Procedure SSW$LOGSTRT requires 55 words for executable code.
   Procedure SSW$LOGSTRT requires 18 words of local(AUTO) storage.

PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:110  

 Object Unit name= SSW$LOGSTRT                                File name= SSW$STARTKI.:E05TOU
 UTS= JUL 30 '97 06:02:21.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  SSW$LOGSTRT
    1   Proc  even  none    55     67  SSW$LOGSTRT
    2  RoData even  none     7      7  SSW$LOGSTRT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  SSW$LOGSTRT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$CACHEBP
         yes           Std       0 SSS$CACHE
         yes           Std       1 SSS$SYSTIME
 yes     yes           Std       6 ELA$SYSLOG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:111  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     S_PORTNR                              S_MPSTATE                             S_STIME
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:112  


      568        1        /*T***********************************************************/
      569        2        /*T*                                                         */
      570        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      571        4        /*T*                                                         */
      572        5        /*T***********************************************************/
      573        6        /*        LOG CPU STARTUP AND STOP                      */
      574        7        /*                                                                    */
      575        8        SSW$LOGSTRT: PROC(CPU#,HUNG);

      8  1 000000   000000 700200 xent  SSW$LOGSTRT  TSX0  ! X66_AUTO_2
         1 000001   000022 000002                    ZERO    18,2

      576        9        /*                                                                    */
      577       10    1   DCL CPU# UBIN;                          /* CPU INDEX                          */
      578       11    1   DCL HUNG UBIN;
      579       12        /*                                                                    */
      580       13    1   DCL ERR UBIN;
      581       14        /*                                                                    */
      582       15    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
      583       16    1   DCL SSS$CACHEBP ENTRY;
      584       17    1   DCL SSS$CACHE ENTRY;
      585       18    1   DCL SSS$SYSTIME ENTRY(1);
      586       19        /*                                                                    */
      587       20        %INCLUDE SS_SCHED_R;
      588       63        %INCLUDE EL$TABLES;
      589      386        %INCLUDE EL_SUBS_C;
      590      470        /*                                                                    */
      591      471        %EL$CMPSTRT (NAME=INFO,STCLASS=AUTO);
      592      474        /*                                                                    */
      593      475    1           INFO.COMP_ID='CPU';

    475  1 000002   000000 236000 0                  LDQ     0
         1 000003   000000 376000 2                  ANQ     0
         1 000004   000040 276007                    ORQ     32,DL
         1 000005   200006 756100                    STQ     INFO,,AUTO

PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:113  
      594      476    1           CALL SSS$CACHEBP;

    476  1 000006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000007   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000010   000000 011000                    NOP     0

      595      477    1           INFO.PNO=CPU#;

    477  1 000011   200003 470500                    LDP0    @CPU#,,AUTO
         1 000012   000000 235100                    LDA     0,,PR0
         1 000013   200010 755100                    STA     INFO+2,,AUTO

      596      478    1           INFO.COMP#=S_PORTNR(CPU#);

    478  1 000014   000000 720100                    LXL0    0,,PR0
         1 000015   000000 235010 xsym               LDA     S_PORTNR,X0
         1 000016   200007 755100                    STA     INFO+1,,AUTO

      597      479    1           INFO.LAST_STATE_CHANGE = S_STIME(CPU#);

    479  1 000017   000000 720100                    LXL0    0,,PR0
         1 000020   000000 235010 xsym               LDA     S_STIME,X0
         1 000021   200011 755100                    STA     INFO+3,,AUTO

      598      480    1           IF ADDR(HUNG) = ADDR(NIL)

    480  1 000022   200004 236100                    LDQ     @HUNG,,AUTO
         1 000023   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000024   000031 601000 1                  TNZ     s:482

      599      481    1           THEN INFO.STATE=S_MPSTATE(CPU#);

    481  1 000025   000000 720100                    LXL0    0,,PR0
         1 000026   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000027   200013 755100                    STA     INFO+5,,AUTO
         1 000030   000035 710000 1                  TRA     s:483

PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:114  
      600      482    1           ELSE INFO.STATE=S_MPSTATE(CPU#)+8;

    482  1 000031   000000 720100                    LXL0    0,,PR0
         1 000032   000000 235010 xsym               LDA     S_MPSTATE,X0
         1 000033   000010 035007                    ADLA    8,DL
         1 000034   200013 755100                    STA     INFO+5,,AUTO

      601      483    1           CALL SSS$CACHE;

    483  1 000035   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000036   000000 701000 xent               TSX1    SSS$CACHE
         1 000037   000000 011000                    NOP     0

      602      484    1           CALL ELA$SYSLOG(EL_CMPSTRT,INFO,SIZEW(INFO),0,1,ERR);

    484  1 000040   200005 630500                    EPPR0   ERR,,AUTO
         1 000041   200021 450500                    STP0    INFO+11,,AUTO
         1 000042   000002 236000 2                  LDQ     2
         1 000043   200020 756100                    STQ     INFO+10,,AUTO
         1 000044   000004 237000 2                  LDAQ    4
         1 000045   200016 757100                    STAQ    INFO+8,,AUTO
         1 000046   200006 631500                    EPPR1   INFO,,AUTO
         1 000047   200015 451500                    STP1    INFO+7,,AUTO
         1 000050   000006 236000 2                  LDQ     6
         1 000051   200014 756100                    STQ     INFO+6,,AUTO
         1 000052   200014 630500                    EPPR0   INFO+6,,AUTO
         1 000053   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000054   000000 701000 xent               TSX1    ELA$SYSLOG
         1 000055   000000 011000                    NOP     0

      603      485    1           CALL SSS$SYSTIME(S_STIME(CPU#));

    485  1 000056   200003 470500                    LDP0    @CPU#,,AUTO
         1 000057   000000 720100                    LXL0    0,,PR0
         1 000060   000000 631410 xsym               EPPR1   S_STIME,X0
         1 000061   200014 451500                    STP1    INFO+6,,AUTO
         1 000062   200014 630500                    EPPR0   INFO+6,,AUTO
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:115  
         1 000063   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000064   000000 701000 xent               TSX1    SSS$SYSTIME
         1 000065   000000 011000                    NOP     0

      604      486    1           RETURN;

    486  1 000066   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   103120 125040                                                    CPU

(unnamed)
 Sect OctLoc
   2     000   777777 777000   000000 000145   000003 006000   000000 000000    .......e........
   2     004   000010 006000   000002 006000   000001 006000                    ............
      605      487    1   END SSW$LOGSTRT;
      606      488        %EOD;

PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:116  
--  Include file information  --

   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$LOGSTRT.
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:117  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CPU#                      4-0-0/w PTR         r     1 @HUNG
    *0-0-0/w UBIN        r     1 CPU#                       5-0-0/w UBIN        r     1 ERR
    *0-0-0/w UBIN        r     1 HUNG                       6-0-0/w STRC(216)   r     1 INFO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 S_MPSTATE(0:7)
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)
     0-0-0/w SBIN        r     1 S_STIME(0:7)


   Procedure SSW$LOGSTRT requires 55 words for executable code.
   Procedure SSW$LOGSTRT requires 18 words of local(AUTO) storage.
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:118  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:119  
          MINI XREF LISTING

CPU#
        10**DCL         8--PROC      477>>ASSIGN    478>>ASSIGN    479>>ASSIGN    481>>ASSIGN    482>>ASSIGN
       485>>CALL
ELA$SYSLOG
        15**DCL-ENT   484--CALL
ERR
        13**DCL       484<>CALL
HUNG
        11**DCL         8--PROC      480--IF
INFO
       472**DCL       484<>CALL      484--CALL
INFO.COMP#
       472**DCL       478<<ASSIGN
INFO.COMP_ID
       472**DCL       475<<ASSIGN
INFO.LAST_STATE_CHANGE
       472**DCL       479<<ASSIGN
INFO.PNO
       472**DCL       477<<ASSIGN
INFO.STATE
       472**DCL       481<<ASSIGN    482<<ASSIGN
SSS$CACHE
        17**DCL-ENT   483--CALL
SSS$CACHEBP
        16**DCL-ENT   476--CALL
SSS$SYSTIME
        18**DCL-ENT   485--CALL
S_MPSTATE
        49**DCL       481>>ASSIGN    482>>ASSIGN
S_PORTNR
        49**DCL       478>>ASSIGN
S_STIME
PL6.E3A0      #004=SSW$LOGSTRT File=SSW$STARTKI.:E05TSI                          WED 07/30/97 06:02 Page:120  
        50**DCL       479>>ASSIGN    485<>CALL

PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:121  
      607        1        /*T***********************************************************/
      608        2        /*T*                                                         */
      609        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      610        4        /*T*                                                         */
      611        5        /*T***********************************************************/
      612        6        /*     RESIDENT ZAP PROCEDURE                                         */
      613        7        /*                                                                    */
      614        8        SSW$ZAP: PROC(J);
      615        9        /*                                                                    */
      616       10    1   DCL J UBIN;                             /* TIME SINCE INITIAL CALL            */
      617       11        /*                                                                    */
      618       12    1   DCL BUSY UBIN;
      619       13    1   DCL I UBIN;
      620       14    1   DCL ZAPINC UBIN STATIC INIT(300);       /* 3 SEC WAIT INTERVAL                */
      621       15    1   DCL S_MING UBIN SYMREF;
      622       16    1   DCL B_MUAIS UBIN SYMREF;
      623       17    1   DCL SSR$RUE ENTRY(4);
      624       18    1   DCL SSC$MONTIMR ENTRY(3);
      625       19    1   DCL OCI$MK_WR ENTRY(7);
      626       20        /*                                                                    */
      627       21        %INCLUDE B$USER;
      628      237        %B$USERREFS;
      629      241        %INCLUDE SS_SCHED_C;
      630      474        %INCLUDE OC_SUBS_C;
      631     1205        %INCLUDE JG_GHOSTS_C;
      632     1295        /*                                                                    */
      633     1296        /*                                                                    */
      634     1297    1           BUSY=0;
      635     1298    2           DO I = JG_GOOSE# TO B_MUAIS;
      636     1299    2              IF B$USRT$->B$USER.US(I) ~= %SS_SNULL
      637     1300    2                AND I ~= JG_JAYS#
      638     1301    3              THEN DO;
      639     1302    3                 BUSY=BUSY+1;
      640     1303    3                 IF J = 10*ZAPINC OR J = 15*ZAPINC THEN
      641     1304    3                    CALL SSR$RUE(%SS_ABRT,I);
      642     1305    3                 END;
      643     1306    2              END;
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:122  
      644     1307    1           IF J = 20*ZAPINC OR BUSY = 0 THEN
      645     1308    1              CALL OCI$MK_WR(M_SYS,PREZAP_MSG#,0,0,0);
      646     1309    1           ELSE
      647     1310    1              CALL SSC$MONTIMR(ZAPINC,ENTADDR(SSW$ZAP),J+ZAPINC);
      648     1311    1           RETURN;
      649     1312    1   END;

PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:123  
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$ZAP.

   Procedure SSW$ZAP requires 74 words for executable code.
   Procedure SSW$ZAP requires 14 words of local(AUTO) storage.

    No errors detected in file SSW$STARTKI.:E05TSI    .

PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:124  

 Object Unit name= SSW$ZAP                                    File name= SSW$STARTKI.:E05TOU
 UTS= JUL 30 '97 06:02:27.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  SSW$ZAP
    1   Proc  even  none    74    112  SSW$ZAP
    2  RoData even  none    10     12  SSW$ZAP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  SSW$ZAP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       4 SSR$RUE
         yes           Std       7 OCI$MK_WR
         yes           Std       3 SSC$MONTIMR
         yes           Std       1 SSW$ZAP
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:125  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_MUAIS                               B$USRT$                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:126  


      607        1        /*T***********************************************************/
      608        2        /*T*                                                         */
      609        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      610        4        /*T*                                                         */
      611        5        /*T***********************************************************/
      612        6        /*     RESIDENT ZAP PROCEDURE                                         */
      613        7        /*                                                                    */
      614        8        SSW$ZAP: PROC(J);

      8  1 000000   000000 700200 xent  SSW$ZAP      TSX0  ! X66_AUTO_1
         1 000001   000016 000001                    ZERO    14,1

      615        9        /*                                                                    */
      616       10    1   DCL J UBIN;                             /* TIME SINCE INITIAL CALL            */
      617       11        /*                                                                    */
      618       12    1   DCL BUSY UBIN;
      619       13    1   DCL I UBIN;
      620       14    1   DCL ZAPINC UBIN STATIC INIT(300);       /* 3 SEC WAIT INTERVAL                */
      621       15    1   DCL S_MING UBIN SYMREF;
      622       16    1   DCL B_MUAIS UBIN SYMREF;
      623       17    1   DCL SSR$RUE ENTRY(4);
      624       18    1   DCL SSC$MONTIMR ENTRY(3);
      625       19    1   DCL OCI$MK_WR ENTRY(7);
      626       20        /*                                                                    */
      627       21        %INCLUDE B$USER;
      628      237        %B$USERREFS;
      629      241        %INCLUDE SS_SCHED_C;
      630      474        %INCLUDE OC_SUBS_C;
      631     1205        %INCLUDE JG_GHOSTS_C;
      632     1295        /*                                                                    */
      633     1296        /*                                                                    */
      634     1297    1           BUSY=0;

   1297  1 000002   200004 450100                    STZ     BUSY,,AUTO

      635     1298    2           DO I = JG_GOOSE# TO B_MUAIS;
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:127  

   1298  1 000003   000012 235007                    LDA     10,DL
         1 000004   200005 755100                    STA     I,,AUTO
         1 000005   000047 710000 1                  TRA     s:1306+3

      636     1299    2              IF B$USRT$->B$USER.US(I) ~= %SS_SNULL

   1299  1 000006   200005 235100                    LDA     I,,AUTO
         1 000007   000004 735000                    ALS     4
         1 000010   000000 470400 xsym               LDP0    B$USRT$
         1 000011   000011 236105                    LDQ     9,AL,PR0
         1 000012   770000 376003                    ANQ     -4096,DU
         1 000013   300000 116003                    CMPQ    98304,DU
         1 000014   000044 600000 1                  TZE     s:1306
         1 000015   200005 235100                    LDA     I,,AUTO
         1 000016   000015 115007                    CMPA    13,DL
         1 000017   000044 600000 1                  TZE     s:1306

      637     1300    2                AND I ~= JG_JAYS#
      638     1301    3              THEN DO;

      639     1302    3                 BUSY=BUSY+1;

   1302  1 000020   200004 236100                    LDQ     BUSY,,AUTO
         1 000021   000001 036007                    ADLQ    1,DL
         1 000022   200004 756100                    STQ     BUSY,,AUTO

      640     1303    3                 IF J = 10*ZAPINC OR J = 15*ZAPINC THEN

   1303  1 000023   200003 471500                    LDP1    @J,,AUTO
         1 000024   000000 236000 0                  LDQ     ZAPINC
         1 000025   000012 402007                    MPY     10,DL
         1 000026   100000 116100                    CMPQ    0,,PR1
         1 000027   000034 600000 1                  TZE     s:1304
         1 000030   000000 236000 0                  LDQ     ZAPINC
         1 000031   000017 402007                    MPY     15,DL
         1 000032   100000 116100                    CMPQ    0,,PR1
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:128  
         1 000033   000044 601000 1                  TNZ     s:1306

      641     1304    3                    CALL SSR$RUE(%SS_ABRT,I);

   1304  1 000034   200005 633500                    EPPR3   I,,AUTO
         1 000035   200007 453500                    STP3    I+2,,AUTO
         1 000036   000001 236000 2                  LDQ     1
         1 000037   200006 756100                    STQ     I+1,,AUTO
         1 000040   200006 630500                    EPPR0   I+1,,AUTO
         1 000041   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000042   000000 701000 xent               TSX1    SSR$RUE
         1 000043   000000 011000                    NOP     0

      642     1305    3                 END;

      643     1306    2              END;

   1306  1 000044   200005 235100                    LDA     I,,AUTO
         1 000045   000001 035007                    ADLA    1,DL
         1 000046   200005 755100                    STA     I,,AUTO
         1 000047   000000 236000 xsym               LDQ     B_MUAIS
         1 000050   200005 116100                    CMPQ    I,,AUTO
         1 000051   000006 603000 1                  TRC     s:1299

      644     1307    1           IF J = 20*ZAPINC OR BUSY = 0 THEN

   1307  1 000052   200003 470500                    LDP0    @J,,AUTO
         1 000053   000000 236000 0                  LDQ     ZAPINC
         1 000054   000024 402007                    MPY     20,DL
         1 000055   000000 116100                    CMPQ    0,,PR0
         1 000056   000061 600000 1                  TZE     s:1308
         1 000057   200004 235100                    LDA     BUSY,,AUTO
         1 000060   000066 601000 1                  TNZ     s:1310

      645     1308    1              CALL OCI$MK_WR(M_SYS,PREZAP_MSG#,0,0,0);

   1308  1 000061   000004 630400 2                  EPPR0   4
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:129  
         1 000062   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000063   000000 701000 xent               TSX1    OCI$MK_WR
         1 000064   000000 011000                    NOP     0
         1 000065   000111 710000 1                  TRA     s:1311

      646     1309    1           ELSE
      647     1310    1              CALL SSC$MONTIMR(ZAPINC,ENTADDR(SSW$ZAP),J+ZAPINC);

   1310  1 000066   000000 636000 1                  EAQ     s:8
         1 000067   200006 756100                    STQ     I+1,,AUTO
         1 000070   000000 236100                    LDQ     0,,PR0
         1 000071   000000 036000 0                  ADLQ    ZAPINC
         1 000072   200010 756100                    STQ     I+3,,AUTO
         1 000073   200006 236100                    LDQ     I+1,,AUTO
         1 000074   200007 756100                    STQ     I+2,,AUTO
         1 000075   200010 235100                    LDA     I+3,,AUTO
         1 000076   200011 755100                    STA     I+4,,AUTO
         1 000077   200011 631500                    EPPR1   I+4,,AUTO
         1 000100   200014 451500                    STP1    I+7,,AUTO
         1 000101   200007 633500                    EPPR3   I+2,,AUTO
         1 000102   200013 453500                    STP3    I+6,,AUTO
         1 000103   000011 236000 2                  LDQ     9
         1 000104   200012 756100                    STQ     I+5,,AUTO
         1 000105   200012 630500                    EPPR0   I+5,,AUTO
         1 000106   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000107   000000 701000 xent               TSX1    SSC$MONTIMR
         1 000110   000000 011000                    NOP     0

      648     1311    1           RETURN;

   1311  1 000111   000000 702200 xent               TSX2  ! X66_ARET

ZAPINC
 Sect OctLoc
   0     000   000000 000454                                                    ....

(unnamed)
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:130  
 Sect OctLoc
   2     000   000000 000020   000000 006000   200000 000000   000000 001777    ................
   2     004   000002 006000   000003 006000   000002 006000   000002 006000    ................
   2     010   000002 006000   000000 006000                                    ........
      649     1312    1   END;

PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:131  
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure SSW$ZAP.
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:132  

 **** Variables and constants ****

  ****  Section 000  Data  SSW$ZAP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 ZAPINC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @J                         4-0-0/w UBIN        r     1 BUSY
     5-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 J

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$USRT$                    0-0-0/w UBIN        r     1 B_MUAIS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(576)   r     1 B$USER(0:0)


   Procedure SSW$ZAP requires 74 words for executable code.
   Procedure SSW$ZAP requires 14 words of local(AUTO) storage.
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:133  

    No errors detected in file SSW$STARTKI.:E05TSI    .
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:134  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=SSW$ZAP File=SSW$STARTKI.:E05TSI                              WED 07/30/97 06:02 Page:135  
          MINI XREF LISTING

B$DO.ECCINFO
       172**DCL       173--REDEF
B$U.MISC
       151**DCL       152--REDEF
B$USER.MISC
       227**DCL       228--REDEF
B$USER.US
       214**DCL      1299>>IF
B$USRT$
       239**DCL      1299>>IF
BUSY
        12**DCL      1297<<ASSIGN   1302<<ASSIGN   1302>>ASSIGN   1307>>IF
B_MUAIS
        16**DCL      1298>>DOINDEX
I
        13**DCL      1298<<DOINDEX  1299>>IF       1299>>IF       1304<>CALL
J
        10**DCL         8--PROC     1303>>IF       1303>>IF       1307>>IF       1310>>CALL
OCI$MK_WR
        19**DCL-ENT  1308--CALL
SSC$MONTIMR
        18**DCL-ENT  1310--CALL
SSR$RUE
        17**DCL-ENT  1304--CALL
SSW$ZAP
         8**PROC     1310--CALL
ZAPINC
        14**DCL      1303>>IF       1303>>IF       1307>>IF       1310<>CALL     1310>>CALL
