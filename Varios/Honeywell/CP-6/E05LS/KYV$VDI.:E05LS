VERSION E05

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /**/
        7        7        /*M* KYV$VDI - receiver of calls from VDH to URPs */
        8        8        /*P* NAME: KYV$VDI - handle calls from VDH to URP devices */
        9        9
       10       10        KYV$VDI: PROC(PARM);
       11       11        /*
       12       12               KYV$VDI receives all calls from VDH directed towards any
       13       13            URP device.  Therefore, I guess one could call this a real
       14       14            device handler (if one speaks VDHese).  The following calls
       15       15            are handled:
       16       16               DAT             -  data from VDH for the device
       17       17               EVT.CLS         -  close event
       18       18               DVCERRRSP       -  operator KEYIN response to device error
       19       19               EVT.LGNACP      -  logon accept event
       20       20               EVT.LGNRJC      -  logon reject event
       21       21               EVT.OPN         -  open event
       22       22               EVT.RLSSTR      -  VDH is going away
       23       23               EVT.SCH         -  deferred schedule event
       24       24               OTPMRK          -  output marker
       25       25               PST             -  position request
       26       26               RQSDAT          -  request data from the device
       27       27
       28       28            Inputs to the routine are pointers to the structure from VDH
       29       29            and to the KV$VDI structure for this device.  The pointer to
       30       30            the KV$VDI structure is determined in the sil interface (see
       31       31            KYV$SIL_VDI_) for reasons of efficiency.  Note that tracing
       32       32            is also done by the interface routine (again for reasons of
       33       33            efficiency).
       34       34
       35       35        */
       36       36        /*
       37       37
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:2    
       38       38               First, the pointers to the context and VDH context are set up.
       39       39            Next, the structure is validated for this device by checking the
       40       40            structure enable bits in the context.  After this point, it all
       41       41            works off a do case on structure type (event type for events).
       42       42            Since I hate to do all the commenting at once, please see the
       43       43            separate cases for more description (I really do have more info
       44       44            there).  Maybe you don't like it that way, but I like to have the
       45       45            descriptions close to the actual code.
       46       46
       47       47        */
       48       48        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
       49       49               ECI=0,DIN=7,CSU=3,AND      */
       50       50        %INCLUDE GH_HARDWARE_M;
       51      148        %INCLUDE LCP_6;
       52     4427        %INCLUDE KY_SCODE_C;
       53     4441        %VLP_SCODE (FPTN = BADFNC, FCG = KY, MID = V,ERR# = S$KY_ILGUSRFNC,STCLASS =
              4441            CONSTANT);
       54     4502        %VLP_SCODE (FPTN = BADEVT, FCG = KY, MID = V, ERR# = S$KY_ILGEVTID, STCLASS =
              4502            CONSTANT);
       55     4563        %VLP_SCODE (FPTN = BADPOS, FCG = KY, MID = V, ERR# = S$KY_ILGPOS, STCLASS = CONSTANT
              4563            );
       56     4624        %INCLUDE KL_AFCN_C;
       57     4725        %INCLUDE KL_MACRO_C;
       58     8077        %INCLUDE K_ID_E;
       59     8127        %K#ENTID_E;
       60     8146        %K#LYRID_E;
       61     8153        %INCLUDE KV_GLBCNS_E;
       62     8494        %INCLUDE KV_PRMID_E;
       63     8668        %INCLUDE KV$USR;
       64     8980        %INCLUDE KV$VDH;
       65     9411        %INCLUDE KV$GLB;
       66     9830        %INCLUDE KV$PRM;
       67    10043        %INCLUDE KV$GLBCTX;
       68    10488        %INCLUDE KY_URP_M;
       69    10783        %INCLUDE KY_PERR_C;
       70    10805        %INCLUDE KY_SUBS_C;
       71    10894        %INCLUDE KH$STT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:3    
       72    10924        %INCLUDE KV_GLB_M;
       73    11046        %INCLUDE KY_DATA_R;
       74    11841        %INCLUDE KV$INT;
       75    12473        %INCLUDE KH_SCREECH_M;
       76    12484        %INCLUDE KHC_MAC_C;                     /* inhibit macros */
       77    12525        %INCLUDE KL_CONTROL_C;
       78    12905        %INCLUDE KH_MACRO_C;
       79    13648        %INCLUDE KH$CHN;
       80    13770        /**/
       81    13771        %EQU  KYV#DUMMY    = 0;                 /*  ADD_TO_Q inserts a dummy header  */
       82    13772        %EQU  KYV#NO_DUMMY = 1;                 /*  No dummy header inserted         */
       83    13773        %KV_USR_FNC_E;
       84    13789        %KV_USR_EVT_ID_E;
       85    13809        %KV_CMPCOD_E;
       86    13823        %KV#DATMOD_E;
       87    13829        %KV_DSCRSN_E;
       88    13838        %KV_PRMID_E;
       89    13994    1          DCL KYN$ENABLE ENTRY;
       90    13995    1          DCL KYN$DISABLE ENTRY;
       91    13996    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
       92    13997    1          DCL KVV$VDI ENTRY(1) ALTRET;     /*  never altrets  */
       93    13998    1          DCL KYK$KEYIN ENTRY(2);
       94    13999    1          DCL KYD$DISCON ENTRY(1);
       95    14000    1          DCL KYD$FLUSH ENTRY(1);
       96    14001    1          DCL KYD$INIT_DISCON ENTRY(1);
       97    14002    1          DCL KYI$IO ENTRY(2) ALTRET;
       98    14003    1          DCL KYN$OUR_HNDLR ENTRY(1);
       99    14004    1          DCL KYN$IUR_HNDLR ENTRY(1);
      100    14005    1          DCL KYQ$CLOSE ENTRY(1) ALTRET;
      101    14006    1          DCL KYQ$INIT ENTRY(1) ALTRET;
      102    14007    1          DCL KYQ$KILL ENTRY(1);
      103    14008    1          DCL KYQ$RESET ENTRY(1);
      104    14009    1          DCL KYT$TIMEOUT ENTRY(1);
      105    14010    1          DCL KYS$IUR_SCHED ENTRY(2);
      106    14011    1          DCL KHD$SCREECH ENTRY(1);
      107    14012    1          DCL KYV$UNPACK_BIN ENTRY(2) OPTIONAL;
      108    14013    1          DCL KHA$ERRLOG ENTRY(2) ALTRET;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:4    
      109    14014        /*  */
      110    14015               %FPT_WRSYSLOG(FCG='KY',MID='V',STCLASS=STATIC);
      111    14110        /**/
      112    14111    1          DCL PARM UBIN;                   /*  structure from VDH  */
      113    14112        /**/
      114    14113    1          DCL BLANK_COUNT UBIN WORD;
      115    14114    1          DCL PAGLNG UBIN BYTE;
      116    14115    1          DCL SPACE_N SBIN WORD;
      117    14116    1          DCL TOF UBIN WORD;
      118    14117    1          DCL TEMP1 UBIN WORD;
      119    14118    1          DCL TEMP2 UBIN WORD;
      120    14119    1          DCL B1 BIT(1) UNAL;
      121    14120    1          DCL B2 BIT(1) UNAL;
      122    14121    1          DCL RSP UBIN WORD;
      123    14122    1          DCL VFU_C CHAR(400);
      124    14123    1          DCL VFU_BUF(0:199) REDEF VFU_C UBIN(16);
      125    14124    1          DCL VFU$ PTR;
      126    14125    1          DCL HIGHEST_LINE UBIN;
      127    14126    1          DCL LIN_INDX UBIN;
      128    14127    1          DCL CHAN_INDX UBIN;
      129    14128    1          DCL INDX UBIN;
      130    14129    1          DCL TEMP_LIN UBIN;
      131    14130
      132    14131    1          DCL 1 CHAN_MASK BASED ALIGNED,
      133    14132    1                 2 * BIT(2),
      134    14133    1                 2 CHANLO(0:5),
      135    14134    1                    3 NUM BIT(1),
      136    14135    1                 2 * BIT(2),
      137    14136    1                 2 CHANHI(0:5),
      138    14137    1                    3 NUM BIT(1);
      139    14138
      140    14139    1          DCL 1 CONSTANT_WORD STATIC,
      141    14140    1                 2 * BIT(2) INIT('01'B),
      142    14141    1                 2 * BIT(6) INIT('0'B),
      143    14142    1                 2 * BIT(2) INIT('01'B),
      144    14143    1                 2 * BIT(6) INIT('0'B);
      145    14144        /**/
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:5    
      146    14145    1          DCL CTX$ PTR;
      147    14146    1          DCL PARM$ PTR;
      148    14147        /**/
      149    14148        %KV$VDH_EVT (STCLASS=AUTO);
      150    14183        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      151    14218        %KV$VDH_OTPMRK (STCLASS=STATIC);
      152    14280        %KY$CTX  ( STCLASS = "BASED(CTX$)" );
      153    14457        %KY$CTX  ( NAME = KY$NEXT_CTX, STCLASS = BASED );
      154    14634        %KY$CTX  ( NAME = KY$PRIOR_CTX, STCLASS = BASED );
      155    14811        /**/
      156    14812        %KY$REC;
      157    14851        %KY$OUTMRK;
      158    14868        /**/
      159    14869        %KH$CHN;
      160    14993        /**/
      161    14994        /**/
      162    14995        %KV$PTR;
      163    15038        %KV$VDI;
      164    15109        %KV$MRD;
      165    15156        %KV$SRD;
      166    15431        /**/
      167    15432        %KV$USR_DAT       ( STCLASS = "BASED(PARM$)" );
      168    15516        %KV$USR_EVT       ( STCLASS = "BASED(PARM$)" );
      169    15551        %KV$USR_OTPMRK    ( STCLASS = "BASED(PARM$)" );
      170    15613        %KV$USR_PST       ( STCLASS = "BASED(PARM$)" );
      171    15683        %KV$USR_RQSDAT  ( STCLASS = "BASED(PARM$)" );
      172    15746        %KV$USR_SETPRM(STCLASS="BASED(PARM$)");
      173    15808        %KV$VFU;
      174    15855        %KV$MVD;
      175    15899        %KH$CTLTBL(FPTN=KH$CTLTBL,STCLASS="BASED(KH_CTLTBL$)");
      176    16111    1          DCL ONEWORD UBIN BASED;
      177    16112    1          DCL KH_CTLTBL$ PTR SYMREF;
      178    16113
      179    16114    1          DCL DAT_TMPL CHAR(1000) BASED;
      180    16115
      181    16116        %KY$REC     ( NAME = KY_DUMMY_REC, STCLASS = CONSTANT );
      182    16155        %KY$OUTMRK  ( NAME = KY_DUMMY_OUTMRK, STCLASS = CONSTANT );
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:6    
      183    16172
      184    16173        %KY$REC     ( NAME = KY_ASC_REC, STCLASS = CONSTANT, TEXT = '!ASC' );
      185    16212        %KY$REC     ( NAME = KY_BIN_REC, STCLASS = CONSTANT, TEXT = '!BIN' );
      186    16251
      187    16252        %KV$VDH_OTPMRK  ( NAME = KV_VDH_OTPMRK, STCLASS = SYMREF );
      188    16314        /*
      189    16315            These subs MUST come immediately before the code.
      190    16316        */
      191    16317        %EQU CHAN_INDX_HI = 11;
      192    16318        %EQU LIN_INDX_HI  = 200;
      193    16319        %EQU CHAN_HI_BASE = 6;
      194    16320        %EQU TOFCHN = 0;
      195    16321        %EQU BOFCHN = 11;
      196    16322        %EQU CHAN_REVERSE = 5;
      197    16323        %SUB KY$NEXT_CTX  = "KY$CTX.NEXT$->KY$NEXT_CTX";
      198    16324        %SUB KY$PRIOR_CTX = "KY$CTX.PRIOR$->KY$PRIOR_CTX";
      199    16325
      200    16326        %SUB KY$REC    = "KY$CTX.Q.INPUT$->KY$REC";
      201    16327        %SUB KY$OUTMRK = "KY$CTX.Q.INPUT$->KY$OUTMRK";
      202    16328
      203    16329        %SUB DAT_TMPL = "KV$USR_DAT.DAT__.ADR$->DAT_TMPL";
      204    16330
      205    16331        %SUB KV$VDI = "KV$PTR.VDI$->KV$VDI";
      206    16332        %SUB KV$MRD = "KV$PTR.MRD$->KV$MRD";
      207    16333        %SUB VFU$ = "KV$PTR.MVD$->KV$MVD.VFU$";
      208    16334
      209    16335        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:7    
      210    16336        /*
      211    16337            Initialization consists of setting up the pointers to the VDH
      212    16338            structure, KV$VDI, and our context, and then making sure that
      213    16339            the structure that has been passed is one that we know how to
      214    16340            handle.  If the structure is NOT one that we like, screech.
      215    16341            If we have a disconnect pending, then the only things we
      216    16342            need to bother with are EVT.RLSSTR and OTPMRKs that must
      217    16343            be returned.  For everything else, we just return.
      218    16344        */
      219    16345
      220    16346    1          CALL KYN$DISABLE;
      221    16347    1          PARM$ = ADDR(PARM);
      222    16348
      223    16349    1          CTX$ = KV$VDI.USRCTX$;
      224    16350        /*%TRACE(WHEREAT = 9,INPUT$ = "KY$CTX.Q.INPUT$");*/
      225    16351
      226    16352    1          IF NOT KY$CTX.VDIENB.STRENB ( KV$USR_DAT.FNC ) THEN
      227    16353    2             DO;
      228    16354                   /*S* SCREECH_CODE: KYV-S$KY_ILGUSRFNC
      229    16355                        MESSAGE: UNITREC encountered a kv$usr.fnc it did not acknowledge*/
      230    16356                     %KH$SCREECH(COD = BADFNC);
      231    16360    2             END;
      232    16361
      233    16362    1          IF KV$USR_DAT.FNC = %KV_USR_FNC_EVT AND
      234    16363    1             NOT KY$CTX.VDIENB.EVTENB ( KV$USR_EVT.ID ) THEN
      235    16364    2             DO;
      236    16365                   /*S* SCREECH_CODE: KYV-S$KY_ILGEVTID
      237    16366                       MESSAGE: UNITREC encountered a kv$usr_evt.id it did not acknowledge*/
      238    16367                     %KH$SCREECH(COD = BADEVT);
      239    16371    2             END;
      240    16372
      241    16373    2          DO CASE ( KV$USR_DAT.FNC );
      242    16374
      243    16375        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:8    
      244    16376        /*
      245    16377            VDH is giving us data.  Currently, only the card punches receive
      246    16378            data in this manner.  Data is not directly stuffed into the Q
      247    16379            because we might have do to translation on binary data.
      248    16380
      249    16381            Is the data binary?
      250    16382               YES:
      251    16383                  Was the last data ASCII?
      252    16384                     YES:
      253    16385                        Convert the card punch to binary mode.
      254    16386                  Unpack the binary data ( 16/16 to 12/16 ).
      255    16387                  Add the data to the Q.
      256    16388               NO:
      257    16389                  Was the last data binary?
      258    16390                     YES:
      259    16391                        Convert the card punch to ASCII mode.
      260    16392                  Add the data to the Q.
      261    16393        */
      262    16394    2             CASE ( %KV_USR_FNC_DAT );
      263    16395
      264    16396    2                IF KV$USR_DAT.DATMOD = %KV#DATMOD_BNR THEN
      265    16397    3                   DO;
      266    16398    3                      IF NOT KY$CTX.MODE.BIN_IN THEN
      267    16399    4                         DO;               /*  convert the punch to binary mode  */
      268    16400    4                            KY$REC.RECSIZE = KY_BIN_REC.RECSIZE;
      269    16401    4                            KY$REC = KY_BIN_REC;
      270    16402    4                            CALL ADD_TO_Q ALTRET ( ABORT );
      271    16403    4                            KY$CTX.MODE.BIN_IN = '1'B;
      272    16404    4                         END;
      273    16405        /*
      274    16406                        unpack the data
      275    16407                        a SIL routine is used to avoid calling non-existant
      276    16408                        run-time routines
      277    16409        */
      278    16410    3                      KY$REC.RECSIZE = KY_DUMMY_REC.RECSIZE;
      279    16411    3                      KY$REC = KY_DUMMY_REC;
      280    16412    3                      KY$REC.RECSIZE = 4 * ( KV$USR_DAT.DAT__.DATBYTSIZ / 3 )
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:9    
      281    16413    3                         + 2 * MOD ( KV$USR_DAT.DAT__.DATBYTSIZ, 3 );
      282    16414    3                      IF KY$REC.RECSIZE ~= 0 THEN
      283    16415    4                         DO;
      284    16416    4                            CALL KYV$UNPACK_BIN(KY$REC.TXT,KV$USR_DAT);
      285    16417    4                         END;
      286    16418    3                      KY$REC.BIN = '1'B;
      287    16419
      288    16420    3                      CALL ADD_TO_Q ALTRET ( ABORT );
      289    16421    3                   END;
      290    16422    2                ELSE
      291    16423                                                /*  the data is ASCII  */
      292    16424    3                   DO;
      293    16425    3                      IF KY$CTX.MODE.BIN_IN THEN
      294    16426    4                         DO;               /*  convert the punch to ASCII mode  */
      295    16427    4                            KY$REC.RECSIZE = KY_ASC_REC.RECSIZE;
      296    16428    4                            KY$REC = KY_ASC_REC;
      297    16429    4                            CALL ADD_TO_Q ALTRET ( ABORT );
      298    16430    4                            KY$CTX.MODE.BIN_IN = '0'B;
      299    16431    4                         END;
      300    16432
      301    16433    3                      KY$REC = KY_DUMMY_REC;
      302    16434    3                      KY$REC.RECSIZE = KV$USR_DAT.DAT__.DATBYTSIZ;
      303    16435    3                      TEMP1 = KV$USR_DAT.DAT__.BYTX;
      304    16436    3                      TEMP2 = KV$USR_DAT.DAT__.DATBYTSIZ;
      305    16437    3                      KY$REC.TXT = SUBSTR ( DAT_TMPL, TEMP1, TEMP2 );
      306    16438    3                      CALL ADD_TO_Q ALTRET ( ABORT );
      307    16439    3                   END;
      308    16440
      309    16441        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:10   
      310    16442        /*
      311    16443            A user event can be any of several things.  The only thing
      312    16444            here is another DO CASE on event id.
      313    16445        */
      314    16446    2             CASE ( %KV_USR_FNC_EVT );
      315    16447
      316    16448    3                DO CASE ( KV$USR_EVT.ID );
      317    16449
      318    16450        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:11   
      319    16451        /*
      320    16452            A close event signifies the close of the current symbiont file.
      321    16453            In normal termination, an output marker will have been sent to
      322    16454            ensure that all the data has been printed.  In abnormal term-
      323    16455            ination, the close is implicit permission to throw away all the
      324    16456            data currently queued.  Get the device to a quiescient state
      325    16457            and wait for the next open.
      326    16458
      327    16459            Set the STRENB / EVTENB to accept EVT.RLSSTR, EVT.OPN and OTPMRK.
      328    16460            Call KYD$FLUSH.
      329    16461            Is this a card reader?
      330    16462               YES:
      331    16463                  Call KYS$IUR_SCHED to check for more cards.
      332    16464        */
      333    16465    3                   CASE ( %KV_USR_EVT_ID_CLS );
      334    16466
      335    16467    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );
      336    16468    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );
      337    16469    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;
      338    16470    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;
      339    16471
      340    16472    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;
      341    16473    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;
      342    16474    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_OPN ) = '1'B;
      343    16475    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;
      344    16476    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_LGNRJC ) = '1'B;
      345    16477
      346    16478    3                      CALL KYD$FLUSH ( KY$CTX );
      347    16479
      348    16480    3                      IF KY$CTX.DVCTYP = %KY#TYP_CR THEN
      349    16481    4                         DO;
      350    16482    4                            CALL KYS$IUR_SCHED ( KY$CTX, %KY#CALL_VDH );
      351    16483    4                         END;
      352    16484
      353    16485        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:12   
      354    16486        /*
      355    16487            A logon accept event means that the host is now ready to talk to
      356    16488            the device.  This means that the device should now be initialized
      357    16489            and the device state set to idle.  Also, for output devices the
      358    16490            Q is initialized, and for input devices the input buffer is now
      359    16491            obtained.  For card readers, KYS$IUR_SCHED is called to determine
      360    16492            if there are cards to be read.
      361    16493
      362    16494            Set device state to idle.
      363    16495            Set the STRENB / EVTENB bits to receive EVT.RLSSTR, EVT.OPN,
      364    16496               and OTPMRK.
      365    16497            Call IO_LOC to initialize the device.
      366    16498            LP and CP:
      367    16499               Initialize the Q.
      368    16500               Tell VDH we want output.
      369    16501            CR:
      370    16502               Obtain an input buffer.
      371    16503               Call KYS$IUR_SCHED to check for cards ready to be read.
      372    16504        */
      373    16505    3                   CASE ( %KV_USR_EVT_ID_LGNACP );
      374    16506
      375    16507    3                      KY$CTX.DVC_STATE = %KY#ST_IDLE;
      376    16508    3                      KY$CTX.DSCPND = '0'B;
      377    16509
      378    16510    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );
      379    16511    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );
      380    16512    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;
      381    16513    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;
      382    16514
      383    16515    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;
      384    16516    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;
      385    16517    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_OPN ) = '1'B;
      386    16518    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;
      387    16519
      388    16520    3                      CALL KYI$IO(KY$CTX,%KY#INIT) ALTRET(ABORT);
      389    16521
      390    16522    3                      IF KY$CTX.DVCTYP = %KY#TYP_CR THEN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:13   
      391    16523    4                         DO;
      392    16524    4                            KY$CTX.INPUT.BUF_SIZE = %KY#CRTEXT_SIZE;
      393    16525    4                            CALL KVB$GET2NSYS(KY$CTX.INPUT.BUF_SIZE,KY$CTX.INPUT.BUF$)
             16525                                     ALTRET(BUF_ABORT);
      394    16526    4                            KY_STT_URP.USRSTT.INPBFRBYTUTL = KY_STT_URP.USRSTT.
             16526                                     INPBFRBYTUTL +
      395    16527    4                               KY$CTX.INPUT.BUF_SIZE * 2;
      396    16528    4                            CALL KYS$IUR_SCHED ( KY$CTX, %KY#CALL_VDH );
      397    16529    4                         END;              /* IF DVCTYP = CR */
      398    16530    3                      ELSE
      399    16531    4                         DO;
      400    16532    4                            CALL KYQ$INIT ( KY$CTX ) ALTRET ( Q_ABORT );
      401    16533    4                            IF NOT %KV_VDI.RQSOTP THEN
      402    16534    5                               DO;
      403    16535    5                                  %KV_VDI.RQSOTP = '1'B;
      404    16536    5                                  KV$VDH_EVT = KV_VDH_EVT_RQSOTP;
      405    16537    5                                  CALL KVV$VDI(KV$VDH_EVT);
      406    16538    5                               END;        /* IF NOT %KV_VDI.RQSOTP */
      407    16539    4                         END; /* ELSE
      408    16540                                          */
      409    16541
      410    16542        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:14   
      411    16543        /*
      412    16544            The host did not accept the logon, so it's time to go away.
      413    16545            Do an error log so someone can figure out what is going on,
      414    16546            then call VDH to disconnect.
      415    16547
      416    16548            Also change the STRENB / EVTENB bits so that the only thing we
      417    16549            can see after this is the RLSSTR event.
      418    16550        */
      419    16551    3                   CASE ( %KV_USR_EVT_ID_LGNRJC );
      420    16552
      421    16553        %SET LISTSUB = '1'B;
      422    16554    3                      FPT_WRSYSLOG.V.TERMID = KV$PTR.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;
      423    16555    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_LGNRJC;
      424    16556    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);
      425    16557                        /*E* ERROR: KYV-GG#EC_KYV_LGNRJC
      426    16558                             MESSAGE: Logon rejected.
      427    16559                             MESSAGE1: The logon string specified on the enable
      428    16560                                       was rejected by the host.
      429    16561                             DESCRIPTION: Bad logon specified.        */
      430    16562
      431    16563    3                      IF KY$CTX.DSCRSN ~= %KV_DSCRSN_FRG THEN
      432    16564    4                         DO;
      433    16565    4                            KY$CTX.DSCRSN = %KV_DSCRSN_PTH;
      434    16566    4                         END;
      435    16567
      436    16568    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );
      437    16569    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );
      438    16570    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;
      439    16571
      440    16572    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;
      441    16573    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;
      442    16574    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;
      443    16575    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_CLS ) = '1'B;
      444    16576
      445    16577        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:15   
      446    16578        /*
      447    16579            A symbiont file is being opened for this device.  For line
      448    16580            printers, insert a dummy header innto the Q in case VDH doesn't
      449    16581            do a position and update VDH's context so it knows where to stuff
      450    16582            the data.  For card punches, force the mode to ASCII.  For card
      451    16583            readers, also force the mode to ASCII, then start wait for the
      452    16584            RQSDAT to start reading the cards.
      453    16585
      454    16586            STRENB / EVTENB settings:
      455    16587               CR:
      456    16588                  STRENB: EVT,RQSDAT
      457    16589                  EVTENB: CLS, RLSSTR, SCH
      458    16590               CP:
      459    16591                  STRENB: DAT, EVT, OTPMRK
      460    16592                  EVTENB: CLS, RLSSTR, SCH
      461    16593               LP:
      462    16594                  STRENB: EVT, OTPMRK, PST
      463    16595                  EVTENB: CLS, RLSSTR, SCH
      464    16596            Is a disconnect pending?
      465    16597               NO:
      466    16598                  LP:
      467    16599                     Insert a dummy KY$REC.
      468    16600                     Update VDH's pointers.
      469    16601                  CP:
      470    16602                     Force the mode to ASCII.
      471    16603                  CR:
      472    16604                     Force the mode to ASCII.
      473    16605        */
      474    16606    3                   CASE ( %KV_USR_EVT_ID_OPN );
      475    16607
      476    16608    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );
      477    16609    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );
      478    16610    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_CLS ) = '1'B;
      479    16611    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;
      480    16612    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;
      481    16613    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;
      482    16614
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:16   
      483    16615    4                      DO CASE ( KY$CTX.DVCTYP );
      484    16616
      485    16617    4                         CASE ( %KY#TYP_LP );
      486    16618
      487    16619    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;
      488    16620    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;
      489    16621    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_SETPRM) = '1'B;
      490    16622    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_PST) = '1'B;
      491    16623
      492    16624    4                            IF NOT KY$CTX.DSCPND THEN
      493    16625    5                               DO;
      494    16626    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KY_DUMMY_REC.
             16626                                           RECSIZE;
      495    16627    5                                  KY$CTX.Q.INPUT$->KY$REC = KY_DUMMY_REC;
      496    16628
      497    16629    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR ( KY$CTX.Q.
             16629                                           INPUT$->KY$REC.TXT );
      498    16630    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = 0;
      499    16631    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = %
             16631                                           KY#MAXTEXT_SIZEB;
      500    16632    5                               END;
      501    16633
      502    16634    4                         CASE ( %KY#TYP_CP );
      503    16635
      504    16636    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_DAT ) = '1'B;
      505    16637    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;
      506    16638    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;
      507    16639
      508    16640    4                            IF NOT KY$CTX.DSCPND THEN
      509    16641    5                               DO;
      510    16642    5                                  KY$CTX.MODE.BIN_IN = '0'B;
      511    16643    5                               END;
      512    16644
      513    16645    4                         CASE ( %KY#TYP_CR );
      514    16646
      515    16647    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;
      516    16648                                        /* this is necessary because on an open event
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:17   
      517    16649                                           it is not know if the device is input or output
      518    16650                                       so an otpmrk is always sent this marker is ignored */
      519    16651    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;
      520    16652    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_RQSDAT ) = '1'B;
      521    16653    4                            KY$CTX.INPUT.EOF = '0'B;
      522    16654
      523    16655    4                            IF NOT KY$CTX.DSCPND THEN
      524    16656    5                               DO;
      525    16657    5                                  KY$CTX.MODE.BIN_CURR = '0'B;
      526    16658    5                               END;
      527    16659
      528    16660    4                      END;                 /*  CASE on KY$CTX.DVCTYP  */
      529    16661
      530    16662
      531    16663        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:18   
      532    16664        /*
      533    16665            VDH is going away.  It has released everything but KV$VDI, and
      534    16666            we should now do any clean-up and release our context.  To do
      535    16667            all this magic, just call KYD$DISCON.
      536    16668        */
      537    16669    3                   CASE ( %KV_USR_EVT_ID_RLSSTR );
      538    16670
      539    16671    3                      CALL KYD$DISCON ( KY$CTX );
      540    16672
      541    16673        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:19   
      542    16674        /*
      543    16675            VDH is telling us it is now okay do process something that we
      544    16676            couldn't do before because VDH was running.  There are 3 cases:
      545    16677            interrupts, time-outs, and disconnects from handler common.
      546    16678            Only the time-out and interrupt checks are done disabled, since
      547    16679            there are timing windows involved.  Disconnect will disable in
      548    16680            the called routines whenever necessary.
      549    16681
      550    16682            Disable.
      551    16683               Interrupt?
      552    16684                  YES:
      553    16685                     Call the interrupt handler.
      554    16686                     More than one interrupt with different device states?
      555    16687                        YES:
      556    16688                           Call the interrupt handler again.
      557    16689               Time-out?
      558    16690                  YES:
      559    16691                     Call the time-out routine.
      560    16692            Enable.
      561    16693            Disconnect?
      562    16694               YES:
      563    16695                  Call KYD$INIT_DISCON.
      564    16696        */
      565    16697    3                   CASE ( %KV_USR_EVT_ID_SCH );
      566    16698
      567    16699    3                      CALL KYN$DISABLE;
      568    16700
      569    16701    3                      IF KY$CTX.RESCHEDULE.INTERRUPT THEN
      570    16702    4                         DO;
      571    16703    4                            IF KY$CTX.DVCTYP=%KY#TYP_CR THEN
      572    16704    4                               CALL KYN$IUR_HNDLR(KY$CTX);
      573    16705    4                            ELSE
      574    16706    4                               CALL KYN$OUR_HNDLR(KY$CTX);
      575    16707    4                            B1 = KY$CTX.LP_STATUS.DEV_READY;
      576    16708    4                            B2 = KY$CTX.DEFRD.ONLINE;
      577    16709    4                            IF KY$CTX.DEFRD.INTRPT AND ( B1 \ B2 ) THEN
      578    16710    5                               DO;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:20   
      579    16711    5                                  KY$CTX.STATUSW = KY$CTX.DEFRD.STATUSW;
      580    16712    5                                  IF KY$CTX.DVCTYP=%KY#TYP_CR THEN
      581    16713    5                                     CALL KYN$IUR_HNDLR(KY$CTX);
      582    16714    5                                  ELSE
      583    16715    5                                     CALL KYN$OUR_HNDLR(KY$CTX);
      584    16716    5                                  KY$CTX.DEFRD.INTRPT = '0'B;
      585    16717    5                               END;
      586    16718    4                            KY$CTX.RESCHEDULE.INTERRUPT = '0'B;
      587    16719    4                         END;
      588    16720
      589    16721    3                      IF KY$CTX.RESCHEDULE.TIMER THEN
      590    16722    4                         DO;
      591    16723    4                            CALL KYT$TIMEOUT ( KY$CTX );
      592    16724    4                            KY$CTX.RESCHEDULE.TIMER = '0'B;
      593    16725    4                         END;
      594    16726
      595    16727    3                      CALL KYN$ENABLE;
      596    16728
      597    16729    3                      IF KY$CTX.RESCHEDULE.DSC THEN
      598    16730    4                         DO;
      599    16731    4                            CALL KYD$INIT_DISCON ( KY$CTX );
      600    16732    4                         END;
      601    16733
      602    16734        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:21   
      603    16735        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:22   
      604    16736    3                   CASE(%KV_USR_EVT_ID_RLSVDI);
      605    16737    3                      IF KY$CTX.DSCRSN ~= %KV_DSCRSN_FRG THEN
      606    16738    3                         KY$CTX.DSCRSN = %KV_DSCRSN_PTH;
      607    16739
      608    16740        /*
      609    16741            This is just here to end the DO CASE on event id.
      610    16742        */
      611    16743    3                END;                       /*  CASE on event id  */
      612    16744
      613    16745        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:23   
      614    16746        /*
      615    16747            There are 2 types of output markers: ones that VDH absolutely
      616    16748            must see in order for things to continue ( usually markers sent
      617    16749            from the host ), and markers that would be nice to see but are
      618    16750            not so vital ( usually block number / record number ).  The
      619    16751            vital markers cause the current record to be added to the queue,
      620    16752            an OUTMRK record is added to the queue, then a dummy header is
      621    16753            set up that blank fills to the column we were at when the marker
      622    16754            was received.  Also, KV$VDI.OTPBFR_ is updated.  For the non-
      623    16755            vital markers, handling depends on device type.  Card punches
      624    16756            treat all markers the same, so the scenario described above is
      625    16757            applicable here also.  Line printers just have the marker put
      626    16758            into the REC structure.  This makes extends possible without
      627    16759            multiple physical I/Os.  Note that one or more output markers
      628    16760            might be lost by extending, but this is not important since VDH
      629    16761            doesn't HAVE to get them all back, and when the record is printed
      630    16762            the block number / record number of the last successfully done
      631    16763            record will indeed be accurate.  Sneaky, ain't it?  Note that when
      632    16764            disconnect is pending, non-vital markers are ignored.
      633    16765
      634    16766            Is the marker non-vital and disconnect pending?
      635    16767            Is the device an LP and the marker non-vital?
      636    16768               YES:
      637    16769                  Store the marker in the current header.
      638    16770               NO:
      639    16771                  Set blank count to the column to position to.
      640    16772                  I sthe current header header a dummy header?
      641    16773                     NO:
      642    16774                        Add the current header to the Q.
      643    16775                  Add the marker to the Q.
      644    16776                  Position the dummy header to the right column.
      645    16777        */
      646    16778    2             CASE ( %KV_USR_FNC_OTPMRK );
      647    16779    2                IF KY$CTX.Q.INPUT$ = ADDR(NIL) OR KY$CTX.DVCTYP = %KY#TYP_CR THEN
      648    16780    3                   DO;
      649    16781    3                      KV$VDH_OTPMRK = KV_VDH_OTPMRK;
      650    16782    3                      KV$VDH_OTPMRK.DAT = KV$USR_OTPMRK.DAT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:24   
      651    16783    3                      KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_DLT;
      652    16784    3                      CALL KVV$VDI(KV$VDH_OTPMRK);
      653    16785    3                   END;                    /* IF KY$CTX.Q.INPUT$ = ADDR(NIL) */
      654    16786    2                ELSE
      655    16787    3                   DO;
      656    16788    3                      IF KY$CTX.DVCTYP = %KY#TYP_LP AND
      657    16789    3                         NOT KV$USR_OTPMRK.DAT.MSTRTR THEN
      658    16790    4                         DO;
      659    16791    4                            KY$CTX.Q.INPUT$->KY$REC.OTPMRK = KV$USR_OTPMRK.DAT;
      660    16792    4                            KY$CTX.Q.INPUT$->KY$REC.REP_OTPMRK = '1'B;
      661    16793    4                         END;
      662    16794    3                      ELSE
      663    16795                                                /*  we have to report this kind  */
      664    16796    4                         DO;
      665    16797    4                            IF KY$CTX.DVCTYP = %KY#TYP_LP THEN
      666    16798    5                               DO;
      667    16799    5                                  BLANK_COUNT = KY$CTX.Q.INPUT$->KY$REC.RECSIZE;
      668    16800    5                                  IF KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX ~= KY$CTX.Q.
             16800                                           INPUT$->KY$REC.RECSIZE OR
      669    16801    5                                     KY$CTX.Q.INPUT$->KY$REC.TOF OR KY$CTX.Q.INPUT$->
             16801                                              KY$REC.SPACE_N ~= 0 THEN
      670    16802    6                                     DO;
      671    16803    6                                        KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KV$PTR.VDI$->
             16803                                                 KV$VDI.OTPBFR_.BYTX;
      672    16804    6                                        BLANK_COUNT = KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX;
      673    16805    6                                        CALL ADD_TO_Q ALTRET ( ABORT );
      674    16806    6                                     END;
      675    16807    5                               END;
      676    16808
      677    16809    4                            KY$CTX.Q.INPUT$->KY$OUTMRK = KY_DUMMY_OUTMRK;
      678    16810    4                            KY$CTX.Q.INPUT$->KY$OUTMRK.MARKER = KV$USR_OTPMRK.DAT;
      679    16811
      680    16812    4                            IF KY$CTX.DVCTYP = %KY#TYP_LP THEN
      681    16813    5                               DO;
      682    16814    5                                  CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );
      683    16815
      684    16816    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = BLANK_COUNT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:25   
      685    16817    5                                  SUBSTR ( KY$CTX.Q.INPUT$->KY$REC.TXT, 0, BLANK_COUNT
             16817                                           ) = ' ';
      686    16818
      687    16819    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR ( KY$CTX.Q.
             16819                                           INPUT$->KY$REC.TXT );
      688    16820    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = BLANK_COUNT;
      689    16821    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = %
             16821                                           KY#MAXTEXT_SIZEB - BLANK_COUNT;
      690    16822    5                               END;
      691    16823    4                            ELSE
      692    16824                                                /*  card punch  */
      693    16825    5                               DO;
      694    16826    5                                  IF KV$USR_OTPMRK.DAT.MSTRTR OR
      695    16827    5                                     NOT KY$CTX.DSCPND THEN
      696    16828    6                                     DO;
      697    16829    6                                        CALL ADD_TO_Q ALTRET ( ABORT );
      698    16830    6                                     END;
      699    16831    5                               END;
      700    16832    4                         END;
      701    16833    3                   END; /* ELSE
      702    16834                                    */
      703    16835        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:26   
      704    16836        /*
      705    16837            VDH is requesting us to position to the specified place.  This
      706    16838            call is only used for line printers, and signifies that the data
      707    16839            VDH has stuffed into our buffer is now complete.  We can add the
      708    16840            data to the Q and set up another header with the positioning
      709    16841            info that has been supplied.
      710    16842            Two attempts at optimization are made.  First, if the position
      711    16843            is on the current line and beyond the current column position,
      712    16844            the current line is extended with blanks and the data is not yet
      713    16845            added to the queue.  Second, dummy headers ( no data or blank
      714    16846            fills after an output marker ) are spotted and chucked.
      715    16847
      716    16848            Is the position further along the current line?
      717    16849               YES:
      718    16850                  Blank extend the current line.
      719    16851               NO:
      720    16852                  Is the current record a dummy header?
      721    16853                     YES:
      722    16854                        Set RECSIZE to 0 and reuse it.
      723    16855                     NO:
      724    16856                        Add the data in the current header to the Q.
      725    16857                  Generate the proper number of top-of-form headers.
      726    16858                  Generate the proper number of space_n headers.
      727    16859                  Blank fill to the proper column.
      728    16860            Update VDH context for the new position and buffer.
      729    16861        */
      730    16862    2             CASE ( %KV_USR_FNC_PST );
      731    16863    2                IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) THEN
      732    16864    3                   DO;
      733    16865    3                      IF KV$USR_PST.TOPPAGCNT = 0 AND
      734    16866    3                         KV$USR_PST.PHSPST.LIN = KY$CTX.PST.LIN AND
      735    16867    3                         KV$USR_PST.PHSPST.CLM > KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX THEN
      736    16868    4                         DO;               /*  blank extend the current line  */
      737    16869    4                            TEMP2 = KV$USR_PST.PHSPST.CLM - KV$PTR.VDI$->KV$VDI.OTPBFR_
             16869                                     .BYTX - 1;
      738    16870    4                            IF TEMP2 ~= 0 THEN
      739    16871    4                               SUBSTR(KY$CTX.Q.INPUT$->KY$REC.TXT,KV$PTR.VDI$->KV$VDI.
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:27   
             16871                                        OTPBFR_.BYTX,TEMP2) = ' ';
      740    16872    4                            KY$CTX.Q.INPUT$->KY$REC.RECSIZE = 0;
      741    16873    4                         END;
      742    16874    3                      ELSE
      743    16875                                                /*  go to a new line and new header  */
      744    16876    4                         DO;
      745    16877    4                            IF KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX ~= KY$CTX.Q.INPUT$->
             16877                                     KY$REC.RECSIZE OR
      746    16878    4                               KY$CTX.Q.INPUT$->KY$REC.TOF OR KY$CTX.Q.INPUT$->KY$REC.
             16878                                        SPACE_N ~= 0 THEN
      747    16879    5                               DO;         /*  this is not a dummy header  */
      748    16880    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KV$PTR.VDI$->KV$VDI
             16880                                           .OTPBFR_.BYTX;
      749    16881    5                                  CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );
      750    16882    5                               END;
      751    16883    4                            ELSE
      752    16884                                                /*  re-use this header  */
      753    16885    5                               DO;
      754    16886    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = 0;
      755    16887    5                               END;
      756    16888
      757    16889    4                            IF KV$USR_PST.TOPPAGCNT > 0 THEN
      758    16890    5                               DO;         /*  generate top-of-form headers  */
      759    16891    5                                  KY$CTX.PST.LIN = 1;
      760    16892    6                                  DO TOF = 2 TO KV$USR_PST.TOPPAGCNT;
      761    16893    6                                     KY$CTX.Q.INPUT$->KY$REC.TOF = '1'B;
      762    16894    6                                     CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );
      763    16895    6                                  END;
      764    16896    5                                  KY$CTX.Q.INPUT$->KY$REC.TOF = '1'B;
      765    16897    5                                  IF KV$USR_PST.PHSPST.LIN ~= 1 THEN
      766    16898    6                                     DO;
      767    16899    6                                        CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );
      768    16900    6                                     END;
      769    16901    5                               END;
      770    16902
      771    16903    4                            SPACE_N = KV$USR_PST.PHSPST.LIN - KY$CTX.PST.LIN;
      772    16904    4                            IF SPACE_N < 0 THEN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:28   
      773    16905        /*
      774    16906             This use to screech.  On form lengths less than 12 or continuous forms
      775    16907             no topofpag is given, instead the phspst is reset to 1.  In this case
      776    16908             we should set our ctx.pst.lin to vdhs pst.lin and continue processing.
      777    16909        */
      778    16910    4                               KY$CTX.PST.LIN = KV$USR_PST.TOPPAGCNT;
      779    16911
      780    16912    5                            DO WHILE SPACE_N > 15;
      781    16913    5                               KY$CTX.Q.INPUT$->KY$REC.SPACE_N = 15;
      782    16914    5                               CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );
      783    16915    5                               SPACE_N = SPACE_N - 15;
      784    16916    5                            END;
      785    16917
      786    16918    4                            KY$CTX.Q.INPUT$->KY$REC.SPACE_N = SPACE_N;
      787    16919
      788    16920    4                            KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KV$USR_PST.PHSPST.CLM - 1
             16920                                     ;
      789    16921    4                            TEMP2 = KV$USR_PST.PHSPST.CLM - 1;
      790    16922    4                            IF TEMP2 ~= 0 THEN
      791    16923    4                               SUBSTR(KY$CTX.Q.INPUT$->KY$REC.TXT,0,TEMP2) = ' ';
      792    16924    4                         END;
      793    16925
      794    16926    3                      KY$CTX.PST.LIN = KV$USR_PST.PHSPST.LIN;
      795    16927
      796    16928    3                      KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR ( KY$CTX.Q.INPUT$->KY$REC
             16928                               .TXT );
      797    16929    3                      KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = KV$USR_PST.PHSPST.CLM - 1;
      798    16930    3                      KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = %KY#MAXTEXT_SIZEB -
             16930                               KV$USR_PST.PHSPST.CLM + 1;
      799    16931
      800    16932    3                      KV$PTR.MRD$->KV$MRD.DVCLIN = KV$USR_PST.PHSPST.LIN;
      801    16933    3                      KV$PTR.MRD$->KV$MRD.DVCCLM = KV$USR_PST.PHSPST.CLM;
      802    16934    3                   END;                    /* IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) */
      803    16935        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:29   
      804    16936        /*
      805    16937            VDH now wants us to read a card.  A buffer is never supplied,
      806    16938            so just call the input record scheduler.
      807    16939        */
      808    16940    2             CASE ( %KV_USR_FNC_RQSDAT );
      809    16941
      810    16942    2                CALL KYN$DISABLE;
      811    16943    2                CALL KYS$IUR_SCHED ( KY$CTX, %KY#READ );
      812    16944    2                CALL KYN$ENABLE;
      813    16945
      814    16946        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:30   
      815    16947        /*
      816    16948              code to implement the downloadable VFU.  At this point I'm not
      817    16949              sure how many variations will need to be taken care of.
      818    16950
      819    16951                   is an input buffer initialized?
      820    16952                      YES:
      821    16953                         determine form length from vdh's KV$SRD structure
      822    16954                         initialize vfu buffer to the form 01xxxxxx01xxxxxxxx
      823    16955                         BEGIN CHANNEL LOOP 0-11
      824    16956                            use KV$VFU structure to set channel bits in vfu
      825    16957                            structure. The KV$VFU structure consists of two
      826    16958                            fields: LIN(0:31) and NXT(0:31).  Where the index
      827    16959                            on line is the channel and the value is the line#.
      828    16960                            The next field is an index to the next line value
      829    16961                            for that channel.  when a nxt of 0 is encountered
      830    16962                            the process is complete.
      831    16963                         Channels 0 and 11 are reserved for TOF and BOF
      832    16964                         indicators.
      833    16965                         Update the vdi buffer info. and call the Q routines.
      834    16966        */
      835    16967
      836    16968    2             CASE(%KV_USR_FNC_SETPRM);
      837    16969
      838    16970    3                DO CASE(KV$USR_SETPRM.PRMID);
      839    16971    3                   CASE(%KV_PRMID_VFU);
      840    16972    3                      IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) THEN
      841    16973    4                         DO;
      842    16974    4                            IF KY$CTX.VFU_LOADED THEN
      843    16975    5                               DO;
      844    16976    5                                  CALL KYN$ENABLE;
      845    16977    5                                  RETURN;
      846    16978    5                               END;
      847    16979    4                            PAGLNG = KV$PTR.SRD$->KV$SRD.LNG;
      848    16980    4                            IF PAGLNG < 1 OR PAGLNG > %KY#MAXVFU_SIZEW THEN
      849    16981    4                               PAGLNG = %KY#MAXVFU_SIZEW;
      850    16982
      851    16983    4                            IF KY$CTX.DVC_ID ~= %BITBIN('2031'X)
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:31   
      852    16984    4                               AND KY$CTX.DVC_ID ~= %BITBIN('2033'X)
      853    16985    5                               AND KY$CTX.DVC_ID ~= %BITBIN('20C4'X) THEN DO;
      854    16986    5                                  KY$CTX.VFU_LOADED = '1'B;
             16986                                           /* only these devices have evfus*/
      855    16987    5                               END;
      856    16988    5                            DO LIN_INDX = 0 TO %LIN_INDX_HI;
      857    16989    5                               ADDR(VFU_BUF(LIN_INDX))->CHAN_MASK = CONSTANT_WORD;
      858    16990    5                            END;
      859    16991    4                            HIGHEST_LINE = 0;
      860    16992    5                            DO CHAN_INDX = 0 TO %CHAN_INDX_HI;
      861    16993    5                               IF KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN(CHAN_INDX) > 0
             16993                                        THEN
      862    16994    6                                  DO;
      863    16995    6                                     IF KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN(CHAN_INDX)
             16995                                              > HIGHEST_LINE THEN
      864    16996    6                                        HIGHEST_LINE = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU
             16996                                                 .LIN(CHAN_INDX);
      865    16997    6                                     IF CHAN_INDX < %CHAN_HI_BASE THEN
      866    16998    6                                        ADDR(VFU_BUF(KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.
             16998                                                 LIN(CHAN_INDX)))->CHAN_MASK.CHANLO(%
             16998                                                 CHAN_REVERSE-CHAN_INDX) = '1'B;
      867    16999    6                                     ELSE
      868    17000    6                                  ADDR(VFU_BUF(KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN(
             17000                                           CHAN_INDX)))->CHAN_MASK.CHANHI(%CHAN_REVERSE-(
             17000                                           CHAN_INDX-%CHAN_HI_BASE)) = '1'B;
      869    17001
      870    17002    6                                     INDX = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.NXT(
             17002                                              CHAN_INDX);
      871    17003    7                                     DO WHILE INDX ~= 0;
      872    17004    7                                        TEMP_LIN = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN
             17004                                                 (INDX);
      873    17005    7                                        IF TEMP_LIN > HIGHEST_LINE THEN
      874    17006    7                                           HIGHEST_LINE = TEMP_LIN;
      875    17007    7                                        IF CHAN_INDX < %CHAN_HI_BASE THEN
      876    17008    7                                           ADDR(VFU_BUF(TEMP_LIN))->CHAN_MASK.CHANLO(%
             17008                                                    CHAN_REVERSE-CHAN_INDX) = '1'B;
      877    17009    7                                        ELSE
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:32   
      878    17010    7                                           ADDR(VFU_BUF(TEMP_LIN))->CHAN_MASK.CHANHI(%
             17010                                                    CHAN_REVERSE-(CHAN_INDX-%CHAN_HI_BASE))
             17010                                                    = '1'B;
      879    17011    7                                        INDX = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.NXT(
             17011                                                 INDX);
      880    17012    7                                     END;  /* do while indx~=0   */
      881    17013    6                                  END;     /* if vfu$. . . >0  */
      882    17014    5                            END;           /*  do chan_indx to chan_indx_hi   */
      883    17015    4                            ADDR(VFU_BUF(1))->CHAN_MASK.CHANLO(%CHAN_REVERSE - %TOFCHN)
             17015                                     = '1'B;
      884    17016    4                            ADDR(VFU_BUF(PAGLNG))->CHAN_MASK.CHANHI(%CHAN_REVERSE - (%
             17016                                     BOFCHN-%CHAN_HI_BASE)) = '1'B;
      885    17017    4                            KY$CTX.Q.INPUT$->KY$REC.RECSIZE = PAGLNG*2;
      886    17018    4                            KY$CTX.Q.INPUT$->KY$REC.TXT = SUBSTR(VFU_C,2,KY$CTX.Q.
             17018                                     INPUT$->KY$REC.RECSIZE);
      887    17019    4                            KY$CTX.Q.INPUT$->KY$REC.TYPE = %KY#TYPE_VFU;
      888    17020    4                            CALL ADD_TO_Q_DUMMY ALTRET(ABORT);
      889    17021    4                            KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR(KY$CTX.Q.INPUT$->
             17021                                     KY$REC.TXT);
      890    17022    4                            KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = KY$CTX.Q.INPUT$->KY$REC.
             17022                                     RECSIZE;
      891    17023    4                            KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = PAGLNG*2;
      892    17024    4                         END;              /*  input q = addr(nil)  */
      893    17025        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:33   
      894    17026        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:34   
      895    17027    3                   CASE(%KV_PRMID_LPI);
      896    17028    3                      IF KV$USR_SETPRM.VAL = 8 THEN
      897    17029    3                         KY$CTX.LPI = '1'B;
      898    17030    3                      ELSE
      899    17031    3                         KY$CTX.LPI = '0'B;
      900    17032    3                      CALL KYI$IO(KY$CTX,%KY#SET_LPI);
      901    17033        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:35   
      902    17034    3                   CASE(%KV_PRMID_PLATEN);
      903    17035
      904    17036                                           /* This case is handled in kv_prmid_vfu  */
      905    17037    3                      ADDR(VFU_BUF(1))->CHAN_MASK.CHANLO(%CHAN_REVERSE - %TOFCHN) =
             17037                               '1'B;
      906    17038    3                      ADDR(VFU_BUF(PAGLNG))->CHAN_MASK.CHANHI(%CHAN_REVERSE - (%BOFCHN-
             17038                               %CHAN_HI_BASE)) = '1'B;
      907    17039    3                      PAGLNG = KV$PTR.SRD$->KV$SRD.LNG;
      908    17040        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:36   
      909    17041    3                   CASE(%KV_PRMID_FIRSTLINE);
      910    17042    3                      IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) THEN
      911    17043    4                         DO;               /* not addr nil */
      912    17044    4                            IF KV$PTR.VDI$->KV$VDI.UN_KNWPST THEN
      913    17045    5                               DO;
      914    17046        /*
      915    17047                      vdh has lost the  current position on the device.
      916    17048                      if the device has a evfu we need to reload it
      917    17049                      and start from the top.  However if the device has no
      918    17050                      vfu or has a paper tape vfu than it is a litte had to
      919    17051                      load one.  In either case vdh will ask us to do a tof
      920    17052                      before it starts sending data to print.
      921    17053                      Current device ids which support evfu are 20C4,2033 and 2031.
      922    17054        */
      923    17055    5                                  IF KY$CTX.DVC_ID = %BITBIN('20C4'X) OR
      924    17056    5                                     (BINBIT(KY$CTX.DVC_ID,16) & '0020'X) THEN
      925    17057    6                                     DO;
      926    17058    6                                        KY$CTX.VFU_LOADED = '0'B;
      927    17059    6                                        KV$PTR.VDI$->KV$VDI.UN_KNWPST = '0'B;
      928    17060    6                                     END;
      929    17061    5                                  ELSE
      930    17062    6                                     DO;
      931    17063    6                                        KV$PTR.VDI$->KV$VDI.UN_KNWPST = '0'B;
      932    17064    6                                        KY$CTX.VFU_LOADED = '1'B;
      933    17065    6                                     END;
      934    17066    5                               END;
      935    17067    4                         END;              /* not addr nil */
      936    17068    3                END;                       /*DO CASE ON USR PARM  */
      937    17069        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:37   
      938    17070        /*
      939    17071            This is just here to make the end of the DO CASE on function from
      940    17072            VDH look pretty.
      941    17073        */
      942    17074    2          END /*  CASE on function from VDH  */;
      943    17075
      944    17076        /*
      945    17077            That's all folks!!!.
      946    17078        */
      947    17079    1          CALL KYN$ENABLE;
      948    17080    1          RETURN;
      949    17081
      950    17082        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:38   
      951    17083        /*
      952    17084            When there is no memory for an input buffer during logon accept
      953    17085            we come here on the altret.  Errlog and then join the common
      954    17086            altret code at ABORT to start the disconnect sequence.
      955    17087        */
      956    17088    1   BUF_ABORT: ;
      957    17089
      958    17090    1          KY$CTX.Q.THRTL.OUTAMEM = '1'B;
      959    17091    1          FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_INS_MEM;
      960    17092        %SET LISTSUB = '1'B;
      961    17093    1          FPT_WRSYSLOG.V.TERMID = KV$PTR.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;
      962    17094    1          CALL KHA$ERRLOG(FPT_WRSYSLOG);
      963    17095            /*E* ERROR: KYV-GG#EC_KYV_INS_MEM
      964    17096                 MESSAGE: Unable to get buffer - disconnecting.
      965    17097                 DESCRIPTION: Cannot get memory - forget it.      */
      966    17098
      967    17099    1          GOTO ABORT;
      968    17100
      969    17101        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:39   
      970    17102        /*
      971    17103            This is the altret from KYQ$INIT when there is not enough memory
      972    17104            to build the Q.  Errlog and then join the common altret code at
      973    17105            ABORT to start the disconnect sequence.
      974    17106        */
      975    17107    1   Q_ABORT: ;
      976    17108
      977    17109    1          KY$CTX.Q.THRTL.OUTAMEM='1'B;
      978    17110    1          FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_INS_MEM;
      979    17111    1          FPT_WRSYSLOG.V.TERMID = KV$PTR.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;
      980    17112    1          CALL KHA$ERRLOG(FPT_WRSYSLOG);
      981    17113    1          KY$CTX.VDIENB.EVTENB(%KV_USR_EVT_ID_DSC) = '1'B;
      982    17114    1          GOTO ABORT;
      983    17115        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:40   
      984    17116        /*
      985    17117            Come here when there is any altret involving insufficient memory.
      986    17118            Initiate the disconnect sequence and return.
      987    17119        */
      988    17120    1   ABORT: ;
      989    17121
      990    17122    1          IF KY$CTX.DSCRSN ~= %KV_DSCRSN_FRG THEN
      991    17123    2             DO;
      992    17124    2                KY$CTX.DSCRSN = %KV_DSCRSN_RSRSHR;
      993    17125    2             END;
      994    17126    1          CALL KYD$INIT_DISCON ( KY$CTX );
      995    17127
      996    17128    1          CALL KYN$ENABLE;
      997    17129    1          RETURN;
      998    17130
      999    17131        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:41   
     1000    17132        /*
     1001    17133            ADD_TO_Q is the interface between KYV$VDI and KYQ$CLOSE.  It
     1002    17134            provides a common place to errlog insufficient memory altrets
     1003    17135            and build dummy headers after a header has been added to the Q.
     1004    17136        */
     1005    17137    1   ADD_TO_Q: PROC ALTRET;
     1006    17138
     1007    17139    2          DCL GEN_DUMMY UBIN;
     1008    17140
     1009    17141    2          GEN_DUMMY = %KYV#NO_DUMMY;
     1010    17142    2          GOTO ADD_TO_Q_COMMON;
     1011    17143
     1012    17144    2   ADD_TO_Q_DUMMY: ENTRY ALTRET;
     1013    17145
     1014    17146    2          GEN_DUMMY = %KYV#DUMMY;
     1015    17147
     1016    17148    2   ADD_TO_Q_COMMON: ;
     1017    17149
     1018    17150    2          CALL KYQ$CLOSE ( KY$CTX ) ALTRET ( NO_MEM );
     1019    17151        /*%TRACE(WHEREAT = 19,INPUT$ = "KY$CTX.Q.INPUT$");*/
     1020    17152
     1021    17153    2          IF GEN_DUMMY = %KYV#DUMMY THEN
     1022    17154    3             DO;
     1023    17155    3                KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KY_DUMMY_REC.RECSIZE;
     1024    17156    3                KY$CTX.Q.INPUT$->KY$REC = KY_DUMMY_REC;
     1025    17157    3             END;
     1026    17158
     1027    17159    2          RETURN;
     1028    17160
     1029    17161    2   NO_MEM: ;
     1030    17162
     1031    17163    2          FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_INS_MEM;
     1032    17164    2          CALL KHA$ERRLOG(FPT_WRSYSLOG);
     1033    17165
     1034    17166    2          ALTRETURN;
     1035    17167
     1036    17168    2   END ADD_TO_Q;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:42   
     1037    17169
     1038    17170    1   END KYV$VDI;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:43   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KV$INT.:E05TOU  is referenced.
   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_PERR_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$USR.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KY_SCODE_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYV$VDI.
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:44   

   Procedure KYV$VDI requires 2193 words for executable code.
   Procedure KYV$VDI requires 237 words of local(AUTO) storage.

    No errors detected in file KYV$VDI.:E05TSI    .

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:45   

 Object Unit name= KYV$VDI                                    File name= KYV$VDI.:E05TOU
 UTS= JUL 30 '97 02:47:27.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     33     21  KYV$VDI
    1   Data  even  none    27     1B  KYV$VDI
    2   Proc  even  none  2193    891  KYV$VDI
    3  RoData even  none     8      8  KYV$VDI

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KYV$VDI
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:46   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KYN$DISABLE
         yes    yes    Std       2 KYV$UNPACK_BIN
 yes     yes           Std       2 KVB$GET2NSYS
         yes           Std       1 KYD$FLUSH
         yes           Std       2 KYS$IUR_SCHED
 yes     yes           Std       2 KYI$IO
 yes     yes           Std       2 KHA$ERRLOG
         yes           Std       1 KYD$DISCON
         yes           Std       1 KYN$IUR_HNDLR
         yes           Std       1 KYT$TIMEOUT
         yes           Std       1 KYD$INIT_DISCON
 yes     yes           Std       1 KYQ$INIT
 yes     yes           Std       1 KVV$VDI
         yes           Std       0 KYN$ENABLE
         yes           Std       1 KHD$SCREECH
         yes           Std       1 KYN$OUR_HNDLR
 yes     yes           Std       1 KYQ$CLOSE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6C_ALRZ
                       nStd      0 X6C_ALR
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                            KV_VDH_EVT_RQSOTP                     KV$PTR$
     KH_CTLTBL$                            KV_VDH_OTPMRK                    r    G$ROS$
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:47   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /**/
        7        7        /*M* KYV$VDI - receiver of calls from VDH to URPs */
        8        8        /*P* NAME: KYV$VDI - handle calls from VDH to URP devices */
        9        9
       10       10        KYV$VDI: PROC(PARM);

     10   2 000000  D380 0000 0000  xent KYV$VDI         LNJ,B5   X6A_AUTO_1
          2 000003       00ED 0001                       DC       237,1

       11       11        /*
       12       12               KYV$VDI receives all calls from VDH directed towards any
       13       13            URP device.  Therefore, I guess one could call this a real
       14       14            device handler (if one speaks VDHese).  The following calls
       15       15            are handled:
       16       16               DAT             -  data from VDH for the device
       17       17               EVT.CLS         -  close event
       18       18               DVCERRRSP       -  operator KEYIN response to device error
       19       19               EVT.LGNACP      -  logon accept event
       20       20               EVT.LGNRJC      -  logon reject event
       21       21               EVT.OPN         -  open event
       22       22               EVT.RLSSTR      -  VDH is going away
       23       23               EVT.SCH         -  deferred schedule event
       24       24               OTPMRK          -  output marker
       25       25               PST             -  position request
       26       26               RQSDAT          -  request data from the device
       27       27
       28       28            Inputs to the routine are pointers to the structure from VDH
       29       29            and to the KV$VDI structure for this device.  The pointer to
       30       30            the KV$VDI structure is determined in the sil interface (see
       31       31            KYV$SIL_VDI_) for reasons of efficiency.  Note that tracing
       32       32            is also done by the interface routine (again for reasons of
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:48   
       33       33            efficiency).
       34       34
       35       35        */
       36       36        /*
       37       37
       38       38               First, the pointers to the context and VDH context are set up.
       39       39            Next, the structure is validated for this device by checking the
       40       40            structure enable bits in the context.  After this point, it all
       41       41            works off a do case on structure type (event type for events).
       42       42            Since I hate to do all the commenting at once, please see the
       43       43            separate cases for more description (I really do have more info
       44       44            there).  Maybe you don't like it that way, but I like to have the
       45       45            descriptions close to the actual code.
       46       46
       47       47        */
       48       48        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
       49       49               ECI=0,DIN=7,CSU=3,AND      */
       50       50        %INCLUDE GH_HARDWARE_M;
       51      148        %INCLUDE LCP_6;
       52     4427        %INCLUDE KY_SCODE_C;
       53     4441        %VLP_SCODE (FPTN = BADFNC, FCG = KY, MID = V,ERR# = S$KY_ILGUSRFNC,STCLASS =
              4441            CONSTANT);
       54     4502        %VLP_SCODE (FPTN = BADEVT, FCG = KY, MID = V, ERR# = S$KY_ILGEVTID, STCLASS =
              4502            CONSTANT);
       55     4563       %VLP_SCODE (FPTN = BADPOS, FCG = KY, MID = V, ERR# = S$KY_ILGPOS, STCLASS = CONSTANT
              4563            );
       56     4624        %INCLUDE KL_AFCN_C;
       57     4725        %INCLUDE KL_MACRO_C;
       58     8077        %INCLUDE K_ID_E;
       59     8127        %K#ENTID_E;
       60     8146        %K#LYRID_E;
       61     8153        %INCLUDE KV_GLBCNS_E;
       62     8494        %INCLUDE KV_PRMID_E;
       63     8668        %INCLUDE KV$USR;
       64     8980        %INCLUDE KV$VDH;
       65     9411        %INCLUDE KV$GLB;
       66     9830        %INCLUDE KV$PRM;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:49   
       67    10043        %INCLUDE KV$GLBCTX;
       68    10488        %INCLUDE KY_URP_M;
       69    10783        %INCLUDE KY_PERR_C;
       70    10805        %INCLUDE KY_SUBS_C;
       71    10894        %INCLUDE KH$STT;
       72    10924        %INCLUDE KV_GLB_M;
       73    11046        %INCLUDE KY_DATA_R;
       74    11841        %INCLUDE KV$INT;
       75    12473        %INCLUDE KH_SCREECH_M;
       76    12484        %INCLUDE KHC_MAC_C;                     /* inhibit macros */
       77    12525        %INCLUDE KL_CONTROL_C;
       78    12905        %INCLUDE KH_MACRO_C;
       79    13648        %INCLUDE KH$CHN;
       80    13770        /**/
       81    13771        %EQU  KYV#DUMMY    = 0;                 /*  ADD_TO_Q inserts a dummy header  */
       82    13772        %EQU  KYV#NO_DUMMY = 1;                 /*  No dummy header inserted         */
       83    13773        %KV_USR_FNC_E;
       84    13789        %KV_USR_EVT_ID_E;
       85    13809        %KV_CMPCOD_E;
       86    13823        %KV#DATMOD_E;
       87    13829        %KV_DSCRSN_E;
       88    13838        %KV_PRMID_E;
       89    13994    1          DCL KYN$ENABLE ENTRY;
       90    13995    1          DCL KYN$DISABLE ENTRY;
       91    13996    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
       92    13997    1          DCL KVV$VDI ENTRY(1) ALTRET;     /*  never altrets  */
       93    13998    1          DCL KYK$KEYIN ENTRY(2);
       94    13999    1          DCL KYD$DISCON ENTRY(1);
       95    14000    1          DCL KYD$FLUSH ENTRY(1);
       96    14001    1          DCL KYD$INIT_DISCON ENTRY(1);
       97    14002    1          DCL KYI$IO ENTRY(2) ALTRET;
       98    14003    1          DCL KYN$OUR_HNDLR ENTRY(1);
       99    14004    1          DCL KYN$IUR_HNDLR ENTRY(1);
      100    14005    1          DCL KYQ$CLOSE ENTRY(1) ALTRET;
      101    14006    1          DCL KYQ$INIT ENTRY(1) ALTRET;
      102    14007    1          DCL KYQ$KILL ENTRY(1);
      103    14008    1          DCL KYQ$RESET ENTRY(1);
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:50   
      104    14009    1          DCL KYT$TIMEOUT ENTRY(1);
      105    14010    1          DCL KYS$IUR_SCHED ENTRY(2);
      106    14011    1          DCL KHD$SCREECH ENTRY(1);
      107    14012    1          DCL KYV$UNPACK_BIN ENTRY(2) OPTIONAL;
      108    14013    1          DCL KHA$ERRLOG ENTRY(2) ALTRET;
      109    14014        /*  */
      110    14015               %FPT_WRSYSLOG(FCG='KY',MID='V',STCLASS=STATIC);
      111    14110        /**/
      112    14111    1          DCL PARM UBIN;                   /*  structure from VDH  */
      113    14112        /**/
      114    14113    1          DCL BLANK_COUNT UBIN WORD;
      115    14114    1          DCL PAGLNG UBIN BYTE;
      116    14115    1          DCL SPACE_N SBIN WORD;
      117    14116    1          DCL TOF UBIN WORD;
      118    14117    1          DCL TEMP1 UBIN WORD;
      119    14118    1          DCL TEMP2 UBIN WORD;
      120    14119    1          DCL B1 BIT(1) UNAL;
      121    14120    1          DCL B2 BIT(1) UNAL;
      122    14121    1          DCL RSP UBIN WORD;
      123    14122    1          DCL VFU_C CHAR(400);
      124    14123    1          DCL VFU_BUF(0:199) REDEF VFU_C UBIN(16);
      125    14124    1          DCL VFU$ PTR;
      126    14125    1          DCL HIGHEST_LINE UBIN;
      127    14126    1          DCL LIN_INDX UBIN;
      128    14127    1          DCL CHAN_INDX UBIN;
      129    14128    1          DCL INDX UBIN;
      130    14129    1          DCL TEMP_LIN UBIN;
      131    14130
      132    14131    1          DCL 1 CHAN_MASK BASED ALIGNED,
      133    14132    1                 2 * BIT(2),
      134    14133    1                 2 CHANLO(0:5),
      135    14134    1                    3 NUM BIT(1),
      136    14135    1                 2 * BIT(2),
      137    14136    1                 2 CHANHI(0:5),
      138    14137    1                    3 NUM BIT(1);
      139    14138
      140    14139    1          DCL 1 CONSTANT_WORD STATIC,
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:51   
      141    14140    1                 2 * BIT(2) INIT('01'B),
      142    14141    1                 2 * BIT(6) INIT('0'B),
      143    14142    1                 2 * BIT(2) INIT('01'B),
      144    14143    1                 2 * BIT(6) INIT('0'B);
      145    14144        /**/
      146    14145    1          DCL CTX$ PTR;
      147    14146    1          DCL PARM$ PTR;
      148    14147        /**/
      149    14148        %KV$VDH_EVT (STCLASS=AUTO);
      150    14183        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      151    14218        %KV$VDH_OTPMRK (STCLASS=STATIC);
      152    14280        %KY$CTX  ( STCLASS = "BASED(CTX$)" );
      153    14457        %KY$CTX  ( NAME = KY$NEXT_CTX, STCLASS = BASED );
      154    14634        %KY$CTX  ( NAME = KY$PRIOR_CTX, STCLASS = BASED );
      155    14811        /**/
      156    14812        %KY$REC;
      157    14851        %KY$OUTMRK;
      158    14868        /**/
      159    14869        %KH$CHN;
      160    14993        /**/
      161    14994        /**/
      162    14995        %KV$PTR;
      163    15038        %KV$VDI;
      164    15109        %KV$MRD;
      165    15156        %KV$SRD;
      166    15431        /**/
      167    15432        %KV$USR_DAT       ( STCLASS = "BASED(PARM$)" );
      168    15516        %KV$USR_EVT       ( STCLASS = "BASED(PARM$)" );
      169    15551        %KV$USR_OTPMRK    ( STCLASS = "BASED(PARM$)" );
      170    15613        %KV$USR_PST       ( STCLASS = "BASED(PARM$)" );
      171    15683        %KV$USR_RQSDAT  ( STCLASS = "BASED(PARM$)" );
      172    15746        %KV$USR_SETPRM(STCLASS="BASED(PARM$)");
      173    15808        %KV$VFU;
      174    15855        %KV$MVD;
      175    15899        %KH$CTLTBL(FPTN=KH$CTLTBL,STCLASS="BASED(KH_CTLTBL$)");
      176    16111    1          DCL ONEWORD UBIN BASED;
      177    16112    1          DCL KH_CTLTBL$ PTR SYMREF;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:52   
      178    16113
      179    16114    1          DCL DAT_TMPL CHAR(1000) BASED;
      180    16115
      181    16116        %KY$REC     ( NAME = KY_DUMMY_REC, STCLASS = CONSTANT );
      182    16155        %KY$OUTMRK  ( NAME = KY_DUMMY_OUTMRK, STCLASS = CONSTANT );
      183    16172
      184    16173        %KY$REC     ( NAME = KY_ASC_REC, STCLASS = CONSTANT, TEXT = '!ASC' );
      185    16212        %KY$REC     ( NAME = KY_BIN_REC, STCLASS = CONSTANT, TEXT = '!BIN' );
      186    16251
      187    16252        %KV$VDH_OTPMRK  ( NAME = KV_VDH_OTPMRK, STCLASS = SYMREF );
      188    16314        /*
      189    16315            These subs MUST come immediately before the code.
      190    16316        */
      191    16317        %EQU CHAN_INDX_HI = 11;
      192    16318        %EQU LIN_INDX_HI  = 200;
      193    16319        %EQU CHAN_HI_BASE = 6;
      194    16320        %EQU TOFCHN = 0;
      195    16321        %EQU BOFCHN = 11;
      196    16322        %EQU CHAN_REVERSE = 5;
      197    16323        %SUB KY$NEXT_CTX  = "KY$CTX.NEXT$->KY$NEXT_CTX";
      198    16324        %SUB KY$PRIOR_CTX = "KY$CTX.PRIOR$->KY$PRIOR_CTX";
      199    16325
      200    16326        %SUB KY$REC    = "KY$CTX.Q.INPUT$->KY$REC";
      201    16327        %SUB KY$OUTMRK = "KY$CTX.Q.INPUT$->KY$OUTMRK";
      202    16328
      203    16329        %SUB DAT_TMPL = "KV$USR_DAT.DAT__.ADR$->DAT_TMPL";
      204    16330
      205    16331        %SUB KV$VDI = "KV$PTR.VDI$->KV$VDI";
      206    16332        %SUB KV$MRD = "KV$PTR.MRD$->KV$MRD";
      207    16333        %SUB VFU$ = "KV$PTR.MVD$->KV$MVD.VFU$";
      208    16334
      209    16335        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:53   
      210    16336        /*
      211    16337            Initialization consists of setting up the pointers to the VDH
      212    16338            structure, KV$VDI, and our context, and then making sure that
      213    16339            the structure that has been passed is one that we know how to
      214    16340            handle.  If the structure is NOT one that we like, screech.
      215    16341            If we have a disconnect pending, then the only things we
      216    16342            need to bother with are EVT.RLSSTR and OTPMRKs that must
      217    16343            be returned.  For everything else, we just return.
      218    16344        */
      219    16345
      220    16346    1          CALL KYN$DISABLE;

  16346   2 000005  CBF0 0000                            LAB,B4   0,IMO
          2 000007  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          2 00000A       0001                            DC       s:16347,PREL

      221    16347    1          PARM$ = ADDR(PARM);

  16347   2 00000B  ECC7 0004                            LDB,B6   @PARM,AUTO
          2 00000D  EFC7 00E0                            STB,B6   PARM$,AUTO

      222    16348
      223    16349    1          CTX$ = KV$VDI.USRCTX$;

  16349   2 00000F  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000012  CC85                                 LDB,B4   ,B5
          2 000013  BCC4 0002                            LDB,B3   2,B4
          2 000015  BFC7 00DE                            STB,B3   CTX$,AUTO

      224    16350        /*%TRACE(WHEREAT = 9,INPUT$ = "KY$CTX.Q.INPUT$");*/
      225    16351
      226    16352    1          IF NOT KY$CTX.VDIENB.STRENB ( KV$USR_DAT.FNC ) THEN

  16352   2 000017  B286                                 LLH,R3   ,B6
          2 000018  ABC3 0022                            LAB,B2   34,B3
          2 00001A  82B2                                 LB       ,B2,R3
          2 00001B  0501 000A                            BBT      s:16362,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:54   

      227    16353    2             DO;

      228    16354                   /*S* SCREECH_CODE: KYV-S$KY_ILGUSRFNC
      229    16355                        MESSAGE: UNITREC encountered a kv$usr.fnc it did not acknowledge*/
      230    16356                     %KH$SCREECH(COD = BADFNC);

  16358   2 00001D  BB80 0000 0000  03                   LAB,B3   0
          2 000020  CBF0 0100                            LAB,B4   256,IMO
          2 000022  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000025       0001                            DC       s:16362,PREL

      231    16360    2             END;

      232    16361
      233    16362    1          IF KV$USR_DAT.FNC = %KV_USR_FNC_EVT AND

  16362   2 000026  ECC7 00E0                            LDB,B6   PARM$,AUTO
          2 000028  E286                                 LLH,R6   ,B6
          2 000029  6D04                                 CMV,R6   4
          2 00002A  0981 0014                            BNE      s:16373,PREL
          2 00002C  B806                                 LDR,R3   ,B6
          2 00002D  B570 007F                            AND,R3   127,IMO
          2 00002F  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 000031  CBC5 0023                            LAB,B4   35,B5
          2 000033  82B4                                 LB       ,B4,R3
          2 000034  0501 000A                            BBT      s:16373,PREL

      234    16363    1             NOT KY$CTX.VDIENB.EVTENB ( KV$USR_EVT.ID ) THEN
      235    16364    2             DO;

      236    16365                   /*S* SCREECH_CODE: KYV-S$KY_ILGEVTID
      237    16366                      MESSAGE: UNITREC encountered a kv$usr_evt.id it did not acknowledge*/
      238    16367                     %KH$SCREECH(COD = BADEVT);

  16369   2 000036  BB80 0000 0002  03                   LAB,B3   +2
          2 000039  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:55   
          2 00003B  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00003E       0001                            DC       s:16373,PREL

      239    16371    2             END;

      240    16372
      241    16373    2          DO CASE ( KV$USR_DAT.FNC );

  16373   2 00003F  ECC7 00E0                            LDB,B6   PARM$,AUTO
          2 000041  B286                                 LLH,R3   ,B6
          2 000042  3D10                                 CMV,R3   16
          2 000043  0281 078F                            BGE      s:17079,PREL
          2 000045  A830 0000 004B  02                   LDR,R2   s:16373+12,R3
          2 000048  83A0 0000 005B  02                   JMP      s:16396,R2
          2 00004B       0778                            DC       s:17079,PREL
          2 00004C       0000                            DC       s:16396,PREL
          2 00004D       0778                            DC       s:17079,PREL
          2 00004E       0778                            DC       s:17079,PREL
          2 00004F       00FB                            DC       s:16448,PREL
          2 000050       0778                            DC       s:17079,PREL
          2 000051       0778                            DC       s:17079,PREL
          2 000052       0778                            DC       s:17079,PREL
          2 000053       0778                            DC       s:17079,PREL
          2 000054       0778                            DC       s:17079,PREL
          2 000055       0362                            DC       s:16779,PREL
          2 000056       0778                            DC       s:17079,PREL
          2 000057       0432                            DC       s:16863,PREL
          2 000058       053D                            DC       s:16942,PREL
          2 000059       0778                            DC       s:17079,PREL
          2 00005A       055B                            DC       s:16970,PREL

      242    16374
      243    16375        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:56   
      244    16376        /*
      245    16377            VDH is giving us data.  Currently, only the card punches receive
      246    16378            data in this manner.  Data is not directly stuffed into the Q
      247    16379            because we might have do to translation on binary data.
      248    16380
      249    16381            Is the data binary?
      250    16382               YES:
      251    16383                  Was the last data ASCII?
      252    16384                     YES:
      253    16385                        Convert the card punch to binary mode.
      254    16386                  Unpack the binary data ( 16/16 to 12/16 ).
      255    16387                  Add the data to the Q.
      256    16388               NO:
      257    16389                  Was the last data binary?
      258    16390                     YES:
      259    16391                        Convert the card punch to ASCII mode.
      260    16392                  Add the data to the Q.
      261    16393        */
      262    16394    2             CASE ( %KV_USR_FNC_DAT );

      263    16395
      264    16396    2                IF KV$USR_DAT.DATMOD = %KV#DATMOD_BNR THEN

  16396   2 00005B  E806                                 LDR,R6   ,B6
          2 00005C  6042                                 SOR,R6   2
          2 00005D  E570 0003                            AND,R6   3,IMO
          2 00005F  6D02                                 CMV,R6   2
          2 000060  0981 0084                            BNE      s:16425,PREL

      265    16397    3                   DO;

      266    16398    3                      IF NOT KY$CTX.MODE.BIN_IN THEN

  16398   2 000062  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 000064  82C5 000C                            LB,'0020'X        12,B5
          2 000066       0020
          2 000067  0501 0026                            BBT      s:16410,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:57   

      267    16399    4                         DO;               /*  convert the punch to binary mode  */

      268    16400    4                            KY$REC.RECSIZE = KY_BIN_REC.RECSIZE;

  16400   2 000069  CCC5 0012                            LDB,B4   18,B5
          2 00006B  D800 0000 001A  00                   LDR,R5   KY_BIN_REC
          2 00006E  DA84                                 SRM,R5,'00FF'X    ,B4
          2 00006F       00FF

      269    16401    4                            KY$REC = KY_BIN_REC;

  16401   2 000070  CCC5 0012                            LDB,B4   18,B5
          2 000072  E804                                 LDR,R6   ,B4
          2 000073  E570 00FF                            AND,R6   255,IMO
          2 000075  EF47 00E8                            STR,R6   GEN_DUMMY+2,AUTO
          2 000077  CFC7 00E9                            STB,B4   GEN_DUMMY+3,AUTO
          2 000079  AB80 0000 0000  00                   LAB,B2   BADFNC
          2 00007C  2C34                                 LDV,R2   52
          2 00007D  6C0E                                 LDV,R6   14
          2 00007E  BB84                                 LAB,B3   ,B4
          2 00007F  3C00                                 LDV,R3   0
          2 000080  F847 00E8                            LDR,R7   GEN_DUMMY+2,AUTO
          2 000082  7E0A                                 ADV,R7   10
          2 000083  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      270    16402    4                            CALL ADD_TO_Q ALTRET ( ABORT );

  16402   2 000086  E3C0 07BE                            LNJ,B6   s:0,PREL
          2 000088       079F                            DC       s:17113,PREL

      271    16403    4                            KY$CTX.MODE.BIN_IN = '1'B;

  16403   2 000089  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00008B  8946 000C                            LBT,'0020'X       12,B6
          2 00008D       0020

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:58   
      272    16404    4                         END;

      273    16405        /*
      274    16406                        unpack the data
      275    16407                        a SIL routine is used to avoid calling non-existant
      276    16408                        run-time routines
      277    16409        */
      278    16410    3                      KY$REC.RECSIZE = KY_DUMMY_REC.RECSIZE;

  16410   2 00008E  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000090  DCC6 0012                            LDB,B5   18,B6
          2 000092  E800 0000 0009  00                   LDR,R6   KY_DUMMY_REC
          2 000095  EA85                                 SRM,R6,'00FF'X    ,B5
          2 000096       00FF

      279    16411    3                      KY$REC = KY_DUMMY_REC;

  16411   2 000097  DCC6 0012                            LDB,B5   18,B6
          2 000099  D805                                 LDR,R5   ,B5
          2 00009A  D570 00FF                            AND,R5   255,IMO
          2 00009C  DF47 00E8                            STR,R5   GEN_DUMMY+2,AUTO
          2 00009E  DFC7 00E9                            STB,B5   GEN_DUMMY+3,AUTO
          2 0000A0  AB80 0000 0000  00                   LAB,B2   BADFNC
          2 0000A3  2C12                                 LDV,R2   18
          2 0000A4  6C0C                                 LDV,R6   12
          2 0000A5  BB85                                 LAB,B3   ,B5
          2 0000A6  3C00                                 LDV,R3   0
          2 0000A7  F855                                 LDR,R7   R5
          2 0000A8  7E0A                                 ADV,R7   10
          2 0000A9  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      280    16412    3                      KY$REC.RECSIZE = 4 * ( KV$USR_DAT.DAT__.DATBYTSIZ / 3 )

  16412   2 0000AC  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 0000AE  DCC6 0012                            LDB,B5   18,B6
          2 0000B0  CCC7 00E0                            LDB,B4   PARM$,AUTO
          2 0000B2  F844 0004                            LDR,R7   4,B4
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:59   
          2 0000B4  6C00                                 LDV,R6   0
          2 0000B5  F370 0003                            DIV,R7   3,IMO
          2 0000B7  FF47 00E8                            STR,R7   GEN_DUMMY+2,AUTO
          2 0000B9  F844 0004                            LDR,R7   4,B4
          2 0000BB  6C00                                 LDV,R6   0
          2 0000BC  F370 0003                            DIV,R7   3,IMO
          2 0000BE  D847 00E8                            LDR,R5   GEN_DUMMY+2,AUTO
          2 0000C0  5001                                 SOL,R5   1
          2 0000C1  DA56                                 ADD,R5   R6
          2 0000C2  5001                                 SOL,R5   1
          2 0000C3  DA85                                 SRM,R5,'00FF'X    ,B5
          2 0000C4       00FF

      281    16413    3                         + 2 * MOD ( KV$USR_DAT.DAT__.DATBYTSIZ, 3 );
      282    16414    3                      IF KY$REC.RECSIZE ~= 0 THEN

  16414   2 0000C5  DCC6 0012                            LDB,B5   18,B6
          2 0000C7  8285                                 LB,'00FF'X        ,B5
          2 0000C8       00FF
          2 0000C9  0581 000F                            BBF      s:16418,PREL

      283    16415    4                         DO;

      284    16416    4                            CALL KYV$UNPACK_BIN(KY$REC.TXT,KV$USR_DAT);

  16416   2 0000CB  CFC7 00EA                            STB,B4   GEN_DUMMY+4,AUTO
          2 0000CD  BBC5 0005                            LAB,B3   5,B5
          2 0000CF  BFC7 00E8                            STB,B3   GEN_DUMMY+2,AUTO
          2 0000D1  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 0000D3  CBF0 0200                            LAB,B4   512,IMO
          2 0000D5  E380 0000 0000  xent                 LNJ,B6   KYV$UNPACK_BIN
          2 0000D8       0001                            DC       s:16418,PREL

      285    16417    4                         END;

      286    16418    3                      KY$REC.BIN = '1'B;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:60   
  16418   2 0000D9  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 0000DB  DCC6 0012                            LDB,B5   18,B6
          2 0000DD  8945 0001                            LBT,'4000'X       1,B5
          2 0000DF       4000

      287    16419
      288    16420    3                      CALL ADD_TO_Q ALTRET ( ABORT );

  16420   2 0000E0  E3C0 0764                            LNJ,B6   s:0,PREL
          2 0000E2       0745                            DC       s:17113,PREL

      289    16421    3                   END;

  16421   2 0000E3  0F81 06EF                            B        s:17079,PREL

      290    16422    2                ELSE
      291    16423                                                /*  the data is ASCII  */
      292    16424    3                   DO;

      293    16425    3                      IF KY$CTX.MODE.BIN_IN THEN

  16425   2 0000E5  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0000E7  82C5 000C                            LB,'0020'X        12,B5
          2 0000E9       0020
          2 0000EA  0581 0026                            BBF      s:16433,PREL

      294    16426    4                         DO;               /*  convert the punch to ASCII mode  */

      295    16427    4                            KY$REC.RECSIZE = KY_ASC_REC.RECSIZE;

  16427   2 0000EC  CCC5 0012                            LDB,B4   18,B5
          2 0000EE  D800 0000 0013  00                   LDR,R5   KY_ASC_REC
          2 0000F1  DA84                                 SRM,R5,'00FF'X    ,B4
          2 0000F2       00FF

      296    16428    4                            KY$REC = KY_ASC_REC;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:61   
  16428   2 0000F3  CCC5 0012                            LDB,B4   18,B5
          2 0000F5  E804                                 LDR,R6   ,B4
          2 0000F6  E570 00FF                            AND,R6   255,IMO
          2 0000F8  EF47 00E8                            STR,R6   GEN_DUMMY+2,AUTO
          2 0000FA  CFC7 00E9                            STB,B4   GEN_DUMMY+3,AUTO
          2 0000FC  AB80 0000 0000  00                   LAB,B2   BADFNC
          2 0000FF  2C26                                 LDV,R2   38
          2 000100  6C0E                                 LDV,R6   14
          2 000101  BB84                                 LAB,B3   ,B4
          2 000102  3C00                                 LDV,R3   0
          2 000103  F847 00E8                            LDR,R7   GEN_DUMMY+2,AUTO
          2 000105  7E0A                                 ADV,R7   10
          2 000106  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      297    16429    4                            CALL ADD_TO_Q ALTRET ( ABORT );

  16429   2 000109  E3C0 073B                            LNJ,B6   s:0,PREL
          2 00010B       071C                            DC       s:17113,PREL

      298    16430    4                            KY$CTX.MODE.BIN_IN = '0'B;

  16430   2 00010C  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00010E  8846 000C                            LBF,'0020'X       12,B6
          2 000110       0020

      299    16431    4                         END;

      300    16432
      301    16433    3                      KY$REC = KY_DUMMY_REC;

  16433   2 000111  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000113  DCC6 0012                            LDB,B5   18,B6
          2 000115  E805                                 LDR,R6   ,B5
          2 000116  E570 00FF                            AND,R6   255,IMO
          2 000118  EF47 00E8                            STR,R6   GEN_DUMMY+2,AUTO
          2 00011A  DFC7 00E9                            STB,B5   GEN_DUMMY+3,AUTO
          2 00011C  AB80 0000 0000  00                   LAB,B2   BADFNC
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:62   
          2 00011F  2C12                                 LDV,R2   18
          2 000120  6C0C                                 LDV,R6   12
          2 000121  BB85                                 LAB,B3   ,B5
          2 000122  3C00                                 LDV,R3   0
          2 000123  F847 00E8                            LDR,R7   GEN_DUMMY+2,AUTO
          2 000125  7E0A                                 ADV,R7   10
          2 000126  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      302    16434    3                      KY$REC.RECSIZE = KV$USR_DAT.DAT__.DATBYTSIZ;

  16434   2 000129  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00012B  DCC6 0012                            LDB,B5   18,B6
          2 00012D  CCC7 00E0                            LDB,B4   PARM$,AUTO
          2 00012F  E844 0004                            LDR,R6   4,B4
          2 000131  EA85                                 SRM,R6,'00FF'X    ,B5
          2 000132       00FF

      303    16435    3                      TEMP1 = KV$USR_DAT.DAT__.BYTX;

  16435   2 000133  E844 0003                            LDR,R6   3,B4
          2 000135  EF47 000A                            STR,R6   TEMP1,AUTO

      304    16436    3                      TEMP2 = KV$USR_DAT.DAT__.DATBYTSIZ;

  16436   2 000137  D844 0004                            LDR,R5   4,B4
          2 000139  DF47 000B                            STR,R5   TEMP2,AUTO

      305    16437    3                      KY$REC.TXT = SUBSTR ( DAT_TMPL, TEMP1, TEMP2 );

  16437   2 00013B  DCC6 0012                            LDB,B5   18,B6
          2 00013D  C805                                 LDR,R4   ,B5
          2 00013E  C570 00FF                            AND,R4   255,IMO
          2 000140  BCC4 0001                            LDB,B3   1,B4
          2 000142  CF47 00E8                            STR,R4   GEN_DUMMY+2,AUTO
          2 000144  BFC7 00E9                            STB,B3   GEN_DUMMY+3,AUTO
          2 000146  DFC7 00EB                            STB,B5   GEN_DUMMY+5,AUTO
          2 000148  AB83                                 LAB,B2   ,B3
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:63   
          2 000149  A856                                 LDR,R2   R6
          2 00014A  E855                                 LDR,R6   R5
          2 00014B  BB85                                 LAB,B3   ,B5
          2 00014C  3C0A                                 LDV,R3   10
          2 00014D  F854                                 LDR,R7   R4
          2 00014E  D380 0000 0000  xent                 LNJ,B5   X6C_ALR

      306    16438    3                      CALL ADD_TO_Q ALTRET ( ABORT );

  16438   2 000151  E3C0 06F3                            LNJ,B6   s:0,PREL
          2 000153       06D4                            DC       s:17113,PREL

      307    16439    3                   END;

  16439   2 000154  0F81 067E                            B        s:17079,PREL

      308    16440
      309    16441        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:64   
      310    16442        /*
      311    16443            A user event can be any of several things.  The only thing
      312    16444            here is another DO CASE on event id.
      313    16445        */
      314    16446    2             CASE ( %KV_USR_FNC_EVT );

      315    16447
      316    16448    3                DO CASE ( KV$USR_EVT.ID );

  16448   2 000156  9806                                 LDR,R1   ,B6
          2 000157  9570 007F                            AND,R1   127,IMO
          2 000159  1D10                                 CMV,R1   16
          2 00015A  0281 0678                            BGE      s:17079,PREL
          2 00015C  B810 0000 0162  02                   LDR,R3   s:16448+12,R1
          2 00015F  83B0 0000 0172  02                   JMP      s:16467,R3
          2 000162       0249                            DC       s:16743,PREL
          2 000163       0249                            DC       s:16743,PREL
          2 000164       0000                            DC       s:16467,PREL
          2 000165       0249                            DC       s:16743,PREL
          2 000166       0249                            DC       s:16743,PREL
          2 000167       0249                            DC       s:16743,PREL
          2 000168       0249                            DC       s:16743,PREL
          2 000169       0249                            DC       s:16743,PREL
          2 00016A       0040                            DC       s:16507,PREL
          2 00016B       00CF                            DC       s:16554,PREL
          2 00016C       0113                            DC       s:16608,PREL
          2 00016D       01A6                            DC       s:16671,PREL
          2 00016E       01B0                            DC       s:16699,PREL
          2 00016F       0249                            DC       s:16743,PREL
          2 000170       0249                            DC       s:16743,PREL
          2 000171       023C                            DC       s:16737,PREL

      317    16449
      318    16450        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:65   
      319    16451        /*
      320    16452            A close event signifies the close of the current symbiont file.
      321    16453            In normal termination, an output marker will have been sent to
      322    16454            ensure that all the data has been printed.  In abnormal term-
      323    16455            ination, the close is implicit permission to throw away all the
      324    16456            data currently queued.  Get the device to a quiescient state
      325    16457            and wait for the next open.
      326    16458
      327    16459            Set the STRENB / EVTENB to accept EVT.RLSSTR, EVT.OPN and OTPMRK.
      328    16460            Call KYD$FLUSH.
      329    16461            Is this a card reader?
      330    16462               YES:
      331    16463                  Call KYS$IUR_SCHED to check for more cards.
      332    16464        */
      333    16465    3                   CASE ( %KV_USR_EVT_ID_CLS );

      334    16466
      335    16467    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );

  16467   2 000172  DB80 0000 0000                       LAB,B5   0
          2 000175  CCC7 00DE                            LDB,B4   CTX$,AUTO
          2 000177  DFC4 0022                            STB,B5   34,B4

      336    16468    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );

  16468   2 000179  BB80 0000 0000                       LAB,B3   0
          2 00017C  BFC4 0024                            STB,B3   36,B4

      337    16469    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;

  16469   2 00017E  8944 0022                            LBT,'0800'X       34,B4
  16469   2 000180       0800

      338    16470    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;

  16470   2 000181  8944 0022                            LBT,'0020'X       34,B4
  16470   2 000183       0020
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:66   

      339    16471
      340    16472    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;

  16472   2 000184  8944 0023                            LBT,'0010'X       35,B4
  16472   2 000186       0010

      341    16473    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;

  16473   2 000187  8944 0023                            LBT,'0001'X       35,B4
  16473   2 000189       0001

      342    16474    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_OPN ) = '1'B;

  16474   2 00018A  8944 0023                            LBT,'0020'X       35,B4
  16474   2 00018C       0020

      343    16475    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;

  16475   2 00018D  8944 0023                            LBT,'0008'X       35,B4
  16475   2 00018F       0008

      344    16476    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_LGNRJC ) = '1'B;

  16476   2 000190  8944 0023                            LBT,'0040'X       35,B4
  16476   2 000192       0040

      345    16477
      346    16478    3                      CALL KYD$FLUSH ( KY$CTX );

  16478   2 000193  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 000195  CBF0 0100                            LAB,B4   256,IMO
          2 000197  E380 0000 0000  xent                 LNJ,B6   KYD$FLUSH
          2 00019A       0001                            DC       s:16480,PREL

      347    16479
      348    16480    3                      IF KY$CTX.DVCTYP = %KY#TYP_CR THEN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:67   

  16480   2 00019B  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00019D  E2C6 000B                            LLH,R6   11,B6
          2 00019F  6D03                                 CMV,R6   3
          2 0001A0  0981 0632                            BNE      s:17079,PREL

      349    16481    4                         DO;

      350    16482    4                            CALL KYS$IUR_SCHED ( KY$CTX, %KY#CALL_VDH );

  16482   2 0001A2  DBF0 0001                            LAB,B5   1,IMO
          2 0001A4  DFC7 00EA                            STB,B5   GEN_DUMMY+4,AUTO
          2 0001A6  EFC7 00E8                            STB,B6   GEN_DUMMY+2,AUTO
          2 0001A8  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 0001AA  CBF0 0200                            LAB,B4   512,IMO
          2 0001AC  E380 0000 0000  xent                 LNJ,B6   KYS$IUR_SCHED
          2 0001AF       0001                            DC       s:16483,PREL

      351    16483    4                         END;

  16483   2 0001B0  0F81 0622                            B        s:17079,PREL

      352    16484
      353    16485        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:68   
      354    16486        /*
      355    16487            A logon accept event means that the host is now ready to talk to
      356    16488            the device.  This means that the device should now be initialized
      357    16489            and the device state set to idle.  Also, for output devices the
      358    16490            Q is initialized, and for input devices the input buffer is now
      359    16491            obtained.  For card readers, KYS$IUR_SCHED is called to determine
      360    16492            if there are cards to be read.
      361    16493
      362    16494            Set device state to idle.
      363    16495            Set the STRENB / EVTENB bits to receive EVT.RLSSTR, EVT.OPN,
      364    16496               and OTPMRK.
      365    16497            Call IO_LOC to initialize the device.
      366    16498            LP and CP:
      367    16499               Initialize the Q.
      368    16500               Tell VDH we want output.
      369    16501            CR:
      370    16502               Obtain an input buffer.
      371    16503               Call KYS$IUR_SCHED to check for cards ready to be read.
      372    16504        */
      373    16505    3                   CASE ( %KV_USR_EVT_ID_LGNACP );

      374    16506
      375    16507    3                      KY$CTX.DVC_STATE = %KY#ST_IDLE;

  16507   2 0001B2  6C01                                 LDV,R6   1
          2 0001B3  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0001B5  E7C5 0004                            STH,R6   4,B5

      376    16508    3                      KY$CTX.DSCPND = '0'B;

  16508   2 0001B7  8845 0005                            LBF,'0080'X       5,B5
  16508   2 0001B9       0080

      377    16509
      378    16510    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );

  16510   2 0001BA  CB80 0000 0000                       LAB,B4   0
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:69   
          2 0001BD  CFC5 0022                            STB,B4   34,B5

      379    16511    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );

  16511   2 0001BF  BB80 0000 0000                       LAB,B3   0
          2 0001C2  BFC5 0024                            STB,B3   36,B5

      380    16512    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;

  16512   2 0001C4  8945 0022                            LBT,'0800'X       34,B5
  16512   2 0001C6       0800

      381    16513    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;

  16513   2 0001C7  8945 0022                            LBT,'0020'X       34,B5
  16513   2 0001C9       0020

      382    16514
      383    16515    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;

  16515   2 0001CA  8945 0023                            LBT,'0010'X       35,B5
  16515   2 0001CC       0010

      384    16516    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;

  16516   2 0001CD  8945 0023                            LBT,'0001'X       35,B5
  16516   2 0001CF       0001

      385    16517    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_OPN ) = '1'B;

  16517   2 0001D0  8945 0023                            LBT,'0020'X       35,B5
  16517   2 0001D2       0020

      386    16518    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;

  16518   2 0001D3  8945 0023                            LBT,'0008'X       35,B5
  16518   2 0001D5       0008
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:70   

      387    16519
      388    16520    3                      CALL KYI$IO(KY$CTX,%KY#INIT) ALTRET(ABORT);

  16520   2 0001D6  CBF0 0000                            LAB,B4   0,IMO
          2 0001D8  CFC7 00EA                            STB,B4   GEN_DUMMY+4,AUTO
          2 0001DA  DFC7 00E8                            STB,B5   GEN_DUMMY+2,AUTO
          2 0001DC  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 0001DE  CBF0 0200                            LAB,B4   512,IMO
          2 0001E0  E380 0000 0000  xent                 LNJ,B6   KYI$IO
          2 0001E3       0644                            DC       s:17113,PREL

      389    16521
      390    16522    3                      IF KY$CTX.DVCTYP = %KY#TYP_CR THEN

  16522   2 0001E4  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 0001E6  E2C6 000B                            LLH,R6   11,B6
          2 0001E8  6D03                                 CMV,R6   3
          2 0001E9  0981 0030                            BNE      s:16532,PREL

      391    16523    4                         DO;

      392    16524    4                            KY$CTX.INPUT.BUF_SIZE = %KY#CRTEXT_SIZE;

  16524   2 0001EB  5C50                                 LDV,R5   80
          2 0001EC  DF46 001C                            STR,R5   28,B6

      393    16525    4                            CALL KVB$GET2NSYS(KY$CTX.INPUT.BUF_SIZE,KY$CTX.INPUT.BUF$)
             16525                                     ALTRET(BUF_ABORT);

  16525   2 0001EE  DBC6 001A                            LAB,B5   26,B6
          2 0001F0  DFC7 00EA                            STB,B5   GEN_DUMMY+4,AUTO
          2 0001F2  CBC6 001C                            LAB,B4   28,B6
          2 0001F4  CFC7 00E8                            STB,B4   GEN_DUMMY+2,AUTO
          2 0001F6  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 0001F8  CBF0 0200                            LAB,B4   512,IMO
          2 0001FA  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:71   
          2 0001FD       05DF                            DC       s:17061,PREL

      394    16526    4                            KY_STT_URP.USRSTT.INPBFRBYTUTL = KY_STT_URP.USRSTT.
             16526                                     INPBFRBYTUTL +

  16526   2 0001FE  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000200  F846 001C                            LDR,R7   28,B6
          2 000202  6C00                                 LDV,R6   0
          2 000203  7081                                 DOL,R7   1
          2 000204  8400 0000 001C  xsym                 AID      KY_STT_URP+28
          2 000207  8D00 0000 001C  xsym                 SDI      KY_STT_URP+28

      395    16527    4                               KY$CTX.INPUT.BUF_SIZE * 2;
      396    16528    4                            CALL KYS$IUR_SCHED ( KY$CTX, %KY#CALL_VDH );

  16528   2 00020A  DBF0 0001                            LAB,B5   1,IMO
          2 00020C  DFC7 00EA                            STB,B5   GEN_DUMMY+4,AUTO
          2 00020E  EFC7 00E8                            STB,B6   GEN_DUMMY+2,AUTO
          2 000210  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 000212  CBF0 0200                            LAB,B4   512,IMO
          2 000214  E380 0000 0000  xent                 LNJ,B6   KYS$IUR_SCHED
          2 000217       0001                            DC       s:16529,PREL

      397    16529    4                         END;              /* IF DVCTYP = CR */

  16529   2 000218  0F81 05BA                            B        s:17079,PREL

      398    16530    3                      ELSE
      399    16531    4                         DO;

      400    16532    4                            CALL KYQ$INIT ( KY$CTX ) ALTRET ( Q_ABORT );

  16532   2 00021A  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 00021C  CBF0 0100                            LAB,B4   256,IMO
          2 00021E  E380 0000 0000  xent                 LNJ,B6   KYQ$INIT
          2 000221       05DE                            DC       s:17093,PREL

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:72   
      401    16533    4                            IF NOT %KV_VDI.RQSOTP THEN

  16533   2 000222  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000225  DC86                                 LDB,B5   ,B6
          2 000226  82C5 0019                            LB,'0008'X        25,B5
          2 000228       0008
          2 000229  0501 05A9                            BBT      s:17079,PREL

      402    16534    5                               DO;

      403    16535    5                                  %KV_VDI.RQSOTP = '1'B;

  16535   2 00022B  8945 0019                            LBT,'0008'X       25,B5
  16535   2 00022D       0008

      404    16536    5                                  KV$VDH_EVT = KV_VDH_EVT_RQSOTP;

  16536   2 00022E  8C80 0000 0000  xsym                 LDI      KV_VDH_EVT_RQSOTP
          2 000231  8D47 00E2                            SDI      KV$VDH_EVT,AUTO

      405    16537    5                                  CALL KVV$VDI(KV$VDH_EVT);

  16537   2 000233  DBC7 00E2                            LAB,B5   KV$VDH_EVT,AUTO
          2 000235  DFC7 00E8                            STB,B5   GEN_DUMMY+2,AUTO
          2 000237  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 000239  CBF0 0100                            LAB,B4   256,IMO
          2 00023B  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00023E       0001                            DC       s:16539,PREL

      406    16538    5                               END;        /* IF NOT %KV_VDI.RQSOTP */

      407    16539    4                         END; /* ELSE

  16539   2 00023F  0F81 0593                            B        s:17079,PREL

      408    16540                                          */
      409    16541
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:73   
      410    16542        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:74   
      411    16543        /*
      412    16544            The host did not accept the logon, so it's time to go away.
      413    16545            Do an error log so someone can figure out what is going on,
      414    16546            then call VDH to disconnect.
      415    16547
      416    16548            Also change the STRENB / EVTENB bits so that the only thing we
      417    16549            can see after this is the RLSSTR event.
      418    16550        */
      419    16551    3                   CASE ( %KV_USR_EVT_ID_LGNRJC );

      420    16552
      421    16553        %SET LISTSUB = '1'B;
      422    16554    3                      FPT_WRSYSLOG.V.TERMID = KV$PTR.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;

  16554   2 000241  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000244  CC85                                 LDB,B4   ,B5
          2 000245  BC84                                 LDB,B3   ,B4
          2 000246  AB83                                 LAB,B2   ,B3
          2 000247  2C24                                 LDV,R2   36
          2 000248  6C10                                 LDV,R6   16
          2 000249  BB80 0000 0000  01                   LAB,B3   FPT_WRSYSLOG
          2 00024C  3C10                                 LDV,R3   16
          2 00024D  0008                                 MMM

      423    16555    3                      FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_LGNRJC;

  16555   2 00024E  E870 0968                            LDR,R6   2408,IMO
          2 000250  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 000253       FFF8

      424    16556    3                      CALL KHA$ERRLOG(FPT_WRSYSLOG);

  16556   2 000254  BB80 0000 0004  03                   LAB,B3   +4
          2 000257  CBF0 0100                            LAB,B4   256,IMO
          2 000259  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 00025C       0001                            DC       s:16563,PREL

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:75   
      425    16557                        /*E* ERROR: KYV-GG#EC_KYV_LGNRJC
      426    16558                             MESSAGE: Logon rejected.
      427    16559                             MESSAGE1: The logon string specified on the enable
      428    16560                                       was rejected by the host.
      429    16561                             DESCRIPTION: Bad logon specified.        */
      430    16562
      431    16563    3                      IF KY$CTX.DSCRSN ~= %KV_DSCRSN_FRG THEN

  16563   2 00025D  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00025F  E846 0021                            LDR,R6   33,B6
          2 000261  E570 00FF                            AND,R6   255,IMO
          2 000263  6D03                                 CMV,R6   3
          2 000264  0901 0005                            BE       s:16568,PREL

      432    16564    4                         DO;

      433    16565    4                            KY$CTX.DSCRSN = %KV_DSCRSN_PTH;

  16565   2 000266  5C02                                 LDV,R5   2
          2 000267  DAC6 0021                            SRM,R5,'00FF'X    33,B6
          2 000269       00FF

      434    16566    4                         END;

      435    16567
      436    16568    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );

  16568   2 00026A  DB80 0000 0000                       LAB,B5   0
          2 00026D  DFC6 0022                            STB,B5   34,B6

      437    16569    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );

  16569   2 00026F  CB80 0000 0000                       LAB,B4   0
          2 000272  CFC6 0024                            STB,B4   36,B6

      438    16570    3                      KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:76   
  16570   2 000274  8946 0022                            LBT,'0800'X       34,B6
  16570   2 000276       0800

      439    16571
      440    16572    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;

  16572   2 000277  8946 0023                            LBT,'0010'X       35,B6
  16572   2 000279       0010

      441    16573    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;

  16573   2 00027A  8946 0023                            LBT,'0001'X       35,B6
  16573   2 00027C       0001

      442    16574    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;

  16574   2 00027D  8946 0023                            LBT,'0008'X       35,B6
  16574   2 00027F       0008

      443    16575    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_CLS ) = '1'B;

  16575   2 000280  8946 0023                            LBT,'2000'X       35,B6
  16575   2 000282       2000
          2 000283  0F81 054F                            B        s:17079,PREL

      444    16576
      445    16577        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:77   
      446    16578        /*
      447    16579            A symbiont file is being opened for this device.  For line
      448    16580            printers, insert a dummy header innto the Q in case VDH doesn't
      449    16581            do a position and update VDH's context so it knows where to stuff
      450    16582            the data.  For card punches, force the mode to ASCII.  For card
      451    16583            readers, also force the mode to ASCII, then start wait for the
      452    16584            RQSDAT to start reading the cards.
      453    16585
      454    16586            STRENB / EVTENB settings:
      455    16587               CR:
      456    16588                  STRENB: EVT,RQSDAT
      457    16589                  EVTENB: CLS, RLSSTR, SCH
      458    16590               CP:
      459    16591                  STRENB: DAT, EVT, OTPMRK
      460    16592                  EVTENB: CLS, RLSSTR, SCH
      461    16593               LP:
      462    16594                  STRENB: EVT, OTPMRK, PST
      463    16595                  EVTENB: CLS, RLSSTR, SCH
      464    16596            Is a disconnect pending?
      465    16597               NO:
      466    16598                  LP:
      467    16599                     Insert a dummy KY$REC.
      468    16600                     Update VDH's pointers.
      469    16601                  CP:
      470    16602                     Force the mode to ASCII.
      471    16603                  CR:
      472    16604                     Force the mode to ASCII.
      473    16605        */
      474    16606    3                   CASE ( %KV_USR_EVT_ID_OPN );

      475    16607
      476    16608    3                      KY$CTX.CLEAR_VDIENB.PTR1 = ADDR ( NIL );

  16608   2 000285  DB80 0000 0000                       LAB,B5   0
          2 000288  CCC7 00DE                            LDB,B4   CTX$,AUTO
          2 00028A  DFC4 0022                            STB,B5   34,B4

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:78   
      477    16609    3                      KY$CTX.CLEAR_VDIENB.PTR2 = ADDR ( NIL );

  16609   2 00028C  BB80 0000 0000                       LAB,B3   0
          2 00028F  BFC4 0024                            STB,B3   36,B4

      478    16610    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_CLS ) = '1'B;

  16610   2 000291  8944 0023                            LBT,'2000'X       35,B4
  16610   2 000293       2000

      479    16611    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSSTR ) = '1'B;

  16611   2 000294  8944 0023                            LBT,'0010'X       35,B4
  16611   2 000296       0010

      480    16612    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_RLSVDI ) = '1'B;

  16612   2 000297  8944 0023                            LBT,'0001'X       35,B4
  16612   2 000299       0001

      481    16613    3                      KY$CTX.VDIENB.EVTENB ( %KV_USR_EVT_ID_SCH ) = '1'B;

  16613   2 00029A  8944 0023                            LBT,'0008'X       35,B4
  16613   2 00029C       0008

      482    16614
      483    16615    4                      DO CASE ( KY$CTX.DVCTYP );

  16615   2 00029D  B2C4 000B                            LLH,R3   11,B4
          2 00029F  3D04                                 CMV,R3   4
          2 0002A0  0281 0532                            BGE      s:17079,PREL
          2 0002A2  A830 0000 02A8  02                   LDR,R2   s:16615+11,R3
          2 0002A5  83A0 0000 02AC  02                   JMP      s:16619,R2
          2 0002A8       006A                            DC       s:16660,PREL
          2 0002A9       0000                            DC       s:16619,PREL
          2 0002AA       0043                            DC       s:16636,PREL
          2 0002AB       0056                            DC       s:16647,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:79   

      484    16616
      485    16617    4                         CASE ( %KY#TYP_LP );

      486    16618
      487    16619    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;

  16619   2 0002AC  8944 0022                            LBT,'0800'X       34,B4
  16619   2 0002AE       0800

      488    16620    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;

  16620   2 0002AF  8944 0022                            LBT,'0020'X       34,B4
  16620   2 0002B1       0020

      489    16621    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_SETPRM) = '1'B;

  16621   2 0002B2  8944 0022                            LBT,'0001'X       34,B4
  16621   2 0002B4       0001

      490    16622    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_PST) = '1'B;

  16622   2 0002B5  8944 0022                            LBT,'0008'X       34,B4
  16622   2 0002B7       0008

      491    16623
      492    16624    4                            IF NOT KY$CTX.DSCPND THEN

  16624   2 0002B8  82C4 0005                            LB,'0080'X        5,B4
  16624   2 0002BA       0080
          2 0002BB  0501 0517                            BBT      s:17079,PREL

      493    16625    5                               DO;

      494    16626    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KY_DUMMY_REC.
             16626                                           RECSIZE;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:80   
  16626   2 0002BD  DCC4 0012                            LDB,B5   18,B4
          2 0002BF  E800 0000 0009  00                   LDR,R6   KY_DUMMY_REC
          2 0002C2  EA85                                 SRM,R6,'00FF'X    ,B5
          2 0002C3       00FF

      495    16627    5                                  KY$CTX.Q.INPUT$->KY$REC = KY_DUMMY_REC;

  16627   2 0002C4  DCC4 0012                            LDB,B5   18,B4
          2 0002C6  D805                                 LDR,R5   ,B5
          2 0002C7  D570 00FF                            AND,R5   255,IMO
          2 0002C9  DF47 00E8                            STR,R5   GEN_DUMMY+2,AUTO
          2 0002CB  DFC7 00E9                            STB,B5   GEN_DUMMY+3,AUTO
          2 0002CD  AB80 0000 0000  00                   LAB,B2   BADFNC
          2 0002D0  2C12                                 LDV,R2   18
          2 0002D1  6C0C                                 LDV,R6   12
          2 0002D2  BB85                                 LAB,B3   ,B5
          2 0002D3  3C00                                 LDV,R3   0
          2 0002D4  F855                                 LDR,R7   R5
          2 0002D5  7E0A                                 ADV,R7   10
          2 0002D6  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ

      496    16628
      497    16629    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR ( KY$CTX.Q.
             16629                                           INPUT$->KY$REC.TXT );

  16629   2 0002D9  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0002DC  DC86                                 LDB,B5   ,B6
          2 0002DD  CCC7 00DE                            LDB,B4   CTX$,AUTO
          2 0002DF  BCC4 0012                            LDB,B3   18,B4
          2 0002E1  ABC3 0005                            LAB,B2   5,B3
          2 0002E3  AFC5 000A                            STB,B2   10,B5

      498    16630    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = 0;

  16630   2 0002E5  DC86                                 LDB,B5   ,B6
          2 0002E6  8745 000C                            CL       12,B5

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:81   
      499    16631    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = %
             16631                                           KY#MAXTEXT_SIZEB;

  16631   2 0002E8  DC86                                 LDB,B5   ,B6
          2 0002E9  E870 00A0                            LDR,R6   160,IMO
          2 0002EB  EF45 000D                            STR,R6   13,B5

      500    16632    5                               END;

  16632   2 0002ED  0F81 04E5                            B        s:17079,PREL

      501    16633
      502    16634    4                         CASE ( %KY#TYP_CP );

      503    16635
      504    16636    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_DAT ) = '1'B;

  16636   2 0002EF  8944 0022                            LBT,'4000'X       34,B4
  16636   2 0002F1       4000

      505    16637    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;

  16637   2 0002F2  8944 0022                            LBT,'0800'X       34,B4
  16637   2 0002F4       0800

      506    16638    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;

  16638   2 0002F5  8944 0022                            LBT,'0020'X       34,B4
  16638   2 0002F7       0020

      507    16639
      508    16640    4                            IF NOT KY$CTX.DSCPND THEN

  16640   2 0002F8  82C4 0005                            LB,'0080'X        5,B4
  16640   2 0002FA       0080
          2 0002FB  0501 04D7                            BBT      s:17079,PREL

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:82   
      509    16641    5                               DO;

      510    16642    5                                  KY$CTX.MODE.BIN_IN = '0'B;

  16642   2 0002FD  8844 000C                            LBF,'0020'X       12,B4
  16642   2 0002FF       0020

      511    16643    5                               END;

  16643   2 000300  0F81 04D2                            B        s:17079,PREL

      512    16644
      513    16645    4                         CASE ( %KY#TYP_CR );

      514    16646
      515    16647    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_OTPMRK ) = '1'B;

  16647   2 000302  8944 0022                            LBT,'0020'X       34,B4
  16647   2 000304       0020

      516    16648                                        /* this is necessary because on an open event
      517    16649                                           it is not know if the device is input or output
      518    16650                                      so an otpmrk is always sent this marker is ignored */
      519    16651    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_EVT ) = '1'B;

  16651   2 000305  8944 0022                            LBT,'0800'X       34,B4
  16651   2 000307       0800

      520    16652    4                            KY$CTX.VDIENB.STRENB ( %KV_USR_FNC_RQSDAT ) = '1'B;

  16652   2 000308  8944 0022                            LBT,'0004'X       34,B4
  16652   2 00030A       0004

      521    16653    4                            KY$CTX.INPUT.EOF = '0'B;

  16653   2 00030B  8844 001E                            LBF,'4000'X       30,B4
  16653   2 00030D       4000
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:83   

      522    16654
      523    16655    4                            IF NOT KY$CTX.DSCPND THEN

  16655   2 00030E  82C4 0005                            LB,'0080'X        5,B4
  16655   2 000310       0080
          2 000311  0501 04C1                            BBT      s:17079,PREL

      524    16656    5                               DO;

      525    16657    5                                  KY$CTX.MODE.BIN_CURR = '0'B;

  16657   2 000313  8844 000C                            LBF,'0080'X       12,B4
  16657   2 000315       0080

      526    16658    5                               END;

      527    16659
      528    16660    4                      END;                 /*  CASE on KY$CTX.DVCTYP  */

  16660   2 000316  0F81 04BC                            B        s:17079,PREL

      529    16661
      530    16662
      531    16663        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:84   
      532    16664        /*
      533    16665            VDH is going away.  It has released everything but KV$VDI, and
      534    16666            we should now do any clean-up and release our context.  To do
      535    16667            all this magic, just call KYD$DISCON.
      536    16668        */
      537    16669    3                   CASE ( %KV_USR_EVT_ID_RLSSTR );

      538    16670
      539    16671    3                      CALL KYD$DISCON ( KY$CTX );

  16671   2 000318  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 00031A  CBF0 0100                            LAB,B4   256,IMO
          2 00031C  E380 0000 0000  xent                 LNJ,B6   KYD$DISCON
          2 00031F       0001                            DC       s:16671+8,PREL
          2 000320  0F81 04B2                            B        s:17079,PREL

      540    16672
      541    16673        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:85   
      542    16674        /*
      543    16675            VDH is telling us it is now okay do process something that we
      544    16676            couldn't do before because VDH was running.  There are 3 cases:
      545    16677            interrupts, time-outs, and disconnects from handler common.
      546    16678            Only the time-out and interrupt checks are done disabled, since
      547    16679            there are timing windows involved.  Disconnect will disable in
      548    16680            the called routines whenever necessary.
      549    16681
      550    16682            Disable.
      551    16683               Interrupt?
      552    16684                  YES:
      553    16685                     Call the interrupt handler.
      554    16686                     More than one interrupt with different device states?
      555    16687                        YES:
      556    16688                           Call the interrupt handler again.
      557    16689               Time-out?
      558    16690                  YES:
      559    16691                     Call the time-out routine.
      560    16692            Enable.
      561    16693            Disconnect?
      562    16694               YES:
      563    16695                  Call KYD$INIT_DISCON.
      564    16696        */
      565    16697    3                   CASE ( %KV_USR_EVT_ID_SCH );

      566    16698
      567    16699    3                      CALL KYN$DISABLE;

  16699   2 000322  CBF0 0000                            LAB,B4   0,IMO
          2 000324  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          2 000327       0001                            DC       s:16701,PREL

      568    16700
      569    16701    3                      IF KY$CTX.RESCHEDULE.INTERRUPT THEN

  16701   2 000328  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00032A  82C6 0021                            LB,'4000'X        33,B6
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:86   
          2 00032C       4000
          2 00032D  0581 0058                            BBF      s:16721,PREL

      570    16702    4                         DO;

      571    16703    4                            IF KY$CTX.DVCTYP=%KY#TYP_CR THEN

  16703   2 00032F  E2C6 000B                            LLH,R6   11,B6
          2 000331  6D03                                 CMV,R6   3
          2 000332  0981 000B                            BNE      s:16706,PREL

      572    16704    4                               CALL KYN$IUR_HNDLR(KY$CTX);

  16704   2 000334  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 000336  CBF0 0100                            LAB,B4   256,IMO
          2 000338  E380 0000 0000  xent                 LNJ,B6   KYN$IUR_HNDLR
          2 00033B       0001                            DC       s:16704+8,PREL
          2 00033C  0F81 0009                            B        s:16707,PREL

      573    16705    4                            ELSE
      574    16706    4                               CALL KYN$OUR_HNDLR(KY$CTX);

  16706   2 00033E  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 000340  CBF0 0100                            LAB,B4   256,IMO
          2 000342  E380 0000 0000  xent                 LNJ,B6   KYN$OUR_HNDLR
          2 000345       0001                            DC       s:16707,PREL

      575    16707    4                            B1 = KY$CTX.LP_STATUS.DEV_READY;

  16707   2 000346  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000348  E846 0006                            LDR,R6   6,B6
          2 00034A  E570 8000                            AND,R6   -32768,IMO
          2 00034C  EF47 000C                            STR,R6   B1,AUTO

      576    16708    4                            B2 = KY$CTX.DEFRD.ONLINE;

  16708   2 00034E  D846 0020                            LDR,R5   32,B6
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:87   
          2 000350  D570 8000                            AND,R5   -32768,IMO
          2 000352  DF47 000D                            STR,R5   B2,AUTO

      577    16709    4                            IF KY$CTX.DEFRD.INTRPT AND ( B1 \ B2 ) THEN

  16709   2 000354  89C6 001F                            CMZ      31,B6
          2 000356  0881 002C                            BAGE     s:16718,PREL
          2 000358  C847 000C                            LDR,R4   B1,AUTO
          2 00035A  C570 8000                            AND,R4   -32768,IMO
          2 00035C  B847 000D                            LDR,R3   B2,AUTO
          2 00035E  B570 8000                            AND,R3   -32768,IMO
          2 000360  C653                                 XOR,R4   R3
          2 000361  4901 0021                            BEZ,R4   s:16718,PREL

      578    16710    5                               DO;

      579    16711    5                                  KY$CTX.STATUSW = KY$CTX.DEFRD.STATUSW;

  16711   2 000363  C846 0020                            LDR,R4   32,B6
          2 000365  CF46 0006                            STR,R4   6,B6

      580    16712    5                                  IF KY$CTX.DVCTYP=%KY#TYP_CR THEN

  16712   2 000367  E2C6 000B                            LLH,R6   11,B6
          2 000369  6D03                                 CMV,R6   3
          2 00036A  0981 000B                            BNE      s:16715,PREL

      581    16713    5                                     CALL KYN$IUR_HNDLR(KY$CTX);

  16713   2 00036C  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 00036E  CBF0 0100                            LAB,B4   256,IMO
          2 000370  E380 0000 0000  xent                 LNJ,B6   KYN$IUR_HNDLR
          2 000373       0001                            DC       s:16713+8,PREL
          2 000374  0F81 0009                            B        s:16716,PREL

      582    16714    5                                  ELSE
      583    16715    5                                     CALL KYN$OUR_HNDLR(KY$CTX);
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:88   

  16715   2 000376  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 000378  CBF0 0100                            LAB,B4   256,IMO
          2 00037A  E380 0000 0000  xent                 LNJ,B6   KYN$OUR_HNDLR
          2 00037D       0001                            DC       s:16716,PREL

      584    16716    5                                  KY$CTX.DEFRD.INTRPT = '0'B;

  16716   2 00037E  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000380  8846 001F                            LBF,'8000'X       31,B6
          2 000382       8000

      585    16717    5                               END;

      586    16718    4                            KY$CTX.RESCHEDULE.INTERRUPT = '0'B;

  16718   2 000383  8846 0021                            LBF,'4000'X       33,B6
  16718   2 000385       4000

      587    16719    4                         END;

      588    16720
      589    16721    3                      IF KY$CTX.RESCHEDULE.TIMER THEN

  16721   2 000386  89C6 0021                            CMZ      33,B6
          2 000388  0881 000E                            BAGE     s:16727,PREL

      590    16722    4                         DO;

      591    16723    4                            CALL KYT$TIMEOUT ( KY$CTX );

  16723   2 00038A  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 00038C  CBF0 0100                            LAB,B4   256,IMO
          2 00038E  E380 0000 0000  xent                 LNJ,B6   KYT$TIMEOUT
          2 000391       0001                            DC       s:16724,PREL

      592    16724    4                            KY$CTX.RESCHEDULE.TIMER = '0'B;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:89   

  16724   2 000392  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000394  8846 0021                            LBF,'8000'X       33,B6
          2 000396       8000

      593    16725    4                         END;

      594    16726
      595    16727    3                      CALL KYN$ENABLE;

  16727   2 000397  CBF0 0000                            LAB,B4   0,IMO
          2 000399  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          2 00039C       0001                            DC       s:16729,PREL

      596    16728
      597    16729    3                      IF KY$CTX.RESCHEDULE.DSC THEN

  16729   2 00039D  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00039F  82C6 0021                            LB,'1000'X        33,B6
          2 0003A1       1000
          2 0003A2  0581 0430                            BBF      s:17079,PREL

      598    16730    4                         DO;

      599    16731    4                            CALL KYD$INIT_DISCON ( KY$CTX );

  16731   2 0003A4  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 0003A6  CBF0 0100                            LAB,B4   256,IMO
          2 0003A8  E380 0000 0000  xent                 LNJ,B6   KYD$INIT_DISCON
          2 0003AB       0001                            DC       s:16732,PREL

      600    16732    4                         END;

  16732   2 0003AC  0F81 0426                            B        s:17079,PREL

      601    16733
      602    16734        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:90   
      603    16735        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:91   
      604    16736    3                   CASE(%KV_USR_EVT_ID_RLSVDI);

      605    16737    3                      IF KY$CTX.DSCRSN ~= %KV_DSCRSN_FRG THEN

  16737   2 0003AE  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0003B0  E845 0021                            LDR,R6   33,B5
          2 0003B2  E570 00FF                            AND,R6   255,IMO
          2 0003B4  6D03                                 CMV,R6   3
          2 0003B5  0901 041D                            BE       s:17079,PREL

      606    16738    3                         KY$CTX.DSCRSN = %KV_DSCRSN_PTH;

  16738   2 0003B7  5C02                                 LDV,R5   2
          2 0003B8  DAC5 0021                            SRM,R5,'00FF'X    33,B5
          2 0003BA       00FF

      607    16739
      608    16740        /*
      609    16741            This is just here to end the DO CASE on event id.
      610    16742        */
      611    16743    3                END;                       /*  CASE on event id  */

  16743   2 0003BB  0F81 0417                            B        s:17079,PREL

      612    16744
      613    16745        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:92   
      614    16746        /*
      615    16747            There are 2 types of output markers: ones that VDH absolutely
      616    16748            must see in order for things to continue ( usually markers sent
      617    16749            from the host ), and markers that would be nice to see but are
      618    16750            not so vital ( usually block number / record number ).  The
      619    16751            vital markers cause the current record to be added to the queue,
      620    16752            an OUTMRK record is added to the queue, then a dummy header is
      621    16753            set up that blank fills to the column we were at when the marker
      622    16754            was received.  Also, KV$VDI.OTPBFR_ is updated.  For the non-
      623    16755            vital markers, handling depends on device type.  Card punches
      624    16756            treat all markers the same, so the scenario described above is
      625    16757            applicable here also.  Line printers just have the marker put
      626    16758            into the REC structure.  This makes extends possible without
      627    16759            multiple physical I/Os.  Note that one or more output markers
      628    16760            might be lost by extending, but this is not important since VDH
      629    16761            doesn't HAVE to get them all back, and when the record is printed
      630    16762            the block number / record number of the last successfully done
      631    16763            record will indeed be accurate.  Sneaky, ain't it?  Note that when
      632    16764            disconnect is pending, non-vital markers are ignored.
      633    16765
      634    16766            Is the marker non-vital and disconnect pending?
      635    16767            Is the device an LP and the marker non-vital?
      636    16768               YES:
      637    16769                  Store the marker in the current header.
      638    16770               NO:
      639    16771                  Set blank count to the column to position to.
      640    16772                  I sthe current header header a dummy header?
      641    16773                     NO:
      642    16774                        Add the current header to the Q.
      643    16775                  Add the marker to the Q.
      644    16776                  Position the dummy header to the right column.
      645    16777        */
      646    16778    2             CASE ( %KV_USR_FNC_OTPMRK );

      647    16779    2                IF KY$CTX.Q.INPUT$ = ADDR(NIL) OR KY$CTX.DVCTYP = %KY#TYP_CR THEN

  16779   2 0003BD  DCC7 00DE                            LDB,B5   CTX$,AUTO
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:93   
          2 0003BF  8DC5 0012                            CMN      18,B5
          2 0003C1  0901 0006                            BE       s:16781,PREL
          2 0003C3  E2C5 000B                            LLH,R6   11,B5
          2 0003C5  6D03                                 CMV,R6   3
          2 0003C6  0981 0023                            BNE      s:16788,PREL

      648    16780    3                   DO;

      649    16781    3                      KV$VDH_OTPMRK = KV_VDH_OTPMRK;

  16781   2 0003C8  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_OTPMRK
          2 0003CB  2C00                                 LDV,R2   0
          2 0003CC  6C0A                                 LDV,R6   10
          2 0003CD  BB80 0000 0000  01                   LAB,B3   FPT_WRSYSLOG
          2 0003D0  3C2C                                 LDV,R3   44
          2 0003D1  0008                                 MMM

      650    16782    3                      KV$VDH_OTPMRK.DAT = KV$USR_OTPMRK.DAT;

  16782   2 0003D2  ACC7 00E0                            LDB,B2   PARM$,AUTO
          2 0003D4  2C02                                 LDV,R2   2
          2 0003D5  6C06                                 LDV,R6   6
          2 0003D6  BB80 0000 0000  01                   LAB,B3   FPT_WRSYSLOG
          2 0003D9  3C2E                                 LDV,R3   46
          2 0003DA  0008                                 MMM

      651    16783    3                      KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_DLT;

  16783   2 0003DB  6C0C                                 LDV,R6   12
          2 0003DC  EF00 0000 001A  01                   STR,R6   KV$VDH_OTPMRK+4

      652    16784    3                      CALL KVV$VDI(KV$VDH_OTPMRK);

  16784   2 0003DF  BB80 0000 0006  03                   LAB,B3   +6
          2 0003E2  CBF0 0100                            LAB,B4   256,IMO
          2 0003E4  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0003E7       0001                            DC       s:16785,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:94   

      653    16785    3                   END;                    /* IF KY$CTX.Q.INPUT$ = ADDR(NIL) */

  16785   2 0003E8  0F81 03EA                            B        s:17079,PREL

      654    16786    2                ELSE
      655    16787    3                   DO;

      656    16788    3                      IF KY$CTX.DVCTYP = %KY#TYP_LP AND

  16788   2 0003EA  6D01                                 CMV,R6   1
          2 0003EB  0981 0016                            BNE      s:16797,PREL
          2 0003ED  89C6 0001                            CMZ      1,B6
          2 0003EF  0801 0012                            BAL      s:16797,PREL

      657    16789    3                         NOT KV$USR_OTPMRK.DAT.MSTRTR THEN
      658    16790    4                         DO;

      659    16791    4                            KY$CTX.Q.INPUT$->KY$REC.OTPMRK = KV$USR_OTPMRK.DAT;

  16791   2 0003F1  CCC5 0012                            LDB,B4   18,B5
          2 0003F3  AB86                                 LAB,B2   ,B6
          2 0003F4  2C02                                 LDV,R2   2
          2 0003F5  6C06                                 LDV,R6   6
          2 0003F6  BB84                                 LAB,B3   ,B4
          2 0003F7  3C04                                 LDV,R3   4
          2 0003F8  0008                                 MMM

      660    16792    4                            KY$CTX.Q.INPUT$->KY$REC.REP_OTPMRK = '1'B;

  16792   2 0003F9  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0003FB  9CC5 0012                            LDB,B1   18,B5
          2 0003FD  8941 0001                            LBT,'1000'X       1,B1
          2 0003FF       1000

      661    16793    4                         END;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:95   
  16793   2 000400  0F81 03D2                            B        s:17079,PREL

      662    16794    3                      ELSE
      663    16795                                                /*  we have to report this kind  */
      664    16796    4                         DO;

      665    16797    4                            IF KY$CTX.DVCTYP = %KY#TYP_LP THEN

  16797   2 000402  6D01                                 CMV,R6   1
          2 000403  0981 0029                            BNE      s:16809,PREL

      666    16798    5                               DO;

      667    16799    5                                  BLANK_COUNT = KY$CTX.Q.INPUT$->KY$REC.RECSIZE;

  16799   2 000405  CCC5 0012                            LDB,B4   18,B5
          2 000407  D804                                 LDR,R5   ,B4
          2 000408  D570 00FF                            AND,R5   255,IMO
          2 00040A  DF47 0006                            STR,R5   BLANK_COUNT,AUTO

      668    16800    5                                  IF KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX ~= KY$CTX.Q.
             16800                                           INPUT$->KY$REC.RECSIZE OR

  16800   2 00040C  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          2 00040F  AC83                                 LDB,B2   ,B3
          2 000410  D942 000C                            CMR,R5   12,B2
          2 000412  0981 000B                            BNE      s:16803,PREL
          2 000414  82C4 0001                            LB,'2000'X        1,B4
          2 000416       2000
          2 000417  0501 0006                            BBT      s:16803,PREL
          2 000419  82C4 0001                            LB,'00FF'X        1,B4
          2 00041B       00FF
          2 00041C  0581 0010                            BBF      s:16809,PREL

      669    16801    5                                     KY$CTX.Q.INPUT$->KY$REC.TOF OR KY$CTX.Q.INPUT$->
             16801                                              KY$REC.SPACE_N ~= 0 THEN
      670    16802    6                                     DO;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:96   

      671    16803    6                                       KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KV$PTR.VDI$->
             16803                                                 KV$VDI.OTPBFR_.BYTX;

  16803   2 00041E  C842 000C                            LDR,R4   12,B2
          2 000420  CA84                                 SRM,R4,'00FF'X    ,B4
          2 000421       00FF

      672    16804    6                                       BLANK_COUNT = KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX;

  16804   2 000422  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 000425  BC84                                 LDB,B3   ,B4
          2 000426  D843 000C                            LDR,R5   12,B3
          2 000428  DF47 0006                            STR,R5   BLANK_COUNT,AUTO

      673    16805    6                                        CALL ADD_TO_Q ALTRET ( ABORT );

  16805   2 00042A  E3C0 041A                            LNJ,B6   s:0,PREL
          2 00042C       03FB                            DC       s:17113,PREL

      674    16806    6                                     END;

      675    16807    5                               END;

      676    16808
      677    16809    4                            KY$CTX.Q.INPUT$->KY$OUTMRK = KY_DUMMY_OUTMRK;

  16809   2 00042D  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00042F  DCC6 0012                            LDB,B5   18,B6
          2 000431  AB80 0000 0000  00                   LAB,B2   BADFNC
          2 000434  2C1E                                 LDV,R2   30
          2 000435  6C08                                 LDV,R6   8
          2 000436  BB85                                 LAB,B3   ,B5
          2 000437  3C00                                 LDV,R3   0
          2 000438  0008                                 MMM

      678    16810    4                            KY$CTX.Q.INPUT$->KY$OUTMRK.MARKER = KV$USR_OTPMRK.DAT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:97   

  16810   2 000439  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00043B  CCC6 0012                            LDB,B4   18,B6
          2 00043D  ACC7 00E0                            LDB,B2   PARM$,AUTO
          2 00043F  2C02                                 LDV,R2   2
          2 000440  6C06                                 LDV,R6   6
          2 000441  BB84                                 LAB,B3   ,B4
          2 000442  3C02                                 LDV,R3   2
          2 000443  0008                                 MMM

      679    16811
      680    16812    4                            IF KY$CTX.DVCTYP = %KY#TYP_LP THEN

  16812   2 000444  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000446  E2C6 000B                            LLH,R6   11,B6
          2 000448  6D01                                 CMV,R6   1
          2 000449  0981 0033                            BNE      s:16826,PREL

      681    16813    5                               DO;

      682    16814    5                                  CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );

  16814   2 00044B  E3C0 0400                            LNJ,B6   s:0,PREL
          2 00044D       03DA                            DC       s:17113,PREL

      683    16815
      684    16816    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = BLANK_COUNT;

  16816   2 00044E  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000450  DCC6 0012                            LDB,B5   18,B6
          2 000452  E847 0006                            LDR,R6   BLANK_COUNT,AUTO
          2 000454  EA85                                 SRM,R6,'00FF'X    ,B5
          2 000455       00FF

      685    16817    5                                  SUBSTR ( KY$CTX.Q.INPUT$->KY$REC.TXT, 0, BLANK_COUNT
             16817                                           ) = ' ';

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:98   
  16817   2 000456  DCC6 0012                            LDB,B5   18,B6
          2 000458  D805                                 LDR,R5   ,B5
          2 000459  D570 00FF                            AND,R5   255,IMO
          2 00045B  D856                                 LDR,R5   R6
          2 00045C  DA70 2000                            ADD,R5   8192,IMO
          2 00045E  0021                                 ALR      ;
          2 00045F       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          2 000461       4005 0005                                ALPHANUM(5,B5,,R5,FILL)

      686    16818
      687    16819    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR ( KY$CTX.Q.
             16819                                           INPUT$->KY$REC.TXT );

  16819   2 000463  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000466  437F                                 CSYNC    s:16819+2,SPREL
          2 000467  DC86                                 LDB,B5   ,B6
          2 000468  CCC7 00DE                            LDB,B4   CTX$,AUTO
          2 00046A  BCC4 0012                            LDB,B3   18,B4
          2 00046C  ABC3 0005                            LAB,B2   5,B3
          2 00046E  AFC5 000A                            STB,B2   10,B5

      688    16820    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = BLANK_COUNT;

  16820   2 000470  DC86                                 LDB,B5   ,B6
          2 000471  C847 0006                            LDR,R4   BLANK_COUNT,AUTO
          2 000473  CF45 000C                            STR,R4   12,B5

      689    16821    5                                  KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = %
             16821                                           KY#MAXTEXT_SIZEB - BLANK_COUNT;

  16821   2 000475  DC86                                 LDB,B5   ,B6
          2 000476  8254                                 NEG      R4
          2 000477  CA70 00A0                            ADD,R4   160,IMO
          2 000479  CF45 000D                            STR,R4   13,B5

      690    16822    5                               END;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:99   
  16822   2 00047B  0F81 0357                            B        s:17079,PREL

      691    16823    4                            ELSE
      692    16824                                                /*  card punch  */
      693    16825    5                               DO;

      694    16826    5                                  IF KV$USR_OTPMRK.DAT.MSTRTR OR

  16826   2 00047D  ACC7 00E0                            LDB,B2   PARM$,AUTO
          2 00047F  89C2 0001                            CMZ      1,B2
          2 000481  0801 0006                            BAL      s:16829,PREL
          2 000483  82C6 0005                            LB,'0080'X        5,B6
          2 000485       0080
          2 000486  0501 034C                            BBT      s:17079,PREL

      695    16827    5                                     NOT KY$CTX.DSCPND THEN
      696    16828    6                                     DO;

      697    16829    6                                        CALL ADD_TO_Q ALTRET ( ABORT );

  16829   2 000488  E3C0 03BC                            LNJ,B6   s:0,PREL
          2 00048A       039D                            DC       s:17113,PREL

      698    16830    6                                     END;

      699    16831    5                               END;

      700    16832    4                         END;

      701    16833    3                   END; /* ELSE

  16833   2 00048B  0F81 0347                            B        s:17079,PREL

      702    16834                                    */
      703    16835        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:100  
      704    16836        /*
      705    16837            VDH is requesting us to position to the specified place.  This
      706    16838            call is only used for line printers, and signifies that the data
      707    16839            VDH has stuffed into our buffer is now complete.  We can add the
      708    16840            data to the Q and set up another header with the positioning
      709    16841            info that has been supplied.
      710    16842            Two attempts at optimization are made.  First, if the position
      711    16843            is on the current line and beyond the current column position,
      712    16844            the current line is extended with blanks and the data is not yet
      713    16845            added to the queue.  Second, dummy headers ( no data or blank
      714    16846            fills after an output marker ) are spotted and chucked.
      715    16847
      716    16848            Is the position further along the current line?
      717    16849               YES:
      718    16850                  Blank extend the current line.
      719    16851               NO:
      720    16852                  Is the current record a dummy header?
      721    16853                     YES:
      722    16854                        Set RECSIZE to 0 and reuse it.
      723    16855                     NO:
      724    16856                        Add the data in the current header to the Q.
      725    16857                  Generate the proper number of top-of-form headers.
      726    16858                  Generate the proper number of space_n headers.
      727    16859                  Blank fill to the proper column.
      728    16860            Update VDH context for the new position and buffer.
      729    16861        */
      730    16862    2             CASE ( %KV_USR_FNC_PST );

      731    16863    2                IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) THEN

  16863   2 00048D  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 00048F  8DC5 0012                            CMN      18,B5
          2 000491  0901 0341                            BE       s:17079,PREL

      732    16864    3                   DO;

      733    16865    3                      IF KV$USR_PST.TOPPAGCNT = 0 AND
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:101  

  16865   2 000493  8286                                 LB,'00FF'X        ,B6
  16865   2 000494       00FF
          2 000495  0501 0031                            BBT      s:16877,PREL
          2 000497  E845 000C                            LDR,R6   12,B5
          2 000499  E570 00FF                            AND,R6   255,IMO
          2 00049B  E946 0001                            CMR,R6   1,B6
          2 00049D  0981 0029                            BNE      s:16877,PREL
          2 00049F  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0004A2  BC84                                 LDB,B3   ,B4
          2 0004A3  D846 0002                            LDR,R5   2,B6
          2 0004A5  D943 000C                            CMR,R5   12,B3
          2 0004A7  0A81 001F                            BALE     s:16877,PREL

      734    16866    3                         KV$USR_PST.PHSPST.LIN = KY$CTX.PST.LIN AND
      735    16867    3                         KV$USR_PST.PHSPST.CLM > KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX THEN
      736    16868    4                         DO;               /*  blank extend the current line  */

      737    16869    4                           TEMP2 = KV$USR_PST.PHSPST.CLM - KV$PTR.VDI$->KV$VDI.OTPBFR_
             16869                                     .BYTX - 1;

  16869   2 0004A9  D243 000C                            SUB,R5   12,B3
          2 0004AB  5EFF                                 ADV,R5   -1
          2 0004AC  DF47 000B                            STR,R5   TEMP2,AUTO

      738    16870    4                            IF TEMP2 ~= 0 THEN

  16870   2 0004AE  5901 000F                            BEZ,R5   s:16872,PREL

      739    16871    4                               SUBSTR(KY$CTX.Q.INPUT$->KY$REC.TXT,KV$PTR.VDI$->KV$VDI.
             16871                                        OTPBFR_.BYTX,TEMP2) = ' ';

  16871   2 0004B0  ACC5 0012                            LDB,B2   18,B5
          2 0004B2  C802                                 LDR,R4   ,B2
          2 0004B3  C570 00FF                            AND,R4   255,IMO
          2 0004B5  9843 000C                            LDR,R1   12,B3
          2 0004B7  DA70 2000                            ADD,R5   8192,IMO
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:102  
          2 0004B9  0021                                 ALR      ;
          2 0004BA       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          2 0004BC       4012 0005                                ALPHANUM(5,B2,R1,,R5,FILL)

      740    16872    4                            KY$CTX.Q.INPUT$->KY$REC.RECSIZE = 0;

  16872   2 0004BE  437F                                 CSYNC    s:16871+13,SPREL
          2 0004BF  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 0004C1  DCC6 0012                            LDB,B5   18,B6
          2 0004C3  8805                                 LBF,'00FF'X       ,B5
          2 0004C4       00FF

      741    16873    4                         END;

  16873   2 0004C5  0F81 00A2                            B        s:16926,PREL

      742    16874    3                      ELSE
      743    16875                                                /*  go to a new line and new header  */
      744    16876    4                         DO;

      745    16877    4                            IF KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX ~= KY$CTX.Q.INPUT$->
             16877                                     KY$REC.RECSIZE OR

  16877   2 0004C7  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0004CA  BC84                                 LDB,B3   ,B4
          2 0004CB  ACC5 0012                            LDB,B2   18,B5
          2 0004CD  E802                                 LDR,R6   ,B2
          2 0004CE  E570 00FF                            AND,R6   255,IMO
          2 0004D0  E943 000C                            CMR,R6   12,B3
          2 0004D2  0981 000B                            BNE      s:16880,PREL
          2 0004D4  82C2 0001                            LB,'2000'X        1,B2
          2 0004D6       2000
          2 0004D7  0501 0006                            BBT      s:16880,PREL
          2 0004D9  82C2 0001                            LB,'00FF'X        1,B2
          2 0004DB       00FF
          2 0004DC  0581 000A                            BBF      s:16886,PREL

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:103  
      746    16878    4                               KY$CTX.Q.INPUT$->KY$REC.TOF OR KY$CTX.Q.INPUT$->KY$REC.
             16878                                        SPACE_N ~= 0 THEN
      747    16879    5                               DO;         /*  this is not a dummy header  */

      748    16880    5                                 KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KV$PTR.VDI$->KV$VDI
             16880                                           .OTPBFR_.BYTX;

  16880   2 0004DE  D843 000C                            LDR,R5   12,B3
          2 0004E0  DA82                                 SRM,R5,'00FF'X    ,B2
          2 0004E1       00FF

      749    16881    5                                  CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );

  16881   2 0004E2  E3C0 0369                            LNJ,B6   s:0,PREL
          2 0004E4       0343                            DC       s:17113,PREL

      750    16882    5                               END;

  16882   2 0004E5  0F81 0003                            B        s:16889,PREL

      751    16883    4                            ELSE
      752    16884                                                /*  re-use this header  */
      753    16885    5                               DO;

      754    16886    5                                  KY$CTX.Q.INPUT$->KY$REC.RECSIZE = 0;

  16886   2 0004E7  8802                                 LBF,'00FF'X       ,B2
  16886   2 0004E8       00FF

      755    16887    5                               END;

      756    16888
      757    16889    4                            IF KV$USR_PST.TOPPAGCNT > 0 THEN

  16889   2 0004E9  ECC7 00E0                            LDB,B6   PARM$,AUTO
          2 0004EB  8286                                 LB,'00FF'X        ,B6
          2 0004EC       00FF
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:104  
          2 0004ED  0581 002F                            BBF      s:16903,PREL

      758    16890    5                               DO;         /*  generate top-of-form headers  */

      759    16891    5                                  KY$CTX.PST.LIN = 1;

  16891   2 0004EF  6C01                                 LDV,R6   1
          2 0004F0  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0004F2  EAC5 000C                            SRM,R6,'00FF'X    12,B5
          2 0004F4       00FF

      760    16892    6                                  DO TOF = 2 TO KV$USR_PST.TOPPAGCNT;

  16892   2 0004F5  5C02                                 LDV,R5   2
          2 0004F6  DF47 0009                            STR,R5   TOF,AUTO
          2 0004F8  0F81 000D                            B        s:16895+2,PREL

      761    16893    6                                     KY$CTX.Q.INPUT$->KY$REC.TOF = '1'B;

  16893   2 0004FA  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 0004FC  DCC6 0012                            LDB,B5   18,B6
          2 0004FE  8945 0001                            LBT,'2000'X       1,B5
          2 000500       2000

      762    16894    6                                     CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );

  16894   2 000501  E3C0 034A                            LNJ,B6   s:0,PREL
          2 000503       0324                            DC       s:17113,PREL

      763    16895    6                                  END;

  16895   2 000504  8AC7 0009                            INC      TOF,AUTO
          2 000506  ECC7 00E0                            LDB,B6   PARM$,AUTO
          2 000508  E806                                 LDR,R6   ,B6
          2 000509  E570 00FF                            AND,R6   255,IMO
          2 00050B  E947 0009                            CMR,R6   TOF,AUTO
          2 00050D  02ED                                 BGE      s:16893,SPREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:105  

      764    16896    5                                  KY$CTX.Q.INPUT$->KY$REC.TOF = '1'B;

  16896   2 00050E  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 000510  CCC5 0012                            LDB,B4   18,B5
          2 000512  8944 0001                            LBT,'2000'X       1,B4
          2 000514       2000

      765    16897    5                                  IF KV$USR_PST.PHSPST.LIN ~= 1 THEN

  16897   2 000515  E846 0001                            LDR,R6   1,B6
          2 000517  6D01                                 CMV,R6   1
          2 000518  0901 0004                            BE       s:16903,PREL

      766    16898    6                                     DO;

      767    16899    6                                        CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );

  16899   2 00051A  E3C0 0331                            LNJ,B6   s:0,PREL
          2 00051C       030B                            DC       s:17113,PREL

      768    16900    6                                     END;

      769    16901    5                               END;

      770    16902
      771    16903    4                            SPACE_N = KV$USR_PST.PHSPST.LIN - KY$CTX.PST.LIN;

  16903   2 00051D  ECC7 00E0                            LDB,B6   PARM$,AUTO
          2 00051F  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 000521  E845 000C                            LDR,R6   12,B5
          2 000523  E570 00FF                            AND,R6   255,IMO
          2 000525  E246 0001                            SUB,R6   1,B6
          2 000527  8256                                 NEG      R6
          2 000528  EF47 0008                            STR,R6   SPACE_N,AUTO

      772    16904    4                            IF SPACE_N < 0 THEN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:106  

  16904   2 00052A  6881 0005                            BGEZ,R6  s:16912,PREL

      773    16905        /*
      774    16906             This use to screech.  On form lengths less than 12 or continuous forms
      775    16907             no topofpag is given, instead the phspst is reset to 1.  In this case
      776    16908             we should set our ctx.pst.lin to vdhs pst.lin and continue processing.
      777    16909        */
      778    16910    4                               KY$CTX.PST.LIN = KV$USR_PST.TOPPAGCNT;

  16910   2 00052C  D806                                 LDR,R5   ,B6
          2 00052D  DAC5 000C                            SRM,R5,'00FF'X    12,B5
          2 00052F       00FF

      779    16911
      780    16912    5                            DO WHILE SPACE_N > 15;

  16912   2 000530  6D0F                                 CMV,R6   15
          2 000531  0A81 0013                            BALE     s:16918,PREL

      781    16913    5                               KY$CTX.Q.INPUT$->KY$REC.SPACE_N = 15;

  16913   2 000533  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000535  DCC6 0012                            LDB,B5   18,B6
          2 000537  6C0F                                 LDV,R6   15
          2 000538  EAC5 0001                            SRM,R6,'00FF'X    1,B5
          2 00053A       00FF

      782    16914    5                               CALL ADD_TO_Q_DUMMY ALTRET ( ABORT );

  16914   2 00053B  E3C0 0310                            LNJ,B6   s:0,PREL
          2 00053D       02EA                            DC       s:17113,PREL

      783    16915    5                               SPACE_N = SPACE_N - 15;

  16915   2 00053E  E847 0008                            LDR,R6   SPACE_N,AUTO
          2 000540  6EF1                                 ADV,R6   -15
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:107  
          2 000541  EF47 0008                            STR,R6   SPACE_N,AUTO

      784    16916    5                            END;

  16916   2 000543  6D0F                                 CMV,R6   15
          2 000544  0A6F                                 BAG      s:16913,SPREL

      785    16917
      786    16918    4                            KY$CTX.Q.INPUT$->KY$REC.SPACE_N = SPACE_N;

  16918   2 000545  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000547  DCC6 0012                            LDB,B5   18,B6
          2 000549  EAC5 0001                            SRM,R6,'00FF'X    1,B5
          2 00054B       00FF

      787    16919
      788    16920    4                           KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KV$USR_PST.PHSPST.CLM - 1
             16920                                     ;

  16920   2 00054C  DCC6 0012                            LDB,B5   18,B6
          2 00054E  CCC7 00E0                            LDB,B4   PARM$,AUTO
          2 000550  D844 0002                            LDR,R5   2,B4
          2 000552  5EFF                                 ADV,R5   -1
          2 000553  DA85                                 SRM,R5,'00FF'X    ,B5
          2 000554       00FF

      789    16921    4                            TEMP2 = KV$USR_PST.PHSPST.CLM - 1;

  16921   2 000555  D844 0002                            LDR,R5   2,B4
          2 000557  5EFF                                 ADV,R5   -1
          2 000558  DF47 000B                            STR,R5   TEMP2,AUTO

      790    16922    4                            IF TEMP2 ~= 0 THEN

  16922   2 00055A  5901 000D                            BEZ,R5   s:16926,PREL

      791    16923    4                               SUBSTR(KY$CTX.Q.INPUT$->KY$REC.TXT,0,TEMP2) = ' ';
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:108  

  16923   2 00055C  DCC6 0012                            LDB,B5   18,B6
          2 00055E  C805                                 LDR,R4   ,B5
          2 00055F  C570 00FF                            AND,R4   255,IMO
          2 000561  DA70 2000                            ADD,R5   8192,IMO
          2 000563  0021                                 ALR      ;
          2 000564       4178 2000                                ALPHANUM('2000'X,IMO,,1),;
          2 000566       4005 0005                                ALPHANUM(5,B5,,R5,FILL)

      792    16924    4                         END;

      793    16925
      794    16926    3                      KY$CTX.PST.LIN = KV$USR_PST.PHSPST.LIN;

  16926   2 000568  437F                                 CSYNC    s:16923+11,SPREL
          2 000569  ECC7 00E0                            LDB,B6   PARM$,AUTO
          2 00056B  E846 0001                            LDR,R6   1,B6
          2 00056D  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 00056F  EAC5 000C                            SRM,R6,'00FF'X    12,B5
          2 000571       00FF

      795    16927
      796    16928    3                     KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR ( KY$CTX.Q.INPUT$->KY$REC
             16928                               .TXT );

  16928   2 000572  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 000575  BC84                                 LDB,B3   ,B4
          2 000576  ACC5 0012                            LDB,B2   18,B5
          2 000578  9BC2 0005                            LAB,B1   5,B2
          2 00057A  9FC3 000A                            STB,B1   10,B3

      797    16929    3                      KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = KV$USR_PST.PHSPST.CLM - 1;

  16929   2 00057C  BC84                                 LDB,B3   ,B4
          2 00057D  E846 0002                            LDR,R6   2,B6
          2 00057F  6EFF                                 ADV,R6   -1
          2 000580  EF43 000C                            STR,R6   12,B3
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:109  

      798    16930    3                      KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = %KY#MAXTEXT_SIZEB -
             16930                               KV$USR_PST.PHSPST.CLM + 1;

  16930   2 000582  BC84                                 LDB,B3   ,B4
          2 000583  E846 0002                            LDR,R6   2,B6
          2 000585  8256                                 NEG      R6
          2 000586  EA70 00A1                            ADD,R6   161,IMO
          2 000588  EF43 000D                            STR,R6   13,B3

      799    16931
      800    16932    3                      KV$PTR.MRD$->KV$MRD.DVCLIN = KV$USR_PST.PHSPST.LIN;

  16932   2 00058A  BCC4 0008                            LDB,B3   8,B4
          2 00058C  E846 0001                            LDR,R6   1,B6
          2 00058E  EF43 001D                            STR,R6   29,B3

      801    16933    3                      KV$PTR.MRD$->KV$MRD.DVCCLM = KV$USR_PST.PHSPST.CLM;

  16933   2 000590  BCC4 0008                            LDB,B3   8,B4
          2 000592  E846 0002                            LDR,R6   2,B6
          2 000594  EF43 001E                            STR,R6   30,B3

      802    16934    3                   END;                    /* IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) */

  16934   2 000596  0F81 023C                            B        s:17079,PREL

      803    16935        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:110  
      804    16936        /*
      805    16937            VDH now wants us to read a card.  A buffer is never supplied,
      806    16938            so just call the input record scheduler.
      807    16939        */
      808    16940    2             CASE ( %KV_USR_FNC_RQSDAT );

      809    16941
      810    16942    2                CALL KYN$DISABLE;

  16942   2 000598  CBF0 0000                            LAB,B4   0,IMO
          2 00059A  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          2 00059D       0001                            DC       s:16943,PREL

      811    16943    2                CALL KYS$IUR_SCHED ( KY$CTX, %KY#READ );

  16943   2 00059E  EBF0 0002                            LAB,B6   2,IMO
          2 0005A0  EFC7 00EA                            STB,B6   GEN_DUMMY+4,AUTO
          2 0005A2  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0005A4  DFC7 00E8                            STB,B5   GEN_DUMMY+2,AUTO
          2 0005A6  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 0005A8  CBF0 0200                            LAB,B4   512,IMO
          2 0005AA  E380 0000 0000  xent                 LNJ,B6   KYS$IUR_SCHED
          2 0005AD       0001                            DC       s:16944,PREL

      812    16944    2                CALL KYN$ENABLE;

  16944   2 0005AE  CBF0 0000                            LAB,B4   0,IMO
          2 0005B0  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          2 0005B3       0001                            DC       s:16944+6,PREL
          2 0005B4  0F81 021E                            B        s:17079,PREL

      813    16945
      814    16946        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:111  
      815    16947        /*
      816    16948              code to implement the downloadable VFU.  At this point I'm not
      817    16949              sure how many variations will need to be taken care of.
      818    16950
      819    16951                   is an input buffer initialized?
      820    16952                      YES:
      821    16953                         determine form length from vdh's KV$SRD structure
      822    16954                         initialize vfu buffer to the form 01xxxxxx01xxxxxxxx
      823    16955                         BEGIN CHANNEL LOOP 0-11
      824    16956                            use KV$VFU structure to set channel bits in vfu
      825    16957                            structure. The KV$VFU structure consists of two
      826    16958                            fields: LIN(0:31) and NXT(0:31).  Where the index
      827    16959                            on line is the channel and the value is the line#.
      828    16960                            The next field is an index to the next line value
      829    16961                            for that channel.  when a nxt of 0 is encountered
      830    16962                            the process is complete.
      831    16963                         Channels 0 and 11 are reserved for TOF and BOF
      832    16964                         indicators.
      833    16965                         Update the vdi buffer info. and call the Q routines.
      834    16966        */
      835    16967
      836    16968    2             CASE(%KV_USR_FNC_SETPRM);

      837    16969
      838    16970    3                DO CASE(KV$USR_SETPRM.PRMID);

  16970   2 0005B6  9846 0001                            LDR,R1   1,B6
          2 0005B8  1EF8                                 ADV,R1   -8
          2 0005B9  9970 00A3                            CMR,R1   163,IMO
          2 0005BB  0281 0217                            BGE      s:17079,PREL
          2 0005BD  B810 0000 05C3  02                   LDR,R3   s:16970+13,R1
          2 0005C0  83B0 0000 0666  02                   JMP      s:16972,R3
          2 0005C3       012E                            DC       s:17037,PREL
          2 0005C4       016D                            DC       s:17079,PREL
          2 0005C5       016D                            DC       s:17079,PREL
          2 0005C6       016D                            DC       s:17079,PREL
          2 0005C7       016D                            DC       s:17079,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:112  
          2 0005C8       016D                            DC       s:17079,PREL
          2 0005C9       016D                            DC       s:17079,PREL
          2 0005CA       016D                            DC       s:17079,PREL
          2 0005CB       016D                            DC       s:17079,PREL
          2 0005CC       016D                            DC       s:17079,PREL
          2 0005CD       0000                            DC       s:16972,PREL
          2 0005CE       016D                            DC       s:17079,PREL
          2 0005CF       016D                            DC       s:17079,PREL
          2 0005D0       016D                            DC       s:17079,PREL
          2 0005D1       016D                            DC       s:17079,PREL
          2 0005D2       016D                            DC       s:17079,PREL
          2 0005D3       016D                            DC       s:17079,PREL
          2 0005D4       016D                            DC       s:17079,PREL
          2 0005D5       016D                            DC       s:17079,PREL
          2 0005D6       016D                            DC       s:17079,PREL
          2 0005D7       016D                            DC       s:17079,PREL
          2 0005D8       016D                            DC       s:17079,PREL
          2 0005D9       016D                            DC       s:17079,PREL
          2 0005DA       016D                            DC       s:17079,PREL
          2 0005DB       016D                            DC       s:17079,PREL
          2 0005DC       016D                            DC       s:17079,PREL
          2 0005DD       016D                            DC       s:17079,PREL
          2 0005DE       016D                            DC       s:17079,PREL
          2 0005DF       016D                            DC       s:17079,PREL
          2 0005E0       016D                            DC       s:17079,PREL
          2 0005E1       016D                            DC       s:17079,PREL
          2 0005E2       016D                            DC       s:17079,PREL
          2 0005E3       016D                            DC       s:17079,PREL
          2 0005E4       016D                            DC       s:17079,PREL
          2 0005E5       016D                            DC       s:17079,PREL
          2 0005E6       016D                            DC       s:17079,PREL
          2 0005E7       016D                            DC       s:17079,PREL
          2 0005E8       016D                            DC       s:17079,PREL
          2 0005E9       016D                            DC       s:17079,PREL
          2 0005EA       016D                            DC       s:17079,PREL
          2 0005EB       016D                            DC       s:17079,PREL
          2 0005EC       016D                            DC       s:17079,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:113  
          2 0005ED       016D                            DC       s:17079,PREL
          2 0005EE       016D                            DC       s:17079,PREL
          2 0005EF       016D                            DC       s:17079,PREL
          2 0005F0       016D                            DC       s:17079,PREL
          2 0005F1       016D                            DC       s:17079,PREL
          2 0005F2       016D                            DC       s:17079,PREL
          2 0005F3       016D                            DC       s:17079,PREL
          2 0005F4       016D                            DC       s:17079,PREL
          2 0005F5       016D                            DC       s:17079,PREL
          2 0005F6       016D                            DC       s:17079,PREL
          2 0005F7       016D                            DC       s:17079,PREL
          2 0005F8       016D                            DC       s:17079,PREL
          2 0005F9       016D                            DC       s:17079,PREL
          2 0005FA       016D                            DC       s:17079,PREL
          2 0005FB       016D                            DC       s:17079,PREL
          2 0005FC       016D                            DC       s:17079,PREL
          2 0005FD       016D                            DC       s:17079,PREL
          2 0005FE       016D                            DC       s:17079,PREL
          2 0005FF       016D                            DC       s:17079,PREL
          2 000600       016D                            DC       s:17079,PREL
          2 000601       016D                            DC       s:17079,PREL
          2 000602       016D                            DC       s:17079,PREL
          2 000603       016D                            DC       s:17079,PREL
          2 000604       016D                            DC       s:17079,PREL
          2 000605       016D                            DC       s:17079,PREL
          2 000606       016D                            DC       s:17079,PREL
          2 000607       016D                            DC       s:17079,PREL
          2 000608       016D                            DC       s:17079,PREL
          2 000609       016D                            DC       s:17079,PREL
          2 00060A       016D                            DC       s:17079,PREL
          2 00060B       016D                            DC       s:17079,PREL
          2 00060C       016D                            DC       s:17079,PREL
          2 00060D       016D                            DC       s:17079,PREL
          2 00060E       016D                            DC       s:17079,PREL
          2 00060F       016D                            DC       s:17079,PREL
          2 000610       016D                            DC       s:17079,PREL
          2 000611       016D                            DC       s:17079,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:114  
          2 000612       016D                            DC       s:17079,PREL
          2 000613       016D                            DC       s:17079,PREL
          2 000614       016D                            DC       s:17079,PREL
          2 000615       016D                            DC       s:17079,PREL
          2 000616       016D                            DC       s:17079,PREL
          2 000617       016D                            DC       s:17079,PREL
          2 000618       016D                            DC       s:17079,PREL
          2 000619       016D                            DC       s:17079,PREL
          2 00061A       016D                            DC       s:17079,PREL
          2 00061B       016D                            DC       s:17079,PREL
          2 00061C       016D                            DC       s:17079,PREL
          2 00061D       016D                            DC       s:17079,PREL
          2 00061E       016D                            DC       s:17079,PREL
          2 00061F       016D                            DC       s:17079,PREL
          2 000620       016D                            DC       s:17079,PREL
          2 000621       016D                            DC       s:17079,PREL
          2 000622       016D                            DC       s:17079,PREL
          2 000623       016D                            DC       s:17079,PREL
          2 000624       016D                            DC       s:17079,PREL
          2 000625       016D                            DC       s:17079,PREL
          2 000626       016D                            DC       s:17079,PREL
          2 000627       016D                            DC       s:17079,PREL
          2 000628       016D                            DC       s:17079,PREL
          2 000629       016D                            DC       s:17079,PREL
          2 00062A       016D                            DC       s:17079,PREL
          2 00062B       016D                            DC       s:17079,PREL
          2 00062C       016D                            DC       s:17079,PREL
          2 00062D       016D                            DC       s:17079,PREL
          2 00062E       016D                            DC       s:17079,PREL
          2 00062F       016D                            DC       s:17079,PREL
          2 000630       016D                            DC       s:17079,PREL
          2 000631       016D                            DC       s:17079,PREL
          2 000632       016D                            DC       s:17079,PREL
          2 000633       016D                            DC       s:17079,PREL
          2 000634       016D                            DC       s:17079,PREL
          2 000635       016D                            DC       s:17079,PREL
          2 000636       016D                            DC       s:17079,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:115  
          2 000637       016D                            DC       s:17079,PREL
          2 000638       016D                            DC       s:17079,PREL
          2 000639       016D                            DC       s:17079,PREL
          2 00063A       016D                            DC       s:17079,PREL
          2 00063B       016D                            DC       s:17079,PREL
          2 00063C       0143                            DC       s:17042,PREL
          2 00063D       016D                            DC       s:17079,PREL
          2 00063E       016D                            DC       s:17079,PREL
          2 00063F       016D                            DC       s:17079,PREL
          2 000640       016D                            DC       s:17079,PREL
          2 000641       016D                            DC       s:17079,PREL
          2 000642       016D                            DC       s:17079,PREL
          2 000643       016D                            DC       s:17079,PREL
          2 000644       016D                            DC       s:17079,PREL
          2 000645       016D                            DC       s:17079,PREL
          2 000646       016D                            DC       s:17079,PREL
          2 000647       016D                            DC       s:17079,PREL
          2 000648       016D                            DC       s:17079,PREL
          2 000649       016D                            DC       s:17079,PREL
          2 00064A       016D                            DC       s:17079,PREL
          2 00064B       016D                            DC       s:17079,PREL
          2 00064C       016D                            DC       s:17079,PREL
          2 00064D       016D                            DC       s:17079,PREL
          2 00064E       016D                            DC       s:17079,PREL
          2 00064F       016D                            DC       s:17079,PREL
          2 000650       016D                            DC       s:17079,PREL
          2 000651       016D                            DC       s:17079,PREL
          2 000652       016D                            DC       s:17079,PREL
          2 000653       016D                            DC       s:17079,PREL
          2 000654       016D                            DC       s:17079,PREL
          2 000655       016D                            DC       s:17079,PREL
          2 000656       016D                            DC       s:17079,PREL
          2 000657       016D                            DC       s:17079,PREL
          2 000658       016D                            DC       s:17079,PREL
          2 000659       016D                            DC       s:17079,PREL
          2 00065A       016D                            DC       s:17079,PREL
          2 00065B       016D                            DC       s:17079,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:116  
          2 00065C       016D                            DC       s:17079,PREL
          2 00065D       016D                            DC       s:17079,PREL
          2 00065E       016D                            DC       s:17079,PREL
          2 00065F       016D                            DC       s:17079,PREL
          2 000660       016D                            DC       s:17079,PREL
          2 000661       016D                            DC       s:17079,PREL
          2 000662       016D                            DC       s:17079,PREL
          2 000663       016D                            DC       s:17079,PREL
          2 000664       016D                            DC       s:17079,PREL
          2 000665       010D                            DC       s:17028,PREL

      839    16971    3                   CASE(%KV_PRMID_VFU);

      840    16972    3                      IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) THEN

  16972   2 000666  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 000668  8DC5 0012                            CMN      18,B5
          2 00066A  0901 0168                            BE       s:17079,PREL

      841    16973    4                         DO;

      842    16974    4                            IF KY$CTX.VFU_LOADED THEN

  16974   2 00066C  82C5 0005                            LB,'0040'X        5,B5
  16974   2 00066E       0040
          2 00066F  0581 000A                            BBF      s:16979,PREL

      843    16975    5                               DO;

      844    16976    5                                  CALL KYN$ENABLE;

  16976   2 000671  CBF0 0000                            LAB,B4   0,IMO
          2 000673  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          2 000676       0001                            DC       s:16977,PREL

      845    16977    5                                  RETURN;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:117  
  16977   2 000677  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      846    16978    5                               END;
      847    16979    4                            PAGLNG = KV$PTR.SRD$->KV$SRD.LNG;

  16979   2 00067A  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 00067D  BCC4 000A                            LDB,B3   10,B4
          2 00067F  E2C3 000E                            LLH,R6   14,B3
          2 000681  E7C7 0007                            STH,R6   PAGLNG,AUTO

      848    16980    4                            IF PAGLNG < 1 OR PAGLNG > %KY#MAXVFU_SIZEW THEN

  16980   2 000683  D2C7 0007                            LLH,R5   PAGLNG,AUTO
          2 000685  5D01                                 CMV,R5   1
          2 000686  0201 0004                            BL       s:16981,PREL
          2 000688  5D7F                                 CMV,R5   127
          2 000689  0381 0004                            BLE      s:16983,PREL

      849    16981    4                               PAGLNG = %KY#MAXVFU_SIZEW;

  16981   2 00068B  4C7F                                 LDV,R4   127
          2 00068C  C7C7 0007                            STH,R4   PAGLNG,AUTO

      850    16982
      851    16983    4                            IF KY$CTX.DVC_ID ~= %BITBIN('2031'X)

  16983   2 00068E  D845 0007                            LDR,R5   7,B5
          2 000690  D970 2031                            CMR,R5   8241,IMO
          2 000692  0901 000C                            BE       s:16988,PREL
          2 000694  D970 2033                            CMR,R5   8243,IMO
          2 000696  0901 0008                            BE       s:16988,PREL
          2 000698  D970 20C4                            CMR,R5   8388,IMO
          2 00069A  0901 0004                            BE       s:16988,PREL

      852    16984    4                               AND KY$CTX.DVC_ID ~= %BITBIN('2033'X)
      853    16985    5                               AND KY$CTX.DVC_ID ~= %BITBIN('20C4'X) THEN DO;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:118  
      854    16986    5                                  KY$CTX.VFU_LOADED = '1'B;
             16986                                           /* only these devices have evfus*/

  16986   2 00069C  8945 0005                            LBT,'0040'X       5,B5
  16986   2 00069E       0040

      855    16987    5                               END;

      856    16988    5                            DO LIN_INDX = 0 TO %LIN_INDX_HI;

  16988   2 00069F  8747 00DA                            CL       LIN_INDX,AUTO

      857    16989    5                               ADDR(VFU_BUF(LIN_INDX))->CHAN_MASK = CONSTANT_WORD;

  16989   2 0006A1  B847 00DA                            LDR,R3   LIN_INDX,AUTO
          2 0006A3  3E0F                                 ADV,R3   15
          2 0006A4  E800 0000 0015  01                   LDR,R6   CONSTANT_WORD
          2 0006A7  EF37                                 STR,R6   ,AUTO,R3

      858    16990    5                            END;

  16990   2 0006A8  8AC7 00DA                            INC      LIN_INDX,AUTO
          2 0006AA  D847 00DA                            LDR,R5   LIN_INDX,AUTO
          2 0006AC  D970 00C8                            CMR,R5   200,IMO
          2 0006AE  03F3                                 BLE      s:16989,SPREL

      859    16991    4                            HIGHEST_LINE = 0;

  16991   2 0006AF  8747 00D9                            CL       HIGHEST_LINE,AUTO

      860    16992    5                            DO CHAN_INDX = 0 TO %CHAN_INDX_HI;

  16992   2 0006B1  8747 00DB                            CL       CHAN_INDX,AUTO

      861    16993    5                               IF KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN(CHAN_INDX) > 0
             16993                                        THEN

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:119  
  16993   2 0006B3  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0006B6  DCC6 0006                            LDB,B5   6,B6
          2 0006B8  CCC5 000C                            LDB,B4   12,B5
          2 0006BA  B847 00DB                            LDR,R3   CHAN_INDX,AUTO
          2 0006BC  3E08                                 ADV,R3   8
          2 0006BD  E2B4                                 LLH,R6   ,B4,R3
          2 0006BE  6901 0068                            BEZ,R6   s:17014,PREL

      862    16994    6                                  DO;

      863    16995    6                                    IF KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN(CHAN_INDX)
             16995                                              > HIGHEST_LINE THEN

  16995   2 0006C0  E947 00D9                            CMR,R6   HIGHEST_LINE,AUTO
          2 0006C2  0381 0003                            BLE      s:16997,PREL

      864    16996    6                                       HIGHEST_LINE = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU
             16996                                                 .LIN(CHAN_INDX);

  16996   2 0006C4  EF47 00D9                            STR,R6   HIGHEST_LINE,AUTO

      865    16997    6                                     IF CHAN_INDX < %CHAN_HI_BASE THEN

  16997   2 0006C6  D847 00DB                            LDR,R5   CHAN_INDX,AUTO
          2 0006C8  5D06                                 CMV,R5   6
          2 0006C9  0281 000C                            BGE      s:17000,PREL

      866    16998    6                                        ADDR(VFU_BUF(KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.
             16998                                                 LIN(CHAN_INDX)))->CHAN_MASK.CHANLO(%
             16998                                                 CHAN_REVERSE-CHAN_INDX) = '1'B;

  16998   2 0006CB  A856                                 LDR,R2   R6
          2 0006CC  2004                                 SOL,R2   4
          2 0006CD  8252                                 NEG      R2
          2 0006CE  AA55                                 ADD,R2   R5
          2 0006CF  BBC7 000F                            LAB,B3   VFU_C,AUTO
          2 0006D1  8252                                 NEG      R2
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:120  
          2 0006D2  2E07                                 ADV,R2   7
          2 0006D3  8923                                 LBT      ,B3,R2
          2 0006D4  0F81 000A                            B        s:17002,PREL

      867    16999    6                                     ELSE
      868    17000    6                                  ADDR(VFU_BUF(KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN(
             17000                                           CHAN_INDX)))->CHAN_MASK.CHANHI(%CHAN_REVERSE-(
             17000                                           CHAN_INDX-%CHAN_HI_BASE)) = '1'B;

  17000   2 0006D6  A856                                 LDR,R2   R6
          2 0006D7  2004                                 SOL,R2   4
          2 0006D8  8252                                 NEG      R2
          2 0006D9  AA55                                 ADD,R2   R5
          2 0006DA  BBC7 0010                            LAB,B3   VFU_C+1,AUTO
          2 0006DC  8252                                 NEG      R2
          2 0006DD  2E05                                 ADV,R2   5
          2 0006DE  8923                                 LBT      ,B3,R2

      869    17001
      870    17002    6                                     INDX = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.NXT(
             17002                                              CHAN_INDX);

  17002   2 0006DF  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0006E2  DCC6 0006                            LDB,B5   6,B6
          2 0006E4  CCC5 000C                            LDB,B4   12,B5
          2 0006E6  A855                                 LDR,R2   R5
          2 0006E7  2E28                                 ADV,R2   40
          2 0006E8  C2A4                                 LLH,R4   ,B4,R2
          2 0006E9  CF47 00DC                            STR,R4   INDX,AUTO

      871    17003    7                                     DO WHILE INDX ~= 0;

  17003   2 0006EB  4901 003B                            BEZ,R4   s:17014,PREL

      872    17004    7                                       TEMP_LIN = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.LIN
             17004                                                 (INDX);

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:121  
  17004   2 0006ED  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0006F0  DCC6 0006                            LDB,B5   6,B6
          2 0006F2  CCC5 000C                            LDB,B4   12,B5
          2 0006F4  B847 00DC                            LDR,R3   INDX,AUTO
          2 0006F6  3E08                                 ADV,R3   8
          2 0006F7  E2B4                                 LLH,R6   ,B4,R3
          2 0006F8  EF47 00DD                            STR,R6   TEMP_LIN,AUTO

      873    17005    7                                        IF TEMP_LIN > HIGHEST_LINE THEN

  17005   2 0006FA  E947 00D9                            CMR,R6   HIGHEST_LINE,AUTO
          2 0006FC  0381 0003                            BLE      s:17007,PREL

      874    17006    7                                           HIGHEST_LINE = TEMP_LIN;

  17006   2 0006FE  EF47 00D9                            STR,R6   HIGHEST_LINE,AUTO

      875    17007    7                                        IF CHAN_INDX < %CHAN_HI_BASE THEN

  17007   2 000700  D847 00DB                            LDR,R5   CHAN_INDX,AUTO
          2 000702  5D06                                 CMV,R5   6
          2 000703  0281 000C                            BGE      s:17010,PREL

      876    17008    7                                           ADDR(VFU_BUF(TEMP_LIN))->CHAN_MASK.CHANLO(%
             17008                                                    CHAN_REVERSE-CHAN_INDX) = '1'B;

  17008   2 000705  6004                                 SOL,R6   4
          2 000706  8256                                 NEG      R6
          2 000707  EA55                                 ADD,R6   R5
          2 000708  BBC7 000F                            LAB,B3   VFU_C,AUTO
          2 00070A  A856                                 LDR,R2   R6
          2 00070B  8252                                 NEG      R2
          2 00070C  2E07                                 ADV,R2   7
          2 00070D  8923                                 LBT      ,B3,R2
          2 00070E  0F81 000A                            B        s:17011,PREL

      877    17009    7                                        ELSE
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:122  
      878    17010    7                                           ADDR(VFU_BUF(TEMP_LIN))->CHAN_MASK.CHANHI(%
             17010                                                    CHAN_REVERSE-(CHAN_INDX-%CHAN_HI_BASE))
             17010                                                    = '1'B;

  17010   2 000710  6004                                 SOL,R6   4
          2 000711  8256                                 NEG      R6
          2 000712  EA55                                 ADD,R6   R5
          2 000713  BBC7 0010                            LAB,B3   VFU_C+1,AUTO
          2 000715  A856                                 LDR,R2   R6
          2 000716  8252                                 NEG      R2
          2 000717  2E05                                 ADV,R2   5
          2 000718  8923                                 LBT      ,B3,R2

      879    17011    7                                        INDX = KV$PTR.MVD$->KV$MVD.VFU$->KV$VFU.NXT(
             17011                                                 INDX);

  17011   2 000719  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00071C  DCC6 0006                            LDB,B5   6,B6
          2 00071E  CCC5 000C                            LDB,B4   12,B5
          2 000720  A847 00DC                            LDR,R2   INDX,AUTO
          2 000722  2E28                                 ADV,R2   40
          2 000723  E2A4                                 LLH,R6   ,B4,R2
          2 000724  EF47 00DC                            STR,R6   INDX,AUTO

      880    17012    7                                     END;  /* do while indx~=0   */

  17012   2 000726  69C7                                 BNEZ,R6  s:17004,SPREL

      881    17013    6                                  END;     /* if vfu$. . . >0  */

      882    17014    5                            END;           /*  do chan_indx to chan_indx_hi   */

  17014   2 000727  8AC7 00DB                            INC      CHAN_INDX,AUTO
          2 000729  E847 00DB                            LDR,R6   CHAN_INDX,AUTO
          2 00072B  6D0B                                 CMV,R6   11
          2 00072C  0381 FF86                            BLE      s:16993,PREL

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:123  
      883    17015    4                           ADDR(VFU_BUF(1))->CHAN_MASK.CHANLO(%CHAN_REVERSE - %TOFCHN)
             17015                                     = '1'B;

  17015   2 00072E  8947 0010                            LBT,'0100'X       VFU_C+1,AUTO
  17015   2 000730       0100

      884    17016    4                            ADDR(VFU_BUF(PAGLNG))->CHAN_MASK.CHANHI(%CHAN_REVERSE - (%
             17016                                     BOFCHN-%CHAN_HI_BASE)) = '1'B;

  17016   2 000731  DBC7 000F                            LAB,B5   VFU_C,AUTO
          2 000733  B2C7 0007                            LLH,R3   PAGLNG,AUTO
          2 000735  3004                                 SOL,R3   4
          2 000736  3E0A                                 ADV,R3   10
          2 000737  8935                                 LBT      ,B5,R3

      885    17017    4                            KY$CTX.Q.INPUT$->KY$REC.RECSIZE = PAGLNG*2;

  17017   2 000738  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00073A  DCC6 0012                            LDB,B5   18,B6
          2 00073C  D2C7 0007                            LLH,R5   PAGLNG,AUTO
          2 00073E  5001                                 SOL,R5   1
          2 00073F  DA85                                 SRM,R5,'00FF'X    ,B5
          2 000740       00FF

      886    17018    4                            KY$CTX.Q.INPUT$->KY$REC.TXT = SUBSTR(VFU_C,2,KY$CTX.Q.
             17018                                     INPUT$->KY$REC.RECSIZE);

  17018   2 000741  DCC6 0012                            LDB,B5   18,B6
          2 000743  C805                                 LDR,R4   ,B5
          2 000744  C570 00FF                            AND,R4   255,IMO
          2 000746  AB87                                 LAB,B2   ,AUTO
          2 000747  2C20                                 LDV,R2   32
          2 000748  E854                                 LDR,R6   R4
          2 000749  BB85                                 LAB,B3   ,B5
          2 00074A  3C0A                                 LDV,R3   10
          2 00074B  0008                                 MMM

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:124  
      887    17019    4                            KY$CTX.Q.INPUT$->KY$REC.TYPE = %KY#TYPE_VFU;

  17019   2 00074C  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00074E  CCC6 0012                            LDB,B4   18,B6
          2 000750  E870 0300                            LDR,R6   768,IMO
          2 000752  EA84                                 SRM,R6,'7F00'X    ,B4
          2 000753       7F00

      888    17020    4                            CALL ADD_TO_Q_DUMMY ALTRET(ABORT);

  17020   2 000754  E3C0 00F7                            LNJ,B6   s:0,PREL
          2 000756       00D1                            DC       s:17113,PREL

      889    17021    4                            KV$PTR.VDI$->KV$VDI.OTPBFR_.ADR$ = ADDR(KY$CTX.Q.INPUT$->
             17021                                     KY$REC.TXT);

  17021   2 000757  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00075A  DC86                                 LDB,B5   ,B6
          2 00075B  CCC7 00DE                            LDB,B4   CTX$,AUTO
          2 00075D  BCC4 0012                            LDB,B3   18,B4
          2 00075F  ABC3 0005                            LAB,B2   5,B3
          2 000761  AFC5 000A                            STB,B2   10,B5

      890    17022    4                           KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTX = KY$CTX.Q.INPUT$->KY$REC.
             17022                                     RECSIZE;

  17022   2 000763  DC86                                 LDB,B5   ,B6
          2 000764  BCC4 0012                            LDB,B3   18,B4
          2 000766  E803                                 LDR,R6   ,B3
          2 000767  E570 00FF                            AND,R6   255,IMO
          2 000769  EF45 000C                            STR,R6   12,B5

      891    17023    4                            KV$PTR.VDI$->KV$VDI.OTPBFR_.BYTSIZ = PAGLNG*2;

  17023   2 00076B  DC86                                 LDB,B5   ,B6
          2 00076C  E2C7 0007                            LLH,R6   PAGLNG,AUTO
          2 00076E  6001                                 SOL,R6   1
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:125  
          2 00076F  EF45 000D                            STR,R6   13,B5

      892    17024    4                         END;              /*  input q = addr(nil)  */

  17024   2 000771  0F81 0061                            B        s:17079,PREL

      893    17025        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:126  
      894    17026        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:127  
      895    17027    3                   CASE(%KV_PRMID_LPI);

      896    17028    3                      IF KV$USR_SETPRM.VAL = 8 THEN

  17028   2 000773  E846 0002                            LDR,R6   2,B6
          2 000775  6D08                                 CMV,R6   8
          2 000776  0981 0008                            BNE      s:17031,PREL

      897    17029    3                         KY$CTX.LPI = '1'B;

  17029   2 000778  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 00077A  8945 0005                            LBT,'0020'X       5,B5
          2 00077C       0020
          2 00077D  0F81 0006                            B        s:17032,PREL

      898    17030    3                      ELSE
      899    17031    3                         KY$CTX.LPI = '0'B;

  17031   2 00077F  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 000781  8845 0005                            LBF,'0020'X       5,B5
          2 000783       0020

      900    17032    3                      CALL KYI$IO(KY$CTX,%KY#SET_LPI);

  17032   2 000784  CBF0 0008                            LAB,B4   8,IMO
          2 000786  CFC7 00EA                            STB,B4   GEN_DUMMY+4,AUTO
          2 000788  DFC7 00E8                            STB,B5   GEN_DUMMY+2,AUTO
          2 00078A  BBC7 00E8                            LAB,B3   GEN_DUMMY+2,AUTO
          2 00078C  CBF0 0200                            LAB,B4   512,IMO
          2 00078E  E380 0000 0000  xent                 LNJ,B6   KYI$IO
          2 000791       0001                            DC       s:17032+14,PREL
          2 000792  0F81 0040                            B        s:17079,PREL

      901    17033        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:128  
      902    17034    3                   CASE(%KV_PRMID_PLATEN);

      903    17035
      904    17036                                           /* This case is handled in kv_prmid_vfu  */
      905    17037    3                      ADDR(VFU_BUF(1))->CHAN_MASK.CHANLO(%CHAN_REVERSE - %TOFCHN) =
             17037                               '1'B;

  17037   2 000794  8947 0010                            LBT,'0100'X       VFU_C+1,AUTO
  17037   2 000796       0100

      906    17038    3                     ADDR(VFU_BUF(PAGLNG))->CHAN_MASK.CHANHI(%CHAN_REVERSE - (%BOFCHN-
             17038                               %CHAN_HI_BASE)) = '1'B;

  17038   2 000797  DBC7 000F                            LAB,B5   VFU_C,AUTO
          2 000799  B2C7 0007                            LLH,R3   PAGLNG,AUTO
          2 00079B  3004                                 SOL,R3   4
          2 00079C  3E0A                                 ADV,R3   10
          2 00079D  8935                                 LBT      ,B5,R3

      907    17039    3                      PAGLNG = KV$PTR.SRD$->KV$SRD.LNG;

  17039   2 00079E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0007A1  CCC5 000A                            LDB,B4   10,B5
          2 0007A3  E2C4 000E                            LLH,R6   14,B4
          2 0007A5  E7C7 0007                            STH,R6   PAGLNG,AUTO
          2 0007A7  0F81 002B                            B        s:17079,PREL

      908    17040        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:129  
      909    17041    3                   CASE(%KV_PRMID_FIRSTLINE);

      910    17042    3                      IF KY$CTX.Q.INPUT$ ~= ADDR(NIL) THEN

  17042   2 0007A9  DCC7 00DE                            LDB,B5   CTX$,AUTO
          2 0007AB  8DC5 0012                            CMN      18,B5
          2 0007AD  0901 0025                            BE       s:17079,PREL

      911    17043    4                         DO;               /* not addr nil */

      912    17044    4                            IF KV$PTR.VDI$->KV$VDI.UN_KNWPST THEN

  17044   2 0007AF  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0007B2  BC84                                 LDB,B3   ,B4
          2 0007B3  82C3 001D                            LB,'1000'X        29,B3
          2 0007B5       1000
          2 0007B6  0581 001C                            BBF      s:17079,PREL

      913    17045    5                               DO;

      914    17046        /*
      915    17047                      vdh has lost the  current position on the device.
      916    17048                      if the device has a evfu we need to reload it
      917    17049                      and start from the top.  However if the device has no
      918    17050                      vfu or has a paper tape vfu than it is a litte had to
      919    17051                      load one.  In either case vdh will ask us to do a tof
      920    17052                      before it starts sending data to print.
      921    17053                      Current device ids which support evfu are 20C4,2033 and 2031.
      922    17054        */
      923    17055    5                                  IF KY$CTX.DVC_ID = %BITBIN('20C4'X) OR

  17055   2 0007B8  E845 0007                            LDR,R6   7,B5
          2 0007BA  E970 20C4                            CMR,R6   8388,IMO
          2 0007BC  0901 0007                            BE       s:17058,PREL
          2 0007BE  D845 0007                            LDR,R5   7,B5
          2 0007C0  D570 0020                            AND,R5   32,IMO
          2 0007C2  5901 000A                            BEZ,R5   s:17063,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:130  

      924    17056    5                                     (BINBIT(KY$CTX.DVC_ID,16) & '0020'X) THEN
      925    17057    6                                     DO;

      926    17058    6                                        KY$CTX.VFU_LOADED = '0'B;

  17058   2 0007C4  8845 0005                            LBF,'0040'X       5,B5
  17058   2 0007C6       0040

      927    17059    6                                        KV$PTR.VDI$->KV$VDI.UN_KNWPST = '0'B;

  17059   2 0007C7  BC84                                 LDB,B3   ,B4
          2 0007C8  8843 001D                            LBF,'1000'X       29,B3
          2 0007CA       1000

      928    17060    6                                     END;

  17060   2 0007CB  0F81 0007                            B        s:17079,PREL

      929    17061    5                                  ELSE
      930    17062    6                                     DO;

      931    17063    6                                        KV$PTR.VDI$->KV$VDI.UN_KNWPST = '0'B;

  17063   2 0007CD  8843 001D                            LBF,'1000'X       29,B3
  17063   2 0007CF       1000

      932    17064    6                                        KY$CTX.VFU_LOADED = '1'B;

  17064   2 0007D0  8945 0005                            LBT,'0040'X       5,B5
  17064   2 0007D2       0040

      933    17065    6                                     END;

      934    17066    5                               END;

      935    17067    4                         END;              /* not addr nil */
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:131  

      936    17068    3                END;                       /*DO CASE ON USR PARM  */

      937    17069        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:132  
      938    17070        /*
      939    17071            This is just here to make the end of the DO CASE on function from
      940    17072            VDH look pretty.
      941    17073        */
      942    17074    2          END /*  CASE on function from VDH  */;

      943    17075
      944    17076        /*
      945    17077            That's all folks!!!.
      946    17078        */
      947    17079    1          CALL KYN$ENABLE;

  17079   2 0007D3  CBF0 0000                            LAB,B4   0,IMO
          2 0007D5  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          2 0007D8       0001                            DC       s:17080,PREL

      948    17080    1          RETURN;

  17080   2 0007D9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

  17061   2                              BUF_ABORT       null
      949    17081
      950    17082        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:133  
      951    17083        /*
      952    17084            When there is no memory for an input buffer during logon accept
      953    17085            we come here on the altret.  Errlog and then join the common
      954    17086            altret code at ABORT to start the disconnect sequence.
      955    17087        */
      956    17088    1   BUF_ABORT: ;
      957    17089
      958    17090    1          KY$CTX.Q.THRTL.OUTAMEM = '1'B;

  17090   2 0007DC  ECC7 00DE            BUF_ABORT       LDB,B6   CTX$,AUTO
          2 0007DE  8946 0016                            LBT,'4000'X       22,B6
          2 0007E0       4000

      959    17091    1          FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_INS_MEM;

  17091   2 0007E1  E870 0970                            LDR,R6   2416,IMO
          2 0007E3  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 0007E6       FFF8

      960    17092        %SET LISTSUB = '1'B;
      961    17093    1          FPT_WRSYSLOG.V.TERMID = KV$PTR.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;

  17093   2 0007E7  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0007EA  CC85                                 LDB,B4   ,B5
          2 0007EB  BC84                                 LDB,B3   ,B4
          2 0007EC  AB83                                 LAB,B2   ,B3
          2 0007ED  2C24                                 LDV,R2   36
          2 0007EE  6C10                                 LDV,R6   16
          2 0007EF  BB80 0000 0000  01                   LAB,B3   FPT_WRSYSLOG
          2 0007F2  3C10                                 LDV,R3   16
          2 0007F3  0008                                 MMM

      962    17094    1          CALL KHA$ERRLOG(FPT_WRSYSLOG);

  17094   2 0007F4  BB80 0000 0004  03                   LAB,B3   +4
          2 0007F7  CBF0 0100                            LAB,B4   256,IMO
          2 0007F9  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:134  
          2 0007FC       0001                            DC       s:17099,PREL

      963    17095            /*E* ERROR: KYV-GG#EC_KYV_INS_MEM
      964    17096                 MESSAGE: Unable to get buffer - disconnecting.
      965    17097                 DESCRIPTION: Cannot get memory - forget it.      */
      966    17098
      967    17099    1          GOTO ABORT;

  17099   2 0007FD  0F81 0029                            B        s:17113,PREL

  17093   2                              Q_ABORT         null
      968    17100
      969    17101        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:135  
      970    17102        /*
      971    17103            This is the altret from KYQ$INIT when there is not enough memory
      972    17104            to build the Q.  Errlog and then join the common altret code at
      973    17105            ABORT to start the disconnect sequence.
      974    17106        */
      975    17107    1   Q_ABORT: ;
      976    17108
      977    17109    1          KY$CTX.Q.THRTL.OUTAMEM='1'B;

  17109   2 0007FF  ECC7 00DE            Q_ABORT         LDB,B6   CTX$,AUTO
          2 000801  8946 0016                            LBT,'4000'X       22,B6
          2 000803       4000

      978    17110    1          FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_INS_MEM;

  17110   2 000804  E870 0970                            LDR,R6   2416,IMO
          2 000806  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 000809       FFF8

      979    17111    1          FPT_WRSYSLOG.V.TERMID = KV$PTR.VDI$->KV$VDI.CHN$->KH$CHN.TERMID;

  17111   2 00080A  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00080D  CC85                                 LDB,B4   ,B5
          2 00080E  BC84                                 LDB,B3   ,B4
          2 00080F  AB83                                 LAB,B2   ,B3
          2 000810  2C24                                 LDV,R2   36
          2 000811  6C10                                 LDV,R6   16
          2 000812  BB80 0000 0000  01                   LAB,B3   FPT_WRSYSLOG
          2 000815  3C10                                 LDV,R3   16
          2 000816  0008                                 MMM

      980    17112    1          CALL KHA$ERRLOG(FPT_WRSYSLOG);

  17112   2 000817  BB80 0000 0004  03                   LAB,B3   +4
          2 00081A  CBF0 0100                            LAB,B4   256,IMO
          2 00081C  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 00081F       0001                            DC       s:17113,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:136  

      981    17113    1          KY$CTX.VDIENB.EVTENB(%KV_USR_EVT_ID_DSC) = '1'B;

  17113   2 000820  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 000822  8946 0023                            LBT,'0800'X       35,B6
          2 000824       0800

      982    17114    1          GOTO ABORT;

  17114   2 000825  0F81 0001                            B        s:17113,PREL

  17113   2                              ABORT           null
      983    17115        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:137  
      984    17116        /*
      985    17117            Come here when there is any altret involving insufficient memory.
      986    17118            Initiate the disconnect sequence and return.
      987    17119        */
      988    17120    1   ABORT: ;
      989    17121
      990    17122    1          IF KY$CTX.DSCRSN ~= %KV_DSCRSN_FRG THEN

  17122   2 000827  ECC7 00DE            ABORT           LDB,B6   CTX$,AUTO
          2 000829  E846 0021                            LDR,R6   33,B6
          2 00082B  E570 00FF                            AND,R6   255,IMO
          2 00082D  6D03                                 CMV,R6   3
          2 00082E  0901 0005                            BE       s:17126,PREL

      991    17123    2             DO;

      992    17124    2                KY$CTX.DSCRSN = %KV_DSCRSN_RSRSHR;

  17124   2 000830  5C07                                 LDV,R5   7
          2 000831  DAC6 0021                            SRM,R5,'00FF'X    33,B6
          2 000833       00FF

      993    17125    2             END;

      994    17126    1          CALL KYD$INIT_DISCON ( KY$CTX );

  17126   2 000834  BBC7 00DE                            LAB,B3   CTX$,AUTO
          2 000836  CBF0 0100                            LAB,B4   256,IMO
          2 000838  E380 0000 0000  xent                 LNJ,B6   KYD$INIT_DISCON
          2 00083B       0001                            DC       s:17128,PREL

      995    17127
      996    17128    1          CALL KYN$ENABLE;

  17128   2 00083C  CBF0 0000                            LAB,B4   0,IMO
          2 00083E  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          2 000841       0001                            DC       s:17129,PREL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:138  

      997    17129    1          RETURN;

  17129   2 000842  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      998    17130
      999    17131        %EJECT;
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:139  
     1000    17132        /*
     1001    17133            ADD_TO_Q is the interface between KYV$VDI and KYQ$CLOSE.  It
     1002    17134            provides a common place to errlog insufficient memory altrets
     1003    17135            and build dummy headers after a header has been added to the Q.
     1004    17136        */
     1005    17137    1   ADD_TO_Q: PROC ALTRET;

  17137   2 000845  EFC7 00E4            ADD_TO_Q        STB,B6   KV$VDH_EVT+2,AUTO

     1006    17138
     1007    17139    2          DCL GEN_DUMMY UBIN;
     1008    17140
     1009    17141    2          GEN_DUMMY = %KYV#NO_DUMMY;

  17141   2 000847  6C01                                 LDV,R6   1
          2 000848  EF47 00E6                            STR,R6   GEN_DUMMY,AUTO

     1010    17142    2          GOTO ADD_TO_Q_COMMON;

  17142   2 00084A  0F81 0005                            B        s:17146,PREL

     1011    17143
     1012    17144    2   ADD_TO_Q_DUMMY: ENTRY ALTRET;

  17144   2 00084C  EFC7 00E4            ADD_TO_Q_DUMMY  STB,B6   KV$VDH_EVT+2,AUTO

     1013    17145
     1014    17146    2          GEN_DUMMY = %KYV#DUMMY;

  17146   2 00084E  8747 00E6                            CL       GEN_DUMMY,AUTO

  17146   2                              ADD_TO_Q_COMMON null
     1015    17147
     1016    17148    2   ADD_TO_Q_COMMON: ;
     1017    17149
     1018    17150    2          CALL KYQ$CLOSE ( KY$CTX ) ALTRET ( NO_MEM );

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:140  
  17150   2 000850  BBC7 00DE            ADD_TO_Q_COMMON LAB,B3   CTX$,AUTO
          2 000852  CBF0 0100                            LAB,B4   256,IMO
          2 000854  E380 0000 0000  xent                 LNJ,B6   KYQ$CLOSE
          2 000857       0027                            DC       s:17153,PREL

     1019    17151        /*%TRACE(WHEREAT = 19,INPUT$ = "KY$CTX.Q.INPUT$");*/
     1020    17152
     1021    17153    2          IF GEN_DUMMY = %KYV#DUMMY THEN

  17153   2 000858  E847 00E6                            LDR,R6   GEN_DUMMY,AUTO
          2 00085A  6981 001F                            BNEZ,R6  s:17159,PREL

     1022    17154    3             DO;

     1023    17155    3                KY$CTX.Q.INPUT$->KY$REC.RECSIZE = KY_DUMMY_REC.RECSIZE;

  17155   2 00085C  ECC7 00DE                            LDB,B6   CTX$,AUTO
          2 00085E  DCC6 0012                            LDB,B5   18,B6
          2 000860  D800 0000 0009  00                   LDR,R5   KY_DUMMY_REC
          2 000863  DA85                                 SRM,R5,'00FF'X    ,B5
          2 000864       00FF

     1024    17156    3                KY$CTX.Q.INPUT$->KY$REC = KY_DUMMY_REC;

  17156   2 000865  DCC6 0012                            LDB,B5   18,B6
          2 000867  C805                                 LDR,R4   ,B5
          2 000868  C570 00FF                            AND,R4   255,IMO
          2 00086A  CF47 00E8                            STR,R4   GEN_DUMMY+2,AUTO
          2 00086C  DFC7 00E9                            STB,B5   GEN_DUMMY+3,AUTO
          2 00086E  AB80 0000 0000  00                   LAB,B2   BADFNC
          2 000871  2C12                                 LDV,R2   18
          2 000872  6C0C                                 LDV,R6   12
          2 000873  BB85                                 LAB,B3   ,B5
          2 000874  3C00                                 LDV,R3   0
          2 000875  F854                                 LDR,R7   R4
          2 000876  7E0A                                 ADV,R7   10
          2 000877  D380 0000 0000  xent                 LNJ,B5   X6C_ALRZ
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:141  

     1025    17157    3             END;

     1026    17158
     1027    17159    2          RETURN;

  17159   2 00087A  ECC7 00E4                            LDB,B6   KV$VDH_EVT+2,AUTO
          2 00087C  C3C6 0001                            LNJ,B4   1,B6

  17153   2                              NO_MEM          null
     1028    17160
     1029    17161    2   NO_MEM: ;
     1030    17162
     1031    17163    2          FPT_WRSYSLOG.V.ERRCODE.ERR#=%GG#EC_KYV_INS_MEM;

  17163   2 00087E  E870 0970            NO_MEM          LDR,R6   2416,IMO
          2 000880  EA80 0000 0007  01                   SRM,R6,'FFF8'X    FPT_WRSYSLOG+7
          2 000883       FFF8

     1032    17164    2          CALL KHA$ERRLOG(FPT_WRSYSLOG);

  17164   2 000884  BB80 0000 0004  03                   LAB,B3   +4
          2 000887  CBF0 0100                            LAB,B4   256,IMO
          2 000889  E380 0000 0000  xent                 LNJ,B6   KHA$ERRLOG
          2 00088C       0001                            DC       s:17166,PREL

     1033    17165
     1034    17166    2          ALTRETURN;

  17166   2 00088D  ECC7 00E4                            LDB,B6   KV$VDH_EVT+2,AUTO
          2 00088F  B806                                 LDR,R3   ,B6
          2 000890  C3B6                                 LNJ,B4   ,B6,R3
     1035    17167
     1036    17168    2   END ADD_TO_Q;
     1037    17169
     1038    17170    1   END KYV$VDI;

PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:142  
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KV$INT.:E05TOU  is referenced.
   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_PERR_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$USR.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KY_SCODE_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYV$VDI.
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:143  

 **** Variables and constants ****

  ****  Section 000 RoData KYV$VDI

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(48)    r     1 BADEVT                     0-0-0/w STRC(48)    r     1 BADFNC
    13-0-0/w STRC(112)   r     1 KY_ASC_REC                1A-0-0/w STRC(112)   r     1 KY_BIN_REC
     F-0-0/w STRC(64)    r     1 KY_DUMMY_OUTMRK            9-0-0/w STRC(96)    r     1 KY_DUMMY_REC

  ****  Section 001  Data  KYV$VDI

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    15-0-0/b STRC(16)    r     1 CONSTANT_WORD              0-0-0/w STRC(336)   r     1 FPT_WRSYSLOG
    16-0-0/w STRC(80)    r     1 KV$VDH_OTPMRK

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PARM                      C-0-0/b BIT         r     1 B1
     D-0-0/b BIT         r     1 B2                         6-0-0/w UBIN(16)    r     1 BLANK_COUNT
    DB-0-0/w UBIN(16)    r     1 CHAN_INDX                 DE-0-0/w PTR         r     1 CTX$
    E6-0-0/w UBIN(16)    r     1 GEN_DUMMY                 D9-0-0/w UBIN(16)    r     1 HIGHEST_LINE
    DC-0-0/w UBIN(16)    r     1 INDX                      E2-0-0/w STRC(32)    r     1 KV$VDH_EVT
    DA-0-0/w UBIN(16)    r     1 LIN_INDX                   7-0-0/w UBIN(8)     r     1 PAGLNG
    *0-0-0/w UBIN(16)    r     1 PARM                      E0-0-0/w PTR         r     1 PARM$
     8-0-0/w SBIN(16)    r     1 SPACE_N                    A-0-0/w UBIN(16)    r     1 TEMP1
     B-0-0/w UBIN(16)    r     1 TEMP2                     DD-0-0/w UBIN(16)    r     1 TEMP_LIN
     9-0-0/w UBIN(16)    r     1 TOF                        F-0-0/w UBIN(16)    r     1 VFU_BUF(0:199)
     F-0-0/c CHAR(400)   r     1 VFU_C

  ****  SYMREF variables  ****
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:144  

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KH_CTLTBL$                 0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RQSOTP          0-0-0/w STRC(80)    r     1 KV_VDH_OTPMRK
     0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16)    r     1 CHAN_MASK                  0-0-0/c CHAR(1000)  r     1 DAT_TMPL
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(512)   r     1 KV$MRD
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(128)   r     1 KV$USR_DAT
     0-0-0/w STRC(32)    r     1 KV$USR_EVT                 0-0-0/w STRC(64)    r     1 KV$USR_OTPMRK
     0-0-0/w STRC(64)    r     1 KV$USR_PST                 0-0-0/w STRC(128)   r     1 KV$USR_SETPRM
     0-0-0/w STRC(512)   r     1 KV$VDI                     0-0-0/w STRC(576)   r     1 KV$VFU
     0-0-0/w STRC(608)   r     1 KY$CTX                     0-0-0/w STRC(64)    r     1 KY$OUTMRK
     0-0-0/w ASTR(80)    r     1 KY$REC


   Procedure KYV$VDI requires 2193 words for executable code.
   Procedure KYV$VDI requires 237 words of local(AUTO) storage.

    No errors detected in file KYV$VDI.:E05TSI    .
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:145  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:146  
          MINI XREF LISTING

ABORT
     17113**LABEL   16402--CALLALT 16420--CALLALT 16429--CALLALT 16438--CALLALT 16520--CALLALT 16805--CALLALT
     16814--CALLALT 16829--CALLALT 16881--CALLALT 16894--CALLALT 16899--CALLALT 16914--CALLALT 17020--CALLALT
     17099--GOTO    17114--GOTO
ADD_TO_Q
     17137**PROC    16402--CALL    16420--CALL    16429--CALL    16438--CALL    16805--CALL    16829--CALL
ADD_TO_Q_COMMON IN PROCEDURE ADD_TO_Q
     17146**LABEL   17142--GOTO
ADD_TO_Q_DUMMY IN PROCEDURE ADD_TO_Q
     17144**ENTRY   16814--CALL    16881--CALL    16894--CALL    16899--CALL    16914--CALL    17020--CALL
B1
     14119**DCL     16707<<ASSIGN  16709>>IF
B2
     14120**DCL     16708<<ASSIGN  16709>>IF
BADEVT
      4529**DCL     16369<>CALL
BADFNC
      4468**DCL     16358<>CALL
BLANK_COUNT
     14113**DCL     16799<<ASSIGN  16804<<ASSIGN  16816>>ASSIGN  16817>>ASSIGN  16820>>ASSIGN  16821>>ASSIGN
BUF_ABORT
     17061**LABEL   16525--CALLALT
CHAN_INDX
     14127**DCL     16992<<DOINDEX 16993>>IF      16995>>IF      16996>>ASSIGN  16997>>IF      16998>>ASSIGN
     16998>>ASSIGN  17000>>ASSIGN  17000>>ASSIGN  17002>>ASSIGN  17007>>IF      17008>>ASSIGN  17010>>ASSIGN
CHAN_MASK
     14131**DCL     16989<<ASSIGN
CHAN_MASK.CHANHI
     14136**DCL     17000<<ASSIGN  17010<<ASSIGN  17016<<ASSIGN  17038<<ASSIGN
CHAN_MASK.CHANLO
     14133**DCL     16998<<ASSIGN  17008<<ASSIGN  17015<<ASSIGN  17037<<ASSIGN
CONSTANT_WORD
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:147  
     14139**DCL     16989>>ASSIGN
CTX$
     14145**DCL     14291--IMP-PTR 16349<<ASSIGN  16352>>IF      16362>>IF      16398>>IF      16400>>ASSIGN
     16401>>ASSIGN  16401>>ASSIGN  16403>>ASSIGN  16410>>ASSIGN  16411>>ASSIGN  16411>>ASSIGN  16412>>ASSIGN
     16414>>IF      16416>>CALL    16416>>CALL    16418>>ASSIGN  16425>>IF      16427>>ASSIGN  16428>>ASSIGN
     16428>>ASSIGN  16430>>ASSIGN  16433>>ASSIGN  16433>>ASSIGN  16434>>ASSIGN  16437>>ASSIGN  16437>>ASSIGN
     16467>>ASSIGN  16468>>ASSIGN  16469>>ASSIGN  16470>>ASSIGN  16472>>ASSIGN  16473>>ASSIGN  16474>>ASSIGN
     16475>>ASSIGN  16476>>ASSIGN  16478>>CALL    16480>>IF      16482>>CALL    16507>>ASSIGN  16508>>ASSIGN
     16510>>ASSIGN  16511>>ASSIGN  16512>>ASSIGN  16513>>ASSIGN  16515>>ASSIGN  16516>>ASSIGN  16517>>ASSIGN
     16518>>ASSIGN  16520>>CALL    16522>>IF      16524>>ASSIGN  16525>>CALL    16525>>CALL    16526>>ASSIGN
     16528>>CALL    16532>>CALL    16563>>IF      16565>>ASSIGN  16568>>ASSIGN  16569>>ASSIGN  16570>>ASSIGN
     16572>>ASSIGN  16573>>ASSIGN  16574>>ASSIGN  16575>>ASSIGN  16608>>ASSIGN  16609>>ASSIGN  16610>>ASSIGN
     16611>>ASSIGN  16612>>ASSIGN  16613>>ASSIGN  16615>>DOCASE  16619>>ASSIGN  16620>>ASSIGN  16621>>ASSIGN
     16622>>ASSIGN  16624>>IF      16626>>ASSIGN  16627>>ASSIGN  16627>>ASSIGN  16629>>ASSIGN  16636>>ASSIGN
     16637>>ASSIGN  16638>>ASSIGN  16640>>IF      16642>>ASSIGN  16647>>ASSIGN  16651>>ASSIGN  16652>>ASSIGN
     16653>>ASSIGN  16655>>IF      16657>>ASSIGN  16671>>CALL    16701>>IF      16703>>IF      16704>>CALL
     16706>>CALL    16707>>ASSIGN  16708>>ASSIGN  16709>>IF      16711>>ASSIGN  16711>>ASSIGN  16712>>IF
     16713>>CALL    16715>>CALL    16716>>ASSIGN  16718>>ASSIGN  16721>>IF      16723>>CALL    16724>>ASSIGN
     16729>>IF      16731>>CALL    16737>>IF      16738>>ASSIGN  16779>>IF      16779>>IF      16788>>IF
     16791>>ASSIGN  16792>>ASSIGN  16797>>IF      16799>>ASSIGN  16800>>IF      16800>>IF      16800>>IF
     16803>>ASSIGN  16809>>ASSIGN  16810>>ASSIGN  16812>>IF      16816>>ASSIGN  16817>>ASSIGN  16817>>ASSIGN
     16819>>ASSIGN  16826>>IF      16863>>IF      16865>>IF      16871>>ASSIGN  16871>>ASSIGN  16872>>ASSIGN
     16877>>IF      16877>>IF      16877>>IF      16880>>ASSIGN  16886>>ASSIGN  16891>>ASSIGN  16893>>ASSIGN
     16896>>ASSIGN  16903>>ASSIGN  16910>>ASSIGN  16913>>ASSIGN  16918>>ASSIGN  16920>>ASSIGN  16923>>ASSIGN
     16923>>ASSIGN  16926>>ASSIGN  16928>>ASSIGN  16943>>CALL    16972>>IF      16974>>IF      16983>>IF
     16983>>IF      16983>>IF      16986>>ASSIGN  17017>>ASSIGN  17018>>ASSIGN  17018>>ASSIGN  17018>>ASSIGN
     17019>>ASSIGN  17021>>ASSIGN  17022>>ASSIGN  17029>>ASSIGN  17031>>ASSIGN  17032>>CALL    17042>>IF
     17055>>IF      17055>>IF      17058>>ASSIGN  17064>>ASSIGN  17090>>ASSIGN  17109>>ASSIGN  17113>>ASSIGN
     17122>>IF      17124>>ASSIGN  17126>>CALL    17150>>CALL    17155>>ASSIGN  17156>>ASSIGN  17156>>ASSIGN
DAT_TMPL
     16114**DCL     16437>>ASSIGN
FPT_WRSYSLOG
     14028**DCL     16556<>CALL    17094<>CALL    17112<>CALL    17164<>CALL
FPT_WRSYSLOG.V
     14032**DCL     14030--DCLINIT
FPT_WRSYSLOG.V.ERRCODE.ERR#
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:148  
     14076**DCL     16555<<ASSIGN  17091<<ASSIGN  17110<<ASSIGN  17163<<ASSIGN
FPT_WRSYSLOG.V.TERMID
     14095**DCL     16554<<ASSIGN  17093<<ASSIGN  17111<<ASSIGN
FPT_WRSYSLOG.V.TERMID.TERM
     14097**DCL     14106--REDEF
GEN_DUMMY IN PROCEDURE ADD_TO_Q
     17139**DCL     17141<<ASSIGN  17146<<ASSIGN  17153>>IF
HIGHEST_LINE
     14125**DCL     16991<<ASSIGN  16995>>IF      16996<<ASSIGN  17005>>IF      17006<<ASSIGN
INDX
     14128**DCL     17002<<ASSIGN  17003>>DOWHILE 17004>>ASSIGN  17011<<ASSIGN  17011>>ASSIGN
KH$CHN.TERMID
     14978**DCL     16554>>ASSIGN  17093>>ASSIGN  17111>>ASSIGN
KH$CHN.TERMID.TERM
     14980**DCL     14989--REDEF
KHA$ERRLOG
     14013**DCL-ENT 16556--CALL    17094--CALL    17112--CALL    17164--CALL
KHD$SCREECH
     14011**DCL-ENT 16358--CALL    16369--CALL
KH_CTLTBL$
     16112**DCL     15916--IMP-PTR
KV$MRD.DVCCLM
     15153**DCL     16933<<ASSIGN
KV$MRD.DVCLIN
     15153**DCL     16932<<ASSIGN
KV$MVD.VFU$
     15879**DCL     16993>>IF      16995>>IF      16996>>ASSIGN  16998>>ASSIGN  17000>>ASSIGN  17002>>ASSIGN
     17004>>ASSIGN  17011>>ASSIGN
KV$PTR.INPCNDPND
     15022**DCL     15031--REDEF   15035--REDEF
KV$PTR.LINLST$
     15018**DCL     15019--REDEF
KV$PTR.MRD$
     15017**DCL     16932>>ASSIGN  16933>>ASSIGN
KV$PTR.MVD$
     15017**DCL     16993>>IF      16995>>IF      16996>>ASSIGN  16998>>ASSIGN  17000>>ASSIGN  17002>>ASSIGN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:149  
     17004>>ASSIGN  17011>>ASSIGN
KV$PTR.SRD$
     15018**DCL     16979>>ASSIGN  17039>>ASSIGN
KV$PTR.VDI$
     15016**DCL     16349>>ASSIGN  16533>>IF      16535>>ASSIGN  16554>>ASSIGN  16629>>ASSIGN  16630>>ASSIGN
     16631>>ASSIGN  16800>>IF      16803>>ASSIGN  16804>>ASSIGN  16819>>ASSIGN  16820>>ASSIGN  16821>>ASSIGN
     16865>>IF      16869>>ASSIGN  16871>>ASSIGN  16877>>IF      16880>>ASSIGN  16928>>ASSIGN  16929>>ASSIGN
     16930>>ASSIGN  17021>>ASSIGN  17022>>ASSIGN  17023>>ASSIGN  17044>>IF      17059>>ASSIGN  17063>>ASSIGN
     17093>>ASSIGN  17111>>ASSIGN
KV$PTR$
     15010**DCL     15016--IMP-PTR 16349>>ASSIGN  16533>>IF      16535>>ASSIGN  16554>>ASSIGN  16629>>ASSIGN
     16630>>ASSIGN  16631>>ASSIGN  16800>>IF      16803>>ASSIGN  16804>>ASSIGN  16819>>ASSIGN  16820>>ASSIGN
     16821>>ASSIGN  16865>>IF      16869>>ASSIGN  16871>>ASSIGN  16877>>IF      16880>>ASSIGN  16928>>ASSIGN
     16929>>ASSIGN  16930>>ASSIGN  16932>>ASSIGN  16933>>ASSIGN  16979>>ASSIGN  16993>>IF      16995>>IF
     16996>>ASSIGN  16998>>ASSIGN  17000>>ASSIGN  17002>>ASSIGN  17004>>ASSIGN  17011>>ASSIGN  17021>>ASSIGN
     17022>>ASSIGN  17023>>ASSIGN  17039>>ASSIGN  17044>>IF      17059>>ASSIGN  17063>>ASSIGN  17093>>ASSIGN
     17111>>ASSIGN
KV$SRD.BTMRHT
     15273**DCL     15278--REDEF
KV$SRD.CRT
     15349**DCL     15354--REDEF
KV$SRD.FLDEND
     15313**DCL     15318--REDEF
KV$SRD.HI_NONBLN
     15383**DCL     15388--REDEF
KV$SRD.LNG
     15281**DCL     16979>>ASSIGN  17039>>ASSIGN
KV$SRD.ORG
     15205**DCL     15210--REDEF
KV$SRD.SRDEND
     15418**DCL     15423--REDEF
KV$SRD.TOPLFT
     15239**DCL     15244--REDEF
KV$USR_DAT
     15448**DCL     16416<>CALL
KV$USR_DAT.DATMOD
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:150  
     15476**DCL     16396>>IF
KV$USR_DAT.DAT__.ADR$
     15504**DCL     16437>>ASSIGN
KV$USR_DAT.DAT__.BYTX
     15504**DCL     16435>>ASSIGN
KV$USR_DAT.DAT__.DATBYTSIZ
     15504**DCL     16412>>ASSIGN  16412>>ASSIGN  16434>>ASSIGN  16436>>ASSIGN
KV$USR_DAT.FNC
     15452**DCL     16352>>IF      16362>>IF      16373>>DOCASE
KV$USR_EVT.ID
     15549**DCL     16362>>IF      16448>>DOCASE
KV$USR_OTPMRK.DAT
     15606**DCL     16782>>ASSIGN  16791>>ASSIGN  16810>>ASSIGN
KV$USR_OTPMRK.DAT.ID
     15609**DCL     15609--REDEF   15610--REDEF
KV$USR_OTPMRK.DAT.MSTRTR
     15608**DCL     16788>>IF      16826>>IF
KV$USR_PST.PHSPST
     15673**DCL     15678--REDEF
KV$USR_PST.PHSPST.CLM
     15675**DCL     16865>>IF      16869>>ASSIGN  16920>>ASSIGN  16921>>ASSIGN  16929>>ASSIGN  16930>>ASSIGN
     16933>>ASSIGN
KV$USR_PST.PHSPST.LIN
     15675**DCL     16865>>IF      16897>>IF      16903>>ASSIGN  16926>>ASSIGN  16932>>ASSIGN
KV$USR_PST.TOPPAGCNT
     15646**DCL     16865>>IF      16889>>IF      16892>>DOINDEX 16910>>ASSIGN
KV$USR_SETPRM.PRMID
     15779**DCL     16970>>DOCASE
KV$USR_SETPRM.VAL
     15779**DCL     17028>>IF
KV$VDH_EVT
     14175**DCL     16536<<ASSIGN  16537<>CALL
KV$VDH_OTPMRK
     14245**DCL     16781<<ASSIGN  16784<>CALL
KV$VDH_OTPMRK.CMPCOD
     14278**DCL     16783<<ASSIGN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:151  
KV$VDH_OTPMRK.DAT
     14272**DCL     16782<<ASSIGN
KV$VDH_OTPMRK.DAT.ID
     14275**DCL     14275--REDEF   14276--REDEF
KV$VDI.CHN$
     15059**DCL     16554>>ASSIGN  17093>>ASSIGN  17111>>ASSIGN
KV$VDI.OTPBFR_.ADR$
     15085**DCL     16629<<ASSIGN  16819<<ASSIGN  16928<<ASSIGN  17021<<ASSIGN
KV$VDI.OTPBFR_.BYTSIZ
     15085**DCL     16631<<ASSIGN  16821<<ASSIGN  16930<<ASSIGN  17023<<ASSIGN
KV$VDI.OTPBFR_.BYTX
     15085**DCL     16630<<ASSIGN  16800>>IF      16803>>ASSIGN  16804>>ASSIGN  16820<<ASSIGN  16865>>IF
     16869>>ASSIGN  16871>>ASSIGN  16877>>IF      16880>>ASSIGN  16929<<ASSIGN  17022<<ASSIGN
KV$VDI.RQSOTP
     15095**DCL     16533>>IF      16535<<ASSIGN
KV$VDI.UN_KNWPST
     15098**DCL     17044>>IF      17059<<ASSIGN  17063<<ASSIGN
KV$VDI.USRCTX$
     15059**DCL     16349>>ASSIGN
KV$VFU.LIN
     15853**DCL     16993>>IF      16995>>IF      16996>>ASSIGN  16998>>ASSIGN  17000>>ASSIGN  17004>>ASSIGN
KV$VFU.NXT
     15853**DCL     17002>>ASSIGN  17011>>ASSIGN
KVB$GET2NSYS
     13996**DCL-ENT 16525--CALL
KVV$VDI
     13997**DCL-ENT 16537--CALL    16784--CALL
KV_STT.REQSTATS.DSPMSK
     11717**DCL     11723--REDEF
KV_STT.REQSTATS.SLCMSK
     11758**DCL     11765--REDEF
KV_VDH_EVT_RQSOTP
     14210**DCL     16536>>ASSIGN
KV_VDH_OTPMRK
     16279**DCL     16781>>ASSIGN
KV_VDH_OTPMRK.DAT.ID
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:152  
     16309**DCL     16309--REDEF   16310--REDEF
KY$CTX
     14291**DCL     16478<>CALL    16482<>CALL    16520<>CALL    16528<>CALL    16532<>CALL    16671<>CALL
     16704<>CALL    16706<>CALL    16713<>CALL    16715<>CALL    16723<>CALL    16731<>CALL    16943<>CALL
     17032<>CALL    17126<>CALL    17150<>CALL
KY$CTX.CLEAR_VDIENB.PTR1
     14454**DCL     16467<<ASSIGN  16510<<ASSIGN  16568<<ASSIGN  16608<<ASSIGN
KY$CTX.CLEAR_VDIENB.PTR2
     14455**DCL     16468<<ASSIGN  16511<<ASSIGN  16569<<ASSIGN  16609<<ASSIGN
KY$CTX.DEFRD.INTRPT
     14428**DCL     16709>>IF      16716<<ASSIGN
KY$CTX.DEFRD.ONLINE
     14435**DCL     16708>>ASSIGN
KY$CTX.DEFRD.STATUSW
     14433**DCL     14435--REDEF   16711>>ASSIGN
KY$CTX.DSCPND
     14300**DCL     16508<<ASSIGN  16624>>IF      16640>>IF      16655>>IF      16826>>IF
KY$CTX.DSCRSN
     14446**DCL     16563>>IF      16565<<ASSIGN  16737>>IF      16738<<ASSIGN  17122>>IF      17124<<ASSIGN
KY$CTX.DVCTYP
     14379**DCL     16480>>IF      16522>>IF      16615>>DOCASE  16703>>IF      16712>>IF      16779>>IF
     16788>>IF      16797>>IF      16812>>IF
KY$CTX.DVC_ID
     14375**DCL     16983>>IF      16983>>IF      16983>>IF      17055>>IF      17055>>IF
KY$CTX.DVC_STATE
     14294**DCL     16507<<ASSIGN
KY$CTX.INPUT.BUF$
     14412**DCL     16525<>CALL
KY$CTX.INPUT.BUF_SIZE
     14413**DCL     16524<<ASSIGN  16525<>CALL    16526>>ASSIGN
KY$CTX.INPUT.EOF
     14419**DCL     16653<<ASSIGN
KY$CTX.LPI
     14302**DCL     17029<<ASSIGN  17031<<ASSIGN
KY$CTX.LP_STATUS.DEV_READY
     14312**DCL     16707>>ASSIGN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:153  
KY$CTX.MODE
     14382**DCL     14390--REDEF
KY$CTX.MODE.BIN_CURR
     14386**DCL     16657<<ASSIGN
KY$CTX.MODE.BIN_IN
     14388**DCL     16398>>IF      16403<<ASSIGN  16425>>IF      16430<<ASSIGN  16642<<ASSIGN
KY$CTX.PST.LIN
     14391**DCL     16865>>IF      16891<<ASSIGN  16903>>ASSIGN  16910<<ASSIGN  16926<<ASSIGN
KY$CTX.Q.INPUT$
     14396**DCL     16400>>ASSIGN  16401>>ASSIGN  16401>>ASSIGN  16410>>ASSIGN  16411>>ASSIGN  16411>>ASSIGN
     16412>>ASSIGN  16414>>IF      16416>>CALL    16416>>CALL    16418>>ASSIGN  16427>>ASSIGN  16428>>ASSIGN
     16428>>ASSIGN  16433>>ASSIGN  16433>>ASSIGN  16434>>ASSIGN  16437>>ASSIGN  16437>>ASSIGN  16626>>ASSIGN
     16627>>ASSIGN  16627>>ASSIGN  16629>>ASSIGN  16779>>IF      16791>>ASSIGN  16792>>ASSIGN  16799>>ASSIGN
     16800>>IF      16800>>IF      16800>>IF      16803>>ASSIGN  16809>>ASSIGN  16810>>ASSIGN  16816>>ASSIGN
     16817>>ASSIGN  16817>>ASSIGN  16819>>ASSIGN  16863>>IF      16871>>ASSIGN  16871>>ASSIGN  16872>>ASSIGN
     16877>>IF      16877>>IF      16877>>IF      16880>>ASSIGN  16886>>ASSIGN  16893>>ASSIGN  16896>>ASSIGN
     16913>>ASSIGN  16918>>ASSIGN  16920>>ASSIGN  16923>>ASSIGN  16923>>ASSIGN  16928>>ASSIGN  16972>>IF
     17017>>ASSIGN  17018>>ASSIGN  17018>>ASSIGN  17018>>ASSIGN  17019>>ASSIGN  17021>>ASSIGN  17022>>ASSIGN
     17042>>IF      17155>>ASSIGN  17156>>ASSIGN  17156>>ASSIGN
KY$CTX.Q.THRTL.OUTAMEM
     14403**DCL     17090<<ASSIGN  17109<<ASSIGN
KY$CTX.RESCHEDULE.DSC
     14444**DCL     16729>>IF
KY$CTX.RESCHEDULE.INTERRUPT
     14442**DCL     16701>>IF      16718<<ASSIGN
KY$CTX.RESCHEDULE.TIMER
     14441**DCL     16721>>IF      16724<<ASSIGN
KY$CTX.STATUSW
     14309**DCL     14311--REDEF   14319--REDEF   14333--REDEF   14347--REDEF   14361--REDEF   16711<<ASSIGN
KY$CTX.VDIENB
     14447**DCL     14453--REDEF
KY$CTX.VDIENB.EVTENB
     14449**DCL     16362>>IF      16472<<ASSIGN  16473<<ASSIGN  16474<<ASSIGN  16475<<ASSIGN  16476<<ASSIGN
     16515<<ASSIGN  16516<<ASSIGN  16517<<ASSIGN  16518<<ASSIGN  16572<<ASSIGN  16573<<ASSIGN  16574<<ASSIGN
     16575<<ASSIGN  16610<<ASSIGN  16611<<ASSIGN  16612<<ASSIGN  16613<<ASSIGN  17113<<ASSIGN
KY$CTX.VDIENB.STRENB
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:154  
     14448**DCL     16352>>IF      16469<<ASSIGN  16470<<ASSIGN  16512<<ASSIGN  16513<<ASSIGN  16570<<ASSIGN
     16619<<ASSIGN  16620<<ASSIGN  16621<<ASSIGN  16622<<ASSIGN  16636<<ASSIGN  16637<<ASSIGN  16638<<ASSIGN
     16647<<ASSIGN  16651<<ASSIGN  16652<<ASSIGN
KY$CTX.VFU_LOADED
     14301**DCL     16974>>IF      16986<<ASSIGN  17058<<ASSIGN  17064<<ASSIGN
KY$NEXT_CTX.DEFRD.STATUSW
     14610**DCL     14612--REDEF
KY$NEXT_CTX.MODE
     14559**DCL     14567--REDEF
KY$NEXT_CTX.STATUSW
     14486**DCL     14488--REDEF   14496--REDEF   14510--REDEF   14524--REDEF   14538--REDEF
KY$NEXT_CTX.VDIENB
     14624**DCL     14630--REDEF
KY$OUTMRK
     14862**DCL     16809<<ASSIGN
KY$OUTMRK.MARKER
     14865**DCL     16810<<ASSIGN
KY$PRIOR_CTX.DEFRD.STATUSW
     14787**DCL     14789--REDEF
KY$PRIOR_CTX.MODE
     14736**DCL     14744--REDEF
KY$PRIOR_CTX.STATUSW
     14663**DCL     14665--REDEF   14673--REDEF   14687--REDEF   14701--REDEF   14715--REDEF
KY$PRIOR_CTX.VDIENB
     14801**DCL     14807--REDEF
KY$REC
     14836**DCL     16401<<ASSIGN  16411<<ASSIGN  16428<<ASSIGN  16433<<ASSIGN  16627<<ASSIGN  17156<<ASSIGN
KY$REC.BIN
     14841**DCL     16418<<ASSIGN
KY$REC.OTPMRK
     14846**DCL     16791<<ASSIGN
KY$REC.RECSIZE
     14839**DCL     14849--IMP-SIZ 16400<<ASSIGN  16401>>ASSIGN  16410<<ASSIGN  16411>>ASSIGN  16412<<ASSIGN
     16414>>IF      16416>>CALL    16427<<ASSIGN  16428>>ASSIGN  16433>>ASSIGN  16434<<ASSIGN  16437>>ASSIGN
     16626<<ASSIGN  16627>>ASSIGN  16799>>ASSIGN  16800>>IF      16803<<ASSIGN  16816<<ASSIGN  16817>>ASSIGN
     16871>>ASSIGN  16872<<ASSIGN  16877>>IF      16880<<ASSIGN  16886<<ASSIGN  16920<<ASSIGN  16923>>ASSIGN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:155  
     17017<<ASSIGN  17018>>ASSIGN  17018>>ASSIGN  17022>>ASSIGN  17155<<ASSIGN  17156>>ASSIGN
KY$REC.REP_OTPMRK
     14843**DCL     16792<<ASSIGN
KY$REC.SPACE_N
     14845**DCL     16800>>IF      16877>>IF      16913<<ASSIGN  16918<<ASSIGN
KY$REC.TOF
     14842**DCL     16800>>IF      16877>>IF      16893<<ASSIGN  16896<<ASSIGN
KY$REC.TXT
     14849**DCL     16416<>CALL    16437<<ASSIGN  16629--ASSIGN  16817<<ASSIGN  16819--ASSIGN  16871<<ASSIGN
     16923<<ASSIGN  16928--ASSIGN  17018<<ASSIGN  17021--ASSIGN
KY$REC.TXTARRAY
     14848**DCL     14849--REDEF
KY$REC.TYPE
     14838**DCL     17019<<ASSIGN
KYD$DISCON
     13999**DCL-ENT 16671--CALL
KYD$FLUSH
     14000**DCL-ENT 16478--CALL
KYD$INIT_DISCON
     14001**DCL-ENT 16731--CALL    17126--CALL
KYI$IO
     14002**DCL-ENT 16520--CALL    17032--CALL
KYN$DISABLE
     13995**DCL-ENT 16346--CALL    16699--CALL    16942--CALL
KYN$ENABLE
     13994**DCL-ENT 16727--CALL    16944--CALL    16976--CALL    17079--CALL    17128--CALL
KYN$IUR_HNDLR
     14004**DCL-ENT 16704--CALL    16713--CALL
KYN$OUR_HNDLR
     14003**DCL-ENT 16706--CALL    16715--CALL
KYQ$CLOSE
     14005**DCL-ENT 17150--CALL
KYQ$INIT
     14006**DCL-ENT 16532--CALL
KYS$IUR_SCHED
     14010**DCL-ENT 16482--CALL    16528--CALL    16943--CALL
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:156  
KYT$TIMEOUT
     14009**DCL-ENT 16723--CALL
KYV$UNPACK_BIN
     14012**DCL-ENT 16416--CALL
KY_ASC_REC
     16197**DCL     16428>>ASSIGN
KY_ASC_REC.RECSIZE
     16200**DCL     16427>>ASSIGN
KY_BIN_REC
     16236**DCL     16401>>ASSIGN
KY_BIN_REC.RECSIZE
     16239**DCL     16400>>ASSIGN
KY_DUMMY_OUTMRK
     16166**DCL     16809>>ASSIGN
KY_DUMMY_REC
     16140**DCL     16411>>ASSIGN  16433>>ASSIGN  16627>>ASSIGN  17156>>ASSIGN
KY_DUMMY_REC.RECSIZE
     16143**DCL     16410>>ASSIGN  16626>>ASSIGN  17155>>ASSIGN
KY_STT_URP.REQSTATS.DSPMSK
     11366**DCL     11372--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     11407**DCL     11414--REDEF
KY_STT_URP.USRSTT.INPBFRBYTUTL
     11438**DCL     16526<<ASSIGN  16526>>ASSIGN
LIN_INDX
     14126**DCL     16988<<DOINDEX 16989>>ASSIGN
NO_MEM IN PROCEDURE ADD_TO_Q
     17153**LABEL   17150--CALLALT
PAGLNG
     14114**DCL     16979<<ASSIGN  16980>>IF      16980>>IF      16981<<ASSIGN  17016>>ASSIGN  17017>>ASSIGN
     17023>>ASSIGN  17038>>ASSIGN  17039<<ASSIGN
PARM
     14111**DCL        10--PROC    16347--ASSIGN
PARM$
     14146**DCL     15448--IMP-PTR 15543--IMP-PTR 15578--IMP-PTR 15640--IMP-PTR 15710--IMP-PTR 15773--IMP-PTR
     16347<<ASSIGN  16352>>IF      16362>>IF      16362>>IF      16373>>DOCASE  16396>>IF      16412>>ASSIGN
PL6.E3A0      #001=KYV$VDI File=KYV$VDI.:E05TSI                                  WED 07/30/97 02:47 Page:157  
     16412>>ASSIGN  16416>>CALL    16434>>ASSIGN  16435>>ASSIGN  16436>>ASSIGN  16437>>ASSIGN  16448>>DOCASE
     16782>>ASSIGN  16788>>IF      16791>>ASSIGN  16810>>ASSIGN  16826>>IF      16865>>IF      16865>>IF
     16865>>IF      16869>>ASSIGN  16889>>IF      16892>>DOINDEX 16897>>IF      16903>>ASSIGN  16910>>ASSIGN
     16920>>ASSIGN  16921>>ASSIGN  16926>>ASSIGN  16929>>ASSIGN  16930>>ASSIGN  16932>>ASSIGN  16933>>ASSIGN
     16970>>DOCASE  17028>>IF
Q_ABORT
     17093**LABEL   16532--CALLALT
SPACE_N
     14115**DCL     16903<<ASSIGN  16904>>IF      16912>>DOWHILE 16915<<ASSIGN  16915>>ASSIGN  16918>>ASSIGN
TEMP1
     14117**DCL     16435<<ASSIGN  16437>>ASSIGN
TEMP2
     14118**DCL     16436<<ASSIGN  16437>>ASSIGN  16869<<ASSIGN  16870>>IF      16871>>ASSIGN  16921<<ASSIGN
     16922>>IF      16923>>ASSIGN
TEMP_LIN
     14129**DCL     17004<<ASSIGN  17005>>IF      17006>>ASSIGN  17008>>ASSIGN  17010>>ASSIGN
TOF
     14116**DCL     16892<<DOINDEX
VFU_BUF
     14123**DCL     16989--ASSIGN  16998--ASSIGN  17000--ASSIGN  17008--ASSIGN  17010--ASSIGN  17015--ASSIGN
     17016--ASSIGN  17037--ASSIGN  17038--ASSIGN
VFU_C
     14122**DCL     14123--REDEF   17018>>ASSIGN
