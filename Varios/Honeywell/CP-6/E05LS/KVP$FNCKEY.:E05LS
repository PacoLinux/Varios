VERSION E05

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:1    
        1        1        /*M* KVP$FNCKEY Functionkey profile options conversion routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        /*P*
        9        9            NAME: KVP$FNCKEY
       10       10            PURPOSE:
       11       11                  To convert the functionkey definitions portion of a profile record
       12       12                  to an input-function-table of the profile variety.
       13       13        */
       14       14        /*D*
       15       15            NAME: KVP$FNCKEY
       16       16            CALL: CALL KVP$FNCKEY (KV$VDH_SETPRM)
       17       17            PARAMETERS:
       18       18                  The KV$VDH_SETPRM structures that frames the fnckey
       19       19                  poriton of the profile record (minus the T/L word(s)).
       20       20            INTERFACE:
       21       21                  It calls KVS$GETBFR and KVS$RLSBFR to get and release
       22       22                  shared buffers while building the table or releasing the old one.
       23       23                  It calls KVI$NEWINPFNCTBL to analyze intro coincidences.
       24       24            DESCRIPTION:
       25       25                  Builds a table in AUTO or over the profile area (depending on which
       26       26                  fits better), sorting the definitions so that a shared buffer search
       27       27                  will find like tables regardless of the order of creation.
       28       28        */
       29       29        KVP$FNCKEY: PROC (KV$VDH_SETPRM);
       30       30
       31       31        %INCLUDE AS_FUNKEY_DEFS_C;
       32      136 S      %INCLUDE KV$GLB;
       33      137 S      %INCLUDE KV$GLBCTX;
       34      138        %INCLUDE KV$INPFNC;
       35      697 S      %INCLUDE KV$INT;
       36      698 S      %INCLUDE KV$VDH;
       37      699        %INCLUDE KV_ERRORS_C;                   /* error code equates                 */
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:2    
       38      759 S      %INCLUDE KV_GLBCNS_E;
       39      760 S      %INCLUDE KV_PRMID_E;
       40      761
       41      762        %KV_INPFNC_E;                           /*  VDH INPUT FUNCTION DEFS           */
       42      776        %KV_INPFNCKEY_E;                        /*  VDH INPUT FUNCTIONKEY DEFS        */
       43     1038        %KV_STRTYP_E;
       44     1076        %KV_PRMID_E;                            /*  JUNK FOR USRPRM                   */
       45     1232        %KV$VDH_SETPRM(STCLASS="");
       46     1294        %KV$STR;
       47     1381        %KV$MRD;                                /*  MASTER REAL DEVICE CONTEXT        */
       48     1428        %KV$MVD;                                /*  MASTER VIRT. DEVICE CONTEXT       */
       49     1472        %KV$INPFNCTBL;
       50     1556        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       51     1599        %KV$SHRBFR;                             /*  SHARED BUFFER TEMPLATE            */
       52     1631        %AS_FUNKEY (NAME=PARM, STCLASS="BASED(PRM$)");
       53     1702
       54     1703    1   DCL PRM$ PTR;
       55     1704    1   DCL TBL$ PTR;
       56     1705    1   DCL I SBIN;
       57     1706    1   DCL J SBIN;
       58     1707    1   DCL K SBIN;
       59     1708    1   DCL OX REDEF K SBIN;
       60     1709    1   DCL MAX SBIN;
       61     1710    1   DCL MIN SBIN;
       62     1711    1   DCL MINU REDEF MIN UBIN;
       63     1712    1   DCL I1 REDEF MIN SBIN;
       64     1713    1   DCL M1 SBIN;
       65     1714    1   DCL I2 SBIN;
       66     1715    1   DCL M2 SBIN;
       67     1716    1   DCL I3 SBIN;
       68     1717
       69     1718        %KV$VDH_GETBFR(NAME = KV@VDH_GETBFR, STCLASS = "");
       70     1783        %KV$VDH_GETBFR(NAME = KV_VDH_GETBFR, STCLASS = "SYMREF READONLY");
       71     1848        %KV$VDH_RLSBFR(NAME = KV_VDH_RLSBFR, STCLASS = "SYMREF READONLY");
       72     1884        %KV$INPFNCTBL (NAME=AUTOTBL, STCLASS=AUTO); /* PLACE TO BUILD IT PERHAPS      */
       73     1968    1   DCL AUTO_SPACE(0:119) SBIN WORD;        /* 120 WORDS IS THE CUTOFF POINT      */
       74     1969
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:3    
       75     1970        /* constant input function table header for initialization  */
       76     1971
       77     1972        %KV_FNCID (NAME=KV_INPFNCTBL);
       78     2059        %EQU KV_INPOPR0=KV_INPOPRX;
       79     2060        %KV$INPFNCTBL (NAME=FOR_INIT, STCLASS=EXT);
       80     2144
       81     2145        /* CHARS FOR MOVES */
       82     2146    1   DCL CHARS BASED CHAR(500);
       83     2147    1   DCL WORDS(0:0) SBIN ALIGNED BASED(TBL$);
       84     2148    1   DCL BYTES(0:0) UBIN BYTE CALIGNED BASED(TBL$);
       85     2149
       86     2150
       87     2151        /* external procs and entries */
       88     2152
       89     2153
       90     2154    1   DCL KVS$GETBFR ENTRY(1) ALTRET;
       91     2155    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
       92     2156    1   DCL KVI$NEWINPFNCTBL ENTRY;
       93     2157
       94     2158        %EJECT;
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:4    
       95     2159        /* First take a look at what we've got, to decide what to do. */
       96     2160
       97     2161    1      KV@VDH_GETBFR = KV_VDH_GETBFR;
       98     2162    1      KV@VDH_GETBFR.STRTYP = %KV_STRTYP_USRINPFNCTBL;
       99     2163    1      PRM$ = PINCRW(KV$VDH_SETPRM.VAL_.ADR$, KV$VDH_SETPRM.VAL_.BYTX/2);
      100     2164    1      IF PARM.NUM_DEFS*4+SIZEC(PARM)-4>KV$VDH_SETPRM.VAL_.BYTSIZ
      101     2165    1      THEN PARM.NUM_DEFS = (KV$VDH_SETPRM.VAL_.BYTSIZ-SIZEC(PARM)+4)/4;
      102     2166    2      IF PARM.NUM_DEFS<=0 THEN DO;
      103     2167
      104     2168        /* Must be a profile with no FUNKEY DEFs.  Just remove any current defs. */
      105     2169
      106     2170    2         KV@VDH_GETBFR.BFR$ = ADDR(NIL);
      107     2171    2         GOTO CLEANUP;
      108     2172    2      END;
      109     2173
      110     2174        /* First lets start building the table */
      111     2175
      112     2176    1      AUTOTBL = KV_INPFNCTBL.FOR_INIT;
      113     2177    1      AUTOTBL.ESCINT1_CHR(0) = PARM.INTRO1.CHR1;
      114     2178    1      AUTOTBL.ESCINT2_CHR(0) = PARM.INTRO1.CHR2;
      115     2179    1      AUTOTBL.ESCINT1_CHR(1) = PARM.INTRO2.CHR1;
      116     2180    1      AUTOTBL.ESCINT2_CHR(1) = PARM.INTRO2.CHR2;
      117     2181    1      AUTOTBL.OPRX_OFS(1) = 0;
      118     2182    1      AUTOTBL.OPRX_OFS(2) = 0;
      119     2183
      120     2184        /* Then go thru and eliminate all the unneeded numerical ones.  Only the last
      121     2185           of a sequence needs to be kept.                                            */
      122     2186
      123     2187    1      MAX = PARM.NUM_DEFS;
      124     2188    2      DO I=0 TO MAX-1;
      125     2189    2         MIN = PARM.FNCKEW.WRD1(I)+257;
      126     2190    3         IF MINU>%KV_FCNKEY_MODIFIER_BASE*256 THEN DO;
      127     2191    3            K = PARM.FCNKEY.FCN_BYTE2(I)*2;
      128     2192    3            IF K>%KV_SPCCHR_MODIFIER_BASE*2
      129     2193        /* Make them sort according to modifier */
      130     2194    3            THEN K = K+%KV_FCNKEY_MODIFIER_BASE*2+1;
      131     2195    3            PARM.FCNKEY.FCN_BYTE2(I) = K;
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:5    
      132     2196    3            AUTOTBL.ESCCNTOK(PARM.FCNKEY.FCN_BYTE0(I)) = '1'B;
      133     2197    4            DO J=I+1 TO PARM.NUM_DEFS-1;   /* Toss it if its successor exists.   */
      134     2198    4               IF PARM.FNCKEW.WRD0(J)=PARM.FNCKEW.WRD0(I)
      135     2199    5                 AND MIN=PARM.FNCKEW.WRD1(J) THEN DO;
      136     2200    5                  MAX = MAX-1;
      137     2201    5                  PARM.FCNKEY(I) = PARM.FCNKEY(MAX);
      138     2202    5                  PARM.TXT_UBIN(MAX) = PARM.TXT_UBIN(J)-257;
      139     2203    5                  I = I-1;
      140     2204    5                  J = PARM.NUM_DEFS;
      141     2205    5               END;
      142     2206    4            END;
      143     2207    3         END;
      144     2208    2      END;
      145     2209
      146     2210        /* OX is the output index (for IDs(BYT1) and DEFs (BYT2-3)).
      147     2211           I1 is the low input index (into PARM.FCNKEY)
      148     2212           I2 is the middle input index (into PARM.FCNKEY) where DEFs are being stored.
      149     2213           I3 is the high input index (into PARM.FCNKEY) where IDs are being stored.
      150     2214           M1 is where I2 started (and thus where I1 ends)
      151     2215           M2 is where I3 started (and thus where I2 ends)
      152     2216              These allow us to build the table ontop of the input data.  The first
      153     2217              def doubleword used comes from I2, which is where the first output
      154     2218              DEF (a word) gets stored.  Plucking from I2 and I3 alternates until I2
      155     2219              runs out (always after I3 does), then use the rest at I1.
      156     2220        */
      157     2221
      158     2222    2      IF MAX<80 THEN DO;
      159     2223
      160     2224        /* Small tables get built in AUTO, in a straight-forward manner. */
      161     2225
      162     2226    2         TBL$ = ADDR(AUTO_SPACE(MAX));
      163     2227    2         I1 = 0;
      164     2228    2         M1 = 0;
      165     2229    2         M2 = 0;
      166     2230    2         I2 = MAX;
      167     2231    2      END; ELSE DO;
      168     2232
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:6    
      169     2233        /* Big ones get built over PARM, with the crazy selection method. */
      170     2234
      171     2235    2         TBL$ = PINCRW(ADDR(PARM),SIZEW(KV$INPFNCTBL)+MAX);
      172     2236    2         I1 = -3;
      173     2237    2         M1 = (SIZEW(KV$INPFNCTBL)-SIZEW(PARM)+2)/2;
      174     2238    2         I2 = M1+1;
      175     2239    2         M2 = (SIZEW(KV$INPFNCTBL)-SIZEW(PARM)+2+MAX)/2;
      176     2240    2         I3 = M2+1;
      177     2241    2         PARM.FCNKEY(-3) = PARM.FCNKEY(M1);
      178     2242    2         PARM.FCNKEY(-2) = PARM.FCNKEY(M2);
      179     2243    2         PARM.FCNKEY(-1) = PARM.FCNKEY(M1+1);
      180     2244    2      END;
      181     2245
      182     2246    2      DO OX = 0 TO MAX-1;
      183     2247    2         J = I1;
      184     2248    2         I = I1;
      185     2249    3         DO UNTIL I=MAX;
      186     2250
      187     2251        /* Find the smallest one */
      188     2252
      189     2253    3            IF PARM.TXT_UBIN(I)<PARM.TXT_UBIN(J) THEN J = I;
      190     2254    3            I = I+1;
      191     2255    3            IF I=M1 THEN I=I2;
      192     2256    3            IF I=M2 THEN I=I3;
      193     2257    3         END;
      194     2258
      195     2259        /* pick where to make the hole */
      196     2260
      197     2261    3         IF I2=MAX THEN DO;
      198     2262    3            I = I1;
      199     2263    3            I1 = I1+1;
      200     2264    3         END; ELSE IF I2<M2 AND (I3=MAX OR BINBIT(OX,1)) THEN DO;
      201     2265    3            I = I2;
      202     2266    3            I2 = I2+1;
      203     2267    3            IF I2=M2 THEN I2 = MAX;
      204     2268    3         END; ELSE DO;
      205     2269    3            I = I3;
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:7    
      206     2270    3            I3 = I3+1;
      207     2271    3         END;
      208     2272
      209     2273    2         IF AUTOTBL.OPRX_OFS(PARM.FCNKEY.FCN_BYTE0(J))=0
      210     2274
      211     2275        /* First of a new type entry.  Set its starting index. */
      212     2276
      213     2277    2         THEN AUTOTBL.OPRX_OFS(PARM.FCNKEY.FCN_BYTE0(J)) = OX+SIZEW(KV$INPFNCTBL);
      214     2278
      215     2279    2         WORDS(OX-MAX) = PARM.FNCKEW.WRD1(J);
      216     2280    2         BYTES(OX) = PARM.FCNKEY.FCN_BYTE1(J);
      217     2281
      218     2282        /* Switch the chosen entry with the hole to be used. */
      219     2283
      220     2284    2         PARM.FCNKEY(J) = PARM.FCNKEY(I);
      221     2285    2      END;
      222     2286
      223     2287        /* Now finish up the table. */
      224     2288
      225     2289    1      AUTOTBL.OPRX_OFS(3) = MAX+SIZEW(KV$INPFNCTBL);
      226     2290    1      IF AUTOTBL.OPRX_OFS(2)=0 THEN AUTOTBL.OPRX_OFS(2) = AUTOTBL.OPRX_OFS(3);
      227     2291    1      IF AUTOTBL.OPRX_OFS(1)=0 THEN AUTOTBL.OPRX_OFS(1) = AUTOTBL.OPRX_OFS(2);
      228     2292    1      AUTOTBL.ID_CHROFS(0) = AUTOTBL.OPRX_OFS(3)*2;
      229     2293    2      DO I = 0 TO %KV_INPFNCTYP_SPCCHR;
      230     2294    2         AUTOTBL.ID_CHRCNT(I) = AUTOTBL.OPRX_OFS(I+1)-AUTOTBL.OPRX_OFS(I);
      231     2295    2         AUTOTBL.ID_CHROFS(I+1) = AUTOTBL.ID_CHROFS(I)+AUTOTBL.ID_CHRCNT(I);
      232     2296    2         IF I<%KV_INPFNCTYP_SPCCHR
      233     2297    2         THEN AUTOTBL.SPCCHR(AUTOTBL.ESCINT1_CHR(I)) = '1'B;
      234     2298    2      END;
      235     2299    1      IF AUTOTBL.ID_CHRCNT(%KV_INPFNCTYP_SPCCHR)~=0
      236     2300    1      THEN DO J=AUTOTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR)
      237     2301    2        TO AUTOTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR+1)-1;
      238     2302    2         AUTOTBL.SPCCHR(BYTES(J-AUTOTBL.ID_CHROFS(0))) = '1'B;
      239     2303    2      END;
      240     2304    1      AUTOTBL.BYTSIZ = AUTOTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR+1);
      241     2305
      242     2306    1      IF MAX<80 THEN KV@VDH_GETBFR.DAT_.ADR$ = ADDR(AUTOTBL);
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:8    
      243     2307    2      ELSE DO;
      244     2308    2         KV@VDH_GETBFR.DAT_.ADR$ = ADDR(PARM);
      245     2309    2         ADDR(PARM)->KV$INPFNCTBL = AUTOTBL;
      246     2310    2      END;
      247     2311    1      KV@VDH_GETBFR.DAT_.BYTX = SIZEC(KV$SHRBFR);
      248     2312    1      KV@VDH_GETBFR.DAT_.BYTSIZ = AUTOTBL.BYTSIZ-SIZEC(KV$SHRBFR);
      249     2313    2      CALL KVS$GETBFR (KV@VDH_GETBFR) WHENALTRETURN DO;
      250     2314        /*N* Profiles are no-wait, so it doesn't make much sense to return an error */
      251     2315
      252     2316    2      END;
      253     2317
      254     2318    1   CLEANUP:;
      255     2319    1      TBL$ = KV@VDH_GETBFR.BFR$;
      256     2320    1      KV@VDH_GETBFR.BFR$ = %KV_MRD.PRFINPFNCTBL$;
      257     2321    1      IF KV@VDH_GETBFR.BFR$~=ADDR(NIL) THEN CALL KVS$RLSBFR (KV@VDH_GETBFR);
      258     2322    1      %KV_MRD.PRFINPFNCTBL$ = TBL$;
      259     2323    1      TBL$ = KV$PTR.MVD$;
      260     2324    1      KV$PTR.MVD$ = %KV_MRD.MVD$;
      261     2325    2      DO WHILE KV$PTR.MVD$~=ADDR(NIL);
      262     2326    2         CALL KVI$NEWINPFNCTBL;
      263     2327    2         KV$PTR.MVD$ = %KV_MVD.LNK$;
      264     2328    2      END;
      265     2329    1      KV$PTR.MVD$ = TBL$;
      266     2330    1      RETURN;
      267     2331
      268     2332    1   END KVP$FNCKEY;

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:9    
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   AS_FUNKEY_DEFS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVP$FNCKEY.

   Procedure KVP$FNCKEY requires 640 words for executable code.
   Procedure KVP$FNCKEY requires 198 words of local(AUTO) storage.

    No errors detected in file KVP$FNCKEY.:E05TSI    .

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:10   

 Object Unit name= KVP$FNCKEY                                 File name= KVP$FNCKEY.:E05TOU
 UTS= JUL 30 '97 02:12:55.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     46     2E  KVP$FNCKEY
    1   Proc  even  none   640    280  KVP$FNCKEY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KVP$FNCKEY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVS$GETBFR
 yes     yes           Std       1 KVS$RLSBFR
         yes           Std       0 KVI$NEWINPFNCTBL
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KV_VDH_GETBFR                    r    G$ROS$
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:11   


        1        1        /*M* KVP$FNCKEY Functionkey profile options conversion routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        /*P*
        9        9            NAME: KVP$FNCKEY
       10       10            PURPOSE:
       11       11                  To convert the functionkey definitions portion of a profile record
       12       12                  to an input-function-table of the profile variety.
       13       13        */
       14       14        /*D*
       15       15            NAME: KVP$FNCKEY
       16       16            CALL: CALL KVP$FNCKEY (KV$VDH_SETPRM)
       17       17            PARAMETERS:
       18       18                  The KV$VDH_SETPRM structures that frames the fnckey
       19       19                  poriton of the profile record (minus the T/L word(s)).
       20       20            INTERFACE:
       21       21                  It calls KVS$GETBFR and KVS$RLSBFR to get and release
       22       22                  shared buffers while building the table or releasing the old one.
       23       23                  It calls KVI$NEWINPFNCTBL to analyze intro coincidences.
       24       24            DESCRIPTION:
       25       25                  Builds a table in AUTO or over the profile area (depending on which
       26       26                  fits better), sorting the definitions so that a shared buffer search
       27       27                  will find like tables regardless of the order of creation.
       28       28        */
       29       29        KVP$FNCKEY: PROC (KV$VDH_SETPRM);

     29   1 000000  D380 0000 0000  xent KVP$FNCKEY      LNJ,B5   X6A_AUTO_1
          1 000003       00C6 0001                       DC       198,1

       30       30
       31       31        %INCLUDE AS_FUNKEY_DEFS_C;
       32      136 S      %INCLUDE KV$GLB;
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:12   
       33      137 S      %INCLUDE KV$GLBCTX;
       34      138        %INCLUDE KV$INPFNC;
       35      697 S      %INCLUDE KV$INT;
       36      698 S      %INCLUDE KV$VDH;
       37      699        %INCLUDE KV_ERRORS_C;                   /* error code equates                 */
       38      759 S      %INCLUDE KV_GLBCNS_E;
       39      760 S      %INCLUDE KV_PRMID_E;
       40      761
       41      762        %KV_INPFNC_E;                           /*  VDH INPUT FUNCTION DEFS           */
       42      776        %KV_INPFNCKEY_E;                        /*  VDH INPUT FUNCTIONKEY DEFS        */
       43     1038        %KV_STRTYP_E;
       44     1076        %KV_PRMID_E;                            /*  JUNK FOR USRPRM                   */
       45     1232        %KV$VDH_SETPRM(STCLASS="");
       46     1294        %KV$STR;
       47     1381        %KV$MRD;                                /*  MASTER REAL DEVICE CONTEXT        */
       48     1428        %KV$MVD;                                /*  MASTER VIRT. DEVICE CONTEXT       */
       49     1472        %KV$INPFNCTBL;
       50     1556        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       51     1599        %KV$SHRBFR;                             /*  SHARED BUFFER TEMPLATE            */
       52     1631        %AS_FUNKEY (NAME=PARM, STCLASS="BASED(PRM$)");
       53     1702
       54     1703    1   DCL PRM$ PTR;
       55     1704    1   DCL TBL$ PTR;
       56     1705    1   DCL I SBIN;
       57     1706    1   DCL J SBIN;
       58     1707    1   DCL K SBIN;
       59     1708    1   DCL OX REDEF K SBIN;
       60     1709    1   DCL MAX SBIN;
       61     1710    1   DCL MIN SBIN;
       62     1711    1   DCL MINU REDEF MIN UBIN;
       63     1712    1   DCL I1 REDEF MIN SBIN;
       64     1713    1   DCL M1 SBIN;
       65     1714    1   DCL I2 SBIN;
       66     1715    1   DCL M2 SBIN;
       67     1716    1   DCL I3 SBIN;
       68     1717
       69     1718        %KV$VDH_GETBFR(NAME = KV@VDH_GETBFR, STCLASS = "");
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:13   
       70     1783        %KV$VDH_GETBFR(NAME = KV_VDH_GETBFR, STCLASS = "SYMREF READONLY");
       71     1848        %KV$VDH_RLSBFR(NAME = KV_VDH_RLSBFR, STCLASS = "SYMREF READONLY");
       72     1884        %KV$INPFNCTBL (NAME=AUTOTBL, STCLASS=AUTO); /* PLACE TO BUILD IT PERHAPS      */
       73     1968    1   DCL AUTO_SPACE(0:119) SBIN WORD;        /* 120 WORDS IS THE CUTOFF POINT      */
       74     1969
       75     1970        /* constant input function table header for initialization  */
       76     1971
       77     1972        %KV_FNCID (NAME=KV_INPFNCTBL);
       78     2059        %EQU KV_INPOPR0=KV_INPOPRX;
       79     2060        %KV$INPFNCTBL (NAME=FOR_INIT, STCLASS=EXT);
       80     2144
       81     2145        /* CHARS FOR MOVES */
       82     2146    1   DCL CHARS BASED CHAR(500);
       83     2147    1   DCL WORDS(0:0) SBIN ALIGNED BASED(TBL$);
       84     2148    1   DCL BYTES(0:0) UBIN BYTE CALIGNED BASED(TBL$);
       85     2149
       86     2150
       87     2151        /* external procs and entries */
       88     2152
       89     2153
       90     2154    1   DCL KVS$GETBFR ENTRY(1) ALTRET;
       91     2155    1   DCL KVS$RLSBFR ENTRY(1) ALTRET;
       92     2156    1   DCL KVI$NEWINPFNCTBL ENTRY;
       93     2157
       94     2158        %EJECT;
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:14   
       95     2159        /* First take a look at what we've got, to decide what to do. */
       96     2160
       97     2161    1      KV@VDH_GETBFR = KV_VDH_GETBFR;

   2161   1 000005  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_GETBFR
          1 000008  2C00                                 LDV,R2   0
          1 000009  6C16                                 LDV,R6   22
          1 00000A  BB87                                 LAB,B3   ,AUTO
          1 00000B  3C26                                 LDV,R3   38
          1 00000C  0008                                 MMM

       98     2162    1      KV@VDH_GETBFR.STRTYP = %KV_STRTYP_USRINPFNCTBL;

   2162   1 00000D  6C1A                                 LDV,R6   26
          1 00000E  E7C7 0019                            STH,R6   KV@VDH_GETBFR+6,AUTO

       99     2163    1      PRM$ = PINCRW(KV$VDH_SETPRM.VAL_.ADR$, KV$VDH_SETPRM.VAL_.BYTX/2);

   2163   1 000010  ECC7 0004                            LDB,B6   @KV$VDH_SETPRM,AUTO
          1 000012  D846 0005                            LDR,R5   5,B6
          1 000014  D370 0002                            DIV,R5   2,IMO
          1 000016  DCC6 0003                            LDB,B5   3,B6
          1 000018  B855                                 LDR,R3   R5
          1 000019  CBB5                                 LAB,B4   ,B5,R3
          1 00001A  CFC7 0006                            STB,B4   PRM$,AUTO

      100     2164    1      IF PARM.NUM_DEFS*4+SIZEC(PARM)-4>KV$VDH_SETPRM.VAL_.BYTSIZ

   2164   1 00001C  D844 0005                            LDR,R5   5,B4
          1 00001E  5002                                 SOL,R5   2
          1 00001F  5E0C                                 ADV,R5   12
          1 000020  5801 0010                            BLZ,R5   s:2166,PREL
          1 000022  D946 0006                            CMR,R5   6,B6
          1 000024  0381 000C                            BLE      s:2166,PREL

      101     2165    1      THEN PARM.NUM_DEFS = (KV$VDH_SETPRM.VAL_.BYTSIZ-SIZEC(PARM)+4)/4;

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:15   
   2165   1 000026  F846 0006                            LDR,R7   6,B6
          1 000028  6C00                                 LDV,R6   0
          1 000029  8470 FFFF FFF4                       AID      -12,IMO
          1 00002C  F370 0004                            DIV,R7   4,IMO
          1 00002E  E857                                 LDR,R6   R7
          1 00002F  EF44 0005                            STR,R6   5,B4

      102     2166    2      IF PARM.NUM_DEFS<=0 THEN DO;

   2166   1 000031  E844 0005                            LDR,R6   5,B4
          1 000033  6A01 0008                            BGZ,R6   s:2176,PREL

      103     2167
      104     2168        /* Must be a profile with no FUNKEY DEFs.  Just remove any current defs. */
      105     2169
      106     2170    2         KV@VDH_GETBFR.BFR$ = ADDR(NIL);

   2170   1 000035  DB80 0000 0000                       LAB,B5   0
          1 000038  DFC7 0014                            STB,B5   KV@VDH_GETBFR+1,AUTO

      107     2171    2         GOTO CLEANUP;

   2171   1 00003A  0F81 01FA                            B        s:2316,PREL

      108     2172    2      END;
      109     2173
      110     2174        /* First lets start building the table */
      111     2175
      112     2176    1      AUTOTBL = KV_INPFNCTBL.FOR_INIT;

   2176   1 00003C  AB80 0000 0000  00                   LAB,B2   KV_INPFNCTBL
          1 00003F  2C00                                 LDV,R2   0
          1 000040  6C5C                                 LDV,R6   92
          1 000041  BB87                                 LAB,B3   ,AUTO
          1 000042  3C3C                                 LDV,R3   60
          1 000043  0008                                 MMM

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:16   
      113     2177    1      AUTOTBL.ESCINT1_CHR(0) = PARM.INTRO1.CHR1;

   2177   1 000044  DCC7 0006                            LDB,B5   PRM$,AUTO
          1 000046  E805                                 LDR,R6   ,B5
          1 000047  EF47 0046                            STR,R6   AUTOTBL+40,AUTO

      114     2178    1      AUTOTBL.ESCINT2_CHR(0) = PARM.INTRO1.CHR2;

   2178   1 000049  D845 0001                            LDR,R5   1,B5
          1 00004B  DF47 0048                            STR,R5   AUTOTBL+42,AUTO

      115     2179    1      AUTOTBL.ESCINT1_CHR(1) = PARM.INTRO2.CHR1;

   2179   1 00004D  C845 0002                            LDR,R4   2,B5
          1 00004F  CF47 0047                            STR,R4   AUTOTBL+41,AUTO

      116     2180    1      AUTOTBL.ESCINT2_CHR(1) = PARM.INTRO2.CHR2;

   2180   1 000051  B845 0003                            LDR,R3   3,B5
          1 000053  BF47 0049                            STR,R3   AUTOTBL+43,AUTO

      117     2181    1      AUTOTBL.OPRX_OFS(1) = 0;

   2181   1 000055  8747 003B                            CL       AUTOTBL+29,AUTO

      118     2182    1      AUTOTBL.OPRX_OFS(2) = 0;

   2182   1 000057  8747 003C                            CL       AUTOTBL+30,AUTO

      119     2183
      120     2184        /* Then go thru and eliminate all the unneeded numerical ones.  Only the last
      121     2185           of a sequence needs to be kept.                                            */
      122     2186
      123     2187    1      MAX = PARM.NUM_DEFS;

   2187   1 000059  A845 0005                            LDR,R2   5,B5
          1 00005B  AF47 000D                            STR,R2   MAX,AUTO
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:17   

      124     2188    2      DO I=0 TO MAX-1;

   2188   1 00005D  8747 000A                            CL       I,AUTO
          1 00005F  0F81 006D                            B        s:2208+2,PREL

      125     2189    2         MIN = PARM.FNCKEW.WRD1(I)+257;

   2189   1 000061  ECC7 0006                            LDB,B6   PRM$,AUTO
          1 000063  B847 000A                            LDR,R3   I,AUTO
          1 000065  3001                                 SOL,R3   1
          1 000066  3E07                                 ADV,R3   7
          1 000067  E836                                 LDR,R6   ,B6,R3
          1 000068  EA70 0101                            ADD,R6   257,IMO
          1 00006A  EF47 000E                            STR,R6   MIN,AUTO

      126     2190    3         IF MINU>%KV_FCNKEY_MODIFIER_BASE*256 THEN DO;

   2190   1 00006C  D847 000E                            LDR,R5   MIN,AUTO
          1 00006E  D970 0A00                            CMR,R5   2560,IMO
          1 000070  0381 005A                            BLE      s:2208,PREL

      127     2191    3            K = PARM.FCNKEY.FCN_BYTE2(I)*2;

   2191   1 000072  A847 000A                            LDR,R2   I,AUTO
          1 000074  2002                                 SOL,R2   2
          1 000075  2E0E                                 ADV,R2   14
          1 000076  C2A6                                 LLH,R4   ,B6,R2
          1 000077  4001                                 SOL,R4   1
          1 000078  CF47 000C                            STR,R4   K,AUTO

      128     2192    3            IF K>%KV_SPCCHR_MODIFIER_BASE*2

   2192   1 00007A  C970 0100                            CMR,R4   256,IMO
          1 00007C  0A81 0004                            BALE     s:2195,PREL

      129     2193        /* Make them sort according to modifier */
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:18   
      130     2194    3            THEN K = K+%KV_FCNKEY_MODIFIER_BASE*2+1;

   2194   1 00007E  4E15                                 ADV,R4   21
          1 00007F  CF47 000C                            STR,R4   K,AUTO

      131     2195    3            PARM.FCNKEY.FCN_BYTE2(I) = K;

   2195   1 000081  C7A6                                 STH,R4   ,B6,R2

      132     2196    3            AUTOTBL.ESCCNTOK(PARM.FCNKEY.FCN_BYTE0(I)) = '1'B;

   2196   1 000082  9847 000A                            LDR,R1   I,AUTO
          1 000084  1002                                 SOL,R1   2
          1 000085  1E0C                                 ADV,R1   12
          1 000086  B296                                 LLH,R3   ,B6,R1
          1 000087  DBC7 0039                            LAB,B5   AUTOTBL+27,AUTO
          1 000089  3E08                                 ADV,R3   8
          1 00008A  8935                                 LBT      ,B5,R3

      133     2197    4            DO J=I+1 TO PARM.NUM_DEFS-1;   /* Toss it if its successor exists.   */

   2197   1 00008B  B847 000A                            LDR,R3   I,AUTO
          1 00008D  3E01                                 ADV,R3   1
          1 00008E  BF47 000B                            STR,R3   J,AUTO
          1 000090  0F81 0035                            B        s:2206+2,PREL

      134     2198    4               IF PARM.FNCKEW.WRD0(J)=PARM.FNCKEW.WRD0(I)

   2198   1 000092  ECC7 0006                            LDB,B6   PRM$,AUTO
          1 000094  B847 000B                            LDR,R3   J,AUTO
          1 000096  3001                                 SOL,R3   1
          1 000097  3E06                                 ADV,R3   6
          1 000098  A847 000A                            LDR,R2   I,AUTO
          1 00009A  2001                                 SOL,R2   1
          1 00009B  2E06                                 ADV,R2   6
          1 00009C  E836                                 LDR,R6   ,B6,R3
          1 00009D  E926                                 CMR,R6   ,B6,R2
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:19   
          1 00009E  0981 0025                            BNE      s:2206,PREL
          1 0000A0  9847 000B                            LDR,R1   J,AUTO
          1 0000A2  1001                                 SOL,R1   1
          1 0000A3  1E07                                 ADV,R1   7
          1 0000A4  D847 000E                            LDR,R5   MIN,AUTO
          1 0000A6  D916                                 CMR,R5   ,B6,R1
          1 0000A7  0981 001C                            BNE      s:2206,PREL

      135     2199    5                 AND MIN=PARM.FNCKEW.WRD1(J) THEN DO;

      136     2200    5                  MAX = MAX-1;

   2200   1 0000A9  88C7 000D                            DEC      MAX,AUTO

      137     2201    5                  PARM.FCNKEY(I) = PARM.FCNKEY(MAX);

   2201   1 0000AB  B847 000D                            LDR,R3   MAX,AUTO
          1 0000AD  3E03                                 ADV,R3   3
          1 0000AE  8CB6                                 LDI      ,B6,R3
          1 0000AF  B847 000A                            LDR,R3   I,AUTO
          1 0000B1  3E03                                 ADV,R3   3
          1 0000B2  8D36                                 SDI      ,B6,R3

      138     2202    5                  PARM.TXT_UBIN(MAX) = PARM.TXT_UBIN(J)-257;

   2202   1 0000B3  B847 000B                            LDR,R3   J,AUTO
          1 0000B5  3E03                                 ADV,R3   3
          1 0000B6  8CB6                                 LDI      ,B6,R3
          1 0000B7  8470 FFFF FEFF                       AID      -257,IMO
          1 0000BA  B847 000D                            LDR,R3   MAX,AUTO
          1 0000BC  3E03                                 ADV,R3   3
          1 0000BD  8D36                                 SDI      ,B6,R3

      139     2203    5                  I = I-1;

   2203   1 0000BE  88C7 000A                            DEC      I,AUTO

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:20   
      140     2204    5                  J = PARM.NUM_DEFS;

   2204   1 0000C0  C846 0005                            LDR,R4   5,B6
          1 0000C2  CF47 000B                            STR,R4   J,AUTO

      141     2205    5               END;

      142     2206    4            END;

   2206   1 0000C4  8AC7 000B                            INC      J,AUTO
          1 0000C6  E847 000B                            LDR,R6   J,AUTO
          1 0000C8  E946 0005                            CMR,R6   5,B6
          1 0000CA  0848                                 BAL      s:2198,SPREL

      143     2207    3         END;

      144     2208    2      END;

   2208   1 0000CB  8AC7 000A                            INC      I,AUTO
          1 0000CD  E847 000A                            LDR,R6   I,AUTO
          1 0000CF  E947 000D                            CMR,R6   MAX,AUTO
          1 0000D1  0801 FF8F                            BAL      s:2189,PREL

      145     2209
      146     2210        /* OX is the output index (for IDs(BYT1) and DEFs (BYT2-3)).
      147     2211           I1 is the low input index (into PARM.FCNKEY)
      148     2212           I2 is the middle input index (into PARM.FCNKEY) where DEFs are being stored.
      149     2213           I3 is the high input index (into PARM.FCNKEY) where IDs are being stored.
      150     2214           M1 is where I2 started (and thus where I1 ends)
      151     2215           M2 is where I3 started (and thus where I2 ends)
      152     2216              These allow us to build the table ontop of the input data.  The first
      153     2217              def doubleword used comes from I2, which is where the first output
      154     2218              DEF (a word) gets stored.  Plucking from I2 and I3 alternates until I2
      155     2219              runs out (always after I3 does), then use the rest at I1.
      156     2220        */
      157     2221
      158     2222    2      IF MAX<80 THEN DO;
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:21   

   2222   1 0000D3  D847 000D                            LDR,R5   MAX,AUTO
          1 0000D5  5D50                                 CMV,R5   80
          1 0000D6  0881 0010                            BAGE     s:2235,PREL

      159     2223
      160     2224        /* Small tables get built in AUTO, in a straight-forward manner. */
      161     2225
      162     2226    2         TBL$ = ADDR(AUTO_SPACE(MAX));

   2226   1 0000D8  B855                                 LDR,R3   R5
          1 0000D9  3E4C                                 ADV,R3   76
          1 0000DA  EBB7                                 LAB,B6   ,AUTO,R3
          1 0000DB  EFC7 0008                            STB,B6   TBL$,AUTO

      163     2227    2         I1 = 0;

   2227   1 0000DD  8747 000E                            CL       MIN,AUTO

      164     2228    2         M1 = 0;

   2228   1 0000DF  8747 000F                            CL       M1,AUTO

      165     2229    2         M2 = 0;

   2229   1 0000E1  8747 0011                            CL       M2,AUTO

      166     2230    2         I2 = MAX;

   2230   1 0000E3  DF47 0010                            STR,R5   I2,AUTO

      167     2231    2      END; ELSE DO;

   2231   1 0000E5  0F81 002E                            B        s:2246,PREL

      168     2232
      169     2233        /* Big ones get built over PARM, with the crazy selection method. */
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:22   
      170     2234
      171     2235    2         TBL$ = PINCRW(ADDR(PARM),SIZEW(KV$INPFNCTBL)+MAX);

   2235   1 0000E7  E855                                 LDR,R6   R5
          1 0000E8  70F0                                 DAR,R7   16
          1 0000E9  8447 0006                            AID      PRM$,AUTO
          1 0000EB  8470 0000 002E                       AID      46,IMO
          1 0000EE  8D47 0008                            SDI      TBL$,AUTO

      172     2236    2         I1 = -3;

   2236   1 0000F0  4CFD                                 LDV,R4   -3
          1 0000F1  CF47 000E                            STR,R4   MIN,AUTO

      173     2237    2         M1 = (SIZEW(KV$INPFNCTBL)-SIZEW(PARM)+2)/2;

   2237   1 0000F3  3C14                                 LDV,R3   20
          1 0000F4  BF47 000F                            STR,R3   M1,AUTO

      174     2238    2         I2 = M1+1;

   2238   1 0000F6  3E01                                 ADV,R3   1
          1 0000F7  BF47 0010                            STR,R3   I2,AUTO

      175     2239    2         M2 = (SIZEW(KV$INPFNCTBL)-SIZEW(PARM)+2+MAX)/2;

   2239   1 0000F9  5E28                                 ADV,R5   40
          1 0000FA  D370 0002                            DIV,R5   2,IMO
          1 0000FC  DF47 0011                            STR,R5   M2,AUTO

      176     2240    2         I3 = M2+1;

   2240   1 0000FE  5E01                                 ADV,R5   1
          1 0000FF  DF47 0012                            STR,R5   I3,AUTO

      177     2241    2         PARM.FCNKEY(-3) = PARM.FCNKEY(M1);

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:23   
   2241   1 000101  ECC7 0006                            LDB,B6   PRM$,AUTO
          1 000103  A847 000F                            LDR,R2   M1,AUTO
          1 000105  2E03                                 ADV,R2   3
          1 000106  8CA6                                 LDI      ,B6,R2
          1 000107  8D06                                 SDI      ,B6

      178     2242    2         PARM.FCNKEY(-2) = PARM.FCNKEY(M2);

   2242   1 000108  9847 0011                            LDR,R1   M2,AUTO
          1 00010A  1E03                                 ADV,R1   3
          1 00010B  8C96                                 LDI      ,B6,R1
          1 00010C  8D46 0002                            SDI      2,B6

      179     2243    2         PARM.FCNKEY(-1) = PARM.FCNKEY(M1+1);

   2243   1 00010E  B847 000F                            LDR,R3   M1,AUTO
          1 000110  3E04                                 ADV,R3   4
          1 000111  8CB6                                 LDI      ,B6,R3
          1 000112  8D46 0004                            SDI      4,B6

      180     2244    2      END;

      181     2245
      182     2246    2      DO OX = 0 TO MAX-1;

   2246   1 000114  8747 000C                            CL       K,AUTO
          1 000116  0F81 008F                            B        s:2285+2,PREL

      183     2247    2         J = I1;

   2247   1 000118  E847 000E                            LDR,R6   MIN,AUTO
          1 00011A  EF47 000B                            STR,R6   J,AUTO

      184     2248    2         I = I1;

   2248   1 00011C  EF47 000A                            STR,R6   I,AUTO

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:24   
      185     2249    3         DO UNTIL I=MAX;

      186     2250
      187     2251        /* Find the smallest one */
      188     2252
      189     2253    3            IF PARM.TXT_UBIN(I)<PARM.TXT_UBIN(J) THEN J = I;

   2253   1 00011E  ECC7 0006                            LDB,B6   PRM$,AUTO
          1 000120  B847 000B                            LDR,R3   J,AUTO
          1 000122  3E03                                 ADV,R3   3
          1 000123  A847 000A                            LDR,R2   I,AUTO
          1 000125  2E03                                 ADV,R2   3
          1 000126  8CA6                                 LDI      ,B6,R2
          1 000127  84B6                                 SID      ,B6,R3
          1 000128  0601 0005                            BCT      s:2254,PREL

   2253   1 00012A  E847 000A                            LDR,R6   I,AUTO
          1 00012C  EF47 000B                            STR,R6   J,AUTO

      190     2254    3            I = I+1;

   2254   1 00012E  8AC7 000A                            INC      I,AUTO

      191     2255    3            IF I=M1 THEN I=I2;

   2255   1 000130  E847 000A                            LDR,R6   I,AUTO
          1 000132  E947 000F                            CMR,R6   M1,AUTO
          1 000134  0981 0005                            BNE      s:2256,PREL

   2255   1 000136  E847 0010                            LDR,R6   I2,AUTO
          1 000138  EF47 000A                            STR,R6   I,AUTO

      192     2256    3            IF I=M2 THEN I=I3;

   2256   1 00013A  E947 0011                            CMR,R6   M2,AUTO
          1 00013C  0981 0005                            BNE      s:2257,PREL

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:25   
   2256   1 00013E  E847 0012                            LDR,R6   I3,AUTO
          1 000140  EF47 000A                            STR,R6   I,AUTO

      193     2257    3         END;

   2257   1 000142  E947 000D                            CMR,R6   MAX,AUTO
          1 000144  09DA                                 BNE      s:2253,SPREL

      194     2258
      195     2259        /* pick where to make the hole */
      196     2260
      197     2261    3         IF I2=MAX THEN DO;

   2261   1 000145  D847 0010                            LDR,R5   I2,AUTO
          1 000147  D947 000D                            CMR,R5   MAX,AUTO
          1 000149  0981 0009                            BNE      s:2264+2,PREL

      198     2262    3            I = I1;

   2262   1 00014B  E847 000E                            LDR,R6   MIN,AUTO
          1 00014D  EF47 000A                            STR,R6   I,AUTO

      199     2263    3            I1 = I1+1;

   2263   1 00014F  8AC7 000E                            INC      MIN,AUTO

      200     2264    3         END; ELSE IF I2<M2 AND (I3=MAX OR BINBIT(OX,1)) THEN DO;

   2264   1 000151  0F81 0027                            B        s:2273,PREL

   2264   1 000153  D947 0011                            CMR,R5   M2,AUTO
          1 000155  0881 001D                            BAGE     s:2269,PREL
          1 000157  C847 0012                            LDR,R4   I3,AUTO
          1 000159  C947 000D                            CMR,R4   MAX,AUTO
          1 00015B  0901 0006                            BE       s:2265,PREL
          1 00015D  B847 000C                            LDR,R3   K,AUTO
          1 00015F  300F                                 SOL,R3   15
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:26   
          1 000160  3901 0012                            BEZ,R3   s:2269,PREL

      201     2265    3            I = I2;

   2265   1 000162  E855                                 LDR,R6   R5
          1 000163  EF47 000A                            STR,R6   I,AUTO

      202     2266    3            I2 = I2+1;

   2266   1 000165  8AC7 0010                            INC      I2,AUTO

      203     2267    3            IF I2=M2 THEN I2 = MAX;

   2267   1 000167  B847 0010                            LDR,R3   I2,AUTO
          1 000169  B947 0011                            CMR,R3   M2,AUTO
          1 00016B  0981 000D                            BNE      s:2273,PREL

   2267   1 00016D  B847 000D                            LDR,R3   MAX,AUTO
          1 00016F  BF47 0010                            STR,R3   I2,AUTO

      204     2268    3         END; ELSE DO;

   2268   1 000171  0F81 0007                            B        s:2273,PREL

      205     2269    3            I = I3;

   2269   1 000173  E847 0012                            LDR,R6   I3,AUTO
          1 000175  EF47 000A                            STR,R6   I,AUTO

      206     2270    3            I3 = I3+1;

   2270   1 000177  8AC7 0012                            INC      I3,AUTO

      207     2271    3         END;

      208     2272
      209     2273    2         IF AUTOTBL.OPRX_OFS(PARM.FCNKEY.FCN_BYTE0(J))=0
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:27   

   2273   1 000179  B847 000B                            LDR,R3   J,AUTO
          1 00017B  3002                                 SOL,R3   2
          1 00017C  3E0C                                 ADV,R3   12
          1 00017D  A2B6                                 LLH,R2   ,B6,R3
          1 00017E  2E3A                                 ADV,R2   58
          1 00017F  D827                                 LDR,R5   ,AUTO,R2
          1 000180  5981 0007                            BNEZ,R5  s:2279,PREL

      210     2274
      211     2275        /* First of a new type entry.  Set its starting index. */
      212     2276
      213     2277    2         THEN AUTOTBL.OPRX_OFS(PARM.FCNKEY.FCN_BYTE0(J)) = OX+SIZEW(KV$INPFNCTBL);

   2277   1 000182  A2B6                                 LLH,R2   ,B6,R3
          1 000183  2E3A                                 ADV,R2   58
          1 000184  D847 000C                            LDR,R5   K,AUTO
          1 000186  5E2E                                 ADV,R5   46
          1 000187  DF27                                 STR,R5   ,AUTO,R2

      214     2278
      215     2279    2         WORDS(OX-MAX) = PARM.FNCKEW.WRD1(J);

   2279   1 000188  D847 000C                            LDR,R5   K,AUTO
          1 00018A  D247 000D                            SUB,R5   MAX,AUTO
          1 00018C  DCC7 0008                            LDB,B5   TBL$,AUTO
          1 00018E  A855                                 LDR,R2   R5
          1 00018F  9847 000B                            LDR,R1   J,AUTO
          1 000191  1001                                 SOL,R1   1
          1 000192  1E07                                 ADV,R1   7
          1 000193  D816                                 LDR,R5   ,B6,R1
          1 000194  DF25                                 STR,R5   ,B5,R2

      216     2280    2         BYTES(OX) = PARM.FCNKEY.FCN_BYTE1(J);

   2280   1 000195  A847 000B                            LDR,R2   J,AUTO
          1 000197  2002                                 SOL,R2   2
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:28   
          1 000198  2E0D                                 ADV,R2   13
          1 000199  D2A6                                 LLH,R5   ,B6,R2
          1 00019A  B847 000C                            LDR,R3   K,AUTO
          1 00019C  D7B5                                 STH,R5   ,B5,R3

      217     2281
      218     2282        /* Switch the chosen entry with the hole to be used. */
      219     2283
      220     2284    2         PARM.FCNKEY(J) = PARM.FCNKEY(I);

   2284   1 00019D  B856                                 LDR,R3   R6
          1 00019E  3E03                                 ADV,R3   3
          1 00019F  8CB6                                 LDI      ,B6,R3
          1 0001A0  B847 000B                            LDR,R3   J,AUTO
          1 0001A2  3E03                                 ADV,R3   3
          1 0001A3  8D36                                 SDI      ,B6,R3

      221     2285    2      END;

   2285   1 0001A4  8AC7 000C                            INC      K,AUTO
          1 0001A6  E847 000C                            LDR,R6   K,AUTO
          1 0001A8  E947 000D                            CMR,R6   MAX,AUTO
          1 0001AA  0801 FF6D                            BAL      s:2247,PREL

      222     2286
      223     2287        /* Now finish up the table. */
      224     2288
      225     2289    1      AUTOTBL.OPRX_OFS(3) = MAX+SIZEW(KV$INPFNCTBL);

   2289   1 0001AC  D847 000D                            LDR,R5   MAX,AUTO
          1 0001AE  5E2E                                 ADV,R5   46
          1 0001AF  DF47 003D                            STR,R5   AUTOTBL+31,AUTO

      226     2290    1      IF AUTOTBL.OPRX_OFS(2)=0 THEN AUTOTBL.OPRX_OFS(2) = AUTOTBL.OPRX_OFS(3);

   2290   1 0001B1  C847 003C                            LDR,R4   AUTOTBL+30,AUTO
          1 0001B3  4981 0004                            BNEZ,R4  s:2291,PREL
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:29   

   2290   1 0001B5  C855                                 LDR,R4   R5
          1 0001B6  CF47 003C                            STR,R4   AUTOTBL+30,AUTO

      227     2291    1      IF AUTOTBL.OPRX_OFS(1)=0 THEN AUTOTBL.OPRX_OFS(1) = AUTOTBL.OPRX_OFS(2);

   2291   1 0001B8  B847 003B                            LDR,R3   AUTOTBL+29,AUTO
          1 0001BA  3981 0004                            BNEZ,R3  s:2292,PREL

   2291   1 0001BC  B854                                 LDR,R3   R4
          1 0001BD  BF47 003B                            STR,R3   AUTOTBL+29,AUTO

      228     2292    1      AUTOTBL.ID_CHROFS(0) = AUTOTBL.OPRX_OFS(3)*2;

   2292   1 0001BF  5001                                 SOL,R5   1
          1 0001C0  DF47 0040                            STR,R5   AUTOTBL+34,AUTO

      229     2293    2      DO I = 0 TO %KV_INPFNCTYP_SPCCHR;

   2293   1 0001C2  8747 000A                            CL       I,AUTO

      230     2294    2         AUTOTBL.ID_CHRCNT(I) = AUTOTBL.OPRX_OFS(I+1)-AUTOTBL.OPRX_OFS(I);

   2294   1 0001C4  B847 000A                            LDR,R3   I,AUTO
          1 0001C6  3E3B                                 ADV,R3   59
          1 0001C7  A847 000A                            LDR,R2   I,AUTO
          1 0001C9  2E3A                                 ADV,R2   58
          1 0001CA  E837                                 LDR,R6   ,AUTO,R3
          1 0001CB  E227                                 SUB,R6   ,AUTO,R2
          1 0001CC  9847 000A                            LDR,R1   I,AUTO
          1 0001CE  1E4C                                 ADV,R1   76
          1 0001CF  E797                                 STH,R6   ,AUTO,R1

      231     2295    2         AUTOTBL.ID_CHROFS(I+1) = AUTOTBL.ID_CHROFS(I)+AUTOTBL.ID_CHRCNT(I);

   2295   1 0001D0  B847 000A                            LDR,R3   I,AUTO
          1 0001D2  3E40                                 ADV,R3   64
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:30   
          1 0001D3  E297                                 LLH,R6   ,AUTO,R1
          1 0001D4  EA37                                 ADD,R6   ,AUTO,R3
          1 0001D5  B847 000A                            LDR,R3   I,AUTO
          1 0001D7  3E41                                 ADV,R3   65
          1 0001D8  EF37                                 STR,R6   ,AUTO,R3

      232     2296    2         IF I<%KV_INPFNCTYP_SPCCHR

   2296   1 0001D9  D847 000A                            LDR,R5   I,AUTO
          1 0001DB  5D02                                 CMV,R5   2
          1 0001DC  0881 0007                            BAGE     s:2298,PREL

      233     2297    2         THEN AUTOTBL.SPCCHR(AUTOTBL.ESCINT1_CHR(I)) = '1'B;

   2297   1 0001DE  B855                                 LDR,R3   R5
          1 0001DF  3E46                                 ADV,R3   70
          1 0001E0  A837                                 LDR,R2   ,AUTO,R3
          1 0001E1  EBC7 0029                            LAB,B6   AUTOTBL+11,AUTO
          1 0001E3  8926                                 LBT      ,B6,R2

      234     2298    2      END;

   2298   1 0001E4  8AC7 000A                            INC      I,AUTO
          1 0001E6  E847 000A                            LDR,R6   I,AUTO
          1 0001E8  6D02                                 CMV,R6   2
          1 0001E9  0ADB                                 BALE     s:2294,SPREL

      235     2299    1      IF AUTOTBL.ID_CHRCNT(%KV_INPFNCTYP_SPCCHR)~=0

   2299   1 0001EA  D2C7 0027                            LLH,R5   AUTOTBL+9,AUTO
          1 0001EC  5901 0019                            BEZ,R5   s:2304,PREL

      236     2300    1      THEN DO J=AUTOTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR)
      237     2301    2        TO AUTOTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR+1)-1;

   2301   1 0001EE  C847 0042                            LDR,R4   AUTOTBL+36,AUTO
          1 0001F0  CF47 000B                            STR,R4   J,AUTO
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:31   
          1 0001F2  0F81 000E                            B        s:2303+2,PREL

      238     2302    2         AUTOTBL.SPCCHR(BYTES(J-AUTOTBL.ID_CHROFS(0))) = '1'B;

   2302   1 0001F4  E847 000B                            LDR,R6   J,AUTO
          1 0001F6  E247 0040                            SUB,R6   AUTOTBL+34,AUTO
          1 0001F8  ECC7 0008                            LDB,B6   TBL$,AUTO
          1 0001FA  B856                                 LDR,R3   R6
          1 0001FB  A2B6                                 LLH,R2   ,B6,R3
          1 0001FC  DBC7 0029                            LAB,B5   AUTOTBL+11,AUTO
          1 0001FE  8925                                 LBT      ,B5,R2

      239     2303    2      END;

   2303   1 0001FF  8AC7 000B                            INC      J,AUTO
          1 000201  E847 000B                            LDR,R6   J,AUTO
          1 000203  E947 0043                            CMR,R6   AUTOTBL+37,AUTO
          1 000205  086F                                 BAL      s:2302,SPREL

      240     2304    1      AUTOTBL.BYTSIZ = AUTOTBL.ID_CHROFS(%KV_INPFNCTYP_SPCCHR+1);

   2304   1 000206  E847 0043                            LDR,R6   AUTOTBL+37,AUTO
          1 000208  EF47 0020                            STR,R6   AUTOTBL+2,AUTO

      241     2305
      242     2306    1      IF MAX<80 THEN KV@VDH_GETBFR.DAT_.ADR$ = ADDR(AUTOTBL);

   2306   1 00020A  D847 000D                            LDR,R5   MAX,AUTO
          1 00020C  5D50                                 CMV,R5   80
          1 00020D  0881 0007                            BAGE     s:2308,PREL

   2306   1 00020F  EBC7 001E                            LAB,B6   AUTOTBL,AUTO
          1 000211  EFC7 001A                            STB,B6   KV@VDH_GETBFR+7,AUTO
          1 000213  0F81 000B                            B        s:2311,PREL

      243     2307    2      ELSE DO;

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:32   
      244     2308    2         KV@VDH_GETBFR.DAT_.ADR$ = ADDR(PARM);

   2308   1 000215  ECC7 0006                            LDB,B6   PRM$,AUTO
          1 000217  EFC7 001A                            STB,B6   KV@VDH_GETBFR+7,AUTO

      245     2309    2         ADDR(PARM)->KV$INPFNCTBL = AUTOTBL;

   2309   1 000219  AB87                                 LAB,B2   ,AUTO
          1 00021A  2C3C                                 LDV,R2   60
          1 00021B  6C5C                                 LDV,R6   92
          1 00021C  BB86                                 LAB,B3   ,B6
          1 00021D  3C00                                 LDV,R3   0
          1 00021E  0008                                 MMM

      246     2310    2      END;

      247     2311    1      KV@VDH_GETBFR.DAT_.BYTX = SIZEC(KV$SHRBFR);

   2311   1 00021F  6C08                                 LDV,R6   8
          1 000220  EF47 001C                            STR,R6   KV@VDH_GETBFR+9,AUTO

      248     2312    1      KV@VDH_GETBFR.DAT_.BYTSIZ = AUTOTBL.BYTSIZ-SIZEC(KV$SHRBFR);

   2312   1 000222  D847 0020                            LDR,R5   AUTOTBL+2,AUTO
          1 000224  5EF8                                 ADV,R5   -8
          1 000225  DF47 001D                            STR,R5   KV@VDH_GETBFR+10,AUTO

      249     2313    2      CALL KVS$GETBFR (KV@VDH_GETBFR) WHENALTRETURN DO;

   2313   1 000227  EBC7 0013                            LAB,B6   KV@VDH_GETBFR,AUTO
          1 000229  EFC7 00C4                            STB,B6   AUTO_SPACE+120,AUTO
          1 00022B  BBC7 00C4                            LAB,B3   AUTO_SPACE+120,AUTO
          1 00022D  CBF0 0100                            LAB,B4   256,IMO
          1 00022F  E380 0000 0000  xent                 LNJ,B6   KVS$GETBFR
          1 000232       0003                            DC       s:2316,PREL
          1 000233  0F81 0001                            B        s:2316,PREL

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:33   
      250     2314        /*N* Profiles are no-wait, so it doesn't make much sense to return an error */
      251     2315
      252     2316    2      END;

   2312   1                              CLEANUP         null
      253     2317
      254     2318    1   CLEANUP:;
      255     2319    1      TBL$ = KV@VDH_GETBFR.BFR$;

   2319   1 000235  ECC7 0014            CLEANUP         LDB,B6   KV@VDH_GETBFR+1,AUTO
          1 000237  EFC7 0008                            STB,B6   TBL$,AUTO

      256     2320    1      KV@VDH_GETBFR.BFR$ = %KV_MRD.PRFINPFNCTBL$;

   2320   1 000239  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00023C  CCC5 0008                            LDB,B4   8,B5
          1 00023E  BCC4 0006                            LDB,B3   6,B4
          1 000240  BFC7 0014                            STB,B3   KV@VDH_GETBFR+1,AUTO

      257     2321    1      IF KV@VDH_GETBFR.BFR$~=ADDR(NIL) THEN CALL KVS$RLSBFR (KV@VDH_GETBFR);

   2321   1 000242  8DC7 0014                            CMN      KV@VDH_GETBFR+1,AUTO
          1 000244  0901 000D                            BE       s:2322,PREL

   2321   1 000246  CBC7 0013                            LAB,B4   KV@VDH_GETBFR,AUTO
          1 000248  CFC7 00C4                            STB,B4   AUTO_SPACE+120,AUTO
          1 00024A  BBC7 00C4                            LAB,B3   AUTO_SPACE+120,AUTO
          1 00024C  CBF0 0100                            LAB,B4   256,IMO
          1 00024E  E380 0000 0000  xent                 LNJ,B6   KVS$RLSBFR
          1 000251       0001                            DC       s:2322,PREL

      258     2322    1      %KV_MRD.PRFINPFNCTBL$ = TBL$;

   2322   1 000252  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000255  DCC6 0008                            LDB,B5   8,B6
          1 000257  CCC7 0008                            LDB,B4   TBL$,AUTO
          1 000259  CFC5 0006                            STB,B4   6,B5
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:34   

      259     2323    1      TBL$ = KV$PTR.MVD$;

   2323   1 00025B  DCC6 0006                            LDB,B5   6,B6
          1 00025D  DFC7 0008                            STB,B5   TBL$,AUTO

      260     2324    1      KV$PTR.MVD$ = %KV_MRD.MVD$;

   2324   1 00025F  CCC6 0008                            LDB,B4   8,B6
          1 000261  BCC4 000D                            LDB,B3   13,B4
          1 000263  BFC6 0006                            STB,B3   6,B6

      261     2325    2      DO WHILE KV$PTR.MVD$~=ADDR(NIL);

   2325   1 000265  0F81 0010                            B        s:2328,PREL

      262     2326    2         CALL KVI$NEWINPFNCTBL;

   2326   1 000267  CBF0 0000                            LAB,B4   0,IMO
          1 000269  E380 0000 0000  xent                 LNJ,B6   KVI$NEWINPFNCTBL
          1 00026C       0001                            DC       s:2327,PREL

      263     2327    2         KV$PTR.MVD$ = %KV_MVD.LNK$;

   2327   1 00026D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000270  DCC6 0006                            LDB,B5   6,B6
          1 000272  CCC5 0002                            LDB,B4   2,B5
          1 000274  CFC6 0006                            STB,B4   6,B6

      264     2328    2      END;

   2328   1 000276  8DC6 0006                            CMN      6,B6
          1 000278  09EF                                 BNE      s:2326,SPREL

      265     2329    1      KV$PTR.MVD$ = TBL$;

   2329   1 000279  DCC7 0008                            LDB,B5   TBL$,AUTO
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:35   
          1 00027B  DFC6 0006                            STB,B5   6,B6

      266     2330    1      RETURN;

   2330   1 00027D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      267     2331
      268     2332    1   END KVP$FNCKEY;

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:36   
--  Include file information  --

   KV_ERRORS_C.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   AS_FUNKEY_DEFS_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is never referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVP$FNCKEY.
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:37   

 **** Variables and constants ****

  ****  Section 000 RoData KVP$FNCKEY

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(736)   r     1 KV_INPFNCTBL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KV$VDH_SETPRM            1E-0-0/w STRC(736)   r     1 AUTOTBL
    4C-0-0/w SBIN(16)    r     1 AUTO_SPACE(0:119)
     A-0-0/w SBIN(16)    r     1 I                          E-0-0/w SBIN(16)    r     1 I1
    10-0-0/w SBIN(16)    r     1 I2                        12-0-0/w SBIN(16)    r     1 I3
     B-0-0/w SBIN(16)    r     1 J                          C-0-0/w SBIN(16)    r     1 K
    *0-0-0/w STRC(128)   r     1 KV$VDH_SETPRM             13-0-0/w STRC(176)   r     1 KV@VDH_GETBFR
     F-0-0/w SBIN(16)    r     1 M1                        11-0-0/w SBIN(16)    r     1 M2
     D-0-0/w SBIN(16)    r     1 MAX                        E-0-0/w SBIN(16)    r     1 MIN
     E-0-0/w UBIN(16)    r     1 MINU                       C-0-0/w SBIN(16)    r     1 OX
     6-0-0/w PTR         r     1 PRM$                       8-0-0/w PTR         r     1 TBL$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(176)   r     1 KV_VDH_GETBFR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:38   
     0-0-0/c UBIN(8)     r     1 BYTES(0:0)                 0-0-0/w STRC(736)   r     1 KV$INPFNCTBL
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(64)    r     1 KV$SHRBFR
     0-0-0/c STRC(128)   r     1 PARM                       0-0-0/w SBIN(16)    r     1 WORDS(0:0)


   Procedure KVP$FNCKEY requires 640 words for executable code.
   Procedure KVP$FNCKEY requires 198 words of local(AUTO) storage.

    No errors detected in file KVP$FNCKEY.:E05TSI    .
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:39   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:40   
          MINI XREF LISTING

AUTOTBL
      1932**DCL      2176<<ASSIGN   2306--ASSIGN   2309>>ASSIGN
AUTOTBL.BYTSIZ
      1941**DCL      2304<<ASSIGN   2312>>ASSIGN
AUTOTBL.ESCCNTOK
      1949**DCL      2196<<ASSIGN
AUTOTBL.ESCINT1_CHR
      1950**DCL      2177<<ASSIGN   2179<<ASSIGN   2297>>ASSIGN
AUTOTBL.ESCINT2_CHR
      1950**DCL      2178<<ASSIGN   2180<<ASSIGN
AUTOTBL.ID_CHRCNT
      1949**DCL      2294<<ASSIGN   2295>>ASSIGN   2299>>IF
AUTOTBL.ID_CHROFS
      1950**DCL      2292<<ASSIGN   2295<<ASSIGN   2295>>ASSIGN   2301>>DOINDEX  2301>>DOINDEX  2302>>ASSIGN
      2304>>ASSIGN
AUTOTBL.OPRX_OFS
      1950**DCL      2181<<ASSIGN   2182<<ASSIGN   2273>>IF       2277<<ASSIGN   2289<<ASSIGN   2290>>IF
      2290<<ASSIGN   2290>>ASSIGN   2291>>IF       2291<<ASSIGN   2291>>ASSIGN   2292>>ASSIGN   2294>>ASSIGN
      2294>>ASSIGN
AUTOTBL.SPCCHR
      1949**DCL      2297<<ASSIGN   2302<<ASSIGN
AUTO_SPACE
      1968**DCL      2226--ASSIGN
BYTES
      2148**DCL      2280<<ASSIGN   2302>>ASSIGN
CLEANUP
      2312**LABEL    2171--GOTO
I
      1705**DCL      2188<<DOINDEX  2189>>ASSIGN   2191>>ASSIGN   2195>>ASSIGN   2196>>ASSIGN   2197>>DOINDEX
      2198>>IF       2201>>ASSIGN   2203<<ASSIGN   2203>>ASSIGN   2248<<ASSIGN   2249>>DOUNTIL  2253>>IF
      2253>>ASSIGN   2254<<ASSIGN   2254>>ASSIGN   2255>>IF       2255<<ASSIGN   2256>>IF       2256<<ASSIGN
      2262<<ASSIGN   2265<<ASSIGN   2269<<ASSIGN   2284>>ASSIGN   2293<<DOINDEX  2294>>ASSIGN   2294>>ASSIGN
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:41   
      2294>>ASSIGN   2295>>ASSIGN   2295>>ASSIGN   2295>>ASSIGN   2296>>IF       2297>>ASSIGN
I1
      1712**DCL      2227<<ASSIGN   2236<<ASSIGN   2247>>ASSIGN   2248>>ASSIGN   2262>>ASSIGN   2263<<ASSIGN
      2263>>ASSIGN
I2
      1714**DCL      2230<<ASSIGN   2238<<ASSIGN   2255>>ASSIGN   2261>>IF       2264>>IF       2265>>ASSIGN
      2266<<ASSIGN   2266>>ASSIGN   2267>>IF       2267<<ASSIGN
I3
      1716**DCL      2240<<ASSIGN   2256>>ASSIGN   2264>>IF       2269>>ASSIGN   2270<<ASSIGN   2270>>ASSIGN
J
      1706**DCL      2197<<DOINDEX  2198>>IF       2198>>IF       2202>>ASSIGN   2204<<ASSIGN   2247<<ASSIGN
      2253>>IF       2253<<ASSIGN   2273>>IF       2277>>ASSIGN   2279>>ASSIGN   2280>>ASSIGN   2284>>ASSIGN
      2301<<DOINDEX  2302>>ASSIGN
K
      1707**DCL      1708--REDEF    2191<<ASSIGN   2192>>IF       2194<<ASSIGN   2194>>ASSIGN   2195>>ASSIGN
KV$INPFNCTBL
      1520**DCL      2235--ASSIGN   2237--ASSIGN   2239--ASSIGN   2277--ASSIGN   2289--ASSIGN   2309<<ASSIGN
KV$MRD.MVD$
      1406**DCL      2324>>ASSIGN
KV$MRD.PRFINPFNCTBL$
      1403**DCL      2320>>ASSIGN   2322<<ASSIGN
KV$MVD.LNK$
      1450**DCL      2327>>ASSIGN
KV$PTR.INPCNDPND
      1583**DCL      1592--REDEF    1596--REDEF
KV$PTR.LINLST$
      1579**DCL      1580--REDEF
KV$PTR.MRD$
      1578**DCL      2320>>ASSIGN   2322>>ASSIGN   2324>>ASSIGN
KV$PTR.MVD$
      1578**DCL      2323>>ASSIGN   2324<<ASSIGN   2325>>DOWHILE  2327<<ASSIGN   2327>>ASSIGN   2329<<ASSIGN
KV$PTR$
      1571**DCL      1577--IMP-PTR  2320>>ASSIGN   2322>>ASSIGN   2323>>ASSIGN   2324>>ASSIGN   2324>>ASSIGN
      2325>>DOWHILE  2327>>ASSIGN   2327>>ASSIGN   2329>>ASSIGN
KV$SHRBFR
      1616**DCL      2311--ASSIGN   2312--ASSIGN
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:42   
KV$VDH_SETPRM
      1259**DCL        29--PROC
KV$VDH_SETPRM.VAL_.ADR$
      1289**DCL      2163>>ASSIGN
KV$VDH_SETPRM.VAL_.BYTSIZ
      1289**DCL      2164>>IF       2165>>ASSIGN
KV$VDH_SETPRM.VAL_.BYTX
      1289**DCL      2163>>ASSIGN
KV@VDH_GETBFR
      1745**DCL      2161<<ASSIGN   2313<>CALL     2321<>CALL
KV@VDH_GETBFR.BFR$
      1751**DCL      2170<<ASSIGN   2319>>ASSIGN   2320<<ASSIGN   2321>>IF
KV@VDH_GETBFR.DAT_.ADR$
      1779**DCL      2306<<ASSIGN   2308<<ASSIGN
KV@VDH_GETBFR.DAT_.BYTSIZ
      1779**DCL      2312<<ASSIGN
KV@VDH_GETBFR.DAT_.BYTX
      1779**DCL      2311<<ASSIGN
KV@VDH_GETBFR.STRTYP
      1751**DCL      2162<<ASSIGN
KVI$NEWINPFNCTBL
      2156**DCL-ENT  2326--CALL
KVS$GETBFR
      2154**DCL-ENT  2313--CALL
KVS$RLSBFR
      2155**DCL-ENT  2321--CALL
KV_INPFNCTBL.FOR_INIT
      2110**DCL      2176>>ASSIGN
KV_VDH_GETBFR
      1810**DCL      2161>>ASSIGN
M1
      1713**DCL      2228<<ASSIGN   2237<<ASSIGN   2238>>ASSIGN   2241>>ASSIGN   2243>>ASSIGN   2255>>IF
M2
      1715**DCL      2229<<ASSIGN   2239<<ASSIGN   2240>>ASSIGN   2242>>ASSIGN   2256>>IF       2264>>IF
      2267>>IF
MAX
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:43   
      1709**DCL      2187<<ASSIGN   2188>>DOINDEX  2200<<ASSIGN   2200>>ASSIGN   2201>>ASSIGN   2202>>ASSIGN
      2222>>IF       2226>>ASSIGN   2230>>ASSIGN   2235>>ASSIGN   2239>>ASSIGN   2246>>DOINDEX  2249>>DOUNTIL
      2261>>IF       2264>>IF       2267>>ASSIGN   2279>>ASSIGN   2289>>ASSIGN   2306>>IF
MIN
      1710**DCL      1711--REDEF    1712--REDEF    2189<<ASSIGN   2198>>IF
MINU
      1711**DCL      2190>>IF
OX
      1708**DCL      2246<<DOINDEX  2264>>IF       2277>>ASSIGN   2279>>ASSIGN   2280>>ASSIGN
PARM
      1646**DCL      2164--IF       2165--ASSIGN   2235--ASSIGN   2237--ASSIGN   2239--ASSIGN   2308--ASSIGN
      2309--ASSIGN
PARM.FCNKEY
      1690**DCL      1695--REDEF    1698--REDEF    1699--REDEF    1700--REDEF    2201<<ASSIGN   2201>>ASSIGN
      2241<<ASSIGN   2241>>ASSIGN   2242<<ASSIGN   2242>>ASSIGN   2243<<ASSIGN   2243>>ASSIGN   2284<<ASSIGN
      2284>>ASSIGN
PARM.FCNKEY.FCN_BYTE0
      1691**DCL      2196>>ASSIGN   2273>>IF       2277>>ASSIGN
PARM.FCNKEY.FCN_BYTE1
      1692**DCL      2280>>ASSIGN
PARM.FCNKEY.FCN_BYTE2
      1693**DCL      2191>>ASSIGN   2195<<ASSIGN
PARM.FNCKEW.WRD0
      1696**DCL      2198>>IF       2198>>IF
PARM.FNCKEW.WRD1
      1697**DCL      2189>>ASSIGN   2198>>IF       2279>>ASSIGN
PARM.INTRO1
      1658**DCL      1661--REDEF
PARM.INTRO1.CHR1
      1659**DCL      2177>>ASSIGN
PARM.INTRO1.CHR2
      1660**DCL      2178>>ASSIGN
PARM.INTRO2
      1662**DCL      1665--REDEF
PARM.INTRO2.CHR1
      1663**DCL      2179>>ASSIGN
PL6.E3A0      #001=KVP$FNCKEY File=KVP$FNCKEY.:E05TSI                            WED 07/30/97 02:12 Page:44   
PARM.INTRO2.CHR2
      1664**DCL      2180>>ASSIGN
PARM.NUM_DEFS
      1689**DCL      2164>>IF       2165<<ASSIGN   2166>>IF       2187>>ASSIGN   2197>>DOINDEX  2204>>ASSIGN
PARM.TXT_UBIN
      1700**DCL      2202<<ASSIGN   2202>>ASSIGN   2253>>IF       2253>>IF
PRM$
      1703**DCL      1646--IMP-PTR  2163<<ASSIGN   2164>>IF       2165>>ASSIGN   2166>>IF       2177>>ASSIGN
      2178>>ASSIGN   2179>>ASSIGN   2180>>ASSIGN   2187>>ASSIGN   2189>>ASSIGN   2191>>ASSIGN   2195>>ASSIGN
      2196>>ASSIGN   2197>>DOINDEX  2198>>IF       2198>>IF       2198>>IF       2201>>ASSIGN   2201>>ASSIGN
      2202>>ASSIGN   2202>>ASSIGN   2204>>ASSIGN   2235>>ASSIGN   2241>>ASSIGN   2241>>ASSIGN   2242>>ASSIGN
      2242>>ASSIGN   2243>>ASSIGN   2243>>ASSIGN   2253>>IF       2253>>IF       2273>>IF       2277>>ASSIGN
      2279>>ASSIGN   2280>>ASSIGN   2284>>ASSIGN   2284>>ASSIGN   2308>>ASSIGN   2309>>ASSIGN
TBL$
      1704**DCL      2147--IMP-PTR  2148--IMP-PTR  2226<<ASSIGN   2235<<ASSIGN   2279>>ASSIGN   2280>>ASSIGN
      2302>>ASSIGN   2319<<ASSIGN   2322>>ASSIGN   2323<<ASSIGN   2329>>ASSIGN
WORDS
      2147**DCL      2279<<ASSIGN
