VERSION E05

PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7             NAME: NODES
        8        8             PURPOSE:
        9        9                   To contain the syntax tree that describes DELTA's command syntax
       10       10                   to X$PARSE.
       11       11             DESCRIPTION:
       12       12             REFERENCE: DELTA functional spec AF Section 17.6 #0065C-0.
       13       13                        X$PARSE specification AF Section 12.0 #0204C-0. */
       14       14
       15       15        %INCLUDE DD_SUBS_C;
       16      286        %INCLUDE DD_PSUBS_C;
       17      761
       18      762        D_ATREE(C@ROOT,D) = [.B] ( NA_STEP | ;
       19      763                                   NA_EVAL | ;
       20      764                                   NA_MODIFY | ;
       21      765                                   NA_NPOI | ;
       22      766                                   NA_SLASH )
       23      767          NA_STEP(C_STEP) = [ DECIMALS ] [.B] ( L_RBRACKET | L_RBRACE )
       24      768          NT_STEP(C_STEP) = [ DECIMALS ] [.B] ( L_RBRACKET | L_RBRACE ) CMD_TERM
       25      769        /* Warning: Don't try NT_? = NA_? CMD_TERM, as it won't work! */
       26      770          NA_EVAL(C_EVAL) = [ ( INSTRF | VREF | FMTSPEC ) ] [.B] L_EQUALS
       27      771          NT_EVAL(C_EVAL) = [ ( INSTRF | VREF | FMTSPEC ) ] [.B] L_EQUALS CMD_TERM
       28      772            FMTSPEC(FMTSPEC_CODE) = BBKSLASHB FMTSPEC1
       29      773              BBKSLASHB = [.B] L@BKSLASH [.B]
       30      774              FMTSPEC1 (D)= ( FMT2 | ;          /* U/BIN                              */
       31      775                              FMT3 | ;          /* S/BIN                              */
       32      776                              FMT4 | ;          /* C/HAR                              */
       33      777                              FMT5 | ;          /* B/IT                               */
       34      778                              FMT6 | ;          /* I/NSTR                             */
       35      779                              FMT7 | ;          /* P/TR                               */
       36      780                              FMT8 | ;          /* D/ESCR                             */
       37      781                              FMT0 | ;          /* REM/EMBER                          */
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            2    
       38      782                              FMT9 | ;          /* R/EL                               */
       39      783                              FMT21 | ;         /* EB/CDIC                            */
       40      784                              FMT10 | ;         /* E/PTR                              */
       41      785                              FMT11 | ;         /* A/R                                */
       42      786                              FMT12 | ;         /* V/ECTOR                            */
       43      787                              FMT18 | ;         /* X1-8 bits Hex                      */
       44      788                              FMT17 | ;         /* J/DE                               */
       45      789                              FMT16 | ;         /* F/LOAT                             */
       46      790                              FMT13 | ;         /* X-9 bits Hex                       */
       47      791                              FMT19 | ;         /* T/IME                              */
       48      792                              FMT20 | ;         /* Z/ERO                              */
       49      793                              FMT1 )            /* O/CTAL                             */
       50      794          NA_MODIFY(C_MODIFY) = VREF [.B] L_SLASH
       51      795          NT_MODIFY(C_MODIFY) = VREF [.B] L_SLASH CMD_TERM
       52      796          NA_NPOI(C_MACTIVE) = [ ( INSTRF | VREF | FMTSPEC ) ] [.B] ( L@LF | ;
       53      797                                                                        L@UPARROW | ;
       54      798                                                                        L@LBRACKET | ;
       55      799                                                                        L@LBRACE | ;
       56      800                                                       L@TAB )
       57      801          NA_SLASH(C_MACTIVE) = ( INDTYPE [.B] [ FMTSPEC ] [.B] L@SLASH | ;
       58      802                                    [ FMTSPEC ] [.B] L@SLASH )
       59      803          NT_SLASH(C_MACTIVE) = ( INDTYPE [.B] [ FMTSPEC ] [.B] L@SLASH | ;
       60      804                                    [ FMTSPEC ] [.B] L@SLASH ) CMD_TERM
       61      805            INDTYPE = ( L@INDIRECT_PTR | ;
       62      806                        L@INDIRECT_SHORTPTR | ;
       63      807                        L@INDIRECT_LEFT | ;
       64      808                        L@INDIRECT_RIGHT | ;
       65      809                        L@INDIRECT )
       66      810        %EJECT;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            3    
       67      811        D_MTREE(C@ROOT,D) = [.B] ( DD_INSTR [.B] MATYPE [.B] [ FMTSPEC ] [.B] .END | ;
       68      812                                   VREFX [.B] MATYPE [.B] [ FMTSPEC ] [.B] .END | ;
       69      813                                   INSTRF [.B] .END | ;
       70      814                                   VREF [.B] .END | ;
       71      815                                   FMTSPEC [.B] .END | ;
       72      816                                   COMMENTS .END )
       73      817          MATYPE = ( L@NEXT | L@LF | ;
       74      818                        L@OPEN | L@LBRACKET | L@LBRACE | ;
       75      819                        L@PREV | L@UPARROW | ;
       76      820                        L@INDIRECT_PTR | ;
       77      821                        L@INDIRECT_SHORTPTR | ;
       78      822                        L@INDIRECT_LEFT | ;
       79      823                        L@INDIRECT_RIGHT | ;
       80      824                        L@INDIRECT | L@TAB )
       81      825        %EJECT;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            4    
       82      826        D_DCMDS(C@ROOT,D) = [.B] ( * DIRECT_CMD * .END | ;
       83      827                                   STORED_CMD [ * DIRECT_CMD * ] .END | ;
       84      828                                   COMMENTS .END )
       85      829
       86      830        D_CCMDS(C@ROOT,D) = [.B] * DIRECT_CMD * .END
       87      831
       88      832        D_ACMDS(C@ROOT,D) = [.B] DIRECT_CMD
       89      833
       90      834          STORED_CMD(C@STORED_CMD) = [ DECIMALS .B ] ( N_AT | ;
       91      835                                                       N_ONN | ;
       92      836                                                       N_ONNODES | ;
       93      837                                                       N_OA | ;
       94      838                                                       N_OC | ;
       95      839                                                       N_ONCALLS | ;
       96      840                                                       N_OE | ;
       97      841                                                       N_SAVE | ;
       98      842                                                       N_WHEN )
       99      843          DIRECT_CMD(C@DIRECT_CMD) = ( ;
      100      844                                         N_MLCT |;
      101      845                                         N_MODIFYDW |;
      102      846                                         N_MODIFY | ;
      103      847                                         N_MINI | ;
      104      848                                         N_ABBREV | ;
      105      849                                         N_ACTIVE | ;
      106      850                                         N_ALIB | ;
      107      851                                         N_ALTVAR | ;
      108      852                                         N_ANLZ | ;
      109      853                                         N_BYPASS | ;
      110      854                                         N_BREAK | ;
      111      855                                         N_CACHE | ;
      112      856                                         N_COPY | ;
      113      857                                         N_DBOOT | ;
      114      858                                         N_DEBUG | ;
      115      859                                      /******************N_DELETE | ;******************/
      116      860                                         N_DEF | ;
      117      861                                         N_DO | ;
      118      862                                         N_DIC | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            5    
      119      863                                         N_DLCT | ;
      120      864                                         N_DISPLAY | ;
      121      865                                         DD_DUMP | ;
      122      866                                         DD_ECHO | ;
      123      867                                         N_END | ;
      124      868                                         N_EOM | ;
      125      869                                         N_ERRFID | ;
      126      870                                         N_EXIT | ;
      127      871                                         N_EVAL | ;
      128      872                                         N_FORMAT | ;
      129      873                                         N_FIND | ;
      130      874                                         N_GOTO | ;
      131      875                                         N_HISTORY | ;
      132      876                                         DD_IGNORE | ;
      133      877                                         N_INACTIVE | ;
      134      878                                         DD_KEEP | ;
      135      879                                         N_KILL | ;
      136      880                                         N_LIST | ;
      137      881                                         N_STOP | ;
      138      882                                         N_LET | ;
      139      883                                         N_NAME | ;
      140      884                                         N_NEXT | ;
      141      885                                         DD_OUTPUT | ;
      142      886                                         N_OPEN | ;
      143      887                                         N_PLUGH | ;
      144      888                                         N_PMD  | ;
      145      889                                         N_PROTECT | ;
      146      890                                         N_PROMPT | ;
      147      891                                         N_PREV | ;
      148      892                                         N_QUIT | ;
      149      893                                         N_RANGE | ;
      150      894                                         N_RUM  | ;
      151      895                                         N_REPORT | ;
      152      896                                         DD_READ | ;
      153      897                                         N_SELCHAN | ;
      154      898                                         N_SCHEMA | ;
      155      899                                         N_SAD | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            6    
      156      900                                         N_SILENT | ;
      157      901                                         N_SHOW | ;
      158      902                                         N_SYNTAX | ;
      159      903                                         N_STATUS | ;
      160      904                                         N_STORE | ;
      161      905                                         N_STEP | ;
      162      906                                         N_TBOOT | ;
      163      907                                         DD_TRAP | ;
      164      908                                         N_TSA | ;
      165      909                                         N_T | ;
      166      910                                         N_UNFID | ;
      167      911                                         N_UNSHARE | ;
      168      912                                         N_UNSILENT | ;
      169      913                                         N_UPDATE | ;
      170      914                                         N_USE | ;
      171      915                                         N_WAIT | ;
      172      916                                         N_XCON | ;
      173      917                                         N_XEQ | ;
      174      918                                         NT_SLASH | ;
      175      919                                         N_INDIRECT_PTR | ;
      176      920                                         N_INDIRECT_SHORTPTR | ;
      177      921                                         N_INDIRECT_LEFT | ;
      178      922                                         N_INDIRECT_RIGHT | ;
      179      923                                         N_INDIRECT | ;
      180      924                                         NT_STEP | ;
      181      925                                         NT_EVAL | ;
      182      926                                         NT_MODIFY )
      183      927        %EJECT;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            7    
      184      928        DECIMALS(DEC_CODE) = .DECIMAL-
      185      929        SYMBOLS(SYM_CODE,D,MAKEUC) = .SYMBOL-
      186      930        SYMBOL_PL6(SYM_CODE,D,MAKEUC) = .SYMBOL-
      187      931        SYMBOL_CC(SYM_CODE,D,RTEXT) = ['*'-] .SYMBOL-
      188      932        SYMBOL_COBOL(SYM_CODE,D) = .SYMBOL+'-'-
      189      933        SYMDEL_COBOL(D) = ( BCOMMAB | .B )
      190      934        SYMDEL_PL6(D) = BCOMMAB
      191      935        QTSTRINGS(QTSTRING_CODE) = .QUOTE-
      192      936        FIDS(FID_CODE) = .FID-
      193      937        FIDSUC(FID_CODE,MAKEUC) = .FID-
      194      938        FID8(FID8_CODE) = .FID8-
      195      939
      196      940            N_ABBREV(C_ABBREV) = L_ABBREV [ IFSPEC ] CMD_TERM
      197      941            N_ACTIVE(C_ACTIVE) = L_ACTIVE [.B] KILL13 [ IFSPEC ] CMD_TERM
      198      942            N_ALIB(C_ALIB) = L_ALIB [.B] ( L@RETURN | L@ALTRETURN ) [ BCOMMAB L@KEEP ] [
               942                IFSPEC ] CMD_TERM
      199      943            N_ALTVAR(C_ALTVAR) = L_ALTVAR ( .B SIMBLE [ IFSPEC ] CMD_TERM | ;
      200      944                                              [ IFSPEC ] CMD_TERM )
      201      945            N_ANLZ(C_ANLZ) = L_ANLZ ( .B ( ANLZ1 | ANLZ2 | ANLZ3 | AFID1 ) [ BCOMMAB AFID2
               945                ] ;
      202      946                                      [ IFSPEC ] CMD_TERM | ;
      203      947                                      [ IFSPEC ] CMD_TERM )
      204      948              ANLZ1(C@RUNNING) =  'RUN/NING'-
      205      949              ANLZ2(C@@) = '@'-
      206      950              ANLZ3(C@FANLZ) = L_FEP .B DECIMALS [ .B DEBUGU ]
      207      951              AFID1(C@AFID1) = .FID-
      208      952              AFID2(C@AFID2) = .FID-
      209      953            N_AT(C_AT) = L_AT [ * { L@SILENT | L@INACTIVE } * ] .B POSITION [ N_AT11 ] [
               953                IFSPEC ] CMD_TERM
      210      954              POSITION(C@POSITION) = [ QUAL3 ] POS1
      211      955              POSITIONV(C@POSITION) = QUAL3 POS1
      212      956              POSITIONL(C@POSITION) = POS11L
      213      957              POSITIONS(C@POSITION) = SIMX
      214      958                QUAL3(C@QUAL3) = L@COLON
      215      959                POS1 = ( POS11 | SIMX )
      216      960                  POS11(C@POS11) = [ QUAL ] STMT_SPEC [ SUBSTMT ]
      217      961                  POS11L(C@POS11) = QUAL DECIMALS [ SUBSTMT ]
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            8    
      218      962                    QUAL(C@QUAL) = QUAL1
      219      963                      QUAL1(C@QUAL1) = * SIMBLE L@COLON *
      220      964                        SIMBLE = ( QTSTRINGS FSPECS | DD_SYMBOLS )
      221      965                    STMT_SPEC = ( STMT_SPEC1 | DECIMALS )
      222      966                      STMT_SPEC1(C@STMT_SPEC1) = SIMBLE [ LBL_ARRAY ]
      223      967                        LBL_ARRAY = L@LPAREN [.B] SIMXD [.B] L@RPAREN
      224      968                        SUBSTMT = ( SUBSTMT1 | SUBSTMT2 )
      225      969                          SUBSTMT1(C@SUBSTMT1) = ( BCOMMAB [ DECIMALS ] BCOMMAB SIMX | ;
      226      970                                                   BCOMMAB DECIMALS )
      227      971                            BCOMMAB = [.B] L@COMMA [.B]
      228      972                          SUBSTMT2(C@SUBSTMT2) = ARITHOP SIMEXP
      229      973                          SUBSTMT2DO(C@SUBSTMT2) = ARITHOP SIMEXPDO
      230      974                  SIMX(C@SIMX) = [ PORM ] SIMEXP
      231      975                  SIMXD(C@SIMX) = [ PORM ] SIMEXPD
      232      976                  SIMXDO(C@SIMX) = [ PORM ] SIMEXPDO
      233      977                    PORM = ( DD_L@PLUS | DD_L@MINUS )
      234      978                    PORMX = ( L@PLUS | L@MINUS )
      235      979                    SIMEXP(SIMEXP_CODE) = SDO [ EXPREP ]
      236      980                    SIMEXPD(SIMEXP_CODE) = SDOD
      237      981                    SIMEXPDO(SIMEXP_CODE) = XDO
      238      982                    SIMEXPMDO(SIMEXP_CODE) = XMDO
      239      983                      SDO(C@SDO) = ( SIMBLE | DD_BASE | CNR1 | DECIMALS )
      240      984                      SDOD(C@SDO) = DECIMALS
      241      985                      XDO(C@SDO) = ( DECIMALS | DD_BASE )
      242      986                      XMDO(C@SDO) = [L@MINUS] ( DECIMALS | DD_BASE )
      243      987                      OCTIL(OCT_CODE,D) = L@PERIOD .OCT-
      244      988                      OCTIL1(OCT_CODE,D) = .OCT-
      245      989                      OCTILNICE(OCT_CODE) = .OCT1-
      246      990                      ODIG(C@OCT0,D) = .OCT1-
      247      991                      OCTILBOTH(D) = ( OCTIL | OCTILNICE )
      248      992                      HEXIL (D,HEX_CODE) = L@PERIOD HEXIL1
      249      993                      HEXIL1(HEX_CODE,D,MAKEUC) = .HEX-
      250      994                      HEXNICE(HEX_CODE,MAKEUC) = .HEX1-
      251      995                      HDIG(C@HEX0,D,MAKEUC) = .HEX1-
      252      996                      HEXBOTH(D) = ( HEXIL | HEXNICE )
      253      997                      EXPREP(EXPREP_CODE) =  * EXPCON *
      254      998                        EXPCON(EXPCON_CODE) = ARITHOP SDO
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            9    
      255      999                          ARITHOP = ( DD_L@PLUS | ;
      256     1000                                         DD_L@MINUS | ;
      257     1001                                         DD_L@LSHIFT | ;
      258     1002                                         DD_L@RSHIFT | ;
      259     1003                                         DD_L@MULT | ;
      260     1004                                         DD_L@DIV | ;
      261     1005                                         DD_L@OR | ;
      262     1006                                         DD_L@AND )
      263     1007              N_AT11(C@N_AT11) = .B L_# [.B] DECIMALS
      264     1008            N_BREAK(C_BREAK) = L_BREAK [ IFSPEC ] CMD_TERM
      265     1009            N_BYPASS(C_BYPASS) = L_BYPASS [ IFSPEC ] CMD_TERM
      266     1010            N_CACHE(C_CACHE) = L_CACHE [ IFSPEC ] CMD_TERM
      267     1011            N_COPY(C_COPY) = L_COPY [ IFSPEC ] CMD_TERM
      268     1012            N_CRASH(C_CRASH) = L_CRASH [ IFSPEC ] CMD_TERM
      269     1013            N_DBOOT(C_DBOOT) = L_DBOOT [ IFSPEC ] CMD_TERM
      270     1014            N_DEBUG(C_DEBUG) = L_DEBUG [.B] ( DEBUG_SYSID | ;
      271     1015                                              DEBUG_CG | ;
      272     1016                                              DEBUG_FEP | ;
      273     1017                                              < BCOMMAB , DECIMALS > | ;
      274     1018                                                L@NONE | ;
      275     1019                                                L@ALL ) [ IFSPEC ] CMD_TERM
      276     1020                  DEBUG_CG(DBG_CG) = STATION .B ('AT'|'ON') .B (TP | CG)
      277     1021                       STATION = (QTSTRINGS | FID8 )
      278     1022                       TP(TPACCOUNT) = ('TP//' | 'TP ') TPACCT
      279     1023                       TPACCT(TPACCT_CODE) = .ALPHA+'0123456789$:'
      280     1024                       CG(CG_CODE) = ( CG1 | CG2 )
      281     1025                            CG1(CG1_CODE) =  ('CG//' | 'CG ') FIDS
      282     1026                            CG2(CG2_CODE) =  FIDS
      283     1027                  DEBUG_SYSID(DBG_SYSID) = DECIMALS .B ('AT' | 'ON') .B FID8
      284     1028                  DEBUG_FEP(DBG_FEP) = (DEBUG@ [ DEBUGU ] | [ DEBUGU ] DEBUG@)
      285     1029                       DEBUG@(DBG_@) = ('@' | 'TH/R'- [('U' | 'O/UGH')] .B) .SYM8
      286     1030                       DEBUGU(DBG_U) = 'U/SING' .B FIDS
      287     1031            N_DEF(C_DEF) = L_DEF .B SIMBLE BEQUALSB VREFX [ IFSPEC ] CMD_TERM
      288     1032              VREFX(VREF_CODE) = VREFX1
      289     1033              VREF(VREF_CODE) = VREFX1 [ FMTSPEC ]
      290     1034                VREFX1 = ( POSITIONV | ;
      291     1035                              POSITIONL | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            10   
      292     1036                              VREFX11 | ;
      293     1037                              POSITIONS )
      294     1038                  VREFX11(C@VREF11) = [ QUAL ] PQLISTX
      295     1039                    PQLISTX(PQLIST_CODE) = < BPTRB , PQLIST1X >
      296     1040                    PQLISTS(PQLIST_CODE) = < BPTRB , PQLIST1S >
      297     1041                      BPTRB = [.B] L@PTR [.B]
      298     1042                      PQLIST1X = ( VAREXPX | SIMEXP )
      299     1043                      PQLIST1S = ( VAREXPS | SIMEXPMDO )
      300     1044        /*N* Currently DELTA can't handle VAREXPX with generalized SUBSTMT2 */
      301     1045                        VAREXPX(VAREXP_CODE) = DD_SYMLIST [ SUBREF ] [ SUBSTMT2 ]
      302     1046                        VAREXPS(VAREXP_CODE) = DD_SYMLIST [ SUBREF ]
      303     1047                          SYMLIST(SYMLIST_CODE,D) = < L@PERIOD , SIMBLE >
      304     1048                          SYMLISTC(SYMLISTC_CODE,D) = < INOF , SIMBLE >
      305     1049                            INOF = .B L@INOF .B
      306     1050                          SUBREF = L@LPAREN [.B] SUBREF1 [.B] L@RPAREN
      307     1051                            SUBREF1(SUBREF_CODE) = < DD_SYMDEL, ULREF >
      308     1052                              ULREF(ULREF_CODE) = PQLISTS [ L@COLON PQLISTS ]
      309     1053            N_DELETE(C_DELETE) = L_DELETE [ IFSPEC ] CMD_TERM
      310     1054            N_DO(C_DO) = L_DO [.B] DECIMALS [ IFSPEC ] CMD_TERM
      311     1055            N_DIC(C_DIC) = L_DIC [ IFSPEC ] CMD_TERM
      312     1056            N_DISPLAY(C_DISPLAY) = L_DISPLAY .B NVREF_LET [ IFSPEC ] CMD_TERM
      313     1057              NVREF_LET(NVREF_CODE) = < BCOMMAB , VREF_LET >
      314     1058                VREF_LET(VREF_CODE) = VREF1_LET [ FMTSPEC ]
      315     1059                VREFX_LET(VREF_CODE) = VREF1_LET
      316     1060                  VREF1_LET = ( POSITIONV | ;
      317     1061                                   POSITIONL | ;
      318     1062                                   VREF11_LET | ;
      319     1063                                   POSITIONS )
      320     1064                    VREF11_LET(C@VREF11) = [ QUAL ] PQLIST_LET
      321     1065                      PQLIST_LET(PQLIST_CODE) = < BPTRB , PQLIST1_LET >
      322     1066                        PQLIST1_LET = ( VAREXP_LET | SIMEXPDO )
      323     1067                          VAREXP_LET(VAREXP_CODE) = ( DD_SYMLIST SUBREF | ;
      324     1068                                                        DD_SYMLIST [ SUBSTMT2DO ] )
      325     1069            N_DLCT(C_DLCT) = L_DLCT [IFSPEC] CMD_TERM
      326     1070            NU_DUMP(C_DUMP,D) = ( L_DUMP [ * { L@ASCII | L@EJECT | L@EBCDIC | L@LONG } * ]
              1070                ;
      327     1071                                  .B VREFX [ * { DRANGE | BBKSLASHB FMTSPECD } * ] ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            11   
      328     1072                                  [ * .B { ECHO1 .B FIDS | QTSTRINGS } * ] ;
      329     1073                                | L_DISPLAY .B VREFX [ * DRANGE * ] BBKSLASHB FIDSUC ;
      330     1074                                | BBKSLASHB FIDSUC [ .B VREFX [ * DRANGE * ] ] ) ;
      331     1075                                [ IFSPEC ] CMD_TERM
      332     1076              FMTSPECD = ( FMT4 | ;             /* C/HAR                              */
      333     1077                           FMT21 | ;            /* EB/CDIC                            */
      334     1078                              FMT18 | ;         /* X1                                 */
      335     1079                              FMT1 |  ;         /* O/CTAL                             */
      336     1080                              FMT13 )           /* X                                  */
      337     1081            NX_DUMP(C_DUMP,D) = L_DUMP [ * { L@ASCII | L@EJECT | L@LONG } * ] .B VREFX ;
      338     1082                                [ * { DRANGE | BBKSLASHB FMTSPECD } * ] ;
      339     1083                                [ * .B { ECHO1 [.B] ECHO2 | QTSTRINGS } * ] [ IFSPEC ]
              1083                                    CMD_TERM
      340     1084              DRANGE = BCOMMAB SIMEXP
      341     1085            NU_ECHO(C_ECHO,D) = L_ECHO [ IFSPEC ] CMD_TERM
      342     1086            NX_ECHO(C_ECHO,D) = L_ECHO [.B] [ ECHO1 ] [.B] ECHO2 [ IFSPEC ] CMD_TERM
      343     1087              ECHO1 = ( L@OVER | L@ON | L@TO | L@INTO )
      344     1088              ECHO2 =  ( L@NO | L@LP | L@ME )
      345     1089            N_END(C_QUIT) = L_END ( [ IFSPEC ] CMD_TERM | ;
      346     1090                                    [.B] RES [ IFSPEC ] CMD_TERM )
      347     1091            N_EOM(C_EOM) = L_EOM [ IFSPEC ] CMD_TERM
      348     1092            N_ERRFID (C_ERRFID) = L_ERRFID .B FIDS [ IFSPEC ] CMD_TERM
      349     1093            N_EVAL(C_EVAL) = L_EVAL .B ( VREF [ IFSPEC ] CMD_TERM | ;
      350     1094                                           INSTRF [ IFSPEC ] CMD_TERM )
      351     1095            N_EXIT(C_EXIT) = L_EXIT [ IFSPEC ] CMD_TERM
      352     1096            N_FIND(C_FIND) = L_FIND ( FIND1S | FIND1N | FIND1NIF | FIND1IF )
      353     1097              FIND1S = .B ( FINDI3I CMD_TERM | ;
      354     1098                               FINDI3V CMD_TERM | ;
      355     1099                               FINDV3I CMD_TERM | ;
      356     1100                               FINDV3V CMD_TERM )
      357     1101              FIND1N = [.B] L@NOT .B ( FINDI3I CMD_TERM | ;
      358     1102                                          FINDI3V CMD_TERM | ;
      359     1103                                          FINDV3I CMD_TERM | ;
      360     1104                                          FINDV3V CMD_TERM )
      361     1105              FIND1NIF = [.B] L@NOT .B ( FINDI3I IFSPEC CMD_TERM | ;
      362     1106                                            FINDI3V IFSPEC CMD_TERM | ;
      363     1107                                            FINDV3I IFSPEC CMD_TERM | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            12   
      364     1108                                            FINDV3V IFSPEC CMD_TERM )
      365     1109              FIND1IF = .B ( FINDI3I IFSPEC CMD_TERM | ;
      366     1110                                FINDI3V IFSPEC CMD_TERM | ;
      367     1111                                FINDV3I IFSPEC CMD_TERM | ;
      368     1112                                FINDV3V IFSPEC CMD_TERM )
      369     1113                FINDI3I = DD_INSTR FIND123I
      370     1114                FINDI3V = DD_INSTR FIND123V
      371     1115                FINDV3I = VREFX FIND123I
      372     1116                FINDV3V = VREFX FIND123V
      373     1117                  FIND123I = ( * { FIND3I | FIND1 | FIND2 } * | ;
      374     1118                                  * { FIND3I | FIND1         } * | ;
      375     1119                                  * { FIND3I | FIND2         } * | ;
      376     1120                                  * { FIND2  | FIND1         } * | ;
      377     1121                                      FIND1                      | ;
      378     1122                                      FIND2                      | ;
      379     1123                                      [.B]                         )
      380     1124                  FIND123V = ( * { FIND3V | FIND1 | FIND2 } * | ;
      381     1125                                  * { FIND3V | FIND1         } * | ;
      382     1126                                  * { FIND3V | FIND2         } * | ;
      383     1127                                  * { FIND2  | FIND1         } * | ;
      384     1128                                      FIND1                      | ;
      385     1129                                      FIND2                      | ;
      386     1130                                      [.B]                         )
      387     1131                    FIND1(FROM_CODE) = .B L@FROM .B VREFX [ DRANGE ]
      388     1132                    FIND2(UNDER_CODE) = .B L@UNDER .B SIMEXP
      389     1133                    FIND2X = .B L@UNDER .B SIMEXP
      390     1134                    FIND3V(SUBS_CODE) = .B L@SUBS .B VREFX [ FIND2X ]
      391     1135                    FIND3I(SUBS_CODE) = .B L@SUBS .B DD_INSTR [ FIND2X ]
      392     1136            N_FORMAT(C_FORMAT) = L_FORMAT [.B] ( L@EVAL | L@MODIFY ) [.B] FMTSPEC [ IFSPEC
              1136                ] CMD_TERM
      393     1137            N_GOTO(C_GOTO) = L_GOTO ( [.B] K@ALL | ;
      394     1138                                     [ * { L@STEP | L@TRAP } * ] ;
      395     1139                                        ( [.B] L@HOST [.B POSITION] [IFSPEC] CMD_TERM | ;
      396     1140                                          .B POSITION [.B POSITION] [ IFSPEC ] CMD_TERM | ;
      397     1141                                          [ IFSPEC ] CMD_TERM ) )
      398     1142            N_HISTORY(C_HISTORY) = L_HISTORY [.B] ;
      399     1143                                     [ ( L@CLEAR | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            13   
      400     1144                                     [ ( L@ALL | XDO ) ] [.B] [ L@MORE ] ) ] ;
      401     1145                                     [ IFSPEC ] CMD_TERM
      402     1146            N_INDIRECT(C_MACTIVE) = ( L@INDIRECT | L@TAB ) [.B] [ FMTSPEC ] [ IFSPEC ]
              1146                CMD_TERM
      403     1147            N_INDIRECT_PTR(C_MACTIVE) = L@INDIRECT_PTR [.B] [ FMTSPEC ] [ IFSPEC ] CMD_TERM
      404     1148            N_INDIRECT_SHORTPTR(C_MACTIVE) = L@INDIRECT_SHORTPTR [.B] [ FMTSPEC ] [ IFSPEC
              1148                ] CMD_TERM
      405     1149            N_INDIRECT_LEFT(C_MACTIVE) = L@INDIRECT_LEFT [.B] [ FMTSPEC ] [ IFSPEC ]
              1149                CMD_TERM
      406     1150            N_INDIRECT_RIGHT(C_MACTIVE) = L@INDIRECT_RIGHT [.B] [ FMTSPEC ] [ IFSPEC ]
              1150                CMD_TERM
      407     1151            NU_IGNORE(C_IGNORE,D) = L_IGNORE [.B] ( KTI@ALL | KTI@NONE | KTINAME ) [ IFSPEC
              1151                ] CMD_TERM
      408     1152              KTINAME = < BCOMMAB, { KTI@ARITHMETIC | ;
      409     1153                                        KTI@BREAK | ;
      410     1154                                        KTI@COMMAND | ;
      411     1155                                        KTI@DERAIL | ;
      412     1156                                        KTI@DIVIDE_CHECK | ;
      413     1157                                        KTI@ERROR | ;
      414     1158                                        KTI@EVENT | ;
      415     1159                                        KTI@FAULT_TAG | ;
      416     1160                                        KTI@IPR | ;
      417     1161                                        KTI@LOCKUP | ;
      418     1162                                        KTI@MEMORY | ;
      419     1163                                        KTI@MME | ;
      420     1164                                        KTI@MONITOR | ;
      421     1165                                        KTI@OVERFLOW | ;
      422     1166                                        KTI@PAGE | ;
      423     1167                                        KTI@PMME | ;
      424     1168                                        KTI@PROGRAMMED | ;
      425     1169                                        KTI@SEG | ;
      426     1170                                        KTI@SEC_2 | ;
      427     1171                                        KTI@SEC_1 | ;
      428     1172                                        KTI@TIMER | ;
      429     1173                                        KTI@XCON } >
      430     1174            NF_IGNORE(C_IGNORE,D) = L_IGNORE [.B] (L@HOST | KTI@ALL | KTI@NONE | RES) ;
      431     1175                                     .B ( KTI@ALL | KTI@NONE | KTI@ARITHMETIC ) [IFSPEC]
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            14   
              1175                                         CMD_TERM
      432     1176            N_INACTIVE(C_INACTIVE) = L_INACTIVE [.B] KILL13 [ IFSPEC ] CMD_TERM
      433     1177            NU_KEEP(C_KEEP,D) = L_KEEP [.B] ( KTI@ALL | KTINAME ) [ IFSPEC ] CMD_TERM
      434     1178            NF_KEEP(C_KEEP,D) = L_KEEP [.B] ( L@HOST | KTI@ALL | RES) ;
      435     1179                                .B ( KTI@ALL | KTIFNAME ) [IFSPEC] CMD_TERM
      436     1180                  KTIFNAME = < BCOMMAB, { KTI@EVENT | ;
      437     1181                                          KTI@BREAK | ;
      438     1182                                          KTI@XCON | ;
      439     1183                                          KTI@MCL | ;
      440     1184                                          KTI@ARITHMETIC | ;
      441     1185                                          KTI@TRAP } >
      442     1186            NX_KEEP(C_KEEP,D) = L_KEEP [.B] [ L@FAULTS ] [.B] [ KEEP1 ] [ IFSPEC ] CMD_TERM
      443     1187              KEEP1 = ( L@ALL | L@NONE | L@MON | L@SCREECH )
      444     1188            N_KILL(C_KILL) = L_KILL [.B] KILL1 [ IFSPEC ] CMD_TERM
      445     1189              KILL1 = ( ;
      446     1190                           K@ABBREVS | ;
      447     1191                           K@ALTVAR | ;
      448     1192                           K@ANLZ | ;
      449     1193                           K@ALL | ;
      450     1194                           K@ATS | ;
      451     1195                           K@BYPASS | ;
      452     1196                           K@CACHE | ;
      453     1197                           K@COPY | ;
      454     1198                           KILL12 | ;           /* D/EF name                          */
      455     1199                           K@DEFS | ;
      456     1200                           K@DIC | ;
      457     1201                           KILLDELTA | ;
      458     1202                           K@ECHO | ;
      459     1203                           K@EOM | ;
      460     1204                           K@FORMAT | ;
      461     1205                           K@INTERPRETIVE | ;
      462     1206                           KILL11 | ;           /* O/N calls, abort, exit, nodes      */
      463     1207                           K@PROTECT | ;
      464     1208                           K@RUM | ;
      465     1209                           K@SAD | ;
      466     1210                           K@SCHEMA | ;
      467     1211                           K@SAVES | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            15   
      468     1212                           K@STATUS | ;
      469     1213                           K@STEP | ;
      470     1214                           K@SYMBOLS | ;
      471     1215                           K@TRACE | ;
      472     1216                           K@WHENS | ;
      473     1217                           KILL13 )             /* n - m                              */
      474     1218                KILL11 = L_ON [.B] KILL111
      475     1219                  KILL111 = ( K@CALLS | K@ABORT | K@EXIT | K@NODES )
      476     1220                KILL12(S@KILLDN) = K@DEF .B DD_SYMBOLS
      477     1221                KILL13(S@KILLID) = DECIMALS [ KILL131 ]
      478     1222                  KILL131 = [.B] L@DASH@TO [.B] DECIMALS
      479     1223                KILLDELTA(S@KILLDELTA) = K@DELTA [ .B RES ]
      480     1224            N_LET(C_LET) = L_LET .B VREFX_LET BEQUALSB CNSNT_REF [ IFSPEC ] CMD_TERM
      481     1225              BEQUALSB = ( [.B] L_EQUALS [.B] | .B )
      482     1226            N_LIST(C_LIST) = L_LIST [.B KILL13] [ IFSPEC ] CMD_TERM
      483     1227            N_STOP(C_STOP) = L_STOP ([.B] L@ALL [ IFSPEC ] CMD_TERM | ;
      484     1228                                     [.B] RES [ IFSPEC ] CMD_TERM)
      485     1229            N_MINI(C_MINI) = L_MINI [ IFSPEC ] CMD_TERM
      486     1230            N_MODIFYDW(C_MODIFYDW) = L_MODIFY [.B] L_DOUBLE [L_WORD] .B VREF MODIFY3
      487     1231              MODIFY3 = (.B VREFX [MODIFY4] [NWARN_OPT] [IFSPEC] CMD_TERM|;
      488     1232                            [IFSPEC] CMD_TERM)
      489     1233              MODIFY4 = .B L@LPAREN [.B] VREFX [.B] L@RPAREN
      490     1234            N_MODIFY(C_MODIFY) = L_MODIFY .B VREF MODIFY1
      491     1235              MODIFY1 = ( .B DD_INSTR [ MODIFY2 ] [NWARN_OPT] [ IFSPEC ] CMD_TERM | ;
      492     1236                             .B VREFX [ MODIFY2 ] [NWARN_OPT] [ IFSPEC ] CMD_TERM | ;
      493     1237                              [ IFSPEC ] CMD_TERM )
      494     1238              MODIFY2 = .B L@LPAREN [.B] ( DD_INSTR | VREFX ) [.B] L@RPAREN
      495     1239                NWARN_OPT(C@NWARN_OPT) = [.B] L_NWARN [.B]
      496     1240                INSTR(INSTR_CODE,D) = INSTR_MNEM [ L@BANG ] .B DD_INSTR_CONT
      497     1241                INSTRF = DD_INSTR [ FMTSPEC ]
      498     1242                  INSTR_MNEM(SYM_CODE,S,MAKEUC) = .SYMBOL-
      499     1243                  INSTR_EIS(D) = [ INSTR_MF0 [ INSTR_MF1 ] [ INSTR_MF2 ] ;
      500     1244                                   [ INSTR_XTRA ] [ INSTR_XTRA ] [ INSTR_XTRA ] ]
      501     1245                    INSTR_MF0(EIS_MF0) = INSTR_EIS_MF
      502     1246                    INSTR_MF1(EIS_MF1) = L@COMMA INSTR_EIS_MF
      503     1247                    INSTR_MF2(EIS_MF2) = L@COMMA INSTR_EIS_MF
      504     1248                    INSTR_XTRA(EIS_EXTRA) = L@COMMA OCT1C
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            16   
      505     1249                    INSTR_EIS_MF = L@LPAREN [ OCT1C [ OCT2 [ OCT3 [ TAG_4 ]]]] L@RPAREN
      506     1250                  INSTR_ADSC(D) = VREFX [ OCT1 [ OTAG_2 [ PR ]]]
      507     1251                  INSTR_BDSC(D) = VREFX [ OTAG_1 [ OCT2 [ OCT3 [ PR ]]]]
      508     1252                  INSTR_NDSC(D) = VREFX [ OCT1 [ OTAG_2 [ OCT3 [ OCT4 [ PR ]]]]]
      509     1253                  INSTR_SDSC(D) = VREFX [ OCT1 [ OCT2 [ OCT3 [ PR ]]]]
      510     1254                  INSTR_VDSC(D) = VREFX [ OTAG_1 [ TAG_2 [ PR ]]]
      511     1255                  INSTR_ZERO(D) = VREFX [ OCT1 ]
      512     1256                    OCT1 = L@COMMAH [ OCT1C ]
      513     1257                    OCT2 = L@COMMAH [ OCT2C ]
      514     1258                    OCT3 = L@COMMAH [ OCT3C ]
      515     1259                    OCT4 = L@COMMAH [ OCT4C ]
      516     1260                      OCT1C(TAG_NUM1) = (OCTIL | DECIMALS)
      517     1261                      OCT2C(TAG_NUM2) = (OCTIL | DECIMALS)
      518     1262                      OCT3C(TAG_NUM3) = (OCTIL | DECIMALS)
      519     1263                      OCT4C(TAG_NUM4) = (OCTIL | DECIMALS)
      520     1264                    OTAG_1 = L@COMMAH [ OTAG_1C ]
      521     1265                    OTAG_2 = L@COMMAH [ OTAG_2C ]
      522     1266                    TAG_2 = L@COMMAH [ TAG_2C ]
      523     1267                    TAG_4 = L@COMMAH [ TAG_4C ]
      524     1268                      OTAG_1C(TAG_NUM1) = ( DECIMALS | TAG )
      525     1269                      OTAG_2C(TAG_NUM2) = ( DECIMALS | TAG )
      526     1270                      TAG_2C(TAG_NUM2) = TAG
      527     1271                      TAG_4C(TAG_NUM4) = TAG
      528     1272                  INSTR_DFLT(D) = VREFX [ L@COMMAH [ TAG ] [ PR ] ]
      529     1273                    TAG(TAG_CODE) = ( TAG1 | TAG2 | TAG3 | TAG4 | OCTIL )
      530     1274                      TAG1(TAG1_CODE) = TM L@STAR
      531     1275                        TM = ( L@N | L@AU | L@QU | L@DU | L@IC | L@AL | L@QL | L@DL | ;
      532     1276                               L@X0 | L@X1 | L@X2 | L@X3 | L@X4 | L@X5 | L@X6 | L@X7 )
      533     1277                      TAG2(TAG2_CODE) = TM
      534     1278                      TAG3(TAG3_CODE) = L@STAR TM
      535     1279                      TAG4(TAG4_CODE) = ( L@CI | L@AD | L@F | L@SD | ;
      536     1280                                            L@SCR | L@SC | L@DIC | L@DI | ;
      537     1281                                            L@IDC | L@ID | L@I )
      538     1282                    PR = L@COMMA PR1
      539     1283                      PR1(PR_CODE) = [ PR2 ] ODIG
      540     1284                        PR2 = ( L@PR | L@AR )
      541     1285                INSTR_L6(INSTR_CODE,D) = ( INST | INST_G | INST_IO )
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            17   
      542     1286                  INST(C@INST) = SYMBOLS ','-( B_REG | R_REG | M_REG | S_REG );
      543     1287                                    [ ','-MASK ] .B ARGS
      544     1288
      545     1289                  INST_G(C@INST_G) = SYMBOLS [ ','-MASK ] .B ARGS
      546     1290                  INST_IO(C@INST_IO) = SYMBOLS .B '(' ARGS ')' ','- '(' ARGS ')' ;
      547     1291                                       [ ','- '(' ARGS ')' ]
      548     1292                    MASK(C@MASK)              = ('X'-.QUOTE-|HEXIL)
      549     1293                    ARGS = ( BASED_INDEXED_AUTODEC | ;
      550     1294                               BASED_INDEXED_AUTOINC | ;
      551     1295                               INDIRECT_INDEXED | ;
      552     1296                             BASED_INDEXED | ;
      553     1297                             BASED_INDIRECT_INDEXED | ;
      554     1298                             BASE_REL_IND | ;
      555     1299                             INDEXED | ;
      556     1300                             BASED_AUTODEC | ;
      557     1301                             BASED_AUTOINC | ;
      558     1302                             REL_INDIRECT | ;
      559     1303                             BASE_REL | ;
      560     1304                             IMO_VALUE | ;
      561     1305                             BASED | ;
      562     1306                             INDIRECT_BASED | ;
      563     1307                             REL_DIRECT | ;
      564     1308                             SHORT_PREL | ;
      565     1309                             INT_VECTOR | ;
      566     1310                             INDIRECT1 | ;
      567     1311                             REGISTER | ;
      568     1312                             DIRECT ) [.B]
      569     1313                    BASED_INDEXED_AUTODEC(C@ARG_BIAD)  = ','-( B_1 | B_2 | B_3 ) ','-;
      570     1314                          ( R_1 | R_2 | R_3 ) ',PUSH'
      571     1315                    BASED_INDEXED_AUTOINC(C@ARG_BIAI)  = ','-( B_1 | B_2 | B_3 ) ','-;
      572     1316                          ( R_1 | R_2 | R_3 ) ',POP'
      573     1317                    INDIRECT_INDEXED(C@ARG_II)         = '*'-EXP ','-;
      574     1318                          ( R_1 | R_2 | R_3 )
      575     1319                    BASED_INDEXED(C@ARG_BI)            = ','-B_REG ','-;
      576     1320                          ( R_1 | R_2 | R_3 )
      577     1321                    BASED_INDIRECT_INDEXED(C@ARG_BII)  = '*,'-B_REG ','-;
      578     1322                          ( R_1 | R_2 | R_3 )
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            18   
      579     1323                    BASE_REL_IND(C@ARG_BRI)            = '*'-EXP ','-B_REG
      580     1324                    INDEXED(C@ARG_IDX)                 = EXP ','-( R_1 | R_2 | R_3 )
      581     1325                    BASED_AUTODEC(C@ARG_BAD)           = ','-B_REG ',PUSH'
      582     1326                    BASED_AUTOINC(C@ARG_BAI)           = ','-B_REG ',POP'
      583     1327                    REL_INDIRECT(C@ARG_RI)             = '*'-EXP ',PREL'
      584     1328                    BASE_REL(C@ARG_BR)                 = EXP ','-B_REG
      585     1329                    IMO_VALUE(C@ARG_IMV)               = EXP ',IMO'
      586     1330                    BASED(C@ARG_B)                     = ','-B_REG
      587     1331                    INDIRECT_BASED(C@ARG_IB)           = '*,'-B_REG
      588     1332                    REL_DIRECT(C@ARG_RD)               = EXP ',PREL'
      589     1333                    SHORT_PREL(C@ARG_SP)               = EXP ',SPREL'
      590     1334                    INT_VECTOR(C@ARG_IV)               = EXP ',$IV'
      591     1335                    INDIRECT1(C@ARG_IDT)               = '*'-EXP
      592     1336                    REGISTER(C@ARG_R)                  = ( R_REG | B_REG | S_REG )
      593     1337                    DIRECT(C@ARG_D)                    = EXP
      594     1338                    EXP                       = VREFX
      595     1339                    B_REG                     = ( B_1 | B_2 | B_3 | B_4 | B_5 | B_6 | B_7 )
      596     1340                    B_1(C@B1)                 = 'B1'-
      597     1341                    B_2(C@B2)                 = 'B2'-
      598     1342                    B_3(C@B3)                 = 'B3'-
      599     1343                    B_4(C@B4)                 = 'B4'-
      600     1344                    B_5(C@B5)                 = 'B5'-
      601     1345                    B_6(C@B6)                 = 'B6'-
      602     1346                    B_7(C@B7)                 = 'B7'-
      603     1347
      604     1348                    R_REG                     = ( R_1 | R_2 | R_3 | R_4 | R_5 | R_6 | R_7 )
      605     1349                    R_1(C@R1)                 = 'R1'-
      606     1350                    R_2(C@R2)                 = 'R2'-
      607     1351                    R_3(C@R3)                 = 'R3'-
      608     1352                    R_4(C@R4)                 = 'R4'-
      609     1353                    R_5(C@R5)                 = 'R5'-
      610     1354                    R_6(C@R6)                 = 'R6'-
      611     1355                    R_7(C@R7)                 = 'R7'-
      612     1356
      613     1357                    M_REG                     = ( M_1 | M_2 | M_3 )
      614     1358                    M_1(C@M1)                 = 'M1'-
      615     1359                    M_2(C@M2)                 = 'M2'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            19   
      616     1360                    M_3(C@M3)                 = 'M3'-
      617     1361
      618     1362                    S_REG                     = ( S_1 | S_2 | S_3 )
      619     1363                    S_1(C@S1)                 = 'S1'-
      620     1364                    S_2(C@S2)                 = 'S2'-
      621     1365                    S_3(C@S3)                 = 'S3'-
      622     1366            N_MLCT(C_MLCT) = L_MLCT .B HEXIL [.B HEXIL] [IFSPEC] CMD_TERM
      623     1367            N_NAME(C_NAME) = L_NAME .B (L@ENTDEFS|L@VARS) [.B .SYMBOL+'-?'] [IFSPEC]
              1367                CMD_TERM
      624     1368            N_NEXT(C_MACTIVE) = ( L@NEXT | L@LF ) [.B] [ FMTSPEC ] [ IFSPEC ] CMD_TERM
      625     1369            N_OA(C_OA) = L_ON [.B] K@ABORT [ IFSPEC ] CMD_TERM
      626     1370            N_OC(C_OC) = L_ON [.B] L_CALL [ * { L@SILENT | L@INACTIVE } * ] ;
      627     1371                           .B [ QUAL ] SIMBLE [ IFSPEC ] CMD_TERM
      628     1372            N_ONCALLS(C_ONCALLS) = L_ON [.B] [ L@X@T ] L_CALLS [ * { L@SILENT | L@INACTIVE
              1372                } * ] [ IFSPEC ] CMD_TERM
      629     1373            N_OE(C_OE) = L_ON [.B] K@EXIT [ IFSPEC ] CMD_TERM
      630     1374            N_ONN(C_ONN) = L_ON [.B] L_NODE [ * { L@SILENT | L@INACTIVE } * ] ;
      631     1375                             .B SIMBLE1 [ IFSPEC ] CMD_TERM
      632     1376                  SIMBLE1 = ( QTSTRINGS FSPECS | FIDS )
      633     1377            N_ONNODES(C_ONNODES) = L_ON [.B] L_NODES [ * { L@SILENT | L@INACTIVE } * ] [
              1377                IFSPEC ] CMD_TERM
      634     1378            NU_OUTPUT(C_OUTPUT,D) = L_OUTPUT OUTPUT1
      635     1379              OUTPUT1 = ( [.B] ECHO1 .B FIDS [ IFSPEC ] CMD_TERM | ;
      636     1380                          .B FIDS [ IFSPEC ] CMD_TERM | ;
      637     1381                          [ IFSPEC ] CMD_TERM )
      638     1382            NX_OUTPUT(C_OUTPUT,D) = L_OUTPUT [.B] [ ECHO1 ] [.B] ECHO2 [ IFSPEC ] CMD_TERM
      639     1383            N_OPEN(C_MACTIVE) = ( L@OPEN | L@LBRACKET | L@LBRACE ) [.B] [ FMTSPEC ] [
              1383                IFSPEC ] CMD_TERM
      640     1384            N_PLUGH(C_PLUGH) = L_PLUGH ( .B VREFX [ IFSPEC ] CMD_TERM | ;
      641     1385                                           [ IFSPEC ] CMD_TERM )
      642     1386            N_PMD(C_PMD) = L_PMD ( [.B] L@LPAREN [.B] PMDNAME [.B] [ L@RPAREN ] | ;
      643     1387                                     [ .B PMDNAME ] ) [ IFSPEC ] CMD_TERM
      644     1388              PMDNAME = < BCOMMAB, { PMD@AUTO | ;
      645     1389                                        PMD@ALL | ;
      646     1390                                        PMD@COMMON | ;
      647     1391                                        PMD@DS1 | ;
      648     1392                                        PMD@DS2 | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            20   
      649     1393                                        PMD@DS3 | ;
      650     1394                                        PMD@DS4 | ;
      651     1395                                        PMD@DS5 | ;
      652     1396                                        PMD@DS6 | ;
      653     1397                                        PMD@DS7 | ;
      654     1398                                        PMD@DS8 | ;
      655     1399                                        PMD@DS | ;
      656     1400                                        PMD@DATA | ;
      657     1401                                        PMD@DCBS | ;
      658     1402                                        PMD@DD | ;
      659     1403                                        PMD@ISR | ;
      660     1404                                        PMD@JIT | ;
      661     1405                                        PMD@PLUGH | ;
      662     1406                                        PMD@PROCEDURE | ;
      663     1407                                        PMD@ROSEG | ;
      664     1408                                        PMD@TCB } >
      665     1409            N_PROTECT(C_PROTECT) = L_PROTECT [ IFSPEC ] CMD_TERM
      666     1410            N_PROMPT(C_PROMPT) = L_PROMPT .B ( QTSTRINGS | DD_SYMBOLS ) [ IFSPEC ] CMD_TERM
      667     1411            N_PREV(C_MACTIVE) = ( L@PREV | L@UPARROW ) [.B] [ FMTSPEC ] [ IFSPEC ] CMD_TERM
      668     1412            N_QUIT(C_QUIT) = L_QUIT ( [ IFSPEC ] CMD_TERM | ;
      669     1413                                      [.B] RES [ IFSPEC ] CMD_TERM )
      670     1414                       RES(RES_CODE) = .ACCOUNT8-
      671     1415            N_RANGE(C_RANGE) = L_RANGE [.B] [ XDO ] [ IFSPEC ] CMD_TERM
      672     1416            NU_READ(C_READ,D) = L_READ ( .B FIDS [ LINESPEC ] [ IFSPEC ] CMD_TERM | ;
      673     1417                                         [ IFSPEC ] CMD_TERM )
      674     1418              LINESPEC = BCOMMAB ( DECIMALS L@PERIODD [ DECIMALS ] | ;
      675     1419                                      [ L@PERIODD ] DECIMALS )
      676     1420            NX_READ(C_READ,D) = L_READ [.B] READ1 [ IFSPEC ] CMD_TERM
      677     1421              READ1 = ( L@ME | L@CR | L@CARDS | L@TAPE | L@PATCH | L@UC )
      678     1422            N_REPORT(C_REPORT) = L_REPORT [ [.B] COMPID ] [ [.B] REPORT1 ] [ IFSPEC ]
              1422                CMD_TERM
      679     1423              COMPID = ( L@CC | ;
      680     1424                            L@COBOL | ;
      681     1425                            L@FPL | ;
      682     1426                            L@FORTRAN | ;
      683     1427                            L@GMAP | ;
      684     1428                            L@PASCAL | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            21   
      685     1429                            L@PL1 | ;
      686     1430                            L@PL6 | ;
      687     1431                            L@RPG )
      688     1432              REPORT1 = ( L@ALL | ;
      689     1433                             L@DEFAULT | ;
      690     1434                             < BCOMMAB, { L@OFFSET | ;
      691     1435                                          L@LINE | ;
      692     1436                                          L@TYPE } > )
      693     1437            N_RUM(C_RUM) = L_RUM .B FIDS ( [.B] L@LPAREN [.B] RUM1 [.B] [ L@RPAREN ] | ;
      694     1438                                             [ BCOMMAB RUM1 ] ) [ IFSPEC ] CMD_TERM
      695     1439              RUM1 = < BCOMMAB, { ( L@NUTS | L@UTS BEQUALSB RUMUTS ) | ;
      696     1440                                     ( L@COPY | L@INPUT | L@TEST ) | ;
      697     1441                                     RUMBUF } >
      698     1442                RUMUTS(C@RUMUTS) = DECIMALS ( '/'- | '%'- ) ;
      699     1443                                   DECIMALS ( '/'- | '%'- ) ;
      700     1444                                   DECIMALS .B ;
      701     1445                                   DECIMALS ':'- ;
      702     1446                                   DECIMALS ':'- ;
      703     1447                                   DECIMALS '.'- ;
      704     1448                                   DECIMALS
      705     1449               RUMBUF(C@RUMBUF) = 'B/UFFERS'- BEQUALSB DECIMALS
      706     1450            N_SAD(C_SAD) = L_SAD [.B] XDO [ IFSPEC ] CMD_TERM
      707     1451            N_SAVE(C_SAVE) = L_SAVE [ IFSPEC ] CMD_TERM
      708     1452            N_SCHEMA(C_SCHEMA) = L_SCHEMA ( .B POSITION [ IFSPEC ] CMD_TERM | ;
      709     1453                                            .B FIDS [IFSPEC] CMD_TERM | ;
      710     1454                                              [ IFSPEC ] CMD_TERM )
      711     1455            N_SELCHAN(C_SELCHAN) = L_SELCHAN .B HEXIL [IFSPEC] CMD_TERM
      712     1456             N_SHOW(C_SHOW) = L_SHOW ([.B ECHO1 .B FIDS] [IFSPEC] CMD_TERM | ;
      713     1457                                       .B SHOW1 [.B ECHO1 .B FIDS] [IFSPEC] CMD_TERM | ;
      714     1458                                      .B SHOWFPRG [.B ECHO1 .B FIDS] [IFSPEC] CMD_TERM )
      715     1459              SHOW1 = ( ;
      716     1460                           K@ABBREVS | ;
      717     1461                           K@ALTVAR | ;
      718     1462                           K@ANLZ | ;
      719     1463                           K@ALL | ;
      720     1464                           K@ATS | ;
      721     1465                           K@BYPASS | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            22   
      722     1466                           K@COPY | ;
      723     1467                           K@DIC | ;
      724     1468                           K@DEBUG | ;
      725     1469                           K@DEFSHOW | ;
      726     1470                           K@ECHO | ;
      727     1471                           K@EOM | ;
      728     1472                           K@FPRGS | ;
      729     1473                           K@FORMAT | ;
      730     1474                           K@KEEP | ;
      731     1475                           K@IGNORE | ;
      732     1476                           KILL11 | ;           /* O/N calls, abort, exit, nodes      */
      733     1477                           K@PROTECT | ;
      734     1478                           K@REPORT | ;
      735     1479                           K@RUM | ;
      736     1480                           K@RANGE | ;
      737     1481                           K@SCHEMA | ;
      738     1482                           K@SYNTAX | ;
      739     1483                           K@SAD | ;
      740     1484                           K@SAVES | ;
      741     1485                           K@STATUS | ;
      742     1486                           K@STEP | ;
      743     1487                           K@TRAP | ;
      744     1488                           K@TRACE | ;
      745     1489                           K@USE | ;
      746     1490                           K@WHENS | ;
      747     1491                           KILL13 )             /* n - m                              */
      748     1492                SHOWFPRG(S@SHOW_FPRG) = RES
      749     1493            N_SILENT(C_SILENT) = L_SILENT [.B] KILL13 [ IFSPEC ] CMD_TERM
      750     1494            N_STATUS(C_STATUS) = L_STATUS [ IFSPEC ] CMD_TERM
      751     1495            N_STEP(C_STEP) = L_STEP [.B] [ ( STEP1 | STEP2 | DECIMALS ) ] [ IFSPEC ]
              1495                CMD_TERM
      752     1496              STEP1 = L_BY [.B] ( L@INSTRUCTIONS | ;
      753     1497                                     L@PARAGRAPHS | ;
      754     1498                                     L@SUBSTATEMENTS | ;
      755     1499                                     L@STATEMENTS )
      756     1500              STEP2 = L@ONE [.B] L_CALL
      757     1501            N_STORE(C_STORE) = L_STORE .B ( STOREV [ IFSPEC ] CMD_TERM | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            23   
      758     1502                                              STOREI [ IFSPEC ] CMD_TERM )
      759     1503              STOREI = DD_INSTR [ * { FIND1 | FIND2 } * ]
      760     1504              STOREV = VREFX [ * { FIND1 | FIND2 } * ]
      761     1505            N_SYNTAX(C_SYNTAX) = L_SYNTAX [ [.B] COMPID ] [ IFSPEC ] CMD_TERM
      762     1506            N_T(C_T) = L_T [.B] ( TR1 [ IFSPEC ] CMD_TERM | ;
      763     1507                                    ( TR2 | TR3 ) [ IFSPEC ] CMD_TERM )
      764     1508              TR1 = [ L@X@T ] L@CALL@T [ L@SILENT ] [ .B SIMBLE ]
      765     1509              TR2 = ( L@OFF@T | ;
      766     1510                         L@ON@T | ;
      767     1511                         L@PARAGRAPHS | ;
      768     1512                         L@SUBSTATEMENTS | ;
      769     1513                         L@STATEMENTS | ;
      770     1514                         L@TRANSFER ) [ L@SILENT ] [.B SIMBLE]
      771     1515              TR3 = [ L@SILENT ]
      772     1516            N_TBOOT(C_TBOOT) = L_TBOOT [ IFSPEC ] CMD_TERM
      773     1517            NU_TRAP(C_TRAP,D) = L_TRAP [.B] ( KTI@ALL | KTI@NONE | KTINAME ) [ IFSPEC ]
              1517                CMD_TERM
      774     1518            NF_TRAP(C_TRAP,D) = L_TRAP [.B] (L@HOST | KTI@ALL | KTI@NONE | KTIFNAME | RES)
              1518                ;
      775     1519                                [.B ( KTI@ALL | KTI@NONE | KTIFNAME )] [IFSPEC] CMD_TERM
      776     1520            N_UNFID(C_UNFID) = L_UNFID [{L@UNFC|L@UNFO}] [[.B] (SIMBLE|KILL13)] [ IFSPEC ]
              1520                CMD_TERM
      777     1521            N_TSA(C_TSA) = L_TSA [.B HEXIL] [IFSPEC] CMD_TERM
      778     1522            N_UNSILENT(C_UNSILENT) = L_UNSILENT [.B] KILL13 [ IFSPEC ] CMD_TERM
      779     1523            N_UNSHARE(C_UNSHARE) = L_UNSHARE [.B] ;
      780     1524                                   [ ( L@ALL | ;
      781     1525                                   < BCOMMAB, { L@PROGRAM | L@LIBRARY } > ) ] ;
      782     1526                                   [ IFSPEC ] CMD_TERM
      783     1527            N_UPDATE(C_UPDATE) = L_UPDATE ( [.B] ( UPDATE3 | UPDATE2 ) | ;
      784     1528                                            [ L@ATTACHMENT ] [.B] UPDATE1 )
      785     1529             UPDATE1(C@UPDATE1) = KILL13 CMD_TERM
      786     1530             UPDATE2(C@UPDATE2) = DECIMALS BCOMMAB DECIMALS CMD_TERM
      787     1531             UPDATE3(C@UPDATE3) = DECIMALS [ BCOMMAB DECIMALS ] .B .ASYM CMD_TERM
      788     1532            N_USE(C_USE) = L_USE [.B] [ USE1 ] [ IFSPEC ] CMD_TERM
      789     1533              USE1 = ( USE17 | ;
      790     1534                       L@CURRENT | ;
      791     1535                          USE10 | ;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            24   
      792     1536                          USE09 | ;
      793     1537                          USE08 | ;
      794     1538                          USE11 | ;
      795     1539                          USE12 | ;
      796     1540                          USE13 | ;
      797     1541                          USE14 | ;
      798     1542                          USE15 | ;
      799     1543                          USE18 | ;
      800     1544                          USE19 | ;
      801     1545                          USE16 )
      802     1546                USE08(C@UNODE) = L_NODE .B SIMBLE1
      803     1547                USE09(C@UMON) = L@UMON [ ( B#B DECIMALS | B@B DD_BASE ) ]
      804     1548                USE10(C@UREAL) = L@REAL [ BCOMMAB ( L@AARD | L@XDEL | DD_BASE ) ]
      805     1549                USE11(C@UPT) = L@PT@ [.B] DD_BASE
      806     1550                USE12(C@UU@) = L@USER B@B DD_BASE [ ULSTYPE ]
      807     1551                  B@B = [.B] L@@ [.B]
      808     1552                ULSTYPE = BCOMMAB ULSTYPE1
      809     1553                  ULSTYPE1 = ( L@U | L@ICP | L@IDB | L@ASL | L@LSMON )
      810     1554                USE13(C@UU#) = L@USER B#B DD_BASEBOTH [ ULSTYPE ]
      811     1555                  B#B = [.B] L_# [.B]
      812     1556                USE14(C@UU) = L@USER [ ULSTYPE ]
      813     1557                USE15(C@UG1)  = L_G1
      814     1558                USE16(C@UFPRG_UHOST) = ( L@HOST | RES )
      815     1559                USE17(C@USECTION) = L_SECTION [.B  (L@MONENT | L@MONIS | L@FD | L@BF) ]
      816     1560                USE18(C@USEASDT) = L@ASDT .B POSITION
      817     1561                USE19(C@USELVL) = L@LVL .B DD_BASE
      818     1562            N_WAIT(C_WAIT) = L_WAIT CMD_TERM
      819     1563            N_WHEN(C_WHEN) = L_WHEN [ * { L@SILENT | L@INACTIVE } * ] ;
      820     1564                              .B VREFX [ [.B] IFREL [.B] CNSNT_REF ] [ N_AT11 ] ;
      821     1565                              [ IFSPEC ] CMD_TERM
      822     1566            N_XCON(C_XCON) = L_XCON [ IFSPEC ] CMD_TERM
      823     1567            N_XEQ(C_XEQ) = L_XEQ .B ( DD_INSTR [ IFSPEC ] CMD_TERM | ;
      824     1568                                        VREFX [ IFSPEC ] CMD_TERM )
      825     1569          IFSPEC(C@IFSPEC) = .B L_IF .B VREFX IFREL ;
      826     1570                               [.B] CNSNT_REF
      827     1571            IFREL = ( [.B] IFREL1 [.B] | ;
      828     1572                         .B IFREL2 .B )
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            25   
      829     1573              IFREL1 = ( L@NOTEQ | L@LESSEQ | L@GREATEQ | L@GRLESS | ;
      830     1574                            L@LESSGR | L@EQLESS | L@EQGREAT | L@EQUALS | ;
      831     1575                            L@GREATER | L@LESS )
      832     1576              IFREL2 = ( L@EQUALS1 | ;
      833     1577                            L@GREATEQ1 | ;
      834     1578                            L@GREATER1 | ;
      835     1579                            L@LESSEQ1 | ;
      836     1580                            L@LESS1 | ;
      837     1581                            L@NOTEQ1 )
      838     1582            CNSNT_REF(C@CNSNT_REF) = ( CNR1 | ; /* 'string'B|O|C|X                    */
      839     1583                                       DD_CNR2 | ; /* HOST -.oct-c-b,$L|P|ASdec|.oct  */
      840     1584                                                /* L6 - .hex[-.b]                     */
      841     1585                                         CNR3 | ; /* C|O|X'string'                    */
      842     1586                                      DD_CNR4 | ; /* +/-d.d | +/-d.dD|E+/-d           */
      843     1587                                                /***[ PORMX ] DECIMALS | ;*** +/-dec  */
      844     1588                              [ PORMX ] DD_BASE | ; /* +/-.oct                        */
      845     1589                                         CNR5 | ; /* (real,real)                      */
      846     1590                                         CNR6 ) /* T|.TRUE.|F|.FALSE                  */
      847     1591              CNR1(CNR1_CODE) = QTSTRINGS [ FSPEC ]
      848     1592                FSPEC = ( FSPECB | FSPECO | FSPECC | FSPECX | FSPECEB )
      849     1593              CNR2_HOST(CNR2HOST_CODE) = OCTIL [ CNR21 ] L@COMMA CNR22 XDO
      850     1594                CNR21 = L@MINUS ODIG [ CNR211_HOST ]
      851     1595                  CNR211_HOST = L@MINUS OCTIL1
      852     1596                CNR22 = ( L@$LS | L@$PS | L@$AS )
      853     1597              CNR2_L6(CNR2L6_CODE) = HEXIL [ CNR211_L6 ]
      854     1598                CNR211_L6 = L@MINUS HEXIL1
      855     1599              CNR3(CNR3_CODE) = FSPEC1 QTSTRINGS
      856     1600                FSPEC1 = ( FSPECC | FSPECOF | FSPECX )
      857     1601              CNR4_FORTRAN(D) = ( FORT_REAL | [ PORMX ] DECIMALS )
      858     1602                FORT_REAL(CNR4FORT_CODE) = [ PORMX ] ( FORT_R1 | FORT_R2 )
      859     1603                  FORT_R1 = FORT_I FORT_EXP
      860     1604                    FORT_I(FORTI_CODE) = DECIMALS
      861     1605                    FORT_EXP(FORTE_CODE) = L@DORE [ PORMX ] DECIMALS
      862     1606                  FORT_R2 = FORT_DEC [ FORT_EXP ]
      863     1607                    FORT_DEC = ( FORT_I L@PERIOD [ FORT_F ] | ;
      864     1608                                    L@PERIOD FORT_F )
      865     1609                    FORT_F(FORTF_CODE) = DECIMALS
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            26   
      866     1610              CNR4_COBOL(CNR4COBOL_CODE,D) = [ PORMX ] ;
      867     1611                                             ( DECIMALS L@PERIODD [ DECIMALS ] | ;
      868     1612                                             [ L@PERIODD ] DECIMALS )
      869     1613              CNR4_PL6(D) = [ PORMX ] DECIMALS
      870     1614              CNR5(CNR5_CODE) = L@LPAREN [.B] FORT_REAL BCOMMAB FORT_REAL [.B] L@RPAREN
      871     1615              CNR6(CNR6_CODE) = ( L@TRUE | L@FALSE )
      872     1616          COMMENTS(C_COMMENTS) = [.B] .END
      873     1617          CMD_TERM = [.B] ( SEMICOLON | .END )
      874     1618        %EJECT;
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            27   
      875     1619        FMT1(FMT1_CODE) = 'O/CTAL'-
      876     1620        FMT10(FMT10_CODE) = 'E/PTR'-
      877     1621        FMT11(FMT11_CODE) = 'A/R'-
      878     1622        FMT12(FMT12_CODE) = 'V/ECTOR'-
      879     1623        FMT13(FMT13_CODE) = 'X'-                /* X                                  */
      880     1624        FMT16(FMT16_CODE) = 'F/LOAT'-
      881     1625        FMT17(FMT17_CODE) = 'J/DE'-
      882     1626        FMT18(FMT18_CODE) = 'X1'-
      883     1627        FMT19(FMT19_CODE) = 'T/IME'-
      884     1628        FMT20(FMT20_CODE) = 'Z/ERO'-
      885     1629        FMT21(FMT21_CODE) = 'EB/CDIC'-
      886     1630        FMT2(FMT2_CODE) = 'U/BIN'-
      887     1631        FMT3(FMT3_CODE) = 'S/BIN'-
      888     1632        FMT4(FMT4_CODE) = 'C/HAR'-
      889     1633        FMT5(FMT5_CODE) = 'B/IT'-
      890     1634        FMT6(FMT6_CODE) = 'I/NSTR'-
      891     1635        FMT7(FMT7_CODE) = 'P/TR'-
      892     1636        FMT8(FMT8_CODE) = 'D/ESCR'-
      893     1637        FMT9(FMT9_CODE) = 'R/EL'-
      894     1638        FMT0(FMT0_CODE) = 'REM/EMBER'-
      895     1639        FSPECB(C@FSPECB) = 'B/IT'-
      896     1640        FSPECC(C@FSPECC) = 'C/HAR'-
      897     1641        FSPECO(C@FSPECO) = 'O/CTAL'-
      898     1642        FSPECOF(C@FSPECOF) = 'O'-
      899     1643        FSPECX(C@FSPECX) = 'X'-
      900     1644        FSPECEB(C@FSPECEB)='EB/CDIC'-
      901     1645        FSPECS = 'S/YMBOL'-
      902     1646        K@ABBREVS(S@ABBREVS) = 'AB/BREVS'-
      903     1647        K@ABORT(S@ABORT) = 'A/BORT'-
      904     1648        K@ALL(S@ALL) = 'AL/L'-
      905     1649        K@ALTVAR(S@ALTVAR) = 'A/LTERNATE' 'V/ARIABLES'-
      906     1650        K@ANLZ(S@ANLZ) = 'AN/LZ'-
      907     1651        K@ATS(S@ATS) = 'A/TS'-
      908     1652        K@BYPASS(S@BYPASS) = 'B/YPASS'-
      909     1653        K@CACHE(S@CACHE) = 'CA/CHE'-
      910     1654        K@CALLS(S@CALLS) = 'C/ALLS'-
      911     1655        K@COPY(S@COPY) = 'C/OPY'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            28   
      912     1656        K@DEBUG(S@DEBUG) = 'DEB/UG'-
      913     1657        K@DEF = 'D/EF'-
      914     1658        K@DEFS(S@DEFS) = 'DEFS'-
      915     1659        K@DEFSHOW(S@DEFS) = 'D/EFS'-
      916     1660        K@DELTA(S@DELTA) = 'DEL/TA'-
      917     1661        K@DIC(S@DIC) = 'DI/C'-
      918     1662        K@ECHO(S@ECHO) = 'EC/HO'-
      919     1663        K@EOM(S@EOM) = 'E/OM'-
      920     1664        K@EXIT(S@EXIT) = 'E/XIT'-
      921     1665        K@FORMAT(S@FORMAT) = 'F/ORMAT'- [ [.B] ( L@EVAL | L@MODIFY ) ]
      922     1666        K@FPRGS(S@FPRGS) = 'FP/RGS'-
      923     1667        K@IGNORE(S@IGNORE) = 'IG/NORE'-
      924     1668        K@INTERPRETIVE(S@INTERPRETIVE) = 'INTER/PRETIVE'-
      925     1669        K@KEEP(S@KEEP) = 'K/EEP'-
      926     1670        K@NODES(S@NODES) = 'N/ODES'-
      927     1671        K@PROTECT(S@PROTECT) = 'P/ROTECT'-
      928     1672        K@RANGE(S@RANGE) = 'R/ANGE'-
      929     1673        K@REPORT(S@REPORT) = 'RE/PORT'-
      930     1674        K@RUM(S@RUM) = 'RU/M'- ['SEY'-]
      931     1675        K@SAD(S@SAD) = 'SAD'-
      932     1676        K@SAVES(S@SAVES) = 'SA/VES'-
      933     1677        K@SCHEMA(S@SCHEMA) = 'SC/HEMA'-
      934     1678        K@STATUS(S@STATUS) = 'STAT/US'-
      935     1679        K@STEP(S@STEP) = 'S/TEP'-
      936     1680        K@SYMBOLS(S@SYMBOLS) = 'SY/MBOLS'-
      937     1681        K@SYNTAX(S@SYNTAX) = 'SY/NTAX'-
      938     1682        K@TRACE(S@TRACE) = 'T/RACE'-
      939     1683        K@TRAP(S@TRAP) = 'TRAP'-
      940     1684        K@USE(S@USE) = 'U/SE'-
      941     1685        K@WHENS(S@WHENS) = 'W/HENS'-
      942     1686        KTI@ALL(I@ALL) = 'AL/L'-
      943     1687        KTI@ARITHMETIC(I@ARITHMETIC) = 'AR/ITHMETIC'-
      944     1688        KTI@BREAK(I@BREAK) = 'B/REAK'-
      945     1689        KTI@COMMAND(I@COMMAND) = 'CO/MMAND'-
      946     1690        KTI@DERAIL(I@DERAIL) = 'DE/RAIL'-
      947     1691        KTI@DIVIDE_CHECK(I@DIVIDE_CHECK) = 'DI/VIDE_CHECK'-
      948     1692        KTI@ERROR(I@ERROR) = 'ER/ROR'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            29   
      949     1693        KTI@EVENT(I@EVENT) = 'EV/ENT'-
      950     1694        KTI@FAULT_TAG(I@FAULT_TAG) = 'F/AULT_TAG'-
      951     1695        KTI@IPR(I@IPR) = 'I/PR'-
      952     1696        KTI@LOCKUP(I@LOCKUP) = 'L/OCKUP'-
      953     1697        KTI@MCL(I@MCL) = 'M/CL'-
      954     1698        KTI@MEMORY(I@MEMORY) = 'ME/MORY'-
      955     1699        KTI@MME(I@MME) = 'MM/E'-
      956     1700        KTI@MONITOR(I@MONITOR) = 'MO/NITOR'-
      957     1701        KTI@NONE(I@NONE) = 'N/ONE'-
      958     1702        KTI@OVERFLOW(I@OVERFLOW) = 'OV/ERFLOW'-
      959     1703        KTI@PAGE(I@PAGE) = 'PA/GE'-
      960     1704        KTI@PMME(I@PMME) = 'PM/ME'-
      961     1705        KTI@PROGRAMMED(I@PROGRAMMED) = 'PR/OGRAMMED'-
      962     1706        KTI@SEC_1(I@SEC_1) = 'SE/C'- [ 'URITY'- ] '_1'-
      963     1707        KTI@SEC_2(I@SEC_2) = 'SE/C'- [ 'URITY'- ] '_2'-
      964     1708        KTI@SEG(I@SEG) = 'SEG'-
      965     1709        KTI@TIMER(I@TIMER) = 'T/IMER'-
      966     1710        KTI@TRAP(I@TRAP) = 'T/RAP'-
      967     1711        KTI@XCON(I@XCON) = 'X/CON'-
      968     1712        L@$AS(C@$AS) = '$A/S'-
      969     1713        L@$LS(C@$LS) = '$L/S'-
      970     1714        L@$PS(C@$PS) = '$P/S'-
      971     1715        L@@ = '@'-
      972     1716        L@AARD(C@AARDVARK) = 'A/ARDVARK'-
      973     1717        L@AD(T@AD) = 'AD'-
      974     1718        L@AL(T@AL) = 'AL'-
      975     1719        L@ALL(C@ALL) = 'A/LL'-
      976     1720        L@ALTRETURN(C@ALTRETURN) = 'A/LTRETURN'-
      977     1721        L@AND (AND_CODE,D) = '&'-
      978     1722        L@ANDC (AND_CODE,D) = .B '& '
      979     1723        L@AR = 'AR'-
      980     1724        L@ASDT = 'ASD/T'-
      981     1725        L@ASL(C@ASL) = 'A/SL'-
      982     1726        L@ASCII(C@ASCII) = 'A/SCII'-
      983     1727        L@ATTACHMENT(C@ATTACHMENT) = 'A/TTACHMENT'-
      984     1728        L@AU(T@AU) = 'AU'-
      985     1729        L@BANG(BANG_CODE) = '!'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            30   
      986     1730        L@BKSLASH = '\'-
      987     1731        L@CALL@T(C_TC) = 'C/ALLS'-
      988     1732        L@CARDS(C@CR) = 'C/ARDS'-
      989     1733        L@CC(C@CC) = 'CC'-
      990     1734        L@CI(T@CI) = 'CI'-
      991     1735        L@CLEAR(C@CLEAR) = 'C/LEAR'-
      992     1736        L@COBOL(C@COBOL) = 'CO/BOL'-
      993     1737        L@COLON = ':'-
      994     1738        L@COMMA = ','-
      995     1739        L@COMMAH(COMMA_CODE) = ','-
      996     1740        L@COPY(C@COPY) = 'C/OPY'-
      997     1741        L@CR(C@CR) = 'C/R'-
      998     1742        L@CURRENT(C@UCURR) = 'C/URRENT'-
      999     1743        L@DASH = '-'-
     1000     1744        L@DASH@TO = ( '-'- | 'T/O'- )
     1001     1745        L@DEFAULT(C@DEFAULT) = 'D/EFAULT'-
     1002     1746        L@DI(T@DI) = 'DI'-
     1003     1747        L@DIC(T@DIC) = 'DIC'-
     1004     1748        L@DIV(DIV_CODE,D) = '%'-
     1005     1749        L@DIVC(DIV_CODE,D) = .B '% '
     1006     1750        L@DORE = ( 'D'- | 'E'- )
     1007     1751        L@DL(T@DL) = 'DL'-
     1008     1752        L@DU(T@DU) = 'DU'-
     1009     1753        L@EBCDIC(C@EBCDIC) = 'E/BCDIC'-
     1010     1754        L@EJECT(C@PAGE_EJECT) = 'EJ/ECT'-
     1011     1755        L@ENTDEFS(C@ENTDEFS) = 'E/NTDEFS'-
     1012     1756        L@EQGREAT(C@GREATEQ) = '==>'-
     1013     1757        L@EQLESS(C@LESSEQ) = '==<'-
     1014     1758        L@EQUALS(C@EQUALS) = '='-
     1015     1759        L@EQUALS1(C@EQUALS) = 'E/Q'-
     1016     1760        L@EVAL(C@EVAL) = 'E/VALUATE'-
     1017     1761        L@F(T@F) = 'F'-
     1018     1762        L@FALSE(C@FALSE) = ( 'F/ALSE'- | '.FALSE.'- )
     1019     1763        L@FAULTS = 'F/AULTS'-
     1020     1764        L@FORTRAN(C@FORTRAN) = 'F/ORTRAN'-
     1021     1765        L@FPL(C@FPL) = 'FP/L'-
     1022     1766        L@FPRG(C@FPRG1) = 'F/PRG'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            31   
     1023     1767        L@FROM = 'F/ROM'-
     1024     1768        L@GMAP(C@GMAP) = 'G/MAP'-
     1025     1769        L@GREATEQ(C@GREATEQ) = '>='-
     1026     1770        L@GREATEQ1(C@GREATEQ) = 'GE'-
     1027     1771        L@GREATER(C@GREATER) = '>'-
     1028     1772        L@GREATER1(C@GREATER) = 'G/T'-
     1029     1773        L@GRLESS(C@NOTEQ) = '><'-
     1030     1774        L@HOST(C@HOST) = 'H/OST'-
     1031     1775        L@I(T@I) = 'I'-
     1032     1776        L@IC(T@IC) = 'IC'-
     1033     1777        L@ICP(C@ICP) = 'IC/P'-
     1034     1778        L@ID(T@ID) = 'ID'-
     1035     1779        L@IDB(C@IDB) = 'ID/B'-
     1036     1780        L@IDC(T@IDC) = 'IDC'-
     1037     1781        L@INACTIVE(C@INACTIVE) = 'I'-
     1038     1782        L@INDIRECT(M@INDIRECT) = '*'-
     1039     1783        L@INDIRECT_LEFT(M@INDIRECT_LEFT) = '*L/EFT'-
     1040     1784        L@INDIRECT_PTR(M@INDIRECT_PTR) = '*P/TR'-
     1041     1785        L@INDIRECT_RIGHT(M@INDIRECT_RIGHT) = '*R/IGHT'-
     1042     1786        L@INOF = ( 'OF'- | 'IN'- )
     1043     1787        L@INPUT(C@INPUT) = 'I/NPUT'-
     1044     1788        L@INSTRUCTIONS(C@INSTRUCTIONS) = 'I/NSTRUCTIONS'-
     1045     1789        L@INTO(C@INTO) = 'IN/TO'-
     1046     1790        L@KEEP(C@KEEP) = 'K/EEP'-
     1047     1791        L@LBRACE(M@OPEN) = '{'-
     1048     1792        L@LBRACKET(M@OPEN) = '['-
     1049     1793        L@LESS(C@LESS) = '<'-
     1050     1794        L@LESS1(C@LESS) = 'L/T'-
     1051     1795        L@LESSEQ(C@LESSEQ) = '<='-
     1052     1796        L@LESSEQ1(C@LESSEQ) = 'LE'-
     1053     1797        L@LESSGR(C@NOTEQ) = '<>'-
     1054     1798        L@LIBRARY(C@LIBRARY) = 'L/IBRARY'-
     1055     1799        L@LINE(C@LINE) = 'L/INE'-
     1056     1800        L@LF(M@NEXT) = '#012'-
     1057     1801        L@LONG(C@LONG) = 'L/ONG'-
     1058     1802        L@LP(C@LP) = 'L/P'-
     1059     1803        L@LPAREN = '('-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            32   
     1060     1804        L@LSHIFT(LSHIFT_CODE,D) = '<<'-
     1061     1805        L@LSHIFTC(LSHIFT_CODE,D) = .B '<< '
     1062     1806        L@LSMON(C@LSMON) = 'M/ON'-
     1063     1807        L@LVL = 'LE/VEL'-
     1064     1808        L@ME(C@ME) = 'M/E'-
     1065     1809        L@MINUS(MINUS_CODE,D) = '-'-
     1066     1810        L@MINUSC(MINUS_CODE,D) = .B '- '
     1067     1811        L@MODIFY(C@MODIFY) = 'M/ODIFY'
     1068     1812        L@MON(C@MON) = 'M/ON'-
     1069     1813        L@MONENT(C@MONENT) = 'M/ON'- 'E/NTRY'-
     1070     1814        L@MONIS(C@MONIS) = 'M/ON'- 'IS'-
     1071     1815        L@FD(C@FD) = 'FD'-
     1072     1816        L@BF(C@BF) = 'BF'-
     1073     1817        L@MORE(C@MORE) = 'M/ORE'-
     1074     1818        L@MULT(MULT_CODE) = '*'-
     1075     1819        L@MULTC(MULT_CODE) = .B '* '
     1076     1820        L@N(T@N) = 'N'-
     1077     1821        L@NEXT(M@NEXT) = 'N/EXT'-
     1078     1822        L@NO(C@NO) = 'N/O'-
     1079     1823        L@NONE(C@NONE) = 'N/ONE'-
     1080     1824        L@NOT(C@NOT) = ( 'N/OT'- | '~'- )
     1081     1825        L@NOTEQ(C@NOTEQ) = '~='-
     1082     1826        L@NOTEQ1(C@NOTEQ) = 'N/E'-
     1083     1827        L@NUTS(C@NUTS) = 'NUTS'-
     1084     1828        L@OFF@T(C_TO) = 'OF/F'-
     1085     1829        L@OFFSET(C@OFFSET) = 'O/FFSET'-
     1086     1830        L@ON(C@ON) = 'ON'-
     1087     1831        L@ON@T(C_TON) = 'O/N'-
     1088     1832        L@ONE(C@ONE) = 'O/NE'-
     1089     1833        L@OPEN(M@OPEN) = 'O/PEN'-
     1090     1834        L@OR (OR_CODE,D) = '|'-
     1091     1835        L@ORC (OR_CODE,D) = .B '| '
     1092     1836        L@OVER(C@OVER) = 'OV/ER'-
     1093     1837        L@PASCAL(C@PASCAL) = 'PA/SCAL'-
     1094     1838        L@PATCH(C@PATCH) = 'P/ATCH'-
     1095     1839        L@PARAGRAPHS(C@PARAGRAPHS) = 'P/ARAGRAPHS'-
     1096     1840        L@PERIOD = '.'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            33   
     1097     1841        L@PERIODD(C@PERIOD) = '.'-
     1098     1842        L@PL1(C@PL1) = 'PL1'-
     1099     1843        L@PL6(C@PL6) = 'P/L6'-
     1100     1844        L@PLUS(PLUS_CODE,D) = '+'-
     1101     1845        L@PLUSC(PLUS_CODE,D) = .B '+ '
     1102     1846        L@PR = 'PR'-
     1103     1847        L@PREV(M@PREV) = 'P/REV'-
     1104     1848        L@PROGRAM(C@PROGRAM) = 'P/ROGRAM'-
     1105     1849        L@PT@ = 'P/T@'-
     1106     1850        L@PTR = '->'-
     1107     1851        L@QL(T@QL) = 'QL'-
     1108     1852        L@QU(T@QU) = 'QU'-
     1109     1853        L@REAL = 'R/EAL'-
     1110     1854        L@RETURN(C@RETURN) = 'R/ETURN'-
     1111     1855        L@RPAREN = ')'-
     1112     1856        L@RPG(C@RPG) = 'R/PG'-
     1113     1857        L@RSHIFT(RSHIFT_CODE,D) = '>>'-
     1114     1858        L@RSHIFTC(RSHIFT_CODE,D) = .B '>> '
     1115     1859        L@SC(T@SC) = 'SC'-
     1116     1860        L@SCR(T@SCR) = 'SCR'-
     1117     1861        L@SCREECH(C@SCREECH) = 'S/CREECH'-
     1118     1862        L@SD(T@SD) = 'SD'-
     1119     1863        L@INDIRECT_SHORTPTR(M@INDIRECT_SHORTPTR) = '*SP'-
     1120     1864        L@SILENT(C@SILENT) = 'S'-
     1121     1865        L@SLASH(C@SLASH) = '/'-
     1122     1866        L@STAR = '*'-
     1123     1867        L@STATEMENTS(C@STATEMENTS) = 'ST/ATEMENTS'-
     1124     1868        L@STEP(C@STEP) = 'S/TEP'-
     1125     1869        L@SUBS = 'S/UBSTITUTE'-
     1126     1870        L@SUBSTATEMENTS(C@SUBSTATEMENTS) = 'SU/BSTATEMENTS'-
     1127     1871        L@TAB(M@INDIRECT) = '#011'-
     1128     1872        L@TAPE(C@TAPE) = 'T/APE'-
     1129     1873        L@TEST(C@TEST) = 'T/EST'-
     1130     1874        L@TO(C@ON) = 'TO'-
     1131     1875        L@TRANSFER(C_TT) = 'T/RANSFERS'-
     1132     1876        L@TRAP(C@TRAP) = 'T/RAP'-
     1133     1877        L@TRUE(C@TRUE) = ( 'T/RUE'- | '.TRUE.'- )
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            34   
     1134     1878        L@TYPE(C@TYPE) = 'T/YPE'-
     1135     1879        L@U(C@USER) = 'U/SER'-
     1136     1880        L@UC(C@ME) = 'U/C'-
     1137     1881        L@UMON = 'M/ON'-
     1138     1882        L@UNDER = 'U/NDER'-
     1139     1883        L@UNFC (C@UNFC) = 'C'-
     1140     1884        L@UNFO (C@UNFO) = 'O'-
     1141     1885        L@UPARROW(M@PREV) = '^'-
     1142     1886        L@USER = 'U/SER'-
     1143     1887        L@UTS = 'UTS'-
     1144     1888        L@VARS(C@VARS) = 'V/ARIABLES'-
     1145     1889        L@X0(T@X0) = ['X'-] '0'-
     1146     1890        L@X1(T@X1) = ['X'-] '1'-
     1147     1891        L@X2(T@X2) = ['X'-] '2'-
     1148     1892        L@X3(T@X3) = ['X'-] '3'-
     1149     1893        L@X4(T@X4) = ['X'-] '4'-
     1150     1894        L@X5(T@X5) = ['X'-] '5'-
     1151     1895        L@X6(T@X6) = ['X'-] '6'-
     1152     1896        L@X7(T@X7) = ['X'-] '7'-
     1153     1897        L@X@T(C@X) = 'X'-
     1154     1898        L@XDEL(C@XDELTA) = 'X/DELTA'-
     1155     1899        L_# = '#'-
     1156     1900        L_ABBREV = 'AB/BREVIATE'-
     1157     1901        L_ACTIVE = 'AC/TIVE'-
     1158     1902        L_ALIB = 'ALI/B'-
     1159     1903        L_ALTVAR = ( 'AL/TERNATE' | 'A/LTERNATE'- ) 'V/ARIABLES'-
     1160     1904        L_ANLZ = 'AN/LZ'-
     1161     1905        L_AT = 'A/T'-
     1162     1906        L_BREAK = 'B/REAK'-
     1163     1907        L_BY = 'B/Y'-
     1164     1908        L_BYPASS = 'BY/PASS'-
     1165     1909        L_CACHE = 'CA/CHE'-
     1166     1910        L_CALL = 'C/ALL'-
     1167     1911        L_CALLS = 'CALLS'-
     1168     1912        L_COPY = 'C/OPY'-
     1169     1913        L_CRASH = 'CR/ASH'-
     1170     1914        L_DBOOT = 'DB/OOT'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            35   
     1171     1915        L_DEF = 'DE/FINE'-
     1172     1916        L_DEBUG = 'DEB/UG'-
     1173     1917        L_DELETE = 'DEL/ETE'-
     1174     1918        L_DIC = 'DIC'-
     1175     1919        L_DISPLAY = 'D/ISPLAY'-
     1176     1920        L_DLCT = 'DLCT'-
     1177     1921        L_DO = 'DO'-
     1178     1922        L_DOUBLE = 'D/OUBLE'-
     1179     1923        L_DUMP = 'DU/MP'-
     1180     1924        L_ECHO = 'EC/HO'-
     1181     1925        L_END = 'EN/D'-
     1182     1926        L_EOM = 'EO/M'-
     1183     1927        L_EQUALS = '='-
     1184     1928        L_ERRFID = 'ERR/FID'-
     1185     1929        L_EVAL = 'E/VALUATE'-
     1186     1930        L_EXIT = 'EX/IT'-
     1187     1931        L_FEP = 'F/EP'-
     1188     1932        L_FIND = 'F/IND'-
     1189     1933        L_FORMAT = 'FO/RMAT'-
     1190     1934        L_G1 = 'G/HOST'- [ '1'- ]
     1191     1935        L_GOTO = 'G/O'-
     1192     1936        L_HISTORY = 'H/ISTORY'-
     1193     1937        L_IF = 'IF'-
     1194     1938        L_IGNORE = 'IG/NORE'-
     1195     1939        L_INACTIVE = 'IN/ACTIVE'-
     1196     1940        L_KEEP = 'KE/EP'-
     1197     1941        L_KILL = 'K/ILL'-
     1198     1942        L_LET = 'L/ET'-
     1199     1943        L_LIST = 'LI/ST'-
     1200     1944        L_STOP = 'STOP'-
     1201     1945        L_MACTIVE = 'MA/CTIVE'-
     1202     1946        L_MINI = 'MINI'-
     1203     1947        L_MODIFY = 'M/ODIFY'-
     1204     1948        L_MLCT = 'MLCT'-
     1205     1949        L_NAME = 'NA/ME'-
     1206     1950        L_NODE = 'N/ODE'-
     1207     1951        L_NODES = 'NODES'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            36   
     1208     1952        L_NWARN = 'NWARN'-
     1209     1953        L_ON = 'O/N'-
     1210     1954        L_OUTPUT = 'OU/TPUT'-
     1211     1955        L_PLUGH = 'PL/UGH'-
     1212     1956        L_PMD = 'PMD'-
     1213     1957        L_PROMPT = 'PRO/MPT'-
     1214     1958        L_PROTECT = 'PROT/ECT'-
     1215     1959        L_QUIT = 'Q/UIT'-
     1216     1960        L_RANGE = 'RA/NGE'-
     1217     1961        L_RBRACE = '}'-
     1218     1962        L_RBRACKET = ']'-
     1219     1963        L_READ = 'R/EAD'-
     1220     1964        L_REPORT = 'REP/ORT'-
     1221     1965        L_RUM(SUCC) = 'RU/M'- [ 'SEY'- ]
     1222     1966        L_SAD = 'SAD'-
     1223     1967        L_SAVE = 'SA/VE'-
     1224     1968        L_SCHEMA = 'SC/HEMA'-
     1225     1969        L_SECTION = 'S/ECTION'-
     1226     1970        L_SELCHAN = 'SE/LECT'- 'C/HANNEL'-
     1227     1971        L_SHOW = 'SH/OW'-
     1228     1972        L_SILENT = 'SI/LENT'-
     1229     1973        L_SLASH = '/'-
     1230     1974        L_STATUS = 'STAT/US'
     1231     1975        L_STEP = 'S/TEP'-
     1232     1976        L_STORE = 'STO/RE'-
     1233     1977        L_SYNTAX = 'SY/NTAX'-
     1234     1978        L_T = 'T/RACE'-
     1235     1979        L_TBOOT = 'TB/OOT'-
     1236     1980        L_TRAP = 'TRAP'-
     1237     1981        L_TSA = 'TSA'-
     1238     1982        L_UNFID = 'UNF/ID'-
     1239     1983        L_UNSHARE = 'UNSH/ARE'-
     1240     1984        L_UNSILENT = 'UN/SILENT'-
     1241     1985        L_UPDATE = 'UP/DATE'-
     1242     1986        L_USE = 'U/SE'-
     1243     1987        L_WAIT = 'WA/IT'-
     1244     1988        L_WHEN = 'W/HEN'-
PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            37   
     1245     1989        L_WORD = 'W/ORD'-
     1246     1990        L_XCON = 'XC/ON'-
     1247     1991        L_XEQ = 'X/EQ'-
     1248     1992        PMD@AUTO(P@AUTO) = 'AU/TO'-
     1249     1993        PMD@ALL(P@ALL) = 'AL/L'-
     1250     1994        PMD@COMMON(P@COMMON) = 'CO/MMON'-
     1251     1995        PMD@DS1(P@AUTO) = 'DS1'-
     1252     1996        PMD@DS2(P@COMMON) = 'DS2'-
     1253     1997        PMD@DS3(P@DS3) = 'DS3'-
     1254     1998        PMD@DS4(P@DS4) = 'DS4'-
     1255     1999        PMD@DS5(P@DS5) = 'DS5'-
     1256     2000        PMD@DS6(P@DS6) = 'DS6'-
     1257     2001        PMD@DS7(P@DS7) = 'DS7'-
     1258     2002        PMD@DS8(P@DS8) = 'DS8'-
     1259     2003        PMD@DS(P@DS) = 'DS'-
     1260     2004        PMD@DATA(P@DATA) = 'DA/TA'-
     1261     2005        PMD@DCBS(P@DCBS) = 'DC/BS'-
     1262     2006        PMD@DD(P@DD) = 'D/YNAMIC_'- 'D/ATA'-
     1263     2007        PMD@ISR(P@ISR) = 'IS/R'-
     1264     2008        PMD@JIT(P@JIT) = 'JI/T'-
     1265     2009        PMD@PLUGH(P@PLUGH) = 'PL/UGH'-
     1266     2010        PMD@PROCEDURE(P@PROCEDURE) = 'PR/OCEDURE'-
     1267     2011        PMD@ROSEG(P@ROSEG) = 'RO/SEG'-
     1268     2012        PMD@TCB(P@TCB) = 'TC/B'-
     1269     2013        SEMICOLON(C@SEMICOLON) = ';'

PARTRGE version E04  Source listing      14:04:49.80 JUL 29 '97 DDN_NODES_D                            38   
--  Include file information  --

   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.

PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            39   
AFID1               945     951*
AFID2               945     952*
ANLZ1               945     948*
ANLZ2               945     949*
ANLZ3               945     950*
ARGS               1287    1289    1290    1290    1291    1293*
ARITHOP             972     973     998     999*
B#B                1547    1554    1555*
B@B                1547    1550    1551*
BASED              1305    1330*
BASED_AUTODEC      1300    1325*
BASED_AUTOINC      1301    1326*
BASED_INDEXED      1296    1319*
BASED_INDEXED_AUTODEC      1293    1313*
BASED_INDEXED_AUTOINC      1294    1315*
BASED_INDIRECT_INDEXED     1297    1321*
BASE_REL           1303    1328*
BASE_REL_IND       1298    1323*
BBKSLASHB           772     773*   1071    1073    1074    1082
BCOMMAB             933     934     942     945     969     969     970     971*   1017    1057    1084
                   1152    1180    1388    1418    1434    1438    1439    1525    1530    1531    1548
                   1552    1614
BEQUALSB           1031    1224    1225*   1439    1449
BPTRB              1039    1040    1041*   1065
B_1                1313    1315    1339    1340*
B_2                1313    1315    1339    1341*
B_3                1313    1315    1339    1342*
B_4                1339    1343*
B_5                1339    1344*
B_6                1339    1345*
B_7                1339    1346*
B_REG              1286    1319    1321    1323    1325    1326    1328    1330    1331    1336    1339*
CG                 1020    1024*
CG1                1024    1025*
CG2                1024    1026*
CMD_TERM            768     771     795     804     940     941     942     943     944     946     947
                    953    1008    1009    1010    1011    1012    1013    1019    1031    1053    1054
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            40   
                   1055    1056    1069    1075    1083    1085    1086    1089    1090    1091    1092
                   1093    1094    1095    1097    1098    1099    1100    1101    1102    1103    1104
                   1105    1106    1107    1108    1109    1110    1111    1112    1136    1139    1140
                   1141    1145    1146    1147    1148    1149    1150    1151    1175    1176    1177
                   1179    1186    1188    1224    1226    1227    1228    1229    1231    1232    1235
                   1236    1237    1366    1367    1368    1369    1371    1372    1373    1375    1377
                   1379    1380    1381    1382    1383    1384    1385    1387    1409    1410    1411
                   1412    1413    1415    1416    1417    1420    1422    1438    1450    1451    1452
                   1453    1454    1455    1456    1457    1458    1493    1494    1495    1501    1502
                   1505    1506    1507    1516    1517    1519    1520    1521    1522    1526    1529
                   1530    1531    1532    1562    1565    1566    1567    1568    1617*
CNR1                983    1582    1591*
CNR21              1593    1594*
CNR211_HOST        1594    1595*
CNR211_L6          1597    1598*
CNR22              1593    1596*
CNR2_HOST          1593*
CNR2_L6            1597*
CNR3               1585    1599*
CNR4_COBOL         1610*
CNR4_FORTRAN       1601*
CNR4_PL6           1613*
CNR5               1589    1614*
CNR6               1590    1615*
CNSNT_REF          1224    1564    1570    1582*
COMMENTS            816     828    1616*
COMPID             1422    1423*   1505
DD_BASE             983     985     986    1547    1548    1549    1550    1561    1588
DD_BASEBOTH        1554
DD_CNR2            1583
DD_CNR4            1586
DD_DUMP             865
DD_ECHO             866
DD_IGNORE           876
DD_INSTR            811    1113    1114    1135    1235    1238    1241    1503    1567
DD_INSTR_CONT      1240
DD_KEEP             878
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            41   
DD_L@AND           1006
DD_L@DIV           1004
DD_L@LSHIFT        1001
DD_L@MINUS          977    1000
DD_L@MULT          1003
DD_L@OR            1005
DD_L@PLUS           977     999
DD_L@RSHIFT        1002
DD_OUTPUT           885
DD_READ             896
DD_SYMBOLS          964    1220    1410
DD_SYMDEL          1051
DD_SYMLIST         1045    1046    1067    1068
DD_TRAP             907
DEBUG@             1028    1028    1029*
DEBUGU              950    1028    1028    1030*
DEBUG_CG           1015    1020*
DEBUG_FEP          1016    1028*
DEBUG_SYSID        1014    1027*
DECIMALS            767     768     834     928*    950     961     965     969     970     983     984
                    985     986    1007    1017    1027    1054    1221    1222    1260    1261    1262
                   1263    1268    1269    1418    1418    1419    1442    1443    1444    1445    1446
                   1447    1448    1449    1495    1530    1530    1531    1531    1547    1601    1604
                   1605    1609    1611    1611    1612    1613
DIRECT             1312    1337*
DIRECT_CMD          826     827     830     832     843*
DRANGE             1071    1073    1074    1082    1084*   1131
D_ACMDS             832*
D_ATREE             762*
D_CCMDS             830*
D_DCMDS             826*
D_MTREE             811*
ECHO1              1072    1083    1086    1087*   1379    1382    1456    1457    1458
ECHO2              1083    1086    1088*   1382
EXP                1317    1323    1324    1327    1328    1329    1332    1333    1334    1335    1337
                   1338*
EXPCON              997     998*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            42   
EXPREP              979     997*
FID8                938*   1021    1027
FIDS                936*   1025    1026    1030    1072    1092    1376    1379    1380    1416    1437
                   1453    1456    1457    1458
FIDSUC              937*   1073    1074
FIND1              1117    1118    1120    1121    1124    1125    1127    1128    1131*   1503    1504
FIND123I           1113    1115    1117*
FIND123V           1114    1116    1124*
FIND1IF            1096    1109*
FIND1N             1096    1101*
FIND1NIF           1096    1105*
FIND1S             1096    1097*
FIND2              1117    1119    1120    1122    1124    1126    1127    1129    1132*   1503    1504
FIND2X             1133*   1134    1135
FIND3I             1117    1118    1119    1135*
FIND3V             1124    1125    1126    1134*
FINDI3I            1097    1101    1105    1109    1113*
FINDI3V            1098    1102    1106    1110    1114*
FINDV3I            1099    1103    1107    1111    1115*
FINDV3V            1100    1104    1108    1112    1116*
FMT0                781    1638*
FMT1                793    1079    1619*
FMT10               784    1620*
FMT11               785    1621*
FMT12               786    1622*
FMT13               790    1080    1623*
FMT16               789    1624*
FMT17               788    1625*
FMT18               787    1078    1626*
FMT19               791    1627*
FMT2                774    1630*
FMT20               792    1628*
FMT21               783    1077    1629*
FMT3                775    1631*
FMT4                776    1076    1632*
FMT5                777    1633*
FMT6                778    1634*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            43   
FMT7                779    1635*
FMT8                780    1636*
FMT9                782    1637*
FMTSPEC             770     771     772*    796     801     802     803     804     811     812     815
                   1033    1058    1136    1146    1147    1148    1149    1150    1241    1368    1383
                   1411
FMTSPEC1            772     774*
FMTSPECD           1071    1076*   1082
FORT_DEC           1606    1607*
FORT_EXP           1603    1605*   1606
FORT_F             1607    1608    1609*
FORT_I             1603    1604*   1607
FORT_R1            1602    1603*
FORT_R2            1602    1606*
FORT_REAL          1601    1602*   1614    1614
FSPEC              1591    1592*
FSPEC1             1599    1600*
FSPECB             1592    1639*
FSPECC             1592    1600    1640*
FSPECEB            1592    1644*
FSPECO             1592    1641*
FSPECOF            1600    1642*
FSPECS              964    1376    1645*
FSPECX             1592    1600    1643*
HDIG                995*
HEXBOTH             996*
HEXIL               992*    996    1292    1366    1366    1455    1521    1597
HEXIL1              992     993*   1598
HEXNICE             994*    996
IFREL              1564    1569    1571*
IFREL1             1571    1573*
IFREL2             1572    1576*
IFSPEC              940     941     942     943     944     946     947     953    1008    1009    1010
                   1011    1012    1013    1019    1031    1053    1054    1055    1056    1069    1075
                   1083    1085    1086    1089    1090    1091    1092    1093    1094    1095    1105
                   1106    1107    1108    1109    1110    1111    1112    1136    1139    1140    1141
                   1145    1146    1147    1148    1149    1150    1151    1175    1176    1177    1179
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            44   
                   1186    1188    1224    1226    1227    1228    1229    1231    1232    1235    1236
                   1237    1366    1367    1368    1369    1371    1372    1373    1375    1377    1379
                   1380    1381    1382    1383    1384    1385    1387    1409    1410    1411    1412
                   1413    1415    1416    1417    1420    1422    1438    1450    1451    1452    1453
                   1454    1455    1456    1457    1458    1493    1494    1495    1501    1502    1505
                   1506    1507    1516    1517    1519    1520    1521    1522    1526    1532    1565
                   1566    1567    1568    1569*
IMO_VALUE          1304    1329*
INDEXED            1299    1324*
INDIRECT1          1310    1335*
INDIRECT_BASED     1306    1331*
INDIRECT_INDEXED   1295    1317*
INDTYPE             801     803     805*
INOF               1048    1049*
INST               1285    1286*
INSTR              1240*
INSTRF              770     771     796     813    1094    1241*
INSTR_ADSC         1250*
INSTR_BDSC         1251*
INSTR_DFLT         1272*
INSTR_EIS          1243*
INSTR_EIS_MF       1245    1246    1247    1249*
INSTR_L6           1285*
INSTR_MF0          1243    1245*
INSTR_MF1          1243    1246*
INSTR_MF2          1243    1247*
INSTR_MNEM         1240    1242*
INSTR_NDSC         1252*
INSTR_SDSC         1253*
INSTR_VDSC         1254*
INSTR_XTRA         1244    1244    1244    1248*
INSTR_ZERO         1255*
INST_G             1285    1289*
INST_IO            1285    1290*
INT_VECTOR         1309    1334*
K@ABBREVS          1190    1460    1646*
K@ABORT            1219    1369    1647*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            45   
K@ALL              1137    1193    1463    1648*
K@ALTVAR           1191    1461    1649*
K@ANLZ             1192    1462    1650*
K@ATS              1194    1464    1651*
K@BYPASS           1195    1465    1652*
K@CACHE            1196    1653*
K@CALLS            1219    1654*
K@COPY             1197    1466    1655*
K@DEBUG            1468    1656*
K@DEF              1220    1657*
K@DEFS             1199    1658*
K@DEFSHOW          1469    1659*
K@DELTA            1223    1660*
K@DIC              1200    1467    1661*
K@ECHO             1202    1470    1662*
K@EOM              1203    1471    1663*
K@EXIT             1219    1373    1664*
K@FORMAT           1204    1473    1665*
K@FPRGS            1472    1666*
K@IGNORE           1475    1667*
K@INTERPRETIVE     1205    1668*
K@KEEP             1474    1669*
K@NODES            1219    1670*
K@PROTECT          1207    1477    1671*
K@RANGE            1480    1672*
K@REPORT           1478    1673*
K@RUM              1208    1479    1674*
K@SAD              1209    1483    1675*
K@SAVES            1211    1484    1676*
K@SCHEMA           1210    1481    1677*
K@STATUS           1212    1485    1678*
K@STEP             1213    1486    1679*
K@SYMBOLS          1214    1680*
K@SYNTAX           1482    1681*
K@TRACE            1215    1488    1682*
K@TRAP             1487    1683*
K@USE              1489    1684*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            46   
K@WHENS            1216    1490    1685*
KEEP1              1186    1187*
KILL1              1188    1189*
KILL11             1206    1218*   1476
KILL111            1218    1219*
KILL12             1198    1220*
KILL13              941    1176    1217    1221*   1226    1491    1493    1520    1522    1529
KILL131            1221    1222*
KILLDELTA          1201    1223*
KTI@ALL            1151    1174    1175    1177    1178    1179    1517    1518    1519    1686*
KTI@ARITHMETIC     1152    1175    1184    1687*
KTI@BREAK          1153    1181    1688*
KTI@COMMAND        1154    1689*
KTI@DERAIL         1155    1690*
KTI@DIVIDE_CHECK   1156    1691*
KTI@ERROR          1157    1692*
KTI@EVENT          1158    1180    1693*
KTI@FAULT_TAG      1159    1694*
KTI@IPR            1160    1695*
KTI@LOCKUP         1161    1696*
KTI@MCL            1183    1697*
KTI@MEMORY         1162    1698*
KTI@MME            1163    1699*
KTI@MONITOR        1164    1700*
KTI@NONE           1151    1174    1175    1517    1518    1519    1701*
KTI@OVERFLOW       1165    1702*
KTI@PAGE           1166    1703*
KTI@PMME           1167    1704*
KTI@PROGRAMMED     1168    1705*
KTI@SEC_1          1171    1706*
KTI@SEC_2          1170    1707*
KTI@SEG            1169    1708*
KTI@TIMER          1172    1709*
KTI@TRAP           1185    1710*
KTI@XCON           1173    1182    1711*
KTIFNAME           1179    1180*   1518    1519
KTINAME            1151    1152*   1177    1517
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            47   
L@$AS              1596    1712*
L@$LS              1596    1713*
L@$PS              1596    1714*
L@@                1551    1715*
L@AARD             1548    1716*
L@AD               1279    1717*
L@AL               1275    1718*
L@ALL              1019    1144    1187    1227    1432    1524    1719*
L@ALTRETURN         942    1720*
L@AND              1721*
L@ANDC             1722*
L@AR               1284    1723*
L@ASCII            1070    1081    1726*
L@ASDT             1560    1724*
L@ASL              1553    1725*
L@ATTACHMENT       1528    1727*
L@AU               1275    1728*
L@BANG             1240    1729*
L@BF               1559    1816*
L@BKSLASH           773    1730*
L@CALL@T           1508    1731*
L@CARDS            1421    1732*
L@CC               1423    1733*
L@CI               1279    1734*
L@CLEAR            1143    1735*
L@COBOL            1424    1736*
L@COLON             958     963    1052    1737*
L@COMMA             971    1246    1247    1248    1282    1593    1738*
L@COMMAH           1256    1257    1258    1259    1264    1265    1266    1267    1272    1739*
L@COPY             1440    1740*
L@CR               1421    1741*
L@CURRENT          1534    1742*
L@DASH             1743*
L@DASH@TO          1222    1744*
L@DEFAULT          1433    1745*
L@DI               1280    1746*
L@DIC              1280    1747*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            48   
L@DIV              1748*
L@DIVC             1749*
L@DL               1275    1751*
L@DORE             1605    1750*
L@DU               1275    1752*
L@EBCDIC           1070    1753*
L@EJECT            1070    1081    1754*
L@ENTDEFS          1367    1755*
L@EQGREAT          1574    1756*
L@EQLESS           1574    1757*
L@EQUALS           1574    1758*
L@EQUALS1          1576    1759*
L@EVAL             1136    1665    1760*
L@F                1279    1761*
L@FALSE            1615    1762*
L@FAULTS           1186    1763*
L@FD               1559    1815*
L@FORTRAN          1426    1764*
L@FPL              1425    1765*
L@FPRG             1766*
L@FROM             1131    1767*
L@GMAP             1427    1768*
L@GREATEQ          1573    1769*
L@GREATEQ1         1577    1770*
L@GREATER          1575    1771*
L@GREATER1         1578    1772*
L@GRLESS           1573    1773*
L@HOST             1139    1174    1178    1518    1558    1774*
L@I                1281    1775*
L@IC               1275    1776*
L@ICP              1553    1777*
L@ID               1281    1778*
L@IDB              1553    1779*
L@IDC              1281    1780*
L@INACTIVE          953    1370    1372    1374    1377    1563    1781*
L@INDIRECT          809     824    1146    1782*
L@INDIRECT_LEFT     807     822    1149    1783*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            49   
L@INDIRECT_PTR      805     820    1147    1784*
L@INDIRECT_RIGHT    808     823    1150    1785*
L@INDIRECT_SHORTPTR         806     821    1148    1863*
L@INOF             1049    1786*
L@INPUT            1440    1787*
L@INSTRUCTIONS     1496    1788*
L@INTO             1087    1789*
L@KEEP              942    1790*
L@LBRACE            799     818    1383    1791*
L@LBRACKET          798     818    1383    1792*
L@LESS             1575    1793*
L@LESS1            1580    1794*
L@LESSEQ           1573    1795*
L@LESSEQ1          1579    1796*
L@LESSGR           1574    1797*
L@LF                796     817    1368    1800*
L@LIBRARY          1525    1798*
L@LINE             1435    1799*
L@LONG             1070    1081    1801*
L@LP               1088    1802*
L@LPAREN            967    1050    1233    1238    1249    1386    1437    1614    1803*
L@LSHIFT           1804*
L@LSHIFTC          1805*
L@LSMON            1553    1806*
L@LVL              1561    1807*
L@ME               1088    1421    1808*
L@MINUS             978     986    1594    1595    1598    1809*
L@MINUSC           1810*
L@MODIFY           1136    1665    1811*
L@MON              1187    1812*
L@MONENT           1559    1813*
L@MONIS            1559    1814*
L@MORE             1144    1817*
L@MULT             1818*
L@MULTC            1819*
L@N                1275    1820*
L@NEXT              817    1368    1821*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            50   
L@NO               1088    1822*
L@NONE             1018    1187    1823*
L@NOT              1101    1105    1824*
L@NOTEQ            1573    1825*
L@NOTEQ1           1581    1826*
L@NUTS             1439    1827*
L@OFF@T            1509    1828*
L@OFFSET           1434    1829*
L@ON               1087    1830*
L@ON@T             1510    1831*
L@ONE              1500    1832*
L@OPEN              818    1383    1833*
L@OR               1834*
L@ORC              1835*
L@OVER             1087    1836*
L@PARAGRAPHS       1497    1511    1839*
L@PASCAL           1428    1837*
L@PATCH            1421    1838*
L@PERIOD            987     992    1047    1607    1608    1840*
L@PERIODD          1418    1419    1611    1612    1841*
L@PL1              1429    1842*
L@PL6              1430    1843*
L@PLUS              978    1844*
L@PLUSC            1845*
L@PR               1284    1846*
L@PREV              819    1411    1847*
L@PROGRAM          1525    1848*
L@PT@              1549    1849*
L@PTR              1041    1850*
L@QL               1275    1851*
L@QU               1275    1852*
L@REAL             1548    1853*
L@RETURN            942    1854*
L@RPAREN            967    1050    1233    1238    1249    1386    1437    1614    1855*
L@RPG              1431    1856*
L@RSHIFT           1857*
L@RSHIFTC          1858*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            51   
L@SC               1280    1859*
L@SCR              1280    1860*
L@SCREECH          1187    1861*
L@SD               1279    1862*
L@SILENT            953    1370    1372    1374    1377    1508    1514    1515    1563    1864*
L@SLASH             801     802     803     804    1865*
L@STAR             1274    1278    1866*
L@STATEMENTS       1499    1513    1867*
L@STEP             1138    1868*
L@SUBS             1134    1135    1869*
L@SUBSTATEMENTS    1498    1512    1870*
L@TAB               800     824    1146    1871*
L@TAPE             1421    1872*
L@TEST             1440    1873*
L@TO               1087    1874*
L@TRANSFER         1514    1875*
L@TRAP             1138    1876*
L@TRUE             1615    1877*
L@TYPE             1436    1878*
L@U                1553    1879*
L@UC               1421    1880*
L@UMON             1547    1881*
L@UNDER            1132    1133    1882*
L@UNFC             1520    1883*
L@UNFO             1520    1884*
L@UPARROW           797     819    1411    1885*
L@USER             1550    1554    1556    1886*
L@UTS              1439    1887*
L@VARS             1367    1888*
L@X0               1276    1889*
L@X1               1276    1890*
L@X2               1276    1891*
L@X3               1276    1892*
L@X4               1276    1893*
L@X5               1276    1894*
L@X6               1276    1895*
L@X7               1276    1896*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            52   
L@X@T              1372    1508    1897*
L@XDEL             1548    1898*
LBL_ARRAY           966     967*
LINESPEC           1416    1418*
L_#                1007    1555    1899*
L_ABBREV            940    1900*
L_ACTIVE            941    1901*
L_ALIB              942    1902*
L_ALTVAR            943    1903*
L_ANLZ              945    1904*
L_AT                953    1905*
L_BREAK            1008    1906*
L_BY               1496    1907*
L_BYPASS           1009    1908*
L_CACHE            1010    1909*
L_CALL             1370    1500    1910*
L_CALLS            1372    1911*
L_COPY             1011    1912*
L_CRASH            1012    1913*
L_DBOOT            1013    1914*
L_DEBUG            1014    1916*
L_DEF              1031    1915*
L_DELETE           1053    1917*
L_DIC              1055    1918*
L_DISPLAY          1056    1073    1919*
L_DLCT             1069    1920*
L_DO               1054    1921*
L_DOUBLE           1230    1922*
L_DUMP             1070    1081    1923*
L_ECHO             1085    1086    1924*
L_END              1089    1925*
L_EOM              1091    1926*
L_EQUALS            770     771    1225    1927*
L_ERRFID           1092    1928*
L_EVAL             1093    1929*
L_EXIT             1095    1930*
L_FEP               950    1931*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            53   
L_FIND             1096    1932*
L_FORMAT           1136    1933*
L_G1               1557    1934*
L_GOTO             1137    1935*
L_HISTORY          1142    1936*
L_IF               1569    1937*
L_IGNORE           1151    1174    1938*
L_INACTIVE         1176    1939*
L_KEEP             1177    1178    1186    1940*
L_KILL             1188    1941*
L_LET              1224    1942*
L_LIST             1226    1943*
L_MACTIVE          1945*
L_MINI             1229    1946*
L_MLCT             1366    1948*
L_MODIFY           1230    1234    1947*
L_NAME             1367    1949*
L_NODE             1374    1546    1950*
L_NODES            1377    1951*
L_NWARN            1239    1952*
L_ON               1218    1369    1370    1372    1373    1374    1377    1953*
L_OUTPUT           1378    1382    1954*
L_PLUGH            1384    1955*
L_PMD              1386    1956*
L_PROMPT           1410    1957*
L_PROTECT          1409    1958*
L_QUIT             1412    1959*
L_RANGE            1415    1960*
L_RBRACE            767     768    1961*
L_RBRACKET          767     768    1962*
L_READ             1416    1420    1963*
L_REPORT           1422    1964*
L_RUM              1437    1965*
L_SAD              1450    1966*
L_SAVE             1451    1967*
L_SCHEMA           1452    1968*
L_SECTION          1559    1969*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            54   
L_SELCHAN          1455    1970*
L_SHOW             1456    1971*
L_SILENT           1493    1972*
L_SLASH             794     795    1973*
L_STATUS           1494    1974*
L_STEP             1495    1975*
L_STOP             1227    1944*
L_STORE            1501    1976*
L_SYNTAX           1505    1977*
L_T                1506    1978*
L_TBOOT            1516    1979*
L_TRAP             1517    1518    1980*
L_TSA              1521    1981*
L_UNFID            1520    1982*
L_UNSHARE          1523    1983*
L_UNSILENT         1522    1984*
L_UPDATE           1527    1985*
L_USE              1532    1986*
L_WAIT             1562    1987*
L_WHEN             1563    1988*
L_WORD             1230    1989*
L_XCON             1566    1990*
L_XEQ              1567    1991*
MASK               1287    1289    1292*
MATYPE              811     812     817*
MODIFY1            1234    1235*
MODIFY2            1235    1236    1238*
MODIFY3            1230    1231*
MODIFY4            1231    1233*
M_1                1357    1358*
M_2                1357    1359*
M_3                1357    1360*
M_REG              1286    1357*
NA_EVAL             763     770*
NA_MODIFY           764     794*
NA_NPOI             765     796*
NA_SLASH            766     801*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            55   
NA_STEP             762     767*
NF_IGNORE          1174*
NF_KEEP            1178*
NF_TRAP            1518*
NT_EVAL             771*    925
NT_MODIFY           795*    926
NT_SLASH            803*    918
NT_STEP             768*    924
NU_DUMP            1070*
NU_ECHO            1085*
NU_IGNORE          1151*
NU_KEEP            1177*
NU_OUTPUT          1378*
NU_READ            1416*
NU_TRAP            1517*
NVREF_LET          1056    1057*
NWARN_OPT          1231    1235    1236    1239*
NX_DUMP            1081*
NX_ECHO            1086*
NX_KEEP            1186*
NX_OUTPUT          1382*
NX_READ            1420*
N_ABBREV            848     940*
N_ACTIVE            849     941*
N_ALIB              850     942*
N_ALTVAR            851     943*
N_ANLZ              852     945*
N_AT                834     953*
N_AT11              953    1007*   1564
N_BREAK             854    1008*
N_BYPASS            853    1009*
N_CACHE             855    1010*
N_COPY              856    1011*
N_CRASH            1012*
N_DBOOT             857    1013*
N_DEBUG             858    1014*
N_DEF               860    1031*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            56   
N_DELETE           1053*
N_DIC               862    1055*
N_DISPLAY           864    1056*
N_DLCT              863    1069*
N_DO                861    1054*
N_END               867    1089*
N_EOM               868    1091*
N_ERRFID            869    1092*
N_EVAL              871    1093*
N_EXIT              870    1095*
N_FIND              873    1096*
N_FORMAT            872    1136*
N_GOTO              874    1137*
N_HISTORY           875    1142*
N_INACTIVE          877    1176*
N_INDIRECT          923    1146*
N_INDIRECT_LEFT     921    1149*
N_INDIRECT_PTR      919    1147*
N_INDIRECT_RIGHT    922    1150*
N_INDIRECT_SHORTPTR         920    1148*
N_KILL              879    1188*
N_LET               882    1224*
N_LIST              880    1226*
N_MINI              847    1229*
N_MLCT              844    1366*
N_MODIFY            846    1234*
N_MODIFYDW          845    1230*
N_NAME              883    1367*
N_NEXT              884    1368*
N_OA                837    1369*
N_OC                838    1370*
N_OE                840    1373*
N_ONCALLS           839    1372*
N_ONN               835    1374*
N_ONNODES           836    1377*
N_OPEN              886    1383*
N_PLUGH             887    1384*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            57   
N_PMD               888    1386*
N_PREV              891    1411*
N_PROMPT            890    1410*
N_PROTECT           889    1409*
N_QUIT              892    1412*
N_RANGE             893    1415*
N_REPORT            895    1422*
N_RUM               894    1437*
N_SAD               899    1450*
N_SAVE              841    1451*
N_SCHEMA            898    1452*
N_SELCHAN           897    1455*
N_SHOW              901    1456*
N_SILENT            900    1493*
N_STATUS            903    1494*
N_STEP              905    1495*
N_STOP              881    1227*
N_STORE             904    1501*
N_SYNTAX            902    1505*
N_T                 909    1506*
N_TBOOT             906    1516*
N_TSA               908    1521*
N_UNFID             910    1520*
N_UNSHARE           911    1523*
N_UNSILENT          912    1522*
N_UPDATE            913    1527*
N_USE               914    1532*
N_WAIT              915    1562*
N_WHEN              842    1563*
N_XCON              916    1566*
N_XEQ               917    1567*
OCT1               1250    1252    1253    1255    1256*
OCT1C              1248    1249    1256    1260*
OCT2               1249    1251    1253    1257*
OCT2C              1257    1261*
OCT3               1249    1251    1252    1253    1258*
OCT3C              1258    1262*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            58   
OCT4               1252    1259*
OCT4C              1259    1263*
OCTIL               987*    991    1260    1261    1262    1263    1273    1593
OCTIL1              988*   1595
OCTILBOTH           991*
OCTILNICE           989*    991
ODIG                990*   1283    1594
OTAG_1             1251    1254    1264*
OTAG_1C            1264    1268*
OTAG_2             1250    1252    1265*
OTAG_2C            1265    1269*
OUTPUT1            1378    1379*
PMD@ALL            1389    1993*
PMD@AUTO           1388    1992*
PMD@COMMON         1390    1994*
PMD@DATA           1400    2004*
PMD@DCBS           1401    2005*
PMD@DD             1402    2006*
PMD@DS             1399    2003*
PMD@DS1            1391    1995*
PMD@DS2            1392    1996*
PMD@DS3            1393    1997*
PMD@DS4            1394    1998*
PMD@DS5            1395    1999*
PMD@DS6            1396    2000*
PMD@DS7            1397    2001*
PMD@DS8            1398    2002*
PMD@ISR            1403    2007*
PMD@JIT            1404    2008*
PMD@PLUGH          1405    2009*
PMD@PROCEDURE      1406    2010*
PMD@ROSEG          1407    2011*
PMD@TCB            1408    2012*
PMDNAME            1386    1387    1388*
PORM                974     975     976     977*
PORMX               978*   1588    1601    1602    1605    1610    1613
POS1                954     955     959*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            59   
POS11               959     960*
POS11L              956     961*
POSITION            953     954*   1139    1140    1140    1452    1560
POSITIONL           956*   1035    1061
POSITIONS           957*   1037    1063
POSITIONV           955*   1034    1060
PQLIST1S           1040    1043*
PQLIST1X           1039    1042*
PQLIST1_LET        1065    1066*
PQLISTS            1040*   1052    1052
PQLISTX            1038    1039*
PQLIST_LET         1064    1065*
PR                 1250    1251    1252    1253    1254    1272    1282*
PR1                1282    1283*
PR2                1283    1284*
QTSTRINGS           935*    964    1021    1072    1083    1376    1410    1591    1599
QUAL                960     961     962*   1038    1064    1371
QUAL1               962     963*
QUAL3               954     955     958*
READ1              1420    1421*
REGISTER           1311    1336*
REL_DIRECT         1307    1332*
REL_INDIRECT       1302    1327*
REPORT1            1422    1432*
RES                1090    1174    1178    1223    1228    1413    1414*   1492    1518    1558
RUM1               1437    1438    1439*
RUMBUF             1441    1449*
RUMUTS             1439    1442*
R_1                1314    1316    1318    1320    1322    1324    1348    1349*
R_2                1314    1316    1318    1320    1322    1324    1348    1350*
R_3                1314    1316    1318    1320    1322    1324    1348    1351*
R_4                1348    1352*
R_5                1348    1353*
R_6                1348    1354*
R_7                1348    1355*
R_REG              1286    1336    1348*
SDO                 979     983*    998
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            60   
SDOD                980     984*
SEMICOLON          1617    2013*
SHORT_PREL         1308    1333*
SHOW1              1457    1459*
SHOWFPRG           1458    1492*
SIMBLE              943     963     964*    966     983    1031    1047    1048    1371    1508    1514
                   1520
SIMBLE1            1375    1376*   1546
SIMEXP              972     974     979*   1042    1084    1132    1133
SIMEXPD             975     980*
SIMEXPDO            973     976     981*   1066
SIMEXPMDO           982*   1043
SIMX                957     959     969     974*
SIMXD               967     975*
SIMXDO              976*
STATION            1020    1021*
STEP1              1495    1496*
STEP2              1495    1500*
STMT_SPEC           960     965*
STMT_SPEC1          965     966*
STORED_CMD          827     834*
STOREI             1502    1503*
STOREV             1501    1504*
SUBREF             1045    1046    1050*   1067
SUBREF1            1050    1051*
SUBSTMT             960     961     968*
SUBSTMT1            968     969*
SUBSTMT2            968     972*   1045
SUBSTMT2DO          973*   1068
SYMBOLS             929*   1286    1289    1290
SYMBOL_CC           931*
SYMBOL_COBOL        932*
SYMBOL_PL6          930*
SYMDEL_COBOL        933*
SYMDEL_PL6          934*
SYMLIST            1047*
SYMLISTC           1048*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            61   
S_1                1362    1363*
S_2                1362    1364*
S_3                1362    1365*
S_REG              1286    1336    1362*
TAG                1268    1269    1270    1271    1272    1273*
TAG1               1273    1274*
TAG2               1273    1277*
TAG3               1273    1278*
TAG4               1273    1279*
TAG_2              1254    1266*
TAG_2C             1266    1270*
TAG_4              1249    1267*
TAG_4C             1267    1271*
TM                 1274    1275*   1277    1278
TP                 1020    1022*
TPACCT             1022    1023*
TR1                1506    1508*
TR2                1507    1509*
TR3                1507    1515*
ULREF              1051    1052*
ULSTYPE            1550    1552*   1554    1556
ULSTYPE1           1552    1553*
UPDATE1            1528    1529*
UPDATE2            1527    1530*
UPDATE3            1527    1531*
USE08              1537    1546*
USE09              1536    1547*
USE1               1532    1533*
USE10              1535    1548*
USE11              1538    1549*
USE12              1539    1550*
USE13              1540    1554*
USE14              1541    1556*
USE15              1542    1557*
USE16              1545    1558*
USE17              1533    1559*
USE18              1543    1560*
PARTRGE version E04  Cross Reference     14:05:30.12 JUL 29 '97 DDN_NODES_D                            62   
USE19              1544    1561*
VAREXPS            1043    1046*
VAREXPX            1042    1045*
VAREXP_LET         1066    1067*
VREF                770     771     794     795     796     814    1033*   1093    1230    1234
VREF11_LET         1062    1064*
VREF1_LET          1058    1059    1060*
VREFX               812    1031    1032*   1071    1073    1074    1081    1115    1116    1131    1134
                   1231    1233    1236    1238    1250    1251    1252    1253    1254    1255    1272
                   1338    1384    1504    1564    1568    1569
VREFX1             1032    1033    1034*
VREFX11            1036    1038*
VREFX_LET          1059*   1224
VREF_LET           1057    1058*
XDO                 981     985*   1144    1415    1450    1593
XMDO                982     986*

PARTRGE version E04  Symbol Map          14:05:30.12 JUL 29 '97 DDN_NODES_D                            63   
  602 AFID1        603 AFID2        565 ANLZ1        570 ANLZ2        572 ANLZ3       3402 ARGS
 1051 ARITHOP     5251 B#B         5227 B@B         3551 BASED       3520 BASED_AUTODEC
 3524 BASED_AUTOINC                3473 BASED_INDEXED                3432 BASED_INDEXED_AUTODEC
 3453 BASED_INDEXED_AUTOINC        3500 BASED_INDIRECT_INDEXED       3537 BASE_REL    3507 BASE_REL_IND
   50 BBKSLASHB    725 BCOMMAB     2575 BEQUALSB    1333 BPTRB       3621 B_1         3623 B_2
 3625 B_3         3627 B_4         3631 B_5         3633 B_6         3635 B_7         3611 B_REG
 1201 CG          1204 CG1         1216 CG2         5611 CMD_TERM    5436 CNR1        5461 CNR21
 5467 CNR211_HOST                  5503 CNR211_L6   5472 CNR22       5451 CNR2_HOST   5476 CNR2_L6
 5506 CNR3        5565 CNR4_COBOL  5515 CNR4_FORTRAN                 5570 CNR4_PL6    5573 CNR5
 5603 CNR6        5421 CNSNT_REF   5606 COMMENTS    4324 COMPID      1241 DEBUG@      1271 DEBUGU
 1137 DEBUG_CG    1226 DEBUG_FEP   1220 DEBUG_SYSID                   444 DECIMALS    3605 DIRECT
  321 DIRECT_CMD  1624 DRANGE       275 D_ACMDS        0 D_ATREE      271 D_CCMDS      247 D_DCMDS
  157 D_MTREE     1645 ECHO1       1652 ECHO2       3607 EXP         1046 EXPCON      1044 EXPREP
  470 FID8         466 FIDS         467 FIDSUC      2107 FIND1       2040 FIND123I    2065 FIND123V
 2021 FIND1IF     1762 FIND1N      1767 FIND1NIF    1736 FIND1S      2117 FIND2       2124 FIND2X
 2141 FIND3I      2131 FIND3V      2024 FINDI3I     2027 FINDI3V     2032 FINDV3I     2035 FINDV3V
 5701 FMT0        5617 FMT1        5622 FMT10       5625 FMT11       5627 FMT12       5632 FMT13
 5634 FMT16       5637 FMT17       5641 FMT18       5643 FMT19       5654 FMT2        5646 FMT20
 5651 FMT21       5657 FMT3        5662 FMT4        5665 FMT5        5667 FMT6        5672 FMT7
 5674 FMT8        5677 FMT9          45 FMTSPEC       54 FMTSPEC1    1567 FMTSPECD    5547 FORT_DEC
 5536 FORT_EXP    5563 FORT_F      5534 FORT_I      5531 FORT_R1     5542 FORT_R2     5523 FORT_REAL
 5443 FSPEC       5511 FSPEC1      5705 FSPECB      5707 FSPECC      5721 FSPECEB     5712 FSPECO
 5715 FSPECOF     5724 FSPECS      5717 FSPECX      1037 HDIG        1041 HEXBOTH     1031 HEXIL
 1034 HEXIL1      1035 HEXNICE     5364 IFREL       5377 IFREL1      5412 IFREL2      5354 IFSPEC
 3543 IMO_VALUE   3514 INDEXED     3576 INDIRECT1   3554 INDIRECT_BASED               3464 INDIRECT_INDEXED
  151 INDTYPE     1366 INOF        3316 INST        2741 INSTR       2750 INSTRF      3023 INSTR_ADSC
 3036 INSTR_BDSC  3213 INSTR_DFLT  2754 INSTR_EIS   3004 INSTR_EIS_MF                 3312 INSTR_L6
 2771 INSTR_MF0   2773 INSTR_MF1   2776 INSTR_MF2   2753 INSTR_MNEM  3052 INSTR_NDSC  3071 INSTR_SDSC
 3077 INSTR_VDSC  3001 INSTR_XTRA  3110 INSTR_ZERO  3337 INST_G      3344 INST_IO     3570 INT_VECTOR
 5727 K@ABBREVS   5732 K@ABORT     5735 K@ALL       5737 K@ALTVAR    5752 K@ANLZ      5755 K@ATS
 5757 K@BYPASS    5762 K@CACHE     5765 K@CALLS     5770 K@COPY      5773 K@DEBUG     5776 K@DEF
 6000 K@DEFS      6003 K@DEFSHOW   6006 K@DELTA     6011 K@DIC       6013 K@ECHO      6016 K@EOM
 6020 K@EXIT      6023 K@FORMAT    6034 K@FPRGS     6037 K@IGNORE    6042 K@INTERPRETIVE
 6047 K@KEEP      6052 K@NODES     6055 K@PROTECT   6060 K@RANGE     6063 K@REPORT    6066 K@RUM
 6075 K@SAD       6077 K@SAVES     6102 K@SCHEMA    6105 K@STATUS    6110 K@STEP      6113 K@SYMBOLS
 6116 K@SYNTAX    6121 K@TRACE     6124 K@TRAP      6127 K@USE       6131 K@WHENS     2460 KEEP1
 2473 KILL1       2530 KILL11      2534 KILL111     2541 KILL12      2545 KILL13      2552 KILL131
PARTRGE version E04  Symbol Map          14:05:30.12 JUL 29 '97 DDN_NODES_D                            64   
 2557 KILLDELTA   6134 KTI@ALL     6136 KTI@ARITHMETIC               6142 KTI@BREAK   6145 KTI@COMMAND
 6150 KTI@DERAIL  6153 KTI@DIVIDE_CHECK             6160 KTI@ERROR   6163 KTI@EVENT   6166 KTI@FAULT_TAG
 6172 KTI@IPR     6174 KTI@LOCKUP  6177 KTI@MCL     6201 KTI@MEMORY  6204 KTI@MME     6206 KTI@MONITOR
 6211 KTI@NONE    6214 KTI@OVERFLOW                 6220 KTI@PAGE    6223 KTI@PMME    6226 KTI@PROGRAMMED
 6232 KTI@SEC_1   6245 KTI@SEC_2   6253 KTI@SEG     6255 KTI@TIMER   6260 KTI@TRAP    6263 KTI@XCON
 2432 KTIFNAME    2321 KTINAME     6266 L@$AS       6270 L@$LS       6272 L@$PS       6274 L@@
 6276 L@AARD      6302 L@AD        6304 L@AL        6306 L@ALL       6310 L@ALTRETURN
 6314 L@AND       6316 L@ANDC      6323 L@AR        6332 L@ASCII     6325 L@ASDT      6330 L@ASL
 6335 L@ATTACHMENT                 6341 L@AU        6343 L@BANG      6727 L@BF        6345 L@BKSLASH
 6347 L@CALL@T    6352 L@CARDS     6355 L@CC        6357 L@CI        6361 L@CLEAR     6364 L@COBOL
 6367 L@COLON     6371 L@COMMA     6373 L@COMMAH    6375 L@COPY      6400 L@CR        6402 L@CURRENT
 6405 L@DASH      6407 L@DASH@TO   6414 L@DEFAULT   6417 L@DI        6421 L@DIC       6423 L@DIV
 6425 L@DIVC      6441 L@DL        6432 L@DORE      6443 L@DU        6445 L@EBCDIC    6450 L@EJECT
 6453 L@ENTDEFS   6456 L@EQGREAT   6460 L@EQLESS    6462 L@EQUALS    6464 L@EQUALS1   6466 L@EVAL
 6472 L@F         6474 L@FALSE     6505 L@FAULTS    6725 L@FD        6510 L@FORTRAN   6513 L@FPL
 6515 L@FPRG      6520 L@FROM      6523 L@GMAP      6526 L@GREATEQ   6530 L@GREATEQ1  6532 L@GREATER
 6534 L@GREATER1  6536 L@GRLESS    6540 L@HOST      6543 L@I         6545 L@IC        6547 L@ICP
 6551 L@ID        6553 L@IDB       6555 L@IDC       6557 L@INACTIVE  6561 L@INDIRECT  6563 L@INDIRECT_LEFT
 6566 L@INDIRECT_PTR               6571 L@INDIRECT_RIGHT             7126 L@INDIRECT_SHORTPTR
 6574 L@INOF      6603 L@INPUT     6606 L@INSTRUCTIONS               6613 L@INTO      6616 L@KEEP
 6621 L@LBRACE    6623 L@LBRACKET  6625 L@LESS      6627 L@LESS1     6631 L@LESSEQ    6633 L@LESSEQ1
 6635 L@LESSGR    6645 L@LF        6637 L@LIBRARY   6642 L@LINE      6647 L@LONG      6652 L@LP
 6654 L@LPAREN    6656 L@LSHIFT    6660 L@LSHIFTC   6665 L@LSMON     6667 L@LVL       6672 L@ME
 6674 L@MINUS     6676 L@MINUSC    6703 L@MODIFY    6706 L@MON       6710 L@MONENT    6720 L@MONIS
 6731 L@MORE      6734 L@MULT      6736 L@MULTC     6743 L@N         6745 L@NEXT      6750 L@NO
 6752 L@NONE      6755 L@NOT       6764 L@NOTEQ     6766 L@NOTEQ1    6770 L@NUTS      6773 L@OFF@T
 6775 L@OFFSET    7000 L@ON        7002 L@ON@T      7004 L@ONE       7006 L@OPEN      7011 L@OR
 7013 L@ORC       7020 L@OVER      7031 L@PARAGRAPHS                 7023 L@PASCAL    7026 L@PATCH
 7035 L@PERIOD    7037 L@PERIODD   7041 L@PL1       7043 L@PL6       7045 L@PLUS      7047 L@PLUSC
 7054 L@PR        7056 L@PREV      7061 L@PROGRAM   7064 L@PT@       7066 L@PTR       7070 L@QL
 7072 L@QU        7074 L@REAL      7077 L@RETURN    7102 L@RPAREN    7104 L@RPG       7106 L@RSHIFT
 7110 L@RSHIFTC   7115 L@SC        7117 L@SCR       7121 L@SCREECH   7124 L@SD        7130 L@SILENT
 7132 L@SLASH     7134 L@STAR      7136 L@STATEMENTS                 7142 L@STEP      7145 L@SUBS
 7151 L@SUBSTATEMENTS              7156 L@TAB       7160 L@TAPE      7163 L@TEST      7166 L@TO
 7170 L@TRANSFER  7174 L@TRAP      7177 L@TRUE      7210 L@TYPE      7213 L@U         7216 L@UC
 7220 L@UMON      7222 L@UNDER     7225 L@UNFC      7227 L@UNFO      7231 L@UPARROW   7233 L@USER
 7236 L@UTS       7240 L@VARS      7244 L@X0        7253 L@X1        7260 L@X2        7265 L@X3
PARTRGE version E04  Symbol Map          14:05:30.12 JUL 29 '97 DDN_NODES_D                            65   
 7272 L@X4        7277 L@X5        7304 L@X6        7311 L@X7        7316 L@X@T       7320 L@XDEL
  701 LBL_ARRAY   4254 LINESPEC    7323 L_#         7325 L_ABBREV    7331 L_ACTIVE    7334 L_ALIB
 7337 L_ALTVAR    7355 L_ANLZ      7360 L_AT        7362 L_BREAK     7365 L_BY        7367 L_BYPASS
 7372 L_CACHE     7375 L_CALL      7400 L_CALLS     7403 L_COPY      7406 L_CRASH     7411 L_DBOOT
 7417 L_DEBUG     7414 L_DEF       7422 L_DELETE    7425 L_DIC       7427 L_DISPLAY   7432 L_DLCT
 7435 L_DO        7437 L_DOUBLE    7442 L_DUMP      7445 L_ECHO      7450 L_END       7452 L_EOM
 7454 L_EQUALS    7456 L_ERRFID    7461 L_EVAL      7465 L_EXIT      7470 L_FEP       7472 L_FIND
 7475 L_FORMAT    7500 L_G1        7510 L_GOTO      7512 L_HISTORY   7515 L_IF        7517 L_IGNORE
 7522 L_INACTIVE  7526 L_KEEP      7531 L_KILL      7534 L_LET       7536 L_LIST      7544 L_MACTIVE
 7547 L_MINI      7555 L_MLCT      7552 L_MODIFY    7560 L_NAME      7563 L_NODE      7566 L_NODES
 7571 L_NWARN     7574 L_ON        7576 L_OUTPUT    7601 L_PLUGH     7604 L_PMD       7606 L_PROMPT
 7611 L_PROTECT   7614 L_QUIT      7617 L_RANGE     7622 L_RBRACE    7624 L_RBRACKET  7626 L_READ
 7631 L_REPORT    7634 L_RUM       7637 L_SAD       7641 L_SAVE      7644 L_SCHEMA    7647 L_SECTION
 7652 L_SELCHAN   7663 L_SHOW      7666 L_SILENT    7671 L_SLASH     7673 L_STATUS    7676 L_STEP
 7541 L_STOP      7701 L_STORE     7704 L_SYNTAX    7707 L_T         7712 L_TBOOT     7715 L_TRAP
 7720 L_TSA       7722 L_UNFID     7725 L_UNSHARE   7730 L_UNSILENT  7734 L_UPDATE    7737 L_USE
 7741 L_WAIT      7744 L_WHEN      7747 L_WORD      7752 L_XCON      7755 L_XEQ       3370 MASK
  231 MATYPE      2677 MODIFY1     2723 MODIFY2     2645 MODIFY3     2663 MODIFY4     3671 M_1
 3673 M_2         3675 M_3         3665 M_REG         30 NA_EVAL      101 NA_MODIFY    112 NA_NPOI
  124 NA_SLASH      12 NA_STEP     2353 NF_IGNORE   2413 NF_KEEP     4773 NF_TRAP       40 NT_EVAL
  105 NT_MODIFY    143 NT_SLASH      23 NT_STEP     1502 NU_DUMP     1627 NU_ECHO     2307 NU_IGNORE
 2402 NU_KEEP     4036 NU_OUTPUT   4236 NU_READ     4765 NU_TRAP     1435 NVREF_LET   2735 NWARN_OPT
 1575 NX_DUMP     1633 NX_ECHO     2444 NX_KEEP     4061 NX_OUTPUT   4273 NX_READ      472 N_ABBREV
  500 N_ACTIVE     506 N_ALIB       523 N_ALTVAR     541 N_ANLZ       604 N_AT        1062 N_AT11
 1067 N_BREAK     1073 N_BYPASS    1077 N_CACHE     1103 N_COPY      1107 N_CRASH     1113 N_DBOOT
 1117 N_DEBUG     1300 N_DEF       1411 N_DELETE    1423 N_DIC       1427 N_DISPLAY   1476 N_DLCT
 1415 N_DO        1656 N_END       1671 N_EOM       1675 N_ERRFID    1703 N_EVAL      1722 N_EXIT
 1726 N_FIND      2147 N_FORMAT    2162 N_GOTO      2224 N_HISTORY   2374 N_INACTIVE  2246 N_INDIRECT
 2273 N_INDIRECT_LEFT              2257 N_INDIRECT_PTR               2301 N_INDIRECT_RIGHT
 2265 N_INDIRECT_SHORTPTR          2465 N_KILL      2565 N_LET       2604 N_LIST      2627 N_MINI
 3711 N_MLCT      2672 N_MODIFY    2633 N_MODIFYDW  3723 N_NAME      3742 N_NEXT      3753 N_OA
 3761 N_OC        4005 N_OE        3773 N_ONCALLS   4013 N_ONN       4027 N_ONNODES   4071 N_OPEN
 4103 N_PLUGH     4116 N_PMD       4210 N_PREV      4177 N_PROMPT    4173 N_PROTECT   4221 N_QUIT
 4226 N_RANGE     4310 N_REPORT    4351 N_RUM       4457 N_SAD       4465 N_SAVE      4471 N_SCHEMA
 4505 N_SELCHAN   4513 N_SHOW      4612 N_SILENT    4620 N_STATUS    4624 N_STEP      2614 N_STOP
 4653 N_STORE     4703 N_SYNTAX    4710 N_T         4761 N_TBOOT     5036 N_TSA       5017 N_UNFID
 5051 N_UNSHARE   5043 N_UNSILENT  5070 N_UPDATE    5134 N_USE       5310 N_WAIT      5313 N_WHEN
PARTRGE version E04  Symbol Map          14:05:30.12 JUL 29 '97 DDN_NODES_D                            66   
 5331 N_XCON      5335 N_XEQ       3115 OCT1        3141 OCT1C       3122 OCT2        3144 OCT2C
 3127 OCT3        3147 OCT3C       3134 OCT4        3152 OCT4C       1015 OCTIL       1021 OCTIL1
 1026 OCTILBOTH   1022 OCTILNICE   1024 ODIG        3155 OTAG_1      3201 OTAG_1C     3162 OTAG_2
 3204 OTAG_2C     4041 OUTPUT1     7762 PMD@ALL     7757 PMD@AUTO    7764 PMD@COMMON 10011 PMD@DATA
10014 PMD@DCBS   10017 PMD@DD     10007 PMD@DS      7767 PMD@DS1     7771 PMD@DS2     7773 PMD@DS3
 7775 PMD@DS4     7777 PMD@DS5    10001 PMD@DS6    10003 PMD@DS7    10005 PMD@DS8    10031 PMD@ISR
10033 PMD@JIT    10035 PMD@PLUGH  10040 PMD@PROCEDURE               10044 PMD@ROSEG  10047 PMD@TCB
 4142 PMDNAME      752 PORM         755 PORMX        637 POS1         642 POS11        652 POS11L
  621 POSITION     631 POSITIONL    633 POSITIONS    626 POSITIONV   1342 PQLIST1S    1337 PQLIST1X
 1460 PQLIST1_LET                  1330 PQLISTS     1325 PQLISTX     1455 PQLIST_LET  3277 PR
 3302 PR1         3307 PR2          464 QTSTRINGS    656 QUAL         660 QUAL1        635 QUAL3
 4301 READ1       3601 REGISTER    3557 REL_DIRECT  3530 REL_INDIRECT                 4336 REPORT1
 4224 RES         4375 RUM1        4450 RUMBUF      4417 RUMUTS      3647 R_1         3651 R_2
 3653 R_3         3655 R_4         3657 R_5         3661 R_6         3663 R_7         3637 R_REG
  773 SDO         1000 SDOD       10051 SEMICOLON   3562 SHORT_PREL  4547 SHOW1       4610 SHOWFPRG
  663 SIMBLE      4024 SIMBLE1      760 SIMEXP       765 SIMEXPD      767 SIMEXPDO     771 SIMEXPMDO
  737 SIMX         744 SIMXD        747 SIMXDO      1157 STATION     4636 STEP1       4647 STEP2
  671 STMT_SPEC    674 STMT_SPEC1   300 STORED_CMD  4672 STOREI      4700 STOREV      1372 SUBREF
 1400 SUBREF1      707 SUBSTMT      712 SUBSTMT1     731 SUBSTMT2     734 SUBSTMT2DO   445 SYMBOLS
  447 SYMBOL_CC    455 SYMBOL_COBOL                  446 SYMBOL_PL6   457 SYMDEL_COBOL
  462 SYMDEL_PL6  1360 SYMLIST     1363 SYMLISTC    3703 S_1         3705 S_2         3707 S_3
 3677 S_REG       3224 TAG         3232 TAG1        3256 TAG2        3260 TAG3        3263 TAG4
 3167 TAG_2       3207 TAG_2C      3174 TAG_4       3211 TAG_4C      3235 TM          1162 TP
 1174 TPACCT      4732 TR1         4744 TR2         4757 TR3         1403 ULREF       5233 ULSTYPE
 5236 ULSTYPE1    5112 UPDATE1     5115 UPDATE2     5122 UPDATE3     5162 USE08       5166 USE09
 5144 USE1        5202 USE10       5214 USE11       5220 USE12       5244 USE13       5255 USE14
 5260 USE15       5262 USE16       5265 USE17       5300 USE18       5304 USE19       1355 VAREXPS
 1345 VAREXPX     1463 VAREXP_LET  1312 VREF        1452 VREF11_LET  1445 VREF1_LET   1310 VREFX
 1315 VREFX1      1322 VREFX11     1443 VREFX_LET   1440 VREF_LET    1002 XDO         1005 XMDO

PARTRGE version E04  SYMDEF Map          14:05:30.12 JUL 29 '97 DDN_NODES_D                            67   
 5451 CNR2_HOST   5476 CNR2_L6     5565 CNR4_COBOL  5515 CNR4_FORTRAN                 5570 CNR4_PL6
  275 D_ACMDS        0 D_ATREE      271 D_CCMDS      247 D_DCMDS      157 D_MTREE       54 FMTSPEC1
 1037 HDIG        1041 HEXBOTH     1031 HEXIL       1034 HEXIL1      2741 INSTR       3023 INSTR_ADSC
 3036 INSTR_BDSC  3213 INSTR_DFLT  2754 INSTR_EIS   3312 INSTR_L6    3052 INSTR_NDSC  3071 INSTR_SDSC
 3077 INSTR_VDSC  3110 INSTR_ZERO  6314 L@AND       6316 L@ANDC      6405 L@DASH      6423 L@DIV
 6425 L@DIVC      6515 L@FPRG      6656 L@LSHIFT    6660 L@LSHIFTC   6674 L@MINUS     6676 L@MINUSC
 6734 L@MULT      6736 L@MULTC     7011 L@OR        7013 L@ORC       7045 L@PLUS      7047 L@PLUSC
 7106 L@RSHIFT    7110 L@RSHIFTC   7544 L_MACTIVE   2353 NF_IGNORE   2413 NF_KEEP     4773 NF_TRAP
 1502 NU_DUMP     1627 NU_ECHO     2307 NU_IGNORE   2402 NU_KEEP     4036 NU_OUTPUT   4236 NU_READ
 4765 NU_TRAP     1575 NX_DUMP     1633 NX_ECHO     2444 NX_KEEP     4061 NX_OUTPUT   4273 NX_READ
 1107 N_CRASH     1411 N_DELETE    1015 OCTIL       1021 OCTIL1      1026 OCTILBOTH   1024 ODIG
  747 SIMXDO       445 SYMBOLS      447 SYMBOL_CC    455 SYMBOL_COBOL                  446 SYMBOL_PL6
  457 SYMDEL_COBOL                  462 SYMDEL_PL6  1360 SYMLIST     1363 SYMLISTC

PARTRGE version E04  PREFs               14:05:30.12 JUL 29 '97 DDN_NODES_D                            68   
  775 DD_BASE     5247 DD_BASEBOTH                  5423 DD_CNR2     5425 DD_CNR4      346 DD_DUMP
  347 DD_ECHO      361 DD_IGNORE    172 DD_INSTR    2745 DD_INSTR_CONT                 363 DD_KEEP
 1061 DD_L@AND    1057 DD_L@DIV    1054 DD_L@LSHIFT                   754 DD_L@MINUS  1056 DD_L@MULT
 1060 DD_L@OR      753 DD_L@PLUS   1055 DD_L@RSHIFT                   372 DD_OUTPUT    405 DD_READ
  665 DD_SYMBOLS  1401 DD_SYMDEL   1346 DD_SYMLIST   420 DD_TRAP


         No errors,  24 PREFs in D_ATREE


PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /*P*
        7        7             NAME: NODES
        8        8             PURPOSE:
        9        9                   To contain the syntax tree that describes DELTA's command syntax
       10       10                   to X$PARSE.
       11       11             DESCRIPTION:
       12       12             REFERENCE: DELTA functional spec AF Section 17.6 #0065C-0.
       13       13                        X$PARSE specification AF Section 12.0 #0204C-0. */
       14       14
       15       15        %INCLUDE DD_SUBS_C;
       16      286        %INCLUDE DD_PSUBS_C;
       17      761
       18      762        D_ATREE(C@ROOT,D) = [.B] ( NA_STEP | ;
       19      763                                   NA_EVAL | ;
       20      764                                   NA_MODIFY | ;
       21      765                                   NA_NPOI | ;
       22      766                                   NA_SLASH )
       23      767          NA_STEP(C_STEP) = [ DECIMALS ] [.B] ( L_RBRACKET | L_RBRACE )
       24      768          NT_STEP(C_STEP) = [ DECIMALS ] [.B] ( L_RBRACKET | L_RBRACE ) CMD_TERM
       25      769        /* Warning: Don't try NT_? = NA_? CMD_TERM, as it won't work! */
       26      770          NA_EVAL(C_EVAL) = [ ( INSTRF | VREF | FMTSPEC ) ] [.B] L_EQUALS
       27      771          NT_EVAL(C_EVAL) = [ ( INSTRF | VREF | FMTSPEC ) ] [.B] L_EQUALS CMD_TERM
       28      772            FMTSPEC(FMTSPEC_CODE) = BBKSLASHB FMTSPEC1
       29      773              BBKSLASHB = [.B] L@BKSLASH [.B]
       30      774              FMTSPEC1 (D)= ( FMT2 | ;          /* U/BIN                              */
       31      775                              FMT3 | ;          /* S/BIN                              */
       32      776                              FMT4 | ;          /* C/HAR                              */
       33      777                              FMT5 | ;          /* B/IT                               */
       34      778                              FMT6 | ;          /* I/NSTR                             */
       35      779                              FMT7 | ;          /* P/TR                               */
       36      780                              FMT8 | ;          /* D/ESCR                             */
       37      781                              FMT0 | ;          /* REM/EMBER                          */
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            2    
       38      782                              FMT9 | ;          /* R/EL                               */
       39      783                              FMT21 | ;         /* EB/CDIC                            */
       40      784                              FMT10 | ;         /* E/PTR                              */
       41      785                              FMT11 | ;         /* A/R                                */
       42      786                              FMT12 | ;         /* V/ECTOR                            */
       43      787                              FMT18 | ;         /* X1-8 bits Hex                      */
       44      788                              FMT17 | ;         /* J/DE                               */
       45      789                              FMT16 | ;         /* F/LOAT                             */
       46      790                              FMT13 | ;         /* X-9 bits Hex                       */
       47      791                              FMT19 | ;         /* T/IME                              */
       48      792                              FMT20 | ;         /* Z/ERO                              */
       49      793                              FMT1 )            /* O/CTAL                             */
       50      794          NA_MODIFY(C_MODIFY) = VREF [.B] L_SLASH
       51      795          NT_MODIFY(C_MODIFY) = VREF [.B] L_SLASH CMD_TERM
       52      796          NA_NPOI(C_MACTIVE) = [ ( INSTRF | VREF | FMTSPEC ) ] [.B] ( L@LF | ;
       53      797                                                                        L@UPARROW | ;
       54      798                                                                        L@LBRACKET | ;
       55      799                                                                        L@LBRACE | ;
       56      800                                                       L@TAB )
       57      801          NA_SLASH(C_MACTIVE) = ( INDTYPE [.B] [ FMTSPEC ] [.B] L@SLASH | ;
       58      802                                    [ FMTSPEC ] [.B] L@SLASH )
       59      803          NT_SLASH(C_MACTIVE) = ( INDTYPE [.B] [ FMTSPEC ] [.B] L@SLASH | ;
       60      804                                    [ FMTSPEC ] [.B] L@SLASH ) CMD_TERM
       61      805            INDTYPE = ( L@INDIRECT_PTR | ;
       62      806                        L@INDIRECT_SHORTPTR | ;
       63      807                        L@INDIRECT_LEFT | ;
       64      808                        L@INDIRECT_RIGHT | ;
       65      809                        L@INDIRECT )
       66      810        %EJECT;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            3    
       67      811        D_MTREE(C@ROOT,D) = [.B] ( DD_INSTR [.B] MATYPE [.B] [ FMTSPEC ] [.B] .END | ;
       68      812                                   VREFX [.B] MATYPE [.B] [ FMTSPEC ] [.B] .END | ;
       69      813                                   INSTRF [.B] .END | ;
       70      814                                   VREF [.B] .END | ;
       71      815                                   FMTSPEC [.B] .END | ;
       72      816                                   COMMENTS .END )
       73      817          MATYPE = ( L@NEXT | L@LF | ;
       74      818                        L@OPEN | L@LBRACKET | L@LBRACE | ;
       75      819                        L@PREV | L@UPARROW | ;
       76      820                        L@INDIRECT_PTR | ;
       77      821                        L@INDIRECT_SHORTPTR | ;
       78      822                        L@INDIRECT_LEFT | ;
       79      823                        L@INDIRECT_RIGHT | ;
       80      824                        L@INDIRECT | L@TAB )
       81      825        %EJECT;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            4    
       82      826        D_DCMDS(C@ROOT,D) = [.B] ( * DIRECT_CMD * .END | ;
       83      827                                   STORED_CMD [ * DIRECT_CMD * ] .END | ;
       84      828                                   COMMENTS .END )
       85      829
       86      830        D_CCMDS(C@ROOT,D) = [.B] * DIRECT_CMD * .END
       87      831
       88      832        D_ACMDS(C@ROOT,D) = [.B] DIRECT_CMD
       89      833
       90      834          STORED_CMD(C@STORED_CMD) = [ DECIMALS .B ] ( N_AT | ;
       91      835                                                       N_ONN | ;
       92      836                                                       N_ONNODES | ;
       93      837                                                       N_OA | ;
       94      838                                                       N_OC | ;
       95      839                                                       N_ONCALLS | ;
       96      840                                                       N_OE | ;
       97      841                                                       N_SAVE | ;
       98      842                                                       N_WHEN )
       99      843          DIRECT_CMD(C@DIRECT_CMD) = ( ;
      100      844                                         N_MLCT |;
      101      845                                         N_MODIFYDW |;
      102      846                                         N_MODIFY | ;
      103      847                                         N_MINI | ;
      104      848                                         N_ABBREV | ;
      105      849                                         N_ACTIVE | ;
      106      850                                         N_ALIB | ;
      107      851                                         N_ALTVAR | ;
      108      852                                         N_ANLZ | ;
      109      853                                         N_BYPASS | ;
      110      854                                         N_BREAK | ;
      111      855                                         N_CACHE | ;
      112      856                                         N_COPY | ;
      113      857                                         N_DBOOT | ;
      114      858                                         N_DEBUG | ;
      115      859                                      /******************N_DELETE | ;******************/
      116      860                                         N_DEF | ;
      117      861                                         N_DO | ;
      118      862                                         N_DIC | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            5    
      119      863                                         N_DLCT | ;
      120      864                                         N_DISPLAY | ;
      121      865                                         DD_DUMP | ;
      122      866                                         DD_ECHO | ;
      123      867                                         N_END | ;
      124      868                                         N_EOM | ;
      125      869                                         N_ERRFID | ;
      126      870                                         N_EXIT | ;
      127      871                                         N_EVAL | ;
      128      872                                         N_FORMAT | ;
      129      873                                         N_FIND | ;
      130      874                                         N_GOTO | ;
      131      875                                         N_HISTORY | ;
      132      876                                         DD_IGNORE | ;
      133      877                                         N_INACTIVE | ;
      134      878                                         DD_KEEP | ;
      135      879                                         N_KILL | ;
      136      880                                         N_LIST | ;
      137      881                                         N_STOP | ;
      138      882                                         N_LET | ;
      139      883                                         N_NAME | ;
      140      884                                         N_NEXT | ;
      141      885                                         DD_OUTPUT | ;
      142      886                                         N_OPEN | ;
      143      887                                         N_PLUGH | ;
      144      888                                         N_PMD  | ;
      145      889                                         N_PROTECT | ;
      146      890                                         N_PROMPT | ;
      147      891                                         N_PREV | ;
      148      892                                         N_QUIT | ;
      149      893                                         N_RANGE | ;
      150      894                                         N_RUM  | ;
      151      895                                         N_REPORT | ;
      152      896                                         DD_READ | ;
      153      897                                         N_SELCHAN | ;
      154      898                                         N_SCHEMA | ;
      155      899                                         N_SAD | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            6    
      156      900                                         N_SILENT | ;
      157      901                                         N_SHOW | ;
      158      902                                         N_SYNTAX | ;
      159      903                                         N_STATUS | ;
      160      904                                         N_STORE | ;
      161      905                                         N_STEP | ;
      162      906                                         N_TBOOT | ;
      163      907                                         DD_TRAP | ;
      164      908                                         N_TSA | ;
      165      909                                         N_T | ;
      166      910                                         N_UNFID | ;
      167      911                                         N_UNSHARE | ;
      168      912                                         N_UNSILENT | ;
      169      913                                         N_UPDATE | ;
      170      914                                         N_USE | ;
      171      915                                         N_WAIT | ;
      172      916                                         N_XCON | ;
      173      917                                         N_XEQ | ;
      174      918                                         NT_SLASH | ;
      175      919                                         N_INDIRECT_PTR | ;
      176      920                                         N_INDIRECT_SHORTPTR | ;
      177      921                                         N_INDIRECT_LEFT | ;
      178      922                                         N_INDIRECT_RIGHT | ;
      179      923                                         N_INDIRECT | ;
      180      924                                         NT_STEP | ;
      181      925                                         NT_EVAL | ;
      182      926                                         NT_MODIFY )
      183      927        %EJECT;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            7    
      184      928        DECIMALS(DEC_CODE) = .DECIMAL-
      185      929        SYMBOLS(SYM_CODE,D,MAKEUC) = .SYMBOL-
      186      930        SYMBOL_PL6(SYM_CODE,D,MAKEUC) = .SYMBOL-
      187      931        SYMBOL_CC(SYM_CODE,D,RTEXT) = ['*'-] .SYMBOL-
      188      932        SYMBOL_COBOL(SYM_CODE,D) = .SYMBOL+'-'-
      189      933        SYMDEL_COBOL(D) = ( BCOMMAB | .B )
      190      934        SYMDEL_PL6(D) = BCOMMAB
      191      935        QTSTRINGS(QTSTRING_CODE) = .QUOTE-
      192      936        FIDS(FID_CODE) = .FID-
      193      937        FIDSUC(FID_CODE,MAKEUC) = .FID-
      194      938        FID8(FID8_CODE) = .FID8-
      195      939
      196      940            N_ABBREV(C_ABBREV) = L_ABBREV [ IFSPEC ] CMD_TERM
      197      941            N_ACTIVE(C_ACTIVE) = L_ACTIVE [.B] KILL13 [ IFSPEC ] CMD_TERM
      198      942            N_ALIB(C_ALIB) = L_ALIB [.B] ( L@RETURN | L@ALTRETURN ) [ BCOMMAB L@KEEP ] [
               942                IFSPEC ] CMD_TERM
      199      943            N_ALTVAR(C_ALTVAR) = L_ALTVAR ( .B SIMBLE [ IFSPEC ] CMD_TERM | ;
      200      944                                              [ IFSPEC ] CMD_TERM )
      201      945            N_ANLZ(C_ANLZ) = L_ANLZ ( .B ( ANLZ1 | ANLZ2 | ANLZ3 | AFID1 ) [ BCOMMAB AFID2
               945                ] ;
      202      946                                      [ IFSPEC ] CMD_TERM | ;
      203      947                                      [ IFSPEC ] CMD_TERM )
      204      948              ANLZ1(C@RUNNING) =  'RUN/NING'-
      205      949              ANLZ2(C@@) = '@'-
      206      950              ANLZ3(C@FANLZ) = L_FEP .B DECIMALS [ .B DEBUGU ]
      207      951              AFID1(C@AFID1) = .FID-
      208      952              AFID2(C@AFID2) = .FID-
      209      953            N_AT(C_AT) = L_AT [ * { L@SILENT | L@INACTIVE } * ] .B POSITION [ N_AT11 ] [
               953                IFSPEC ] CMD_TERM
      210      954              POSITION(C@POSITION) = [ QUAL3 ] POS1
      211      955              POSITIONV(C@POSITION) = QUAL3 POS1
      212      956              POSITIONL(C@POSITION) = POS11L
      213      957              POSITIONS(C@POSITION) = SIMX
      214      958                QUAL3(C@QUAL3) = L@COLON
      215      959                POS1 = ( POS11 | SIMX )
      216      960                  POS11(C@POS11) = [ QUAL ] STMT_SPEC [ SUBSTMT ]
      217      961                  POS11L(C@POS11) = QUAL DECIMALS [ SUBSTMT ]
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            8    
      218      962                    QUAL(C@QUAL) = QUAL1
      219      963                      QUAL1(C@QUAL1) = * SIMBLE L@COLON *
      220      964                        SIMBLE = ( QTSTRINGS FSPECS | DD_SYMBOLS )
      221      965                    STMT_SPEC = ( STMT_SPEC1 | DECIMALS )
      222      966                      STMT_SPEC1(C@STMT_SPEC1) = SIMBLE [ LBL_ARRAY ]
      223      967                        LBL_ARRAY = L@LPAREN [.B] SIMXD [.B] L@RPAREN
      224      968                        SUBSTMT = ( SUBSTMT1 | SUBSTMT2 )
      225      969                          SUBSTMT1(C@SUBSTMT1) = ( BCOMMAB [ DECIMALS ] BCOMMAB SIMX | ;
      226      970                                                   BCOMMAB DECIMALS )
      227      971                            BCOMMAB = [.B] L@COMMA [.B]
      228      972                          SUBSTMT2(C@SUBSTMT2) = ARITHOP SIMEXP
      229      973                          SUBSTMT2DO(C@SUBSTMT2) = ARITHOP SIMEXPDO
      230      974                  SIMX(C@SIMX) = [ PORM ] SIMEXP
      231      975                  SIMXD(C@SIMX) = [ PORM ] SIMEXPD
      232      976                  SIMXDO(C@SIMX) = [ PORM ] SIMEXPDO
      233      977                    PORM = ( DD_L@PLUS | DD_L@MINUS )
      234      978                    PORMX = ( L@PLUS | L@MINUS )
      235      979                    SIMEXP(SIMEXP_CODE) = SDO [ EXPREP ]
      236      980                    SIMEXPD(SIMEXP_CODE) = SDOD
      237      981                    SIMEXPDO(SIMEXP_CODE) = XDO
      238      982                    SIMEXPMDO(SIMEXP_CODE) = XMDO
      239      983                      SDO(C@SDO) = ( SIMBLE | DD_BASE | CNR1 | DECIMALS )
      240      984                      SDOD(C@SDO) = DECIMALS
      241      985                      XDO(C@SDO) = ( DECIMALS | DD_BASE )
      242      986                      XMDO(C@SDO) = [L@MINUS] ( DECIMALS | DD_BASE )
      243      987                      OCTIL(OCT_CODE,D) = L@PERIOD .OCT-
      244      988                      OCTIL1(OCT_CODE,D) = .OCT-
      245      989                      OCTILNICE(OCT_CODE) = .OCT1-
      246      990                      ODIG(C@OCT0,D) = .OCT1-
      247      991                      OCTILBOTH(D) = ( OCTIL | OCTILNICE )
      248      992                      HEXIL (D,HEX_CODE) = L@PERIOD HEXIL1
      249      993                      HEXIL1(HEX_CODE,D,MAKEUC) = .HEX-
      250      994                      HEXNICE(HEX_CODE,MAKEUC) = .HEX1-
      251      995                      HDIG(C@HEX0,D,MAKEUC) = .HEX1-
      252      996                      HEXBOTH(D) = ( HEXIL | HEXNICE )
      253      997                      EXPREP(EXPREP_CODE) =  * EXPCON *
      254      998                        EXPCON(EXPCON_CODE) = ARITHOP SDO
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            9    
      255      999                          ARITHOP = ( DD_L@PLUS | ;
      256     1000                                         DD_L@MINUS | ;
      257     1001                                         DD_L@LSHIFT | ;
      258     1002                                         DD_L@RSHIFT | ;
      259     1003                                         DD_L@MULT | ;
      260     1004                                         DD_L@DIV | ;
      261     1005                                         DD_L@OR | ;
      262     1006                                         DD_L@AND )
      263     1007              N_AT11(C@N_AT11) = .B L_# [.B] DECIMALS
      264     1008            N_BREAK(C_BREAK) = L_BREAK [ IFSPEC ] CMD_TERM
      265     1009            N_BYPASS(C_BYPASS) = L_BYPASS [ IFSPEC ] CMD_TERM
      266     1010            N_CACHE(C_CACHE) = L_CACHE [ IFSPEC ] CMD_TERM
      267     1011            N_COPY(C_COPY) = L_COPY [ IFSPEC ] CMD_TERM
      268     1012            N_CRASH(C_CRASH) = L_CRASH [ IFSPEC ] CMD_TERM
      269     1013            N_DBOOT(C_DBOOT) = L_DBOOT [ IFSPEC ] CMD_TERM
      270     1014            N_DEBUG(C_DEBUG) = L_DEBUG [.B] ( DEBUG_SYSID | ;
      271     1015                                              DEBUG_CG | ;
      272     1016                                              DEBUG_FEP | ;
      273     1017                                              < BCOMMAB , DECIMALS > | ;
      274     1018                                                L@NONE | ;
      275     1019                                                L@ALL ) [ IFSPEC ] CMD_TERM
      276     1020                  DEBUG_CG(DBG_CG) = STATION .B ('AT'|'ON') .B (TP | CG)
      277     1021                       STATION = (QTSTRINGS | FID8 )
      278     1022                       TP(TPACCOUNT) = ('TP//' | 'TP ') TPACCT
      279     1023                       TPACCT(TPACCT_CODE) = .ALPHA+'0123456789$:'
      280     1024                       CG(CG_CODE) = ( CG1 | CG2 )
      281     1025                            CG1(CG1_CODE) =  ('CG//' | 'CG ') FIDS
      282     1026                            CG2(CG2_CODE) =  FIDS
      283     1027                  DEBUG_SYSID(DBG_SYSID) = DECIMALS .B ('AT' | 'ON') .B FID8
      284     1028                  DEBUG_FEP(DBG_FEP) = (DEBUG@ [ DEBUGU ] | [ DEBUGU ] DEBUG@)
      285     1029                       DEBUG@(DBG_@) = ('@' | 'TH/R'- [('U' | 'O/UGH')] .B) .SYM8
      286     1030                       DEBUGU(DBG_U) = 'U/SING' .B FIDS
      287     1031            N_DEF(C_DEF) = L_DEF .B SIMBLE BEQUALSB VREFX [ IFSPEC ] CMD_TERM
      288     1032              VREFX(VREF_CODE) = VREFX1
      289     1033              VREF(VREF_CODE) = VREFX1 [ FMTSPEC ]
      290     1034                VREFX1 = ( POSITIONV | ;
      291     1035                              POSITIONL | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            10   
      292     1036                              VREFX11 | ;
      293     1037                              POSITIONS )
      294     1038                  VREFX11(C@VREF11) = [ QUAL ] PQLISTX
      295     1039                    PQLISTX(PQLIST_CODE) = < BPTRB , PQLIST1X >
      296     1040                    PQLISTS(PQLIST_CODE) = < BPTRB , PQLIST1S >
      297     1041                      BPTRB = [.B] L@PTR [.B]
      298     1042                      PQLIST1X = ( VAREXPX | SIMEXP )
      299     1043                      PQLIST1S = ( VAREXPS | SIMEXPMDO )
      300     1044        /*N* Currently DELTA can't handle VAREXPX with generalized SUBSTMT2 */
      301     1045                        VAREXPX(VAREXP_CODE) = DD_SYMLIST [ SUBREF ] [ SUBSTMT2 ]
      302     1046                        VAREXPS(VAREXP_CODE) = DD_SYMLIST [ SUBREF ]
      303     1047                          SYMLIST(SYMLIST_CODE,D) = < L@PERIOD , SIMBLE >
      304     1048                          SYMLISTC(SYMLISTC_CODE,D) = < INOF , SIMBLE >
      305     1049                            INOF = .B L@INOF .B
      306     1050                          SUBREF = L@LPAREN [.B] SUBREF1 [.B] L@RPAREN
      307     1051                            SUBREF1(SUBREF_CODE) = < DD_SYMDEL, ULREF >
      308     1052                              ULREF(ULREF_CODE) = PQLISTS [ L@COLON PQLISTS ]
      309     1053            N_DELETE(C_DELETE) = L_DELETE [ IFSPEC ] CMD_TERM
      310     1054            N_DO(C_DO) = L_DO [.B] DECIMALS [ IFSPEC ] CMD_TERM
      311     1055            N_DIC(C_DIC) = L_DIC [ IFSPEC ] CMD_TERM
      312     1056            N_DISPLAY(C_DISPLAY) = L_DISPLAY .B NVREF_LET [ IFSPEC ] CMD_TERM
      313     1057              NVREF_LET(NVREF_CODE) = < BCOMMAB , VREF_LET >
      314     1058                VREF_LET(VREF_CODE) = VREF1_LET [ FMTSPEC ]
      315     1059                VREFX_LET(VREF_CODE) = VREF1_LET
      316     1060                  VREF1_LET = ( POSITIONV | ;
      317     1061                                   POSITIONL | ;
      318     1062                                   VREF11_LET | ;
      319     1063                                   POSITIONS )
      320     1064                    VREF11_LET(C@VREF11) = [ QUAL ] PQLIST_LET
      321     1065                      PQLIST_LET(PQLIST_CODE) = < BPTRB , PQLIST1_LET >
      322     1066                        PQLIST1_LET = ( VAREXP_LET | SIMEXPDO )
      323     1067                          VAREXP_LET(VAREXP_CODE) = ( DD_SYMLIST SUBREF | ;
      324     1068                                                        DD_SYMLIST [ SUBSTMT2DO ] )
      325     1069            N_DLCT(C_DLCT) = L_DLCT [IFSPEC] CMD_TERM
      326     1070            NU_DUMP(C_DUMP,D) = ( L_DUMP [ * { L@ASCII | L@EJECT | L@EBCDIC | L@LONG } * ]
              1070                ;
      327     1071                                  .B VREFX [ * { DRANGE | BBKSLASHB FMTSPECD } * ] ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            11   
      328     1072                                  [ * .B { ECHO1 .B FIDS | QTSTRINGS } * ] ;
      329     1073                                | L_DISPLAY .B VREFX [ * DRANGE * ] BBKSLASHB FIDSUC ;
      330     1074                                | BBKSLASHB FIDSUC [ .B VREFX [ * DRANGE * ] ] ) ;
      331     1075                                [ IFSPEC ] CMD_TERM
      332     1076              FMTSPECD = ( FMT4 | ;             /* C/HAR                              */
      333     1077                           FMT21 | ;            /* EB/CDIC                            */
      334     1078                              FMT18 | ;         /* X1                                 */
      335     1079                              FMT1 |  ;         /* O/CTAL                             */
      336     1080                              FMT13 )           /* X                                  */
      337     1081            NX_DUMP(C_DUMP,D) = L_DUMP [ * { L@ASCII | L@EJECT | L@LONG } * ] .B VREFX ;
      338     1082                                [ * { DRANGE | BBKSLASHB FMTSPECD } * ] ;
      339     1083                                [ * .B { ECHO1 [.B] ECHO2 | QTSTRINGS } * ] [ IFSPEC ]
              1083                                    CMD_TERM
      340     1084              DRANGE = BCOMMAB SIMEXP
      341     1085            NU_ECHO(C_ECHO,D) = L_ECHO [ IFSPEC ] CMD_TERM
      342     1086            NX_ECHO(C_ECHO,D) = L_ECHO [.B] [ ECHO1 ] [.B] ECHO2 [ IFSPEC ] CMD_TERM
      343     1087              ECHO1 = ( L@OVER | L@ON | L@TO | L@INTO )
      344     1088              ECHO2 =  ( L@NO | L@LP | L@ME )
      345     1089            N_END(C_QUIT) = L_END ( [ IFSPEC ] CMD_TERM | ;
      346     1090                                    [.B] RES [ IFSPEC ] CMD_TERM )
      347     1091            N_EOM(C_EOM) = L_EOM [ IFSPEC ] CMD_TERM
      348     1092            N_ERRFID (C_ERRFID) = L_ERRFID .B FIDS [ IFSPEC ] CMD_TERM
      349     1093            N_EVAL(C_EVAL) = L_EVAL .B ( VREF [ IFSPEC ] CMD_TERM | ;
      350     1094                                           INSTRF [ IFSPEC ] CMD_TERM )
      351     1095            N_EXIT(C_EXIT) = L_EXIT [ IFSPEC ] CMD_TERM
      352     1096            N_FIND(C_FIND) = L_FIND ( FIND1S | FIND1N | FIND1NIF | FIND1IF )
      353     1097              FIND1S = .B ( FINDI3I CMD_TERM | ;
      354     1098                               FINDI3V CMD_TERM | ;
      355     1099                               FINDV3I CMD_TERM | ;
      356     1100                               FINDV3V CMD_TERM )
      357     1101              FIND1N = [.B] L@NOT .B ( FINDI3I CMD_TERM | ;
      358     1102                                          FINDI3V CMD_TERM | ;
      359     1103                                          FINDV3I CMD_TERM | ;
      360     1104                                          FINDV3V CMD_TERM )
      361     1105              FIND1NIF = [.B] L@NOT .B ( FINDI3I IFSPEC CMD_TERM | ;
      362     1106                                            FINDI3V IFSPEC CMD_TERM | ;
      363     1107                                            FINDV3I IFSPEC CMD_TERM | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            12   
      364     1108                                            FINDV3V IFSPEC CMD_TERM )
      365     1109              FIND1IF = .B ( FINDI3I IFSPEC CMD_TERM | ;
      366     1110                                FINDI3V IFSPEC CMD_TERM | ;
      367     1111                                FINDV3I IFSPEC CMD_TERM | ;
      368     1112                                FINDV3V IFSPEC CMD_TERM )
      369     1113                FINDI3I = DD_INSTR FIND123I
      370     1114                FINDI3V = DD_INSTR FIND123V
      371     1115                FINDV3I = VREFX FIND123I
      372     1116                FINDV3V = VREFX FIND123V
      373     1117                  FIND123I = ( * { FIND3I | FIND1 | FIND2 } * | ;
      374     1118                                  * { FIND3I | FIND1         } * | ;
      375     1119                                  * { FIND3I | FIND2         } * | ;
      376     1120                                  * { FIND2  | FIND1         } * | ;
      377     1121                                      FIND1                      | ;
      378     1122                                      FIND2                      | ;
      379     1123                                      [.B]                         )
      380     1124                  FIND123V = ( * { FIND3V | FIND1 | FIND2 } * | ;
      381     1125                                  * { FIND3V | FIND1         } * | ;
      382     1126                                  * { FIND3V | FIND2         } * | ;
      383     1127                                  * { FIND2  | FIND1         } * | ;
      384     1128                                      FIND1                      | ;
      385     1129                                      FIND2                      | ;
      386     1130                                      [.B]                         )
      387     1131                    FIND1(FROM_CODE) = .B L@FROM .B VREFX [ DRANGE ]
      388     1132                    FIND2(UNDER_CODE) = .B L@UNDER .B SIMEXP
      389     1133                    FIND2X = .B L@UNDER .B SIMEXP
      390     1134                    FIND3V(SUBS_CODE) = .B L@SUBS .B VREFX [ FIND2X ]
      391     1135                    FIND3I(SUBS_CODE) = .B L@SUBS .B DD_INSTR [ FIND2X ]
      392     1136            N_FORMAT(C_FORMAT) = L_FORMAT [.B] ( L@EVAL | L@MODIFY ) [.B] FMTSPEC [ IFSPEC
              1136                ] CMD_TERM
      393     1137            N_GOTO(C_GOTO) = L_GOTO ( [.B] K@ALL | ;
      394     1138                                     [ * { L@STEP | L@TRAP } * ] ;
      395     1139                                        ( [.B] L@HOST [.B POSITION] [IFSPEC] CMD_TERM | ;
      396     1140                                          .B POSITION [.B POSITION] [ IFSPEC ] CMD_TERM | ;
      397     1141                                          [ IFSPEC ] CMD_TERM ) )
      398     1142            N_HISTORY(C_HISTORY) = L_HISTORY [.B] ;
      399     1143                                     [ ( L@CLEAR | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            13   
      400     1144                                     [ ( L@ALL | XDO ) ] [.B] [ L@MORE ] ) ] ;
      401     1145                                     [ IFSPEC ] CMD_TERM
      402     1146            N_INDIRECT(C_MACTIVE) = ( L@INDIRECT | L@TAB ) [.B] [ FMTSPEC ] [ IFSPEC ]
              1146                CMD_TERM
      403     1147            N_INDIRECT_PTR(C_MACTIVE) = L@INDIRECT_PTR [.B] [ FMTSPEC ] [ IFSPEC ] CMD_TERM
      404     1148            N_INDIRECT_SHORTPTR(C_MACTIVE) = L@INDIRECT_SHORTPTR [.B] [ FMTSPEC ] [ IFSPEC
              1148                ] CMD_TERM
      405     1149            N_INDIRECT_LEFT(C_MACTIVE) = L@INDIRECT_LEFT [.B] [ FMTSPEC ] [ IFSPEC ]
              1149                CMD_TERM
      406     1150            N_INDIRECT_RIGHT(C_MACTIVE) = L@INDIRECT_RIGHT [.B] [ FMTSPEC ] [ IFSPEC ]
              1150                CMD_TERM
      407     1151            NU_IGNORE(C_IGNORE,D) = L_IGNORE [.B] ( KTI@ALL | KTI@NONE | KTINAME ) [ IFSPEC
              1151                ] CMD_TERM
      408     1152              KTINAME = < BCOMMAB, { KTI@ARITHMETIC | ;
      409     1153                                        KTI@BREAK | ;
      410     1154                                        KTI@COMMAND | ;
      411     1155                                        KTI@DERAIL | ;
      412     1156                                        KTI@DIVIDE_CHECK | ;
      413     1157                                        KTI@ERROR | ;
      414     1158                                        KTI@EVENT | ;
      415     1159                                        KTI@FAULT_TAG | ;
      416     1160                                        KTI@IPR | ;
      417     1161                                        KTI@LOCKUP | ;
      418     1162                                        KTI@MEMORY | ;
      419     1163                                        KTI@MME | ;
      420     1164                                        KTI@MONITOR | ;
      421     1165                                        KTI@OVERFLOW | ;
      422     1166                                        KTI@PAGE | ;
      423     1167                                        KTI@PMME | ;
      424     1168                                        KTI@PROGRAMMED | ;
      425     1169                                        KTI@SEG | ;
      426     1170                                        KTI@SEC_2 | ;
      427     1171                                        KTI@SEC_1 | ;
      428     1172                                        KTI@TIMER | ;
      429     1173                                        KTI@XCON } >
      430     1174            NF_IGNORE(C_IGNORE,D) = L_IGNORE [.B] (L@HOST | KTI@ALL | KTI@NONE | RES) ;
      431     1175                                     .B ( KTI@ALL | KTI@NONE | KTI@ARITHMETIC ) [IFSPEC]
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            14   
              1175                                         CMD_TERM
      432     1176            N_INACTIVE(C_INACTIVE) = L_INACTIVE [.B] KILL13 [ IFSPEC ] CMD_TERM
      433     1177            NU_KEEP(C_KEEP,D) = L_KEEP [.B] ( KTI@ALL | KTINAME ) [ IFSPEC ] CMD_TERM
      434     1178            NF_KEEP(C_KEEP,D) = L_KEEP [.B] ( L@HOST | KTI@ALL | RES) ;
      435     1179                                .B ( KTI@ALL | KTIFNAME ) [IFSPEC] CMD_TERM
      436     1180                  KTIFNAME = < BCOMMAB, { KTI@EVENT | ;
      437     1181                                          KTI@BREAK | ;
      438     1182                                          KTI@XCON | ;
      439     1183                                          KTI@MCL | ;
      440     1184                                          KTI@ARITHMETIC | ;
      441     1185                                          KTI@TRAP } >
      442     1186            NX_KEEP(C_KEEP,D) = L_KEEP [.B] [ L@FAULTS ] [.B] [ KEEP1 ] [ IFSPEC ] CMD_TERM
      443     1187              KEEP1 = ( L@ALL | L@NONE | L@MON | L@SCREECH )
      444     1188            N_KILL(C_KILL) = L_KILL [.B] KILL1 [ IFSPEC ] CMD_TERM
      445     1189              KILL1 = ( ;
      446     1190                           K@ABBREVS | ;
      447     1191                           K@ALTVAR | ;
      448     1192                           K@ANLZ | ;
      449     1193                           K@ALL | ;
      450     1194                           K@ATS | ;
      451     1195                           K@BYPASS | ;
      452     1196                           K@CACHE | ;
      453     1197                           K@COPY | ;
      454     1198                           KILL12 | ;           /* D/EF name                          */
      455     1199                           K@DEFS | ;
      456     1200                           K@DIC | ;
      457     1201                           KILLDELTA | ;
      458     1202                           K@ECHO | ;
      459     1203                           K@EOM | ;
      460     1204                           K@FORMAT | ;
      461     1205                           K@INTERPRETIVE | ;
      462     1206                           KILL11 | ;           /* O/N calls, abort, exit, nodes      */
      463     1207                           K@PROTECT | ;
      464     1208                           K@RUM | ;
      465     1209                           K@SAD | ;
      466     1210                           K@SCHEMA | ;
      467     1211                           K@SAVES | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            15   
      468     1212                           K@STATUS | ;
      469     1213                           K@STEP | ;
      470     1214                           K@SYMBOLS | ;
      471     1215                           K@TRACE | ;
      472     1216                           K@WHENS | ;
      473     1217                           KILL13 )             /* n - m                              */
      474     1218                KILL11 = L_ON [.B] KILL111
      475     1219                  KILL111 = ( K@CALLS | K@ABORT | K@EXIT | K@NODES )
      476     1220                KILL12(S@KILLDN) = K@DEF .B DD_SYMBOLS
      477     1221                KILL13(S@KILLID) = DECIMALS [ KILL131 ]
      478     1222                  KILL131 = [.B] L@DASH@TO [.B] DECIMALS
      479     1223                KILLDELTA(S@KILLDELTA) = K@DELTA [ .B RES ]
      480     1224            N_LET(C_LET) = L_LET .B VREFX_LET BEQUALSB CNSNT_REF [ IFSPEC ] CMD_TERM
      481     1225              BEQUALSB = ( [.B] L_EQUALS [.B] | .B )
      482     1226            N_LIST(C_LIST) = L_LIST [.B KILL13] [ IFSPEC ] CMD_TERM
      483     1227            N_STOP(C_STOP) = L_STOP ([.B] L@ALL [ IFSPEC ] CMD_TERM | ;
      484     1228                                     [.B] RES [ IFSPEC ] CMD_TERM)
      485     1229            N_MINI(C_MINI) = L_MINI [ IFSPEC ] CMD_TERM
      486     1230            N_MODIFYDW(C_MODIFYDW) = L_MODIFY [.B] L_DOUBLE [L_WORD] .B VREF MODIFY3
      487     1231              MODIFY3 = (.B VREFX [MODIFY4] [NWARN_OPT] [IFSPEC] CMD_TERM|;
      488     1232                            [IFSPEC] CMD_TERM)
      489     1233              MODIFY4 = .B L@LPAREN [.B] VREFX [.B] L@RPAREN
      490     1234            N_MODIFY(C_MODIFY) = L_MODIFY .B VREF MODIFY1
      491     1235              MODIFY1 = ( .B DD_INSTR [ MODIFY2 ] [NWARN_OPT] [ IFSPEC ] CMD_TERM | ;
      492     1236                             .B VREFX [ MODIFY2 ] [NWARN_OPT] [ IFSPEC ] CMD_TERM | ;
      493     1237                              [ IFSPEC ] CMD_TERM )
      494     1238              MODIFY2 = .B L@LPAREN [.B] ( DD_INSTR | VREFX ) [.B] L@RPAREN
      495     1239                NWARN_OPT(C@NWARN_OPT) = [.B] L_NWARN [.B]
      496     1240                INSTR(INSTR_CODE,D) = INSTR_MNEM [ L@BANG ] .B DD_INSTR_CONT
      497     1241                INSTRF = DD_INSTR [ FMTSPEC ]
      498     1242                  INSTR_MNEM(SYM_CODE,S,MAKEUC) = .SYMBOL-
      499     1243                  INSTR_EIS(D) = [ INSTR_MF0 [ INSTR_MF1 ] [ INSTR_MF2 ] ;
      500     1244                                   [ INSTR_XTRA ] [ INSTR_XTRA ] [ INSTR_XTRA ] ]
      501     1245                    INSTR_MF0(EIS_MF0) = INSTR_EIS_MF
      502     1246                    INSTR_MF1(EIS_MF1) = L@COMMA INSTR_EIS_MF
      503     1247                    INSTR_MF2(EIS_MF2) = L@COMMA INSTR_EIS_MF
      504     1248                    INSTR_XTRA(EIS_EXTRA) = L@COMMA OCT1C
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            16   
      505     1249                    INSTR_EIS_MF = L@LPAREN [ OCT1C [ OCT2 [ OCT3 [ TAG_4 ]]]] L@RPAREN
      506     1250                  INSTR_ADSC(D) = VREFX [ OCT1 [ OTAG_2 [ PR ]]]
      507     1251                  INSTR_BDSC(D) = VREFX [ OTAG_1 [ OCT2 [ OCT3 [ PR ]]]]
      508     1252                  INSTR_NDSC(D) = VREFX [ OCT1 [ OTAG_2 [ OCT3 [ OCT4 [ PR ]]]]]
      509     1253                  INSTR_SDSC(D) = VREFX [ OCT1 [ OCT2 [ OCT3 [ PR ]]]]
      510     1254                  INSTR_VDSC(D) = VREFX [ OTAG_1 [ TAG_2 [ PR ]]]
      511     1255                  INSTR_ZERO(D) = VREFX [ OCT1 ]
      512     1256                    OCT1 = L@COMMAH [ OCT1C ]
      513     1257                    OCT2 = L@COMMAH [ OCT2C ]
      514     1258                    OCT3 = L@COMMAH [ OCT3C ]
      515     1259                    OCT4 = L@COMMAH [ OCT4C ]
      516     1260                      OCT1C(TAG_NUM1) = (OCTIL | DECIMALS)
      517     1261                      OCT2C(TAG_NUM2) = (OCTIL | DECIMALS)
      518     1262                      OCT3C(TAG_NUM3) = (OCTIL | DECIMALS)
      519     1263                      OCT4C(TAG_NUM4) = (OCTIL | DECIMALS)
      520     1264                    OTAG_1 = L@COMMAH [ OTAG_1C ]
      521     1265                    OTAG_2 = L@COMMAH [ OTAG_2C ]
      522     1266                    TAG_2 = L@COMMAH [ TAG_2C ]
      523     1267                    TAG_4 = L@COMMAH [ TAG_4C ]
      524     1268                      OTAG_1C(TAG_NUM1) = ( DECIMALS | TAG )
      525     1269                      OTAG_2C(TAG_NUM2) = ( DECIMALS | TAG )
      526     1270                      TAG_2C(TAG_NUM2) = TAG
      527     1271                      TAG_4C(TAG_NUM4) = TAG
      528     1272                  INSTR_DFLT(D) = VREFX [ L@COMMAH [ TAG ] [ PR ] ]
      529     1273                    TAG(TAG_CODE) = ( TAG1 | TAG2 | TAG3 | TAG4 | OCTIL )
      530     1274                      TAG1(TAG1_CODE) = TM L@STAR
      531     1275                        TM = ( L@N | L@AU | L@QU | L@DU | L@IC | L@AL | L@QL | L@DL | ;
      532     1276                               L@X0 | L@X1 | L@X2 | L@X3 | L@X4 | L@X5 | L@X6 | L@X7 )
      533     1277                      TAG2(TAG2_CODE) = TM
      534     1278                      TAG3(TAG3_CODE) = L@STAR TM
      535     1279                      TAG4(TAG4_CODE) = ( L@CI | L@AD | L@F | L@SD | ;
      536     1280                                            L@SCR | L@SC | L@DIC | L@DI | ;
      537     1281                                            L@IDC | L@ID | L@I )
      538     1282                    PR = L@COMMA PR1
      539     1283                      PR1(PR_CODE) = [ PR2 ] ODIG
      540     1284                        PR2 = ( L@PR | L@AR )
      541     1285                INSTR_L6(INSTR_CODE,D) = ( INST | INST_G | INST_IO )
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            17   
      542     1286                  INST(C@INST) = SYMBOLS ','-( B_REG | R_REG | M_REG | S_REG );
      543     1287                                    [ ','-MASK ] .B ARGS
      544     1288
      545     1289                  INST_G(C@INST_G) = SYMBOLS [ ','-MASK ] .B ARGS
      546     1290                  INST_IO(C@INST_IO) = SYMBOLS .B '(' ARGS ')' ','- '(' ARGS ')' ;
      547     1291                                       [ ','- '(' ARGS ')' ]
      548     1292                    MASK(C@MASK)              = ('X'-.QUOTE-|HEXIL)
      549     1293                    ARGS = ( BASED_INDEXED_AUTODEC | ;
      550     1294                               BASED_INDEXED_AUTOINC | ;
      551     1295                               INDIRECT_INDEXED | ;
      552     1296                             BASED_INDEXED | ;
      553     1297                             BASED_INDIRECT_INDEXED | ;
      554     1298                             BASE_REL_IND | ;
      555     1299                             INDEXED | ;
      556     1300                             BASED_AUTODEC | ;
      557     1301                             BASED_AUTOINC | ;
      558     1302                             REL_INDIRECT | ;
      559     1303                             BASE_REL | ;
      560     1304                             IMO_VALUE | ;
      561     1305                             BASED | ;
      562     1306                             INDIRECT_BASED | ;
      563     1307                             REL_DIRECT | ;
      564     1308                             SHORT_PREL | ;
      565     1309                             INT_VECTOR | ;
      566     1310                             INDIRECT1 | ;
      567     1311                             REGISTER | ;
      568     1312                             DIRECT ) [.B]
      569     1313                    BASED_INDEXED_AUTODEC(C@ARG_BIAD)  = ','-( B_1 | B_2 | B_3 ) ','-;
      570     1314                          ( R_1 | R_2 | R_3 ) ',PUSH'
      571     1315                    BASED_INDEXED_AUTOINC(C@ARG_BIAI)  = ','-( B_1 | B_2 | B_3 ) ','-;
      572     1316                          ( R_1 | R_2 | R_3 ) ',POP'
      573     1317                    INDIRECT_INDEXED(C@ARG_II)         = '*'-EXP ','-;
      574     1318                          ( R_1 | R_2 | R_3 )
      575     1319                    BASED_INDEXED(C@ARG_BI)            = ','-B_REG ','-;
      576     1320                          ( R_1 | R_2 | R_3 )
      577     1321                    BASED_INDIRECT_INDEXED(C@ARG_BII)  = '*,'-B_REG ','-;
      578     1322                          ( R_1 | R_2 | R_3 )
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            18   
      579     1323                    BASE_REL_IND(C@ARG_BRI)            = '*'-EXP ','-B_REG
      580     1324                    INDEXED(C@ARG_IDX)                 = EXP ','-( R_1 | R_2 | R_3 )
      581     1325                    BASED_AUTODEC(C@ARG_BAD)           = ','-B_REG ',PUSH'
      582     1326                    BASED_AUTOINC(C@ARG_BAI)           = ','-B_REG ',POP'
      583     1327                    REL_INDIRECT(C@ARG_RI)             = '*'-EXP ',PREL'
      584     1328                    BASE_REL(C@ARG_BR)                 = EXP ','-B_REG
      585     1329                    IMO_VALUE(C@ARG_IMV)               = EXP ',IMO'
      586     1330                    BASED(C@ARG_B)                     = ','-B_REG
      587     1331                    INDIRECT_BASED(C@ARG_IB)           = '*,'-B_REG
      588     1332                    REL_DIRECT(C@ARG_RD)               = EXP ',PREL'
      589     1333                    SHORT_PREL(C@ARG_SP)               = EXP ',SPREL'
      590     1334                    INT_VECTOR(C@ARG_IV)               = EXP ',$IV'
      591     1335                    INDIRECT1(C@ARG_IDT)               = '*'-EXP
      592     1336                    REGISTER(C@ARG_R)                  = ( R_REG | B_REG | S_REG )
      593     1337                    DIRECT(C@ARG_D)                    = EXP
      594     1338                    EXP                       = VREFX
      595     1339                    B_REG                     = ( B_1 | B_2 | B_3 | B_4 | B_5 | B_6 | B_7 )
      596     1340                    B_1(C@B1)                 = 'B1'-
      597     1341                    B_2(C@B2)                 = 'B2'-
      598     1342                    B_3(C@B3)                 = 'B3'-
      599     1343                    B_4(C@B4)                 = 'B4'-
      600     1344                    B_5(C@B5)                 = 'B5'-
      601     1345                    B_6(C@B6)                 = 'B6'-
      602     1346                    B_7(C@B7)                 = 'B7'-
      603     1347
      604     1348                    R_REG                     = ( R_1 | R_2 | R_3 | R_4 | R_5 | R_6 | R_7 )
      605     1349                    R_1(C@R1)                 = 'R1'-
      606     1350                    R_2(C@R2)                 = 'R2'-
      607     1351                    R_3(C@R3)                 = 'R3'-
      608     1352                    R_4(C@R4)                 = 'R4'-
      609     1353                    R_5(C@R5)                 = 'R5'-
      610     1354                    R_6(C@R6)                 = 'R6'-
      611     1355                    R_7(C@R7)                 = 'R7'-
      612     1356
      613     1357                    M_REG                     = ( M_1 | M_2 | M_3 )
      614     1358                    M_1(C@M1)                 = 'M1'-
      615     1359                    M_2(C@M2)                 = 'M2'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            19   
      616     1360                    M_3(C@M3)                 = 'M3'-
      617     1361
      618     1362                    S_REG                     = ( S_1 | S_2 | S_3 )
      619     1363                    S_1(C@S1)                 = 'S1'-
      620     1364                    S_2(C@S2)                 = 'S2'-
      621     1365                    S_3(C@S3)                 = 'S3'-
      622     1366            N_MLCT(C_MLCT) = L_MLCT .B HEXIL [.B HEXIL] [IFSPEC] CMD_TERM
      623     1367            N_NAME(C_NAME) = L_NAME .B (L@ENTDEFS|L@VARS) [.B .SYMBOL+'-?'] [IFSPEC]
              1367                CMD_TERM
      624     1368            N_NEXT(C_MACTIVE) = ( L@NEXT | L@LF ) [.B] [ FMTSPEC ] [ IFSPEC ] CMD_TERM
      625     1369            N_OA(C_OA) = L_ON [.B] K@ABORT [ IFSPEC ] CMD_TERM
      626     1370            N_OC(C_OC) = L_ON [.B] L_CALL [ * { L@SILENT | L@INACTIVE } * ] ;
      627     1371                           .B [ QUAL ] SIMBLE [ IFSPEC ] CMD_TERM
      628     1372            N_ONCALLS(C_ONCALLS) = L_ON [.B] [ L@X@T ] L_CALLS [ * { L@SILENT | L@INACTIVE
              1372                } * ] [ IFSPEC ] CMD_TERM
      629     1373            N_OE(C_OE) = L_ON [.B] K@EXIT [ IFSPEC ] CMD_TERM
      630     1374            N_ONN(C_ONN) = L_ON [.B] L_NODE [ * { L@SILENT | L@INACTIVE } * ] ;
      631     1375                             .B SIMBLE1 [ IFSPEC ] CMD_TERM
      632     1376                  SIMBLE1 = ( QTSTRINGS FSPECS | FIDS )
      633     1377            N_ONNODES(C_ONNODES) = L_ON [.B] L_NODES [ * { L@SILENT | L@INACTIVE } * ] [
              1377                IFSPEC ] CMD_TERM
      634     1378            NU_OUTPUT(C_OUTPUT,D) = L_OUTPUT OUTPUT1
      635     1379              OUTPUT1 = ( [.B] ECHO1 .B FIDS [ IFSPEC ] CMD_TERM | ;
      636     1380                          .B FIDS [ IFSPEC ] CMD_TERM | ;
      637     1381                          [ IFSPEC ] CMD_TERM )
      638     1382            NX_OUTPUT(C_OUTPUT,D) = L_OUTPUT [.B] [ ECHO1 ] [.B] ECHO2 [ IFSPEC ] CMD_TERM
      639     1383            N_OPEN(C_MACTIVE) = ( L@OPEN | L@LBRACKET | L@LBRACE ) [.B] [ FMTSPEC ] [
              1383                IFSPEC ] CMD_TERM
      640     1384            N_PLUGH(C_PLUGH) = L_PLUGH ( .B VREFX [ IFSPEC ] CMD_TERM | ;
      641     1385                                           [ IFSPEC ] CMD_TERM )
      642     1386            N_PMD(C_PMD) = L_PMD ( [.B] L@LPAREN [.B] PMDNAME [.B] [ L@RPAREN ] | ;
      643     1387                                     [ .B PMDNAME ] ) [ IFSPEC ] CMD_TERM
      644     1388              PMDNAME = < BCOMMAB, { PMD@AUTO | ;
      645     1389                                        PMD@ALL | ;
      646     1390                                        PMD@COMMON | ;
      647     1391                                        PMD@DS1 | ;
      648     1392                                        PMD@DS2 | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            20   
      649     1393                                        PMD@DS3 | ;
      650     1394                                        PMD@DS4 | ;
      651     1395                                        PMD@DS5 | ;
      652     1396                                        PMD@DS6 | ;
      653     1397                                        PMD@DS7 | ;
      654     1398                                        PMD@DS8 | ;
      655     1399                                        PMD@DS | ;
      656     1400                                        PMD@DATA | ;
      657     1401                                        PMD@DCBS | ;
      658     1402                                        PMD@DD | ;
      659     1403                                        PMD@ISR | ;
      660     1404                                        PMD@JIT | ;
      661     1405                                        PMD@PLUGH | ;
      662     1406                                        PMD@PROCEDURE | ;
      663     1407                                        PMD@ROSEG | ;
      664     1408                                        PMD@TCB } >
      665     1409            N_PROTECT(C_PROTECT) = L_PROTECT [ IFSPEC ] CMD_TERM
      666     1410            N_PROMPT(C_PROMPT) = L_PROMPT .B ( QTSTRINGS | DD_SYMBOLS ) [ IFSPEC ] CMD_TERM
      667     1411            N_PREV(C_MACTIVE) = ( L@PREV | L@UPARROW ) [.B] [ FMTSPEC ] [ IFSPEC ] CMD_TERM
      668     1412            N_QUIT(C_QUIT) = L_QUIT ( [ IFSPEC ] CMD_TERM | ;
      669     1413                                      [.B] RES [ IFSPEC ] CMD_TERM )
      670     1414                       RES(RES_CODE) = .ACCOUNT8-
      671     1415            N_RANGE(C_RANGE) = L_RANGE [.B] [ XDO ] [ IFSPEC ] CMD_TERM
      672     1416            NU_READ(C_READ,D) = L_READ ( .B FIDS [ LINESPEC ] [ IFSPEC ] CMD_TERM | ;
      673     1417                                         [ IFSPEC ] CMD_TERM )
      674     1418              LINESPEC = BCOMMAB ( DECIMALS L@PERIODD [ DECIMALS ] | ;
      675     1419                                      [ L@PERIODD ] DECIMALS )
      676     1420            NX_READ(C_READ,D) = L_READ [.B] READ1 [ IFSPEC ] CMD_TERM
      677     1421              READ1 = ( L@ME | L@CR | L@CARDS | L@TAPE | L@PATCH | L@UC )
      678     1422            N_REPORT(C_REPORT) = L_REPORT [ [.B] COMPID ] [ [.B] REPORT1 ] [ IFSPEC ]
              1422                CMD_TERM
      679     1423              COMPID = ( L@CC | ;
      680     1424                            L@COBOL | ;
      681     1425                            L@FPL | ;
      682     1426                            L@FORTRAN | ;
      683     1427                            L@GMAP | ;
      684     1428                            L@PASCAL | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            21   
      685     1429                            L@PL1 | ;
      686     1430                            L@PL6 | ;
      687     1431                            L@RPG )
      688     1432              REPORT1 = ( L@ALL | ;
      689     1433                             L@DEFAULT | ;
      690     1434                             < BCOMMAB, { L@OFFSET | ;
      691     1435                                          L@LINE | ;
      692     1436                                          L@TYPE } > )
      693     1437            N_RUM(C_RUM) = L_RUM .B FIDS ( [.B] L@LPAREN [.B] RUM1 [.B] [ L@RPAREN ] | ;
      694     1438                                             [ BCOMMAB RUM1 ] ) [ IFSPEC ] CMD_TERM
      695     1439              RUM1 = < BCOMMAB, { ( L@NUTS | L@UTS BEQUALSB RUMUTS ) | ;
      696     1440                                     ( L@COPY | L@INPUT | L@TEST ) | ;
      697     1441                                     RUMBUF } >
      698     1442                RUMUTS(C@RUMUTS) = DECIMALS ( '/'- | '%'- ) ;
      699     1443                                   DECIMALS ( '/'- | '%'- ) ;
      700     1444                                   DECIMALS .B ;
      701     1445                                   DECIMALS ':'- ;
      702     1446                                   DECIMALS ':'- ;
      703     1447                                   DECIMALS '.'- ;
      704     1448                                   DECIMALS
      705     1449               RUMBUF(C@RUMBUF) = 'B/UFFERS'- BEQUALSB DECIMALS
      706     1450            N_SAD(C_SAD) = L_SAD [.B] XDO [ IFSPEC ] CMD_TERM
      707     1451            N_SAVE(C_SAVE) = L_SAVE [ IFSPEC ] CMD_TERM
      708     1452            N_SCHEMA(C_SCHEMA) = L_SCHEMA ( .B POSITION [ IFSPEC ] CMD_TERM | ;
      709     1453                                            .B FIDS [IFSPEC] CMD_TERM | ;
      710     1454                                              [ IFSPEC ] CMD_TERM )
      711     1455            N_SELCHAN(C_SELCHAN) = L_SELCHAN .B HEXIL [IFSPEC] CMD_TERM
      712     1456             N_SHOW(C_SHOW) = L_SHOW ([.B ECHO1 .B FIDS] [IFSPEC] CMD_TERM | ;
      713     1457                                       .B SHOW1 [.B ECHO1 .B FIDS] [IFSPEC] CMD_TERM | ;
      714     1458                                      .B SHOWFPRG [.B ECHO1 .B FIDS] [IFSPEC] CMD_TERM )
      715     1459              SHOW1 = ( ;
      716     1460                           K@ABBREVS | ;
      717     1461                           K@ALTVAR | ;
      718     1462                           K@ANLZ | ;
      719     1463                           K@ALL | ;
      720     1464                           K@ATS | ;
      721     1465                           K@BYPASS | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            22   
      722     1466                           K@COPY | ;
      723     1467                           K@DIC | ;
      724     1468                           K@DEBUG | ;
      725     1469                           K@DEFSHOW | ;
      726     1470                           K@ECHO | ;
      727     1471                           K@EOM | ;
      728     1472                           K@FPRGS | ;
      729     1473                           K@FORMAT | ;
      730     1474                           K@KEEP | ;
      731     1475                           K@IGNORE | ;
      732     1476                           KILL11 | ;           /* O/N calls, abort, exit, nodes      */
      733     1477                           K@PROTECT | ;
      734     1478                           K@REPORT | ;
      735     1479                           K@RUM | ;
      736     1480                           K@RANGE | ;
      737     1481                           K@SCHEMA | ;
      738     1482                           K@SYNTAX | ;
      739     1483                           K@SAD | ;
      740     1484                           K@SAVES | ;
      741     1485                           K@STATUS | ;
      742     1486                           K@STEP | ;
      743     1487                           K@TRAP | ;
      744     1488                           K@TRACE | ;
      745     1489                           K@USE | ;
      746     1490                           K@WHENS | ;
      747     1491                           KILL13 )             /* n - m                              */
      748     1492                SHOWFPRG(S@SHOW_FPRG) = RES
      749     1493            N_SILENT(C_SILENT) = L_SILENT [.B] KILL13 [ IFSPEC ] CMD_TERM
      750     1494            N_STATUS(C_STATUS) = L_STATUS [ IFSPEC ] CMD_TERM
      751     1495            N_STEP(C_STEP) = L_STEP [.B] [ ( STEP1 | STEP2 | DECIMALS ) ] [ IFSPEC ]
              1495                CMD_TERM
      752     1496              STEP1 = L_BY [.B] ( L@INSTRUCTIONS | ;
      753     1497                                     L@PARAGRAPHS | ;
      754     1498                                     L@SUBSTATEMENTS | ;
      755     1499                                     L@STATEMENTS )
      756     1500              STEP2 = L@ONE [.B] L_CALL
      757     1501            N_STORE(C_STORE) = L_STORE .B ( STOREV [ IFSPEC ] CMD_TERM | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            23   
      758     1502                                              STOREI [ IFSPEC ] CMD_TERM )
      759     1503              STOREI = DD_INSTR [ * { FIND1 | FIND2 } * ]
      760     1504              STOREV = VREFX [ * { FIND1 | FIND2 } * ]
      761     1505            N_SYNTAX(C_SYNTAX) = L_SYNTAX [ [.B] COMPID ] [ IFSPEC ] CMD_TERM
      762     1506            N_T(C_T) = L_T [.B] ( TR1 [ IFSPEC ] CMD_TERM | ;
      763     1507                                    ( TR2 | TR3 ) [ IFSPEC ] CMD_TERM )
      764     1508              TR1 = [ L@X@T ] L@CALL@T [ L@SILENT ] [ .B SIMBLE ]
      765     1509              TR2 = ( L@OFF@T | ;
      766     1510                         L@ON@T | ;
      767     1511                         L@PARAGRAPHS | ;
      768     1512                         L@SUBSTATEMENTS | ;
      769     1513                         L@STATEMENTS | ;
      770     1514                         L@TRANSFER ) [ L@SILENT ] [.B SIMBLE]
      771     1515              TR3 = [ L@SILENT ]
      772     1516            N_TBOOT(C_TBOOT) = L_TBOOT [ IFSPEC ] CMD_TERM
      773     1517            NU_TRAP(C_TRAP,D) = L_TRAP [.B] ( KTI@ALL | KTI@NONE | KTINAME ) [ IFSPEC ]
              1517                CMD_TERM
      774     1518            NF_TRAP(C_TRAP,D) = L_TRAP [.B] (L@HOST | KTI@ALL | KTI@NONE | KTIFNAME | RES)
              1518                ;
      775     1519                                [.B ( KTI@ALL | KTI@NONE | KTIFNAME )] [IFSPEC] CMD_TERM
      776     1520            N_UNFID(C_UNFID) = L_UNFID [{L@UNFC|L@UNFO}] [[.B] (SIMBLE|KILL13)] [ IFSPEC ]
              1520                CMD_TERM
      777     1521            N_TSA(C_TSA) = L_TSA [.B HEXIL] [IFSPEC] CMD_TERM
      778     1522            N_UNSILENT(C_UNSILENT) = L_UNSILENT [.B] KILL13 [ IFSPEC ] CMD_TERM
      779     1523            N_UNSHARE(C_UNSHARE) = L_UNSHARE [.B] ;
      780     1524                                   [ ( L@ALL | ;
      781     1525                                   < BCOMMAB, { L@PROGRAM | L@LIBRARY } > ) ] ;
      782     1526                                   [ IFSPEC ] CMD_TERM
      783     1527            N_UPDATE(C_UPDATE) = L_UPDATE ( [.B] ( UPDATE3 | UPDATE2 ) | ;
      784     1528                                            [ L@ATTACHMENT ] [.B] UPDATE1 )
      785     1529             UPDATE1(C@UPDATE1) = KILL13 CMD_TERM
      786     1530             UPDATE2(C@UPDATE2) = DECIMALS BCOMMAB DECIMALS CMD_TERM
      787     1531             UPDATE3(C@UPDATE3) = DECIMALS [ BCOMMAB DECIMALS ] .B .ASYM CMD_TERM
      788     1532            N_USE(C_USE) = L_USE [.B] [ USE1 ] [ IFSPEC ] CMD_TERM
      789     1533              USE1 = ( USE17 | ;
      790     1534                       L@CURRENT | ;
      791     1535                          USE10 | ;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            24   
      792     1536                          USE09 | ;
      793     1537                          USE08 | ;
      794     1538                          USE11 | ;
      795     1539                          USE12 | ;
      796     1540                          USE13 | ;
      797     1541                          USE14 | ;
      798     1542                          USE15 | ;
      799     1543                          USE18 | ;
      800     1544                          USE19 | ;
      801     1545                          USE16 )
      802     1546                USE08(C@UNODE) = L_NODE .B SIMBLE1
      803     1547                USE09(C@UMON) = L@UMON [ ( B#B DECIMALS | B@B DD_BASE ) ]
      804     1548                USE10(C@UREAL) = L@REAL [ BCOMMAB ( L@AARD | L@XDEL | DD_BASE ) ]
      805     1549                USE11(C@UPT) = L@PT@ [.B] DD_BASE
      806     1550                USE12(C@UU@) = L@USER B@B DD_BASE [ ULSTYPE ]
      807     1551                  B@B = [.B] L@@ [.B]
      808     1552                ULSTYPE = BCOMMAB ULSTYPE1
      809     1553                  ULSTYPE1 = ( L@U | L@ICP | L@IDB | L@ASL | L@LSMON )
      810     1554                USE13(C@UU#) = L@USER B#B DD_BASEBOTH [ ULSTYPE ]
      811     1555                  B#B = [.B] L_# [.B]
      812     1556                USE14(C@UU) = L@USER [ ULSTYPE ]
      813     1557                USE15(C@UG1)  = L_G1
      814     1558                USE16(C@UFPRG_UHOST) = ( L@HOST | RES )
      815     1559                USE17(C@USECTION) = L_SECTION [.B  (L@MONENT | L@MONIS | L@FD | L@BF) ]
      816     1560                USE18(C@USEASDT) = L@ASDT .B POSITION
      817     1561                USE19(C@USELVL) = L@LVL .B DD_BASE
      818     1562            N_WAIT(C_WAIT) = L_WAIT CMD_TERM
      819     1563            N_WHEN(C_WHEN) = L_WHEN [ * { L@SILENT | L@INACTIVE } * ] ;
      820     1564                              .B VREFX [ [.B] IFREL [.B] CNSNT_REF ] [ N_AT11 ] ;
      821     1565                              [ IFSPEC ] CMD_TERM
      822     1566            N_XCON(C_XCON) = L_XCON [ IFSPEC ] CMD_TERM
      823     1567            N_XEQ(C_XEQ) = L_XEQ .B ( DD_INSTR [ IFSPEC ] CMD_TERM | ;
      824     1568                                        VREFX [ IFSPEC ] CMD_TERM )
      825     1569          IFSPEC(C@IFSPEC) = .B L_IF .B VREFX IFREL ;
      826     1570                               [.B] CNSNT_REF
      827     1571            IFREL = ( [.B] IFREL1 [.B] | ;
      828     1572                         .B IFREL2 .B )
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            25   
      829     1573              IFREL1 = ( L@NOTEQ | L@LESSEQ | L@GREATEQ | L@GRLESS | ;
      830     1574                            L@LESSGR | L@EQLESS | L@EQGREAT | L@EQUALS | ;
      831     1575                            L@GREATER | L@LESS )
      832     1576              IFREL2 = ( L@EQUALS1 | ;
      833     1577                            L@GREATEQ1 | ;
      834     1578                            L@GREATER1 | ;
      835     1579                            L@LESSEQ1 | ;
      836     1580                            L@LESS1 | ;
      837     1581                            L@NOTEQ1 )
      838     1582            CNSNT_REF(C@CNSNT_REF) = ( CNR1 | ; /* 'string'B|O|C|X                    */
      839     1583                                       DD_CNR2 | ; /* HOST -.oct-c-b,$L|P|ASdec|.oct  */
      840     1584                                                /* L6 - .hex[-.b]                     */
      841     1585                                         CNR3 | ; /* C|O|X'string'                    */
      842     1586                                      DD_CNR4 | ; /* +/-d.d | +/-d.dD|E+/-d           */
      843     1587                                                /***[ PORMX ] DECIMALS | ;*** +/-dec  */
      844     1588                              [ PORMX ] DD_BASE | ; /* +/-.oct                        */
      845     1589                                         CNR5 | ; /* (real,real)                      */
      846     1590                                         CNR6 ) /* T|.TRUE.|F|.FALSE                  */
      847     1591              CNR1(CNR1_CODE) = QTSTRINGS [ FSPEC ]
      848     1592                FSPEC = ( FSPECB | FSPECO | FSPECC | FSPECX | FSPECEB )
      849     1593              CNR2_HOST(CNR2HOST_CODE) = OCTIL [ CNR21 ] L@COMMA CNR22 XDO
      850     1594                CNR21 = L@MINUS ODIG [ CNR211_HOST ]
      851     1595                  CNR211_HOST = L@MINUS OCTIL1
      852     1596                CNR22 = ( L@$LS | L@$PS | L@$AS )
      853     1597              CNR2_L6(CNR2L6_CODE) = HEXIL [ CNR211_L6 ]
      854     1598                CNR211_L6 = L@MINUS HEXIL1
      855     1599              CNR3(CNR3_CODE) = FSPEC1 QTSTRINGS
      856     1600                FSPEC1 = ( FSPECC | FSPECOF | FSPECX )
      857     1601              CNR4_FORTRAN(D) = ( FORT_REAL | [ PORMX ] DECIMALS )
      858     1602                FORT_REAL(CNR4FORT_CODE) = [ PORMX ] ( FORT_R1 | FORT_R2 )
      859     1603                  FORT_R1 = FORT_I FORT_EXP
      860     1604                    FORT_I(FORTI_CODE) = DECIMALS
      861     1605                    FORT_EXP(FORTE_CODE) = L@DORE [ PORMX ] DECIMALS
      862     1606                  FORT_R2 = FORT_DEC [ FORT_EXP ]
      863     1607                    FORT_DEC = ( FORT_I L@PERIOD [ FORT_F ] | ;
      864     1608                                    L@PERIOD FORT_F )
      865     1609                    FORT_F(FORTF_CODE) = DECIMALS
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            26   
      866     1610              CNR4_COBOL(CNR4COBOL_CODE,D) = [ PORMX ] ;
      867     1611                                             ( DECIMALS L@PERIODD [ DECIMALS ] | ;
      868     1612                                             [ L@PERIODD ] DECIMALS )
      869     1613              CNR4_PL6(D) = [ PORMX ] DECIMALS
      870     1614              CNR5(CNR5_CODE) = L@LPAREN [.B] FORT_REAL BCOMMAB FORT_REAL [.B] L@RPAREN
      871     1615              CNR6(CNR6_CODE) = ( L@TRUE | L@FALSE )
      872     1616          COMMENTS(C_COMMENTS) = [.B] .END
      873     1617          CMD_TERM = [.B] ( SEMICOLON | .END )
      874     1618        %EJECT;
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            27   
      875     1619        FMT1(FMT1_CODE) = 'O/CTAL'-
      876     1620        FMT10(FMT10_CODE) = 'E/PTR'-
      877     1621        FMT11(FMT11_CODE) = 'A/R'-
      878     1622        FMT12(FMT12_CODE) = 'V/ECTOR'-
      879     1623        FMT13(FMT13_CODE) = 'X'-                /* X                                  */
      880     1624        FMT16(FMT16_CODE) = 'F/LOAT'-
      881     1625        FMT17(FMT17_CODE) = 'J/DE'-
      882     1626        FMT18(FMT18_CODE) = 'X1'-
      883     1627        FMT19(FMT19_CODE) = 'T/IME'-
      884     1628        FMT20(FMT20_CODE) = 'Z/ERO'-
      885     1629        FMT21(FMT21_CODE) = 'EB/CDIC'-
      886     1630        FMT2(FMT2_CODE) = 'U/BIN'-
      887     1631        FMT3(FMT3_CODE) = 'S/BIN'-
      888     1632        FMT4(FMT4_CODE) = 'C/HAR'-
      889     1633        FMT5(FMT5_CODE) = 'B/IT'-
      890     1634        FMT6(FMT6_CODE) = 'I/NSTR'-
      891     1635        FMT7(FMT7_CODE) = 'P/TR'-
      892     1636        FMT8(FMT8_CODE) = 'D/ESCR'-
      893     1637        FMT9(FMT9_CODE) = 'R/EL'-
      894     1638        FMT0(FMT0_CODE) = 'REM/EMBER'-
      895     1639        FSPECB(C@FSPECB) = 'B/IT'-
      896     1640        FSPECC(C@FSPECC) = 'C/HAR'-
      897     1641        FSPECO(C@FSPECO) = 'O/CTAL'-
      898     1642        FSPECOF(C@FSPECOF) = 'O'-
      899     1643        FSPECX(C@FSPECX) = 'X'-
      900     1644        FSPECEB(C@FSPECEB)='EB/CDIC'-
      901     1645        FSPECS = 'S/YMBOL'-
      902     1646        K@ABBREVS(S@ABBREVS) = 'AB/BREVS'-
      903     1647        K@ABORT(S@ABORT) = 'A/BORT'-
      904     1648        K@ALL(S@ALL) = 'AL/L'-
      905     1649        K@ALTVAR(S@ALTVAR) = 'A/LTERNATE' 'V/ARIABLES'-
      906     1650        K@ANLZ(S@ANLZ) = 'AN/LZ'-
      907     1651        K@ATS(S@ATS) = 'A/TS'-
      908     1652        K@BYPASS(S@BYPASS) = 'B/YPASS'-
      909     1653        K@CACHE(S@CACHE) = 'CA/CHE'-
      910     1654        K@CALLS(S@CALLS) = 'C/ALLS'-
      911     1655        K@COPY(S@COPY) = 'C/OPY'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            28   
      912     1656        K@DEBUG(S@DEBUG) = 'DEB/UG'-
      913     1657        K@DEF = 'D/EF'-
      914     1658        K@DEFS(S@DEFS) = 'DEFS'-
      915     1659        K@DEFSHOW(S@DEFS) = 'D/EFS'-
      916     1660        K@DELTA(S@DELTA) = 'DEL/TA'-
      917     1661        K@DIC(S@DIC) = 'DI/C'-
      918     1662        K@ECHO(S@ECHO) = 'EC/HO'-
      919     1663        K@EOM(S@EOM) = 'E/OM'-
      920     1664        K@EXIT(S@EXIT) = 'E/XIT'-
      921     1665        K@FORMAT(S@FORMAT) = 'F/ORMAT'- [ [.B] ( L@EVAL | L@MODIFY ) ]
      922     1666        K@FPRGS(S@FPRGS) = 'FP/RGS'-
      923     1667        K@IGNORE(S@IGNORE) = 'IG/NORE'-
      924     1668        K@INTERPRETIVE(S@INTERPRETIVE) = 'INTER/PRETIVE'-
      925     1669        K@KEEP(S@KEEP) = 'K/EEP'-
      926     1670        K@NODES(S@NODES) = 'N/ODES'-
      927     1671        K@PROTECT(S@PROTECT) = 'P/ROTECT'-
      928     1672        K@RANGE(S@RANGE) = 'R/ANGE'-
      929     1673        K@REPORT(S@REPORT) = 'RE/PORT'-
      930     1674        K@RUM(S@RUM) = 'RU/M'- ['SEY'-]
      931     1675        K@SAD(S@SAD) = 'SAD'-
      932     1676        K@SAVES(S@SAVES) = 'SA/VES'-
      933     1677        K@SCHEMA(S@SCHEMA) = 'SC/HEMA'-
      934     1678        K@STATUS(S@STATUS) = 'STAT/US'-
      935     1679        K@STEP(S@STEP) = 'S/TEP'-
      936     1680        K@SYMBOLS(S@SYMBOLS) = 'SY/MBOLS'-
      937     1681        K@SYNTAX(S@SYNTAX) = 'SY/NTAX'-
      938     1682        K@TRACE(S@TRACE) = 'T/RACE'-
      939     1683        K@TRAP(S@TRAP) = 'TRAP'-
      940     1684        K@USE(S@USE) = 'U/SE'-
      941     1685        K@WHENS(S@WHENS) = 'W/HENS'-
      942     1686        KTI@ALL(I@ALL) = 'AL/L'-
      943     1687        KTI@ARITHMETIC(I@ARITHMETIC) = 'AR/ITHMETIC'-
      944     1688        KTI@BREAK(I@BREAK) = 'B/REAK'-
      945     1689        KTI@COMMAND(I@COMMAND) = 'CO/MMAND'-
      946     1690        KTI@DERAIL(I@DERAIL) = 'DE/RAIL'-
      947     1691        KTI@DIVIDE_CHECK(I@DIVIDE_CHECK) = 'DI/VIDE_CHECK'-
      948     1692        KTI@ERROR(I@ERROR) = 'ER/ROR'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            29   
      949     1693        KTI@EVENT(I@EVENT) = 'EV/ENT'-
      950     1694        KTI@FAULT_TAG(I@FAULT_TAG) = 'F/AULT_TAG'-
      951     1695        KTI@IPR(I@IPR) = 'I/PR'-
      952     1696        KTI@LOCKUP(I@LOCKUP) = 'L/OCKUP'-
      953     1697        KTI@MCL(I@MCL) = 'M/CL'-
      954     1698        KTI@MEMORY(I@MEMORY) = 'ME/MORY'-
      955     1699        KTI@MME(I@MME) = 'MM/E'-
      956     1700        KTI@MONITOR(I@MONITOR) = 'MO/NITOR'-
      957     1701        KTI@NONE(I@NONE) = 'N/ONE'-
      958     1702        KTI@OVERFLOW(I@OVERFLOW) = 'OV/ERFLOW'-
      959     1703        KTI@PAGE(I@PAGE) = 'PA/GE'-
      960     1704        KTI@PMME(I@PMME) = 'PM/ME'-
      961     1705        KTI@PROGRAMMED(I@PROGRAMMED) = 'PR/OGRAMMED'-
      962     1706        KTI@SEC_1(I@SEC_1) = 'SE/C'- [ 'URITY'- ] '_1'-
      963     1707        KTI@SEC_2(I@SEC_2) = 'SE/C'- [ 'URITY'- ] '_2'-
      964     1708        KTI@SEG(I@SEG) = 'SEG'-
      965     1709        KTI@TIMER(I@TIMER) = 'T/IMER'-
      966     1710        KTI@TRAP(I@TRAP) = 'T/RAP'-
      967     1711        KTI@XCON(I@XCON) = 'X/CON'-
      968     1712        L@$AS(C@$AS) = '$A/S'-
      969     1713        L@$LS(C@$LS) = '$L/S'-
      970     1714        L@$PS(C@$PS) = '$P/S'-
      971     1715        L@@ = '@'-
      972     1716        L@AARD(C@AARDVARK) = 'A/ARDVARK'-
      973     1717        L@AD(T@AD) = 'AD'-
      974     1718        L@AL(T@AL) = 'AL'-
      975     1719        L@ALL(C@ALL) = 'A/LL'-
      976     1720        L@ALTRETURN(C@ALTRETURN) = 'A/LTRETURN'-
      977     1721        L@AND (AND_CODE,D) = '&'-
      978     1722        L@ANDC (AND_CODE,D) = .B '& '
      979     1723        L@AR = 'AR'-
      980     1724        L@ASDT = 'ASD/T'-
      981     1725        L@ASL(C@ASL) = 'A/SL'-
      982     1726        L@ASCII(C@ASCII) = 'A/SCII'-
      983     1727        L@ATTACHMENT(C@ATTACHMENT) = 'A/TTACHMENT'-
      984     1728        L@AU(T@AU) = 'AU'-
      985     1729        L@BANG(BANG_CODE) = '!'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            30   
      986     1730        L@BKSLASH = '\'-
      987     1731        L@CALL@T(C_TC) = 'C/ALLS'-
      988     1732        L@CARDS(C@CR) = 'C/ARDS'-
      989     1733        L@CC(C@CC) = 'CC'-
      990     1734        L@CI(T@CI) = 'CI'-
      991     1735        L@CLEAR(C@CLEAR) = 'C/LEAR'-
      992     1736        L@COBOL(C@COBOL) = 'CO/BOL'-
      993     1737        L@COLON = ':'-
      994     1738        L@COMMA = ','-
      995     1739        L@COMMAH(COMMA_CODE) = ','-
      996     1740        L@COPY(C@COPY) = 'C/OPY'-
      997     1741        L@CR(C@CR) = 'C/R'-
      998     1742        L@CURRENT(C@UCURR) = 'C/URRENT'-
      999     1743        L@DASH = '-'-
     1000     1744        L@DASH@TO = ( '-'- | 'T/O'- )
     1001     1745        L@DEFAULT(C@DEFAULT) = 'D/EFAULT'-
     1002     1746        L@DI(T@DI) = 'DI'-
     1003     1747        L@DIC(T@DIC) = 'DIC'-
     1004     1748        L@DIV(DIV_CODE,D) = '%'-
     1005     1749        L@DIVC(DIV_CODE,D) = .B '% '
     1006     1750        L@DORE = ( 'D'- | 'E'- )
     1007     1751        L@DL(T@DL) = 'DL'-
     1008     1752        L@DU(T@DU) = 'DU'-
     1009     1753        L@EBCDIC(C@EBCDIC) = 'E/BCDIC'-
     1010     1754        L@EJECT(C@PAGE_EJECT) = 'EJ/ECT'-
     1011     1755        L@ENTDEFS(C@ENTDEFS) = 'E/NTDEFS'-
     1012     1756        L@EQGREAT(C@GREATEQ) = '==>'-
     1013     1757        L@EQLESS(C@LESSEQ) = '==<'-
     1014     1758        L@EQUALS(C@EQUALS) = '='-
     1015     1759        L@EQUALS1(C@EQUALS) = 'E/Q'-
     1016     1760        L@EVAL(C@EVAL) = 'E/VALUATE'-
     1017     1761        L@F(T@F) = 'F'-
     1018     1762        L@FALSE(C@FALSE) = ( 'F/ALSE'- | '.FALSE.'- )
     1019     1763        L@FAULTS = 'F/AULTS'-
     1020     1764        L@FORTRAN(C@FORTRAN) = 'F/ORTRAN'-
     1021     1765        L@FPL(C@FPL) = 'FP/L'-
     1022     1766        L@FPRG(C@FPRG1) = 'F/PRG'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            31   
     1023     1767        L@FROM = 'F/ROM'-
     1024     1768        L@GMAP(C@GMAP) = 'G/MAP'-
     1025     1769        L@GREATEQ(C@GREATEQ) = '>='-
     1026     1770        L@GREATEQ1(C@GREATEQ) = 'GE'-
     1027     1771        L@GREATER(C@GREATER) = '>'-
     1028     1772        L@GREATER1(C@GREATER) = 'G/T'-
     1029     1773        L@GRLESS(C@NOTEQ) = '><'-
     1030     1774        L@HOST(C@HOST) = 'H/OST'-
     1031     1775        L@I(T@I) = 'I'-
     1032     1776        L@IC(T@IC) = 'IC'-
     1033     1777        L@ICP(C@ICP) = 'IC/P'-
     1034     1778        L@ID(T@ID) = 'ID'-
     1035     1779        L@IDB(C@IDB) = 'ID/B'-
     1036     1780        L@IDC(T@IDC) = 'IDC'-
     1037     1781        L@INACTIVE(C@INACTIVE) = 'I'-
     1038     1782        L@INDIRECT(M@INDIRECT) = '*'-
     1039     1783        L@INDIRECT_LEFT(M@INDIRECT_LEFT) = '*L/EFT'-
     1040     1784        L@INDIRECT_PTR(M@INDIRECT_PTR) = '*P/TR'-
     1041     1785        L@INDIRECT_RIGHT(M@INDIRECT_RIGHT) = '*R/IGHT'-
     1042     1786        L@INOF = ( 'OF'- | 'IN'- )
     1043     1787        L@INPUT(C@INPUT) = 'I/NPUT'-
     1044     1788        L@INSTRUCTIONS(C@INSTRUCTIONS) = 'I/NSTRUCTIONS'-
     1045     1789        L@INTO(C@INTO) = 'IN/TO'-
     1046     1790        L@KEEP(C@KEEP) = 'K/EEP'-
     1047     1791        L@LBRACE(M@OPEN) = '{'-
     1048     1792        L@LBRACKET(M@OPEN) = '['-
     1049     1793        L@LESS(C@LESS) = '<'-
     1050     1794        L@LESS1(C@LESS) = 'L/T'-
     1051     1795        L@LESSEQ(C@LESSEQ) = '<='-
     1052     1796        L@LESSEQ1(C@LESSEQ) = 'LE'-
     1053     1797        L@LESSGR(C@NOTEQ) = '<>'-
     1054     1798        L@LIBRARY(C@LIBRARY) = 'L/IBRARY'-
     1055     1799        L@LINE(C@LINE) = 'L/INE'-
     1056     1800        L@LF(M@NEXT) = '#012'-
     1057     1801        L@LONG(C@LONG) = 'L/ONG'-
     1058     1802        L@LP(C@LP) = 'L/P'-
     1059     1803        L@LPAREN = '('-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            32   
     1060     1804        L@LSHIFT(LSHIFT_CODE,D) = '<<'-
     1061     1805        L@LSHIFTC(LSHIFT_CODE,D) = .B '<< '
     1062     1806        L@LSMON(C@LSMON) = 'M/ON'-
     1063     1807        L@LVL = 'LE/VEL'-
     1064     1808        L@ME(C@ME) = 'M/E'-
     1065     1809        L@MINUS(MINUS_CODE,D) = '-'-
     1066     1810        L@MINUSC(MINUS_CODE,D) = .B '- '
     1067     1811        L@MODIFY(C@MODIFY) = 'M/ODIFY'
     1068     1812        L@MON(C@MON) = 'M/ON'-
     1069     1813        L@MONENT(C@MONENT) = 'M/ON'- 'E/NTRY'-
     1070     1814        L@MONIS(C@MONIS) = 'M/ON'- 'IS'-
     1071     1815        L@FD(C@FD) = 'FD'-
     1072     1816        L@BF(C@BF) = 'BF'-
     1073     1817        L@MORE(C@MORE) = 'M/ORE'-
     1074     1818        L@MULT(MULT_CODE) = '*'-
     1075     1819        L@MULTC(MULT_CODE) = .B '* '
     1076     1820        L@N(T@N) = 'N'-
     1077     1821        L@NEXT(M@NEXT) = 'N/EXT'-
     1078     1822        L@NO(C@NO) = 'N/O'-
     1079     1823        L@NONE(C@NONE) = 'N/ONE'-
     1080     1824        L@NOT(C@NOT) = ( 'N/OT'- | '~'- )
     1081     1825        L@NOTEQ(C@NOTEQ) = '~='-
     1082     1826        L@NOTEQ1(C@NOTEQ) = 'N/E'-
     1083     1827        L@NUTS(C@NUTS) = 'NUTS'-
     1084     1828        L@OFF@T(C_TO) = 'OF/F'-
     1085     1829        L@OFFSET(C@OFFSET) = 'O/FFSET'-
     1086     1830        L@ON(C@ON) = 'ON'-
     1087     1831        L@ON@T(C_TON) = 'O/N'-
     1088     1832        L@ONE(C@ONE) = 'O/NE'-
     1089     1833        L@OPEN(M@OPEN) = 'O/PEN'-
     1090     1834        L@OR (OR_CODE,D) = '|'-
     1091     1835        L@ORC (OR_CODE,D) = .B '| '
     1092     1836        L@OVER(C@OVER) = 'OV/ER'-
     1093     1837        L@PASCAL(C@PASCAL) = 'PA/SCAL'-
     1094     1838        L@PATCH(C@PATCH) = 'P/ATCH'-
     1095     1839        L@PARAGRAPHS(C@PARAGRAPHS) = 'P/ARAGRAPHS'-
     1096     1840        L@PERIOD = '.'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            33   
     1097     1841        L@PERIODD(C@PERIOD) = '.'-
     1098     1842        L@PL1(C@PL1) = 'PL1'-
     1099     1843        L@PL6(C@PL6) = 'P/L6'-
     1100     1844        L@PLUS(PLUS_CODE,D) = '+'-
     1101     1845        L@PLUSC(PLUS_CODE,D) = .B '+ '
     1102     1846        L@PR = 'PR'-
     1103     1847        L@PREV(M@PREV) = 'P/REV'-
     1104     1848        L@PROGRAM(C@PROGRAM) = 'P/ROGRAM'-
     1105     1849        L@PT@ = 'P/T@'-
     1106     1850        L@PTR = '->'-
     1107     1851        L@QL(T@QL) = 'QL'-
     1108     1852        L@QU(T@QU) = 'QU'-
     1109     1853        L@REAL = 'R/EAL'-
     1110     1854        L@RETURN(C@RETURN) = 'R/ETURN'-
     1111     1855        L@RPAREN = ')'-
     1112     1856        L@RPG(C@RPG) = 'R/PG'-
     1113     1857        L@RSHIFT(RSHIFT_CODE,D) = '>>'-
     1114     1858        L@RSHIFTC(RSHIFT_CODE,D) = .B '>> '
     1115     1859        L@SC(T@SC) = 'SC'-
     1116     1860        L@SCR(T@SCR) = 'SCR'-
     1117     1861        L@SCREECH(C@SCREECH) = 'S/CREECH'-
     1118     1862        L@SD(T@SD) = 'SD'-
     1119     1863        L@INDIRECT_SHORTPTR(M@INDIRECT_SHORTPTR) = '*SP'-
     1120     1864        L@SILENT(C@SILENT) = 'S'-
     1121     1865        L@SLASH(C@SLASH) = '/'-
     1122     1866        L@STAR = '*'-
     1123     1867        L@STATEMENTS(C@STATEMENTS) = 'ST/ATEMENTS'-
     1124     1868        L@STEP(C@STEP) = 'S/TEP'-
     1125     1869        L@SUBS = 'S/UBSTITUTE'-
     1126     1870        L@SUBSTATEMENTS(C@SUBSTATEMENTS) = 'SU/BSTATEMENTS'-
     1127     1871        L@TAB(M@INDIRECT) = '#011'-
     1128     1872        L@TAPE(C@TAPE) = 'T/APE'-
     1129     1873        L@TEST(C@TEST) = 'T/EST'-
     1130     1874        L@TO(C@ON) = 'TO'-
     1131     1875        L@TRANSFER(C_TT) = 'T/RANSFERS'-
     1132     1876        L@TRAP(C@TRAP) = 'T/RAP'-
     1133     1877        L@TRUE(C@TRUE) = ( 'T/RUE'- | '.TRUE.'- )
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            34   
     1134     1878        L@TYPE(C@TYPE) = 'T/YPE'-
     1135     1879        L@U(C@USER) = 'U/SER'-
     1136     1880        L@UC(C@ME) = 'U/C'-
     1137     1881        L@UMON = 'M/ON'-
     1138     1882        L@UNDER = 'U/NDER'-
     1139     1883        L@UNFC (C@UNFC) = 'C'-
     1140     1884        L@UNFO (C@UNFO) = 'O'-
     1141     1885        L@UPARROW(M@PREV) = '^'-
     1142     1886        L@USER = 'U/SER'-
     1143     1887        L@UTS = 'UTS'-
     1144     1888        L@VARS(C@VARS) = 'V/ARIABLES'-
     1145     1889        L@X0(T@X0) = ['X'-] '0'-
     1146     1890        L@X1(T@X1) = ['X'-] '1'-
     1147     1891        L@X2(T@X2) = ['X'-] '2'-
     1148     1892        L@X3(T@X3) = ['X'-] '3'-
     1149     1893        L@X4(T@X4) = ['X'-] '4'-
     1150     1894        L@X5(T@X5) = ['X'-] '5'-
     1151     1895        L@X6(T@X6) = ['X'-] '6'-
     1152     1896        L@X7(T@X7) = ['X'-] '7'-
     1153     1897        L@X@T(C@X) = 'X'-
     1154     1898        L@XDEL(C@XDELTA) = 'X/DELTA'-
     1155     1899        L_# = '#'-
     1156     1900        L_ABBREV = 'AB/BREVIATE'-
     1157     1901        L_ACTIVE = 'AC/TIVE'-
     1158     1902        L_ALIB = 'ALI/B'-
     1159     1903        L_ALTVAR = ( 'AL/TERNATE' | 'A/LTERNATE'- ) 'V/ARIABLES'-
     1160     1904        L_ANLZ = 'AN/LZ'-
     1161     1905        L_AT = 'A/T'-
     1162     1906        L_BREAK = 'B/REAK'-
     1163     1907        L_BY = 'B/Y'-
     1164     1908        L_BYPASS = 'BY/PASS'-
     1165     1909        L_CACHE = 'CA/CHE'-
     1166     1910        L_CALL = 'C/ALL'-
     1167     1911        L_CALLS = 'CALLS'-
     1168     1912        L_COPY = 'C/OPY'-
     1169     1913        L_CRASH = 'CR/ASH'-
     1170     1914        L_DBOOT = 'DB/OOT'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            35   
     1171     1915        L_DEF = 'DE/FINE'-
     1172     1916        L_DEBUG = 'DEB/UG'-
     1173     1917        L_DELETE = 'DEL/ETE'-
     1174     1918        L_DIC = 'DIC'-
     1175     1919        L_DISPLAY = 'D/ISPLAY'-
     1176     1920        L_DLCT = 'DLCT'-
     1177     1921        L_DO = 'DO'-
     1178     1922        L_DOUBLE = 'D/OUBLE'-
     1179     1923        L_DUMP = 'DU/MP'-
     1180     1924        L_ECHO = 'EC/HO'-
     1181     1925        L_END = 'EN/D'-
     1182     1926        L_EOM = 'EO/M'-
     1183     1927        L_EQUALS = '='-
     1184     1928        L_ERRFID = 'ERR/FID'-
     1185     1929        L_EVAL = 'E/VALUATE'-
     1186     1930        L_EXIT = 'EX/IT'-
     1187     1931        L_FEP = 'F/EP'-
     1188     1932        L_FIND = 'F/IND'-
     1189     1933        L_FORMAT = 'FO/RMAT'-
     1190     1934        L_G1 = 'G/HOST'- [ '1'- ]
     1191     1935        L_GOTO = 'G/O'-
     1192     1936        L_HISTORY = 'H/ISTORY'-
     1193     1937        L_IF = 'IF'-
     1194     1938        L_IGNORE = 'IG/NORE'-
     1195     1939        L_INACTIVE = 'IN/ACTIVE'-
     1196     1940        L_KEEP = 'KE/EP'-
     1197     1941        L_KILL = 'K/ILL'-
     1198     1942        L_LET = 'L/ET'-
     1199     1943        L_LIST = 'LI/ST'-
     1200     1944        L_STOP = 'STOP'-
     1201     1945        L_MACTIVE = 'MA/CTIVE'-
     1202     1946        L_MINI = 'MINI'-
     1203     1947        L_MODIFY = 'M/ODIFY'-
     1204     1948        L_MLCT = 'MLCT'-
     1205     1949        L_NAME = 'NA/ME'-
     1206     1950        L_NODE = 'N/ODE'-
     1207     1951        L_NODES = 'NODES'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            36   
     1208     1952        L_NWARN = 'NWARN'-
     1209     1953        L_ON = 'O/N'-
     1210     1954        L_OUTPUT = 'OU/TPUT'-
     1211     1955        L_PLUGH = 'PL/UGH'-
     1212     1956        L_PMD = 'PMD'-
     1213     1957        L_PROMPT = 'PRO/MPT'-
     1214     1958        L_PROTECT = 'PROT/ECT'-
     1215     1959        L_QUIT = 'Q/UIT'-
     1216     1960        L_RANGE = 'RA/NGE'-
     1217     1961        L_RBRACE = '}'-
     1218     1962        L_RBRACKET = ']'-
     1219     1963        L_READ = 'R/EAD'-
     1220     1964        L_REPORT = 'REP/ORT'-
     1221     1965        L_RUM(SUCC) = 'RU/M'- [ 'SEY'- ]
     1222     1966        L_SAD = 'SAD'-
     1223     1967        L_SAVE = 'SA/VE'-
     1224     1968        L_SCHEMA = 'SC/HEMA'-
     1225     1969        L_SECTION = 'S/ECTION'-
     1226     1970        L_SELCHAN = 'SE/LECT'- 'C/HANNEL'-
     1227     1971        L_SHOW = 'SH/OW'-
     1228     1972        L_SILENT = 'SI/LENT'-
     1229     1973        L_SLASH = '/'-
     1230     1974        L_STATUS = 'STAT/US'
     1231     1975        L_STEP = 'S/TEP'-
     1232     1976        L_STORE = 'STO/RE'-
     1233     1977        L_SYNTAX = 'SY/NTAX'-
     1234     1978        L_T = 'T/RACE'-
     1235     1979        L_TBOOT = 'TB/OOT'-
     1236     1980        L_TRAP = 'TRAP'-
     1237     1981        L_TSA = 'TSA'-
     1238     1982        L_UNFID = 'UNF/ID'-
     1239     1983        L_UNSHARE = 'UNSH/ARE'-
     1240     1984        L_UNSILENT = 'UN/SILENT'-
     1241     1985        L_UPDATE = 'UP/DATE'-
     1242     1986        L_USE = 'U/SE'-
     1243     1987        L_WAIT = 'WA/IT'-
     1244     1988        L_WHEN = 'W/HEN'-
PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            37   
     1245     1989        L_WORD = 'W/ORD'-
     1246     1990        L_XCON = 'XC/ON'-
     1247     1991        L_XEQ = 'X/EQ'-
     1248     1992        PMD@AUTO(P@AUTO) = 'AU/TO'-
     1249     1993        PMD@ALL(P@ALL) = 'AL/L'-
     1250     1994        PMD@COMMON(P@COMMON) = 'CO/MMON'-
     1251     1995        PMD@DS1(P@AUTO) = 'DS1'-
     1252     1996        PMD@DS2(P@COMMON) = 'DS2'-
     1253     1997        PMD@DS3(P@DS3) = 'DS3'-
     1254     1998        PMD@DS4(P@DS4) = 'DS4'-
     1255     1999        PMD@DS5(P@DS5) = 'DS5'-
     1256     2000        PMD@DS6(P@DS6) = 'DS6'-
     1257     2001        PMD@DS7(P@DS7) = 'DS7'-
     1258     2002        PMD@DS8(P@DS8) = 'DS8'-
     1259     2003        PMD@DS(P@DS) = 'DS'-
     1260     2004        PMD@DATA(P@DATA) = 'DA/TA'-
     1261     2005        PMD@DCBS(P@DCBS) = 'DC/BS'-
     1262     2006        PMD@DD(P@DD) = 'D/YNAMIC_'- 'D/ATA'-
     1263     2007        PMD@ISR(P@ISR) = 'IS/R'-
     1264     2008        PMD@JIT(P@JIT) = 'JI/T'-
     1265     2009        PMD@PLUGH(P@PLUGH) = 'PL/UGH'-
     1266     2010        PMD@PROCEDURE(P@PROCEDURE) = 'PR/OCEDURE'-
     1267     2011        PMD@ROSEG(P@ROSEG) = 'RO/SEG'-
     1268     2012        PMD@TCB(P@TCB) = 'TC/B'-
     1269     2013        SEMICOLON(C@SEMICOLON) = ';'

PARTRGE version E04  Source listing      14:05:34.28 JUL 29 '97 DXN_NODES_D                            38   
--  Include file information  --

   DD_PSUBS_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.

PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            39   
AFID1               945     951*
AFID2               945     952*
ANLZ1               945     948*
ANLZ2               945     949*
ANLZ3               945     950*
ARGS               1287    1289    1290    1290    1291    1293*
ARITHOP             972     973     998     999*
B#B                1547    1554    1555*
B@B                1547    1550    1551*
BASED              1305    1330*
BASED_AUTODEC      1300    1325*
BASED_AUTOINC      1301    1326*
BASED_INDEXED      1296    1319*
BASED_INDEXED_AUTODEC      1293    1313*
BASED_INDEXED_AUTOINC      1294    1315*
BASED_INDIRECT_INDEXED     1297    1321*
BASE_REL           1303    1328*
BASE_REL_IND       1298    1323*
BBKSLASHB           772     773*   1071    1073    1074    1082
BCOMMAB             933     934     942     945     969     969     970     971*   1017    1057    1084
                   1152    1180    1388    1418    1434    1438    1439    1525    1530    1531    1548
                   1552    1614
BEQUALSB           1031    1224    1225*   1439    1449
BPTRB              1039    1040    1041*   1065
B_1                1313    1315    1339    1340*
B_2                1313    1315    1339    1341*
B_3                1313    1315    1339    1342*
B_4                1339    1343*
B_5                1339    1344*
B_6                1339    1345*
B_7                1339    1346*
B_REG              1286    1319    1321    1323    1325    1326    1328    1330    1331    1336    1339*
CG                 1020    1024*
CG1                1024    1025*
CG2                1024    1026*
CMD_TERM            768     771     795     804     940     941     942     943     944     946     947
                    953    1008    1009    1010    1011    1012    1013    1019    1031    1053    1054
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            40   
                   1055    1056    1069    1075    1083    1085    1086    1089    1090    1091    1092
                   1093    1094    1095    1097    1098    1099    1100    1101    1102    1103    1104
                   1105    1106    1107    1108    1109    1110    1111    1112    1136    1139    1140
                   1141    1145    1146    1147    1148    1149    1150    1151    1175    1176    1177
                   1179    1186    1188    1224    1226    1227    1228    1229    1231    1232    1235
                   1236    1237    1366    1367    1368    1369    1371    1372    1373    1375    1377
                   1379    1380    1381    1382    1383    1384    1385    1387    1409    1410    1411
                   1412    1413    1415    1416    1417    1420    1422    1438    1450    1451    1452
                   1453    1454    1455    1456    1457    1458    1493    1494    1495    1501    1502
                   1505    1506    1507    1516    1517    1519    1520    1521    1522    1526    1529
                   1530    1531    1532    1562    1565    1566    1567    1568    1617*
CNR1                983    1582    1591*
CNR21              1593    1594*
CNR211_HOST        1594    1595*
CNR211_L6          1597    1598*
CNR22              1593    1596*
CNR2_HOST          1593*
CNR2_L6            1597*
CNR3               1585    1599*
CNR4_COBOL         1610*
CNR4_FORTRAN       1601*
CNR4_PL6           1613*
CNR5               1589    1614*
CNR6               1590    1615*
CNSNT_REF          1224    1564    1570    1582*
COMMENTS            816     828    1616*
COMPID             1422    1423*   1505
DD_BASE             983     985     986    1547    1548    1549    1550    1561    1588
DD_BASEBOTH        1554
DD_CNR2            1583
DD_CNR4            1586
DD_DUMP             865
DD_ECHO             866
DD_IGNORE           876
DD_INSTR            811    1113    1114    1135    1235    1238    1241    1503    1567
DD_INSTR_CONT      1240
DD_KEEP             878
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            41   
DD_L@AND           1006
DD_L@DIV           1004
DD_L@LSHIFT        1001
DD_L@MINUS          977    1000
DD_L@MULT          1003
DD_L@OR            1005
DD_L@PLUS           977     999
DD_L@RSHIFT        1002
DD_OUTPUT           885
DD_READ             896
DD_SYMBOLS          964    1220    1410
DD_SYMDEL          1051
DD_SYMLIST         1045    1046    1067    1068
DD_TRAP             907
DEBUG@             1028    1028    1029*
DEBUGU              950    1028    1028    1030*
DEBUG_CG           1015    1020*
DEBUG_FEP          1016    1028*
DEBUG_SYSID        1014    1027*
DECIMALS            767     768     834     928*    950     961     965     969     970     983     984
                    985     986    1007    1017    1027    1054    1221    1222    1260    1261    1262
                   1263    1268    1269    1418    1418    1419    1442    1443    1444    1445    1446
                   1447    1448    1449    1495    1530    1530    1531    1531    1547    1601    1604
                   1605    1609    1611    1611    1612    1613
DIRECT             1312    1337*
DIRECT_CMD          826     827     830     832     843*
DRANGE             1071    1073    1074    1082    1084*   1131
D_ACMDS             832*
D_ATREE             762*
D_CCMDS             830*
D_DCMDS             826*
D_MTREE             811*
ECHO1              1072    1083    1086    1087*   1379    1382    1456    1457    1458
ECHO2              1083    1086    1088*   1382
EXP                1317    1323    1324    1327    1328    1329    1332    1333    1334    1335    1337
                   1338*
EXPCON              997     998*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            42   
EXPREP              979     997*
FID8                938*   1021    1027
FIDS                936*   1025    1026    1030    1072    1092    1376    1379    1380    1416    1437
                   1453    1456    1457    1458
FIDSUC              937*   1073    1074
FIND1              1117    1118    1120    1121    1124    1125    1127    1128    1131*   1503    1504
FIND123I           1113    1115    1117*
FIND123V           1114    1116    1124*
FIND1IF            1096    1109*
FIND1N             1096    1101*
FIND1NIF           1096    1105*
FIND1S             1096    1097*
FIND2              1117    1119    1120    1122    1124    1126    1127    1129    1132*   1503    1504
FIND2X             1133*   1134    1135
FIND3I             1117    1118    1119    1135*
FIND3V             1124    1125    1126    1134*
FINDI3I            1097    1101    1105    1109    1113*
FINDI3V            1098    1102    1106    1110    1114*
FINDV3I            1099    1103    1107    1111    1115*
FINDV3V            1100    1104    1108    1112    1116*
FMT0                781    1638*
FMT1                793    1079    1619*
FMT10               784    1620*
FMT11               785    1621*
FMT12               786    1622*
FMT13               790    1080    1623*
FMT16               789    1624*
FMT17               788    1625*
FMT18               787    1078    1626*
FMT19               791    1627*
FMT2                774    1630*
FMT20               792    1628*
FMT21               783    1077    1629*
FMT3                775    1631*
FMT4                776    1076    1632*
FMT5                777    1633*
FMT6                778    1634*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            43   
FMT7                779    1635*
FMT8                780    1636*
FMT9                782    1637*
FMTSPEC             770     771     772*    796     801     802     803     804     811     812     815
                   1033    1058    1136    1146    1147    1148    1149    1150    1241    1368    1383
                   1411
FMTSPEC1            772     774*
FMTSPECD           1071    1076*   1082
FORT_DEC           1606    1607*
FORT_EXP           1603    1605*   1606
FORT_F             1607    1608    1609*
FORT_I             1603    1604*   1607
FORT_R1            1602    1603*
FORT_R2            1602    1606*
FORT_REAL          1601    1602*   1614    1614
FSPEC              1591    1592*
FSPEC1             1599    1600*
FSPECB             1592    1639*
FSPECC             1592    1600    1640*
FSPECEB            1592    1644*
FSPECO             1592    1641*
FSPECOF            1600    1642*
FSPECS              964    1376    1645*
FSPECX             1592    1600    1643*
HDIG                995*
HEXBOTH             996*
HEXIL               992*    996    1292    1366    1366    1455    1521    1597
HEXIL1              992     993*   1598
HEXNICE             994*    996
IFREL              1564    1569    1571*
IFREL1             1571    1573*
IFREL2             1572    1576*
IFSPEC              940     941     942     943     944     946     947     953    1008    1009    1010
                   1011    1012    1013    1019    1031    1053    1054    1055    1056    1069    1075
                   1083    1085    1086    1089    1090    1091    1092    1093    1094    1095    1105
                   1106    1107    1108    1109    1110    1111    1112    1136    1139    1140    1141
                   1145    1146    1147    1148    1149    1150    1151    1175    1176    1177    1179
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            44   
                   1186    1188    1224    1226    1227    1228    1229    1231    1232    1235    1236
                   1237    1366    1367    1368    1369    1371    1372    1373    1375    1377    1379
                   1380    1381    1382    1383    1384    1385    1387    1409    1410    1411    1412
                   1413    1415    1416    1417    1420    1422    1438    1450    1451    1452    1453
                   1454    1455    1456    1457    1458    1493    1494    1495    1501    1502    1505
                   1506    1507    1516    1517    1519    1520    1521    1522    1526    1532    1565
                   1566    1567    1568    1569*
IMO_VALUE          1304    1329*
INDEXED            1299    1324*
INDIRECT1          1310    1335*
INDIRECT_BASED     1306    1331*
INDIRECT_INDEXED   1295    1317*
INDTYPE             801     803     805*
INOF               1048    1049*
INST               1285    1286*
INSTR              1240*
INSTRF              770     771     796     813    1094    1241*
INSTR_ADSC         1250*
INSTR_BDSC         1251*
INSTR_DFLT         1272*
INSTR_EIS          1243*
INSTR_EIS_MF       1245    1246    1247    1249*
INSTR_L6           1285*
INSTR_MF0          1243    1245*
INSTR_MF1          1243    1246*
INSTR_MF2          1243    1247*
INSTR_MNEM         1240    1242*
INSTR_NDSC         1252*
INSTR_SDSC         1253*
INSTR_VDSC         1254*
INSTR_XTRA         1244    1244    1244    1248*
INSTR_ZERO         1255*
INST_G             1285    1289*
INST_IO            1285    1290*
INT_VECTOR         1309    1334*
K@ABBREVS          1190    1460    1646*
K@ABORT            1219    1369    1647*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            45   
K@ALL              1137    1193    1463    1648*
K@ALTVAR           1191    1461    1649*
K@ANLZ             1192    1462    1650*
K@ATS              1194    1464    1651*
K@BYPASS           1195    1465    1652*
K@CACHE            1196    1653*
K@CALLS            1219    1654*
K@COPY             1197    1466    1655*
K@DEBUG            1468    1656*
K@DEF              1220    1657*
K@DEFS             1199    1658*
K@DEFSHOW          1469    1659*
K@DELTA            1223    1660*
K@DIC              1200    1467    1661*
K@ECHO             1202    1470    1662*
K@EOM              1203    1471    1663*
K@EXIT             1219    1373    1664*
K@FORMAT           1204    1473    1665*
K@FPRGS            1472    1666*
K@IGNORE           1475    1667*
K@INTERPRETIVE     1205    1668*
K@KEEP             1474    1669*
K@NODES            1219    1670*
K@PROTECT          1207    1477    1671*
K@RANGE            1480    1672*
K@REPORT           1478    1673*
K@RUM              1208    1479    1674*
K@SAD              1209    1483    1675*
K@SAVES            1211    1484    1676*
K@SCHEMA           1210    1481    1677*
K@STATUS           1212    1485    1678*
K@STEP             1213    1486    1679*
K@SYMBOLS          1214    1680*
K@SYNTAX           1482    1681*
K@TRACE            1215    1488    1682*
K@TRAP             1487    1683*
K@USE              1489    1684*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            46   
K@WHENS            1216    1490    1685*
KEEP1              1186    1187*
KILL1              1188    1189*
KILL11             1206    1218*   1476
KILL111            1218    1219*
KILL12             1198    1220*
KILL13              941    1176    1217    1221*   1226    1491    1493    1520    1522    1529
KILL131            1221    1222*
KILLDELTA          1201    1223*
KTI@ALL            1151    1174    1175    1177    1178    1179    1517    1518    1519    1686*
KTI@ARITHMETIC     1152    1175    1184    1687*
KTI@BREAK          1153    1181    1688*
KTI@COMMAND        1154    1689*
KTI@DERAIL         1155    1690*
KTI@DIVIDE_CHECK   1156    1691*
KTI@ERROR          1157    1692*
KTI@EVENT          1158    1180    1693*
KTI@FAULT_TAG      1159    1694*
KTI@IPR            1160    1695*
KTI@LOCKUP         1161    1696*
KTI@MCL            1183    1697*
KTI@MEMORY         1162    1698*
KTI@MME            1163    1699*
KTI@MONITOR        1164    1700*
KTI@NONE           1151    1174    1175    1517    1518    1519    1701*
KTI@OVERFLOW       1165    1702*
KTI@PAGE           1166    1703*
KTI@PMME           1167    1704*
KTI@PROGRAMMED     1168    1705*
KTI@SEC_1          1171    1706*
KTI@SEC_2          1170    1707*
KTI@SEG            1169    1708*
KTI@TIMER          1172    1709*
KTI@TRAP           1185    1710*
KTI@XCON           1173    1182    1711*
KTIFNAME           1179    1180*   1518    1519
KTINAME            1151    1152*   1177    1517
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            47   
L@$AS              1596    1712*
L@$LS              1596    1713*
L@$PS              1596    1714*
L@@                1551    1715*
L@AARD             1548    1716*
L@AD               1279    1717*
L@AL               1275    1718*
L@ALL              1019    1144    1187    1227    1432    1524    1719*
L@ALTRETURN         942    1720*
L@AND              1721*
L@ANDC             1722*
L@AR               1284    1723*
L@ASCII            1070    1081    1726*
L@ASDT             1560    1724*
L@ASL              1553    1725*
L@ATTACHMENT       1528    1727*
L@AU               1275    1728*
L@BANG             1240    1729*
L@BF               1559    1816*
L@BKSLASH           773    1730*
L@CALL@T           1508    1731*
L@CARDS            1421    1732*
L@CC               1423    1733*
L@CI               1279    1734*
L@CLEAR            1143    1735*
L@COBOL            1424    1736*
L@COLON             958     963    1052    1737*
L@COMMA             971    1246    1247    1248    1282    1593    1738*
L@COMMAH           1256    1257    1258    1259    1264    1265    1266    1267    1272    1739*
L@COPY             1440    1740*
L@CR               1421    1741*
L@CURRENT          1534    1742*
L@DASH             1743*
L@DASH@TO          1222    1744*
L@DEFAULT          1433    1745*
L@DI               1280    1746*
L@DIC              1280    1747*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            48   
L@DIV              1748*
L@DIVC             1749*
L@DL               1275    1751*
L@DORE             1605    1750*
L@DU               1275    1752*
L@EBCDIC           1070    1753*
L@EJECT            1070    1081    1754*
L@ENTDEFS          1367    1755*
L@EQGREAT          1574    1756*
L@EQLESS           1574    1757*
L@EQUALS           1574    1758*
L@EQUALS1          1576    1759*
L@EVAL             1136    1665    1760*
L@F                1279    1761*
L@FALSE            1615    1762*
L@FAULTS           1186    1763*
L@FD               1559    1815*
L@FORTRAN          1426    1764*
L@FPL              1425    1765*
L@FPRG             1766*
L@FROM             1131    1767*
L@GMAP             1427    1768*
L@GREATEQ          1573    1769*
L@GREATEQ1         1577    1770*
L@GREATER          1575    1771*
L@GREATER1         1578    1772*
L@GRLESS           1573    1773*
L@HOST             1139    1174    1178    1518    1558    1774*
L@I                1281    1775*
L@IC               1275    1776*
L@ICP              1553    1777*
L@ID               1281    1778*
L@IDB              1553    1779*
L@IDC              1281    1780*
L@INACTIVE          953    1370    1372    1374    1377    1563    1781*
L@INDIRECT          809     824    1146    1782*
L@INDIRECT_LEFT     807     822    1149    1783*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            49   
L@INDIRECT_PTR      805     820    1147    1784*
L@INDIRECT_RIGHT    808     823    1150    1785*
L@INDIRECT_SHORTPTR         806     821    1148    1863*
L@INOF             1049    1786*
L@INPUT            1440    1787*
L@INSTRUCTIONS     1496    1788*
L@INTO             1087    1789*
L@KEEP              942    1790*
L@LBRACE            799     818    1383    1791*
L@LBRACKET          798     818    1383    1792*
L@LESS             1575    1793*
L@LESS1            1580    1794*
L@LESSEQ           1573    1795*
L@LESSEQ1          1579    1796*
L@LESSGR           1574    1797*
L@LF                796     817    1368    1800*
L@LIBRARY          1525    1798*
L@LINE             1435    1799*
L@LONG             1070    1081    1801*
L@LP               1088    1802*
L@LPAREN            967    1050    1233    1238    1249    1386    1437    1614    1803*
L@LSHIFT           1804*
L@LSHIFTC          1805*
L@LSMON            1553    1806*
L@LVL              1561    1807*
L@ME               1088    1421    1808*
L@MINUS             978     986    1594    1595    1598    1809*
L@MINUSC           1810*
L@MODIFY           1136    1665    1811*
L@MON              1187    1812*
L@MONENT           1559    1813*
L@MONIS            1559    1814*
L@MORE             1144    1817*
L@MULT             1818*
L@MULTC            1819*
L@N                1275    1820*
L@NEXT              817    1368    1821*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            50   
L@NO               1088    1822*
L@NONE             1018    1187    1823*
L@NOT              1101    1105    1824*
L@NOTEQ            1573    1825*
L@NOTEQ1           1581    1826*
L@NUTS             1439    1827*
L@OFF@T            1509    1828*
L@OFFSET           1434    1829*
L@ON               1087    1830*
L@ON@T             1510    1831*
L@ONE              1500    1832*
L@OPEN              818    1383    1833*
L@OR               1834*
L@ORC              1835*
L@OVER             1087    1836*
L@PARAGRAPHS       1497    1511    1839*
L@PASCAL           1428    1837*
L@PATCH            1421    1838*
L@PERIOD            987     992    1047    1607    1608    1840*
L@PERIODD          1418    1419    1611    1612    1841*
L@PL1              1429    1842*
L@PL6              1430    1843*
L@PLUS              978    1844*
L@PLUSC            1845*
L@PR               1284    1846*
L@PREV              819    1411    1847*
L@PROGRAM          1525    1848*
L@PT@              1549    1849*
L@PTR              1041    1850*
L@QL               1275    1851*
L@QU               1275    1852*
L@REAL             1548    1853*
L@RETURN            942    1854*
L@RPAREN            967    1050    1233    1238    1249    1386    1437    1614    1855*
L@RPG              1431    1856*
L@RSHIFT           1857*
L@RSHIFTC          1858*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            51   
L@SC               1280    1859*
L@SCR              1280    1860*
L@SCREECH          1187    1861*
L@SD               1279    1862*
L@SILENT            953    1370    1372    1374    1377    1508    1514    1515    1563    1864*
L@SLASH             801     802     803     804    1865*
L@STAR             1274    1278    1866*
L@STATEMENTS       1499    1513    1867*
L@STEP             1138    1868*
L@SUBS             1134    1135    1869*
L@SUBSTATEMENTS    1498    1512    1870*
L@TAB               800     824    1146    1871*
L@TAPE             1421    1872*
L@TEST             1440    1873*
L@TO               1087    1874*
L@TRANSFER         1514    1875*
L@TRAP             1138    1876*
L@TRUE             1615    1877*
L@TYPE             1436    1878*
L@U                1553    1879*
L@UC               1421    1880*
L@UMON             1547    1881*
L@UNDER            1132    1133    1882*
L@UNFC             1520    1883*
L@UNFO             1520    1884*
L@UPARROW           797     819    1411    1885*
L@USER             1550    1554    1556    1886*
L@UTS              1439    1887*
L@VARS             1367    1888*
L@X0               1276    1889*
L@X1               1276    1890*
L@X2               1276    1891*
L@X3               1276    1892*
L@X4               1276    1893*
L@X5               1276    1894*
L@X6               1276    1895*
L@X7               1276    1896*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            52   
L@X@T              1372    1508    1897*
L@XDEL             1548    1898*
LBL_ARRAY           966     967*
LINESPEC           1416    1418*
L_#                1007    1555    1899*
L_ABBREV            940    1900*
L_ACTIVE            941    1901*
L_ALIB              942    1902*
L_ALTVAR            943    1903*
L_ANLZ              945    1904*
L_AT                953    1905*
L_BREAK            1008    1906*
L_BY               1496    1907*
L_BYPASS           1009    1908*
L_CACHE            1010    1909*
L_CALL             1370    1500    1910*
L_CALLS            1372    1911*
L_COPY             1011    1912*
L_CRASH            1012    1913*
L_DBOOT            1013    1914*
L_DEBUG            1014    1916*
L_DEF              1031    1915*
L_DELETE           1053    1917*
L_DIC              1055    1918*
L_DISPLAY          1056    1073    1919*
L_DLCT             1069    1920*
L_DO               1054    1921*
L_DOUBLE           1230    1922*
L_DUMP             1070    1081    1923*
L_ECHO             1085    1086    1924*
L_END              1089    1925*
L_EOM              1091    1926*
L_EQUALS            770     771    1225    1927*
L_ERRFID           1092    1928*
L_EVAL             1093    1929*
L_EXIT             1095    1930*
L_FEP               950    1931*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            53   
L_FIND             1096    1932*
L_FORMAT           1136    1933*
L_G1               1557    1934*
L_GOTO             1137    1935*
L_HISTORY          1142    1936*
L_IF               1569    1937*
L_IGNORE           1151    1174    1938*
L_INACTIVE         1176    1939*
L_KEEP             1177    1178    1186    1940*
L_KILL             1188    1941*
L_LET              1224    1942*
L_LIST             1226    1943*
L_MACTIVE          1945*
L_MINI             1229    1946*
L_MLCT             1366    1948*
L_MODIFY           1230    1234    1947*
L_NAME             1367    1949*
L_NODE             1374    1546    1950*
L_NODES            1377    1951*
L_NWARN            1239    1952*
L_ON               1218    1369    1370    1372    1373    1374    1377    1953*
L_OUTPUT           1378    1382    1954*
L_PLUGH            1384    1955*
L_PMD              1386    1956*
L_PROMPT           1410    1957*
L_PROTECT          1409    1958*
L_QUIT             1412    1959*
L_RANGE            1415    1960*
L_RBRACE            767     768    1961*
L_RBRACKET          767     768    1962*
L_READ             1416    1420    1963*
L_REPORT           1422    1964*
L_RUM              1437    1965*
L_SAD              1450    1966*
L_SAVE             1451    1967*
L_SCHEMA           1452    1968*
L_SECTION          1559    1969*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            54   
L_SELCHAN          1455    1970*
L_SHOW             1456    1971*
L_SILENT           1493    1972*
L_SLASH             794     795    1973*
L_STATUS           1494    1974*
L_STEP             1495    1975*
L_STOP             1227    1944*
L_STORE            1501    1976*
L_SYNTAX           1505    1977*
L_T                1506    1978*
L_TBOOT            1516    1979*
L_TRAP             1517    1518    1980*
L_TSA              1521    1981*
L_UNFID            1520    1982*
L_UNSHARE          1523    1983*
L_UNSILENT         1522    1984*
L_UPDATE           1527    1985*
L_USE              1532    1986*
L_WAIT             1562    1987*
L_WHEN             1563    1988*
L_WORD             1230    1989*
L_XCON             1566    1990*
L_XEQ              1567    1991*
MASK               1287    1289    1292*
MATYPE              811     812     817*
MODIFY1            1234    1235*
MODIFY2            1235    1236    1238*
MODIFY3            1230    1231*
MODIFY4            1231    1233*
M_1                1357    1358*
M_2                1357    1359*
M_3                1357    1360*
M_REG              1286    1357*
NA_EVAL             763     770*
NA_MODIFY           764     794*
NA_NPOI             765     796*
NA_SLASH            766     801*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            55   
NA_STEP             762     767*
NF_IGNORE          1174*
NF_KEEP            1178*
NF_TRAP            1518*
NT_EVAL             771*    925
NT_MODIFY           795*    926
NT_SLASH            803*    918
NT_STEP             768*    924
NU_DUMP            1070*
NU_ECHO            1085*
NU_IGNORE          1151*
NU_KEEP            1177*
NU_OUTPUT          1378*
NU_READ            1416*
NU_TRAP            1517*
NVREF_LET          1056    1057*
NWARN_OPT          1231    1235    1236    1239*
NX_DUMP            1081*
NX_ECHO            1086*
NX_KEEP            1186*
NX_OUTPUT          1382*
NX_READ            1420*
N_ABBREV            848     940*
N_ACTIVE            849     941*
N_ALIB              850     942*
N_ALTVAR            851     943*
N_ANLZ              852     945*
N_AT                834     953*
N_AT11              953    1007*   1564
N_BREAK             854    1008*
N_BYPASS            853    1009*
N_CACHE             855    1010*
N_COPY              856    1011*
N_CRASH            1012*
N_DBOOT             857    1013*
N_DEBUG             858    1014*
N_DEF               860    1031*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            56   
N_DELETE           1053*
N_DIC               862    1055*
N_DISPLAY           864    1056*
N_DLCT              863    1069*
N_DO                861    1054*
N_END               867    1089*
N_EOM               868    1091*
N_ERRFID            869    1092*
N_EVAL              871    1093*
N_EXIT              870    1095*
N_FIND              873    1096*
N_FORMAT            872    1136*
N_GOTO              874    1137*
N_HISTORY           875    1142*
N_INACTIVE          877    1176*
N_INDIRECT          923    1146*
N_INDIRECT_LEFT     921    1149*
N_INDIRECT_PTR      919    1147*
N_INDIRECT_RIGHT    922    1150*
N_INDIRECT_SHORTPTR         920    1148*
N_KILL              879    1188*
N_LET               882    1224*
N_LIST              880    1226*
N_MINI              847    1229*
N_MLCT              844    1366*
N_MODIFY            846    1234*
N_MODIFYDW          845    1230*
N_NAME              883    1367*
N_NEXT              884    1368*
N_OA                837    1369*
N_OC                838    1370*
N_OE                840    1373*
N_ONCALLS           839    1372*
N_ONN               835    1374*
N_ONNODES           836    1377*
N_OPEN              886    1383*
N_PLUGH             887    1384*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            57   
N_PMD               888    1386*
N_PREV              891    1411*
N_PROMPT            890    1410*
N_PROTECT           889    1409*
N_QUIT              892    1412*
N_RANGE             893    1415*
N_REPORT            895    1422*
N_RUM               894    1437*
N_SAD               899    1450*
N_SAVE              841    1451*
N_SCHEMA            898    1452*
N_SELCHAN           897    1455*
N_SHOW              901    1456*
N_SILENT            900    1493*
N_STATUS            903    1494*
N_STEP              905    1495*
N_STOP              881    1227*
N_STORE             904    1501*
N_SYNTAX            902    1505*
N_T                 909    1506*
N_TBOOT             906    1516*
N_TSA               908    1521*
N_UNFID             910    1520*
N_UNSHARE           911    1523*
N_UNSILENT          912    1522*
N_UPDATE            913    1527*
N_USE               914    1532*
N_WAIT              915    1562*
N_WHEN              842    1563*
N_XCON              916    1566*
N_XEQ               917    1567*
OCT1               1250    1252    1253    1255    1256*
OCT1C              1248    1249    1256    1260*
OCT2               1249    1251    1253    1257*
OCT2C              1257    1261*
OCT3               1249    1251    1252    1253    1258*
OCT3C              1258    1262*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            58   
OCT4               1252    1259*
OCT4C              1259    1263*
OCTIL               987*    991    1260    1261    1262    1263    1273    1593
OCTIL1              988*   1595
OCTILBOTH           991*
OCTILNICE           989*    991
ODIG                990*   1283    1594
OTAG_1             1251    1254    1264*
OTAG_1C            1264    1268*
OTAG_2             1250    1252    1265*
OTAG_2C            1265    1269*
OUTPUT1            1378    1379*
PMD@ALL            1389    1993*
PMD@AUTO           1388    1992*
PMD@COMMON         1390    1994*
PMD@DATA           1400    2004*
PMD@DCBS           1401    2005*
PMD@DD             1402    2006*
PMD@DS             1399    2003*
PMD@DS1            1391    1995*
PMD@DS2            1392    1996*
PMD@DS3            1393    1997*
PMD@DS4            1394    1998*
PMD@DS5            1395    1999*
PMD@DS6            1396    2000*
PMD@DS7            1397    2001*
PMD@DS8            1398    2002*
PMD@ISR            1403    2007*
PMD@JIT            1404    2008*
PMD@PLUGH          1405    2009*
PMD@PROCEDURE      1406    2010*
PMD@ROSEG          1407    2011*
PMD@TCB            1408    2012*
PMDNAME            1386    1387    1388*
PORM                974     975     976     977*
PORMX               978*   1588    1601    1602    1605    1610    1613
POS1                954     955     959*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            59   
POS11               959     960*
POS11L              956     961*
POSITION            953     954*   1139    1140    1140    1452    1560
POSITIONL           956*   1035    1061
POSITIONS           957*   1037    1063
POSITIONV           955*   1034    1060
PQLIST1S           1040    1043*
PQLIST1X           1039    1042*
PQLIST1_LET        1065    1066*
PQLISTS            1040*   1052    1052
PQLISTX            1038    1039*
PQLIST_LET         1064    1065*
PR                 1250    1251    1252    1253    1254    1272    1282*
PR1                1282    1283*
PR2                1283    1284*
QTSTRINGS           935*    964    1021    1072    1083    1376    1410    1591    1599
QUAL                960     961     962*   1038    1064    1371
QUAL1               962     963*
QUAL3               954     955     958*
READ1              1420    1421*
REGISTER           1311    1336*
REL_DIRECT         1307    1332*
REL_INDIRECT       1302    1327*
REPORT1            1422    1432*
RES                1090    1174    1178    1223    1228    1413    1414*   1492    1518    1558
RUM1               1437    1438    1439*
RUMBUF             1441    1449*
RUMUTS             1439    1442*
R_1                1314    1316    1318    1320    1322    1324    1348    1349*
R_2                1314    1316    1318    1320    1322    1324    1348    1350*
R_3                1314    1316    1318    1320    1322    1324    1348    1351*
R_4                1348    1352*
R_5                1348    1353*
R_6                1348    1354*
R_7                1348    1355*
R_REG              1286    1336    1348*
SDO                 979     983*    998
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            60   
SDOD                980     984*
SEMICOLON          1617    2013*
SHORT_PREL         1308    1333*
SHOW1              1457    1459*
SHOWFPRG           1458    1492*
SIMBLE              943     963     964*    966     983    1031    1047    1048    1371    1508    1514
                   1520
SIMBLE1            1375    1376*   1546
SIMEXP              972     974     979*   1042    1084    1132    1133
SIMEXPD             975     980*
SIMEXPDO            973     976     981*   1066
SIMEXPMDO           982*   1043
SIMX                957     959     969     974*
SIMXD               967     975*
SIMXDO              976*
STATION            1020    1021*
STEP1              1495    1496*
STEP2              1495    1500*
STMT_SPEC           960     965*
STMT_SPEC1          965     966*
STORED_CMD          827     834*
STOREI             1502    1503*
STOREV             1501    1504*
SUBREF             1045    1046    1050*   1067
SUBREF1            1050    1051*
SUBSTMT             960     961     968*
SUBSTMT1            968     969*
SUBSTMT2            968     972*   1045
SUBSTMT2DO          973*   1068
SYMBOLS             929*   1286    1289    1290
SYMBOL_CC           931*
SYMBOL_COBOL        932*
SYMBOL_PL6          930*
SYMDEL_COBOL        933*
SYMDEL_PL6          934*
SYMLIST            1047*
SYMLISTC           1048*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            61   
S_1                1362    1363*
S_2                1362    1364*
S_3                1362    1365*
S_REG              1286    1336    1362*
TAG                1268    1269    1270    1271    1272    1273*
TAG1               1273    1274*
TAG2               1273    1277*
TAG3               1273    1278*
TAG4               1273    1279*
TAG_2              1254    1266*
TAG_2C             1266    1270*
TAG_4              1249    1267*
TAG_4C             1267    1271*
TM                 1274    1275*   1277    1278
TP                 1020    1022*
TPACCT             1022    1023*
TR1                1506    1508*
TR2                1507    1509*
TR3                1507    1515*
ULREF              1051    1052*
ULSTYPE            1550    1552*   1554    1556
ULSTYPE1           1552    1553*
UPDATE1            1528    1529*
UPDATE2            1527    1530*
UPDATE3            1527    1531*
USE08              1537    1546*
USE09              1536    1547*
USE1               1532    1533*
USE10              1535    1548*
USE11              1538    1549*
USE12              1539    1550*
USE13              1540    1554*
USE14              1541    1556*
USE15              1542    1557*
USE16              1545    1558*
USE17              1533    1559*
USE18              1543    1560*
PARTRGE version E04  Cross Reference     14:06:14.60 JUL 29 '97 DXN_NODES_D                            62   
USE19              1544    1561*
VAREXPS            1043    1046*
VAREXPX            1042    1045*
VAREXP_LET         1066    1067*
VREF                770     771     794     795     796     814    1033*   1093    1230    1234
VREF11_LET         1062    1064*
VREF1_LET          1058    1059    1060*
VREFX               812    1031    1032*   1071    1073    1074    1081    1115    1116    1131    1134
                   1231    1233    1236    1238    1250    1251    1252    1253    1254    1255    1272
                   1338    1384    1504    1564    1568    1569
VREFX1             1032    1033    1034*
VREFX11            1036    1038*
VREFX_LET          1059*   1224
VREF_LET           1057    1058*
XDO                 981     985*   1144    1415    1450    1593
XMDO                982     986*

PARTRGE version E04  Symbol Map          14:06:14.60 JUL 29 '97 DXN_NODES_D                            63   
  602 AFID1        603 AFID2        565 ANLZ1        570 ANLZ2        572 ANLZ3       3402 ARGS
 1051 ARITHOP     5251 B#B         5227 B@B         3551 BASED       3520 BASED_AUTODEC
 3524 BASED_AUTOINC                3473 BASED_INDEXED                3432 BASED_INDEXED_AUTODEC
 3453 BASED_INDEXED_AUTOINC        3500 BASED_INDIRECT_INDEXED       3537 BASE_REL    3507 BASE_REL_IND
   50 BBKSLASHB    725 BCOMMAB     2575 BEQUALSB    1333 BPTRB       3621 B_1         3623 B_2
 3625 B_3         3627 B_4         3631 B_5         3633 B_6         3635 B_7         3611 B_REG
 1201 CG          1204 CG1         1216 CG2         5611 CMD_TERM    5436 CNR1        5461 CNR21
 5467 CNR211_HOST                  5503 CNR211_L6   5472 CNR22       5451 CNR2_HOST   5476 CNR2_L6
 5506 CNR3        5565 CNR4_COBOL  5515 CNR4_FORTRAN                 5570 CNR4_PL6    5573 CNR5
 5603 CNR6        5421 CNSNT_REF   5606 COMMENTS    4324 COMPID      1241 DEBUG@      1271 DEBUGU
 1137 DEBUG_CG    1226 DEBUG_FEP   1220 DEBUG_SYSID                   444 DECIMALS    3605 DIRECT
  321 DIRECT_CMD  1624 DRANGE       275 D_ACMDS        0 D_ATREE      271 D_CCMDS      247 D_DCMDS
  157 D_MTREE     1645 ECHO1       1652 ECHO2       3607 EXP         1046 EXPCON      1044 EXPREP
  470 FID8         466 FIDS         467 FIDSUC      2107 FIND1       2040 FIND123I    2065 FIND123V
 2021 FIND1IF     1762 FIND1N      1767 FIND1NIF    1736 FIND1S      2117 FIND2       2124 FIND2X
 2141 FIND3I      2131 FIND3V      2024 FINDI3I     2027 FINDI3V     2032 FINDV3I     2035 FINDV3V
 5701 FMT0        5617 FMT1        5622 FMT10       5625 FMT11       5627 FMT12       5632 FMT13
 5634 FMT16       5637 FMT17       5641 FMT18       5643 FMT19       5654 FMT2        5646 FMT20
 5651 FMT21       5657 FMT3        5662 FMT4        5665 FMT5        5667 FMT6        5672 FMT7
 5674 FMT8        5677 FMT9          45 FMTSPEC       54 FMTSPEC1    1567 FMTSPECD    5547 FORT_DEC
 5536 FORT_EXP    5563 FORT_F      5534 FORT_I      5531 FORT_R1     5542 FORT_R2     5523 FORT_REAL
 5443 FSPEC       5511 FSPEC1      5705 FSPECB      5707 FSPECC      5721 FSPECEB     5712 FSPECO
 5715 FSPECOF     5724 FSPECS      5717 FSPECX      1037 HDIG        1041 HEXBOTH     1031 HEXIL
 1034 HEXIL1      1035 HEXNICE     5364 IFREL       5377 IFREL1      5412 IFREL2      5354 IFSPEC
 3543 IMO_VALUE   3514 INDEXED     3576 INDIRECT1   3554 INDIRECT_BASED               3464 INDIRECT_INDEXED
  151 INDTYPE     1366 INOF        3316 INST        2741 INSTR       2750 INSTRF      3023 INSTR_ADSC
 3036 INSTR_BDSC  3213 INSTR_DFLT  2754 INSTR_EIS   3004 INSTR_EIS_MF                 3312 INSTR_L6
 2771 INSTR_MF0   2773 INSTR_MF1   2776 INSTR_MF2   2753 INSTR_MNEM  3052 INSTR_NDSC  3071 INSTR_SDSC
 3077 INSTR_VDSC  3001 INSTR_XTRA  3110 INSTR_ZERO  3337 INST_G      3344 INST_IO     3570 INT_VECTOR
 5727 K@ABBREVS   5732 K@ABORT     5735 K@ALL       5737 K@ALTVAR    5752 K@ANLZ      5755 K@ATS
 5757 K@BYPASS    5762 K@CACHE     5765 K@CALLS     5770 K@COPY      5773 K@DEBUG     5776 K@DEF
 6000 K@DEFS      6003 K@DEFSHOW   6006 K@DELTA     6011 K@DIC       6013 K@ECHO      6016 K@EOM
 6020 K@EXIT      6023 K@FORMAT    6034 K@FPRGS     6037 K@IGNORE    6042 K@INTERPRETIVE
 6047 K@KEEP      6052 K@NODES     6055 K@PROTECT   6060 K@RANGE     6063 K@REPORT    6066 K@RUM
 6075 K@SAD       6077 K@SAVES     6102 K@SCHEMA    6105 K@STATUS    6110 K@STEP      6113 K@SYMBOLS
 6116 K@SYNTAX    6121 K@TRACE     6124 K@TRAP      6127 K@USE       6131 K@WHENS     2460 KEEP1
 2473 KILL1       2530 KILL11      2534 KILL111     2541 KILL12      2545 KILL13      2552 KILL131
PARTRGE version E04  Symbol Map          14:06:14.60 JUL 29 '97 DXN_NODES_D                            64   
 2557 KILLDELTA   6134 KTI@ALL     6136 KTI@ARITHMETIC               6142 KTI@BREAK   6145 KTI@COMMAND
 6150 KTI@DERAIL  6153 KTI@DIVIDE_CHECK             6160 KTI@ERROR   6163 KTI@EVENT   6166 KTI@FAULT_TAG
 6172 KTI@IPR     6174 KTI@LOCKUP  6177 KTI@MCL     6201 KTI@MEMORY  6204 KTI@MME     6206 KTI@MONITOR
 6211 KTI@NONE    6214 KTI@OVERFLOW                 6220 KTI@PAGE    6223 KTI@PMME    6226 KTI@PROGRAMMED
 6232 KTI@SEC_1   6245 KTI@SEC_2   6253 KTI@SEG     6255 KTI@TIMER   6260 KTI@TRAP    6263 KTI@XCON
 2432 KTIFNAME    2321 KTINAME     6266 L@$AS       6270 L@$LS       6272 L@$PS       6274 L@@
 6276 L@AARD      6302 L@AD        6304 L@AL        6306 L@ALL       6310 L@ALTRETURN
 6314 L@AND       6316 L@ANDC      6323 L@AR        6332 L@ASCII     6325 L@ASDT      6330 L@ASL
 6335 L@ATTACHMENT                 6341 L@AU        6343 L@BANG      6727 L@BF        6345 L@BKSLASH
 6347 L@CALL@T    6352 L@CARDS     6355 L@CC        6357 L@CI        6361 L@CLEAR     6364 L@COBOL
 6367 L@COLON     6371 L@COMMA     6373 L@COMMAH    6375 L@COPY      6400 L@CR        6402 L@CURRENT
 6405 L@DASH      6407 L@DASH@TO   6414 L@DEFAULT   6417 L@DI        6421 L@DIC       6423 L@DIV
 6425 L@DIVC      6441 L@DL        6432 L@DORE      6443 L@DU        6445 L@EBCDIC    6450 L@EJECT
 6453 L@ENTDEFS   6456 L@EQGREAT   6460 L@EQLESS    6462 L@EQUALS    6464 L@EQUALS1   6466 L@EVAL
 6472 L@F         6474 L@FALSE     6505 L@FAULTS    6725 L@FD        6510 L@FORTRAN   6513 L@FPL
 6515 L@FPRG      6520 L@FROM      6523 L@GMAP      6526 L@GREATEQ   6530 L@GREATEQ1  6532 L@GREATER
 6534 L@GREATER1  6536 L@GRLESS    6540 L@HOST      6543 L@I         6545 L@IC        6547 L@ICP
 6551 L@ID        6553 L@IDB       6555 L@IDC       6557 L@INACTIVE  6561 L@INDIRECT  6563 L@INDIRECT_LEFT
 6566 L@INDIRECT_PTR               6571 L@INDIRECT_RIGHT             7126 L@INDIRECT_SHORTPTR
 6574 L@INOF      6603 L@INPUT     6606 L@INSTRUCTIONS               6613 L@INTO      6616 L@KEEP
 6621 L@LBRACE    6623 L@LBRACKET  6625 L@LESS      6627 L@LESS1     6631 L@LESSEQ    6633 L@LESSEQ1
 6635 L@LESSGR    6645 L@LF        6637 L@LIBRARY   6642 L@LINE      6647 L@LONG      6652 L@LP
 6654 L@LPAREN    6656 L@LSHIFT    6660 L@LSHIFTC   6665 L@LSMON     6667 L@LVL       6672 L@ME
 6674 L@MINUS     6676 L@MINUSC    6703 L@MODIFY    6706 L@MON       6710 L@MONENT    6720 L@MONIS
 6731 L@MORE      6734 L@MULT      6736 L@MULTC     6743 L@N         6745 L@NEXT      6750 L@NO
 6752 L@NONE      6755 L@NOT       6764 L@NOTEQ     6766 L@NOTEQ1    6770 L@NUTS      6773 L@OFF@T
 6775 L@OFFSET    7000 L@ON        7002 L@ON@T      7004 L@ONE       7006 L@OPEN      7011 L@OR
 7013 L@ORC       7020 L@OVER      7031 L@PARAGRAPHS                 7023 L@PASCAL    7026 L@PATCH
 7035 L@PERIOD    7037 L@PERIODD   7041 L@PL1       7043 L@PL6       7045 L@PLUS      7047 L@PLUSC
 7054 L@PR        7056 L@PREV      7061 L@PROGRAM   7064 L@PT@       7066 L@PTR       7070 L@QL
 7072 L@QU        7074 L@REAL      7077 L@RETURN    7102 L@RPAREN    7104 L@RPG       7106 L@RSHIFT
 7110 L@RSHIFTC   7115 L@SC        7117 L@SCR       7121 L@SCREECH   7124 L@SD        7130 L@SILENT
 7132 L@SLASH     7134 L@STAR      7136 L@STATEMENTS                 7142 L@STEP      7145 L@SUBS
 7151 L@SUBSTATEMENTS              7156 L@TAB       7160 L@TAPE      7163 L@TEST      7166 L@TO
 7170 L@TRANSFER  7174 L@TRAP      7177 L@TRUE      7210 L@TYPE      7213 L@U         7216 L@UC
 7220 L@UMON      7222 L@UNDER     7225 L@UNFC      7227 L@UNFO      7231 L@UPARROW   7233 L@USER
 7236 L@UTS       7240 L@VARS      7244 L@X0        7253 L@X1        7260 L@X2        7265 L@X3
PARTRGE version E04  Symbol Map          14:06:14.60 JUL 29 '97 DXN_NODES_D                            65   
 7272 L@X4        7277 L@X5        7304 L@X6        7311 L@X7        7316 L@X@T       7320 L@XDEL
  701 LBL_ARRAY   4254 LINESPEC    7323 L_#         7325 L_ABBREV    7331 L_ACTIVE    7334 L_ALIB
 7337 L_ALTVAR    7355 L_ANLZ      7360 L_AT        7362 L_BREAK     7365 L_BY        7367 L_BYPASS
 7372 L_CACHE     7375 L_CALL      7400 L_CALLS     7403 L_COPY      7406 L_CRASH     7411 L_DBOOT
 7417 L_DEBUG     7414 L_DEF       7422 L_DELETE    7425 L_DIC       7427 L_DISPLAY   7432 L_DLCT
 7435 L_DO        7437 L_DOUBLE    7442 L_DUMP      7445 L_ECHO      7450 L_END       7452 L_EOM
 7454 L_EQUALS    7456 L_ERRFID    7461 L_EVAL      7465 L_EXIT      7470 L_FEP       7472 L_FIND
 7475 L_FORMAT    7500 L_G1        7510 L_GOTO      7512 L_HISTORY   7515 L_IF        7517 L_IGNORE
 7522 L_INACTIVE  7526 L_KEEP      7531 L_KILL      7534 L_LET       7536 L_LIST      7544 L_MACTIVE
 7547 L_MINI      7555 L_MLCT      7552 L_MODIFY    7560 L_NAME      7563 L_NODE      7566 L_NODES
 7571 L_NWARN     7574 L_ON        7576 L_OUTPUT    7601 L_PLUGH     7604 L_PMD       7606 L_PROMPT
 7611 L_PROTECT   7614 L_QUIT      7617 L_RANGE     7622 L_RBRACE    7624 L_RBRACKET  7626 L_READ
 7631 L_REPORT    7634 L_RUM       7637 L_SAD       7641 L_SAVE      7644 L_SCHEMA    7647 L_SECTION
 7652 L_SELCHAN   7663 L_SHOW      7666 L_SILENT    7671 L_SLASH     7673 L_STATUS    7676 L_STEP
 7541 L_STOP      7701 L_STORE     7704 L_SYNTAX    7707 L_T         7712 L_TBOOT     7715 L_TRAP
 7720 L_TSA       7722 L_UNFID     7725 L_UNSHARE   7730 L_UNSILENT  7734 L_UPDATE    7737 L_USE
 7741 L_WAIT      7744 L_WHEN      7747 L_WORD      7752 L_XCON      7755 L_XEQ       3370 MASK
  231 MATYPE      2677 MODIFY1     2723 MODIFY2     2645 MODIFY3     2663 MODIFY4     3671 M_1
 3673 M_2         3675 M_3         3665 M_REG         30 NA_EVAL      101 NA_MODIFY    112 NA_NPOI
  124 NA_SLASH      12 NA_STEP     2353 NF_IGNORE   2413 NF_KEEP     4773 NF_TRAP       40 NT_EVAL
  105 NT_MODIFY    143 NT_SLASH      23 NT_STEP     1502 NU_DUMP     1627 NU_ECHO     2307 NU_IGNORE
 2402 NU_KEEP     4036 NU_OUTPUT   4236 NU_READ     4765 NU_TRAP     1435 NVREF_LET   2735 NWARN_OPT
 1575 NX_DUMP     1633 NX_ECHO     2444 NX_KEEP     4061 NX_OUTPUT   4273 NX_READ      472 N_ABBREV
  500 N_ACTIVE     506 N_ALIB       523 N_ALTVAR     541 N_ANLZ       604 N_AT        1062 N_AT11
 1067 N_BREAK     1073 N_BYPASS    1077 N_CACHE     1103 N_COPY      1107 N_CRASH     1113 N_DBOOT
 1117 N_DEBUG     1300 N_DEF       1411 N_DELETE    1423 N_DIC       1427 N_DISPLAY   1476 N_DLCT
 1415 N_DO        1656 N_END       1671 N_EOM       1675 N_ERRFID    1703 N_EVAL      1722 N_EXIT
 1726 N_FIND      2147 N_FORMAT    2162 N_GOTO      2224 N_HISTORY   2374 N_INACTIVE  2246 N_INDIRECT
 2273 N_INDIRECT_LEFT              2257 N_INDIRECT_PTR               2301 N_INDIRECT_RIGHT
 2265 N_INDIRECT_SHORTPTR          2465 N_KILL      2565 N_LET       2604 N_LIST      2627 N_MINI
 3711 N_MLCT      2672 N_MODIFY    2633 N_MODIFYDW  3723 N_NAME      3742 N_NEXT      3753 N_OA
 3761 N_OC        4005 N_OE        3773 N_ONCALLS   4013 N_ONN       4027 N_ONNODES   4071 N_OPEN
 4103 N_PLUGH     4116 N_PMD       4210 N_PREV      4177 N_PROMPT    4173 N_PROTECT   4221 N_QUIT
 4226 N_RANGE     4310 N_REPORT    4351 N_RUM       4457 N_SAD       4465 N_SAVE      4471 N_SCHEMA
 4505 N_SELCHAN   4513 N_SHOW      4612 N_SILENT    4620 N_STATUS    4624 N_STEP      2614 N_STOP
 4653 N_STORE     4703 N_SYNTAX    4710 N_T         4761 N_TBOOT     5036 N_TSA       5017 N_UNFID
 5051 N_UNSHARE   5043 N_UNSILENT  5070 N_UPDATE    5134 N_USE       5310 N_WAIT      5313 N_WHEN
PARTRGE version E04  Symbol Map          14:06:14.60 JUL 29 '97 DXN_NODES_D                            66   
 5331 N_XCON      5335 N_XEQ       3115 OCT1        3141 OCT1C       3122 OCT2        3144 OCT2C
 3127 OCT3        3147 OCT3C       3134 OCT4        3152 OCT4C       1015 OCTIL       1021 OCTIL1
 1026 OCTILBOTH   1022 OCTILNICE   1024 ODIG        3155 OTAG_1      3201 OTAG_1C     3162 OTAG_2
 3204 OTAG_2C     4041 OUTPUT1     7762 PMD@ALL     7757 PMD@AUTO    7764 PMD@COMMON 10011 PMD@DATA
10014 PMD@DCBS   10017 PMD@DD     10007 PMD@DS      7767 PMD@DS1     7771 PMD@DS2     7773 PMD@DS3
 7775 PMD@DS4     7777 PMD@DS5    10001 PMD@DS6    10003 PMD@DS7    10005 PMD@DS8    10031 PMD@ISR
10033 PMD@JIT    10035 PMD@PLUGH  10040 PMD@PROCEDURE               10044 PMD@ROSEG  10047 PMD@TCB
 4142 PMDNAME      752 PORM         755 PORMX        637 POS1         642 POS11        652 POS11L
  621 POSITION     631 POSITIONL    633 POSITIONS    626 POSITIONV   1342 PQLIST1S    1337 PQLIST1X
 1460 PQLIST1_LET                  1330 PQLISTS     1325 PQLISTX     1455 PQLIST_LET  3277 PR
 3302 PR1         3307 PR2          464 QTSTRINGS    656 QUAL         660 QUAL1        635 QUAL3
 4301 READ1       3601 REGISTER    3557 REL_DIRECT  3530 REL_INDIRECT                 4336 REPORT1
 4224 RES         4375 RUM1        4450 RUMBUF      4417 RUMUTS      3647 R_1         3651 R_2
 3653 R_3         3655 R_4         3657 R_5         3661 R_6         3663 R_7         3637 R_REG
  773 SDO         1000 SDOD       10051 SEMICOLON   3562 SHORT_PREL  4547 SHOW1       4610 SHOWFPRG
  663 SIMBLE      4024 SIMBLE1      760 SIMEXP       765 SIMEXPD      767 SIMEXPDO     771 SIMEXPMDO
  737 SIMX         744 SIMXD        747 SIMXDO      1157 STATION     4636 STEP1       4647 STEP2
  671 STMT_SPEC    674 STMT_SPEC1   300 STORED_CMD  4672 STOREI      4700 STOREV      1372 SUBREF
 1400 SUBREF1      707 SUBSTMT      712 SUBSTMT1     731 SUBSTMT2     734 SUBSTMT2DO   445 SYMBOLS
  447 SYMBOL_CC    455 SYMBOL_COBOL                  446 SYMBOL_PL6   457 SYMDEL_COBOL
  462 SYMDEL_PL6  1360 SYMLIST     1363 SYMLISTC    3703 S_1         3705 S_2         3707 S_3
 3677 S_REG       3224 TAG         3232 TAG1        3256 TAG2        3260 TAG3        3263 TAG4
 3167 TAG_2       3207 TAG_2C      3174 TAG_4       3211 TAG_4C      3235 TM          1162 TP
 1174 TPACCT      4732 TR1         4744 TR2         4757 TR3         1403 ULREF       5233 ULSTYPE
 5236 ULSTYPE1    5112 UPDATE1     5115 UPDATE2     5122 UPDATE3     5162 USE08       5166 USE09
 5144 USE1        5202 USE10       5214 USE11       5220 USE12       5244 USE13       5255 USE14
 5260 USE15       5262 USE16       5265 USE17       5300 USE18       5304 USE19       1355 VAREXPS
 1345 VAREXPX     1463 VAREXP_LET  1312 VREF        1452 VREF11_LET  1445 VREF1_LET   1310 VREFX
 1315 VREFX1      1322 VREFX11     1443 VREFX_LET   1440 VREF_LET    1002 XDO         1005 XMDO

PARTRGE version E04  SYMDEF Map          14:06:14.60 JUL 29 '97 DXN_NODES_D                            67   
 5451 CNR2_HOST   5476 CNR2_L6     5565 CNR4_COBOL  5515 CNR4_FORTRAN                 5570 CNR4_PL6
  275 D_ACMDS        0 D_ATREE      271 D_CCMDS      247 D_DCMDS      157 D_MTREE       54 FMTSPEC1
 1037 HDIG        1041 HEXBOTH     1031 HEXIL       1034 HEXIL1      2741 INSTR       3023 INSTR_ADSC
 3036 INSTR_BDSC  3213 INSTR_DFLT  2754 INSTR_EIS   3312 INSTR_L6    3052 INSTR_NDSC  3071 INSTR_SDSC
 3077 INSTR_VDSC  3110 INSTR_ZERO  6314 L@AND       6316 L@ANDC      6405 L@DASH      6423 L@DIV
 6425 L@DIVC      6515 L@FPRG      6656 L@LSHIFT    6660 L@LSHIFTC   6674 L@MINUS     6676 L@MINUSC
 6734 L@MULT      6736 L@MULTC     7011 L@OR        7013 L@ORC       7045 L@PLUS      7047 L@PLUSC
 7106 L@RSHIFT    7110 L@RSHIFTC   7544 L_MACTIVE   2353 NF_IGNORE   2413 NF_KEEP     4773 NF_TRAP
 1502 NU_DUMP     1627 NU_ECHO     2307 NU_IGNORE   2402 NU_KEEP     4036 NU_OUTPUT   4236 NU_READ
 4765 NU_TRAP     1575 NX_DUMP     1633 NX_ECHO     2444 NX_KEEP     4061 NX_OUTPUT   4273 NX_READ
 1107 N_CRASH     1411 N_DELETE    1015 OCTIL       1021 OCTIL1      1026 OCTILBOTH   1024 ODIG
  747 SIMXDO       445 SYMBOLS      447 SYMBOL_CC    455 SYMBOL_COBOL                  446 SYMBOL_PL6
  457 SYMDEL_COBOL                  462 SYMDEL_PL6  1360 SYMLIST     1363 SYMLISTC

PARTRGE version E04  PREFs               14:06:14.60 JUL 29 '97 DXN_NODES_D                            68   
  775 DD_BASE     5247 DD_BASEBOTH                  5423 DD_CNR2     5425 DD_CNR4      346 DD_DUMP
  347 DD_ECHO      361 DD_IGNORE    172 DD_INSTR    2745 DD_INSTR_CONT                 363 DD_KEEP
 1061 DD_L@AND    1057 DD_L@DIV    1054 DD_L@LSHIFT                   754 DD_L@MINUS  1056 DD_L@MULT
 1060 DD_L@OR      753 DD_L@PLUS   1055 DD_L@RSHIFT                   372 DD_OUTPUT    405 DD_READ
  665 DD_SYMBOLS  1401 DD_SYMDEL   1346 DD_SYMLIST   420 DD_TRAP


         No errors,  24 PREFs in D_ATREE

