

14:11 JUL 28 '97 B$TABLES_C.:E05SI                                         1    
    1      /*M* B$TABLES_C - Macros and EQUs to access common SEARCH and XLATE tables */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*T*/
    8      /*X* NO */
    9
   10      /*P* NAME: B$TABLES_C
   11      PURPOSE: Macros and EQUs to access common SEARCH and XLATE tables.
   12      DESCRIPTION:
   13              This module contains preprocessor definitions for use in
   14              accessing common SEARCH and XLATE tables.  There is a macro
   15              to generate a reference to each table. There are also EQUs
   16              for the bit masks used in SEARCH tables.
   17
   18              Tables can be referenced in other modules by invoking the
   19              appropriate macro, as follows:
   20
   21                  %INCLUDE B$TABLES_C;
   22                  %B$XL_ASC_EBC (NAME=XLATE_TABLE);
   23                      .
   24                      .
   25                      .
   26                  CALL XLATE (destination-field, XLATE_TABLE, source-field);
   27
   28              Tables are referenced by means of pointers that are defined
   29              in B_POINTER_D and B_USRPTRS_D.  One of these modules must be
   30              included in the link list for any run unit that references a
   31              standard table.
   32      */
   33
   34      /****** EQUs for search table masks.
   35
   36              Non-0 bytes of all common SEARCH tables are comprised of one
   37              or more of the following bit masks to indicate the type of
14:11 JUL 28 '97 B$TABLES_C.:E05SI                                         2    
   38              character that ended the search.
   39      */
   40      %EQU B$SR#ALPHA = '400'O;   /*  Alphabetic ('A'-'Z','a'-'z')        */
   41      %EQU B$SR#DEC   = '200'O;   /*  Decimal digit ('0'-'9')             */
   42      %EQU B$SR#NUM   = '100'O;   /*  Numeric char (decimal + '.+-')      */
   43      %EQU B$SR#HEX   = '040'O;   /*  Hex digit   ('0'-'9','A'-'F')       */
   44      %EQU B$SR#OCT   = '020'O;   /*  Octal digit ('0'-'7')               */
   45      %EQU B$SR#CTL   = '010'O;   /*  Control char (0-31,127)             */
   46      %EQU B$SR#PUNC  = '004'O;   /*  Punctuation                         */
   47      %EQU B$SR#SYM   = '002'O;   /*  Symbol char (alphanumeric + '$#@_') */
   48      %EQU B$SR#OTHER = '001'O;   /*  Non-ASCII char (128-511)            */
   49
   50      DCL B_POINTER ENTRY CONV(5);
   51
   52      %MACRO B$SR_NON_BLANK( NAME=B$SR_NON_BLANK );
   53          DCL B$SR_NON_BLANK$ PTR SYMREF READONLY;
   54          DCL 1 NAME DALIGNED BASED( B$SR_NON_BLANK$ ), 2 C( 0:511 ) BIT(9) CALIGNED;
   55      %MEND;
   56      %MACRO B$SR_NON_ZERO( NAME=B$SR_NON_ZERO );
   57          DCL B$SR_NON_ZERO$ PTR SYMREF READONLY;
   58          DCL 1 NAME DALIGNED BASED( B$SR_NON_ZERO$ ), 2 C( 0:511 ) BIT(9) CALIGNED;
   59      %MEND;
   60      %MACRO B$SR_NON_DEC( NAME=B$SR_NON_DEC );
   61          DCL B$SR_NON_DEC$ PTR SYMREF READONLY;
   62          DCL 1 NAME DALIGNED BASED( B$SR_NON_DEC$ ), 2 C( 0:511 ) BIT(9) CALIGNED;
   63      %MEND;
   64      %MACRO B$SR_NON_ALPHA( NAME=B$SR_NON_ALPHA );
   65          DCL B$SR_NON_ALPHA$ PTR SYMREF READONLY;
   66          DCL 1 NAME DALIGNED BASED( B$SR_NON_ALPHA$ ), 2 C( 0:511 ) BIT(9) CALIGNED;
   67      %MEND;
   68      %MACRO B$XL_ASC_EBC( NAME=B$XL_ASC_EBC );
   69          DCL B$XL_ASC_EBC$ PTR SYMREF READONLY;
   70          DCL 1 NAME DALIGNED BASED( B$XL_ASC_EBC$ ), 2 C( 0:511 ) CHAR(1);
   71      %MEND;
   72      %MACRO B$XL_EBC_ASC( NAME=B$XL_EBC_ASC );
   73          DCL B$XL_EBC_ASC$ PTR SYMREF READONLY;
   74          DCL 1 NAME DALIGNED BASED( B$XL_EBC_ASC$ ), 2 C( 0:511 ) CHAR(1);
14:11 JUL 28 '97 B$TABLES_C.:E05SI                                         3    
   75      %MEND;
   76      %MACRO B$XL_LOWER( NAME=B$XL_LOWER );
   77          DCL B$XL_LOWER$ PTR SYMREF READONLY;
   78          DCL 1 NAME DALIGNED BASED( B$XL_LOWER$ ), 2 C( 0:511 ) CHAR(1);
   79      %MEND;
   80      %MACRO B$XL_UPPER( NAME=B$XL_UPPER );
   81          DCL B$XL_UPPER$ PTR SYMREF READONLY;
   82          DCL 1 NAME DALIGNED BASED( B$XL_UPPER$ ), 2 C( 0:511 ) CHAR(1);
   83      %MEND;
   84      %MACRO B$XL_UR( NAME=B$XL_UR );
   85          DCL B$XL_UR$ PTR SYMREF READONLY;
   86          DCL 1 NAME DALIGNED BASED( B$XL_UR$ ), 2 C( 0:511 ) CHAR(1);
   87      %MEND;
   88      %MACRO B$XL_UPPER_UR( NAME=B$XL_UPPER_UR );
   89          DCL B$XL_UPPER_UR$ PTR SYMREF READONLY;
   90          DCL 1 NAME DALIGNED BASED( B$XL_UPPER_UR$ ), 2 C( 0:511 ) CHAR(1);
   91      %MEND;
   92      %MACRO B$XL_LOWER_UR( NAME=B$XL_LOWER_UR );
   93          DCL B$XL_LOWER_UR$ PTR SYMREF READONLY;
   94          DCL 1 NAME DALIGNED BASED( B$XL_LOWER_UR$ ), 2 C( 0:511 ) CHAR(1);
   95      %MEND;
   96      %MACRO B$XL_MOD_256( NAME=B$XL_MOD_256 );
   97          DCL B$XL_MOD_256$ PTR SYMREF READONLY;
   98          DCL 1 NAME DALIGNED BASED( B$XL_MOD_256$ ), 2 C( 0:511 ) CHAR(1);
   99      %MEND;
  100      %MACRO B$XL_ASC_DUMP( NAME=B$XL_ASC_DUMP );
  101          DCL B$XL_ASC_DUMP$ PTR SYMREF READONLY;
  102          DCL 1 NAME DALIGNED BASED( B$XL_ASC_DUMP$ ), 2 C( 0:511 ) CHAR(1);
  103      %MEND;
  104      %MACRO B$XL_EBC_DUMP( NAME=B$XL_EBC_DUMP );
  105          DCL B$XL_EBC_DUMP$ PTR SYMREF READONLY;
  106          DCL 1 NAME DALIGNED BASED( B$XL_EBC_DUMP$ ), 2 C( 0:511 ) CHAR(1);
  107      %MEND;

