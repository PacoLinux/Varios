VERSION E05

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:1    
        1        1        /*M* FLS$STOW_FETCH performs archiving from the user's  viewpoint */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*  NAME: FLS$STOW_FETCH
        8        8              PURPOSE: Process FETCH, UNFETCH, STOW, UNSTOW, UNARCHIVE
        9        9                       commands.
       10       10        ***/
       11       11        FLS$STOW_FETCH : PROC (COMMAND);
       12       12        /***/
       13       13        /** Includes **/
       14       14        /***/
       15       15        %INCLUDE CP_6;
       16     5574        %INCLUDE CP_6_SUBS;
       17     6114        %INCLUDE B_ERRORS_C;
       18     7241        %INCLUDE XU_MACRO_C;
       19    10347        %INCLUDE XU_SUBS_C;
       20    10439        %INCLUDE FLI_DATA_R;
       21    11853        %INCLUDE FLN_DATA_R;
       22    12590        %INCLUDE FM$GRAN;
       23    12659        %INCLUDE FM$FIT;
       24    12880        %INCLUDE B$JIT;
       25    13483        %INCLUDE FLE_DATA_R;
       26    19434        %INCLUDE XUR_ENTRY;
       27    19466        /***/
       28    19467        /** External procedures  **/
       29    19468        /***/
       30    19469    1   DCL FLN$DISK_IO_INIT ENTRY;
       31    19470    1   DCL FLP$WR_FILE_INFO ENTRY(9) ALTRET;
       32    19471    1   DCL FLN$DISK_OPEN_NEXT ENTRY(5) ALTRET;
       33    19472    1   DCL FLN$DISK_CLOSE_NEXT ENTRY(1);
       34    19473    1   DCL FLI$RPT_ERR ENTRY(5);
       35    19474    1   DCL FLN$DISK_CLOSE_ALL ENTRY;
       36    19475    1   DCL XSF$LOCCODP ENTRY (2) ALTRET;
       37    19476    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:2    
       38    19477    1   DCL FLN$DISK_NXTA ENTRY;
       39    19478    1   DCL FLI$NUMFREEGRANS ENTRY(3) ALTRET;
       40    19479
       41    19480        /***
       42    19481         *** DCB
       43    19482         ***/
       44    19483
       45    19484    1   DCL M$LO DCB;
       46    19485
       47    19486        %FM$GRAN;
       48    19490        %F$DCB (STCLASS = "BASED(DCB$)");
       49    19547        %CODE04(BASED="BASED(CODE4$)");
       50    19555        %CODE03(BASED="BASED(CODE3$)");
       51    19562        %CODE06(BASED="BASED(CODE6$)");
       52    19566        %CODE14(BASED = "BASED(CODE14$)");
       53    19576    1   DCL IFPARAM_BUF(0:1018) UBIN WORD BASED;
       54    19577        %FM$FIT(BASED="BASED(FIT$)");
       55    19580        %VLP_VECTOR (FPTN=FIT_,
       56    19581                     STCLASS = STATIC);
       57    19596
       58    19597        %VLP_ERRCODE (FPTN = ERR,
       59    19598                      STCLASS = STATIC ) ;
       60    19643
       61    19644        %FPT_OPEN(FPTN = FAKE_FILE,
       62    19645                  ASN = FILE,
       63    19646                  TEST = NO,
       64    19647                  CTG = YES,
       65    19648                 SCRUB = YES,
       66    19649                  ORG = KEYED,
       67    19650                 SN = VLP_SN,
       68    19651                 ACCT = VLP_ACCT,
       69    19652                 NAME = VLP_NAME,
       70    19653                  STCLASS = STATIC);
       71    19762
       72    19763        %FPT_OPEN(FPTN = SPECD_FILE,
       73    19764                  DCB = M$DISK00,
       74    19765                  TEST = YES,
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:3    
       75    19766                  ASN = FILE,
       76    19767                  ACS = BLOCK,
       77    19768                  FUN = IN,
       78    19769                  RES = 'DP',
       79    19770                  SN = DISK_SN,
       80    19771                  NAME = DISK_NAME,
       81    19772                  ACCT = DISK_ACCT,
       82    19773                  STCLASS = STATIC);
       83    19882
       84    19883        %FPT_PRIV( FPTN=SWITCH_FMSEC,
       85    19884                   PRIV=%PR_FMSEC# );
       86    19899
       87    19900        %VLP_SN(STCLASS = STATIC,
       88    19901                N = 1,
       89    19902                SN = ' ');
       90    19915
       91    19916        %VLP_ACCT(STCLASS=STATIC);
       92    19929
       93    19930        %VLP_NAME(LEN=31,STCLASS=STATIC);
       94    19957
       95    19958        %VLP_SN(FPTN=REEL_SN,
       96    19959                N=1,
       97    19960                SN=' ',
       98    19961                STCLASS=STATIC );
       99    19974
      100    19975    1   DCL BLANK6 CHAR(0) STATIC INIT('      ');
      101    19976    1   DCL DCB# UBIN STATIC;
      102    19977    1   DCL DCB_NUM UBIN STATIC;
      103    19978    1   DCL DCB$ PTR STATIC;
      104    19979    1   DCL CODE4$ PTR STATIC;
      105    19980    1   DCL CODE3$ PTR STATIC;
      106    19981    1   DCL CODE6$ PTR STATIC;
      107    19982    1   DCL FIT$ PTR STATIC;
      108    19983    1   DCL BREAK_COUNT SBIN SYMREF;
      109    19984    1   DCL ANY_FILES_FOUND BIT(1) STATIC ;
      110    19985    1   DCL COMMAND UBIN ;
      111    19986    1   DCL CODE UBIN;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:4    
      112    19987    1   DCL FREE_GRANS SBIN STATIC;
      113    19988    1   DCL CODE14$ PTR STATIC;
      114    19989         %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:5    
      115    19990        /***
      116    19991         ***  Calling all routines for archiving from user's viewpoint.
      117    19992         ***/
      118    19993
      119    19994    1          CALL FLP$WR_FILE_INFO;
      120    19995    1          DISK_OPEN_NEXT.V.OPER.TEST# = %NO#;
      121    19996    1          CALL FLN$DISK_IO_INIT;
      122    19997    1          ANY_FILES_FOUND = '0'B;
      123    19998    1          CALL M$SPRIV ( SWITCH_FMSEC )
      124    19999    2               WHENALTRETURN DO;
      125    20000    2                   CALL FLI$RPT_ERR;
      126    20001    2                   RETURN;
      127    20002    2                 END;
      128    20003
      129    20004    2          DO CASE ( COMMAND ) ;
      130    20005    2            CASE ( %STOW_ACTIVE, %STOW_INACTIVE ) ;
      131    20006    2                CALL FLB_STOW ;
      132    20007    2            CASE ( %UNSTOW ) ;
      133    20008    2                CALL FLB_UNSTOW ;
      134    20009    2            CASE ( %FETCH ) ;
      135    20010    2                CALL FLB_FETCH ;
      136    20011    2            CASE ( %UNFETCH ) ;
      137    20012    2                 CALL FLB_UNFETCH ;
      138    20013    2            CASE ( %UNARCHIVE ) ;
      139    20014    2                 CALL FLB_UNARCHIVE ;
      140    20015
      141    20016    2          END;
      142    20017    1          DISK_OPEN_ORDINARY.FPARAM_ = VECTOR(NIL);
      143    20018    1          IF NOT FMSEC AND NOT B$JIT.PPRIV & %PPR_EFT#
      144    20019    1          THEN CALL M$RPRIV ( SWITCH_FMSEC );
      145    20020    1   RETURN;
      146    20021        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:6    
      147    20022    1   FLB_FETCH : PROC ;
      148    20023        /*F*   NAME: FLB_FETCH
      149    20024               PURPOSE : Perform FETCH command which requests the return to
      150    20025                         disk of the file (s) in the archive system.
      151    20026        ***/
      152    20027
      153    20028
      154    20029    3           DO WHILE('1'B);
      155    20030    3              IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#
      156    20031    3              THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unathor. file access. */
      157    20032    3              CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);
      158    20033
      159    20034    3              IF F$DCB.FCD#   /* If DCB not open, a file dir. is being processed */
      160    20035    3              THEN
      161    20036    4              DO;
      162    20037    4                 DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;
      163    20038    4                 CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      164    20039
      165    20040    4                 CALL M$SPRIV( SWITCH_FMSEC );
      166    20041    4                 DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;
      167    20042    4                 DISK_OPEN_ORDINARY.FPARAM_ = FIT_;
      168    20043    4                 CALL M$OPEN( DISK_OPEN_ORDINARY )
      169    20044    4                 WHENALTRETURN
      170    20045    5                 DO;
      171    20046    5                 END;
      172    20047    4              END;
      173    20048    3              ELSE
      174    20049    3                 CALL M$SPRIV( SWITCH_FMSEC );
      175    20050
      176    20051    3              IF BREAK_COUNT > 0
      177    20052    3              THEN
      178    20053    4              DO;
      179    20054    4                 CALL FLN$DISK_CLOSE_ALL;
      180    20055    4                 RETURN;
      181    20056    4              END;
      182    20057    3              IF ERR
      183    20058    3              THEN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:7    
      184    20059    4              DO;
      185    20060    4                 IF ERR.ERR# = %E$ADEOF
      186    20061    4                 THEN;
      187    20062    4                 ELSE
      188    20063    4                    IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF
      189    20064    4                    THEN;
      190    20065    4                    ELSE
      191    20066    5                    DO;
      192    20067    5                        ANY_FILES_FOUND = '1'B;
      193    20068    5                       CALL FLI$RPT_ERR(ERR,DCB_NUM);
      194    20069    5                       IF ERR.ERR# = %E$FILEBUSY
      195    20070    5                         OR ERR.ERR# = %E$NOACCESS
      196    20071    5                         OR ERR.ERR# = %E$JRNLERR
      197    20072    5                         OR ERR.ERR# = %E$NOFILE
      198    20073    5                         OR ERR.ERR# = %E$BADFIT
      199    20074    5                         OR ERR.ERR# = %E$IOERR
      200    20075    5                       THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
      201    20076    5                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      202    20077    5                            ELSE ;
      203    20078    5                       ELSE
      204    20079    6                       DO;
      205    20080    6                          CALL FLN$DISK_CLOSE_ALL;
      206    20081    6                          RETURN;
      207    20082    6                       END;
      208    20083    5                    END;
      209    20084    4              END;
      210    20085    3              ELSE
      211    20086    3   FILE_FOUND:
      212    20087    4              DO;
      213    20088    4                 ANY_FILES_FOUND = '1'B;
      214    20089    4                 IF F$DCB.DESC.FETCH#
      215    20090    4                 THEN
      216    20091    5                 DO;
      217    20092    5                    CALL FLI$RPT_ERR(E_FETCH_SET,DCB_NUM);
      218    20093    5                 END;
      219    20094    4                 ELSE
      220    20095    5                 DO;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:8    
      221    20096    5                    IF F$DCB.DESC.ARCHIVE# AND (NOT F$DCB.DESC.QS#)
      222    20097    5                    THEN
      223    20098    6                    DO;
      224    20099    6                       IF F$DCB.DESC.DELF#
      225    20100    6                       THEN
      226    20101    7                       DO; /* ARCHIVE INACTIVE */
      227    20102        /***
      228    20103         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      229    20104         *** set in the DCB.
      230    20105         ***/
      231    20106    7                          CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      232    20107    7                          CALL M$RPRIV( SWITCH_FMSEC );
      233    20108    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;
      234    20109    7                          CALL M$OPEN( DISK_OPEN_ORDINARY )
      235    20110    7                          WHENALTRETURN
      236    20111    8                          DO;
      237    20112    8                          END;
      238    20113    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;
      239    20114    7                          CALL M$SPRIV( SWITCH_FMSEC );
      240    20115
      241    20116    7                          IF (FMSEC)
      242    20117    7                            OR (F$DCB.AUTHFFLG.DELF#) /* Allow if accnt. wr. access. */
      243    20118    7                            OR (F$DCB.AUTHFFLG.CREATE#) /* Allow if accnt. cr. acc. */
      244    20119    7                          THEN
      245    20120    8                          DO;
      246    20121        /***
      247    20122         *** Determine that we have sufficient packset space for creating a file before
      248    20123         *** deleting the file directory entry. This prevents the possibility of
      249    20124         *** losing all traces of the file and preventing its subsequent retrieval.
      250    20125         ***/
      251    20126    8                            CALL FLI$NUMFREEGRANS(ADDR(DISK_SN),FREE_GRANS,ERR)
      252    20127    8                            WHENALTRETURN
      253    20128    9                            DO;
      254    20129    9                              CALL FLI$RPT_ERR (ERR,DCB_NUM);
      255    20130    9                              IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
      256    20131    9                              THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      257    20132    9                              EXIT FILE_FOUND;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:9    
      258    20133    9                            END;
      259    20134    8                            IF FREE_GRANS < 5
      260    20135    8                            THEN
      261    20136    9                            DO;
      262    20137    9                              CALL FLI$RPT_ERR (E_CANT_FETCH,DCB_NUM);
      263    20138    9                              EXIT FILE_FOUND;
      264    20139    9                            END;
      265    20140    8                            CALL M$OPEN( DISK_OPEN_ORDINARY );
      266    20141    8                            CODE6$ = FIT_.PTR$;
      267    20142    8                            CALL XSF$LOCCODP(CODE6$,06)
      268    20143    8                            WHENRETURN
      269    20144    9                            DO;
      270    20145    9                              EFTWORD = CODE06.STOW.EFT;
      271    20146    9                              REEL_SN.SN#(0) = CODE06.STOW.REEL;
      272    20147    9                              DISK_DESC_SAVE = F$DCB.DESC;
      273    20148    9                              DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '1'B;
      274    20149    9                              DISK_CLOSE_NEXT.V.DCB# = DCB_NUM;
      275    20150    9                              CALL M$CLOSE(DISK_CLOSE_NEXT)
      276    20151    9                              WHENRETURN
      277    20152   10                              DO;
      278    20153        /***
      279    20154         ***  Create fake file so that descriptor bits can be set in the fit.
      280    20155         ***/
      281    20156   10                                 FAKE_FILE.V.FUN# = %CREATE#;
      282    20157   10                                 FAKE_FILE.V.ACS# = %SEQUEN#;
      283    20158   10                                 FAKE_FILE.V.DCB# = DCB_NUM;
      284    20159   10                                 FAKE_FILE.V.EXPIRE# = -1;
      285    20160   10                                 FAKE_FILE.FPARAM_ = VECTOR(NIL);
      286    20161   10                                 VLP_SN.SN#(0) = F$DCB.PSN#;
      287    20162   10                                 VLP_ACCT.ACCT# = F$DCB.ACCT#;
      288    20163   10                                 VLP_NAME = F$DCB.NAME#;
      289    20164   10                                 CALL M$OPEN(FAKE_FILE)
      290    20165   10                                 WHENRETURN
      291    20166   11                                 DO;
      292    20167   11                                    DISK_CLOSE_NEXT.V.EFTOPER = '0'B;
      293    20168   11                                    DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
      294    20169   11                                    DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:10   
      295    20170   11                                    DISK_CLOSE_NEXT.V.DESC.QS# = '1'B;
      296    20171   11                                    DISK_CLOSE_NEXT.V.DESC.FETCH# = '1'B;
      297    20172   11                                    DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '1'B;
      298    20173   11                                    DISK_CLOSE_NEXT.V.DESC.DELF# = '0'B;
      299    20174   11                                    DISK_CLOSE_NEXT.V.DESC.ACTIVE# = FMSEC;
      300    20175   11                                    DISK_CLOSE_NEXT.V.EXPIRE# = EFTWORDEXPIRE;
      301    20176   11                                    DISK_CLOSE_NEXT.SN_ = VECTOR(REEL_SN);
      302    20177   11                                    DISK_CLOSE_NEXT.V.EFTOPER.ASTOW# = '1'B;
      303    20178   11                                    DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '0'B;
      304    20179   11                                    DISK_CLOSE_NEXT.V.DESC.TPB# = '1'B;
      305    20180   11                                    DISK_CLOSE_NEXT.V.DESC.ODSTOW# = DISK_DESC_SAVE.
             20180                                             ODSTOW#;
      306    20181   11                                    DISK_CLOSE_NEXT.IFPARAM_ = FIT_;
      307    20182   11                                    CALL M$CLOSE(DISK_CLOSE_NEXT)
      308    20183   11                                    WHENRETURN
      309    20184   12                                    DO;
      310    20185   12                                      DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(NIL);
      311    20186   12                                      FAKE_FILE.V.DCB# = DCB_NUM;
      312    20187   12                                      FAKE_FILE.V.FUN# = %IN#;
      313    20188   12                                      FAKE_FILE.V.ACS# = %BLOCK#;
      314    20189   12                                      FAKE_FILE.FPARAM_ = FIT_;
      315    20190   12                                      CALL M$OPEN(FAKE_FILE)
      316    20191   12                                      WHENRETURN
      317    20192   13                                      DO;
      318    20193   13                                        DISK_CLOSE_NEXT.V.EFTOPER = '0'B;
      319    20194   13                                        DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
      320    20195   13                                        DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;
      321    20196   13                                        DISK_CLOSE_NEXT.V.DESC.ODSTOW# = DISK_DESC_SAVE
             20196                                                 .ODSTOW#;
      322    20197   13                                        DISK_CLOSE_NEXT.V.DESC.QS# = '1'B;
      323    20198   13                                        DISK_CLOSE_NEXT.V.DESC.FETCH# = '1'B;
      324    20199   13                                        CALL XUR$ERRMSG(E_FETCH_DONE,DCB_NUM,DCBNUM(
             20199                                                 M$LO));
      325    20200   13                                      END;
      326    20201   12                                      WHENALTRETURN
      327    20202   13                                      DO;
      328    20203   13                                        CALL FLI$RPT_ERR;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:11   
      329    20204   13                                      END;
      330    20205   12                                    END;
      331    20206   11                                    WHENALTRETURN
      332    20207   12                                    DO;
      333    20208   12                                        DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(NIL);
      334    20209   12                                        CALL FLI$RPT_ERR;
      335    20210   12                                    END;
      336    20211   11                                 END; /* CREATE FAKE FILE */
      337    20212   10                                 WHENALTRETURN
      338    20213   11                                 DO;
      339    20214   11                                    CALL FLI$RPT_ERR;
      340    20215   11                                 END;
      341    20216   10                              END; /*DISK_CLOSE_NEXT */
      342    20217    9                              WHENALTRETURN
      343    20218   10                              DO;
      344    20219   10                                CALL FLI$RPT_ERR;
      345    20220   10                              END;
      346    20221    9                            END; /* CODE06 */
      347    20222    8                            WHENALTRETURN
      348    20223    9                            DO;
      349    20224    9                              CALL FLI$RPT_ERR(E_NO_CODE6,DCB_NUM);
      350    20225    9                            END;
      351    20226    8                          END;
      352    20227    7                          ELSE
      353    20228    8                          DO;
      354    20229    8                             CALL FLI$RPT_ERR(E_FETCH_DENIED,DCB_NUM);
      355    20230    8                          END;
      356    20231    7                       END; /* ARCHIVE INACTIVE */
      357    20232    6                       ELSE
      358    20233    7                       DO;/*ARCHIVE ACTIVE*/
      359    20234    7                          CALL FLI$RPT_ERR(E_ACTIVE_FETCH_DENIED,DCB_NUM);
      360    20235    7                       END; /* ARCHIVE ACTIVE*/
      361    20236    6                    END;/* ARCHIVE FILE*/
      362    20237    5                    ELSE
      363    20238    6                    DO;
      364    20239    6                       CALL FLI$RPT_ERR(E_NOT_ARCHIVE,DCB_NUM);
      365    20240    6                    END;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:12   
      366    20241    5                 END; /* NOT FETCH */
      367    20242    4              END; /* NOT ERR*/
      368    20243    3              CALL FLN$DISK_CLOSE_NEXT(DCB#);
      369    20244    3           END;/* DO WHILE '1'B */
      370    20245    2   DONE:
      371    20246    2           CALL FLN$DISK_CLOSE_ALL;
      372    20247    2           IF NOT ANY_FILES_FOUND
      373    20248    2           THEN CALL PRINT_ERROR;
      374    20249    2           RETURN;
      375    20250
      376    20251    2   END FLB_FETCH;
      377    20252        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:13   
      378    20253    1   FLB_UNFETCH : PROC ;
      379    20254        /*F*  NAME: FLB_UNFETCH
      380    20255              PURPOSE: Perform UNFETCH command which rescinds a FETCH
      381    20256                       request. For any specified file(s) not currently
      382    20257                       queued for FETCH, an error message is issued.
      383    20258        ***/
      384    20259
      385    20260    3           DO WHILE('1'B);
      386    20261    3              IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#
      387    20262    3              THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unathor. file access. */
      388    20263    3              CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);
      389    20264
      390    20265    3            IF F$DCB.FCD#     /* If DCB not open, a file dir. is being processed */
      391    20266    3            THEN
      392    20267    4            DO;
      393    20268    4               DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;
      394    20269    4               CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      395    20270
      396    20271    4               CALL M$SPRIV( SWITCH_FMSEC );
      397    20272    4               DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;
      398    20273    4               DISK_OPEN_ORDINARY.FPARAM_ = FIT_;
      399    20274    4               CALL M$OPEN( DISK_OPEN_ORDINARY )
      400    20275    4               WHENALTRETURN
      401    20276    5               DO;
      402    20277    5               END;
      403    20278    4            END;
      404    20279    3              ELSE
      405    20280    3                 CALL M$SPRIV( SWITCH_FMSEC );
      406    20281
      407    20282    3              IF BREAK_COUNT > 0
      408    20283    3              THEN GOTO DONE;
      409    20284    3              IF ERR
      410    20285    3              THEN
      411    20286    4              DO;
      412    20287    4                 IF ERR.ERR# = %E$ADEOF
      413    20288    4                 THEN;
      414    20289    4                 ELSE
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:14   
      415    20290    4                    IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF
      416    20291    4                    THEN;
      417    20292    4                    ELSE
      418    20293    5                    DO;
      419    20294    5                       CALL FLI$RPT_ERR(ERR,DCB_NUM);
      420    20295    5                       ANY_FILES_FOUND = '1'B;
      421    20296    5                       IF ERR.ERR# = %E$FILEBUSY
      422    20297    5                         OR ERR.ERR# = %E$NOACCESS
      423    20298    5                         OR ERR.ERR# = %E$JRNLERR
      424    20299    5                         OR ERR.ERR# = %E$NOFILE
      425    20300    5                         OR ERR.ERR# = %E$BADFIT
      426    20301    5                         OR ERR.ERR# = %E$IOERR
      427    20302    5                       THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
      428    20303    5                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      429    20304    5                            ELSE ;
      430    20305    5                       ELSE GOTO DONE;
      431    20306    5                       END;
      432    20307    4                 END;
      433    20308    3              ELSE
      434    20309    4              DO;
      435    20310    4                  ANY_FILES_FOUND = '1'B;
      436    20311    4                 IF F$DCB.DESC.FETCH# AND F$DCB.DESC.QS#
      437    20312    4                 THEN
      438    20313    5                 DO;                       /* FETCH                              */
      439    20314    5                    CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      440    20315    5                    CALL XSF$LOCCODP(CODE4$,04)
      441    20316    5                    WHENRETURN
      442    20317    6                    DO;
      443    20318        /***
      444    20319         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      445    20320         *** set in the DCB.
      446    20321         ***/
      447    20322    6                       CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      448    20323    6                       CALL M$RPRIV( SWITCH_FMSEC );
      449    20324    6                       DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;
      450    20325    6                       CALL M$OPEN( DISK_OPEN_ORDINARY )
      451    20326    6                       WHENALTRETURN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:15   
      452    20327    7                       DO;
      453    20328    7                       END;
      454    20329    6                       DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;
      455    20330    6                       CALL M$SPRIV( SWITCH_FMSEC );
      456    20331
      457    20332    6                       IF (FMSEC)
      458    20333    6                         OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      459    20334    6                         AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      460    20335    6                         OR (F$DCB.AUTHFFLG.DELF#) /* Allow if accnt. wr. access */
      461    20336    6                       THEN
      462    20337    7                       DO;
      463    20338    7                          CALL M$OPEN( DISK_OPEN_ORDINARY );
      464    20339    7                          DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
      465    20340    7                          DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;
      466    20341    7                          DISK_CLOSE_NEXT.V.DESC.QS# = '0'B;
      467    20342    7                          DISK_CLOSE_NEXT.V.DESC.FETCH# = '0'B;
      468    20343    7                          CODE6$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      469    20344    7                          CALL XSF$LOCCODP(CODE6$,06)
      470    20345    7                          WHENRETURN
      471    20346    8                          DO;
      472    20347    8                             EFTWORD = CODE06.STOW.EFT;
      473    20348    8                             DISK_CLOSE_NEXT.V.EFTOPER.ISTOW# = '1'B;
      474    20349    8                             END;
      475    20350    7                             CALL XUR$ERRMSG(E_UNFETCH_DONE,DCB_NUM,DCBNUM(M$LO));
      476    20351    7                          END;
      477    20352    6                       ELSE
      478    20353    7                       DO;
      479    20354    7                          CALL FLI$RPT_ERR(E_UNFETCH_DENIED,DCB_NUM);
      480    20355    7                          END;
      481    20356    6                       END;                /* WHENRETURN CODE04*/
      482    20357    5                    WHENALTRETURN
      483    20358    6                    DO;
      484    20359    6                       CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);
      485    20360    6                       END;
      486    20361    5                    END;                   /* FETCH                              */
      487    20362    4                 ELSE
      488    20363    5                 DO;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:16   
      489    20364    5                    CALL FLI$RPT_ERR(E_NOT_FETCH,DCB_NUM);
      490    20365    5                    END;
      491    20366    4                 END;                      /* NOT ERR*/
      492    20367    3              CALL FLN$DISK_CLOSE_NEXT(DCB#);
      493    20368    3              END;                         /* DO WHILE '1'B                      */
      494    20369    2   DONE:
      495    20370    2           CALL FLN$DISK_CLOSE_ALL;
      496    20371    2           IF NOT ANY_FILES_FOUND
      497    20372    2           THEN CALL PRINT_ERROR;
      498    20373    2           RETURN;
      499    20374
      500    20375    2   END FLB_UNFETCH;
      501    20376        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:17   
      502    20377    1   FLB_STOW : PROC ;
      503    20378        /*F*   NAME:  FLB_STOW
      504    20379               PURPOSE:  perform STOW command which requests the specified
      505    20380                         file(s) be entered into the archive system. The
      506    20381                         files are retained on disk or deleted depending
      507    20382                         on the specification of ACTIVE or INACTIVE. The
      508    20383                         default is INACTIVE.
      509    20384        ***/
      510    20385
      511    20386    2         DISK_OPTION.DIR = '1'B;
      512    20387
      513    20388    3         DO WHILE('1'B);
      514    20389    3             IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#
      515    20390    3             THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unauthor. file access. */
      516    20391    3             CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);
      517    20392
      518    20393    3             IF F$DCB.FCD#    /* If DCB not open, a file dir. is being processed */
      519    20394    3             THEN                            /* or an error occurred on the open */
      520    20395    4             DO;
      521    20396    4                DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;
      522    20397    4                CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      523    20398
      524    20399    4                CALL M$SPRIV( SWITCH_FMSEC );
      525    20400    4                DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;
      526    20401    4                DISK_OPEN_ORDINARY.FPARAM_ = FIT_;
      527    20402    4                CALL M$OPEN( DISK_OPEN_ORDINARY )
      528    20403    4                WHENALTRETURN
      529    20404    5                DO;
      530    20405    5                END;
      531    20406    4             END;
      532    20407    3             ELSE
      533    20408    3                CALL M$SPRIV( SWITCH_FMSEC );
      534    20409
      535    20410    3             IF BREAK_COUNT > 0
      536    20411    3             THEN
      537    20412    4             DO;
      538    20413    4                 CALL FLN$DISK_CLOSE_ALL;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:18   
      539    20414    4                 GOTO COMMON_RETURN;
      540    20415    4             END;
      541    20416    3             IF ERR
      542    20417    3             THEN
      543    20418    4             DO;
      544    20419    4                 IF ERR.ERR# = %E$ADEOF OR ERR.ERR# = %E$NOKEY
      545    20420    4                 THEN;
      546    20421    4                 ELSE
      547    20422    4                     IF  ERR.ERR# = %E$FDEOF
      548    20423    4                     THEN
      549    20424    5                     DO;
      550    20425    5                         CODE14$ = FIT_.PTR$;
      551    20426    5                         CALL XSF$LOCCODP(CODE14$,14)
      552    20427    5                         WHENRETURN
      553    20428    6                         DO;
      554    20429    6                            IF CODE14.ACCESS.NOSTOW
      555    20430    6                              THEN
      556    20431    7                              DO;
      557    20432    7                                 CALL FLI$RPT_ERR(E_NOSTOW,DCB_NUM);
      558    20433    7                                 CALL FLN$DISK_CLOSE_ALL;
      559    20434    7                                 GOTO COMMON_RETURN;
      560    20435    7                               END;
      561    20436    6                         END;
      562    20437    5                        WHENALTRETURN
      563    20438    6                        DO;
      564    20439    6                            CALL FLI$RPT_ERR(E_NO_CODE14,DCB_NUM);
      565    20440    6                            CALL FLN$DISK_NXTA;
      566    20441    6                        END;
      567    20442    5                     END;
      568    20443    4                     ELSE
      569    20444    5                     DO;
      570    20445    5                         CALL FLI$RPT_ERR(ERR,DCB_NUM);
      571    20446    5                          ANY_FILES_FOUND = '1'B;
      572    20447    5                         IF ERR.ERR# = %E$FILEBUSY
      573    20448    5                            OR ERR.ERR# = %E$NOACCESS
      574    20449    5                            OR ERR.ERR# = %E$JRNLERR
      575    20450    5                            OR ERR.ERR# = %E$NOFILE
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:19   
      576    20451    5                            OR ERR.ERR# = %E$BADFIT
      577    20452    5                              THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
      578    20453    5                                   THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      579    20454    5                              ELSE
      580    20455    6                              DO;
      581    20456    6                                 CALL FLN$DISK_CLOSE_ALL;
      582    20457    6                                 GOTO COMMON_RETURN;
      583    20458    6                               END;
      584    20459    5                      END;
      585    20460    4             END; /* ERR */
      586    20461    3             ELSE
      587    20462    4             DO;  /* NOT ERR */
      588    20463    4                 ANY_FILES_FOUND = '1'B;
      589    20464    4                 IF F$DCB.DESC.QS#
      590    20465    4                 THEN
      591    20466    5                 DO;
      592    20467    5                     IF F$DCB.DESC.FETCH#
      593    20468    5                     THEN
      594    20469    5                         CALL FLI$RPT_ERR(E_FETCH_SET,DCB_NUM);
      595    20470    5                     ELSE
      596    20471    5                          CALL FLI$RPT_ERR(E_STOW_SET,DCB_NUM);
      597    20472    5                 END;
      598    20473    4                 ELSE
      599    20474    5                 DO;/*NOT QS */
      600    20475    5                     IF F$DCB.DESC.DELF# AND F$DCB.DESC.ARCHIVE#
      601    20476    5                     THEN
      602    20477    6                     DO;
      603    20478    6                         CALL FLI$RPT_ERR(E_ARCHIVE_INACTIVE,DCB_NUM);
      604    20479    6                     END;
      605    20480    5                     ELSE
      606    20481    6                     DO;/* NOT ARCHIVE INACTIVE */
      607    20482        /***
      608    20483         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      609    20484         *** set in the DCB.
      610    20485         ***/
      611    20486    6                         CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      612    20487    6                         CALL M$RPRIV( SWITCH_FMSEC );
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:20   
      613    20488    6                         DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;
      614    20489    6                         CALL M$OPEN( DISK_OPEN_ORDINARY )
      615    20490    6                         WHENALTRETURN
      616    20491    7                         DO;
      617    20492    7                         END;
      618    20493    6                         DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;
      619    20494    6                         CALL M$SPRIV( SWITCH_FMSEC );
      620    20495
      621    20496    6                         CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      622    20497    6                         CALL XSF$LOCCODP(CODE4$,04)
      623    20498    6                         WHENRETURN
      624    20499    7                         DO;
      625    20500    7                             IF (FMSEC)
      626    20501    7                                     OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      627    20502    7                                     AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      628    20503    7                                     OR (B$JIT.ACCN = F$DCB.ACCT#)
      629    20504    7                                     OR (F$DCB.AUTHFFLG.DELF#)
      630    20505    7                             THEN
      631    20506    8                             DO;
      632    20507    8                                 CALL M$OPEN( DISK_OPEN_ORDINARY );
      633    20508    8                                 IF F$DCB.DESC.ARCHIVE#
      634    20509    8                                 THEN
      635    20510    9                                 DO;
      636    20511    9                                     IF DISK_OPTION.INACTIVATE
      637    20512    9                                     THEN
      638    20513   10                                     DO;
      639    20514   10                                         DISK_CLOSE_NEXT.V.EFTOPER.ISTOW# = '1'B;
      640    20515   10                                         CALL FLI$RPT_ERR(E_ACTIVE_TO_INACTIVE,DCB_NUM)
             20515                                                  ;
      641    20516   10                                     END;
      642    20517    9                                     ELSE
      643    20518   10                                     DO;
      644    20519   10                                         CALL FLI$RPT_ERR(E_ARCHIVE_ACTIVE,DCB_NUM);
      645    20520   10                                     END;
      646    20521    9                                 END;
      647    20522    8                                 ELSE
      648    20523    9                                 DO;/* NOT ARCHIVE */
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:21   
      649    20524    9                                     DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
      650    20525    9                                     DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;
      651    20526    9                                     DISK_CLOSE_NEXT.V.DESC.QS# = '1'B;
      652    20527    9                                     DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '1'B;
      653    20528        /***
      654    20529         *** Set BUF bit (if backup permitted) so that actively archived and QS
      655    20530         *** files are always backed up so that on a packset rebuild these types of
      656    20531         *** files end up in their QS or actively archived states. Inactively archived
      657    20532         *** files get backed up not as a result of the BUF bit being set but as a
      658    20533         *** result of special checks for them when BACKUP executes.
      659    20534         ***/
      660    20535    9                                     CODE3$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      661    20536    9                                     CALL XSF$LOCCODP(CODE3$,03)
      662    20537    9                                     WHENRETURN
      663    20538   10                                     DO;
      664    20539   10                                         IF CODE03.DESC.BUPM
      665    20540   10                                         THEN DISK_CLOSE_NEXT.V.DESC.BUF# = '1'B;
      666    20541   10                                     END;
      667    20542   10                                     WHENALTRETURN DO;
      668    20543   10                                         CALL FLI$RPT_ERR(E_NO_CODE3,DCB_NUM);
      669    20544   10                                     END;
      670    20545
      671    20546    9                                     IF DISK_OPTION.INACTIVATE
      672    20547    9                                     THEN
      673    20548   10                                     DO;
      674    20549   10                                         DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;
      675    20550   10                                         CALL XUR$ERRMSG(E_STOWED_INACT_OK,DCB_NUM,
             20550                                                  DCBNUM(M$LO));
      676    20551   10                                     END;
      677    20552    9                                     ELSE
      678    20553   10                                     DO;
      679    20554   10                                         DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '1'B;
      680    20555   10                                         CALL XUR$ERRMSG(E_STOWED_ACT_OK,DCB_NUM,DCBNUM
             20555                                                  (M$LO));
      681    20556   10                                     END;
      682    20557    9                                 END;  /* Not archive */
      683    20558    8                             END; /* Acct,name,priv */
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:22   
      684    20559    7                             ELSE
      685    20560    7                             CALL FLI$RPT_ERR(E_STOW_DENIED,DCB_NUM);
      686    20561    7                         END; /* Whenreturn CODE04 */
      687    20562    6                         WHENALTRETURN
      688    20563    7                         DO;
      689    20564    7                             CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);
      690    20565    7                         END;
      691    20566    6                     END; /* NOT ARCHIVE INACTIVE */
      692    20567    5                 END; /* NOT QS */
      693    20568    4             END; /* NOT ERR */
      694    20569    3             CALL FLN$DISK_CLOSE_NEXT(DCB#);
      695    20570    3         END;/* DO WHILE '1'B */
      696    20571    2   DONE:
      697    20572    2         CALL FLN$DISK_CLOSE_ALL;
      698    20573    2         IF NOT ANY_FILES_FOUND
      699    20574    2         THEN CALL PRINT_ERROR;
      700    20575
      701    20576    2   COMMON_RETURN: ;
      702    20577    2      RETURN;
      703    20578
      704    20579    2   END FLB_STOW;
      705    20580        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:23   
      706    20581    1   FLB_UNSTOW : PROC ;
      707    20582        /*F*  NAME:  FLB_UNSTOW
      708    20583              PURPOSE:  Perform UNSTOW command which unlocks the specified
      709    20584                        file(s) previously queued for STOW. For any specified
      710    20585                        file not currently queued for STOW, an error message
      711    20586                        is issued.
      712    20587         ***/
      713    20588
      714    20589    3         DO WHILE('1'B);
      715    20590    3             IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#
      716    20591    3             THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unauthor. file access. */
      717    20592    3             CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);
      718    20593
      719    20594    3             IF F$DCB.FCD#    /* If DCB not open, a file dir. is being processed */
      720    20595    3             THEN
      721    20596    4             DO;
      722    20597    4                DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;
      723    20598    4                CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      724    20599
      725    20600    4                CALL M$SPRIV( SWITCH_FMSEC );
      726    20601    4                DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;
      727    20602    4                DISK_OPEN_ORDINARY.FPARAM_ = FIT_;
      728    20603    4                CALL M$OPEN( DISK_OPEN_ORDINARY )
      729    20604    4                WHENALTRETURN
      730    20605    5                DO;
      731    20606    5                END;
      732    20607    4             END;
      733    20608    3             ELSE
      734    20609    3                CALL M$SPRIV( SWITCH_FMSEC );
      735    20610
      736    20611    3             IF BREAK_COUNT > 0
      737    20612    3             THEN GOTO DONE;
      738    20613    3             IF ERR
      739    20614    3             THEN
      740    20615    4             DO;
      741    20616    4                 IF ERR.ERR# = %E$ADEOF
      742    20617    4                 THEN;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:24   
      743    20618    4                 ELSE
      744    20619    4                     IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF
      745    20620    4                     THEN;
      746    20621    4                     ELSE
      747    20622    5                     DO;
      748    20623    5                         CALL FLI$RPT_ERR(ERR,DCB_NUM);
      749    20624    5                          ANY_FILES_FOUND = '1'B;
      750    20625    5                         IF ERR.ERR# = %E$FILEBUSY
      751    20626    5                          OR ERR.ERR# = %E$NOACCESS
      752    20627    5                          OR ERR.ERR# = %E$JRNLERR
      753    20628    5                          OR ERR.ERR# = %E$NOFILE
      754    20629    5                          OR ERR.ERR# = %E$BADFIT
      755    20630    5                            THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
      756    20631    5                                 THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      757    20632    5                                 ELSE;
      758    20633    5                            ELSE GOTO DONE;
      759    20634    5                     END;
      760    20635    4             END;
      761    20636    3             ELSE
      762    20637    4             DO;/* NOT ERR */
      763    20638    4                ANY_FILES_FOUND = '1'B;
      764    20639    4                IF F$DCB.DESC.QS#
      765    20640    4                  THEN
      766    20641    5                  DO;
      767    20642    5                    IF F$DCB.DESC.FETCH#
      768    20643    5                      THEN
      769    20644    6                      DO;
      770    20645    6                        CALL FLI$RPT_ERR(E_FETCH_SET,DCB_NUM);
      771    20646    6                      END;
      772    20647    5                      ELSE
      773    20648    6                      DO; /* UNSTOW files */
      774    20649    6                         CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      775    20650    6                         CALL XSF$LOCCODP(CODE4$,04)
      776    20651    6                         WHENRETURN
      777    20652    7                         DO;
      778    20653        /***
      779    20654         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:25   
      780    20655         *** set in the DCB.
      781    20656         ***/
      782    20657    7                            CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      783    20658    7                            CALL M$RPRIV( SWITCH_FMSEC );
      784    20659    7                            DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;
      785    20660    7                            CALL M$OPEN( DISK_OPEN_ORDINARY )
      786    20661    7                            WHENALTRETURN
      787    20662    8                            DO;
      788    20663    8                            END;
      789    20664    7                            DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;
      790    20665    7                            CALL M$SPRIV( SWITCH_FMSEC );
      791    20666
      792    20667    7                           IF (FMSEC)
      793    20668    7                             OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      794    20669    7                             AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      795    20670    7                             OR (F$DCB.AUTHFFLG.DELF#)
      796    20671    7                              THEN
      797    20672    8                              DO;/* PRIV,ACCT,NAME */
      798    20673    8                                 CALL M$OPEN( DISK_OPEN_ORDINARY );
      799    20674    8                                 DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
      800    20675    8                                 DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;
      801    20676    8                                 DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;
      802    20677    8                                 DISK_CLOSE_NEXT.V.DESC.QS# = '0'B;
      803    20678    8                                 DISK_CLOSE_NEXT.V.DESC.FETCH# = '0'B;
      804    20679    8                                 DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '0'B;
      805    20680    8                                 CALL XUR$ERRMSG(E_UNSTOW_OK,DCB_NUM,DCBNUM(M$LO));
      806    20681    8                               END;
      807    20682    7                                ELSE
      808    20683    8                                DO;
      809    20684    8                                  CALL FLI$RPT_ERR(E_UNSTOW_DENIED,DCB_NUM);
      810    20685    8                                END;
      811    20686    7                         END; /* Whenreturn CODE04 */
      812    20687    6                         WHENALTRETURN
      813    20688    7                         DO;
      814    20689    7                           CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);
      815    20690    7                         END;
      816    20691    6                       END; /* UNSTOW files */
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:26   
      817    20692    5                  END; /* QS files */
      818    20693    4                  ELSE
      819    20694    5                  DO;
      820    20695    5                     CALL FLI$RPT_ERR(E_NOT_STOWED,DCB_NUM);
      821    20696    5                  END;
      822    20697    4             END; /* Not err */
      823    20698    3             CALL FLN$DISK_CLOSE_NEXT(DCB#);
      824    20699    3         END; /* DO WHILE '1'B */
      825    20700    2   DONE:
      826    20701    2         CALL FLN$DISK_CLOSE_ALL;
      827    20702    2         IF NOT ANY_FILES_FOUND
      828    20703    2            THEN CALL PRINT_ERROR;
      829    20704    2   RETURN;
      830    20705
      831    20706    2   END FLB_UNSTOW;
      832    20707        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:27   
      833    20708    1   FLB_UNARCHIVE : PROC ;
      834    20709        /*F*   NAME:  FLB_UNARCHIVE
      835    20710               PURPOSE: Perform UNARCHIVE command which removes the specified
      836    20711                        file(s) from the archive system.
      837    20712         ***/
      838    20713
      839    20714    3           DO WHILE('1'B);
      840    20715    3             IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#
      841    20716    3             THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unauthor. file access. */
      842    20717    3             CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);
      843    20718
      844    20719    3             IF F$DCB.FCD#    /* If DCB not open, a file dir. is being processed */
      845    20720    3             THEN
      846    20721    4             DO;
      847    20722    4                DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;
      848    20723    4                CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      849    20724
      850    20725    4                CALL M$SPRIV( SWITCH_FMSEC );
      851    20726    4                DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;
      852    20727    4                DISK_OPEN_ORDINARY.FPARAM_ = FIT_;
      853    20728    4                CALL M$OPEN( DISK_OPEN_ORDINARY )
      854    20729    4                WHENALTRETURN
      855    20730    5                DO;
      856    20731    5                END;
      857    20732    4             END;
      858    20733    3             ELSE
      859    20734    3                CALL M$SPRIV( SWITCH_FMSEC );
      860    20735
      861    20736    3              IF BREAK_COUNT > 0
      862    20737    3              THEN GOTO DONE;
      863    20738    3              IF ERR
      864    20739    3              THEN
      865    20740    4              DO;
      866    20741    4                 IF ERR.ERR# = %E$ADEOF
      867    20742    4                 THEN;
      868    20743    4                 ELSE
      869    20744    4                    IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:28   
      870    20745    4                    THEN;
      871    20746    4                    ELSE
      872    20747    5                    DO;
      873    20748    5                       CALL FLI$RPT_ERR(ERR,DCB_NUM);
      874    20749    5                       ANY_FILES_FOUND = '1'B;
      875    20750    5                       IF ERR.ERR# = %E$FILEBUSY
      876    20751    5                         OR ERR.ERR# = %E$NOACCESS
      877    20752    5                         OR ERR.ERR# = %E$JRNLERR
      878    20753    5                         OR ERR.ERR# = %E$NOFILE
      879    20754    5                         OR ERR.ERR# = %E$BADFIT
      880    20755    5                       THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR
      881    20756    5                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
      882    20757    5                            ELSE;
      883    20758    5                       ELSE GOTO DONE;
      884    20759    5                       END;
      885    20760    4                 END;
      886    20761    3              ELSE
      887    20762    4              DO;
      888    20763    4                  ANY_FILES_FOUND = '1'B;
      889    20764    4                 IF F$DCB.DESC.ARCHIVE# AND (NOT F$DCB.DESC.QS#)
      890    20765    4                 THEN
      891    20766    5                 DO;
      892    20767    5                    IF F$DCB.DESC.DELF#
      893    20768    5                    THEN
      894    20769    6                    DO;                    /* ARCHIVE INACTIVE                   */
      895    20770    6                       IF FMSEC
      896    20771    6                       THEN
      897    20772    7                       DO;
      898    20773    7                             DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '1'B;
      899    20774    7                       END;
      900    20775    6                       ELSE
      901    20776    7                       DO;
      902    20777    7                          CALL FLI$RPT_ERR(E_FETCH_FIRST,DCB_NUM);
      903    20778    7                          END;
      904    20779    6                       END;                /* ARCHIVE INACTIVE                   */
      905    20780    5                    ELSE
      906    20781    6                    DO;                    /*ARCHIVE ACTIVE                      */
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:29   
      907    20782    6                       CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      908    20783    6                       CALL XSF$LOCCODP(CODE4$,04)
      909    20784    6                       WHENRETURN
      910    20785    7                       DO;
      911    20786        /***
      912    20787         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      913    20788         *** set in the DCB.
      914    20789         ***/
      915    20790    7                          CALL M$CLOSE( DISK_CLOSE_ORDINARY );
      916    20791    7                          CALL M$RPRIV( SWITCH_FMSEC );
      917    20792    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;
      918    20793    7                          CALL M$OPEN( DISK_OPEN_ORDINARY )
      919    20794    7                          WHENALTRETURN
      920    20795    8                          DO;
      921    20796    8                          END;
      922    20797    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;
      923    20798    7                          CALL M$SPRIV( SWITCH_FMSEC );
      924    20799
      925    20800    7                          IF (B$JIT.PRIV.JOB & %PR_FMSEC#)
      926    20801    7                            OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      927    20802    7                            AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      928    20803    7                            OR (F$DCB.AUTHFFLG.DELF#)
      929    20804    7                          THEN
      930    20805    8                          DO;
      931    20806    8                             CALL M$OPEN( DISK_OPEN_ORDINARY );
      932    20807        /***
      933    20808         *** Delete stow information(CODE06) so user does not think file is still stowed.
      934    20809         *** CODE06 is deleted from the FIT by resetting NDW in CODE06's header
      935    20810         *** to 0 and resetting the CODE06 data.
      936    20811         *** NOTE: File management expects M$CLOSE's IFPARAM_ vector to frame buffer
      937    20812         *** starting at word 5(not at word 0).
      938    20813         ***/
      939    20814    8                             FIT$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));
      940    20815    8                             CODE6$ = FIT$;
      941    20816    8                             CODE = 6;
      942    20817    8                             CALL XSF$LOCCODE(CODE6$,CODE)
      943    20818    8                             WHENRETURN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:30   
      944    20819    9                             DO;
      945    20820    9                                FM$FIT.CODES.NDW(CODE) = 0;
      946    20821    9                             END;
      947    20822    8                             WHENALTRETURN
      948    20823    9                             DO;
      949    20824    9                                CALL FLI$RPT_ERR(E_NO_CODE6,DCB_NUM);
      950    20825    9                             END;
      951    20826    8                             DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
      952    20827    8                             DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;
      953    20828    8                             DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '0'B;
      954    20829    8                             DISK_CLOSE_NEXT.V.DESC.QS# = '0'B;
      955    20830    8                             DISK_CLOSE_NEXT.V.DESC.FETCH# = '0'B;
      956    20831    8                             DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;
      957    20832    8                             DISK_CLOSE_NEXT.V.DESC.TERMINATE# = '1'B;
      958    20833    8                             DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(FIT$->IFPARAM_BUF);
      959    20834    8                             CALL XUR$ERRMSG(E_UNARCHIVE_DONE,DCB_NUM,DCBNUM(M$LO));
      960    20835    8                             END;
      961    20836    7                          ELSE
      962    20837    8                          DO;
      963    20838    8                             CALL FLI$RPT_ERR(E_UNARCHIVE_DENIED,DCB_NUM);
      964    20839    8                             END;
      965    20840    7                          END;             /* WHENRETURN CODE04*/
      966    20841    6                       WHENALTRETURN
      967    20842    7                       DO;
      968    20843    7                          CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);
      969    20844    7                          END;
      970    20845    6                       END;                /* ARCHIVE ACTIVE*/
      971    20846    5                    END;                   /* ARCHIVE FILE*/
      972    20847    4                 ELSE
      973    20848    5                 DO;
      974    20849    5                    IF NOT F$DCB.DESC.ARCHIVE#              /* Is file archived? */
      975    20850    5                    THEN CALL FLI$RPT_ERR(E_NOT_ARCHIVE,DCB_NUM);
      976    20851    5                    ELSE
      977    20852    6                    DO;
      978    20853    6                       IF F$DCB.DESC.QS#
      979    20854    6                         AND NOT F$DCB.DESC.FETCH# /* Queued for archiving state? */
      980    20855    6                       THEN CALL FLI$RPT_ERR(E_NOT_ARCHIVE_UNSTOW,DCB_NUM);
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:31   
      981    20856    6                       ELSE CALL FLI$RPT_ERR(E_RETRIEVE_FIRST,DCB_NUM); /* QF state */
      982    20857    6                       END;
      983    20858    5                    END;
      984    20859    4                 END;                      /* NOT ERR*/
      985    20860    3              CALL FLN$DISK_CLOSE_NEXT(DCB#);
      986    20861    3              DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(NIL);
      987    20862    3              END;                         /* DO WHILE '1'B                      */
      988    20863    2   DONE:
      989    20864    2           CALL FLN$DISK_CLOSE_ALL;
      990    20865    2           IF NOT ANY_FILES_FOUND
      991    20866    2           THEN CALL PRINT_ERROR;
      992    20867    2   RETURN;
      993    20868
      994    20869    2   END FLB_UNARCHIVE;
      995    20870        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:32   
      996    20871    1   PRINT_ERROR : PROC ;
      997    20872        /* Determine why a file could not be found and print the error message. */
      998    20873
      999    20874    2         DISK_NAME.NAME# = DISK_FILE_SPEC.SPEC.START.FILE.NAME#(0);
     1000    20875    2         DISK_NAME.L# = DISK_FILE_SPEC.SPEC.START.FILE.L#(0);
     1001    20876    2         DISK_ACCT = DISK_FILE_SPEC.SPEC.START.ACCT(0);
     1002    20877    2         IF DISK_FILE_SPEC.PASSWORD_SPEC
     1003    20878    2         THEN
     1004    20879    3         DO;
     1005    20880    3            DISK_PASS.PASS# = DISK_FILE_SPEC.PASSWORD#;
     1006    20881    3            DISK_OPEN_NEXT.PASS_ = VECTOR(DISK_PASS);
     1007    20882    3         END;
     1008    20883    2         ELSE
     1009    20884    2            DISK_OPEN_NEXT.PASS_ = VECTOR(NIL);
     1010    20885    2         CALL M$OPEN( SPECD_FILE )                        /* Perform a test open */
     1011    20886    2         WHENRETURN
     1012    20887    3         DO;
     1013    20888    4            DO CASE ( COMMAND );
     1014    20889    4              CASE ( %UNARCHIVE );
     1015    20890    4                  CALL FLI$RPT_ERR ( E_NOT_ARCHIVE,DCBNUM(M$DISK00));
     1016    20891    4            END;
     1017    20892    3         END;
     1018    20893    2         WHENALTRETURN
     1019    20894    3         DO;
     1020    20895    3            CALL FLI$RPT_ERR ( ,DCBNUM(M$DISK00)); /* File probably doesn' exist */
     1021    20896    3         END;
     1022    20897    2         RETURN;
     1023    20898    2   END PRINT_ERROR;
     1024    20899    1   END FLS$STOW_FETCH;
     1025    20900        %EOD;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:33   
--  Include file information  --

   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLS$STOW_FETCH.

   Procedure FLS$STOW_FETCH requires 1358 words for executable code.
   Procedure FLS$STOW_FETCH requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:34   

 Object Unit name= FLS$STOW_FETCH                             File name= FLS$STOW_FETCH.:E05TOU
 UTS= JUL 29 '97 16:23:58.80 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none   248    370  FLS$STOW_FETCH
    3   DCB   even  none     0      0  M$DISK_IN
    4   DCB   even  none     0      0  M$DISK00
    5   DCB   even  none     0      0  M$DISK01
    6   DCB   even  none     0      0  M$DISK02
    7   DCB   even  none     0      0  M$DISK03
    8   DCB   even  none     0      0  M$LO
    9  RoData even  UTS      1      1  FLS$STOW_FETCH
   10   Proc  even  none  1358   2516  FLS$STOW_FETCH
   11  RoData even  none    88    130  FLS$STOW_FETCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes            yes      Std        1  FLS$STOW_FETCH
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:35   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       9 FLP$WR_FILE_INFO
         yes           Std       0 FLN$DISK_IO_INIT
         yes           Std       5 FLI$RPT_ERR
 yes     yes           Std       5 FLN$DISK_OPEN_NEXT
 yes     yes           Std       3 FLI$NUMFREEGRANS
         yes           Std       0 FLN$DISK_CLOSE_ALL
 yes     yes           Std       2 XSF$LOCCODP
         yes           Std       1 FLN$DISK_CLOSE_NEXT
 yes     yes           Std       7 XUR$ERRMSG
         yes           Std       0 FLN$DISK_NXTA
 yes     yes           Std       2 XSF$LOCCODE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:36   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         FPT_EXIT
     SNVECLIST$                            B$JIT$                                FMSEC
     DPLIST$                               DPRESLIST$                            DISK_FILE_SPEC$
     SPECCHARS                             DISK_OPTION                           DISK_DESC_SAVE
     EFTWORD                               M$PRE_RET                             RET_CMDS_NAME
     M$DISK_IN                             M$DISK00                              M$DISK01
     M$DISK02                              M$DISK03                              DISK_NAME
     FROM_DISK_NAME                        DISK_ACCT                             FROM_DISK_ACCT
     DISK_SN                               FROM_DISK_SN                          DISK_PASS
     DISK_OPEN_NEXT                        DISK_OPEN_ORDINARY                    DISK_CLOSE_NEXT
     DISK_CLOSE_ORDINARY              r    E_FETCH_SET                      r    E_STOW_SET
r    E_NO_CODE14                      r    E_NOSTOW                         r    E_NO_CODE6
r    E_NOT_STOWED                     r    E_STOW_DENIED                    r    E_UNSTOW_DENIED
r    E_STOWED_ACT_OK                  r    E_STOWED_INACT_OK                r    E_UNSTOW_OK
r    E_ARCHIVE_ACTIVE                 r    E_ACTIVE_TO_INACTIVE             r    E_ARCHIVE_INACTIVE
r    E_NOT_ARCHIVE                    r    E_FETCH_FIRST                    r    E_UNARCHIVE_DENIED
r    E_UNARCHIVE_DONE                 r    E_NO_CODE4                       r    E_UNFETCH_DENIED
r    E_NOT_FETCH                      r    E_UNFETCH_DONE                   r    E_FETCH_DENIED
r    E_FETCH_DONE                     r    E_NO_CODE3                       r    E_ACTIVE_FETCH_DENIED
r    E_CANT_FETCH                     r    E_RETRIEVE_FIRST                 r    E_NOT_ARCHIVE_UNSTOW
     M$LO                                  BREAK_COUNT                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:37   


        1        1        /*M* FLS$STOW_FETCH performs archiving from the user's  viewpoint */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*  NAME: FLS$STOW_FETCH
        8        8              PURPOSE: Process FETCH, UNFETCH, STOW, UNSTOW, UNARCHIVE
        9        9                       commands.
       10       10        ***/
       11       11        FLS$STOW_FETCH : PROC (COMMAND);

     11 10 000000   000000 700200 xent  FLS$STOW_FE* TSX0  ! X66_AUTO_1
        10 000001   000016 000001                    ZERO    14,1

       12       12        /***/
       13       13        /** Includes **/
       14       14        /***/
       15       15        %INCLUDE CP_6;
       16     5574        %INCLUDE CP_6_SUBS;
       17     6114        %INCLUDE B_ERRORS_C;
       18     7241        %INCLUDE XU_MACRO_C;
       19    10347        %INCLUDE XU_SUBS_C;
       20    10439        %INCLUDE FLI_DATA_R;
       21    11853        %INCLUDE FLN_DATA_R;
       22    12590        %INCLUDE FM$GRAN;
       23    12659        %INCLUDE FM$FIT;
       24    12880        %INCLUDE B$JIT;
       25    13483        %INCLUDE FLE_DATA_R;
       26    19434        %INCLUDE XUR_ENTRY;
       27    19466        /***/
       28    19467        /** External procedures  **/
       29    19468        /***/
       30    19469    1   DCL FLN$DISK_IO_INIT ENTRY;
       31    19470    1   DCL FLP$WR_FILE_INFO ENTRY(9) ALTRET;
       32    19471    1   DCL FLN$DISK_OPEN_NEXT ENTRY(5) ALTRET;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:38   
       33    19472    1   DCL FLN$DISK_CLOSE_NEXT ENTRY(1);
       34    19473    1   DCL FLI$RPT_ERR ENTRY(5);
       35    19474    1   DCL FLN$DISK_CLOSE_ALL ENTRY;
       36    19475    1   DCL XSF$LOCCODP ENTRY (2) ALTRET;
       37    19476    1   DCL XSF$LOCCODE ENTRY(2) ALTRET;
       38    19477    1   DCL FLN$DISK_NXTA ENTRY;
       39    19478    1   DCL FLI$NUMFREEGRANS ENTRY(3) ALTRET;
       40    19479
       41    19480        /***
       42    19481         *** DCB
       43    19482         ***/
       44    19483
       45    19484    1   DCL M$LO DCB;
       46    19485
       47    19486        %FM$GRAN;
       48    19490        %F$DCB (STCLASS = "BASED(DCB$)");
       49    19547        %CODE04(BASED="BASED(CODE4$)");
       50    19555        %CODE03(BASED="BASED(CODE3$)");
       51    19562        %CODE06(BASED="BASED(CODE6$)");
       52    19566        %CODE14(BASED = "BASED(CODE14$)");
       53    19576    1   DCL IFPARAM_BUF(0:1018) UBIN WORD BASED;
       54    19577        %FM$FIT(BASED="BASED(FIT$)");
       55    19580        %VLP_VECTOR (FPTN=FIT_,
       56    19581                     STCLASS = STATIC);
       57    19596
       58    19597        %VLP_ERRCODE (FPTN = ERR,
       59    19598                      STCLASS = STATIC ) ;
       60    19643
       61    19644        %FPT_OPEN(FPTN = FAKE_FILE,
       62    19645                  ASN = FILE,
       63    19646                  TEST = NO,
       64    19647                  CTG = YES,
       65    19648                 SCRUB = YES,
       66    19649                  ORG = KEYED,
       67    19650                 SN = VLP_SN,
       68    19651                 ACCT = VLP_ACCT,
       69    19652                 NAME = VLP_NAME,
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:39   
       70    19653                  STCLASS = STATIC);
       71    19762
       72    19763        %FPT_OPEN(FPTN = SPECD_FILE,
       73    19764                  DCB = M$DISK00,
       74    19765                  TEST = YES,
       75    19766                  ASN = FILE,
       76    19767                  ACS = BLOCK,
       77    19768                  FUN = IN,
       78    19769                  RES = 'DP',
       79    19770                  SN = DISK_SN,
       80    19771                  NAME = DISK_NAME,
       81    19772                  ACCT = DISK_ACCT,
       82    19773                  STCLASS = STATIC);
       83    19882
       84    19883        %FPT_PRIV( FPTN=SWITCH_FMSEC,
       85    19884                   PRIV=%PR_FMSEC# );
       86    19899
       87    19900        %VLP_SN(STCLASS = STATIC,
       88    19901                N = 1,
       89    19902                SN = ' ');
       90    19915
       91    19916        %VLP_ACCT(STCLASS=STATIC);
       92    19929
       93    19930        %VLP_NAME(LEN=31,STCLASS=STATIC);
       94    19957
       95    19958        %VLP_SN(FPTN=REEL_SN,
       96    19959                N=1,
       97    19960                SN=' ',
       98    19961                STCLASS=STATIC );
       99    19974
      100    19975    1   DCL BLANK6 CHAR(0) STATIC INIT('      ');
      101    19976    1   DCL DCB# UBIN STATIC;
      102    19977    1   DCL DCB_NUM UBIN STATIC;
      103    19978    1   DCL DCB$ PTR STATIC;
      104    19979    1   DCL CODE4$ PTR STATIC;
      105    19980    1   DCL CODE3$ PTR STATIC;
      106    19981    1   DCL CODE6$ PTR STATIC;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:40   
      107    19982    1   DCL FIT$ PTR STATIC;
      108    19983    1   DCL BREAK_COUNT SBIN SYMREF;
      109    19984    1   DCL ANY_FILES_FOUND BIT(1) STATIC ;
      110    19985    1   DCL COMMAND UBIN ;
      111    19986    1   DCL CODE UBIN;
      112    19987    1   DCL FREE_GRANS SBIN STATIC;
      113    19988    1   DCL CODE14$ PTR STATIC;
      114    19989         %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:41   
      115    19990        /***
      116    19991         ***  Calling all routines for archiving from user's viewpoint.
      117    19992         ***/
      118    19993
      119    19994    1          CALL FLP$WR_FILE_INFO;

  19994 10 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000003   000000 701000 xent               TSX1    FLP$WR_FILE_INFO
        10 000004   000000 011000                    NOP     0

      120    19995    1          DISK_OPEN_NEXT.V.OPER.TEST# = %NO#;

  19995 10 000005   000000 236000 11                 LDQ     0
        10 000006   000044 356000 xsym               ANSQ    DISK_OPEN_NEXT+36

      121    19996    1          CALL FLN$DISK_IO_INIT;

  19996 10 000007   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000010   000000 701000 xent               TSX1    FLN$DISK_IO_INIT
        10 000011   000000 011000                    NOP     0

      122    19997    1          ANY_FILES_FOUND = '0'B;

  19997 10 000012   000365 450000 2                  STZ     ANY_FILES_FOUND

      123    19998    1          CALL M$SPRIV ( SWITCH_FMSEC )

  19998 10 000013   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000014   420012 713400                    CLIMB   alt,+8202
        10 000015   400000 401760                    pmme    nvectors=1
        10 000016   000020 702000 10                 TSX2    s:20000
        10 000017   000024 710000 10                 TRA     s:20004

      124    19999    2               WHENALTRETURN DO;

      125    20000    2                   CALL FLI$RPT_ERR;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:42   
  20000 10 000020   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000021   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000022   000000 011000                    NOP     0

      126    20001    2                   RETURN;

  20001 10 000023   000000 702200 xent               TSX2  ! X66_ARET

      127    20002    2                 END;
      128    20003
      129    20004    2          DO CASE ( COMMAND ) ;

  20004 10 000024   200003 470500                    LDP0    @COMMAND,,AUTO
        10 000025   000000 235100                    LDA     0,,PR0
        10 000026   000021 135007                    SBLA    17,DL
        10 000027   000006 115007                    CMPA    6,DL
        10 000030   000032 602005 10                 TNC     s:20004+6,AL
        10 000031   000056 710000 10                 TRA     s:20017
        10 000032   000040 710000 10                 TRA     s:20006
        10 000033   000040 710000 10                 TRA     s:20006
        10 000034   000043 710000 10                 TRA     s:20008
        10 000035   000046 710000 10                 TRA     s:20010
        10 000036   000051 710000 10                 TRA     s:20012
        10 000037   000054 710000 10                 TRA     s:20014

      130    20005    2            CASE ( %STOW_ACTIVE, %STOW_INACTIVE ) ;

      131    20006    2                CALL FLB_STOW ;

  20006 10 000040   001116 701000 10                 TSX1    FLB_STOW
        10 000041   000000 011000                    NOP     0
        10 000042   000056 710000 10                 TRA     s:20017

      132    20007    2            CASE ( %UNSTOW ) ;

      133    20008    2                CALL FLB_UNSTOW ;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:43   
  20008 10 000043   001555 701000 10                 TSX1    FLB_UNSTOW
        10 000044   000000 011000                    NOP     0
        10 000045   000056 710000 10                 TRA     s:20017

      134    20009    2            CASE ( %FETCH ) ;

      135    20010    2                CALL FLB_FETCH ;

  20010 10 000046   000072 701000 10                 TSX1    FLB_FETCH
        10 000047   000000 011000                    NOP     0
        10 000050   000056 710000 10                 TRA     s:20017

      136    20011    2            CASE ( %UNFETCH ) ;

      137    20012    2                 CALL FLB_UNFETCH ;

  20012 10 000051   000617 701000 10                 TSX1    FLB_UNFETCH
        10 000052   000000 011000                    NOP     0
        10 000053   000056 710000 10                 TRA     s:20017

      138    20013    2            CASE ( %UNARCHIVE ) ;

      139    20014    2                 CALL FLB_UNARCHIVE ;

  20014 10 000054   002047 701000 10                 TSX1    FLB_UNARCHIVE
        10 000055   000000 011000                    NOP     0

      140    20015
      141    20016    2          END;

      142    20017    1          DISK_OPEN_ORDINARY.FPARAM_ = VECTOR(NIL);

  20017 10 000056   000002 237000 11                 LDAQ    2
        10 000057   000030 757000 xsym               STAQ    DISK_OPEN_ORDINARY+24

      143    20018    1          IF NOT FMSEC AND NOT B$JIT.PPRIV & %PPR_EFT#

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:44   
  20018 10 000060   000000 234000 xsym               SZN     FMSEC
        10 000061   000071 604000 10                 TMI     s:20020
        10 000062   000000 470400 xsym               LDP0    B$JIT$
        10 000063   000020 236100                    LDQ     16,,PR0
        10 000064   000000 376000 9                  ANQ     0
        10 000065   000071 601000 10                 TNZ     s:20020

      144    20019    1          THEN CALL M$RPRIV ( SWITCH_FMSEC );

  20019 10 000066   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000067   020013 713400                    CLIMB   8203
        10 000070   400000 401760                    pmme    nvectors=1

      145    20020    1   RETURN;

  20020 10 000071   000000 702200 xent               TSX2  ! X66_ARET

      146    20021        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:45   
      147    20022    1   FLB_FETCH : PROC ;

  20022 10 000072   200006 741300       FLB_FETCH    STX1  ! CODE+2,,AUTO

      148    20023        /*F*   NAME: FLB_FETCH
      149    20024               PURPOSE : Perform FETCH command which requests the return to
      150    20025                         disk of the file (s) in the archive system.
      151    20026        ***/
      152    20027
      153    20028
      154    20029    3           DO WHILE('1'B);

      155    20030    3              IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#

  20030 10 000073   000000 234000 xsym               SZN     FMSEC
        10 000074   000101 605000 10                 TPL     s:20031
        10 000075   000000 470400 xsym               LDP0    B$JIT$
        10 000076   000020 236100                    LDQ     16,,PR0
        10 000077   000000 376000 9                  ANQ     0
        10 000100   000104 601000 10                 TNZ     s:20032

      156    20031    3              THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unathor. file access. */

  20031 10 000101   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000102   020013 713400                    CLIMB   8203
        10 000103   400000 401760                    pmme    nvectors=1

      157    20032    3              CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);

  20032 10 000104   000004 630400 11                 EPPR0   4
        10 000105   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 000106   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
        10 000107   000606 702000 10                 TSX2    DONE

      158    20033
      159    20034    3              IF F$DCB.FCD#   /* If DCB not open, a file dir. is being processed */

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:46   
  20034 10 000110   000360 470400 2                  LDP0    DCB$
        10 000111   000031 236100                    LDQ     25,,PR0
        10 000112   020000 316007                    CANQ    8192,DL
        10 000113   000136 600000 10                 TZE     s:20049

      160    20035    3              THEN
      161    20036    4              DO;

      162    20037    4                 DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;

  20037 10 000114   000357 720000 2                  LXL0    DCB_NUM
        10 000115   000032 740000 xsym               STX0    DISK_CLOSE_ORDINARY+26

      163    20038    4                 CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20038 10 000116   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 000117   050001 713400                    CLIMB   close
        10 000120   406000 401760                    pmme    nvectors=13

      164    20039
      165    20040    4                 CALL M$SPRIV( SWITCH_FMSEC );

  20040 10 000121   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000122   020012 713400                    CLIMB   8202
        10 000123   400000 401760                    pmme    nvectors=1

      166    20041    4                 DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;

  20041 10 000124   000357 720000 2                  LXL0    DCB_NUM
        10 000125   000044 740000 xsym               STX0    DISK_OPEN_ORDINARY+36

      167    20042    4                 DISK_OPEN_ORDINARY.FPARAM_ = FIT_;

  20042 10 000126   000136 237000 2                  LDAQ    FIT_
        10 000127   000030 757000 xsym               STAQ    DISK_OPEN_ORDINARY+24

      168    20043    4                 CALL M$OPEN( DISK_OPEN_ORDINARY )
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:47   

  20043 10 000130   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 000131   450000 713400                    CLIMB   alt,open
        10 000132   410400 401760                    pmme    nvectors=18
        10 000133   000135 702000 10                 TSX2    s:20047
        10 000134   000135 710000 10                 TRA     s:20047

      169    20044    4                 WHENALTRETURN
      170    20045    5                 DO;

      171    20046    5                 END;

      172    20047    4              END;

  20047 10 000135   000141 710000 10                 TRA     s:20051

      173    20048    3              ELSE
      174    20049    3                 CALL M$SPRIV( SWITCH_FMSEC );

  20049 10 000136   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000137   020012 713400                    CLIMB   8202
        10 000140   400000 401760                    pmme    nvectors=1

      175    20050
      176    20051    3              IF BREAK_COUNT > 0

  20051 10 000141   000000 235000 xsym               LDA     BREAK_COUNT
        10 000142   000150 604400 10                 TMOZ    s:20057

      177    20052    3              THEN
      178    20053    4              DO;

      179    20054    4                 CALL FLN$DISK_CLOSE_ALL;

  20054 10 000143   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000144   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 000145   000000 011000                    NOP     0
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:48   

      180    20055    4                 RETURN;

  20055 10 000146   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 000147   000001 702211                    TSX2  ! 1,X1

      181    20056    4              END;
      182    20057    3              IF ERR

  20057 10 000150   000140 236000 2                  LDQ     ERR
        10 000151   000221 600000 10                 TZE     FILE_FOUND

      183    20058    3              THEN
      184    20059    4              DO;

      185    20060    4                 IF ERR.ERR# = %E$ADEOF

  20060 10 000152   000140 236000 2                  LDQ     ERR
        10 000153   377770 376007                    ANQ     131064,DL
        10 000154   001750 116007                    CMPQ    1000,DL
        10 000155   000601 600000 10                 TZE     s:20243

      186    20061    4                 THEN;
      187    20062    4                 ELSE
      188    20063    4                    IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF

  20063 10 000156   001020 116007                    CMPQ    528,DL
        10 000157   000601 600000 10                 TZE     s:20243
        10 000160   001540 116007                    CMPQ    864,DL
        10 000161   000601 600000 10                 TZE     s:20243

      189    20064    4                    THEN;
      190    20065    4                    ELSE
      191    20066    5                    DO;

      192    20067    5                        ANY_FILES_FOUND = '1'B;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:49   
  20067 10 000162   400000 236003                    LDQ     -131072,DU
        10 000163   000365 756000 2                  STQ     ANY_FILES_FOUND

      193    20068    5                       CALL FLI$RPT_ERR(ERR,DCB_NUM);

  20068 10 000164   000011 630400 11                 EPPR0   9
        10 000165   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000166   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000167   000000 011000                    NOP     0

      194    20069    5                       IF ERR.ERR# = %E$FILEBUSY

  20069 10 000170   000140 236000 2                  LDQ     ERR
        10 000171   377770 376007                    ANQ     131064,DL
        10 000172   001550 116007                    CMPQ    872,DL
        10 000173   000206 600000 10                 TZE     s:20075
        10 000174   001640 116007                    CMPQ    928,DL
        10 000175   000206 600000 10                 TZE     s:20075
        10 000176   001710 116007                    CMPQ    968,DL
        10 000177   000206 600000 10                 TZE     s:20075
        10 000200   001610 116007                    CMPQ    904,DL
        10 000201   000206 600000 10                 TZE     s:20075
        10 000202   002570 116007                    CMPQ    1400,DL
        10 000203   000206 600000 10                 TZE     s:20075
        10 000204   000100 116007                    CMPQ    64,DL
        10 000205   000214 601000 10                 TNZ     s:20080

      195    20070    5                         OR ERR.ERR# = %E$NOACCESS
      196    20071    5                         OR ERR.ERR# = %E$JRNLERR
      197    20072    5                         OR ERR.ERR# = %E$NOFILE
      198    20073    5                         OR ERR.ERR# = %E$BADFIT
      199    20074    5                         OR ERR.ERR# = %E$IOERR
      200    20075    5                       THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20075 10 000206   000004 236000 xsym               LDQ     FPT_EXIT+4
        10 000207   777000 316003                    CANQ    -512,DU
        10 000210   000601 601000 10                 TNZ     s:20243
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:50   

      201    20076    5                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20076 10 000211   001000 236003                    LDQ     512,DU
        10 000212   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O
        10 000213   000601 710000 10                 TRA     s:20243

      202    20077    5                            ELSE ;
      203    20078    5                       ELSE
      204    20079    6                       DO;

      205    20080    6                          CALL FLN$DISK_CLOSE_ALL;

  20080 10 000214   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000215   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 000216   000000 011000                    NOP     0

      206    20081    6                          RETURN;

  20081 10 000217   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 000220   000001 702211                    TSX2  ! 1,X1

      207    20082    6                       END;
      208    20083    5                    END;
      209    20084    4              END;
      210    20085    3              ELSE
      211    20086    3   FILE_FOUND:
      212    20087    4              DO;

  20087 10 000221                       FILE_FOUND   null
      213    20088    4                 ANY_FILES_FOUND = '1'B;

  20088 10 000221   400000 236003                    LDQ     -131072,DU
        10 000222   000365 756000 2                  STQ     ANY_FILES_FOUND

      214    20089    4                 IF F$DCB.DESC.FETCH#

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:51   
  20089 10 000223   000360 470400 2                  LDP0    DCB$
        10 000224   000005 236100                    LDQ     5,,PR0
        10 000225   000010 316007                    CANQ    8,DL
        10 000226   000234 600000 10                 TZE     s:20096

      215    20090    4                 THEN
      216    20091    5                 DO;

      217    20092    5                    CALL FLI$RPT_ERR(E_FETCH_SET,DCB_NUM);

  20092 10 000227   000013 630400 11                 EPPR0   11
        10 000230   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000231   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000232   000000 011000                    NOP     0

      218    20093    5                 END;

  20093 10 000233   000601 710000 10                 TRA     s:20243

      219    20094    4                 ELSE
      220    20095    5                 DO;

      221    20096    5                    IF F$DCB.DESC.ARCHIVE# AND (NOT F$DCB.DESC.QS#)

  20096 10 000234   001000 316007                    CANQ    512,DL
        10 000235   000575 600000 10                 TZE     s:20239
        10 000236   010000 316007                    CANQ    4096,DL
        10 000237   000575 601000 10                 TNZ     s:20239

      222    20097    5                    THEN
      223    20098    6                    DO;

      224    20099    6                       IF F$DCB.DESC.DELF#

  20099 10 000240   400000 316007                    CANQ    -131072,DL
        10 000241   000570 600000 10                 TZE     s:20234

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:52   
      225    20100    6                       THEN
      226    20101    7                       DO; /* ARCHIVE INACTIVE */

      227    20102        /***
      228    20103         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      229    20104         *** set in the DCB.
      230    20105         ***/
      231    20106    7                          CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20106 10 000242   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 000243   050001 713400                    CLIMB   close
        10 000244   406000 401760                    pmme    nvectors=13

      232    20107    7                          CALL M$RPRIV( SWITCH_FMSEC );

  20107 10 000245   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000246   020013 713400                    CLIMB   8203
        10 000247   400000 401760                    pmme    nvectors=1

      233    20108    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;

  20108 10 000250   020000 236007                    LDQ     8192,DL
        10 000251   000044 256000 xsym               ORSQ    DISK_OPEN_ORDINARY+36

      234    20109    7                          CALL M$OPEN( DISK_OPEN_ORDINARY )

  20109 10 000252   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 000253   450000 713400                    CLIMB   alt,open
        10 000254   410400 401760                    pmme    nvectors=18
        10 000255   000257 702000 10                 TSX2    s:20113
        10 000256   000257 710000 10                 TRA     s:20113

      235    20110    7                          WHENALTRETURN
      236    20111    8                          DO;

      237    20112    8                          END;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:53   
      238    20113    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;

  20113 10 000257   000000 236000 11                 LDQ     0
        10 000260   000044 356000 xsym               ANSQ    DISK_OPEN_ORDINARY+36

      239    20114    7                          CALL M$SPRIV( SWITCH_FMSEC );

  20114 10 000261   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000262   020012 713400                    CLIMB   8202
        10 000263   400000 401760                    pmme    nvectors=1

      240    20115
      241    20116    7                          IF (FMSEC)

  20116 10 000264   000000 234000 xsym               SZN     FMSEC
        10 000265   000274 604000 10                 TMI     s:20126
        10 000266   000360 470400 2                  LDP0    DCB$
        10 000267   000057 236100                    LDQ     47,,PR0
        10 000270   020000 316007                    CANQ    8192,DL
        10 000271   000274 601000 10                 TNZ     s:20126
        10 000272   001000 316007                    CANQ    512,DL
        10 000273   000563 600000 10                 TZE     s:20229

      242    20117    7                           OR (F$DCB.AUTHFFLG.DELF#) /* Allow if accnt. wr. access. */
      243    20118    7                            OR (F$DCB.AUTHFFLG.CREATE#) /* Allow if accnt. cr. acc. */
      244    20119    7                          THEN
      245    20120    8                          DO;

      246    20121        /***
      247    20122         *** Determine that we have sufficient packset space for creating a file before
      248    20123         *** deleting the file directory entry. This prevents the possibility of
      249    20124         *** losing all traces of the file and preventing its subsequent retrieval.
      250    20125         ***/
      251    20126    8                            CALL FLI$NUMFREEGRANS(ADDR(DISK_SN),FREE_GRANS,ERR)

  20126 10 000274   000001 236000 11                 LDQ     1
        10 000275   200012 756100                    STQ     CODE+6,,AUTO
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:54   
        10 000276   000016 237000 11                 LDAQ    14
        10 000277   200014 757100                    STAQ    CODE+8,,AUTO
        10 000300   200012 630500                    EPPR0   CODE+6,,AUTO
        10 000301   200013 450500                    STP0    CODE+7,,AUTO
        10 000302   200013 630500                    EPPR0   CODE+7,,AUTO
        10 000303   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 000304   000000 701000 xent               TSX1    FLI$NUMFREEGRANS
        10 000305   000307 702000 10                 TSX2    s:20129
        10 000306   000321 710000 10                 TRA     s:20134

      252    20127    8                            WHENALTRETURN
      253    20128    9                            DO;

      254    20129    9                              CALL FLI$RPT_ERR (ERR,DCB_NUM);

  20129 10 000307   000011 630400 11                 EPPR0   9
        10 000310   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000311   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000312   000000 011000                    NOP     0

      255    20130    9                              IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20130 10 000313   000004 236000 xsym               LDQ     FPT_EXIT+4
        10 000314   777000 316003                    CANQ    -512,DU
        10 000315   000320 601000 10                 TNZ     s:20132

      256    20131    9                              THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20131 10 000316   001000 236003                    LDQ     512,DU
        10 000317   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O

      257    20132    9                              EXIT FILE_FOUND;

  20132 10 000320   000601 710000 10                 TRA     s:20243

      258    20133    9                            END;
      259    20134    8                            IF FREE_GRANS < 5
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:55   

  20134 10 000321   000366 235000 2                  LDA     FREE_GRANS
        10 000322   000005 115007                    CMPA    5,DL
        10 000323   000331 605000 10                 TPL     s:20140

      260    20135    8                            THEN
      261    20136    9                            DO;

      262    20137    9                              CALL FLI$RPT_ERR (E_CANT_FETCH,DCB_NUM);

  20137 10 000324   000020 630400 11                 EPPR0   16
        10 000325   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000326   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000327   000000 011000                    NOP     0

      263    20138    9                              EXIT FILE_FOUND;

  20138 10 000330   000601 710000 10                 TRA     s:20243

      264    20139    9                            END;
      265    20140    8                            CALL M$OPEN( DISK_OPEN_ORDINARY );

  20140 10 000331   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 000332   050000 713400                    CLIMB   open
        10 000333   410400 401760                    pmme    nvectors=18

      266    20141    8                            CODE6$ = FIT_.PTR$;

  20141 10 000334   000137 236000 2                  LDQ     FIT_+1
        10 000335   000363 756000 2                  STQ     CODE6$

      267    20142    8                            CALL XSF$LOCCODP(CODE6$,06)

  20142 10 000336   000022 630400 11                 EPPR0   18
        10 000337   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000340   000000 701000 xent               TSX1    XSF$LOCCODP
        10 000341   000556 702000 10                 TSX2    s:20224
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:56   

      268    20143    8                            WHENRETURN
      269    20144    9                            DO;

      270    20145    9                              EFTWORD = CODE06.STOW.EFT;

  20145 10 000342   000363 470400 2                  LDP0    CODE6$
        10 000343   000002 720100                    LXL0    2,,PR0
        10 000344   000000 740000 xsym               STX0    EFTWORD

      271    20146    9                              REEL_SN.SN#(0) = CODE06.STOW.REEL;

  20146 10 000345   040000 100500                    MLR     fill='040'O
        10 000346   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        10 000347   000351 000006 2                  ADSC9   REEL_SN+1                cn=0,n=6

      272    20147    9                              DISK_DESC_SAVE = F$DCB.DESC;

  20147 10 000350   000360 471400 2                  LDP1    DCB$
        10 000351   100005 721100                    LXL1    5,,PR1
        10 000352   000000 741000 xsym               STX1    DISK_DESC_SAVE

      273    20148    9                              DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '1'B;

  20148 10 000353   002000 236007                    LDQ     1024,DL
        10 000354   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      274    20149    9                              DISK_CLOSE_NEXT.V.DCB# = DCB_NUM;

  20149 10 000355   000357 722000 2                  LXL2    DCB_NUM
        10 000356   000032 742000 xsym               STX2    DISK_CLOSE_NEXT+26

      275    20150    9                              CALL M$CLOSE(DISK_CLOSE_NEXT)

  20150 10 000357   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        10 000360   450001 713400                    CLIMB   alt,close
        10 000361   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:57   
        10 000362   000552 702000 10                 TSX2    s:20219

      276    20151    9                              WHENRETURN
      277    20152   10                              DO;

      278    20153        /***
      279    20154         ***  Create fake file so that descriptor bits can be set in the fit.
      280    20155         ***/
      281    20156   10                                 FAKE_FILE.V.FUN# = %CREATE#;

  20156 10 000363   003000 236007                    LDQ     1536,DL
        10 000364   000207 552010 2                  STBQ    FAKE_FILE+37,'10'O

      282    20157   10                                 FAKE_FILE.V.ACS# = %SEQUEN#;

  20157 10 000365   000001 236007                    LDQ     1,DL
        10 000366   000210 552004 2                  STBQ    FAKE_FILE+38,'04'O

      283    20158   10                                 FAKE_FILE.V.DCB# = DCB_NUM;

  20158 10 000367   000357 720000 2                  LXL0    DCB_NUM
        10 000370   000206 740000 2                  STX0    FAKE_FILE+36

      284    20159   10                                 FAKE_FILE.V.EXPIRE# = -1;

  20159 10 000371   000001 335007                    LCA     1,DL
        10 000372   000221 755000 2                  STA     FAKE_FILE+47

      285    20160   10                                 FAKE_FILE.FPARAM_ = VECTOR(NIL);

  20160 10 000373   000002 237000 11                 LDAQ    2
        10 000374   000172 757000 2                  STAQ    FAKE_FILE+24

      286    20161   10                                 VLP_SN.SN#(0) = F$DCB.PSN#;

  20161 10 000375   000360 470400 2                  LDP0    DCB$
        10 000376   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:58   
        10 000377   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        10 000400   000333 000006 2                  ADSC9   VLP_SN+1                 cn=0,n=6

      287    20162   10                                 VLP_ACCT.ACCT# = F$DCB.ACCT#;

  20162 10 000401   000020 237100                    LDAQ    16,,PR0
        10 000402   000336 757000 2                  STAQ    VLP_ACCT

      288    20163   10                                 VLP_NAME = F$DCB.NAME#;

  20163 10 000403   000000 100500                    MLR     fill='000'O
        10 000404   000010 000040                    ADSC9   8,,PR0                   cn=0,n=32
        10 000405   000340 000040 2                  ADSC9   VLP_NAME                 cn=0,n=32

      289    20164   10                                 CALL M$OPEN(FAKE_FILE)

  20164 10 000406   000142 630400 2                  EPPR0   FAKE_FILE
        10 000407   450000 713400                    CLIMB   alt,open
        10 000410   410400 401760                    pmme    nvectors=18
        10 000411   000546 702000 10                 TSX2    s:20214

      290    20165   10                                 WHENRETURN
      291    20166   11                                 DO;

      292    20167   11                                    DISK_CLOSE_NEXT.V.EFTOPER = '0'B;

  20167 10 000412   000024 236000 11                 LDQ     20
        10 000413   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

      293    20168   11                                    DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  20168 10 000414   004000 236007                    LDQ     2048,DL
        10 000415   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      294    20169   11                                    DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;

  20169 10 000416   000360 470400 2                  LDP0    DCB$
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:59   
        10 000417   000005 720100                    LXL0    5,,PR0
        10 000420   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

      295    20170   11                                    DISK_CLOSE_NEXT.V.DESC.QS# = '1'B;

  20170 10 000421   010000 236003                    LDQ     4096,DU
        10 000422   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      296    20171   11                                    DISK_CLOSE_NEXT.V.DESC.FETCH# = '1'B;

  20171 10 000423   000010 236003                    LDQ     8,DU
        10 000424   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      297    20172   11                                    DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '1'B;

  20172 10 000425   001000 236003                    LDQ     512,DU
        10 000426   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      298    20173   11                                    DISK_CLOSE_NEXT.V.DESC.DELF# = '0'B;

  20173 10 000427   000031 236000 xsym               LDQ     B_VECTNIL+25
        10 000430   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      299    20174   11                                    DISK_CLOSE_NEXT.V.DESC.ACTIVE# = FMSEC;

  20174 10 000431   000000 236000 xsym               LDQ     FMSEC
        10 000432   000013 772000                    QRL     11
        10 000433   000033 676000 xsym               ERQ     DISK_CLOSE_NEXT+27
        10 000434   000100 376003                    ANQ     64,DU
        10 000435   000033 656000 xsym               ERSQ    DISK_CLOSE_NEXT+27

      300    20175   11                                    DISK_CLOSE_NEXT.V.EXPIRE# = EFTWORDEXPIRE;

  20175 10 000436   000000 220000 xsym               LDX0    EFTWORD
        10 000437   000034 440000 xsym               SXL0    DISK_CLOSE_NEXT+28

      301    20176   11                                    DISK_CLOSE_NEXT.SN_ = VECTOR(REEL_SN);
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:60   

  20176 10 000440   000026 237000 11                 LDAQ    22
        10 000441   000002 757000 xsym               STAQ    DISK_CLOSE_NEXT+2

      302    20177   11                                    DISK_CLOSE_NEXT.V.EFTOPER.ASTOW# = '1'B;

  20177 10 000442   020000 236007                    LDQ     8192,DL
        10 000443   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      303    20178   11                                    DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '0'B;

  20178 10 000444   000025 236000 11                 LDQ     21
        10 000445   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

      304    20179   11                                    DISK_CLOSE_NEXT.V.DESC.TPB# = '1'B;

  20179 10 000446   000040 236003                    LDQ     32,DU
        10 000447   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      305    20180   11                                    DISK_CLOSE_NEXT.V.DESC.ODSTOW# = DISK_DESC_SAVE.
             20180                                             ODSTOW#;

  20180 10 000450   000000 236000 xsym               LDQ     DISK_DESC_SAVE
        10 000451   000033 676000 xsym               ERQ     DISK_CLOSE_NEXT+27
        10 000452   040000 376003                    ANQ     16384,DU
        10 000453   000033 656000 xsym               ERSQ    DISK_CLOSE_NEXT+27

      306    20181   11                                    DISK_CLOSE_NEXT.IFPARAM_ = FIT_;

  20181 10 000454   000136 237000 2                  LDAQ    FIT_
        10 000455   000026 757000 xsym               STAQ    DISK_CLOSE_NEXT+22

      307    20182   11                                    CALL M$CLOSE(DISK_CLOSE_NEXT)

  20182 10 000456   000000 630400 xsym               EPPR0   DISK_CLOSE_NEXT
        10 000457   450001 713400                    CLIMB   alt,close
        10 000460   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:61   
        10 000461   000540 702000 10                 TSX2    s:20208

      308    20183   11                                    WHENRETURN
      309    20184   12                                    DO;

      310    20185   12                                      DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(NIL);

  20185 10 000462   000002 237000 11                 LDAQ    2
        10 000463   000026 757000 xsym               STAQ    DISK_CLOSE_NEXT+22

      311    20186   12                                      FAKE_FILE.V.DCB# = DCB_NUM;

  20186 10 000464   000357 720000 2                  LXL0    DCB_NUM
        10 000465   000206 740000 2                  STX0    FAKE_FILE+36

      312    20187   12                                      FAKE_FILE.V.FUN# = %IN#;

  20187 10 000466   002000 236007                    LDQ     1024,DL
        10 000467   000207 552010 2                  STBQ    FAKE_FILE+37,'10'O

      313    20188   12                                      FAKE_FILE.V.ACS# = %BLOCK#;

  20188 10 000470   000003 236007                    LDQ     3,DL
        10 000471   000210 552004 2                  STBQ    FAKE_FILE+38,'04'O

      314    20189   12                                      FAKE_FILE.FPARAM_ = FIT_;

  20189 10 000472   000136 237000 2                  LDAQ    FIT_
        10 000473   000172 757000 2                  STAQ    FAKE_FILE+24

      315    20190   12                                      CALL M$OPEN(FAKE_FILE)

  20190 10 000474   000142 630400 2                  EPPR0   FAKE_FILE
        10 000475   450000 713400                    CLIMB   alt,open
        10 000476   410400 401760                    pmme    nvectors=18
        10 000477   000534 702000 10                 TSX2    s:20203

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:62   
      316    20191   12                                      WHENRETURN
      317    20192   13                                      DO;

      318    20193   13                                        DISK_CLOSE_NEXT.V.EFTOPER = '0'B;

  20193 10 000500   000024 236000 11                 LDQ     20
        10 000501   000032 356000 xsym               ANSQ    DISK_CLOSE_NEXT+26

      319    20194   13                                        DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  20194 10 000502   004000 236007                    LDQ     2048,DL
        10 000503   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      320    20195   13                                        DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;

  20195 10 000504   000360 470400 2                  LDP0    DCB$
        10 000505   000005 720100                    LXL0    5,,PR0
        10 000506   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

      321    20196   13                                       DISK_CLOSE_NEXT.V.DESC.ODSTOW# = DISK_DESC_SAVE
             20196                                                 .ODSTOW#;

  20196 10 000507   000000 236000 xsym               LDQ     DISK_DESC_SAVE
        10 000510   000033 676000 xsym               ERQ     DISK_CLOSE_NEXT+27
        10 000511   040000 376003                    ANQ     16384,DU
        10 000512   000033 656000 xsym               ERSQ    DISK_CLOSE_NEXT+27

      322    20197   13                                        DISK_CLOSE_NEXT.V.DESC.QS# = '1'B;

  20197 10 000513   010000 236003                    LDQ     4096,DU
        10 000514   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      323    20198   13                                        DISK_CLOSE_NEXT.V.DESC.FETCH# = '1'B;

  20198 10 000515   000010 236003                    LDQ     8,DU
        10 000516   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:63   
      324    20199   13                                        CALL XUR$ERRMSG(E_FETCH_DONE,DCB_NUM,DCBNUM(
             20199                                                 M$LO));

  20199 10 000517   000000 236007 xsym               LDQ     M$LO,DL
        10 000520   200012 756100                    STQ     CODE+6,,AUTO
        10 000521   200012 631500                    EPPR1   CODE+6,,AUTO
        10 000522   200015 451500                    STP1    CODE+9,,AUTO
        10 000523   000005 236000 11                 LDQ     5
        10 000524   200014 756100                    STQ     CODE+8,,AUTO
        10 000525   000030 236000 11                 LDQ     24
        10 000526   200013 756100                    STQ     CODE+7,,AUTO
        10 000527   200013 630500                    EPPR0   CODE+7,,AUTO
        10 000530   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 000531   000000 701000 xent               TSX1    XUR$ERRMSG
        10 000532   000000 011000                    NOP     0

      325    20200   13                                      END;

  20200 10 000533   000537 710000 10                 TRA     s:20205

      326    20201   12                                      WHENALTRETURN
      327    20202   13                                      DO;

      328    20203   13                                        CALL FLI$RPT_ERR;

  20203 10 000534   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000535   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000536   000000 011000                    NOP     0

      329    20204   13                                      END;

      330    20205   12                                    END;

  20205 10 000537   000545 710000 10                 TRA     s:20211

      331    20206   11                                    WHENALTRETURN
      332    20207   12                                    DO;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:64   

      333    20208   12                                        DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(NIL);

  20208 10 000540   000002 237000 11                 LDAQ    2
        10 000541   000026 757000 xsym               STAQ    DISK_CLOSE_NEXT+22

      334    20209   12                                        CALL FLI$RPT_ERR;

  20209 10 000542   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000543   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000544   000000 011000                    NOP     0

      335    20210   12                                    END;

      336    20211   11                                 END; /* CREATE FAKE FILE */

  20211 10 000545   000551 710000 10                 TRA     s:20216

      337    20212   10                                 WHENALTRETURN
      338    20213   11                                 DO;

      339    20214   11                                    CALL FLI$RPT_ERR;

  20214 10 000546   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000547   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000550   000000 011000                    NOP     0

      340    20215   11                                 END;

      341    20216   10                              END; /*DISK_CLOSE_NEXT */

  20216 10 000551   000555 710000 10                 TRA     s:20221

      342    20217    9                              WHENALTRETURN
      343    20218   10                              DO;

      344    20219   10                                CALL FLI$RPT_ERR;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:65   

  20219 10 000552   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 000553   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000554   000000 011000                    NOP     0

      345    20220   10                              END;

      346    20221    9                            END; /* CODE06 */

  20221 10 000555   000562 710000 10                 TRA     s:20226

      347    20222    8                            WHENALTRETURN
      348    20223    9                            DO;

      349    20224    9                              CALL FLI$RPT_ERR(E_NO_CODE6,DCB_NUM);

  20224 10 000556   000031 630400 11                 EPPR0   25
        10 000557   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000560   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000561   000000 011000                    NOP     0

      350    20225    9                            END;

      351    20226    8                          END;

  20226 10 000562   000601 710000 10                 TRA     s:20243

      352    20227    7                          ELSE
      353    20228    8                          DO;

      354    20229    8                             CALL FLI$RPT_ERR(E_FETCH_DENIED,DCB_NUM);

  20229 10 000563   000033 630400 11                 EPPR0   27
        10 000564   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000565   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000566   000000 011000                    NOP     0

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:66   
      355    20230    8                          END;

      356    20231    7                       END; /* ARCHIVE INACTIVE */

  20231 10 000567   000601 710000 10                 TRA     s:20243

      357    20232    6                       ELSE
      358    20233    7                       DO;/*ARCHIVE ACTIVE*/

      359    20234    7                          CALL FLI$RPT_ERR(E_ACTIVE_FETCH_DENIED,DCB_NUM);

  20234 10 000570   000035 630400 11                 EPPR0   29
        10 000571   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000572   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000573   000000 011000                    NOP     0

      360    20235    7                       END; /* ARCHIVE ACTIVE*/

      361    20236    6                    END;/* ARCHIVE FILE*/

  20236 10 000574   000601 710000 10                 TRA     s:20243

      362    20237    5                    ELSE
      363    20238    6                    DO;

      364    20239    6                       CALL FLI$RPT_ERR(E_NOT_ARCHIVE,DCB_NUM);

  20239 10 000575   000037 630400 11                 EPPR0   31
        10 000576   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000577   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000600   000000 011000                    NOP     0

      365    20240    6                    END;

      366    20241    5                 END; /* NOT FETCH */

      367    20242    4              END; /* NOT ERR*/
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:67   

      368    20243    3              CALL FLN$DISK_CLOSE_NEXT(DCB#);

  20243 10 000601   000006 630400 11                 EPPR0   6
        10 000602   000017 631400 xsym               EPPR1   B_VECTNIL+15
        10 000603   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        10 000604   000000 011000                    NOP     0

      369    20244    3           END;/* DO WHILE '1'B */

  20244 10 000605   000073 710000 10                 TRA     s:20030

      370    20245    2   DONE:
      371    20246    2           CALL FLN$DISK_CLOSE_ALL;

  20246 10 000606   000002 631400 xsym  DONE         EPPR1   B_VECTNIL+2
        10 000607   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 000610   000000 011000                    NOP     0

      372    20247    2           IF NOT ANY_FILES_FOUND

  20247 10 000611   000365 234000 2                  SZN     ANY_FILES_FOUND
        10 000612   000615 604000 10                 TMI     s:20249

      373    20248    2           THEN CALL PRINT_ERROR;

  20248 10 000613   002427 701000 10                 TSX1    PRINT_ERROR
        10 000614   000000 011000                    NOP     0

      374    20249    2           RETURN;

  20249 10 000615   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 000616   000001 702211                    TSX2  ! 1,X1

      375    20250
      376    20251    2   END FLB_FETCH;
      377    20252        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:68   
      378    20253    1   FLB_UNFETCH : PROC ;

  20253 10 000617   200006 741300       FLB_UNFETCH  STX1  ! CODE+2,,AUTO

      379    20254        /*F*  NAME: FLB_UNFETCH
      380    20255              PURPOSE: Perform UNFETCH command which rescinds a FETCH
      381    20256                       request. For any specified file(s) not currently
      382    20257                       queued for FETCH, an error message is issued.
      383    20258        ***/
      384    20259
      385    20260    3           DO WHILE('1'B);

      386    20261    3              IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#

  20261 10 000620   000000 234000 xsym               SZN     FMSEC
        10 000621   000626 605000 10                 TPL     s:20262
        10 000622   000000 470400 xsym               LDP0    B$JIT$
        10 000623   000020 236100                    LDQ     16,,PR0
        10 000624   000000 376000 9                  ANQ     0
        10 000625   000631 601000 10                 TNZ     s:20263

      387    20262    3              THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unathor. file access. */

  20262 10 000626   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000627   020013 713400                    CLIMB   8203
        10 000630   400000 401760                    pmme    nvectors=1

      388    20263    3              CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);

  20263 10 000631   000004 630400 11                 EPPR0   4
        10 000632   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 000633   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
        10 000634   001105 702000 10                 TSX2    DONE

      389    20264
      390    20265    3            IF F$DCB.FCD#     /* If DCB not open, a file dir. is being processed */

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:69   
  20265 10 000635   000360 470400 2                  LDP0    DCB$
        10 000636   000031 236100                    LDQ     25,,PR0
        10 000637   020000 316007                    CANQ    8192,DL
        10 000640   000663 600000 10                 TZE     s:20280

      391    20266    3            THEN
      392    20267    4            DO;

      393    20268    4               DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;

  20268 10 000641   000357 720000 2                  LXL0    DCB_NUM
        10 000642   000032 740000 xsym               STX0    DISK_CLOSE_ORDINARY+26

      394    20269    4               CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20269 10 000643   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 000644   050001 713400                    CLIMB   close
        10 000645   406000 401760                    pmme    nvectors=13

      395    20270
      396    20271    4               CALL M$SPRIV( SWITCH_FMSEC );

  20271 10 000646   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000647   020012 713400                    CLIMB   8202
        10 000650   400000 401760                    pmme    nvectors=1

      397    20272    4               DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;

  20272 10 000651   000357 720000 2                  LXL0    DCB_NUM
        10 000652   000044 740000 xsym               STX0    DISK_OPEN_ORDINARY+36

      398    20273    4               DISK_OPEN_ORDINARY.FPARAM_ = FIT_;

  20273 10 000653   000136 237000 2                  LDAQ    FIT_
        10 000654   000030 757000 xsym               STAQ    DISK_OPEN_ORDINARY+24

      399    20274    4               CALL M$OPEN( DISK_OPEN_ORDINARY )
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:70   

  20274 10 000655   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 000656   450000 713400                    CLIMB   alt,open
        10 000657   410400 401760                    pmme    nvectors=18
        10 000660   000662 702000 10                 TSX2    s:20278
        10 000661   000662 710000 10                 TRA     s:20278

      400    20275    4               WHENALTRETURN
      401    20276    5               DO;

      402    20277    5               END;

      403    20278    4            END;

  20278 10 000662   000666 710000 10                 TRA     s:20282

      404    20279    3              ELSE
      405    20280    3                 CALL M$SPRIV( SWITCH_FMSEC );

  20280 10 000663   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000664   020012 713400                    CLIMB   8202
        10 000665   400000 401760                    pmme    nvectors=1

      406    20281
      407    20282    3              IF BREAK_COUNT > 0

  20282 10 000666   000000 235000 xsym               LDA     BREAK_COUNT
        10 000667   001105 605400 10                 TPNZ    DONE

      408    20283    3              THEN GOTO DONE;
      409    20284    3              IF ERR

  20284 10 000670   000140 236000 2                  LDQ     ERR
        10 000671   000734 600000 10                 TZE     s:20310

      410    20285    3              THEN
      411    20286    4              DO;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:71   

      412    20287    4                 IF ERR.ERR# = %E$ADEOF

  20287 10 000672   000140 236000 2                  LDQ     ERR
        10 000673   377770 376007                    ANQ     131064,DL
        10 000674   001750 116007                    CMPQ    1000,DL
        10 000675   001100 600000 10                 TZE     s:20367

      413    20288    4                 THEN;
      414    20289    4                 ELSE
      415    20290    4                    IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF

  20290 10 000676   001020 116007                    CMPQ    528,DL
        10 000677   001100 600000 10                 TZE     s:20367
        10 000700   001540 116007                    CMPQ    864,DL
        10 000701   001100 600000 10                 TZE     s:20367

      416    20291    4                    THEN;
      417    20292    4                    ELSE
      418    20293    5                    DO;

      419    20294    5                       CALL FLI$RPT_ERR(ERR,DCB_NUM);

  20294 10 000702   000011 630400 11                 EPPR0   9
        10 000703   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000704   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 000705   000000 011000                    NOP     0

      420    20295    5                       ANY_FILES_FOUND = '1'B;

  20295 10 000706   400000 236003                    LDQ     -131072,DU
        10 000707   000365 756000 2                  STQ     ANY_FILES_FOUND

      421    20296    5                       IF ERR.ERR# = %E$FILEBUSY

  20296 10 000710   000140 236000 2                  LDQ     ERR
        10 000711   377770 376007                    ANQ     131064,DL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:72   
        10 000712   001550 116007                    CMPQ    872,DL
        10 000713   000726 600000 10                 TZE     s:20302
        10 000714   001640 116007                    CMPQ    928,DL
        10 000715   000726 600000 10                 TZE     s:20302
        10 000716   001710 116007                    CMPQ    968,DL
        10 000717   000726 600000 10                 TZE     s:20302
        10 000720   001610 116007                    CMPQ    904,DL
        10 000721   000726 600000 10                 TZE     s:20302
        10 000722   002570 116007                    CMPQ    1400,DL
        10 000723   000726 600000 10                 TZE     s:20302
        10 000724   000100 116007                    CMPQ    64,DL
        10 000725   001105 601000 10                 TNZ     DONE

      422    20297    5                         OR ERR.ERR# = %E$NOACCESS
      423    20298    5                         OR ERR.ERR# = %E$JRNLERR
      424    20299    5                         OR ERR.ERR# = %E$NOFILE
      425    20300    5                         OR ERR.ERR# = %E$BADFIT
      426    20301    5                         OR ERR.ERR# = %E$IOERR
      427    20302    5                       THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20302 10 000726   000004 236000 xsym               LDQ     FPT_EXIT+4
        10 000727   777000 316003                    CANQ    -512,DU
        10 000730   001100 601000 10                 TNZ     s:20367

      428    20303    5                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20303 10 000731   001000 236003                    LDQ     512,DU
        10 000732   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O
        10 000733   001100 710000 10                 TRA     s:20367

      429    20304    5                            ELSE ;
      430    20305    5                       ELSE GOTO DONE;
      431    20306    5                       END;
      432    20307    4                 END;
      433    20308    3              ELSE
      434    20309    4              DO;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:73   
      435    20310    4                  ANY_FILES_FOUND = '1'B;

  20310 10 000734   400000 236003                    LDQ     -131072,DU
        10 000735   000365 756000 2                  STQ     ANY_FILES_FOUND

      436    20311    4                 IF F$DCB.DESC.FETCH# AND F$DCB.DESC.QS#

  20311 10 000736   000360 470400 2                  LDP0    DCB$
        10 000737   000005 236100                    LDQ     5,,PR0
        10 000740   000010 316007                    CANQ    8,DL
        10 000741   001074 600000 10                 TZE     s:20364
        10 000742   010000 316007                    CANQ    4096,DL
        10 000743   001074 600000 10                 TZE     s:20364

      437    20312    4                 THEN
      438    20313    5                 DO;                       /* FETCH                              */

      439    20314    5                    CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

  20314 10 000744   000137 236000 2                  LDQ     FIT_+1
        10 000745   000005 036003                    ADLQ    5,DU
        10 000746   000361 756000 2                  STQ     CODE4$

      440    20315    5                    CALL XSF$LOCCODP(CODE4$,04)

  20315 10 000747   000041 630400 11                 EPPR0   33
        10 000750   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000751   000000 701000 xent               TSX1    XSF$LOCCODP
        10 000752   001067 702000 10                 TSX2    s:20359

      441    20316    5                    WHENRETURN
      442    20317    6                    DO;

      443    20318        /***
      444    20319         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      445    20320         *** set in the DCB.
      446    20321         ***/
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:74   
      447    20322    6                       CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20322 10 000753   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 000754   050001 713400                    CLIMB   close
        10 000755   406000 401760                    pmme    nvectors=13

      448    20323    6                       CALL M$RPRIV( SWITCH_FMSEC );

  20323 10 000756   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000757   020013 713400                    CLIMB   8203
        10 000760   400000 401760                    pmme    nvectors=1

      449    20324    6                       DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;

  20324 10 000761   020000 236007                    LDQ     8192,DL
        10 000762   000044 256000 xsym               ORSQ    DISK_OPEN_ORDINARY+36

      450    20325    6                       CALL M$OPEN( DISK_OPEN_ORDINARY )

  20325 10 000763   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 000764   450000 713400                    CLIMB   alt,open
        10 000765   410400 401760                    pmme    nvectors=18
        10 000766   000770 702000 10                 TSX2    s:20329
        10 000767   000770 710000 10                 TRA     s:20329

      451    20326    6                       WHENALTRETURN
      452    20327    7                       DO;

      453    20328    7                       END;

      454    20329    6                       DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;

  20329 10 000770   000000 236000 11                 LDQ     0
        10 000771   000044 356000 xsym               ANSQ    DISK_OPEN_ORDINARY+36

      455    20330    6                       CALL M$SPRIV( SWITCH_FMSEC );

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:75   
  20330 10 000772   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 000773   020012 713400                    CLIMB   8202
        10 000774   400000 401760                    pmme    nvectors=1

      456    20331
      457    20332    6                       IF (FMSEC)

  20332 10 000775   000000 234000 xsym               SZN     FMSEC
        10 000776   001015 604000 10                 TMI     s:20338
        10 000777   000000 470400 xsym               LDP0    B$JIT$
        10 001000   000361 471400 2                  LDP1    CODE4$
        10 001001   040100 106500                    CMPC    fill='040'O
        10 001002   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 001003   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
        10 001004   001011 601000 10                 TNZ     s:20332+12
        10 001005   040100 106500                    CMPC    fill='040'O
        10 001006   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
        10 001007   100005 000014                    ADSC9   5,,PR1                   cn=0,n=12
        10 001010   001015 600000 10                 TZE     s:20338
        10 001011   000360 473400 2                  LDP3    DCB$
        10 001012   300057 236100                    LDQ     47,,PR3
        10 001013   020000 316007                    CANQ    8192,DL
        10 001014   001062 600000 10                 TZE     s:20354

      458    20333    6                         OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      459    20334    6                         AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      460    20335    6                         OR (F$DCB.AUTHFFLG.DELF#) /* Allow if accnt. wr. access */
      461    20336    6                       THEN
      462    20337    7                       DO;

      463    20338    7                          CALL M$OPEN( DISK_OPEN_ORDINARY );

  20338 10 001015   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001016   050000 713400                    CLIMB   open
        10 001017   410400 401760                    pmme    nvectors=18

      464    20339    7                          DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:76   

  20339 10 001020   004000 236007                    LDQ     2048,DL
        10 001021   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      465    20340    7                          DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;

  20340 10 001022   000360 470400 2                  LDP0    DCB$
        10 001023   000005 720100                    LXL0    5,,PR0
        10 001024   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

      466    20341    7                          DISK_CLOSE_NEXT.V.DESC.QS# = '0'B;

  20341 10 001025   000043 236000 11                 LDQ     35
        10 001026   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      467    20342    7                          DISK_CLOSE_NEXT.V.DESC.FETCH# = '0'B;

  20342 10 001027   000044 236000 11                 LDQ     36
        10 001030   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      468    20343    7                          CODE6$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

  20343 10 001031   000137 236000 2                  LDQ     FIT_+1
        10 001032   000005 036003                    ADLQ    5,DU
        10 001033   000363 756000 2                  STQ     CODE6$

      469    20344    7                          CALL XSF$LOCCODP(CODE6$,06)

  20344 10 001034   000022 630400 11                 EPPR0   18
        10 001035   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001036   000000 701000 xent               TSX1    XSF$LOCCODP
        10 001037   001045 702000 10                 TSX2    s:20350

      470    20345    7                          WHENRETURN
      471    20346    8                          DO;

      472    20347    8                             EFTWORD = CODE06.STOW.EFT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:77   

  20347 10 001040   000363 470400 2                  LDP0    CODE6$
        10 001041   000002 720100                    LXL0    2,,PR0
        10 001042   000000 740000 xsym               STX0    EFTWORD

      473    20348    8                             DISK_CLOSE_NEXT.V.EFTOPER.ISTOW# = '1'B;

  20348 10 001043   010000 236007                    LDQ     4096,DL
        10 001044   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      474    20349    8                             END;

      475    20350    7                             CALL XUR$ERRMSG(E_UNFETCH_DONE,DCB_NUM,DCBNUM(M$LO));

  20350 10 001045   000000 236007 xsym               LDQ     M$LO,DL
        10 001046   200012 756100                    STQ     CODE+6,,AUTO
        10 001047   200012 630500                    EPPR0   CODE+6,,AUTO
        10 001050   200015 450500                    STP0    CODE+9,,AUTO
        10 001051   000005 236000 11                 LDQ     5
        10 001052   200014 756100                    STQ     CODE+8,,AUTO
        10 001053   000045 236000 11                 LDQ     37
        10 001054   200013 756100                    STQ     CODE+7,,AUTO
        10 001055   200013 630500                    EPPR0   CODE+7,,AUTO
        10 001056   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001057   000000 701000 xent               TSX1    XUR$ERRMSG
        10 001060   000000 011000                    NOP     0

      476    20351    7                          END;

  20351 10 001061   001066 710000 10                 TRA     s:20356

      477    20352    6                       ELSE
      478    20353    7                       DO;

      479    20354    7                          CALL FLI$RPT_ERR(E_UNFETCH_DENIED,DCB_NUM);

  20354 10 001062   000046 630400 11                 EPPR0   38
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:78   
        10 001063   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001064   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001065   000000 011000                    NOP     0

      480    20355    7                          END;

      481    20356    6                       END;                /* WHENRETURN CODE04*/

  20356 10 001066   001073 710000 10                 TRA     s:20361

      482    20357    5                    WHENALTRETURN
      483    20358    6                    DO;

      484    20359    6                       CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);

  20359 10 001067   000050 630400 11                 EPPR0   40
        10 001070   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001071   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001072   000000 011000                    NOP     0

      485    20360    6                       END;

      486    20361    5                    END;                   /* FETCH                              */

  20361 10 001073   001100 710000 10                 TRA     s:20367

      487    20362    4                 ELSE
      488    20363    5                 DO;

      489    20364    5                    CALL FLI$RPT_ERR(E_NOT_FETCH,DCB_NUM);

  20364 10 001074   000052 630400 11                 EPPR0   42
        10 001075   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001076   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001077   000000 011000                    NOP     0

      490    20365    5                    END;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:79   

      491    20366    4                 END;                      /* NOT ERR*/

      492    20367    3              CALL FLN$DISK_CLOSE_NEXT(DCB#);

  20367 10 001100   000006 630400 11                 EPPR0   6
        10 001101   000017 631400 xsym               EPPR1   B_VECTNIL+15
        10 001102   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        10 001103   000000 011000                    NOP     0

      493    20368    3              END;                         /* DO WHILE '1'B                      */

  20368 10 001104   000620 710000 10                 TRA     s:20261

      494    20369    2   DONE:
      495    20370    2           CALL FLN$DISK_CLOSE_ALL;

  20370 10 001105   000002 631400 xsym  DONE         EPPR1   B_VECTNIL+2
        10 001106   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 001107   000000 011000                    NOP     0

      496    20371    2           IF NOT ANY_FILES_FOUND

  20371 10 001110   000365 234000 2                  SZN     ANY_FILES_FOUND
        10 001111   001114 604000 10                 TMI     s:20373

      497    20372    2           THEN CALL PRINT_ERROR;

  20372 10 001112   002427 701000 10                 TSX1    PRINT_ERROR
        10 001113   000000 011000                    NOP     0

      498    20373    2           RETURN;

  20373 10 001114   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 001115   000001 702211                    TSX2  ! 1,X1

      499    20374
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:80   
      500    20375    2   END FLB_UNFETCH;
      501    20376        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:81   
      502    20377    1   FLB_STOW : PROC ;

  20377 10 001116   200006 741300       FLB_STOW     STX1  ! CODE+2,,AUTO

      503    20378        /*F*   NAME:  FLB_STOW
      504    20379               PURPOSE:  perform STOW command which requests the specified
      505    20380                         file(s) be entered into the archive system. The
      506    20381                         files are retained on disk or deleted depending
      507    20382                         on the specification of ACTIVE or INACTIVE. The
      508    20383                         default is INACTIVE.
      509    20384        ***/
      510    20385
      511    20386    2         DISK_OPTION.DIR = '1'B;

  20386 10 001117   400000 236003                    LDQ     -131072,DU
        10 001120   000000 256000 xsym               ORSQ    DISK_OPTION

      512    20387
      513    20388    3         DO WHILE('1'B);

      514    20389    3             IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#

  20389 10 001121   000000 234000 xsym               SZN     FMSEC
        10 001122   001127 605000 10                 TPL     s:20390
        10 001123   000000 470400 xsym               LDP0    B$JIT$
        10 001124   000020 236100                    LDQ     16,,PR0
        10 001125   000000 376000 9                  ANQ     0
        10 001126   001132 601000 10                 TNZ     s:20391

      515    20390    3             THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unauthor. file access. */

  20390 10 001127   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001130   020013 713400                    CLIMB   8203
        10 001131   400000 401760                    pmme    nvectors=1

      516    20391    3             CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:82   
  20391 10 001132   000004 630400 11                 EPPR0   4
        10 001133   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 001134   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
        10 001135   001544 702000 10                 TSX2    DONE

      517    20392
      518    20393    3             IF F$DCB.FCD#    /* If DCB not open, a file dir. is being processed */

  20393 10 001136   000360 470400 2                  LDP0    DCB$
        10 001137   000031 236100                    LDQ     25,,PR0
        10 001140   020000 316007                    CANQ    8192,DL
        10 001141   001164 600000 10                 TZE     s:20408

      519    20394    3             THEN                            /* or an error occurred on the open */
      520    20395    4             DO;

      521    20396    4                DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;

  20396 10 001142   000357 720000 2                  LXL0    DCB_NUM
        10 001143   000032 740000 xsym               STX0    DISK_CLOSE_ORDINARY+26

      522    20397    4                CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20397 10 001144   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 001145   050001 713400                    CLIMB   close
        10 001146   406000 401760                    pmme    nvectors=13

      523    20398
      524    20399    4                CALL M$SPRIV( SWITCH_FMSEC );

  20399 10 001147   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001150   020012 713400                    CLIMB   8202
        10 001151   400000 401760                    pmme    nvectors=1

      525    20400    4                DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;

  20400 10 001152   000357 720000 2                  LXL0    DCB_NUM
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:83   
        10 001153   000044 740000 xsym               STX0    DISK_OPEN_ORDINARY+36

      526    20401    4                DISK_OPEN_ORDINARY.FPARAM_ = FIT_;

  20401 10 001154   000136 237000 2                  LDAQ    FIT_
        10 001155   000030 757000 xsym               STAQ    DISK_OPEN_ORDINARY+24

      527    20402    4                CALL M$OPEN( DISK_OPEN_ORDINARY )

  20402 10 001156   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001157   450000 713400                    CLIMB   alt,open
        10 001160   410400 401760                    pmme    nvectors=18
        10 001161   001163 702000 10                 TSX2    s:20406
        10 001162   001163 710000 10                 TRA     s:20406

      528    20403    4                WHENALTRETURN
      529    20404    5                DO;

      530    20405    5                END;

      531    20406    4             END;

  20406 10 001163   001167 710000 10                 TRA     s:20410

      532    20407    3             ELSE
      533    20408    3                CALL M$SPRIV( SWITCH_FMSEC );

  20408 10 001164   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001165   020012 713400                    CLIMB   8202
        10 001166   400000 401760                    pmme    nvectors=1

      534    20409
      535    20410    3             IF BREAK_COUNT > 0

  20410 10 001167   000000 235000 xsym               LDA     BREAK_COUNT
        10 001170   001175 604400 10                 TMOZ    s:20416

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:84   
      536    20411    3             THEN
      537    20412    4             DO;

      538    20413    4                 CALL FLN$DISK_CLOSE_ALL;

  20413 10 001171   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 001172   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 001173   000000 011000                    NOP     0

      539    20414    4                 GOTO COMMON_RETURN;

  20414 10 001174   001553 710000 10                 TRA     COMMON_RETURN

      540    20415    4             END;
      541    20416    3             IF ERR

  20416 10 001175   000140 236000 2                  LDQ     ERR
        10 001176   001275 600000 10                 TZE     s:20463

      542    20417    3             THEN
      543    20418    4             DO;

      544    20419    4                 IF ERR.ERR# = %E$ADEOF OR ERR.ERR# = %E$NOKEY

  20419 10 001177   000140 236000 2                  LDQ     ERR
        10 001200   377770 376007                    ANQ     131064,DL
        10 001201   001750 116007                    CMPQ    1000,DL
        10 001202   001537 600000 10                 TZE     s:20569
        10 001203   001020 116007                    CMPQ    528,DL
        10 001204   001537 600000 10                 TZE     s:20569

      545    20420    4                 THEN;
      546    20421    4                 ELSE
      547    20422    4                     IF  ERR.ERR# = %E$FDEOF

  20422 10 001205   001540 116007                    CMPQ    864,DL
        10 001206   001241 601000 10                 TNZ     s:20445
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:85   

      548    20423    4                     THEN
      549    20424    5                     DO;

      550    20425    5                         CODE14$ = FIT_.PTR$;

  20425 10 001207   000137 236000 2                  LDQ     FIT_+1
        10 001210   000367 756000 2                  STQ     CODE14$

      551    20426    5                         CALL XSF$LOCCODP(CODE14$,14)

  20426 10 001211   000055 630400 11                 EPPR0   45
        10 001212   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001213   000000 701000 xent               TSX1    XSF$LOCCODP
        10 001214   001231 702000 10                 TSX2    s:20439

      552    20427    5                         WHENRETURN
      553    20428    6                         DO;

      554    20429    6                            IF CODE14.ACCESS.NOSTOW

  20429 10 001215   000367 470400 2                  LDP0    CODE14$
        10 001216   000000 430100                    FSZN    0,,PR0
        10 001217   001230 605000 10                 TPL     s:20434+1

      555    20430    6                              THEN
      556    20431    7                              DO;

      557    20432    7                                 CALL FLI$RPT_ERR(E_NOSTOW,DCB_NUM);

  20432 10 001220   000057 630400 11                 EPPR0   47
        10 001221   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001222   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001223   000000 011000                    NOP     0

      558    20433    7                                 CALL FLN$DISK_CLOSE_ALL;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:86   
  20433 10 001224   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 001225   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 001226   000000 011000                    NOP     0

      559    20434    7                                 GOTO COMMON_RETURN;

  20434 10 001227   001553 710000 10                 TRA     COMMON_RETURN
        10 001230   001240 710000 10                 TRA     s:20442

      560    20435    7                               END;
      561    20436    6                         END;
      562    20437    5                        WHENALTRETURN
      563    20438    6                        DO;

      564    20439    6                            CALL FLI$RPT_ERR(E_NO_CODE14,DCB_NUM);

  20439 10 001231   000061 630400 11                 EPPR0   49
        10 001232   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001233   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001234   000000 011000                    NOP     0

      565    20440    6                            CALL FLN$DISK_NXTA;

  20440 10 001235   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 001236   000000 701000 xent               TSX1    FLN$DISK_NXTA
        10 001237   000000 011000                    NOP     0

      566    20441    6                        END;

      567    20442    5                     END;

  20442 10 001240   001537 710000 10                 TRA     s:20569

      568    20443    4                     ELSE
      569    20444    5                     DO;

      570    20445    5                         CALL FLI$RPT_ERR(ERR,DCB_NUM);
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:87   

  20445 10 001241   000011 630400 11                 EPPR0   9
        10 001242   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001243   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001244   000000 011000                    NOP     0

      571    20446    5                          ANY_FILES_FOUND = '1'B;

  20446 10 001245   400000 236003                    LDQ     -131072,DU
        10 001246   000365 756000 2                  STQ     ANY_FILES_FOUND

      572    20447    5                         IF ERR.ERR# = %E$FILEBUSY

  20447 10 001247   000140 236000 2                  LDQ     ERR
        10 001250   377770 376007                    ANQ     131064,DL
        10 001251   001550 116007                    CMPQ    872,DL
        10 001252   001263 600000 10                 TZE     s:20452
        10 001253   001640 116007                    CMPQ    928,DL
        10 001254   001263 600000 10                 TZE     s:20452
        10 001255   001710 116007                    CMPQ    968,DL
        10 001256   001263 600000 10                 TZE     s:20452
        10 001257   001610 116007                    CMPQ    904,DL
        10 001260   001263 600000 10                 TZE     s:20452
        10 001261   002570 116007                    CMPQ    1400,DL
        10 001262   001537 601000 10                 TNZ     s:20569

      573    20448    5                            OR ERR.ERR# = %E$NOACCESS
      574    20449    5                            OR ERR.ERR# = %E$JRNLERR
      575    20450    5                            OR ERR.ERR# = %E$NOFILE
      576    20451    5                            OR ERR.ERR# = %E$BADFIT
      577    20452    5                              THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20452 10 001263   000004 236000 xsym               LDQ     FPT_EXIT+4
        10 001264   777000 316003                    CANQ    -512,DU
        10 001265   001271 601000 10                 TNZ     s:20456

      578    20453    5                                   THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:88   

  20453 10 001266   001000 236003                    LDQ     512,DU
        10 001267   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O
        10 001270   001537 710000 10                 TRA     s:20569

      579    20454    5                              ELSE
      580    20455    6                              DO;

      581    20456    6                                 CALL FLN$DISK_CLOSE_ALL;

  20456 10 001271   000002 631400 xsym               EPPR1   B_VECTNIL+2
        10 001272   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 001273   000000 011000                    NOP     0

      582    20457    6                                 GOTO COMMON_RETURN;

  20457 10 001274   001553 710000 10                 TRA     COMMON_RETURN

      583    20458    6                               END;
      584    20459    5                      END;
      585    20460    4             END; /* ERR */
      586    20461    3             ELSE
      587    20462    4             DO;  /* NOT ERR */

      588    20463    4                 ANY_FILES_FOUND = '1'B;

  20463 10 001275   400000 236003                    LDQ     -131072,DU
        10 001276   000365 756000 2                  STQ     ANY_FILES_FOUND

      589    20464    4                 IF F$DCB.DESC.QS#

  20464 10 001277   000360 470400 2                  LDP0    DCB$
        10 001300   000005 236100                    LDQ     5,,PR0
        10 001301   010000 316007                    CANQ    4096,DL
        10 001302   001317 600000 10                 TZE     s:20475

      590    20465    4                 THEN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:89   
      591    20466    5                 DO;

      592    20467    5                     IF F$DCB.DESC.FETCH#

  20467 10 001303   000010 316007                    CANQ    8,DL
        10 001304   001312 600000 10                 TZE     s:20471

      593    20468    5                     THEN
      594    20469    5                         CALL FLI$RPT_ERR(E_FETCH_SET,DCB_NUM);

  20469 10 001305   000013 630400 11                 EPPR0   11
        10 001306   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001307   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001310   000000 011000                    NOP     0
        10 001311   001537 710000 10                 TRA     s:20569

      595    20470    5                     ELSE
      596    20471    5                          CALL FLI$RPT_ERR(E_STOW_SET,DCB_NUM);

  20471 10 001312   000063 630400 11                 EPPR0   51
        10 001313   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001314   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001315   000000 011000                    NOP     0

      597    20472    5                 END;

  20472 10 001316   001537 710000 10                 TRA     s:20569

      598    20473    4                 ELSE
      599    20474    5                 DO;/*NOT QS */

      600    20475    5                     IF F$DCB.DESC.DELF# AND F$DCB.DESC.ARCHIVE#

  20475 10 001317   400000 316007                    CANQ    -131072,DL
        10 001320   001330 600000 10                 TZE     s:20486
        10 001321   001000 316007                    CANQ    512,DL
        10 001322   001330 600000 10                 TZE     s:20486
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:90   

      601    20476    5                     THEN
      602    20477    6                     DO;

      603    20478    6                         CALL FLI$RPT_ERR(E_ARCHIVE_INACTIVE,DCB_NUM);

  20478 10 001323   000065 630400 11                 EPPR0   53
        10 001324   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001325   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001326   000000 011000                    NOP     0

      604    20479    6                     END;

  20479 10 001327   001537 710000 10                 TRA     s:20569

      605    20480    5                     ELSE
      606    20481    6                     DO;/* NOT ARCHIVE INACTIVE */

      607    20482        /***
      608    20483         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      609    20484         *** set in the DCB.
      610    20485         ***/
      611    20486    6                         CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20486 10 001330   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 001331   050001 713400                    CLIMB   close
        10 001332   406000 401760                    pmme    nvectors=13

      612    20487    6                         CALL M$RPRIV( SWITCH_FMSEC );

  20487 10 001333   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001334   020013 713400                    CLIMB   8203
        10 001335   400000 401760                    pmme    nvectors=1

      613    20488    6                         DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;

  20488 10 001336   020000 236007                    LDQ     8192,DL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:91   
        10 001337   000044 256000 xsym               ORSQ    DISK_OPEN_ORDINARY+36

      614    20489    6                         CALL M$OPEN( DISK_OPEN_ORDINARY )

  20489 10 001340   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001341   450000 713400                    CLIMB   alt,open
        10 001342   410400 401760                    pmme    nvectors=18
        10 001343   001345 702000 10                 TSX2    s:20493
        10 001344   001345 710000 10                 TRA     s:20493

      615    20490    6                         WHENALTRETURN
      616    20491    7                         DO;

      617    20492    7                         END;

      618    20493    6                         DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;

  20493 10 001345   000000 236000 11                 LDQ     0
        10 001346   000044 356000 xsym               ANSQ    DISK_OPEN_ORDINARY+36

      619    20494    6                         CALL M$SPRIV( SWITCH_FMSEC );

  20494 10 001347   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001350   020012 713400                    CLIMB   8202
        10 001351   400000 401760                    pmme    nvectors=1

      620    20495
      621    20496    6                         CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

  20496 10 001352   000137 236000 2                  LDQ     FIT_+1
        10 001353   000005 036003                    ADLQ    5,DU
        10 001354   000361 756000 2                  STQ     CODE4$

      622    20497    6                         CALL XSF$LOCCODP(CODE4$,04)

  20497 10 001355   000041 630400 11                 EPPR0   33
        10 001356   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:92   
        10 001357   000000 701000 xent               TSX1    XSF$LOCCODP
        10 001360   001533 702000 10                 TSX2    s:20564

      623    20498    6                         WHENRETURN
      624    20499    7                         DO;

      625    20500    7                             IF (FMSEC)

  20500 10 001361   000000 234000 xsym               SZN     FMSEC
        10 001362   001405 604000 10                 TMI     s:20507
        10 001363   000000 470400 xsym               LDP0    B$JIT$
        10 001364   000361 471400 2                  LDP1    CODE4$
        10 001365   040100 106500                    CMPC    fill='040'O
        10 001366   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 001367   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
        10 001370   001375 601000 10                 TNZ     s:20500+12
        10 001371   040100 106500                    CMPC    fill='040'O
        10 001372   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
        10 001373   100005 000014                    ADSC9   5,,PR1                   cn=0,n=12
        10 001374   001405 600000 10                 TZE     s:20507
        10 001375   000360 473400 2                  LDP3    DCB$
        10 001376   040100 106500                    CMPC    fill='040'O
        10 001377   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 001400   300020 000010                    ADSC9   16,,PR3                  cn=0,n=8
        10 001401   001405 600000 10                 TZE     s:20507
        10 001402   300057 236100                    LDQ     47,,PR3
        10 001403   020000 316007                    CANQ    8192,DL
        10 001404   001526 600000 10                 TZE     s:20560

      626    20501    7                                     OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      627    20502    7                                     AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      628    20503    7                                     OR (B$JIT.ACCN = F$DCB.ACCT#)
      629    20504    7                                     OR (F$DCB.AUTHFFLG.DELF#)
      630    20505    7                             THEN
      631    20506    8                             DO;

      632    20507    8                                 CALL M$OPEN( DISK_OPEN_ORDINARY );
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:93   

  20507 10 001405   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001406   050000 713400                    CLIMB   open
        10 001407   410400 401760                    pmme    nvectors=18

      633    20508    8                                 IF F$DCB.DESC.ARCHIVE#

  20508 10 001410   000360 470400 2                  LDP0    DCB$
        10 001411   000005 236100                    LDQ     5,,PR0
        10 001412   001000 316007                    CANQ    512,DL
        10 001413   001433 600000 10                 TZE     s:20524

      634    20509    8                                 THEN
      635    20510    9                                 DO;

      636    20511    9                                     IF DISK_OPTION.INACTIVATE

  20511 10 001414   000000 236000 xsym               LDQ     DISK_OPTION
        10 001415   010000 316003                    CANQ    4096,DU
        10 001416   001426 600000 10                 TZE     s:20519

      637    20512    9                                     THEN
      638    20513   10                                     DO;

      639    20514   10                                         DISK_CLOSE_NEXT.V.EFTOPER.ISTOW# = '1'B;

  20514 10 001417   010000 236007                    LDQ     4096,DL
        10 001420   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      640    20515   10                                        CALL FLI$RPT_ERR(E_ACTIVE_TO_INACTIVE,DCB_NUM)
             20515                                                  ;

  20515 10 001421   000067 630400 11                 EPPR0   55
        10 001422   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001423   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001424   000000 011000                    NOP     0

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:94   
      641    20516   10                                     END;

  20516 10 001425   001532 710000 10                 TRA     s:20561

      642    20517    9                                     ELSE
      643    20518   10                                     DO;

      644    20519   10                                         CALL FLI$RPT_ERR(E_ARCHIVE_ACTIVE,DCB_NUM);

  20519 10 001426   000071 630400 11                 EPPR0   57
        10 001427   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001430   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001431   000000 011000                    NOP     0

      645    20520   10                                     END;

      646    20521    9                                 END;

  20521 10 001432   001532 710000 10                 TRA     s:20561

      647    20522    8                                 ELSE
      648    20523    9                                 DO;/* NOT ARCHIVE */

      649    20524    9                                     DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  20524 10 001433   004000 236007                    LDQ     2048,DL
        10 001434   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      650    20525    9                                     DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;

  20525 10 001435   000005 720100                    LXL0    5,,PR0
        10 001436   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

      651    20526    9                                     DISK_CLOSE_NEXT.V.DESC.QS# = '1'B;

  20526 10 001437   010000 236003                    LDQ     4096,DU
        10 001440   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:95   

      652    20527    9                                     DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '1'B;

  20527 10 001441   001000 236003                    LDQ     512,DU
        10 001442   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      653    20528        /***
      654    20529         *** Set BUF bit (if backup permitted) so that actively archived and QS
      655    20530         *** files are always backed up so that on a packset rebuild these types of
      656    20531         *** files end up in their QS or actively archived states. Inactively archived
      657    20532         *** files get backed up not as a result of the BUF bit being set but as a
      658    20533         *** result of special checks for them when BACKUP executes.
      659    20534         ***/
      660    20535    9                                     CODE3$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

  20535 10 001443   000137 236000 2                  LDQ     FIT_+1
        10 001444   000005 036003                    ADLQ    5,DU
        10 001445   000362 756000 2                  STQ     CODE3$

      661    20536    9                                     CALL XSF$LOCCODP(CODE3$,03)

  20536 10 001446   000073 630400 11                 EPPR0   59
        10 001447   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001450   000000 701000 xent               TSX1    XSF$LOCCODP
        10 001451   001461 702000 10                 TSX2    s:20543

      662    20537    9                                     WHENRETURN
      663    20538   10                                     DO;

      664    20539   10                                         IF CODE03.DESC.BUPM

  20539 10 001452   000362 470400 2                  LDP0    CODE3$
        10 001453   000001 236100                    LDQ     1,,PR0
        10 001454   000400 316003                    CANQ    256,DU
        10 001455   001460 600000 10                 TZE     s:20541

      665    20540   10                                         THEN DISK_CLOSE_NEXT.V.DESC.BUF# = '1'B;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:96   

  20540 10 001456   100000 236003                    LDQ     32768,DU
        10 001457   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      666    20541   10                                     END;

  20541 10 001460   001465 710000 10                 TRA     s:20546

      667    20542   10                                     WHENALTRETURN DO;

      668    20543   10                                         CALL FLI$RPT_ERR(E_NO_CODE3,DCB_NUM);

  20543 10 001461   000075 630400 11                 EPPR0   61
        10 001462   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001463   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001464   000000 011000                    NOP     0

      669    20544   10                                     END;

      670    20545
      671    20546    9                                     IF DISK_OPTION.INACTIVATE

  20546 10 001465   000000 236000 xsym               LDQ     DISK_OPTION
        10 001466   010000 316003                    CANQ    4096,DU
        10 001467   001507 600000 10                 TZE     s:20554

      672    20547    9                                     THEN
      673    20548   10                                     DO;

      674    20549   10                                         DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;

  20549 10 001470   000077 236000 11                 LDQ     63
        10 001471   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      675    20550   10                                         CALL XUR$ERRMSG(E_STOWED_INACT_OK,DCB_NUM,
             20550                                                  DCBNUM(M$LO));

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:97   
  20550 10 001472   000000 236007 xsym               LDQ     M$LO,DL
        10 001473   200012 756100                    STQ     CODE+6,,AUTO
        10 001474   200012 630500                    EPPR0   CODE+6,,AUTO
        10 001475   200015 450500                    STP0    CODE+9,,AUTO
        10 001476   000005 236000 11                 LDQ     5
        10 001477   200014 756100                    STQ     CODE+8,,AUTO
        10 001500   000100 236000 11                 LDQ     64
        10 001501   200013 756100                    STQ     CODE+7,,AUTO
        10 001502   200013 630500                    EPPR0   CODE+7,,AUTO
        10 001503   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001504   000000 701000 xent               TSX1    XUR$ERRMSG
        10 001505   000000 011000                    NOP     0

      676    20551   10                                     END;

  20551 10 001506   001532 710000 10                 TRA     s:20561

      677    20552    9                                     ELSE
      678    20553   10                                     DO;

      679    20554   10                                         DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '1'B;

  20554 10 001507   000100 236003                    LDQ     64,DU
        10 001510   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      680    20555   10                                        CALL XUR$ERRMSG(E_STOWED_ACT_OK,DCB_NUM,DCBNUM
             20555                                                  (M$LO));

  20555 10 001511   000000 236007 xsym               LDQ     M$LO,DL
        10 001512   200012 756100                    STQ     CODE+6,,AUTO
        10 001513   200012 630500                    EPPR0   CODE+6,,AUTO
        10 001514   200015 450500                    STP0    CODE+9,,AUTO
        10 001515   000005 236000 11                 LDQ     5
        10 001516   200014 756100                    STQ     CODE+8,,AUTO
        10 001517   000101 236000 11                 LDQ     65
        10 001520   200013 756100                    STQ     CODE+7,,AUTO
        10 001521   200013 630500                    EPPR0   CODE+7,,AUTO
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:98   
        10 001522   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 001523   000000 701000 xent               TSX1    XUR$ERRMSG
        10 001524   000000 011000                    NOP     0

      681    20556   10                                     END;

      682    20557    9                                 END;  /* Not archive */

      683    20558    8                             END; /* Acct,name,priv */

  20558 10 001525   001532 710000 10                 TRA     s:20561

      684    20559    7                             ELSE
      685    20560    7                             CALL FLI$RPT_ERR(E_STOW_DENIED,DCB_NUM);

  20560 10 001526   000102 630400 11                 EPPR0   66
        10 001527   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001530   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001531   000000 011000                    NOP     0

      686    20561    7                         END; /* Whenreturn CODE04 */

  20561 10 001532   001537 710000 10                 TRA     s:20569

      687    20562    6                         WHENALTRETURN
      688    20563    7                         DO;

      689    20564    7                             CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);

  20564 10 001533   000050 630400 11                 EPPR0   40
        10 001534   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001535   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001536   000000 011000                    NOP     0

      690    20565    7                         END;

      691    20566    6                     END; /* NOT ARCHIVE INACTIVE */
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:99   

      692    20567    5                 END; /* NOT QS */

      693    20568    4             END; /* NOT ERR */

      694    20569    3             CALL FLN$DISK_CLOSE_NEXT(DCB#);

  20569 10 001537   000006 630400 11                 EPPR0   6
        10 001540   000017 631400 xsym               EPPR1   B_VECTNIL+15
        10 001541   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        10 001542   000000 011000                    NOP     0

      695    20570    3         END;/* DO WHILE '1'B */

  20570 10 001543   001121 710000 10                 TRA     s:20389

      696    20571    2   DONE:
      697    20572    2         CALL FLN$DISK_CLOSE_ALL;

  20572 10 001544   000002 631400 xsym  DONE         EPPR1   B_VECTNIL+2
        10 001545   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 001546   000000 011000                    NOP     0

      698    20573    2         IF NOT ANY_FILES_FOUND

  20573 10 001547   000365 234000 2                  SZN     ANY_FILES_FOUND
        10 001550   001553 604000 10                 TMI     COMMON_RETURN

      699    20574    2         THEN CALL PRINT_ERROR;

  20574 10 001551   002427 701000 10                 TSX1    PRINT_ERROR
        10 001552   000000 011000                    NOP     0

  20573 10 001553                       COMMON_RETU* null
      700    20575
      701    20576    2   COMMON_RETURN: ;
      702    20577    2      RETURN;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:100  

  20577 10 001553   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 001554   000001 702211                    TSX2  ! 1,X1

      703    20578
      704    20579    2   END FLB_STOW;
      705    20580        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:101  
      706    20581    1   FLB_UNSTOW : PROC ;

  20581 10 001555   200006 741300       FLB_UNSTOW   STX1  ! CODE+2,,AUTO

      707    20582        /*F*  NAME:  FLB_UNSTOW
      708    20583              PURPOSE:  Perform UNSTOW command which unlocks the specified
      709    20584                        file(s) previously queued for STOW. For any specified
      710    20585                        file not currently queued for STOW, an error message
      711    20586                        is issued.
      712    20587         ***/
      713    20588
      714    20589    3         DO WHILE('1'B);

      715    20590    3             IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#

  20590 10 001556   000000 234000 xsym               SZN     FMSEC
        10 001557   001564 605000 10                 TPL     s:20591
        10 001560   000000 470400 xsym               LDP0    B$JIT$
        10 001561   000020 236100                    LDQ     16,,PR0
        10 001562   000000 376000 9                  ANQ     0
        10 001563   001567 601000 10                 TNZ     s:20592

      716    20591    3             THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unauthor. file access. */

  20591 10 001564   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001565   020013 713400                    CLIMB   8203
        10 001566   400000 401760                    pmme    nvectors=1

      717    20592    3             CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);

  20592 10 001567   000004 630400 11                 EPPR0   4
        10 001570   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 001571   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
        10 001572   002036 702000 10                 TSX2    DONE

      718    20593
      719    20594    3             IF F$DCB.FCD#    /* If DCB not open, a file dir. is being processed */
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:102  

  20594 10 001573   000360 470400 2                  LDP0    DCB$
        10 001574   000031 236100                    LDQ     25,,PR0
        10 001575   020000 316007                    CANQ    8192,DL
        10 001576   001621 600000 10                 TZE     s:20609

      720    20595    3             THEN
      721    20596    4             DO;

      722    20597    4                DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;

  20597 10 001577   000357 720000 2                  LXL0    DCB_NUM
        10 001600   000032 740000 xsym               STX0    DISK_CLOSE_ORDINARY+26

      723    20598    4                CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20598 10 001601   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 001602   050001 713400                    CLIMB   close
        10 001603   406000 401760                    pmme    nvectors=13

      724    20599
      725    20600    4                CALL M$SPRIV( SWITCH_FMSEC );

  20600 10 001604   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001605   020012 713400                    CLIMB   8202
        10 001606   400000 401760                    pmme    nvectors=1

      726    20601    4                DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;

  20601 10 001607   000357 720000 2                  LXL0    DCB_NUM
        10 001610   000044 740000 xsym               STX0    DISK_OPEN_ORDINARY+36

      727    20602    4                DISK_OPEN_ORDINARY.FPARAM_ = FIT_;

  20602 10 001611   000136 237000 2                  LDAQ    FIT_
        10 001612   000030 757000 xsym               STAQ    DISK_OPEN_ORDINARY+24

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:103  
      728    20603    4                CALL M$OPEN( DISK_OPEN_ORDINARY )

  20603 10 001613   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001614   450000 713400                    CLIMB   alt,open
        10 001615   410400 401760                    pmme    nvectors=18
        10 001616   001620 702000 10                 TSX2    s:20607
        10 001617   001620 710000 10                 TRA     s:20607

      729    20604    4                WHENALTRETURN
      730    20605    5                DO;

      731    20606    5                END;

      732    20607    4             END;

  20607 10 001620   001624 710000 10                 TRA     s:20611

      733    20608    3             ELSE
      734    20609    3                CALL M$SPRIV( SWITCH_FMSEC );

  20609 10 001621   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001622   020012 713400                    CLIMB   8202
        10 001623   400000 401760                    pmme    nvectors=1

      735    20610
      736    20611    3             IF BREAK_COUNT > 0

  20611 10 001624   000000 235000 xsym               LDA     BREAK_COUNT
        10 001625   002036 605400 10                 TPNZ    DONE

      737    20612    3             THEN GOTO DONE;
      738    20613    3             IF ERR

  20613 10 001626   000140 236000 2                  LDQ     ERR
        10 001627   001670 600000 10                 TZE     s:20638

      739    20614    3             THEN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:104  
      740    20615    4             DO;

      741    20616    4                 IF ERR.ERR# = %E$ADEOF

  20616 10 001630   000140 236000 2                  LDQ     ERR
        10 001631   377770 376007                    ANQ     131064,DL
        10 001632   001750 116007                    CMPQ    1000,DL
        10 001633   002031 600000 10                 TZE     s:20698

      742    20617    4                 THEN;
      743    20618    4                 ELSE
      744    20619    4                     IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF

  20619 10 001634   001020 116007                    CMPQ    528,DL
        10 001635   002031 600000 10                 TZE     s:20698
        10 001636   001540 116007                    CMPQ    864,DL
        10 001637   002031 600000 10                 TZE     s:20698

      745    20620    4                     THEN;
      746    20621    4                     ELSE
      747    20622    5                     DO;

      748    20623    5                         CALL FLI$RPT_ERR(ERR,DCB_NUM);

  20623 10 001640   000011 630400 11                 EPPR0   9
        10 001641   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001642   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001643   000000 011000                    NOP     0

      749    20624    5                          ANY_FILES_FOUND = '1'B;

  20624 10 001644   400000 236003                    LDQ     -131072,DU
        10 001645   000365 756000 2                  STQ     ANY_FILES_FOUND

      750    20625    5                         IF ERR.ERR# = %E$FILEBUSY

  20625 10 001646   000140 236000 2                  LDQ     ERR
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:105  
        10 001647   377770 376007                    ANQ     131064,DL
        10 001650   001550 116007                    CMPQ    872,DL
        10 001651   001662 600000 10                 TZE     s:20630
        10 001652   001640 116007                    CMPQ    928,DL
        10 001653   001662 600000 10                 TZE     s:20630
        10 001654   001710 116007                    CMPQ    968,DL
        10 001655   001662 600000 10                 TZE     s:20630
        10 001656   001610 116007                    CMPQ    904,DL
        10 001657   001662 600000 10                 TZE     s:20630
        10 001660   002570 116007                    CMPQ    1400,DL
        10 001661   002036 601000 10                 TNZ     DONE

      751    20626    5                          OR ERR.ERR# = %E$NOACCESS
      752    20627    5                          OR ERR.ERR# = %E$JRNLERR
      753    20628    5                          OR ERR.ERR# = %E$NOFILE
      754    20629    5                          OR ERR.ERR# = %E$BADFIT
      755    20630    5                            THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20630 10 001662   000004 236000 xsym               LDQ     FPT_EXIT+4
        10 001663   777000 316003                    CANQ    -512,DU
        10 001664   002031 601000 10                 TNZ     s:20698

      756    20631    5                                 THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20631 10 001665   001000 236003                    LDQ     512,DU
        10 001666   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O
        10 001667   002031 710000 10                 TRA     s:20698

      757    20632    5                                 ELSE;
      758    20633    5                            ELSE GOTO DONE;
      759    20634    5                     END;
      760    20635    4             END;
      761    20636    3             ELSE
      762    20637    4             DO;/* NOT ERR */

      763    20638    4                ANY_FILES_FOUND = '1'B;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:106  
  20638 10 001670   400000 236003                    LDQ     -131072,DU
        10 001671   000365 756000 2                  STQ     ANY_FILES_FOUND

      764    20639    4                IF F$DCB.DESC.QS#

  20639 10 001672   000360 470400 2                  LDP0    DCB$
        10 001673   000005 236100                    LDQ     5,,PR0
        10 001674   010000 316007                    CANQ    4096,DL
        10 001675   002025 600000 10                 TZE     s:20695

      765    20640    4                  THEN
      766    20641    5                  DO;

      767    20642    5                    IF F$DCB.DESC.FETCH#

  20642 10 001676   000010 316007                    CANQ    8,DL
        10 001677   001705 600000 10                 TZE     s:20649

      768    20643    5                      THEN
      769    20644    6                      DO;

      770    20645    6                        CALL FLI$RPT_ERR(E_FETCH_SET,DCB_NUM);

  20645 10 001700   000013 630400 11                 EPPR0   11
        10 001701   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001702   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 001703   000000 011000                    NOP     0

      771    20646    6                      END;

  20646 10 001704   002031 710000 10                 TRA     s:20698

      772    20647    5                      ELSE
      773    20648    6                      DO; /* UNSTOW files */

      774    20649    6                         CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:107  
  20649 10 001705   000137 236000 2                  LDQ     FIT_+1
        10 001706   000005 036003                    ADLQ    5,DU
        10 001707   000361 756000 2                  STQ     CODE4$

      775    20650    6                         CALL XSF$LOCCODP(CODE4$,04)

  20650 10 001710   000041 630400 11                 EPPR0   33
        10 001711   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 001712   000000 701000 xent               TSX1    XSF$LOCCODP
        10 001713   002020 702000 10                 TSX2    s:20689

      776    20651    6                         WHENRETURN
      777    20652    7                         DO;

      778    20653        /***
      779    20654         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      780    20655         *** set in the DCB.
      781    20656         ***/
      782    20657    7                            CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20657 10 001714   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 001715   050001 713400                    CLIMB   close
        10 001716   406000 401760                    pmme    nvectors=13

      783    20658    7                            CALL M$RPRIV( SWITCH_FMSEC );

  20658 10 001717   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001720   020013 713400                    CLIMB   8203
        10 001721   400000 401760                    pmme    nvectors=1

      784    20659    7                            DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;

  20659 10 001722   020000 236007                    LDQ     8192,DL
        10 001723   000044 256000 xsym               ORSQ    DISK_OPEN_ORDINARY+36

      785    20660    7                            CALL M$OPEN( DISK_OPEN_ORDINARY )

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:108  
  20660 10 001724   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001725   450000 713400                    CLIMB   alt,open
        10 001726   410400 401760                    pmme    nvectors=18
        10 001727   001731 702000 10                 TSX2    s:20664
        10 001730   001731 710000 10                 TRA     s:20664

      786    20661    7                            WHENALTRETURN
      787    20662    8                            DO;

      788    20663    8                            END;

      789    20664    7                            DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;

  20664 10 001731   000000 236000 11                 LDQ     0
        10 001732   000044 356000 xsym               ANSQ    DISK_OPEN_ORDINARY+36

      790    20665    7                            CALL M$SPRIV( SWITCH_FMSEC );

  20665 10 001733   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 001734   020012 713400                    CLIMB   8202
        10 001735   400000 401760                    pmme    nvectors=1

      791    20666
      792    20667    7                           IF (FMSEC)

  20667 10 001736   000000 234000 xsym               SZN     FMSEC
        10 001737   001756 604000 10                 TMI     s:20673
        10 001740   000000 470400 xsym               LDP0    B$JIT$
        10 001741   000361 471400 2                  LDP1    CODE4$
        10 001742   040100 106500                    CMPC    fill='040'O
        10 001743   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 001744   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
        10 001745   001752 601000 10                 TNZ     s:20667+12
        10 001746   040100 106500                    CMPC    fill='040'O
        10 001747   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
        10 001750   100005 000014                    ADSC9   5,,PR1                   cn=0,n=12
        10 001751   001756 600000 10                 TZE     s:20673
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:109  
        10 001752   000360 473400 2                  LDP3    DCB$
        10 001753   300057 236100                    LDQ     47,,PR3
        10 001754   020000 316007                    CANQ    8192,DL
        10 001755   002013 600000 10                 TZE     s:20684

      793    20668    7                             OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      794    20669    7                             AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      795    20670    7                             OR (F$DCB.AUTHFFLG.DELF#)
      796    20671    7                              THEN
      797    20672    8                              DO;/* PRIV,ACCT,NAME */

      798    20673    8                                 CALL M$OPEN( DISK_OPEN_ORDINARY );

  20673 10 001756   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 001757   050000 713400                    CLIMB   open
        10 001760   410400 401760                    pmme    nvectors=18

      799    20674    8                                 DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  20674 10 001761   004000 236007                    LDQ     2048,DL
        10 001762   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      800    20675    8                                 DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;

  20675 10 001763   000360 470400 2                  LDP0    DCB$
        10 001764   000005 720100                    LXL0    5,,PR0
        10 001765   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

      801    20676    8                                 DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;

  20676 10 001766   000077 236000 11                 LDQ     63
        10 001767   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      802    20677    8                                 DISK_CLOSE_NEXT.V.DESC.QS# = '0'B;

  20677 10 001770   000043 236000 11                 LDQ     35
        10 001771   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:110  

      803    20678    8                                 DISK_CLOSE_NEXT.V.DESC.FETCH# = '0'B;

  20678 10 001772   000044 236000 11                 LDQ     36
        10 001773   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      804    20679    8                                 DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '0'B;

  20679 10 001774   000104 236000 11                 LDQ     68
        10 001775   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      805    20680    8                                 CALL XUR$ERRMSG(E_UNSTOW_OK,DCB_NUM,DCBNUM(M$LO));

  20680 10 001776   000000 236007 xsym               LDQ     M$LO,DL
        10 001777   200012 756100                    STQ     CODE+6,,AUTO
        10 002000   200012 631500                    EPPR1   CODE+6,,AUTO
        10 002001   200015 451500                    STP1    CODE+9,,AUTO
        10 002002   000005 236000 11                 LDQ     5
        10 002003   200014 756100                    STQ     CODE+8,,AUTO
        10 002004   000105 236000 11                 LDQ     69
        10 002005   200013 756100                    STQ     CODE+7,,AUTO
        10 002006   200013 630500                    EPPR0   CODE+7,,AUTO
        10 002007   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 002010   000000 701000 xent               TSX1    XUR$ERRMSG
        10 002011   000000 011000                    NOP     0

      806    20681    8                               END;

  20681 10 002012   002017 710000 10                 TRA     s:20686

      807    20682    7                                ELSE
      808    20683    8                                DO;

      809    20684    8                                  CALL FLI$RPT_ERR(E_UNSTOW_DENIED,DCB_NUM);

  20684 10 002013   000106 630400 11                 EPPR0   70
        10 002014   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:111  
        10 002015   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002016   000000 011000                    NOP     0

      810    20685    8                                END;

      811    20686    7                         END; /* Whenreturn CODE04 */

  20686 10 002017   002024 710000 10                 TRA     s:20692

      812    20687    6                         WHENALTRETURN
      813    20688    7                         DO;

      814    20689    7                           CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);

  20689 10 002020   000050 630400 11                 EPPR0   40
        10 002021   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002022   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002023   000000 011000                    NOP     0

      815    20690    7                         END;

      816    20691    6                       END; /* UNSTOW files */

      817    20692    5                  END; /* QS files */

  20692 10 002024   002031 710000 10                 TRA     s:20698

      818    20693    4                  ELSE
      819    20694    5                  DO;

      820    20695    5                     CALL FLI$RPT_ERR(E_NOT_STOWED,DCB_NUM);

  20695 10 002025   000110 630400 11                 EPPR0   72
        10 002026   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002027   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002030   000000 011000                    NOP     0

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:112  
      821    20696    5                  END;

      822    20697    4             END; /* Not err */

      823    20698    3             CALL FLN$DISK_CLOSE_NEXT(DCB#);

  20698 10 002031   000006 630400 11                 EPPR0   6
        10 002032   000017 631400 xsym               EPPR1   B_VECTNIL+15
        10 002033   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        10 002034   000000 011000                    NOP     0

      824    20699    3         END; /* DO WHILE '1'B */

  20699 10 002035   001556 710000 10                 TRA     s:20590

      825    20700    2   DONE:
      826    20701    2         CALL FLN$DISK_CLOSE_ALL;

  20701 10 002036   000002 631400 xsym  DONE         EPPR1   B_VECTNIL+2
        10 002037   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 002040   000000 011000                    NOP     0

      827    20702    2         IF NOT ANY_FILES_FOUND

  20702 10 002041   000365 234000 2                  SZN     ANY_FILES_FOUND
        10 002042   002045 604000 10                 TMI     s:20704

      828    20703    2            THEN CALL PRINT_ERROR;

  20703 10 002043   002427 701000 10                 TSX1    PRINT_ERROR
        10 002044   000000 011000                    NOP     0

      829    20704    2   RETURN;

  20704 10 002045   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 002046   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:113  
      830    20705
      831    20706    2   END FLB_UNSTOW;
      832    20707        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:114  
      833    20708    1   FLB_UNARCHIVE : PROC ;

  20708 10 002047   200006 741300       FLB_UNARCHI* STX1  ! CODE+2,,AUTO

      834    20709        /*F*   NAME:  FLB_UNARCHIVE
      835    20710               PURPOSE: Perform UNARCHIVE command which removes the specified
      836    20711                        file(s) from the archive system.
      837    20712         ***/
      838    20713
      839    20714    3           DO WHILE('1'B);

      840    20715    3             IF NOT FMSEC OR NOT B$JIT.PPRIV & %PPR_EFT#

  20715 10 002050   000000 234000 xsym               SZN     FMSEC
        10 002051   002056 605000 10                 TPL     s:20716
        10 002052   000000 470400 xsym               LDP0    B$JIT$
        10 002053   000020 236100                    LDQ     16,,PR0
        10 002054   000000 376000 9                  ANQ     0
        10 002055   002061 601000 10                 TNZ     s:20717

      841    20716    3             THEN CALL M$RPRIV( SWITCH_FMSEC ); /* Prevent unauthor. file access. */

  20716 10 002056   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 002057   020013 713400                    CLIMB   8203
        10 002060   400000 401760                    pmme    nvectors=1

      842    20717    3             CALL FLN$DISK_OPEN_NEXT(DCB$,DCB_NUM,DCB#,FIT_,ERR) ALTRET(DONE);

  20717 10 002061   000004 630400 11                 EPPR0   4
        10 002062   000023 631400 xsym               EPPR1   B_VECTNIL+19
        10 002063   000000 701000 xent               TSX1    FLN$DISK_OPEN_NEXT
        10 002064   002416 702000 10                 TSX2    DONE

      843    20718
      844    20719    3             IF F$DCB.FCD#    /* If DCB not open, a file dir. is being processed */

  20719 10 002065   000360 470400 2                  LDP0    DCB$
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:115  
        10 002066   000031 236100                    LDQ     25,,PR0
        10 002067   020000 316007                    CANQ    8192,DL
        10 002070   002113 600000 10                 TZE     s:20734

      845    20720    3             THEN
      846    20721    4             DO;

      847    20722    4                DISK_CLOSE_ORDINARY.V.DCB# = DCB_NUM;

  20722 10 002071   000357 720000 2                  LXL0    DCB_NUM
        10 002072   000032 740000 xsym               STX0    DISK_CLOSE_ORDINARY+26

      848    20723    4                CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20723 10 002073   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 002074   050001 713400                    CLIMB   close
        10 002075   406000 401760                    pmme    nvectors=13

      849    20724
      850    20725    4                CALL M$SPRIV( SWITCH_FMSEC );

  20725 10 002076   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 002077   020012 713400                    CLIMB   8202
        10 002100   400000 401760                    pmme    nvectors=1

      851    20726    4                DISK_OPEN_ORDINARY.V.DCB# = DCB_NUM;

  20726 10 002101   000357 720000 2                  LXL0    DCB_NUM
        10 002102   000044 740000 xsym               STX0    DISK_OPEN_ORDINARY+36

      852    20727    4                DISK_OPEN_ORDINARY.FPARAM_ = FIT_;

  20727 10 002103   000136 237000 2                  LDAQ    FIT_
        10 002104   000030 757000 xsym               STAQ    DISK_OPEN_ORDINARY+24

      853    20728    4                CALL M$OPEN( DISK_OPEN_ORDINARY )

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:116  
  20728 10 002105   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 002106   450000 713400                    CLIMB   alt,open
        10 002107   410400 401760                    pmme    nvectors=18
        10 002110   002112 702000 10                 TSX2    s:20732
        10 002111   002112 710000 10                 TRA     s:20732

      854    20729    4                WHENALTRETURN
      855    20730    5                DO;

      856    20731    5                END;

      857    20732    4             END;

  20732 10 002112   002116 710000 10                 TRA     s:20736

      858    20733    3             ELSE
      859    20734    3                CALL M$SPRIV( SWITCH_FMSEC );

  20734 10 002113   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 002114   020012 713400                    CLIMB   8202
        10 002115   400000 401760                    pmme    nvectors=1

      860    20735
      861    20736    3              IF BREAK_COUNT > 0

  20736 10 002116   000000 235000 xsym               LDA     BREAK_COUNT
        10 002117   002416 605400 10                 TPNZ    DONE

      862    20737    3              THEN GOTO DONE;
      863    20738    3              IF ERR

  20738 10 002120   000140 236000 2                  LDQ     ERR
        10 002121   002162 600000 10                 TZE     s:20763

      864    20739    3              THEN
      865    20740    4              DO;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:117  
      866    20741    4                 IF ERR.ERR# = %E$ADEOF

  20741 10 002122   000140 236000 2                  LDQ     ERR
        10 002123   377770 376007                    ANQ     131064,DL
        10 002124   001750 116007                    CMPQ    1000,DL
        10 002125   002407 600000 10                 TZE     s:20860

      867    20742    4                 THEN;
      868    20743    4                 ELSE
      869    20744    4                    IF ERR.ERR# = %E$NOKEY OR ERR.ERR# = %E$FDEOF

  20744 10 002126   001020 116007                    CMPQ    528,DL
        10 002127   002407 600000 10                 TZE     s:20860
        10 002130   001540 116007                    CMPQ    864,DL
        10 002131   002407 600000 10                 TZE     s:20860

      870    20745    4                    THEN;
      871    20746    4                    ELSE
      872    20747    5                    DO;

      873    20748    5                       CALL FLI$RPT_ERR(ERR,DCB_NUM);

  20748 10 002132   000011 630400 11                 EPPR0   9
        10 002133   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002134   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002135   000000 011000                    NOP     0

      874    20749    5                       ANY_FILES_FOUND = '1'B;

  20749 10 002136   400000 236003                    LDQ     -131072,DU
        10 002137   000365 756000 2                  STQ     ANY_FILES_FOUND

      875    20750    5                       IF ERR.ERR# = %E$FILEBUSY

  20750 10 002140   000140 236000 2                  LDQ     ERR
        10 002141   377770 376007                    ANQ     131064,DL
        10 002142   001550 116007                    CMPQ    872,DL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:118  
        10 002143   002154 600000 10                 TZE     s:20755
        10 002144   001640 116007                    CMPQ    928,DL
        10 002145   002154 600000 10                 TZE     s:20755
        10 002146   001710 116007                    CMPQ    968,DL
        10 002147   002154 600000 10                 TZE     s:20755
        10 002150   001610 116007                    CMPQ    904,DL
        10 002151   002154 600000 10                 TZE     s:20755
        10 002152   002570 116007                    CMPQ    1400,DL
        10 002153   002416 601000 10                 TNZ     DONE

      876    20751    5                         OR ERR.ERR# = %E$NOACCESS
      877    20752    5                         OR ERR.ERR# = %E$JRNLERR
      878    20753    5                         OR ERR.ERR# = %E$NOFILE
      879    20754    5                         OR ERR.ERR# = %E$BADFIT
      880    20755    5                       THEN IF FPT_EXIT.V.STEPCC# < %MINOR_ERROR

  20755 10 002154   000004 236000 xsym               LDQ     FPT_EXIT+4
        10 002155   777000 316003                    CANQ    -512,DU
        10 002156   002407 601000 10                 TNZ     s:20860

      881    20756    5                            THEN FPT_EXIT.V.STEPCC# = %MINOR_ERROR;

  20756 10 002157   001000 236003                    LDQ     512,DU
        10 002160   000004 552040 xsym               STBQ    FPT_EXIT+4,'40'O
        10 002161   002407 710000 10                 TRA     s:20860

      882    20757    5                            ELSE;
      883    20758    5                       ELSE GOTO DONE;
      884    20759    5                       END;
      885    20760    4                 END;
      886    20761    3              ELSE
      887    20762    4              DO;

      888    20763    4                  ANY_FILES_FOUND = '1'B;

  20763 10 002162   400000 236003                    LDQ     -131072,DU
        10 002163   000365 756000 2                  STQ     ANY_FILES_FOUND
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:119  

      889    20764    4                 IF F$DCB.DESC.ARCHIVE# AND (NOT F$DCB.DESC.QS#)

  20764 10 002164   000360 470400 2                  LDP0    DCB$
        10 002165   000005 236100                    LDQ     5,,PR0
        10 002166   001000 316007                    CANQ    512,DL
        10 002167   002363 600000 10                 TZE     s:20849
        10 002170   010000 316007                    CANQ    4096,DL
        10 002171   002363 601000 10                 TNZ     s:20849

      890    20765    4                 THEN
      891    20766    5                 DO;

      892    20767    5                    IF F$DCB.DESC.DELF#

  20767 10 002172   400000 316007                    CANQ    -131072,DL
        10 002173   002206 600000 10                 TZE     s:20782

      893    20768    5                    THEN
      894    20769    6                    DO;                    /* ARCHIVE INACTIVE                   */

      895    20770    6                       IF FMSEC

  20770 10 002174   000000 234000 xsym               SZN     FMSEC
        10 002175   002201 605000 10                 TPL     s:20777

      896    20771    6                       THEN
      897    20772    7                       DO;

      898    20773    7                             DISK_CLOSE_NEXT.V.EFTOPER.DELFDE# = '1'B;

  20773 10 002176   002000 236007                    LDQ     1024,DL
        10 002177   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      899    20774    7                       END;

  20774 10 002200   002407 710000 10                 TRA     s:20860
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:120  

      900    20775    6                       ELSE
      901    20776    7                       DO;

      902    20777    7                          CALL FLI$RPT_ERR(E_FETCH_FIRST,DCB_NUM);

  20777 10 002201   000112 630400 11                 EPPR0   74
        10 002202   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002203   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002204   000000 011000                    NOP     0

      903    20778    7                          END;

      904    20779    6                       END;                /* ARCHIVE INACTIVE                   */

  20779 10 002205   002407 710000 10                 TRA     s:20860

      905    20780    5                    ELSE
      906    20781    6                    DO;                    /*ARCHIVE ACTIVE                      */

      907    20782    6                       CODE4$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

  20782 10 002206   000137 236000 2                  LDQ     FIT_+1
        10 002207   000005 036003                    ADLQ    5,DU
        10 002210   000361 756000 2                  STQ     CODE4$

      908    20783    6                       CALL XSF$LOCCODP(CODE4$,04)

  20783 10 002211   000041 630400 11                 EPPR0   33
        10 002212   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002213   000000 701000 xent               TSX1    XSF$LOCCODP
        10 002214   002356 702000 10                 TSX2    s:20843

      909    20784    6                       WHENRETURN
      910    20785    7                       DO;

      911    20786        /***
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:121  
      912    20787         *** Must open in test mode and FMSEC reset in order for AUTHFFLG info. to get
      913    20788         *** set in the DCB.
      914    20789         ***/
      915    20790    7                          CALL M$CLOSE( DISK_CLOSE_ORDINARY );

  20790 10 002215   000000 630400 xsym               EPPR0   DISK_CLOSE_ORDINARY
        10 002216   050001 713400                    CLIMB   close
        10 002217   406000 401760                    pmme    nvectors=13

      916    20791    7                          CALL M$RPRIV( SWITCH_FMSEC );

  20791 10 002220   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 002221   020013 713400                    CLIMB   8203
        10 002222   400000 401760                    pmme    nvectors=1

      917    20792    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '1'B;

  20792 10 002223   020000 236007                    LDQ     8192,DL
        10 002224   000044 256000 xsym               ORSQ    DISK_OPEN_ORDINARY+36

      918    20793    7                          CALL M$OPEN( DISK_OPEN_ORDINARY )

  20793 10 002225   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
        10 002226   450000 713400                    CLIMB   alt,open
        10 002227   410400 401760                    pmme    nvectors=18
        10 002230   002232 702000 10                 TSX2    s:20797
        10 002231   002232 710000 10                 TRA     s:20797

      919    20794    7                          WHENALTRETURN
      920    20795    8                          DO;

      921    20796    8                          END;

      922    20797    7                          DISK_OPEN_ORDINARY.V.OPER.TEST# = '0'B;

  20797 10 002232   000000 236000 11                 LDQ     0
        10 002233   000044 356000 xsym               ANSQ    DISK_OPEN_ORDINARY+36
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:122  

      923    20798    7                          CALL M$SPRIV( SWITCH_FMSEC );

  20798 10 002234   000326 630400 2                  EPPR0   SWITCH_FMSEC
        10 002235   020012 713400                    CLIMB   8202
        10 002236   400000 401760                    pmme    nvectors=1

      924    20799
      925    20800    7                          IF (B$JIT.PRIV.JOB & %PR_FMSEC#)

  20800 10 002237   000000 470400 xsym               LDP0    B$JIT$
        10 002240   000015 236100                    LDQ     13,,PR0
        10 002241   000000 376000 9                  ANQ     0
        10 002242   002260 601000 10                 TNZ     s:20806
        10 002243   000361 471400 2                  LDP1    CODE4$
        10 002244   040100 106500                    CMPC    fill='040'O
        10 002245   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        10 002246   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
        10 002247   002254 601000 10                 TNZ     s:20800+13
        10 002250   040100 106500                    CMPC    fill='040'O
        10 002251   000003 000014                    ADSC9   3,,PR0                   cn=0,n=12
        10 002252   100005 000014                    ADSC9   5,,PR1                   cn=0,n=12
        10 002253   002260 600000 10                 TZE     s:20806
        10 002254   000360 473400 2                  LDP3    DCB$
        10 002255   300057 236100                    LDQ     47,,PR3
        10 002256   020000 316007                    CANQ    8192,DL
        10 002257   002351 600000 10                 TZE     s:20838

      926    20801    7                            OR (B$JIT.ACCN = CODE04.CREATOR.ACCT
      927    20802    7                            AND B$JIT.UNAME = CODE04.CREATOR.NAME)
      928    20803    7                            OR (F$DCB.AUTHFFLG.DELF#)
      929    20804    7                          THEN
      930    20805    8                          DO;

      931    20806    8                             CALL M$OPEN( DISK_OPEN_ORDINARY );

  20806 10 002260   000000 630400 xsym               EPPR0   DISK_OPEN_ORDINARY
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:123  
        10 002261   050000 713400                    CLIMB   open
        10 002262   410400 401760                    pmme    nvectors=18

      932    20807        /***
      933    20808         *** Delete stow information(CODE06) so user does not think file is still stowed.
      934    20809         *** CODE06 is deleted from the FIT by resetting NDW in CODE06's header
      935    20810         *** to 0 and resetting the CODE06 data.
      936    20811         *** NOTE: File management expects M$CLOSE's IFPARAM_ vector to frame buffer
      937    20812         *** starting at word 5(not at word 0).
      938    20813         ***/
      939    20814    8                             FIT$ = PINCRW(FIT_.PTR$,SIZEW(FM$GRAN));

  20814 10 002263   000137 236000 2                  LDQ     FIT_+1
        10 002264   000005 036003                    ADLQ    5,DU
        10 002265   000364 756000 2                  STQ     FIT$

      940    20815    8                             CODE6$ = FIT$;

  20815 10 002266   000363 756000 2                  STQ     CODE6$

      941    20816    8                             CODE = 6;

  20816 10 002267   000006 235007                    LDA     6,DL
        10 002270   200004 755100                    STA     CODE,,AUTO

      942    20817    8                             CALL XSF$LOCCODE(CODE6$,CODE)

  20817 10 002271   200004 630500                    EPPR0   CODE,,AUTO
        10 002272   200013 450500                    STP0    CODE+7,,AUTO
        10 002273   000022 236000 11                 LDQ     18
        10 002274   200012 756100                    STQ     CODE+6,,AUTO
        10 002275   200012 630500                    EPPR0   CODE+6,,AUTO
        10 002276   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002277   000000 701000 xent               TSX1    XSF$LOCCODE
        10 002300   002306 702000 10                 TSX2    s:20824

      943    20818    8                             WHENRETURN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:124  
      944    20819    9                             DO;

      945    20820    9                                FM$FIT.CODES.NDW(CODE) = 0;

  20820 10 002301   000364 470400 2                  LDP0    FIT$
        10 002302   200004 720100                    LXL0    CODE,,AUTO
        10 002303   000114 236000 11                 LDQ     76
        10 002304   000000 356110                    ANSQ    0,X0,PR0

      946    20821    9                             END;

  20821 10 002305   002312 710000 10                 TRA     s:20826

      947    20822    8                             WHENALTRETURN
      948    20823    9                             DO;

      949    20824    9                                CALL FLI$RPT_ERR(E_NO_CODE6,DCB_NUM);

  20824 10 002306   000031 630400 11                 EPPR0   25
        10 002307   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002310   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002311   000000 011000                    NOP     0

      950    20825    9                             END;

      951    20826    8                             DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC# = '1'B;

  20826 10 002312   004000 236007                    LDQ     2048,DL
        10 002313   000032 256000 xsym               ORSQ    DISK_CLOSE_NEXT+26

      952    20827    8                             DISK_CLOSE_NEXT.V.DESC = F$DCB.DESC;

  20827 10 002314   000360 470400 2                  LDP0    DCB$
        10 002315   000005 720100                    LXL0    5,,PR0
        10 002316   000033 740000 xsym               STX0    DISK_CLOSE_NEXT+27

      953    20828    8                             DISK_CLOSE_NEXT.V.DESC.ARCHIVE# = '0'B;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:125  

  20828 10 002317   000104 236000 11                 LDQ     68
        10 002320   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      954    20829    8                             DISK_CLOSE_NEXT.V.DESC.QS# = '0'B;

  20829 10 002321   000043 236000 11                 LDQ     35
        10 002322   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      955    20830    8                             DISK_CLOSE_NEXT.V.DESC.FETCH# = '0'B;

  20830 10 002323   000044 236000 11                 LDQ     36
        10 002324   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      956    20831    8                             DISK_CLOSE_NEXT.V.DESC.ACTIVE# = '0'B;

  20831 10 002325   000077 236000 11                 LDQ     63
        10 002326   000033 356000 xsym               ANSQ    DISK_CLOSE_NEXT+27

      957    20832    8                             DISK_CLOSE_NEXT.V.DESC.TERMINATE# = '1'B;

  20832 10 002327   000020 236003                    LDQ     16,DU
        10 002330   000033 256000 xsym               ORSQ    DISK_CLOSE_NEXT+27

      958    20833    8                             DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(FIT$->IFPARAM_BUF);

  20833 10 002331   000115 235000 11                 LDA     77
        10 002332   000364 236000 2                  LDQ     FIT$
        10 002333   000026 757000 xsym               STAQ    DISK_CLOSE_NEXT+22

      959    20834    8                             CALL XUR$ERRMSG(E_UNARCHIVE_DONE,DCB_NUM,DCBNUM(M$LO));

  20834 10 002334   000000 236007 xsym               LDQ     M$LO,DL
        10 002335   200012 756100                    STQ     CODE+6,,AUTO
        10 002336   200012 631500                    EPPR1   CODE+6,,AUTO
        10 002337   200015 451500                    STP1    CODE+9,,AUTO
        10 002340   000005 236000 11                 LDQ     5
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:126  
        10 002341   200014 756100                    STQ     CODE+8,,AUTO
        10 002342   000116 236000 11                 LDQ     78
        10 002343   200013 756100                    STQ     CODE+7,,AUTO
        10 002344   200013 630500                    EPPR0   CODE+7,,AUTO
        10 002345   000021 631400 xsym               EPPR1   B_VECTNIL+17
        10 002346   000000 701000 xent               TSX1    XUR$ERRMSG
        10 002347   000000 011000                    NOP     0

      960    20835    8                             END;

  20835 10 002350   002355 710000 10                 TRA     s:20840

      961    20836    7                          ELSE
      962    20837    8                          DO;

      963    20838    8                             CALL FLI$RPT_ERR(E_UNARCHIVE_DENIED,DCB_NUM);

  20838 10 002351   000117 630400 11                 EPPR0   79
        10 002352   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002353   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002354   000000 011000                    NOP     0

      964    20839    8                             END;

      965    20840    7                          END;             /* WHENRETURN CODE04*/

  20840 10 002355   002362 710000 10                 TRA     s:20846

      966    20841    6                       WHENALTRETURN
      967    20842    7                       DO;

      968    20843    7                          CALL FLI$RPT_ERR(E_NO_CODE4,DCB_NUM);

  20843 10 002356   000050 630400 11                 EPPR0   40
        10 002357   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002360   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002361   000000 011000                    NOP     0
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:127  

      969    20844    7                          END;

      970    20845    6                       END;                /* ARCHIVE ACTIVE*/

      971    20846    5                    END;                   /* ARCHIVE FILE*/

  20846 10 002362   002407 710000 10                 TRA     s:20860

      972    20847    4                 ELSE
      973    20848    5                 DO;

      974    20849    5                    IF NOT F$DCB.DESC.ARCHIVE#              /* Is file archived? */

  20849 10 002363   001000 316007                    CANQ    512,DL
        10 002364   002372 601000 10                 TNZ     s:20853

      975    20850    5                    THEN CALL FLI$RPT_ERR(E_NOT_ARCHIVE,DCB_NUM);

  20850 10 002365   000037 630400 11                 EPPR0   31
        10 002366   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002367   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002370   000000 011000                    NOP     0
        10 002371   002407 710000 10                 TRA     s:20860

      976    20851    5                    ELSE
      977    20852    6                    DO;

      978    20853    6                       IF F$DCB.DESC.QS#

  20853 10 002372   010000 316007                    CANQ    4096,DL
        10 002373   002403 600000 10                 TZE     s:20856
        10 002374   000010 316007                    CANQ    8,DL
        10 002375   002403 601000 10                 TNZ     s:20856

      979    20854    6                         AND NOT F$DCB.DESC.FETCH# /* Queued for archiving state? */
      980    20855    6                       THEN CALL FLI$RPT_ERR(E_NOT_ARCHIVE_UNSTOW,DCB_NUM);
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:128  

  20855 10 002376   000121 630400 11                 EPPR0   81
        10 002377   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002400   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002401   000000 011000                    NOP     0
        10 002402   002407 710000 10                 TRA     s:20860

      981    20856    6                       ELSE CALL FLI$RPT_ERR(E_RETRIEVE_FIRST,DCB_NUM); /* QF state */

  20856 10 002403   000123 630400 11                 EPPR0   83
        10 002404   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002405   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002406   000000 011000                    NOP     0

      982    20857    6                       END;

      983    20858    5                    END;

      984    20859    4                 END;                      /* NOT ERR*/

      985    20860    3              CALL FLN$DISK_CLOSE_NEXT(DCB#);

  20860 10 002407   000006 630400 11                 EPPR0   6
        10 002410   000017 631400 xsym               EPPR1   B_VECTNIL+15
        10 002411   000000 701000 xent               TSX1    FLN$DISK_CLOSE_NEXT
        10 002412   000000 011000                    NOP     0

      986    20861    3              DISK_CLOSE_NEXT.IFPARAM_ = VECTOR(NIL);

  20861 10 002413   000002 237000 11                 LDAQ    2
        10 002414   000026 757000 xsym               STAQ    DISK_CLOSE_NEXT+22

      987    20862    3              END;                         /* DO WHILE '1'B                      */

  20862 10 002415   002050 710000 10                 TRA     s:20715

      988    20863    2   DONE:
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:129  
      989    20864    2           CALL FLN$DISK_CLOSE_ALL;

  20864 10 002416   000002 631400 xsym  DONE         EPPR1   B_VECTNIL+2
        10 002417   000000 701000 xent               TSX1    FLN$DISK_CLOSE_ALL
        10 002420   000000 011000                    NOP     0

      990    20865    2           IF NOT ANY_FILES_FOUND

  20865 10 002421   000365 234000 2                  SZN     ANY_FILES_FOUND
        10 002422   002425 604000 10                 TMI     s:20867

      991    20866    2           THEN CALL PRINT_ERROR;

  20866 10 002423   002427 701000 10                 TSX1    PRINT_ERROR
        10 002424   000000 011000                    NOP     0

      992    20867    2   RETURN;

  20867 10 002425   200006 221300                    LDX1  ! CODE+2,,AUTO
        10 002426   000001 702211                    TSX2  ! 1,X1

      993    20868
      994    20869    2   END FLB_UNARCHIVE;
      995    20870        %EJECT;
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:130  
      996    20871    1   PRINT_ERROR : PROC ;

  20871 10 002427   200010 741300       PRINT_ERROR  STX1  ! CODE+4,,AUTO

      997    20872        /* Determine why a file could not be found and print the error message. */
      998    20873
      999    20874    2         DISK_NAME.NAME# = DISK_FILE_SPEC.SPEC.START.FILE.NAME#(0);

  20874 10 002430   000000 470400 xsym               LDP0    DISK_FILE_SPEC$
        10 002431   040000 100500                    MLR     fill='040'O
        10 002432   000010 000037                    ADSC9   8,,PR0                   cn=0,n=31
        10 002433   000000 200037 xsym               ADSC9   DISK_NAME                cn=1,n=31

     1000    20875    2         DISK_NAME.L# = DISK_FILE_SPEC.SPEC.START.FILE.L#(0);

  20875 10 002434   000017 236100                    LDQ     15,,PR0
        10 002435   000033 736000                    QLS     27
        10 002436   000000 552040 xsym               STBQ    DISK_NAME,'40'O

     1001    20876    2         DISK_ACCT = DISK_FILE_SPEC.SPEC.START.ACCT(0);

  20876 10 002437   000000 100500                    MLR     fill='000'O
        10 002440   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
        10 002441   000000 000010 xsym               ADSC9   DISK_ACCT                cn=0,n=8

     1002    20877    2         IF DISK_FILE_SPEC.PASSWORD_SPEC

  20877 10 002442   000002 234100                    SZN     2,,PR0
        10 002443   002452 605000 10                 TPL     s:20884

     1003    20878    2         THEN
     1004    20879    3         DO;

     1005    20880    3            DISK_PASS.PASS# = DISK_FILE_SPEC.PASSWORD#;

  20880 10 002444   040000 100500                    MLR     fill='040'O
        10 002445   000002 200010                    ADSC9   2,,PR0                   cn=1,n=8
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:131  
        10 002446   000000 000010 xsym               ADSC9   DISK_PASS                cn=0,n=8

     1006    20881    3            DISK_OPEN_NEXT.PASS_ = VECTOR(DISK_PASS);

  20881 10 002447   000126 237000 11                 LDAQ    86
        10 002450   000010 757000 xsym               STAQ    DISK_OPEN_NEXT+8

     1007    20882    3         END;

  20882 10 002451   002454 710000 10                 TRA     s:20885

     1008    20883    2         ELSE
     1009    20884    2            DISK_OPEN_NEXT.PASS_ = VECTOR(NIL);

  20884 10 002452   000002 237000 11                 LDAQ    2
        10 002453   000010 757000 xsym               STAQ    DISK_OPEN_NEXT+8

     1010    20885    2         CALL M$OPEN( SPECD_FILE )                        /* Perform a test open */

  20885 10 002454   000234 630400 2                  EPPR0   SPECD_FILE
        10 002455   450000 713400                    CLIMB   alt,open
        10 002456   410400 401760                    pmme    nvectors=18
        10 002457   002502 702000 10                 TSX2    s:20895

     1011    20886    2         WHENRETURN
     1012    20887    3         DO;

     1013    20888    4            DO CASE ( COMMAND );

  20888 10 002460   200003 470500                    LDP0    @COMMAND,,AUTO
        10 002461   000000 235100                    LDA     0,,PR0
        10 002462   000026 135007                    SBLA    22,DL
        10 002463   000001 115007                    CMPA    1,DL
        10 002464   002466 602005 10                 TNC     s:20888+6,AL
        10 002465   002501 710000 10                 TRA     s:20892
        10 002466   002467 710000 10                 TRA     s:20890

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:132  
     1014    20889    4              CASE ( %UNARCHIVE );

     1015    20890    4                  CALL FLI$RPT_ERR ( E_NOT_ARCHIVE,DCBNUM(M$DISK00));

  20890 10 002467   000000 236007 xsym               LDQ     M$DISK00,DL
        10 002470   200012 756100                    STQ     CODE+6,,AUTO
        10 002471   200012 631500                    EPPR1   CODE+6,,AUTO
        10 002472   200015 451500                    STP1    CODE+9,,AUTO
        10 002473   000037 236000 11                 LDQ     31
        10 002474   200014 756100                    STQ     CODE+8,,AUTO
        10 002475   200014 630500                    EPPR0   CODE+8,,AUTO
        10 002476   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002477   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002500   000000 011000                    NOP     0

     1016    20891    4            END;

     1017    20892    3         END;

  20892 10 002501   002514 710000 10                 TRA     s:20897

     1018    20893    2         WHENALTRETURN
     1019    20894    3         DO;

     1020    20895    3            CALL FLI$RPT_ERR ( ,DCBNUM(M$DISK00)); /* File probably doesn' exist */

  20895 10 002502   000000 236007 xsym               LDQ     M$DISK00,DL
        10 002503   200012 756100                    STQ     CODE+6,,AUTO
        10 002504   200012 630500                    EPPR0   CODE+6,,AUTO
        10 002505   200015 450500                    STP0    CODE+9,,AUTO
        10 002506   000001 236000 xsym               LDQ     B_VECTNIL+1
        10 002507   200014 756100                    STQ     CODE+8,,AUTO
        10 002510   200014 630500                    EPPR0   CODE+8,,AUTO
        10 002511   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 002512   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002513   000000 011000                    NOP     0

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:133  
     1021    20896    3         END;

     1022    20897    2         RETURN;

  20897 10 002514   200010 221300                    LDX1  ! CODE+4,,AUTO
        10 002515   000001 702211                    TSX2  ! 1,X1
     1023    20898    2   END PRINT_ERROR;
     1024    20899    1   END FLS$STOW_FETCH;
     1025    20900        %EOD;

PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:134  
--  Include file information  --

   XUR_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FLN_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLS$STOW_FETCH.
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:135  

 **** Variables and constants ****

  ****  Section 002  Data  FLS$STOW_FETCH

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   365-0-0/b BIT         r     1 ANY_FILES_FOUND          100-0-0/d STRC(1080)  r     1 CLOSE_BLOCK_FILE
   367-0-0/w PTR         r     1 CODE14$                  362-0-0/w PTR         r     1 CODE3$
   361-0-0/w PTR         r     1 CODE4$                   363-0-0/w PTR         r     1 CODE6$
   356-0-0/w UBIN        r     1 DCB#                     360-0-0/w PTR         r     1 DCB$
   357-0-0/w UBIN        r     1 DCB_NUM                  140-0-0/w STRC        r     1 ERR
   142-0-0/d STRC(2088)  r     1 FAKE_FILE                364-0-0/w PTR         r     1 FIT$
   136-0-0/d STRC(72)    r     1 FIT_                     366-0-0/w SBIN        r     1 FREE_GRANS
     6-0-0/d STRC(2088)  r     1 OPEN_BLOCK_FILE          350-0-0/d STRC(90)    r     1 REEL_SN
   234-0-0/d STRC(2088)  r     1 SPECD_FILE               326-0-0/d STRC(144)   r     1 SWITCH_FMSEC
   336-0-0/c STRC(72)    r     1 VLP_ACCT                 340-0-0/c STRC(288)   r     1 VLP_NAME
   332-0-0/d STRC(90)    r     1 VLP_SN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @COMMAND                   4-0-0/w UBIN        r     1 CODE
    *0-0-0/w UBIN        r     1 COMMAND

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w SBIN        r     1 BREAK_COUNT
     0-0-0/c STRC(72)    r     1 DISK_ACCT                  0-0-0/d STRC(1080)  r     1 DISK_CLOSE_NEXT
     0-0-0/d STRC(1080)  r     1 DISK_CLOSE_ORDINARY        0-0-0/b STRC(18)    r     1 DISK_DESC_SAVE
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/c STRC(288)   r     1 DISK_NAME
     0-0-0/d STRC(2088)  r     1 DISK_OPEN_NEXT             0-0-0/d STRC(2088)  r     1 DISK_OPEN_ORDINARY
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:136  
     0-0-0/w STRC(145)   r     1 DISK_OPTION                0-0-0/c STRC(72)    r     1 DISK_PASS
     0-0-0/d STRC(90)    r     1 DISK_SN                    0-0-0/w PTR         r     1 DPLIST$
     0-0-0/w PTR         r     1 DPRESLIST$                 0-0-0/b STRC(18)    r     1 EFTWORD
     0-0-0/b SBIN(18)    r     1 EFTWORDEXPIRE
     0-0-0/w STRC        r     1 E_ACTIVE_FETCH_DENIED
     0-0-0/w STRC        r     1 E_ACTIVE_TO_INACTIVE       0-0-0/w STRC        r     1 E_ARCHIVE_ACTIVE
     0-0-0/w STRC        r     1 E_ARCHIVE_INACTIVE         0-0-0/w STRC        r     1 E_CANT_FETCH
     0-0-0/w STRC        r     1 E_FETCH_DENIED             0-0-0/w STRC        r     1 E_FETCH_DONE
     0-0-0/w STRC        r     1 E_FETCH_FIRST              0-0-0/w STRC        r     1 E_FETCH_SET
     0-0-0/w STRC        r     1 E_NOSTOW                   0-0-0/w STRC        r     1 E_NOT_ARCHIVE
     0-0-0/w STRC        r     1 E_NOT_ARCHIVE_UNSTOW       0-0-0/w STRC        r     1 E_NOT_FETCH
     0-0-0/w STRC        r     1 E_NOT_STOWED               0-0-0/w STRC        r     1 E_NO_CODE14
     0-0-0/w STRC        r     1 E_NO_CODE3                 0-0-0/w STRC        r     1 E_NO_CODE4
     0-0-0/w STRC        r     1 E_NO_CODE6                 0-0-0/w STRC        r     1 E_RETRIEVE_FIRST
     0-0-0/w STRC        r     1 E_STOWED_ACT_OK            0-0-0/w STRC        r     1 E_STOWED_INACT_OK
     0-0-0/w STRC        r     1 E_STOW_DENIED              0-0-0/w STRC        r     1 E_STOW_SET
     0-0-0/w STRC        r     1 E_UNARCHIVE_DENIED         0-0-0/w STRC        r     1 E_UNARCHIVE_DONE
     0-0-0/w STRC        r     1 E_UNFETCH_DENIED           0-0-0/w STRC        r     1 E_UNFETCH_DONE
     0-0-0/w STRC        r     1 E_UNSTOW_DENIED            0-0-0/w STRC        r     1 E_UNSTOW_OK
     0-0-0/b BIT         r     1 FMSEC                      0-0-0/d STRC(216)   r     1 FPT_EXIT
     0-0-0/c STRC(72)    r     1 FROM_DISK_ACCT             0-0-0/c STRC(288)   r     1 FROM_DISK_NAME
     0-0-0/d STRC(90)    r     1 FROM_DISK_SN               0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w PTR         r     1 SNVECLIST$                 0-0-0/w PTR         r     1 TAPE_DCBLIST$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(324)   r     1 CODE03
     0-0-0/w STRC(396)   r     1 CODE04                     0-0-0/w STRC(108)   r     1 CODE06
     0-0-0/w STRC(288)   r     1 CODE14                     0-0-0/w STRC(936)   r     1 DISK_FILE_SPEC
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(1116)  r     1 FM$FIT
     0-0-0/w STRC(180)   r     1 FM$GRAN
     0-0-0/w UBIN        r     1 IFPARAM_BUF(0:1018)
     0-0-0N  NULL        r     1 M$DISK00                   0-0-0N  NULL        r     1 M$DISK_IN
     0-0-0N  NULL        r     1 M$LO
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:137  


   Procedure FLS$STOW_FETCH requires 1358 words for executable code.
   Procedure FLS$STOW_FETCH requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:138  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:139  
          MINI XREF LISTING

ANY_FILES_FOUND
     19984**DCL     19997<<ASSIGN  20067<<ASSIGN  20088<<ASSIGN  20247>>IF      20295<<ASSIGN  20310<<ASSIGN
     20371>>IF      20446<<ASSIGN  20463<<ASSIGN  20573>>IF      20624<<ASSIGN  20638<<ASSIGN  20702>>IF
     20749<<ASSIGN  20763<<ASSIGN  20865>>IF
B$JIT.ACCN
     13207**DCL     20332>>IF      20500>>IF      20500>>IF      20667>>IF      20800>>IF
B$JIT.CPFLAGS1.SLEAZE
     13301**DCL     13301--REDEF
B$JIT.ERR.MID
     13208**DCL     13208--REDEF
B$JIT.JRESPEAK
     13369**DCL     13370--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
     13478**DCL     13478--REDEF   13479--REDEF
B$JIT.PNR
     13382**DCL     13382--REDEF
B$JIT.PPRIV
     13263**DCL     20018>>IF      20030>>IF      20261>>IF      20389>>IF      20590>>IF      20715>>IF
B$JIT.PRIV.JOB
     13251**DCL     20800>>IF
B$JIT.TSLINE
     13476**DCL     13477--REDEF
B$JIT.UNAME
     13207**DCL     20332>>IF      20500>>IF      20667>>IF      20800>>IF
B$JIT$
     11370**DCL     13202--IMP-PTR 20018>>IF      20030>>IF      20261>>IF      20332>>IF      20332>>IF
     20389>>IF      20500>>IF      20500>>IF      20500>>IF      20590>>IF      20667>>IF      20667>>IF
     20715>>IF      20800>>IF      20800>>IF      20800>>IF
BREAK_COUNT
     19983**DCL     20051>>IF      20282>>IF      20410>>IF      20611>>IF      20736>>IF
CLOSE_BLOCK_FILE.SN_
     12532**DCL     12532--REDEF
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:140  
CLOSE_BLOCK_FILE.UTL_
     12533**DCL     12533--REDEF
CLOSE_BLOCK_FILE.V
     12537**DCL     12532--DCLINIT
CLOSE_BLOCK_FILE.V.EXPIRE#
     12547**DCL     12547--REDEF
CLOSE_BLOCK_FILE.V.TYPE#
     12545**DCL     12545--REDEF
CLOSE_BLOCK_FILE.V.XTNSIZE#
     12542**DCL     12542--REDEF   12544--REDEF
CODE
     19986**DCL     20816<<ASSIGN  20817<>CALL    20820>>ASSIGN
CODE03.DESC.BUPM
     19557**DCL     20539>>IF
CODE04.CREATOR.ACCT
     19552**DCL     20332>>IF      20500>>IF      20667>>IF      20800>>IF
CODE04.CREATOR.NAME
     19552**DCL     20332>>IF      20500>>IF      20667>>IF      20800>>IF
CODE06.STOW.EFT
     19563**DCL     19564--REDEF   20145>>ASSIGN  20347>>ASSIGN
CODE06.STOW.REEL
     19563**DCL     20146>>ASSIGN
CODE14.ACCESS.NOSTOW
     19571**DCL     20429>>IF
CODE14$
     19988**DCL     19569--IMP-PTR 20425<<ASSIGN  20426<>CALL    20429>>IF
CODE3$
     19980**DCL     19556--IMP-PTR 20535<<ASSIGN  20536<>CALL    20539>>IF
CODE4$
     19979**DCL     19550--IMP-PTR 20314<<ASSIGN  20315<>CALL    20332>>IF      20332>>IF      20496<<ASSIGN
     20497<>CALL    20500>>IF      20500>>IF      20649<<ASSIGN  20650<>CALL    20667>>IF      20667>>IF
     20782<<ASSIGN  20783<>CALL    20800>>IF      20800>>IF
CODE6$
     19981**DCL     19563--IMP-PTR 20141<<ASSIGN  20142<>CALL    20145>>ASSIGN  20146>>ASSIGN  20343<<ASSIGN
     20344<>CALL    20347>>ASSIGN  20815<<ASSIGN  20817<>CALL
COMMAND
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:141  
     19985**DCL        11--PROC    20004>>DOCASE  20888>>DOCASE
COMMON_RETURN IN PROCEDURE FLB_STOW
     20573**LABEL   20414--GOTO    20434--GOTO    20457--GOTO
DCB#
     19976**DCL     20032<>CALL    20243<>CALL    20263<>CALL    20367<>CALL    20391<>CALL    20569<>CALL
     20592<>CALL    20698<>CALL    20717<>CALL    20860<>CALL
DCB$
     19978**DCL     19491--IMP-PTR 20032<>CALL    20034>>IF      20089>>IF      20096>>IF      20096>>IF
     20099>>IF      20116>>IF      20116>>IF      20147>>ASSIGN  20161>>ASSIGN  20162>>ASSIGN  20163>>ASSIGN
     20169>>ASSIGN  20195>>ASSIGN  20263<>CALL    20265>>IF      20311>>IF      20311>>IF      20332>>IF
     20340>>ASSIGN  20391<>CALL    20393>>IF      20464>>IF      20467>>IF      20475>>IF      20475>>IF
     20500>>IF      20500>>IF      20508>>IF      20525>>ASSIGN  20592<>CALL    20594>>IF      20639>>IF
     20642>>IF      20667>>IF      20675>>ASSIGN  20717<>CALL    20719>>IF      20764>>IF      20764>>IF
     20767>>IF      20800>>IF      20827>>ASSIGN  20849>>IF      20853>>IF      20853>>IF
DCB_NUM
     19977**DCL     20032<>CALL    20037>>ASSIGN  20041>>ASSIGN  20068<>CALL    20092<>CALL    20129<>CALL
     20137<>CALL    20149>>ASSIGN  20158>>ASSIGN  20186>>ASSIGN  20199<>CALL    20224<>CALL    20229<>CALL
     20234<>CALL    20239<>CALL    20263<>CALL    20268>>ASSIGN  20272>>ASSIGN  20294<>CALL    20350<>CALL
     20354<>CALL    20359<>CALL    20364<>CALL    20391<>CALL    20396>>ASSIGN  20400>>ASSIGN  20432<>CALL
     20439<>CALL    20445<>CALL    20469<>CALL    20471<>CALL    20478<>CALL    20515<>CALL    20519<>CALL
     20543<>CALL    20550<>CALL    20555<>CALL    20560<>CALL    20564<>CALL    20592<>CALL    20597>>ASSIGN
     20601>>ASSIGN  20623<>CALL    20645<>CALL    20680<>CALL    20684<>CALL    20689<>CALL    20695<>CALL
     20717<>CALL    20722>>ASSIGN  20726>>ASSIGN  20748<>CALL    20777<>CALL    20824<>CALL    20834<>CALL
     20838<>CALL    20843<>CALL    20850<>CALL    20855<>CALL    20856<>CALL
DISK_ACCT
     11933**DCL     19843--DCLINIT 20876<<ASSIGN
DISK_CLOSE.SN_
     11050**DCL     11050--REDEF
DISK_CLOSE.UTL_
     11051**DCL     11051--REDEF
DISK_CLOSE.V.EXPIRE#
     11065**DCL     11065--REDEF
DISK_CLOSE.V.TYPE#
     11063**DCL     11063--REDEF
DISK_CLOSE.V.XTNSIZE#
     11060**DCL     11060--REDEF   11062--REDEF
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:142  
DISK_CLOSE_NEXT
     12229**DCL     20150<>CALL    20182<>CALL
DISK_CLOSE_NEXT.IFPARAM_
     12234**DCL     20181<<ASSIGN  20185<<ASSIGN  20208<<ASSIGN  20833<<ASSIGN  20861<<ASSIGN
DISK_CLOSE_NEXT.SN_
     12229**DCL     12229--REDEF   20176<<ASSIGN
DISK_CLOSE_NEXT.UTL_
     12230**DCL     12230--REDEF
DISK_CLOSE_NEXT.V.DCB#
     12235**DCL     20149<<ASSIGN
DISK_CLOSE_NEXT.V.DESC
     12239**DCL     20169<<ASSIGN  20195<<ASSIGN  20340<<ASSIGN  20525<<ASSIGN  20675<<ASSIGN  20827<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.ACTIVE#
     12241**DCL     20174<<ASSIGN  20549<<ASSIGN  20554<<ASSIGN  20676<<ASSIGN  20831<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.ARCHIVE#
     12240**DCL     20172<<ASSIGN  20527<<ASSIGN  20679<<ASSIGN  20828<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.BUF#
     12240**DCL     20540<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.DELF#
     12239**DCL     20173<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.FETCH#
     12241**DCL     20171<<ASSIGN  20198<<ASSIGN  20342<<ASSIGN  20678<<ASSIGN  20830<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.ODSTOW#
     12240**DCL     20180<<ASSIGN  20196<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.QS#
     12240**DCL     20170<<ASSIGN  20197<<ASSIGN  20341<<ASSIGN  20526<<ASSIGN  20677<<ASSIGN  20829<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.TERMINATE#
     12241**DCL     20832<<ASSIGN
DISK_CLOSE_NEXT.V.DESC.TPB#
     12241**DCL     20179<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER
     12236**DCL     20167<<ASSIGN  20193<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.ASTOW#
     12237**DCL     20177<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.DELFDE#
     12238**DCL     20148<<ASSIGN  20178<<ASSIGN  20773<<ASSIGN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:143  
DISK_CLOSE_NEXT.V.EFTOPER.ISTOW#
     12237**DCL     20348<<ASSIGN  20514<<ASSIGN
DISK_CLOSE_NEXT.V.EFTOPER.UPDDESC#
     12237**DCL     20168<<ASSIGN  20194<<ASSIGN  20339<<ASSIGN  20524<<ASSIGN  20674<<ASSIGN  20826<<ASSIGN
DISK_CLOSE_NEXT.V.EXPIRE#
     12244**DCL     12244--REDEF   20175<<ASSIGN
DISK_CLOSE_NEXT.V.TYPE#
     12242**DCL     12242--REDEF
DISK_CLOSE_NEXT.V.XTNSIZE#
     12239**DCL     12239--REDEF   12241--REDEF
DISK_CLOSE_ORDINARY
     12271**DCL     20038<>CALL    20106<>CALL    20269<>CALL    20322<>CALL    20397<>CALL    20486<>CALL
     20598<>CALL    20657<>CALL    20723<>CALL    20790<>CALL
DISK_CLOSE_ORDINARY.SN_
     12271**DCL     12271--REDEF
DISK_CLOSE_ORDINARY.UTL_
     12272**DCL     12272--REDEF
DISK_CLOSE_ORDINARY.V.DCB#
     12277**DCL     20037<<ASSIGN  20268<<ASSIGN  20396<<ASSIGN  20597<<ASSIGN  20722<<ASSIGN
DISK_CLOSE_ORDINARY.V.EXPIRE#
     12286**DCL     12286--REDEF
DISK_CLOSE_ORDINARY.V.TYPE#
     12284**DCL     12284--REDEF
DISK_CLOSE_ORDINARY.V.XTNSIZE#
     12281**DCL     12281--REDEF   12283--REDEF
DISK_DESC_SAVE
     11436**DCL     20147<<ASSIGN
DISK_DESC_SAVE.ODSTOW#
     11436**DCL     20180>>ASSIGN  20196>>ASSIGN
DISK_FILE_SPEC.PASSWORD#
     11415**DCL     20880>>ASSIGN
DISK_FILE_SPEC.PASSWORD_SPEC
     11415**DCL     20877>>IF
DISK_FILE_SPEC.SPEC
     11415**DCL     11417--REDEF
DISK_FILE_SPEC.SPEC.START
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:144  
     11416**DCL     11416--REDEF
DISK_FILE_SPEC.SPEC.START.ACCT
     11416**DCL     20876>>ASSIGN
DISK_FILE_SPEC.SPEC.START.FILE.L#
     11416**DCL     20875>>ASSIGN
DISK_FILE_SPEC.SPEC.START.FILE.NAME#
     11416**DCL     20874>>ASSIGN
DISK_FILE_SPEC.SPEC.STOP
     11417**DCL     11417--REDEF
DISK_FILE_SPEC$
     11414**DCL     11415--IMP-PTR 20874>>ASSIGN  20875>>ASSIGN  20876>>ASSIGN  20877>>IF      20880>>ASSIGN
DISK_NAME
     11893**DCL     19839--DCLINIT
DISK_NAME.L#
     11893**DCL     20875<<ASSIGN
DISK_NAME.NAME#
     11893**DCL     20874<<ASSIGN
DISK_OPEN.ACSVEH_
     10915**DCL     10916--REDEF
DISK_OPEN.ALTKEYS_
     10921**DCL     10922--REDEF   10922--REDEF
DISK_OPEN.HDR_
     10920**DCL     10921--REDEF
DISK_OPEN.TAB_
     10919**DCL     10920--REDEF
DISK_OPEN.UHL_
     10913**DCL     10914--REDEF   10914--REDEF
DISK_OPEN.V.FSN#
     10953**DCL     10953--REDEF   10953--REDEF
DISK_OPEN.WSN_
     10919**DCL     10919--REDEF
DISK_OPEN_NEXT.ACSVEH_
     12055**DCL     12056--REDEF
DISK_OPEN_NEXT.ALTKEYS_
     12061**DCL     12062--REDEF   12062--REDEF
DISK_OPEN_NEXT.HDR_
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:145  
     12060**DCL     12061--REDEF
DISK_OPEN_NEXT.PASS_
     12055**DCL     20881<<ASSIGN  20884<<ASSIGN
DISK_OPEN_NEXT.TAB_
     12059**DCL     12060--REDEF
DISK_OPEN_NEXT.UHL_
     12053**DCL     12054--REDEF   12054--REDEF
DISK_OPEN_NEXT.V.FSN#
     12093**DCL     12093--REDEF   12093--REDEF
DISK_OPEN_NEXT.V.OPER.TEST#
     12064**DCL     19995<<ASSIGN
DISK_OPEN_NEXT.WSN_
     12059**DCL     12059--REDEF
DISK_OPEN_ORDINARY
     12162**DCL     20043<>CALL    20109<>CALL    20140<>CALL    20274<>CALL    20325<>CALL    20338<>CALL
     20402<>CALL    20489<>CALL    20507<>CALL    20603<>CALL    20660<>CALL    20673<>CALL    20728<>CALL
     20793<>CALL    20806<>CALL
DISK_OPEN_ORDINARY.ACSVEH_
     12164**DCL     12165--REDEF
DISK_OPEN_ORDINARY.ALTKEYS_
     12170**DCL     12171--REDEF   12171--REDEF
DISK_OPEN_ORDINARY.FPARAM_
     12167**DCL     20017<<ASSIGN  20042<<ASSIGN  20273<<ASSIGN  20401<<ASSIGN  20602<<ASSIGN  20727<<ASSIGN
DISK_OPEN_ORDINARY.HDR_
     12169**DCL     12170--REDEF
DISK_OPEN_ORDINARY.TAB_
     12168**DCL     12169--REDEF
DISK_OPEN_ORDINARY.UHL_
     12162**DCL     12163--REDEF   12163--REDEF
DISK_OPEN_ORDINARY.V.DCB#
     12171**DCL     20041<<ASSIGN  20272<<ASSIGN  20400<<ASSIGN  20601<<ASSIGN  20726<<ASSIGN
DISK_OPEN_ORDINARY.V.FSN#
     12202**DCL     12202--REDEF   12202--REDEF
DISK_OPEN_ORDINARY.V.OPER.TEST#
     12173**DCL     20108<<ASSIGN  20113<<ASSIGN  20324<<ASSIGN  20329<<ASSIGN  20488<<ASSIGN  20493<<ASSIGN
     20659<<ASSIGN  20664<<ASSIGN  20792<<ASSIGN  20797<<ASSIGN
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:146  
DISK_OPEN_ORDINARY.WSN_
     12168**DCL     12168--REDEF
DISK_OPTION.DIR
     11427**DCL     20386<<ASSIGN
DISK_OPTION.INACTIVATE
     11428**DCL     20511>>IF      20546>>IF
DISK_PASS
     11985**DCL     20881--ASSIGN
DISK_PASS.PASS#
     11985**DCL     20880<<ASSIGN
DISK_READ.STATION_
     10977**DCL     10978--REDEF
DISK_READ.V.DVBYTE.REREAD#
     10989**DCL     10989--REDEF
DISK_READ.V.INDX#
     10987**DCL     10987--REDEF
DISK_SN
     11959**DCL     19838--DCLINIT 20126--CALL
DISK_WRITE.STATION_
     11015**DCL     11015--REDEF
DISK_WRITE.V.DVBYTE.VFC#
     11022**DCL     11022--REDEF
DONE IN PROCEDURE FLB_FETCH
     20246**LABEL   20032--CALLALT
DONE IN PROCEDURE FLB_STOW
     20572**LABEL   20391--CALLALT
DONE IN PROCEDURE FLB_UNARCHIVE
     20864**LABEL   20717--CALLALT 20737--GOTO    20758--GOTO
DONE IN PROCEDURE FLB_UNFETCH
     20370**LABEL   20263--CALLALT 20283--GOTO    20305--GOTO
DONE IN PROCEDURE FLB_UNSTOW
     20701**LABEL   20592--CALLALT 20612--GOTO    20633--GOTO
DPLIST$
     11400**DCL     11412--IMP-PTR
DPRESLIST$
     11414**DCL     11414--IMP-PTR
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:147  
EFTWORD
     11535**DCL     11535--REDEF   20145<<ASSIGN  20347<<ASSIGN
EFTWORDEXPIRE
     11535**DCL     20175>>ASSIGN
ERR
     19610**DCL     20032<>CALL    20057>>IF      20068<>CALL    20126<>CALL    20129<>CALL    20263<>CALL
     20284>>IF      20294<>CALL    20391<>CALL    20416>>IF      20445<>CALL    20592<>CALL    20613>>IF
     20623<>CALL    20717<>CALL    20738>>IF      20748<>CALL
ERR.ERR#
     19640**DCL     20060>>IF      20063>>IF      20063>>IF      20069>>IF      20069>>IF      20069>>IF
     20069>>IF      20069>>IF      20069>>IF      20287>>IF      20290>>IF      20290>>IF      20296>>IF
     20296>>IF      20296>>IF      20296>>IF      20296>>IF      20296>>IF      20419>>IF      20419>>IF
     20422>>IF      20447>>IF      20447>>IF      20447>>IF      20447>>IF      20447>>IF      20616>>IF
     20619>>IF      20619>>IF      20625>>IF      20625>>IF      20625>>IF      20625>>IF      20625>>IF
     20741>>IF      20744>>IF      20744>>IF      20750>>IF      20750>>IF      20750>>IF      20750>>IF
     20750>>IF
E_ACTIVE_FETCH_DENIED
     18681**DCL     20234<>CALL
E_ACTIVE_TO_INACTIVE
     15755**DCL     20515<>CALL
E_ARCHIVE_ACTIVE
     15710**DCL     20519<>CALL
E_ARCHIVE_INACTIVE
     15800**DCL     20478<>CALL
E_CANT_FETCH
     18771**DCL     20137<>CALL
E_FETCH_DENIED
     16205**DCL     20229<>CALL
E_FETCH_DONE
     16250**DCL     20199<>CALL
E_FETCH_FIRST
     15890**DCL     20777<>CALL
E_FETCH_SET
     15215**DCL     20092<>CALL    20469<>CALL    20645<>CALL
E_NOSTOW
     15350**DCL     20432<>CALL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:148  
E_NOT_ARCHIVE
     15845**DCL     20239<>CALL    20850<>CALL    20890<>CALL
E_NOT_ARCHIVE_UNSTOW
     19176**DCL     20855<>CALL
E_NOT_FETCH
     16115**DCL     20364<>CALL
E_NOT_STOWED
     15440**DCL     20695<>CALL
E_NO_CODE14
     15305**DCL     20439<>CALL
E_NO_CODE3
     16295**DCL     20543<>CALL
E_NO_CODE4
     16025**DCL     20359<>CALL    20564<>CALL    20689<>CALL    20843<>CALL
E_NO_CODE6
     15395**DCL     20224<>CALL    20824<>CALL
E_RETRIEVE_FIRST
     18996**DCL     20856<>CALL
E_STOWED_ACT_OK
     15575**DCL     20555<>CALL
E_STOWED_INACT_OK
     15620**DCL     20550<>CALL
E_STOW_DENIED
     15485**DCL     20560<>CALL
E_STOW_SET
     15260**DCL     20471<>CALL
E_UNARCHIVE_DENIED
     15935**DCL     20838<>CALL
E_UNARCHIVE_DONE
     15980**DCL     20834<>CALL
E_UNFETCH_DENIED
     16070**DCL     20354<>CALL
E_UNFETCH_DONE
     16160**DCL     20350<>CALL
E_UNSTOW_DENIED
     15530**DCL     20684<>CALL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:149  
E_UNSTOW_OK
     15665**DCL     20680<>CALL
F$DCB.ACCT#
     19507**DCL     20162>>ASSIGN  20500>>IF
F$DCB.ACTPOS
     19523**DCL     19523--REDEF
F$DCB.ARS#
     19497**DCL     19497--REDEF
F$DCB.ATTR
     19516**DCL     19517--REDEF
F$DCB.AUTHFFLG.CREATE#
     19525**DCL     20116>>IF
F$DCB.AUTHFFLG.DELF#
     19524**DCL     20116>>IF      20332>>IF      20500>>IF      20667>>IF      20800>>IF
F$DCB.BORROW
     19531**DCL     19531--REDEF   19531--REDEF   19531--REDEF
F$DCB.DCBNAME.L
     19545**DCL     19545--IMP-SIZ
F$DCB.DESC
     19504**DCL     20147>>ASSIGN  20169>>ASSIGN  20195>>ASSIGN  20340>>ASSIGN  20525>>ASSIGN  20675>>ASSIGN
     20827>>ASSIGN
F$DCB.DESC.ARCHIVE#
     19505**DCL     20096>>IF      20475>>IF      20508>>IF      20764>>IF      20849>>IF
F$DCB.DESC.DELF#
     19504**DCL     20099>>IF      20475>>IF      20767>>IF
F$DCB.DESC.FETCH#
     19506**DCL     20089>>IF      20311>>IF      20467>>IF      20642>>IF      20853>>IF
F$DCB.DESC.QS#
     19505**DCL     20096>>IF      20311>>IF      20464>>IF      20639>>IF      20764>>IF      20853>>IF
F$DCB.EOMCHAR#
     19501**DCL     19501--REDEF
F$DCB.FCD#
     19510**DCL     20034>>IF      20265>>IF      20393>>IF      20594>>IF      20719>>IF
F$DCB.FLDID
     19526**DCL     19526--REDEF
F$DCB.FORM$
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:150  
     19520**DCL     19520--REDEF
F$DCB.FSECT
     19536**DCL     19536--REDEF
F$DCB.FSN#
     19513**DCL     19513--REDEF   19513--REDEF   19514--REDEF
F$DCB.HEADER$
     19519**DCL     19519--REDEF
F$DCB.IXTNSIZE#
     19517**DCL     19517--REDEF
F$DCB.LASTSTA$
     19506**DCL     19506--REDEF
F$DCB.LVL
     19532**DCL     19532--REDEF
F$DCB.NAME#
     19507**DCL     20163>>ASSIGN
F$DCB.NAME#.C
     19507**DCL     19507--REDEF
F$DCB.NOEOF
     19529**DCL     19529--REDEF
F$DCB.NRECS#
     19518**DCL     19518--REDEF
F$DCB.NRECX
     19537**DCL     19537--REDEF
F$DCB.OHDR
     19529**DCL     19529--REDEF
F$DCB.ORG#
     19512**DCL     19512--REDEF
F$DCB.PRECNO
     19535**DCL     19535--REDEF
F$DCB.PSN#
     19507**DCL     20161>>ASSIGN
F$DCB.RCSZ
     19541**DCL     19541--REDEF
F$DCB.RES#
     19508**DCL     19508--REDEF
F$DCB.SETX
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:151  
     19520**DCL     19520--REDEF
F$DCB.TAB$
     19520**DCL     19520--REDEF
F$DCB.TDA
     19534**DCL     19535--REDEF
F$DCB.WSN#
     19508**DCL     19508--REDEF
FAKE_FILE
     19718**DCL     20164<>CALL    20190<>CALL
FAKE_FILE.ACSVEH_
     19720**DCL     19721--REDEF
FAKE_FILE.ALTKEYS_
     19726**DCL     19727--REDEF   19727--REDEF
FAKE_FILE.FPARAM_
     19723**DCL     20160<<ASSIGN  20189<<ASSIGN
FAKE_FILE.HDR_
     19725**DCL     19726--REDEF
FAKE_FILE.TAB_
     19724**DCL     19725--REDEF
FAKE_FILE.UHL_
     19718**DCL     19719--REDEF   19719--REDEF
FAKE_FILE.V
     19727**DCL     19718--DCLINIT
FAKE_FILE.V.ACS#
     19738**DCL     20157<<ASSIGN  20188<<ASSIGN
FAKE_FILE.V.DCB#
     19727**DCL     20158<<ASSIGN  20186<<ASSIGN
FAKE_FILE.V.EXPIRE#
     19747**DCL     20159<<ASSIGN
FAKE_FILE.V.FSN#
     19758**DCL     19758--REDEF   19758--REDEF
FAKE_FILE.V.FUN#
     19737**DCL     20156<<ASSIGN  20187<<ASSIGN
FAKE_FILE.WSN_
     19724**DCL     19724--REDEF
FILE_FOUND IN PROCEDURE FLB_FETCH
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:152  
     20087**LABEL   20132--EXIT    20138--EXIT
FIT$
     19982**DCL     19578--IMP-PTR 20814<<ASSIGN  20815>>ASSIGN  20820>>ASSIGN  20833>>ASSIGN
FIT_
     19592**DCL     20032<>CALL    20042>>ASSIGN  20181>>ASSIGN  20189>>ASSIGN  20263<>CALL    20273>>ASSIGN
     20391<>CALL    20401>>ASSIGN  20592<>CALL    20602>>ASSIGN  20717<>CALL    20727>>ASSIGN
FIT_.PTR$
     19594**DCL     20141>>ASSIGN  20314>>ASSIGN  20343>>ASSIGN  20425>>ASSIGN  20496>>ASSIGN  20535>>ASSIGN
     20649>>ASSIGN  20782>>ASSIGN  20814>>ASSIGN
FIT_.W2
     19593**DCL     19594--REDEF
FLB_FETCH
     20022**PROC    20010--CALL
FLB_STOW
     20377**PROC    20006--CALL
FLB_UNARCHIVE
     20708**PROC    20014--CALL
FLB_UNFETCH
     20253**PROC    20012--CALL
FLB_UNSTOW
     20581**PROC    20008--CALL
FLI$NUMFREEGRANS
     19478**DCL-ENT 20126--CALL
FLI$RPT_ERR
     19473**DCL-ENT 20000--CALL    20068--CALL    20092--CALL    20129--CALL    20137--CALL    20203--CALL
     20209--CALL    20214--CALL    20219--CALL    20224--CALL    20229--CALL    20234--CALL    20239--CALL
     20294--CALL    20354--CALL    20359--CALL    20364--CALL    20432--CALL    20439--CALL    20445--CALL
     20469--CALL    20471--CALL    20478--CALL    20515--CALL    20519--CALL    20543--CALL    20560--CALL
     20564--CALL    20623--CALL    20645--CALL    20684--CALL    20689--CALL    20695--CALL    20748--CALL
     20777--CALL    20824--CALL    20838--CALL    20843--CALL    20850--CALL    20855--CALL    20856--CALL
     20890--CALL    20895--CALL
FLN$DISK_CLOSE_ALL
     19474**DCL-ENT 20054--CALL    20080--CALL    20246--CALL    20370--CALL    20413--CALL    20433--CALL
     20456--CALL    20572--CALL    20701--CALL    20864--CALL
FLN$DISK_CLOSE_NEXT
     19472**DCL-ENT 20243--CALL    20367--CALL    20569--CALL    20698--CALL    20860--CALL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:153  
FLN$DISK_IO_INIT
     19469**DCL-ENT 19996--CALL
FLN$DISK_NXTA
     19477**DCL-ENT 20440--CALL
FLN$DISK_OPEN_NEXT
     19471**DCL-ENT 20032--CALL    20263--CALL    20391--CALL    20592--CALL    20717--CALL
FLP$WR_FILE_INFO
     19470**DCL-ENT 19994--CALL
FM$FIT.CODES.NDW
     19578**DCL     20820<<ASSIGN
FM$GRAN
     19487**DCL     20314--ASSIGN  20343--ASSIGN  20496--ASSIGN  20535--ASSIGN  20649--ASSIGN  20782--ASSIGN
     20814--ASSIGN
FMSEC
     11370**DCL     20018>>IF      20030>>IF      20116>>IF      20174>>ASSIGN  20261>>IF      20332>>IF
     20389>>IF      20500>>IF      20590>>IF      20667>>IF      20715>>IF      20770>>IF
FPT_EXIT.V.STEPCC#
     10840**DCL     10840--REDEF   20075>>IF      20076<<ASSIGN  20130>>IF      20131<<ASSIGN  20302>>IF
     20303<<ASSIGN  20452>>IF      20453<<ASSIGN  20630>>IF      20631<<ASSIGN  20755>>IF      20756<<ASSIGN
FREE_GRANS
     19987**DCL     20126<>CALL    20134>>IF
FROM_DISK_ACCT
     11946**DCL     12470--DCLINIT
FROM_DISK_NAME
     11920**DCL     12466--DCLINIT
FROM_DISK_SN
     11972**DCL     12465--DCLINIT
IFPARAM_BUF
     19576**DCL     20833--ASSIGN
M$CLOSE
      5502**DCL-ENT 20038--CALL    20106--CALL    20150--CALL    20182--CALL    20269--CALL    20322--CALL
     20397--CALL    20486--CALL    20598--CALL    20657--CALL    20723--CALL    20790--CALL
M$DISK00
     11863**DCL     20890<>CALL    20895<>CALL
M$LO
     19484**DCL     20199<>CALL    20350<>CALL    20550<>CALL    20555<>CALL    20680<>CALL    20834<>CALL
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:154  
M$OPEN
      5502**DCL-ENT 20043--CALL    20109--CALL    20140--CALL    20164--CALL    20190--CALL    20274--CALL
     20325--CALL    20338--CALL    20402--CALL    20489--CALL    20507--CALL    20603--CALL    20660--CALL
     20673--CALL    20728--CALL    20793--CALL    20806--CALL    20885--CALL
M$RPRIV
      5561**DCL-ENT 20019--CALL    20031--CALL    20107--CALL    20262--CALL    20323--CALL    20390--CALL
     20487--CALL    20591--CALL    20658--CALL    20716--CALL    20791--CALL
M$SPRIV
      5561**DCL-ENT 19998--CALL    20040--CALL    20049--CALL    20114--CALL    20271--CALL    20280--CALL
     20330--CALL    20399--CALL    20408--CALL    20494--CALL    20600--CALL    20609--CALL    20665--CALL
     20725--CALL    20734--CALL    20798--CALL
OPEN_BLOCK_FILE.ACSVEH_
     12467**DCL     12468--REDEF
OPEN_BLOCK_FILE.ALTKEYS_
     12473**DCL     12474--REDEF   12474--REDEF
OPEN_BLOCK_FILE.HDR_
     12472**DCL     12473--REDEF
OPEN_BLOCK_FILE.TAB_
     12471**DCL     12472--REDEF
OPEN_BLOCK_FILE.UHL_
     12465**DCL     12466--REDEF   12466--REDEF
OPEN_BLOCK_FILE.V
     12474**DCL     12465--DCLINIT
OPEN_BLOCK_FILE.V.FSN#
     12505**DCL     12505--REDEF   12505--REDEF
OPEN_BLOCK_FILE.WSN_
     12471**DCL     12471--REDEF
PRE_RET_CLOSE.SN_
     11778**DCL     11778--REDEF
PRE_RET_CLOSE.UTL_
     11779**DCL     11779--REDEF
PRE_RET_CLOSE.V.EXPIRE#
     11793**DCL     11793--REDEF
PRE_RET_CLOSE.V.TYPE#
     11791**DCL     11791--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:155  
     11788**DCL     11788--REDEF   11790--REDEF
PRE_RET_OPEN.ACSVEH_
     11713**DCL     11714--REDEF
PRE_RET_OPEN.ALTKEYS_
     11719**DCL     11720--REDEF   11720--REDEF
PRE_RET_OPEN.HDR_
     11718**DCL     11719--REDEF
PRE_RET_OPEN.TAB_
     11717**DCL     11718--REDEF
PRE_RET_OPEN.UHL_
     11711**DCL     11712--REDEF   11712--REDEF
PRE_RET_OPEN.V.FSN#
     11751**DCL     11751--REDEF   11751--REDEF
PRE_RET_OPEN.WSN_
     11717**DCL     11717--REDEF
PRE_RET_READ.STATION_
     11568**DCL     11569--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
     11580**DCL     11580--REDEF
PRE_RET_READ.V.INDX#
     11578**DCL     11578--REDEF
PRE_RET_WRITE.STATION_
     11606**DCL     11606--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
     11613**DCL     11613--REDEF
PRINT_ERROR
     20871**PROC    20248--CALL    20372--CALL    20574--CALL    20703--CALL    20866--CALL
READ_AD_OR_FD.ACSVEH_
     12357**DCL     12358--REDEF
READ_AD_OR_FD.ALTKEYS_
     12363**DCL     12364--REDEF   12364--REDEF
READ_AD_OR_FD.HDR_
     12362**DCL     12363--REDEF
READ_AD_OR_FD.TAB_
     12361**DCL     12362--REDEF
READ_AD_OR_FD.UHL_
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:156  
     12355**DCL     12356--REDEF   12356--REDEF
READ_AD_OR_FD.V.FSN#
     12395**DCL     12395--REDEF   12395--REDEF
READ_AD_OR_FD.WSN_
     12361**DCL     12361--REDEF
REEL_SN
     19972**DCL     20176--ASSIGN
REEL_SN.SN#
     19972**DCL     20146<<ASSIGN
RET_CMDS_NAME.L#
     11822**DCL     11822--IMP-SIZ
SNVECLIST$
     11354**DCL     11354--IMP-PTR
SPEC.START
     11418**DCL     11419--REDEF
SPEC.STOP
     11419**DCL     11420--REDEF
SPECCHARS
     11418**DCL     11418--REDEF
SPECD_FILE
     19838**DCL     20885<>CALL
SPECD_FILE.ACSVEH_
     19840**DCL     19841--REDEF
SPECD_FILE.ALTKEYS_
     19846**DCL     19847--REDEF   19847--REDEF
SPECD_FILE.HDR_
     19845**DCL     19846--REDEF
SPECD_FILE.TAB_
     19844**DCL     19845--REDEF
SPECD_FILE.UHL_
     19838**DCL     19839--REDEF   19839--REDEF
SPECD_FILE.V
     19847**DCL     19838--DCLINIT
SPECD_FILE.V.FSN#
     19878**DCL     19878--REDEF   19878--REDEF
SPECD_FILE.WSN_
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:157  
     19844**DCL     19844--REDEF
SWITCH_FMSEC
     19895**DCL     19998<>CALL    20019<>CALL    20031<>CALL    20040<>CALL    20049<>CALL    20107<>CALL
     20114<>CALL    20262<>CALL    20271<>CALL    20280<>CALL    20323<>CALL    20330<>CALL    20390<>CALL
     20399<>CALL    20408<>CALL    20487<>CALL    20494<>CALL    20591<>CALL    20600<>CALL    20609<>CALL
     20658<>CALL    20665<>CALL    20716<>CALL    20725<>CALL    20734<>CALL    20791<>CALL    20798<>CALL
SWITCH_FMSEC.V
     19895**DCL     19895--DCLINIT
TAPE_CLOSE.SN_
     11271**DCL     11271--REDEF
TAPE_CLOSE.UTL_
     11272**DCL     11272--REDEF
TAPE_CLOSE.V.EXPIRE#
     11286**DCL     11286--REDEF
TAPE_CLOSE.V.TYPE#
     11284**DCL     11284--REDEF
TAPE_CLOSE.V.XTNSIZE#
     11281**DCL     11281--REDEF   11283--REDEF
TAPE_DCBLIST$
     10827**DCL     10827--IMP-PTR
TAPE_OPEN.ACSVEH_
     11136**DCL     11137--REDEF
TAPE_OPEN.ALTKEYS_
     11142**DCL     11143--REDEF   11143--REDEF
TAPE_OPEN.HDR_
     11141**DCL     11142--REDEF
TAPE_OPEN.TAB_
     11140**DCL     11141--REDEF
TAPE_OPEN.UHL_
     11134**DCL     11135--REDEF   11135--REDEF
TAPE_OPEN.V.FSN#
     11174**DCL     11174--REDEF   11174--REDEF
TAPE_OPEN.WSN_
     11140**DCL     11140--REDEF
TAPE_READ.STATION_
     11198**DCL     11199--REDEF
PL6.E3A0      #001=FLS$STOW_FETCH File=FLS$STOW_FETCH.:E05TSI                    TUE 07/29/97 16:23 Page:158  
TAPE_READ.V.DVBYTE.REREAD#
     11210**DCL     11210--REDEF
TAPE_READ.V.INDX#
     11208**DCL     11208--REDEF
TAPE_WRITE.STATION_
     11236**DCL     11236--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
     11243**DCL     11243--REDEF
TVECTOR.W2
     11367**DCL     11368--REDEF
VLP_ACCT
     19927**DCL     19723--DCLINIT
VLP_ACCT.ACCT#
     19927**DCL     20162<<ASSIGN
VLP_NAME
     19955**DCL     19719--DCLINIT 20163<<ASSIGN
VLP_SN
     19913**DCL     19718--DCLINIT
VLP_SN.SN#
     19913**DCL     20161<<ASSIGN
XSF$LOCCODE
     19476**DCL-ENT 20817--CALL
XSF$LOCCODP
     19475**DCL-ENT 20142--CALL    20315--CALL    20344--CALL    20426--CALL    20497--CALL    20536--CALL
     20650--CALL    20783--CALL
XUR$ERRMSG
     19449**DCL-ENT 20199--CALL    20350--CALL    20550--CALL    20555--CALL    20680--CALL    20834--CALL

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:159  
     1026        1        /*T***********************************************************/
     1027        2        /*T*                                                         */
     1028        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1029        4        /*T*                                                         */
     1030        5        /*T***********************************************************/
     1031        6        FLS$STATUS: PROC;
     1032        7
     1033        8        /*F*  NAME: FLS$STATUS
     1034        9              PURPOSE: To process the STATUS command; opening up :ARCHIVE and
     1035       10                      :BACKUP files, then output the content. */
     1036       11
     1037       12        /*******************
     1038       13          INCLUDE FILES
     1039       14         *******************/
     1040       15
     1041       16        %INCLUDE CP_6;
     1042     5575        %INCLUDE CP_6_SUBS;
     1043     6115        %INCLUDE B_ERRORS_C;
     1044     7242        %INCLUDE FLI_DATA_R;
     1045     8656        %INCLUDE FLS_DATA_R;
     1046    10456        %INCLUDE FLE_DATA_R;
     1047    16407
     1048    16408        /*****************
     1049    16409          EXTERNAL ENTRIES
     1050    16410         *****************/
     1051    16411
     1052    16412    1   DCL FLI$ALLOC ENTRY ( 2 );
     1053    16413    1   DCL FLI$RPT_ERR ENTRY ( 5 );
     1054    16414    1   DCL FLI$CNVRT_ARCHIVE ENTRY( 2 );
     1055    16415
     1056    16416        /*********
     1057    16417         SYMREF
     1058    16418         *********/
     1059    16419
     1060    16420    1   DCL BREAK_COUNT SYMREF UBIN;
     1061    16421
     1062    16422        /******
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:160  
     1063    16423          DCLS
     1064    16424         ******/
     1065    16425
     1066    16426    1   DCL I UBIN;
     1067    16427    1   DCL J UBIN;
     1068    16428    1   DCL K UBIN;
     1069    16429    1   DCL SIZE UBIN;
     1070    16430    1   DCL AVAIL$ PTR;
     1071    16431    1   DCL BLANK2 CHAR ( 2 ) STATIC INIT ( '  ' );
     1072    16432    1   DCL COUNT UBIN;
     1073    16433    1   DCL OUT_PTR$ PTR;
     1074    16434    1   DCL START$ PTR;
     1075    16435    1   DCL LAST_RUN UBIN;
     1076    16436
     1077    16437    1   DCL OUT_SINGLE_LINE CHAR(80) STATIC;
     1078    16438    1   DCL DPNAME CHAR ( 9 ) BASED;
     1079    16439    1   DCL COLS (0:6) UBIN WORD STATIC INIT(0,11,22,33,44,55,66);       /* Tab stops */
     1080    16440    1   DCL NBR_COLS SBIN WORD STATIC INIT(SIZEW(COLS));
     1081    16441    1   DCL CURR_TAB UBIN;                                    /* Current tab location */
     1082    16442    1   DCL 1 TAPE_OPTION1 STATIC,
     1083    16443    1         2 * CHAR ( 12 ) INIT ( ' ' ),
     1084    16444    1         2 * CHAR ( 10 ) INIT ( 'DENSITY = ' ),
     1085    16445    1         2 DENSITY CHAR ( 5 ),
     1086    16446    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1087    16447    1         2 * CHAR ( 12 ) INIT ( 'VOLACCESS = ' ),
     1088    16448    1         2 VOLA CHAR ( 5 ),
     1089    16449    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1090    16450    1         2 * CHAR ( 9 ) INIT ( 'EXPIRE = ' ),
     1091    16451    1         2 EXP CHAR ( 5 ),
     1092    16452    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1093    16453    1         2 * CHAR ( 8 ) INIT ( 'BLOCK = ' ),
     1094    16454    1         2 BLOCK CHAR ( 5 );
     1095    16455    1   DCL 1 TAPE_OPTION2 STATIC,
     1096    16456    1         2 * CHAR( 12 ) INIT ( ' ' ),
     1097    16457    1         2 * CHAR( 8 ) INIT ( 'CHECK = ' ),
     1098    16458    1         2 CHECK CHAR ( 3 ),
     1099    16459    1         2 * CHAR( 2 ) INIT ( ', ' ),
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:161  
     1100    16460    1         2 * CHAR ( 13 ) INIT ( 'IOERR CONT = ' ),
     1101    16461    1         2 IOERRORC CHAR ( 3 );
     1102    16462    1   DCL 1 BACKUP_HDR STATIC,
     1103    16463    1         2 * CHAR ( 3 ) INIT ( 'Run' ),
     1104    16464    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1105    16465    1         2 * CHAR ( 4 ) INIT ( ' Set' ),
     1106    16466    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1107    16467    1         2 * CHAR ( 4 ) INIT ( ' VOL' ),
     1108    16468    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1109    16469    1         2 * CHAR ( 4 ) INIT ( 'Date' ),
     1110    16470    1         2 * CHAR ( 12 ) INIT ( ' ' ),
     1111    16471    1         2 * CHAR ( 6 ) INIT ( 'Volume' ),
     1112    16472    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1113    16473    1         2 * CHAR ( 4 ) INIT ( ' FSN' ),
     1114    16474    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1115    16475    1         2 * CHAR ( 14 ) INIT ( 'Accounts Saved' ),
     1116    16476    1         2 * CHAR ( 7 ) INIT ( ' ' ),
     1117    16477    1         2 * CHAR ( 11 ) INIT ( ':BACKUP FSN' );
     1118    16478
     1119    16479    1   DCL BACKUP_HDR_CHAR REDEF BACKUP_HDR CHAR ( 79 );
     1120    16480
     1121    16481    1   DCL 1 BACKUP_REC STATIC,
     1122    16482    1         2 RUN_NUM CHAR ( 3 ),
     1123    16483    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1124    16484    1         2 SET_NUM CHAR ( 4 ),
     1125    16485    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1126    16486    1         2 VOL_NUM CHAR ( 4 ),
     1127    16487    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1128    16488    1         2 DATE CHAR ( 8 ),
     1129    16489    1         2 * CHAR ( 1 ) INIT ( ' ' ),
     1130    16490    1         2 TIME CHAR ( 5 ),
     1131    16491    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1132    16492    1         2 TSN_NUM CHAR ( 6 ),
     1133    16493    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1134    16494    1         2 FSN_NUM CHAR ( 4 ),
     1135    16495    1         2 * CHAR(2) INIT(' '),
     1136    16496    1         2 FIRST_ACCT CHAR(8),
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:162  
     1137    16497    1         2 * CHAR(3) INIT(' - '),
     1138    16498    1         2 LAST_ACCT CHAR(8),
     1139    16499    1         2 * CHAR(9) INIT(' '),
     1140    16500    1         2 BACKUP_FSN_NUM CHAR(4);
     1141    16501    1   DCL 1 PRIME_AND_DUAL STATIC,
     1142    16502    1         2 * CHAR ( 12 ) INIT ( 'Prime Pack: ' ),
     1143    16503    1         2 PRIME_PACK CHAR ( 6 ),
     1144    16504    1         2 * CHAR ( 3 ) INIT ( '   ' ),
     1145    16505    1         2 * CHAR ( 11 ) INIT ( 'Dual Pack: ' ),
     1146    16506    1         2 DUAL_PACK CHAR ( 6 );
     1147    16507    1   DCL PRIME_AND_DUAL_CHARS REDEF PRIME_AND_DUAL CHAR(38);
     1148    16508    1   DCL 1 TIME_BUF STATIC,
     1149    16509    1         2 * CHAR ( 8 ) INIT ( ' ' ),
     1150    16510    1         2 DATE CHAR ( 8 ),
     1151    16511    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1152    16512    1         2 TIME CHAR ( 8 );
     1153    16513    1   DCL TIME_BUF_CHARS REDEF TIME_BUF CHAR(26);
     1154    16514    1   DCL 1 REBUILD_HDR STATIC,
     1155    16515    1         2 * CHAR ( 6 ) INIT ( 'Volume' ),
     1156    16516    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1157    16517    1         2 * CHAR ( 4 ) INIT ( ' VOL' ),
     1158    16518    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1159    16519    1         2 * CHAR ( 4 ) INIT ( ' FSN' ),
     1160    16520    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1161    16521    1         2 * CHAR ( 12 ) INIT ( 'Last Account' ),
     1162    16522    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1163    16523    1         2 * CHAR ( 9 ) INIT ( 'Last File' );
     1164    16524    1   DCL REBUILD_HDR_CHAR REDEF REBUILD_HDR CHAR( 43 );
     1165    16525    1   DCL 1 REBUILD_REC STATIC,
     1166    16526    1         2 TSN_NUM CHAR ( 6 ),
     1167    16527    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1168    16528    1         2 VOL_NUM CHAR ( 4 ),
     1169    16529    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1170    16530    1         2 FSN_NUM CHAR ( 4 ),
     1171    16531    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1172    16532    1         2 LAST_ACCT CHAR ( 8 ),
     1173    16533    1         2 * CHAR ( 6 ) INIT ( ' ' ),
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:163  
     1174    16534    1         2 LAST_FILE CHAR ( 31 );
     1175    16535    1   DCL 1 TAPE_OPTION3 STATIC,
     1176    16536    1         2 * CHAR ( 12 ) INIT ( ' ' ),
     1177    16537    1         2 * CHAR ( 10 ) INIT ( 'DENSITY = ' ),
     1178    16538    1         2 DENSITY CHAR ( 5 ),
     1179    16539    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1180    16540    1         2 * CHAR ( 6 ) INIT ( 'PAD = ' ),
     1181    16541    1         2 PAD CHAR ( 3 ),
     1182    16542    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1183    16543    1         2 * CHAR ( 6 ) INIT ( 'DIR = ' ),
     1184    16544    1         2 DIR CHAR ( 3 ),
     1185    16545    1         2 * CHAR( 2 ) INIT( ', ' ),
     1186    16546    1         2 * CHAR( 13 ) INIT( 'IOERR CONT = ' ),
     1187    16547    1         2 IOERRORC CHAR( 3 );
     1188    16548    1   DCL NODATA_HDR CHAR( 49 ) STATIC INIT (
             16548            'Partially Restored File(s) - Containing No Data :' );
     1189    16549    1   DCL NO_INCR_TIME BIT ( 1 );
     1190    16550
     1191    16551        /**********
     1192    16552          DCB
     1193    16553         **********/
     1194    16554
     1195    16555    1   DCL M$LO DCB;
     1196    16556
     1197    16557        /**********
     1198    16558          MACROS
     1199    16559         **********/
     1200    16560
     1201    16561        %FPT_WRITE ( FPTN = OUTPUT_ARCHIVE_INFO,
     1202    16562                     DCB  = M$LO,
     1203    16563                     WAIT = YES );
     1204    16594        %FPT_WRITE ( FPTN = OUTPUT_HEADER,
     1205    16595                     DCB  = M$LO,
     1206    16596                     BUF  = OUT_SINGLE_LINE,
     1207    16597                     WAIT = YES );
     1208    16628        %FPT_OPEN ( FPTN = OPEN_ARCHIVE_FILE );
     1209    16737        %FPT_READ ( FPTN = READ_ARCHIVE_FILE );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:164  
     1210    16776        %FPT_CLOSE ( FPTN = CLOSE_ARCHIVE );
     1211    16818        %VLP_SN ( FPTN = DPSN,
     1212    16819                  N = 1,
     1213    16820                  STCLASS = STATIC );
     1214    16833        %VLP_SN ( STCLASS = BASED );
     1215    16846        %F$DCB ( STCLASS = "BASED" );
     1216    16903        %FPT_TIME ( FPTN = GET_TIME,
     1217    16904                    SOURCE = UTS,
     1218    16905                    DEST = LOCAL );
     1219    16924        %B$TCB ( STCLASS = "BASED ( B$TCB$ )" );
     1220    16927        %B$ALT;
     1221    16935        %VLP_ACCT ( FPTN = PREV_ACCT,
     1222    16936                    STCLASS = STATIC );
     1223    16949
     1224    16950        %EJECT;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:165  
     1225    16951
     1226    16952    1         OPEN_ARCHIVE_FILE = CON_OPEN_ARCHIVE_FILE;
     1227    16953    1         OPEN_ARCHIVE_FILE.V_ = VECTOR ( OPEN_ARCHIVE_FILE.V );
     1228    16954    1         OPEN_ARCHIVE_FILE.SN_ = VECTOR ( DPSN );
     1229    16955    1         READ_ARCHIVE_FILE = CON_READ_ARCHIVE_FILE;
     1230    16956    1         READ_ARCHIVE_FILE.V_ = VECTOR ( READ_ARCHIVE_FILE.V );
     1231    16957    1         CLOSE_ARCHIVE = CON_CLOSE_ARCHIVE;
     1232    16958    1         CLOSE_ARCHIVE.V_ = VECTOR ( CLOSE_ARCHIVE.V );
     1233    16959
     1234    16960    2         DO I = 0 TO NBR_CONTROL_FILE - 1;
     1235    16961    3              DO CASE ( CONTROL_LIST ( I ) );
     1236    16962
     1237    16963    3                CASE ( %ARCHIVE_FILE );
     1238    16964
     1239    16965        /* Open the :ARCHIVE.$$EFT file */
     1240    16966
     1241    16967    3                   DPSN.SN# ( 0 ) = DPLIST.SN# ( 0 );
     1242    16968    3                   OPEN_ARCHIVE_FILE.V.RES# = DPRESLIST.NAME(0);
     1243    16969    3                   CALL M$OPEN ( OPEN_ARCHIVE_FILE ) ALTRET ( ERR );
     1244    16970
     1245    16971        /* Read in size of the :ARCHIVE file and allocate buffer */
     1246    16972
     1247    16973    3                   READ_ARCHIVE_FILE.BUF_ = VECTOR ( SIZE );
     1248    16974    3                   CALL M$READ ( READ_ARCHIVE_FILE ) ALTRET ( ERR );
     1249    16975    3                   CALL FLI$ALLOC ( SIZE, START$ );
     1250    16976    3                   AVAIL$ = START$;
     1251    16977    3                   READ_ARCHIVE_FILE.BUF_.BUF$ = AVAIL$;
     1252    16978    3                   READ_ARCHIVE_FILE.BUF_.BOUND = SIZE * 4 - 1;
     1253    16979
     1254    16980        /* Read in :ARCHIVE.$$EFT */
     1255    16981
     1256    16982    3                   CALL M$READ ( READ_ARCHIVE_FILE ) ALTRET ( ERR );
     1257    16983        /***
     1258    16984         ***  If :ARCHIVE record is pre-D00, convert to D00 format.
     1259    16985        ***/
     1260    16986    3                   IF START$->ARCHIVE_LIST.VERSION.FLAG ~= BITBIN('777'O)
     1261    16987    3                   THEN
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:166  
     1262    16988    4                   DO;
     1263    16989    4                      CALL FLI$CNVRT_ARCHIVE(START$,AVAIL$);
     1264    16990    4                      START$ = AVAIL$;
     1265    16991    4                      SIZE = START$->ARCHIVE_LIST.SIZE;
     1266    16992    4                      END;
     1267    16993
     1268    16994        /* Output master packset name and control file name */
     1269    16995
     1270    16996    3                   OUT_SINGLE_LINE = ' ';
     1271    16997    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1272    16998
     1273    16999    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', DPSN.SN# ( 0 ),
             16999                            '/:ARCHIVE.$$EFT' );
     1274    17000    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1275    17001    3                   OUT_SINGLE_LINE = ' ';
     1276    17002    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1277    17003
     1278    17004        /* Output tape and optical disk options */
     1279    17005
     1280    17006    3                   IF AVAIL$->ARCHIVE_LIST.OD
     1281    17007    3                   THEN OUT_SINGLE_LINE = ' Optical Disc Options : ';
     1282    17008    3                   ELSE OUT_SINGLE_LINE = ' Tape Options : ';
     1283    17009    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1284    17010    4                   DO CASE( AVAIL$->ARCHIVE_LIST.OPTION.DEN );
     1285    17011    4                     CASE( %D800# );
     1286    17012    4                        TAPE_OPTION1.DENSITY = '800';
     1287    17013    4                     CASE( %D1600# );
     1288    17014    4                        TAPE_OPTION1.DENSITY = '1600';
     1289    17015    4                     CASE( %D6250# );
     1290    17016    4                        TAPE_OPTION1.DENSITY = '6250';
     1291    17017    4                     CASE( %D38000# );
     1292    17018    4                        TAPE_OPTION1.DENSITY = '38000';
     1293    17019    4                     CASE( ELSE );
     1294    17020    4                        TAPE_OPTION1.DENSITY = '????';
     1295    17021    4                     END;
     1296    17022    4                   DO CASE ( AVAIL$ -> ARCHIVE_LIST.OPTION.VOLA );
     1297    17023    4                     CASE ( %ALL# );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:167  
     1298    17024    4                        TAPE_OPTION1.VOLA = 'ALL';
     1299    17025    4                     CASE ( %IN# );
     1300    17026    4                        TAPE_OPTION1.VOLA = 'IN';
     1301    17027    4                     CASE ( %NONE# );
     1302    17028    4                        TAPE_OPTION1.VOLA = 'NONE';
     1303    17029    4                     CASE ( ELSE );
     1304    17030    4                        TAPE_OPTION1.VOLA = '????';            /* System default */
     1305    17031    4                     END;
     1306    17032    3                   IF AVAIL$ -> ARCHIVE_LIST.OPTION.EXP = %NEVER#
     1307    17033    3                   THEN TAPE_OPTION1.EXP = 'NEVER';
     1308    17034    4                   ELSE DO;
     1309    17035    4                        CALL BINCHAR ( TAPE_OPTION1.EXP, AVAIL$ -> ARCHIVE_LIST.OPTION.
             17035                                 EXP );
     1310    17036    4                        CALL EDITCHAR ( TAPE_OPTION1.EXP, , ,NO_4_LEADING_ZEROS,
     1311    17037    4                                   TAPE_OPTION1.EXP );
     1312    17038    4                      END;
     1313    17039    3                   CALL BINCHAR ( TAPE_OPTION1.BLOCK, AVAIL$ -> ARCHIVE_LIST.OPTION.
             17039                            BLOCK / 4096 );
     1314    17040    3                   CALL EDITCHAR ( TAPE_OPTION1.BLOCK, , ,NO_4_LEADING_ZEROS,
     1315    17041    3                                   TAPE_OPTION1.BLOCK );
     1316    17042    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR ( TAPE_OPTION1 );
     1317    17043    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET ( ERR );
     1318    17044    3                   IF AVAIL$ -> ARCHIVE_LIST.OPTION.CHECK
     1319    17045    3                   THEN TAPE_OPTION2.CHECK = 'YES';
     1320    17046    3                   ELSE TAPE_OPTION2.CHECK = 'NO';
     1321    17047    3                   IF AVAIL$ -> ARCHIVE_LIST.OPTION.IOERRORC
     1322    17048    3                   THEN TAPE_OPTION2.IOERRORC = 'YES';
     1323    17049    3                   ELSE TAPE_OPTION2.IOERRORC = 'NO';
     1324    17050    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR( TAPE_OPTION2 );
     1325    17051    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET(ERR);
     1326    17052
     1327    17053    3                   AVAIL$ = PINCRW ( START$, START$ -> ARCHIVE_LIST.OFFSET.DPLIST );
     1328    17054
     1329    17055        /* Output master packset name */
     1330    17056
     1331    17057    3                   OUT_SINGLE_LINE = ' Master Packset : ';
     1332    17058    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:168  
     1333    17059    3                   CALL CONCAT ( OUT_SINGLE_LINE, '            DP#',
     1334    17060    3                                 AVAIL$ -> VLP_SN.SN# ( 0 ) );
     1335    17061    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1336    17062
     1337    17063        /* Output member packset names */
     1338    17064
     1339    17065    3                   IF AVAIL$ -> VLP_SN.NUM# > 1
     1340    17066    4                   THEN DO;
     1341    17067    4                        OUT_SINGLE_LINE = ' Member Packset(s) : ';
     1342    17068    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1343    17069    4                        OUT_SINGLE_LINE = ' ';
     1344    17070    4                        OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 12 );
     1345    17071    4                        COUNT = 0;
     1346    17072    5                        DO K = 1 TO AVAIL$ -> VLP_SN.NUM# - 1;
     1347    17073    5                             CALL CONCAT ( OUT_PTR$ -> DPNAME, 'DP#', AVAIL$ -> VLP_SN.
             17073                                      SN# ( K ) );
     1348    17074    5                             OUT_PTR$ = PINCRC ( OUT_PTR$, 2 + LENGTHC ( 'DP#' ) +
             17074                                      LENGTHC ( DPNAME ) );
     1349    17075    5                             COUNT = COUNT + 1;
     1350    17076    5                             IF COUNT = 5
     1351    17077    6                             THEN DO;
     1352    17078    6                                  CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1353    17079    6                                  OUT_SINGLE_LINE = ' ';
     1354    17080    6                                  OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 12 );
     1355    17081    6                                  COUNT = 0;
     1356    17082    6                                END;
     1357    17083    5                           END;
     1358    17084    4                        IF COUNT ~= 5 THEN CALL M$WRITE ( OUTPUT_HEADER )
     1359    17085    4                                           ALTRET ( ERR );
     1360    17086    4                      END;
     1361    17087    3                   AVAIL$ = PINCRW ( START$, START$ -> ARCHIVE_LIST.OFFSET.SNLIST );
     1362    17088
     1363    17089        /* Output list of tape or optical disk serial numbers */
     1364    17090
     1365    17091    3                   IF AVAIL$ -> VLP_SN.NUM# > 0
     1366    17092    4                   THEN DO;
     1367    17093    4                        IF START$->ARCHIVE_LIST.OD
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:169  
     1368    17094    4                        THEN OUT_SINGLE_LINE =
             17094                                 ' Current Optical Disc Serial Number(s) : ';
     1369    17095    4                        ELSE OUT_SINGLE_LINE = ' Current Tape Serial Number(s) : ';
     1370    17096    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1371    17097    4                      END;
     1372    17098    3                   CALL DISPLAY_TSN;
     1373    17099    3                   IF STAF AND START$->ARCHIVE_LIST.OFFSET.SNLIST2 ~= 0
     1374    17100    4                   THEN DO;
     1375    17101    4                        AVAIL$ = PINCRW ( START$, START$->ARCHIVE_LIST.OFFSET.SNLIST2 )
             17101                                 ;
     1376    17102    4                        OUT_SINGLE_LINE = ' Duplicate Tape Serial Number(s) : ';
     1377    17103    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1378    17104    4                        CALL DISPLAY_TSN;
     1379    17105    4                      END;
     1380    17106    3                   CALL M$CLOSE ( CLOSE_ARCHIVE ) ALTRET ( ERR );
     1381    17107
     1382    17108    3                CASE ( %BACKUP_FILE );
     1383    17109
     1384    17110    3                   IF NOT DCBADDR ( DCBNUM ( M$STATUS ) ) -> F$DCB.FCD#
     1385    17111    4                   THEN DO;
     1386    17112    4                        BACKUP_SN.SN# ( 0 ) = DPLIST.SN# ( 0 );
     1387    17113    4                        OPEN_STATUS.V.RES# = DPRESLIST.NAME(0);
     1388    17114    4                        OPEN_STATUS.V.FUN# = %IN#;
     1389    17115    4                        CALL M$OPEN ( OPEN_STATUS ) ALTRET ( ERR );
     1390    17116    4                      END;
     1391    17117
     1392    17118        /* Output header */
     1393    17119
     1394    17120    3                   OUT_SINGLE_LINE = ' ';
     1395    17121    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1396    17122    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', BACKUP_SN.SN# ( 0 ),
             17122                            '/:BACKUP.$$EFT' );
     1397    17123    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1398    17124    3                   OUT_SINGLE_LINE = ' ';
     1399    17125    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1400    17126
     1401    17127        /* Read the first record in :BACKUP file */
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:170  
     1402    17128
     1403    17129    3                   READ_STATUS.V.KEYS# = '1'B;
     1404    17130    3                   STATUS_KEY.L = LENGTHV ( STATUS_KEY );
     1405    17131    3                   STATUS_KEY.RUN_NBR = 0;
     1406    17132    3                   STATUS_KEY.TSN_SET_NBR = 0;
     1407    17133    3                   STATUS_KEY.TSN_VOL = 0;
     1408    17134    3                   CALL M$READ ( READ_STATUS )
     1409    17135    4                    WHENRETURN DO;
     1410    17136    4                        IF STAF THEN RUN_NBR = 1;
     1411    17137    4                        ELSE RUN_NBR = TSN_USED_BUF.UTS;
     1412    17138    4                      END;
     1413    17139    4                    WHENALTRETURN DO;
     1414    17140    4                        RUN_NBR = 1;
     1415    17141    4                      END;
     1416    17142
     1417    17143        /* Output the backup record header */
     1418    17144
     1419    17145    3                   OUT_SINGLE_LINE = BACKUP_HDR_CHAR;
     1420    17146    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1421    17147
     1422    17148        /* Read the first backup data record by key */
     1423    17149
     1424    17150    3                   STATUS_KEY.L = LENGTHV ( STATUS_KEY );
     1425    17151    3                   STATUS_KEY.RUN_NBR = RUN_NBR;
     1426    17152    3                   STATUS_KEY.TSN_SET_NBR = 1;
     1427    17153    3                   STATUS_KEY.TSN_VOL = 1;
     1428    17154    4                   DO WHILE ( '1'B );
     1429    17155    4                        CALL M$READ ( READ_STATUS )
     1430    17156    4                         WHENRETURN
     1431    17157    5                         DO;
     1432    17158        /* Read the following backup data record in sequence */
     1433    17159
     1434    17160    5                           READ_STATUS.V.KEYS# = '0'B;
     1435    17161    5                           CALL BINCHAR ( BACKUP_REC.RUN_NUM, STATUS_KEY.RUN_NBR );
     1436    17162    5                           CALL EDITCHAR ( BACKUP_REC.RUN_NUM, , ,NO_4_LEADING_ZEROS,
     1437    17163    5                                           BACKUP_REC.RUN_NUM );
     1438    17164    5                           CALL BINCHAR ( BACKUP_REC.SET_NUM, STATUS_KEY.TSN_SET_NBR );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:171  
     1439    17165    5                           CALL EDITCHAR ( BACKUP_REC.SET_NUM, , ,NO_4_LEADING_ZEROS,
     1440    17166    5                                           BACKUP_REC.SET_NUM );
     1441    17167    5                           CALL BINCHAR ( BACKUP_REC.VOL_NUM, STATUS_KEY.TSN_VOL );
     1442    17168    5                           CALL EDITCHAR ( BACKUP_REC.VOL_NUM, , ,NO_4_LEADING_ZEROS,
     1443    17169    5                                           BACKUP_REC.VOL_NUM );
     1444    17170    5                           GET_TIME.TSTAMP_ = VECTOR ( TSN_USED_BUF.UTS );
     1445    17171    5                           IF TEST_MODE
     1446    17172    5                           THEN TSN_USED_BUF.UTS = 0;
     1447    17173    5                           GET_TIME.DATE_ = VECTOR ( BACKUP_REC.DATE );
     1448    17174    5                           GET_TIME.TIME_ = VECTOR ( BACKUP_REC.TIME );
     1449    17175    5                           CALL M$TIME ( GET_TIME );
     1450    17176    5                           BACKUP_REC.FIRST_ACCT = TSN_USED_BUF.FIRST_ACCT;
     1451    17177    5                           BACKUP_REC.LAST_ACCT = TSN_USED_BUF.LAST_ACCT;
     1452    17178    5                           BACKUP_REC.TSN_NUM = TSN_USED_BUF.TSN;
     1453    17179    5                           CALL BINCHAR ( BACKUP_REC.FSN_NUM, TSN_USED_BUF.FSN );
     1454    17180    5                           CALL EDITCHAR ( BACKUP_REC.FSN_NUM, , ,NO_4_LEADING_ZEROS,
     1455    17181    5                                           BACKUP_REC.FSN_NUM );
     1456    17182    5                           IF DCBADDR(DCBNUM(M$STATUS)) -> F$DCB.ARS# <
     1457    17183    5                                LENGTHC(TSN_USED_BUF)        /* Pre-E00 :BACKUP? */
     1458    17184    5                           THEN BACKUP_REC.BACKUP_FSN_NUM = ' ';
     1459    17185    6                           ELSE DO;
     1460    17186    6                                CALL BINCHAR ( BACKUP_REC.BACKUP_FSN_NUM,
     1461    17187    6                                               TSN_USED_BUF.BACKUP_FSN );
     1462    17188    6                                CALL EDITCHAR ( BACKUP_REC.BACKUP_FSN_NUM, , ,
     1463    17189    6                                                NO_4_LEADING_ZEROS,
     1464    17190    6                                                BACKUP_REC.BACKUP_FSN_NUM );
     1465    17191    6                              END;
     1466    17192    5                           OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR ( BACKUP_REC );
     1467    17193    5                           CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET ( ERR );
     1468    17194    5                         END;
     1469    17195    4                         WHENALTRETURN
     1470    17196    5                         DO;
     1471    17197    5                            IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$EOF
     1472    17198    6                            THEN DO;
     1473    17199    6                                 CALL M$CLOSE ( CLOSE_STATUS ) ALTRET ( ERR );
     1474    17200    6                                 GOTO NEXT_FILE;
     1475    17201    6                               END;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:172  
     1476    17202    5                            ELSE READ_STATUS.V.KEYS# = '0'B;
     1477    17203    5                           END;
     1478    17204    4                      END;
     1479    17205    3                CASE ( %PRIME_FILE, %DUAL_FILE );
     1480    17206
     1481    17207    3                   IF CONTROL_LIST ( I ) = %PRIME_FILE
     1482    17208    3                   THEN OPEN_PRIME_DUAL.NAME_ = VECTOR ( PRIME_FILE );
     1483    17209    3                   ELSE OPEN_PRIME_DUAL.NAME_ = VECTOR ( DUAL_FILE );
     1484    17210    3                   OPEN_PRIME_DUAL.ACCT_ = VECTOR ( BACKUP_ACCT );
     1485    17211    3                   OPEN_PRIME_DUAL.V.FUN# = %IN#;
     1486    17212    3                   OPEN_PRIME_DUAL.SN_ = VECTOR ( DPLIST );
     1487    17213    3                   OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);
     1488    17214    3                   OPEN_PRIME_DUAL.V.OPER = '0'B;
     1489    17215    3                   CALL M$OPEN ( OPEN_PRIME_DUAL ) ALTRET ( ERR );
     1490    17216
     1491    17217    3                   OUT_SINGLE_LINE = ' ';
     1492    17218    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1493    17219
     1494    17220    3                   IF CONTROL_LIST(I) = %PRIME_FILE
     1495    17221    3                   THEN CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', DPLIST.SN# ( 0 ),
             17221                            '/:PRIME.$$EFT' );
     1496    17222    3                   ELSE CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', DPLIST.SN# ( 0 ),
             17222                            '/:DUAL.$$EFT' );
     1497    17223    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1498    17224
     1499    17225    3                   OUT_SINGLE_LINE = ' ';
     1500    17226    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1501    17227
     1502    17228    3                   CALL M$READ ( READ_PRIME_DUAL ) ALTRET ( ERR );
     1503    17229    3                   PRIME_AND_DUAL.PRIME_PACK = PRIME_DUAL_BUF.PRIME;
     1504    17230    3                   PRIME_AND_DUAL.DUAL_PACK = PRIME_DUAL_BUF.DUAL;
     1505    17231    3                   OUT_SINGLE_LINE = PRIME_AND_DUAL_CHARS;
     1506    17232    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1507    17233    3                   OUT_SINGLE_LINE = ' ';
     1508    17234    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1509    17235
     1510    17236    3                   GET_TIME.DATE_ = VECTOR( TIME_BUF.DATE );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:173  
     1511    17237    3                   GET_TIME.TIME_ = VECTOR( TIME_BUF.TIME );
     1512    17238    3                   GET_TIME.TSTAMP_ = VECTOR( PRIME_DUAL_BUF.UTS );
     1513    17239    3                   IF TEST_MODE
     1514    17240    3                   THEN PRIME_DUAL_BUF.UTS = 0;
     1515    17241    3                   CALL M$TIME ( GET_TIME ) ALTRET ( ERR );
     1516    17242
     1517    17243    3                   OUT_SINGLE_LINE = TIME_BUF_CHARS;
     1518    17244    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1519    17245
     1520    17246    3                   NO_INCR_TIME = '1'B;
     1521    17247    3                   IF STAF
     1522    17248    4                   THEN DO;
     1523    17249    4                        OUT_SINGLE_LINE = ' ';
     1524    17250    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1525    17251    4                        OUT_SINGLE_LINE = '        INCREMENTALs : ';
     1526    17252    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1527    17253    5                        DO WHILE ( '1'B );
     1528    17254    5                           CALL M$READ ( READ_PRIME_DUAL )
     1529    17255    6                              WHENRETURN DO;
     1530    17256    6                               GET_TIME.DATE_ = VECTOR( TIME_BUF.DATE );
     1531    17257    6                               GET_TIME.TIME_ = VECTOR( TIME_BUF.TIME );
     1532    17258    6                               GET_TIME.TSTAMP_ = VECTOR( PRIME_DUAL_BUF.UTS );
     1533    17259    6                               IF TEST_MODE
     1534    17260    6                               THEN PRIME_DUAL_BUF.UTS = 0;
     1535    17261    6                               CALL M$TIME ( GET_TIME ) ALTRET ( ERR );
     1536    17262    6                               OUT_SINGLE_LINE = TIME_BUF_CHARS;
     1537    17263    6                               CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1538    17264    6                               NO_INCR_TIME = '0'B;
     1539    17265    6                               END;
     1540    17266    6                              WHENALTRETURN DO;
     1541    17267    6                                IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE
     1542    17268    6                                   ~= %E$EOF
     1543    17269    7                                THEN DO;
     1544    17270    7                                     CALL M$CLOSE ( CLOSE_PRIME_DUAL ) ALTRET ( ERR );
     1545    17271    7                                     GOTO ERR;
     1546    17272    7                                   END;
     1547    17273    7                                ELSE DO;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:174  
     1548    17274    7                                     IF NO_INCR_TIME
     1549    17275    8                                     THEN DO;
     1550    17276    8                                          OUT_SINGLE_LINE = '        None';
     1551    17277    8                                          CALL M$WRITE ( OUTPUT_HEADER )  ALTRET ( ERR
             17277                                                   );
     1552    17278    8                                        END;
     1553    17279    7                                     CALL M$CLOSE ( CLOSE_PRIME_DUAL ) ALTRET ( ERR );
     1554    17280    7                                     GOTO NEXT_FILE;
     1555    17281    7                                   END;
     1556    17282    6                                END;
     1557    17283    5                          END;
     1558    17284    4                      END;
     1559    17285    3                CASE ( %REBUILD_FILE );
     1560    17286
     1561    17287    3                   CLOSE_REBUILD.V.DISP# = %SAVE#;
     1562    17288    3                   OPEN_REBUILD.V.FUN# = %IN#;
     1563    17289    3                   REBUILD_SN.SN#( 0 ) = DPLIST.SN# ( 0 );
     1564    17290    3                   OPEN_REBUILD.V.RES# = DPRESLIST.NAME(0);
     1565    17291    3                   CALL M$OPEN ( OPEN_REBUILD ) ALTRET( ERR );
     1566    17292
     1567    17293        /* Output header */
     1568    17294
     1569    17295    3                   OUT_SINGLE_LINE = ' ';
     1570    17296    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1571    17297    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', REBUILD_SN.SN# ( 0 ),
             17297                            '/:REBUILD.$$EFT' );
     1572    17298    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1573    17299    3                   OUT_SINGLE_LINE = ' ';
     1574    17300    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1575    17301
     1576    17302    3                   READ_REBUILD.KEY_ = VECTOR( REBUILD_KEY );
     1577    17303    3                   CALL M$READ ( READ_REBUILD ) ALTRET ( ERR );
     1578    17304    3                   CALL M$CLOSE ( CLOSE_REBUILD ) ALTRET ( ERR );
     1579    17305    3                   OUT_SINGLE_LINE = REBUILD_HDR_CHAR;
     1580    17306    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1581    17307    3                   REBUILD_REC.TSN_NUM = REBUILD_BUF.TSN;
     1582    17308    3                   CALL BINCHAR ( REBUILD_REC.VOL_NUM, REBUILD_BUF.VOLUME );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:175  
     1583    17309    3                   CALL EDITCHAR ( REBUILD_REC.VOL_NUM, , ,NO_4_LEADING_ZEROS,
     1584    17310    3                                   REBUILD_REC.VOL_NUM );
     1585    17311    3                   CALL BINCHAR ( REBUILD_REC.FSN_NUM, REBUILD_BUF.FSN );
     1586    17312    3                   CALL EDITCHAR ( REBUILD_REC.FSN_NUM, , ,NO_4_LEADING_ZEROS,
     1587    17313    3                                   REBUILD_REC.FSN_NUM );
     1588    17314    3                   REBUILD_REC.LAST_ACCT = REBUILD_BUF.START.ACCT.ACCT#;
     1589    17315    3                   REBUILD_REC.LAST_FILE = REBUILD_BUF.START.FILE.NAME#;
     1590    17316    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR ( REBUILD_REC );
     1591    17317    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET ( ERR );
     1592    17318    3                   OUT_SINGLE_LINE = ' ';
     1593    17319    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1594    17320    3                   OUT_SINGLE_LINE = ' Tape Options : ';
     1595    17321    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1596    17322    4                   DO CASE( REBUILD_BUF.DEN );
     1597    17323    4                     CASE( %D800# );
     1598    17324    4                        TAPE_OPTION3.DENSITY = '800';
     1599    17325    4                     CASE( %D1600# );
     1600    17326    4                        TAPE_OPTION3.DENSITY = '1600';
     1601    17327    4                     CASE( %D6250# );
     1602    17328    4                        TAPE_OPTION3.DENSITY = '6250';
     1603    17329    4                     CASE( %D38000# );
     1604    17330    4                        TAPE_OPTION3.DENSITY = '38000';
     1605    17331    4                     CASE( ELSE );
     1606    17332    4                        TAPE_OPTION3.DENSITY = '????';
     1607    17333    4                     END;
     1608    17334    3                   IF REBUILD_BUF.PAD
     1609    17335    3                   THEN TAPE_OPTION3.PAD = 'YES';
     1610    17336    3                   ELSE TAPE_OPTION3.PAD = 'NO';
     1611    17337    3                   IF REBUILD_BUF.DIR
     1612    17338    3                   THEN TAPE_OPTION3.DIR = 'YES';
     1613    17339    3                   ELSE TAPE_OPTION3.DIR = 'NO';
     1614    17340    3                   IF REBUILD_BUF.IOERRORC
     1615    17341    3                   THEN TAPE_OPTION3.IOERRORC = 'YES';
     1616    17342    3                   ELSE TAPE_OPTION3.IOERRORC = 'NO';
     1617    17343    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR( TAPE_OPTION3 );
     1618    17344    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET(ERR);
     1619    17345    3                CASE ( %NODATA_FILE );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:176  
     1620    17346
     1621    17347    3                   IF DCBADDR ( DCBNUM ( M$NODATA_LIST ) ) -> F$DCB.FCD#
     1622    17348    3                   THEN CALL M$CLOSE ( CLOSE_NODATA_LIST ) ALTRET ( ERR );
     1623    17349    3                   OPEN_NODATA_LIST.V.FUN# = %IN#;
     1624    17350    3                   OPEN_NODATA_LIST.V.RES# = DPRESLIST.NAME ( 0 );
     1625    17351    3                   NODATA_SN.SN# ( 0 ) = DPLIST.SN# ( 0 );
     1626    17352    3                   CALL M$OPEN ( OPEN_NODATA_LIST ) ALTRET ( ERR );
     1627    17353
     1628    17354        /* Output headers if file contains data */
     1629    17355    3                   CALL M$READ ( READ_NODATA_LIST ) ALTRET ( NEXT_FILE );
     1630    17356    3                   CALL M$CLOSE ( CLOSE_NODATA_LIST ) ALTRET ( ERR );
     1631    17357    3                   CALL M$OPEN ( OPEN_NODATA_LIST ) ALTRET ( ERR );
     1632    17358
     1633    17359    3                   OUT_SINGLE_LINE = ' ';
     1634    17360    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1635    17361    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', NODATA_SN.SN# ( 0 ),
             17361                            '/:NODATA.$$EFT' );
     1636    17362    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1637    17363    3                   OUT_SINGLE_LINE = ' ';
     1638    17364    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1639    17365
     1640    17366    3                   OUT_SINGLE_LINE = NODATA_HDR;
     1641    17367    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET (ERR );
     1642    17368
     1643    17369    3                   PREV_ACCT.ACCT# = ' ';
     1644    17370    3                   OUT_SINGLE_LINE = ' ';
     1645    17371    3                   K = 0;
     1646    17372    3                   CURR_TAB = 0;
     1647    17373        /* Read :NODATA file and output account followed by files within that account */
     1648    17374    4                   DO WHILE ( '1'B );
     1649    17375    4                         CALL M$READ ( READ_NODATA_LIST )
     1650    17376    5                          WHENRETURN DO;
     1651    17377    5                           IF NODATA_KEY.ACCT# ~= PREV_ACCT.ACCT#
     1652    17378    6                           THEN DO;
     1653    17379    6                                IF CURR_TAB > 0 /* Print rest of files for acct. */
     1654    17380    7                                THEN DO;
     1655    17381    7                                     CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:177  
     1656    17382    7                                     CURR_TAB = 0;
     1657    17383    7                                     OUT_SINGLE_LINE = ' ';
     1658    17384    7                                     CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1659    17385    7                                   END;
     1660    17386    6                                OUT_SINGLE_LINE = NODATA_KEY.ACCT#;
     1661    17387    6                                CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1662    17388    6                                PREV_ACCT.ACCT# = NODATA_KEY.ACCT#;
     1663    17389    6                                OUT_SINGLE_LINE = ' ';
     1664    17390    6                                END;
     1665    17391
     1666    17392    5                           IF ( CURR_TAB + NODATA_KEY.NAME#.L) >
     1667    17393    5                               LENGTHC ( OUT_SINGLE_LINE ) - 1
     1668    17394    6                           THEN DO; /* Current file won't fit on line, print buffer */
     1669    17395    6                                CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1670    17396    6                                OUT_SINGLE_LINE = ' ';
     1671    17397    6                                CURR_TAB = 0;
     1672    17398    6                                END;
     1673    17399
     1674    17400    5                           CALL INSERT ( OUT_SINGLE_LINE,CURR_TAB,NODATA_KEY.NAME#.L,
             17400                                    NODATA_KEY.NAME#.C );
     1675    17401    5                           IF ( CURR_TAB + NODATA_KEY.NAME#.L ) > COLS ( NBR_COLS - 1 )
     1676    17402    6                           THEN DO;      /* File exceeded last tab, print buffer */
     1677    17403    6                                CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
     1678    17404    6                                OUT_SINGLE_LINE = ' ';
     1679    17405    6                                CURR_TAB = 0;
     1680    17406    6                                END;
     1681    17407    6                           ELSE DO;                              /* Set next tab */
     1682    17408    7                                DO K = 0 TO NBR_COLS - 1;
     1683    17409    7                                   IF ( CURR_TAB + NODATA_KEY.NAME#.L ) < COLS ( K )
     1684    17410    8                                   THEN DO;
     1685    17411    8                                        CURR_TAB = COLS ( K );
     1686    17412    8                                        K = NBR_COLS + 1;
     1687    17413    8                                        END;
     1688    17414    7                                   END;
     1689    17415    6                                END;
     1690    17416    5                              END;
     1691    17417    5                          WHENALTRETURN DO;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:178  
     1692    17418    5                             IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$EOF
     1693    17419    6                             THEN DO;
     1694    17420    6                                  IF CURR_TAB > 0        /* Print data in buffer */
     1695    17421    6                                       THEN CALL M$WRITE ( OUTPUT_HEADER )
     1696    17422    6                                           ALTRET ( ERR );
     1697    17423    6                                  CALL M$CLOSE ( CLOSE_NODATA_LIST ) ALTRET ( ERR );
     1698    17424    6                                  GOTO NEXT_FILE;
     1699    17425    6                                  END;
     1700    17426    5                            END;
     1701    17427    4                      END;
     1702    17428    3                END; /* DO CASE ( CONTROL_LIST ( I ) ) */
     1703    17429    3                DO WHILE ( '0'B );
     1704    17430    3   ERR:               CALL FLI$RPT_ERR;
     1705    17431    3                   END;
     1706    17432    2   NEXT_FILE:   IF DCBADDR ( DCBNUM ( M$STATUS ) ) -> F$DCB.FCD#
     1707    17433    2                THEN CALL M$CLOSE ( CLOSE_STATUS );
     1708    17434    2                IF DCBADDR ( DCBNUM ( M$ARCHIVE ) ) -> F$DCB.FCD#
     1709    17435    2                THEN CALL M$CLOSE ( CLOSE_ARCHIVE );
     1710    17436    2                IF DCBADDR ( DCBNUM ( M$REBUILD ) ) -> F$DCB.FCD#
     1711    17437    2                THEN CALL M$CLOSE ( CLOSE_REBUILD );
     1712    17438    2                IF DCBADDR ( DCBNUM ( M$NODATA_LIST ) ) -> F$DCB.FCD#
     1713    17439    2                THEN CALL M$CLOSE ( CLOSE_NODATA_LIST );
     1714    17440    2                IF BREAK_COUNT > 0 THEN RETURN;
     1715    17441    2            END;
     1716    17442        %EJECT;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:179  
     1717    17443    1   DISPLAY_TSN: PROC;
     1718    17444
     1719    17445        /* Take where AVAIL$ points at as a VLP_SN structure and output tape
     1720    17446           serial numbers 5 on a line */
     1721    17447
     1722    17448    2   DCL LIST_LEN UBIN;
     1723    17449    2   DCL K UBIN;
     1724    17450
     1725    17451    2        COUNT = 0;
     1726    17452    2        OUT_SINGLE_LINE = ' ';
     1727    17453    2        OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 8 );
     1728    17454    3        DO K = 0 TO AVAIL$ -> VLP_SN.NUM# - 1;
     1729    17455    3             OUT_PTR$ -> VLP_SN.SN# ( 0 ) = AVAIL$ -> VLP_SN.SN# ( K );
     1730    17456    3             OUT_PTR$ = PINCRC ( OUT_PTR$, 2 + LENGTHC ( VLP_SN.SN# ( 0 ) ) );
     1731    17457    3             COUNT = COUNT + 1;
     1732    17458    3             IF COUNT = 5
     1733    17459    4             THEN DO;
     1734    17460    4                  CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERROR );
     1735    17461    4                  COUNT = 0;
     1736    17462    4                  OUT_SINGLE_LINE = ' ';
     1737    17463    4                  OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 8 );
     1738    17464    4                END;
     1739    17465    3           END;
     1740    17466    2         IF COUNT ~= 5 AND OUT_SINGLE_LINE ~= ' '
     1741    17467    2         THEN CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERROR );
     1742    17468    2         LIST_LEN = ( LENGTHC ( AVAIL$ -> VLP_SN.NUM# ) + AVAIL$ -> VLP_SN.NUM# *
     1743    17469    2                LENGTHC ( VLP_SN.SN# ( 0 ) ) + 3 ) / 4;
     1744    17470    2         AVAIL$ = PINCRW ( AVAIL$, LIST_LEN );
     1745    17471
     1746    17472    2         RETURN;
     1747    17473    2   ERROR:CALL FLI$RPT_ERR;
     1748    17474    2   END DISPLAY_TSN;
     1749    17475    1   END FLS$STATUS;

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:180  
--  Include file information  --

   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLS$STATUS.

   Procedure FLS$STATUS requires 1275 words for executable code.
   Procedure FLS$STATUS requires 20 words of local(AUTO) storage.

    No errors detected in file FLS$STOW_FETCH.:E05TSI    .

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:181  

 Object Unit name= FLS$STATUS                                 File name= FLS$STOW_FETCH.:E05TOU
 UTS= JUL 29 '97 16:26:34.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$PRE_RET
    2   Data  even  none   340    524  FLS$STATUS
    3   DCB   even  none     0      0  M$TSN_USED
    4   DCB   even  none     0      0  M$STATUS
    5   DCB   even  none     0      0  M$REBUILD
    6   DCB   even  none     0      0  M$ARCHIVE
    7   DCB   even  none     0      0  M$NODATA_LIST
    8   DCB   even  none     0      0  M$LO
    9  RoData even  UTS     99    143  FLS$STATUS
   10   Proc  even  none  1275   2373  FLS$STATUS
   11  RoData even  none    43     53  FLS$STATUS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes            yes      Std        0  FLS$STATUS
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:182  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FLI$ALLOC
         yes           Std       2 FLI$CNVRT_ARCHIVE
         yes           Std       5 FLI$RPT_ERR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  TAPE_DCBLIST$                         SNVECLIST$
     B$TCB$                                DPLIST$                               DPRESLIST$
     DISK_FILE_SPEC$                       SPECCHARS                             EFTWORD
     STAF                                  NBR_CONTROL_FILE                      CONTROL_LIST
r    NO_4_LEADING_ZEROS                    M$PRE_RET                             RET_CMDS_NAME
     TEST_MODE                             M$TSN_USED                            M$STATUS
     M$REBUILD                             M$ARCHIVE                             M$NODATA_LIST
     BLK_TAG$                              BLK_TAG0$                             NBR_BYTES_TO_MOVE
     DISK_GRAN$                            BLOCK_GRAN$                      r    EFT_CVOL_FILE
r    EFT_RESTRICT_FILE                     RUN_NBR                               STATUS_KEY
     TSN_USED_BUF                          TSN_USED_NAME                         OPEN_STATUS
     BACKUP_NAME                           BACKUP_SN                             READ_STATUS
     CLOSE_STATUS                     r    CON_CLOSE_ARCHIVE                r    CON_OPEN_ARCHIVE_FILE
r    CON_READ_ARCHIVE_FILE            r    ARCHIVE_NAME                          PRIME_DUAL_BUF
r    PRIME_FILE                       r    DUAL_FILE                             OPEN_PRIME_DUAL
     READ_PRIME_DUAL                       CLOSE_PRIME_DUAL                      OPEN_REBUILD
     REBUILD_NAME                          REBUILD_SN                            READ_REBUILD
     CLOSE_REBUILD                         REBUILD_DIR_KEY                       REBUILD_KEY
     REBUILD_BUF                           OPEN_NODATA_LIST                      NODATA_FILE_NAME
     NODATA_SN                             CLOSE_NODATA_LIST                     READ_NODATA_LIST
     NODATA_KEY                            BREAK_COUNT                           M$LO
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:183  
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:184  


     1026        1        /*T***********************************************************/
     1027        2        /*T*                                                         */
     1028        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1029        4        /*T*                                                         */
     1030        5        /*T***********************************************************/
     1031        6        FLS$STATUS: PROC;

      6 10 000000   000000 700200 xent  FLS$STATUS   TSX0  ! X66_AUTO_0
        10 000001   000024 000000                    ZERO    20,0

     1032        7
     1033        8        /*F*  NAME: FLS$STATUS
     1034        9              PURPOSE: To process the STATUS command; opening up :ARCHIVE and
     1035       10                      :BACKUP files, then output the content. */
     1036       11
     1037       12        /*******************
     1038       13          INCLUDE FILES
     1039       14         *******************/
     1040       15
     1041       16        %INCLUDE CP_6;
     1042     5575        %INCLUDE CP_6_SUBS;
     1043     6115        %INCLUDE B_ERRORS_C;
     1044     7242        %INCLUDE FLI_DATA_R;
     1045     8656        %INCLUDE FLS_DATA_R;
     1046    10456        %INCLUDE FLE_DATA_R;
     1047    16407
     1048    16408        /*****************
     1049    16409          EXTERNAL ENTRIES
     1050    16410         *****************/
     1051    16411
     1052    16412    1   DCL FLI$ALLOC ENTRY ( 2 );
     1053    16413    1   DCL FLI$RPT_ERR ENTRY ( 5 );
     1054    16414    1   DCL FLI$CNVRT_ARCHIVE ENTRY( 2 );
     1055    16415
     1056    16416        /*********
     1057    16417         SYMREF
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:185  
     1058    16418         *********/
     1059    16419
     1060    16420    1   DCL BREAK_COUNT SYMREF UBIN;
     1061    16421
     1062    16422        /******
     1063    16423          DCLS
     1064    16424         ******/
     1065    16425
     1066    16426    1   DCL I UBIN;
     1067    16427    1   DCL J UBIN;
     1068    16428    1   DCL K UBIN;
     1069    16429    1   DCL SIZE UBIN;
     1070    16430    1   DCL AVAIL$ PTR;
     1071    16431    1   DCL BLANK2 CHAR ( 2 ) STATIC INIT ( '  ' );
     1072    16432    1   DCL COUNT UBIN;
     1073    16433    1   DCL OUT_PTR$ PTR;
     1074    16434    1   DCL START$ PTR;
     1075    16435    1   DCL LAST_RUN UBIN;
     1076    16436
     1077    16437    1   DCL OUT_SINGLE_LINE CHAR(80) STATIC;
     1078    16438    1   DCL DPNAME CHAR ( 9 ) BASED;
     1079    16439    1   DCL COLS (0:6) UBIN WORD STATIC INIT(0,11,22,33,44,55,66);       /* Tab stops */
     1080    16440    1   DCL NBR_COLS SBIN WORD STATIC INIT(SIZEW(COLS));
     1081    16441    1   DCL CURR_TAB UBIN;                                    /* Current tab location */
     1082    16442    1   DCL 1 TAPE_OPTION1 STATIC,
     1083    16443    1         2 * CHAR ( 12 ) INIT ( ' ' ),
     1084    16444    1         2 * CHAR ( 10 ) INIT ( 'DENSITY = ' ),
     1085    16445    1         2 DENSITY CHAR ( 5 ),
     1086    16446    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1087    16447    1         2 * CHAR ( 12 ) INIT ( 'VOLACCESS = ' ),
     1088    16448    1         2 VOLA CHAR ( 5 ),
     1089    16449    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1090    16450    1         2 * CHAR ( 9 ) INIT ( 'EXPIRE = ' ),
     1091    16451    1         2 EXP CHAR ( 5 ),
     1092    16452    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1093    16453    1         2 * CHAR ( 8 ) INIT ( 'BLOCK = ' ),
     1094    16454    1         2 BLOCK CHAR ( 5 );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:186  
     1095    16455    1   DCL 1 TAPE_OPTION2 STATIC,
     1096    16456    1         2 * CHAR( 12 ) INIT ( ' ' ),
     1097    16457    1         2 * CHAR( 8 ) INIT ( 'CHECK = ' ),
     1098    16458    1         2 CHECK CHAR ( 3 ),
     1099    16459    1         2 * CHAR( 2 ) INIT ( ', ' ),
     1100    16460    1         2 * CHAR ( 13 ) INIT ( 'IOERR CONT = ' ),
     1101    16461    1         2 IOERRORC CHAR ( 3 );
     1102    16462    1   DCL 1 BACKUP_HDR STATIC,
     1103    16463    1         2 * CHAR ( 3 ) INIT ( 'Run' ),
     1104    16464    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1105    16465    1         2 * CHAR ( 4 ) INIT ( ' Set' ),
     1106    16466    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1107    16467    1         2 * CHAR ( 4 ) INIT ( ' VOL' ),
     1108    16468    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1109    16469    1         2 * CHAR ( 4 ) INIT ( 'Date' ),
     1110    16470    1         2 * CHAR ( 12 ) INIT ( ' ' ),
     1111    16471    1         2 * CHAR ( 6 ) INIT ( 'Volume' ),
     1112    16472    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1113    16473    1         2 * CHAR ( 4 ) INIT ( ' FSN' ),
     1114    16474    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1115    16475    1         2 * CHAR ( 14 ) INIT ( 'Accounts Saved' ),
     1116    16476    1         2 * CHAR ( 7 ) INIT ( ' ' ),
     1117    16477    1         2 * CHAR ( 11 ) INIT ( ':BACKUP FSN' );
     1118    16478
     1119    16479    1   DCL BACKUP_HDR_CHAR REDEF BACKUP_HDR CHAR ( 79 );
     1120    16480
     1121    16481    1   DCL 1 BACKUP_REC STATIC,
     1122    16482    1         2 RUN_NUM CHAR ( 3 ),
     1123    16483    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1124    16484    1         2 SET_NUM CHAR ( 4 ),
     1125    16485    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1126    16486    1         2 VOL_NUM CHAR ( 4 ),
     1127    16487    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1128    16488    1         2 DATE CHAR ( 8 ),
     1129    16489    1         2 * CHAR ( 1 ) INIT ( ' ' ),
     1130    16490    1         2 TIME CHAR ( 5 ),
     1131    16491    1         2 * CHAR ( 2 ) INIT ( ' ' ),
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:187  
     1132    16492    1         2 TSN_NUM CHAR ( 6 ),
     1133    16493    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1134    16494    1         2 FSN_NUM CHAR ( 4 ),
     1135    16495    1         2 * CHAR(2) INIT(' '),
     1136    16496    1         2 FIRST_ACCT CHAR(8),
     1137    16497    1         2 * CHAR(3) INIT(' - '),
     1138    16498    1         2 LAST_ACCT CHAR(8),
     1139    16499    1         2 * CHAR(9) INIT(' '),
     1140    16500    1         2 BACKUP_FSN_NUM CHAR(4);
     1141    16501    1   DCL 1 PRIME_AND_DUAL STATIC,
     1142    16502    1         2 * CHAR ( 12 ) INIT ( 'Prime Pack: ' ),
     1143    16503    1         2 PRIME_PACK CHAR ( 6 ),
     1144    16504    1         2 * CHAR ( 3 ) INIT ( '   ' ),
     1145    16505    1         2 * CHAR ( 11 ) INIT ( 'Dual Pack: ' ),
     1146    16506    1         2 DUAL_PACK CHAR ( 6 );
     1147    16507    1   DCL PRIME_AND_DUAL_CHARS REDEF PRIME_AND_DUAL CHAR(38);
     1148    16508    1   DCL 1 TIME_BUF STATIC,
     1149    16509    1         2 * CHAR ( 8 ) INIT ( ' ' ),
     1150    16510    1         2 DATE CHAR ( 8 ),
     1151    16511    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1152    16512    1         2 TIME CHAR ( 8 );
     1153    16513    1   DCL TIME_BUF_CHARS REDEF TIME_BUF CHAR(26);
     1154    16514    1   DCL 1 REBUILD_HDR STATIC,
     1155    16515    1         2 * CHAR ( 6 ) INIT ( 'Volume' ),
     1156    16516    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1157    16517    1         2 * CHAR ( 4 ) INIT ( ' VOL' ),
     1158    16518    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1159    16519    1         2 * CHAR ( 4 ) INIT ( ' FSN' ),
     1160    16520    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1161    16521    1         2 * CHAR ( 12 ) INIT ( 'Last Account' ),
     1162    16522    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1163    16523    1         2 * CHAR ( 9 ) INIT ( 'Last File' );
     1164    16524    1   DCL REBUILD_HDR_CHAR REDEF REBUILD_HDR CHAR( 43 );
     1165    16525    1   DCL 1 REBUILD_REC STATIC,
     1166    16526    1         2 TSN_NUM CHAR ( 6 ),
     1167    16527    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1168    16528    1         2 VOL_NUM CHAR ( 4 ),
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:188  
     1169    16529    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1170    16530    1         2 FSN_NUM CHAR ( 4 ),
     1171    16531    1         2 * CHAR ( 2 ) INIT ( ' ' ),
     1172    16532    1         2 LAST_ACCT CHAR ( 8 ),
     1173    16533    1         2 * CHAR ( 6 ) INIT ( ' ' ),
     1174    16534    1         2 LAST_FILE CHAR ( 31 );
     1175    16535    1   DCL 1 TAPE_OPTION3 STATIC,
     1176    16536    1         2 * CHAR ( 12 ) INIT ( ' ' ),
     1177    16537    1         2 * CHAR ( 10 ) INIT ( 'DENSITY = ' ),
     1178    16538    1         2 DENSITY CHAR ( 5 ),
     1179    16539    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1180    16540    1         2 * CHAR ( 6 ) INIT ( 'PAD = ' ),
     1181    16541    1         2 PAD CHAR ( 3 ),
     1182    16542    1         2 * CHAR ( 2 ) INIT ( ', ' ),
     1183    16543    1         2 * CHAR ( 6 ) INIT ( 'DIR = ' ),
     1184    16544    1         2 DIR CHAR ( 3 ),
     1185    16545    1         2 * CHAR( 2 ) INIT( ', ' ),
     1186    16546    1         2 * CHAR( 13 ) INIT( 'IOERR CONT = ' ),
     1187    16547    1         2 IOERRORC CHAR( 3 );
     1188    16548    1   DCL NODATA_HDR CHAR( 49 ) STATIC INIT (
             16548            'Partially Restored File(s) - Containing No Data :' );
     1189    16549    1   DCL NO_INCR_TIME BIT ( 1 );
     1190    16550
     1191    16551        /**********
     1192    16552          DCB
     1193    16553         **********/
     1194    16554
     1195    16555    1   DCL M$LO DCB;
     1196    16556
     1197    16557        /**********
     1198    16558          MACROS
     1199    16559         **********/
     1200    16560
     1201    16561        %FPT_WRITE ( FPTN = OUTPUT_ARCHIVE_INFO,
     1202    16562                     DCB  = M$LO,
     1203    16563                     WAIT = YES );
     1204    16594        %FPT_WRITE ( FPTN = OUTPUT_HEADER,
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:189  
     1205    16595                     DCB  = M$LO,
     1206    16596                     BUF  = OUT_SINGLE_LINE,
     1207    16597                     WAIT = YES );
     1208    16628        %FPT_OPEN ( FPTN = OPEN_ARCHIVE_FILE );
     1209    16737        %FPT_READ ( FPTN = READ_ARCHIVE_FILE );
     1210    16776        %FPT_CLOSE ( FPTN = CLOSE_ARCHIVE );
     1211    16818        %VLP_SN ( FPTN = DPSN,
     1212    16819                  N = 1,
     1213    16820                  STCLASS = STATIC );
     1214    16833        %VLP_SN ( STCLASS = BASED );
     1215    16846        %F$DCB ( STCLASS = "BASED" );
     1216    16903        %FPT_TIME ( FPTN = GET_TIME,
     1217    16904                    SOURCE = UTS,
     1218    16905                    DEST = LOCAL );
     1219    16924        %B$TCB ( STCLASS = "BASED ( B$TCB$ )" );
     1220    16927        %B$ALT;
     1221    16935        %VLP_ACCT ( FPTN = PREV_ACCT,
     1222    16936                    STCLASS = STATIC );
     1223    16949
     1224    16950        %EJECT;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:190  
     1225    16951
     1226    16952    1         OPEN_ARCHIVE_FILE = CON_OPEN_ARCHIVE_FILE;

  16952 10 000002   000000 100400                    MLR     fill='000'O
        10 000003   000000 000350 xsym               ADSC9   CON_OPEN_ARCHIVE_FILE    cn=0,n=232
        10 000004   000334 000350 2                  ADSC9   OPEN_ARCHIVE_FILE        cn=0,n=232

     1227    16953    1         OPEN_ARCHIVE_FILE.V_ = VECTOR ( OPEN_ARCHIVE_FILE.V );

  16953 10 000005   000000 237000 11                 LDAQ    0
        10 000006   000334 757000 2                  STAQ    OPEN_ARCHIVE_FILE

     1228    16954    1         OPEN_ARCHIVE_FILE.SN_ = VECTOR ( DPSN );

  16954 10 000007   000002 237000 11                 LDAQ    2
        10 000010   000336 757000 2                  STAQ    OPEN_ARCHIVE_FILE+2

     1229    16955    1         READ_ARCHIVE_FILE = CON_READ_ARCHIVE_FILE;

  16955 10 000011   000000 100400                    MLR     fill='000'O
        10 000012   000000 000070 xsym               ADSC9   CON_READ_ARCHIVE_FILE    cn=0,n=56
        10 000013   000426 000070 2                  ADSC9   READ_ARCHIVE_FILE        cn=0,n=56

     1230    16956    1         READ_ARCHIVE_FILE.V_ = VECTOR ( READ_ARCHIVE_FILE.V );

  16956 10 000014   000004 237000 11                 LDAQ    4
        10 000015   000426 757000 2                  STAQ    READ_ARCHIVE_FILE

     1231    16957    1         CLOSE_ARCHIVE = CON_CLOSE_ARCHIVE;

  16957 10 000016   000000 100400                    MLR     fill='000'O
        10 000017   000000 000170 xsym               ADSC9   CON_CLOSE_ARCHIVE        cn=0,n=120
        10 000020   000444 000170 2                  ADSC9   CLOSE_ARCHIVE            cn=0,n=120

     1232    16958    1         CLOSE_ARCHIVE.V_ = VECTOR ( CLOSE_ARCHIVE.V );

  16958 10 000021   000006 237000 11                 LDAQ    6
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:191  
        10 000022   000444 757000 2                  STAQ    CLOSE_ARCHIVE

     1233    16959
     1234    16960    2         DO I = 0 TO NBR_CONTROL_FILE - 1;

  16960 10 000023   200003 450100                    STZ     I,,AUTO
        10 000024   002261 710000 10                 TRA     s:17441+3

     1235    16961    3              DO CASE ( CONTROL_LIST ( I ) );

  16961 10 000025   200003 720100                    LXL0    I,,AUTO
        10 000026   000000 235010 xsym               LDA     CONTROL_LIST,X0
        10 000027   000006 115007                    CMPA    6,DL
        10 000030   000032 602005 10                 TNC     s:16961+5,AL
        10 000031   002177 710000 10                 TRA     s:17429
        10 000032   000577 710000 10                 TRA     s:17110
        10 000033   001111 710000 10                 TRA     s:17207
        10 000034   001111 710000 10                 TRA     s:17207
        10 000035   000040 710000 10                 TRA     s:16967
        10 000036   001413 710000 10                 TRA     s:17287
        10 000037   001702 710000 10                 TRA     s:17347

     1236    16962
     1237    16963    3                CASE ( %ARCHIVE_FILE );

     1238    16964
     1239    16965        /* Open the :ARCHIVE.$$EFT file */
     1240    16966
     1241    16967    3                   DPSN.SN# ( 0 ) = DPLIST.SN# ( 0 );

  16967 10 000040   000000 470400 xsym               LDP0    DPLIST$
        10 000041   040000 100500                    MLR     fill='040'O
        10 000042   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        10 000043   000503 000006 2                  ADSC9   DPSN+1                   cn=0,n=6

     1242    16968    3                   OPEN_ARCHIVE_FILE.V.RES# = DPRESLIST.NAME(0);

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:192  
  16968 10 000044   000000 471400 xsym               LDP1    DPRESLIST$
        10 000045   100001 236100                    LDQ     1,,PR1
        10 000046   000404 756000 2                  STQ     OPEN_ARCHIVE_FILE+40

     1243    16969    3                   CALL M$OPEN ( OPEN_ARCHIVE_FILE ) ALTRET ( ERR );

  16969 10 000047   000334 630400 2                  EPPR0   OPEN_ARCHIVE_FILE
        10 000050   450000 713400                    CLIMB   alt,open
        10 000051   410400 401760                    pmme    nvectors=18
        10 000052   002200 702000 10                 TSX2    ERR

     1244    16970
     1245    16971        /* Read in size of the :ARCHIVE file and allocate buffer */
     1246    16972
     1247    16973    3                   READ_ARCHIVE_FILE.BUF_ = VECTOR ( SIZE );

  16973 10 000053   777640 235007                    LDA     -96,DL
        10 000054   200022 452500                    STP2    K+2,,AUTO
        10 000055   200022 236100                    LDQ     K+2,,AUTO
        10 000056   000006 036003                    ADLQ    6,DU
        10 000057   000432 757000 2                  STAQ    READ_ARCHIVE_FILE+4

     1248    16974    3                   CALL M$READ ( READ_ARCHIVE_FILE ) ALTRET ( ERR );

  16974 10 000060   000426 630400 2                  EPPR0   READ_ARCHIVE_FILE
        10 000061   440000 713400                    CLIMB   alt,read
        10 000062   401400 401760                    pmme    nvectors=4
        10 000063   002200 702000 10                 TSX2    ERR

     1249    16975    3                   CALL FLI$ALLOC ( SIZE, START$ );

  16975 10 000064   200012 630500                    EPPR0   START$,,AUTO
        10 000065   200023 450500                    STP0    K+3,,AUTO
        10 000066   200006 631500                    EPPR1   SIZE,,AUTO
        10 000067   200022 451500                    STP1    K+2,,AUTO
        10 000070   200022 630500                    EPPR0   K+2,,AUTO
        10 000071   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:193  
        10 000072   000000 701000 xent               TSX1    FLI$ALLOC
        10 000073   000000 011000                    NOP     0

     1250    16976    3                   AVAIL$ = START$;

  16976 10 000074   200012 236100                    LDQ     START$,,AUTO
        10 000075   200007 756100                    STQ     AVAIL$,,AUTO

     1251    16977    3                   READ_ARCHIVE_FILE.BUF_.BUF$ = AVAIL$;

  16977 10 000076   000433 756000 2                  STQ     READ_ARCHIVE_FILE+5

     1252    16978    3                   READ_ARCHIVE_FILE.BUF_.BOUND = SIZE * 4 - 1;

  16978 10 000077   200006 236100                    LDQ     SIZE,,AUTO
        10 000100   000002 736000                    QLS     2
        10 000101   000001 136007                    SBLQ    1,DL
        10 000102   000020 736000                    QLS     16
        10 000103   000432 676000 2                  ERQ     READ_ARCHIVE_FILE+4
        10 000104   000034 376000 xsym               ANQ     B_VECTNIL+28
        10 000105   000432 656000 2                  ERSQ    READ_ARCHIVE_FILE+4

     1253    16979
     1254    16980        /* Read in :ARCHIVE.$$EFT */
     1255    16981
     1256    16982    3                   CALL M$READ ( READ_ARCHIVE_FILE ) ALTRET ( ERR );

  16982 10 000106   000426 630400 2                  EPPR0   READ_ARCHIVE_FILE
        10 000107   440000 713400                    CLIMB   alt,read
        10 000110   401400 401760                    pmme    nvectors=4
        10 000111   002200 702000 10                 TSX2    ERR

     1257    16983        /***
     1258    16984         ***  If :ARCHIVE record is pre-D00, convert to D00 format.
     1259    16985        ***/
     1260    16986    3                   IF START$->ARCHIVE_LIST.VERSION.FLAG ~= BITBIN('777'O)

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:194  
  16986 10 000112   200012 470500                    LDP0    START$,,AUTO
        10 000113   000000 236100                    LDQ     0,,PR0
        10 000114   777000 376003                    ANQ     -512,DU
        10 000115   777000 116003                    CMPQ    -512,DU
        10 000116   000134 600000 10                 TZE     s:16996

     1261    16987    3                   THEN
     1262    16988    4                   DO;

     1263    16989    4                      CALL FLI$CNVRT_ARCHIVE(START$,AVAIL$);

  16989 10 000117   200007 631500                    EPPR1   AVAIL$,,AUTO
        10 000120   200023 451500                    STP1    K+3,,AUTO
        10 000121   200012 633500                    EPPR3   START$,,AUTO
        10 000122   200022 453500                    STP3    K+2,,AUTO
        10 000123   200022 630500                    EPPR0   K+2,,AUTO
        10 000124   000020 631400 xsym               EPPR1   B_VECTNIL+16
        10 000125   000000 701000 xent               TSX1    FLI$CNVRT_ARCHIVE
        10 000126   000000 011000                    NOP     0

     1264    16990    4                      START$ = AVAIL$;

  16990 10 000127   200007 236100                    LDQ     AVAIL$,,AUTO
        10 000130   200012 756100                    STQ     START$,,AUTO

     1265    16991    4                      SIZE = START$->ARCHIVE_LIST.SIZE;

  16991 10 000131   200012 470500                    LDP0    START$,,AUTO
        10 000132   000002 235100                    LDA     2,,PR0
        10 000133   200006 755100                    STA     SIZE,,AUTO

     1266    16992    4                      END;

     1267    16993
     1268    16994        /* Output master packset name and control file name */
     1269    16995
     1270    16996    3                   OUT_SINGLE_LINE = ' ';
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:195  

  16996 10 000134   040000 100400                    MLR     fill='040'O
        10 000135   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000136   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1271    16997    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  16997 10 000137   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000140   440001 713400                    CLIMB   alt,write
        10 000141   401400 401760                    pmme    nvectors=4
        10 000142   002200 702000 10                 TSX2    ERR

     1272    16998
     1273    16999    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', DPSN.SN# ( 0 ),
             16999                            '/:ARCHIVE.$$EFT' );

  16999 10 000143   000000 236000 9                  LDQ     0
        10 000144   000010 376000 11                 ANQ     8
        10 000145   000040 276007                    ORQ     32,DL
        10 000146   000025 756000 2                  STQ     OUT_SINGLE_LINE
        10 000147   040000 100400                    MLR     fill='040'O
        10 000150   000503 000006 2                  ADSC9   DPSN+1                   cn=0,n=6
        10 000151   000025 600006 2                  ADSC9   OUT_SINGLE_LINE          cn=3,n=6
        10 000152   040000 100400                    MLR     fill='040'O
        10 000153   000001 000017 9                  ADSC9   1                        cn=0,n=15
        10 000154   000027 200107 2                  ADSC9   OUT_SINGLE_LINE+2        cn=1,n=71

     1274    17000    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17000 10 000155   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000156   440001 713400                    CLIMB   alt,write
        10 000157   401400 401760                    pmme    nvectors=4
        10 000160   002200 702000 10                 TSX2    ERR

     1275    17001    3                   OUT_SINGLE_LINE = ' ';

  17001 10 000161   040000 100400                    MLR     fill='040'O
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:196  
        10 000162   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000163   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1276    17002    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17002 10 000164   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000165   440001 713400                    CLIMB   alt,write
        10 000166   401400 401760                    pmme    nvectors=4
        10 000167   002200 702000 10                 TSX2    ERR

     1277    17003
     1278    17004        /* Output tape and optical disk options */
     1279    17005
     1280    17006    3                   IF AVAIL$->ARCHIVE_LIST.OD

  17006 10 000170   200007 470500                    LDP0    AVAIL$,,AUTO
        10 000171   000006 236100                    LDQ     6,,PR0
        10 000172   000200 316003                    CANQ    128,DU
        10 000173   000200 600000 10                 TZE     s:17008

     1281    17007    3                   THEN OUT_SINGLE_LINE = ' Optical Disc Options : ';

  17007 10 000174   040000 100400                    MLR     fill='040'O
        10 000175   000005 000030 9                  ADSC9   5                        cn=0,n=24
        10 000176   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80
        10 000177   000203 710000 10                 TRA     s:17009

     1282    17008    3                   ELSE OUT_SINGLE_LINE = ' Tape Options : ';

  17008 10 000200   040000 100400                    MLR     fill='040'O
        10 000201   000013 000020 9                  ADSC9   11                       cn=0,n=16
        10 000202   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1283    17009    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17009 10 000203   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000204   440001 713400                    CLIMB   alt,write
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:197  
        10 000205   401400 401760                    pmme    nvectors=4
        10 000206   002200 702000 10                 TSX2    ERR

     1284    17010    4                   DO CASE( AVAIL$->ARCHIVE_LIST.OPTION.DEN );

  17010 10 000207   200007 470500                    LDP0    AVAIL$,,AUTO
        10 000210   000007 236100                    LDQ     7,,PR0
        10 000211   000036 772000                    QRL     30
        10 000212   000006 116007                    CMPQ    6,DL
        10 000213   000215 602006 10                 TNC     s:17010+6,QL
        10 000214   000243 710000 10                 TRA     s:17020
        10 000215   000243 710000 10                 TRA     s:17020
        10 000216   000243 710000 10                 TRA     s:17020
        10 000217   000223 710000 10                 TRA     s:17012
        10 000220   000227 710000 10                 TRA     s:17014
        10 000221   000233 710000 10                 TRA     s:17016
        10 000222   000237 710000 10                 TRA     s:17018

     1285    17011    4                     CASE( %D800# );

     1286    17012    4                        TAPE_OPTION1.DENSITY = '800';

  17012 10 000223   040000 100400                    MLR     fill='040'O
        10 000224   000017 000003 9                  ADSC9   15                       cn=0,n=3
        10 000225   000066 400005 2                  ADSC9   TAPE_OPTION1+5           cn=2,n=5
        10 000226   000246 710000 10                 TRA     s:17022

     1287    17013    4                     CASE( %D1600# );

     1288    17014    4                        TAPE_OPTION1.DENSITY = '1600';

  17014 10 000227   040000 100400                    MLR     fill='040'O
        10 000230   000020 000004 9                  ADSC9   16                       cn=0,n=4
        10 000231   000066 400005 2                  ADSC9   TAPE_OPTION1+5           cn=2,n=5
        10 000232   000246 710000 10                 TRA     s:17022

     1289    17015    4                     CASE( %D6250# );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:198  

     1290    17016    4                        TAPE_OPTION1.DENSITY = '6250';

  17016 10 000233   040000 100400                    MLR     fill='040'O
        10 000234   000021 000004 9                  ADSC9   17                       cn=0,n=4
        10 000235   000066 400005 2                  ADSC9   TAPE_OPTION1+5           cn=2,n=5
        10 000236   000246 710000 10                 TRA     s:17022

     1291    17017    4                     CASE( %D38000# );

     1292    17018    4                        TAPE_OPTION1.DENSITY = '38000';

  17018 10 000237   040000 100400                    MLR     fill='040'O
        10 000240   000022 000005 9                  ADSC9   18                       cn=0,n=5
        10 000241   000066 400005 2                  ADSC9   TAPE_OPTION1+5           cn=2,n=5
        10 000242   000246 710000 10                 TRA     s:17022

     1293    17019    4                     CASE( ELSE );

     1294    17020    4                        TAPE_OPTION1.DENSITY = '????';

  17020 10 000243   040000 100400                    MLR     fill='040'O
        10 000244   000024 000004 9                  ADSC9   20                       cn=0,n=4
        10 000245   000066 400005 2                  ADSC9   TAPE_OPTION1+5           cn=2,n=5

     1295    17021    4                     END;

     1296    17022    4                   DO CASE ( AVAIL$ -> ARCHIVE_LIST.OPTION.VOLA );

  17022 10 000246   000007 236100                    LDQ     7,,PR0
        10 000247   000033 772000                    QRL     27
        10 000250   000007 376007                    ANQ     7,DL
        10 000251   000004 116007                    CMPQ    4,DL
        10 000252   000254 602006 10                 TNC     s:17022+6,QL
        10 000253   000274 710000 10                 TRA     s:17030
        10 000254   000274 710000 10                 TRA     s:17030
        10 000255   000260 710000 10                 TRA     s:17024
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:199  
        10 000256   000264 710000 10                 TRA     s:17026
        10 000257   000270 710000 10                 TRA     s:17028

     1297    17023    4                     CASE ( %ALL# );

     1298    17024    4                        TAPE_OPTION1.VOLA = 'ALL';

  17024 10 000260   040000 100400                    MLR     fill='040'O
        10 000261   000025 000003 9                  ADSC9   21                       cn=0,n=3
        10 000262   000073 200005 2                  ADSC9   TAPE_OPTION1+10          cn=1,n=5
        10 000263   000277 710000 10                 TRA     s:17032

     1299    17025    4                     CASE ( %IN# );

     1300    17026    4                        TAPE_OPTION1.VOLA = 'IN';

  17026 10 000264   040000 100400                    MLR     fill='040'O
        10 000265   000026 000002 9                  ADSC9   22                       cn=0,n=2
        10 000266   000073 200005 2                  ADSC9   TAPE_OPTION1+10          cn=1,n=5
        10 000267   000277 710000 10                 TRA     s:17032

     1301    17027    4                     CASE ( %NONE# );

     1302    17028    4                        TAPE_OPTION1.VOLA = 'NONE';

  17028 10 000270   040000 100400                    MLR     fill='040'O
        10 000271   000027 000004 9                  ADSC9   23                       cn=0,n=4
        10 000272   000073 200005 2                  ADSC9   TAPE_OPTION1+10          cn=1,n=5
        10 000273   000277 710000 10                 TRA     s:17032

     1303    17029    4                     CASE ( ELSE );

     1304    17030    4                        TAPE_OPTION1.VOLA = '????';            /* System default */

  17030 10 000274   040000 100400                    MLR     fill='040'O
        10 000275   000024 000004 9                  ADSC9   20                       cn=0,n=4
        10 000276   000073 200005 2                  ADSC9   TAPE_OPTION1+10          cn=1,n=5
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:200  

     1305    17031    4                     END;

     1306    17032    3                   IF AVAIL$ -> ARCHIVE_LIST.OPTION.EXP = %NEVER#

  17032 10 000277   000010 235100                    LDA     8,,PR0
        10 000300   000027 115000 xsym               CMPA    B_VECTNIL+23
        10 000301   000306 601000 10                 TNZ     s:17035

     1307    17033    3                   THEN TAPE_OPTION1.EXP = 'NEVER';

  17033 10 000302   040000 100400                    MLR     fill='040'O
        10 000303   000030 000005 9                  ADSC9   24                       cn=0,n=5
        10 000304   000077 200005 2                  ADSC9   TAPE_OPTION1+14          cn=1,n=5
        10 000305   000315 710000 10                 TRA     s:17039

     1308    17034    4                   ELSE DO;

     1309    17035    4                       CALL BINCHAR ( TAPE_OPTION1.EXP, AVAIL$ -> ARCHIVE_LIST.OPTION.
             17035                                 EXP );

  17035 10 000306   000000 301500                    BTD
        10 000307   000010 000004                    NDSC9   8,,PR0                   cn=0,s=lsgnf,sf=0,n=4
        10 000310   000077 230005 2                  NDSC9   TAPE_OPTION1+14          cn=1,s=nosgn,sf=0,n=5

     1310    17036    4                        CALL EDITCHAR ( TAPE_OPTION1.EXP, , ,NO_4_LEADING_ZEROS,

  17036 10 000311   000000 024400                    MVNE
        10 000312   000077 230005 2                  NDSC9   TAPE_OPTION1+14          cn=1,s=nosgn,sf=0,n=5
        10 000313   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 000314   000077 200005 2                  ADSC9   TAPE_OPTION1+14          cn=1,n=5

     1311    17037    4                                   TAPE_OPTION1.EXP );
     1312    17038    4                      END;

     1313    17039    3                   CALL BINCHAR ( TAPE_OPTION1.BLOCK, AVAIL$ -> ARCHIVE_LIST.OPTION.
             17039                            BLOCK / 4096 );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:201  

  17039 10 000315   000007 236100                    LDQ     7,,PR0
        10 000316   777777 376007                    ANQ     -1,DL
        10 000317   000014 772000                    QRL     12
        10 000320   000000 235003                    LDA     0,DU
        10 000321   200022 757100                    STAQ    K+2,,AUTO
        10 000322   000000 301500                    BTD
        10 000323   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 000324   000103 030005 2                  NDSC9   TAPE_OPTION1+18          cn=0,s=nosgn,sf=0,n=5

     1314    17040    3                   CALL EDITCHAR ( TAPE_OPTION1.BLOCK, , ,NO_4_LEADING_ZEROS,

  17040 10 000325   000000 024400                    MVNE
        10 000326   000103 030005 2                  NDSC9   TAPE_OPTION1+18          cn=0,s=nosgn,sf=0,n=5
        10 000327   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 000330   000103 000005 2                  ADSC9   TAPE_OPTION1+18          cn=0,n=5

     1315    17041    3                                   TAPE_OPTION1.BLOCK );
     1316    17042    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR ( TAPE_OPTION1 );

  17042 10 000331   000012 237000 11                 LDAQ    10
        10 000332   000310 757000 2                  STAQ    OUTPUT_ARCHIVE_INFO+4

     1317    17043    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET ( ERR );

  17043 10 000333   000304 630400 2                  EPPR0   OUTPUT_ARCHIVE_INFO
        10 000334   440001 713400                    CLIMB   alt,write
        10 000335   401400 401760                    pmme    nvectors=4
        10 000336   002200 702000 10                 TSX2    ERR

     1318    17044    3                   IF AVAIL$ -> ARCHIVE_LIST.OPTION.CHECK

  17044 10 000337   200007 470500                    LDP0    AVAIL$,,AUTO
        10 000340   000007 236100                    LDQ     7,,PR0
        10 000341   000400 316003                    CANQ    256,DU
        10 000342   000346 600000 10                 TZE     s:17046

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:202  
     1319    17045    3                   THEN TAPE_OPTION2.CHECK = 'YES';

  17045 10 000343   000032 236000 9                  LDQ     26
        10 000344   000112 552070 2                  STBQ    TAPE_OPTION2+5,'70'O
        10 000345   000352 710000 10                 TRA     s:17047

     1320    17046    3                   ELSE TAPE_OPTION2.CHECK = 'NO';

  17046 10 000346   000027 236000 9                  LDQ     23
        10 000347   777777 376003                    ANQ     -1,DU
        10 000350   040040 276007                    ORQ     16416,DL
        10 000351   000112 552070 2                  STBQ    TAPE_OPTION2+5,'70'O

     1321    17047    3                   IF AVAIL$ -> ARCHIVE_LIST.OPTION.IOERRORC

  17047 10 000352   000007 236100                    LDQ     7,,PR0
        10 000353   000200 316003                    CANQ    128,DU
        10 000354   000361 600000 10                 TZE     s:17049

     1322    17048    3                   THEN TAPE_OPTION2.IOERRORC = 'YES';

  17048 10 000355   040000 100400                    MLR     fill='040'O
        10 000356   000032 000003 9                  ADSC9   26                       cn=0,n=3
        10 000357   000116 400003 2                  ADSC9   TAPE_OPTION2+9           cn=2,n=3
        10 000360   000364 710000 10                 TRA     s:17050

     1323    17049    3                   ELSE TAPE_OPTION2.IOERRORC = 'NO';

  17049 10 000361   040000 100400                    MLR     fill='040'O
        10 000362   000027 000002 9                  ADSC9   23                       cn=0,n=2
        10 000363   000116 400003 2                  ADSC9   TAPE_OPTION2+9           cn=2,n=3

     1324    17050    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR( TAPE_OPTION2 );

  17050 10 000364   000014 237000 11                 LDAQ    12
        10 000365   000310 757000 2                  STAQ    OUTPUT_ARCHIVE_INFO+4

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:203  
     1325    17051    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET(ERR);

  17051 10 000366   000304 630400 2                  EPPR0   OUTPUT_ARCHIVE_INFO
        10 000367   440001 713400                    CLIMB   alt,write
        10 000370   401400 401760                    pmme    nvectors=4
        10 000371   002200 702000 10                 TSX2    ERR

     1326    17052
     1327    17053    3                   AVAIL$ = PINCRW ( START$, START$ -> ARCHIVE_LIST.OFFSET.DPLIST );

  17053 10 000372   200012 470500                    LDP0    START$,,AUTO
        10 000373   000003 720100                    LXL0    3,,PR0
        10 000374   000000 636010                    EAQ     0,X0
        10 000375   200012 036100                    ADLQ    START$,,AUTO
        10 000376   200007 756100                    STQ     AVAIL$,,AUTO

     1328    17054
     1329    17055        /* Output master packset name */
     1330    17056
     1331    17057    3                   OUT_SINGLE_LINE = ' Master Packset : ';

  17057 10 000377   040000 100400                    MLR     fill='040'O
        10 000400   000033 000022 9                  ADSC9   27                       cn=0,n=18
        10 000401   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1332    17058    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17058 10 000402   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000403   440001 713400                    CLIMB   alt,write
        10 000404   401400 401760                    pmme    nvectors=4
        10 000405   002200 702000 10                 TSX2    ERR

     1333    17059    3                   CALL CONCAT ( OUT_SINGLE_LINE, '            DP#',

  17059 10 000406   040000 100400                    MLR     fill='040'O
        10 000407   000040 000017 9                  ADSC9   32                       cn=0,n=15
        10 000410   000025 000017 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=15
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:204  
        10 000411   200007 470500                    LDP0    AVAIL$,,AUTO
        10 000412   040000 100500                    MLR     fill='040'O
        10 000413   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        10 000414   000030 600101 2                  ADSC9   OUT_SINGLE_LINE+3        cn=3,n=65

     1334    17060    3                                 AVAIL$ -> VLP_SN.SN# ( 0 ) );
     1335    17061    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17061 10 000415   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000416   440001 713400                    CLIMB   alt,write
        10 000417   401400 401760                    pmme    nvectors=4
        10 000420   002200 702000 10                 TSX2    ERR

     1336    17062
     1337    17063        /* Output member packset names */
     1338    17064
     1339    17065    3                   IF AVAIL$ -> VLP_SN.NUM# > 1

  17065 10 000421   200007 470500                    LDP0    AVAIL$,,AUTO
        10 000422   000000 235100                    LDA     0,,PR0
        10 000423   000001 115007                    CMPA    1,DL
        10 000424   000520 604400 10                 TMOZ    s:17087

     1340    17066    4                   THEN DO;

     1341    17067    4                        OUT_SINGLE_LINE = ' Member Packset(s) : ';

  17067 10 000425   040000 100400                    MLR     fill='040'O
        10 000426   000044 000025 9                  ADSC9   36                       cn=0,n=21
        10 000427   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1342    17068    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17068 10 000430   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000431   440001 713400                    CLIMB   alt,write
        10 000432   401400 401760                    pmme    nvectors=4
        10 000433   002200 702000 10                 TSX2    ERR
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:205  

     1343    17069    4                        OUT_SINGLE_LINE = ' ';

  17069 10 000434   040000 100400                    MLR     fill='040'O
        10 000435   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000436   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1344    17070    4                        OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 12 );

  17070 10 000437   000011 236000 11                 LDQ     9
        10 000440   200011 756100                    STQ     OUT_PTR$,,AUTO

     1345    17071    4                        COUNT = 0;

  17071 10 000441   200010 450100                    STZ     COUNT,,AUTO

     1346    17072    5                        DO K = 1 TO AVAIL$ -> VLP_SN.NUM# - 1;

  17072 10 000442   000001 235007                    LDA     1,DL
        10 000443   200005 755100                    STA     K,,AUTO
        10 000444   000504 710000 10                 TRA     s:17083+3

     1347    17073    5                            CALL CONCAT ( OUT_PTR$ -> DPNAME, 'DP#', AVAIL$ -> VLP_SN.
             17073                                      SN# ( K ) );

  17073 10 000445   200011 470500                    LDP0    OUT_PTR$,,AUTO
        10 000446   040100 100400                    MLR     fill='040'O
        10 000447   000000 000003 9                  ADSC9   0                        cn=0,n=3
        10 000450   000000 000003                    ADSC9   0,,PR0                   cn=0,n=3
        10 000451   200005 236100                    LDQ     K,,AUTO
        10 000452   000006 402007                    MPY     6,DL
        10 000453   200007 471500                    LDP1    AVAIL$,,AUTO
        10 000454   040100 100506                    MLR     fill='040'O
        10 000455   100001 000006                    ADSC9   1,Q,PR1                  cn=0,n=6
        10 000456   000000 600006                    ADSC9   0,,PR0                   cn=3,n=6

     1348    17074    5                             OUT_PTR$ = PINCRC ( OUT_PTR$, 2 + LENGTHC ( 'DP#' ) +
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:206  
             17074                                      LENGTHC ( DPNAME ) );

  17074 10 000457   200011 236100                    LDQ     OUT_PTR$,,AUTO
        10 000460   000016 036000 11                 ADLQ    14
        10 000461   200011 756100                    STQ     OUT_PTR$,,AUTO

     1349    17075    5                             COUNT = COUNT + 1;

  17075 10 000462   200010 235100                    LDA     COUNT,,AUTO
        10 000463   000001 035007                    ADLA    1,DL
        10 000464   200010 755100                    STA     COUNT,,AUTO

     1350    17076    5                             IF COUNT = 5

  17076 10 000465   000005 115007                    CMPA    5,DL
        10 000466   000501 601000 10                 TNZ     s:17083

     1351    17077    6                             THEN DO;

     1352    17078    6                                  CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17078 10 000467   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000470   440001 713400                    CLIMB   alt,write
        10 000471   401400 401760                    pmme    nvectors=4
        10 000472   002200 702000 10                 TSX2    ERR

     1353    17079    6                                  OUT_SINGLE_LINE = ' ';

  17079 10 000473   040000 100400                    MLR     fill='040'O
        10 000474   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000475   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1354    17080    6                                  OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 12 );

  17080 10 000476   000011 236000 11                 LDQ     9
        10 000477   200011 756100                    STQ     OUT_PTR$,,AUTO

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:207  
     1355    17081    6                                  COUNT = 0;

  17081 10 000500   200010 450100                    STZ     COUNT,,AUTO

     1356    17082    6                                END;

     1357    17083    5                           END;

  17083 10 000501   200005 235100                    LDA     K,,AUTO
        10 000502   000001 035007                    ADLA    1,DL
        10 000503   200005 755100                    STA     K,,AUTO
        10 000504   200007 470500                    LDP0    AVAIL$,,AUTO
        10 000505   200005 236100                    LDQ     K,,AUTO
        10 000506   000511 604000 10                 TMI     s:17084
        10 000507   000000 116100                    CMPQ    0,,PR0
        10 000510   000445 604000 10                 TMI     s:17073

     1358    17084    4                        IF COUNT ~= 5 THEN CALL M$WRITE ( OUTPUT_HEADER )

  17084 10 000511   200010 235100                    LDA     COUNT,,AUTO
        10 000512   000005 115007                    CMPA    5,DL
        10 000513   000520 600000 10                 TZE     s:17087

  17084 10 000514   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000515   440001 713400                    CLIMB   alt,write
        10 000516   401400 401760                    pmme    nvectors=4
        10 000517   002200 702000 10                 TSX2    ERR

     1359    17085    4                                           ALTRET ( ERR );
     1360    17086    4                      END;

     1361    17087    3                   AVAIL$ = PINCRW ( START$, START$ -> ARCHIVE_LIST.OFFSET.SNLIST );

  17087 10 000520   200012 470500                    LDP0    START$,,AUTO
        10 000521   000004 720100                    LXL0    4,,PR0
        10 000522   000000 636010                    EAQ     0,X0
        10 000523   200012 036100                    ADLQ    START$,,AUTO
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:208  
        10 000524   200007 756100                    STQ     AVAIL$,,AUTO

     1362    17088
     1363    17089        /* Output list of tape or optical disk serial numbers */
     1364    17090
     1365    17091    3                   IF AVAIL$ -> VLP_SN.NUM# > 0

  17091 10 000525   200007 471500                    LDP1    AVAIL$,,AUTO
        10 000526   100000 235100                    LDA     0,,PR1
        10 000527   000546 604400 10                 TMOZ    s:17098

     1366    17092    4                   THEN DO;

     1367    17093    4                        IF START$->ARCHIVE_LIST.OD

  17093 10 000530   000006 236100                    LDQ     6,,PR0
        10 000531   000200 316003                    CANQ    128,DU
        10 000532   000537 600000 10                 TZE     s:17095

     1368    17094    4                        THEN OUT_SINGLE_LINE =
             17094                                 ' Current Optical Disc Serial Number(s) : ';

  17094 10 000533   040000 100400                    MLR     fill='040'O
        10 000534   000052 000051 9                  ADSC9   42                       cn=0,n=41
        10 000535   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80
        10 000536   000542 710000 10                 TRA     s:17096

     1369    17095    4                        ELSE OUT_SINGLE_LINE = ' Current Tape Serial Number(s) : ';

  17095 10 000537   040000 100400                    MLR     fill='040'O
        10 000540   000065 000041 9                  ADSC9   53                       cn=0,n=33
        10 000541   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1370    17096    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17096 10 000542   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000543   440001 713400                    CLIMB   alt,write
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:209  
        10 000544   401400 401760                    pmme    nvectors=4
        10 000545   002200 702000 10                 TSX2    ERR

     1371    17097    4                      END;

     1372    17098    3                   CALL DISPLAY_TSN;

  17098 10 000546   002265 701000 10                 TSX1    DISPLAY_TSN
        10 000547   000000 011000                    NOP     0

     1373    17099    3                   IF STAF AND START$->ARCHIVE_LIST.OFFSET.SNLIST2 ~= 0

  17099 10 000550   000000 234000 xsym               SZN     STAF
        10 000551   000572 605000 10                 TPL     s:17106
        10 000552   200012 470500                    LDP0    START$,,AUTO
        10 000553   000005 235100                    LDA     5,,PR0
        10 000554   000572 600000 10                 TZE     s:17106

     1374    17100    4                   THEN DO;

     1375    17101    4                       AVAIL$ = PINCRW ( START$, START$->ARCHIVE_LIST.OFFSET.SNLIST2 )
             17101                                 ;

  17101 10 000555   000005 720100                    LXL0    5,,PR0
        10 000556   000000 636010                    EAQ     0,X0
        10 000557   200012 036100                    ADLQ    START$,,AUTO
        10 000560   200007 756100                    STQ     AVAIL$,,AUTO

     1376    17102    4                        OUT_SINGLE_LINE = ' Duplicate Tape Serial Number(s) : ';

  17102 10 000561   040000 100400                    MLR     fill='040'O
        10 000562   000076 000043 9                  ADSC9   62                       cn=0,n=35
        10 000563   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1377    17103    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17103 10 000564   000320 630400 2                  EPPR0   OUTPUT_HEADER
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:210  
        10 000565   440001 713400                    CLIMB   alt,write
        10 000566   401400 401760                    pmme    nvectors=4
        10 000567   002200 702000 10                 TSX2    ERR

     1378    17104    4                        CALL DISPLAY_TSN;

  17104 10 000570   002265 701000 10                 TSX1    DISPLAY_TSN
        10 000571   000000 011000                    NOP     0

     1379    17105    4                      END;

     1380    17106    3                   CALL M$CLOSE ( CLOSE_ARCHIVE ) ALTRET ( ERR );

  17106 10 000572   000444 630400 2                  EPPR0   CLOSE_ARCHIVE
        10 000573   450001 713400                    CLIMB   alt,close
        10 000574   406000 401760                    pmme    nvectors=13
        10 000575   002200 702000 10                 TSX2    ERR
        10 000576   002177 710000 10                 TRA     s:17429

     1381    17107
     1382    17108    3                CASE ( %BACKUP_FILE );

     1383    17109
     1384    17110    3                   IF NOT DCBADDR ( DCBNUM ( M$STATUS ) ) -> F$DCB.FCD#

  17110 10 000577   000000 236007 xsym               LDQ     M$STATUS,DL
        10 000600   000017 470400 11                 LDP0    15
        10 000601   000000 471500                    LDP1    0,,PR0
        10 000602   100000 473506                    LDP3    0,QL,PR1
        10 000603   300031 236100                    LDQ     25,,PR3
        10 000604   020000 316007                    CANQ    8192,DL
        10 000605   000623 601000 10                 TNZ     s:17120

     1385    17111    4                   THEN DO;

     1386    17112    4                        BACKUP_SN.SN# ( 0 ) = DPLIST.SN# ( 0 );

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:211  
  17112 10 000606   000000 473400 xsym               LDP3    DPLIST$
        10 000607   040000 100500                    MLR     fill='040'O
        10 000610   300001 000006                    ADSC9   1,,PR3                   cn=0,n=6
        10 000611   000001 000006 xsym               ADSC9   BACKUP_SN+1              cn=0,n=6

     1387    17113    4                        OPEN_STATUS.V.RES# = DPRESLIST.NAME(0);

  17113 10 000612   000000 474400 xsym               LDP4    DPRESLIST$
        10 000613   400001 236100                    LDQ     1,,PR4
        10 000614   000050 756000 xsym               STQ     OPEN_STATUS+40

     1388    17114    4                        OPEN_STATUS.V.FUN# = %IN#;

  17114 10 000615   002000 236007                    LDQ     1024,DL
        10 000616   000045 552010 xsym               STBQ    OPEN_STATUS+37,'10'O

     1389    17115    4                        CALL M$OPEN ( OPEN_STATUS ) ALTRET ( ERR );

  17115 10 000617   000000 630400 xsym               EPPR0   OPEN_STATUS
        10 000620   450000 713400                    CLIMB   alt,open
        10 000621   410400 401760                    pmme    nvectors=18
        10 000622   002200 702000 10                 TSX2    ERR

     1390    17116    4                      END;

     1391    17117
     1392    17118        /* Output header */
     1393    17119
     1394    17120    3                   OUT_SINGLE_LINE = ' ';

  17120 10 000623   040000 100400                    MLR     fill='040'O
        10 000624   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000625   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1395    17121    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17121 10 000626   000320 630400 2                  EPPR0   OUTPUT_HEADER
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:212  
        10 000627   440001 713400                    CLIMB   alt,write
        10 000630   401400 401760                    pmme    nvectors=4
        10 000631   002200 702000 10                 TSX2    ERR

     1396    17122    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', BACKUP_SN.SN# ( 0 ),
             17122                            '/:BACKUP.$$EFT' );

  17122 10 000632   000000 236000 9                  LDQ     0
        10 000633   000010 376000 11                 ANQ     8
        10 000634   000040 276007                    ORQ     32,DL
        10 000635   000025 756000 2                  STQ     OUT_SINGLE_LINE
        10 000636   040000 100400                    MLR     fill='040'O
        10 000637   000001 000006 xsym               ADSC9   BACKUP_SN+1              cn=0,n=6
        10 000640   000025 600006 2                  ADSC9   OUT_SINGLE_LINE          cn=3,n=6
        10 000641   040000 100400                    MLR     fill='040'O
        10 000642   000107 000016 9                  ADSC9   71                       cn=0,n=14
        10 000643   000027 200107 2                  ADSC9   OUT_SINGLE_LINE+2        cn=1,n=71

     1397    17123    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17123 10 000644   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000645   440001 713400                    CLIMB   alt,write
        10 000646   401400 401760                    pmme    nvectors=4
        10 000647   002200 702000 10                 TSX2    ERR

     1398    17124    3                   OUT_SINGLE_LINE = ' ';

  17124 10 000650   040000 100400                    MLR     fill='040'O
        10 000651   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 000652   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1399    17125    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17125 10 000653   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000654   440001 713400                    CLIMB   alt,write
        10 000655   401400 401760                    pmme    nvectors=4
        10 000656   002200 702000 10                 TSX2    ERR
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:213  

     1400    17126
     1401    17127        /* Read the first record in :BACKUP file */
     1402    17128
     1403    17129    3                   READ_STATUS.V.KEYS# = '1'B;

  17129 10 000657   200000 236007                    LDQ     65536,DL
        10 000660   000010 256000 xsym               ORSQ    READ_STATUS+8

     1404    17130    3                   STATUS_KEY.L = LENGTHV ( STATUS_KEY );

  17130 10 000661   003000 236003                    LDQ     1536,DU
        10 000662   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

     1405    17131    3                   STATUS_KEY.RUN_NBR = 0;

  17131 10 000663   000000 236003                    LDQ     0,DU
        10 000664   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

     1406    17132    3                   STATUS_KEY.TSN_SET_NBR = 0;

  17132 10 000665   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

     1407    17133    3                   STATUS_KEY.TSN_VOL = 0;

  17133 10 000666   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

     1408    17134    3                   CALL M$READ ( READ_STATUS )

  17134 10 000667   000000 630400 xsym               EPPR0   READ_STATUS
        10 000670   440000 713400                    CLIMB   alt,read
        10 000671   401400 401760                    pmme    nvectors=4
        10 000672   000703 702000 10                 TSX2    s:17140

     1409    17135    4                    WHENRETURN DO;

     1410    17136    4                        IF STAF THEN RUN_NBR = 1;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:214  

  17136 10 000673   000000 234000 xsym               SZN     STAF
        10 000674   000700 605000 10                 TPL     s:17137

  17136 10 000675   000001 235007                    LDA     1,DL
        10 000676   000000 755000 xsym               STA     RUN_NBR
        10 000677   000702 710000 10                 TRA     s:17138

     1411    17137    4                        ELSE RUN_NBR = TSN_USED_BUF.UTS;

  17137 10 000700   000000 235000 xsym               LDA     TSN_USED_BUF
        10 000701   000000 755000 xsym               STA     RUN_NBR

     1412    17138    4                      END;

  17138 10 000702   000705 710000 10                 TRA     s:17145

     1413    17139    4                    WHENALTRETURN DO;

     1414    17140    4                        RUN_NBR = 1;

  17140 10 000703   000001 235007                    LDA     1,DL
        10 000704   000000 755000 xsym               STA     RUN_NBR

     1415    17141    4                      END;

     1416    17142
     1417    17143        /* Output the backup record header */
     1418    17144
     1419    17145    3                   OUT_SINGLE_LINE = BACKUP_HDR_CHAR;

  17145 10 000705   040000 100400                    MLR     fill='040'O
        10 000706   000120 000117 2                  ADSC9   BACKUP_HDR               cn=0,n=79
        10 000707   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1420    17146    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:215  
  17146 10 000710   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 000711   440001 713400                    CLIMB   alt,write
        10 000712   401400 401760                    pmme    nvectors=4
        10 000713   002200 702000 10                 TSX2    ERR

     1421    17147
     1422    17148        /* Read the first backup data record by key */
     1423    17149
     1424    17150    3                   STATUS_KEY.L = LENGTHV ( STATUS_KEY );

  17150 10 000714   003000 236003                    LDQ     1536,DU
        10 000715   000000 552040 xsym               STBQ    STATUS_KEY,'40'O

     1425    17151    3                   STATUS_KEY.RUN_NBR = RUN_NBR;

  17151 10 000716   000000 236000 xsym               LDQ     RUN_NBR
        10 000717   000022 736000                    QLS     18
        10 000720   000000 552020 xsym               STBQ    STATUS_KEY,'20'O

     1426    17152    3                   STATUS_KEY.TSN_SET_NBR = 1;

  17152 10 000721   001000 236007                    LDQ     512,DL
        10 000722   000000 552010 xsym               STBQ    STATUS_KEY,'10'O

     1427    17153    3                   STATUS_KEY.TSN_VOL = 1;

  17153 10 000723   000001 236007                    LDQ     1,DL
        10 000724   000000 552004 xsym               STBQ    STATUS_KEY,'04'O

     1428    17154    4                   DO WHILE ( '1'B );

     1429    17155    4                        CALL M$READ ( READ_STATUS )

  17155 10 000725   000000 630400 xsym               EPPR0   READ_STATUS
        10 000726   440000 713400                    CLIMB   alt,read
        10 000727   401400 401760                    pmme    nvectors=4
        10 000730   001073 702000 10                 TSX2    s:17197
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:216  

     1430    17156    4                         WHENRETURN
     1431    17157    5                         DO;

     1432    17158        /* Read the following backup data record in sequence */
     1433    17159
     1434    17160    5                           READ_STATUS.V.KEYS# = '0'B;

  17160 10 000731   000020 236000 11                 LDQ     16
        10 000732   000010 356000 xsym               ANSQ    READ_STATUS+8

     1435    17161    5                           CALL BINCHAR ( BACKUP_REC.RUN_NUM, STATUS_KEY.RUN_NBR );

  17161 10 000733   000000 236000 xsym               LDQ     STATUS_KEY
        10 000734   000022 772000                    QRL     18
        10 000735   000777 376007                    ANQ     511,DL
        10 000736   000000 235003                    LDA     0,DU
        10 000737   200022 757100                    STAQ    K+2,,AUTO
        10 000740   000000 301500                    BTD
        10 000741   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 000742   000144 030003 2                  NDSC9   BACKUP_REC               cn=0,s=nosgn,sf=0,n=3

     1436    17162    5                           CALL EDITCHAR ( BACKUP_REC.RUN_NUM, , ,NO_4_LEADING_ZEROS,

  17162 10 000743   000000 024400                    MVNE
        10 000744   000144 030003 2                  NDSC9   BACKUP_REC               cn=0,s=nosgn,sf=0,n=3
        10 000745   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 000746   000144 000003 2                  ADSC9   BACKUP_REC               cn=0,n=3

     1437    17163    5                                           BACKUP_REC.RUN_NUM );
     1438    17164    5                          CALL BINCHAR ( BACKUP_REC.SET_NUM, STATUS_KEY.TSN_SET_NBR );

  17164 10 000747   000000 236000 xsym               LDQ     STATUS_KEY
        10 000750   000011 772000                    QRL     9
        10 000751   000777 376007                    ANQ     511,DL
        10 000752   000000 235003                    LDA     0,DU
        10 000753   200022 757100                    STAQ    K+2,,AUTO
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:217  
        10 000754   000000 301500                    BTD
        10 000755   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 000756   000145 230004 2                  NDSC9   BACKUP_REC+1             cn=1,s=nosgn,sf=0,n=4

     1439    17165    5                           CALL EDITCHAR ( BACKUP_REC.SET_NUM, , ,NO_4_LEADING_ZEROS,

  17165 10 000757   000000 024400                    MVNE
        10 000760   000145 230004 2                  NDSC9   BACKUP_REC+1             cn=1,s=nosgn,sf=0,n=4
        10 000761   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 000762   000145 200004 2                  ADSC9   BACKUP_REC+1             cn=1,n=4

     1440    17166    5                                           BACKUP_REC.SET_NUM );
     1441    17167    5                           CALL BINCHAR ( BACKUP_REC.VOL_NUM, STATUS_KEY.TSN_VOL );

  17167 10 000763   000000 236000 xsym               LDQ     STATUS_KEY
        10 000764   000777 376007                    ANQ     511,DL
        10 000765   000000 235003                    LDA     0,DU
        10 000766   200022 757100                    STAQ    K+2,,AUTO
        10 000767   000000 301500                    BTD
        10 000770   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 000771   000146 630004 2                  NDSC9   BACKUP_REC+2             cn=3,s=nosgn,sf=0,n=4

     1442    17168    5                           CALL EDITCHAR ( BACKUP_REC.VOL_NUM, , ,NO_4_LEADING_ZEROS,

  17168 10 000772   000000 024400                    MVNE
        10 000773   000146 630004 2                  NDSC9   BACKUP_REC+2             cn=3,s=nosgn,sf=0,n=4
        10 000774   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 000775   000146 600004 2                  ADSC9   BACKUP_REC+2             cn=3,n=4

     1443    17169    5                                           BACKUP_REC.VOL_NUM );
     1444    17170    5                           GET_TIME.TSTAMP_ = VECTOR ( TSN_USED_BUF.UTS );

  17170 10 000776   000022 237000 11                 LDAQ    18
        10 000777   000516 757000 2                  STAQ    GET_TIME+8

     1445    17171    5                           IF TEST_MODE

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:218  
  17171 10 001000   000000 234000 xsym               SZN     TEST_MODE
        10 001001   001003 605000 10                 TPL     s:17173

     1446    17172    5                           THEN TSN_USED_BUF.UTS = 0;

  17172 10 001002   000000 450000 xsym               STZ     TSN_USED_BUF

     1447    17173    5                           GET_TIME.DATE_ = VECTOR ( BACKUP_REC.DATE );

  17173 10 001003   000024 237000 11                 LDAQ    20
        10 001004   000510 757000 2                  STAQ    GET_TIME+2

     1448    17174    5                           GET_TIME.TIME_ = VECTOR ( BACKUP_REC.TIME );

  17174 10 001005   000026 237000 11                 LDAQ    22
        10 001006   000512 757000 2                  STAQ    GET_TIME+4

     1449    17175    5                           CALL M$TIME ( GET_TIME );

  17175 10 001007   000506 630400 2                  EPPR0   GET_TIME
        10 001010   020004 713400                    CLIMB   8196
        10 001011   402000 401760                    pmme    nvectors=5

     1450    17176    5                           BACKUP_REC.FIRST_ACCT = TSN_USED_BUF.FIRST_ACCT;

  17176 10 001012   040000 100400                    MLR     fill='040'O
        10 001013   000001 000010 xsym               ADSC9   TSN_USED_BUF+1           cn=0,n=8
        10 001014   000157 600010 2                  ADSC9   BACKUP_REC+11            cn=3,n=8

     1451    17177    5                           BACKUP_REC.LAST_ACCT = TSN_USED_BUF.LAST_ACCT;

  17177 10 001015   040000 100400                    MLR     fill='040'O
        10 001016   000003 000010 xsym               ADSC9   TSN_USED_BUF+3           cn=0,n=8
        10 001017   000162 400010 2                  ADSC9   BACKUP_REC+14            cn=2,n=8

     1452    17178    5                           BACKUP_REC.TSN_NUM = TSN_USED_BUF.TSN;

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:219  
  17178 10 001020   040000 100400                    MLR     fill='040'O
        10 001021   000005 000006 xsym               ADSC9   TSN_USED_BUF+5           cn=0,n=6
        10 001022   000154 200006 2                  ADSC9   BACKUP_REC+8             cn=1,n=6

     1453    17179    5                           CALL BINCHAR ( BACKUP_REC.FSN_NUM, TSN_USED_BUF.FSN );

  17179 10 001023   000006 236000 xsym               LDQ     TSN_USED_BUF+6
        10 001024   777777 376007                    ANQ     -1,DL
        10 001025   000000 235003                    LDA     0,DU
        10 001026   200022 757100                    STAQ    K+2,,AUTO
        10 001027   000000 301500                    BTD
        10 001030   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 001031   000156 230004 2                  NDSC9   BACKUP_REC+10            cn=1,s=nosgn,sf=0,n=4

     1454    17180    5                           CALL EDITCHAR ( BACKUP_REC.FSN_NUM, , ,NO_4_LEADING_ZEROS,

  17180 10 001032   000000 024400                    MVNE
        10 001033   000156 230004 2                  NDSC9   BACKUP_REC+10            cn=1,s=nosgn,sf=0,n=4
        10 001034   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 001035   000156 200004 2                  ADSC9   BACKUP_REC+10            cn=1,n=4

     1455    17181    5                                           BACKUP_REC.FSN_NUM );
     1456    17182    5                           IF DCBADDR(DCBNUM(M$STATUS)) -> F$DCB.ARS# <

  17182 10 001036   000000 236007 xsym               LDQ     M$STATUS,DL
        10 001037   000017 470400 11                 LDP0    15
        10 001040   000000 471500                    LDP1    0,,PR0
        10 001041   100000 473506                    LDP3    0,QL,PR1
        10 001042   300000 235100                    LDA     0,,PR3
        10 001043   000036 115007                    CMPA    30,DL
        10 001044   001051 605000 10                 TPL     s:17186

     1457    17183    5                                LENGTHC(TSN_USED_BUF)        /* Pre-E00 :BACKUP? */
     1458    17184    5                           THEN BACKUP_REC.BACKUP_FSN_NUM = ' ';

  17184 10 001045   040000 100400                    MLR     fill='040'O
        10 001046   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:220  
        10 001047   000166 600004 2                  ADSC9   BACKUP_REC+18            cn=3,n=4
        10 001050   001064 710000 10                 TRA     s:17192

     1459    17185    6                           ELSE DO;

     1460    17186    6                                CALL BINCHAR ( BACKUP_REC.BACKUP_FSN_NUM,

  17186 10 001051   000007 235000 xsym               LDA     TSN_USED_BUF+7
        10 001052   000022 771000                    ARL     18
        10 001053   000044 773000                    LRL     36
        10 001054   200022 757100                    STAQ    K+2,,AUTO
        10 001055   000000 301500                    BTD
        10 001056   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 001057   000166 630004 2                  NDSC9   BACKUP_REC+18            cn=3,s=nosgn,sf=0,n=4

     1461    17187    6                                               TSN_USED_BUF.BACKUP_FSN );
     1462    17188    6                                CALL EDITCHAR ( BACKUP_REC.BACKUP_FSN_NUM, , ,

  17188 10 001060   000000 024400                    MVNE
        10 001061   000166 630004 2                  NDSC9   BACKUP_REC+18            cn=3,s=nosgn,sf=0,n=4
        10 001062   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 001063   000166 600004 2                  ADSC9   BACKUP_REC+18            cn=3,n=4

     1463    17189    6                                                NO_4_LEADING_ZEROS,
     1464    17190    6                                                BACKUP_REC.BACKUP_FSN_NUM );
     1465    17191    6                              END;

     1466    17192    5                           OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR ( BACKUP_REC );

  17192 10 001064   000030 237000 11                 LDAQ    24
        10 001065   000310 757000 2                  STAQ    OUTPUT_ARCHIVE_INFO+4

     1467    17193    5                           CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET ( ERR );

  17193 10 001066   000304 630400 2                  EPPR0   OUTPUT_ARCHIVE_INFO
        10 001067   440001 713400                    CLIMB   alt,write
        10 001070   401400 401760                    pmme    nvectors=4
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:221  
        10 001071   002200 702000 10                 TSX2    ERR

     1468    17194    5                         END;

  17194 10 001072   001110 710000 10                 TRA     s:17204

     1469    17195    4                         WHENALTRETURN
     1470    17196    5                         DO;

     1471    17197    5                            IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$EOF

  17197 10 001073   000000 470400 xsym               LDP0    B$TCB$
        10 001074   000000 471500                    LDP1    0,,PR0
        10 001075   100102 236100                    LDQ     66,,PR1
        10 001076   377770 376007                    ANQ     131064,DL
        10 001077   000060 116007                    CMPQ    48,DL
        10 001100   001106 601000 10                 TNZ     s:17202

     1472    17198    6                            THEN DO;

     1473    17199    6                                 CALL M$CLOSE ( CLOSE_STATUS ) ALTRET ( ERR );

  17199 10 001101   000000 630400 xsym               EPPR0   CLOSE_STATUS
        10 001102   450001 713400                    CLIMB   alt,close
        10 001103   406000 401760                    pmme    nvectors=13
        10 001104   002200 702000 10                 TSX2    ERR

     1474    17200    6                                 GOTO NEXT_FILE;

  17200 10 001105   002203 710000 10                 TRA     NEXT_FILE

     1475    17201    6                               END;
     1476    17202    5                            ELSE READ_STATUS.V.KEYS# = '0'B;

  17202 10 001106   000020 236000 11                 LDQ     16
        10 001107   000010 356000 xsym               ANSQ    READ_STATUS+8

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:222  
     1477    17203    5                           END;

     1478    17204    4                      END;

  17204 10 001110   000725 710000 10                 TRA     s:17155

     1479    17205    3                CASE ( %PRIME_FILE, %DUAL_FILE );

     1480    17206
     1481    17207    3                   IF CONTROL_LIST ( I ) = %PRIME_FILE

  17207 10 001111   000001 115007                    CMPA    1,DL
        10 001112   001124 601000 10                 TNZ     s:17209

     1482    17208    3                   THEN OPEN_PRIME_DUAL.NAME_ = VECTOR ( PRIME_FILE );

  17208 10 001113   000000 236000 xsym               LDQ     PRIME_FILE
        10 001114   000033 772000                    QRL     27
        10 001115   000001 621006                    EAX1    1,QL
        10 001116   000000 635011                    EAA     0,X1
        10 001117   000002 771000                    ARL     2
        10 001120   000140 135007                    SBLA    96,DL
        10 001121   000021 236000 11                 LDQ     17
        10 001122   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6
        10 001123   001134 710000 10                 TRA     s:17210

     1483    17209    3                   ELSE OPEN_PRIME_DUAL.NAME_ = VECTOR ( DUAL_FILE );

  17209 10 001124   000000 236000 xsym               LDQ     DUAL_FILE
        10 001125   000033 772000                    QRL     27
        10 001126   000001 621006                    EAX1    1,QL
        10 001127   000000 635011                    EAA     0,X1
        10 001130   000002 771000                    ARL     2
        10 001131   000140 135007                    SBLA    96,DL
        10 001132   000032 236000 11                 LDQ     26
        10 001133   000006 757000 xsym               STAQ    OPEN_PRIME_DUAL+6

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:223  
     1484    17210    3                   OPEN_PRIME_DUAL.ACCT_ = VECTOR ( BACKUP_ACCT );

  17210 10 001134   000034 237000 11                 LDAQ    28
        10 001135   000024 757000 xsym               STAQ    OPEN_PRIME_DUAL+20

     1485    17211    3                   OPEN_PRIME_DUAL.V.FUN# = %IN#;

  17211 10 001136   002000 236007                    LDQ     1024,DL
        10 001137   000045 552010 xsym               STBQ    OPEN_PRIME_DUAL+37,'10'O

     1486    17212    3                   OPEN_PRIME_DUAL.SN_ = VECTOR ( DPLIST );

  17212 10 001140   000002 235000 11                 LDA     2
        10 001141   000000 236000 xsym               LDQ     DPLIST$
        10 001142   000002 757000 xsym               STAQ    OPEN_PRIME_DUAL+2

     1487    17213    3                   OPEN_PRIME_DUAL.V.RES# = DPRESLIST.NAME(0);

  17213 10 001143   000000 470400 xsym               LDP0    DPRESLIST$
        10 001144   000001 236100                    LDQ     1,,PR0
        10 001145   000050 756000 xsym               STQ     OPEN_PRIME_DUAL+40

     1488    17214    3                   OPEN_PRIME_DUAL.V.OPER = '0'B;

  17214 10 001146   000036 236000 11                 LDQ     30
        10 001147   000044 356000 xsym               ANSQ    OPEN_PRIME_DUAL+36

     1489    17215    3                   CALL M$OPEN ( OPEN_PRIME_DUAL ) ALTRET ( ERR );

  17215 10 001150   000000 630400 xsym               EPPR0   OPEN_PRIME_DUAL
        10 001151   450000 713400                    CLIMB   alt,open
        10 001152   410400 401760                    pmme    nvectors=18
        10 001153   002200 702000 10                 TSX2    ERR

     1490    17216
     1491    17217    3                   OUT_SINGLE_LINE = ' ';

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:224  
  17217 10 001154   040000 100400                    MLR     fill='040'O
        10 001155   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001156   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1492    17218    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17218 10 001157   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001160   440001 713400                    CLIMB   alt,write
        10 001161   401400 401760                    pmme    nvectors=4
        10 001162   002200 702000 10                 TSX2    ERR

     1493    17219
     1494    17220    3                   IF CONTROL_LIST(I) = %PRIME_FILE

  17220 10 001163   200003 720100                    LXL0    I,,AUTO
        10 001164   000000 235010 xsym               LDA     CONTROL_LIST,X0
        10 001165   000001 115007                    CMPA    1,DL
        10 001166   001203 601000 10                 TNZ     s:17222

     1495    17221    3                   THEN CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', DPLIST.SN# ( 0 ),
             17221                            '/:PRIME.$$EFT' );

  17221 10 001167   000000 236000 9                  LDQ     0
        10 001170   000010 376000 11                 ANQ     8
        10 001171   000040 276007                    ORQ     32,DL
        10 001172   000025 756000 2                  STQ     OUT_SINGLE_LINE
        10 001173   000000 470400 xsym               LDP0    DPLIST$
        10 001174   040000 100500                    MLR     fill='040'O
        10 001175   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        10 001176   000025 600006 2                  ADSC9   OUT_SINGLE_LINE          cn=3,n=6
        10 001177   040000 100400                    MLR     fill='040'O
        10 001200   000113 000015 9                  ADSC9   75                       cn=0,n=13
        10 001201   000027 200107 2                  ADSC9   OUT_SINGLE_LINE+2        cn=1,n=71
        10 001202   001216 710000 10                 TRA     s:17223

     1496    17222    3                   ELSE CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', DPLIST.SN# ( 0 ),
             17222                            '/:DUAL.$$EFT' );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:225  

  17222 10 001203   000000 236000 9                  LDQ     0
        10 001204   000010 376000 11                 ANQ     8
        10 001205   000040 276007                    ORQ     32,DL
        10 001206   000025 756000 2                  STQ     OUT_SINGLE_LINE
        10 001207   000000 470400 xsym               LDP0    DPLIST$
        10 001210   040000 100500                    MLR     fill='040'O
        10 001211   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        10 001212   000025 600006 2                  ADSC9   OUT_SINGLE_LINE          cn=3,n=6
        10 001213   040000 100400                    MLR     fill='040'O
        10 001214   000117 000014 9                  ADSC9   79                       cn=0,n=12
        10 001215   000027 200107 2                  ADSC9   OUT_SINGLE_LINE+2        cn=1,n=71

     1497    17223    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17223 10 001216   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001217   440001 713400                    CLIMB   alt,write
        10 001220   401400 401760                    pmme    nvectors=4
        10 001221   002200 702000 10                 TSX2    ERR

     1498    17224
     1499    17225    3                   OUT_SINGLE_LINE = ' ';

  17225 10 001222   040000 100400                    MLR     fill='040'O
        10 001223   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001224   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1500    17226    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17226 10 001225   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001226   440001 713400                    CLIMB   alt,write
        10 001227   401400 401760                    pmme    nvectors=4
        10 001230   002200 702000 10                 TSX2    ERR

     1501    17227
     1502    17228    3                   CALL M$READ ( READ_PRIME_DUAL ) ALTRET ( ERR );

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:226  
  17228 10 001231   000000 630400 xsym               EPPR0   READ_PRIME_DUAL
        10 001232   440000 713400                    CLIMB   alt,read
        10 001233   401400 401760                    pmme    nvectors=4
        10 001234   002200 702000 10                 TSX2    ERR

     1503    17229    3                   PRIME_AND_DUAL.PRIME_PACK = PRIME_DUAL_BUF.PRIME;

  17229 10 001235   040000 100400                    MLR     fill='040'O
        10 001236   000001 000006 xsym               ADSC9   PRIME_DUAL_BUF+1         cn=0,n=6
        10 001237   000173 000006 2                  ADSC9   PRIME_AND_DUAL+3         cn=0,n=6

     1504    17230    3                   PRIME_AND_DUAL.DUAL_PACK = PRIME_DUAL_BUF.DUAL;

  17230 10 001240   040000 100400                    MLR     fill='040'O
        10 001241   000002 400006 xsym               ADSC9   PRIME_DUAL_BUF+2         cn=2,n=6
        10 001242   000200 000006 2                  ADSC9   PRIME_AND_DUAL+8         cn=0,n=6

     1505    17231    3                   OUT_SINGLE_LINE = PRIME_AND_DUAL_CHARS;

  17231 10 001243   040000 100400                    MLR     fill='040'O
        10 001244   000170 000046 2                  ADSC9   PRIME_AND_DUAL           cn=0,n=38
        10 001245   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1506    17232    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17232 10 001246   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001247   440001 713400                    CLIMB   alt,write
        10 001250   401400 401760                    pmme    nvectors=4
        10 001251   002200 702000 10                 TSX2    ERR

     1507    17233    3                   OUT_SINGLE_LINE = ' ';

  17233 10 001252   040000 100400                    MLR     fill='040'O
        10 001253   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001254   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1508    17234    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:227  

  17234 10 001255   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001256   440001 713400                    CLIMB   alt,write
        10 001257   401400 401760                    pmme    nvectors=4
        10 001260   002200 702000 10                 TSX2    ERR

     1509    17235
     1510    17236    3                   GET_TIME.DATE_ = VECTOR( TIME_BUF.DATE );

  17236 10 001261   000040 237000 11                 LDAQ    32
        10 001262   000510 757000 2                  STAQ    GET_TIME+2

     1511    17237    3                   GET_TIME.TIME_ = VECTOR( TIME_BUF.TIME );

  17237 10 001263   000042 237000 11                 LDAQ    34
        10 001264   000512 757000 2                  STAQ    GET_TIME+4

     1512    17238    3                   GET_TIME.TSTAMP_ = VECTOR( PRIME_DUAL_BUF.UTS );

  17238 10 001265   000044 237000 11                 LDAQ    36
        10 001266   000516 757000 2                  STAQ    GET_TIME+8

     1513    17239    3                   IF TEST_MODE

  17239 10 001267   000000 234000 xsym               SZN     TEST_MODE
        10 001270   001272 605000 10                 TPL     s:17241

     1514    17240    3                   THEN PRIME_DUAL_BUF.UTS = 0;

  17240 10 001271   000000 450000 xsym               STZ     PRIME_DUAL_BUF

     1515    17241    3                   CALL M$TIME ( GET_TIME ) ALTRET ( ERR );

  17241 10 001272   000506 630400 2                  EPPR0   GET_TIME
        10 001273   420004 713400                    CLIMB   alt,+8196
        10 001274   402000 401760                    pmme    nvectors=5
        10 001275   002200 702000 10                 TSX2    ERR
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:228  

     1516    17242
     1517    17243    3                   OUT_SINGLE_LINE = TIME_BUF_CHARS;

  17243 10 001276   040000 100400                    MLR     fill='040'O
        10 001277   000202 000032 2                  ADSC9   TIME_BUF                 cn=0,n=26
        10 001300   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1518    17244    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17244 10 001301   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001302   440001 713400                    CLIMB   alt,write
        10 001303   401400 401760                    pmme    nvectors=4
        10 001304   002200 702000 10                 TSX2    ERR

     1519    17245
     1520    17246    3                   NO_INCR_TIME = '1'B;

  17246 10 001305   400000 236003                    LDQ     -131072,DU
        10 001306   200015 756100                    STQ     NO_INCR_TIME,,AUTO

     1521    17247    3                   IF STAF

  17247 10 001307   000000 234000 xsym               SZN     STAF
        10 001310   002177 605000 10                 TPL     s:17429

     1522    17248    4                   THEN DO;

     1523    17249    4                        OUT_SINGLE_LINE = ' ';

  17249 10 001311   040000 100400                    MLR     fill='040'O
        10 001312   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001313   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1524    17250    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17250 10 001314   000320 630400 2                  EPPR0   OUTPUT_HEADER
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:229  
        10 001315   440001 713400                    CLIMB   alt,write
        10 001316   401400 401760                    pmme    nvectors=4
        10 001317   002200 702000 10                 TSX2    ERR

     1525    17251    4                        OUT_SINGLE_LINE = '        INCREMENTALs : ';

  17251 10 001320   040000 100400                    MLR     fill='040'O
        10 001321   000122 000027 9                  ADSC9   82                       cn=0,n=23
        10 001322   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1526    17252    4                        CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17252 10 001323   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001324   440001 713400                    CLIMB   alt,write
        10 001325   401400 401760                    pmme    nvectors=4
        10 001326   002200 702000 10                 TSX2    ERR

     1527    17253    5                        DO WHILE ( '1'B );

     1528    17254    5                           CALL M$READ ( READ_PRIME_DUAL )

  17254 10 001327   000000 630400 xsym               EPPR0   READ_PRIME_DUAL
        10 001330   440000 713400                    CLIMB   alt,read
        10 001331   401400 401760                    pmme    nvectors=4
        10 001332   001361 702000 10                 TSX2    s:17267

     1529    17255    6                              WHENRETURN DO;

     1530    17256    6                               GET_TIME.DATE_ = VECTOR( TIME_BUF.DATE );

  17256 10 001333   000040 237000 11                 LDAQ    32
        10 001334   000510 757000 2                  STAQ    GET_TIME+2

     1531    17257    6                               GET_TIME.TIME_ = VECTOR( TIME_BUF.TIME );

  17257 10 001335   000042 237000 11                 LDAQ    34
        10 001336   000512 757000 2                  STAQ    GET_TIME+4
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:230  

     1532    17258    6                               GET_TIME.TSTAMP_ = VECTOR( PRIME_DUAL_BUF.UTS );

  17258 10 001337   000044 237000 11                 LDAQ    36
        10 001340   000516 757000 2                  STAQ    GET_TIME+8

     1533    17259    6                               IF TEST_MODE

  17259 10 001341   000000 234000 xsym               SZN     TEST_MODE
        10 001342   001344 605000 10                 TPL     s:17261

     1534    17260    6                               THEN PRIME_DUAL_BUF.UTS = 0;

  17260 10 001343   000000 450000 xsym               STZ     PRIME_DUAL_BUF

     1535    17261    6                               CALL M$TIME ( GET_TIME ) ALTRET ( ERR );

  17261 10 001344   000506 630400 2                  EPPR0   GET_TIME
        10 001345   420004 713400                    CLIMB   alt,+8196
        10 001346   402000 401760                    pmme    nvectors=5
        10 001347   002200 702000 10                 TSX2    ERR

     1536    17262    6                               OUT_SINGLE_LINE = TIME_BUF_CHARS;

  17262 10 001350   040000 100400                    MLR     fill='040'O
        10 001351   000202 000032 2                  ADSC9   TIME_BUF                 cn=0,n=26
        10 001352   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1537    17263    6                               CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17263 10 001353   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001354   440001 713400                    CLIMB   alt,write
        10 001355   401400 401760                    pmme    nvectors=4
        10 001356   002200 702000 10                 TSX2    ERR

     1538    17264    6                               NO_INCR_TIME = '0'B;

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:231  
  17264 10 001357   200015 450100                    STZ     NO_INCR_TIME,,AUTO

     1539    17265    6                               END;

  17265 10 001360   001412 710000 10                 TRA     s:17283

     1540    17266    6                              WHENALTRETURN DO;

     1541    17267    6                                IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE

  17267 10 001361   000000 470400 xsym               LDP0    B$TCB$
        10 001362   000000 471500                    LDP1    0,,PR0
        10 001363   100102 236100                    LDQ     66,,PR1
        10 001364   377770 376007                    ANQ     131064,DL
        10 001365   000060 116007                    CMPQ    48,DL
        10 001366   001374 600000 10                 TZE     s:17274

     1542    17268    6                                   ~= %E$EOF
     1543    17269    7                                THEN DO;

     1544    17270    7                                     CALL M$CLOSE ( CLOSE_PRIME_DUAL ) ALTRET ( ERR );

  17270 10 001367   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        10 001370   450001 713400                    CLIMB   alt,close
        10 001371   406000 401760                    pmme    nvectors=13
        10 001372   002200 702000 10                 TSX2    ERR

     1545    17271    7                                     GOTO ERR;

  17271 10 001373   002200 710000 10                 TRA     ERR

     1546    17272    7                                   END;
     1547    17273    7                                ELSE DO;

     1548    17274    7                                     IF NO_INCR_TIME

  17274 10 001374   200015 234100                    SZN     NO_INCR_TIME,,AUTO
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:232  
        10 001375   001405 605000 10                 TPL     s:17279

     1549    17275    8                                     THEN DO;

     1550    17276    8                                          OUT_SINGLE_LINE = '        None';

  17276 10 001376   040000 100400                    MLR     fill='040'O
        10 001377   000130 000014 9                  ADSC9   88                       cn=0,n=12
        10 001400   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1551    17277    8                                          CALL M$WRITE ( OUTPUT_HEADER )  ALTRET ( ERR
             17277                                                   );

  17277 10 001401   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001402   440001 713400                    CLIMB   alt,write
        10 001403   401400 401760                    pmme    nvectors=4
        10 001404   002200 702000 10                 TSX2    ERR

     1552    17278    8                                        END;

     1553    17279    7                                     CALL M$CLOSE ( CLOSE_PRIME_DUAL ) ALTRET ( ERR );

  17279 10 001405   000000 630400 xsym               EPPR0   CLOSE_PRIME_DUAL
        10 001406   450001 713400                    CLIMB   alt,close
        10 001407   406000 401760                    pmme    nvectors=13
        10 001410   002200 702000 10                 TSX2    ERR

     1554    17280    7                                     GOTO NEXT_FILE;

  17280 10 001411   002203 710000 10                 TRA     NEXT_FILE

     1555    17281    7                                   END;
     1556    17282    6                                END;
     1557    17283    5                          END;

  17283 10 001412   001327 710000 10                 TRA     s:17254

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:233  
     1558    17284    4                      END;
     1559    17285    3                CASE ( %REBUILD_FILE );

     1560    17286
     1561    17287    3                   CLOSE_REBUILD.V.DISP# = %SAVE#;

  17287 10 001413   000002 236007                    LDQ     2,DL
        10 001414   000032 552004 xsym               STBQ    CLOSE_REBUILD+26,'04'O

     1562    17288    3                   OPEN_REBUILD.V.FUN# = %IN#;

  17288 10 001415   002000 236007                    LDQ     1024,DL
        10 001416   000045 552010 xsym               STBQ    OPEN_REBUILD+37,'10'O

     1563    17289    3                   REBUILD_SN.SN#( 0 ) = DPLIST.SN# ( 0 );

  17289 10 001417   000000 470400 xsym               LDP0    DPLIST$
        10 001420   040000 100500                    MLR     fill='040'O
        10 001421   000001 000006                    ADSC9   1,,PR0                   cn=0,n=6
        10 001422   000001 000006 xsym               ADSC9   REBUILD_SN+1             cn=0,n=6

     1564    17290    3                   OPEN_REBUILD.V.RES# = DPRESLIST.NAME(0);

  17290 10 001423   000000 471400 xsym               LDP1    DPRESLIST$
        10 001424   100001 236100                    LDQ     1,,PR1
        10 001425   000050 756000 xsym               STQ     OPEN_REBUILD+40

     1565    17291    3                   CALL M$OPEN ( OPEN_REBUILD ) ALTRET( ERR );

  17291 10 001426   000000 630400 xsym               EPPR0   OPEN_REBUILD
        10 001427   450000 713400                    CLIMB   alt,open
        10 001430   410400 401760                    pmme    nvectors=18
        10 001431   002200 702000 10                 TSX2    ERR

     1566    17292
     1567    17293        /* Output header */
     1568    17294
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:234  
     1569    17295    3                   OUT_SINGLE_LINE = ' ';

  17295 10 001432   040000 100400                    MLR     fill='040'O
        10 001433   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001434   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1570    17296    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17296 10 001435   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001436   440001 713400                    CLIMB   alt,write
        10 001437   401400 401760                    pmme    nvectors=4
        10 001440   002200 702000 10                 TSX2    ERR

     1571    17297    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', REBUILD_SN.SN# ( 0 ),
             17297                            '/:REBUILD.$$EFT' );

  17297 10 001441   000000 236000 9                  LDQ     0
        10 001442   000010 376000 11                 ANQ     8
        10 001443   000040 276007                    ORQ     32,DL
        10 001444   000025 756000 2                  STQ     OUT_SINGLE_LINE
        10 001445   040000 100400                    MLR     fill='040'O
        10 001446   000001 000006 xsym               ADSC9   REBUILD_SN+1             cn=0,n=6
        10 001447   000025 600006 2                  ADSC9   OUT_SINGLE_LINE          cn=3,n=6
        10 001450   040000 100400                    MLR     fill='040'O
        10 001451   000133 000017 9                  ADSC9   91                       cn=0,n=15
        10 001452   000027 200107 2                  ADSC9   OUT_SINGLE_LINE+2        cn=1,n=71

     1572    17298    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17298 10 001453   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001454   440001 713400                    CLIMB   alt,write
        10 001455   401400 401760                    pmme    nvectors=4
        10 001456   002200 702000 10                 TSX2    ERR

     1573    17299    3                   OUT_SINGLE_LINE = ' ';

  17299 10 001457   040000 100400                    MLR     fill='040'O
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:235  
        10 001460   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001461   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1574    17300    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17300 10 001462   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001463   440001 713400                    CLIMB   alt,write
        10 001464   401400 401760                    pmme    nvectors=4
        10 001465   002200 702000 10                 TSX2    ERR

     1575    17301
     1576    17302    3                   READ_REBUILD.KEY_ = VECTOR( REBUILD_KEY );

  17302 10 001466   000000 236000 xsym               LDQ     REBUILD_KEY
        10 001467   000033 772000                    QRL     27
        10 001470   000001 620006                    EAX0    1,QL
        10 001471   000000 635010                    EAA     0,X0
        10 001472   000002 771000                    ARL     2
        10 001473   000140 135007                    SBLA    96,DL
        10 001474   000037 236000 11                 LDQ     31
        10 001475   000002 757000 xsym               STAQ    READ_REBUILD+2

     1577    17303    3                   CALL M$READ ( READ_REBUILD ) ALTRET ( ERR );

  17303 10 001476   000000 630400 xsym               EPPR0   READ_REBUILD
        10 001477   440000 713400                    CLIMB   alt,read
        10 001500   401400 401760                    pmme    nvectors=4
        10 001501   002200 702000 10                 TSX2    ERR

     1578    17304    3                   CALL M$CLOSE ( CLOSE_REBUILD ) ALTRET ( ERR );

  17304 10 001502   000000 630400 xsym               EPPR0   CLOSE_REBUILD
        10 001503   450001 713400                    CLIMB   alt,close
        10 001504   406000 401760                    pmme    nvectors=13
        10 001505   002200 702000 10                 TSX2    ERR

     1579    17305    3                   OUT_SINGLE_LINE = REBUILD_HDR_CHAR;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:236  

  17305 10 001506   040000 100400                    MLR     fill='040'O
        10 001507   000211 000053 2                  ADSC9   REBUILD_HDR              cn=0,n=43
        10 001510   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1580    17306    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17306 10 001511   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001512   440001 713400                    CLIMB   alt,write
        10 001513   401400 401760                    pmme    nvectors=4
        10 001514   002200 702000 10                 TSX2    ERR

     1581    17307    3                   REBUILD_REC.TSN_NUM = REBUILD_BUF.TSN;

  17307 10 001515   040000 100400                    MLR     fill='040'O
        10 001516   000012 000006 xsym               ADSC9   REBUILD_BUF+10           cn=0,n=6
        10 001517   000224 000006 2                  ADSC9   REBUILD_REC              cn=0,n=6

     1582    17308    3                   CALL BINCHAR ( REBUILD_REC.VOL_NUM, REBUILD_BUF.VOLUME );

  17308 10 001520   000014 236000 xsym               LDQ     REBUILD_BUF+12
        10 001521   000033 772000                    QRL     27
        10 001522   000000 235003                    LDA     0,DU
        10 001523   200022 757100                    STAQ    K+2,,AUTO
        10 001524   000000 301500                    BTD
        10 001525   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 001526   000226 030004 2                  NDSC9   REBUILD_REC+2            cn=0,s=nosgn,sf=0,n=4

     1583    17309    3                   CALL EDITCHAR ( REBUILD_REC.VOL_NUM, , ,NO_4_LEADING_ZEROS,

  17309 10 001527   000000 024400                    MVNE
        10 001530   000226 030004 2                  NDSC9   REBUILD_REC+2            cn=0,s=nosgn,sf=0,n=4
        10 001531   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 001532   000226 000004 2                  ADSC9   REBUILD_REC+2            cn=0,n=4

     1584    17310    3                                   REBUILD_REC.VOL_NUM );
     1585    17311    3                   CALL BINCHAR ( REBUILD_REC.FSN_NUM, REBUILD_BUF.FSN );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:237  

  17311 10 001533   000013 236000 xsym               LDQ     REBUILD_BUF+11
        10 001534   777777 376007                    ANQ     -1,DL
        10 001535   000000 235003                    LDA     0,DU
        10 001536   200022 757100                    STAQ    K+2,,AUTO
        10 001537   000000 301500                    BTD
        10 001540   200022 000010                    NDSC9   K+2,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        10 001541   000227 430004 2                  NDSC9   REBUILD_REC+3            cn=2,s=nosgn,sf=0,n=4

     1586    17312    3                   CALL EDITCHAR ( REBUILD_REC.FSN_NUM, , ,NO_4_LEADING_ZEROS,

  17312 10 001542   000000 024400                    MVNE
        10 001543   000227 430004 2                  NDSC9   REBUILD_REC+3            cn=2,s=nosgn,sf=0,n=4
        10 001544   000000 000003 xsym               ADSC9   NO_4_LEADING_ZEROS       cn=0,n=3
        10 001545   000227 400004 2                  ADSC9   REBUILD_REC+3            cn=2,n=4

     1587    17313    3                                   REBUILD_REC.FSN_NUM );
     1588    17314    3                   REBUILD_REC.LAST_ACCT = REBUILD_BUF.START.ACCT.ACCT#;

  17314 10 001546   040000 100400                    MLR     fill='040'O
        10 001547   000000 000010 xsym               ADSC9   REBUILD_BUF              cn=0,n=8
        10 001550   000231 000010 2                  ADSC9   REBUILD_REC+5            cn=0,n=8

     1589    17315    3                   REBUILD_REC.LAST_FILE = REBUILD_BUF.START.FILE.NAME#;

  17315 10 001551   040000 100400                    MLR     fill='040'O
        10 001552   000002 200037 xsym               ADSC9   REBUILD_BUF+2            cn=1,n=31
        10 001553   000234 400037 2                  ADSC9   REBUILD_REC+8            cn=2,n=31

     1590    17316    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR ( REBUILD_REC );

  17316 10 001554   000046 237000 11                 LDAQ    38
        10 001555   000310 757000 2                  STAQ    OUTPUT_ARCHIVE_INFO+4

     1591    17317    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET ( ERR );

  17317 10 001556   000304 630400 2                  EPPR0   OUTPUT_ARCHIVE_INFO
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:238  
        10 001557   440001 713400                    CLIMB   alt,write
        10 001560   401400 401760                    pmme    nvectors=4
        10 001561   002200 702000 10                 TSX2    ERR

     1592    17318    3                   OUT_SINGLE_LINE = ' ';

  17318 10 001562   040000 100400                    MLR     fill='040'O
        10 001563   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001564   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1593    17319    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17319 10 001565   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001566   440001 713400                    CLIMB   alt,write
        10 001567   401400 401760                    pmme    nvectors=4
        10 001570   002200 702000 10                 TSX2    ERR

     1594    17320    3                   OUT_SINGLE_LINE = ' Tape Options : ';

  17320 10 001571   040000 100400                    MLR     fill='040'O
        10 001572   000013 000020 9                  ADSC9   11                       cn=0,n=16
        10 001573   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1595    17321    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17321 10 001574   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001575   440001 713400                    CLIMB   alt,write
        10 001576   401400 401760                    pmme    nvectors=4
        10 001577   002200 702000 10                 TSX2    ERR

     1596    17322    4                   DO CASE( REBUILD_BUF.DEN );

  17322 10 001600   000014 236000 xsym               LDQ     REBUILD_BUF+12
        10 001601   000025 772000                    QRL     21
        10 001602   000077 376007                    ANQ     63,DL
        10 001603   000006 116007                    CMPQ    6,DL
        10 001604   001606 602006 10                 TNC     s:17322+6,QL
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:239  
        10 001605   001634 710000 10                 TRA     s:17332
        10 001606   001634 710000 10                 TRA     s:17332
        10 001607   001634 710000 10                 TRA     s:17332
        10 001610   001614 710000 10                 TRA     s:17324
        10 001611   001620 710000 10                 TRA     s:17326
        10 001612   001624 710000 10                 TRA     s:17328
        10 001613   001630 710000 10                 TRA     s:17330

     1597    17323    4                     CASE( %D800# );

     1598    17324    4                        TAPE_OPTION3.DENSITY = '800';

  17324 10 001614   040000 100400                    MLR     fill='040'O
        10 001615   000017 000003 9                  ADSC9   15                       cn=0,n=3
        10 001616   000252 400005 2                  ADSC9   TAPE_OPTION3+5           cn=2,n=5
        10 001617   001637 710000 10                 TRA     s:17334

     1599    17325    4                     CASE( %D1600# );

     1600    17326    4                        TAPE_OPTION3.DENSITY = '1600';

  17326 10 001620   040000 100400                    MLR     fill='040'O
        10 001621   000020 000004 9                  ADSC9   16                       cn=0,n=4
        10 001622   000252 400005 2                  ADSC9   TAPE_OPTION3+5           cn=2,n=5
        10 001623   001637 710000 10                 TRA     s:17334

     1601    17327    4                     CASE( %D6250# );

     1602    17328    4                        TAPE_OPTION3.DENSITY = '6250';

  17328 10 001624   040000 100400                    MLR     fill='040'O
        10 001625   000021 000004 9                  ADSC9   17                       cn=0,n=4
        10 001626   000252 400005 2                  ADSC9   TAPE_OPTION3+5           cn=2,n=5
        10 001627   001637 710000 10                 TRA     s:17334

     1603    17329    4                     CASE( %D38000# );

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:240  
     1604    17330    4                        TAPE_OPTION3.DENSITY = '38000';

  17330 10 001630   040000 100400                    MLR     fill='040'O
        10 001631   000022 000005 9                  ADSC9   18                       cn=0,n=5
        10 001632   000252 400005 2                  ADSC9   TAPE_OPTION3+5           cn=2,n=5
        10 001633   001637 710000 10                 TRA     s:17334

     1605    17331    4                     CASE( ELSE );

     1606    17332    4                        TAPE_OPTION3.DENSITY = '????';

  17332 10 001634   040000 100400                    MLR     fill='040'O
        10 001635   000024 000004 9                  ADSC9   20                       cn=0,n=4
        10 001636   000252 400005 2                  ADSC9   TAPE_OPTION3+5           cn=2,n=5

     1607    17333    4                     END;

     1608    17334    3                   IF REBUILD_BUF.PAD

  17334 10 001637   000014 236000 xsym               LDQ     REBUILD_BUF+12
        10 001640   000002 316003                    CANQ    2,DU
        10 001641   001646 600000 10                 TZE     s:17336

     1609    17335    3                   THEN TAPE_OPTION3.PAD = 'YES';

  17335 10 001642   040000 100400                    MLR     fill='040'O
        10 001643   000032 000003 9                  ADSC9   26                       cn=0,n=3
        10 001644   000255 600003 2                  ADSC9   TAPE_OPTION3+8           cn=3,n=3
        10 001645   001651 710000 10                 TRA     s:17337

     1610    17336    3                   ELSE TAPE_OPTION3.PAD = 'NO';

  17336 10 001646   040000 100400                    MLR     fill='040'O
        10 001647   000027 000002 9                  ADSC9   23                       cn=0,n=2
        10 001650   000255 600003 2                  ADSC9   TAPE_OPTION3+8           cn=3,n=3

     1611    17337    3                   IF REBUILD_BUF.DIR
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:241  

  17337 10 001651   000004 316003                    CANQ    4,DU
        10 001652   001657 600000 10                 TZE     s:17339

     1612    17338    3                   THEN TAPE_OPTION3.DIR = 'YES';

  17338 10 001653   040000 100400                    MLR     fill='040'O
        10 001654   000032 000003 9                  ADSC9   26                       cn=0,n=3
        10 001655   000260 400003 2                  ADSC9   TAPE_OPTION3+11          cn=2,n=3
        10 001656   001662 710000 10                 TRA     s:17340

     1613    17339    3                   ELSE TAPE_OPTION3.DIR = 'NO';

  17339 10 001657   040000 100400                    MLR     fill='040'O
        10 001660   000027 000002 9                  ADSC9   23                       cn=0,n=2
        10 001661   000260 400003 2                  ADSC9   TAPE_OPTION3+11          cn=2,n=3

     1614    17340    3                   IF REBUILD_BUF.IOERRORC

  17340 10 001662   000001 316003                    CANQ    1,DU
        10 001663   001667 600000 10                 TZE     s:17342

     1615    17341    3                   THEN TAPE_OPTION3.IOERRORC = 'YES';

  17341 10 001664   000032 236000 9                  LDQ     26
        10 001665   000265 552070 2                  STBQ    TAPE_OPTION3+16,'70'O
        10 001666   001673 710000 10                 TRA     s:17343

     1616    17342    3                   ELSE TAPE_OPTION3.IOERRORC = 'NO';

  17342 10 001667   000027 236000 9                  LDQ     23
        10 001670   777777 376003                    ANQ     -1,DU
        10 001671   040040 276007                    ORQ     16416,DL
        10 001672   000265 552070 2                  STBQ    TAPE_OPTION3+16,'70'O

     1617    17343    3                   OUTPUT_ARCHIVE_INFO.BUF_ = VECTOR( TAPE_OPTION3 );

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:242  
  17343 10 001673   000050 237000 11                 LDAQ    40
        10 001674   000310 757000 2                  STAQ    OUTPUT_ARCHIVE_INFO+4

     1618    17344    3                   CALL M$WRITE ( OUTPUT_ARCHIVE_INFO ) ALTRET(ERR);

  17344 10 001675   000304 630400 2                  EPPR0   OUTPUT_ARCHIVE_INFO
        10 001676   440001 713400                    CLIMB   alt,write
        10 001677   401400 401760                    pmme    nvectors=4
        10 001700   002200 702000 10                 TSX2    ERR
        10 001701   002177 710000 10                 TRA     s:17429

     1619    17345    3                CASE ( %NODATA_FILE );

     1620    17346
     1621    17347    3                   IF DCBADDR ( DCBNUM ( M$NODATA_LIST ) ) -> F$DCB.FCD#

  17347 10 001702   000000 236007 xsym               LDQ     M$NODATA_LIST,DL
        10 001703   000017 470400 11                 LDP0    15
        10 001704   000000 471500                    LDP1    0,,PR0
        10 001705   100000 473506                    LDP3    0,QL,PR1
        10 001706   300031 236100                    LDQ     25,,PR3
        10 001707   020000 316007                    CANQ    8192,DL
        10 001710   001715 600000 10                 TZE     s:17349

     1622    17348    3                   THEN CALL M$CLOSE ( CLOSE_NODATA_LIST ) ALTRET ( ERR );

  17348 10 001711   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        10 001712   450001 713400                    CLIMB   alt,close
        10 001713   406000 401760                    pmme    nvectors=13
        10 001714   002200 702000 10                 TSX2    ERR

     1623    17349    3                   OPEN_NODATA_LIST.V.FUN# = %IN#;

  17349 10 001715   002000 236007                    LDQ     1024,DL
        10 001716   000045 552010 xsym               STBQ    OPEN_NODATA_LIST+37,'10'O

     1624    17350    3                   OPEN_NODATA_LIST.V.RES# = DPRESLIST.NAME ( 0 );
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:243  

  17350 10 001717   000000 470400 xsym               LDP0    DPRESLIST$
        10 001720   000001 236100                    LDQ     1,,PR0
        10 001721   000050 756000 xsym               STQ     OPEN_NODATA_LIST+40

     1625    17351    3                   NODATA_SN.SN# ( 0 ) = DPLIST.SN# ( 0 );

  17351 10 001722   000000 471400 xsym               LDP1    DPLIST$
        10 001723   040000 100500                    MLR     fill='040'O
        10 001724   100001 000006                    ADSC9   1,,PR1                   cn=0,n=6
        10 001725   000001 000006 xsym               ADSC9   NODATA_SN+1              cn=0,n=6

     1626    17352    3                   CALL M$OPEN ( OPEN_NODATA_LIST ) ALTRET ( ERR );

  17352 10 001726   000000 630400 xsym               EPPR0   OPEN_NODATA_LIST
        10 001727   450000 713400                    CLIMB   alt,open
        10 001730   410400 401760                    pmme    nvectors=18
        10 001731   002200 702000 10                 TSX2    ERR

     1627    17353
     1628    17354        /* Output headers if file contains data */
     1629    17355    3                   CALL M$READ ( READ_NODATA_LIST ) ALTRET ( NEXT_FILE );

  17355 10 001732   000000 630400 xsym               EPPR0   READ_NODATA_LIST
        10 001733   440000 713400                    CLIMB   alt,read
        10 001734   401400 401760                    pmme    nvectors=4
        10 001735   002203 702000 10                 TSX2    NEXT_FILE

     1630    17356    3                   CALL M$CLOSE ( CLOSE_NODATA_LIST ) ALTRET ( ERR );

  17356 10 001736   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        10 001737   450001 713400                    CLIMB   alt,close
        10 001740   406000 401760                    pmme    nvectors=13
        10 001741   002200 702000 10                 TSX2    ERR

     1631    17357    3                   CALL M$OPEN ( OPEN_NODATA_LIST ) ALTRET ( ERR );

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:244  
  17357 10 001742   000000 630400 xsym               EPPR0   OPEN_NODATA_LIST
        10 001743   450000 713400                    CLIMB   alt,open
        10 001744   410400 401760                    pmme    nvectors=18
        10 001745   002200 702000 10                 TSX2    ERR

     1632    17358
     1633    17359    3                   OUT_SINGLE_LINE = ' ';

  17359 10 001746   040000 100400                    MLR     fill='040'O
        10 001747   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001750   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1634    17360    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17360 10 001751   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001752   440001 713400                    CLIMB   alt,write
        10 001753   401400 401760                    pmme    nvectors=4
        10 001754   002200 702000 10                 TSX2    ERR

     1635    17361    3                   CALL CONCAT ( OUT_SINGLE_LINE, 'DP#', NODATA_SN.SN# ( 0 ),
             17361                            '/:NODATA.$$EFT' );

  17361 10 001755   000000 236000 9                  LDQ     0
        10 001756   000010 376000 11                 ANQ     8
        10 001757   000040 276007                    ORQ     32,DL
        10 001760   000025 756000 2                  STQ     OUT_SINGLE_LINE
        10 001761   040000 100400                    MLR     fill='040'O
        10 001762   000001 000006 xsym               ADSC9   NODATA_SN+1              cn=0,n=6
        10 001763   000025 600006 2                  ADSC9   OUT_SINGLE_LINE          cn=3,n=6
        10 001764   040000 100400                    MLR     fill='040'O
        10 001765   000137 000016 9                  ADSC9   95                       cn=0,n=14
        10 001766   000027 200107 2                  ADSC9   OUT_SINGLE_LINE+2        cn=1,n=71

     1636    17362    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17362 10 001767   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001770   440001 713400                    CLIMB   alt,write
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:245  
        10 001771   401400 401760                    pmme    nvectors=4
        10 001772   002200 702000 10                 TSX2    ERR

     1637    17363    3                   OUT_SINGLE_LINE = ' ';

  17363 10 001773   040000 100400                    MLR     fill='040'O
        10 001774   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 001775   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1638    17364    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17364 10 001776   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 001777   440001 713400                    CLIMB   alt,write
        10 002000   401400 401760                    pmme    nvectors=4
        10 002001   002200 702000 10                 TSX2    ERR

     1639    17365
     1640    17366    3                   OUT_SINGLE_LINE = NODATA_HDR;

  17366 10 002002   040000 100400                    MLR     fill='040'O
        10 002003   000266 000061 2                  ADSC9   NODATA_HDR               cn=0,n=49
        10 002004   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1641    17367    3                   CALL M$WRITE ( OUTPUT_HEADER ) ALTRET (ERR );

  17367 10 002005   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002006   440001 713400                    CLIMB   alt,write
        10 002007   401400 401760                    pmme    nvectors=4
        10 002010   002200 702000 10                 TSX2    ERR

     1642    17368
     1643    17369    3                   PREV_ACCT.ACCT# = ' ';

  17369 10 002011   000035 235000 xsym               LDA     B_VECTNIL+29
        10 002012   000035 236000 xsym               LDQ     B_VECTNIL+29
        10 002013   000522 757000 2                  STAQ    PREV_ACCT

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:246  
     1644    17370    3                   OUT_SINGLE_LINE = ' ';

  17370 10 002014   040000 100400                    MLR     fill='040'O
        10 002015   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002016   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1645    17371    3                   K = 0;

  17371 10 002017   200005 450100                    STZ     K,,AUTO

     1646    17372    3                   CURR_TAB = 0;

  17372 10 002020   200014 450100                    STZ     CURR_TAB,,AUTO

     1647    17373        /* Read :NODATA file and output account followed by files within that account */
     1648    17374    4                   DO WHILE ( '1'B );

     1649    17375    4                         CALL M$READ ( READ_NODATA_LIST )

  17375 10 002021   000000 630400 xsym               EPPR0   READ_NODATA_LIST
        10 002022   440000 713400                    CLIMB   alt,read
        10 002023   401400 401760                    pmme    nvectors=4
        10 002024   002155 702000 10                 TSX2    s:17418

     1650    17376    5                          WHENRETURN DO;

     1651    17377    5                           IF NODATA_KEY.ACCT# ~= PREV_ACCT.ACCT#

  17377 10 002025   040000 106400                    CMPC    fill='040'O
        10 002026   000000 200010 xsym               ADSC9   NODATA_KEY               cn=1,n=8
        10 002027   000522 000010 2                  ADSC9   PREV_ACCT                cn=0,n=8
        10 002030   002064 600000 10                 TZE     s:17392

     1652    17378    6                           THEN DO;

     1653    17379    6                                IF CURR_TAB > 0 /* Print rest of files for acct. */

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:247  
  17379 10 002031   200014 235100                    LDA     CURR_TAB,,AUTO
        10 002032   002047 600000 10                 TZE     s:17386

     1654    17380    7                                THEN DO;

     1655    17381    7                                     CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17381 10 002033   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002034   440001 713400                    CLIMB   alt,write
        10 002035   401400 401760                    pmme    nvectors=4
        10 002036   002200 702000 10                 TSX2    ERR

     1656    17382    7                                     CURR_TAB = 0;

  17382 10 002037   200014 450100                    STZ     CURR_TAB,,AUTO

     1657    17383    7                                     OUT_SINGLE_LINE = ' ';

  17383 10 002040   040000 100400                    MLR     fill='040'O
        10 002041   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002042   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1658    17384    7                                     CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17384 10 002043   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002044   440001 713400                    CLIMB   alt,write
        10 002045   401400 401760                    pmme    nvectors=4
        10 002046   002200 702000 10                 TSX2    ERR

     1659    17385    7                                   END;

     1660    17386    6                                OUT_SINGLE_LINE = NODATA_KEY.ACCT#;

  17386 10 002047   040000 100400                    MLR     fill='040'O
        10 002050   000000 200010 xsym               ADSC9   NODATA_KEY               cn=1,n=8
        10 002051   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:248  
     1661    17387    6                                CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17387 10 002052   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002053   440001 713400                    CLIMB   alt,write
        10 002054   401400 401760                    pmme    nvectors=4
        10 002055   002200 702000 10                 TSX2    ERR

     1662    17388    6                                PREV_ACCT.ACCT# = NODATA_KEY.ACCT#;

  17388 10 002056   040000 100400                    MLR     fill='040'O
        10 002057   000000 200010 xsym               ADSC9   NODATA_KEY               cn=1,n=8
        10 002060   000522 000010 2                  ADSC9   PREV_ACCT                cn=0,n=8

     1663    17389    6                                OUT_SINGLE_LINE = ' ';

  17389 10 002061   040000 100400                    MLR     fill='040'O
        10 002062   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002063   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1664    17390    6                                END;

     1665    17391
     1666    17392    5                           IF ( CURR_TAB + NODATA_KEY.NAME#.L) >

  17392 10 002064   000012 236000 xsym               LDQ     NODATA_KEY+10
        10 002065   000033 772000                    QRL     27
        10 002066   200014 036100                    ADLQ    CURR_TAB,,AUTO
        10 002067   000120 116007                    CMPQ    80,DL
        10 002070   002101 602000 10                 TNC     s:17400

     1667    17393    5                               LENGTHC ( OUT_SINGLE_LINE ) - 1
     1668    17394    6                           THEN DO; /* Current file won't fit on line, print buffer */

     1669    17395    6                                CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17395 10 002071   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002072   440001 713400                    CLIMB   alt,write
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:249  
        10 002073   401400 401760                    pmme    nvectors=4
        10 002074   002200 702000 10                 TSX2    ERR

     1670    17396    6                                OUT_SINGLE_LINE = ' ';

  17396 10 002075   040000 100400                    MLR     fill='040'O
        10 002076   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002077   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1671    17397    6                                CURR_TAB = 0;

  17397 10 002100   200014 450100                    STZ     CURR_TAB,,AUTO

     1672    17398    6                                END;

     1673    17399
     1674    17400    5                           CALL INSERT ( OUT_SINGLE_LINE,CURR_TAB,NODATA_KEY.NAME#.L,
             17400                                    NODATA_KEY.NAME#.C );

  17400 10 002101   000012 236000 xsym               LDQ     NODATA_KEY+10
        10 002102   000033 772000                    QRL     27
        10 002103   000000 620006                    EAX0    0,QL
        10 002104   200014 235100                    LDA     CURR_TAB,,AUTO
        10 002105   040045 100400                    MLR     fill='040'O
        10 002106   000002 200037 xsym               ADSC9   NODATA_KEY+2             cn=1,n=31
        10 002107   000025 000010 2                  ADSC9   OUT_SINGLE_LINE,A        cn=0,n=*X0

     1675    17401    5                          IF ( CURR_TAB + NODATA_KEY.NAME#.L ) > COLS ( NBR_COLS - 1 )

  17401 10 002110   000012 236000 xsym               LDQ     NODATA_KEY+10
        10 002111   000033 772000                    QRL     27
        10 002112   200014 036100                    ADLQ    CURR_TAB,,AUTO
        10 002113   000060 720000 2                  LXL0    NBR_COLS
        10 002114   000050 116010 2                  CMPQ    OUT_SINGLE_LINE+19,X0
        10 002115   002130 602000 10                 TNC     s:17408
        10 002116   002130 600000 10                 TZE     s:17408

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:250  
     1676    17402    6                           THEN DO;      /* File exceeded last tab, print buffer */

     1677    17403    6                                CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERR );

  17403 10 002117   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002120   440001 713400                    CLIMB   alt,write
        10 002121   401400 401760                    pmme    nvectors=4
        10 002122   002200 702000 10                 TSX2    ERR

     1678    17404    6                                OUT_SINGLE_LINE = ' ';

  17404 10 002123   040000 100400                    MLR     fill='040'O
        10 002124   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002125   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1679    17405    6                                CURR_TAB = 0;

  17405 10 002126   200014 450100                    STZ     CURR_TAB,,AUTO

     1680    17406    6                                END;

  17406 10 002127   002154 710000 10                 TRA     s:17416

     1681    17407    6                           ELSE DO;                              /* Set next tab */

     1682    17408    7                                DO K = 0 TO NBR_COLS - 1;

  17408 10 002130   200005 450100                    STZ     K,,AUTO
        10 002131   002150 710000 10                 TRA     s:17414+3

     1683    17409    7                                   IF ( CURR_TAB + NODATA_KEY.NAME#.L ) < COLS ( K )

  17409 10 002132   000012 236000 xsym               LDQ     NODATA_KEY+10
        10 002133   000033 772000                    QRL     27
        10 002134   200014 036100                    ADLQ    CURR_TAB,,AUTO
        10 002135   200005 720100                    LXL0    K,,AUTO
        10 002136   000051 116010 2                  CMPQ    COLS,X0
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:251  
        10 002137   002145 603000 10                 TRC     s:17414

     1684    17410    8                                   THEN DO;

     1685    17411    8                                        CURR_TAB = COLS ( K );

  17411 10 002140   000051 235010 2                  LDA     COLS,X0
        10 002141   200014 755100                    STA     CURR_TAB,,AUTO

     1686    17412    8                                        K = NBR_COLS + 1;

  17412 10 002142   000060 236000 2                  LDQ     NBR_COLS
        10 002143   000001 036007                    ADLQ    1,DL
        10 002144   200005 756100                    STQ     K,,AUTO

     1687    17413    8                                        END;

     1688    17414    7                                   END;

  17414 10 002145   200005 235100                    LDA     K,,AUTO
        10 002146   000001 035007                    ADLA    1,DL
        10 002147   200005 755100                    STA     K,,AUTO
        10 002150   200005 236100                    LDQ     K,,AUTO
        10 002151   002154 604000 10                 TMI     s:17416
        10 002152   000060 116000 2                  CMPQ    NBR_COLS
        10 002153   002132 604000 10                 TMI     s:17409

     1689    17415    6                                END;

     1690    17416    5                              END;

  17416 10 002154   002176 710000 10                 TRA     s:17427

     1691    17417    5                          WHENALTRETURN DO;

     1692    17418    5                             IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$EOF

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:252  
  17418 10 002155   000000 470400 xsym               LDP0    B$TCB$
        10 002156   000000 471500                    LDP1    0,,PR0
        10 002157   100102 236100                    LDQ     66,,PR1
        10 002160   377770 376007                    ANQ     131064,DL
        10 002161   000060 116007                    CMPQ    48,DL
        10 002162   002176 601000 10                 TNZ     s:17427

     1693    17419    6                             THEN DO;

     1694    17420    6                                  IF CURR_TAB > 0        /* Print data in buffer */

  17420 10 002163   200014 235100                    LDA     CURR_TAB,,AUTO
        10 002164   002171 600000 10                 TZE     s:17423

     1695    17421    6                                       THEN CALL M$WRITE ( OUTPUT_HEADER )

  17421 10 002165   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002166   440001 713400                    CLIMB   alt,write
        10 002167   401400 401760                    pmme    nvectors=4
        10 002170   002200 702000 10                 TSX2    ERR

     1696    17422    6                                           ALTRET ( ERR );
     1697    17423    6                                  CALL M$CLOSE ( CLOSE_NODATA_LIST ) ALTRET ( ERR );

  17423 10 002171   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        10 002172   450001 713400                    CLIMB   alt,close
        10 002173   406000 401760                    pmme    nvectors=13
        10 002174   002200 702000 10                 TSX2    ERR

     1698    17424    6                                  GOTO NEXT_FILE;

  17424 10 002175   002203 710000 10                 TRA     NEXT_FILE

     1699    17425    6                                  END;
     1700    17426    5                            END;
     1701    17427    4                      END;

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:253  
  17427 10 002176   002021 710000 10                 TRA     s:17375

     1702    17428    3                END; /* DO CASE ( CONTROL_LIST ( I ) ) */

     1703    17429    3                DO WHILE ( '0'B );

  17429 10 002177   002203 710000 10                 TRA     NEXT_FILE

     1704    17430    3   ERR:               CALL FLI$RPT_ERR;

  17430 10 002200   000002 631400 xsym  ERR          EPPR1   B_VECTNIL+2
        10 002201   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002202   000000 011000                    NOP     0

     1705    17431    3                   END;

     1706    17432    2   NEXT_FILE:   IF DCBADDR ( DCBNUM ( M$STATUS ) ) -> F$DCB.FCD#

  17432 10 002203   000000 236007 xsym  NEXT_FILE    LDQ     M$STATUS,DL
        10 002204   000017 470400 11                 LDP0    15
        10 002205   000000 471500                    LDP1    0,,PR0
        10 002206   100000 473506                    LDP3    0,QL,PR1
        10 002207   300031 236100                    LDQ     25,,PR3
        10 002210   020000 316007                    CANQ    8192,DL
        10 002211   002215 600000 10                 TZE     s:17434

     1707    17433    2                THEN CALL M$CLOSE ( CLOSE_STATUS );

  17433 10 002212   000000 630400 xsym               EPPR0   CLOSE_STATUS
        10 002213   050001 713400                    CLIMB   close
        10 002214   406000 401760                    pmme    nvectors=13

     1708    17434    2                IF DCBADDR ( DCBNUM ( M$ARCHIVE ) ) -> F$DCB.FCD#

  17434 10 002215   000000 236007 xsym               LDQ     M$ARCHIVE,DL
        10 002216   000017 470400 11                 LDP0    15
        10 002217   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:254  
        10 002220   100000 473506                    LDP3    0,QL,PR1
        10 002221   300031 236100                    LDQ     25,,PR3
        10 002222   020000 316007                    CANQ    8192,DL
        10 002223   002227 600000 10                 TZE     s:17436

     1709    17435    2                THEN CALL M$CLOSE ( CLOSE_ARCHIVE );

  17435 10 002224   000444 630400 2                  EPPR0   CLOSE_ARCHIVE
        10 002225   050001 713400                    CLIMB   close
        10 002226   406000 401760                    pmme    nvectors=13

     1710    17436    2                IF DCBADDR ( DCBNUM ( M$REBUILD ) ) -> F$DCB.FCD#

  17436 10 002227   000000 236007 xsym               LDQ     M$REBUILD,DL
        10 002230   000017 470400 11                 LDP0    15
        10 002231   000000 471500                    LDP1    0,,PR0
        10 002232   100000 473506                    LDP3    0,QL,PR1
        10 002233   300031 236100                    LDQ     25,,PR3
        10 002234   020000 316007                    CANQ    8192,DL
        10 002235   002241 600000 10                 TZE     s:17438

     1711    17437    2                THEN CALL M$CLOSE ( CLOSE_REBUILD );

  17437 10 002236   000000 630400 xsym               EPPR0   CLOSE_REBUILD
        10 002237   050001 713400                    CLIMB   close
        10 002240   406000 401760                    pmme    nvectors=13

     1712    17438    2                IF DCBADDR ( DCBNUM ( M$NODATA_LIST ) ) -> F$DCB.FCD#

  17438 10 002241   000000 236007 xsym               LDQ     M$NODATA_LIST,DL
        10 002242   000017 470400 11                 LDP0    15
        10 002243   000000 471500                    LDP1    0,,PR0
        10 002244   100000 473506                    LDP3    0,QL,PR1
        10 002245   300031 236100                    LDQ     25,,PR3
        10 002246   020000 316007                    CANQ    8192,DL
        10 002247   002253 600000 10                 TZE     s:17440

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:255  
     1713    17439    2                THEN CALL M$CLOSE ( CLOSE_NODATA_LIST );

  17439 10 002250   000000 630400 xsym               EPPR0   CLOSE_NODATA_LIST
        10 002251   050001 713400                    CLIMB   close
        10 002252   406000 401760                    pmme    nvectors=13

     1714    17440    2                IF BREAK_COUNT > 0 THEN RETURN;

  17440 10 002253   000000 235000 xsym               LDA     BREAK_COUNT
        10 002254   002256 600000 10                 TZE     s:17441

  17440 10 002255   000000 702200 xent               TSX2  ! X66_ARET

     1715    17441    2            END;

  17441 10 002256   200003 236100                    LDQ     I,,AUTO
        10 002257   000001 036007                    ADLQ    1,DL
        10 002260   200003 756100                    STQ     I,,AUTO
        10 002261   200003 236100                    LDQ     I,,AUTO
        10 002262   000000 116000 xsym               CMPQ    NBR_CONTROL_FILE
        10 002263   000025 602000 10                 TNC     s:16961
        10 002264   002372 710000 10                 TRA     s:17475

     1716    17442        %EJECT;
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:256  
     1717    17443    1   DISPLAY_TSN: PROC;

  17443 10 002265   200016 741300       DISPLAY_TSN  STX1  ! NO_INCR_TIME+1,,AUTO

     1718    17444
     1719    17445        /* Take where AVAIL$ points at as a VLP_SN structure and output tape
     1720    17446           serial numbers 5 on a line */
     1721    17447
     1722    17448    2   DCL LIST_LEN UBIN;
     1723    17449    2   DCL K UBIN;
     1724    17450
     1725    17451    2        COUNT = 0;

  17451 10 002266   200010 450100                    STZ     COUNT,,AUTO

     1726    17452    2        OUT_SINGLE_LINE = ' ';

  17452 10 002267   040000 100400                    MLR     fill='040'O
        10 002270   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002271   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1727    17453    2        OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 8 );

  17453 10 002272   000052 236000 11                 LDQ     42
        10 002273   200011 756100                    STQ     OUT_PTR$,,AUTO

     1728    17454    3        DO K = 0 TO AVAIL$ -> VLP_SN.NUM# - 1;

  17454 10 002274   200020 450100                    STZ     K,,AUTO
        10 002275   002332 710000 10                 TRA     s:17465+3

     1729    17455    3             OUT_PTR$ -> VLP_SN.SN# ( 0 ) = AVAIL$ -> VLP_SN.SN# ( K );

  17455 10 002276   200020 236100                    LDQ     K,,AUTO
        10 002277   000006 402007                    MPY     6,DL
        10 002300   200007 470500                    LDP0    AVAIL$,,AUTO
        10 002301   200011 471500                    LDP1    OUT_PTR$,,AUTO
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:257  
        10 002302   040100 100506                    MLR     fill='040'O
        10 002303   000001 000006                    ADSC9   1,Q,PR0                  cn=0,n=6
        10 002304   100001 000006                    ADSC9   1,,PR1                   cn=0,n=6

     1730    17456    3             OUT_PTR$ = PINCRC ( OUT_PTR$, 2 + LENGTHC ( VLP_SN.SN# ( 0 ) ) );

  17456 10 002305   200011 236100                    LDQ     OUT_PTR$,,AUTO
        10 002306   000002 036003                    ADLQ    2,DU
        10 002307   200011 756100                    STQ     OUT_PTR$,,AUTO

     1731    17457    3             COUNT = COUNT + 1;

  17457 10 002310   200010 235100                    LDA     COUNT,,AUTO
        10 002311   000001 035007                    ADLA    1,DL
        10 002312   200010 755100                    STA     COUNT,,AUTO

     1732    17458    3             IF COUNT = 5

  17458 10 002313   000005 115007                    CMPA    5,DL
        10 002314   002327 601000 10                 TNZ     s:17465

     1733    17459    4             THEN DO;

     1734    17460    4                  CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERROR );

  17460 10 002315   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002316   440001 713400                    CLIMB   alt,write
        10 002317   401400 401760                    pmme    nvectors=4
        10 002320   002365 702000 10                 TSX2    ERROR

     1735    17461    4                  COUNT = 0;

  17461 10 002321   200010 450100                    STZ     COUNT,,AUTO

     1736    17462    4                  OUT_SINGLE_LINE = ' ';

  17462 10 002322   040000 100400                    MLR     fill='040'O
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:258  
        10 002323   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002324   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80

     1737    17463    4                  OUT_PTR$ = PINCRC ( ADDR ( OUT_SINGLE_LINE ), 8 );

  17463 10 002325   000052 236000 11                 LDQ     42
        10 002326   200011 756100                    STQ     OUT_PTR$,,AUTO

     1738    17464    4                END;

     1739    17465    3           END;

  17465 10 002327   200020 235100                    LDA     K,,AUTO
        10 002330   000001 035007                    ADLA    1,DL
        10 002331   200020 755100                    STA     K,,AUTO
        10 002332   200007 470500                    LDP0    AVAIL$,,AUTO
        10 002333   200020 236100                    LDQ     K,,AUTO
        10 002334   002337 604000 10                 TMI     s:17466
        10 002335   000000 116100                    CMPQ    0,,PR0
        10 002336   002276 604000 10                 TMI     s:17455

     1740    17466    2         IF COUNT ~= 5 AND OUT_SINGLE_LINE ~= ' '

  17466 10 002337   200010 235100                    LDA     COUNT,,AUTO
        10 002340   000005 115007                    CMPA    5,DL
        10 002341   002352 600000 10                 TZE     s:17468
        10 002342   040000 106400                    CMPC    fill='040'O
        10 002343   000025 000120 2                  ADSC9   OUT_SINGLE_LINE          cn=0,n=80
        10 002344   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        10 002345   002352 600000 10                 TZE     s:17468

     1741    17467    2         THEN CALL M$WRITE ( OUTPUT_HEADER ) ALTRET ( ERROR );

  17467 10 002346   000320 630400 2                  EPPR0   OUTPUT_HEADER
        10 002347   440001 713400                    CLIMB   alt,write
        10 002350   401400 401760                    pmme    nvectors=4
        10 002351   002365 702000 10                 TSX2    ERROR
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:259  

     1742    17468    2         LIST_LEN = ( LENGTHC ( AVAIL$ -> VLP_SN.NUM# ) + AVAIL$ -> VLP_SN.NUM# *

  17468 10 002352   200007 470500                    LDP0    AVAIL$,,AUTO
        10 002353   000000 236100                    LDQ     0,,PR0
        10 002354   000006 402007                    MPY     6,DL
        10 002355   000007 036007                    ADLQ    7,DL
        10 002356   000004 506007                    DIV     4,DL
        10 002357   200017 756100                    STQ     LIST_LEN,,AUTO

     1743    17469    2                LENGTHC ( VLP_SN.SN# ( 0 ) ) + 3 ) / 4;
     1744    17470    2         AVAIL$ = PINCRW ( AVAIL$, LIST_LEN );

  17470 10 002360   000022 736000                    QLS     18
        10 002361   200007 036100                    ADLQ    AVAIL$,,AUTO
        10 002362   200007 756100                    STQ     AVAIL$,,AUTO

     1745    17471
     1746    17472    2         RETURN;

  17472 10 002363   200016 221300                    LDX1  ! NO_INCR_TIME+1,,AUTO
        10 002364   000001 702211                    TSX2  ! 1,X1

     1747    17473    2   ERROR:CALL FLI$RPT_ERR;

  17473 10 002365   000002 631400 xsym  ERROR        EPPR1   B_VECTNIL+2
        10 002366   000000 701000 xent               TSX1    FLI$RPT_ERR
        10 002367   000000 011000                    NOP     0

     1748    17474    2   END DISPLAY_TSN;

  17474 10 002370   200016 221300                    LDX1  ! NO_INCR_TIME+1,,AUTO
        10 002371   000001 702211                    TSX2  ! 1,X1

     1749    17475    1   END FLS$STATUS;

  17475 10 002372   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:260  

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:261  
--  Include file information  --

   FL_PERR_C.:E05TOU  is referenced.
   FLE_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FLS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   FLB_SUBS_C.:E05TOU  is referenced.
   FLI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FLS$STATUS.
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:262  

 **** Variables and constants ****

  ****  Section 002  Data  FLS$STATUS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/c STRC(72)    r     1 BACKUP_ACCT              120-0-0/c STRC(711)   r     1 BACKUP_HDR
   120-0-0/c CHAR(79)    r     1 BACKUP_HDR_CHAR          144-0-0/c STRC(711)   r     1 BACKUP_REC
   444-0-0/d STRC(1080)  r     1 CLOSE_ARCHIVE             51-0-0/w UBIN        r     1 COLS(0:6)
    12-0-0/d STRC(360)   r     1 DEL_NODATA_REC           502-0-0/d STRC(90)    r     1 DPSN
   506-0-0/d STRC(432)   r     1 GET_TIME                  60-0-0/w SBIN        r     1 NBR_COLS
   266-0-0/c CHAR(49)    r     1 NODATA_HDR               334-0-0/d STRC(2088)  r     1 OPEN_ARCHIVE_FILE
   304-0-0/d STRC(432)   r     1 OUTPUT_ARCHIVE_INFO      320-0-0/d STRC(432)   r     1 OUTPUT_HEADER
    25-0-0/c CHAR(80)    r     1 OUT_SINGLE_LINE          522-0-0/c STRC(72)    r     1 PREV_ACCT
   170-0-0/c STRC(342)   r     1 PRIME_AND_DUAL           170-0-0/c CHAR(38)    r     1 PRIME_AND_DUAL_CHARS
   426-0-0/d STRC(504)   r     1 READ_ARCHIVE_FILE        211-0-0/c STRC(387)   r     1 REBUILD_HDR
   211-0-0/c CHAR(43)    r     1 REBUILD_HDR_CHAR         224-0-0/c STRC(585)   r     1 REBUILD_REC
    61-0-0/c STRC(693)   r     1 TAPE_OPTION1             105-0-0/c STRC(369)   r     1 TAPE_OPTION2
   245-0-0/c STRC(603)   r     1 TAPE_OPTION3             202-0-0/c STRC(234)   r     1 TIME_BUF
   202-0-0/c CHAR(26)    r     1 TIME_BUF_CHARS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 AVAIL$                    10-0-0/w UBIN        r     1 COUNT
    14-0-0/w UBIN        r     1 CURR_TAB                   3-0-0/w UBIN        r     1 I
     5-0-0/w UBIN        r     1 K                         20-0-0/w UBIN        r     1 K
    17-0-0/w UBIN        r     1 LIST_LEN                  15-0-0/b BIT         r     1 NO_INCR_TIME
    11-0-0/w PTR         r     1 OUT_PTR$                   6-0-0/w UBIN        r     1 SIZE
    12-0-0/w PTR         r     1 START$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:263  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ARCHIVE_NAME               0-0-0/w PTR         r     1 B$TCB$
     0-0-0/c ASTR(9)     r     1 BACKUP_NAME                0-0-0/d STRC(90)    r     1 BACKUP_SN
     0-0-0/w PTR         r     1 BLK_TAG$                   0-0-0/w PTR         r     1 BLK_TAG0$
     0-0-0/w PTR         r     1 BLOCK_GRAN$                0-0-0/w UBIN        r     1 BREAK_COUNT
     0-0-0/d STRC(1080)  r     1 CLOSE_NODATA_LIST          0-0-0/d STRC(1080)  r     1 CLOSE_PRIME_DUAL
     0-0-0/d STRC(1080)  r     1 CLOSE_REBUILD              0-0-0/d STRC(1080)  r     1 CLOSE_STATUS
     0-0-0/w UBIN        r     1 CONTROL_LIST(0:5)
     0-0-0/d STRC(1080)  r     1 CON_CLOSE_ARCHIVE
     0-0-0/d STRC(2088)  r     1 CON_OPEN_ARCHIVE_FILE
     0-0-0/d STRC(504)   r     1 CON_READ_ARCHIVE_FILE
     0-0-0/w PTR         r     1 DISK_FILE_SPEC$            0-0-0/w PTR         r     1 DISK_GRAN$
     0-0-0/w PTR         r     1 DPLIST$                    0-0-0/w PTR         r     1 DPRESLIST$
     0-0-0/c ASTR(9)     r     1 DUAL_FILE                  0-0-0/c ASTR(9)     r     1 EFT_CVOL_FILE
     0-0-0/c ASTR(9)     r     1 EFT_RESTRICT_FILE          0-0-0/w SBIN        r     1 NBR_BYTES_TO_MOVE
     0-0-0/w UBIN        r     1 NBR_CONTROL_FILE           0-0-0/c ASTR(9)     r     1 NODATA_FILE_NAME
     0-0-0/c STRC(369)   r     1 NODATA_KEY                 0-0-0/d STRC(90)    r     1 NODATA_SN
     0-0-0/c BIT (9)     r     1 NO_4_LEADING_ZEROS(0:2)
     0-0-0/d STRC(2088)  r     1 OPEN_NODATA_LIST           0-0-0/d STRC(2088)  r     1 OPEN_PRIME_DUAL
     0-0-0/d STRC(2088)  r     1 OPEN_REBUILD               0-0-0/d STRC(2088)  r     1 OPEN_STATUS
     0-0-0/w STRC(144)   r     1 PRIME_DUAL_BUF             0-0-0/c ASTR(9)     r     1 PRIME_FILE
     0-0-0/d STRC(504)   r     1 READ_NODATA_LIST           0-0-0/d STRC(504)   r     1 READ_PRIME_DUAL
     0-0-0/d STRC(504)   r     1 READ_REBUILD               0-0-0/d STRC(504)   r     1 READ_STATUS
     0-0-0/h STRC(450)   r     1 REBUILD_BUF                0-0-0/c ASTR(9)     r     1 REBUILD_DIR_KEY
     0-0-0/c ASTR(9)     r     1 REBUILD_KEY                0-0-0/c ASTR(9)     r     1 REBUILD_NAME
     0-0-0/d STRC(90)    r     1 REBUILD_SN                 0-0-0/c ASTR(9)     r     1 RET_CMDS_NAME
     0-0-0/w SBIN        r     1 RUN_NBR                    0-0-0/w PTR         r     1 SNVECLIST$
     0-0-0/b BIT         r     1 STAF                       0-0-0/c STRC        r     1 STATUS_KEY
     0-0-0/w PTR         r     1 TAPE_DCBLIST$              0-0-0/b BIT         r     1 TEST_MODE
     0-0-0/w STRC(270)   r     1 TSN_USED_BUF               0-0-0/c ASTR(9)     r     1 TSN_USED_NAME

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:264  
     0-0-0/w STRC(324)   r     1 ARCHIVE_LIST               0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d STRC(90)    r     1 DPLIST
     0-0-0/c CHAR(9)     r     1 DPNAME                     0-0-0/w STRC(72)    r     1 DPRESLIST
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$ARCHIVE
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$NODATA_LIST
     0-0-0N  NULL        r     1 M$REBUILD                  0-0-0N  NULL        r     1 M$STATUS
     0-0-0/d STRC(90)    r     1 VLP_SN


   Procedure FLS$STATUS requires 1275 words for executable code.
   Procedure FLS$STATUS requires 20 words of local(AUTO) storage.

    No errors detected in file FLS$STOW_FETCH.:E05TSI    .
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:265  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:266  
          MINI XREF LISTING

ARCHIVE_LIST.OD
      9564**DCL     17006>>IF      17093>>IF
ARCHIVE_LIST.OFFSET.DPLIST
      9564**DCL     17053>>ASSIGN
ARCHIVE_LIST.OFFSET.SNLIST
      9564**DCL     17087>>ASSIGN
ARCHIVE_LIST.OFFSET.SNLIST2
      9564**DCL     17099>>IF      17101>>ASSIGN
ARCHIVE_LIST.OPTION.BLOCK
      9565**DCL     17039>>CALLBLT
ARCHIVE_LIST.OPTION.CHECK
      9565**DCL     17044>>IF
ARCHIVE_LIST.OPTION.DEN
      9564**DCL     17010>>DOCASE
ARCHIVE_LIST.OPTION.EXP
      9565**DCL     17032>>IF      17035>>CALLBLT
ARCHIVE_LIST.OPTION.IOERRORC
      9565**DCL     17047>>IF
ARCHIVE_LIST.OPTION.VOLA
      9565**DCL     17022>>DOCASE
ARCHIVE_LIST.SIZE
      9563**DCL     16991>>ASSIGN
ARCHIVE_LIST.VERSION.FLAG
      9563**DCL     16986>>IF
ARCHIVE_NAME.L#
      9548**DCL      9548--IMP-SIZ
AVAIL$
     16430**DCL     16976<<ASSIGN  16977>>ASSIGN  16989<>CALL    16990>>ASSIGN  17006>>IF      17010>>DOCASE
     17022>>DOCASE  17032>>IF      17035>>CALLBLT 17039>>CALLBLT 17044>>IF      17047>>IF      17053<<ASSIGN
     17059>>CALLBLT 17065>>IF      17072>>DOINDEX 17073>>CALLBLT 17087<<ASSIGN  17091>>IF      17101<<ASSIGN
     17454>>DOINDEX 17455>>ASSIGN  17468>>ASSIGN  17468>>ASSIGN  17470<<ASSIGN  17470>>ASSIGN
B$ALT.CODE
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:267  
     16929**DCL     16929--REDEF   16930--REDEF   16930--REDEF
B$ALT.ERR.CODE
     16931**DCL     17197>>IF      17267>>IF      17418>>IF
B$ALT.ERR.ERR#
     16931**DCL     16931--REDEF
B$ALT.EVID
     16930**DCL     16930--REDEF   16930--REDEF
B$TCB.ALT$
     16925**DCL     17197>>IF      17267>>IF      17418>>IF
B$TCB$
      8173**DCL     16925--IMP-PTR 17197>>IF      17267>>IF      17418>>IF
BACKUP_ACCT
      9205**DCL     17210--ASSIGN
BACKUP_HDR
     16462**DCL     16479--REDEF
BACKUP_HDR_CHAR
     16479**DCL     17145>>ASSIGN
BACKUP_NAME.L#
      9192**DCL      9192--IMP-SIZ
BACKUP_REC
     16481**DCL     17192--ASSIGN
BACKUP_REC.BACKUP_FSN_NUM
     16500**DCL     17184<<ASSIGN  17186<<CALLBLT 17188<<CALLBLT 17188>>CALLBLT
BACKUP_REC.DATE
     16488**DCL     17173--ASSIGN
BACKUP_REC.FIRST_ACCT
     16496**DCL     17176<<ASSIGN
BACKUP_REC.FSN_NUM
     16494**DCL     17179<<CALLBLT 17180<<CALLBLT 17180>>CALLBLT
BACKUP_REC.LAST_ACCT
     16498**DCL     17177<<ASSIGN
BACKUP_REC.RUN_NUM
     16482**DCL     17161<<CALLBLT 17162<<CALLBLT 17162>>CALLBLT
BACKUP_REC.SET_NUM
     16484**DCL     17164<<CALLBLT 17165<<CALLBLT 17165>>CALLBLT
BACKUP_REC.TIME
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:268  
     16490**DCL     17174--ASSIGN
BACKUP_REC.TSN_NUM
     16492**DCL     17178<<ASSIGN
BACKUP_REC.VOL_NUM
     16486**DCL     17167<<CALLBLT 17168<<CALLBLT 17168>>CALLBLT
BACKUP_SN.SN#
      9218**DCL     17112<<ASSIGN  17122>>CALLBLT
BLK_TAG.NAME
      8684**DCL      8684--REDEF
BLK_TAG$
      8681**DCL      8681--IMP-PTR
BLK_TAG0.NAME
      8690**DCL      8690--REDEF
BLK_TAG0$
      8687**DCL      8687--IMP-PTR
BLOCK_GRAN$
      8694**DCL      8695--IMP-PTR
BREAK_COUNT
     16420**DCL     17440>>IF
CLOSE_ARCHIVE
     16799**DCL     16957<<ASSIGN  17106<>CALL    17435<>CALL
CLOSE_ARCHIVE.SN_
     16799**DCL     16799--REDEF
CLOSE_ARCHIVE.UTL_
     16800**DCL     16800--REDEF
CLOSE_ARCHIVE.V
     16804**DCL     16799--DCLINIT 16958--ASSIGN
CLOSE_ARCHIVE.V.EXPIRE#
     16814**DCL     16814--REDEF
CLOSE_ARCHIVE.V.TYPE#
     16812**DCL     16812--REDEF
CLOSE_ARCHIVE.V.XTNSIZE#
     16809**DCL     16809--REDEF   16811--REDEF
CLOSE_ARCHIVE.V_
     16799**DCL     16958<<ASSIGN
CLOSE_NODATA_LIST
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:269  
     10346**DCL     17348<>CALL    17356<>CALL    17423<>CALL    17439<>CALL
CLOSE_NODATA_LIST.SN_
     10346**DCL     10346--REDEF
CLOSE_NODATA_LIST.UTL_
     10347**DCL     10347--REDEF
CLOSE_NODATA_LIST.V.EXPIRE#
     10361**DCL     10361--REDEF
CLOSE_NODATA_LIST.V.TYPE#
     10359**DCL     10359--REDEF
CLOSE_NODATA_LIST.V.XTNSIZE#
     10356**DCL     10356--REDEF   10358--REDEF
CLOSE_PRIME_DUAL
      9823**DCL     17270<>CALL    17279<>CALL
CLOSE_PRIME_DUAL.SN_
      9823**DCL      9823--REDEF
CLOSE_PRIME_DUAL.UTL_
      9824**DCL      9824--REDEF
CLOSE_PRIME_DUAL.V.EXPIRE#
      9838**DCL      9838--REDEF
CLOSE_PRIME_DUAL.V.TYPE#
      9836**DCL      9836--REDEF
CLOSE_PRIME_DUAL.V.XTNSIZE#
      9833**DCL      9833--REDEF    9835--REDEF
CLOSE_REBUILD
     10098**DCL     17304<>CALL    17437<>CALL
CLOSE_REBUILD.SN_
     10098**DCL     10098--REDEF
CLOSE_REBUILD.UTL_
     10099**DCL     10099--REDEF
CLOSE_REBUILD.V.DISP#
     10107**DCL     17287<<ASSIGN
CLOSE_REBUILD.V.EXPIRE#
     10113**DCL     10113--REDEF
CLOSE_REBUILD.V.TYPE#
     10111**DCL     10111--REDEF
CLOSE_REBUILD.V.XTNSIZE#
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:270  
     10108**DCL     10108--REDEF   10110--REDEF
CLOSE_STATUS
      9313**DCL     17199<>CALL    17433<>CALL
CLOSE_STATUS.SN_
      9313**DCL      9313--REDEF
CLOSE_STATUS.UTL_
      9314**DCL      9314--REDEF
CLOSE_STATUS.V.EXPIRE#
      9328**DCL      9328--REDEF
CLOSE_STATUS.V.TYPE#
      9326**DCL      9326--REDEF
CLOSE_STATUS.V.XTNSIZE#
      9323**DCL      9323--REDEF    9325--REDEF
CLOSE_TSN_USED.SN_
      9023**DCL      9023--REDEF
CLOSE_TSN_USED.UTL_
      9024**DCL      9024--REDEF
CLOSE_TSN_USED.V.EXPIRE#
      9038**DCL      9038--REDEF
CLOSE_TSN_USED.V.TYPE#
      9036**DCL      9036--REDEF
CLOSE_TSN_USED.V.XTNSIZE#
      9033**DCL      9033--REDEF    9035--REDEF
COLS
     16439**DCL     16440--DCLINIT 17401>>IF      17409>>IF      17411>>ASSIGN
CONTROL_LIST
      8344**DCL     16961>>DOCASE  17207>>IF      17220>>IF
CON_CLOSE_ARCHIVE
      9355**DCL     16957>>ASSIGN
CON_CLOSE_ARCHIVE.SN_
      9355**DCL      9355--REDEF
CON_CLOSE_ARCHIVE.UTL_
      9356**DCL      9356--REDEF
CON_CLOSE_ARCHIVE.V.EXPIRE#
      9370**DCL      9370--REDEF
CON_CLOSE_ARCHIVE.V.TYPE#
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:271  
      9368**DCL      9368--REDEF
CON_CLOSE_ARCHIVE.V.XTNSIZE#
      9365**DCL      9365--REDEF    9367--REDEF
CON_OPEN_ARCHIVE_FILE
      9440**DCL     16952>>ASSIGN
CON_OPEN_ARCHIVE_FILE.ACSVEH_
      9442**DCL      9443--REDEF
CON_OPEN_ARCHIVE_FILE.ALTKEYS_
      9448**DCL      9449--REDEF    9449--REDEF
CON_OPEN_ARCHIVE_FILE.HDR_
      9447**DCL      9448--REDEF
CON_OPEN_ARCHIVE_FILE.TAB_
      9446**DCL      9447--REDEF
CON_OPEN_ARCHIVE_FILE.UHL_
      9440**DCL      9441--REDEF    9441--REDEF
CON_OPEN_ARCHIVE_FILE.V.FSN#
      9480**DCL      9480--REDEF    9480--REDEF
CON_OPEN_ARCHIVE_FILE.WSN_
      9446**DCL      9446--REDEF
CON_READ_ARCHIVE_FILE
      9501**DCL     16955>>ASSIGN
CON_READ_ARCHIVE_FILE.STATION_
      9504**DCL      9505--REDEF
CON_READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
      9516**DCL      9516--REDEF
CON_READ_ARCHIVE_FILE.V.INDX#
      9514**DCL      9514--REDEF
COUNT
     16432**DCL     17071<<ASSIGN  17075<<ASSIGN  17075>>ASSIGN  17076>>IF      17081<<ASSIGN  17084>>IF
     17451<<ASSIGN  17457<<ASSIGN  17457>>ASSIGN  17458>>IF      17461<<ASSIGN  17466>>IF
CURR_TAB
     16441**DCL     17372<<ASSIGN  17379>>IF      17382<<ASSIGN  17392>>IF      17397<<ASSIGN  17400>>CALLBLT
     17401>>IF      17405<<ASSIGN  17409>>IF      17411<<ASSIGN  17420>>IF
CVOL_UTL.ULBL#
      8783**DCL      8783--REDEF
DEL_NODATA_REC.V
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:272  
     10449**DCL     10446--DCLINIT
DISK_CLOSE.SN_
      7853**DCL      7853--REDEF
DISK_CLOSE.UTL_
      7854**DCL      7854--REDEF
DISK_CLOSE.V.EXPIRE#
      7868**DCL      7868--REDEF
DISK_CLOSE.V.TYPE#
      7866**DCL      7866--REDEF
DISK_CLOSE.V.XTNSIZE#
      7863**DCL      7863--REDEF    7865--REDEF
DISK_FILE_SPEC.SPEC
      8218**DCL      8220--REDEF
DISK_FILE_SPEC.SPEC.START
      8219**DCL      8219--REDEF
DISK_FILE_SPEC.SPEC.STOP
      8220**DCL      8220--REDEF
DISK_FILE_SPEC$
      8217**DCL      8218--IMP-PTR
DISK_GRAN$
      8694**DCL      8694--IMP-PTR
DISK_OPEN.ACSVEH_
      7718**DCL      7719--REDEF
DISK_OPEN.ALTKEYS_
      7724**DCL      7725--REDEF    7725--REDEF
DISK_OPEN.HDR_
      7723**DCL      7724--REDEF
DISK_OPEN.TAB_
      7722**DCL      7723--REDEF
DISK_OPEN.UHL_
      7716**DCL      7717--REDEF    7717--REDEF
DISK_OPEN.V.FSN#
      7756**DCL      7756--REDEF    7756--REDEF
DISK_OPEN.WSN_
      7722**DCL      7722--REDEF
DISK_READ.STATION_
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:273  
      7780**DCL      7781--REDEF
DISK_READ.V.DVBYTE.REREAD#
      7792**DCL      7792--REDEF
DISK_READ.V.INDX#
      7790**DCL      7790--REDEF
DISK_WRITE.STATION_
      7818**DCL      7818--REDEF
DISK_WRITE.V.DVBYTE.VFC#
      7825**DCL      7825--REDEF
DISPLAY_TSN
     17443**PROC    17098--CALL    17104--CALL
DPLIST
      8215**DCL     17212--ASSIGN
DPLIST.SN#
      8215**DCL     16967>>ASSIGN  17112>>ASSIGN  17221>>CALLBLT 17222>>CALLBLT 17289>>ASSIGN  17351>>ASSIGN
DPLIST$
      8203**DCL      8215--IMP-PTR 16967>>ASSIGN  17112>>ASSIGN  17212>>ASSIGN  17221>>CALLBLT 17222>>CALLBLT
     17289>>ASSIGN  17351>>ASSIGN
DPNAME
     16438**DCL     17073<<CALLBLT 17074--ASSIGN
DPRESLIST.NAME
      8217**DCL     16968>>ASSIGN  17113>>ASSIGN  17213>>ASSIGN  17290>>ASSIGN  17350>>ASSIGN
DPRESLIST$
      8217**DCL      8217--IMP-PTR 16968>>ASSIGN  17113>>ASSIGN  17213>>ASSIGN  17290>>ASSIGN  17350>>ASSIGN
DPSN
     16831**DCL     16954--ASSIGN
DPSN.SN#
     16831**DCL     16967<<ASSIGN  16999>>CALLBLT
DUAL_FILE
      9619**DCL     17209--ASSIGN
DUAL_FILE.L#
      9619**DCL      9619--IMP-SIZ 17209>>ASSIGN
EFTWORD
      8338**DCL      8338--REDEF
EFT_CVOL_FILE.L#
      8743**DCL      8743--IMP-SIZ
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:274  
EFT_RESTRICT_FILE.L#
      8770**DCL      8770--IMP-SIZ
ERR
     17430**LABEL   16969--CALLALT 16974--CALLALT 16982--CALLALT 16997--CALLALT 17000--CALLALT 17002--CALLALT
     17009--CALLALT 17043--CALLALT 17051--CALLALT 17058--CALLALT 17061--CALLALT 17068--CALLALT 17078--CALLALT
     17084--CALLALT 17096--CALLALT 17103--CALLALT 17106--CALLALT 17115--CALLALT 17121--CALLALT 17123--CALLALT
     17125--CALLALT 17146--CALLALT 17193--CALLALT 17199--CALLALT 17215--CALLALT 17218--CALLALT 17223--CALLALT
     17226--CALLALT 17228--CALLALT 17232--CALLALT 17234--CALLALT 17241--CALLALT 17244--CALLALT 17250--CALLALT
     17252--CALLALT 17261--CALLALT 17263--CALLALT 17270--CALLALT 17271--GOTO    17277--CALLALT 17279--CALLALT
     17291--CALLALT 17296--CALLALT 17298--CALLALT 17300--CALLALT 17303--CALLALT 17304--CALLALT 17306--CALLALT
     17317--CALLALT 17319--CALLALT 17321--CALLALT 17344--CALLALT 17348--CALLALT 17352--CALLALT 17356--CALLALT
     17357--CALLALT 17360--CALLALT 17362--CALLALT 17364--CALLALT 17367--CALLALT 17381--CALLALT 17384--CALLALT
     17387--CALLALT 17395--CALLALT 17403--CALLALT 17421--CALLALT 17423--CALLALT
ERROR IN PROCEDURE DISPLAY_TSN
     17473**LABEL   17460--CALLALT 17467--CALLALT
F$DCB.ACTPOS
     16879**DCL     16879--REDEF
F$DCB.ARS#
     16853**DCL     16853--REDEF   17182>>IF
F$DCB.ATTR
     16872**DCL     16873--REDEF
F$DCB.BORROW
     16887**DCL     16887--REDEF   16887--REDEF   16887--REDEF
F$DCB.DCBNAME.L
     16901**DCL     16901--IMP-SIZ
F$DCB.EOMCHAR#
     16857**DCL     16857--REDEF
F$DCB.FCD#
     16866**DCL     17110>>IF      17347>>IF      17432>>IF      17434>>IF      17436>>IF      17438>>IF
F$DCB.FLDID
     16882**DCL     16882--REDEF
F$DCB.FORM$
     16876**DCL     16876--REDEF
F$DCB.FSECT
     16892**DCL     16892--REDEF
F$DCB.FSN#
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:275  
     16869**DCL     16869--REDEF   16869--REDEF   16870--REDEF
F$DCB.HEADER$
     16875**DCL     16875--REDEF
F$DCB.IXTNSIZE#
     16873**DCL     16873--REDEF
F$DCB.LASTSTA$
     16862**DCL     16862--REDEF
F$DCB.LVL
     16888**DCL     16888--REDEF
F$DCB.NAME#.C
     16863**DCL     16863--REDEF
F$DCB.NOEOF
     16885**DCL     16885--REDEF
F$DCB.NRECS#
     16874**DCL     16874--REDEF
F$DCB.NRECX
     16893**DCL     16893--REDEF
F$DCB.OHDR
     16885**DCL     16885--REDEF
F$DCB.ORG#
     16868**DCL     16868--REDEF
F$DCB.PRECNO
     16891**DCL     16891--REDEF
F$DCB.RCSZ
     16897**DCL     16897--REDEF
F$DCB.RES#
     16864**DCL     16864--REDEF
F$DCB.SETX
     16876**DCL     16876--REDEF
F$DCB.TAB$
     16876**DCL     16876--REDEF
F$DCB.TDA
     16890**DCL     16891--REDEF
F$DCB.WSN#
     16864**DCL     16864--REDEF
FIT_AREA.W2
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:276  
      9054**DCL      9055--REDEF
FLI$ALLOC
     16412**DCL-ENT 16975--CALL
FLI$CNVRT_ARCHIVE
     16414**DCL-ENT 16989--CALL
FLI$RPT_ERR
     16413**DCL-ENT 17430--CALL    17473--CALL
FPT_EXIT.V.STEPCC#
      7643**DCL      7643--REDEF
GET_TIME
     16916**DCL     17175<>CALL    17241<>CALL    17261<>CALL
GET_TIME.DATE_
     16916**DCL     17173<<ASSIGN  17236<<ASSIGN  17256<<ASSIGN
GET_TIME.TIME_
     16918**DCL     17174<<ASSIGN  17237<<ASSIGN  17257<<ASSIGN
GET_TIME.TSTAMP_
     16919**DCL     17170<<ASSIGN  17238<<ASSIGN  17258<<ASSIGN
GET_TIME.V
     16920**DCL     16916--DCLINIT
I
     16426**DCL     16960<<DOINDEX 16961>>DOCASE  17207>>IF      17220>>IF
K
     16428**DCL     17072<<DOINDEX 17073>>CALLBLT 17371<<ASSIGN  17408<<DOINDEX 17409>>IF      17411>>ASSIGN
     17412<<ASSIGN
K IN PROCEDURE DISPLAY_TSN
     17449**DCL     17454<<DOINDEX 17455>>ASSIGN
LIST_LEN IN PROCEDURE DISPLAY_TSN
     17448**DCL     17468<<ASSIGN  17470>>ASSIGN
M$ARCHIVE
      8664**DCL     17434--IF
M$CLOSE
      5503**DCL-ENT 17106--CALL    17199--CALL    17270--CALL    17279--CALL    17304--CALL    17348--CALL
     17356--CALL    17423--CALL    17433--CALL    17435--CALL    17437--CALL    17439--CALL
M$NODATA_LIST
      8664**DCL     17347--IF      17438--IF
M$OPEN
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:277  
      5503**DCL-ENT 16969--CALL    17115--CALL    17215--CALL    17291--CALL    17352--CALL    17357--CALL
M$READ
      5504**DCL-ENT 16974--CALL    16982--CALL    17134--CALL    17155--CALL    17228--CALL    17254--CALL
     17303--CALL    17355--CALL    17375--CALL
M$REBUILD
      8664**DCL     17436--IF
M$STATUS
      8664**DCL     17110--IF      17182--IF      17432--IF
M$TIME
      5570**DCL-ENT 17175--CALL    17241--CALL    17261--CALL
M$WRITE
      5504**DCL-ENT 16997--CALL    17000--CALL    17002--CALL    17009--CALL    17043--CALL    17051--CALL
     17058--CALL    17061--CALL    17068--CALL    17078--CALL    17084--CALL    17096--CALL    17103--CALL
     17121--CALL    17123--CALL    17125--CALL    17146--CALL    17193--CALL    17218--CALL    17223--CALL
     17226--CALL    17232--CALL    17234--CALL    17244--CALL    17250--CALL    17252--CALL    17263--CALL
     17277--CALL    17296--CALL    17298--CALL    17300--CALL    17306--CALL    17317--CALL    17319--CALL
     17321--CALL    17344--CALL    17360--CALL    17362--CALL    17364--CALL    17367--CALL    17381--CALL
     17384--CALL    17387--CALL    17395--CALL    17403--CALL    17421--CALL    17460--CALL    17467--CALL
NBR_BYTES_TO_MOVE
      8693**DCL      8694--IMP-SIZ  8695--IMP-SIZ
NBR_COLS
     16440**DCL     17401>>IF      17408>>DOINDEX 17412>>ASSIGN
NBR_CONTROL_FILE
      8344**DCL     16960>>DOINDEX
NEXT_FILE
     17432**LABEL   17200--GOTO    17280--GOTO    17355--CALLALT 17424--GOTO
NODATA_FILE_NAME.L#
     10308**DCL     10308--IMP-SIZ
NODATA_HDR
     16548**DCL     17366>>ASSIGN
NODATA_KEY
     10454**DCL     10446--DCLINIT 10447--DCLINIT
NODATA_KEY.ACCT#
     10454**DCL     17377>>IF      17386>>ASSIGN  17388>>ASSIGN
NODATA_KEY.NAME#.C
     10454**DCL     17400>>CALLBLT
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:278  
NODATA_KEY.NAME#.L
     10454**DCL     17392>>IF      17400>>CALLBLT 17401>>IF      17409>>IF
NODATA_SN.SN#
     10321**DCL     17351<<ASSIGN  17361>>CALLBLT
NO_4_LEADING_ZEROS
      8347**DCL     17036>>CALLBLT 17040>>CALLBLT 17162>>CALLBLT 17165>>CALLBLT 17168>>CALLBLT 17180>>CALLBLT
     17188>>CALLBLT 17309>>CALLBLT 17312>>CALLBLT
NO_INCR_TIME
     16549**DCL     17246<<ASSIGN  17264<<ASSIGN  17274>>IF
OPEN_ARCHIVE_FILE
     16693**DCL     16952<<ASSIGN  16969<>CALL
OPEN_ARCHIVE_FILE.ACSVEH_
     16695**DCL     16696--REDEF
OPEN_ARCHIVE_FILE.ALTKEYS_
     16701**DCL     16702--REDEF   16702--REDEF
OPEN_ARCHIVE_FILE.HDR_
     16700**DCL     16701--REDEF
OPEN_ARCHIVE_FILE.SN_
     16693**DCL     16954<<ASSIGN
OPEN_ARCHIVE_FILE.TAB_
     16699**DCL     16700--REDEF
OPEN_ARCHIVE_FILE.UHL_
     16693**DCL     16694--REDEF   16694--REDEF
OPEN_ARCHIVE_FILE.V
     16702**DCL     16693--DCLINIT 16953--ASSIGN
OPEN_ARCHIVE_FILE.V.FSN#
     16733**DCL     16733--REDEF   16733--REDEF
OPEN_ARCHIVE_FILE.V.RES#
     16717**DCL     16968<<ASSIGN
OPEN_ARCHIVE_FILE.V_
     16693**DCL     16953<<ASSIGN
OPEN_ARCHIVE_FILE.WSN_
     16699**DCL     16699--REDEF
OPEN_NODATA_LIST
     10239**DCL     17352<>CALL    17357<>CALL
OPEN_NODATA_LIST.ACSVEH_
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:279  
     10241**DCL     10242--REDEF
OPEN_NODATA_LIST.ALTKEYS_
     10247**DCL     10248--REDEF   10248--REDEF
OPEN_NODATA_LIST.HDR_
     10246**DCL     10247--REDEF
OPEN_NODATA_LIST.TAB_
     10245**DCL     10246--REDEF
OPEN_NODATA_LIST.UHL_
     10239**DCL     10240--REDEF   10240--REDEF
OPEN_NODATA_LIST.V.FSN#
     10279**DCL     10279--REDEF   10279--REDEF
OPEN_NODATA_LIST.V.FUN#
     10258**DCL     17349<<ASSIGN
OPEN_NODATA_LIST.V.RES#
     10263**DCL     17350<<ASSIGN
OPEN_NODATA_LIST.WSN_
     10245**DCL     10245--REDEF
OPEN_PRIME_DUAL
      9686**DCL     17215<>CALL
OPEN_PRIME_DUAL.ACCT_
      9690**DCL     17210<<ASSIGN
OPEN_PRIME_DUAL.ACSVEH_
      9688**DCL      9689--REDEF
OPEN_PRIME_DUAL.ALTKEYS_
      9694**DCL      9695--REDEF    9695--REDEF
OPEN_PRIME_DUAL.HDR_
      9693**DCL      9694--REDEF
OPEN_PRIME_DUAL.NAME_
      9687**DCL     17208<<ASSIGN  17209<<ASSIGN
OPEN_PRIME_DUAL.SN_
      9686**DCL     17212<<ASSIGN
OPEN_PRIME_DUAL.TAB_
      9692**DCL      9693--REDEF
OPEN_PRIME_DUAL.UHL_
      9686**DCL      9687--REDEF    9687--REDEF
OPEN_PRIME_DUAL.V.FSN#
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:280  
      9726**DCL      9726--REDEF    9726--REDEF
OPEN_PRIME_DUAL.V.FUN#
      9705**DCL     17211<<ASSIGN
OPEN_PRIME_DUAL.V.OPER
      9697**DCL     17214<<ASSIGN
OPEN_PRIME_DUAL.V.RES#
      9710**DCL     17213<<ASSIGN
OPEN_PRIME_DUAL.WSN_
      9692**DCL      9692--REDEF
OPEN_REBUILD
      9921**DCL     17291<>CALL
OPEN_REBUILD.ACSVEH_
      9923**DCL      9924--REDEF
OPEN_REBUILD.ALTKEYS_
      9929**DCL      9930--REDEF    9930--REDEF
OPEN_REBUILD.HDR_
      9928**DCL      9929--REDEF
OPEN_REBUILD.TAB_
      9927**DCL      9928--REDEF
OPEN_REBUILD.UHL_
      9921**DCL      9922--REDEF    9922--REDEF
OPEN_REBUILD.V.FSN#
      9961**DCL      9961--REDEF    9961--REDEF
OPEN_REBUILD.V.FUN#
      9940**DCL     17288<<ASSIGN
OPEN_REBUILD.V.RES#
      9945**DCL     17290<<ASSIGN
OPEN_REBUILD.WSN_
      9927**DCL      9927--REDEF
OPEN_STATUS
      9123**DCL     17115<>CALL
OPEN_STATUS.ACSVEH_
      9125**DCL      9126--REDEF
OPEN_STATUS.ALTKEYS_
      9131**DCL      9132--REDEF    9132--REDEF
OPEN_STATUS.HDR_
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:281  
      9130**DCL      9131--REDEF
OPEN_STATUS.TAB_
      9129**DCL      9130--REDEF
OPEN_STATUS.UHL_
      9123**DCL      9124--REDEF    9124--REDEF
OPEN_STATUS.V.FSN#
      9163**DCL      9163--REDEF    9163--REDEF
OPEN_STATUS.V.FUN#
      9142**DCL     17114<<ASSIGN
OPEN_STATUS.V.RES#
      9147**DCL     17113<<ASSIGN
OPEN_STATUS.WSN_
      9129**DCL      9129--REDEF
OPEN_TSN_USED.ACSVEH_
      8861**DCL      8862--REDEF
OPEN_TSN_USED.ALTKEYS_
      8867**DCL      8868--REDEF    8868--REDEF
OPEN_TSN_USED.HDR_
      8866**DCL      8867--REDEF
OPEN_TSN_USED.TAB_
      8865**DCL      8866--REDEF
OPEN_TSN_USED.UHL_
      8859**DCL      8860--REDEF    8860--REDEF
OPEN_TSN_USED.V.FSN#
      8899**DCL      8899--REDEF    8899--REDEF
OPEN_TSN_USED.WSN_
      8865**DCL      8865--REDEF
OUTPUT_ARCHIVE_INFO
     16580**DCL     17043<>CALL    17051<>CALL    17193<>CALL    17317<>CALL    17344<>CALL
OUTPUT_ARCHIVE_INFO.BUF_
     16580**DCL     17042<<ASSIGN  17050<<ASSIGN  17192<<ASSIGN  17316<<ASSIGN  17343<<ASSIGN
OUTPUT_ARCHIVE_INFO.STATION_
     16582**DCL     16582--REDEF
OUTPUT_ARCHIVE_INFO.V
     16583**DCL     16580--DCLINIT
OUTPUT_ARCHIVE_INFO.V.DVBYTE.VFC#
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:282  
     16589**DCL     16589--REDEF
OUTPUT_HEADER
     16614**DCL     16997<>CALL    17000<>CALL    17002<>CALL    17009<>CALL    17058<>CALL    17061<>CALL
     17068<>CALL    17078<>CALL    17084<>CALL    17096<>CALL    17103<>CALL    17121<>CALL    17123<>CALL
     17125<>CALL    17146<>CALL    17218<>CALL    17223<>CALL    17226<>CALL    17232<>CALL    17234<>CALL
     17244<>CALL    17250<>CALL    17252<>CALL    17263<>CALL    17277<>CALL    17296<>CALL    17298<>CALL
     17300<>CALL    17306<>CALL    17319<>CALL    17321<>CALL    17360<>CALL    17362<>CALL    17364<>CALL
     17367<>CALL    17381<>CALL    17384<>CALL    17387<>CALL    17395<>CALL    17403<>CALL    17421<>CALL
     17460<>CALL    17467<>CALL
OUTPUT_HEADER.STATION_
     16616**DCL     16616--REDEF
OUTPUT_HEADER.V
     16617**DCL     16614--DCLINIT
OUTPUT_HEADER.V.DVBYTE.VFC#
     16623**DCL     16623--REDEF
OUT_PTR$
     16433**DCL     17070<<ASSIGN  17073>>CALLBLT 17074<<ASSIGN  17074>>ASSIGN  17080<<ASSIGN  17453<<ASSIGN
     17455>>ASSIGN  17456<<ASSIGN  17456>>ASSIGN  17463<<ASSIGN
OUT_SINGLE_LINE
     16437**DCL     16615--DCLINIT 16616--DCLINIT 16996<<ASSIGN  16999<<CALLBLT 17001<<ASSIGN  17007<<ASSIGN
     17008<<ASSIGN  17057<<ASSIGN  17059<<CALLBLT 17067<<ASSIGN  17069<<ASSIGN  17070--ASSIGN  17079<<ASSIGN
     17080--ASSIGN  17094<<ASSIGN  17095<<ASSIGN  17102<<ASSIGN  17120<<ASSIGN  17122<<CALLBLT 17124<<ASSIGN
     17145<<ASSIGN  17217<<ASSIGN  17221<<CALLBLT 17222<<CALLBLT 17225<<ASSIGN  17231<<ASSIGN  17233<<ASSIGN
     17243<<ASSIGN  17249<<ASSIGN  17251<<ASSIGN  17262<<ASSIGN  17276<<ASSIGN  17295<<ASSIGN  17297<<CALLBLT
     17299<<ASSIGN  17305<<ASSIGN  17318<<ASSIGN  17320<<ASSIGN  17359<<ASSIGN  17361<<CALLBLT 17363<<ASSIGN
     17366<<ASSIGN  17370<<ASSIGN  17383<<ASSIGN  17386<<ASSIGN  17389<<ASSIGN  17392--IF      17396<<ASSIGN
     17400<<CALLBLT 17404<<ASSIGN  17452<<ASSIGN  17453--ASSIGN  17462<<ASSIGN  17463--ASSIGN  17466>>IF
PREV_ACCT.ACCT#
     16947**DCL     17369<<ASSIGN  17377>>IF      17388<<ASSIGN
PRE_RET_CLOSE.SN_
      8581**DCL      8581--REDEF
PRE_RET_CLOSE.UTL_
      8582**DCL      8582--REDEF
PRE_RET_CLOSE.V.EXPIRE#
      8596**DCL      8596--REDEF
PRE_RET_CLOSE.V.TYPE#
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:283  
      8594**DCL      8594--REDEF
PRE_RET_CLOSE.V.XTNSIZE#
      8591**DCL      8591--REDEF    8593--REDEF
PRE_RET_OPEN.ACSVEH_
      8516**DCL      8517--REDEF
PRE_RET_OPEN.ALTKEYS_
      8522**DCL      8523--REDEF    8523--REDEF
PRE_RET_OPEN.HDR_
      8521**DCL      8522--REDEF
PRE_RET_OPEN.TAB_
      8520**DCL      8521--REDEF
PRE_RET_OPEN.UHL_
      8514**DCL      8515--REDEF    8515--REDEF
PRE_RET_OPEN.V.FSN#
      8554**DCL      8554--REDEF    8554--REDEF
PRE_RET_OPEN.WSN_
      8520**DCL      8520--REDEF
PRE_RET_READ.STATION_
      8371**DCL      8372--REDEF
PRE_RET_READ.V.DVBYTE.REREAD#
      8383**DCL      8383--REDEF
PRE_RET_READ.V.INDX#
      8381**DCL      8381--REDEF
PRE_RET_WRITE.STATION_
      8409**DCL      8409--REDEF
PRE_RET_WRITE.V.DVBYTE.VFC#
      8416**DCL      8416--REDEF
PRIME_AND_DUAL
     16501**DCL     16507--REDEF
PRIME_AND_DUAL.DUAL_PACK
     16506**DCL     17230<<ASSIGN
PRIME_AND_DUAL.PRIME_PACK
     16503**DCL     17229<<ASSIGN
PRIME_AND_DUAL_CHARS
     16507**DCL     17231>>ASSIGN
PRIME_DUAL_BUF.DUAL
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:284  
      9566**DCL     17230>>ASSIGN
PRIME_DUAL_BUF.PRIME
      9566**DCL     17229>>ASSIGN
PRIME_DUAL_BUF.UTS
      9566**DCL     17238--ASSIGN  17240<<ASSIGN  17258--ASSIGN  17260<<ASSIGN
PRIME_FILE
      9592**DCL     17208--ASSIGN
PRIME_FILE.L#
      9592**DCL      9592--IMP-SIZ 17208>>ASSIGN
READ_ARCHIVE_FILE
     16754**DCL     16955<<ASSIGN  16974<>CALL    16982<>CALL
READ_ARCHIVE_FILE.BUF_
     16756**DCL     16973<<ASSIGN
READ_ARCHIVE_FILE.BUF_.BOUND
     16756**DCL     16978<<ASSIGN
READ_ARCHIVE_FILE.BUF_.BUF$
     16757**DCL     16977<<ASSIGN
READ_ARCHIVE_FILE.STATION_
     16757**DCL     16758--REDEF
READ_ARCHIVE_FILE.V
     16758**DCL     16754--DCLINIT 16956--ASSIGN
READ_ARCHIVE_FILE.V.DVBYTE.REREAD#
     16769**DCL     16769--REDEF
READ_ARCHIVE_FILE.V.INDX#
     16767**DCL     16767--REDEF
READ_ARCHIVE_FILE.V_
     16754**DCL     16956<<ASSIGN
READ_NODATA_LIST
     10382**DCL     17355<>CALL    17375<>CALL
READ_NODATA_LIST.STATION_
     10385**DCL     10386--REDEF
READ_NODATA_LIST.V.DVBYTE.REREAD#
     10397**DCL     10397--REDEF
READ_NODATA_LIST.V.INDX#
     10395**DCL     10395--REDEF
READ_PRIME_DUAL
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:285  
      9747**DCL     17228<>CALL    17254<>CALL
READ_PRIME_DUAL.STATION_
      9750**DCL      9751--REDEF
READ_PRIME_DUAL.V.DVBYTE.REREAD#
      9762**DCL      9762--REDEF
READ_PRIME_DUAL.V.INDX#
      9760**DCL      9760--REDEF
READ_REBUILD
     10053**DCL     17303<>CALL
READ_REBUILD.KEY_
     10053**DCL     17302<<ASSIGN
READ_REBUILD.STATION_
     10056**DCL     10057--REDEF
READ_REBUILD.V.DVBYTE.REREAD#
     10068**DCL     10068--REDEF
READ_REBUILD.V.INDX#
     10066**DCL     10066--REDEF
READ_STATUS
      9268**DCL     17134<>CALL    17155<>CALL
READ_STATUS.STATION_
      9271**DCL      9272--REDEF
READ_STATUS.V.DVBYTE.REREAD#
      9283**DCL      9283--REDEF
READ_STATUS.V.INDX#
      9281**DCL      9281--REDEF
READ_STATUS.V.KEYS#
      9273**DCL     17129<<ASSIGN  17160<<ASSIGN  17202<<ASSIGN
READ_TSN_USED.STATION_
      8981**DCL      8982--REDEF
READ_TSN_USED.V.DVBYTE.REREAD#
      8993**DCL      8993--REDEF
READ_TSN_USED.V.INDX#
      8991**DCL      8991--REDEF
REBUILD_BUF.DEN
     10172**DCL     17322>>DOCASE
REBUILD_BUF.DIR
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:286  
     10172**DCL     17337>>IF
REBUILD_BUF.FSN
     10172**DCL     17311>>CALLBLT
REBUILD_BUF.IOERRORC
     10172**DCL     17340>>IF
REBUILD_BUF.PAD
     10172**DCL     17334>>IF
REBUILD_BUF.START.ACCT.ACCT#
     10171**DCL     17314>>ASSIGN
REBUILD_BUF.START.FILE.NAME#
     10171**DCL     17315>>ASSIGN
REBUILD_BUF.TSN
     10171**DCL     17307>>ASSIGN
REBUILD_BUF.VOLUME
     10172**DCL     17308>>CALLBLT
REBUILD_DIR_KEY.L#
     10142**DCL     10142--IMP-SIZ
REBUILD_HDR
     16514**DCL     16524--REDEF
REBUILD_HDR_CHAR
     16524**DCL     17305>>ASSIGN
REBUILD_KEY
     10169**DCL     17302--ASSIGN
REBUILD_KEY.L#
     10169**DCL     10169--IMP-SIZ 17302>>ASSIGN
REBUILD_NAME.L#
      9990**DCL      9990--IMP-SIZ
REBUILD_REC
     16525**DCL     17316--ASSIGN
REBUILD_REC.FSN_NUM
     16530**DCL     17311<<CALLBLT 17312<<CALLBLT 17312>>CALLBLT
REBUILD_REC.LAST_ACCT
     16532**DCL     17314<<ASSIGN
REBUILD_REC.LAST_FILE
     16534**DCL     17315<<ASSIGN
REBUILD_REC.TSN_NUM
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:287  
     16526**DCL     17307<<ASSIGN
REBUILD_REC.VOL_NUM
     16528**DCL     17308<<CALLBLT 17309<<CALLBLT 17309>>CALLBLT
REBUILD_SN.SN#
     10003**DCL     17289<<ASSIGN  17297>>CALLBLT
RET_CMDS_NAME.L#
      8625**DCL      8625--IMP-SIZ
RUN_NBR
      8787**DCL     17136<<ASSIGN  17137<<ASSIGN  17140<<ASSIGN  17151>>ASSIGN
SIZE
     16429**DCL     16973--ASSIGN  16975<>CALL    16978>>ASSIGN  16991<<ASSIGN
SNVECLIST$
      8157**DCL      8157--IMP-PTR
SPEC.START
      8221**DCL      8222--REDEF
SPEC.STOP
      8222**DCL      8223--REDEF
SPECCHARS
      8221**DCL      8221--REDEF
STAF
      8344**DCL     17099>>IF      17136>>IF      17247>>IF
START$
     16434**DCL     16975<>CALL    16976>>ASSIGN  16986>>IF      16989<>CALL    16990<<ASSIGN  16991>>ASSIGN
     17053>>ASSIGN  17053>>ASSIGN  17087>>ASSIGN  17087>>ASSIGN  17093>>IF      17099>>IF      17101>>ASSIGN
     17101>>ASSIGN
STATUS_KEY
      8789**DCL     17130--ASSIGN  17150--ASSIGN
STATUS_KEY.L
      8789**DCL     17130<<ASSIGN  17150<<ASSIGN
STATUS_KEY.RUN_NBR
      8790**DCL     17131<<ASSIGN  17151<<ASSIGN  17161>>CALLBLT
STATUS_KEY.TSN_SET_NBR
      8790**DCL     17132<<ASSIGN  17152<<ASSIGN  17164>>CALLBLT
STATUS_KEY.TSN_VOL
      8790**DCL     17133<<ASSIGN  17153<<ASSIGN  17167>>CALLBLT
TAPE_BLOCK_.W2
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:288  
      8709**DCL      8710--REDEF
TAPE_CLOSE.SN_
      8074**DCL      8074--REDEF
TAPE_CLOSE.UTL_
      8075**DCL      8075--REDEF
TAPE_CLOSE.V.EXPIRE#
      8089**DCL      8089--REDEF
TAPE_CLOSE.V.TYPE#
      8087**DCL      8087--REDEF
TAPE_CLOSE.V.XTNSIZE#
      8084**DCL      8084--REDEF    8086--REDEF
TAPE_DCBLIST$
      7630**DCL      7630--IMP-PTR
TAPE_OPEN.ACSVEH_
      7939**DCL      7940--REDEF
TAPE_OPEN.ALTKEYS_
      7945**DCL      7946--REDEF    7946--REDEF
TAPE_OPEN.HDR_
      7944**DCL      7945--REDEF
TAPE_OPEN.TAB_
      7943**DCL      7944--REDEF
TAPE_OPEN.UHL_
      7937**DCL      7938--REDEF    7938--REDEF
TAPE_OPEN.V.FSN#
      7977**DCL      7977--REDEF    7977--REDEF
TAPE_OPEN.WSN_
      7943**DCL      7943--REDEF
TAPE_OPTION1
     16442**DCL     17042--ASSIGN
TAPE_OPTION1.BLOCK
     16454**DCL     17039<<CALLBLT 17040<<CALLBLT 17040>>CALLBLT
TAPE_OPTION1.DENSITY
     16445**DCL     17012<<ASSIGN  17014<<ASSIGN  17016<<ASSIGN  17018<<ASSIGN  17020<<ASSIGN
TAPE_OPTION1.EXP
     16451**DCL     17033<<ASSIGN  17035<<CALLBLT 17036<<CALLBLT 17036>>CALLBLT
TAPE_OPTION1.VOLA
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:289  
     16448**DCL     17024<<ASSIGN  17026<<ASSIGN  17028<<ASSIGN  17030<<ASSIGN
TAPE_OPTION2
     16455**DCL     17050--ASSIGN
TAPE_OPTION2.CHECK
     16458**DCL     17045<<ASSIGN  17046<<ASSIGN
TAPE_OPTION2.IOERRORC
     16461**DCL     17048<<ASSIGN  17049<<ASSIGN
TAPE_OPTION3
     16535**DCL     17343--ASSIGN
TAPE_OPTION3.DENSITY
     16538**DCL     17324<<ASSIGN  17326<<ASSIGN  17328<<ASSIGN  17330<<ASSIGN  17332<<ASSIGN
TAPE_OPTION3.DIR
     16544**DCL     17338<<ASSIGN  17339<<ASSIGN
TAPE_OPTION3.IOERRORC
     16547**DCL     17341<<ASSIGN  17342<<ASSIGN
TAPE_OPTION3.PAD
     16541**DCL     17335<<ASSIGN  17336<<ASSIGN
TAPE_READ.STATION_
      8001**DCL      8002--REDEF
TAPE_READ.V.DVBYTE.REREAD#
      8013**DCL      8013--REDEF
TAPE_READ.V.INDX#
      8011**DCL      8011--REDEF
TAPE_WRITE.STATION_
      8039**DCL      8039--REDEF
TAPE_WRITE.V.DVBYTE.VFC#
      8046**DCL      8046--REDEF
TEST_MODE
      8655**DCL     17171>>IF      17239>>IF      17259>>IF
TIME_BUF
     16508**DCL     16513--REDEF
TIME_BUF.DATE
     16510**DCL     17236--ASSIGN  17256--ASSIGN
TIME_BUF.TIME
     16512**DCL     17237--ASSIGN  17257--ASSIGN
TIME_BUF_CHARS
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:290  
     16513**DCL     17243>>ASSIGN  17262>>ASSIGN
TSN_USED_BUF
      8790**DCL     17182--IF
TSN_USED_BUF.BACKUP_FSN
      8791**DCL     17186>>CALLBLT
TSN_USED_BUF.FIRST_ACCT
      8791**DCL     17176>>ASSIGN
TSN_USED_BUF.FSN
      8791**DCL     17179>>CALLBLT
TSN_USED_BUF.LAST_ACCT
      8791**DCL     17177>>ASSIGN
TSN_USED_BUF.TSN
      8791**DCL     17178>>ASSIGN
TSN_USED_BUF.UTS
      8791**DCL     17137>>ASSIGN  17170--ASSIGN  17172<<ASSIGN
TSN_USED_NAME.L#
      8928**DCL      8928--IMP-SIZ
TVECTOR.W2
      8170**DCL      8171--REDEF
VLP_SN.NUM#
     16844**DCL     17065>>IF      17072>>DOINDEX 17091>>IF      17454>>DOINDEX 17468>>ASSIGN  17468--ASSIGN
VLP_SN.SN#
     16844**DCL     17059>>CALLBLT 17073>>CALLBLT 17455<<ASSIGN  17455>>ASSIGN  17456--ASSIGN  17468--ASSIGN
WRITE_NODATA_LIST.STATION_
     10423**DCL     10423--REDEF
WRITE_NODATA_LIST.V.DVBYTE.VFC#
     10430**DCL     10430--REDEF
WRITE_PRIME_DUAL.STATION_
      9788**DCL      9788--REDEF
WRITE_PRIME_DUAL.V.DVBYTE.VFC#
      9795**DCL      9795--REDEF
WRITE_REBUILD.STATION_
     10024**DCL     10024--REDEF
WRITE_REBUILD.V.DVBYTE.VFC#
     10031**DCL     10031--REDEF
WRITE_STATUS.STATION_
PL6.E3A0      #002=FLS$STATUS File=FLS$STOW_FETCH.:E05TSI                        TUE 07/29/97 16:26 Page:291  
      9239**DCL      9239--REDEF
WRITE_STATUS.V.DVBYTE.VFC#
      9246**DCL      9246--REDEF
WRITE_TSN_USED.STATION_
      8949**DCL      8949--REDEF
WRITE_TSN_USED.V.DVBYTE.VFC#
      8956**DCL      8956--REDEF
