VERSION E05

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:1    
        1        1        /*M* TOU$SHOWDECK     DEckfile Editor Routine SHOWDECK Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$SHOWDECK
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine SHOWDECK Function
       14       14              DESCRIPTION: This program is called when the SHOWDECK function
       15       15                           is invoked by the  CP-6  deckfile editor  driver.
       16       16                           This program shows an object deck to the user  or
       17       17                           to the edit listing depending on the run mode.
       18       18              REFERENCE:   CP-6 Release C0M0
       19       19              LAST UPDATE: 10/27/83
       20       20        */
       21       21        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:2    
       22       22        /*F*  NAME:        TOU$SHOWDECK
       23       23              DESCRIPTION: Procedure Nesting Hierarchy
       24       24
       25       25              TOU$SHOWDECK: procedure
       26       26                 SD_INIT_DUP: procedure
       27       27                 SD_COMMAND_SETUP: procedure
       28       28                 SD_FIND_DECK: procedure ALTRET
       29       29                 SD_SHOW_DECK: procedure ALTRET
       30       30                    SD_SHOW_TABLE: procedure
       31       31                    SD_SHOW_CARDS: procedure
       32       32                    SD_SHOW_REFERENCES: procedure ALTRET
       33       33                    SD_WRITE_MSG: procedure
       34       34        */
       35       35        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:3    
       36       36        TOU$SHOWDECK: PROC ;
       37       37
       38       38        /* Include Files */
       39       39
       40       40           %INCLUDE TOU_DEER_M ;
       41     1451           %INCLUDE TOU_RQSTS_E ;
       42     1526           %INCLUDE TO_PERR_C ;
       43     2111           %INCLUDE XU_MACRO_C ;
       44     5217
       45     5218        /* Macros */
       46     5219
       47     5220           %DUP (STCLASS = SYMREF) ;
       48     5363           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       49     5375           %BCD_KEY (STCLASS = SYMREF) ;
       50     5389           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       51     5403           %ID (STCLASS = SYMREF) ;
       52     5420           %DKEND (STCLASS = SYMREF) ;
       53     5444           %MASTER_DATA (STCLASS = SYMREF) ;
       54     5458           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       55     5472           %OBJECT (STCLASS = SYMREF) ;
       56     5535           %OBJECT_KEY (STCLASS = SYMREF) ;
       57     5548           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       58     5562           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       59     5577           %OBJECT_SEARCH_KEY (STCLASS = SYMREF) ;
       60     5589
       61     5590        /* Variables */
       62     5591
       63     5592    1      DCL BCD#           UBIN WORD SYMREF ;
       64     5593    1      DCL CUR#           UBIN WORD SYMREF ;
       65     5594    1      DCL SHOW_ATTRIBUTES BIT (1) CALIGNED ;
       66     5595    1      DCL SHOW_REFERENCES BIT (1) CALIGNED ;
       67     5596           %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:4    
       68     5597        /* External Entry Points */
       69     5598
       70     5599    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
       71     5600    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
       72     5601    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
       73     5602
       74     5603    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       75     5604    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
       76     5605
       77     5606    1      DCL TOU$DFU_DF_RD_MASTER_CONTROL   ENTRY ALTRET ;
       78     5607    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY     ENTRY ALTRET ;
       79     5608    1      DCL TOU$DFU_DF_RD_BCD_CARDS        ENTRY ALTRET ;
       80     5609    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
       81     5610    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
       82     5611           %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:5    
       83     5612        /* ********************
       84     5613           **  Main Program  **
       85     5614           ******************** */
       86     5615
       87     5616    1      CALL SD_INIT_DUP ;
       88     5617    1      CALL SD_COMMAND_SETUP ALTRET (ERROR_RETURN) ;
       89     5618
       90     5619    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;
       91     5620    1      CALL SD_FIND_DECK ALTRET (ERROR_RETURN) ;
       92     5621    1      CALL SD_SHOW_DECK ALTRET (ERROR_RETURN) ;
       93     5622    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;
       94     5623
       95     5624        /* NORMAL_RETURN: */
       96     5625    1      DUP.MSG_CODE = %T$SD_SUCCESS;
       97     5626    1      CALL TOU$DU_USER_WRITE ;
       98     5627    1      RETURN ;
       99     5628
      100     5629    1   ERROR_RETURN:
      101     5630    1      CALL TOU$DU_CLOSE_DF ;
      102     5631    1      DUP.MSG_CODE = %T$SD_FAILURE;
      103     5632    1      CALL TOU$DU_USER_WRITE ;
      104     5633    1      RETURN ;
      105     5634
      106     5635        /* ********************
      107     5636           **  End Of  Main  **
      108     5637           ******************** */
      109     5638        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:6    
      110     5639        /*I*  NAME:        SD_INIT_DUP
      111     5640              AUTHOR:      Scott S. Sheppard
      112     5641              PURPOSE:     Initilization
      113     5642              INTERFACE:   None called.
      114     5643              INPUT:       Set of system equates.
      115     5644              OUTPUT:      DUP
      116     5645                           SHOW_ATTRIBUTES
      117     5646                           SHOW_REFERENCES
      118     5647              DESCRIPTION: This procedure initializes variables to
      119     5648                           appropriate starting values.
      120     5649        */
      121     5650
      122     5651    1   SD_INIT_DUP: PROC ;
      123     5652
      124     5653        /* Code */
      125     5654
      126     5655    2      DUP.HDR_CODE = %H$SHOWDECK ;
      127     5656    2      DUP.LINE_VFC = %SKIP_WRITE ;
      128     5657    2      DUP.FORCE_NEW_PAGE = %TRUE ;
      129     5658    2      DUP.DF.ENTERED = %FALSE ;
      130     5659    2      DUP.DF.OPEN_TYPE = %READ_FILE ;
      131     5660    2      DUP.DF.REPORT_ERROR = %TRUE ;
      132     5661    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;
      133     5662    2      SHOW_ATTRIBUTES = %FALSE ;
      134     5663    2      SHOW_REFERENCES = %FALSE ;
      135     5664    2      RETURN ;
      136     5665
      137     5666    2   END SD_INIT_DUP ;
      138     5667        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:7    
      139     5668        /*I*  NAME:        SD_COMMAND_SETUP
      140     5669              AUTHOR:      Scott S. Sheppard
      141     5670              PURPOSE:     Sets up SHOWDECK Command
      142     5671              INTERFACE:   TOU$DU_SET_DF_FID
      143     5672              INPUT:       DUP.CMD$ - pointer to the parse control block
      144     5673              OUTPUT:      DUP.DF.HOLD_AREA
      145     5674                           DUP.DF.HOLD_AREA_LGTH
      146     5675                           OBJECT_SEARCH_KEY.DATA
      147     5676                           DUP.DF.ENTERED
      148     5677                           SHOW_ATTRIBUTES
      149     5678                           SHOW_REFERENCES
      150     5679              DESCRIPTION: This procedure sets up the SHOWDECK command  from
      151     5680                           the information entered by the user.DUP.CMD$ is a
      152     5681                           pointer to a   parse control block  that contains
      153     5682                           the tokens entered by the user.
      154     5683                           COMMAND FORMS:
      155     5684              Case 1: SD <object key> [(options)]
      156     5685              Case 2: SD <object key> FROM <deckfile fid> [(options)]
      157     5686        */
      158     5687
      159     5688    1   SD_COMMAND_SETUP: PROC ALTRET ;
      160     5689
      161     5690    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      162     5691    2      DCL OUTBLK$                    PTR ALIGNED ;
      163     5692    2      DCL OPT#                       UBIN WORD ALIGNED ;
      164     5693    2      DCL OPT$                       PTR ALIGNED ;
      165     5694           %PARSE$OUT (STCLASS = BASED) ;
      166     5739           %PARSE$SYM (STCLASS = BASED) ;
      167     5777           %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:8    
      168     5778        /* Code */
      169     5779
      170     5780    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;
      171     5781    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;
      172     5782    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;
      173     5783    4            CASE (%OBJKEY) ;
      174     5784    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;
      175     5785    4            CASE (%DECKFILE_FID) ;
      176     5786    4               DUP.DF.ENTERED = %TRUE ;
      177     5787    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;
      178     5788    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;
      179     5789    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      180     5790    4            CASE (%SHOWDECK_OPTS) ;
      181     5791    5               DO OPT# = 0 TO OUTBLK$ -> OUT$BLK.NSUBLKS - 1 ;
      182     5792    5                  OPT$ = OUTBLK$ -> OUT$BLK.SUBLK$(OPT#) ;
      183     5793    6                  DO CASE (OPT$ -> OUT$BLK.CODE) ;
      184     5794    6                     CASE (%ATTRIBUTES) ;
      185     5795    6                        SHOW_ATTRIBUTES = %TRUE ;
      186     5796    6                     CASE (%REFERENCES) ;
      187     5797    6                        SHOW_REFERENCES = %TRUE ;
      188     5798    6                  END /* CASE */ ;
      189     5799    5               END /* DO */ ;
      190     5800    4         END /* CASE */ ;
      191     5801    3      END /* DO */ ;
      192     5802
      193     5803    2      IF DUP.DF.ENTERED
      194     5804    2      THEN /* FID set from DEER command */ ;
      195     5805    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;
      196     5806    2      RETURN ;
      197     5807
      198     5808    2   ERROR:
      199     5809    2      ALTRETURN ;
      200     5810
      201     5811    2   END SD_COMMAND_SETUP ;
      202     5812        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:9    
      203     5813        /*I*  NAME:        SD_FIND_DECK
      204     5814              AUTHOR:      Scott S. Sheppard
      205     5815              PURPOSE:     Locates Object Deck
      206     5816              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
      207     5817                           TOU$DFU_DF_RD_BCD_CARDS
      208     5818                           TOU$DFU_DF_RD_OBJECT_REFLIST
      209     5819                           TOU$DU_USER_WRITE
      210     5820              INPUT:       OBJECT_SEARCH_KEY
      211     5821                           OBJECT.DECK#
      212     5822                           OBJECT.TOTAL_COUNT
      213     5823                           OBJECT.BINARY_COUNT
      214     5824                           BCD_B
      215     5825                           BCD#
      216     5826              OUTPUT:      OBJECT
      217     5827                           BCD_B
      218     5828                           BCD#
      219     5829                           DKEND
      220     5830                           ID.REVISION
      221     5831                           OBJECT_REFLIST_DATA
      222     5832              DESCRIPTION: This procedure locates and reads all of the records
      223     5833                           needed to show the object deck's attributes.
      224     5834        */
      225     5835        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:10   
      226     5836    1   SD_FIND_DECK: PROC ALTRET ;
      227     5837
      228     5838        /* Code */
      229     5839
      230     5840    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;
      231     5841    2      CALL TOU$DFU_DF_CHECK_FOR_KEY ALTRET (NOT_FOUND) ;
      232     5842
      233     5843    2      BCD_KEY.DECK# = OBJECT.DECK# ;
      234     5844    2      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;
      235     5845    2      CALL TOU$DFU_DF_RD_BCD_CARDS ALTRET (ERROR) ;
      236     5846    2      DKEND_ = BCD_B(BCD# - 1) ;
      237     5847    2      ID.REVISION = DKEND.BCD.REVISION ;
      238     5848
      239     5849    2      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;
      240     5850    2      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;
      241     5851    2      RETURN ;
      242     5852
      243     5853    2   NOT_FOUND:
      244     5854    2      DUP.MSG_CODE = %E$DFD_NO_OBJ_IN_DF ;
      245     5855    2      CALL TOU$DU_USER_WRITE ;
      246     5856    2   ERROR:
      247     5857    2      ALTRETURN ;
      248     5858
      249     5859    2   END SD_FIND_DECK ;
      250     5860        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:11   
      251     5861        /*I*  NAME:        SD_SHOW_DECK
      252     5862              AUTHOR:      Scott S. Sheppard
      253     5863              PURPOSE:     Driver Routine to Show a Deck
      254     5864              INPUT:       SHOW_ATTRIBUTES
      255     5865                           SHOW_REFERENCES
      256     5866              OUTPUT:      DUP.BREAK_TERMINATE
      257     5867              DESCRIPTION: Calls modules based on input parameters.
      258     5868        */
      259     5869
      260     5870    1   SD_SHOW_DECK: PROC ALTRET ;
      261     5871
      262     5872        /* Code */
      263     5873
      264     5874    2      DUP.BREAK_TERMINATE = %TRUE ;
      265     5875    2      CALL SD_WRITE_MSG (%T$SD_DECK) ALTRET (ERROR) ;
      266     5876    2      IF SHOW_ATTRIBUTES
      267     5877    2      THEN CALL SD_SHOW_TABLE ;
      268     5878    2      ELSE /* Omit the table */ ;
      269     5879    2      CALL SD_SHOW_CARDS ;
      270     5880    2      IF SHOW_REFERENCES
      271     5881    2      THEN CALL SD_SHOW_REFERENCES ALTRET (ERROR) ;
      272     5882    2      ELSE /* Omit the catalog references */ ;
      273     5883    2      DUP.BREAK_TERMINATE = %FALSE ;
      274     5884    2      RETURN ;
      275     5885
      276     5886    2   ERROR:
      277     5887    2      DUP.BREAK_TERMINATE = %FALSE ;
      278     5888    2      ALTRETURN ;
      279     5889
      280     5890        /* END SD_SHOW_DECK */
      281     5891        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:12   
      282     5892        /*I*  NAME:        SD_SHOW_TABLE
      283     5893              AUTHOR:      Scott S. Sheppard
      284     5894              PURPOSE:     Displays Attribute Table
      285     5895              INTERFACE:   SD_WRITE_MSG
      286     5896              INPUT:       OBJECT.BCD.LIBRARY
      287     5897                           OBJECT.BCD.CLASS
      288     5898              OUTPUT:      No system data altered.
      289     5899              DESCRIPTION: This procedure calls the  message output routine to
      290     5900                           print the attribute table for the object deck. This
      291     5901                           routine selects which table to  print  based on the
      292     5902                           library and class of the object deck.
      293     5903        */
      294     5904
      295     5905    2   SD_SHOW_TABLE: PROC ;
      296     5906
      297     5907        /* Code */
      298     5908
      299     5909    4      DO SELECT (OBJECT.BCD.LIBRARY) ;
      300     5910    4         SELECT ('HMPCJ1') ;
      301     5911    4         IF OBJECT.BCD.CLASS = 'I' | OBJECT.BCD.CLASS = 'F'
      302     5912    4         THEN CALL SD_WRITE_MSG (%T$SD_ITR_TABLE) ;
      303     5913    4         ELSE CALL SD_WRITE_MSG (%T$SD_MDR_TABLE) ;
      304     5914    4         SELECT ('HTND') ;
      305     5915    4         CALL SD_WRITE_MSG (%T$SD_GECALL_TABLE) ;
      306     5916    4         SELECT ('HNIOA0') ;
      307     5917    4         CALL SD_WRITE_MSG (%T$SD_NIO_TABLE) ;
      308     5918    4      END /* SELECT */ ;
      309     5919
      310     5920    3   END SD_SHOW_TABLE ;
      311     5921        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:13   
      312     5922        /*I*  NAME:        SD_SHOW_CARDS
      313     5923              AUTHOR:      Scott S. Sheppard
      314     5924              PURPOSE:     Display Object Deck's Cards
      315     5925              INTERFACE:   SD_WRITE_MSG
      316     5926              INPUT:       BCD#
      317     5927              OUTPUT:      DUP.LINE_VFC
      318     5928                           CUR#
      319     5929              DESCRIPTION: This procedure displays the object deck's $OBJECT
      320     5930                           card, any PATCH cards, and the $DKEND card to the
      321     5931                           user.
      322     5932        */
      323     5933
      324     5934    2   SD_SHOW_CARDS: PROC ;
      325     5935
      326     5936        /* Code */
      327     5937
      328     5938    3      DUP.LINE_VFC = %NEXT_WRITE ;
      329     5939    3      CALL SD_WRITE_MSG (%T$SD_OBJECT) ;
      330     5940
      331     5941    4      DO CUR# = 0 TO BCD# - 1 ;
      332     5942    4         CALL SD_WRITE_MSG (%T$SD_PATCH) ;
      333     5943    4      END /* DO */ ;
      334     5944
      335     5945    3      CALL SD_WRITE_MSG (%T$SD_SEPARATOR) ;
      336     5946    3      DUP.LINE_VFC = %SKIP_WRITE ;
      337     5947    3      RETURN ;
      338     5948
      339     5949    3   END SD_SHOW_CARDS ;
      340     5950        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:14   
      341     5951        /*I*  NAME:        SD_SHOW_REFERENCES
      342     5952              AUTHOR:      Scott S. Sheppard
      343     5953              PURPOSE:     Displays Catalog References
      344     5954              INTERFACE:   SD_WRITE_MSG
      345     5955                           TOU$DFU_DF_RD_MASTER_CONTROL
      346     5956                           TOU$DFU_DF_RD_MASTER_ENTRY
      347     5957              INPUT:       MASTER_DATA.DECK#
      348     5958                           OBJECT_REFLIST_DATA.NUM_REFS
      349     5959                           OBJECT_REFLIST_DATA.REFS.ME#
      350     5960                           OBJECT_REFLIST_DATA.REFS.CE#
      351     5961              OUTPUT:      MASTER_ENTRY_KEY.DECK#
      352     5962                           MASTER_ENTRY_KEY.ENTRY#
      353     5963                           CATALOG_ENTRY_KEY.ENTRY#
      354     5964                           DUP.LINE_VFC ;
      355     5965              DESCRIPTION: This procedure shows all of the catalog references
      356     5966                           to the object deck.
      357     5967        */
      358     5968        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:15   
      359     5969    2   SD_SHOW_REFERENCES: PROC ALTRET ;
      360     5970
      361     5971    3      DCL I   UBIN HALF HALIGNED ;
      362     5972
      363     5973        /* Code */
      364     5974
      365     5975    3      DUP.LINE_VFC = %NEXT_WRITE ;
      366     5976    3      CALL SD_WRITE_MSG (%T$SD_REFS) ;
      367     5977
      368     5978    3      CALL TOU$DFU_DF_RD_MASTER_CONTROL ALTRET (ERROR) ;
      369     5979    3      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;
      370     5980    4      DO I = 0 TO OBJECT_REFLIST_DATA.NUM_REFS - 1 ;
      371     5981    4         MASTER_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.ME#(I) ;
      372     5982    4         CALL TOU$DFU_DF_RD_MASTER_ENTRY ALTRET (ERROR) ;
      373     5983    4         CATALOG_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.CE#(I) ;
      374     5984    4         CALL SD_WRITE_MSG (%T$SD_CATALOG) ;
      375     5985    4      END /* DO */ ;
      376     5986
      377     5987    3      CALL SD_WRITE_MSG (%T$SD_SEPARATOR) ;
      378     5988    3      DUP.LINE_VFC = %SKIP_WRITE ;
      379     5989    3      RETURN ;
      380     5990
      381     5991    3   ERROR:
      382     5992    3      ALTRETURN;
      383     5993
      384     5994    3   END SD_SHOW_REFERENCES ;
      385     5995        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:16   
      386     5996        /*I*  NAME:        SD_WRITE_MSG
      387     5997              AUTHOR:      Scott S. Sheppard
      388     5998              PURPOSE:     Routes Output Information
      389     5999              INTERFACE:   TOU$DU_USER_WRITE
      390     6000                           TOU$DU_PRINTER_WRITE
      391     6001              INPUT:       DUP.BATCH_MODE
      392     6002              OUTPUT:      DUP.MSG_CODE
      393     6003              DESCRIPTION: This procedure writes a message to the user terminal
      394     6004                           (on-line)  or to the edit listing (batch)  depending
      395     6005                           on the mode in which DEER is being run.
      396     6006        */
      397     6007
      398     6008    2   SD_WRITE_MSG: PROC (MSG_CODE) ALTRET ;
      399     6009
      400     6010    3      DCL MSG_CODE UBIN WORD ALIGNED ;
      401     6011
      402     6012        /* Code */
      403     6013
      404     6014    3      DUP.MSG_CODE = MSG_CODE ;
      405     6015    3      IF DUP.BATCH_MODE
      406     6016    3      THEN CALL TOU$DU_PRINTER_WRITE ALTRET (ERROR) ;
      407     6017    3      ELSE CALL TOU$DU_USER_WRITE ;
      408     6018    3      RETURN ;
      409     6019
      410     6020    3   ERROR:
      411     6021    3      ALTRETURN ;
      412     6022
      413     6023    3   END SD_WRITE_MSG ;
      414     6024    2   END SD_SHOW_DECK ;
      415     6025    1   END TOU$SHOWDECK ;

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:17   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$SHOWDECK.

   Procedure TOU$SHOWDECK requires 356 words for executable code.
   Procedure TOU$SHOWDECK requires 14 words of local(AUTO) storage.

    No errors detected in file TOU$SHOWDECK.:E05TSI    .

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:18   

 Object Unit name= TOU$SHOWDECK                               File name= TOU$SHOWDECK.:E05TOU
 UTS= JUL 30 '97 06:51:09.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      5      5  TOU$SHOWDECK
    1   Proc  even  none   356    544  TOU$SHOWDECK
    2  RoData even  none    20     24  TOU$SHOWDECK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  TOU$SHOWDECK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$DU_OPEN_DF
 yes     yes           Std       0 TOU$DU_CLOSE_DF
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SET_DF_FID
 yes     yes           Std       0 TOU$DFU_DF_CHECK_FOR_KEY
 yes     yes           Std       0 TOU$DFU_DF_RD_BCD_CARDS
 yes     yes           Std       0 TOU$DFU_DF_RD_OBJECT_REFLIST
 yes     yes           Std       0 TOU$DFU_DF_RD_MASTER_CONTROL
 yes     yes           Std       0 TOU$DFU_DF_RD_MASTER_ENTRY
 yes     yes           Std       0 TOU$DU_PRINTER_WRITE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:19   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DUP                                   BCD_KEY                               CATALOG_ENTRY_KEY
     ID                                    DKEND                                 MASTER_DATA
     MASTER_ENTRY_KEY                      OBJECT                                OBJECT_KEY
     OBJECT_REFLIST_KEY                    OBJECT_REFLIST_DATA                   OBJECT_SEARCH_KEY
     BCD#                                  CUR#                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:20   


        1        1        /*M* TOU$SHOWDECK     DEckfile Editor Routine SHOWDECK Function */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$SHOWDECK
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEckfile Editor Routine SHOWDECK Function
       14       14              DESCRIPTION: This program is called when the SHOWDECK function
       15       15                           is invoked by the  CP-6  deckfile editor  driver.
       16       16                           This program shows an object deck to the user  or
       17       17                           to the edit listing depending on the run mode.
       18       18              REFERENCE:   CP-6 Release C0M0
       19       19              LAST UPDATE: 10/27/83
       20       20        */
       21       21        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:21   
       22       22        /*F*  NAME:        TOU$SHOWDECK
       23       23              DESCRIPTION: Procedure Nesting Hierarchy
       24       24
       25       25              TOU$SHOWDECK: procedure
       26       26                 SD_INIT_DUP: procedure
       27       27                 SD_COMMAND_SETUP: procedure
       28       28                 SD_FIND_DECK: procedure ALTRET
       29       29                 SD_SHOW_DECK: procedure ALTRET
       30       30                    SD_SHOW_TABLE: procedure
       31       31                    SD_SHOW_CARDS: procedure
       32       32                    SD_SHOW_REFERENCES: procedure ALTRET
       33       33                    SD_WRITE_MSG: procedure
       34       34        */
       35       35        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:22   
       36       36        TOU$SHOWDECK: PROC ;

     36  1 000000   000000 700200 xent  TOU$SHOWDECK TSX0  ! X66_AUTO_0
         1 000001   000016 000000                    ZERO    14,0

       37       37
       38       38        /* Include Files */
       39       39
       40       40           %INCLUDE TOU_DEER_M ;
       41     1451           %INCLUDE TOU_RQSTS_E ;
       42     1526           %INCLUDE TO_PERR_C ;
       43     2111           %INCLUDE XU_MACRO_C ;
       44     5217
       45     5218        /* Macros */
       46     5219
       47     5220           %DUP (STCLASS = SYMREF) ;
       48     5363           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
       49     5375           %BCD_KEY (STCLASS = SYMREF) ;
       50     5389           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
       51     5403           %ID (STCLASS = SYMREF) ;
       52     5420           %DKEND (STCLASS = SYMREF) ;
       53     5444           %MASTER_DATA (STCLASS = SYMREF) ;
       54     5458           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
       55     5472           %OBJECT (STCLASS = SYMREF) ;
       56     5535           %OBJECT_KEY (STCLASS = SYMREF) ;
       57     5548           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
       58     5562           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
       59     5577           %OBJECT_SEARCH_KEY (STCLASS = SYMREF) ;
       60     5589
       61     5590        /* Variables */
       62     5591
       63     5592    1      DCL BCD#           UBIN WORD SYMREF ;
       64     5593    1      DCL CUR#           UBIN WORD SYMREF ;
       65     5594    1      DCL SHOW_ATTRIBUTES BIT (1) CALIGNED ;
       66     5595    1      DCL SHOW_REFERENCES BIT (1) CALIGNED ;
       67     5596           %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:23   
       68     5597        /* External Entry Points */
       69     5598
       70     5599    1      DCL TOU$DU_SET_DF_FID              ENTRY ALTRET ;
       71     5600    1      DCL TOU$DU_OPEN_DF                 ENTRY ALTRET ;
       72     5601    1      DCL TOU$DU_CLOSE_DF                ENTRY ALTRET ;
       73     5602
       74     5603    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
       75     5604    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
       76     5605
       77     5606    1      DCL TOU$DFU_DF_RD_MASTER_CONTROL   ENTRY ALTRET ;
       78     5607    1      DCL TOU$DFU_DF_RD_MASTER_ENTRY     ENTRY ALTRET ;
       79     5608    1      DCL TOU$DFU_DF_RD_BCD_CARDS        ENTRY ALTRET ;
       80     5609    1      DCL TOU$DFU_DF_RD_OBJECT_REFLIST   ENTRY ALTRET ;
       81     5610    1      DCL TOU$DFU_DF_CHECK_FOR_KEY       ENTRY ALTRET ;
       82     5611           %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:24   
       83     5612        /* ********************
       84     5613           **  Main Program  **
       85     5614           ******************** */
       86     5615
       87     5616    1      CALL SD_INIT_DUP ;

   5616  1 000002   000037 701000 1                  TSX1    SD_INIT_DUP
         1 000003   000000 011000                    NOP     0

       88     5617    1      CALL SD_COMMAND_SETUP ALTRET (ERROR_RETURN) ;

   5617  1 000004   000060 701000 1                  TSX1    SD_COMMAND_SETUP
         1 000005   000026 702000 1                  TSX2    ERROR_RETURN

       89     5618
       90     5619    1      CALL TOU$DU_OPEN_DF ALTRET (ERROR_RETURN) ;

   5619  1 000006   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000007   000000 701000 xent               TSX1    TOU$DU_OPEN_DF
         1 000010   000026 702000 1                  TSX2    ERROR_RETURN

       91     5620    1      CALL SD_FIND_DECK ALTRET (ERROR_RETURN) ;

   5620  1 000011   000210 701000 1                  TSX1    SD_FIND_DECK
         1 000012   000026 702000 1                  TSX2    ERROR_RETURN

       92     5621    1      CALL SD_SHOW_DECK ALTRET (ERROR_RETURN) ;

   5621  1 000013   000265 701000 1                  TSX1    SD_SHOW_DECK
         1 000014   000026 702000 1                  TSX2    ERROR_RETURN

       93     5622    1      CALL TOU$DU_CLOSE_DF ALTRET (ERROR_RETURN) ;

   5622  1 000015   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000016   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         1 000017   000026 702000 1                  TSX2    ERROR_RETURN

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:25   
       94     5623
       95     5624        /* NORMAL_RETURN: */
       96     5625    1      DUP.MSG_CODE = %T$SD_SUCCESS;

   5625  1 000020   000062 235007                    LDA     50,DL
         1 000021   000020 755000 xsym               STA     DUP+16

       97     5626    1      CALL TOU$DU_USER_WRITE ;

   5626  1 000022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000023   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000024   000000 011000                    NOP     0

       98     5627    1      RETURN ;

   5627  1 000025   000000 702200 xent               TSX2  ! X66_ARET

       99     5628
      100     5629    1   ERROR_RETURN:
      101     5630    1      CALL TOU$DU_CLOSE_DF ;

   5630  1 000026   000002 631400 xsym  ERROR_RETURN EPPR1   B_VECTNIL+2
         1 000027   000000 701000 xent               TSX1    TOU$DU_CLOSE_DF
         1 000030   000000 011000                    NOP     0

      102     5631    1      DUP.MSG_CODE = %T$SD_FAILURE;

   5631  1 000031   000063 235007                    LDA     51,DL
         1 000032   000020 755000 xsym               STA     DUP+16

      103     5632    1      CALL TOU$DU_USER_WRITE ;

   5632  1 000033   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000034   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000035   000000 011000                    NOP     0

      104     5633    1      RETURN ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:26   

   5633  1 000036   000000 702200 xent               TSX2  ! X66_ARET

      105     5634
      106     5635        /* ********************
      107     5636           **  End Of  Main  **
      108     5637           ******************** */
      109     5638        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:27   
      110     5639        /*I*  NAME:        SD_INIT_DUP
      111     5640              AUTHOR:      Scott S. Sheppard
      112     5641              PURPOSE:     Initilization
      113     5642              INTERFACE:   None called.
      114     5643              INPUT:       Set of system equates.
      115     5644              OUTPUT:      DUP
      116     5645                           SHOW_ATTRIBUTES
      117     5646                           SHOW_REFERENCES
      118     5647              DESCRIPTION: This procedure initializes variables to
      119     5648                           appropriate starting values.
      120     5649        */
      121     5650
      122     5651    1   SD_INIT_DUP: PROC ;

   5651  1 000037   200006 741300       SD_INIT_DUP  STX1  ! SHOW_REFERENCES+2,,AUTO

      123     5652
      124     5653        /* Code */
      125     5654
      126     5655    2      DUP.HDR_CODE = %H$SHOWDECK ;

   5655  1 000040   001332 235007                    LDA     730,DL
         1 000041   000021 755000 xsym               STA     DUP+17

      127     5656    2      DUP.LINE_VFC = %SKIP_WRITE ;

   5656  1 000042   142000 236003                    LDQ     50176,DU
         1 000043   000026 756000 xsym               STQ     DUP+22

      128     5657    2      DUP.FORCE_NEW_PAGE = %TRUE ;

   5657  1 000044   400000 236003                    LDQ     -131072,DU
         1 000045   000056 756000 xsym               STQ     DUP+46

      129     5658    2      DUP.DF.ENTERED = %FALSE ;

   5658  1 000046   000031 236000 xsym               LDQ     B_VECTNIL+25
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:28   
         1 000047   000104 356000 xsym               ANSQ    DUP+68

      130     5659    2      DUP.DF.OPEN_TYPE = %READ_FILE ;

   5659  1 000050   000002 235007                    LDA     2,DL
         1 000051   000105 755000 xsym               STA     DUP+69

      131     5660    2      DUP.DF.REPORT_ERROR = %TRUE ;

   5660  1 000052   400000 236007                    LDQ     -131072,DL
         1 000053   000104 256000 xsym               ORSQ    DUP+68

      132     5661    2      DUP.DF.CLOSE_TYPE = %SAVE_FILE ;

   5661  1 000054   000106 450000 xsym               STZ     DUP+70

      133     5662    2      SHOW_ATTRIBUTES = %FALSE ;

   5662  1 000055   200003 450100                    STZ     SHOW_ATTRIBUTES,,AUTO

      134     5663    2      SHOW_REFERENCES = %FALSE ;

   5663  1 000056   200004 450100                    STZ     SHOW_REFERENCES,,AUTO

      135     5664    2      RETURN ;

   5664  1 000057   000001 702211                    TSX2  ! 1,X1

      136     5665
      137     5666    2   END SD_INIT_DUP ;
      138     5667        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:29   
      139     5668        /*I*  NAME:        SD_COMMAND_SETUP
      140     5669              AUTHOR:      Scott S. Sheppard
      141     5670              PURPOSE:     Sets up SHOWDECK Command
      142     5671              INTERFACE:   TOU$DU_SET_DF_FID
      143     5672              INPUT:       DUP.CMD$ - pointer to the parse control block
      144     5673              OUTPUT:      DUP.DF.HOLD_AREA
      145     5674                           DUP.DF.HOLD_AREA_LGTH
      146     5675                           OBJECT_SEARCH_KEY.DATA
      147     5676                           DUP.DF.ENTERED
      148     5677                           SHOW_ATTRIBUTES
      149     5678                           SHOW_REFERENCES
      150     5679              DESCRIPTION: This procedure sets up the SHOWDECK command  from
      151     5680                           the information entered by the user.DUP.CMD$ is a
      152     5681                           pointer to a   parse control block  that contains
      153     5682                           the tokens entered by the user.
      154     5683                           COMMAND FORMS:
      155     5684              Case 1: SD <object key> [(options)]
      156     5685              Case 2: SD <object key> FROM <deckfile fid> [(options)]
      157     5686        */
      158     5687
      159     5688    1   SD_COMMAND_SETUP: PROC ALTRET ;

   5688  1 000060   200006 741300       SD_COMMAND_* STX1  ! SHOW_REFERENCES+2,,AUTO

      160     5689
      161     5690    2      DCL OUTBLK#                    UBIN WORD ALIGNED ;
      162     5691    2      DCL OUTBLK$                    PTR ALIGNED ;
      163     5692    2      DCL OPT#                       UBIN WORD ALIGNED ;
      164     5693    2      DCL OPT$                       PTR ALIGNED ;
      165     5694           %PARSE$OUT (STCLASS = BASED) ;
      166     5739           %PARSE$SYM (STCLASS = BASED) ;
      167     5777           %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:30   
      168     5778        /* Code */
      169     5779
      170     5780    3      DO OUTBLK# = 0 TO DUP.CMD$ -> OUT$BLK.NSUBLKS - 1 ;

   5780  1 000061   200007 450100                    STZ     OUTBLK#,,AUTO
         1 000062   000171 710000 1                  TRA     s:5801+3

      171     5781    3         OUTBLK$ = DUP.CMD$ -> OUT$BLK.SUBLK$(OUTBLK#) ;

   5781  1 000063   000017 470400 xsym               LDP0    DUP+15
         1 000064   200007 720100                    LXL0    OUTBLK#,,AUTO
         1 000065   000003 236110                    LDQ     3,X0,PR0
         1 000066   200010 756100                    STQ     OUTBLK$,,AUTO

      172     5782    4         DO CASE (OUTBLK$ -> OUT$BLK.CODE) ;

   5782  1 000067   200010 471500                    LDP1    OUTBLK$,,AUTO
         1 000070   100000 236100                    LDQ     0,,PR1
         1 000071   777777 376007                    ANQ     -1,DL
         1 000072   000004 136007                    SBLQ    4,DL
         1 000073   000006 116007                    CMPQ    6,DL
         1 000074   000076 602006 1                  TNC     s:5782+7,QL
         1 000075   000166 710000 1                  TRA     s:5801
         1 000076   000113 710000 1                  TRA     s:5786
         1 000077   000166 710000 1                  TRA     s:5801
         1 000100   000132 710000 1                  TRA     s:5791
         1 000101   000166 710000 1                  TRA     s:5801
         1 000102   000166 710000 1                  TRA     s:5801
         1 000103   000104 710000 1                  TRA     s:5784

      173     5783    4            CASE (%OBJKEY) ;

      174     5784    4               OBJECT_SEARCH_KEY.DATA = OUTBLK$ -> OUT$SYM.TEXT ;

   5784  1 000104   100004 236100                    LDQ     4,,PR1
         1 000105   000033 772000                    QRL     27
         1 000106   000000 621006                    EAX1    0,QL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:31   
         1 000107   040000 100540                    MLR     fill='040'O
         1 000110   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         1 000111   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         1 000112   000166 710000 1                  TRA     s:5801

      175     5785    4            CASE (%DECKFILE_FID) ;

      176     5786    4               DUP.DF.ENTERED = %TRUE ;

   5786  1 000113   400000 236003                    LDQ     -131072,DU
         1 000114   000104 256000 xsym               ORSQ    DUP+68

      177     5787    4               DUP.HOLD_AREA = OUTBLK$ -> OUT$SYM.TEXT ;

   5787  1 000115   100004 236100                    LDQ     4,,PR1
         1 000116   000033 772000                    QRL     27
         1 000117   000000 621006                    EAX1    0,QL
         1 000120   040000 100540                    MLR     fill='040'O
         1 000121   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         1 000122   000142 000050 xsym               ADSC9   DUP+98                   cn=0,n=40

      178     5788    4               DUP.HOLD_AREA_LGTH = OUTBLK$ -> OUT$SYM.COUNT ;

   5788  1 000123   100004 236100                    LDQ     4,,PR1
         1 000124   000033 772000                    QRL     27
         1 000125   000154 756000 xsym               STQ     DUP+108

      179     5789    4               CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

   5789  1 000126   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000127   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         1 000130   000206 702000 1                  TSX2    ERROR
         1 000131   000166 710000 1                  TRA     s:5801

      180     5790    4            CASE (%SHOWDECK_OPTS) ;

      181     5791    5               DO OPT# = 0 TO OUTBLK$ -> OUT$BLK.NSUBLKS - 1 ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:32   

   5791  1 000132   200011 450100                    STZ     OPT#,,AUTO
         1 000133   000160 710000 1                  TRA     s:5799+3

      182     5792    5                  OPT$ = OUTBLK$ -> OUT$BLK.SUBLK$(OPT#) ;

   5792  1 000134   200010 470500                    LDP0    OUTBLK$,,AUTO
         1 000135   200011 720100                    LXL0    OPT#,,AUTO
         1 000136   000003 236110                    LDQ     3,X0,PR0
         1 000137   200012 756100                    STQ     OPT$,,AUTO

      183     5793    6                  DO CASE (OPT$ -> OUT$BLK.CODE) ;

   5793  1 000140   200012 471500                    LDP1    OPT$,,AUTO
         1 000141   100000 721100                    LXL1    0,,PR1
         1 000142   000003 101003                    CMPX1   3,DU
         1 000143   000145 602011 1                  TNC     s:5793+5,X1
         1 000144   000155 710000 1                  TRA     s:5799
         1 000145   000155 710000 1                  TRA     s:5799
         1 000146   000150 710000 1                  TRA     s:5795
         1 000147   000153 710000 1                  TRA     s:5797

      184     5794    6                     CASE (%ATTRIBUTES) ;

      185     5795    6                        SHOW_ATTRIBUTES = %TRUE ;

   5795  1 000150   400000 236003                    LDQ     -131072,DU
         1 000151   200003 756100                    STQ     SHOW_ATTRIBUTES,,AUTO
         1 000152   000155 710000 1                  TRA     s:5799

      186     5796    6                     CASE (%REFERENCES) ;

      187     5797    6                        SHOW_REFERENCES = %TRUE ;

   5797  1 000153   400000 236003                    LDQ     -131072,DU
         1 000154   200004 756100                    STQ     SHOW_REFERENCES,,AUTO

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:33   
      188     5798    6                  END /* CASE */ ;

      189     5799    5               END /* DO */ ;

   5799  1 000155   200011 235100                    LDA     OPT#,,AUTO
         1 000156   000001 035007                    ADLA    1,DL
         1 000157   200011 755100                    STA     OPT#,,AUTO
         1 000160   200010 470500                    LDP0    OUTBLK$,,AUTO
         1 000161   000001 236100                    LDQ     1,,PR0
         1 000162   000022 772000                    QRL     18
         1 000163   200011 116100                    CMPQ    OPT#,,AUTO
         1 000164   000166 600000 1                  TZE     s:5801
         1 000165   000134 603000 1                  TRC     s:5792

      190     5800    4         END /* CASE */ ;

      191     5801    3      END /* DO */ ;

   5801  1 000166   200007 235100                    LDA     OUTBLK#,,AUTO
         1 000167   000001 035007                    ADLA    1,DL
         1 000170   200007 755100                    STA     OUTBLK#,,AUTO
         1 000171   000017 470400 xsym               LDP0    DUP+15
         1 000172   000001 236100                    LDQ     1,,PR0
         1 000173   000022 772000                    QRL     18
         1 000174   200007 116100                    CMPQ    OUTBLK#,,AUTO
         1 000175   000177 600000 1                  TZE     s:5803
         1 000176   000063 603000 1                  TRC     s:5781

      192     5802
      193     5803    2      IF DUP.DF.ENTERED

   5803  1 000177   000104 234000 xsym               SZN     DUP+68
         1 000200   000204 604000 1                  TMI     s:5806

      194     5804    2      THEN /* FID set from DEER command */ ;
      195     5805    2      ELSE CALL TOU$DU_SET_DF_FID ALTRET (ERROR) ;

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:34   
   5805  1 000201   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000202   000000 701000 xent               TSX1    TOU$DU_SET_DF_FID
         1 000203   000206 702000 1                  TSX2    ERROR

      196     5806    2      RETURN ;

   5806  1 000204   200006 221300                    LDX1  ! SHOW_REFERENCES+2,,AUTO
         1 000205   000001 702211                    TSX2  ! 1,X1

      197     5807
      198     5808    2   ERROR:
      199     5809    2      ALTRETURN ;

   5809  1 000206   200006 221300       ERROR        LDX1  ! SHOW_REFERENCES+2,,AUTO
         1 000207   000000 702211                    TSX2  ! 0,X1

      200     5810
      201     5811    2   END SD_COMMAND_SETUP ;
      202     5812        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:35   
      203     5813        /*I*  NAME:        SD_FIND_DECK
      204     5814              AUTHOR:      Scott S. Sheppard
      205     5815              PURPOSE:     Locates Object Deck
      206     5816              INTERFACE:   TOU$DFU_DF_CHECK_FOR_KEY
      207     5817                           TOU$DFU_DF_RD_BCD_CARDS
      208     5818                           TOU$DFU_DF_RD_OBJECT_REFLIST
      209     5819                           TOU$DU_USER_WRITE
      210     5820              INPUT:       OBJECT_SEARCH_KEY
      211     5821                           OBJECT.DECK#
      212     5822                           OBJECT.TOTAL_COUNT
      213     5823                           OBJECT.BINARY_COUNT
      214     5824                           BCD_B
      215     5825                           BCD#
      216     5826              OUTPUT:      OBJECT
      217     5827                           BCD_B
      218     5828                           BCD#
      219     5829                           DKEND
      220     5830                           ID.REVISION
      221     5831                           OBJECT_REFLIST_DATA
      222     5832              DESCRIPTION: This procedure locates and reads all of the records
      223     5833                           needed to show the object deck's attributes.
      224     5834        */
      225     5835        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:36   
      226     5836    1   SD_FIND_DECK: PROC ALTRET ;

   5836  1 000210   200006 741300       SD_FIND_DECK STX1  ! SHOW_REFERENCES+2,,AUTO

      227     5837
      228     5838        /* Code */
      229     5839
      230     5840    2      OBJECT_KEY.DATA = OBJECT_SEARCH_KEY.DATA ;

   5840  1 000211   040000 100400                    MLR     fill='040'O
         1 000212   000000 000027 xsym               ADSC9   OBJECT_SEARCH_KEY        cn=0,n=23
         1 000213   000000 200027 xsym               ADSC9   OBJECT_KEY               cn=1,n=23

      231     5841    2      CALL TOU$DFU_DF_CHECK_FOR_KEY ALTRET (NOT_FOUND) ;

   5841  1 000214   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000215   000000 701000 xent               TSX1    TOU$DFU_DF_CHECK_FOR_KEY
         1 000216   000256 702000 1                  TSX2    NOT_FOUND

      232     5842
      233     5843    2      BCD_KEY.DECK# = OBJECT.DECK# ;

   5843  1 000217   000024 236000 xsym               LDQ     OBJECT+20
         1 000220   000011 772000                    QRL     9
         1 000221   000000 552030 xsym               STBQ    BCD_KEY,'30'O

      234     5844    2      BCD# = OBJECT.TOTAL_COUNT - OBJECT.BINARY_COUNT - 1 ;

   5844  1 000222   000024 236000 xsym               LDQ     OBJECT+20
         1 000223   777777 376007                    ANQ     -1,DL
         1 000224   200014 756100                    STQ     @MSG_CODE+1,,AUTO
         1 000225   000025 236000 xsym               LDQ     OBJECT+21
         1 000226   000022 772000                    QRL     18
         1 000227   200014 136100                    SBLQ    @MSG_CODE+1,,AUTO
         1 000230   000001 136007                    SBLQ    1,DL
         1 000231   000000 756000 xsym               STQ     BCD#

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:37   
      235     5845    2      CALL TOU$DFU_DF_RD_BCD_CARDS ALTRET (ERROR) ;

   5845  1 000232   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000233   000000 701000 xent               TSX1    TOU$DFU_DF_RD_BCD_CARDS
         1 000234   000263 702000 1                  TSX2    ERROR

      236     5846    2      DKEND_ = BCD_B(BCD# - 1) ;

   5846  1 000235   000000 236000 xsym               LDQ     BCD#
         1 000236   000124 402007                    MPY     84,DL
         1 000237   000103 470400 xsym               LDP0    DUP+67
         1 000240   040000 100506                    MLR     fill='040'O
         1 000241   077753 000124                    ADSC9   -21,Q,PR0                cn=0,n=84
         1 000242   000000 000124 xsym               ADSC9   DKEND                    cn=0,n=84

      237     5847    2      ID.REVISION = DKEND.BCD.REVISION ;

   5847  1 000243   040000 100400                    MLR     fill='040'O
         1 000244   000020 400006 xsym               ADSC9   DKEND+16                 cn=2,n=6
         1 000245   000001 400006 xsym               ADSC9   ID+1                     cn=2,n=6

      238     5848
      239     5849    2      OBJECT_REFLIST_KEY.DECK# = OBJECT.DECK# ;

   5849  1 000246   000024 236000 xsym               LDQ     OBJECT+20
         1 000247   000011 772000                    QRL     9
         1 000250   000000 552030 xsym               STBQ    OBJECT_REFLIST_KEY,'30'O

      240     5850    2      CALL TOU$DFU_DF_RD_OBJECT_REFLIST ALTRET (ERROR) ;

   5850  1 000251   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000252   000000 701000 xent               TSX1    TOU$DFU_DF_RD_OBJECT_REFLIST
         1 000253   000263 702000 1                  TSX2    ERROR

      241     5851    2      RETURN ;

   5851  1 000254   200006 221300                    LDX1  ! SHOW_REFERENCES+2,,AUTO
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:38   
         1 000255   000001 702211                    TSX2  ! 1,X1

      242     5852
      243     5853    2   NOT_FOUND:
      244     5854    2      DUP.MSG_CODE = %E$DFD_NO_OBJ_IN_DF ;

   5854  1 000256   001010 235007       NOT_FOUND    LDA     520,DL
         1 000257   000020 755000 xsym               STA     DUP+16

      245     5855    2      CALL TOU$DU_USER_WRITE ;

   5855  1 000260   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000261   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000262   000000 011000                    NOP     0

      246     5856    2   ERROR:
      247     5857    2      ALTRETURN ;

   5857  1 000263   200006 221300       ERROR        LDX1  ! SHOW_REFERENCES+2,,AUTO
         1 000264   000000 702211                    TSX2  ! 0,X1

      248     5858
      249     5859    2   END SD_FIND_DECK ;
      250     5860        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:39   
      251     5861        /*I*  NAME:        SD_SHOW_DECK
      252     5862              AUTHOR:      Scott S. Sheppard
      253     5863              PURPOSE:     Driver Routine to Show a Deck
      254     5864              INPUT:       SHOW_ATTRIBUTES
      255     5865                           SHOW_REFERENCES
      256     5866              OUTPUT:      DUP.BREAK_TERMINATE
      257     5867              DESCRIPTION: Calls modules based on input parameters.
      258     5868        */
      259     5869
      260     5870    1   SD_SHOW_DECK: PROC ALTRET ;

   5870  1 000265   200006 741300       SD_SHOW_DECK STX1  ! SHOW_REFERENCES+2,,AUTO

      261     5871
      262     5872        /* Code */
      263     5873
      264     5874    2      DUP.BREAK_TERMINATE = %TRUE ;

   5874  1 000266   400000 236003                    LDQ     -131072,DU
         1 000267   000155 256000 xsym               ORSQ    DUP+109

      265     5875    2      CALL SD_WRITE_MSG (%T$SD_DECK) ALTRET (ERROR) ;

   5875  1 000270   000001 236000 2                  LDQ     1
         1 000271   200013 756100                    STQ     OPT$+1,,AUTO
         1 000272   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000273   000312 702000 1                  TSX2    ERROR

      266     5876    2      IF SHOW_ATTRIBUTES

   5876  1 000274   200003 234100                    SZN     SHOW_ATTRIBUTES,,AUTO
         1 000275   000300 605000 1                  TPL     s:5879

      267     5877    2      THEN CALL SD_SHOW_TABLE ;

   5877  1 000276   000316 701000 1                  TSX1    SD_SHOW_TABLE
         1 000277   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:40   

      268     5878    2      ELSE /* Omit the table */ ;
      269     5879    2      CALL SD_SHOW_CARDS ;

   5879  1 000300   000404 701000 1                  TSX1    SD_SHOW_CARDS
         1 000301   000000 011000                    NOP     0

      270     5880    2      IF SHOW_REFERENCES

   5880  1 000302   200004 234100                    SZN     SHOW_REFERENCES,,AUTO
         1 000303   000306 605000 1                  TPL     s:5883

      271     5881    2      THEN CALL SD_SHOW_REFERENCES ALTRET (ERROR) ;

   5881  1 000304   000437 701000 1                  TSX1    SD_SHOW_REFERENCES
         1 000305   000312 702000 1                  TSX2    ERROR

      272     5882    2      ELSE /* Omit the catalog references */ ;
      273     5883    2      DUP.BREAK_TERMINATE = %FALSE ;

   5883  1 000306   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000307   000155 356000 xsym               ANSQ    DUP+109

      274     5884    2      RETURN ;

   5884  1 000310   200006 221300                    LDX1  ! SHOW_REFERENCES+2,,AUTO
         1 000311   000001 702211                    TSX2  ! 1,X1

      275     5885
      276     5886    2   ERROR:
      277     5887    2      DUP.BREAK_TERMINATE = %FALSE ;

   5887  1 000312   000031 236000 xsym  ERROR        LDQ     B_VECTNIL+25
         1 000313   000155 356000 xsym               ANSQ    DUP+109

      278     5888    2      ALTRETURN ;

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:41   
   5888  1 000314   200006 221300                    LDX1  ! SHOW_REFERENCES+2,,AUTO
         1 000315   000000 702211                    TSX2  ! 0,X1

      279     5889
      280     5890        /* END SD_SHOW_DECK */
      281     5891        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:42   
      282     5892        /*I*  NAME:        SD_SHOW_TABLE
      283     5893              AUTHOR:      Scott S. Sheppard
      284     5894              PURPOSE:     Displays Attribute Table
      285     5895              INTERFACE:   SD_WRITE_MSG
      286     5896              INPUT:       OBJECT.BCD.LIBRARY
      287     5897                           OBJECT.BCD.CLASS
      288     5898              OUTPUT:      No system data altered.
      289     5899              DESCRIPTION: This procedure calls the  message output routine to
      290     5900                           print the attribute table for the object deck. This
      291     5901                           routine selects which table to  print  based on the
      292     5902                           library and class of the object deck.
      293     5903        */
      294     5904
      295     5905    2   SD_SHOW_TABLE: PROC ;

   5905  1 000316   200010 741300       SD_SHOW_TAB* STX1  ! OUTBLK$,,AUTO

      296     5906
      297     5907        /* Code */
      298     5908
      299     5909    4      DO SELECT (OBJECT.BCD.LIBRARY) ;

   5909  1 000317   040000 106400                    CMPC    fill='040'O
         1 000320   000003 600006 xsym               ADSC9   OBJECT+3                 cn=3,n=6
         1 000321   000000 000006 0                  ADSC9   0                        cn=0,n=6
         1 000322   000331 602000 1                  TNC     s:5909+10
         1 000323   000376 600000 1                  TZE     s:5917
         1 000324   040000 106400                    CMPC    fill='040'O
         1 000325   000003 600006 xsym               ADSC9   OBJECT+3                 cn=3,n=6
         1 000326   000002 000004 0                  ADSC9   2                        cn=0,n=4
         1 000327   000402 601000 1                  TNZ     s:5920
         1 000330   000371 710000 1                  TRA     s:5915
         1 000331   040000 106400                    CMPC    fill='040'O
         1 000332   000003 600006 xsym               ADSC9   OBJECT+3                 cn=3,n=6
         1 000333   000003 000006 0                  ADSC9   3                        cn=0,n=6
         1 000334   000402 601000 1                  TNZ     s:5920
         1 000335   000336 710000 1                  TRA     s:5911
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:43   

      300     5910    4         SELECT ('HMPCJ1') ;

      301     5911    4         IF OBJECT.BCD.CLASS = 'I' | OBJECT.BCD.CLASS = 'F'

   5911  1 000336   400000 220003                    LDX0    -131072,DU
         1 000337   000005 236000 xsym               LDQ     OBJECT+5
         1 000340   777000 376007                    ANQ     -512,DL
         1 000341   111000 116007                    CMPQ    37376,DL
         1 000342   000344 600000 1                  TZE     s:5911+6
         1 000343   000000 220003                    LDX0    0,DU
         1 000344   400000 222003                    LDX2    -131072,DU
         1 000345   000005 236000 xsym               LDQ     OBJECT+5
         1 000346   777000 376007                    ANQ     -512,DL
         1 000347   106000 116007                    CMPQ    35840,DL
         1 000350   000352 600000 1                  TZE     s:5911+12
         1 000351   000000 222003                    LDX2    0,DU
         1 000352   000000 636012                    EAQ     0,X2
         1 000353   200014 756100                    STQ     @MSG_CODE+1,,AUTO
         1 000354   000000 636010                    EAQ     0,X0
         1 000355   200014 276100                    ORQ     @MSG_CODE+1,,AUTO
         1 000356   000364 600000 1                  TZE     s:5913

      302     5912    4         THEN CALL SD_WRITE_MSG (%T$SD_ITR_TABLE) ;

   5912  1 000357   000003 236000 2                  LDQ     3
         1 000360   200013 756100                    STQ     OPT$+1,,AUTO
         1 000361   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000362   000000 011000                    NOP     0
         1 000363   000402 710000 1                  TRA     s:5920

      303     5913    4         ELSE CALL SD_WRITE_MSG (%T$SD_MDR_TABLE) ;

   5913  1 000364   000005 236000 2                  LDQ     5
         1 000365   200013 756100                    STQ     OPT$+1,,AUTO
         1 000366   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000367   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:44   
         1 000370   000402 710000 1                  TRA     s:5920

      304     5914    4         SELECT ('HTND') ;

      305     5915    4         CALL SD_WRITE_MSG (%T$SD_GECALL_TABLE) ;

   5915  1 000371   000007 236000 2                  LDQ     7
         1 000372   200013 756100                    STQ     OPT$+1,,AUTO
         1 000373   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000374   000000 011000                    NOP     0
         1 000375   000402 710000 1                  TRA     s:5920

      306     5916    4         SELECT ('HNIOA0') ;

      307     5917    4         CALL SD_WRITE_MSG (%T$SD_NIO_TABLE) ;

   5917  1 000376   000011 236000 2                  LDQ     9
         1 000377   200013 756100                    STQ     OPT$+1,,AUTO
         1 000400   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000401   000000 011000                    NOP     0

      308     5918    4      END /* SELECT */ ;

      309     5919
      310     5920    3   END SD_SHOW_TABLE ;

   5920  1 000402   200010 221300                    LDX1  ! OUTBLK$,,AUTO
         1 000403   000001 702211                    TSX2  ! 1,X1

      311     5921        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:45   
      312     5922        /*I*  NAME:        SD_SHOW_CARDS
      313     5923              AUTHOR:      Scott S. Sheppard
      314     5924              PURPOSE:     Display Object Deck's Cards
      315     5925              INTERFACE:   SD_WRITE_MSG
      316     5926              INPUT:       BCD#
      317     5927              OUTPUT:      DUP.LINE_VFC
      318     5928                           CUR#
      319     5929              DESCRIPTION: This procedure displays the object deck's $OBJECT
      320     5930                           card, any PATCH cards, and the $DKEND card to the
      321     5931                           user.
      322     5932        */
      323     5933
      324     5934    2   SD_SHOW_CARDS: PROC ;

   5934  1 000404   200010 741300       SD_SHOW_CAR* STX1  ! OUTBLK$,,AUTO

      325     5935
      326     5936        /* Code */
      327     5937
      328     5938    3      DUP.LINE_VFC = %NEXT_WRITE ;

   5938  1 000405   141000 236003                    LDQ     49664,DU
         1 000406   000026 756000 xsym               STQ     DUP+22

      329     5939    3      CALL SD_WRITE_MSG (%T$SD_OBJECT) ;

   5939  1 000407   000013 236000 2                  LDQ     11
         1 000410   200013 756100                    STQ     OPT$+1,,AUTO
         1 000411   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000412   000000 011000                    NOP     0

      330     5940
      331     5941    4      DO CUR# = 0 TO BCD# - 1 ;

   5941  1 000413   000000 450000 xsym               STZ     CUR#
         1 000414   000424 710000 1                  TRA     s:5943+3

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:46   
      332     5942    4         CALL SD_WRITE_MSG (%T$SD_PATCH) ;

   5942  1 000415   000015 236000 2                  LDQ     13
         1 000416   200013 756100                    STQ     OPT$+1,,AUTO
         1 000417   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000420   000000 011000                    NOP     0

      333     5943    4      END /* DO */ ;

   5943  1 000421   000000 235000 xsym               LDA     CUR#
         1 000422   000001 035007                    ADLA    1,DL
         1 000423   000000 755000 xsym               STA     CUR#
         1 000424   000000 236000 xsym               LDQ     CUR#
         1 000425   000000 116000 xsym               CMPQ    BCD#
         1 000426   000415 602000 1                  TNC     s:5942

      334     5944
      335     5945    3      CALL SD_WRITE_MSG (%T$SD_SEPARATOR) ;

   5945  1 000427   000017 236000 2                  LDQ     15
         1 000430   200013 756100                    STQ     OPT$+1,,AUTO
         1 000431   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000432   000000 011000                    NOP     0

      336     5946    3      DUP.LINE_VFC = %SKIP_WRITE ;

   5946  1 000433   142000 236003                    LDQ     50176,DU
         1 000434   000026 756000 xsym               STQ     DUP+22

      337     5947    3      RETURN ;

   5947  1 000435   200010 221300                    LDX1  ! OUTBLK$,,AUTO
         1 000436   000001 702211                    TSX2  ! 1,X1

      338     5948
      339     5949    3   END SD_SHOW_CARDS ;
      340     5950        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:47   
      341     5951        /*I*  NAME:        SD_SHOW_REFERENCES
      342     5952              AUTHOR:      Scott S. Sheppard
      343     5953              PURPOSE:     Displays Catalog References
      344     5954              INTERFACE:   SD_WRITE_MSG
      345     5955                           TOU$DFU_DF_RD_MASTER_CONTROL
      346     5956                           TOU$DFU_DF_RD_MASTER_ENTRY
      347     5957              INPUT:       MASTER_DATA.DECK#
      348     5958                           OBJECT_REFLIST_DATA.NUM_REFS
      349     5959                           OBJECT_REFLIST_DATA.REFS.ME#
      350     5960                           OBJECT_REFLIST_DATA.REFS.CE#
      351     5961              OUTPUT:      MASTER_ENTRY_KEY.DECK#
      352     5962                           MASTER_ENTRY_KEY.ENTRY#
      353     5963                           CATALOG_ENTRY_KEY.ENTRY#
      354     5964                           DUP.LINE_VFC ;
      355     5965              DESCRIPTION: This procedure shows all of the catalog references
      356     5966                           to the object deck.
      357     5967        */
      358     5968        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:48   
      359     5969    2   SD_SHOW_REFERENCES: PROC ALTRET ;

   5969  1 000437   200010 741300       SD_SHOW_REF* STX1  ! OUTBLK$,,AUTO

      360     5970
      361     5971    3      DCL I   UBIN HALF HALIGNED ;
      362     5972
      363     5973        /* Code */
      364     5974
      365     5975    3      DUP.LINE_VFC = %NEXT_WRITE ;

   5975  1 000440   141000 236003                    LDQ     49664,DU
         1 000441   000026 756000 xsym               STQ     DUP+22

      366     5976    3      CALL SD_WRITE_MSG (%T$SD_REFS) ;

   5976  1 000442   000021 236000 2                  LDQ     17
         1 000443   200013 756100                    STQ     OPT$+1,,AUTO
         1 000444   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000445   000000 011000                    NOP     0

      367     5977
      368     5978    3      CALL TOU$DFU_DF_RD_MASTER_CONTROL ALTRET (ERROR) ;

   5978  1 000446   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000447   000000 701000 xent               TSX1    TOU$DFU_DF_RD_MASTER_CONTROL
         1 000450   000521 702000 1                  TSX2    ERROR

      369     5979    3      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;

   5979  1 000451   000000 236000 xsym               LDQ     MASTER_DATA
         1 000452   000011 772000                    QRL     9
         1 000453   000000 552030 xsym               STBQ    MASTER_ENTRY_KEY,'30'O

      370     5980    4      DO I = 0 TO OBJECT_REFLIST_DATA.NUM_REFS - 1 ;

   5980  1 000454   000000 220003                    LDX0    0,DU
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:49   
         1 000455   200011 740100                    STX0    I,,AUTO
         1 000456   000505 710000 1                  TRA     s:5985+3

      371     5981    4         MASTER_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.ME#(I) ;

   5981  1 000457   200011 235100                    LDA     I,,AUTO
         1 000460   777777 375003                    ANA     -1,DU
         1 000461   000020 771000                    ARL     16
         1 000462   000000 100405                    MLR     fill='000'O
         1 000463   000001 000002 xsym               ADSC9   OBJECT_REFLIST_DATA+1,A  cn=0,n=2
         1 000464   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2

      372     5982    4         CALL TOU$DFU_DF_RD_MASTER_ENTRY ALTRET (ERROR) ;

   5982  1 000465   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000466   000000 701000 xent               TSX1    TOU$DFU_DF_RD_MASTER_ENTRY
         1 000467   000521 702000 1                  TSX2    ERROR

      373     5983    4         CATALOG_ENTRY_KEY.ENTRY# = OBJECT_REFLIST_DATA.REFS.CE#(I) ;

   5983  1 000470   200011 235100                    LDA     I,,AUTO
         1 000471   777777 375003                    ANA     -1,DU
         1 000472   000020 771000                    ARL     16
         1 000473   000000 100405                    MLR     fill='000'O
         1 000474   000001 400002 xsym               ADSC9   OBJECT_REFLIST_DATA+1,A  cn=2,n=2
         1 000475   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

      374     5984    4         CALL SD_WRITE_MSG (%T$SD_CATALOG) ;

   5984  1 000476   000023 236000 2                  LDQ     19
         1 000477   200013 756100                    STQ     OPT$+1,,AUTO
         1 000500   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000501   000000 011000                    NOP     0

      375     5985    4      END /* DO */ ;

   5985  1 000502   200011 220100                    LDX0    I,,AUTO
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:50   
         1 000503   000001 621010                    EAX1    1,X0
         1 000504   200011 741100                    STX1    I,,AUTO
         1 000505   200011 236100                    LDQ     I,,AUTO
         1 000506   000022 772000                    QRL     18
         1 000507   000000 116000 xsym               CMPQ    OBJECT_REFLIST_DATA
         1 000510   000457 602000 1                  TNC     s:5981

      376     5986
      377     5987    3      CALL SD_WRITE_MSG (%T$SD_SEPARATOR) ;

   5987  1 000511   000017 236000 2                  LDQ     15
         1 000512   200013 756100                    STQ     OPT$+1,,AUTO
         1 000513   000523 701000 1                  TSX1    SD_WRITE_MSG
         1 000514   000000 011000                    NOP     0

      378     5988    3      DUP.LINE_VFC = %SKIP_WRITE ;

   5988  1 000515   142000 236003                    LDQ     50176,DU
         1 000516   000026 756000 xsym               STQ     DUP+22

      379     5989    3      RETURN ;

   5989  1 000517   200010 221300                    LDX1  ! OUTBLK$,,AUTO
         1 000520   000001 702211                    TSX2  ! 1,X1

      380     5990
      381     5991    3   ERROR:
      382     5992    3      ALTRETURN;

   5992  1 000521   200010 221300       ERROR        LDX1  ! OUTBLK$,,AUTO
         1 000522   000000 702211                    TSX2  ! 0,X1

      383     5993
      384     5994    3   END SD_SHOW_REFERENCES ;
      385     5995        %EJECT ;
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:51   
      386     5996        /*I*  NAME:        SD_WRITE_MSG
      387     5997              AUTHOR:      Scott S. Sheppard
      388     5998              PURPOSE:     Routes Output Information
      389     5999              INTERFACE:   TOU$DU_USER_WRITE
      390     6000                           TOU$DU_PRINTER_WRITE
      391     6001              INPUT:       DUP.BATCH_MODE
      392     6002              OUTPUT:      DUP.MSG_CODE
      393     6003              DESCRIPTION: This procedure writes a message to the user terminal
      394     6004                           (on-line)  or to the edit listing (batch)  depending
      395     6005                           on the mode in which DEER is being run.
      396     6006        */
      397     6007
      398     6008    2   SD_WRITE_MSG: PROC (MSG_CODE) ALTRET ;

   6008  1 000523   200012 741300       SD_WRITE_MSG STX1  ! OPT$,,AUTO

      399     6009
      400     6010    3      DCL MSG_CODE UBIN WORD ALIGNED ;
      401     6011
      402     6012        /* Code */
      403     6013
      404     6014    3      DUP.MSG_CODE = MSG_CODE ;

   6014  1 000524   200013 470500                    LDP0    @MSG_CODE,,AUTO
         1 000525   000000 235100                    LDA     0,,PR0
         1 000526   000020 755000 xsym               STA     DUP+16

      405     6015    3      IF DUP.BATCH_MODE

   6015  1 000527   000000 234000 xsym               SZN     DUP
         1 000530   000535 605000 1                  TPL     s:6017

      406     6016    3      THEN CALL TOU$DU_PRINTER_WRITE ALTRET (ERROR) ;

   6016  1 000531   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000532   000000 701000 xent               TSX1    TOU$DU_PRINTER_WRITE
         1 000533   000542 702000 1                  TSX2    ERROR
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:52   
         1 000534   000540 710000 1                  TRA     s:6018

      407     6017    3      ELSE CALL TOU$DU_USER_WRITE ;

   6017  1 000535   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000536   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         1 000537   000000 011000                    NOP     0

      408     6018    3      RETURN ;

   6018  1 000540   200012 221300                    LDX1  ! OPT$,,AUTO
         1 000541   000001 702211                    TSX2  ! 1,X1

      409     6019
      410     6020    3   ERROR:
      411     6021    3      ALTRETURN ;

   6021  1 000542   200012 221300       ERROR        LDX1  ! OPT$,,AUTO
         1 000543   000000 702211                    TSX2  ! 0,X1

(unnamed)
 Sect OctLoc
   0     000   110116 111117   101060 040040   110124 116104   110115 120103    HNIOA0  HTNDHMPC
   0     004   112061 040040                                                    J1

(unnamed)
 Sect OctLoc
   2     000   000000 000064   000000 006000   000000 000065   000002 006000    ...4.......5....
   2     004   000000 000066   000004 006000   000000 000067   000006 006000    ...6.......7....
   2     010   000000 000075   000010 006000   000000 000070   000012 006000    ...=.......8....
   2     014   000000 000074   000014 006000   000000 000071   000016 006000    ...<.......9....
   2     020   000000 000072   000020 006000   000000 000073   000022 006000    ...:.......;....
      412     6022
      413     6023    3   END SD_WRITE_MSG ;
      414     6024    2   END SD_SHOW_DECK ;
      415     6025    1   END TOU$SHOWDECK ;

PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:53   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$SHOWDECK.
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:54   

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    36-  6025    121    55     1      0  y   y    0   1 TOU$SHOWDECK
  1  5651-  5666     11     0     1     37  y   y    0     2 SD_INIT_DUP
  2  5688-  5811     27    11     1     60  y y y    0     2 SD_COMMAND_SETUP
  3  5836-  5859     14     0     1    210  y y y    0     2 SD_FIND_DECK
  4  5870-  6024     55     0     1    265  y y y    0     2 SD_SHOW_DECK
  5  5905-  5920     12     0     1    316  y   y    0      3 SD_SHOW_TABLE
  6  5934-  5949      9     0     1    404  y   y    0      3 SD_SHOW_CARDS
  7  5969-  5994     15     1     1    437  y y y    0      3 SD_SHOW_REFERENCES
  8  6008-  6023      7     2     1    523  y y y    1      3 SD_WRITE_MSG
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:55   

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              36   1      0 Proc    0                              5616   1      2 Call    0
            5617   1      4 Call    0                              5619   1      6 Call    0
            5620   1     11 Call    0                              5621   1     13 Call    0
            5622   1     15 Call    0                              5625   1     20 Assign  0
            5626   1     22 Call    0                              5627   1     25 Return  0
            5630   1     26 Call    0 ERROR_RETURN                 5631   1     31 Assign  0
            5632   1     33 Call    0                              5633   1     36 Return  0
            5651   1     37 Proc    1                              5655   1     40 Assign  1
            5656   1     42 Assign  1                              5657   1     44 Assign  1
            5658   1     46 Assign  1                              5659   1     50 Assign  1
            5660   1     52 Assign  1                              5661   1     54 Assign  1
            5662   1     55 Assign  1                              5663   1     56 Assign  1
            5664   1     57 Return  1                              5688   1     60 Proc    2
            5780   1     61 DoIndx  2                           $  5781   1     63 Assign  2
      $$$$  5782   1     67 DoCase  2                              5783   1    104 Case    2
         $  5784   1    104 Assign  2                              5785   1    113 Case    2
            5786   1    113 Assign  2                           $  5787   1    115 Assign  2
            5788   1    123 Assign  2                              5789   1    126 Call    2
            5790   1    132 Case    2                              5791   1    132 DoIndx  2
         $  5792   1    134 Assign  2                          $$  5793   1    140 DoCase  2
            5794   1    150 Case    2                              5795   1    150 Assign  2
            5796   1    153 Case    2                              5797   1    153 Assign  2
            5798   1    155 EndCse  2                          $$  5799   1    155 EndInd  2
            5800   1    166 EndCse  2                          $$  5801   1    166 EndInd  2
            5803   1    177 If      2                              5805   1    201 Call    2
            5806   1    204 Return  2                              5809   1    206 Altret  2 ERROR
            5836   1    210 Proc    3                              5840   1    211 Assign  3
            5841   1    214 Call    3                              5843   1    217 Assign  3
         $  5844   1    222 Assign  3                              5845   1    232 Call    3
       $$$  5846   1    235 Assign  3                              5847   1    243 Assign  3
            5849   1    246 Assign  3                              5850   1    251 Call    3
            5851   1    254 Return  3                              5854   1    256 Assign  3 NOT_FOUND
            5855   1    260 Call    3                              5857   1    263 Altret  3 ERROR
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:56   
            5870   1    265 Proc    4                              5874   1    266 Assign  4
            5875   1    270 Call    4                              5876   1    274 If      4
            5877   1    276 Call    4                              5879   1    300 Call    4
            5880   1    302 If      4                              5881   1    304 Call    4
            5883   1    306 Assign  4                              5884   1    310 Return  4
            5887   1    312 Assign  4 ERROR                        5888   1    314 Altret  4
            5905   1    316 Proc    5                       $$$$$  5909   1    317 Do Sel  5
            5910   1    336 Select  5                        $$$$  5911   1    336 If      5
            5912   1    357 Call    5                              5913   1    364 Call    5
            5914   1    371 Select  5                              5915   1    371 Call    5
            5916   1    376 Select  5                              5917   1    376 Call    5
            5918   1    402 EndSel  5                              5920   1    402 EndPrc  5
            5934   1    404 Proc    6                              5938   1    405 Assign  6
            5939   1    407 Call    6                              5941   1    413 DoIndx  6
            5942   1    415 Call    6                              5943   1    421 EndInd  6
            5945   1    427 Call    6                              5946   1    433 Assign  6
            5947   1    435 Return  6                              5969   1    437 Proc    7
            5975   1    440 Assign  7                              5976   1    442 Call    7
            5978   1    446 Call    7                              5979   1    451 Assign  7
            5980   1    454 DoIndx  7                           $  5981   1    457 Assign  7
            5982   1    465 Call    7                           $  5983   1    470 Assign  7
            5984   1    476 Call    7                           $  5985   1    502 EndInd  7
            5987   1    511 Call    7                              5988   1    515 Assign  7
            5989   1    517 Return  7                              5992   1    521 Altret  7 ERROR
            6008   1    523 Proc    8                              6014   1    524 Assign  8
            6015   1    527 If      8                              6016   1    531 Call    8
            6017   1    535 Call    8                              6018   1    540 Return  8
            6021   1    542 Altret  8 ERROR

  **** Statement type totals  ****

    37 Assign    33 Call       5 If         5 Case       9 Return     5 Altret
     1 Do Sel     1 EndSel     3 Select     4 DoIndx     2 DoCase     4 EndInd
     2 EndCse     9 Proc       1 EndPrc     7 Labels

 # major stmts=  100 Code/major= 3.56 # stmts=  121 Code/stmt= 2.94  Point total=100.9
 Cost/major stmt=  2.9 Cost/stmt=  2.3 Total cost=    290.0
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:57   

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$
   6-8  $$
  8-10
 10-12  $
 12-14
 14-16
 16-18
 18-20
 20-22
 22-??
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:58   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w PTR         r     1 @MSG_CODE                 11-0-0/h UBIN(18)    r     1 I
    *0-0-0/w UBIN        r     1 MSG_CODE                  11-0-0/w UBIN        r     1 OPT#
    12-0-0/w PTR         r     1 OPT$                       7-0-0/w UBIN        r     1 OUTBLK#
    10-0-0/w PTR         r     1 OUTBLK$                    3-0-0/c BIT         r     1 SHOW_ATTRIBUTES
     4-0-0/c BIT         r     1 SHOW_REFERENCES

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 BCD#                       0-0-0/w UBIN        r     1 CUR#
     0-0-0/w CHAR(84)    r     1 DKEND_

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(45)    r     1 BCD_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(756)   r     1 DKEND
     0-0-0/c STRC(720)   r         2 BCD
    20-2-0/c CHAR(6)     r          3 REVISION

     0-0-0/d STRC(5220)  r     1 DUP
     0-0-0/c BIT         r         2 BATCH_MODE
    17-0-0/w PTR         r         2 CMD$
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:59   
    20-0-0/w UBIN        r         2 MSG_CODE
    21-0-0/w UBIN        r         2 HDR_CODE
    26-0-0/c CHAR        r         2 LINE_VFC
    56-0-0/c BIT         r         2 FORCE_NEW_PAGE
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$
   104-0-0/w STRC(504)   r         2 DF
   104-0-0/c BIT         r          3 ENTERED
   104-2-0/c BIT         r          3 REPORT_ERROR
   105-0-0/w UBIN        r          3 OPEN_TYPE
   106-0-0/w UBIN        r          3 CLOSE_TYPE
   142-0-0/c CHAR(40)    r         2 HOLD_AREA
   154-0-0/w UBIN        r         2 HOLD_AREA_LGTH
   155-0-0/c BIT         r         2 BREAK_TERMINATE

     0-0-0/c STRC(162)   r     1 ID
     1-2-0/c CHAR(6)     r         2 REVISION

     0-0-0/w STRC(72)    r     1 MASTER_DATA
     0-0-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(864)   r     1 OBJECT
     0-0-0/w STRC(720)   r         2 BCD
     3-3-0/c CHAR(6)     r          3 LIBRARY
     5-2-0/c CHAR        r          3 CLASS
    24-0-0/b UBIN(18)    r         2 DECK#
    24-2-0/b UBIN(18)    r         2 BINARY_COUNT
    25-0-0/b UBIN(18)    r         2 TOTAL_COUNT

     0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-1-0/c CHAR(23)    r         2 DATA

     0-0-0/w STRC(576)   r     1 OBJECT_REFLIST_DATA
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:60   
     0-0-0/b UBIN        r         2 NUM_REFS
     1-0-0/b STRC        r         2 REFS(0:14)
     1-0-0/b UBIN(18)    r          3 ME#
     1-2-0/b UBIN(18)    r          3 CE#

     0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
     0-1-0/b UBIN(18)    r         2 DECK#

     0-0-0/c STRC(207)   r     1 OBJECT_SEARCH_KEY
     0-0-0/c CHAR(23)    r         2 DATA


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(84)    r     1 BCD_B(0:199)

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-2-0/h UBIN(18)    r         2 CODE
     1-0-0/h UBIN(18)    r         2 NSUBLKS
     3-0-0/b PTR         r         2 SUBLK$(0:0)

     0-0-0/w ASTR(153)   r     1 OUT$SYM
     4-0-0/c UBIN(9)     r         2 COUNT
     4-1-0/c ACHR        r         2 TEXT



   Procedure TOU$SHOWDECK requires 356 words for executable code.
   Procedure TOU$SHOWDECK requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:61   

    No errors detected in file TOU$SHOWDECK.:E05TSI    .
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:62   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:63   
          MINI XREF LISTING

BCD#
      5592**DCL      5844<<ASSIGN   5846>>ASSIGN   5941>>DOINDEX
BCD_B
      5372**DCL      5846>>ASSIGN
BCD_KEY.DECK#
      5386**DCL      5843<<ASSIGN
CATALOG_ENTRY_KEY.ENTRY#
      5401**DCL      5983<<ASSIGN
CUR#
      5593**DCL      5941<<DOINDEX
DKEND
      5429**DCL      5442--REDEF
DKEND.BCD
      5430**DCL      5440--REDEF
DKEND.BCD.REVISION
      5437**DCL      5847>>ASSIGN
DKEND_
      5442**DCL      5846<<ASSIGN
DUP.BATCH_MODE
      5231**DCL      6015>>IF
DUP.BCD_V.PTR$
      5303**DCL      5372--IMP-PTR  5846>>ASSIGN
DUP.BREAK_TERMINATE
      5347**DCL      5874<<ASSIGN   5883<<ASSIGN   5887<<ASSIGN
DUP.CMD$
      5247**DCL      5780>>DOINDEX  5781>>ASSIGN
DUP.DF.CLOSE_TYPE
      5315**DCL      5661<<ASSIGN
DUP.DF.ENTERED
      5307**DCL      5658<<ASSIGN   5786<<ASSIGN   5803>>IF
DUP.DF.OPEN_TYPE
      5313**DCL      5659<<ASSIGN
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:64   
DUP.DF.REPORT_ERROR
      5311**DCL      5660<<ASSIGN
DUP.FORCE_NEW_PAGE
      5271**DCL      5657<<ASSIGN
DUP.HDR_CODE
      5252**DCL      5655<<ASSIGN
DUP.HOLD_AREA
      5342**DCL      5787<<ASSIGN
DUP.HOLD_AREA_LGTH
      5344**DCL      5788<<ASSIGN
DUP.LINE_VFC
      5261**DCL      5656<<ASSIGN   5938<<ASSIGN   5946<<ASSIGN   5975<<ASSIGN   5988<<ASSIGN
DUP.LOG_V
      5329**DCL      5334--REDEF
DUP.MSG_CODE
      5250**DCL      5625<<ASSIGN   5631<<ASSIGN   5854<<ASSIGN   6014<<ASSIGN
ERROR IN PROCEDURE SD_COMMAND_SETUP
      5809**LABEL    5789--CALLALT  5805--CALLALT
ERROR IN PROCEDURE SD_FIND_DECK
      5857**LABEL    5845--CALLALT  5850--CALLALT
ERROR IN PROCEDURE SD_SHOW_DECK
      5887**LABEL    5875--CALLALT  5881--CALLALT
ERROR IN PROCEDURE SD_SHOW_REFERENCES
      5992**LABEL    5978--CALLALT  5982--CALLALT
ERROR IN PROCEDURE SD_WRITE_MSG
      6021**LABEL    6016--CALLALT
ERROR_RETURN
      5630**LABEL    5617--CALLALT  5619--CALLALT  5620--CALLALT  5621--CALLALT  5622--CALLALT
I IN PROCEDURE SD_SHOW_REFERENCES
      5971**DCL      5980<<DOINDEX  5981>>ASSIGN   5983>>ASSIGN
ID.REVISION
      5414**DCL      5415--REDEF    5847<<ASSIGN
MASTER_DATA.DECK#
      5454**DCL      5979>>ASSIGN
MASTER_ENTRY_KEY.DECK#
      5469**DCL      5979<<ASSIGN
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:65   
MASTER_ENTRY_KEY.ENTRY#
      5470**DCL      5981<<ASSIGN
MSG_CODE IN PROCEDURE SD_WRITE_MSG
      6010**DCL      6008--PROC     6014>>ASSIGN
NOT_FOUND IN PROCEDURE SD_FIND_DECK
      5854**LABEL    5841--CALLALT
OBJECT.BCD
      5482**DCL      5504--REDEF    5527--REDEF
OBJECT.BCD.CLASS
      5487**DCL      5911>>IF       5911>>IF
OBJECT.BCD.LIBRARY
      5485**DCL      5909>>DOSELCT
OBJECT.BINARY_COUNT
      5529**DCL      5844>>ASSIGN
OBJECT.DECK#
      5528**DCL      5843>>ASSIGN   5849>>ASSIGN
OBJECT.NIO_BCD.X_OF_N
      5515**DCL      5520--REDEF
OBJECT.TOTAL_COUNT
      5530**DCL      5844>>ASSIGN
OBJECT_KEY.DATA
      5546**DCL      5840<<ASSIGN
OBJECT_REFLIST_DATA.NUM_REFS
      5572**DCL      5980>>DOINDEX
OBJECT_REFLIST_DATA.REFS.CE#
      5575**DCL      5983>>ASSIGN
OBJECT_REFLIST_DATA.REFS.ME#
      5574**DCL      5981>>ASSIGN
OBJECT_REFLIST_KEY.DECK#
      5559**DCL      5849<<ASSIGN
OBJECT_SEARCH_KEY.DATA
      5587**DCL      5784<<ASSIGN   5840>>ASSIGN
OPT# IN PROCEDURE SD_COMMAND_SETUP
      5692**DCL      5791<<DOINDEX  5792>>ASSIGN
OPT$ IN PROCEDURE SD_COMMAND_SETUP
      5693**DCL      5792<<ASSIGN   5793>>DOCASE
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:66   
OUT$BLK.CODE IN PROCEDURE SD_COMMAND_SETUP
      5708**DCL      5782>>DOCASE   5793>>DOCASE
OUT$BLK.NSUBLKS IN PROCEDURE SD_COMMAND_SETUP
      5712**DCL      5780>>DOINDEX  5791>>DOINDEX
OUT$BLK.SUBLK$ IN PROCEDURE SD_COMMAND_SETUP
      5733**DCL      5781>>ASSIGN   5792>>ASSIGN
OUT$SYM.COUNT IN PROCEDURE SD_COMMAND_SETUP
      5769**DCL      5772--IMP-SIZ  5784>>ASSIGN   5787>>ASSIGN   5788>>ASSIGN
OUT$SYM.TEXT IN PROCEDURE SD_COMMAND_SETUP
      5772**DCL      5784>>ASSIGN   5787>>ASSIGN
OUTBLK# IN PROCEDURE SD_COMMAND_SETUP
      5690**DCL      5780<<DOINDEX  5781>>ASSIGN
OUTBLK$ IN PROCEDURE SD_COMMAND_SETUP
      5691**DCL      5781<<ASSIGN   5782>>DOCASE   5784>>ASSIGN   5784>>ASSIGN   5787>>ASSIGN   5787>>ASSIGN
      5788>>ASSIGN   5791>>DOINDEX  5792>>ASSIGN
SD_COMMAND_SETUP
      5688**PROC     5617--CALL
SD_FIND_DECK
      5836**PROC     5620--CALL
SD_INIT_DUP
      5651**PROC     5616--CALL
SD_SHOW_CARDS IN PROCEDURE SD_SHOW_DECK
      5934**PROC     5879--CALL
SD_SHOW_DECK
      5870**PROC     5621--CALL
SD_SHOW_REFERENCES IN PROCEDURE SD_SHOW_DECK
      5969**PROC     5881--CALL
SD_SHOW_TABLE IN PROCEDURE SD_SHOW_DECK
      5905**PROC     5877--CALL
SD_WRITE_MSG IN PROCEDURE SD_SHOW_DECK
      6008**PROC     5875--CALL     5912--CALL     5913--CALL     5915--CALL     5917--CALL     5939--CALL
      5942--CALL     5945--CALL     5976--CALL     5984--CALL     5987--CALL
SHOW_ATTRIBUTES
      5594**DCL      5662<<ASSIGN   5795<<ASSIGN   5876>>IF
SHOW_REFERENCES
      5595**DCL      5663<<ASSIGN   5797<<ASSIGN   5880>>IF
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:67   
TOU$DFU_DF_CHECK_FOR_KEY
      5610**DCL-ENT  5841--CALL
TOU$DFU_DF_RD_BCD_CARDS
      5608**DCL-ENT  5845--CALL
TOU$DFU_DF_RD_MASTER_CONTROL
      5606**DCL-ENT  5978--CALL
TOU$DFU_DF_RD_MASTER_ENTRY
      5607**DCL-ENT  5982--CALL
TOU$DFU_DF_RD_OBJECT_REFLIST
      5609**DCL-ENT  5850--CALL
TOU$DU_CLOSE_DF
      5601**DCL-ENT  5622--CALL     5630--CALL
TOU$DU_OPEN_DF
      5600**DCL-ENT  5619--CALL
TOU$DU_PRINTER_WRITE
      5604**DCL-ENT  6016--CALL
TOU$DU_SET_DF_FID
      5599**DCL-ENT  5789--CALL     5805--CALL
TOU$DU_USER_WRITE
      5603**DCL-ENT  5626--CALL     5632--CALL     5855--CALL     6017--CALL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:68   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:69   
              FULL UREF LISTING

BCD_KEY
      5384**DCL
BCD_KEY.CARD#
      5387**DCL
BCD_KEY.SIZE
      5385**DCL
CATALOG_ENTRY_KEY
      5398**DCL
CATALOG_ENTRY_KEY.DECK#
      5400**DCL
CATALOG_ENTRY_KEY.SIZE
      5399**DCL
DKEND.BCD.CONTROL
      5431**DCL
DKEND.BCD.DATE
      5436**DCL
DKEND.BCD.LBL
      5438**DCL
DKEND.BCD.MOD_DATE
      5435**DCL
DKEND.BCD.SEQ
      5439**DCL
DKEND.BCD.TTL_DATE
      5434**DCL
DKEND.BCD.TYPE
      5432**DCL
DKEND.BCD_
      5440**DCL
DKEND.CHECKSUM
      5441**DCL
DUP
      5229**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:70   
DUP.BCD_V
      5300**DCL
DUP.BINARY_V
      5295**DCL
DUP.BINARY_V.PTR$
      5298**DCL
DUP.BOTTOM_LINE#
      5267**DCL
DUP.BREAK_DISABLED
      5349**DCL
DUP.BREAK_RETURN
      5351**DCL
DUP.CPU_TYPE
      5360**DCL
DUP.CURRENT_LINE#
      5265**DCL
DUP.CURRENT_PAGE#
      5263**DCL
DUP.DF
      5306**DCL
DUP.DF.FID
      5317**DCL
DUP.DF.FID_LGTH
      5319**DCL
DUP.DF.NO_EXIST
      5309**DCL
DUP.DS_V
      5240**DCL
DUP.ERROR_IMAGE
      5269**DCL
DUP.FAULT_ERROR
      5235**DCL
DUP.IFAD
      5274**DCL
DUP.IFAD.CONFIG_TAB
      5283**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:71   
DUP.IFAD.DEVICE_INPUT
      5279**DCL
DUP.IFAD.DRIVE_NUMBER
      5289**DCL
DUP.IFAD.ENTERED
      5277**DCL
DUP.IFAD.FID
      5291**DCL
DUP.IFAD.FID_LGTH
      5293**DCL
DUP.IFAD.IMU_NUMBER
      5287**DCL
DUP.IFAD.IMU_TAB
      5281**DCL
DUP.IFAD.ME_ALLOWED
      5275**DCL
DUP.IFAD.NUM_VOLUMES
      5285**DCL
DUP.LOG
      5322**DCL
DUP.LOG.CATALOG
      5325**DCL
DUP.LOG.DECK
      5327**DCL
DUP.LOG.TYPE
      5323**DCL
DUP.LOG_V.PTR$
      5332**DCL
DUP.LOG_V_
      5334**DCL
DUP.MSG_V
      5256**DCL
DUP.MSG_V.PTR$
      5259**DCL
DUP.NUM_LINES
      5254**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:72   
DUP.NUM_WORDS
      5238**DCL
DUP.PROCESS_COMPLETE
      5233**DCL
DUP.RESPONSE
      5243**DCL
DUP.RESPONSE_LGTH
      5245**DCL
DUP.SITE_ID
      5358**DCL
DUP.SITE_NAME
      5353**DCL
DUP.SITE_NAME.LGTH
      5354**DCL
DUP.SITE_NAME.TEXT
      5356**DCL
DUP.TEMP
      5336**DCL
DUP.TEMP.CLOSE_TYPE
      5339**DCL
DUP.TEMP.OPEN_TYPE
      5337**DCL
ID
      5412**DCL
ID.ID
      5413**DCL
ID.REV
      5415**DCL
ID.REV.LEVEL
      5417**DCL
ID.USAGE
      5418**DCL
MASTER_DATA
      5453**DCL
MASTER_DATA.ENTRY_COUNT
      5455**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:73   
MASTER_DATA.RFU
      5456**DCL
MASTER_ENTRY_KEY
      5467**DCL
MASTER_ENTRY_KEY.SIZE
      5468**DCL
OBJECT
      5481**DCL
OBJECT.BCD.ASSEMBLER
      5499**DCL
OBJECT.BCD.CONTROL
      5483**DCL
OBJECT.BCD.DATE
      5501**DCL
OBJECT.BCD.DONT_APPLY
      5488**DCL
OBJECT.BCD.DONT_APPLY.CP6
      5490**DCL
OBJECT.BCD.DONT_APPLY.DPS8000
      5493**DCL
OBJECT.BCD.DONT_APPLY.DPS90
      5492**DCL
OBJECT.BCD.FILENAME
      5497**DCL
OBJECT.BCD.GECALL
      5500**DCL
OBJECT.BCD.LBL
      5502**DCL
OBJECT.BCD.LOAD_TYPE
      5486**DCL
OBJECT.BCD.MODEL
      5496**DCL
OBJECT.BCD.SEQ
      5503**DCL
OBJECT.BCD.TYPE
      5484**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:74   
OBJECT.BCD_
      5527**DCL
OBJECT.CHECKSUM
      5533**DCL
OBJECT.DECK_CHECKSUM
      5532**DCL
OBJECT.LOAD_SIZE
      5531**DCL
OBJECT.NIO_BCD
      5504**DCL
OBJECT.NIO_BCD.ASSEMBLER
      5521**DCL
OBJECT.NIO_BCD.CLASS
      5509**DCL
OBJECT.NIO_BCD.CONTROL
      5505**DCL
OBJECT.NIO_BCD.DATA
      5511**DCL
OBJECT.NIO_BCD.EQUIP_TYPE
      5513**DCL
OBJECT.NIO_BCD.FILE_NAME
      5514**DCL
OBJECT.NIO_BCD.LBL
      5525**DCL
OBJECT.NIO_BCD.LIBRARY
      5507**DCL
OBJECT.NIO_BCD.LOAD_TYPE
      5508**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB
      5522**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB
      5523**DCL
OBJECT.NIO_BCD.SEQ
      5526**DCL
OBJECT.NIO_BCD.TYPE
      5506**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:75   
OBJECT.NIO_BCD.X_OF_N.N
      5519**DCL
OBJECT.NIO_BCD.X_OF_N.X
      5517**DCL
OBJECT.NIO_BCD.X_OF_N_
      5520**DCL
OBJECT_KEY
      5544**DCL
OBJECT_KEY.SIZE
      5545**DCL
OBJECT_REFLIST_DATA
      5571**DCL
OBJECT_REFLIST_DATA.REFS
      5573**DCL
OBJECT_REFLIST_KEY
      5557**DCL
OBJECT_REFLIST_KEY.ENTRY#
      5560**DCL
OBJECT_REFLIST_KEY.SIZE
      5558**DCL
OBJECT_SEARCH_KEY
      5586**DCL
OUT$BLK IN PROCEDURE SD_COMMAND_SETUP
      5700**DCL
OUT$BLK.CPOS IN PROCEDURE SD_COMMAND_SETUP
      5726**DCL
OUT$BLK.NDTYPE IN PROCEDURE SD_COMMAND_SETUP
      5703**DCL
OUT$BLK.SCRITCH IN PROCEDURE SD_COMMAND_SETUP
      5716**DCL
OUT$BLK.TEMP IN PROCEDURE SD_COMMAND_SETUP
      5701**DCL
OUT$SYM IN PROCEDURE SD_COMMAND_SETUP
      5746**DCL
OUT$SYM.CODE IN PROCEDURE SD_COMMAND_SETUP
      5752**DCL
PL6.E3A0      #001=TOU$SHOWDECK File=TOU$SHOWDECK.:E05TSI                        WED 07/30/97 06:51 Page:76   
OUT$SYM.CPOS IN PROCEDURE SD_COMMAND_SETUP
      5761**DCL
OUT$SYM.NDTYPE IN PROCEDURE SD_COMMAND_SETUP
      5749**DCL
OUT$SYM.NSUBLKS IN PROCEDURE SD_COMMAND_SETUP
      5755**DCL
OUT$SYM.SCRITCH IN PROCEDURE SD_COMMAND_SETUP
      5758**DCL
OUT$SYM.TEMP IN PROCEDURE SD_COMMAND_SETUP
      5747**DCL
OUT$SYM.TEXTC$ IN PROCEDURE SD_COMMAND_SETUP
      5764**DCL
TOU$SHOWDECK
        36**PROC
