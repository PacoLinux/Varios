VERSION E05

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:1    
        1        1        /*M* QQB$PROFILE - Process the PROFILE command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        QQB$PROFILE: PROC;
        8        8        /*P*     NAME:     QQB$PROFILE
        9        9                 PURPOSE:  To handle the PROFILE command
       10       10                 DESCRIPTION:
       11       11                           This routine takes parsed nodes and will either
       12       12                           set a profile for a TP station, or inquire a
       13       13                           profile for a TP station.
       14       14                 REFERENCE:  See the TP ADMINISTRATOR GUIDE for a description
       15       15                             of the command.
       16       16                                                                                      */
       17       17        /*X* DDA */
       18       18        /* */
       19       19        %INCLUDE Q_PAGE_C;
       20       51        %SET LISTEXP = '1'B;
       21       52        %PAGE(ARG="Includes");

                69        /***************************************************************************
                70         *                                                                         *
                71         *                                  Includes                               *
                72         *                                                                         *
                73         ***************************************************************************/

       22       77        %INCLUDE CP_6;
       23      158        %INCLUDE B_ERRORS_C;
       24     1285        %INCLUDE QQ_SUBS_C;
       25     1477        %INCLUDE XU_MACRO_C;
       26     4583        %INCLUDE KC$CGBLK;
       27     4631        %INCLUDE KL_SUPER_C;
       28     7533        %INCLUDE QQ_MACROS_C;
       29     7958        %INCLUDE QQ_DATA_R;
       30     8204        %INCLUDE QQ_PERR_C;
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:2    
       31     8365        %INCLUDE QQ_SUPER_C;
       32     8420        %INCLUDE Q_ERRCODE_C;
       33     8443        %PAGE(ARG="Externally defined routines");

              8460    1   /***************************************************************************
              8461    1    *                                                                         *
              8462    1    *                        Externally defined routines                      *
              8463    1    *                                                                         *
              8464    1    ***************************************************************************/

       34     8468    1   DCL QQC$BLDMSG_BLK ENTRY(1);
       35     8469    1   DCL QQC$BLDMSG ENTRY(1);
       36     8470        %PAGE(ARG="Based");

              8487    1   /***************************************************************************
              8488    1    *                                                                         *
              8489    1    *                                   Based                                 *
              8490    1    *                                                                         *
              8491    1    ***************************************************************************/

       37     8495        %PARSE$OUT(STCLASS=BASED);
       38     8540        %PARSE$SYM(STCLASS=BASED);
       39     8578        %TP$STATION(STCLASS=BASED);
       40     8651        %B$TCB;
       41     8654        %B$ALT;
       42     8662        %F$DCB;
       43     8719        %PAGE(ARG="Symrefs");

              8736    1   /***************************************************************************
              8737    1    *                                                                         *
              8738    1    *                                  Symrefs                                *
              8739    1    *                                                                         *
              8740    1    ***************************************************************************/

       44     8744    1   DCL B$TCB$ PTR SYMREF;
       45     8745        %PAGE(ARG="Auto");

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:3    
              8762    1   /***************************************************************************
              8763    1    *                                                                         *
              8764    1    *                                    Auto                                 *
              8765    1    *                                                                         *
              8766    1    ***************************************************************************/

       46     8770    1   DCL BUFFER CHAR(1024);
       47     8771    1   DCL 1 PROFILE,
       48     8772    1        2 SIZE UBIN(9) UNAL,
       49     8773    1        2 TEXT CHAR(11);
       50     8774        %MSGBLK;
       51     8864    1   DCL SUBLK$ PTR;
       52     8865    1   DCL ENQ_FLAG SBIN;
       53     8866    1   DCL M$HLP$ PTR;
       54     8867        %KL_DREC(NAME=KL@DREC, STCLASS=AUTO, LAST=",");
       55     8980        %KC$CGID(LVL=2, STCLASS=AUTO, LAST=",");
       56     9006        %QQ$LOGON(LVL=2, STCLASS=AUTO, LAST=";");
       57     9042        %PAGE(ARG="FPTs");

              9059    1   /***************************************************************************
              9060    1    *                                                                         *
              9061    1    *                                    FPTs                                 *
              9062    1    *                                                                         *
              9063    1    ***************************************************************************/

       58     9067        %FPT_PROFILE(DCB=M$CG, STATION=VLP_STATION);
       59     9088        %FPT_READ(DCB=M$HLP, KEY=VLP_KEY, KEYS=YES);
       60     9127        %FPT_WRITE(DCB=M$HLP, KEY=VLP_KEY);
       61     9158        %FPT_OPEN(DCB=M$HLP, ASN=FILE, FUN=UPDATE);
       62     9267        %FPT_CLOSE(DCB=M$HLP, DISP=SAVE);
       63     9309        %FPT_ENQ(DCB=M$HLP, SHARE=NONE, RNAME=VLP_KEY);
       64     9327        %FPT_DEQ(DCB=M$HLP, RNAME=VLP_KEY);
       65     9344        %FPT_GLINEATTR(DCB=M$CG, STATION=VLP_STATION, LINEATTR=VLP_LINEATTR);
       66     9369        %PAGE(ARG="VLPs");

              9386    1   /***************************************************************************
              9387    1    *                                                                         *
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:4    
              9388    1    *                                    VLPs                                 *
              9389    1    *                                                                         *
              9390    1    ***************************************************************************/

       67     9394        %VLP_STATION(STCLASS=STATIC);
       68     9421    1   DCL 1 VLP_KEY STATIC,
       69     9422    1        2 L# UBIN(9) UNAL,
       70     9423    1        2 STATION CHAR(8),
       71     9424    1        2 UNAME   CHAR(8);
       72     9425
       73     9426    1   DCL POS UBIN WORD;   /* To determine where UNAME really ends */
       74     9427
       75     9428        %VLP_LINEATTR(STCLASS=STATIC);
       76     9450        %PAGE(ARG="DCBs");

              9467    1   /***************************************************************************
              9468    1    *                                                                         *
              9469    1    *                                    DCBs                                 *
              9470    1    *                                                                         *
              9471    1    ***************************************************************************/

       77     9475    1   DCL M$CG DCB;
       78     9476    1   DCL M$HLP DCB;
       79     9477        %PAGE(ARG="Error Codes", PAGE=YES);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:5    
              9494    1   /***************************************************************************
              9495    1    *                                                                         *
              9496    1    *                                Error Codes                              *
              9497    1    *                                                                         *
              9498    1    ***************************************************************************/

       80     9502        %ERRCODE(NAME=CODE_BADPRO, CODE#=%E$BADPRO, FCG#=%FCG_QQ, MID#=%MID_B);
       81     9509        %ERRCODE(NAME=CODE_PROFILE, CODE#=%E$PROFILE, FCG#=%FCG_QQ, MID#=%MID_B);
       82     9516        %ERRCODE(NAME=CODE_TRY_PROFILE, CODE#=%E$TRY_PROFILE, FCG#=%FCG_QQ, MID#=%MID_B);
       83     9523        /*E*       ERROR: QQB-E$BADPRO-C
       84     9524
       85     9525                 MESSAGE: PROFILES must be 1 to 11 characters long.
       86     9526             DESCRIPTION: The user specified a profile that was too long.
       87     9527        */
       88     9528        /*E*       ERROR: QQB-E$PROFILE-C
       89     9529
       90     9530                 MESSAGE: PROFILE:  %U1
       91     9531             DESCRIPTION: Display for PROFILE
       92     9532        */
       93     9533        /*E*       ERROR: QQB-E$TRY_PROFILE-C
       94     9534                 MESSAGE: Unable to change your profile now.  Please try again.
       95     9535             DESCRIPTION: If for instance, the :HLP is busy we recommend
       96     9536                          that the profile change be tried later.
       97     9537        */
       98     9538        %PAGE(ARG="Description", PAGE=YES);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:6    
              9555    1   /***************************************************************************
              9556    1    *                                                                         *
              9557    1    *                                Description                              *
              9558    1    *                                                                         *
              9559    1    ***************************************************************************/

       99     9563        /*D*     NAME:     QQB$PROFILE
      100     9564                 CALL:     CALL QQB$PROFILE;
      101     9565                 INTERFACE:
      102     9566                      QQC$BLDMSG_BLK, QQC$BLDMSG
      103     9567                      M$PROFILE, M$OPEN, M$ENQ, M$READ, M$DEQ, M$CLOSE,
      104     9568                      M$GLINEATTR
      105     9569                 INPUT:    QQ_CMDBLK.OUT$ points to the parse nodes
      106     9570                 OUTPUT:   The station's profile is set, or the current
      107     9571                           profile is displayed.
      108     9572                 DESCRIPTION:
      109     9573                      1).  First, we set the user's station where the command
      110     9574                           came from, and where the information will
      111     9575                           eventually go.
      112     9576                      2).  The nodes are checked to see if the user is setting
      113     9577                           a profile.
      114     9578                           A).  If he is, then set up the profile for the
      115     9579                                station.
      116     9580                           B).  If the user specified PERM, then we have to
      117     9581                                make the change in :HLP.
      118     9582                                a).  We open :HLP and enqueue on the station
      119     9583                                     name.
      120     9584                                b).  We read the user's record, using the
      121     9585                                     station name as the key.  Then we change
      122     9586                                     the profile in the record and write it
      123     9587                                     back to :HLP.
      124     9588                      3).  If the user asked to display the profile, then
      125     9589                           we use M$GLINEATTR to obtain the user's profile.
      126     9590                      4).  If there were any problems, then we make sure
      127     9591                           everything in dequeued and closed.
      128     9592                      5).  If the open of :HLP failed, then it was probably
      129     9593                           a temporary problem, and we tell the user to try
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:7    
      130     9594                           again later.
      131     9595                                                                                      */
      132     9596        %PAGE(ARG="QQB$PROFILE", PAGE=YES);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:8    
              9613    1   /***************************************************************************
              9614    1    *                                                                         *
              9615    1    *                                QQB$PROFILE                              *
              9616    1    *                                                                         *
              9617    1    ***************************************************************************/

      133     9621    1          VLP_STATION.STATION# = QQ_CMDBLK.S$->TP$STATION.ID;
      134     9622    1          SUBLK$ = QQ_CMDBLK.OUT$->OUT$BLK.SUBLK$(0);
      135     9623        /* */
      136     9624    1          IF QQ_CMDBLK.OUT$->OUT$BLK.NSUBLKS > 0 THEN
      137     9625    2             DO;   /* GET THE PROFILE */
      138     9626    2             PROFILE.SIZE = SUBLK$->OUT$SYM.COUNT;
      139     9627        /* */
      140     9628    2             IF PROFILE.SIZE > 11 THEN
      141     9629    3                DO;   /* SIZE ERROR */
      142     9630    3                QQ_CMDBLK.MINOR_ERR = CODE_BADPRO;
      143     9631    3                CALL QQC$BLDMSG_BLK(MSGBLK);
      144     9632    3                CALL QQC$BLDMSG(MSGBLK);
      145     9633    3                RETURN;
      146     9634    3                END;
      147     9635        /* */
      148     9636    2             PROFILE.TEXT = SUBLK$->OUT$SYM.TEXT;
      149     9637    2             FPT_PROFILE.BUF_ = VECTOR(BUFFER);
      150     9638    2             FPT_PROFILE.PROFILE_ = VECTOR(PROFILE);
      151     9639        /*        CALL M$PROFILE(FPT_PROFILE) ALTRET(ERR);    */
      152     9640        /* */
      153     9641    2             IF QQ_CMDBLK.OUT$->OUT$BLK.NSUBLKS > 1 THEN
      154     9642    3                DO;   /* PUT IT IN :HLP */
      155     9643    3                ENQ_FLAG = 0;
      156     9644    3                M$HLP$ = DCBADDR(DCBNUM(M$HLP));
      157     9645        /* */
      158     9646    3                VLP_KEY.STATION = QQ_CMDBLK.S$->TP$STATION.WHO.ACCT;
      159     9647    3                VLP_KEY.UNAME = QQ_CMDBLK.S$->TP$STATION.WHO.NAME;
      160     9648    3                CALL INDEX (POS, ' ', VLP_KEY.UNAME);
      161     9649    3                VLP_KEY.L# = POS + SIZEC(VLP_KEY.STATION);
      162     9650    3                CALL M$OPEN(FPT_OPEN) ALTRET(TRY_AGAIN);
      163     9651    3                CALL M$ENQ(FPT_ENQ) ALTRET(MON_ERR);
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:9    
      164     9652    3                ENQ_FLAG = 1;
      165     9653        /* */
      166     9654    3                FPT_READ.BUF_ = VECTOR(KL@DREC);
      167     9655    3                FPT_WRITE.BUF_ = VECTOR(KL@DREC);
      168     9656    3                CALL M$READ(FPT_READ) ALTRET(MON_ERR);
      169     9657        /* */
      170     9658    3                KL@DREC.PNAME = PROFILE;
      171     9659    3                CALL M$WRITE(FPT_WRITE) ALTRET(MON_ERR);
      172     9660    3                CALL M$DEQ(FPT_DEQ) ALTRET(MON_ERR);
      173     9661    3                CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);
      174     9662    3                END;  /* PUT IT IN :HLP */
      175     9663    2             END;  /* GET THE PROFILE */
      176     9664    1          ELSE
      177     9665    2             DO;   /* DISPLAY THE PROFILE */
      178     9666    2             CALL M$GLINEATTR(FPT_GLINEATTR) ALTRET(MON_ERR);
      179     9667    2             QQ_CMDBLK.MINOR_ERR = CODE_PROFILE;
      180     9668    2             CALL QQC$BLDMSG_BLK(MSGBLK);
      181     9669    2             MSGBLK.ERRINFO.FIELD1(0) = VECTOR(VLP_LINEATTR.PROFILE#);
      182     9670    2             CALL QQC$BLDMSG(MSGBLK);
      183     9671    2             END;  /* DISPLAY THE PROFILE */
      184     9672        /* */
      185     9673    1          RETURN;
      186     9674        /*   ERR:   CALL QQC$BLDMSG_BLK(MSGBLK);
      187     9675               MSGBLK.ERRINFO.ERR(0) = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      188     9676               CALL QQC$BLDMSG(MSGBLK);
      189     9677               RETURN;     */
      190     9678        /* */
      191     9679    1   MON_ERR: ;
      192     9680    1          IF ENQ_FLAG = 1 THEN
      193     9681    1             CALL M$DEQ(FPT_DEQ);
      194     9682    1          IF M$HLP$->F$DCB.FCD# THEN
      195     9683    1             CALL M$CLOSE(FPT_CLOSE);
      196     9684        /* */
      197     9685    1          IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = 66 THEN
      198     9686    2             DO;   /* TRY AGAIN */
      199     9687    2   TRY_AGAIN: ;
      200     9688    2             QQ_CMDBLK.MINOR_ERR = CODE_TRY_PROFILE;
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:10   
      201     9689    2             CALL QQC$BLDMSG_BLK(MSGBLK);
      202     9690    2             CALL QQC$BLDMSG(MSGBLK);
      203     9691    2             RETURN;
      204     9692    2             END;  /* TRY AGAIN */
      205     9693        /* */
      206     9694    1          CALL QQC$BLDMSG_BLK(MSGBLK);
      207     9695    1          MSGBLK.ERRINFO.ERR(0) = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      208     9696    1          CALL QQC$BLDMSG(MSGBLK);
      209     9697    1          RETURN;
      210     9698    1          END QQB$PROFILE;

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:11   
--  Include file information  --

   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_SUPER_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQB$PROFILE.

   Procedure QQB$PROFILE requires 185 words for executable code.
   Procedure QQB$PROFILE requires 348 words of local(AUTO) storage.

    No errors detected in file QQB$PROFILE.:E05TSI    .

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:12   

 Object Unit name= QQB$PROFILE                                File name= QQB$PROFILE.:E05TOU
 UTS= JUL 30 '97 05:34:36.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   180    264  QQB$PROFILE
    2   DCB   even  none     0      0  M$CG
    3   DCB   even  none     0      0  M$HLP
    4  RoData even  UTS      3      3  QQB$PROFILE
    5   Proc  even  none   185    271  QQB$PROFILE
    6  RoData even  none     6      6  QQB$PROFILE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  QQB$PROFILE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 QQC$BLDMSG_BLK
         yes           Std       1 QQC$BLDMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:13   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QQ_CMDBLK                             B$TCB$
     M$CG                                  M$HLP                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:14   


        1        1        /*M* QQB$PROFILE - Process the PROFILE command */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        QQB$PROFILE: PROC;

      7  5 000000   000000 700200 xent  QQB$PROFILE  TSX0  ! X66_AUTO_0
         5 000001   000534 000000                    ZERO    348,0

        8        8        /*P*     NAME:     QQB$PROFILE
        9        9                 PURPOSE:  To handle the PROFILE command
       10       10                 DESCRIPTION:
       11       11                           This routine takes parsed nodes and will either
       12       12                           set a profile for a TP station, or inquire a
       13       13                           profile for a TP station.
       14       14                 REFERENCE:  See the TP ADMINISTRATOR GUIDE for a description
       15       15                             of the command.
       16       16                                                                                      */
       17       17        /*X* DDA */
       18       18        /* */
       19       19        %INCLUDE Q_PAGE_C;
       20       51        %SET LISTEXP = '1'B;
       21       52        %PAGE(ARG="Includes");

                69        /***************************************************************************
                70         *                                                                         *
                71         *                                  Includes                               *
                72         *                                                                         *
                73         ***************************************************************************/

       22       77        %INCLUDE CP_6;
       23      158        %INCLUDE B_ERRORS_C;
       24     1285        %INCLUDE QQ_SUBS_C;
       25     1477        %INCLUDE XU_MACRO_C;
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:15   
       26     4583        %INCLUDE KC$CGBLK;
       27     4631        %INCLUDE KL_SUPER_C;
       28     7533        %INCLUDE QQ_MACROS_C;
       29     7958        %INCLUDE QQ_DATA_R;
       30     8204        %INCLUDE QQ_PERR_C;
       31     8365        %INCLUDE QQ_SUPER_C;
       32     8420        %INCLUDE Q_ERRCODE_C;
       33     8443        %PAGE(ARG="Externally defined routines");

              8460    1   /***************************************************************************
              8461    1    *                                                                         *
              8462    1    *                        Externally defined routines                      *
              8463    1    *                                                                         *
              8464    1    ***************************************************************************/

       34     8468    1   DCL QQC$BLDMSG_BLK ENTRY(1);
       35     8469    1   DCL QQC$BLDMSG ENTRY(1);
       36     8470        %PAGE(ARG="Based");

              8487    1   /***************************************************************************
              8488    1    *                                                                         *
              8489    1    *                                   Based                                 *
              8490    1    *                                                                         *
              8491    1    ***************************************************************************/

       37     8495        %PARSE$OUT(STCLASS=BASED);
       38     8540        %PARSE$SYM(STCLASS=BASED);
       39     8578        %TP$STATION(STCLASS=BASED);
       40     8651        %B$TCB;
       41     8654        %B$ALT;
       42     8662        %F$DCB;
       43     8719        %PAGE(ARG="Symrefs");

              8736    1   /***************************************************************************
              8737    1    *                                                                         *
              8738    1    *                                  Symrefs                                *
              8739    1    *                                                                         *
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:16   
              8740    1    ***************************************************************************/

       44     8744    1   DCL B$TCB$ PTR SYMREF;
       45     8745        %PAGE(ARG="Auto");

              8762    1   /***************************************************************************
              8763    1    *                                                                         *
              8764    1    *                                    Auto                                 *
              8765    1    *                                                                         *
              8766    1    ***************************************************************************/

       46     8770    1   DCL BUFFER CHAR(1024);
       47     8771    1   DCL 1 PROFILE,
       48     8772    1        2 SIZE UBIN(9) UNAL,
       49     8773    1        2 TEXT CHAR(11);
       50     8774        %MSGBLK;
       51     8864    1   DCL SUBLK$ PTR;
       52     8865    1   DCL ENQ_FLAG SBIN;
       53     8866    1   DCL M$HLP$ PTR;
       54     8867        %KL_DREC(NAME=KL@DREC, STCLASS=AUTO, LAST=",");
       55     8980        %KC$CGID(LVL=2, STCLASS=AUTO, LAST=",");
       56     9006        %QQ$LOGON(LVL=2, STCLASS=AUTO, LAST=";");
       57     9042        %PAGE(ARG="FPTs");

              9059    1   /***************************************************************************
              9060    1    *                                                                         *
              9061    1    *                                    FPTs                                 *
              9062    1    *                                                                         *
              9063    1    ***************************************************************************/

       58     9067        %FPT_PROFILE(DCB=M$CG, STATION=VLP_STATION);
       59     9088        %FPT_READ(DCB=M$HLP, KEY=VLP_KEY, KEYS=YES);
       60     9127        %FPT_WRITE(DCB=M$HLP, KEY=VLP_KEY);
       61     9158        %FPT_OPEN(DCB=M$HLP, ASN=FILE, FUN=UPDATE);
       62     9267        %FPT_CLOSE(DCB=M$HLP, DISP=SAVE);
       63     9309        %FPT_ENQ(DCB=M$HLP, SHARE=NONE, RNAME=VLP_KEY);
       64     9327        %FPT_DEQ(DCB=M$HLP, RNAME=VLP_KEY);
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:17   
       65     9344        %FPT_GLINEATTR(DCB=M$CG, STATION=VLP_STATION, LINEATTR=VLP_LINEATTR);
       66     9369        %PAGE(ARG="VLPs");

              9386    1   /***************************************************************************
              9387    1    *                                                                         *
              9388    1    *                                    VLPs                                 *
              9389    1    *                                                                         *
              9390    1    ***************************************************************************/

       67     9394        %VLP_STATION(STCLASS=STATIC);
       68     9421    1   DCL 1 VLP_KEY STATIC,
       69     9422    1        2 L# UBIN(9) UNAL,
       70     9423    1        2 STATION CHAR(8),
       71     9424    1        2 UNAME   CHAR(8);
       72     9425
       73     9426    1   DCL POS UBIN WORD;   /* To determine where UNAME really ends */
       74     9427
       75     9428        %VLP_LINEATTR(STCLASS=STATIC);
       76     9450        %PAGE(ARG="DCBs");

              9467    1   /***************************************************************************
              9468    1    *                                                                         *
              9469    1    *                                    DCBs                                 *
              9470    1    *                                                                         *
              9471    1    ***************************************************************************/

       77     9475    1   DCL M$CG DCB;
       78     9476    1   DCL M$HLP DCB;
       79     9477        %PAGE(ARG="Error Codes", PAGE=YES);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:18   
              9494    1   /***************************************************************************
              9495    1    *                                                                         *
              9496    1    *                                Error Codes                              *
              9497    1    *                                                                         *
              9498    1    ***************************************************************************/

       80     9502        %ERRCODE(NAME=CODE_BADPRO, CODE#=%E$BADPRO, FCG#=%FCG_QQ, MID#=%MID_B);
       81     9509        %ERRCODE(NAME=CODE_PROFILE, CODE#=%E$PROFILE, FCG#=%FCG_QQ, MID#=%MID_B);
       82     9516        %ERRCODE(NAME=CODE_TRY_PROFILE, CODE#=%E$TRY_PROFILE, FCG#=%FCG_QQ, MID#=%MID_B);
       83     9523        /*E*       ERROR: QQB-E$BADPRO-C
       84     9524
       85     9525                 MESSAGE: PROFILES must be 1 to 11 characters long.
       86     9526             DESCRIPTION: The user specified a profile that was too long.
       87     9527        */
       88     9528        /*E*       ERROR: QQB-E$PROFILE-C
       89     9529
       90     9530                 MESSAGE: PROFILE:  %U1
       91     9531             DESCRIPTION: Display for PROFILE
       92     9532        */
       93     9533        /*E*       ERROR: QQB-E$TRY_PROFILE-C
       94     9534                 MESSAGE: Unable to change your profile now.  Please try again.
       95     9535             DESCRIPTION: If for instance, the :HLP is busy we recommend
       96     9536                          that the profile change be tried later.
       97     9537        */
       98     9538        %PAGE(ARG="Description", PAGE=YES);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:19   
              9555    1   /***************************************************************************
              9556    1    *                                                                         *
              9557    1    *                                Description                              *
              9558    1    *                                                                         *
              9559    1    ***************************************************************************/

       99     9563        /*D*     NAME:     QQB$PROFILE
      100     9564                 CALL:     CALL QQB$PROFILE;
      101     9565                 INTERFACE:
      102     9566                      QQC$BLDMSG_BLK, QQC$BLDMSG
      103     9567                      M$PROFILE, M$OPEN, M$ENQ, M$READ, M$DEQ, M$CLOSE,
      104     9568                      M$GLINEATTR
      105     9569                 INPUT:    QQ_CMDBLK.OUT$ points to the parse nodes
      106     9570                 OUTPUT:   The station's profile is set, or the current
      107     9571                           profile is displayed.
      108     9572                 DESCRIPTION:
      109     9573                      1).  First, we set the user's station where the command
      110     9574                           came from, and where the information will
      111     9575                           eventually go.
      112     9576                      2).  The nodes are checked to see if the user is setting
      113     9577                           a profile.
      114     9578                           A).  If he is, then set up the profile for the
      115     9579                                station.
      116     9580                           B).  If the user specified PERM, then we have to
      117     9581                                make the change in :HLP.
      118     9582                                a).  We open :HLP and enqueue on the station
      119     9583                                     name.
      120     9584                                b).  We read the user's record, using the
      121     9585                                     station name as the key.  Then we change
      122     9586                                     the profile in the record and write it
      123     9587                                     back to :HLP.
      124     9588                      3).  If the user asked to display the profile, then
      125     9589                           we use M$GLINEATTR to obtain the user's profile.
      126     9590                      4).  If there were any problems, then we make sure
      127     9591                           everything in dequeued and closed.
      128     9592                      5).  If the open of :HLP failed, then it was probably
      129     9593                           a temporary problem, and we tell the user to try
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:20   
      130     9594                           again later.
      131     9595                                                                                      */
      132     9596        %PAGE(ARG="QQB$PROFILE", PAGE=YES);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:21   
              9613    1   /***************************************************************************
              9614    1    *                                                                         *
              9615    1    *                                QQB$PROFILE                              *
              9616    1    *                                                                         *
              9617    1    ***************************************************************************/

      133     9621    1          VLP_STATION.STATION# = QQ_CMDBLK.S$->TP$STATION.ID;

   9621  5 000002   000004 470400 xsym               LDP0    QQ_CMDBLK+4
         5 000003   040000 100500                    MLR     fill='040'O
         5 000004   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         5 000005   000226 000010 1                  ADSC9   VLP_STATION              cn=0,n=8

      134     9622    1          SUBLK$ = QQ_CMDBLK.OUT$->OUT$BLK.SUBLK$(0);

   9622  5 000006   000005 471400 xsym               LDP1    QQ_CMDBLK+5
         5 000007   100003 236100                    LDQ     3,,PR1
         5 000010   200434 756100                    STQ     SUBLK$,,AUTO

      135     9623        /* */
      136     9624    1          IF QQ_CMDBLK.OUT$->OUT$BLK.NSUBLKS > 0 THEN

   9624  5 000011   100001 220100                    LDX0    1,,PR1
         5 000012   000160 600000 5                  TZE     s:9666

      137     9625    2             DO;   /* GET THE PROFILE */

      138     9626    2             PROFILE.SIZE = SUBLK$->OUT$SYM.COUNT;

   9626  5 000013   200434 473500                    LDP3    SUBLK$,,AUTO
         5 000014   300004 236100                    LDQ     4,,PR3
         5 000015   200404 552140                    STBQ    PROFILE,'40'O,AUTO

      139     9627        /* */
      140     9628    2             IF PROFILE.SIZE > 11 THEN

   9628  5 000016   200404 236100                    LDQ     PROFILE,,AUTO
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:22   
         5 000017   777000 376003                    ANQ     -512,DU
         5 000020   014000 116003                    CMPQ    6144,DU
         5 000021   000041 602000 5                  TNC     s:9636

      141     9629    3                DO;   /* SIZE ERROR */

      142     9630    3                QQ_CMDBLK.MINOR_ERR = CODE_BADPRO;

   9630  5 000022   000000 236000 4                  LDQ     CODE_BADPRO
         5 000023   000001 756000 xsym               STQ     QQ_CMDBLK+1

      143     9631    3                CALL QQC$BLDMSG_BLK(MSGBLK);

   9631  5 000024   200407 634500                    EPPR4   MSGBLK,,AUTO
         5 000025   200532 454500                    STP4    POS+1,,AUTO
         5 000026   200532 630500                    EPPR0   POS+1,,AUTO
         5 000027   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000030   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         5 000031   000000 011000                    NOP     0

      144     9632    3                CALL QQC$BLDMSG(MSGBLK);

   9632  5 000032   200407 630500                    EPPR0   MSGBLK,,AUTO
         5 000033   200532 450500                    STP0    POS+1,,AUTO
         5 000034   200532 630500                    EPPR0   POS+1,,AUTO
         5 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000036   000000 701000 xent               TSX1    QQC$BLDMSG
         5 000037   000000 011000                    NOP     0

      145     9633    3                RETURN;

   9633  5 000040   000000 702200 xent               TSX2  ! X66_ARET

      146     9634    3                END;
      147     9635        /* */
      148     9636    2             PROFILE.TEXT = SUBLK$->OUT$SYM.TEXT;

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:23   
   9636  5 000041   300004 236100                    LDQ     4,,PR3
         5 000042   000033 772000                    QRL     27
         5 000043   000000 620006                    EAX0    0,QL
         5 000044   040100 100540                    MLR     fill='040'O
         5 000045   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         5 000046   200404 200013                    ADSC9   PROFILE,,AUTO            cn=1,n=11

      149     9637    2             FPT_PROFILE.BUF_ = VECTOR(BUFFER);

   9637  5 000047   000000 235000 6                  LDA     0
         5 000050   200532 452500                    STP2    POS+1,,AUTO
         5 000051   200532 236100                    LDQ     POS+1,,AUTO
         5 000052   000004 036003                    ADLQ    4,DU
         5 000053   000006 757000 1                  STAQ    FPT_PROFILE+6

      150     9638    2             FPT_PROFILE.PROFILE_ = VECTOR(PROFILE);

   9638  5 000054   000001 235000 6                  LDA     1
         5 000055   200532 452500                    STP2    POS+1,,AUTO
         5 000056   200532 236100                    LDQ     POS+1,,AUTO
         5 000057   000404 036003                    ADLQ    260,DU
         5 000060   000004 757000 1                  STAQ    FPT_PROFILE+4

      151     9639        /*        CALL M$PROFILE(FPT_PROFILE) ALTRET(ERR);    */
      152     9640        /* */
      153     9641    2             IF QQ_CMDBLK.OUT$->OUT$BLK.NSUBLKS > 1 THEN

   9641  5 000061   100001 220100                    LDX0    1,,PR1
         5 000062   000002 100003                    CMPX0   2,DU
         5 000063   000205 602000 5                  TNC     s:9673

      154     9642    3                DO;   /* PUT IT IN :HLP */

      155     9643    3                ENQ_FLAG = 0;

   9643  5 000064   200435 450100                    STZ     ENQ_FLAG,,AUTO

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:24   
      156     9644    3                M$HLP$ = DCBADDR(DCBNUM(M$HLP));

   9644  5 000065   000000 236007 xsym               LDQ     M$HLP,DL
         5 000066   000002 474400 6                  LDP4    2
         5 000067   400000 475500                    LDP5    0,,PR4
         5 000070   500000 236106                    LDQ     0,QL,PR5
         5 000071   200436 756100                    STQ     M$HLP$,,AUTO

      157     9645        /* */
      158     9646    3                VLP_KEY.STATION = QQ_CMDBLK.S$->TP$STATION.WHO.ACCT;

   9646  5 000072   040000 100500                    MLR     fill='040'O
         5 000073   000011 000010                    ADSC9   9,,PR0                   cn=0,n=8
         5 000074   000236 200010 1                  ADSC9   VLP_KEY                  cn=1,n=8

      159     9647    3                VLP_KEY.UNAME = QQ_CMDBLK.S$->TP$STATION.WHO.NAME;

   9647  5 000075   040000 100500                    MLR     fill='040'O
         5 000076   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         5 000077   000240 200010 1                  ADSC9   VLP_KEY+2                cn=1,n=8

      160     9648    3                CALL INDEX (POS, ' ', VLP_KEY.UNAME);

   9648  5 000100   000000 124400                    SCM     mask='000'O
         5 000101   000240 200010 1                  ADSC9   VLP_KEY+2                cn=1,n=8
         5 000102   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         5 000103   200531 000100                    ARG     POS,,AUTO

      161     9649    3                VLP_KEY.L# = POS + SIZEC(VLP_KEY.STATION);

   9649  5 000104   200531 236100                    LDQ     POS,,AUTO
         5 000105   000010 036007                    ADLQ    8,DL
         5 000106   000033 736000                    QLS     27
         5 000107   000236 552040 1                  STBQ    VLP_KEY,'40'O

      162     9650    3                CALL M$OPEN(FPT_OPEN) ALTRET(TRY_AGAIN);

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:25   
   9650  5 000110   000044 630400 1                  EPPR0   FPT_OPEN
         5 000111   450000 713400                    CLIMB   alt,open
         5 000112   410400 401760                    pmme    nvectors=18
         5 000113   000231 702000 5                  TSX2    TRY_AGAIN

      163     9651    3                CALL M$ENQ(FPT_ENQ) ALTRET(MON_ERR);

   9651  5 000114   000174 630400 1                  EPPR0   FPT_ENQ
         5 000115   420002 713400                    CLIMB   alt,+8194
         5 000116   401000 401760                    pmme    nvectors=3
         5 000117   000206 702000 5                  TSX2    MON_ERR

      164     9652    3                ENQ_FLAG = 1;

   9652  5 000120   000001 235007                    LDA     1,DL
         5 000121   200435 755100                    STA     ENQ_FLAG,,AUTO

      165     9653        /* */
      166     9654    3                FPT_READ.BUF_ = VECTOR(KL@DREC);

   9654  5 000122   000003 235000 6                  LDA     3
         5 000123   200532 452500                    STP2    POS+1,,AUTO
         5 000124   200532 236100                    LDQ     POS+1,,AUTO
         5 000125   000437 036003                    ADLQ    287,DU
         5 000126   000016 757000 1                  STAQ    FPT_READ+4

      167     9655    3                FPT_WRITE.BUF_ = VECTOR(KL@DREC);

   9655  5 000127   000003 235000 6                  LDA     3
         5 000130   200532 452500                    STP2    POS+1,,AUTO
         5 000131   200532 236100                    LDQ     POS+1,,AUTO
         5 000132   000437 036003                    ADLQ    287,DU
         5 000133   000034 757000 1                  STAQ    FPT_WRITE+4

      168     9656    3                CALL M$READ(FPT_READ) ALTRET(MON_ERR);

   9656  5 000134   000012 630400 1                  EPPR0   FPT_READ
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:26   
         5 000135   440000 713400                    CLIMB   alt,read
         5 000136   401400 401760                    pmme    nvectors=4
         5 000137   000206 702000 5                  TSX2    MON_ERR

      169     9657        /* */
      170     9658    3                KL@DREC.PNAME = PROFILE;

   9658  5 000140   000100 100500                    MLR     fill='000'O
         5 000141   200404 000014                    ADSC9   PROFILE,,AUTO            cn=0,n=12
         5 000142   200443 000014                    ADSC9   KL@DREC+4,,AUTO          cn=0,n=12

      171     9659    3                CALL M$WRITE(FPT_WRITE) ALTRET(MON_ERR);

   9659  5 000143   000030 630400 1                  EPPR0   FPT_WRITE
         5 000144   440001 713400                    CLIMB   alt,write
         5 000145   401400 401760                    pmme    nvectors=4
         5 000146   000206 702000 5                  TSX2    MON_ERR

      172     9660    3                CALL M$DEQ(FPT_DEQ) ALTRET(MON_ERR);

   9660  5 000147   000206 630400 1                  EPPR0   FPT_DEQ
         5 000150   420003 713400                    CLIMB   alt,+8195
         5 000151   401000 401760                    pmme    nvectors=3
         5 000152   000206 702000 5                  TSX2    MON_ERR

      173     9661    3                CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);

   9661  5 000153   000136 630400 1                  EPPR0   FPT_CLOSE
         5 000154   450001 713400                    CLIMB   alt,close
         5 000155   406000 401760                    pmme    nvectors=13
         5 000156   000206 702000 5                  TSX2    MON_ERR

      174     9662    3                END;  /* PUT IT IN :HLP */

      175     9663    2             END;  /* GET THE PROFILE */

   9663  5 000157   000205 710000 5                  TRA     s:9673
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:27   

      176     9664    1          ELSE
      177     9665    2             DO;   /* DISPLAY THE PROFILE */

      178     9666    2             CALL M$GLINEATTR(FPT_GLINEATTR) ALTRET(MON_ERR);

   9666  5 000160   000216 630400 1                  EPPR0   FPT_GLINEATTR
         5 000161   560005 713400                    CLIMB   alt,+57349
         5 000162   401000 401760                    pmme    nvectors=3
         5 000163   000206 702000 5                  TSX2    MON_ERR

      179     9667    2             QQ_CMDBLK.MINOR_ERR = CODE_PROFILE;

   9667  5 000164   000001 236000 4                  LDQ     CODE_PROFILE
         5 000165   000001 756000 xsym               STQ     QQ_CMDBLK+1

      180     9668    2             CALL QQC$BLDMSG_BLK(MSGBLK);

   9668  5 000166   200407 630500                    EPPR0   MSGBLK,,AUTO
         5 000167   200532 450500                    STP0    POS+1,,AUTO
         5 000170   200532 630500                    EPPR0   POS+1,,AUTO
         5 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000172   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         5 000173   000000 011000                    NOP     0

      181     9669    2             MSGBLK.ERRINFO.FIELD1(0) = VECTOR(VLP_LINEATTR.PROFILE#);

   9669  5 000174   000100 100400                    MLR     fill='000'O
         5 000175   000004 000010 6                  ADSC9   4                        cn=0,n=8
         5 000176   200416 200010                    ADSC9   MSGBLK+7,,AUTO           cn=1,n=8

      182     9670    2             CALL QQC$BLDMSG(MSGBLK);

   9670  5 000177   200407 630500                    EPPR0   MSGBLK,,AUTO
         5 000200   200532 450500                    STP0    POS+1,,AUTO
         5 000201   200532 630500                    EPPR0   POS+1,,AUTO
         5 000202   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:28   
         5 000203   000000 701000 xent               TSX1    QQC$BLDMSG
         5 000204   000000 011000                    NOP     0

      183     9671    2             END;  /* DISPLAY THE PROFILE */

      184     9672        /* */
      185     9673    1          RETURN;

   9673  5 000205   000000 702200 xent               TSX2  ! X66_ARET

      186     9674        /*   ERR:   CALL QQC$BLDMSG_BLK(MSGBLK);
      187     9675               MSGBLK.ERRINFO.ERR(0) = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      188     9676               CALL QQC$BLDMSG(MSGBLK);
      189     9677               RETURN;     */
      190     9678        /* */
      191     9679    1   MON_ERR: ;

   9679  5 000206                       MON_ERR      null
      192     9680    1          IF ENQ_FLAG = 1 THEN

   9680  5 000206   200435 235100                    LDA     ENQ_FLAG,,AUTO
         5 000207   000001 115007                    CMPA    1,DL
         5 000210   000214 601000 5                  TNZ     s:9682

      193     9681    1             CALL M$DEQ(FPT_DEQ);

   9681  5 000211   000206 630400 1                  EPPR0   FPT_DEQ
         5 000212   020003 713400                    CLIMB   8195
         5 000213   401000 401760                    pmme    nvectors=3

      194     9682    1          IF M$HLP$->F$DCB.FCD# THEN

   9682  5 000214   200436 470500                    LDP0    M$HLP$,,AUTO
         5 000215   000031 236100                    LDQ     25,,PR0
         5 000216   020000 316007                    CANQ    8192,DL
         5 000217   000223 600000 5                  TZE     s:9685

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:29   
      195     9683    1             CALL M$CLOSE(FPT_CLOSE);

   9683  5 000220   000136 630400 1                  EPPR0   FPT_CLOSE
         5 000221   050001 713400                    CLIMB   close
         5 000222   406000 401760                    pmme    nvectors=13

      196     9684        /* */
      197     9685    1          IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = 66 THEN

   9685  5 000223   000000 470400 xsym               LDP0    B$TCB$
         5 000224   000000 471500                    LDP1    0,,PR0
         5 000225   100102 236100                    LDQ     66,,PR1
         5 000226   377770 376007                    ANQ     131064,DL
         5 000227   001020 116007                    CMPQ    528,DL
         5 000230   000250 601000 5                  TNZ     s:9694

      198     9686    2             DO;   /* TRY AGAIN */

   9683  5 000231                       TRY_AGAIN    null
      199     9687    2   TRY_AGAIN: ;
      200     9688    2             QQ_CMDBLK.MINOR_ERR = CODE_TRY_PROFILE;

   9688  5 000231   000002 236000 4                  LDQ     CODE_TRY_PROFILE
         5 000232   000001 756000 xsym               STQ     QQ_CMDBLK+1

      201     9689    2             CALL QQC$BLDMSG_BLK(MSGBLK);

   9689  5 000233   200407 630500                    EPPR0   MSGBLK,,AUTO
         5 000234   200532 450500                    STP0    POS+1,,AUTO
         5 000235   200532 630500                    EPPR0   POS+1,,AUTO
         5 000236   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000237   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         5 000240   000000 011000                    NOP     0

      202     9690    2             CALL QQC$BLDMSG(MSGBLK);

   9690  5 000241   200407 630500                    EPPR0   MSGBLK,,AUTO
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:30   
         5 000242   200532 450500                    STP0    POS+1,,AUTO
         5 000243   200532 630500                    EPPR0   POS+1,,AUTO
         5 000244   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000245   000000 701000 xent               TSX1    QQC$BLDMSG
         5 000246   000000 011000                    NOP     0

      203     9691    2             RETURN;

   9691  5 000247   000000 702200 xent               TSX2  ! X66_ARET

      204     9692    2             END;  /* TRY AGAIN */
      205     9693        /* */
      206     9694    1          CALL QQC$BLDMSG_BLK(MSGBLK);

   9694  5 000250   200407 633500                    EPPR3   MSGBLK,,AUTO
         5 000251   200532 453500                    STP3    POS+1,,AUTO
         5 000252   200532 630500                    EPPR0   POS+1,,AUTO
         5 000253   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000254   000000 701000 xent               TSX1    QQC$BLDMSG_BLK
         5 000255   000000 011000                    NOP     0

      207     9695    1          MSGBLK.ERRINFO.ERR(0) = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   9695  5 000256   000000 470400 xsym               LDP0    B$TCB$
         5 000257   000000 471500                    LDP1    0,,PR0
         5 000260   100102 236100                    LDQ     66,,PR1
         5 000261   200415 756100                    STQ     MSGBLK+6,,AUTO

      208     9696    1          CALL QQC$BLDMSG(MSGBLK);

   9696  5 000262   200407 631500                    EPPR1   MSGBLK,,AUTO
         5 000263   200532 451500                    STP1    POS+1,,AUTO
         5 000264   200532 630500                    EPPR0   POS+1,,AUTO
         5 000265   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000266   000000 701000 xent               TSX1    QQC$BLDMSG
         5 000267   000000 011000                    NOP     0

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:31   
      209     9697    1          RETURN;

   9697  5 000270   000000 702200 xent               TSX2  ! X66_ARET
      210     9698    1          END QQB$PROFILE;

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:32   
--  Include file information  --

   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_SUPER_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQB$PROFILE.
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:33   

 **** Variables and constants ****

  ****  Section 001  Data  QQB$PROFILE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   136-0-0/d STRC(1080)  r     1 FPT_CLOSE                206-0-0/d STRC(288)   r     1 FPT_DEQ
   174-0-0/d STRC(360)   r     1 FPT_ENQ                  216-0-0/d STRC(288)   r     1 FPT_GLINEATTR
    44-0-0/d STRC(2088)  r     1 FPT_OPEN                   0-0-0/d STRC(360)   r     1 FPT_PROFILE
    12-0-0/d STRC(504)   r     1 FPT_READ                  30-0-0/d STRC(432)   r     1 FPT_WRITE
   236-0-0/c STRC(153)   r     1 VLP_KEY                  244-0-0/d STRC(576)   r     1 VLP_LINEATTR
   226-0-0/w STRC(288)   r     1 VLP_STATION

  ****  Section 004 RoData QQB$PROFILE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 CODE_BADPRO                1-0-0/b STRC        r     1 CODE_PROFILE
     2-0-0/b STRC        r     1 CODE_TRY_PROFILE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/c CHAR(1024)  r     1 BUFFER                   435-0-0/w SBIN        r     1 ENQ_FLAG
   437-0-0/w STRC(2088)  r     1 KL@DREC                  436-0-0/w PTR         r     1 M$HLP$
   407-0-0/w STRC(738)   r     1 MSGBLK                   531-0-0/w UBIN        r     1 POS
   404-0-0/c STRC(108)   r     1 PROFILE                  434-0-0/w PTR         r     1 SUBLK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:34   
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w STRC(315)   r     1 QQ_CMDBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$CG
     0-0-0N  NULL        r     1 M$HLP                      0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(909)   r     1 TP$STATION


   Procedure QQB$PROFILE requires 185 words for executable code.
   Procedure QQB$PROFILE requires 348 words of local(AUTO) storage.

    No errors detected in file QQB$PROFILE.:E05TSI    .
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:36   
          MINI XREF LISTING

B$ALT.CODE
      8656**DCL      8656--REDEF    8657--REDEF    8657--REDEF
B$ALT.ERR
      8657**DCL      9695>>ASSIGN
B$ALT.ERR.CODE
      8658**DCL      9685>>IF
B$ALT.ERR.ERR#
      8658**DCL      8658--REDEF
B$ALT.EVID
      8657**DCL      8657--REDEF    8657--REDEF
B$TCB.ALT$
      8652**DCL      9685>>IF       9695>>ASSIGN
B$TCB$
      8744**DCL      9685>>IF       9695>>ASSIGN
BUFFER
      8770**DCL      9637--ASSIGN
CODE_BADPRO
      9503**DCL      9630>>ASSIGN
CODE_PROFILE
      9510**DCL      9667>>ASSIGN
CODE_TRY_PROFILE
      9517**DCL      9688>>ASSIGN
ENQ_FLAG
      8865**DCL      9643<<ASSIGN   9652<<ASSIGN   9680>>IF
F$DCB.ACTPOS
      8695**DCL      8695--REDEF
F$DCB.ARS#
      8669**DCL      8669--REDEF
F$DCB.ATTR
      8688**DCL      8689--REDEF
F$DCB.BORROW
      8703**DCL      8703--REDEF    8703--REDEF    8703--REDEF
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:37   
F$DCB.DCBNAME.L
      8717**DCL      8717--IMP-SIZ
F$DCB.EOMCHAR#
      8673**DCL      8673--REDEF
F$DCB.FCD#
      8682**DCL      9682>>IF
F$DCB.FLDID
      8698**DCL      8698--REDEF
F$DCB.FORM$
      8692**DCL      8692--REDEF
F$DCB.FSECT
      8708**DCL      8708--REDEF
F$DCB.FSN#
      8685**DCL      8685--REDEF    8685--REDEF    8686--REDEF
F$DCB.HEADER$
      8691**DCL      8691--REDEF
F$DCB.IXTNSIZE#
      8689**DCL      8689--REDEF
F$DCB.LASTSTA$
      8678**DCL      8678--REDEF
F$DCB.LVL
      8704**DCL      8704--REDEF
F$DCB.NAME#.C
      8679**DCL      8679--REDEF
F$DCB.NOEOF
      8701**DCL      8701--REDEF
F$DCB.NRECS#
      8690**DCL      8690--REDEF
F$DCB.NRECX
      8709**DCL      8709--REDEF
F$DCB.OHDR
      8701**DCL      8701--REDEF
F$DCB.ORG#
      8684**DCL      8684--REDEF
F$DCB.PRECNO
      8707**DCL      8707--REDEF
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:38   
F$DCB.RCSZ
      8713**DCL      8713--REDEF
F$DCB.RES#
      8680**DCL      8680--REDEF
F$DCB.SETX
      8692**DCL      8692--REDEF
F$DCB.TAB$
      8692**DCL      8692--REDEF
F$DCB.TDA
      8706**DCL      8707--REDEF
F$DCB.WSN#
      8680**DCL      8680--REDEF
FPT_CLOSE
      9290**DCL      9661<>CALL     9683<>CALL
FPT_CLOSE.SN_
      9290**DCL      9290--REDEF
FPT_CLOSE.UTL_
      9291**DCL      9291--REDEF
FPT_CLOSE.V
      9295**DCL      9290--DCLINIT
FPT_CLOSE.V.EXPIRE#
      9305**DCL      9305--REDEF
FPT_CLOSE.V.TYPE#
      9303**DCL      9303--REDEF
FPT_CLOSE.V.XTNSIZE#
      9300**DCL      9300--REDEF    9302--REDEF
FPT_DEQ
      9338**DCL      9660<>CALL     9681<>CALL
FPT_DEQ.V
      9339**DCL      9338--DCLINIT
FPT_ENQ
      9320**DCL      9651<>CALL
FPT_ENQ.V
      9321**DCL      9320--DCLINIT
FPT_GLINEATTR
      9359**DCL      9666<>CALL
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:39   
FPT_GLINEATTR.V
      9367**DCL      9361--DCLINIT
FPT_OPEN
      9223**DCL      9650<>CALL
FPT_OPEN.ACSVEH_
      9225**DCL      9226--REDEF
FPT_OPEN.ALTKEYS_
      9231**DCL      9232--REDEF    9232--REDEF
FPT_OPEN.HDR_
      9230**DCL      9231--REDEF
FPT_OPEN.TAB_
      9229**DCL      9230--REDEF
FPT_OPEN.UHL_
      9223**DCL      9224--REDEF    9224--REDEF
FPT_OPEN.V
      9232**DCL      9223--DCLINIT
FPT_OPEN.V.FSN#
      9263**DCL      9263--REDEF    9263--REDEF
FPT_OPEN.WSN_
      9229**DCL      9229--REDEF
FPT_PROFILE.BUF_
      9084**DCL      9637<<ASSIGN
FPT_PROFILE.PROFILE_
      9083**DCL      9638<<ASSIGN
FPT_PROFILE.V
      9086**DCL      9083--DCLINIT
FPT_READ
      9105**DCL      9656<>CALL
FPT_READ.BUF_
      9107**DCL      9654<<ASSIGN
FPT_READ.STATION_
      9108**DCL      9109--REDEF
FPT_READ.V
      9109**DCL      9105--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      9120**DCL      9120--REDEF
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:40   
FPT_READ.V.INDX#
      9118**DCL      9118--REDEF
FPT_WRITE
      9144**DCL      9659<>CALL
FPT_WRITE.BUF_
      9144**DCL      9655<<ASSIGN
FPT_WRITE.STATION_
      9146**DCL      9146--REDEF
FPT_WRITE.V
      9147**DCL      9144--DCLINIT
FPT_WRITE.V.DVBYTE.VFC#
      9153**DCL      9153--REDEF
KL@DREC
      8880**DCL      9654--ASSIGN   9655--ASSIGN
KL@DREC.PASSWORD
      8938**DCL      8942--REDEF
KL@DREC.PNAME
      8944**DCL      9658<<ASSIGN
KL@DREC.RENAME
      8961**DCL      8962--REDEF
M$CLOSE
        86**DCL-ENT  9661--CALL     9683--CALL
M$DEQ
       153**DCL-ENT  9660--CALL     9681--CALL
M$ENQ
       152**DCL-ENT  9651--CALL
M$GLINEATTR
       111**DCL-ENT  9666--CALL
M$HLP
      9476**DCL      9644--ASSIGN
M$HLP$
      8866**DCL      9644<<ASSIGN   9682>>IF
M$OPEN
        86**DCL-ENT  9650--CALL
M$READ
        87**DCL-ENT  9656--CALL
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:41   
M$WRITE
        87**DCL-ENT  9659--CALL
MON_ERR
      9679**LABEL    9651--CALLALT  9656--CALLALT  9659--CALLALT  9660--CALLALT  9661--CALLALT  9666--CALLALT
MSGBLK
      8775**DCL      9631<>CALL     9632<>CALL     9668<>CALL     9670<>CALL     9689<>CALL     9690<>CALL
      9694<>CALL     9696<>CALL
MSGBLK.ERRINFO.ERR
      8853**DCL      9695<<ASSIGN
MSGBLK.ERRINFO.FIELD1
      8857**DCL      9669<<ASSIGN
OUT$BLK.NSUBLKS
      8513**DCL      9624>>IF       9641>>IF
OUT$BLK.SUBLK$
      8534**DCL      9622>>ASSIGN
OUT$SYM.COUNT
      8570**DCL      8573--IMP-SIZ  9626>>ASSIGN   9636>>ASSIGN
OUT$SYM.TEXT
      8573**DCL      9636>>ASSIGN
POS
      9426**DCL      9648<<CALLBLT  9649>>ASSIGN
PROFILE
      8771**DCL      9638--ASSIGN   9658>>ASSIGN
PROFILE.SIZE
      8772**DCL      9626<<ASSIGN   9628>>IF
PROFILE.TEXT
      8773**DCL      9636<<ASSIGN
QQC$BLDMSG
      8469**DCL-ENT  9632--CALL     9670--CALL     9690--CALL     9696--CALL
QQC$BLDMSG_BLK
      8468**DCL-ENT  9631--CALL     9668--CALL     9689--CALL     9694--CALL
QQ_CMDBLK.MINOR_ERR
      7967**DCL      9630<<ASSIGN   9667<<ASSIGN   9688<<ASSIGN
QQ_CMDBLK.OUT$
      7967**DCL      9622>>ASSIGN   9624>>IF       9641>>IF
QQ_CMDBLK.S$
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:42   
      7967**DCL      9621>>ASSIGN   9646>>ASSIGN   9647>>ASSIGN
QQ_GLOBAL.DS1$_BITS
      7978**DCL      7978--REDEF
QQ_GLOBAL.DS2$_BITS
      7978**DCL      7979--REDEF
QQ_GLOBAL.DS3$_BITS
      7979**DCL      7979--REDEF
QQ_GLOBAL.DS4$_BITS
      7979**DCL      7980--REDEF
SUBLK$
      8864**DCL      9622<<ASSIGN   9626>>ASSIGN   9636>>ASSIGN   9636>>ASSIGN
TP$STATION.ID
      8593**DCL      9621>>ASSIGN
TP$STATION.WHO.ACCT
      8604**DCL      9646>>ASSIGN
TP$STATION.WHO.NAME
      8606**DCL      9647>>ASSIGN
TRY_AGAIN
      9683**LABEL    9650--CALLALT
VLP_KEY
      9421**DCL      9105--DCLINIT  9106--DCLINIT  9144--DCLINIT  9320--DCLINIT  9338--DCLINIT
VLP_KEY.L#
      9422**DCL      9649<<ASSIGN
VLP_KEY.STATION
      9423**DCL      9646<<ASSIGN   9649--ASSIGN
VLP_KEY.UNAME
      9424**DCL      9647<<ASSIGN   9648>>CALLBLT
VLP_LINEATTR
      9444**DCL      9365--DCLINIT
VLP_LINEATTR.PROFILE#
      9446**DCL      9446--REDEF    9669--ASSIGN
VLP_STATION
      9406**DCL      9083--DCLINIT  9363--DCLINIT
VLP_STATION.MSGIDXT
      9416**DCL      9419--REDEF
VLP_STATION.STATION#
PL6.E3A0      #001=QQB$PROFILE File=QQB$PROFILE.:E05TSI                          WED 07/30/97 05:34 Page:43   
      9410**DCL      9621<<ASSIGN
