VERSION E05

PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:1    
        1        1        /*M* DXA$G_APT . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D* NAME:  DXA$GET_APT
        9        9             CALL:  CALL DXA$GET_APT(USERNO,APT) ALTRET(BAD_USERNO)
       10       10             INPUT: USERNO IS THE USER NO SUPPLIED ON THE USE COMMAND
       11       11             OUTPUT: APT IS THE PAGE TABLE ADDRESS (REAL, MODULO 64)
       12       12                     ALTRET IS TAKEN IF THE USER NUMBER SUPPLIED IS
       13       13                     OUT OF RANGE OR THE PAGE TABLE ADDRESS IN THE
       14       14                     USER TABLE IS ZERO.
       15       15             DESCRIPTION:  THE USER TABLE IS LOCATED BY SEARCHING THE MONITOR
       16       16                     SYMDEFS FOR 'B$USRT$'.  ONCE FOUND, THE PAGE TABLE
       17       17                     ADDRESS IS PULLED ON THE BASIS OF THE USER NUMBER.
       18       18                     NOTE.  IF THE USER UMBER IS ZERO, THE CURRENT CUSER'S
       19       19                     PAGE TABLE IS PULLED FROM THE PAGE TABLE DIRECTORY,
       20       20                     USERWSQ.
       21       21                     */
       22       22        DXA$GET_APT: PROC(USERNO,APT) ALTRET;
       23       23        %INCLUDE B$OBJECT_C;
       24     3453        %B$SDEF;
       25     3507        %INCLUDE B$USER;
       26     3723        %INCLUDE DD_ERR_C;
       27     4120        %INCLUDE SS_SCHED_C;
       28     4353    1   DCL USE$ PTR SYMREF;
       29     4354    1   DCL USE_ORIG$ PTR SYMREF;
       30     4355    1   DCL MIS$ PTR SYMREF;
       31     4356        %INCLUDE DD$BASED;
       32     5659        %U$SE;
       33     5667        %INCLUDE DD_SUBS_C;
       34     5938    1   DCL MPTR$ PTR;
       35     5939    1   DCL USER$ PTR;
       36     5940    1   DCL D_B$USER UBIN SYMREF;
       37     5941    1   DCL USERNO SBIN;
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:2    
       38     5942    1   DCL APT SBIN;
       39     5943    1   DCL UBIN36$ PTR  BASED;
       40     5944    1   DCL DXA$GETMPTR ENTRY(2);
       41     5945                                           /* CHECK FOR CURRENT USER...(USERNO = 0)  */
       42     5946    1        IF USERNO = 0
       43     5947    2        THEN DO;
       44     5948    2             APT = USE_ORIG$ -> U$SE.APT;  /* USERWSQ SAVED AT ENTRY */
       45     5949    2             RETURN;
       46     5950    2           END;
       47     5951                                                /* CHECK FOR VALID USER NUMBER */
       48     5952                                 /* FIND THE SYMBOL 'B$USRT$' IN MON SYMDEF TABLE */
       49     5953                                      /* ADJUST DELTA'S MONITOR POINTER BY ADDRESS*/
       50     5954                                                /* CHECK IF THE USER IS STILL ALIVE  */
       51     5955    1        MPTR$ = PINCRW(MIS$,D_B$USER)->UBIN36$;
       52     5956    1        CALL DXA$GETMPTR(MPTR$,USER$);
       53     5957    1        IF USER$->B$USER.US(USERNO) = %SS_SNULL
       54     5958    1        THEN ALTRETURN;          /* B$USER.US = %SS_SNULL FOR THIS USER NUMBER. */
       55     5959    1        APT = USER$->B$USER.PT(USERNO);
       56     5960    1        RETURN;
       57     5961    1   END DXA$GET_APT;

PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:3    
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DXA$GET_APT.

   Procedure DXA$GET_APT requires 38 words for executable code.
   Procedure DXA$GET_APT requires 10 words of local(AUTO) storage.

    No errors detected in file DXA$G_APT.:E05TSI    .

PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:4    

 Object Unit name= DXA$GET_APT                                File name= DXA$G_APT.:E05TOU
 UTS= JUL 29 '97 15:07:53.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    38     46  DXA$GET_APT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DXA$GET_APT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 DXA$GETMPTR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     USE$                                  USE_ORIG$                             MIS$
     D_B$USER                              B_VECTNIL
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:5    


        1        1        /*M* DXA$G_APT . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D* NAME:  DXA$GET_APT
        9        9             CALL:  CALL DXA$GET_APT(USERNO,APT) ALTRET(BAD_USERNO)
       10       10             INPUT: USERNO IS THE USER NO SUPPLIED ON THE USE COMMAND
       11       11             OUTPUT: APT IS THE PAGE TABLE ADDRESS (REAL, MODULO 64)
       12       12                     ALTRET IS TAKEN IF THE USER NUMBER SUPPLIED IS
       13       13                     OUT OF RANGE OR THE PAGE TABLE ADDRESS IN THE
       14       14                     USER TABLE IS ZERO.
       15       15             DESCRIPTION:  THE USER TABLE IS LOCATED BY SEARCHING THE MONITOR
       16       16                     SYMDEFS FOR 'B$USRT$'.  ONCE FOUND, THE PAGE TABLE
       17       17                     ADDRESS IS PULLED ON THE BASIS OF THE USER NUMBER.
       18       18                     NOTE.  IF THE USER UMBER IS ZERO, THE CURRENT CUSER'S
       19       19                     PAGE TABLE IS PULLED FROM THE PAGE TABLE DIRECTORY,
       20       20                     USERWSQ.
       21       21                     */
       22       22        DXA$GET_APT: PROC(USERNO,APT) ALTRET;

     22  0 000000   000000 700200 xent  DXA$GET_APT  TSX0  ! X66_AUTO_2
         0 000001   000012 000002                    ZERO    10,2

       23       23        %INCLUDE B$OBJECT_C;
       24     3453        %B$SDEF;
       25     3507        %INCLUDE B$USER;
       26     3723        %INCLUDE DD_ERR_C;
       27     4120        %INCLUDE SS_SCHED_C;
       28     4353    1   DCL USE$ PTR SYMREF;
       29     4354    1   DCL USE_ORIG$ PTR SYMREF;
       30     4355    1   DCL MIS$ PTR SYMREF;
       31     4356        %INCLUDE DD$BASED;
       32     5659        %U$SE;
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:6    
       33     5667        %INCLUDE DD_SUBS_C;
       34     5938    1   DCL MPTR$ PTR;
       35     5939    1   DCL USER$ PTR;
       36     5940    1   DCL D_B$USER UBIN SYMREF;
       37     5941    1   DCL USERNO SBIN;
       38     5942    1   DCL APT SBIN;
       39     5943    1   DCL UBIN36$ PTR  BASED;
       40     5944    1   DCL DXA$GETMPTR ENTRY(2);
       41     5945                                           /* CHECK FOR CURRENT USER...(USERNO = 0)  */
       42     5946    1        IF USERNO = 0

   5946  0 000002   200003 470500                    LDP0    @USERNO,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000012 601000 0                  TNZ     s:5955

       43     5947    2        THEN DO;

       44     5948    2             APT = USE_ORIG$ -> U$SE.APT;  /* USERWSQ SAVED AT ENTRY */

   5948  0 000005   000000 471400 xsym               LDP1    USE_ORIG$
         0 000006   100003 235100                    LDA     3,,PR1
         0 000007   200004 473500                    LDP3    @APT,,AUTO
         0 000010   300000 755100                    STA     0,,PR3

       45     5949    2             RETURN;

   5949  0 000011   000000 702200 xent               TSX2  ! X66_ARET

       46     5950    2           END;
       47     5951                                                /* CHECK FOR VALID USER NUMBER */
       48     5952                                 /* FIND THE SYMBOL 'B$USRT$' IN MON SYMDEF TABLE */
       49     5953                                      /* ADJUST DELTA'S MONITOR POINTER BY ADDRESS*/
       50     5954                                                /* CHECK IF THE USER IS STILL ALIVE  */
       51     5955    1        MPTR$ = PINCRW(MIS$,D_B$USER)->UBIN36$;

   5955  0 000012   000000 471400 xsym               LDP1    MIS$
         0 000013   000000 720000 xsym               LXL0    D_B$USER
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:7    
         0 000014   100000 236110                    LDQ     0,X0,PR1
         0 000015   200005 756100                    STQ     MPTR$,,AUTO

       52     5956    1        CALL DXA$GETMPTR(MPTR$,USER$);

   5956  0 000016   200006 633500                    EPPR3   USER$,,AUTO
         0 000017   200011 453500                    STP3    USER$+3,,AUTO
         0 000020   200005 634500                    EPPR4   MPTR$,,AUTO
         0 000021   200010 454500                    STP4    USER$+2,,AUTO
         0 000022   200010 630500                    EPPR0   USER$+2,,AUTO
         0 000023   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000024   000000 701000 xent               TSX1    DXA$GETMPTR
         0 000025   000000 011000                    NOP     0

       53     5957    1        IF USER$->B$USER.US(USERNO) = %SS_SNULL

   5957  0 000026   200003 470500                    LDP0    @USERNO,,AUTO
         0 000027   000000 235100                    LDA     0,,PR0
         0 000030   000004 735000                    ALS     4
         0 000031   200006 471500                    LDP1    USER$,,AUTO
         0 000032   100011 236105                    LDQ     9,AL,PR1
         0 000033   770000 376003                    ANQ     -4096,DU
         0 000034   300000 116003                    CMPQ    98304,DU
         0 000035   000037 601000 0                  TNZ     s:5959

       54     5958    1        THEN ALTRETURN;          /* B$USER.US = %SS_SNULL FOR THIS USER NUMBER. */

   5958  0 000036   000000 702200 xent               TSX2  ! X66_AALT

       55     5959    1        APT = USER$->B$USER.PT(USERNO);

   5959  0 000037   000000 235100                    LDA     0,,PR0
         0 000040   000004 735000                    ALS     4
         0 000041   100014 236105                    LDQ     12,AL,PR1
         0 000042   000022 772000                    QRL     18
         0 000043   200004 473500                    LDP3    @APT,,AUTO
         0 000044   300000 756100                    STQ     0,,PR3
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:8    

       56     5960    1        RETURN;

   5960  0 000045   000000 702200 xent               TSX2  ! X66_ARET
       57     5961    1   END DXA$GET_APT;

PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:9    
--  Include file information  --

   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DXA$GET_APT.

   Procedure DXA$GET_APT requires 38 words for executable code.
   Procedure DXA$GET_APT requires 10 words of local(AUTO) storage.

    No errors detected in file DXA$G_APT.:E05TSI    .
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:11   
          MINI XREF LISTING

APT
      5942**DCL        22--PROC     5948<<ASSIGN   5959<<ASSIGN
B$DO.ECCINFO
      3658**DCL      3659--REDEF
B$SDEF.AD.OU
      3474**DCL      3480--REDEF
B$SDEF.VALUE
      3455**DCL      3458--REDEF
B$U.MISC
      3637**DCL      3638--REDEF
B$USER.MISC
      3713**DCL      3714--REDEF
B$USER.PT
      3707**DCL      5959>>ASSIGN
B$USER.US
      3700**DCL      5957>>IF
DXA$GETMPTR
      5944**DCL-ENT  5956--CALL
D_B$USER
      5940**DCL      5955>>ASSIGN
MIS$
      4355**DCL      5955>>ASSIGN
MPTR$
      5938**DCL      5955<<ASSIGN   5956<>CALL
U$SE.APT
      5664**DCL      5948>>ASSIGN
UBIN36$
      5943**DCL      5955>>ASSIGN
USE$
      4353**DCL      5660--IMP-PTR
USER$
      5939**DCL      5956<>CALL     5957>>IF       5959>>ASSIGN
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:12   
USERNO
      5941**DCL        22--PROC     5946>>IF       5957>>IF       5959>>ASSIGN
USE_ORIG$
      4354**DCL      5948>>ASSIGN
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:13   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DXA$GET_APT File=DXA$G_APT.:E05TSI                            TUE 07/29/97 15:07 Page:14   
              MINI UREF LISTING

B$DOCONT    3671**DCL
DXA$GET_APT      22**PROC
