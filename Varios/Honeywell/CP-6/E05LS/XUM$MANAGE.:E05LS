VERSION E05

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /******************************************************************/
        7        7        /*M*    XUM$MANAGE   DYNAMIC MEMORY MANAGEMENT ROUTINES           */
        8        8        /**/
        9        9        /*X*    DMC,ICP,IND=3,CTI=6,ECU=3,DCI=3,DTI=3             */
       10       10        /*I*    NAME:    X$ALLOCATE
       11       11                PURPOSE: To dynamically allocate space within
       12       12                         the FREE SPACE AREA. Allocation is in
       13       13                         terms of BYTES or WORDS.
       14       14                         Minimum allocation is one byte.
       15       15                         NOTE: One extra word is required
       16       16                         for each block allocated.
       17       17        */
       18       18        /******************************************************************/
       19       19        X$ALLOCATE: PROC (MCB) ALTRET;
       20       20        /***** Include files *****/
       21       21        %INCLUDE CP_6;
       22     5580        %INCLUDE XUM_MACRO_C;
       23     5607        %INCLUDE XU_PERR_C;
       24     5798        %XUM$MCB (NAME = MCB) ;
       25     5802    1   DCL 1 X$MAP BASED,
       26     5803    1         2 SIZE SBIN WORD UNAL,
       27     5804    1         2 LINK$ PTR;
       28     5805        /***** LOCAL VARIABLES *****/
       29     5806    1   DCL LINK1$ PTR;
       30     5807    1   DCL LINK2$ PTR;
       31     5808    1   DCL NUM_WORDS UBIN WORD;
       32     5809    1   DCL SAVE$ PTR ;
       33     5810    1   DCL ALIGN_OFF UBIN WORD ;
       34     5811        /***** Error codes *****/
       35     5812        /*E*    ERROR:  XUM-E$BDTYPE-C
       36     5813                MESSAGE: Bad type specification MCB.TYPE > 1
       37     5814                MESSAGE1: BYTE = 0, WORD = 1
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:2    
       38     5815        */
       39     5816          %VLP_ERRCODE (FPTN=E_BDTYPE,FCG="XU",MID="M",ERR#=%E$BDTYPE,STCLASS=CONSTANT);
       40     5861        /*E*    ERROR:  XUM-E$NOSPACE-C
       41     5862                MESSAGE: Insufficient space for allocation
       42     5863                MESSAGE1: Work space should be larger
       43     5864        */
       44     5865          %VLP_ERRCODE (FPTN=E_NOSPACE,FCG="XU",MID="M",ERR#=%E$NOSPACE,STCLASS=CONSTANT);
       45     5910        %XUM_ENTRIES (OMIT=X$ALLOCATE);
       46     5918        %EJECT;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:3    
       47     5919    1           MCB.ERR = '0'O;
       48     5920    2           DO CASE (MCB.TYPE) ;
       49     5921    2            CASE (0,2) ;  /* allocate BYTES */
       50     5922    2              NUM_WORDS = (MCB.SIZE + 3) / 4 + 1;
       51     5923    2              IF MCB.TYPE = 0
       52     5924    2              THEN    /* Any WORD alignment */
       53     5925    2                 ALIGN_OFF = 0 ;
       54     5926    2              ELSE    /* DOUBLE WORD alignment */
       55     5927    2                 ALIGN_OFF = 3 ;
       56     5928    2            CASE (1,3) ;  /* allocate WORDS */
       57     5929    2              NUM_WORDS=MCB.SIZE+1;
       58     5930    2              IF MCB.TYPE = 1
       59     5931    2              THEN    /* Any WORD alignment */
       60     5932    2                 ALIGN_OFF = 0 ;
       61     5933    2              ELSE    /* DOUBLE WORD alignment */
       62     5934    2                 ALIGN_OFF = 3 ;
       63     5935    2            CASE (ELSE) ;  /* ERROR!!! */
       64     5936    2              MCB.ERR = E_BDTYPE;
       65     5937    2              ALTRETURN;
       66     5938    2           END; /* DO case ... END */
       67     5939    1           IF MCB.WKSZ = 0
       68     5940    1           THEN   /* No space to allocate ?!?! */
       69     5941    2              DO;
       70     5942    2                 MCB.ERR = E_NOSPACE;
       71     5943    2                 ALTRETURN;
       72     5944    2                 END;
       73     5945    1           IF MCB.FREE_HEAD$ ~= ADDR (NIL)
       74     5946    1           THEN
       75     5947    2              DO; /* try to allocate from freed list */
       76     5948    2                 LINK2$ = ADDR (NIL) ;
       77     5949    2                 LINK1$ = MCB.FREE_HEAD$;
       78     5950    3                 DO WHILE (LINK1$ ~= ADDR (NIL) ) ; /* RUN DOWN LIST */
       79     5951    3                    IF LINK1$ -> X$MAP.SIZE >= NUM_WORDS
       80     5952    3                    THEN
       81     5953    4                       DO; /* found a block. remove from list */
       82     5954    4                          IF ALIGN_OFF ~= 0 AND LINK1$ = PALIGND(LINK1$)
       83     5955    4                          THEN                  /* On EVEN word */
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:4    
       84     5956    4                             GOTO GET_NEXT_LINK ;
       85     5957    4                          IF LINK2$ = ADDR (NIL) /* FIRST ITEM ON LIST */
       86     5958    4                          THEN
       87     5959    4                             MCB.FREE_HEAD$ = LINK1$ -> X$MAP.LINK$;
       88     5960    4                          ELSE
       89     5961    4                             LINK2$ -> X$MAP.LINK$ = LINK1$ -> X$MAP.LINK$;
       90     5962    4                          IF LINK1$ -> X$MAP.SIZE > NUM_WORDS + MAXIMUM(0,MCB.MIN_SIZE)
              5962                                   +2
       91     5963    4                          THEN
       92     5964    5                             DO; /* return extra space */
       93     5965    5                                MCB.ADDRESS$ = PINCRW (LINK1$,NUM_WORDS) ;
       94     5966    5                                MCB.ADDRESS$ -> X$MAP.SIZE = LINK1$ ->
       95     5967    5                                      X$MAP.SIZE-NUM_WORDS;
       96     5968    5                                MCB.ADDRESS$ = PINCRW (MCB.ADDRESS$,1) ;
       97     5969    5                                CALL X$DEALLOCATE (MCB) ;
       98     5970    5                                LINK1$ -> X$MAP.SIZE = NUM_WORDS;
       99     5971    5                                END;
      100     5972    4                          MCB.ADDRESS$ = PINCRW (LINK1$,1) ;
      101     5973    4                          RETURN; /* got the buffer,go home */
      102     5974    4                          END;
      103     5975    3   GET_NEXT_LINK:
      104     5976                   /* get the next node on the list */
      105     5977    3                    LINK2$ = LINK1$;
      106     5978    3                    LINK1$ = LINK1$ -> X$MAP.LINK$;
      107     5979    3                    END; /* DO WHILE .... END */
      108     5980    2                 END;
      109     5981        /* no block large enough in freed space */
      110     5982        /* have to get it from MCB.HI_SEGMENT$ */
      111     5983    1           IF MCB.WKSZ < NUM_WORDS + POFFW(MCB.HI_SEGMENT$,MCB.SEGMENT_BASE$)
      112     5984    1                 + ALIGN_OFF
      113     5985    1           THEN
      114     5986    2              DO; /* NOT ENOUGH SPACE. ERROR */
      115     5987    2                 MCB.ERR = E_NOSPACE;
      116     5988    2                 ALTRETURN;
      117     5989    2                 END;
      118     5990    1           IF ALIGN_OFF ~= 0 AND MCB.HI_SEGMENT$ = PALIGND(MCB.HI_SEGMENT$)
      119     5991    1           THEN                          /* On EVEN word, need ODD word. */
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:5    
      120     5992    2              DO ;
      121     5993    2                 MCB.HI_SEGMENT$->X$MAP.SIZE = ALIGN_OFF ;
      122     5994    2                 MCB.ADDRESS$ = PINCRW(MCB.HI_SEGMENT$,1) ;
      123     5995    2                 SAVE$ = PINCRW(MCB.HI_SEGMENT$, ALIGN_OFF) ;
      124     5996    2                 MCB.HI_SEGMENT$ = PINCRW(SAVE$,1) ; /* Fake out X$DEALLOCATE   */
      125     5997    2                 CALL X$DEALLOCATE(MCB) ;
      126     5998    2                 MCB.HI_SEGMENT$ = SAVE$ ;
      127     5999    2                 END ; /* Then Do */
      128     6000    1           MCB.ADDRESS$ = PINCRW (MCB.HI_SEGMENT$,1) ;
      129     6001    1           MCB.HI_SEGMENT$ -> X$MAP.SIZE = NUM_WORDS;
      130     6002    1           MCB.HI_SEGMENT$ = PINCRW (MCB.HI_SEGMENT$,NUM_WORDS) ;
      131     6003    1           RETURN;
      132     6004    1   END X$ALLOCATE;
      133     6005        %EOD;

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:6    
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$ALLOCATE.

   Procedure X$ALLOCATE requires 162 words for executable code.
   Procedure X$ALLOCATE requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:7    

 Object Unit name= X$ALLOCATE                                 File name= XUM$MANAGE.:E05TOU
 UTS= JUL 30 '97 09:22:18.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  X$ALLOCATE
    2   Proc  even  none   162    242  X$ALLOCATE
    3  RoData even  none     2      2  X$ALLOCATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  X$ALLOCATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 X$DEALLOCATE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:8    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /******************************************************************/
        7        7        /*M*    XUM$MANAGE   DYNAMIC MEMORY MANAGEMENT ROUTINES           */
        8        8        /**/
        9        9        /*X*    DMC,ICP,IND=3,CTI=6,ECU=3,DCI=3,DTI=3             */
       10       10        /*I*    NAME:    X$ALLOCATE
       11       11                PURPOSE: To dynamically allocate space within
       12       12                         the FREE SPACE AREA. Allocation is in
       13       13                         terms of BYTES or WORDS.
       14       14                         Minimum allocation is one byte.
       15       15                         NOTE: One extra word is required
       16       16                         for each block allocated.
       17       17        */
       18       18        /******************************************************************/
       19       19        X$ALLOCATE: PROC (MCB) ALTRET;

     19  2 000000   000000 700200 xent  X$ALLOCATE   TSX0  ! X66_AUTO_1
         2 000001   000014 000001                    ZERO    12,1

       20       20        /***** Include files *****/
       21       21        %INCLUDE CP_6;
       22     5580        %INCLUDE XUM_MACRO_C;
       23     5607        %INCLUDE XU_PERR_C;
       24     5798        %XUM$MCB (NAME = MCB) ;
       25     5802    1   DCL 1 X$MAP BASED,
       26     5803    1         2 SIZE SBIN WORD UNAL,
       27     5804    1         2 LINK$ PTR;
       28     5805        /***** LOCAL VARIABLES *****/
       29     5806    1   DCL LINK1$ PTR;
       30     5807    1   DCL LINK2$ PTR;
       31     5808    1   DCL NUM_WORDS UBIN WORD;
       32     5809    1   DCL SAVE$ PTR ;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:9    
       33     5810    1   DCL ALIGN_OFF UBIN WORD ;
       34     5811        /***** Error codes *****/
       35     5812        /*E*    ERROR:  XUM-E$BDTYPE-C
       36     5813                MESSAGE: Bad type specification MCB.TYPE > 1
       37     5814                MESSAGE1: BYTE = 0, WORD = 1
       38     5815        */
       39     5816          %VLP_ERRCODE (FPTN=E_BDTYPE,FCG="XU",MID="M",ERR#=%E$BDTYPE,STCLASS=CONSTANT);
       40     5861        /*E*    ERROR:  XUM-E$NOSPACE-C
       41     5862                MESSAGE: Insufficient space for allocation
       42     5863                MESSAGE1: Work space should be larger
       43     5864        */
       44     5865          %VLP_ERRCODE (FPTN=E_NOSPACE,FCG="XU",MID="M",ERR#=%E$NOSPACE,STCLASS=CONSTANT);
       45     5910        %XUM_ENTRIES (OMIT=X$ALLOCATE);
       46     5918        %EJECT;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:10   
       47     5919    1           MCB.ERR = '0'O;

   5919  2 000002   200003 470500                    LDP0    @MCB,,AUTO
         2 000003   000010 450100                    STZ     8,,PR0

       48     5920    2           DO CASE (MCB.TYPE) ;

   5920  2 000004   000005 235100                    LDA     5,,PR0
         2 000005   000004 115007                    CMPA    4,DL
         2 000006   000010 602005 2                  TNC     s:5920+4,AL
         2 000007   000043 710000 2                  TRA     s:5936
         2 000010   000014 710000 2                  TRA     s:5922
         2 000011   000030 710000 2                  TRA     s:5929
         2 000012   000014 710000 2                  TRA     s:5922
         2 000013   000030 710000 2                  TRA     s:5929

       49     5921    2            CASE (0,2) ;  /* allocate BYTES */

       50     5922    2              NUM_WORDS = (MCB.SIZE + 3) / 4 + 1;

   5922  2 000014   000006 236100                    LDQ     6,,PR0
         2 000015   000003 036007                    ADLQ    3,DL
         2 000016   000004 506007                    DIV     4,DL
         2 000017   000001 036007                    ADLQ    1,DL
         2 000020   200006 756100                    STQ     NUM_WORDS,,AUTO

       51     5923    2              IF MCB.TYPE = 0

   5923  2 000021   000005 235100                    LDA     5,,PR0
         2 000022   000025 601000 2                  TNZ     s:5927

       52     5924    2              THEN    /* Any WORD alignment */
       53     5925    2                 ALIGN_OFF = 0 ;

   5925  2 000023   200010 450100                    STZ     ALIGN_OFF,,AUTO
         2 000024   000046 710000 2                  TRA     s:5939

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:11   
       54     5926    2              ELSE    /* DOUBLE WORD alignment */
       55     5927    2                 ALIGN_OFF = 3 ;

   5927  2 000025   000003 235007                    LDA     3,DL
         2 000026   200010 755100                    STA     ALIGN_OFF,,AUTO
         2 000027   000046 710000 2                  TRA     s:5939

       56     5928    2            CASE (1,3) ;  /* allocate WORDS */

       57     5929    2              NUM_WORDS=MCB.SIZE+1;

   5929  2 000030   000006 235100                    LDA     6,,PR0
         2 000031   000001 035007                    ADLA    1,DL
         2 000032   200006 755100                    STA     NUM_WORDS,,AUTO

       58     5930    2              IF MCB.TYPE = 1

   5930  2 000033   000005 235100                    LDA     5,,PR0
         2 000034   000001 115007                    CMPA    1,DL
         2 000035   000040 601000 2                  TNZ     s:5934

       59     5931    2              THEN    /* Any WORD alignment */
       60     5932    2                 ALIGN_OFF = 0 ;

   5932  2 000036   200010 450100                    STZ     ALIGN_OFF,,AUTO
         2 000037   000046 710000 2                  TRA     s:5939

       61     5933    2              ELSE    /* DOUBLE WORD alignment */
       62     5934    2                 ALIGN_OFF = 3 ;

   5934  2 000040   000003 236007                    LDQ     3,DL
         2 000041   200010 756100                    STQ     ALIGN_OFF,,AUTO
         2 000042   000046 710000 2                  TRA     s:5939

       63     5935    2            CASE (ELSE) ;  /* ERROR!!! */

       64     5936    2              MCB.ERR = E_BDTYPE;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:12   

   5936  2 000043   000000 236000 1                  LDQ     E_BDTYPE
         2 000044   000010 756100                    STQ     8,,PR0

       65     5937    2              ALTRETURN;

   5937  2 000045   000000 702200 xent               TSX2  ! X66_AALT

       66     5938    2           END; /* DO case ... END */

       67     5939    1           IF MCB.WKSZ = 0

   5939  2 000046   000004 235100                    LDA     4,,PR0
         2 000047   000053 601000 2                  TNZ     s:5945

       68     5940    1           THEN   /* No space to allocate ?!?! */
       69     5941    2              DO;

       70     5942    2                 MCB.ERR = E_NOSPACE;

   5942  2 000050   000001 236000 1                  LDQ     E_NOSPACE
         2 000051   000010 756100                    STQ     8,,PR0

       71     5943    2                 ALTRETURN;

   5943  2 000052   000000 702200 xent               TSX2  ! X66_AALT

       72     5944    2                 END;
       73     5945    1           IF MCB.FREE_HEAD$ ~= ADDR (NIL)

   5945  2 000053   000001 236100                    LDQ     1,,PR0
         2 000054   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000055   000157 600000 2                  TZE     s:5983

       74     5946    1           THEN
       75     5947    2              DO; /* try to allocate from freed list */

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:13   
       76     5948    2                 LINK2$ = ADDR (NIL) ;

   5948  2 000056   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000057   200005 756100                    STQ     LINK2$,,AUTO

       77     5949    2                 LINK1$ = MCB.FREE_HEAD$;

   5949  2 000060   000001 236100                    LDQ     1,,PR0
         2 000061   200004 756100                    STQ     LINK1$,,AUTO

       78     5950    3                 DO WHILE (LINK1$ ~= ADDR (NIL) ) ; /* RUN DOWN LIST */

   5950  2 000062   000155 710000 2                  TRA     s:5979

       79     5951    3                    IF LINK1$ -> X$MAP.SIZE >= NUM_WORDS

   5951  2 000063   200004 470500                    LDP0    LINK1$,,AUTO
         2 000064   000000 236100                    LDQ     0,,PR0
         2 000065   000151 604000 2                  TMI     GET_NEXT_LINK
         2 000066   200006 116100                    CMPQ    NUM_WORDS,,AUTO
         2 000067   000151 602000 2                  TNC     GET_NEXT_LINK

       80     5952    3                    THEN
       81     5953    4                       DO; /* found a block. remove from list */

       82     5954    4                          IF ALIGN_OFF ~= 0 AND LINK1$ = PALIGND(LINK1$)

   5954  2 000070   200010 235100                    LDA     ALIGN_OFF,,AUTO
         2 000071   000077 600000 2                  TZE     s:5957
         2 000072   200004 236100                    LDQ     LINK1$,,AUTO
         2 000073   000000 036000 3                  ADLQ    0
         2 000074   000001 376000 3                  ANQ     1
         2 000075   200004 116100                    CMPQ    LINK1$,,AUTO
         2 000076   000151 600000 2                  TZE     GET_NEXT_LINK

       83     5955    4                          THEN                  /* On EVEN word */
       84     5956    4                             GOTO GET_NEXT_LINK ;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:14   
       85     5957    4                          IF LINK2$ = ADDR (NIL) /* FIRST ITEM ON LIST */

   5957  2 000077   200005 236100                    LDQ     LINK2$,,AUTO
         2 000100   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000101   000106 601000 2                  TNZ     s:5961

       86     5958    4                          THEN
       87     5959    4                             MCB.FREE_HEAD$ = LINK1$ -> X$MAP.LINK$;

   5959  2 000102   000001 236100                    LDQ     1,,PR0
         2 000103   200003 471500                    LDP1    @MCB,,AUTO
         2 000104   100001 756100                    STQ     1,,PR1
         2 000105   000111 710000 2                  TRA     s:5962

       88     5960    4                          ELSE
       89     5961    4                             LINK2$ -> X$MAP.LINK$ = LINK1$ -> X$MAP.LINK$;

   5961  2 000106   000001 236100                    LDQ     1,,PR0
         2 000107   200005 471500                    LDP1    LINK2$,,AUTO
         2 000110   100001 756100                    STQ     1,,PR1

       90     5962    4                         IF LINK1$ -> X$MAP.SIZE > NUM_WORDS + MAXIMUM(0,MCB.MIN_SIZE)
              5962                                   +2

   5962  2 000111   200003 471500                    LDP1    @MCB,,AUTO
         2 000112   100007 236100                    LDQ     7,,PR1
         2 000113   000000 116003                    CMPQ    0,DU
         2 000114   000116 605000 2                  TPL     s:5962+5
         2 000115   000000 236003                    LDQ     0,DU
         2 000116   200006 036100                    ADLQ    NUM_WORDS,,AUTO
         2 000117   000002 036007                    ADLQ    2,DL
         2 000120   000000 116100                    CMPQ    0,,PR0
         2 000121   000144 605000 2                  TPL     s:5972

       91     5963    4                          THEN
       92     5964    5                             DO; /* return extra space */

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:15   
       93     5965    5                                MCB.ADDRESS$ = PINCRW (LINK1$,NUM_WORDS) ;

   5965  2 000122   200006 236100                    LDQ     NUM_WORDS,,AUTO
         2 000123   000022 736000                    QLS     18
         2 000124   200004 036100                    ADLQ    LINK1$,,AUTO
         2 000125   100000 756100                    STQ     0,,PR1

       94     5966    5                                MCB.ADDRESS$ -> X$MAP.SIZE = LINK1$ ->

   5966  2 000126   100000 473500                    LDP3    0,,PR1
         2 000127   000000 236100                    LDQ     0,,PR0
         2 000130   200006 136100                    SBLQ    NUM_WORDS,,AUTO
         2 000131   300000 756100                    STQ     0,,PR3

       95     5967    5                                      X$MAP.SIZE-NUM_WORDS;
       96     5968    5                                MCB.ADDRESS$ = PINCRW (MCB.ADDRESS$,1) ;

   5968  2 000132   100000 236100                    LDQ     0,,PR1
         2 000133   000001 036003                    ADLQ    1,DU
         2 000134   100000 756100                    STQ     0,,PR1

       97     5969    5                                CALL X$DEALLOCATE (MCB) ;

   5969  2 000135   200003 630500                    EPPR0   @MCB,,AUTO
         2 000136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000137   000000 701000 xent               TSX1    X$DEALLOCATE
         2 000140   000000 011000                    NOP     0

       98     5970    5                                LINK1$ -> X$MAP.SIZE = NUM_WORDS;

   5970  2 000141   200006 235100                    LDA     NUM_WORDS,,AUTO
         2 000142   200004 470500                    LDP0    LINK1$,,AUTO
         2 000143   000000 755100                    STA     0,,PR0

       99     5971    5                                END;

      100     5972    4                          MCB.ADDRESS$ = PINCRW (LINK1$,1) ;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:16   

   5972  2 000144   200004 236100                    LDQ     LINK1$,,AUTO
         2 000145   000001 036003                    ADLQ    1,DU
         2 000146   200003 471500                    LDP1    @MCB,,AUTO
         2 000147   100000 756100                    STQ     0,,PR1

      101     5973    4                          RETURN; /* got the buffer,go home */

   5973  2 000150   000000 702200 xent               TSX2  ! X66_ARET

      102     5974    4                          END;
      103     5975    3   GET_NEXT_LINK:
      104     5976                   /* get the next node on the list */
      105     5977    3                    LINK2$ = LINK1$;

   5977  2 000151   200004 236100       GET_NEXT_LI* LDQ     LINK1$,,AUTO
         2 000152   200005 756100                    STQ     LINK2$,,AUTO

      106     5978    3                    LINK1$ = LINK1$ -> X$MAP.LINK$;

   5978  2 000153   000001 236100                    LDQ     1,,PR0
         2 000154   200004 756100                    STQ     LINK1$,,AUTO

      107     5979    3                    END; /* DO WHILE .... END */

   5979  2 000155   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000156   000063 601000 2                  TNZ     s:5951

      108     5980    2                 END;

      109     5981        /* no block large enough in freed space */
      110     5982        /* have to get it from MCB.HI_SEGMENT$ */
      111     5983    1           IF MCB.WKSZ < NUM_WORDS + POFFW(MCB.HI_SEGMENT$,MCB.SEGMENT_BASE$)

   5983  2 000157   200003 470500                    LDP0    @MCB,,AUTO
         2 000160   000002 236100                    LDQ     2,,PR0
         2 000161   000022 772000                    QRL     18
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:17   
         2 000162   200012 756100                    STQ     ALIGN_OFF+2,,AUTO
         2 000163   000003 236100                    LDQ     3,,PR0
         2 000164   000022 772000                    QRL     18
         2 000165   200012 136100                    SBLQ    ALIGN_OFF+2,,AUTO
         2 000166   200006 036100                    ADLQ    NUM_WORDS,,AUTO
         2 000167   200010 036100                    ADLQ    ALIGN_OFF,,AUTO
         2 000170   000177 604000 2                  TMI     s:5990
         2 000171   000004 116100                    CMPQ    4,,PR0
         2 000172   000177 602000 2                  TNC     s:5990
         2 000173   000177 600000 2                  TZE     s:5990

      112     5984    1                 + ALIGN_OFF
      113     5985    1           THEN
      114     5986    2              DO; /* NOT ENOUGH SPACE. ERROR */

      115     5987    2                 MCB.ERR = E_NOSPACE;

   5987  2 000174   000001 236000 1                  LDQ     E_NOSPACE
         2 000175   000010 756100                    STQ     8,,PR0

      116     5988    2                 ALTRETURN;

   5988  2 000176   000000 702200 xent               TSX2  ! X66_AALT

      117     5989    2                 END;
      118     5990    1           IF ALIGN_OFF ~= 0 AND MCB.HI_SEGMENT$ = PALIGND(MCB.HI_SEGMENT$)

   5990  2 000177   200010 235100                    LDA     ALIGN_OFF,,AUTO
         2 000200   000230 600000 2                  TZE     s:6000
         2 000201   000003 236100                    LDQ     3,,PR0
         2 000202   000000 036000 3                  ADLQ    0
         2 000203   000001 376000 3                  ANQ     1
         2 000204   000003 116100                    CMPQ    3,,PR0
         2 000205   000230 601000 2                  TNZ     s:6000

      119     5991    1           THEN                          /* On EVEN word, need ODD word. */
      120     5992    2              DO ;
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:18   

      121     5993    2                 MCB.HI_SEGMENT$->X$MAP.SIZE = ALIGN_OFF ;

   5993  2 000206   000003 471500                    LDP1    3,,PR0
         2 000207   100000 755100                    STA     0,,PR1

      122     5994    2                 MCB.ADDRESS$ = PINCRW(MCB.HI_SEGMENT$,1) ;

   5994  2 000210   000003 236100                    LDQ     3,,PR0
         2 000211   000001 036003                    ADLQ    1,DU
         2 000212   000000 756100                    STQ     0,,PR0

      123     5995    2                 SAVE$ = PINCRW(MCB.HI_SEGMENT$, ALIGN_OFF) ;

   5995  2 000213   000003 471500                    LDP1    3,,PR0
         2 000214   100000 633505                    EPPR3   0,AL,PR1
         2 000215   200007 453500                    STP3    SAVE$,,AUTO

      124     5996    2                 MCB.HI_SEGMENT$ = PINCRW(SAVE$,1) ; /* Fake out X$DEALLOCATE   */

   5996  2 000216   200007 236100                    LDQ     SAVE$,,AUTO
         2 000217   000001 036003                    ADLQ    1,DU
         2 000220   000003 756100                    STQ     3,,PR0

      125     5997    2                 CALL X$DEALLOCATE(MCB) ;

   5997  2 000221   200003 630500                    EPPR0   @MCB,,AUTO
         2 000222   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000223   000000 701000 xent               TSX1    X$DEALLOCATE
         2 000224   000000 011000                    NOP     0

      126     5998    2                 MCB.HI_SEGMENT$ = SAVE$ ;

   5998  2 000225   200007 236100                    LDQ     SAVE$,,AUTO
         2 000226   200003 470500                    LDP0    @MCB,,AUTO
         2 000227   000003 756100                    STQ     3,,PR0

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:19   
      127     5999    2                 END ; /* Then Do */

      128     6000    1           MCB.ADDRESS$ = PINCRW (MCB.HI_SEGMENT$,1) ;

   6000  2 000230   000003 236100                    LDQ     3,,PR0
         2 000231   000001 036003                    ADLQ    1,DU
         2 000232   000000 756100                    STQ     0,,PR0

      129     6001    1           MCB.HI_SEGMENT$ -> X$MAP.SIZE = NUM_WORDS;

   6001  2 000233   000003 471500                    LDP1    3,,PR0
         2 000234   200006 235100                    LDA     NUM_WORDS,,AUTO
         2 000235   100000 755100                    STA     0,,PR1

      130     6002    1           MCB.HI_SEGMENT$ = PINCRW (MCB.HI_SEGMENT$,NUM_WORDS) ;

   6002  2 000236   000003 471500                    LDP1    3,,PR0
         2 000237   100000 633505                    EPPR3   0,AL,PR1
         2 000240   000003 453500                    STP3    3,,PR0

      131     6003    1           RETURN;

   6003  2 000241   000000 702200 xent               TSX2  ! X66_ARET
      132     6004    1   END X$ALLOCATE;
      133     6005        %EOD;

PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:20   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$ALLOCATE.
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:21   

 **** Variables and constants ****

  ****  Section 001 RoData X$ALLOCATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_BDTYPE                   1-0-0/w STRC        r     1 E_NOSPACE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MCB                      10-0-0/w UBIN        r     1 ALIGN_OFF
     4-0-0/w PTR         r     1 LINK1$                     5-0-0/w PTR         r     1 LINK2$
    *0-0-0/w STRC(324)   r     1 MCB                        6-0-0/w UBIN        r     1 NUM_WORDS
     7-0-0/w PTR         r     1 SAVE$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 X$MAP


   Procedure X$ALLOCATE requires 162 words for executable code.
   Procedure X$ALLOCATE requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:23   
          MINI XREF LISTING

ALIGN_OFF
      5810**DCL      5925<<ASSIGN   5927<<ASSIGN   5932<<ASSIGN   5934<<ASSIGN   5954>>IF       5983>>IF
      5990>>IF       5993>>ASSIGN   5995>>ASSIGN
E_BDTYPE
      5828**DCL      5936>>ASSIGN
E_NOSPACE
      5877**DCL      5942>>ASSIGN   5987>>ASSIGN
GET_NEXT_LINK
      5977**LABEL    5956--GOTO
LINK1$
      5806**DCL      5949<<ASSIGN   5950>>DOWHILE  5951>>IF       5954>>IF       5954>>IF       5959>>ASSIGN
      5961>>ASSIGN   5962>>IF       5965>>ASSIGN   5966>>ASSIGN   5970>>ASSIGN   5972>>ASSIGN   5977>>ASSIGN
      5978<<ASSIGN   5978>>ASSIGN
LINK2$
      5807**DCL      5948<<ASSIGN   5957>>IF       5961>>ASSIGN   5977<<ASSIGN
MCB
      5799**DCL        19--PROC     5969<>CALL     5997<>CALL
MCB.ADDRESS$
      5799**DCL      5965<<ASSIGN   5966>>ASSIGN   5968<<ASSIGN   5968>>ASSIGN   5972<<ASSIGN   5994<<ASSIGN
      6000<<ASSIGN
MCB.ERR
      5800**DCL      5919<<ASSIGN   5936<<ASSIGN   5942<<ASSIGN   5987<<ASSIGN
MCB.FREE_HEAD$
      5799**DCL      5945>>IF       5949>>ASSIGN   5959<<ASSIGN
MCB.HI_SEGMENT$
      5799**DCL      5983>>IF       5990>>IF       5990>>IF       5993>>ASSIGN   5994>>ASSIGN   5995>>ASSIGN
      5996<<ASSIGN   5998<<ASSIGN   6000>>ASSIGN   6001>>ASSIGN   6002<<ASSIGN   6002>>ASSIGN
MCB.MIN_SIZE
      5800**DCL      5962>>IF
MCB.SEGMENT_BASE$
      5799**DCL      5983>>IF
MCB.SIZE
PL6.E3A0      #001=X$ALLOCATE File=XUM$MANAGE.:E05TSI                            WED 07/30/97 09:22 Page:24   
      5799**DCL      5922>>ASSIGN   5929>>ASSIGN
MCB.TYPE
      5799**DCL      5920>>DOCASE   5923>>IF       5930>>IF
MCB.WKSZ
      5799**DCL      5939>>IF       5983>>IF
NUM_WORDS
      5808**DCL      5922<<ASSIGN   5929<<ASSIGN   5951>>IF       5962>>IF       5965>>ASSIGN   5966>>ASSIGN
      5970>>ASSIGN   5983>>IF       6001>>ASSIGN   6002>>ASSIGN
SAVE$
      5809**DCL      5995<<ASSIGN   5996>>ASSIGN   5998>>ASSIGN
X$DEALLOCATE
      5915**DCL-ENT  5969--CALL     5997--CALL
X$MAP.LINK$
      5804**DCL      5959>>ASSIGN   5961<<ASSIGN   5961>>ASSIGN   5978>>ASSIGN
X$MAP.SIZE
      5803**DCL      5951>>IF       5962>>IF       5966<<ASSIGN   5966>>ASSIGN   5970<<ASSIGN   5993<<ASSIGN
      6001<<ASSIGN

PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:25   
      134        1        /*T***********************************************************/
      135        2        /*T*                                                         */
      136        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      137        4        /*T*                                                         */
      138        5        /*T***********************************************************/
      139        6        /******************************************************************/
      140        7        /*I*    NAME:    X$DEALLOCATE
      141        8                PURPOSE: To deallocate strings and collect the space
      142        9                         into large blocks for use by X$ALLOCATE. By
      143       10                         collecting the smaller blocks into larger
      144       11                         blocks,it should be possible to allocate the
      145       12                         large blocks easily. NOTE: Only those blocks
      146       13                         which have physically adjacent addresses may
      147       14                         be collected into larger blocks. All blocks are
      148       15                         put onto a FREE LIST from which X$ALLOCATE
      149       16                         allocates.
      150       17        */
      151       18        /******************************************************************/
      152       19        X$DEALLOCATE: PROC (MCB) ALTRET;
      153       20        %INCLUDE CP_6;
      154     5579        %INCLUDE XUM_MACRO_C;
      155     5606        %INCLUDE XU_PERR_C;
      156     5797        %XUM$MCB (NAME = MCB) ;
      157     5801    1   DCL 1 X$MAP BASED,
      158     5802    1         2 SIZE SBIN WORD UNAL,
      159     5803    1         2 LINK$ PTR;
      160     5804        /***** LOCAL VARIABLES *****/
      161     5805    1   DCL LINK1$ PTR;
      162     5806    1   DCL 1 LINK1 REDEF LINK1$, 2 * BIT(24), 2 SEGID BIT(12);
      163     5807    1   DCL LINK2$ PTR;
      164     5808    1   DCL 1 LINK2 REDEF LINK2$, 2 * BIT(24), 2 SEGID BIT(12);
      165     5809    1   DCL LINK3$ PTR;
      166     5810    1   DCL LINK4$ PTR;
      167     5811    1   DCL DEALLOCATE$ PTR;
      168     5812    1   DCL NODE_SIZE UBIN WORD;
      169     5813    1   DCL FLAG BIT (1);
      170     5814        /*E*    ERROR:  XUM-E$DBLREL-C
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:26   
      171     5815                MESSAGE: Attempt to deallocate space already deallocated
      172     5816        */
      173     5817          %VLP_ERRCODE (FPTN=E_DBLREL,FCG="XU",MID="M",ERR#=%E$DBLREL, STCLASS=CONSTANT);
      174     5862        /*
      175     5863             ***** Modify MCB.ADDRESS$ to point to the actual block...
      176     5864        */
      177     5865    1           MCB.ERR = '0'O;
      178     5866    1           IF MCB.ADDRESS$ = ADDR(NIL)
      179     5867    1           THEN
      180     5868    1              RETURN;
      181     5869    1           LINK1$ = MCB.ADDRESS$;
      182     5870    1           LINK2$ = MCB.SEGMENT_BASE$;
      183     5871    1           IF LINK1.SEGID ~= LINK2.SEGID
      184     5872    1                 OR MCB.ADDRESS$ < MCB.SEGMENT_BASE$
      185     5873    1                 OR MCB.ADDRESS$ > MCB.HI_SEGMENT$
      186     5874    1           THEN /* Ignore */
      187     5875    1              RETURN;
      188     5876    1           DEALLOCATE$ = PINCRW (MCB.ADDRESS$,-1) ;
      189     5877    1           NODE_SIZE = DEALLOCATE$ -> X$MAP.SIZE;
      190     5878    1           IF MCB.FREE_HEAD$ = ADDR (NIL)
      191     5879    1           THEN
      192     5880    2              DO; /* may need to form list */
      193     5881    2                 IF PINCRW (DEALLOCATE$,NODE_SIZE) = MCB.HI_SEGMENT$
      194     5882    2                 THEN
      195     5883    2                    MCB.HI_SEGMENT$ = DEALLOCATE$;
      196     5884    2                 ELSE
      197     5885    3                    DO;
      198     5886    3                       MCB.FREE_HEAD$ = DEALLOCATE$;
      199     5887    3                       DEALLOCATE$ -> X$MAP.LINK$ = ADDR (NIL) ;
      200     5888    3                       END;
      201     5889    2                 RETURN;
      202     5890    2                 END;
      203     5891    1           IF DEALLOCATE$ < MCB.FREE_HEAD$
      204     5892    1           THEN /* new first node */
      205     5893    2              DO;
      206     5894    2                 IF PINCRW (DEALLOCATE$,NODE_SIZE) = MCB.FREE_HEAD$
      207     5895    2                 THEN /* adjacent to current first node */
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:27   
      208     5896    3                    DO;
      209     5897    3                       DEALLOCATE$ -> X$MAP.SIZE = NODE_SIZE +
      210     5898    3                             MCB.FREE_HEAD$ -> X$MAP.SIZE;
      211     5899    3                       DEALLOCATE$ -> X$MAP.LINK$ = MCB.FREE_HEAD$ -> X$MAP.LINK$;
      212     5900    3                       END;
      213     5901    2                 ELSE /* new node replaces old first node */
      214     5902    3                    DO;
      215     5903    3                       DEALLOCATE$ -> X$MAP.LINK$ = MCB.FREE_HEAD$;
      216     5904    3                       END;
      217     5905    2                 MCB.FREE_HEAD$ = DEALLOCATE$; /* new FREE_HEAD$ */
      218     5906    2                 RETURN;
      219     5907    2                 END;
      220     5908    1           FLAG = '0'B;
      221     5909    1           LINK4$ = ADDR (NIL);
      222     5910    1           LINK3$ = ADDR (NIL) ;
      223     5911    1           LINK2$ = ADDR (NIL) ;
      224     5912    1           LINK1$ = MCB.FREE_HEAD$;
      225     5913    2           DO WHILE (LINK1$ ~= ADDR (NIL) ) ;
      226     5914    2              IF LINK2$ >= DEALLOCATE$
      227     5915    2              THEN
      228     5916    2                 GOTO FOUND_IT;
      229     5917    2              LINK4$ = LINK3$;
      230     5918    2              LINK3$ = LINK2$;
      231     5919    2              LINK2$ = LINK1$;
      232     5920    2              LINK1$ = LINK1$ -> X$MAP.LINK$;
      233     5921    2              END; /* DO WHILE ... END */
      234     5922        /*
      235     5923             LINK2$ -> (node with address just larger than DEALLOCATE$)
      236     5924             LINK3$ -> (node with address just smaller than DEALLOCATE$)
      237     5925             LINK4$ -> (node with address just smaller than LINK3$)
      238     5926        */
      239     5927    1   FOUND_IT: ; /* just what it says */
      240     5928    1           IF LINK2$ <= DEALLOCATE$
      241     5929    1           THEN
      242     5930    2              DO; /* move pointers down once more */
      243     5931    2                 LINK4$ = LINK3$;
      244     5932    2                 LINK3$ = LINK2$;
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:28   
      245     5933    2                 LINK2$ = LINK1$;
      246     5934    2                 END;
      247     5935        /*
      248     5936             See if it has already been DEALLOCATED
      249     5937        */
      250     5938    1           IF PINCRW (LINK3$, LINK3$->X$MAP.SIZE) > DEALLOCATE$
      251     5939    1           THEN /* node already deallocated */
      252     5940    2              DO; /* error */
      253     5941    2                 MCB.ERR = E_DBLREL;
      254     5942    2                 ALTRETURN;
      255     5943    2                 END;
      256     5944        /*
      257     5945             Try to compress this new block into existing ones
      258     5946        */
      259     5947    1           DEALLOCATE$ -> X$MAP.LINK$ = LINK2$;
      260     5948    1           IF LINK2$ = ADDR (NIL)
      261     5949    1           THEN
      262     5950    1              GOTO HOME; /* cant be adjacent to nonexistant lower node */
      263     5951    1           IF PINCRW (DEALLOCATE$,NODE_SIZE) = LINK2$
      264     5952    1           THEN
      265     5953    2              DO; /* adjacent to upper node */
      266     5954    2                 LINK3$ -> X$MAP.LINK$ = DEALLOCATE$;
      267     5955    2                 DEALLOCATE$ -> X$MAP.SIZE = NODE_SIZE +
      268     5956    2                       LINK2$ -> X$MAP.SIZE;
      269     5957    2                 DEALLOCATE$ -> X$MAP.LINK$ = LINK2$ -> X$MAP.LINK$;
      270     5958    2                 FLAG = '1'B;
      271     5959    2                 END;
      272     5960    1   HOME:   IF PINCRW (LINK3$,LINK3$ -> X$MAP.SIZE) = DEALLOCATE$
      273     5961    1           THEN
      274     5962    2              DO; /* adjacent to lower node */
      275     5963    2                 LINK3$ -> X$MAP.SIZE = LINK3$ -> X$MAP.SIZE +
      276     5964    2                       DEALLOCATE$ -> X$MAP.SIZE;
      277     5965    2                 LINK3$ -> X$MAP.LINK$ = DEALLOCATE$ -> X$MAP.LINK$;
      278     5966    2                 FLAG = '1'B;
      279     5967    2                 END;
      280     5968    1           IF ~FLAG
      281     5969    1           THEN /* INSERT NEW NODE BETWEEN LINK2$ & LINK3$ */
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:29   
      282     5970    1              LINK3$ -> X$MAP.LINK$ = DEALLOCATE$;
      283     5971    1           RETURN;
      284     5972    1   END X$DEALLOCATE;

PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:30   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$DEALLOCATE.

   Procedure X$DEALLOCATE requires 145 words for executable code.
   Procedure X$DEALLOCATE requires 12 words of local(AUTO) storage.

    No errors detected in file XUM$MANAGE.:E05TSI    .

PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:31   

 Object Unit name= X$DEALLOCATE                               File name= XUM$MANAGE.:E05TOU
 UTS= JUL 30 '97 09:22:44.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  X$DEALLOCATE
    2   Proc  even  none   145    221  X$DEALLOCATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  X$DEALLOCATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:32   


      134        1        /*T***********************************************************/
      135        2        /*T*                                                         */
      136        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      137        4        /*T*                                                         */
      138        5        /*T***********************************************************/
      139        6        /******************************************************************/
      140        7        /*I*    NAME:    X$DEALLOCATE
      141        8                PURPOSE: To deallocate strings and collect the space
      142        9                         into large blocks for use by X$ALLOCATE. By
      143       10                         collecting the smaller blocks into larger
      144       11                         blocks,it should be possible to allocate the
      145       12                         large blocks easily. NOTE: Only those blocks
      146       13                         which have physically adjacent addresses may
      147       14                         be collected into larger blocks. All blocks are
      148       15                         put onto a FREE LIST from which X$ALLOCATE
      149       16                         allocates.
      150       17        */
      151       18        /******************************************************************/
      152       19        X$DEALLOCATE: PROC (MCB) ALTRET;

     19  2 000000   000000 700200 xent  X$DEALLOCATE TSX0  ! X66_AUTO_1
         2 000001   000014 000001                    ZERO    12,1

      153       20        %INCLUDE CP_6;
      154     5579        %INCLUDE XUM_MACRO_C;
      155     5606        %INCLUDE XU_PERR_C;
      156     5797        %XUM$MCB (NAME = MCB) ;
      157     5801    1   DCL 1 X$MAP BASED,
      158     5802    1         2 SIZE SBIN WORD UNAL,
      159     5803    1         2 LINK$ PTR;
      160     5804        /***** LOCAL VARIABLES *****/
      161     5805    1   DCL LINK1$ PTR;
      162     5806    1   DCL 1 LINK1 REDEF LINK1$, 2 * BIT(24), 2 SEGID BIT(12);
      163     5807    1   DCL LINK2$ PTR;
      164     5808    1   DCL 1 LINK2 REDEF LINK2$, 2 * BIT(24), 2 SEGID BIT(12);
      165     5809    1   DCL LINK3$ PTR;
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:33   
      166     5810    1   DCL LINK4$ PTR;
      167     5811    1   DCL DEALLOCATE$ PTR;
      168     5812    1   DCL NODE_SIZE UBIN WORD;
      169     5813    1   DCL FLAG BIT (1);
      170     5814        /*E*    ERROR:  XUM-E$DBLREL-C
      171     5815                MESSAGE: Attempt to deallocate space already deallocated
      172     5816        */
      173     5817          %VLP_ERRCODE (FPTN=E_DBLREL,FCG="XU",MID="M",ERR#=%E$DBLREL, STCLASS=CONSTANT);
      174     5862        /*
      175     5863             ***** Modify MCB.ADDRESS$ to point to the actual block...
      176     5864        */
      177     5865    1           MCB.ERR = '0'O;

   5865  2 000002   200003 470500                    LDP0    @MCB,,AUTO
         2 000003   000010 450100                    STZ     8,,PR0

      178     5866    1           IF MCB.ADDRESS$ = ADDR(NIL)

   5866  2 000004   000000 236100                    LDQ     0,,PR0
         2 000005   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000006   000010 601000 2                  TNZ     s:5869

      179     5867    1           THEN
      180     5868    1              RETURN;

   5868  2 000007   000000 702200 xent               TSX2  ! X66_ARET

      181     5869    1           LINK1$ = MCB.ADDRESS$;

   5869  2 000010   200004 756100                    STQ     LINK1$,,AUTO

      182     5870    1           LINK2$ = MCB.SEGMENT_BASE$;

   5870  2 000011   000002 236100                    LDQ     2,,PR0
         2 000012   200005 756100                    STQ     LINK2$,,AUTO

      183     5871    1           IF LINK1.SEGID ~= LINK2.SEGID
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:34   

   5871  2 000013   200004 236100                    LDQ     LINK1$,,AUTO
         2 000014   200005 676100                    ERQ     LINK2$,,AUTO
         2 000015   007777 376007                    ANQ     4095,DL
         2 000016   000025 601000 2                  TNZ     s:5875
         2 000017   000000 236100                    LDQ     0,,PR0
         2 000020   000002 116100                    CMPQ    2,,PR0
         2 000021   000025 602000 2                  TNC     s:5875
         2 000022   000003 116100                    CMPQ    3,,PR0
         2 000023   000026 602000 2                  TNC     s:5876
         2 000024   000026 600000 2                  TZE     s:5876

      184     5872    1                 OR MCB.ADDRESS$ < MCB.SEGMENT_BASE$
      185     5873    1                 OR MCB.ADDRESS$ > MCB.HI_SEGMENT$
      186     5874    1           THEN /* Ignore */
      187     5875    1              RETURN;

   5875  2 000025   000000 702200 xent               TSX2  ! X66_ARET

      188     5876    1           DEALLOCATE$ = PINCRW (MCB.ADDRESS$,-1) ;

   5876  2 000026   777777 036003                    ADLQ    -1,DU
         2 000027   200010 756100                    STQ     DEALLOCATE$,,AUTO

      189     5877    1           NODE_SIZE = DEALLOCATE$ -> X$MAP.SIZE;

   5877  2 000030   200010 471500                    LDP1    DEALLOCATE$,,AUTO
         2 000031   100000 235100                    LDA     0,,PR1
         2 000032   200011 755100                    STA     NODE_SIZE,,AUTO

      190     5878    1           IF MCB.FREE_HEAD$ = ADDR (NIL)

   5878  2 000033   000001 236100                    LDQ     1,,PR0
         2 000034   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000035   000053 601000 2                  TNZ     s:5891

      191     5879    1           THEN
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:35   
      192     5880    2              DO; /* may need to form list */

      193     5881    2                 IF PINCRW (DEALLOCATE$,NODE_SIZE) = MCB.HI_SEGMENT$

   5881  2 000036   200011 236100                    LDQ     NODE_SIZE,,AUTO
         2 000037   000022 736000                    QLS     18
         2 000040   200010 036100                    ADLQ    DEALLOCATE$,,AUTO
         2 000041   000003 116100                    CMPQ    3,,PR0
         2 000042   000046 601000 2                  TNZ     s:5886

      194     5882    2                 THEN
      195     5883    2                    MCB.HI_SEGMENT$ = DEALLOCATE$;

   5883  2 000043   200010 236100                    LDQ     DEALLOCATE$,,AUTO
         2 000044   000003 756100                    STQ     3,,PR0
         2 000045   000052 710000 2                  TRA     s:5889

      196     5884    2                 ELSE
      197     5885    3                    DO;

      198     5886    3                       MCB.FREE_HEAD$ = DEALLOCATE$;

   5886  2 000046   200010 236100                    LDQ     DEALLOCATE$,,AUTO
         2 000047   000001 756100                    STQ     1,,PR0

      199     5887    3                       DEALLOCATE$ -> X$MAP.LINK$ = ADDR (NIL) ;

   5887  2 000050   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000051   100001 756100                    STQ     1,,PR1

      200     5888    3                       END;

      201     5889    2                 RETURN;

   5889  2 000052   000000 702200 xent               TSX2  ! X66_ARET

      202     5890    2                 END;
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:36   
      203     5891    1           IF DEALLOCATE$ < MCB.FREE_HEAD$

   5891  2 000053   200010 116100                    CMPQ    DEALLOCATE$,,AUTO
         2 000054   000100 602000 2                  TNC     s:5908
         2 000055   000100 600000 2                  TZE     s:5908

      204     5892    1           THEN /* new first node */
      205     5893    2              DO;

      206     5894    2                 IF PINCRW (DEALLOCATE$,NODE_SIZE) = MCB.FREE_HEAD$

   5894  2 000056   200011 236100                    LDQ     NODE_SIZE,,AUTO
         2 000057   000022 736000                    QLS     18
         2 000060   200010 036100                    ADLQ    DEALLOCATE$,,AUTO
         2 000061   000001 116100                    CMPQ    1,,PR0
         2 000062   000073 601000 2                  TNZ     s:5903

      207     5895    2                 THEN /* adjacent to current first node */
      208     5896    3                    DO;

      209     5897    3                       DEALLOCATE$ -> X$MAP.SIZE = NODE_SIZE +

   5897  2 000063   000001 473500                    LDP3    1,,PR0
         2 000064   200011 236100                    LDQ     NODE_SIZE,,AUTO
         2 000065   300000 036100                    ADLQ    0,,PR3
         2 000066   100000 756100                    STQ     0,,PR1

      210     5898    3                             MCB.FREE_HEAD$ -> X$MAP.SIZE;
      211     5899    3                       DEALLOCATE$ -> X$MAP.LINK$ = MCB.FREE_HEAD$ -> X$MAP.LINK$;

   5899  2 000067   000001 473500                    LDP3    1,,PR0
         2 000070   300001 236100                    LDQ     1,,PR3
         2 000071   100001 756100                    STQ     1,,PR1

      212     5900    3                       END;

   5900  2 000072   000075 710000 2                  TRA     s:5905
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:37   

      213     5901    2                 ELSE /* new node replaces old first node */
      214     5902    3                    DO;

      215     5903    3                       DEALLOCATE$ -> X$MAP.LINK$ = MCB.FREE_HEAD$;

   5903  2 000073   000001 236100                    LDQ     1,,PR0
         2 000074   100001 756100                    STQ     1,,PR1

      216     5904    3                       END;

      217     5905    2                 MCB.FREE_HEAD$ = DEALLOCATE$; /* new FREE_HEAD$ */

   5905  2 000075   200010 236100                    LDQ     DEALLOCATE$,,AUTO
         2 000076   000001 756100                    STQ     1,,PR0

      218     5906    2                 RETURN;

   5906  2 000077   000000 702200 xent               TSX2  ! X66_ARET

      219     5907    2                 END;
      220     5908    1           FLAG = '0'B;

   5908  2 000100   200012 450100                    STZ     FLAG,,AUTO

      221     5909    1           LINK4$ = ADDR (NIL);

   5909  2 000101   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000102   200007 756100                    STQ     LINK4$,,AUTO

      222     5910    1           LINK3$ = ADDR (NIL) ;

   5910  2 000103   200006 756100                    STQ     LINK3$,,AUTO

      223     5911    1           LINK2$ = ADDR (NIL) ;

   5911  2 000104   200005 756100                    STQ     LINK2$,,AUTO
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:38   

      224     5912    1           LINK1$ = MCB.FREE_HEAD$;

   5912  2 000105   000001 236100                    LDQ     1,,PR0
         2 000106   200004 756100                    STQ     LINK1$,,AUTO

      225     5913    2           DO WHILE (LINK1$ ~= ADDR (NIL) ) ;

   5913  2 000107   000124 710000 2                  TRA     s:5921

      226     5914    2              IF LINK2$ >= DEALLOCATE$

   5914  2 000110   200005 236100                    LDQ     LINK2$,,AUTO
         2 000111   200010 116100                    CMPQ    DEALLOCATE$,,AUTO
         2 000112   000126 603000 2                  TRC     FOUND_IT

      227     5915    2              THEN
      228     5916    2                 GOTO FOUND_IT;
      229     5917    2              LINK4$ = LINK3$;

   5917  2 000113   200006 236100                    LDQ     LINK3$,,AUTO
         2 000114   200007 756100                    STQ     LINK4$,,AUTO

      230     5918    2              LINK3$ = LINK2$;

   5918  2 000115   200005 236100                    LDQ     LINK2$,,AUTO
         2 000116   200006 756100                    STQ     LINK3$,,AUTO

      231     5919    2              LINK2$ = LINK1$;

   5919  2 000117   200004 236100                    LDQ     LINK1$,,AUTO
         2 000120   200005 756100                    STQ     LINK2$,,AUTO

      232     5920    2              LINK1$ = LINK1$ -> X$MAP.LINK$;

   5920  2 000121   200004 470500                    LDP0    LINK1$,,AUTO
         2 000122   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:39   
         2 000123   200004 756100                    STQ     LINK1$,,AUTO

      233     5921    2              END; /* DO WHILE ... END */

   5921  2 000124   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000125   000110 601000 2                  TNZ     s:5914

   5913  2 000126                       FOUND_IT     null
      234     5922        /*
      235     5923             LINK2$ -> (node with address just larger than DEALLOCATE$)
      236     5924             LINK3$ -> (node with address just smaller than DEALLOCATE$)
      237     5925             LINK4$ -> (node with address just smaller than LINK3$)
      238     5926        */
      239     5927    1   FOUND_IT: ; /* just what it says */
      240     5928    1           IF LINK2$ <= DEALLOCATE$

   5928  2 000126   200010 236100                    LDQ     DEALLOCATE$,,AUTO
         2 000127   200005 116100                    CMPQ    LINK2$,,AUTO
         2 000130   000137 602000 2                  TNC     s:5938

      241     5929    1           THEN
      242     5930    2              DO; /* move pointers down once more */

      243     5931    2                 LINK4$ = LINK3$;

   5931  2 000131   200006 236100                    LDQ     LINK3$,,AUTO
         2 000132   200007 756100                    STQ     LINK4$,,AUTO

      244     5932    2                 LINK3$ = LINK2$;

   5932  2 000133   200005 236100                    LDQ     LINK2$,,AUTO
         2 000134   200006 756100                    STQ     LINK3$,,AUTO

      245     5933    2                 LINK2$ = LINK1$;

   5933  2 000135   200004 236100                    LDQ     LINK1$,,AUTO
         2 000136   200005 756100                    STQ     LINK2$,,AUTO
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:40   

      246     5934    2                 END;

      247     5935        /*
      248     5936             See if it has already been DEALLOCATED
      249     5937        */
      250     5938    1           IF PINCRW (LINK3$, LINK3$->X$MAP.SIZE) > DEALLOCATE$

   5938  2 000137   200006 470500                    LDP0    LINK3$,,AUTO
         2 000140   000000 236100                    LDQ     0,,PR0
         2 000141   000022 736000                    QLS     18
         2 000142   200006 036100                    ADLQ    LINK3$,,AUTO
         2 000143   200010 116100                    CMPQ    DEALLOCATE$,,AUTO
         2 000144   000152 602000 2                  TNC     s:5947
         2 000145   000152 600000 2                  TZE     s:5947

      251     5939    1           THEN /* node already deallocated */
      252     5940    2              DO; /* error */

      253     5941    2                 MCB.ERR = E_DBLREL;

   5941  2 000146   000000 236000 1                  LDQ     E_DBLREL
         2 000147   200003 471500                    LDP1    @MCB,,AUTO
         2 000150   100010 756100                    STQ     8,,PR1

      254     5942    2                 ALTRETURN;

   5942  2 000151   000000 702200 xent               TSX2  ! X66_AALT

      255     5943    2                 END;
      256     5944        /*
      257     5945             Try to compress this new block into existing ones
      258     5946        */
      259     5947    1           DEALLOCATE$ -> X$MAP.LINK$ = LINK2$;

   5947  2 000152   200005 236100                    LDQ     LINK2$,,AUTO
         2 000153   200010 471500                    LDP1    DEALLOCATE$,,AUTO
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:41   
         2 000154   100001 756100                    STQ     1,,PR1

      260     5948    1           IF LINK2$ = ADDR (NIL)

   5948  2 000155   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000156   000176 600000 2                  TZE     HOME

      261     5949    1           THEN
      262     5950    1              GOTO HOME; /* cant be adjacent to nonexistant lower node */
      263     5951    1           IF PINCRW (DEALLOCATE$,NODE_SIZE) = LINK2$

   5951  2 000157   200011 236100                    LDQ     NODE_SIZE,,AUTO
         2 000160   000022 736000                    QLS     18
         2 000161   200010 036100                    ADLQ    DEALLOCATE$,,AUTO
         2 000162   200005 116100                    CMPQ    LINK2$,,AUTO
         2 000163   000176 601000 2                  TNZ     HOME

      264     5952    1           THEN
      265     5953    2              DO; /* adjacent to upper node */

      266     5954    2                 LINK3$ -> X$MAP.LINK$ = DEALLOCATE$;

   5954  2 000164   200010 236100                    LDQ     DEALLOCATE$,,AUTO
         2 000165   000001 756100                    STQ     1,,PR0

      267     5955    2                 DEALLOCATE$ -> X$MAP.SIZE = NODE_SIZE +

   5955  2 000166   200005 473500                    LDP3    LINK2$,,AUTO
         2 000167   200011 236100                    LDQ     NODE_SIZE,,AUTO
         2 000170   300000 036100                    ADLQ    0,,PR3
         2 000171   100000 756100                    STQ     0,,PR1

      268     5956    2                       LINK2$ -> X$MAP.SIZE;
      269     5957    2                 DEALLOCATE$ -> X$MAP.LINK$ = LINK2$ -> X$MAP.LINK$;

   5957  2 000172   300001 236100                    LDQ     1,,PR3
         2 000173   100001 756100                    STQ     1,,PR1
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:42   

      270     5958    2                 FLAG = '1'B;

   5958  2 000174   400000 236003                    LDQ     -131072,DU
         2 000175   200012 756100                    STQ     FLAG,,AUTO

      271     5959    2                 END;

      272     5960    1   HOME:   IF PINCRW (LINK3$,LINK3$ -> X$MAP.SIZE) = DEALLOCATE$

   5960  2 000176   000000 236100       HOME         LDQ     0,,PR0
         2 000177   000022 736000                    QLS     18
         2 000200   200006 036100                    ADLQ    LINK3$,,AUTO
         2 000201   200010 116100                    CMPQ    DEALLOCATE$,,AUTO
         2 000202   000212 601000 2                  TNZ     s:5968

      273     5961    1           THEN
      274     5962    2              DO; /* adjacent to lower node */

      275     5963    2                 LINK3$ -> X$MAP.SIZE = LINK3$ -> X$MAP.SIZE +

   5963  2 000203   000000 236100                    LDQ     0,,PR0
         2 000204   100000 036100                    ADLQ    0,,PR1
         2 000205   000000 756100                    STQ     0,,PR0

      276     5964    2                       DEALLOCATE$ -> X$MAP.SIZE;
      277     5965    2                 LINK3$ -> X$MAP.LINK$ = DEALLOCATE$ -> X$MAP.LINK$;

   5965  2 000206   100001 236100                    LDQ     1,,PR1
         2 000207   000001 756100                    STQ     1,,PR0

      278     5966    2                 FLAG = '1'B;

   5966  2 000210   400000 236003                    LDQ     -131072,DU
         2 000211   200012 756100                    STQ     FLAG,,AUTO

      279     5967    2                 END;
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:43   

      280     5968    1           IF ~FLAG

   5968  2 000212   200012 236100                    LDQ     FLAG,,AUTO
         2 000213   400000 376003                    ANQ     -131072,DU
         2 000214   400000 676003                    ERQ     -131072,DU
         2 000215   000220 600000 2                  TZE     s:5971

      281     5969    1           THEN /* INSERT NEW NODE BETWEEN LINK2$ & LINK3$ */
      282     5970    1              LINK3$ -> X$MAP.LINK$ = DEALLOCATE$;

   5970  2 000216   200010 236100                    LDQ     DEALLOCATE$,,AUTO
         2 000217   000001 756100                    STQ     1,,PR0

      283     5971    1           RETURN;

   5971  2 000220   000000 702200 xent               TSX2  ! X66_ARET
      284     5972    1   END X$DEALLOCATE;

PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:44   
--  Include file information  --

   XU_PERR_C.:E05TOU  is referenced.
   XUM_MACRO_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X$DEALLOCATE.
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:45   

 **** Variables and constants ****

  ****  Section 001 RoData X$DEALLOCATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_DBLREL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @MCB                      10-0-0/w PTR         r     1 DEALLOCATE$
    12-0-0/b BIT         r     1 FLAG                       4-0-0/w STRC        r     1 LINK1
     4-0-0/w PTR         r     1 LINK1$                     5-0-0/w STRC        r     1 LINK2
     5-0-0/w PTR         r     1 LINK2$                     6-0-0/w PTR         r     1 LINK3$
     7-0-0/w PTR         r     1 LINK4$                    *0-0-0/w STRC(324)   r     1 MCB
    11-0-0/w UBIN        r     1 NODE_SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 X$MAP


   Procedure X$DEALLOCATE requires 145 words for executable code.
   Procedure X$DEALLOCATE requires 12 words of local(AUTO) storage.

    No errors detected in file XUM$MANAGE.:E05TSI    .
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:46   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:47   
          MINI XREF LISTING

DEALLOCATE$
      5811**DCL      5876<<ASSIGN   5877>>ASSIGN   5881>>IF       5883>>ASSIGN   5886>>ASSIGN   5887>>ASSIGN
      5891>>IF       5894>>IF       5897>>ASSIGN   5899>>ASSIGN   5903>>ASSIGN   5905>>ASSIGN   5914>>IF
      5928>>IF       5938>>IF       5947>>ASSIGN   5951>>IF       5954>>ASSIGN   5955>>ASSIGN   5957>>ASSIGN
      5960>>IF       5963>>ASSIGN   5965>>ASSIGN   5970>>ASSIGN
E_DBLREL
      5829**DCL      5941>>ASSIGN
FLAG
      5813**DCL      5908<<ASSIGN   5958<<ASSIGN   5966<<ASSIGN   5968>>IF
FOUND_IT
      5913**LABEL    5916--GOTO
HOME
      5960**LABEL    5950--GOTO
LINK1.SEGID
      5806**DCL      5871>>IF
LINK1$
      5805**DCL      5806--REDEF    5869<<ASSIGN   5912<<ASSIGN   5913>>DOWHILE  5919>>ASSIGN   5920<<ASSIGN
      5920>>ASSIGN   5933>>ASSIGN
LINK2.SEGID
      5808**DCL      5871>>IF
LINK2$
      5807**DCL      5808--REDEF    5870<<ASSIGN   5911<<ASSIGN   5914>>IF       5918>>ASSIGN   5919<<ASSIGN
      5928>>IF       5932>>ASSIGN   5933<<ASSIGN   5947>>ASSIGN   5948>>IF       5951>>IF       5955>>ASSIGN
      5957>>ASSIGN
LINK3$
      5809**DCL      5910<<ASSIGN   5917>>ASSIGN   5918<<ASSIGN   5931>>ASSIGN   5932<<ASSIGN   5938>>IF
      5938>>IF       5954>>ASSIGN   5960>>IF       5960>>IF       5963>>ASSIGN   5963>>ASSIGN   5965>>ASSIGN
      5970>>ASSIGN
LINK4$
      5810**DCL      5909<<ASSIGN   5917<<ASSIGN   5931<<ASSIGN
MCB
      5798**DCL        19--PROC
PL6.E3A0      #002=X$DEALLOCATE File=XUM$MANAGE.:E05TSI                          WED 07/30/97 09:22 Page:48   
MCB.ADDRESS$
      5798**DCL      5866>>IF       5869>>ASSIGN   5871>>IF       5871>>IF       5876>>ASSIGN
MCB.ERR
      5799**DCL      5865<<ASSIGN   5941<<ASSIGN
MCB.FREE_HEAD$
      5798**DCL      5878>>IF       5886<<ASSIGN   5891>>IF       5894>>IF       5897>>ASSIGN   5899>>ASSIGN
      5903>>ASSIGN   5905<<ASSIGN   5912>>ASSIGN
MCB.HI_SEGMENT$
      5798**DCL      5871>>IF       5881>>IF       5883<<ASSIGN
MCB.SEGMENT_BASE$
      5798**DCL      5870>>ASSIGN   5871>>IF
NODE_SIZE
      5812**DCL      5877<<ASSIGN   5881>>IF       5894>>IF       5897>>ASSIGN   5951>>IF       5955>>ASSIGN
X$MAP.LINK$
      5803**DCL      5887<<ASSIGN   5899<<ASSIGN   5899>>ASSIGN   5903<<ASSIGN   5920>>ASSIGN   5947<<ASSIGN
      5954<<ASSIGN   5957<<ASSIGN   5957>>ASSIGN   5965<<ASSIGN   5965>>ASSIGN   5970<<ASSIGN
X$MAP.SIZE
      5802**DCL      5877>>ASSIGN   5897<<ASSIGN   5897>>ASSIGN   5938>>IF       5955<<ASSIGN   5955>>ASSIGN
      5960>>IF       5963<<ASSIGN   5963>>ASSIGN   5963>>ASSIGN
