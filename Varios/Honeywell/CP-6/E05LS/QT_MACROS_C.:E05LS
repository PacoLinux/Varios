

15:14 JUL 28 '97 QT_MACROS_C.:E05SI                                        1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6
    7      /* QT$ENTRY - This macro defines the structure of the _E record
    8         of the TRADER file.  There is one _E record inserted into
    9         the TRADER file for each CREATE ENTRY command used */
   10
   11      %MACRO QT$ENTRY(FPTN="QT$ENTRY",
   12      STCLASS="BASED(QT_GLOBAL.QT$ENTRY$)");
   13      %LSET LISTDIR='0'B;
   14      %LSET LISTEXP='1'B;
   15      %LSET LISTCOM='0'B;
   16      %LSET LISTSUB='1'B;
   17      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   18      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   19      %LSET INIT=CHARTEXT('INIT');
   20      %ELSE;
   21      %LSET INIT=CHARTEXT('/*');
   22      %ENDIF;
   23      DCL 1 FPTN STCLASS,
   24            2 FLAGS,
   25       /* Assorted flags */
   26              3 DCBS_SET BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
   27       /* Set if there are assign merge record contained in this _E record */
   28              3 OLD_LOCK BIT(1) UNAL %INIT('1'B) %CHARTEXT('/**/'),
   29       /* The value for VLP_SETSTA.ISTA.LOCK when record was read */
   30              3 NEW_LOCK BIT(1) UNAL %INIT('1'B) %CHARTEXT('/**/'),
   31       /* The new value for VLP_SETSTA.ISTA.LOCK */
   32              3 MESSAGE BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
   33       /* Set if you want message to go to station of origin when TPAP aborts */
   34              3 JOURNAL BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
   35       /* Set if you want to journal this message type */
   36              3 * /*SPARES */ BIT(31) UNAL %INIT('0'B) %CHARTEXT('/**/'),
   37       /* Spares */
15:14 JUL 28 '97 QT_MACROS_C.:E05SI                                        2    
   38            2 UTS UBIN WORD,
   39       /* UTS of last modification of this _E record */
   40            2 MAXACTIVE UBIN WORD %INIT(0) %CHARTEXT('/**/'),
   41       /* Max active for this transaction type */
   42            2 TPAP,
   43       /* Elements of the FID for the TPAP run unit */
   44              3 NAME,
   45       /* VLP_NAME */
   46                4 COUNT UBIN(9) UNAL %INIT(0) %CHARTEXT('/**/'),
   47                4 TEXT CHAR(31) UNAL %INIT(' ') %CHARTEXT('/**/'),
   48              3 ACCT CHAR(8) %INIT(' ') %CHARTEXT('/**/'),
   49       /* Account */
   50              3 PASS CHAR(8) %INIT(' ') %CHARTEXT('/**/'),
   51       /* Password */
   52              3 SN CHAR(6) %INIT(' ') %CHARTEXT('/**/'),
   53       /* Serial number */
   54            2 DEBUGGER,
   55       /* VLP_NAME for the debugger */
   56              3 COUNT UBIN(9) UNAL %INIT(0) %CHARTEXT('/**/'),
   57       /* = 0 if not debugger is to be associated */
   58              3 TEXT CHAR(11) UNAL %INIT(' ') %CHARTEXT('/**/'),
   59            2 SET_COUNT UBIN(9) UNAL %INIT(0) %CHARTEXT('/**/'),
   60       /* # of assign merge records for this _E record */
   61            2 PRIO UBIN(9) UNAL %INIT(1) %CHARTEXT('/**/'),
   62       /* Priority of this xaction type */
   63            2 *(0:5) UBIN WORD %INIT(0 * 6) %CHARTEXT('/**/');
   64       /* Spares */
   65      %MEND;
   66
   67      /* QT$SETBITS - This macro defines the structure of a assign merge
   68         record as far as TRADER knows about them.  Within each _E record
   69         that defines 'SET' commands there will be one of these for each
   70         DCB that has been set. */
   71
   72      %MACRO QT$SETBITS(FPTN="QT$SETBITS");
   73      DCL 1 FPTN BASED,
   74            2 TYPE UBIN(9) UNAL,
15:14 JUL 28 '97 QT_MACROS_C.:E05SI                                        3    
   75       /* What kind of set this e.g. READS, RESPONDS see QT_SUBS_C */
   76            2 FLAGS,
   77       /* Assorted flags */
   78              3 ONEREPORT BIT(1) UNAL,
   79       /* Set if we should set ONEREPORT in the comgroup for this message type */
   80              3 * BIT(26) UNAL /* SPARES */,
   81       /* Spares */
   82            2 JUNK1 UBIN WORD UNAL,
   83            2 JUNK2 UBIN WORD UNAL,
   84            2 DCBNAME UNAL,
   85       /* The DCB name associated with the assign mereg information */
   86              3 COUNT UBIN(9) UNAL,
   87              3 TEXT CHAR(31) UNAL,
   88            2 ASN_MERGE,
   89       /* The raw bits of an assign merge record */
   90              3 COUNT UBIN(9) UNAL,
   91              3 TEXT CHAR(QT$SETBITS.ASN_MERGE.COUNT);
   92      %MEND;
   93
   94      /* QT$SETTEXT - This structure defines the area for storing the
   95         text of a 'SET' command.  This structure is complementry to
   96         QT$SETBITS that is there is one of these for each one of
   97         those.  All of the QT$SETTEXT for a given message type is
   98         stored in a separate record in the TRADER file.  The key for
   99         this record is _S. */
  100
  101      %MACRO QT$SETTEXT(FPTN="QT$SETTEXT",
  102      STCLASS="BASED(QT_GLOBAL.QT$SETTEXT$)");
  103      DCL 1 FPTN STCLASS,
  104            2 COUNT UBIN(9) UNAL,
  105       /* # of bytes in the text of a 'SET' command */
  106            2 JUNK1 UBIN WORD ALIGNED,
  107            2 JUNK2 UBIN WORD UNAL,
  108            2 JUNK3 UBIN WORD UNAL,
  109            2 TEXT CHAR(QT$SETTEXT.COUNT);
  110       /* The actual text of the set command */
  111      %MEND;
15:14 JUL 28 '97 QT_MACROS_C.:E05SI                                        4    
  112
  113      /* QT$FORM - This macro defines the structure of a form record
  114         in the TRADER file.  The key for this record is _F.  There
  115         is one of these records in the TRADER file for each
  116         CREATE FORM. */
  117
  118      %MACRO QT$FORM(FPTN="QT$FORM",
  119      STCLASS="BASED(QT_GLOBAL.QT$FORM$)");
  120      %LSET LISTDIR='0'B;
  121      %LSET LISTEXP='1'B;
  122      %LSET LISTCOM='0'B;
  123      %LSET LISTSUB='1'B;
  124      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  125      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  126      %LSET INIT=CHARTEXT('INIT');
  127      %ELSE;
  128      %LSET INIT=CHARTEXT('/*');
  129      %ENDIF;
  130      DCL 1 FPTN STCLASS,
  131            2 FLAGS,
  132       /* Assorted flags */
  133              3 JOURNAL BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
  134       /* Set if we are supposed to tell the comgroup to journal this type */
  135              3 ONEREPORT BIT(1) UNAL %INIT('0'B) %CHARTEXT('/**/'),
  136       /* Set if we are supposed to tell the comgroup to use ONEREPORT for this type */
  137              3 * /*SPARES */ BIT(34) UNAL %INIT('0'B) %CHARTEXT('/**/'),
  138       /* Spares */
  139            2 UTS UBIN WORD,
  140       /* UTS of the last time this record was modified */
  141            2 FP,
  142       /* The FID of the forms program run unit to envoke */
  143              3 NAME,
  144       /* VLP_NAME */
  145                4 COUNT UBIN(9) UNAL %INIT(0) %CHARTEXT('/**/'),
  146                4 TEXT CHAR(31) UNAL %INIT(' ') %CHARTEXT('/**/'),
  147              3 ACCT CHAR(8) %INIT(' ') %CHARTEXT('/**/'),
  148       /* Account */
15:14 JUL 28 '97 QT_MACROS_C.:E05SI                                        5    
  149              3 PASS CHAR(8) %INIT(' ') %CHARTEXT('/**/'),
  150       /* Password */
  151              3 SN CHAR(6) %INIT(' ') %CHARTEXT('/**/'),
  152       /* Serial number */
  153            2 * UBIN HALF %INIT(0) %CHARTEXT('/**/')/* Slack */,
  154       /* Spares */
  155            2 *(0:5) UBIN WORD %INIT(0 * 6) %CHARTEXT('/**/');
  156       /* Spares */
  157      %MEND;

