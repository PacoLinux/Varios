VERSION E05

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:1    
        1        1        /*M* TOU$DFU     DEckfile Editor Routine Function Utilities program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$DFU
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEER Function Utilities
       14       14              DESCRIPTION: This module is an outer block which  contains
       15       15                           the entry points and procedure blocks of  the
       16       16                           function utilities for the   deckfile editor.
       17       17                           The routines of TOU$DFU  interface  with CP-6
       18       18                           Monitor Service routines and provide for:
       19       19                           ---  Reads/Writes for M$DECKFILE
       20       20                           ---  Checking $OBJECT cards from M$DECKFILE
       21       21                           ---  Deleting records from M$DECKFILE
       22       22                           ---  Open/Close   for M$TEMP
       23       23                           ---  Reads/Writes for M$TEMP
       24       24              REFERENCE:   CP-6 Release C0P0
       25       25              LAST UPDATE: 04/30/84
       26       26        */
       27       27        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:2    
       28       28        /*F*  NAME:        TOU$DFU
       29       29              DESCRIPTION: Procedure Nesting Hierarchy
       30       30
       31       31              TOU$DFU: procedure ALTRET
       32       32
       33       33              TOU$DFU_DF_RD_MASTER_CONTROL: entry ALTRET
       34       34              TOU$DFU_DF_RD_MASTER_ENTRY: entry ALTRET
       35       35              TOU$DFU_DF_RD_CATALOG_CONTROL: entry ALTRET
       36       36              TOU$DFU_DF_RD_SUBCATALOG: entry ALTRET
       37       37              TOU$DFU_DF_RD_CATALOG_ENTRY: entry ALTRET
       38       38              TOU$DFU_DF_RD_OBJECT: entry ALTRET
       39       39              TOU$DFU_DF_RD_BINARY: entry ALTRET
       40       40              TOU$DFU_DF_RD_FILE: entry ALTRET
       41       41              TOU$DFU_DF_RD_BCD_CARDS: entry ALTRET
       42       42              TOU$DFU_DF_RD_OBJECT_REFLIST: entry ALTRET
       43       43              TOU$DFU_DF_RD_LAST_DECK#: entry ALTRET
       44       44              TOU$DFU_DF_RD_LOG: entry ALTRET
       45       45              TOU$DFU_DF_RD_REVISION: entry ALTRET
       46       46
       47       47              TOU$DFU_DF_CHECK_ALREADY_SAVED: entry ALTRET
       48       48              TOU$DFU_DF_CHECK_FOR_KEY: entry ALTRET
       49       49              TOU$DFU_DF_DL_CATALOG_ENTRY: entry ALTRET
       50       50              TOU$DFU_DF_DL_DECK: entry ALTRET
       51       51              TOU$DFU_DF_DL_MASTER_ENTRY: entry ALTRET
       52       52              TOU$DFU_DF_DL_CATALOG: entry ALTRET
       53       53
       54       54              TOU$DFU_DF_WR_MASTER_CONTROL: entry ALTRET
       55       55              TOU$DFU_DF_WR_MASTER_ENTRY: entry ALTRET
       56       56              TOU$DFU_DF_WR_CATALOG_CONTROL: entry ALTRET
       57       57              TOU$DFU_DF_WR_SUBCATALOG: entry ALTRET
       58       58              TOU$DFU_DF_WR_CATALOG_ENTRY: entry ALTRET
       59       59              TOU$DFU_DF_WR_OBJECT: entry ALTRET
       60       60              TOU$DFU_DF_WR_BINARY: entry ALTRET
       61       61              TOU$DFU_DF_WR_FILE: entry ALTRET
       62       62              TOU$DFU_DF_WR_HDR: entry ALTRET
       63       63              TOU$DFU_DF_WR_DIR: entry ALTRET
       64       64              TOU$DFU_DF_WR_BCD_CARDS: entry ALTRET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:3    
       65       65              TOU$DFU_DF_WR_OBJECT_REFLIST: entry ALTRET
       66       66              TOU$DFU_DF_WR_LAST_DECK#: entry ALTRET
       67       67              TOU$DFU_DF_WR_LOG: entry ALTRET
       68       68              TOU$DFU_DF_WR_REVISION: entry ALTRET
       69       69
       70       70              TOU$DFU_OPEN_TEMP: entry ALTRET
       71       71              TOU$DFU_CLOSE_TEMP: entry ALTRET
       72       72
       73       73              TOU$DFU_TF_RD_MASTER_CONTROL: entry ALTRET
       74       74              TOU$DFU_TF_RD_MASTER_ENTRY: entry ALTRET
       75       75              TOU$DFU_TF_RD_CATALOG_CONTROL: entry ALTRET
       76       76              TOU$DFU_TF_RD_SUBCATALOG: entry ALTRET
       77       77              TOU$DFU_TF_RD_CATALOG_ENTRY: entry ALTRET
       78       78              TOU$DFU_TF_RD_OBJECT: entry ALTRET
       79       79              TOU$DFU_TF_RD_BINARY: entry ALTRET
       80       80              TOU$DFU_TF_RD_FILE: entry ALTRET
       81       81              TOU$DFU_TF_RD_HDR: entry ALTRET
       82       82              TOU$DFU_TF_RD_DIR: entry ALTRET
       83       83              TOU$DFU_TF_RD_BCD_CARDS: entry ALTRET
       84       84              TOU$DFU_TF_RD_OBJECT_REFLIST: entry ALTRET
       85       85              TOU$DFU_TF_RD_LAST_DECK#: entry ALTRET
       86       86
       87       87              TOU$DFU_TF_WR_MASTER_CONTROL: entry ALTRET
       88       88              TOU$DFU_TF_WR_MASTER_ENTRY: entry ALTRET
       89       89              TOU$DFU_TF_WR_CATALOG_CONTROL: entry ALTRET
       90       90              TOU$DFU_TF_WR_SUBCATALOG: entry ALTRET
       91       91              TOU$DFU_TF_WR_CATALOG_ENTRY: entry ALTRET
       92       92              TOU$DFU_TF_WR_OBJECT: entry ALTRET
       93       93              TOU$DFU_TF_WR_BINARY: entry ALTRET
       94       94              TOU$DFU_TF_WR_FILE: entry ALTRET
       95       95              TOU$DFU_TF_WR_HDR: entry ALTRET
       96       96              TOU$DFU_TF_WR_DIR: entry ALTRET
       97       97              TOU$DFU_TF_WR_BCD_CARDS: entry ALTRET
       98       98              TOU$DFU_TF_WR_OBJECT_REFLIST: entry ALTRET
       99       99              TOU$DFU_TF_WR_LAST_DECK#: entry ALTRET
      100      100
      101      101                 DFU_READ_MASTER_CONTROL: procedure (DCB#) ALTRET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:4    
      102      102                 DFU_READ_MASTER_ENTRY: procedure (DCB#) ALTRET
      103      103                 DFU_READ_CATALOG_CONTROL: procedure (DCB#) ALTRET
      104      104                 DFU_READ_SUBCATALOG: procedure (DCB#) ALTRET
      105      105                 DFU_READ_CATALOG_ENTRY: procedure (DCB#) ALTRET
      106      106                 DFU_READ_OBJECT: procedure (DCB#) ALTRET
      107      107                 DFU_READ_BINARY: procedure (DCB#, BUF_V) ALTRET
      108      108                 DFU_READ_BCD_CARDS: procedure (DCB#) ALTRET
      109      109                 DFU_READ_OBJECT_REFLIST: procedure (DCB#) ALTRET
      110      110                 DFU_READ_LAST_DECK#: procedure (DCB#) ALTRET
      111      111                 DFU_READ_LOG: procedure ALTRET
      112      112
      113      113                 DFU_CHECK_ALREADY_SAVED: procedure ALTRET
      114      114                 DFU_CHECK_FOR_KEY: procedure ALTRET
      115      115                 DFU_DELETE_CATALOG_ENTRY: procedure ALTRET
      116      116                 DFU_DELETE_DECK: procedure ALTRET
      117      117                 DFU_DELETE_MASTER_ENTRY: procedure ALTRET
      118      118                 DFU_DELETE_CATALOG: procedure ALTRET
      119      119
      120      120                 DFU_WRITE_MASTER_CONTROL: procedure (DCB#) ALTRET
      121      121                 DFU_WRITE_MASTER_ENTRY: procedure (DCB#) ALTRET
      122      122                 DFU_WRITE_CATALOG_CONTROL: procedure (DCB#) ALTRET
      123      123                 DFU_WRITE_SUBCATALOG: procedure (DCB#) ALTRET
      124      124                 DFU_WRITE_CATALOG_ENTRY: procedure (DCB#) ALTRET
      125      125                 DFU_WRITE_OBJECT: procedure (DCB#) ALTRET
      126      126                 DFU_WRITE_BINARY: procedure (DCB#, BUF_V, LGTH) ALTRET
      127      127                 DFU_WRITE_BCD_CARDS: procedure (DCB#) ALTRET
      128      128                 DFU_WRITE_OBJECT_REFLIST: procedure (DCB#) ALTRET
      129      129                 DFU_WRITE_LAST_DECK#: procedure (DCB#) ALTRET
      130      130                 DFU_WRITE_LOG: procedure ALTRET
      131      131
      132      132                 DFU_OPEN_TEMP: procedure (OT) ALTRET
      133      133                 DFU_CLOSE_TEMP: procedure (CT) ALTRET
      134      134
      135      135                 DFU_ERR_MSG: procedure (EC)
      136      136        */
      137      137        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:5    
      138      138        TOU$DFU: PROC ALTRET ;
      139      139
      140      140        /* Include Files */
      141      141
      142      142           %INCLUDE CP_6 ;
      143     5701           %INCLUDE B_ERRORS_C ;
      144     6828           %INCLUDE TOU_DEER_M ;
      145     8239           %INCLUDE TO_PERR_C ;
      146     8824
      147     8825        /* Variables */
      148     8826
      149     8827    1      DCL B$TCB$   PTR SYMREF ;
      150     8828    1      DCL BIN#     UBIN WORD SYMREF ALIGNED ;
      151     8829
      152     8830        /* Macro's */
      153     8831
      154     8832           %OBJECT (STCLASS = SYMREF) ;
      155     8895           %MCA_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
      156     8965           %DUP (STCLASS = SYMREF) ;
      157     9108           %B$TCB ;
      158     9111           %B$ALT ;
      159     9119
      160     9120        /* Data Control Blocks */
      161     9121
      162     9122    1      DCL M$DECKFILE                 DCB ;
      163     9123    1      DCL M$TEMP                     DCB ;
      164     9124
      165     9125        /* External Entry Points */
      166     9126
      167     9127    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
      168     9128    1      DCL TOU$DU_SYSTEM_ERRMSG           ENTRY ALTRET ;
      169     9129           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:6    
      170     9130        /*D*  NAME:        TOU$DFU_DF_RD_MASTER_CONTROL
      171     9131              ENTRY:
      172     9132              AUTHOR:      Scott S. Sheppard
      173     9133              INTERFACE:   DFU_READ_MASTER_CONTROL
      174     9134              DESCRIPTION: This entry point calls procedure
      175     9135                           DFU_READ_MASTER_CONTROL.
      176     9136        */
      177     9137
      178     9138    1   TOU$DFU_DF_RD_MASTER_CONTROL: ENTRY ALTRET ;
      179     9139
      180     9140    1      CALL DFU_READ_MASTER_CONTROL (DCBNUM (M$DECKFILE))
      181     9141    1              ALTRET (TOU$DFU_ALTRETURN) ;
      182     9142    1      RETURN ;
      183     9143
      184     9144        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:7    
      185     9145        /*D*  NAME:        TOU$DFU_DF_RD_MASTER_ENTRY
      186     9146              ENTRY:
      187     9147              AUTHOR:      Scott S. Sheppard
      188     9148              INTERFACE:   DFU_READ_MASTER_ENTRY
      189     9149              DESCRIPTION: This entry point calls procedure
      190     9150                           DFU_READ_MASTER_ENTRY.
      191     9151        */
      192     9152
      193     9153    1   TOU$DFU_DF_RD_MASTER_ENTRY: ENTRY ALTRET ;
      194     9154
      195     9155    1      CALL DFU_READ_MASTER_ENTRY (DCBNUM (M$DECKFILE))
      196     9156    1              ALTRET (TOU$DFU_ALTRETURN) ;
      197     9157    1      RETURN ;
      198     9158
      199     9159        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:8    
      200     9160        /*D*  NAME:        TOU$DFU_DF_RD_CATALOG_CONTROL
      201     9161              ENTRY:
      202     9162              AUTHOR:      Scott S. Sheppard
      203     9163              INTERFACE:   DFU_READ_CATALOG_CONTROL
      204     9164              DESCRIPTION: This entry point calls procedure
      205     9165                           DFU_READ_CATALOG_CONTROL.
      206     9166        */
      207     9167
      208     9168    1   TOU$DFU_DF_RD_CATALOG_CONTROL: ENTRY ALTRET ;
      209     9169
      210     9170    1      CALL DFU_READ_CATALOG_CONTROL (DCBNUM (M$DECKFILE))
      211     9171    1              ALTRET (TOU$DFU_ALTRETURN) ;
      212     9172    1      RETURN ;
      213     9173
      214     9174        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:9    
      215     9175        /*D*  NAME:        TOU$DFU_DF_RD_SUBCATALOG
      216     9176              ENTRY:
      217     9177              AUTHOR:      Scott S. Sheppard
      218     9178              INTERFACE:   DFU_READ_SUBCATALOG
      219     9179              DESCRIPTION: This entry point calls procedure
      220     9180                           DFU_READ_SUBCATALOG.
      221     9181        */
      222     9182
      223     9183    1   TOU$DFU_DF_RD_SUBCATALOG: ENTRY ALTRET ;
      224     9184
      225     9185    1      CALL DFU_READ_SUBCATALOG (DCBNUM (M$DECKFILE))
      226     9186    1              ALTRET (TOU$DFU_ALTRETURN) ;
      227     9187    1      RETURN ;
      228     9188
      229     9189        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:10   
      230     9190        /*D*  NAME:        TOU$DFU_DF_RD_CATALOG_ENTRY
      231     9191              ENTRY:
      232     9192              AUTHOR:      Scott S. Sheppard
      233     9193              INTERFACE:   DFU_READ_CATALOG_ENTRY
      234     9194              DESCRIPTION: This entry point calls procedure
      235     9195                           DFU_READ_CATALOG_ENTRY_KEY.
      236     9196        */
      237     9197
      238     9198    1   TOU$DFU_DF_RD_CATALOG_ENTRY: ENTRY ALTRET ;
      239     9199
      240     9200    1      CALL DFU_READ_CATALOG_ENTRY (DCBNUM (M$DECKFILE))
      241     9201    1              ALTRET (TOU$DFU_ALTRETURN) ;
      242     9202    1      RETURN ;
      243     9203
      244     9204        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:11   
      245     9205        /*D*  NAME:        TOU$DFU_DF_RD_OBJECT
      246     9206              ENTRY:
      247     9207              AUTHOR:      Scott S. Sheppard
      248     9208              INTERFACE:   DFU_READ_OBJECT
      249     9209              DESCRIPTION: This entry point calls procedure
      250     9210                           DFU_READ_OBJECT.
      251     9211        */
      252     9212
      253     9213    1   TOU$DFU_DF_RD_OBJECT: ENTRY ALTRET ;
      254     9214
      255     9215    1      CALL DFU_READ_OBJECT (DCBNUM (M$DECKFILE))
      256     9216    1              ALTRET (TOU$DFU_ALTRETURN) ;
      257     9217    1      RETURN ;
      258     9218
      259     9219        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:12   
      260     9220        /*D*  NAME:        TOU$DFU_DF_RD_BINARY
      261     9221              ENTRY:
      262     9222              AUTHOR:      Scott S. Sheppard
      263     9223              INTERFACE:   DFU_READ_BINARY
      264     9224              DESCRIPTION: This entry point calls procedure
      265     9225                           DFU_READ_BINARY.
      266     9226        */
      267     9227
      268     9228    1   TOU$DFU_DF_RD_BINARY: ENTRY ALTRET ;
      269     9229
      270     9230    1      CALL DFU_READ_BINARY (DCBNUM (M$DECKFILE), DUP.BINARY_V)
      271     9231    1              ALTRET (TOU$DFU_ALTRETURN) ;
      272     9232    1      RETURN ;
      273     9233
      274     9234        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:13   
      275     9235        /*D*  NAME:        TOU$DFU_DF_RD_FILE
      276     9236              ENTRY:
      277     9237              AUTHOR:      Scott S. Sheppard
      278     9238              INTERFACE:   DFU_READ_BINARY
      279     9239              DESCRIPTION: This entry point calls procedure DFU_READ_BINARY
      280     9240                           to read DIPPER files from the deckfile.
      281     9241        */
      282     9242
      283     9243    1   TOU$DFU_DF_RD_FILE: ENTRY ALTRET ;
      284     9244
      285     9245    1      CALL DFU_READ_BINARY (DCBNUM (M$DECKFILE), VECTOR (MCA_B.FILE.DATA))
      286     9246    1              ALTRET (TOU$DFU_ALTRETURN) ;
      287     9247    1      RETURN ;
      288     9248
      289     9249        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:14   
      290     9250        /*D*  NAME:        TOU$DFU_DF_RD_BCD_CARDS
      291     9251              ENTRY:
      292     9252              AUTHOR:      Scott S. Sheppard
      293     9253              INTERFACE:   DFU_READ_BCD_CARDS
      294     9254              DESCRIPTION: This entry point calls procedure
      295     9255                           DFU_READ_BCD_CARDS.
      296     9256        */
      297     9257
      298     9258    1   TOU$DFU_DF_RD_BCD_CARDS: ENTRY ALTRET ;
      299     9259
      300     9260    1      CALL DFU_READ_BCD_CARDS (DCBNUM (M$DECKFILE))
      301     9261    1              ALTRET (TOU$DFU_ALTRETURN) ;
      302     9262    1      RETURN ;
      303     9263
      304     9264        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:15   
      305     9265        /*D*  NAME:        TOU$DFU_DF_RD_OBJECT_REFLIST
      306     9266              ENTRY:
      307     9267              AUTHOR:      Scott S. Sheppard
      308     9268              INTERFACE:   DFU_READ_OBJECT_REFLIST
      309     9269              DESCRIPTION: This entry point calls procedure
      310     9270                           DFU_READ_OBJECT_REFLIST.
      311     9271        */
      312     9272
      313     9273    1   TOU$DFU_DF_RD_OBJECT_REFLIST: ENTRY ALTRET ;
      314     9274
      315     9275    1      CALL DFU_READ_OBJECT_REFLIST (DCBNUM (M$DECKFILE))
      316     9276    1              ALTRET (TOU$DFU_ALTRETURN) ;
      317     9277    1      RETURN ;
      318     9278
      319     9279        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:16   
      320     9280        /*D*  NAME:        TOU$DFU_DF_RD_LAST_DECK#
      321     9281              ENTRY:
      322     9282              AUTHOR:      Scott S. Sheppard
      323     9283              INTERFACE:   DFU_READ_LAST_DECK#
      324     9284              DESCRIPTION: This entry point calls procedure
      325     9285                           DFU_READ_LAST_DECK#.
      326     9286        */
      327     9287
      328     9288    1   TOU$DFU_DF_RD_LAST_DECK#: ENTRY ALTRET ;
      329     9289
      330     9290    1      CALL DFU_READ_LAST_DECK# (DCBNUM (M$DECKFILE))
      331     9291    1              ALTRET (TOU$DFU_ALTRETURN) ;
      332     9292    1      RETURN ;
      333     9293
      334     9294        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:17   
      335     9295        /*D*  NAME:        TOU$DFU_DF_RD_LOG
      336     9296              ENTRY:
      337     9297              AUTHOR:      Scott S. Sheppard
      338     9298              INTERFACE:   DFU_READ_LOG
      339     9299              DESCRIPTION: This entry point calls procedure DFU_READ_LOG.
      340     9300        */
      341     9301
      342     9302    1   TOU$DFU_DF_RD_LOG: ENTRY ALTRET ;
      343     9303
      344     9304    1      CALL DFU_READ_LOG
      345     9305    1              ALTRET (TOU$DFU_ALTRETURN) ;
      346     9306    1      RETURN ;
      347     9307
      348     9308        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:18   
      349     9309        /*D*  NAME:        TOU$DFU_DF_RD_REVISION
      350     9310              ENTRY:
      351     9311              AUTHOR:      Scott S. Sheppard
      352     9312              INTERFACE:   DFU_READ_REVISION
      353     9313              DESCRIPTION: This entry point calls procedure DFU_READ_REVISION
      354     9314        */
      355     9315
      356     9316    1   TOU$DFU_DF_RD_REVISION: ENTRY ALTRET ;
      357     9317
      358     9318    1      CALL DFU_READ_REVISION
      359     9319    1              ALTRET (TOU$DFU_ALTRETURN) ;
      360     9320    1      RETURN ;
      361     9321
      362     9322        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:19   
      363     9323        /*D*  NAME:        TOU$DFU_DF_CHECK_ALREADY_SAVED
      364     9324              ENTRY:
      365     9325              AUTHOR:      Scott S. Sheppard
      366     9326              INTERFACE:   DFU_CHECK_ALREADY_SAVED
      367     9327              DESCRIPTION: This entry point calls procedure
      368     9328                           DFU_DF_CHECK_ALREADY_SAVED.
      369     9329        */
      370     9330
      371     9331    1   TOU$DFU_DF_CHECK_ALREADY_SAVED: ENTRY ALTRET ;
      372     9332
      373     9333    1      CALL DFU_CHECK_ALREADY_SAVED
      374     9334    1              ALTRET (TOU$DFU_ALTRETURN) ;
      375     9335    1      RETURN ;
      376     9336
      377     9337        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:20   
      378     9338        /*D*  NAME:        TOU$DFU_DF_CHECK_FOR_KEY
      379     9339              ENTRY:
      380     9340              AUTHOR:      Scott S. Sheppard
      381     9341                           Called by TOU$NEWCAT
      382     9342              INTERFACE:   DFU_CHECK_FOR_KEY
      383     9343              DESCRIPTION: This  entry point  calls  procedure  TOU$DFU_CHECK_FOR_KEY
      384     9344                           to   determine   if  an   object  deck   is  saved  in the
      385     9345                           deckfile.      This   entry  point  is  not  the  same  as
      386     9346                           TOU$DFU_DF_CHECK_ALREADY_SAVED in that it does not compare
      387     9347                           the object card returned with the current object card.
      388     9348        */
      389     9349
      390     9350    1   TOU$DFU_DF_CHECK_FOR_KEY: ENTRY ALTRET ;
      391     9351
      392     9352    1      CALL DFU_CHECK_FOR_KEY
      393     9353    1              ALTRET (TOU$DFU_ALTRETURN) ;
      394     9354    1      RETURN ;
      395     9355
      396     9356        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:21   
      397     9357        /*D*  NAME:        TOU$DFU_DF_DL_CATALOG_ENTRY
      398     9358              ENTRY:
      399     9359              AUTHOR:      Scott S. Sheppard
      400     9360              INTERFACE:   DFU_DELETE_CATALOG_ENTRY
      401     9361              DESCRIPTION: This entry point calls procedure
      402     9362                           DFU_DELETE_CATALOG_ENTRY_KEY.
      403     9363        */
      404     9364
      405     9365    1   TOU$DFU_DF_DL_CATALOG_ENTRY: ENTRY ALTRET ;
      406     9366
      407     9367    1      CALL DFU_DELETE_CATALOG_ENTRY
      408     9368    1              ALTRET (TOU$DFU_ALTRETURN) ;
      409     9369    1      RETURN ;
      410     9370
      411     9371        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:22   
      412     9372        /*D*  NAME:        TOU$DFU_DF_DL_DECK
      413     9373              ENTRY:
      414     9374              AUTHOR:      Scott S. Sheppard
      415     9375              INTERFACE:   DFU_DELETE_DECK
      416     9376              DESCRIPTION: This entry point calls procedure
      417     9377                           DFU_DELETE_DECK.
      418     9378        */
      419     9379
      420     9380    1   TOU$DFU_DF_DL_DECK: ENTRY ALTRET ;
      421     9381
      422     9382    1      CALL DFU_DELETE_DECK
      423     9383    1              ALTRET (TOU$DFU_ALTRETURN) ;
      424     9384    1      RETURN ;
      425     9385
      426     9386        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:23   
      427     9387        /*D*  NAME:        TOU$DFU_DF_DL_MASTER_ENTRY
      428     9388              ENTRY:
      429     9389              AUTHOR:      Scott S. Sheppard
      430     9390              INTERFACE:   DFU_DELETE_MASTER_ENTRY
      431     9391              DESCRIPTION: This entry point calls procedure
      432     9392                           DFU_DELETE_MASTER_ENTRY.
      433     9393        */
      434     9394
      435     9395    1   TOU$DFU_DF_DL_MASTER_ENTRY: ENTRY ALTRET ;
      436     9396
      437     9397    1      CALL DFU_DELETE_MASTER_ENTRY
      438     9398    1              ALTRET (TOU$DFU_ALTRETURN) ;
      439     9399    1      RETURN ;
      440     9400
      441     9401        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:24   
      442     9402        /*D*  NAME:        TOU$DFU_DF_DL_CATALOG
      443     9403              ENTRY:
      444     9404              AUTHOR:      Scott S. Sheppard
      445     9405              INTERFACE:   DFU_DELETE_CATALOG
      446     9406              DESCRIPTION: This entry point calls procedure
      447     9407                           DFU_DELETE_CATALOG.
      448     9408        */
      449     9409
      450     9410    1   TOU$DFU_DF_DL_CATALOG: ENTRY ALTRET ;
      451     9411
      452     9412    1      CALL DFU_DELETE_CATALOG
      453     9413    1              ALTRET (TOU$DFU_ALTRETURN) ;
      454     9414    1      RETURN ;
      455     9415
      456     9416        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:25   
      457     9417        /*D*  NAME:        TOU$DFU_DF_WR_MASTER_CONTROL
      458     9418              ENTRY:
      459     9419              AUTHOR:      Scott S. Sheppard
      460     9420              INTERFACE:   DFU_WRITE_MASTER_CONTROL
      461     9421              DESCRIPTION: This entry point calls procedure
      462     9422                           DFU_WRITE_MASTER_CONTROL.
      463     9423        */
      464     9424
      465     9425    1   TOU$DFU_DF_WR_MASTER_CONTROL: ENTRY ALTRET ;
      466     9426
      467     9427    1      CALL DFU_WRITE_MASTER_CONTROL (DCBNUM (M$DECKFILE))
      468     9428    1              ALTRET (TOU$DFU_ALTRETURN) ;
      469     9429    1      RETURN ;
      470     9430
      471     9431        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:26   
      472     9432        /*D*  NAME:        TOU$DFU_DF_WR_MASTER_ENTRY
      473     9433              ENTRY:
      474     9434              AUTHOR:      Scott S. Sheppard
      475     9435              INTERFACE:   DFU_WRITE_MASTER_ENTRY
      476     9436              DESCRIPTION: This entry point calls procedure
      477     9437                           DFU_WRITE_MASTER_ENTRY.
      478     9438        */
      479     9439
      480     9440    1   TOU$DFU_DF_WR_MASTER_ENTRY: ENTRY ALTRET ;
      481     9441
      482     9442    1      CALL DFU_WRITE_MASTER_ENTRY (DCBNUM (M$DECKFILE))
      483     9443    1              ALTRET (TOU$DFU_ALTRETURN) ;
      484     9444    1      RETURN ;
      485     9445
      486     9446        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:27   
      487     9447        /*D*  NAME:        TOU$DFU_DF_WR_CATALOG_CONTROL
      488     9448              ENTRY:
      489     9449              AUTHOR:      Scott S. Sheppard
      490     9450              INTERFACE:   DFU_WRITE_CATALOG_CONTROL
      491     9451              DESCRIPTION: This entry point calls procedure
      492     9452                           DFU_WRITE_CATALOG_CONTROL.
      493     9453        */
      494     9454
      495     9455    1   TOU$DFU_DF_WR_CATALOG_CONTROL: ENTRY ALTRET ;
      496     9456
      497     9457    1      CALL DFU_WRITE_CATALOG_CONTROL (DCBNUM (M$DECKFILE))
      498     9458    1              ALTRET (TOU$DFU_ALTRETURN) ;
      499     9459    1      RETURN ;
      500     9460
      501     9461        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:28   
      502     9462        /*D*  NAME:        TOU$DFU_DF_WR_SUBCATALOG
      503     9463              ENTRY:
      504     9464              AUTHOR:      Scott S. Sheppard
      505     9465              INTERFACE:   DFU_WRITE_SUBCATALOG
      506     9466              DESCRIPTION: This entry point calls procedure
      507     9467                           DFU_WRITE_SUBCATALOG.
      508     9468        */
      509     9469
      510     9470    1   TOU$DFU_DF_WR_SUBCATALOG: ENTRY ALTRET ;
      511     9471
      512     9472    1      CALL DFU_WRITE_SUBCATALOG (DCBNUM (M$DECKFILE))
      513     9473    1              ALTRET (TOU$DFU_ALTRETURN) ;
      514     9474    1      RETURN ;
      515     9475
      516     9476        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:29   
      517     9477        /*D*  NAME:        TOU$DFU_DF_WR_CATALOG_ENTRY
      518     9478              ENTRY:
      519     9479              AUTHOR:      Scott S. Sheppard
      520     9480              INTERFACE:   DFU_WRITE_CATALOG_ENTRY
      521     9481              DESCRIPTION: This entry point calls procedure
      522     9482                           DFU_WRITE_CATALOG_ENTRY_KEY.
      523     9483        */
      524     9484
      525     9485    1   TOU$DFU_DF_WR_CATALOG_ENTRY: ENTRY ALTRET ;
      526     9486
      527     9487    1      CALL DFU_WRITE_CATALOG_ENTRY (DCBNUM (M$DECKFILE))
      528     9488    1              ALTRET (TOU$DFU_ALTRETURN) ;
      529     9489    1      RETURN ;
      530     9490
      531     9491        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:30   
      532     9492        /*D*  NAME:        TOU$DFU_DF_WR_OBJECT
      533     9493              ENTRY:
      534     9494              AUTHOR:      Scott S. Sheppard
      535     9495              INTERFACE:   DFU_WRITE_OBJECT
      536     9496              DESCRIPTION: This entry point calls procedure
      537     9497                           DFU_WRITE_OBJECT.
      538     9498        */
      539     9499
      540     9500    1   TOU$DFU_DF_WR_OBJECT: ENTRY ALTRET ;
      541     9501
      542     9502    1      CALL DFU_WRITE_OBJECT (DCBNUM (M$DECKFILE))
      543     9503    1              ALTRET (TOU$DFU_ALTRETURN) ;
      544     9504    1      RETURN ;
      545     9505
      546     9506        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:31   
      547     9507        /*D*  NAME:        TOU$DFU_DF_WR_BINARY
      548     9508              ENTRY:
      549     9509              AUTHOR:      Scott S. Sheppard
      550     9510              INTERFACE:   DFU_WRITE_BINARY
      551     9511              DESCRIPTION: This entry point calls procedure
      552     9512                           DFU_WRITE_BINARY.
      553     9513        */
      554     9514
      555     9515    1   TOU$DFU_DF_WR_BINARY: ENTRY ALTRET ;
      556     9516
      557     9517    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),
      558     9518    1              DUP.BINARY_V,
      559     9519    1              (BIN# * %BIN_RCD_LGTH))
      560     9520    1              ALTRET (TOU$DFU_ALTRETURN) ;
      561     9521    1      RETURN ;
      562     9522
      563     9523        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:32   
      564     9524        /*D*  NAME:        TOU$DFU_DF_WR_FILE
      565     9525              ENTRY:
      566     9526              AUTHOR:      Scott S. Sheppard
      567     9527              INTERFACE:   DFU_WRITE_BINARY
      568     9528              DESCRIPTION: This entry point calls procedure
      569     9529                           DFU_WRITE_FILE.
      570     9530        */
      571     9531
      572     9532    1   TOU$DFU_DF_WR_FILE: ENTRY ALTRET ;
      573     9533
      574     9534    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),
      575     9535    1              VECTOR (MCA_B.FILE.DATA),
      576     9536    1              OBJECT.LOAD_SIZE * 4)
      577     9537    1              ALTRET (TOU$DFU_ALTRETURN) ;
      578     9538    1      RETURN ;
      579     9539
      580     9540        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:33   
      581     9541        /*D*  NAME:        TOU$DFU_DF_WR_HDR
      582     9542              ENTRY:
      583     9543              AUTHOR:      Kathy Larkin
      584     9544              INTERFACE:   DFU_WRITE_BINARY
      585     9545              DESCRIPTION: This entry point calls procedure DFU_WRITE_BINARY
      586     9546                           to write out a Dipper header file.
      587     9547        */
      588     9548
      589     9549    1   TOU$DFU_DF_WR_HDR: ENTRY ALTRET ;
      590     9550
      591     9551    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),
      592     9552    1              VECTOR (MCA_B.DISKETTE_HEADER.DATA),
      593     9553    1              136)
      594     9554    1              ALTRET (TOU$DFU_ALTRETURN) ;
      595     9555    1      RETURN ;
      596     9556
      597     9557        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:34   
      598     9558        /*D*  NAME:        TOU$DFU_DF_WR_DIR
      599     9559              ENTRY:
      600     9560              AUTHOR:      Scott S. Sheppard
      601     9561              INTERFACE:   DFU_WRITE_BINARY
      602     9562              DESCRIPTION: This entry point calls procedure
      603     9563                           DFU_WRITE_BINARY.
      604     9564        */
      605     9565
      606     9566    1   TOU$DFU_DF_WR_DIR: ENTRY ALTRET ;
      607     9567
      608     9568    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),
      609     9569    1              VECTOR (MCA_B.DIRECTORY.DATA),
      610     9570    1              MCA_B.DIRECTORY.SIZE)
      611     9571    1              ALTRET (TOU$DFU_ALTRETURN) ;
      612     9572    1      RETURN ;
      613     9573
      614     9574        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:35   
      615     9575        /*D*  NAME:        TOU$DFU_DF_WR_BCD_CARDS
      616     9576              ENTRY:
      617     9577              AUTHOR:      Scott S. Sheppard
      618     9578              INTERFACE:   DFU_WRITE_BCD_CARDS
      619     9579              DESCRIPTION: This entry point calls procedure
      620     9580                           DFU_WRITE_BCD_CARDS.
      621     9581        */
      622     9582
      623     9583    1   TOU$DFU_DF_WR_BCD_CARDS: ENTRY ALTRET ;
      624     9584
      625     9585    1      CALL DFU_WRITE_BCD_CARDS (DCBNUM (M$DECKFILE))
      626     9586    1              ALTRET (TOU$DFU_ALTRETURN) ;
      627     9587    1      RETURN ;
      628     9588
      629     9589        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:36   
      630     9590        /*D*  NAME:        TOU$DFU_DF_WR_OBJECT_REFLIST
      631     9591              ENTRY:
      632     9592              AUTHOR:      Scott S. Sheppard
      633     9593              INTERFACE:   DFU_WRITE_OBJECT_REFLIST
      634     9594              DESCRIPTION: This entry point calls procedure
      635     9595                           DFU_WRITE_OBJECT_REFLIST.
      636     9596        */
      637     9597
      638     9598    1   TOU$DFU_DF_WR_OBJECT_REFLIST: ENTRY ALTRET ;
      639     9599
      640     9600    1      CALL DFU_WRITE_OBJECT_REFLIST (DCBNUM (M$DECKFILE))
      641     9601    1              ALTRET (TOU$DFU_ALTRETURN) ;
      642     9602    1      RETURN ;
      643     9603
      644     9604        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:37   
      645     9605        /*D*  NAME:        TOU$DFU_DF_WR_LAST_DECK#
      646     9606              ENTRY:
      647     9607              AUTHOR:      Scott S. Sheppard
      648     9608              INTERFACE:   DFU_WRITE_LAST_DECK#
      649     9609              DESCRIPTION: This entry point calls procedure
      650     9610                           DFU_WRITE_LAST_DECK#.
      651     9611        */
      652     9612
      653     9613    1   TOU$DFU_DF_WR_LAST_DECK#: ENTRY ALTRET ;
      654     9614
      655     9615    1      CALL DFU_WRITE_LAST_DECK# (DCBNUM (M$DECKFILE))
      656     9616    1              ALTRET (TOU$DFU_ALTRETURN) ;
      657     9617    1      RETURN ;
      658     9618
      659     9619        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:38   
      660     9620        /*D*  NAME:        TOU$DFU_DF_WR_LOG
      661     9621              ENTRY:
      662     9622              AUTHOR:      Scott S. Sheppard
      663     9623              INTERFACE:   DFU_WRITE_LOG
      664     9624              DESCRIPTION: This entry point calls procedure DFU_WRITE_LOG
      665     9625        */
      666     9626
      667     9627    1   TOU$DFU_DF_WR_LOG: ENTRY ALTRET ;
      668     9628
      669     9629    1      CALL DFU_WRITE_LOG
      670     9630    1              ALTRET (TOU$DFU_ALTRETURN) ;
      671     9631    1      RETURN ;
      672     9632
      673     9633        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:39   
      674     9634        /*D*  NAME:        TOU$DFU_DF_WR_REVISION
      675     9635              ENTRY:
      676     9636              AUTHOR:      Scott S. Sheppard
      677     9637              INTERFACE:   DFU_WRITE_REVISION
      678     9638              DESCRIPTION: This entry point calls procedure DFU_WRITE_REVISION
      679     9639        */
      680     9640
      681     9641    1   TOU$DFU_DF_WR_REVISION: ENTRY ALTRET ;
      682     9642
      683     9643    1      CALL DFU_WRITE_REVISION
      684     9644    1              ALTRET (TOU$DFU_ALTRETURN) ;
      685     9645    1      RETURN ;
      686     9646
      687     9647        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:40   
      688     9648        /*D*  NAME:        TOU$DFU_OPEN_TEMP
      689     9649              ENTRY:
      690     9650              AUTHOR:      Scott S. Sheppard
      691     9651              INTERFACE:   DFU_OPEN_TEMP
      692     9652              DESCRIPTION: This entry point calls procedure
      693     9653                           DFU_OPEN_TEMP with parameters.
      694     9654        */
      695     9655
      696     9656    1   TOU$DFU_OPEN_TEMP: ENTRY ALTRET ;
      697     9657
      698     9658    1      CALL DFU_OPEN_TEMP (DUP.TEMP.OPEN_TYPE)
      699     9659    1              ALTRET (TOU$DFU_ALTRETURN) ;
      700     9660    1      RETURN ;
      701     9661
      702     9662        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:41   
      703     9663        /*D*  NAME:        TOU$DFU_CLOSE_TEMP
      704     9664              ENTRY:
      705     9665              AUTHOR:      Scott S. Sheppard
      706     9666              INTERFACE:   DFU_CLOSE_TEMP
      707     9667              DESCRIPTION: This entry point calls procedure
      708     9668                           DFU_CLOSE_TEMP with parameters.
      709     9669        */
      710     9670
      711     9671    1   TOU$DFU_CLOSE_TEMP: ENTRY ALTRET ;
      712     9672
      713     9673    1      CALL DFU_CLOSE_TEMP (DUP.TEMP.CLOSE_TYPE)
      714     9674    1              ALTRET (TOU$DFU_ALTRETURN) ;
      715     9675    1      RETURN ;
      716     9676
      717     9677        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:42   
      718     9678        /*D*  NAME:        TOU$DFU_TF_RD_MASTER_CONTROL
      719     9679              ENTRY:
      720     9680              AUTHOR:      Scott S. Sheppard
      721     9681              INTERFACE:   DFU_READ_MASTER_CONTROL
      722     9682              DESCRIPTION: This entry point calls procedure
      723     9683                           DFU_READ_MASTER_CONTROL.
      724     9684        */
      725     9685
      726     9686    1   TOU$DFU_TF_RD_MASTER_CONTROL: ENTRY ALTRET ;
      727     9687
      728     9688    1      CALL DFU_READ_MASTER_CONTROL (DCBNUM (M$TEMP))
      729     9689    1              ALTRET (TOU$DFU_ALTRETURN) ;
      730     9690    1      RETURN ;
      731     9691
      732     9692        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:43   
      733     9693        /*D*  NAME:        TOU$DFU_TF_RD_MASTER_ENTRY
      734     9694              ENTRY:
      735     9695              AUTHOR:      Scott S. Sheppard
      736     9696              INTERFACE:   DFU_READ_MASTER_ENTRY
      737     9697              DESCRIPTION: This entry point calls procedure
      738     9698                           DFU_READ_MASTER_ENTRY.
      739     9699        */
      740     9700
      741     9701    1   TOU$DFU_TF_RD_MASTER_ENTRY: ENTRY ALTRET ;
      742     9702
      743     9703    1      CALL DFU_READ_MASTER_ENTRY (DCBNUM (M$TEMP))
      744     9704    1              ALTRET (TOU$DFU_ALTRETURN) ;
      745     9705    1      RETURN ;
      746     9706
      747     9707        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:44   
      748     9708        /*D*  NAME:        TOU$DFU_TF_RD_CATALOG_CONTROL
      749     9709              ENTRY:
      750     9710              AUTHOR:      Scott S. Sheppard
      751     9711              INTERFACE:   DFU_READ_CATALOG_CONTROL
      752     9712              DESCRIPTION: This entry point calls procedure
      753     9713                           DFU_READ_CATALOG_CONTROL.
      754     9714        */
      755     9715
      756     9716    1   TOU$DFU_TF_RD_CATALOG_CONTROL: ENTRY ALTRET ;
      757     9717
      758     9718    1      CALL DFU_READ_CATALOG_CONTROL (DCBNUM (M$TEMP))
      759     9719    1              ALTRET (TOU$DFU_ALTRETURN) ;
      760     9720    1      RETURN ;
      761     9721
      762     9722        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:45   
      763     9723        /*D*  NAME:        TOU$DFU_TF_RD_SUBCATALOG
      764     9724              ENTRY:
      765     9725              AUTHOR:      Scott S. Sheppard
      766     9726              INTERFACE:   DFU_READ_SUBCATALOG
      767     9727              DESCRIPTION: This entry point calls procedure
      768     9728                           DFU_READ_SUBCATALOG.
      769     9729        */
      770     9730
      771     9731    1   TOU$DFU_TF_RD_SUBCATALOG: ENTRY ALTRET ;
      772     9732
      773     9733    1      CALL DFU_READ_SUBCATALOG (DCBNUM (M$TEMP))
      774     9734    1              ALTRET (TOU$DFU_ALTRETURN) ;
      775     9735    1      RETURN ;
      776     9736
      777     9737        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:46   
      778     9738        /*D*  NAME:        TOU$DFU_TF_RD_CATALOG_ENTRY
      779     9739              ENTRY:
      780     9740              AUTHOR:      Scott S. Sheppard
      781     9741              INTERFACE:   DFU_READ_CATALOG_ENTRY
      782     9742              DESCRIPTION: This entry point calls procedure
      783     9743                           DFU_READ_CATALOG_ENTRY_KEY.
      784     9744        */
      785     9745
      786     9746    1   TOU$DFU_TF_RD_CATALOG_ENTRY: ENTRY ALTRET ;
      787     9747
      788     9748    1      CALL DFU_READ_CATALOG_ENTRY (DCBNUM (M$TEMP))
      789     9749    1              ALTRET (TOU$DFU_ALTRETURN) ;
      790     9750    1      RETURN ;
      791     9751
      792     9752        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:47   
      793     9753        /*D*  NAME:        TOU$DFU_TF_RD_OBJECT
      794     9754              ENTRY:
      795     9755              AUTHOR:      Scott S. Sheppard
      796     9756              INTERFACE:   DFU_READ_OBJECT
      797     9757              DESCRIPTION: This entry point calls procedure
      798     9758                           DFU_READ_OBJECT.
      799     9759        */
      800     9760
      801     9761    1   TOU$DFU_TF_RD_OBJECT: ENTRY ALTRET ;
      802     9762
      803     9763    1      CALL DFU_READ_OBJECT (DCBNUM (M$TEMP))
      804     9764    1              ALTRET (TOU$DFU_ALTRETURN) ;
      805     9765    1      RETURN ;
      806     9766
      807     9767        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:48   
      808     9768        /*D*  NAME:        TOU$DFU_TF_RD_BINARY
      809     9769              ENTRY:
      810     9770              AUTHOR:      Scott S. Sheppard
      811     9771              INTERFACE:   DFU_READ_BINARY
      812     9772              DESCRIPTION: This entry point calls procedure
      813     9773                           DFU_READ_BINARY.
      814     9774        */
      815     9775
      816     9776    1   TOU$DFU_TF_RD_BINARY: ENTRY ALTRET ;
      817     9777
      818     9778    1      CALL DFU_READ_BINARY (DCBNUM (M$TEMP), DUP.BINARY_V)
      819     9779    1              ALTRET (TOU$DFU_ALTRETURN) ;
      820     9780    1      RETURN ;
      821     9781
      822     9782        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:49   
      823     9783        /*D*  NAME:        TOU$DFU_TF_RD_FILE
      824     9784              ENTRY:
      825     9785              AUTHOR:      Scott S. Sheppard
      826     9786              INTERFACE:   DFU_READ_BINARY
      827     9787              DESCRIPTION: This entry point calls procedure
      828     9788                           DFU_READ_BINARY with parameters.
      829     9789        */
      830     9790
      831     9791    1   TOU$DFU_TF_RD_FILE: ENTRY ALTRET ;
      832     9792
      833     9793    1      CALL DFU_READ_BINARY (DCBNUM (M$TEMP), VECTOR (MCA_B.FILE.DATA))
      834     9794    1              ALTRET (TOU$DFU_ALTRETURN) ;
      835     9795    1      RETURN ;
      836     9796
      837     9797        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:50   
      838     9798        /*D*  NAME:        TOU$DFU_TF_RD_HDR
      839     9799              ENTRY:
      840     9800              AUTHOR:      Kathy Larkin
      841     9801              INTERFACE:   DFU_READ_BINARY
      842     9802              DESCRIPTION: This entry point calls procedure
      843     9803                           DFU_READ_BINARY to read a header file
      844     9804                           into MCA_B.DISKETTE_HEADER.DATA.
      845     9805        */
      846     9806
      847     9807    1   TOU$DFU_TF_RD_HDR: ENTRY ALTRET ;
      848     9808
      849     9809    1      CALL DFU_READ_BINARY (DCBNUM(M$TEMP), VECTOR(MCA_B.DISKETTE_HEADER.DATA))
      850     9810    1              ALTRET (TOU$DFU_ALTRETURN) ;
      851     9811    1      RETURN ;
      852     9812
      853     9813        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:51   
      854     9814        /*D*  NAME:        TOU$DFU_TF_RD_DIR
      855     9815              ENTRY:
      856     9816              AUTHOR:      Scott S. Sheppard
      857     9817              INTERFACE:   DFU_READ_BINARY
      858     9818              DESCRIPTION: This entry point calls procedure
      859     9819                           DFU_READ_BINARY with parameters.
      860     9820        */
      861     9821
      862     9822    1   TOU$DFU_TF_RD_DIR: ENTRY ALTRET ;
      863     9823
      864     9824    1      CALL DFU_READ_BINARY (DCBNUM (M$TEMP), VECTOR (MCA_B.DIRECTORY))
      865     9825    1              ALTRET (TOU$DFU_ALTRETURN) ;
      866     9826    1      RETURN ;
      867     9827
      868     9828        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:52   
      869     9829        /*D*  NAME:        TOU$DFU_TF_RD_BCD_CARDS
      870     9830              ENTRY:
      871     9831              AUTHOR:      Scott S. Sheppard
      872     9832              INTERFACE:   DFU_READ_BCD_CARDS
      873     9833              DESCRIPTION: This entry point calls procedure
      874     9834                           DFU_READ_BCD_CARDS.
      875     9835        */
      876     9836
      877     9837    1   TOU$DFU_TF_RD_BCD_CARDS: ENTRY ALTRET ;
      878     9838
      879     9839    1      CALL DFU_READ_BCD_CARDS (DCBNUM (M$TEMP))
      880     9840    1              ALTRET (TOU$DFU_ALTRETURN) ;
      881     9841    1      RETURN ;
      882     9842
      883     9843        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:53   
      884     9844        /*D*  NAME:        TOU$DFU_TF_RD_OBJECT_REFLIST
      885     9845              ENTRY:
      886     9846              AUTHOR:      Scott S. Sheppard
      887     9847              INTERFACE:   DFU_READ_OBJECT_REFLIST
      888     9848              DESCRIPTION: This entry point calls procedure
      889     9849                           DFU_READ_OBJECT_REFLIST.
      890     9850        */
      891     9851
      892     9852    1   TOU$DFU_TF_RD_OBJECT_REFLIST: ENTRY ALTRET ;
      893     9853
      894     9854    1      CALL DFU_READ_OBJECT_REFLIST (DCBNUM (M$TEMP))
      895     9855    1              ALTRET (TOU$DFU_ALTRETURN) ;
      896     9856    1      RETURN ;
      897     9857
      898     9858        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:54   
      899     9859        /*D*  NAME:        TOU$DFU_TF_RD_LAST_DECK#
      900     9860              ENTRY:
      901     9861              AUTHOR:      Scott S. Sheppard
      902     9862              INTERFACE:   DFU_READ_LAST_DECK#
      903     9863              DESCRIPTION: This entry point calls procedure
      904     9864                           DFU_READ_LAST_DECK#.
      905     9865        */
      906     9866
      907     9867    1   TOU$DFU_TF_RD_LAST_DECK#: ENTRY ALTRET ;
      908     9868
      909     9869    1      CALL DFU_READ_LAST_DECK# (DCBNUM (M$TEMP))
      910     9870    1              ALTRET (TOU$DFU_ALTRETURN) ;
      911     9871    1      RETURN ;
      912     9872
      913     9873        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:55   
      914     9874        /*D*  NAME:        TOU$DFU_TF_WR_MASTER_CONTROL
      915     9875              ENTRY:
      916     9876              AUTHOR:      Scott S. Sheppard
      917     9877              INTERFACE:   DFU_WRITE_MASTER_CONTROL
      918     9878              DESCRIPTION: This entry point calls procedure
      919     9879                           DFU_WRITE_MASTER_CONTROL.
      920     9880        */
      921     9881
      922     9882    1   TOU$DFU_TF_WR_MASTER_CONTROL: ENTRY ALTRET ;
      923     9883
      924     9884    1      CALL DFU_WRITE_MASTER_CONTROL (DCBNUM (M$TEMP))
      925     9885    1              ALTRET (TOU$DFU_ALTRETURN) ;
      926     9886    1      RETURN ;
      927     9887
      928     9888        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:56   
      929     9889        /*D*  NAME:        TOU$DFU_TF_WR_MASTER_ENTRY
      930     9890              ENTRY:
      931     9891              AUTHOR:      Scott S. Sheppard
      932     9892              INTERFACE:   DFU_WRITE_MASTER_ENTRY
      933     9893              DESCRIPTION: This entry point calls procedure
      934     9894                           DFU_WRITE_MASTER_ENTRY.
      935     9895        */
      936     9896
      937     9897    1   TOU$DFU_TF_WR_MASTER_ENTRY: ENTRY ALTRET ;
      938     9898
      939     9899    1      CALL DFU_WRITE_MASTER_ENTRY (DCBNUM (M$TEMP))
      940     9900    1              ALTRET (TOU$DFU_ALTRETURN) ;
      941     9901    1      RETURN ;
      942     9902
      943     9903        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:57   
      944     9904        /*D*  NAME:        TOU$DFU_TF_WR_CATALOG_CONTROL
      945     9905              ENTRY:
      946     9906              AUTHOR:      Scott S. Sheppard
      947     9907              INTERFACE:   DFU_WRITE_CATALOG_CONTROL
      948     9908              DESCRIPTION: This entry point calls procedure
      949     9909                           DFU_WRITE_CATALOG_CONTROL.
      950     9910        */
      951     9911
      952     9912    1   TOU$DFU_TF_WR_CATALOG_CONTROL: ENTRY ALTRET ;
      953     9913
      954     9914    1      CALL DFU_WRITE_CATALOG_CONTROL (DCBNUM (M$TEMP))
      955     9915    1              ALTRET (TOU$DFU_ALTRETURN) ;
      956     9916    1      RETURN ;
      957     9917
      958     9918        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:58   
      959     9919        /*D*  NAME:        TOU$DFU_TF_WR_SUBCATALOG
      960     9920              ENTRY:
      961     9921              AUTHOR:      Scott S. Sheppard
      962     9922              INTERFACE:   DFU_WRITE_SUBCATALOG
      963     9923              DESCRIPTION: This entry point calls procedure
      964     9924                           DFU_WRITE_SUBCATALOG.
      965     9925        */
      966     9926
      967     9927    1   TOU$DFU_TF_WR_SUBCATALOG: ENTRY ALTRET ;
      968     9928
      969     9929    1      CALL DFU_WRITE_SUBCATALOG (DCBNUM (M$TEMP))
      970     9930    1              ALTRET (TOU$DFU_ALTRETURN) ;
      971     9931    1      RETURN ;
      972     9932
      973     9933        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:59   
      974     9934        /*D*  NAME:        TOU$DFU_TF_WR_CATALOG_ENTRY
      975     9935              ENTRY:
      976     9936              AUTHOR:      Scott S. Sheppard
      977     9937              INTERFACE:   DFU_WRITE_CATALOG_ENTRY
      978     9938              DESCRIPTION: This entry point calls procedure
      979     9939                           DFU_WRITE_CATALOG_ENTRY_KEY.
      980     9940        */
      981     9941
      982     9942    1   TOU$DFU_TF_WR_CATALOG_ENTRY: ENTRY ALTRET ;
      983     9943
      984     9944    1      CALL DFU_WRITE_CATALOG_ENTRY (DCBNUM (M$TEMP))
      985     9945    1              ALTRET (TOU$DFU_ALTRETURN) ;
      986     9946    1      RETURN ;
      987     9947
      988     9948        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:60   
      989     9949        /*D*  NAME:        TOU$DFU_TF_WR_OBJECT
      990     9950              ENTRY:
      991     9951              AUTHOR:      Scott S. Sheppard
      992     9952              INTERFACE:   DFU_WRITE_OBJECT
      993     9953              DESCRIPTION: This entry point calls procedure
      994     9954                           DFU_WRITE_OBJECT.
      995     9955        */
      996     9956
      997     9957    1   TOU$DFU_TF_WR_OBJECT: ENTRY ALTRET ;
      998     9958
      999     9959    1      CALL DFU_WRITE_OBJECT (DCBNUM (M$TEMP))
     1000     9960    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1001     9961    1      RETURN ;
     1002     9962
     1003     9963        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:61   
     1004     9964        /*D*  NAME:        TOU$DFU_TF_WR_BINARY
     1005     9965              ENTRY:
     1006     9966              AUTHOR:      Scott S. Sheppard
     1007     9967              INTERFACE:   DFU_WRITE_BINARY
     1008     9968              DESCRIPTION: This entry point calls procedure
     1009     9969                           DFU_WRITE_BINARY.
     1010     9970        */
     1011     9971
     1012     9972    1   TOU$DFU_TF_WR_BINARY: ENTRY ALTRET ;
     1013     9973
     1014     9974    1      CALL DFU_WRITE_BINARY (DCBNUM (M$TEMP),
     1015     9975    1              DUP.BINARY_V,
     1016     9976    1              (BIN# * %BIN_RCD_LGTH))
     1017     9977    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1018     9978    1      RETURN ;
     1019     9979
     1020     9980        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:62   
     1021     9981        /*D*  NAME:        TOU$DFU_TF_WR_FILE
     1022     9982              ENTRY:
     1023     9983              AUTHOR:      Scott S. Sheppard
     1024     9984              INTERFACE:   DFU_WRITE_BINARY
     1025     9985              DESCRIPTION: This entry point calls procedure
     1026     9986                           DFU_WRITE_BINARY with parameters.
     1027     9987        */
     1028     9988
     1029     9989    1   TOU$DFU_TF_WR_FILE: ENTRY ALTRET ;
     1030     9990
     1031     9991    1      CALL DFU_WRITE_BINARY (DCBNUM (M$TEMP),
     1032     9992    1              VECTOR (MCA_B.FILE.DATA),
     1033     9993    1              (OBJECT.LOAD_SIZE * 4))
     1034     9994    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1035     9995    1      RETURN ;
     1036     9996
     1037     9997        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:63   
     1038     9998        /*D*  NAME:        TOU$DFU_TF_WR_DIR
     1039     9999              ENTRY:
     1040    10000              AUTHOR:      Scott S. Sheppard
     1041    10001              INTERFACE:   DFU_WRITE_BINARY
     1042    10002              DESCRIPTION: This entry point calls procedure
     1043    10003                           DFU_WRITE_BINARY with parameters.
     1044    10004        */
     1045    10005
     1046    10006    1   TOU$DFU_TF_WR_DIR: ENTRY ALTRET ;
     1047    10007
     1048    10008    1      CALL DFU_WRITE_BINARY (DCBNUM (M$TEMP),
     1049    10009    1              VECTOR (MCA_B.DIRECTORY),
     1050    10010    1              SIZEC(MCA_B.DIRECTORY))
     1051    10011    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1052    10012    1      RETURN ;
     1053    10013
     1054    10014        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:64   
     1055    10015        /*D*  NAME:        TOU$DFU_TF_WR_HDR
     1056    10016              ENTRY:
     1057    10017              AUTHOR:      Kathy Larkin
     1058    10018              INTERFACE:   DFU_WRITE_BINARY
     1059    10019              DESCRIPTION: This entry point calls procedure
     1060    10020                           DFU_WRITE_BINARY with parameters to write a
     1061    10021                           diskette header file to a temporary file.
     1062    10022        */
     1063    10023
     1064    10024    1   TOU$DFU_TF_WR_HDR : ENTRY ALTRET ;
     1065    10025
     1066    10026    1      CALL DFU_WRITE_BINARY (DCBNUM(M$TEMP),
     1067    10027    1              VECTOR (MCA_B.DISKETTE_HEADER.DATA),
     1068    10028    1              (OBJECT.LOAD_SIZE * 4))
     1069    10029    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1070    10030    1      RETURN ;
     1071    10031
     1072    10032        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:65   
     1073    10033        /*D*  NAME:        TOU$DFU_TF_WR_BCD_CARDS
     1074    10034              ENTRY:
     1075    10035              AUTHOR:      Scott S. Sheppard
     1076    10036              INTERFACE:   DFU_WRITE_BCD_CARDS
     1077    10037              DESCRIPTION: This entry point calls procedure
     1078    10038                           DFU_WRITE_BCD_CARDS.
     1079    10039        */
     1080    10040
     1081    10041    1   TOU$DFU_TF_WR_BCD_CARDS: ENTRY ALTRET ;
     1082    10042
     1083    10043    1      CALL DFU_WRITE_BCD_CARDS (DCBNUM (M$TEMP))
     1084    10044    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1085    10045    1      RETURN ;
     1086    10046
     1087    10047        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:66   
     1088    10048        /*D*  NAME:        TOU$DFU_TF_WR_OBJECT_REFLIST
     1089    10049              ENTRY:
     1090    10050              AUTHOR:      Scott S. Sheppard
     1091    10051              INTERFACE:   DFU_WRITE_OBJECT_REFLIST
     1092    10052              DESCRIPTION: This entry point calls procedure
     1093    10053                           DFU_WRITE_OBJECT_REFLIST.
     1094    10054        */
     1095    10055
     1096    10056    1   TOU$DFU_TF_WR_OBJECT_REFLIST: ENTRY ALTRET ;
     1097    10057
     1098    10058    1      CALL DFU_WRITE_OBJECT_REFLIST (DCBNUM (M$TEMP))
     1099    10059    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1100    10060    1      RETURN ;
     1101    10061
     1102    10062        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:67   
     1103    10063        /*D*  NAME:        TOU$DFU_TF_WR_LAST_DECK#
     1104    10064              ENTRY:
     1105    10065              AUTHOR:      Scott S. Sheppard
     1106    10066              INTERFACE:   DFU_WRITE_LAST_DECK#
     1107    10067              DESCRIPTION: This entry point calls procedure
     1108    10068                           DFU_WRITE_LAST_DECK#.
     1109    10069        */
     1110    10070
     1111    10071    1   TOU$DFU_TF_WR_LAST_DECK#: ENTRY ALTRET ;
     1112    10072
     1113    10073    1      CALL DFU_WRITE_LAST_DECK# (DCBNUM (M$TEMP))
     1114    10074    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1115    10075    1      RETURN ;
     1116    10076
     1117    10077        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:68   
     1118    10078        /*D*  NAME:        TOU$DFU_ALTRETURN
     1119    10079              LABEL:
     1120    10080              AUTHOR:      Scott S. Sheppard
     1121    10081              DESCRIPTION: This label is the  alternate return  label  for
     1122    10082                           all of the  entry points into  module  TOU$DFU.
     1123    10083                           Once  control  has  transfered  to this  label,
     1124    10084                           the module altreturns to the calling procedure.
     1125    10085        */
     1126    10086
     1127    10087    1   TOU$DFU_ALTRETURN:
     1128    10088
     1129    10089    1      ALTRETURN ;
     1130    10090
     1131    10091        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:69   
     1132    10092        /*I*  NAME:        DFU_READ_MASTER_CONTROL
     1133    10093              AUTHOR:      Scott S. Sheppard
     1134    10094              PURPOSE:     Reads Master Control from the deckfile
     1135    10095              INTERFACE:   M$READ
     1136    10096                           DFU_ERR_MSG
     1137    10097              INPUT:       DCB#        - deckfile or temporary file
     1138    10098                           MASTER_KEY  - local constant 'MASTER_CATALOG'
     1139    10099              OUTPUT:      MASTER_DATA - Symdef for master data
     1140    10100              DESCRIPTION: This procedure reads the master control record. The record
     1141    10101                           contains the   master catalog deck number,   the number of
     1142    10102                           deckfile catalogs, and checksum information.
     1143    10103        */
     1144    10104
     1145    10105    1   DFU_READ_MASTER_CONTROL: PROC (DCB#) ALTRET ;
     1146    10106
     1147    10107    2      DCL DCB#  UBIN WORD ALIGNED ;
     1148    10108           %MASTER_KEY (STCLASS = CONSTANT) ;
     1149    10121           %MASTER_DATA (STCLASS = "STATIC SYMDEF") ;
     1150    10135           %FPT_READ (FPTN = READ_MASTER_CONTROL,
     1151    10136                      BUF  = MASTER_DATA,
     1152    10137                      KEY  = MASTER_KEY,
     1153    10138                      KEYS = YES,
     1154    10139                      WAIT = YES) ;
     1155    10178
     1156    10179        /* Code */
     1157    10180
     1158    10181    2      READ_MASTER_CONTROL.V.DCB# = DCB# ;
     1159    10182    2      CALL M$READ (READ_MASTER_CONTROL) ALTRET (NO_MASTER_CONTROL) ;
     1160    10183    2      RETURN ;
     1161    10184
     1162    10185    2   NO_MASTER_CONTROL:
     1163    10186    2      CALL DFU_ERR_MSG (%E$DRMC_NO_MAST_CNTRL, %TRUE) ;
     1164    10187    2      ALTRETURN ;
     1165    10188
     1166    10189    2   END DFU_READ_MASTER_CONTROL ;
     1167    10190        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:70   
     1168    10191        /*I*  NAME:        DFU_READ_MASTER_ENTRY
     1169    10192              AUTHOR:      Scott S. Sheppard
     1170    10193              PURPOSE:     Reads Master Entry from the deckfile
     1171    10194              INTERFACE:   M$READ
     1172    10195                           DFU_ERR_MSG
     1173    10196                           DCB#
     1174    10197                           MASTER_ENTRY_KEY  - Symdef for key
     1175    10198              OUTPUT:      CATALOG_KEY - redef of CATALOG_KEY
     1176    10199              DESCRIPTION: This procedure reads a master entry.  The master entry key
     1177    10200                           contains a size field (4), the master catalog deck number,
     1178    10201                           and the entry number of the catalog to be read. The record
     1179    10202                           returned is a catalog key of a catalog in the deckfile.
     1180    10203        */
     1181    10204        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:71   
     1182    10205    1   DFU_READ_MASTER_ENTRY: PROC (DCB#) ALTRET ;
     1183    10206
     1184    10207    2      DCL DCB#  UBIN WORD ALIGNED ;
     1185    10208           %MASTER_ENTRY_KEY (STCLASS = "STATIC SYMDEF") ;
     1186    10222           %CATALOG_KEY (STCLASS = STATIC SYMDEF) ;
     1187    10236           %FPT_READ (FPTN = READ_MASTER_ENTRY,
     1188    10237                      BUF  = CATALOG_KEY,
     1189    10238                      KEY  = MASTER_ENTRY_KEY,
     1190    10239                      KEYS = YES,
     1191    10240                      WAIT = YES) ;
     1192    10279
     1193    10280        /* Code */
     1194    10281
     1195    10282    2      READ_MASTER_ENTRY.V.DCB# = DCB# ;
     1196    10283    2      CALL M$READ (READ_MASTER_ENTRY) ALTRET (NO_MASTER_ENTRY) ;
     1197    10284    2      RETURN ;
     1198    10285
     1199    10286    2   NO_MASTER_ENTRY:
     1200    10287    2      CALL DFU_ERR_MSG (%E$DRME_NO_MAST_ENTRY, %TRUE) ;
     1201    10288    2      ALTRETURN ;
     1202    10289
     1203    10290    2   END DFU_READ_MASTER_ENTRY ;
     1204    10291        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:72   
     1205    10292        /*I*  NAME:        DFU_READ_CATALOG_CONTROL
     1206    10293              AUTHOR:      Scott S. Sheppard
     1207    10294              PURPOSE:     Reads Catalog Control from the deckfile
     1208    10295              INTERFACE:   M$READ
     1209    10296                           DFU_ERR_MSG
     1210    10297              INPUT:       DCB#      - deckfile or temporary file
     1211    10298                           CATALOG_KEY - Symref filled by DFU_READ_MASTER_ENTRY
     1212    10299              OUTPUT:      CATALOG_DATA- Symdef for catalog data
     1213    10300              DESCRIPTION: This procedure reads a catalog control from the deckfile.
     1214    10301                           The catalog key is a 21 character name and a  2 byte deck
     1215    10302                           number.   The catalog control contains deck number, entry
     1216    10303                           and checksum information.
     1217    10304        */
     1218    10305        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:73   
     1219    10306    1   DFU_READ_CATALOG_CONTROL: PROC (DCB#) ALTRET ;
     1220    10307
     1221    10308    2      DCL DCB#  UBIN WORD ALIGNED ;
     1222    10309           %CATALOG_KEY (STCLASS = SYMREF) ;
     1223    10323           %CATALOG_DATA (STCLASS = "STATIC SYMDEF") ;
     1224    10337           %FPT_READ (FPTN = READ_CATALOG_CONTROL,
     1225    10338                      BUF  = CATALOG_DATA,
     1226    10339                      KEY  = CATALOG_KEY,
     1227    10340                      KEYS = YES,
     1228    10341                      WAIT = YES) ;
     1229    10380
     1230    10381        /* Code */
     1231    10382
     1232    10383    2      READ_CATALOG_CONTROL.V.DCB# = DCB# ;
     1233    10384    2      CALL M$READ (READ_CATALOG_CONTROL) ALTRET (NO_CATALOG_CONTROL) ;
     1234    10385    2      RETURN ;
     1235    10386
     1236    10387    2   NO_CATALOG_CONTROL:
     1237    10388    2      CALL DFU_ERR_MSG (%E$DRCC_NO_CAT_CNTRL, %TRUE) ;
     1238    10389    2      ALTRETURN ;
     1239    10390
     1240    10391    2   END DFU_READ_CATALOG_CONTROL ;
     1241    10392        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:74   
     1242    10393        /*I*  NAME:        DFU_READ_SUBCATALOG
     1243    10394              AUTHOR:      Scott S. Sheppard
     1244    10395              PURPOSE:     Reads Subcatalog from the deckfile
     1245    10396              INTERFACE:   M$READ
     1246    10397                           DFU_ERR_MSG
     1247    10398              INPUT:       DCB#      - deckfile or temporary file
     1248    10399                           SUBCATALOG_KEY - Symdef for catalog key
     1249    10400              OUTPUT:      SUBCATALOG_DATA- Symdef for catalog data
     1250    10401              DESCRIPTION: This procedure reads the IFAD file identifier and
     1251    10402                           IFAD file number for a catalog from the deckfile.
     1252    10403                           The key used contains the  size (set to 4),   the
     1253    10404                           deck number of the catalog, and a zero   (for the
     1254    10405                           zeroeth entry in the catalog).The record returned
     1255    10406                           contains a 40 character file id  and  a  3  digit
     1256    10407                           file number.
     1257    10408                           The file identifier and number are from the  IFAD
     1258    10409                           source used to place the catalog in the deckfile.
     1259    10410        */
     1260    10411        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:75   
     1261    10412    1   DFU_READ_SUBCATALOG: PROC (DCB#) ALTRET ;
     1262    10413
     1263    10414    2      DCL DCB#  UBIN WORD ALIGNED ;
     1264    10415           %SUBCATALOG_KEY (STCLASS = "STATIC SYMDEF") ;
     1265    10429           %SUBCATALOG_DATA (STCLASS = "STATIC SYMDEF") ;
     1266    10442           %FPT_READ (FPTN = READ_SUBCATALOG,
     1267    10443                      BUF  = SUBCATALOG_DATA,
     1268    10444                      KEY  = SUBCATALOG_KEY,
     1269    10445                      KEYS = YES,
     1270    10446                      WAIT = YES) ;
     1271    10485
     1272    10486        /* Code */
     1273    10487
     1274    10488    2      READ_SUBCATALOG.V.DCB# = DCB# ;
     1275    10489    2      CALL M$READ (READ_SUBCATALOG) ALTRET (NO_SUBCATALOG) ;
     1276    10490    2      RETURN ;
     1277    10491
     1278    10492    2   NO_SUBCATALOG:
     1279    10493    2      CALL DFU_ERR_MSG (%E$DRS_NO_SUBCAT, %TRUE) ;
     1280    10494    2      ALTRETURN ;
     1281    10495
     1282    10496    2   END DFU_READ_SUBCATALOG ;
     1283    10497        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:76   
     1284    10498        /*I*  NAME:        DFU_READ_CATALOG_ENTRY
     1285    10499              AUTHOR:      Scott S. Sheppard
     1286    10500              PURPOSE:     Reads Catalog Entry from the deckfile
     1287    10501              INTERFACE:   M$READ
     1288    10502                           DFU_ERR_MSG
     1289    10503              INPUT:       DCB#      - deckfile or temporary file
     1290    10504                           CATALOG_ENTRY_KEY  - Symdef for catalog entry key
     1291    10505              OUTPUT:      OBJECT_KEY         - Symdef for object key
     1292    10506              DESCRIPTION: This procedure reads a catalog entry. The catalog entry key
     1293    10507                           contains the deck number of the catalog and the entry
     1294    10508                           number desired. The record returned is an object key.
     1295    10509        */
     1296    10510
     1297    10511    1   DFU_READ_CATALOG_ENTRY: PROC (DCB#) ALTRET ;
     1298    10512
     1299    10513    2      DCL DCB#  UBIN WORD ALIGNED ;
     1300    10514           %CATALOG_ENTRY_KEY (STCLASS = "STATIC SYMDEF") ;
     1301    10528           %OBJECT_KEY (STCLASS = "STATIC SYMDEF") ;
     1302    10541           %FPT_READ (FPTN = READ_CATALOG_ENTRY,
     1303    10542                      BUF  = OBJECT_KEY,
     1304    10543                      KEY  = CATALOG_ENTRY_KEY,
     1305    10544                      KEYS = YES,
     1306    10545                      WAIT = YES) ;
     1307    10584
     1308    10585        /* Code */
     1309    10586
     1310    10587    2      READ_CATALOG_ENTRY.V.DCB# = DCB# ;
     1311    10588    2      CALL M$READ (READ_CATALOG_ENTRY) ALTRET (NO_CATALOG_ENTRY) ;
     1312    10589    2      RETURN ;
     1313    10590
     1314    10591    2   NO_CATALOG_ENTRY:
     1315    10592    2      CALL DFU_ERR_MSG (%E$DRCE_NO_CAT_ENTRY, %TRUE) ;
     1316    10593    2      ALTRETURN ;
     1317    10594
     1318    10595    2   END DFU_READ_CATALOG_ENTRY ;
     1319    10596        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:77   
     1320    10597        /*I*  NAME:        DFU_READ_OBJECT
     1321    10598              AUTHOR:      Scott S. Sheppard
     1322    10599              PURPOSE:     Reads Object Card from the deckfile
     1323    10600              INTERFACE:   M$READ
     1324    10601                           DFU_ERR_MSG
     1325    10602              INPUT:       DCB#      - deckfile or temporary file
     1326    10603                           OBJECT_KEY - Symref for object key
     1327    10604              OUTPUT:      OBJECT     - Symdef for $OBJECT card
     1328    10605              DESCRIPTION: This procedure reads an object card from the
     1329    10606                           deckfile. The key used contains a size field
     1330    10607                           (set to 23) and a 23 character descriptor of
     1331    10608                           the  object module (test page)   to be read.
     1332    10609                           The $OBJECT card returned contains the  deck
     1333    10610                           of the object code for the test page as well
     1334    10611                           other descriptive information. After a read,
     1335    10612                           the data is checked to ensure that a $OBJECT
     1336    10613                           card was found.
     1337    10614        */
     1338    10615        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:78   
     1339    10616    1   DFU_READ_OBJECT: PROC (DCB#) ALTRET ;
     1340    10617
     1341    10618    2      DCL DCB#  UBIN WORD ALIGNED ;
     1342    10619           %OBJECT_KEY (STCLASS = SYMREF) ;
     1343    10632           %OBJECT (STCLASS = "STATIC SYMDEF") ;
     1344    10695           %FPT_READ (FPTN = READ_OBJECT,
     1345    10696                      BUF  = OBJECT,
     1346    10697                      KEY  = OBJECT_KEY,
     1347    10698                      KEYS = YES,
     1348    10699                      WAIT = YES) ;
     1349    10738
     1350    10739        /* Code */
     1351    10740
     1352    10741    2      READ_OBJECT.V.DCB# = DCB# ;
     1353    10742    2      CALL M$READ (READ_OBJECT) ALTRET (NO_OBJECT) ;
     1354    10743    2      IF OBJECT.BCD.TYPE = 'OBJECT'
     1355    10744    2      THEN RETURN ;
     1356    10745    3      ELSE DO ;
     1357    10746    3              CALL DFU_ERR_MSG (%E$DRO_DECK_NO_OBJECT, %FALSE) ;
     1358    10747    3              ALTRETURN ;
     1359    10748    3           END /* ELSE */ ;
     1360    10749
     1361    10750    2   NO_OBJECT:
     1362    10751    2      CALL DFU_ERR_MSG (%E$DRO_NO_OBJECT, %TRUE) ;
     1363    10752    2      ALTRETURN ;
     1364    10753
     1365    10754    2   END DFU_READ_OBJECT ;
     1366    10755        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:79   
     1367    10756        /*I*  NAME:        DFU_READ_BINARY
     1368    10757              AUTHOR:      Scott S. Sheppard
     1369    10758              PURPOSE:     Gets Binary Deck from the deckfile
     1370    10759             INTERFACE:    M$READ Monitor Service
     1371    10760                           DFU_ERR_MSG
     1372    10761             PARAMETERS:   DCB# - input
     1373    10762                           BUF_V - vector to the target area
     1374    10763             DATA:         BINARY_KEY - input
     1375    10764             DESCRIPTION:  This  procedure reads  a binary  record from a
     1376    10765                           deckfile  or a  temporary file  as dictated by
     1377    10766                           the DCB number passed. The binary image may be
     1378    10767                           an IFAD binary image, MCA diskette file, or an
     1379    10768                           MCA  diskette  directory.  The  results of the
     1380    10769                           read  will be  placed in  the buffer framed by
     1381    10770                           the   BUF_V  parameter.  If   any  errors  are
     1382    10771                           encountered, the procedure will print an error
     1383    10772                           message and ALTRETURN.
     1384    10773        */
     1385    10774        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:80   
     1386    10775    1   DFU_READ_BINARY: PROC (DCB#, BUF_V) ALTRET ;
     1387    10776
     1388    10777    2      DCL DCB#  UBIN WORD ALIGNED ;
     1389    10778    2      DCL BUF_V BIT (72) ALIGNED ;
     1390    10779           %BINARY_KEY (STCLASS = SYMREF) ;
     1391    10793           %FPT_READ (FPTN = READ_BINARY_DECK,
     1392    10794                      KEY  = BINARY_KEY,
     1393    10795                      KEYS = YES,
     1394    10796                      WAIT = YES) ;
     1395    10835
     1396    10836        /* Code */
     1397    10837
     1398    10838    2      READ_BINARY_DECK.V.DCB# = DCB# ;
     1399    10839    2      READ_BINARY_DECK.BUF_ = BUF_V ;
     1400    10840    2      CALL M$READ (READ_BINARY_DECK) ALTRET (BAD_BINARY) ;
     1401    10841    2      RETURN ;
     1402    10842
     1403    10843    2   BAD_BINARY:
     1404    10844    2      CALL DFU_ERR_MSG (%E$DRB_BAD_BINARY, %TRUE) ;
     1405    10845    2      ALTRETURN ;
     1406    10846
     1407    10847    2   END DFU_READ_BINARY ;
     1408    10848        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:81   
     1409    10849        /*I*  NAME:        DFU_READ_BCD_CARDS
     1410    10850              AUTHOR:      Scott S. Sheppard
     1411    10851              PURPOSE:     Reads BCD Cards from the deckfile
     1412    10852              INTERFACE:   M$READ
     1413    10853                           DFU_ERR_MSG
     1414    10854              INPUT:       DCB#      - deckfile or temporary file
     1415    10855                           BCD#    - Number of BCD cards
     1416    10856                           BCD_KEY - Symdef for BCD key
     1417    10857              OUTPUT:      BCD_B   - array of BCD cards
     1418    10858              DESCRIPTION: This procedure reads all patch cards and the
     1419    10859                           $DKEND card for a desired test page. The key
     1420    10860                           used contains a size field (set= 4) the deck
     1421    10861                           number of the test page, and the entry numb.
     1422    10862                           The entry number ranges from 0 to n,   where
     1423    10863                           the nTH entry is the $DKEND card.
     1424    10864        */
     1425    10865
     1426    10866    1   DFU_READ_BCD_CARDS: PROC (DCB#) ALTRET ;
     1427    10867
     1428    10868    2      DCL DCB#                       UBIN WORD ALIGNED ;
     1429    10869           %BCD_KEY (STCLASS = "STATIC SYMDEF") ;
     1430    10883    2      DCL CUR#                       UBIN WORD SYMREF ALIGNED ;
     1431    10884    2      DCL BCD#                       UBIN WORD SYMREF ALIGNED ;
     1432    10885           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
     1433    10897           %FPT_READ (FPTN = READ_BCD_CARD,
     1434    10898                      KEY  = BCD_KEY,
     1435    10899                      KEYS = YES,
     1436    10900                      WAIT = YES) ;
     1437    10939           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:82   
     1438    10940        /* Code */
     1439    10941
     1440    10942    2      READ_BCD_CARD.V.DCB# = DCB# ;
     1441    10943    3      DO CUR# = 1 TO BCD# ;
     1442    10944    3         BCD_KEY.CARD# = CUR# ;
     1443    10945    3         READ_BCD_CARD.BUF_ = VECTOR (BCD_B(CUR#-1)) ;
     1444    10946    3         CALL M$READ (READ_BCD_CARD) ALTRET (BAD_DECK) ;
     1445    10947    3      END /* DO */ ;
     1446    10948    2      IF SUBSTR (BCD_B(BCD#-1), 7, 5) = 'DKEND'
     1447    10949    2      THEN RETURN ;
     1448    10950    3      ELSE DO ;
     1449    10951    3              CALL DFU_ERR_MSG (%E$DRBC_BAD_DECK, %FALSE) ;
     1450    10952    3              ALTRETURN ;
     1451    10953    3           END /* ELSE */ ;
     1452    10954
     1453    10955    2   BAD_DECK:
     1454    10956    2      CALL DFU_ERR_MSG (%E$DRBC_NO_BCD_CARDS, %TRUE) ;
     1455    10957    2      ALTRETURN ;
     1456    10958
     1457    10959    2   END DFU_READ_BCD_CARDS ;
     1458    10960        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:83   
     1459    10961        /*I*  NAME:        DFU_READ_OBJECT_REFLIST
     1460    10962              AUTHOR:      Scott S. Sheppard
     1461    10963              PURPOSE:     Reads Object Reference List from the deckfile
     1462    10964              INTERFACE:   M$READ
     1463    10965                           DFU_ERR_MSG
     1464    10966              INPUT:       DCB#      - deckfile or temporary file
     1465    10967                           OBJECT_REFLIST_KEY - Symdef for object ref. list
     1466    10968              OUTPUT:      OBJECT_REFLIST_DATA- Symdef for object ref. list
     1467    10969              DESCRIPTION: This  procedure  reads the  object reference list
     1468    10970                           for an object deck from the deckfile.
     1469    10971                           The key is based on the deck number and is always
     1470    10972                           the 201st entry.
     1471    10973                           The information returned  includes  the number of
     1472    10974                           times the deck is referenced and the master entry
     1473    10975                           numb. of the catalog and its entry in the catalog
     1474    10976                           Example: 3 1 1 2 1 5 7
     1475    10977                              3 references
     1476    10978                              Master Entry 1   (First Catalog in Deckfile)
     1477    10979                              Catalog Entry 1  (First Deck in the Catalog)
     1478    10980                              Master Entry 2   (Second Catalog in Deckfile)
     1479    10981                              Catalog Entry 1  (First Deck in the Catalog)
     1480    10982                              Master Entry 5   (Fifth Catalog in the Deckfile)
     1481    10983                              Catalog Entry 7  (Seventh Deck in the Catalog)
     1482    10984        */
     1483    10985        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:84   
     1484    10986    1   DFU_READ_OBJECT_REFLIST: PROC (DCB#) ALTRET ;
     1485    10987
     1486    10988    2      DCL DCB#  UBIN WORD ALIGNED ;
     1487    10989           %OBJECT_REFLIST_KEY (STCLASS = "STATIC SYMDEF") ;
     1488    11003           %OBJECT_REFLIST_DATA (STCLASS = "STATIC SYMDEF") ;
     1489    11018           %FPT_READ (FPTN = READ_OBJECT_REFLIST,
     1490    11019                      BUF  = OBJECT_REFLIST_DATA,
     1491    11020                      KEY  = OBJECT_REFLIST_KEY,
     1492    11021                      KEYS = YES,
     1493    11022                      WAIT = YES) ;
     1494    11061
     1495    11062        /* Code */
     1496    11063
     1497    11064    2      READ_OBJECT_REFLIST.V.DCB# = DCB# ;
     1498    11065    2      CALL M$READ (READ_OBJECT_REFLIST) ALTRET (NO_OBJECT_REFLIST) ;
     1499    11066    2      RETURN ;
     1500    11067
     1501    11068    2   NO_OBJECT_REFLIST:
     1502    11069    2      CALL DFU_ERR_MSG (%E$DROR_NO_REFLST, %TRUE) ;
     1503    11070    2      ALTRETURN ;
     1504    11071
     1505    11072    2   END DFU_READ_OBJECT_REFLIST ;
     1506    11073        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:85   
     1507    11074        /*I*  NAME:        DFU_READ_LAST_DECK#
     1508    11075              AUTHOR:      Scott S. Sheppard
     1509    11076              PURPOSE:     Reads Last Deck Number from the deckfile
     1510    11077              INTERFACE:   M$READ
     1511    11078                           DFU_ERR_MSG
     1512    11079              INPUT:       DCB#      - deckfile or temporary file
     1513    11080                           LAST_DECK_KEY - local constant 'LAST_DECK'
     1514    11081              OUTPUT:      LAST          - Symdef of last deck number
     1515    11082              DESCRIPTION: This procedure reads the last deck num. from the
     1516    11083                           deckfile. The last deck number record, keyed  by
     1517    11084                           the string 'LAST_DECK',  is  the  largest   deck
     1518    11085                           number in the deckfile.
     1519    11086        */
     1520    11087
     1521    11088    1   DFU_READ_LAST_DECK#: PROC (DCB#) ALTRET ;
     1522    11089
     1523    11090    2      DCL DCB#  UBIN WORD ALIGNED ;
     1524    11091           %LAST_DECK_KEY (STCLASS = CONSTANT) ;
     1525    11104           %LAST (STCLASS = "STATIC SYMDEF") ;
     1526    11117           %FPT_READ  (FPTN = READ_LAST_DECK#,
     1527    11118                       BUF  = LAST,
     1528    11119                       KEY  = LAST_DECK_KEY,
     1529    11120                       KEYS = YES,
     1530    11121                       WAIT = YES) ;
     1531    11160
     1532    11161        /* Code */
     1533    11162
     1534    11163    2      READ_LAST_DECK#.V.DCB# = DCB# ;
     1535    11164    2      CALL M$READ (READ_LAST_DECK#) ALTRET (NO_LAST_DECK#) ;
     1536    11165    2      RETURN ;
     1537    11166
     1538    11167    2   NO_LAST_DECK#:
     1539    11168    2      CALL DFU_ERR_MSG (%E$DRLD_NO_LAST_DECK#, %TRUE) ;
     1540    11169    2      ALTRETURN ;
     1541    11170
     1542    11171    2   END DFU_READ_LAST_DECK# ;
     1543    11172        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:86   
     1544    11173        /*I*  NAME:        DFU_READ_LOG
     1545    11174              AUTHOR:      Scott S. Sheppard
     1546    11175              PURPOSE:     Reads Deckfile Status from the deckfile
     1547    11176              INTERFACE:   M$READ
     1548    11177                           DFU_ERR_MSG
     1549    11178              INPUT:       LOG_KEY - local constant
     1550    11179                           DUP.LOG_V - vector to the buffer
     1551    11180              OUTPUT:      Deckfile history log read from the deckfile
     1552    11181              DESCRIPTION: This procedure reads the deckfile history log
     1553    11182                           from the deckfile.
     1554    11183        */
     1555    11184
     1556    11185    1   DFU_READ_LOG: PROC ALTRET ;
     1557    11186
     1558    11187           %LOG_KEY (STCLASS = CONSTANT) ;
     1559    11200           %FPT_READ  (FPTN = READ_DECKFILE_LOG,
     1560    11201                       DCB  = M$DECKFILE,
     1561    11202                       KEY  = LOG_KEY,
     1562    11203                       KEYS = YES,
     1563    11204                       WAIT = YES) ;
     1564    11243
     1565    11244        /* Code */
     1566    11245
     1567    11246    2      READ_DECKFILE_LOG.BUF_ = DUP.LOG_V ;
     1568    11247    2      CALL M$READ (READ_DECKFILE_LOG) ALTRET (NO_LOG) ;
     1569    11248    2      RETURN ;
     1570    11249
     1571    11250    2   NO_LOG:
     1572    11251    2      CALL DFU_ERR_MSG (%E$DRD_NO_LOG, %TRUE) ;
     1573    11252    2      ALTRETURN ;
     1574    11253
     1575    11254    2   END DFU_READ_LOG ;
     1576    11255        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:87   
     1577    11256        /*I*  NAME:        DFU_READ_REVISION
     1578    11257              AUTHOR:      Scott S. Sheppard
     1579    11258              PURPOSE:     Reads IFAD Revision from the deckfile
     1580    11259              INTERFACE:   M$READ
     1581    11260                           DFU_ERR_MSG
     1582    11261              INPUT:       REVISION_KEY - local constant
     1583    11262              OUTPUT:      REVISION_B
     1584    11263              DESCRIPTION: This procedure reads the IFAD revision buffer
     1585    11264                           from the deckfile.
     1586    11265        */
     1587    11266
     1588    11267    1   DFU_READ_REVISION: PROC ALTRET ;
     1589    11268
     1590    11269           %REVISION_KEY (STCLASS = CONSTANT) ;
     1591    11282           %REVISION_B (STCLASS = "STATIC SYMDEF") ;
     1592    11303           %FPT_READ  (FPTN = READ_DECKFILE_REVISION,
     1593    11304                       BUF  = REVISION_B,
     1594    11305                       DCB  = M$DECKFILE,
     1595    11306                       KEY  = REVISION_KEY,
     1596    11307                       KEYS = YES,
     1597    11308                       WAIT = YES) ;
     1598    11347
     1599    11348        /* Code */
     1600    11349
     1601    11350    2      CALL M$READ (READ_DECKFILE_REVISION) ALTRET (NO_REVISION) ;
     1602    11351    2      RETURN ;
     1603    11352
     1604    11353    2   NO_REVISION:
     1605    11354    2      CALL DFU_ERR_MSG (%E$DRR_NO_REVISION, %TRUE) ;
     1606    11355    2      ALTRETURN ;
     1607    11356
     1608    11357    2   END DFU_READ_REVISION ;
     1609    11358        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:88   
     1610    11359        /*I*  NAME:        DFU_CHECK_ALREADY_SAVED
     1611    11360              AUTHOR:      Scott S. Sheppard
     1612    11361              PURPOSE:     Checks For Object Deck in Deckfile
     1613    11362              INTERFACE:   M$READ
     1614    11363                           DFU_ERR_MSG
     1615    11364              INPUT:       OBJECT_KEY - Symref for object key
     1616    11365                           OBJECT - current $Object Card
     1617    11366              OUTPUT:      OLD_OBJECT - temporary $OBJECT card
     1618    11367                           OBJECT - if already saved:
     1619    11368                                    deck number and title date changed
     1620    11369              DESCRIPTION: This procedure reads an object card from the
     1621    11370                           deckfile.This is done to determine if a deck
     1622    11371                           is already stored  in the deckfile.   If the
     1623    11372                           deck is stored, the $OBJECT cards of the old
     1624    11373                           and new are compared to check  for a  match.
     1625    11374                           If the cards match, the procedure altreturns
     1626    11375                           which implies that the deck does not need to
     1627    11376                           be added. If the procedure returns, no  card
     1628    11377                           was found in the deckfile  corresponding  to
     1629    11378                           the deck pending addition.
     1630    11379        */
     1631    11380        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:89   
     1632    11381    1   DFU_CHECK_ALREADY_SAVED: PROC ALTRET ;
     1633    11382
     1634    11383           %OBJECT_KEY (STCLASS = SYMREF) ;
     1635    11396           %OBJECT (NAME    = OLD_OBJECT,
     1636    11397                    STCLASS = STATIC) ;
     1637    11460           %OBJECT (STCLASS = SYMREF) ;
     1638    11523           %FPT_READ (FPTN = READ_OBJECT,
     1639    11524                      BUF  = OLD_OBJECT,
     1640    11525                      DCB  = M$DECKFILE,
     1641    11526                      KEY  = OBJECT_KEY,
     1642    11527                      KEYS = YES,
     1643    11528                      WAIT = YES) ;
     1644    11567
     1645    11568        /* Code */
     1646    11569
     1647    11570    2      CALL M$READ (READ_OBJECT) ALTRET (READ_ERROR) ;
     1648    11571    2      IF OLD_OBJECT.BINARY_COUNT  ~= OBJECT.BINARY_COUNT  OR
     1649    11572    2              OLD_OBJECT.TOTAL_COUNT   ~= OBJECT.TOTAL_COUNT   OR
     1650    11573    2              OLD_OBJECT.LOAD_SIZE     ~= OBJECT.LOAD_SIZE     OR
     1651    11574    2              OLD_OBJECT.DECK_CHECKSUM ~= OBJECT.DECK_CHECKSUM
     1652    11575    2      THEN CALL DFU_ERR_MSG (%E$DCAS_MISMATCH, %FALSE) ;
     1653    11576    3      ELSE DO ;
     1654    11577    3              OBJECT.DECK# = OLD_OBJECT.DECK# ;
     1655    11578    3              IF OBJECT.BCD.LIBRARY = 'HNIOA0'
     1656    11579    3              THEN /* object card has no date */ ;
     1657    11580    3              ELSE OBJECT.BCD.DATE = OLD_OBJECT.BCD.DATE ;
     1658    11581    3           END /* ELSE */ ;
     1659    11582    2      ALTRETURN ;
     1660    11583
     1661    11584    2   READ_ERROR:
     1662    11585    2      IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOKEY
     1663    11586    2      THEN /* Deck is not saved in the deckfile. */ ;
     1664    11587    2      ELSE CALL DFU_ERR_MSG (%E$DCAS_READ_ERROR, %TRUE) ;
     1665    11588    2      RETURN ;
     1666    11589
     1667    11590    2   END DFU_CHECK_ALREADY_SAVED ;
     1668    11591        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:90   
     1669    11592        /*I*  NAME:        DFU_CHECK_FOR_KEY
     1670    11593              AUTHOR:      Scott S. Sheppard
     1671    11594              PURPOSE:     Checks For Object Deck in Deckfile
     1672    11595              INTERFACE:   M$READ
     1673    11596                           DFU_ERR_MSG
     1674    11597              INPUT:       OBJECT_KEY - SYMREF for object key
     1675    11598              OUTPUT:      OBJECT     - contains $OBJECT card
     1676    11599              DESCRIPTION: This procedure reads an object card from the
     1677    11600                           deckfile.This is done to determine if a deck
     1678    11601                           is already stored  in the deckfile.   If the
     1679    11602                           deck is stored, the  $OBJECT  card  contains
     1680    11603                           information about the object deck.
     1681    11604        */
     1682    11605        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:91   
     1683    11606    1   DFU_CHECK_FOR_KEY: PROC ALTRET ;
     1684    11607
     1685    11608           %OBJECT_KEY (STCLASS = SYMREF) ;
     1686    11621           %OBJECT (STCLASS = SYMREF) ;
     1687    11684           %FPT_READ (FPTN = READ_OBJECT,
     1688    11685                      BUF  = OBJECT,
     1689    11686                      DCB  = M$DECKFILE,
     1690    11687                      KEY  = OBJECT_KEY,
     1691    11688                      KEYS = YES,
     1692    11689                      WAIT = YES) ;
     1693    11728
     1694    11729        /* Code */
     1695    11730
     1696    11731    2      CALL M$READ (READ_OBJECT) ALTRET (READ_ERROR) ;
     1697    11732    2      RETURN ;
     1698    11733
     1699    11734    2   READ_ERROR:
     1700    11735    2      IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOKEY
     1701    11736    2      THEN /* Deck is not saved in the deckfile. */ ;
     1702    11737    2      ELSE CALL DFU_ERR_MSG (%E$DCFK_READ_ERROR, %TRUE) ;
     1703    11738    2      ALTRETURN ;
     1704    11739
     1705    11740    2   END DFU_CHECK_FOR_KEY ;
     1706    11741        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:92   
     1707    11742        /*I*  NAME:        DFU_DELETE_CATALOG_ENTRY
     1708    11743              AUTHOR:      Scott S. Sheppard
     1709    11744              PURPOSE:     Deletes Trailing Entry of Catalog
     1710    11745              INTERFACE:   M$DELREC
     1711    11746                           DFU_ERR_MSG
     1712    11747              INPUT:       CATALOG_DATA
     1713    11748              OUTPUT:      CATALOG_ENTRY_KEY
     1714    11749              DESCRIPTION: Suppose a catalog has N entries numbered from
     1715    11750                           1 to N. To delete the Mth entry, entries  M+1
     1716    11751                           through N are written over entries  M through
     1717    11752                           N-1.    This leaves the Nth entry as an extra
     1718    11753                           since the catalog now has 1 less entry.  This
     1719    11754                           procedure deletes the last entry of a catalog
     1720    11755                           so that the number of entries and the catalog
     1721    11756                           entry count match.
     1722    11757        */
     1723    11758        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:93   
     1724    11759    1   DFU_DELETE_CATALOG_ENTRY: PROC ALTRET ;
     1725    11760
     1726    11761           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
     1727    11775           %CATALOG_DATA (STCLASS = SYMREF) ;
     1728    11789           %FPT_DELREC (FPTN = DEL_ENTRY,
     1729    11790                        DCB  = M$DECKFILE,
     1730    11791                        KEY  = CATALOG_ENTRY_KEY) ;
     1731    11810
     1732    11811        /* Code */
     1733    11812
     1734    11813    2      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;
     1735    11814    2      CATALOG_ENTRY_KEY.ENTRY# = CATALOG_DATA.ENTRY_COUNT ;
     1736    11815    2      CALL M$DELREC (DEL_ENTRY) ALTRET (ERROR) ;
     1737    11816    2      RETURN ;
     1738    11817
     1739    11818    2   ERROR:
     1740    11819    2      CALL DFU_ERR_MSG (%E$DDCE_BAD_DEL, %TRUE) ;
     1741    11820    2      ALTRETURN ;
     1742    11821
     1743    11822    2   END DFU_DELETE_CATALOG_ENTRY ;
     1744    11823        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:94   
     1745    11824        /*I*  NAME:        DFU_DELETE_DECK
     1746    11825              AUTHOR:      Scott S. Sheppard
     1747    11826              PURPOSE:     Deletes Object Deck
     1748    11827              INTERFACE:   M$DELREC
     1749    11828                           DFU_ERR_MSG
     1750    11829              INPUT:       OBJECT_KEY
     1751    11830                           BINARY_KEY
     1752    11831                           OBJECT_REFLIST_KEY
     1753    11832              OUTPUT:      None.
     1754    11833              DESCRIPTION: This procedure  deletes the following  records
     1755    11834                           associated  with  an  object  deck   from  the
     1756    11835                           deckfile:
     1757    11836                              1. The $OBJECT Card    (object key)
     1758    11837                              2. The Binary Record   (deck key)
     1759    11838                              3. Any Patch Cards
     1760    11839                              4. The Object Reflist  (object reflist key)
     1761    11840                           Note:  Any  records deleted  from the deckfile
     1762    11841                                  occupy file space until a compaction is
     1763    11842                                  done or the file is copied over itself.
     1764    11843        */
     1765    11844        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:95   
     1766    11845    1   DFU_DELETE_DECK: PROC ALTRET ;
     1767    11846
     1768    11847           %OBJECT_KEY (STCLASS = SYMREF) ;
     1769    11860           %BINARY_KEY (STCLASS = "STATIC SYMDEF") ;
     1770    11874           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
     1771    11888           %FPT_DELREC (FPTN = DEL_$OBJECT_CARD,
     1772    11889                        DCB  = M$DECKFILE,
     1773    11890                        KEY  = OBJECT_KEY) ;
     1774    11909           %FPT_DELREC (FPTN = DEL_BINARY_THRU_REFLIST,
     1775    11910                        DCB  = M$DECKFILE,
     1776    11911                        KEY  = BINARY_KEY,
     1777    11912                        LKEY = OBJECT_REFLIST_KEY) ;
     1778    11931
     1779    11932        /* Code */
     1780    11933
     1781    11934    2      CALL M$DELREC (DEL_$OBJECT_CARD) ALTRET (ERROR) ;
     1782    11935    2      CALL M$DELREC (DEL_BINARY_THRU_REFLIST) ALTRET (ERROR) ;
     1783    11936    2      RETURN ;
     1784    11937
     1785    11938    2   ERROR:
     1786    11939    2      CALL DFU_ERR_MSG (%E$DDD_BAD_DEL, %TRUE) ;
     1787    11940    2      ALTRETURN ;
     1788    11941
     1789    11942    2   END DFU_DELETE_DECK ;
     1790    11943        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:96   
     1791    11944        /*I*  NAME:        DFU_DELETE_MASTER_ENTRY
     1792    11945              AUTHOR:      Scott S. Sheppard
     1793    11946              PURPOSE:     Deletes Trailing Entry of Master
     1794    11947              INTERFACE:   M$DELREC
     1795    11948                           DFU_ERR_MSG
     1796    11949              INPUT:       MASTER_DATA
     1797    11950              OUTPUT:      MASTER_ENTRY_KEY
     1798    11951              DESCRIPTION: Suppose the master has N entries numbered from
     1799    11952                           1 to N.  To delete the Mth entry, entries  M+1
     1800    11953                           through N are  written over entries  M through
     1801    11954                           N-1.    This leaves the  Nth entry as an extra
     1802    11955                           since the master now has 1 less catalog.  This
     1803    11956                           procedure deletes the last entry of the master
     1804    11957                           catalog.
     1805    11958        */
     1806    11959        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:97   
     1807    11960    1   DFU_DELETE_MASTER_ENTRY: PROC ALTRET ;
     1808    11961
     1809    11962           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
     1810    11976           %MASTER_DATA (STCLASS = SYMREF) ;
     1811    11990           %FPT_DELREC (FPTN = DEL_ENTRY,
     1812    11991                        DCB  = M$DECKFILE,
     1813    11992                        KEY  = MASTER_ENTRY_KEY) ;
     1814    12011
     1815    12012        /* Code */
     1816    12013
     1817    12014    2      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;
     1818    12015    2      MASTER_ENTRY_KEY.ENTRY# = MASTER_DATA.ENTRY_COUNT ;
     1819    12016    2      CALL M$DELREC (DEL_ENTRY) ALTRET (ERROR) ;
     1820    12017    2      RETURN ;
     1821    12018
     1822    12019    2   ERROR:
     1823    12020    2      CALL DFU_ERR_MSG (%E$DDME_BAD_DEL, %TRUE) ;
     1824    12021    2      ALTRETURN ;
     1825    12022
     1826    12023    2   END DFU_DELETE_MASTER_ENTRY ;
     1827    12024        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:98   
     1828    12025        /*I*  NAME:        DFU_DELETE_CATALOG
     1829    12026              AUTHOR:      Scott S. Sheppard
     1830    12027              PURPOSE:     Deletes Catalog References
     1831    12028              INTERFACE:   M$DELREC
     1832    12029                           DFU_ERR_MSG
     1833    12030              INPUT:       CATALOG_KEY
     1834    12031                           SUBCATALOG_KEY
     1835    12032              OUTPUT:      Catalog Control and Subcatalog Deleted.
     1836    12033              DESCRIPTION: When the  last deck from a catalog is deleted,
     1837    12034                           the  catalog  is  also deleted. This procedure
     1838    12035                           deletes the catalog entry keyed by its catalog
     1839    12036                           key and its corresponding subcatalog.
     1840    12037        */
     1841    12038
     1842    12039    1   DFU_DELETE_CATALOG: PROC ALTRET ;
     1843    12040
     1844    12041           %CATALOG_KEY (STCLASS = SYMREF) ;
     1845    12055           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
     1846    12069           %FPT_DELREC (FPTN = DEL_CATALOG,
     1847    12070                        DCB  = M$DECKFILE,
     1848    12071                        KEY  = CATALOG_KEY) ;
     1849    12090           %FPT_DELREC (FPTN = DEL_SUBCATALOG,
     1850    12091                        DCB  = M$DECKFILE,
     1851    12092                        KEY  = SUBCATALOG_KEY) ;
     1852    12111
     1853    12112        /* Code */
     1854    12113
     1855    12114    2      CALL M$DELREC (DEL_CATALOG) ALTRET (ERROR) ;
     1856    12115    2      CALL M$DELREC (DEL_SUBCATALOG) ALTRET (ERROR) ;
     1857    12116    2      RETURN ;
     1858    12117
     1859    12118    2   ERROR:
     1860    12119    2      CALL DFU_ERR_MSG (%E$DDC_BAD_DEL, %TRUE) ;
     1861    12120    2      ALTRETURN ;
     1862    12121
     1863    12122    2   END DFU_DELETE_CATALOG ;
     1864    12123        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:99   
     1865    12124        /*I*  NAME:        DFU_WRITE_MASTER_CONTROL
     1866    12125              AUTHOR:      Scott S. Sheppard
     1867    12126              PURPOSE:     Writes Master Control to the deckfile
     1868    12127              INTERFACE:   M$WRITE
     1869    12128                           DFU_ERR_MSG
     1870    12129              INPUT:       DCB#      - deckfile or temporary file
     1871    12130                           MASTER_KEY
     1872    12131              OUTPUT:      MASTER_DATA written to deckfile.
     1873    12132              DESCRIPTION: The procedure writes the master control  to  the
     1874    12133                           deckfile.  The master control record,  keyed  by
     1875    12134                           the string 'MASTER_CATALOG', contains  the  deck
     1876    12135                           number of the master control deck, the number of
     1877    12136                           entries (catalogs), and checksum information.
     1878    12137        */
     1879    12138        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:100  
     1880    12139    1   DFU_WRITE_MASTER_CONTROL: PROC (DCB#) ALTRET ;
     1881    12140
     1882    12141    2      DCL DCB#  UBIN WORD ALIGNED ;
     1883    12142           %MASTER_KEY (STCLASS = CONSTANT) ;
     1884    12155           %MASTER_DATA (STCLASS = SYMREF) ;
     1885    12169           %FPT_WRITE (FPTN = WRITE_MASTER_CONTROL,
     1886    12170                       BUF  = MASTER_DATA,
     1887    12171                       BIN  = YES,
     1888    12172                       KEY  = MASTER_KEY,
     1889    12173                       WAIT = YES) ;
     1890    12204
     1891    12205        /* Code */
     1892    12206
     1893    12207    2      WRITE_MASTER_CONTROL.V.DCB# = DCB# ;
     1894    12208    2      CALL M$WRITE (WRITE_MASTER_CONTROL) ALTRET (BAD_MASTER_CONTROL) ;
     1895    12209    2      RETURN ;
     1896    12210
     1897    12211    2   BAD_MASTER_CONTROL:
     1898    12212    2      CALL DFU_ERR_MSG (%E$DWMC_BAD_MAST_CNTRL, %TRUE) ;
     1899    12213    2      ALTRETURN ;
     1900    12214
     1901    12215    2   END DFU_WRITE_MASTER_CONTROL ;
     1902    12216        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:101  
     1903    12217        /*I*  NAME:        DFU_WRITE_MASTER_ENTRY
     1904    12218              AUTHOR:      Scott S. Sheppard
     1905    12219              PURPOSE:     Writes Master Entry to the deckfile
     1906    12220              INTERFACE:   M$WRITE
     1907    12221                           DFU_ERR_MSG
     1908    12222              INPUT:       DCB#      - deckfile or temporary file
     1909    12223                           MASTER_ENTRY_KEY
     1910    12224              OUTPUT:      CATALOG_KEY written to deckfile.
     1911    12225              DESCRIPTION: The procedure writes a master entry  to  the
     1912    12226                           deckfile.   A master entry key consists of a
     1913    12227                           size field (set to 4 for 4 bytes),  the deck
     1914    12228                           number of the master catalog, and the  entry
     1915    12229                           number of the catalog to be read. The record
     1916    12230                           returned is a catalog key which is 24 bytes.
     1917    12231        */
     1918    12232        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:102  
     1919    12233    1   DFU_WRITE_MASTER_ENTRY: PROC (DCB#) ALTRET ;
     1920    12234
     1921    12235    2      DCL DCB#  UBIN WORD ALIGNED ;
     1922    12236           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
     1923    12250           %CATALOG_KEY (STCLASS = SYMREF) ;
     1924    12264           %FPT_WRITE (FPTN = WRITE_MASTER_ENTRY,
     1925    12265                       BUF  = CATALOG_KEY,
     1926    12266                       BIN  = YES,
     1927    12267                       KEY  = MASTER_ENTRY_KEY,
     1928    12268                       WAIT = YES) ;
     1929    12299
     1930    12300        /* Code */
     1931    12301
     1932    12302    2      WRITE_MASTER_ENTRY.V.DCB# = DCB# ;
     1933    12303    2      CALL M$WRITE (WRITE_MASTER_ENTRY) ALTRET (BAD_MASTER_ENTRY) ;
     1934    12304    2      RETURN ;
     1935    12305
     1936    12306    2   BAD_MASTER_ENTRY:
     1937    12307    2      CALL DFU_ERR_MSG (%E$DWME_BAD_MAST_ENTRY, %TRUE) ;
     1938    12308    2      ALTRETURN ;
     1939    12309
     1940    12310    2   END DFU_WRITE_MASTER_ENTRY ;
     1941    12311        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:103  
     1942    12312        /*I*  NAME:        DFU_WRITE_CATALOG_CONTROL
     1943    12313              AUTHOR:      Scott S. Sheppard
     1944    12314              PURPOSE:     Writes Catalog Control to the deckfile
     1945    12315              INTERFACE:   M$WRITE
     1946    12316                           DFU_ERR_MSG
     1947    12317              INPUT:       DCB#      - deckfile or temporary file
     1948    12318                           CATALOG_KEY
     1949    12319              OUTPUT:      CATALOG_DATA written to deckfile.
     1950    12320              DESCRIPTION: The procedure writes the catalog control  to  the
     1951    12321                           deckfile. The key used consists of the size field
     1952    12322                           (set to 23), the 21 byte catalog descritor, and a
     1953    12323                           number   which  distinguishes  identical  catalog
     1954    12324                           descritors. The record returned contains the deck
     1955    12325                           number for the catalog, the number of entries  in
     1956    12326                           the catalog, and the checksum for the catalog.
     1957    12327        */
     1958    12328        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:104  
     1959    12329    1   DFU_WRITE_CATALOG_CONTROL: PROC (DCB#) ALTRET ;
     1960    12330
     1961    12331    2      DCL DCB#  UBIN WORD ALIGNED ;
     1962    12332           %CATALOG_KEY (STCLASS = SYMREF) ;
     1963    12346           %CATALOG_DATA (STCLASS = SYMREF) ;
     1964    12360           %FPT_WRITE (FPTN = WRITE_CATALOG_CONTROL,
     1965    12361                       BUF  = CATALOG_DATA,
     1966    12362                       BIN  = YES,
     1967    12363                       KEY  = CATALOG_KEY,
     1968    12364                       WAIT = YES) ;
     1969    12395
     1970    12396        /* Code */
     1971    12397
     1972    12398    2      WRITE_CATALOG_CONTROL.V.DCB# = DCB# ;
     1973    12399    2      CALL M$WRITE (WRITE_CATALOG_CONTROL) ALTRET (BAD_CATALOG_CONTROL) ;
     1974    12400    2      RETURN ;
     1975    12401
     1976    12402    2   BAD_CATALOG_CONTROL:
     1977    12403    2      CALL DFU_ERR_MSG (%E$DWCC_BAD_CAT_CNTRL, %TRUE) ;
     1978    12404    2      ALTRETURN ;
     1979    12405
     1980    12406    2   END DFU_WRITE_CATALOG_CONTROL ;
     1981    12407        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:105  
     1982    12408        /*I*  NAME:        DFU_WRITE_SUBCATALOG
     1983    12409              AUTHOR:      Scott S. Sheppard
     1984    12410              PURPOSE:     Writes Subcatalog to the deckfile
     1985    12411              INTERFACE:   M$WRITE
     1986    12412                           DFU_ERR_MSG
     1987    12413              INPUT:       DCB#      - deckfile or temporary file
     1988    12414                           SUBCATALOG_KEY
     1989    12415              OUTPUT:      SUBCATALOG_DATA written to deckfile.
     1990    12416              DESCRIPTION: This  procedure writes the tape serial number and
     1991    12417                           tape file number for a catalog  to  the deckfile.
     1992    12418                           The key used contains the  size (set to 4),   the
     1993    12419                           deck number of the catalog, and a zero   (for the
     1994    12420                           zeroeth entry in the catalog).The record returned
     1995    12421                           contains a 40 character file id  and  a  3  digit
     1996    12422                           file number.
     1997    12423                           The serial number and file number are  IFAD tape
     1998    12424                           serial number and file number used to originally
     1999    12425                           build the catalog.
     2000    12426        */
     2001    12427        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:106  
     2002    12428    1   DFU_WRITE_SUBCATALOG: PROC (DCB#) ALTRET ;
     2003    12429
     2004    12430    2      DCL DCB#  UBIN WORD ALIGNED ;
     2005    12431           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
     2006    12445           %SUBCATALOG_DATA (STCLASS = SYMREF) ;
     2007    12458           %FPT_WRITE (FPTN = WRITE_SUBCATALOG,
     2008    12459                       BUF  = SUBCATALOG_DATA,
     2009    12460                       BIN  = YES,
     2010    12461                       KEY  = SUBCATALOG_KEY,
     2011    12462                       WAIT = YES) ;
     2012    12493
     2013    12494        /* Code */
     2014    12495
     2015    12496    2      WRITE_SUBCATALOG.V.DCB# = DCB# ;
     2016    12497    2      CALL M$WRITE (WRITE_SUBCATALOG) ALTRET (BAD_SUBCATALOG) ;
     2017    12498    2      RETURN ;
     2018    12499
     2019    12500    2   BAD_SUBCATALOG:
     2020    12501    2      CALL DFU_ERR_MSG (%E$DWS_BAD_SUBCAT, %TRUE) ;
     2021    12502    2      ALTRETURN ;
     2022    12503
     2023    12504    2   END DFU_WRITE_SUBCATALOG ;
     2024    12505        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:107  
     2025    12506        /*I*  NAME:        DFU_WRITE_CATALOG_ENTRY
     2026    12507              AUTHOR:      Scott S. Sheppard
     2027    12508              PURPOSE:     Writes Catalog Entry to the deckfile
     2028    12509              INTERFACE:   M$WRITE
     2029    12510                           DFU_ERR_MSG
     2030    12511              INPUT:       DCB#      - deckfile or temporary file
     2031    12512                           CATALOG_ENTRY_KEY
     2032    12513              OUTPUT:      OBJECT_KEY written to deckfile.
     2033    12514              DESCRIPTION: The procedure writes a catalog entry  to  the
     2034    12515                           deckfile.   A catalog entry key consists of a
     2035    12516                           size field (set to 4 for 4 bytes),   the deck
     2036    12517                           number of the desired catalog, and the  entry
     2037    12518                           number of the catalog to be read.  The record
     2038    12519                           returned is an object key which is 24 bytes.
     2039    12520        */
     2040    12521        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:108  
     2041    12522    1   DFU_WRITE_CATALOG_ENTRY: PROC (DCB#) ALTRET ;
     2042    12523
     2043    12524    2      DCL DCB#  UBIN WORD ALIGNED ;
     2044    12525           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
     2045    12539           %OBJECT_KEY (STCLASS = SYMREF) ;
     2046    12552           %FPT_WRITE (FPTN = WRITE_CATALOG_ENTRY,
     2047    12553                       BUF  = OBJECT_KEY,
     2048    12554                       BIN  = YES,
     2049    12555                       KEY  = CATALOG_ENTRY_KEY,
     2050    12556                       WAIT = YES) ;
     2051    12587
     2052    12588        /* Code */
     2053    12589
     2054    12590    2      WRITE_CATALOG_ENTRY.V.DCB# = DCB# ;
     2055    12591    2      CALL M$WRITE (WRITE_CATALOG_ENTRY) ALTRET (BAD_CATALOG_ENTRY) ;
     2056    12592    2      RETURN ;
     2057    12593
     2058    12594    2   BAD_CATALOG_ENTRY:
     2059    12595    2      CALL DFU_ERR_MSG (%E$DWCE_BAD_CAT_ENTRY, %TRUE) ;
     2060    12596    2      ALTRETURN ;
     2061    12597
     2062    12598    2   END DFU_WRITE_CATALOG_ENTRY ;
     2063    12599        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:109  
     2064    12600        /*I*  NAME:        DFU_WRITE_OBJECT
     2065    12601              AUTHOR:      Scott S. Sheppard
     2066    12602              PURPOSE:     Writes Object Card to the deckfile
     2067    12603              INTERFACE:   M$WRITE
     2068    12604                           DFU_ERR_MSG
     2069    12605              INPUT:       DCB#      - deckfile or temporary file
     2070    12606                           OBJECT_KEY
     2071    12607              OUTPUT:      $OBJECT card written to deckfile.
     2072    12608              DESCRIPTION: The procedure writes an object card  to  the
     2073    12609                           deckfile. The key used contains a size field
     2074    12610                           (set to 23) and a 23 character descriptor of
     2075    12611                           the  object module (test page)   to be read.
     2076    12612                           The $OBJECT card returned contains the  deck
     2077    12613                           of the object code for the test page as well
     2078    12614                           other descriptive information.
     2079    12615        */
     2080    12616        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:110  
     2081    12617    1   DFU_WRITE_OBJECT: PROC (DCB#) ALTRET ;
     2082    12618
     2083    12619    2      DCL DCB#  UBIN WORD ALIGNED ;
     2084    12620           %OBJECT_KEY (STCLASS = SYMREF) ;
     2085    12633           %OBJECT (STCLASS = SYMREF) ;
     2086    12696           %FPT_WRITE (FPTN = WRITE_OBJECT,
     2087    12697                       BUF  = OBJECT,
     2088    12698                       BIN  = YES,
     2089    12699                       KEY  = OBJECT_KEY,
     2090    12700                       WAIT = YES) ;
     2091    12731
     2092    12732        /* Code */
     2093    12733
     2094    12734    2      WRITE_OBJECT.V.DCB# = DCB# ;
     2095    12735    2      CALL M$WRITE (WRITE_OBJECT) ALTRET (BAD_OBJECT) ;
     2096    12736    2      RETURN ;
     2097    12737
     2098    12738    2   BAD_OBJECT:
     2099    12739    2      CALL DFU_ERR_MSG (%E$DWO_BAD_OBJECT, %TRUE) ;
     2100    12740    2      ALTRETURN ;
     2101    12741
     2102    12742    2   END DFU_WRITE_OBJECT ;
     2103    12743        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:111  
     2104    12744        /*I*  NAME:        DFU_WRITE_BINARY
     2105    12745              AUTHOR:      Scott S. Sheppard
     2106    12746              PURPOSE:     Writes Binary Deck to the deckfile
     2107    12747             INTERFACE:    M$WRITE Monitor Service
     2108    12748                           DFU_ERR_MSG
     2109    12749             PARAMETERS:   DCB# - where does this go
     2110    12750                           BUF_V - vector to the target area
     2111    12751                           LGTH - number of bytes
     2112    12752             DATA:         BINARY_KEY - input
     2113    12753              DESCRIPTION: The procedure writes a binary record to  the
     2114    12754                           deckfile. The key used contains a size field
     2115    12755                           a  deck  number, and  an  entry  number. The
     2116    12756                           binary record written to the deckfile is the
     2117    12757                           actual test page which will  be  executed by
     2118    12758                           TOLTS.
     2119    12759        */
     2120    12760        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:112  
     2121    12761    1   DFU_WRITE_BINARY: PROC (DCB#, BUF_V, LGTH) ALTRET ;
     2122    12762
     2123    12763    2      DCL DCB#  UBIN WORD ALIGNED ;
     2124    12764    2      DCL BUF_V BIT (72) ALIGNED ;
     2125    12765    2      DCL LGTH  UBIN WORD ALIGNED ;
     2126    12766           %BINARY_KEY (STCLASS = SYMREF) ;
     2127    12780           %FPT_WRITE (FPTN = WRITE_BINARY_DECK,
     2128    12781                       BIN  = YES,
     2129    12782                       KEY  = BINARY_KEY,
     2130    12783                       WAIT = YES) ;
     2131    12814
     2132    12815        /* Code */
     2133    12816
     2134    12817    2      WRITE_BINARY_DECK.V.DCB# = DCB# ;
     2135    12818    2      WRITE_BINARY_DECK.BUF_ = BUF_V ;
     2136    12819    2      WRITE_BINARY_DECK.BUF_.BOUND = LGTH - 1 ;
     2137    12820    2      CALL M$WRITE (WRITE_BINARY_DECK) ALTRET (BAD_BINARY) ;
     2138    12821    2      RETURN ;
     2139    12822
     2140    12823    2   BAD_BINARY:
     2141    12824    2      CALL DFU_ERR_MSG (%E$DWB_BAD_BINARY, %TRUE) ;
     2142    12825    2      ALTRETURN ;
     2143    12826
     2144    12827    2   END DFU_WRITE_BINARY ;
     2145    12828        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:113  
     2146    12829        /*I*  NAME:        DFU_WRITE_BCD_CARDS
     2147    12830              AUTHOR:      Scott S. Sheppard
     2148    12831              PURPOSE:     Writes BCD Cards to the deckfile
     2149    12832              INTERFACE:   M$WRITE
     2150    12833                           DFU_ERR_MSG
     2151    12834              INPUT:       DCB#      - deckfile or temporary file
     2152    12835                           BCD_KEY
     2153    12836              OUTPUT:      BCD_CARDS (patches and $DKEND) written to deckfile
     2154    12837              DESCRIPTION: The procedure writes all patch cards and the
     2155    12838                           $DKEND card for a desired test page. The key
     2156    12839                           used contains a size field (set= 4) the deck
     2157    12840                           number of the test page, and the entry numb.
     2158    12841                           The entry number ranges from 0 to n,   where
     2159    12842                           the nTH entry is the $DKEND card.
     2160    12843        */
     2161    12844
     2162    12845    1   DFU_WRITE_BCD_CARDS: PROC (DCB#) ALTRET ;
     2163    12846
     2164    12847    2      DCL DCB#                       UBIN WORD ALIGNED ;
     2165    12848    2      DCL CUR#                       UBIN WORD SYMREF ALIGNED ;
     2166    12849    2      DCL BCD#                       UBIN WORD SYMREF ALIGNED ;
     2167    12850           %BCD_KEY (STCLASS = SYMREF) ;
     2168    12864           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
     2169    12876           %FPT_WRITE (FPTN = WRITE_BCD_CARD,
     2170    12877                       KEY  = BCD_KEY,
     2171    12878                       WAIT = YES) ;
     2172    12909           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:114  
     2173    12910        /* Code */
     2174    12911
     2175    12912    2      WRITE_BCD_CARD.V.DCB# = DCB# ;
     2176    12913    3      DO CUR# = 1 TO BCD# ;
     2177    12914    3         BCD_KEY.CARD# = CUR# ;
     2178    12915    3         WRITE_BCD_CARD.BUF_ = VECTOR (BCD_B(CUR#-1)) ;
     2179    12916    3         CALL M$WRITE (WRITE_BCD_CARD) ALTRET (BAD_DECK) ;
     2180    12917    3      END /* DO */ ;
     2181    12918    2      IF SUBSTR (BCD_B(BCD#-1), 7, 5) = 'DKEND'
     2182    12919    2      THEN RETURN ;
     2183    12920    3      ELSE DO ;
     2184    12921    3              CALL DFU_ERR_MSG (%E$DWBC_BAD_DECK, %FALSE) ;
     2185    12922    3              ALTRETURN ;
     2186    12923    3           END /* ELSE */ ;
     2187    12924
     2188    12925    2   BAD_DECK:
     2189    12926    2      CALL DFU_ERR_MSG (%E$DWBC_BAD_BCD_CARDS, %TRUE) ;
     2190    12927    2      ALTRETURN ;
     2191    12928
     2192    12929    2   END DFU_WRITE_BCD_CARDS ;
     2193    12930        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:115  
     2194    12931        /*I*  NAME:        DFU_WRITE_OBJECT_REFLIST
     2195    12932              AUTHOR:      Scott S. Sheppard
     2196    12933              PURPOSE:     Writes Object Reference List to the deckfile
     2197    12934              INTERFACE:   M$WRITE
     2198    12935                           DFU_ERR_MSG
     2199    12936              INPUT:       DCB#      - deckfile or temporary file
     2200    12937                           OBJECT_REFLIST_KEY - Symref for object ref. list
     2201    12938              OUTPUT:      OBJECT_REFLIST_DATA- Symref for object ref. list
     2202    12939              DESCRIPTION: This  procedure writes the object reference list
     2203    12940                           for an object deck from the deckfile.
     2204    12941                           The key is based on the deck number and is always
     2205    12942                           the 201st entry.
     2206    12943        */
     2207    12944        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:116  
     2208    12945    1   DFU_WRITE_OBJECT_REFLIST: PROC (DCB#) ALTRET ;
     2209    12946
     2210    12947    2      DCL DCB#  UBIN WORD ALIGNED ;
     2211    12948           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
     2212    12962           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
     2213    12977           %FPT_WRITE (FPTN = WRITE_OBJECT_REFLIST,
     2214    12978                       BIN  = YES,
     2215    12979                       BUF  = OBJECT_REFLIST_DATA,
     2216    12980                       KEY  = OBJECT_REFLIST_KEY,
     2217    12981                       WAIT = YES) ;
     2218    13012
     2219    13013        /* Code */
     2220    13014
     2221    13015    2      WRITE_OBJECT_REFLIST.V.DCB# = DCB# ;
     2222    13016    2      WRITE_OBJECT_REFLIST.BUF_.BOUND = (OBJECT_REFLIST_DATA.NUM_REFS * 4) + 3 ;
     2223    13017    2      CALL M$WRITE (WRITE_OBJECT_REFLIST) ALTRET (NO_OBJECT_REFLIST) ;
     2224    13018    2      RETURN ;
     2225    13019
     2226    13020    2   NO_OBJECT_REFLIST:
     2227    13021    2      CALL DFU_ERR_MSG (%E$DWOR_BAD_REFLST, %TRUE) ;
     2228    13022    2      ALTRETURN ;
     2229    13023
     2230    13024    2   END DFU_WRITE_OBJECT_REFLIST ;
     2231    13025        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:117  
     2232    13026        /*I*  NAME:        DFU_WRITE_LAST_DECK#
     2233    13027              AUTHOR:      Scott S. Sheppard
     2234    13028              PURPOSE:     Writes Last Deck Number to the deckfile
     2235    13029              INTERFACE:   M$WRITE
     2236    13030                           DFU_ERR_MSG
     2237    13031              INPUT:       DCB#      - deckfile or temporary file
     2238    13032                           LAST_DECK_KEY - local constant 'LAST_DECK'
     2239    13033              OUTPUT:      LAST          - Symref of last deck number
     2240    13034              DESCRIPTION: This procedure writes the last deck numb. to the
     2241    13035                           deckfile. The last deck number record, keyed  by
     2242    13036                           the string 'LAST_DECK',     contains   the  deck
     2243    13037                           largest deck number in the deckfile.
     2244    13038        */
     2245    13039
     2246    13040    1   DFU_WRITE_LAST_DECK#: PROC (DCB#) ALTRET ;
     2247    13041
     2248    13042    2      DCL DCB#  UBIN WORD ALIGNED ;
     2249    13043           %LAST_DECK_KEY (STCLASS = CONSTANT) ;
     2250    13056           %LAST (STCLASS = SYMREF) ;
     2251    13069           %FPT_WRITE (FPTN = WRITE_LAST_DECK#,
     2252    13070                       BUF  = LAST,
     2253    13071                       BIN  = YES,
     2254    13072                       KEY  = LAST_DECK_KEY,
     2255    13073                       WAIT = YES) ;
     2256    13104
     2257    13105        /* Code */
     2258    13106
     2259    13107    2      WRITE_LAST_DECK#.V.DCB# = DCB# ;
     2260    13108    2      CALL M$WRITE (WRITE_LAST_DECK#) ALTRET (BAD_LAST_DECK#) ;
     2261    13109    2      RETURN ;
     2262    13110
     2263    13111    2   BAD_LAST_DECK#:
     2264    13112    2      CALL DFU_ERR_MSG (%E$DWLD_BAD_LAST_DECK#, %TRUE) ;
     2265    13113    2      ALTRETURN ;
     2266    13114
     2267    13115    2   END DFU_WRITE_LAST_DECK# ;
     2268    13116        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:118  
     2269    13117        /*I*  NAME:        DFU_WRITE_LOG
     2270    13118              AUTHOR:      Scott S. Sheppard
     2271    13119              PURPOSE:     Writes Deckfile Status to the deckfile
     2272    13120              INTERFACE:   M$WRITE
     2273    13121                           DFU_ERR_MSG
     2274    13122              INPUT:       LOG_KEY - local constant
     2275    13123              OUTPUT:      Deckfile history log written to the deckfile
     2276    13124              DESCRIPTION: This procedure writes the deckfile history log
     2277    13125                           to the deckfile.
     2278    13126        */
     2279    13127
     2280    13128    1   DFU_WRITE_LOG: PROC ALTRET ;
     2281    13129
     2282    13130           %LOG_KEY (STCLASS = CONSTANT) ;
     2283    13143           %LOG_B (STCLASS = "BASED (DUP.LOG_V.PTR$)") ;
     2284    13169           %FPT_WRITE (FPTN = WRITE_DECKFILE_LOG,
     2285    13170                       DCB  = M$DECKFILE,
     2286    13171                       KEY  = LOG_KEY,
     2287    13172                       WAIT = YES) ;
     2288    13203
     2289    13204        /* Code */
     2290    13205
     2291    13206    2      WRITE_DECKFILE_LOG.BUF_ = DUP.LOG_V ;
     2292    13207    2      WRITE_DECKFILE_LOG.BUF_.BOUND = LOG_B.COUNT * %LOG_RCD_LGTH ;
     2293    13208    2      CALL M$WRITE (WRITE_DECKFILE_LOG) ALTRET (NO_LOG) ;
     2294    13209    2      RETURN ;
     2295    13210
     2296    13211    2   NO_LOG:
     2297    13212    2      CALL DFU_ERR_MSG (%E$DWD_NO_LOG, %TRUE) ;
     2298    13213    2      ALTRETURN ;
     2299    13214
     2300    13215    2   END DFU_WRITE_LOG ;
     2301    13216        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:119  
     2302    13217        /*I*  NAME:        DFU_WRITE_REVISION
     2303    13218              AUTHOR:      Scott S. Sheppard
     2304    13219              PURPOSE:     Writes IFAD Revision to the deckfile
     2305    13220              INTERFACE:   M$WRITE
     2306    13221                           DFU_ERR_MSG
     2307    13222              INPUT:       REVISION_KEY - local constant
     2308    13223                           REVISION_B
     2309    13224              DESCRIPTION: This procedure writes the IFAD revision buffer
     2310    13225                           to the deckfile.
     2311    13226        */
     2312    13227
     2313    13228    1   DFU_WRITE_REVISION: PROC ALTRET ;
     2314    13229
     2315    13230           %REVISION_KEY (STCLASS = CONSTANT) ;
     2316    13243           %REVISION_B (STCLASS = SYMREF) ;
     2317    13264           %FPT_WRITE  (FPTN = WRITE_DECKFILE_REVISION,
     2318    13265                        BUF  = REVISION_B,
     2319    13266                        DCB  = M$DECKFILE,
     2320    13267                        KEY  = REVISION_KEY,
     2321    13268                        WAIT = YES) ;
     2322    13299
     2323    13300        /* Code */
     2324    13301
     2325    13302    2      CALL M$WRITE (WRITE_DECKFILE_REVISION) ALTRET (NO_REVISION) ;
     2326    13303    2      RETURN ;
     2327    13304
     2328    13305    2   NO_REVISION:
     2329    13306    2      CALL DFU_ERR_MSG (%E$DWR_NO_REVISION, %TRUE) ;
     2330    13307    2      ALTRETURN ;
     2331    13308
     2332    13309    2   END DFU_WRITE_REVISION ;
     2333    13310        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:120  
     2334    13311        /*I*  NAME:        DFU_OPEN_TEMP
     2335    13312              AUTHOR:      Scott S. Sheppard
     2336    13313              PURPOSE:     Opens Temporary File
     2337    13314              INTERFACE:   M$OPEN Monitor Service
     2338    13315              INPUT:       TEMP_OPEN_TYPE   - update or read
     2339    13316              OUTPUT:      M$TEMP DCB opened
     2340    13317              DESCRIPTION: This procedure opens a temporary file used to store
     2341    13318                           records before they are written into the deckfile.
     2342    13319        */
     2343    13320
     2344    13321    1   DFU_OPEN_TEMP: PROC (TEMP_OPEN_TYPE) ALTRET ;
     2345    13322
     2346    13323    2      DCL TEMP_OPEN_TYPE             UBIN WORD ALIGNED ;
     2347    13324           %FPT_OPEN (FPTN  = TEMP_CREATE,
     2348    13325                      ACS   = DIRECT,
     2349    13326                      ASN   = FILE,
     2350    13327                      DCB   = M$TEMP,
     2351    13328                      DISP  = NAMED,
     2352    13329                      EXIST = NEWFILE,
     2353    13330                      FUN   = CREATE,
     2354    13331                      NAME  = TEMP_NAME,
     2355    13332                      ORG   = KEYED,
     2356    13333                      SHARE = NONE) ;
     2357    13442           %FPT_OPEN (FPTN  = TEMP_READ,
     2358    13443                      ACS   = DIRECT,
     2359    13444                      ASN   = FILE,
     2360    13445                      DCB   = M$TEMP,
     2361    13446                      DISP  = NAMED,
     2362    13447                      EXIST = OLDFILE,
     2363    13448                      FUN   = IN,
     2364    13449                      NAME  = TEMP_NAME,
     2365    13450                      ORG   = KEYED,
     2366    13451                      SHARE = NONE) ;
     2367    13560           %VLP_NAME (FPTN  = TEMP_NAME,
     2368    13561                      NAME  = '*DEER_TEMP',
     2369    13562                      LEN   = 10) ;
     2370    13589           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:121  
     2371    13590        /* Code */
     2372    13591
     2373    13592    3      DO CASE (TEMP_OPEN_TYPE) ;
     2374    13593    3         CASE (%CREATE_FILE) ;
     2375    13594    3            CALL M$OPEN (TEMP_CREATE) ALTRET (ERROR) ;
     2376    13595    3         CASE (%READ_FILE) ;
     2377    13596    3            CALL M$OPEN (TEMP_READ) ALTRET (ERROR) ;
     2378    13597    3         CASE (ELSE) ;
     2379    13598    3   ERROR:
     2380    13599    3            CALL DFU_ERR_MSG (%E$DOT_OPEN_ERROR, %TRUE) ;
     2381    13600    3            ALTRETURN ;
     2382    13601    3      END /* CASE */ ;
     2383    13602    2      RETURN ;
     2384    13603
     2385    13604    2   END DFU_OPEN_TEMP ;
     2386    13605        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:122  
     2387    13606        /*I*  NAME:        DFU_CLOSE_TEMP
     2388    13607              AUTHOR:      Scott S. Sheppard
     2389    13608              PURPOSE:     Closes Temporary File
     2390    13609              INTERFACE:   M$CLOSE
     2391    13610              INPUT:       TEMP_CLOSE_TYPE  - save or discard
     2392    13611              OUTPUT:      M$TEMP DCB closed
     2393    13612              DESCRIPTION: This procedure closes the DEER temporary file,
     2394    13613                           saving it or discarding it as dictated by  the
     2395    13614                           close type parameter.
     2396    13615        */
     2397    13616        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:123  
     2398    13617    1   DFU_CLOSE_TEMP: PROC (TEMP_CLOSE_TYPE) ALTRET ;
     2399    13618
     2400    13619    2      DCL TEMP_CLOSE_TYPE            UBIN WORD ALIGNED ;
     2401    13620           %F$DCB ;
     2402    13677           %FPT_CLOSE (FPTN = TEMP_SAVE,
     2403    13678                       DCB  = M$TEMP,
     2404    13679                       DISP = SAVE,
     2405    13680                       RELG = NO) ;
     2406    13722           %FPT_CLOSE (FPTN = TEMP_DISCARD,
     2407    13723                       DCB  = M$TEMP,
     2408    13724                       DISP = RELEASE,
     2409    13725                       RELG = YES) ;
     2410    13767
     2411    13768        /* Code */
     2412    13769
     2413    13770    2      IF DCBADDR (DCBNUM (M$TEMP)) -> F$DCB.FCD#
     2414    13771    3      THEN DO CASE (TEMP_CLOSE_TYPE) ;
     2415    13772    3              CASE (%SAVE_FILE) ;
     2416    13773    3                 CALL M$CLOSE (TEMP_SAVE) ALTRET (ERROR) ;
     2417    13774    3              CASE (%DISCARD_FILE) ;
     2418    13775    3                 CALL M$CLOSE (TEMP_DISCARD) ALTRET (ERROR) ;
     2419    13776    3              CASE (ELSE) ;
     2420    13777    3   ERROR:
     2421    13778    3                 CALL DFU_ERR_MSG (%E$DCT_CLOSE_ERROR, %TRUE) ;
     2422    13779    3                 ALTRETURN ;
     2423    13780    3           END /* THEN */ ;
     2424    13781    2      ELSE /* Do Nothing */ ;
     2425    13782    2      RETURN ;
     2426    13783
     2427    13784    2   END DFU_CLOSE_TEMP ;
     2428    13785        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:124  
     2429    13786        /*I*  NAME:        DFU_ERR_MSG
     2430    13787              AUTHOR:      Scott S. Sheppard
     2431    13788              PURPOSE:     Function Utility Error Message Reporter
     2432    13789              INTERFACE:   TOU$DU_USER_WRITE
     2433    13790                           TOU$DU_SYSTEM_ERRMSG
     2434    13791              INPUT:       ERROR_CODE - error message code
     2435    13792                           SYSTEM_ERR - system message flag
     2436    13793              OUTPUT:      DUP.MSG_CODE - set to appropriate message code
     2437    13794              DESCRIPTION: This procedure sets the message code and outputs
     2438    13795                           an error message.
     2439    13796        */
     2440    13797
     2441    13798    1   DFU_ERR_MSG: PROC (ERROR_CODE, SYSTEM_ERR) ;
     2442    13799
     2443    13800    2      DCL ERROR_CODE  UBIN WORD ALIGNED ;
     2444    13801    2      DCL SYSTEM_ERR  BIT (1) CALIGNED ;
     2445    13802
     2446    13803        /* Code */
     2447    13804
     2448    13805    2      DUP.MSG_CODE = ERROR_CODE ;
     2449    13806    2      CALL TOU$DU_USER_WRITE ;
     2450    13807    2      IF SYSTEM_ERR
     2451    13808    2      THEN CALL TOU$DU_SYSTEM_ERRMSG ;
     2452    13809    2      ELSE /* No system error message requested. */ ;
     2453    13810    2      RETURN ;
     2454    13811
     2455    13812    2   END DFU_ERR_MSG ;
     2456    13813    1   END TOU$DFU ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:125  
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOU$DFU.

   Procedure TOU$DFU requires 1430 words for executable code.
   Procedure TOU$DFU requires 96 words of local(AUTO) storage.

    No errors detected in file TOU$DFU.:E05TSI    .

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:126  

 Object Unit name= TOU$DFU                                    File name= TOU$DFU.:E05TOU
 UTS= JUL 30 '97 06:42:39.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$DECKFILE
    2   DCB   even  none     0      0  M$TEMP
    3  RoData even  UTS     32     40  TOU$DFU
    4   Data  even  none   694   1266  TOU$DFU
    5   Proc  even  none  1430   2626  TOU$DFU
    6  RoData even  none    88    130  TOU$DFU

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        0  TOU$DFU
     5      3          yes     yes      Std        0  TOU$DFU_DF_RD_MASTER_CONTROL
     5     14          yes     yes      Std        0  TOU$DFU_DF_RD_MASTER_ENTRY
     5     25          yes     yes      Std        0  TOU$DFU_DF_RD_CATALOG_CONTROL
     5     36          yes     yes      Std        0  TOU$DFU_DF_RD_SUBCATALOG
     5     47          yes     yes      Std        0  TOU$DFU_DF_RD_CATALOG_ENTRY
     5     60          yes     yes      Std        0  TOU$DFU_DF_RD_OBJECT
     5     71          yes     yes      Std        0  TOU$DFU_DF_RD_BINARY
     5    104          yes     yes      Std        0  TOU$DFU_DF_RD_FILE
     5    127          yes     yes      Std        0  TOU$DFU_DF_RD_BCD_CARDS
     5    140          yes     yes      Std        0  TOU$DFU_DF_RD_OBJECT_REFLIST
     5    151          yes     yes      Std        0  TOU$DFU_DF_RD_LAST_DECK#
     5    162          yes     yes      Std        0  TOU$DFU_DF_RD_LOG
     5    167          yes     yes      Std        0  TOU$DFU_DF_RD_REVISION
     5    174          yes     yes      Std        0  TOU$DFU_DF_CHECK_ALREADY_SAVED
     5    201          yes     yes      Std        0  TOU$DFU_DF_CHECK_FOR_KEY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:127  
     5    206          yes     yes      Std        0  TOU$DFU_DF_DL_CATALOG_ENTRY
     5    213          yes     yes      Std        0  TOU$DFU_DF_DL_DECK
     5    220          yes     yes      Std        0  TOU$DFU_DF_DL_MASTER_ENTRY
     5    225          yes     yes      Std        0  TOU$DFU_DF_DL_CATALOG
     5    232          yes     yes      Std        0  TOU$DFU_DF_WR_MASTER_CONTROL
     5    243          yes     yes      Std        0  TOU$DFU_DF_WR_MASTER_ENTRY
     5    254          yes     yes      Std        0  TOU$DFU_DF_WR_CATALOG_CONTROL
     5    265          yes     yes      Std        0  TOU$DFU_DF_WR_SUBCATALOG
     5    276          yes     yes      Std        0  TOU$DFU_DF_WR_CATALOG_ENTRY
     5    307          yes     yes      Std        0  TOU$DFU_DF_WR_OBJECT
     5    320          yes     yes      Std        0  TOU$DFU_DF_WR_BINARY
     5    340          yes     yes      Std        0  TOU$DFU_DF_WR_FILE
     5    371          yes     yes      Std        0  TOU$DFU_DF_WR_HDR
     5    416          yes     yes      Std        0  TOU$DFU_DF_WR_DIR
     5    444          yes     yes      Std        0  TOU$DFU_DF_WR_BCD_CARDS
     5    455          yes     yes      Std        0  TOU$DFU_DF_WR_OBJECT_REFLIST
     5    466          yes     yes      Std        0  TOU$DFU_DF_WR_LAST_DECK#
     5    477          yes     yes      Std        0  TOU$DFU_DF_WR_LOG
     5    504          yes     yes      Std        0  TOU$DFU_DF_WR_REVISION
     5    511          yes     yes      Std        0  TOU$DFU_OPEN_TEMP
     5    520          yes     yes      Std        0  TOU$DFU_CLOSE_TEMP
     5    527          yes     yes      Std        0  TOU$DFU_TF_RD_MASTER_CONTROL
     5    540          yes     yes      Std        0  TOU$DFU_TF_RD_MASTER_ENTRY
     5    551          yes     yes      Std        0  TOU$DFU_TF_RD_CATALOG_CONTROL
     5    562          yes     yes      Std        0  TOU$DFU_TF_RD_SUBCATALOG
     5    573          yes     yes      Std        0  TOU$DFU_TF_RD_CATALOG_ENTRY
     5    604          yes     yes      Std        0  TOU$DFU_TF_RD_OBJECT
     5    615          yes     yes      Std        0  TOU$DFU_TF_RD_BINARY
     5    630          yes     yes      Std        0  TOU$DFU_TF_RD_FILE
     5    653          yes     yes      Std        0  TOU$DFU_TF_RD_HDR
     5    676          yes     yes      Std        0  TOU$DFU_TF_RD_DIR
     5    721          yes     yes      Std        0  TOU$DFU_TF_RD_BCD_CARDS
     5    732          yes     yes      Std        0  TOU$DFU_TF_RD_OBJECT_REFLIST
     5    743          yes     yes      Std        0  TOU$DFU_TF_RD_LAST_DECK#
     5    754          yes     yes      Std        0  TOU$DFU_TF_WR_MASTER_CONTROL
     5    765          yes     yes      Std        0  TOU$DFU_TF_WR_MASTER_ENTRY
     5    776          yes     yes      Std        0  TOU$DFU_TF_WR_CATALOG_CONTROL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:128  
     5   1007          yes     yes      Std        0  TOU$DFU_TF_WR_SUBCATALOG
     5   1020          yes     yes      Std        0  TOU$DFU_TF_WR_CATALOG_ENTRY
     5   1031          yes     yes      Std        0  TOU$DFU_TF_WR_OBJECT
     5   1042          yes     yes      Std        0  TOU$DFU_TF_WR_BINARY
     5   1062          yes     yes      Std        0  TOU$DFU_TF_WR_FILE
     5   1113          yes     yes      Std        0  TOU$DFU_TF_WR_DIR
     5   1140          yes     yes      Std        0  TOU$DFU_TF_WR_HDR
     5   1171          yes     yes      Std        0  TOU$DFU_TF_WR_BCD_CARDS
     5   1202          yes     yes      Std        0  TOU$DFU_TF_WR_OBJECT_REFLIST
     5   1213          yes     yes      Std        0  TOU$DFU_TF_WR_LAST_DECK#

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    4      0  MASTER_DATA                        4     20  MASTER_ENTRY_KEY
    4     22  CATALOG_KEY                        4     46  CATALOG_DATA
    4     66  SUBCATALOG_KEY                     4     70  SUBCATALOG_DATA
    4    124  CATALOG_ENTRY_KEY                  4    126  OBJECT_KEY
    4    152  OBJECT                             4    236  BCD_KEY
    4    256  OBJECT_REFLIST_KEY                 4    260  OBJECT_REFLIST_DATA
    4    316  LAST                               4    354  REVISION_B
    4    476  BINARY_KEY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SYSTEM_ERRMSG
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:129  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                BIN#
     OBJECT                                DUP                                   M$DECKFILE
     M$TEMP                                CATALOG_KEY                           OBJECT_KEY
     BINARY_KEY                            CUR#                                  BCD#
     OBJECT_KEY                            OBJECT                                OBJECT_KEY
     OBJECT                                CATALOG_ENTRY_KEY                     CATALOG_DATA
     OBJECT_KEY                            OBJECT_REFLIST_KEY                    MASTER_ENTRY_KEY
     MASTER_DATA                           CATALOG_KEY                           SUBCATALOG_KEY
     MASTER_DATA                           MASTER_ENTRY_KEY                      CATALOG_KEY
     CATALOG_KEY                           CATALOG_DATA                          SUBCATALOG_KEY
     SUBCATALOG_DATA                       CATALOG_ENTRY_KEY                     OBJECT_KEY
     OBJECT_KEY                            OBJECT                                BINARY_KEY
     CUR#                                  BCD#                                  BCD_KEY
     OBJECT_REFLIST_KEY                    OBJECT_REFLIST_DATA                   LAST
     REVISION_B                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:130  


        1        1        /*M* TOU$DFU     DEckfile Editor Routine Function Utilities program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOU$DFU
       12       12              AUTHOR:      Scott S. Sheppard
       13       13              PURPOSE:     DEER Function Utilities
       14       14              DESCRIPTION: This module is an outer block which  contains
       15       15                           the entry points and procedure blocks of  the
       16       16                           function utilities for the   deckfile editor.
       17       17                           The routines of TOU$DFU  interface  with CP-6
       18       18                           Monitor Service routines and provide for:
       19       19                           ---  Reads/Writes for M$DECKFILE
       20       20                           ---  Checking $OBJECT cards from M$DECKFILE
       21       21                           ---  Deleting records from M$DECKFILE
       22       22                           ---  Open/Close   for M$TEMP
       23       23                           ---  Reads/Writes for M$TEMP
       24       24              REFERENCE:   CP-6 Release C0P0
       25       25              LAST UPDATE: 04/30/84
       26       26        */
       27       27        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:131  
       28       28        /*F*  NAME:        TOU$DFU
       29       29              DESCRIPTION: Procedure Nesting Hierarchy
       30       30
       31       31              TOU$DFU: procedure ALTRET
       32       32
       33       33              TOU$DFU_DF_RD_MASTER_CONTROL: entry ALTRET
       34       34              TOU$DFU_DF_RD_MASTER_ENTRY: entry ALTRET
       35       35              TOU$DFU_DF_RD_CATALOG_CONTROL: entry ALTRET
       36       36              TOU$DFU_DF_RD_SUBCATALOG: entry ALTRET
       37       37              TOU$DFU_DF_RD_CATALOG_ENTRY: entry ALTRET
       38       38              TOU$DFU_DF_RD_OBJECT: entry ALTRET
       39       39              TOU$DFU_DF_RD_BINARY: entry ALTRET
       40       40              TOU$DFU_DF_RD_FILE: entry ALTRET
       41       41              TOU$DFU_DF_RD_BCD_CARDS: entry ALTRET
       42       42              TOU$DFU_DF_RD_OBJECT_REFLIST: entry ALTRET
       43       43              TOU$DFU_DF_RD_LAST_DECK#: entry ALTRET
       44       44              TOU$DFU_DF_RD_LOG: entry ALTRET
       45       45              TOU$DFU_DF_RD_REVISION: entry ALTRET
       46       46
       47       47              TOU$DFU_DF_CHECK_ALREADY_SAVED: entry ALTRET
       48       48              TOU$DFU_DF_CHECK_FOR_KEY: entry ALTRET
       49       49              TOU$DFU_DF_DL_CATALOG_ENTRY: entry ALTRET
       50       50              TOU$DFU_DF_DL_DECK: entry ALTRET
       51       51              TOU$DFU_DF_DL_MASTER_ENTRY: entry ALTRET
       52       52              TOU$DFU_DF_DL_CATALOG: entry ALTRET
       53       53
       54       54              TOU$DFU_DF_WR_MASTER_CONTROL: entry ALTRET
       55       55              TOU$DFU_DF_WR_MASTER_ENTRY: entry ALTRET
       56       56              TOU$DFU_DF_WR_CATALOG_CONTROL: entry ALTRET
       57       57              TOU$DFU_DF_WR_SUBCATALOG: entry ALTRET
       58       58              TOU$DFU_DF_WR_CATALOG_ENTRY: entry ALTRET
       59       59              TOU$DFU_DF_WR_OBJECT: entry ALTRET
       60       60              TOU$DFU_DF_WR_BINARY: entry ALTRET
       61       61              TOU$DFU_DF_WR_FILE: entry ALTRET
       62       62              TOU$DFU_DF_WR_HDR: entry ALTRET
       63       63              TOU$DFU_DF_WR_DIR: entry ALTRET
       64       64              TOU$DFU_DF_WR_BCD_CARDS: entry ALTRET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:132  
       65       65              TOU$DFU_DF_WR_OBJECT_REFLIST: entry ALTRET
       66       66              TOU$DFU_DF_WR_LAST_DECK#: entry ALTRET
       67       67              TOU$DFU_DF_WR_LOG: entry ALTRET
       68       68              TOU$DFU_DF_WR_REVISION: entry ALTRET
       69       69
       70       70              TOU$DFU_OPEN_TEMP: entry ALTRET
       71       71              TOU$DFU_CLOSE_TEMP: entry ALTRET
       72       72
       73       73              TOU$DFU_TF_RD_MASTER_CONTROL: entry ALTRET
       74       74              TOU$DFU_TF_RD_MASTER_ENTRY: entry ALTRET
       75       75              TOU$DFU_TF_RD_CATALOG_CONTROL: entry ALTRET
       76       76              TOU$DFU_TF_RD_SUBCATALOG: entry ALTRET
       77       77              TOU$DFU_TF_RD_CATALOG_ENTRY: entry ALTRET
       78       78              TOU$DFU_TF_RD_OBJECT: entry ALTRET
       79       79              TOU$DFU_TF_RD_BINARY: entry ALTRET
       80       80              TOU$DFU_TF_RD_FILE: entry ALTRET
       81       81              TOU$DFU_TF_RD_HDR: entry ALTRET
       82       82              TOU$DFU_TF_RD_DIR: entry ALTRET
       83       83              TOU$DFU_TF_RD_BCD_CARDS: entry ALTRET
       84       84              TOU$DFU_TF_RD_OBJECT_REFLIST: entry ALTRET
       85       85              TOU$DFU_TF_RD_LAST_DECK#: entry ALTRET
       86       86
       87       87              TOU$DFU_TF_WR_MASTER_CONTROL: entry ALTRET
       88       88              TOU$DFU_TF_WR_MASTER_ENTRY: entry ALTRET
       89       89              TOU$DFU_TF_WR_CATALOG_CONTROL: entry ALTRET
       90       90              TOU$DFU_TF_WR_SUBCATALOG: entry ALTRET
       91       91              TOU$DFU_TF_WR_CATALOG_ENTRY: entry ALTRET
       92       92              TOU$DFU_TF_WR_OBJECT: entry ALTRET
       93       93              TOU$DFU_TF_WR_BINARY: entry ALTRET
       94       94              TOU$DFU_TF_WR_FILE: entry ALTRET
       95       95              TOU$DFU_TF_WR_HDR: entry ALTRET
       96       96              TOU$DFU_TF_WR_DIR: entry ALTRET
       97       97              TOU$DFU_TF_WR_BCD_CARDS: entry ALTRET
       98       98              TOU$DFU_TF_WR_OBJECT_REFLIST: entry ALTRET
       99       99              TOU$DFU_TF_WR_LAST_DECK#: entry ALTRET
      100      100
      101      101                 DFU_READ_MASTER_CONTROL: procedure (DCB#) ALTRET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:133  
      102      102                 DFU_READ_MASTER_ENTRY: procedure (DCB#) ALTRET
      103      103                 DFU_READ_CATALOG_CONTROL: procedure (DCB#) ALTRET
      104      104                 DFU_READ_SUBCATALOG: procedure (DCB#) ALTRET
      105      105                 DFU_READ_CATALOG_ENTRY: procedure (DCB#) ALTRET
      106      106                 DFU_READ_OBJECT: procedure (DCB#) ALTRET
      107      107                 DFU_READ_BINARY: procedure (DCB#, BUF_V) ALTRET
      108      108                 DFU_READ_BCD_CARDS: procedure (DCB#) ALTRET
      109      109                 DFU_READ_OBJECT_REFLIST: procedure (DCB#) ALTRET
      110      110                 DFU_READ_LAST_DECK#: procedure (DCB#) ALTRET
      111      111                 DFU_READ_LOG: procedure ALTRET
      112      112
      113      113                 DFU_CHECK_ALREADY_SAVED: procedure ALTRET
      114      114                 DFU_CHECK_FOR_KEY: procedure ALTRET
      115      115                 DFU_DELETE_CATALOG_ENTRY: procedure ALTRET
      116      116                 DFU_DELETE_DECK: procedure ALTRET
      117      117                 DFU_DELETE_MASTER_ENTRY: procedure ALTRET
      118      118                 DFU_DELETE_CATALOG: procedure ALTRET
      119      119
      120      120                 DFU_WRITE_MASTER_CONTROL: procedure (DCB#) ALTRET
      121      121                 DFU_WRITE_MASTER_ENTRY: procedure (DCB#) ALTRET
      122      122                 DFU_WRITE_CATALOG_CONTROL: procedure (DCB#) ALTRET
      123      123                 DFU_WRITE_SUBCATALOG: procedure (DCB#) ALTRET
      124      124                 DFU_WRITE_CATALOG_ENTRY: procedure (DCB#) ALTRET
      125      125                 DFU_WRITE_OBJECT: procedure (DCB#) ALTRET
      126      126                 DFU_WRITE_BINARY: procedure (DCB#, BUF_V, LGTH) ALTRET
      127      127                 DFU_WRITE_BCD_CARDS: procedure (DCB#) ALTRET
      128      128                 DFU_WRITE_OBJECT_REFLIST: procedure (DCB#) ALTRET
      129      129                 DFU_WRITE_LAST_DECK#: procedure (DCB#) ALTRET
      130      130                 DFU_WRITE_LOG: procedure ALTRET
      131      131
      132      132                 DFU_OPEN_TEMP: procedure (OT) ALTRET
      133      133                 DFU_CLOSE_TEMP: procedure (CT) ALTRET
      134      134
      135      135                 DFU_ERR_MSG: procedure (EC)
      136      136        */
      137      137        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:134  
      138      138        TOU$DFU: PROC ALTRET ;

    138  5 000000   000000 700200 xent  TOU$DFU      TSX0  ! X66_AUTO_0
         5 000001   000140 000000                    ZERO    96,0
         5 000002   000005 710000 5                  TRA     s:9140

      139      139
      140      140        /* Include Files */
      141      141
      142      142           %INCLUDE CP_6 ;
      143     5701           %INCLUDE B_ERRORS_C ;
      144     6828           %INCLUDE TOU_DEER_M ;
      145     8239           %INCLUDE TO_PERR_C ;
      146     8824
      147     8825        /* Variables */
      148     8826
      149     8827    1      DCL B$TCB$   PTR SYMREF ;
      150     8828    1      DCL BIN#     UBIN WORD SYMREF ALIGNED ;
      151     8829
      152     8830        /* Macro's */
      153     8831
      154     8832           %OBJECT (STCLASS = SYMREF) ;
      155     8895           %MCA_B (STCLASS = "BASED (DUP.BINARY_V.PTR$)") ;
      156     8965           %DUP (STCLASS = SYMREF) ;
      157     9108           %B$TCB ;
      158     9111           %B$ALT ;
      159     9119
      160     9120        /* Data Control Blocks */
      161     9121
      162     9122    1      DCL M$DECKFILE                 DCB ;
      163     9123    1      DCL M$TEMP                     DCB ;
      164     9124
      165     9125        /* External Entry Points */
      166     9126
      167     9127    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
      168     9128    1      DCL TOU$DU_SYSTEM_ERRMSG           ENTRY ALTRET ;
      169     9129           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:135  
      170     9130        /*D*  NAME:        TOU$DFU_DF_RD_MASTER_CONTROL
      171     9131              ENTRY:
      172     9132              AUTHOR:      Scott S. Sheppard
      173     9133              INTERFACE:   DFU_READ_MASTER_CONTROL
      174     9134              DESCRIPTION: This entry point calls procedure
      175     9135                           DFU_READ_MASTER_CONTROL.
      176     9136        */
      177     9137
      178     9138    1   TOU$DFU_DF_RD_MASTER_CONTROL: ENTRY ALTRET ;

   9138  5 000003   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000004   000140 000000                    ZERO    96,0

      179     9139
      180     9140    1      CALL DFU_READ_MASTER_CONTROL (DCBNUM (M$DECKFILE))

   9140  5 000005   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000006   200020 756100                    STQ     @SYSTEM_ERR+6,,AUTO
         5 000007   200020 630500                    EPPR0   @SYSTEM_ERR+6,,AUTO
         5 000010   200005 450500                    STP0    5,,AUTO
         5 000011   001225 701000 5                  TSX1    DFU_READ_MASTER_CONTROL
         5 000012   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      181     9141    1              ALTRET (TOU$DFU_ALTRETURN) ;
      182     9142    1      RETURN ;

   9142  5 000013   000000 702200 xent               TSX2  ! X66_ARET

      183     9143
      184     9144        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:136  
      185     9145        /*D*  NAME:        TOU$DFU_DF_RD_MASTER_ENTRY
      186     9146              ENTRY:
      187     9147              AUTHOR:      Scott S. Sheppard
      188     9148              INTERFACE:   DFU_READ_MASTER_ENTRY
      189     9149              DESCRIPTION: This entry point calls procedure
      190     9150                           DFU_READ_MASTER_ENTRY.
      191     9151        */
      192     9152
      193     9153    1   TOU$DFU_DF_RD_MASTER_ENTRY: ENTRY ALTRET ;

   9153  5 000014   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000015   000140 000000                    ZERO    96,0

      194     9154
      195     9155    1      CALL DFU_READ_MASTER_ENTRY (DCBNUM (M$DECKFILE))

   9155  5 000016   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000017   200021 756100                    STQ     @SYSTEM_ERR+7,,AUTO
         5 000020   200021 630500                    EPPR0   @SYSTEM_ERR+7,,AUTO
         5 000021   200005 450500                    STP0    5,,AUTO
         5 000022   001247 701000 5                  TSX1    DFU_READ_MASTER_ENTRY
         5 000023   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      196     9156    1              ALTRET (TOU$DFU_ALTRETURN) ;
      197     9157    1      RETURN ;

   9157  5 000024   000000 702200 xent               TSX2  ! X66_ARET

      198     9158
      199     9159        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:137  
      200     9160        /*D*  NAME:        TOU$DFU_DF_RD_CATALOG_CONTROL
      201     9161              ENTRY:
      202     9162              AUTHOR:      Scott S. Sheppard
      203     9163              INTERFACE:   DFU_READ_CATALOG_CONTROL
      204     9164              DESCRIPTION: This entry point calls procedure
      205     9165                           DFU_READ_CATALOG_CONTROL.
      206     9166        */
      207     9167
      208     9168    1   TOU$DFU_DF_RD_CATALOG_CONTROL: ENTRY ALTRET ;

   9168  5 000025   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000026   000140 000000                    ZERO    96,0

      209     9169
      210     9170    1      CALL DFU_READ_CATALOG_CONTROL (DCBNUM (M$DECKFILE))

   9170  5 000027   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000030   200022 756100                    STQ     @SYSTEM_ERR+8,,AUTO
         5 000031   200022 630500                    EPPR0   @SYSTEM_ERR+8,,AUTO
         5 000032   200005 450500                    STP0    5,,AUTO
         5 000033   001271 701000 5                  TSX1    DFU_READ_CATALOG_CONTROL
         5 000034   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      211     9171    1              ALTRET (TOU$DFU_ALTRETURN) ;
      212     9172    1      RETURN ;

   9172  5 000035   000000 702200 xent               TSX2  ! X66_ARET

      213     9173
      214     9174        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:138  
      215     9175        /*D*  NAME:        TOU$DFU_DF_RD_SUBCATALOG
      216     9176              ENTRY:
      217     9177              AUTHOR:      Scott S. Sheppard
      218     9178              INTERFACE:   DFU_READ_SUBCATALOG
      219     9179              DESCRIPTION: This entry point calls procedure
      220     9180                           DFU_READ_SUBCATALOG.
      221     9181        */
      222     9182
      223     9183    1   TOU$DFU_DF_RD_SUBCATALOG: ENTRY ALTRET ;

   9183  5 000036   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000037   000140 000000                    ZERO    96,0

      224     9184
      225     9185    1      CALL DFU_READ_SUBCATALOG (DCBNUM (M$DECKFILE))

   9185  5 000040   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000041   200023 756100                    STQ     @SYSTEM_ERR+9,,AUTO
         5 000042   200023 630500                    EPPR0   @SYSTEM_ERR+9,,AUTO
         5 000043   200005 450500                    STP0    5,,AUTO
         5 000044   001313 701000 5                  TSX1    DFU_READ_SUBCATALOG
         5 000045   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      226     9186    1              ALTRET (TOU$DFU_ALTRETURN) ;
      227     9187    1      RETURN ;

   9187  5 000046   000000 702200 xent               TSX2  ! X66_ARET

      228     9188
      229     9189        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:139  
      230     9190        /*D*  NAME:        TOU$DFU_DF_RD_CATALOG_ENTRY
      231     9191              ENTRY:
      232     9192              AUTHOR:      Scott S. Sheppard
      233     9193              INTERFACE:   DFU_READ_CATALOG_ENTRY
      234     9194              DESCRIPTION: This entry point calls procedure
      235     9195                           DFU_READ_CATALOG_ENTRY_KEY.
      236     9196        */
      237     9197
      238     9198    1   TOU$DFU_DF_RD_CATALOG_ENTRY: ENTRY ALTRET ;

   9198  5 000047   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000050   000140 000000                    ZERO    96,0

      239     9199
      240     9200    1      CALL DFU_READ_CATALOG_ENTRY (DCBNUM (M$DECKFILE))

   9200  5 000051   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000052   200024 756100                    STQ     @SYSTEM_ERR+10,,AUTO
         5 000053   200024 630500                    EPPR0   @SYSTEM_ERR+10,,AUTO
         5 000054   200005 450500                    STP0    5,,AUTO
         5 000055   001335 701000 5                  TSX1    DFU_READ_CATALOG_ENTRY
         5 000056   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      241     9201    1              ALTRET (TOU$DFU_ALTRETURN) ;
      242     9202    1      RETURN ;

   9202  5 000057   000000 702200 xent               TSX2  ! X66_ARET

      243     9203
      244     9204        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:140  
      245     9205        /*D*  NAME:        TOU$DFU_DF_RD_OBJECT
      246     9206              ENTRY:
      247     9207              AUTHOR:      Scott S. Sheppard
      248     9208              INTERFACE:   DFU_READ_OBJECT
      249     9209              DESCRIPTION: This entry point calls procedure
      250     9210                           DFU_READ_OBJECT.
      251     9211        */
      252     9212
      253     9213    1   TOU$DFU_DF_RD_OBJECT: ENTRY ALTRET ;

   9213  5 000060   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000061   000140 000000                    ZERO    96,0

      254     9214
      255     9215    1      CALL DFU_READ_OBJECT (DCBNUM (M$DECKFILE))

   9215  5 000062   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000063   200025 756100                    STQ     @SYSTEM_ERR+11,,AUTO
         5 000064   200025 630500                    EPPR0   @SYSTEM_ERR+11,,AUTO
         5 000065   200005 450500                    STP0    5,,AUTO
         5 000066   001357 701000 5                  TSX1    DFU_READ_OBJECT
         5 000067   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      256     9216    1              ALTRET (TOU$DFU_ALTRETURN) ;
      257     9217    1      RETURN ;

   9217  5 000070   000000 702200 xent               TSX2  ! X66_ARET

      258     9218
      259     9219        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:141  
      260     9220        /*D*  NAME:        TOU$DFU_DF_RD_BINARY
      261     9221              ENTRY:
      262     9222              AUTHOR:      Scott S. Sheppard
      263     9223              INTERFACE:   DFU_READ_BINARY
      264     9224              DESCRIPTION: This entry point calls procedure
      265     9225                           DFU_READ_BINARY.
      266     9226        */
      267     9227
      268     9228    1   TOU$DFU_DF_RD_BINARY: ENTRY ALTRET ;

   9228  5 000071   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000072   000140 000000                    ZERO    96,0

      269     9229
      270     9230    1      CALL DFU_READ_BINARY (DCBNUM (M$DECKFILE), DUP.BINARY_V)

   9230  5 000073   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000074   200026 756100                    STQ     @SYSTEM_ERR+12,,AUTO
         5 000075   000000 236000 6                  LDQ     0
         5 000076   200006 756100                    STQ     @TEMP_CLOSE_TYPE+1,,AUTO
         5 000077   200026 630500                    EPPR0   @SYSTEM_ERR+12,,AUTO
         5 000100   200005 450500                    STP0    5,,AUTO
         5 000101   001415 701000 5                  TSX1    DFU_READ_BINARY
         5 000102   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      271     9231    1              ALTRET (TOU$DFU_ALTRETURN) ;
      272     9232    1      RETURN ;

   9232  5 000103   000000 702200 xent               TSX2  ! X66_ARET

      273     9233
      274     9234        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:142  
      275     9235        /*D*  NAME:        TOU$DFU_DF_RD_FILE
      276     9236              ENTRY:
      277     9237              AUTHOR:      Scott S. Sheppard
      278     9238              INTERFACE:   DFU_READ_BINARY
      279     9239              DESCRIPTION: This entry point calls procedure DFU_READ_BINARY
      280     9240                           to read DIPPER files from the deckfile.
      281     9241        */
      282     9242
      283     9243    1   TOU$DFU_DF_RD_FILE: ENTRY ALTRET ;

   9243  5 000104   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000105   000140 000000                    ZERO    96,0

      284     9244
      285     9245    1      CALL DFU_READ_BINARY (DCBNUM (M$DECKFILE), VECTOR (MCA_B.FILE.DATA))

   9245  5 000106   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000107   000001 235000 6                  LDA     1
         5 000110   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000111   000101 236000 xsym               LDQ     DUP+65
         5 000112   001325 036003                    ADLQ    725,DU
         5 000113   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000114   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000115   200027 755100                    STA     @SYSTEM_ERR+13,,AUTO
         5 000116   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000117   200030 757100                    STAQ    @SYSTEM_ERR+14,,AUTO
         5 000120   200030 630500                    EPPR0   @SYSTEM_ERR+14,,AUTO
         5 000121   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000122   200027 631500                    EPPR1   @SYSTEM_ERR+13,,AUTO
         5 000123   200005 451500                    STP1    5,,AUTO
         5 000124   001415 701000 5                  TSX1    DFU_READ_BINARY
         5 000125   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      286     9246    1              ALTRET (TOU$DFU_ALTRETURN) ;
      287     9247    1      RETURN ;

   9247  5 000126   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:143  

      288     9248
      289     9249        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:144  
      290     9250        /*D*  NAME:        TOU$DFU_DF_RD_BCD_CARDS
      291     9251              ENTRY:
      292     9252              AUTHOR:      Scott S. Sheppard
      293     9253              INTERFACE:   DFU_READ_BCD_CARDS
      294     9254              DESCRIPTION: This entry point calls procedure
      295     9255                           DFU_READ_BCD_CARDS.
      296     9256        */
      297     9257
      298     9258    1   TOU$DFU_DF_RD_BCD_CARDS: ENTRY ALTRET ;

   9258  5 000127   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000130   000140 000000                    ZERO    96,0

      299     9259
      300     9260    1      CALL DFU_READ_BCD_CARDS (DCBNUM (M$DECKFILE))

   9260  5 000131   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000132   200032 756100                    STQ     @SYSTEM_ERR+16,,AUTO
         5 000133   200032 630500                    EPPR0   @SYSTEM_ERR+16,,AUTO
         5 000134   200005 450500                    STP0    5,,AUTO
         5 000135   001443 701000 5                  TSX1    DFU_READ_BCD_CARDS
         5 000136   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      301     9261    1              ALTRET (TOU$DFU_ALTRETURN) ;
      302     9262    1      RETURN ;

   9262  5 000137   000000 702200 xent               TSX2  ! X66_ARET

      303     9263
      304     9264        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:145  
      305     9265        /*D*  NAME:        TOU$DFU_DF_RD_OBJECT_REFLIST
      306     9266              ENTRY:
      307     9267              AUTHOR:      Scott S. Sheppard
      308     9268              INTERFACE:   DFU_READ_OBJECT_REFLIST
      309     9269              DESCRIPTION: This entry point calls procedure
      310     9270                           DFU_READ_OBJECT_REFLIST.
      311     9271        */
      312     9272
      313     9273    1   TOU$DFU_DF_RD_OBJECT_REFLIST: ENTRY ALTRET ;

   9273  5 000140   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000141   000140 000000                    ZERO    96,0

      314     9274
      315     9275    1      CALL DFU_READ_OBJECT_REFLIST (DCBNUM (M$DECKFILE))

   9275  5 000142   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000143   200033 756100                    STQ     @SYSTEM_ERR+17,,AUTO
         5 000144   200033 630500                    EPPR0   @SYSTEM_ERR+17,,AUTO
         5 000145   200005 450500                    STP0    5,,AUTO
         5 000146   001527 701000 5                  TSX1    DFU_READ_OBJECT_REFLIST
         5 000147   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      316     9276    1              ALTRET (TOU$DFU_ALTRETURN) ;
      317     9277    1      RETURN ;

   9277  5 000150   000000 702200 xent               TSX2  ! X66_ARET

      318     9278
      319     9279        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:146  
      320     9280        /*D*  NAME:        TOU$DFU_DF_RD_LAST_DECK#
      321     9281              ENTRY:
      322     9282              AUTHOR:      Scott S. Sheppard
      323     9283              INTERFACE:   DFU_READ_LAST_DECK#
      324     9284              DESCRIPTION: This entry point calls procedure
      325     9285                           DFU_READ_LAST_DECK#.
      326     9286        */
      327     9287
      328     9288    1   TOU$DFU_DF_RD_LAST_DECK#: ENTRY ALTRET ;

   9288  5 000151   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000152   000140 000000                    ZERO    96,0

      329     9289
      330     9290    1      CALL DFU_READ_LAST_DECK# (DCBNUM (M$DECKFILE))

   9290  5 000153   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000154   200034 756100                    STQ     @SYSTEM_ERR+18,,AUTO
         5 000155   200034 630500                    EPPR0   @SYSTEM_ERR+18,,AUTO
         5 000156   200005 450500                    STP0    5,,AUTO
         5 000157   001551 701000 5                  TSX1    DFU_READ_LAST_DECK#
         5 000160   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      331     9291    1              ALTRET (TOU$DFU_ALTRETURN) ;
      332     9292    1      RETURN ;

   9292  5 000161   000000 702200 xent               TSX2  ! X66_ARET

      333     9293
      334     9294        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:147  
      335     9295        /*D*  NAME:        TOU$DFU_DF_RD_LOG
      336     9296              ENTRY:
      337     9297              AUTHOR:      Scott S. Sheppard
      338     9298              INTERFACE:   DFU_READ_LOG
      339     9299              DESCRIPTION: This entry point calls procedure DFU_READ_LOG.
      340     9300        */
      341     9301
      342     9302    1   TOU$DFU_DF_RD_LOG: ENTRY ALTRET ;

   9302  5 000162   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000163   000140 000000                    ZERO    96,0

      343     9303
      344     9304    1      CALL DFU_READ_LOG

   9304  5 000164   001573 701000 5                  TSX1    DFU_READ_LOG
         5 000165   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      345     9305    1              ALTRET (TOU$DFU_ALTRETURN) ;
      346     9306    1      RETURN ;

   9306  5 000166   000000 702200 xent               TSX2  ! X66_ARET

      347     9307
      348     9308        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:148  
      349     9309        /*D*  NAME:        TOU$DFU_DF_RD_REVISION
      350     9310              ENTRY:
      351     9311              AUTHOR:      Scott S. Sheppard
      352     9312              INTERFACE:   DFU_READ_REVISION
      353     9313              DESCRIPTION: This entry point calls procedure DFU_READ_REVISION
      354     9314        */
      355     9315
      356     9316    1   TOU$DFU_DF_RD_REVISION: ENTRY ALTRET ;

   9316  5 000167   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000170   000140 000000                    ZERO    96,0

      357     9317
      358     9318    1      CALL DFU_READ_REVISION

   9318  5 000171   001614 701000 5                  TSX1    DFU_READ_REVISION
         5 000172   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      359     9319    1              ALTRET (TOU$DFU_ALTRETURN) ;
      360     9320    1      RETURN ;

   9320  5 000173   000000 702200 xent               TSX2  ! X66_ARET

      361     9321
      362     9322        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:149  
      363     9323        /*D*  NAME:        TOU$DFU_DF_CHECK_ALREADY_SAVED
      364     9324              ENTRY:
      365     9325              AUTHOR:      Scott S. Sheppard
      366     9326              INTERFACE:   DFU_CHECK_ALREADY_SAVED
      367     9327              DESCRIPTION: This entry point calls procedure
      368     9328                           DFU_DF_CHECK_ALREADY_SAVED.
      369     9329        */
      370     9330
      371     9331    1   TOU$DFU_DF_CHECK_ALREADY_SAVED: ENTRY ALTRET ;

   9331  5 000174   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000175   000140 000000                    ZERO    96,0

      372     9332
      373     9333    1      CALL DFU_CHECK_ALREADY_SAVED

   9333  5 000176   001633 701000 5                  TSX1    DFU_CHECK_ALREADY_SAVED
         5 000177   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      374     9334    1              ALTRET (TOU$DFU_ALTRETURN) ;
      375     9335    1      RETURN ;

   9335  5 000200   000000 702200 xent               TSX2  ! X66_ARET

      376     9336
      377     9337        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:150  
      378     9338        /*D*  NAME:        TOU$DFU_DF_CHECK_FOR_KEY
      379     9339              ENTRY:
      380     9340              AUTHOR:      Scott S. Sheppard
      381     9341                           Called by TOU$NEWCAT
      382     9342              INTERFACE:   DFU_CHECK_FOR_KEY
      383     9343              DESCRIPTION: This  entry point  calls  procedure  TOU$DFU_CHECK_FOR_KEY
      384     9344                           to   determine   if  an   object  deck   is  saved  in the
      385     9345                           deckfile.      This   entry  point  is  not  the  same  as
      386     9346                           TOU$DFU_DF_CHECK_ALREADY_SAVED in that it does not compare
      387     9347                           the object card returned with the current object card.
      388     9348        */
      389     9349
      390     9350    1   TOU$DFU_DF_CHECK_FOR_KEY: ENTRY ALTRET ;

   9350  5 000201   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000202   000140 000000                    ZERO    96,0

      391     9351
      392     9352    1      CALL DFU_CHECK_FOR_KEY

   9352  5 000203   001716 701000 5                  TSX1    DFU_CHECK_FOR_KEY
         5 000204   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      393     9353    1              ALTRET (TOU$DFU_ALTRETURN) ;
      394     9354    1      RETURN ;

   9354  5 000205   000000 702200 xent               TSX2  ! X66_ARET

      395     9355
      396     9356        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:151  
      397     9357        /*D*  NAME:        TOU$DFU_DF_DL_CATALOG_ENTRY
      398     9358              ENTRY:
      399     9359              AUTHOR:      Scott S. Sheppard
      400     9360              INTERFACE:   DFU_DELETE_CATALOG_ENTRY
      401     9361              DESCRIPTION: This entry point calls procedure
      402     9362                           DFU_DELETE_CATALOG_ENTRY_KEY.
      403     9363        */
      404     9364
      405     9365    1   TOU$DFU_DF_DL_CATALOG_ENTRY: ENTRY ALTRET ;

   9365  5 000206   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000207   000140 000000                    ZERO    96,0

      406     9366
      407     9367    1      CALL DFU_DELETE_CATALOG_ENTRY

   9367  5 000210   001743 701000 5                  TSX1    DFU_DELETE_CATALOG_ENTRY
         5 000211   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      408     9368    1              ALTRET (TOU$DFU_ALTRETURN) ;
      409     9369    1      RETURN ;

   9369  5 000212   000000 702200 xent               TSX2  ! X66_ARET

      410     9370
      411     9371        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:152  
      412     9372        /*D*  NAME:        TOU$DFU_DF_DL_DECK
      413     9373              ENTRY:
      414     9374              AUTHOR:      Scott S. Sheppard
      415     9375              INTERFACE:   DFU_DELETE_DECK
      416     9376              DESCRIPTION: This entry point calls procedure
      417     9377                           DFU_DELETE_DECK.
      418     9378        */
      419     9379
      420     9380    1   TOU$DFU_DF_DL_DECK: ENTRY ALTRET ;

   9380  5 000213   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000214   000140 000000                    ZERO    96,0

      421     9381
      422     9382    1      CALL DFU_DELETE_DECK

   9382  5 000215   001770 701000 5                  TSX1    DFU_DELETE_DECK
         5 000216   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      423     9383    1              ALTRET (TOU$DFU_ALTRETURN) ;
      424     9384    1      RETURN ;

   9384  5 000217   000000 702200 xent               TSX2  ! X66_ARET

      425     9385
      426     9386        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:153  
      427     9387        /*D*  NAME:        TOU$DFU_DF_DL_MASTER_ENTRY
      428     9388              ENTRY:
      429     9389              AUTHOR:      Scott S. Sheppard
      430     9390              INTERFACE:   DFU_DELETE_MASTER_ENTRY
      431     9391              DESCRIPTION: This entry point calls procedure
      432     9392                           DFU_DELETE_MASTER_ENTRY.
      433     9393        */
      434     9394
      435     9395    1   TOU$DFU_DF_DL_MASTER_ENTRY: ENTRY ALTRET ;

   9395  5 000220   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000221   000140 000000                    ZERO    96,0

      436     9396
      437     9397    1      CALL DFU_DELETE_MASTER_ENTRY

   9397  5 000222   002013 701000 5                  TSX1    DFU_DELETE_MASTER_ENTRY
         5 000223   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      438     9398    1              ALTRET (TOU$DFU_ALTRETURN) ;
      439     9399    1      RETURN ;

   9399  5 000224   000000 702200 xent               TSX2  ! X66_ARET

      440     9400
      441     9401        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:154  
      442     9402        /*D*  NAME:        TOU$DFU_DF_DL_CATALOG
      443     9403              ENTRY:
      444     9404              AUTHOR:      Scott S. Sheppard
      445     9405              INTERFACE:   DFU_DELETE_CATALOG
      446     9406              DESCRIPTION: This entry point calls procedure
      447     9407                           DFU_DELETE_CATALOG.
      448     9408        */
      449     9409
      450     9410    1   TOU$DFU_DF_DL_CATALOG: ENTRY ALTRET ;

   9410  5 000225   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000226   000140 000000                    ZERO    96,0

      451     9411
      452     9412    1      CALL DFU_DELETE_CATALOG

   9412  5 000227   002040 701000 5                  TSX1    DFU_DELETE_CATALOG
         5 000230   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      453     9413    1              ALTRET (TOU$DFU_ALTRETURN) ;
      454     9414    1      RETURN ;

   9414  5 000231   000000 702200 xent               TSX2  ! X66_ARET

      455     9415
      456     9416        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:155  
      457     9417        /*D*  NAME:        TOU$DFU_DF_WR_MASTER_CONTROL
      458     9418              ENTRY:
      459     9419              AUTHOR:      Scott S. Sheppard
      460     9420              INTERFACE:   DFU_WRITE_MASTER_CONTROL
      461     9421              DESCRIPTION: This entry point calls procedure
      462     9422                           DFU_WRITE_MASTER_CONTROL.
      463     9423        */
      464     9424
      465     9425    1   TOU$DFU_DF_WR_MASTER_CONTROL: ENTRY ALTRET ;

   9425  5 000232   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000233   000140 000000                    ZERO    96,0

      466     9426
      467     9427    1      CALL DFU_WRITE_MASTER_CONTROL (DCBNUM (M$DECKFILE))

   9427  5 000234   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000235   200035 756100                    STQ     @SYSTEM_ERR+19,,AUTO
         5 000236   200035 630500                    EPPR0   @SYSTEM_ERR+19,,AUTO
         5 000237   200005 450500                    STP0    5,,AUTO
         5 000240   002063 701000 5                  TSX1    DFU_WRITE_MASTER_CONTROL
         5 000241   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      468     9428    1              ALTRET (TOU$DFU_ALTRETURN) ;
      469     9429    1      RETURN ;

   9429  5 000242   000000 702200 xent               TSX2  ! X66_ARET

      470     9430
      471     9431        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:156  
      472     9432        /*D*  NAME:        TOU$DFU_DF_WR_MASTER_ENTRY
      473     9433              ENTRY:
      474     9434              AUTHOR:      Scott S. Sheppard
      475     9435              INTERFACE:   DFU_WRITE_MASTER_ENTRY
      476     9436              DESCRIPTION: This entry point calls procedure
      477     9437                           DFU_WRITE_MASTER_ENTRY.
      478     9438        */
      479     9439
      480     9440    1   TOU$DFU_DF_WR_MASTER_ENTRY: ENTRY ALTRET ;

   9440  5 000243   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000244   000140 000000                    ZERO    96,0

      481     9441
      482     9442    1      CALL DFU_WRITE_MASTER_ENTRY (DCBNUM (M$DECKFILE))

   9442  5 000245   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000246   200036 756100                    STQ     @SYSTEM_ERR+20,,AUTO
         5 000247   200036 630500                    EPPR0   @SYSTEM_ERR+20,,AUTO
         5 000250   200005 450500                    STP0    5,,AUTO
         5 000251   002105 701000 5                  TSX1    DFU_WRITE_MASTER_ENTRY
         5 000252   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      483     9443    1              ALTRET (TOU$DFU_ALTRETURN) ;
      484     9444    1      RETURN ;

   9444  5 000253   000000 702200 xent               TSX2  ! X66_ARET

      485     9445
      486     9446        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:157  
      487     9447        /*D*  NAME:        TOU$DFU_DF_WR_CATALOG_CONTROL
      488     9448              ENTRY:
      489     9449              AUTHOR:      Scott S. Sheppard
      490     9450              INTERFACE:   DFU_WRITE_CATALOG_CONTROL
      491     9451              DESCRIPTION: This entry point calls procedure
      492     9452                           DFU_WRITE_CATALOG_CONTROL.
      493     9453        */
      494     9454
      495     9455    1   TOU$DFU_DF_WR_CATALOG_CONTROL: ENTRY ALTRET ;

   9455  5 000254   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000255   000140 000000                    ZERO    96,0

      496     9456
      497     9457    1      CALL DFU_WRITE_CATALOG_CONTROL (DCBNUM (M$DECKFILE))

   9457  5 000256   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000257   200037 756100                    STQ     @SYSTEM_ERR+21,,AUTO
         5 000260   200037 630500                    EPPR0   @SYSTEM_ERR+21,,AUTO
         5 000261   200005 450500                    STP0    5,,AUTO
         5 000262   002127 701000 5                  TSX1    DFU_WRITE_CATALOG_CONTROL
         5 000263   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      498     9458    1              ALTRET (TOU$DFU_ALTRETURN) ;
      499     9459    1      RETURN ;

   9459  5 000264   000000 702200 xent               TSX2  ! X66_ARET

      500     9460
      501     9461        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:158  
      502     9462        /*D*  NAME:        TOU$DFU_DF_WR_SUBCATALOG
      503     9463              ENTRY:
      504     9464              AUTHOR:      Scott S. Sheppard
      505     9465              INTERFACE:   DFU_WRITE_SUBCATALOG
      506     9466              DESCRIPTION: This entry point calls procedure
      507     9467                           DFU_WRITE_SUBCATALOG.
      508     9468        */
      509     9469
      510     9470    1   TOU$DFU_DF_WR_SUBCATALOG: ENTRY ALTRET ;

   9470  5 000265   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000266   000140 000000                    ZERO    96,0

      511     9471
      512     9472    1      CALL DFU_WRITE_SUBCATALOG (DCBNUM (M$DECKFILE))

   9472  5 000267   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000270   200040 756100                    STQ     @SYSTEM_ERR+22,,AUTO
         5 000271   200040 630500                    EPPR0   @SYSTEM_ERR+22,,AUTO
         5 000272   200005 450500                    STP0    5,,AUTO
         5 000273   002151 701000 5                  TSX1    DFU_WRITE_SUBCATALOG
         5 000274   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      513     9473    1              ALTRET (TOU$DFU_ALTRETURN) ;
      514     9474    1      RETURN ;

   9474  5 000275   000000 702200 xent               TSX2  ! X66_ARET

      515     9475
      516     9476        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:159  
      517     9477        /*D*  NAME:        TOU$DFU_DF_WR_CATALOG_ENTRY
      518     9478              ENTRY:
      519     9479              AUTHOR:      Scott S. Sheppard
      520     9480              INTERFACE:   DFU_WRITE_CATALOG_ENTRY
      521     9481              DESCRIPTION: This entry point calls procedure
      522     9482                           DFU_WRITE_CATALOG_ENTRY_KEY.
      523     9483        */
      524     9484
      525     9485    1   TOU$DFU_DF_WR_CATALOG_ENTRY: ENTRY ALTRET ;

   9485  5 000276   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000277   000140 000000                    ZERO    96,0

      526     9486
      527     9487    1      CALL DFU_WRITE_CATALOG_ENTRY (DCBNUM (M$DECKFILE))

   9487  5 000300   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000301   200041 756100                    STQ     @SYSTEM_ERR+23,,AUTO
         5 000302   200041 630500                    EPPR0   @SYSTEM_ERR+23,,AUTO
         5 000303   200005 450500                    STP0    5,,AUTO
         5 000304   002173 701000 5                  TSX1    DFU_WRITE_CATALOG_ENTRY
         5 000305   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      528     9488    1              ALTRET (TOU$DFU_ALTRETURN) ;
      529     9489    1      RETURN ;

   9489  5 000306   000000 702200 xent               TSX2  ! X66_ARET

      530     9490
      531     9491        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:160  
      532     9492        /*D*  NAME:        TOU$DFU_DF_WR_OBJECT
      533     9493              ENTRY:
      534     9494              AUTHOR:      Scott S. Sheppard
      535     9495              INTERFACE:   DFU_WRITE_OBJECT
      536     9496              DESCRIPTION: This entry point calls procedure
      537     9497                           DFU_WRITE_OBJECT.
      538     9498        */
      539     9499
      540     9500    1   TOU$DFU_DF_WR_OBJECT: ENTRY ALTRET ;

   9500  5 000307   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000310   000140 000000                    ZERO    96,0

      541     9501
      542     9502    1      CALL DFU_WRITE_OBJECT (DCBNUM (M$DECKFILE))

   9502  5 000311   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000312   200042 756100                    STQ     @SYSTEM_ERR+24,,AUTO
         5 000313   200042 630500                    EPPR0   @SYSTEM_ERR+24,,AUTO
         5 000314   200005 450500                    STP0    5,,AUTO
         5 000315   002215 701000 5                  TSX1    DFU_WRITE_OBJECT
         5 000316   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      543     9503    1              ALTRET (TOU$DFU_ALTRETURN) ;
      544     9504    1      RETURN ;

   9504  5 000317   000000 702200 xent               TSX2  ! X66_ARET

      545     9505
      546     9506        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:161  
      547     9507        /*D*  NAME:        TOU$DFU_DF_WR_BINARY
      548     9508              ENTRY:
      549     9509              AUTHOR:      Scott S. Sheppard
      550     9510              INTERFACE:   DFU_WRITE_BINARY
      551     9511              DESCRIPTION: This entry point calls procedure
      552     9512                           DFU_WRITE_BINARY.
      553     9513        */
      554     9514
      555     9515    1   TOU$DFU_DF_WR_BINARY: ENTRY ALTRET ;

   9515  5 000320   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000321   000140 000000                    ZERO    96,0

      556     9516
      557     9517    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),

   9517  5 000322   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000323   200043 756100                    STQ     @SYSTEM_ERR+25,,AUTO
         5 000324   000000 236000 xsym               LDQ     BIN#
         5 000325   000150 402007                    MPY     104,DL
         5 000326   200044 756100                    STQ     @SYSTEM_ERR+26,,AUTO
         5 000327   200044 630500                    EPPR0   @SYSTEM_ERR+26,,AUTO
         5 000330   200007 450500                    STP0    @BUF_V+1,,AUTO
         5 000331   000000 236000 6                  LDQ     0
         5 000332   200006 756100                    STQ     @TEMP_CLOSE_TYPE+1,,AUTO
         5 000333   200043 631500                    EPPR1   @SYSTEM_ERR+25,,AUTO
         5 000334   200005 451500                    STP1    5,,AUTO
         5 000335   002237 701000 5                  TSX1    DFU_WRITE_BINARY
         5 000336   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      558     9518    1              DUP.BINARY_V,
      559     9519    1              (BIN# * %BIN_RCD_LGTH))
      560     9520    1              ALTRET (TOU$DFU_ALTRETURN) ;
      561     9521    1      RETURN ;

   9521  5 000337   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:162  
      562     9522
      563     9523        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:163  
      564     9524        /*D*  NAME:        TOU$DFU_DF_WR_FILE
      565     9525              ENTRY:
      566     9526              AUTHOR:      Scott S. Sheppard
      567     9527              INTERFACE:   DFU_WRITE_BINARY
      568     9528              DESCRIPTION: This entry point calls procedure
      569     9529                           DFU_WRITE_FILE.
      570     9530        */
      571     9531
      572     9532    1   TOU$DFU_DF_WR_FILE: ENTRY ALTRET ;

   9532  5 000340   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000341   000140 000000                    ZERO    96,0

      573     9533
      574     9534    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),

   9534  5 000342   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000343   000001 235000 6                  LDA     1
         5 000344   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000345   000101 236000 xsym               LDQ     DUP+65
         5 000346   001325 036003                    ADLQ    725,DU
         5 000347   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000350   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000351   200045 755100                    STA     @SYSTEM_ERR+27,,AUTO
         5 000352   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000353   200046 757100                    STAQ    @SYSTEM_ERR+28,,AUTO
         5 000354   000025 236000 xsym               LDQ     OBJECT+21
         5 000355   000002 736000                    QLS     2
         5 000356   000002 376000 6                  ANQ     2
         5 000357   200050 756100                    STQ     @SYSTEM_ERR+30,,AUTO
         5 000360   200050 630500                    EPPR0   @SYSTEM_ERR+30,,AUTO
         5 000361   200007 450500                    STP0    @BUF_V+1,,AUTO
         5 000362   200046 631500                    EPPR1   @SYSTEM_ERR+28,,AUTO
         5 000363   200006 451500                    STP1    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000364   200045 633500                    EPPR3   @SYSTEM_ERR+27,,AUTO
         5 000365   200005 453500                    STP3    5,,AUTO
         5 000366   002237 701000 5                  TSX1    DFU_WRITE_BINARY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:164  
         5 000367   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      575     9535    1              VECTOR (MCA_B.FILE.DATA),
      576     9536    1              OBJECT.LOAD_SIZE * 4)
      577     9537    1              ALTRET (TOU$DFU_ALTRETURN) ;
      578     9538    1      RETURN ;

   9538  5 000370   000000 702200 xent               TSX2  ! X66_ARET

      579     9539
      580     9540        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:165  
      581     9541        /*D*  NAME:        TOU$DFU_DF_WR_HDR
      582     9542              ENTRY:
      583     9543              AUTHOR:      Kathy Larkin
      584     9544              INTERFACE:   DFU_WRITE_BINARY
      585     9545              DESCRIPTION: This entry point calls procedure DFU_WRITE_BINARY
      586     9546                           to write out a Dipper header file.
      587     9547        */
      588     9548
      589     9549    1   TOU$DFU_DF_WR_HDR: ENTRY ALTRET ;

   9549  5 000371   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000372   000140 000000                    ZERO    96,0

      590     9550
      591     9551    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),

   9551  5 000373   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000374   000003 235000 6                  LDA     3
         5 000375   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000376   000101 236000 xsym               LDQ     DUP+65
         5 000377   000036 036003                    ADLQ    30,DU
         5 000400   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000401   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000402   200051 755100                    STA     @SYSTEM_ERR+31,,AUTO
         5 000403   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000404   200052 757100                    STAQ    @SYSTEM_ERR+32,,AUTO
         5 000405   000005 236000 6                  LDQ     5
         5 000406   200007 756100                    STQ     @BUF_V+1,,AUTO
         5 000407   200052 630500                    EPPR0   @SYSTEM_ERR+32,,AUTO
         5 000410   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000411   200051 631500                    EPPR1   @SYSTEM_ERR+31,,AUTO
         5 000412   200005 451500                    STP1    5,,AUTO
         5 000413   002237 701000 5                  TSX1    DFU_WRITE_BINARY
         5 000414   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      592     9552    1              VECTOR (MCA_B.DISKETTE_HEADER.DATA),
      593     9553    1              136)
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:166  
      594     9554    1              ALTRET (TOU$DFU_ALTRETURN) ;
      595     9555    1      RETURN ;

   9555  5 000415   000000 702200 xent               TSX2  ! X66_ARET

      596     9556
      597     9557        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:167  
      598     9558        /*D*  NAME:        TOU$DFU_DF_WR_DIR
      599     9559              ENTRY:
      600     9560              AUTHOR:      Scott S. Sheppard
      601     9561              INTERFACE:   DFU_WRITE_BINARY
      602     9562              DESCRIPTION: This entry point calls procedure
      603     9563                           DFU_WRITE_BINARY.
      604     9564        */
      605     9565
      606     9566    1   TOU$DFU_DF_WR_DIR: ENTRY ALTRET ;

   9566  5 000416   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000417   000140 000000                    ZERO    96,0

      607     9567
      608     9568    1      CALL DFU_WRITE_BINARY (DCBNUM (M$DECKFILE),

   9568  5 000420   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000421   000006 235000 6                  LDA     6
         5 000422   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000423   000101 236000 xsym               LDQ     DUP+65
         5 000424   000110 036003                    ADLQ    72,DU
         5 000425   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000426   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000427   200054 755100                    STA     @SYSTEM_ERR+34,,AUTO
         5 000430   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000431   200056 757100                    STAQ    @SYSTEM_ERR+36,,AUTO
         5 000432   000101 236000 xsym               LDQ     DUP+65
         5 000433   001310 036003                    ADLQ    712,DU
         5 000434   200007 756100                    STQ     @BUF_V+1,,AUTO
         5 000435   200056 630500                    EPPR0   @SYSTEM_ERR+36,,AUTO
         5 000436   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000437   200054 631500                    EPPR1   @SYSTEM_ERR+34,,AUTO
         5 000440   200005 451500                    STP1    5,,AUTO
         5 000441   002237 701000 5                  TSX1    DFU_WRITE_BINARY
         5 000442   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      609     9569    1              VECTOR (MCA_B.DIRECTORY.DATA),
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:168  
      610     9570    1              MCA_B.DIRECTORY.SIZE)
      611     9571    1              ALTRET (TOU$DFU_ALTRETURN) ;
      612     9572    1      RETURN ;

   9572  5 000443   000000 702200 xent               TSX2  ! X66_ARET

      613     9573
      614     9574        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:169  
      615     9575        /*D*  NAME:        TOU$DFU_DF_WR_BCD_CARDS
      616     9576              ENTRY:
      617     9577              AUTHOR:      Scott S. Sheppard
      618     9578              INTERFACE:   DFU_WRITE_BCD_CARDS
      619     9579              DESCRIPTION: This entry point calls procedure
      620     9580                           DFU_WRITE_BCD_CARDS.
      621     9581        */
      622     9582
      623     9583    1   TOU$DFU_DF_WR_BCD_CARDS: ENTRY ALTRET ;

   9583  5 000444   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000445   000140 000000                    ZERO    96,0

      624     9584
      625     9585    1      CALL DFU_WRITE_BCD_CARDS (DCBNUM (M$DECKFILE))

   9585  5 000446   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000447   200060 756100                    STQ     @SYSTEM_ERR+38,,AUTO
         5 000450   200060 630500                    EPPR0   @SYSTEM_ERR+38,,AUTO
         5 000451   200005 450500                    STP0    5,,AUTO
         5 000452   002274 701000 5                  TSX1    DFU_WRITE_BCD_CARDS
         5 000453   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      626     9586    1              ALTRET (TOU$DFU_ALTRETURN) ;
      627     9587    1      RETURN ;

   9587  5 000454   000000 702200 xent               TSX2  ! X66_ARET

      628     9588
      629     9589        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:170  
      630     9590        /*D*  NAME:        TOU$DFU_DF_WR_OBJECT_REFLIST
      631     9591              ENTRY:
      632     9592              AUTHOR:      Scott S. Sheppard
      633     9593              INTERFACE:   DFU_WRITE_OBJECT_REFLIST
      634     9594              DESCRIPTION: This entry point calls procedure
      635     9595                           DFU_WRITE_OBJECT_REFLIST.
      636     9596        */
      637     9597
      638     9598    1   TOU$DFU_DF_WR_OBJECT_REFLIST: ENTRY ALTRET ;

   9598  5 000455   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000456   000140 000000                    ZERO    96,0

      639     9599
      640     9600    1      CALL DFU_WRITE_OBJECT_REFLIST (DCBNUM (M$DECKFILE))

   9600  5 000457   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000460   200061 756100                    STQ     @SYSTEM_ERR+39,,AUTO
         5 000461   200061 630500                    EPPR0   @SYSTEM_ERR+39,,AUTO
         5 000462   200005 450500                    STP0    5,,AUTO
         5 000463   002360 701000 5                  TSX1    DFU_WRITE_OBJECT_REFLIST
         5 000464   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      641     9601    1              ALTRET (TOU$DFU_ALTRETURN) ;
      642     9602    1      RETURN ;

   9602  5 000465   000000 702200 xent               TSX2  ! X66_ARET

      643     9603
      644     9604        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:171  
      645     9605        /*D*  NAME:        TOU$DFU_DF_WR_LAST_DECK#
      646     9606              ENTRY:
      647     9607              AUTHOR:      Scott S. Sheppard
      648     9608              INTERFACE:   DFU_WRITE_LAST_DECK#
      649     9609              DESCRIPTION: This entry point calls procedure
      650     9610                           DFU_WRITE_LAST_DECK#.
      651     9611        */
      652     9612
      653     9613    1   TOU$DFU_DF_WR_LAST_DECK#: ENTRY ALTRET ;

   9613  5 000466   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000467   000140 000000                    ZERO    96,0

      654     9614
      655     9615    1      CALL DFU_WRITE_LAST_DECK# (DCBNUM (M$DECKFILE))

   9615  5 000470   000000 236007 xsym               LDQ     M$DECKFILE,DL
         5 000471   200062 756100                    STQ     @SYSTEM_ERR+40,,AUTO
         5 000472   200062 630500                    EPPR0   @SYSTEM_ERR+40,,AUTO
         5 000473   200005 450500                    STP0    5,,AUTO
         5 000474   002411 701000 5                  TSX1    DFU_WRITE_LAST_DECK#
         5 000475   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      656     9616    1              ALTRET (TOU$DFU_ALTRETURN) ;
      657     9617    1      RETURN ;

   9617  5 000476   000000 702200 xent               TSX2  ! X66_ARET

      658     9618
      659     9619        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:172  
      660     9620        /*D*  NAME:        TOU$DFU_DF_WR_LOG
      661     9621              ENTRY:
      662     9622              AUTHOR:      Scott S. Sheppard
      663     9623              INTERFACE:   DFU_WRITE_LOG
      664     9624              DESCRIPTION: This entry point calls procedure DFU_WRITE_LOG
      665     9625        */
      666     9626
      667     9627    1   TOU$DFU_DF_WR_LOG: ENTRY ALTRET ;

   9627  5 000477   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000500   000140 000000                    ZERO    96,0

      668     9628
      669     9629    1      CALL DFU_WRITE_LOG

   9629  5 000501   002433 701000 5                  TSX1    DFU_WRITE_LOG
         5 000502   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      670     9630    1              ALTRET (TOU$DFU_ALTRETURN) ;
      671     9631    1      RETURN ;

   9631  5 000503   000000 702200 xent               TSX2  ! X66_ARET

      672     9632
      673     9633        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:173  
      674     9634        /*D*  NAME:        TOU$DFU_DF_WR_REVISION
      675     9635              ENTRY:
      676     9636              AUTHOR:      Scott S. Sheppard
      677     9637              INTERFACE:   DFU_WRITE_REVISION
      678     9638              DESCRIPTION: This entry point calls procedure DFU_WRITE_REVISION
      679     9639        */
      680     9640
      681     9641    1   TOU$DFU_DF_WR_REVISION: ENTRY ALTRET ;

   9641  5 000504   000000 700200 xent  TOU$DFU_DF_* TSX0  ! X66_AUTO_0
         5 000505   000140 000000                    ZERO    96,0

      682     9642
      683     9643    1      CALL DFU_WRITE_REVISION

   9643  5 000506   002466 701000 5                  TSX1    DFU_WRITE_REVISION
         5 000507   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      684     9644    1              ALTRET (TOU$DFU_ALTRETURN) ;
      685     9645    1      RETURN ;

   9645  5 000510   000000 702200 xent               TSX2  ! X66_ARET

      686     9646
      687     9647        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:174  
      688     9648        /*D*  NAME:        TOU$DFU_OPEN_TEMP
      689     9649              ENTRY:
      690     9650              AUTHOR:      Scott S. Sheppard
      691     9651              INTERFACE:   DFU_OPEN_TEMP
      692     9652              DESCRIPTION: This entry point calls procedure
      693     9653                           DFU_OPEN_TEMP with parameters.
      694     9654        */
      695     9655
      696     9656    1   TOU$DFU_OPEN_TEMP: ENTRY ALTRET ;

   9656  5 000511   000000 700200 xent  TOU$DFU_OPE* TSX0  ! X66_AUTO_0
         5 000512   000140 000000                    ZERO    96,0

      697     9657
      698     9658    1      CALL DFU_OPEN_TEMP (DUP.TEMP.OPEN_TYPE)

   9658  5 000513   000007 236000 6                  LDQ     7
         5 000514   200005 756100                    STQ     5,,AUTO
         5 000515   002505 701000 5                  TSX1    DFU_OPEN_TEMP
         5 000516   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      699     9659    1              ALTRET (TOU$DFU_ALTRETURN) ;
      700     9660    1      RETURN ;

   9660  5 000517   000000 702200 xent               TSX2  ! X66_ARET

      701     9661
      702     9662        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:175  
      703     9663        /*D*  NAME:        TOU$DFU_CLOSE_TEMP
      704     9664              ENTRY:
      705     9665              AUTHOR:      Scott S. Sheppard
      706     9666              INTERFACE:   DFU_CLOSE_TEMP
      707     9667              DESCRIPTION: This entry point calls procedure
      708     9668                           DFU_CLOSE_TEMP with parameters.
      709     9669        */
      710     9670
      711     9671    1   TOU$DFU_CLOSE_TEMP: ENTRY ALTRET ;

   9671  5 000520   000000 700200 xent  TOU$DFU_CLO* TSX0  ! X66_AUTO_0
         5 000521   000140 000000                    ZERO    96,0

      712     9672
      713     9673    1      CALL DFU_CLOSE_TEMP (DUP.TEMP.CLOSE_TYPE)

   9673  5 000522   000010 236000 6                  LDQ     8
         5 000523   200005 756100                    STQ     5,,AUTO
         5 000524   002542 701000 5                  TSX1    DFU_CLOSE_TEMP
         5 000525   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      714     9674    1              ALTRET (TOU$DFU_ALTRETURN) ;
      715     9675    1      RETURN ;

   9675  5 000526   000000 702200 xent               TSX2  ! X66_ARET

      716     9676
      717     9677        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:176  
      718     9678        /*D*  NAME:        TOU$DFU_TF_RD_MASTER_CONTROL
      719     9679              ENTRY:
      720     9680              AUTHOR:      Scott S. Sheppard
      721     9681              INTERFACE:   DFU_READ_MASTER_CONTROL
      722     9682              DESCRIPTION: This entry point calls procedure
      723     9683                           DFU_READ_MASTER_CONTROL.
      724     9684        */
      725     9685
      726     9686    1   TOU$DFU_TF_RD_MASTER_CONTROL: ENTRY ALTRET ;

   9686  5 000527   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000530   000140 000000                    ZERO    96,0

      727     9687
      728     9688    1      CALL DFU_READ_MASTER_CONTROL (DCBNUM (M$TEMP))

   9688  5 000531   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000532   200063 756100                    STQ     @SYSTEM_ERR+41,,AUTO
         5 000533   200063 630500                    EPPR0   @SYSTEM_ERR+41,,AUTO
         5 000534   200005 450500                    STP0    5,,AUTO
         5 000535   001225 701000 5                  TSX1    DFU_READ_MASTER_CONTROL
         5 000536   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      729     9689    1              ALTRET (TOU$DFU_ALTRETURN) ;
      730     9690    1      RETURN ;

   9690  5 000537   000000 702200 xent               TSX2  ! X66_ARET

      731     9691
      732     9692        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:177  
      733     9693        /*D*  NAME:        TOU$DFU_TF_RD_MASTER_ENTRY
      734     9694              ENTRY:
      735     9695              AUTHOR:      Scott S. Sheppard
      736     9696              INTERFACE:   DFU_READ_MASTER_ENTRY
      737     9697              DESCRIPTION: This entry point calls procedure
      738     9698                           DFU_READ_MASTER_ENTRY.
      739     9699        */
      740     9700
      741     9701    1   TOU$DFU_TF_RD_MASTER_ENTRY: ENTRY ALTRET ;

   9701  5 000540   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000541   000140 000000                    ZERO    96,0

      742     9702
      743     9703    1      CALL DFU_READ_MASTER_ENTRY (DCBNUM (M$TEMP))

   9703  5 000542   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000543   200064 756100                    STQ     @SYSTEM_ERR+42,,AUTO
         5 000544   200064 630500                    EPPR0   @SYSTEM_ERR+42,,AUTO
         5 000545   200005 450500                    STP0    5,,AUTO
         5 000546   001247 701000 5                  TSX1    DFU_READ_MASTER_ENTRY
         5 000547   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      744     9704    1              ALTRET (TOU$DFU_ALTRETURN) ;
      745     9705    1      RETURN ;

   9705  5 000550   000000 702200 xent               TSX2  ! X66_ARET

      746     9706
      747     9707        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:178  
      748     9708        /*D*  NAME:        TOU$DFU_TF_RD_CATALOG_CONTROL
      749     9709              ENTRY:
      750     9710              AUTHOR:      Scott S. Sheppard
      751     9711              INTERFACE:   DFU_READ_CATALOG_CONTROL
      752     9712              DESCRIPTION: This entry point calls procedure
      753     9713                           DFU_READ_CATALOG_CONTROL.
      754     9714        */
      755     9715
      756     9716    1   TOU$DFU_TF_RD_CATALOG_CONTROL: ENTRY ALTRET ;

   9716  5 000551   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000552   000140 000000                    ZERO    96,0

      757     9717
      758     9718    1      CALL DFU_READ_CATALOG_CONTROL (DCBNUM (M$TEMP))

   9718  5 000553   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000554   200065 756100                    STQ     @SYSTEM_ERR+43,,AUTO
         5 000555   200065 630500                    EPPR0   @SYSTEM_ERR+43,,AUTO
         5 000556   200005 450500                    STP0    5,,AUTO
         5 000557   001271 701000 5                  TSX1    DFU_READ_CATALOG_CONTROL
         5 000560   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      759     9719    1              ALTRET (TOU$DFU_ALTRETURN) ;
      760     9720    1      RETURN ;

   9720  5 000561   000000 702200 xent               TSX2  ! X66_ARET

      761     9721
      762     9722        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:179  
      763     9723        /*D*  NAME:        TOU$DFU_TF_RD_SUBCATALOG
      764     9724              ENTRY:
      765     9725              AUTHOR:      Scott S. Sheppard
      766     9726              INTERFACE:   DFU_READ_SUBCATALOG
      767     9727              DESCRIPTION: This entry point calls procedure
      768     9728                           DFU_READ_SUBCATALOG.
      769     9729        */
      770     9730
      771     9731    1   TOU$DFU_TF_RD_SUBCATALOG: ENTRY ALTRET ;

   9731  5 000562   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000563   000140 000000                    ZERO    96,0

      772     9732
      773     9733    1      CALL DFU_READ_SUBCATALOG (DCBNUM (M$TEMP))

   9733  5 000564   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000565   200066 756100                    STQ     @SYSTEM_ERR+44,,AUTO
         5 000566   200066 630500                    EPPR0   @SYSTEM_ERR+44,,AUTO
         5 000567   200005 450500                    STP0    5,,AUTO
         5 000570   001313 701000 5                  TSX1    DFU_READ_SUBCATALOG
         5 000571   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      774     9734    1              ALTRET (TOU$DFU_ALTRETURN) ;
      775     9735    1      RETURN ;

   9735  5 000572   000000 702200 xent               TSX2  ! X66_ARET

      776     9736
      777     9737        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:180  
      778     9738        /*D*  NAME:        TOU$DFU_TF_RD_CATALOG_ENTRY
      779     9739              ENTRY:
      780     9740              AUTHOR:      Scott S. Sheppard
      781     9741              INTERFACE:   DFU_READ_CATALOG_ENTRY
      782     9742              DESCRIPTION: This entry point calls procedure
      783     9743                           DFU_READ_CATALOG_ENTRY_KEY.
      784     9744        */
      785     9745
      786     9746    1   TOU$DFU_TF_RD_CATALOG_ENTRY: ENTRY ALTRET ;

   9746  5 000573   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000574   000140 000000                    ZERO    96,0

      787     9747
      788     9748    1      CALL DFU_READ_CATALOG_ENTRY (DCBNUM (M$TEMP))

   9748  5 000575   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000576   200067 756100                    STQ     @SYSTEM_ERR+45,,AUTO
         5 000577   200067 630500                    EPPR0   @SYSTEM_ERR+45,,AUTO
         5 000600   200005 450500                    STP0    5,,AUTO
         5 000601   001335 701000 5                  TSX1    DFU_READ_CATALOG_ENTRY
         5 000602   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      789     9749    1              ALTRET (TOU$DFU_ALTRETURN) ;
      790     9750    1      RETURN ;

   9750  5 000603   000000 702200 xent               TSX2  ! X66_ARET

      791     9751
      792     9752        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:181  
      793     9753        /*D*  NAME:        TOU$DFU_TF_RD_OBJECT
      794     9754              ENTRY:
      795     9755              AUTHOR:      Scott S. Sheppard
      796     9756              INTERFACE:   DFU_READ_OBJECT
      797     9757              DESCRIPTION: This entry point calls procedure
      798     9758                           DFU_READ_OBJECT.
      799     9759        */
      800     9760
      801     9761    1   TOU$DFU_TF_RD_OBJECT: ENTRY ALTRET ;

   9761  5 000604   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000605   000140 000000                    ZERO    96,0

      802     9762
      803     9763    1      CALL DFU_READ_OBJECT (DCBNUM (M$TEMP))

   9763  5 000606   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000607   200070 756100                    STQ     @SYSTEM_ERR+46,,AUTO
         5 000610   200070 630500                    EPPR0   @SYSTEM_ERR+46,,AUTO
         5 000611   200005 450500                    STP0    5,,AUTO
         5 000612   001357 701000 5                  TSX1    DFU_READ_OBJECT
         5 000613   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      804     9764    1              ALTRET (TOU$DFU_ALTRETURN) ;
      805     9765    1      RETURN ;

   9765  5 000614   000000 702200 xent               TSX2  ! X66_ARET

      806     9766
      807     9767        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:182  
      808     9768        /*D*  NAME:        TOU$DFU_TF_RD_BINARY
      809     9769              ENTRY:
      810     9770              AUTHOR:      Scott S. Sheppard
      811     9771              INTERFACE:   DFU_READ_BINARY
      812     9772              DESCRIPTION: This entry point calls procedure
      813     9773                           DFU_READ_BINARY.
      814     9774        */
      815     9775
      816     9776    1   TOU$DFU_TF_RD_BINARY: ENTRY ALTRET ;

   9776  5 000615   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000616   000140 000000                    ZERO    96,0

      817     9777
      818     9778    1      CALL DFU_READ_BINARY (DCBNUM (M$TEMP), DUP.BINARY_V)

   9778  5 000617   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000620   200071 756100                    STQ     @SYSTEM_ERR+47,,AUTO
         5 000621   000000 236000 6                  LDQ     0
         5 000622   200006 756100                    STQ     @TEMP_CLOSE_TYPE+1,,AUTO
         5 000623   200071 630500                    EPPR0   @SYSTEM_ERR+47,,AUTO
         5 000624   200005 450500                    STP0    5,,AUTO
         5 000625   001415 701000 5                  TSX1    DFU_READ_BINARY
         5 000626   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      819     9779    1              ALTRET (TOU$DFU_ALTRETURN) ;
      820     9780    1      RETURN ;

   9780  5 000627   000000 702200 xent               TSX2  ! X66_ARET

      821     9781
      822     9782        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:183  
      823     9783        /*D*  NAME:        TOU$DFU_TF_RD_FILE
      824     9784              ENTRY:
      825     9785              AUTHOR:      Scott S. Sheppard
      826     9786              INTERFACE:   DFU_READ_BINARY
      827     9787              DESCRIPTION: This entry point calls procedure
      828     9788                           DFU_READ_BINARY with parameters.
      829     9789        */
      830     9790
      831     9791    1   TOU$DFU_TF_RD_FILE: ENTRY ALTRET ;

   9791  5 000630   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000631   000140 000000                    ZERO    96,0

      832     9792
      833     9793    1      CALL DFU_READ_BINARY (DCBNUM (M$TEMP), VECTOR (MCA_B.FILE.DATA))

   9793  5 000632   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000633   000001 235000 6                  LDA     1
         5 000634   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000635   000101 236000 xsym               LDQ     DUP+65
         5 000636   001325 036003                    ADLQ    725,DU
         5 000637   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000640   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000641   200072 755100                    STA     @SYSTEM_ERR+48,,AUTO
         5 000642   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000643   200074 757100                    STAQ    @SYSTEM_ERR+50,,AUTO
         5 000644   200074 630500                    EPPR0   @SYSTEM_ERR+50,,AUTO
         5 000645   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000646   200072 631500                    EPPR1   @SYSTEM_ERR+48,,AUTO
         5 000647   200005 451500                    STP1    5,,AUTO
         5 000650   001415 701000 5                  TSX1    DFU_READ_BINARY
         5 000651   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      834     9794    1              ALTRET (TOU$DFU_ALTRETURN) ;
      835     9795    1      RETURN ;

   9795  5 000652   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:184  

      836     9796
      837     9797        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:185  
      838     9798        /*D*  NAME:        TOU$DFU_TF_RD_HDR
      839     9799              ENTRY:
      840     9800              AUTHOR:      Kathy Larkin
      841     9801              INTERFACE:   DFU_READ_BINARY
      842     9802              DESCRIPTION: This entry point calls procedure
      843     9803                           DFU_READ_BINARY to read a header file
      844     9804                           into MCA_B.DISKETTE_HEADER.DATA.
      845     9805        */
      846     9806
      847     9807    1   TOU$DFU_TF_RD_HDR: ENTRY ALTRET ;

   9807  5 000653   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000654   000140 000000                    ZERO    96,0

      848     9808
      849     9809    1      CALL DFU_READ_BINARY (DCBNUM(M$TEMP), VECTOR(MCA_B.DISKETTE_HEADER.DATA))

   9809  5 000655   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000656   000003 235000 6                  LDA     3
         5 000657   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000660   000101 236000 xsym               LDQ     DUP+65
         5 000661   000036 036003                    ADLQ    30,DU
         5 000662   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000663   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000664   200076 755100                    STA     @SYSTEM_ERR+52,,AUTO
         5 000665   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000666   200100 757100                    STAQ    @SYSTEM_ERR+54,,AUTO
         5 000667   200100 630500                    EPPR0   @SYSTEM_ERR+54,,AUTO
         5 000670   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000671   200076 631500                    EPPR1   @SYSTEM_ERR+52,,AUTO
         5 000672   200005 451500                    STP1    5,,AUTO
         5 000673   001415 701000 5                  TSX1    DFU_READ_BINARY
         5 000674   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      850     9810    1              ALTRET (TOU$DFU_ALTRETURN) ;
      851     9811    1      RETURN ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:186  
   9811  5 000675   000000 702200 xent               TSX2  ! X66_ARET

      852     9812
      853     9813        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:187  
      854     9814        /*D*  NAME:        TOU$DFU_TF_RD_DIR
      855     9815              ENTRY:
      856     9816              AUTHOR:      Scott S. Sheppard
      857     9817              INTERFACE:   DFU_READ_BINARY
      858     9818              DESCRIPTION: This entry point calls procedure
      859     9819                           DFU_READ_BINARY with parameters.
      860     9820        */
      861     9821
      862     9822    1   TOU$DFU_TF_RD_DIR: ENTRY ALTRET ;

   9822  5 000676   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000677   000140 000000                    ZERO    96,0

      863     9823
      864     9824    1      CALL DFU_READ_BINARY (DCBNUM (M$TEMP), VECTOR (MCA_B.DIRECTORY))

   9824  5 000700   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000701   000011 235000 6                  LDA     9
         5 000702   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 000703   000101 236000 xsym               LDQ     DUP+65
         5 000704   000100 036003                    ADLQ    64,DU
         5 000705   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 000706   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 000707   200102 755100                    STA     @SYSTEM_ERR+56,,AUTO
         5 000710   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 000711   200104 757100                    STAQ    @SYSTEM_ERR+58,,AUTO
         5 000712   200104 630500                    EPPR0   @SYSTEM_ERR+58,,AUTO
         5 000713   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 000714   200102 631500                    EPPR1   @SYSTEM_ERR+56,,AUTO
         5 000715   200005 451500                    STP1    5,,AUTO
         5 000716   001415 701000 5                  TSX1    DFU_READ_BINARY
         5 000717   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      865     9825    1              ALTRET (TOU$DFU_ALTRETURN) ;
      866     9826    1      RETURN ;

   9826  5 000720   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:188  

      867     9827
      868     9828        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:189  
      869     9829        /*D*  NAME:        TOU$DFU_TF_RD_BCD_CARDS
      870     9830              ENTRY:
      871     9831              AUTHOR:      Scott S. Sheppard
      872     9832              INTERFACE:   DFU_READ_BCD_CARDS
      873     9833              DESCRIPTION: This entry point calls procedure
      874     9834                           DFU_READ_BCD_CARDS.
      875     9835        */
      876     9836
      877     9837    1   TOU$DFU_TF_RD_BCD_CARDS: ENTRY ALTRET ;

   9837  5 000721   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000722   000140 000000                    ZERO    96,0

      878     9838
      879     9839    1      CALL DFU_READ_BCD_CARDS (DCBNUM (M$TEMP))

   9839  5 000723   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000724   200106 756100                    STQ     @SYSTEM_ERR+60,,AUTO
         5 000725   200106 630500                    EPPR0   @SYSTEM_ERR+60,,AUTO
         5 000726   200005 450500                    STP0    5,,AUTO
         5 000727   001443 701000 5                  TSX1    DFU_READ_BCD_CARDS
         5 000730   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      880     9840    1              ALTRET (TOU$DFU_ALTRETURN) ;
      881     9841    1      RETURN ;

   9841  5 000731   000000 702200 xent               TSX2  ! X66_ARET

      882     9842
      883     9843        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:190  
      884     9844        /*D*  NAME:        TOU$DFU_TF_RD_OBJECT_REFLIST
      885     9845              ENTRY:
      886     9846              AUTHOR:      Scott S. Sheppard
      887     9847              INTERFACE:   DFU_READ_OBJECT_REFLIST
      888     9848              DESCRIPTION: This entry point calls procedure
      889     9849                           DFU_READ_OBJECT_REFLIST.
      890     9850        */
      891     9851
      892     9852    1   TOU$DFU_TF_RD_OBJECT_REFLIST: ENTRY ALTRET ;

   9852  5 000732   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000733   000140 000000                    ZERO    96,0

      893     9853
      894     9854    1      CALL DFU_READ_OBJECT_REFLIST (DCBNUM (M$TEMP))

   9854  5 000734   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000735   200107 756100                    STQ     @SYSTEM_ERR+61,,AUTO
         5 000736   200107 630500                    EPPR0   @SYSTEM_ERR+61,,AUTO
         5 000737   200005 450500                    STP0    5,,AUTO
         5 000740   001527 701000 5                  TSX1    DFU_READ_OBJECT_REFLIST
         5 000741   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      895     9855    1              ALTRET (TOU$DFU_ALTRETURN) ;
      896     9856    1      RETURN ;

   9856  5 000742   000000 702200 xent               TSX2  ! X66_ARET

      897     9857
      898     9858        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:191  
      899     9859        /*D*  NAME:        TOU$DFU_TF_RD_LAST_DECK#
      900     9860              ENTRY:
      901     9861              AUTHOR:      Scott S. Sheppard
      902     9862              INTERFACE:   DFU_READ_LAST_DECK#
      903     9863              DESCRIPTION: This entry point calls procedure
      904     9864                           DFU_READ_LAST_DECK#.
      905     9865        */
      906     9866
      907     9867    1   TOU$DFU_TF_RD_LAST_DECK#: ENTRY ALTRET ;

   9867  5 000743   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000744   000140 000000                    ZERO    96,0

      908     9868
      909     9869    1      CALL DFU_READ_LAST_DECK# (DCBNUM (M$TEMP))

   9869  5 000745   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000746   200110 756100                    STQ     @SYSTEM_ERR+62,,AUTO
         5 000747   200110 630500                    EPPR0   @SYSTEM_ERR+62,,AUTO
         5 000750   200005 450500                    STP0    5,,AUTO
         5 000751   001551 701000 5                  TSX1    DFU_READ_LAST_DECK#
         5 000752   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      910     9870    1              ALTRET (TOU$DFU_ALTRETURN) ;
      911     9871    1      RETURN ;

   9871  5 000753   000000 702200 xent               TSX2  ! X66_ARET

      912     9872
      913     9873        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:192  
      914     9874        /*D*  NAME:        TOU$DFU_TF_WR_MASTER_CONTROL
      915     9875              ENTRY:
      916     9876              AUTHOR:      Scott S. Sheppard
      917     9877              INTERFACE:   DFU_WRITE_MASTER_CONTROL
      918     9878              DESCRIPTION: This entry point calls procedure
      919     9879                           DFU_WRITE_MASTER_CONTROL.
      920     9880        */
      921     9881
      922     9882    1   TOU$DFU_TF_WR_MASTER_CONTROL: ENTRY ALTRET ;

   9882  5 000754   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000755   000140 000000                    ZERO    96,0

      923     9883
      924     9884    1      CALL DFU_WRITE_MASTER_CONTROL (DCBNUM (M$TEMP))

   9884  5 000756   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000757   200111 756100                    STQ     @SYSTEM_ERR+63,,AUTO
         5 000760   200111 630500                    EPPR0   @SYSTEM_ERR+63,,AUTO
         5 000761   200005 450500                    STP0    5,,AUTO
         5 000762   002063 701000 5                  TSX1    DFU_WRITE_MASTER_CONTROL
         5 000763   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      925     9885    1              ALTRET (TOU$DFU_ALTRETURN) ;
      926     9886    1      RETURN ;

   9886  5 000764   000000 702200 xent               TSX2  ! X66_ARET

      927     9887
      928     9888        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:193  
      929     9889        /*D*  NAME:        TOU$DFU_TF_WR_MASTER_ENTRY
      930     9890              ENTRY:
      931     9891              AUTHOR:      Scott S. Sheppard
      932     9892              INTERFACE:   DFU_WRITE_MASTER_ENTRY
      933     9893              DESCRIPTION: This entry point calls procedure
      934     9894                           DFU_WRITE_MASTER_ENTRY.
      935     9895        */
      936     9896
      937     9897    1   TOU$DFU_TF_WR_MASTER_ENTRY: ENTRY ALTRET ;

   9897  5 000765   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000766   000140 000000                    ZERO    96,0

      938     9898
      939     9899    1      CALL DFU_WRITE_MASTER_ENTRY (DCBNUM (M$TEMP))

   9899  5 000767   000000 236007 xsym               LDQ     M$TEMP,DL
         5 000770   200112 756100                    STQ     @SYSTEM_ERR+64,,AUTO
         5 000771   200112 630500                    EPPR0   @SYSTEM_ERR+64,,AUTO
         5 000772   200005 450500                    STP0    5,,AUTO
         5 000773   002105 701000 5                  TSX1    DFU_WRITE_MASTER_ENTRY
         5 000774   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      940     9900    1              ALTRET (TOU$DFU_ALTRETURN) ;
      941     9901    1      RETURN ;

   9901  5 000775   000000 702200 xent               TSX2  ! X66_ARET

      942     9902
      943     9903        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:194  
      944     9904        /*D*  NAME:        TOU$DFU_TF_WR_CATALOG_CONTROL
      945     9905              ENTRY:
      946     9906              AUTHOR:      Scott S. Sheppard
      947     9907              INTERFACE:   DFU_WRITE_CATALOG_CONTROL
      948     9908              DESCRIPTION: This entry point calls procedure
      949     9909                           DFU_WRITE_CATALOG_CONTROL.
      950     9910        */
      951     9911
      952     9912    1   TOU$DFU_TF_WR_CATALOG_CONTROL: ENTRY ALTRET ;

   9912  5 000776   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 000777   000140 000000                    ZERO    96,0

      953     9913
      954     9914    1      CALL DFU_WRITE_CATALOG_CONTROL (DCBNUM (M$TEMP))

   9914  5 001000   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001001   200113 756100                    STQ     @SYSTEM_ERR+65,,AUTO
         5 001002   200113 630500                    EPPR0   @SYSTEM_ERR+65,,AUTO
         5 001003   200005 450500                    STP0    5,,AUTO
         5 001004   002127 701000 5                  TSX1    DFU_WRITE_CATALOG_CONTROL
         5 001005   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      955     9915    1              ALTRET (TOU$DFU_ALTRETURN) ;
      956     9916    1      RETURN ;

   9916  5 001006   000000 702200 xent               TSX2  ! X66_ARET

      957     9917
      958     9918        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:195  
      959     9919        /*D*  NAME:        TOU$DFU_TF_WR_SUBCATALOG
      960     9920              ENTRY:
      961     9921              AUTHOR:      Scott S. Sheppard
      962     9922              INTERFACE:   DFU_WRITE_SUBCATALOG
      963     9923              DESCRIPTION: This entry point calls procedure
      964     9924                           DFU_WRITE_SUBCATALOG.
      965     9925        */
      966     9926
      967     9927    1   TOU$DFU_TF_WR_SUBCATALOG: ENTRY ALTRET ;

   9927  5 001007   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001010   000140 000000                    ZERO    96,0

      968     9928
      969     9929    1      CALL DFU_WRITE_SUBCATALOG (DCBNUM (M$TEMP))

   9929  5 001011   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001012   200114 756100                    STQ     @SYSTEM_ERR+66,,AUTO
         5 001013   200114 630500                    EPPR0   @SYSTEM_ERR+66,,AUTO
         5 001014   200005 450500                    STP0    5,,AUTO
         5 001015   002151 701000 5                  TSX1    DFU_WRITE_SUBCATALOG
         5 001016   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      970     9930    1              ALTRET (TOU$DFU_ALTRETURN) ;
      971     9931    1      RETURN ;

   9931  5 001017   000000 702200 xent               TSX2  ! X66_ARET

      972     9932
      973     9933        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:196  
      974     9934        /*D*  NAME:        TOU$DFU_TF_WR_CATALOG_ENTRY
      975     9935              ENTRY:
      976     9936              AUTHOR:      Scott S. Sheppard
      977     9937              INTERFACE:   DFU_WRITE_CATALOG_ENTRY
      978     9938              DESCRIPTION: This entry point calls procedure
      979     9939                           DFU_WRITE_CATALOG_ENTRY_KEY.
      980     9940        */
      981     9941
      982     9942    1   TOU$DFU_TF_WR_CATALOG_ENTRY: ENTRY ALTRET ;

   9942  5 001020   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001021   000140 000000                    ZERO    96,0

      983     9943
      984     9944    1      CALL DFU_WRITE_CATALOG_ENTRY (DCBNUM (M$TEMP))

   9944  5 001022   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001023   200115 756100                    STQ     @SYSTEM_ERR+67,,AUTO
         5 001024   200115 630500                    EPPR0   @SYSTEM_ERR+67,,AUTO
         5 001025   200005 450500                    STP0    5,,AUTO
         5 001026   002173 701000 5                  TSX1    DFU_WRITE_CATALOG_ENTRY
         5 001027   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

      985     9945    1              ALTRET (TOU$DFU_ALTRETURN) ;
      986     9946    1      RETURN ;

   9946  5 001030   000000 702200 xent               TSX2  ! X66_ARET

      987     9947
      988     9948        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:197  
      989     9949        /*D*  NAME:        TOU$DFU_TF_WR_OBJECT
      990     9950              ENTRY:
      991     9951              AUTHOR:      Scott S. Sheppard
      992     9952              INTERFACE:   DFU_WRITE_OBJECT
      993     9953              DESCRIPTION: This entry point calls procedure
      994     9954                           DFU_WRITE_OBJECT.
      995     9955        */
      996     9956
      997     9957    1   TOU$DFU_TF_WR_OBJECT: ENTRY ALTRET ;

   9957  5 001031   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001032   000140 000000                    ZERO    96,0

      998     9958
      999     9959    1      CALL DFU_WRITE_OBJECT (DCBNUM (M$TEMP))

   9959  5 001033   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001034   200116 756100                    STQ     @SYSTEM_ERR+68,,AUTO
         5 001035   200116 630500                    EPPR0   @SYSTEM_ERR+68,,AUTO
         5 001036   200005 450500                    STP0    5,,AUTO
         5 001037   002215 701000 5                  TSX1    DFU_WRITE_OBJECT
         5 001040   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1000     9960    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1001     9961    1      RETURN ;

   9961  5 001041   000000 702200 xent               TSX2  ! X66_ARET

     1002     9962
     1003     9963        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:198  
     1004     9964        /*D*  NAME:        TOU$DFU_TF_WR_BINARY
     1005     9965              ENTRY:
     1006     9966              AUTHOR:      Scott S. Sheppard
     1007     9967              INTERFACE:   DFU_WRITE_BINARY
     1008     9968              DESCRIPTION: This entry point calls procedure
     1009     9969                           DFU_WRITE_BINARY.
     1010     9970        */
     1011     9971
     1012     9972    1   TOU$DFU_TF_WR_BINARY: ENTRY ALTRET ;

   9972  5 001042   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001043   000140 000000                    ZERO    96,0

     1013     9973
     1014     9974    1      CALL DFU_WRITE_BINARY (DCBNUM (M$TEMP),

   9974  5 001044   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001045   200117 756100                    STQ     @SYSTEM_ERR+69,,AUTO
         5 001046   000000 236000 xsym               LDQ     BIN#
         5 001047   000150 402007                    MPY     104,DL
         5 001050   200120 756100                    STQ     @SYSTEM_ERR+70,,AUTO
         5 001051   200120 630500                    EPPR0   @SYSTEM_ERR+70,,AUTO
         5 001052   200007 450500                    STP0    @BUF_V+1,,AUTO
         5 001053   000000 236000 6                  LDQ     0
         5 001054   200006 756100                    STQ     @TEMP_CLOSE_TYPE+1,,AUTO
         5 001055   200117 631500                    EPPR1   @SYSTEM_ERR+69,,AUTO
         5 001056   200005 451500                    STP1    5,,AUTO
         5 001057   002237 701000 5                  TSX1    DFU_WRITE_BINARY
         5 001060   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1015     9975    1              DUP.BINARY_V,
     1016     9976    1              (BIN# * %BIN_RCD_LGTH))
     1017     9977    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1018     9978    1      RETURN ;

   9978  5 001061   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:199  
     1019     9979
     1020     9980        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:200  
     1021     9981        /*D*  NAME:        TOU$DFU_TF_WR_FILE
     1022     9982              ENTRY:
     1023     9983              AUTHOR:      Scott S. Sheppard
     1024     9984              INTERFACE:   DFU_WRITE_BINARY
     1025     9985              DESCRIPTION: This entry point calls procedure
     1026     9986                           DFU_WRITE_BINARY with parameters.
     1027     9987        */
     1028     9988
     1029     9989    1   TOU$DFU_TF_WR_FILE: ENTRY ALTRET ;

   9989  5 001062   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001063   000140 000000                    ZERO    96,0

     1030     9990
     1031     9991    1      CALL DFU_WRITE_BINARY (DCBNUM (M$TEMP),

   9991  5 001064   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001065   000001 235000 6                  LDA     1
         5 001066   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 001067   000101 236000 xsym               LDQ     DUP+65
         5 001070   001325 036003                    ADLQ    725,DU
         5 001071   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 001072   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 001073   200121 755100                    STA     @SYSTEM_ERR+71,,AUTO
         5 001074   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 001075   200122 757100                    STAQ    @SYSTEM_ERR+72,,AUTO
         5 001076   000025 236000 xsym               LDQ     OBJECT+21
         5 001077   000002 736000                    QLS     2
         5 001100   000002 376000 6                  ANQ     2
         5 001101   200124 756100                    STQ     @SYSTEM_ERR+74,,AUTO
         5 001102   200124 630500                    EPPR0   @SYSTEM_ERR+74,,AUTO
         5 001103   200007 450500                    STP0    @BUF_V+1,,AUTO
         5 001104   200122 631500                    EPPR1   @SYSTEM_ERR+72,,AUTO
         5 001105   200006 451500                    STP1    @TEMP_CLOSE_TYPE+1,,AUTO
         5 001106   200121 633500                    EPPR3   @SYSTEM_ERR+71,,AUTO
         5 001107   200005 453500                    STP3    5,,AUTO
         5 001110   002237 701000 5                  TSX1    DFU_WRITE_BINARY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:201  
         5 001111   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1032     9992    1              VECTOR (MCA_B.FILE.DATA),
     1033     9993    1              (OBJECT.LOAD_SIZE * 4))
     1034     9994    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1035     9995    1      RETURN ;

   9995  5 001112   000000 702200 xent               TSX2  ! X66_ARET

     1036     9996
     1037     9997        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:202  
     1038     9998        /*D*  NAME:        TOU$DFU_TF_WR_DIR
     1039     9999              ENTRY:
     1040    10000              AUTHOR:      Scott S. Sheppard
     1041    10001              INTERFACE:   DFU_WRITE_BINARY
     1042    10002              DESCRIPTION: This entry point calls procedure
     1043    10003                           DFU_WRITE_BINARY with parameters.
     1044    10004        */
     1045    10005
     1046    10006    1   TOU$DFU_TF_WR_DIR: ENTRY ALTRET ;

  10006  5 001113   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001114   000140 000000                    ZERO    96,0

     1047    10007
     1048    10008    1      CALL DFU_WRITE_BINARY (DCBNUM (M$TEMP),

  10008  5 001115   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001116   000011 235000 6                  LDA     9
         5 001117   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 001120   000101 236000 xsym               LDQ     DUP+65
         5 001121   000100 036003                    ADLQ    64,DU
         5 001122   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 001123   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 001124   200125 755100                    STA     @SYSTEM_ERR+75,,AUTO
         5 001125   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 001126   200126 757100                    STAQ    @SYSTEM_ERR+76,,AUTO
         5 001127   000013 236000 6                  LDQ     11
         5 001130   200007 756100                    STQ     @BUF_V+1,,AUTO
         5 001131   200126 630500                    EPPR0   @SYSTEM_ERR+76,,AUTO
         5 001132   200006 450500                    STP0    @TEMP_CLOSE_TYPE+1,,AUTO
         5 001133   200125 631500                    EPPR1   @SYSTEM_ERR+75,,AUTO
         5 001134   200005 451500                    STP1    5,,AUTO
         5 001135   002237 701000 5                  TSX1    DFU_WRITE_BINARY
         5 001136   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1049    10009    1              VECTOR (MCA_B.DIRECTORY),
     1050    10010    1              SIZEC(MCA_B.DIRECTORY))
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:203  
     1051    10011    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1052    10012    1      RETURN ;

  10012  5 001137   000000 702200 xent               TSX2  ! X66_ARET

     1053    10013
     1054    10014        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:204  
     1055    10015        /*D*  NAME:        TOU$DFU_TF_WR_HDR
     1056    10016              ENTRY:
     1057    10017              AUTHOR:      Kathy Larkin
     1058    10018              INTERFACE:   DFU_WRITE_BINARY
     1059    10019              DESCRIPTION: This entry point calls procedure
     1060    10020                           DFU_WRITE_BINARY with parameters to write a
     1061    10021                           diskette header file to a temporary file.
     1062    10022        */
     1063    10023
     1064    10024    1   TOU$DFU_TF_WR_HDR : ENTRY ALTRET ;

  10024  5 001140   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001141   000140 000000                    ZERO    96,0

     1065    10025
     1066    10026    1      CALL DFU_WRITE_BINARY (DCBNUM(M$TEMP),

  10026  5 001142   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001143   000003 235000 6                  LDA     3
         5 001144   200014 756100                    STQ     @SYSTEM_ERR+2,,AUTO
         5 001145   000101 236000 xsym               LDQ     DUP+65
         5 001146   000036 036003                    ADLQ    30,DU
         5 001147   200016 757100                    STAQ    @SYSTEM_ERR+4,,AUTO
         5 001150   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 001151   200130 755100                    STA     @SYSTEM_ERR+78,,AUTO
         5 001152   200016 237100                    LDAQ    @SYSTEM_ERR+4,,AUTO
         5 001153   200132 757100                    STAQ    @SYSTEM_ERR+80,,AUTO
         5 001154   000025 236000 xsym               LDQ     OBJECT+21
         5 001155   000002 736000                    QLS     2
         5 001156   000002 376000 6                  ANQ     2
         5 001157   200134 756100                    STQ     @SYSTEM_ERR+82,,AUTO
         5 001160   200134 630500                    EPPR0   @SYSTEM_ERR+82,,AUTO
         5 001161   200007 450500                    STP0    @BUF_V+1,,AUTO
         5 001162   200132 631500                    EPPR1   @SYSTEM_ERR+80,,AUTO
         5 001163   200006 451500                    STP1    @TEMP_CLOSE_TYPE+1,,AUTO
         5 001164   200130 633500                    EPPR3   @SYSTEM_ERR+78,,AUTO
         5 001165   200005 453500                    STP3    5,,AUTO
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:205  
         5 001166   002237 701000 5                  TSX1    DFU_WRITE_BINARY
         5 001167   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1067    10027    1              VECTOR (MCA_B.DISKETTE_HEADER.DATA),
     1068    10028    1              (OBJECT.LOAD_SIZE * 4))
     1069    10029    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1070    10030    1      RETURN ;

  10030  5 001170   000000 702200 xent               TSX2  ! X66_ARET

     1071    10031
     1072    10032        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:206  
     1073    10033        /*D*  NAME:        TOU$DFU_TF_WR_BCD_CARDS
     1074    10034              ENTRY:
     1075    10035              AUTHOR:      Scott S. Sheppard
     1076    10036              INTERFACE:   DFU_WRITE_BCD_CARDS
     1077    10037              DESCRIPTION: This entry point calls procedure
     1078    10038                           DFU_WRITE_BCD_CARDS.
     1079    10039        */
     1080    10040
     1081    10041    1   TOU$DFU_TF_WR_BCD_CARDS: ENTRY ALTRET ;

  10041  5 001171   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001172   000140 000000                    ZERO    96,0

     1082    10042
     1083    10043    1      CALL DFU_WRITE_BCD_CARDS (DCBNUM (M$TEMP))

  10043  5 001173   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001174   200135 756100                    STQ     @SYSTEM_ERR+83,,AUTO
         5 001175   200135 630500                    EPPR0   @SYSTEM_ERR+83,,AUTO
         5 001176   200005 450500                    STP0    5,,AUTO
         5 001177   002274 701000 5                  TSX1    DFU_WRITE_BCD_CARDS
         5 001200   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1084    10044    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1085    10045    1      RETURN ;

  10045  5 001201   000000 702200 xent               TSX2  ! X66_ARET

     1086    10046
     1087    10047        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:207  
     1088    10048        /*D*  NAME:        TOU$DFU_TF_WR_OBJECT_REFLIST
     1089    10049              ENTRY:
     1090    10050              AUTHOR:      Scott S. Sheppard
     1091    10051              INTERFACE:   DFU_WRITE_OBJECT_REFLIST
     1092    10052              DESCRIPTION: This entry point calls procedure
     1093    10053                           DFU_WRITE_OBJECT_REFLIST.
     1094    10054        */
     1095    10055
     1096    10056    1   TOU$DFU_TF_WR_OBJECT_REFLIST: ENTRY ALTRET ;

  10056  5 001202   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001203   000140 000000                    ZERO    96,0

     1097    10057
     1098    10058    1      CALL DFU_WRITE_OBJECT_REFLIST (DCBNUM (M$TEMP))

  10058  5 001204   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001205   200136 756100                    STQ     @SYSTEM_ERR+84,,AUTO
         5 001206   200136 630500                    EPPR0   @SYSTEM_ERR+84,,AUTO
         5 001207   200005 450500                    STP0    5,,AUTO
         5 001210   002360 701000 5                  TSX1    DFU_WRITE_OBJECT_REFLIST
         5 001211   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1099    10059    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1100    10060    1      RETURN ;

  10060  5 001212   000000 702200 xent               TSX2  ! X66_ARET

     1101    10061
     1102    10062        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:208  
     1103    10063        /*D*  NAME:        TOU$DFU_TF_WR_LAST_DECK#
     1104    10064              ENTRY:
     1105    10065              AUTHOR:      Scott S. Sheppard
     1106    10066              INTERFACE:   DFU_WRITE_LAST_DECK#
     1107    10067              DESCRIPTION: This entry point calls procedure
     1108    10068                           DFU_WRITE_LAST_DECK#.
     1109    10069        */
     1110    10070
     1111    10071    1   TOU$DFU_TF_WR_LAST_DECK#: ENTRY ALTRET ;

  10071  5 001213   000000 700200 xent  TOU$DFU_TF_* TSX0  ! X66_AUTO_0
         5 001214   000140 000000                    ZERO    96,0

     1112    10072
     1113    10073    1      CALL DFU_WRITE_LAST_DECK# (DCBNUM (M$TEMP))

  10073  5 001215   000000 236007 xsym               LDQ     M$TEMP,DL
         5 001216   200137 756100                    STQ     @SYSTEM_ERR+85,,AUTO
         5 001217   200137 630500                    EPPR0   @SYSTEM_ERR+85,,AUTO
         5 001220   200005 450500                    STP0    5,,AUTO
         5 001221   002411 701000 5                  TSX1    DFU_WRITE_LAST_DECK#
         5 001222   001224 702000 5                  TSX2    TOU$DFU_ALTRETURN

     1114    10074    1              ALTRET (TOU$DFU_ALTRETURN) ;
     1115    10075    1      RETURN ;

  10075  5 001223   000000 702200 xent               TSX2  ! X66_ARET

     1116    10076
     1117    10077        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:209  
     1118    10078        /*D*  NAME:        TOU$DFU_ALTRETURN
     1119    10079              LABEL:
     1120    10080              AUTHOR:      Scott S. Sheppard
     1121    10081              DESCRIPTION: This label is the  alternate return  label  for
     1122    10082                           all of the  entry points into  module  TOU$DFU.
     1123    10083                           Once  control  has  transfered  to this  label,
     1124    10084                           the module altreturns to the calling procedure.
     1125    10085        */
     1126    10086
     1127    10087    1   TOU$DFU_ALTRETURN:
     1128    10088
     1129    10089    1      ALTRETURN ;

  10089  5 001224   000000 702200 xent  TOU$DFU_ALT* TSX2  ! X66_AALT

     1130    10090
     1131    10091        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:210  
     1132    10092        /*I*  NAME:        DFU_READ_MASTER_CONTROL
     1133    10093              AUTHOR:      Scott S. Sheppard
     1134    10094              PURPOSE:     Reads Master Control from the deckfile
     1135    10095              INTERFACE:   M$READ
     1136    10096                           DFU_ERR_MSG
     1137    10097              INPUT:       DCB#        - deckfile or temporary file
     1138    10098                           MASTER_KEY  - local constant 'MASTER_CATALOG'
     1139    10099              OUTPUT:      MASTER_DATA - Symdef for master data
     1140    10100              DESCRIPTION: This procedure reads the master control record. The record
     1141    10101                           contains the   master catalog deck number,   the number of
     1142    10102                           deckfile catalogs, and checksum information.
     1143    10103        */
     1144    10104
     1145    10105    1   DFU_READ_MASTER_CONTROL: PROC (DCB#) ALTRET ;

  10105  5 001225   200004 741300       DFU_READ_MA* STX1  ! 4,,AUTO

     1146    10106
     1147    10107    2      DCL DCB#  UBIN WORD ALIGNED ;
     1148    10108           %MASTER_KEY (STCLASS = CONSTANT) ;
     1149    10121           %MASTER_DATA (STCLASS = "STATIC SYMDEF") ;
     1150    10135           %FPT_READ (FPTN = READ_MASTER_CONTROL,
     1151    10136                      BUF  = MASTER_DATA,
     1152    10137                      KEY  = MASTER_KEY,
     1153    10138                      KEYS = YES,
     1154    10139                      WAIT = YES) ;
     1155    10178
     1156    10179        /* Code */
     1157    10180
     1158    10181    2      READ_MASTER_CONTROL.V.DCB# = DCB# ;

  10181  5 001226   200005 470500                    LDP0    @DCB#,,AUTO
         5 001227   000000 720100                    LXL0    0,,PR0
         5 001230   000012 740000 4                  STX0    READ_MASTER_CONTROL+8

     1159    10182    2      CALL M$READ (READ_MASTER_CONTROL) ALTRET (NO_MASTER_CONTROL) ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:211  
  10182  5 001231   000002 630400 4                  EPPR0   READ_MASTER_CONTROL
         5 001232   440000 713400                    CLIMB   alt,read
         5 001233   401400 401760                    pmme    nvectors=4
         5 001234   001237 702000 5                  TSX2    NO_MASTER_CONTROL

     1160    10183    2      RETURN ;

  10183  5 001235   200004 221300                    LDX1  ! 4,,AUTO
         5 001236   000001 702211                    TSX2  ! 1,X1

     1161    10184
     1162    10185    2   NO_MASTER_CONTROL:
     1163    10186    2      CALL DFU_ERR_MSG (%E$DRMC_NO_MAST_CNTRL, %TRUE) ;

  10186  5 001237   000015 236000 6     NO_MASTER_C* LDQ     13
         5 001240   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001241   000016 236000 6                  LDQ     14
         5 001242   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001243   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001244   000000 011000                    NOP     0

     1164    10187    2      ALTRETURN ;

  10187  5 001245   200004 221300                    LDX1  ! 4,,AUTO
         5 001246   000000 702211                    TSX2  ! 0,X1

     1165    10188
     1166    10189    2   END DFU_READ_MASTER_CONTROL ;
     1167    10190        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:212  
     1168    10191        /*I*  NAME:        DFU_READ_MASTER_ENTRY
     1169    10192              AUTHOR:      Scott S. Sheppard
     1170    10193              PURPOSE:     Reads Master Entry from the deckfile
     1171    10194              INTERFACE:   M$READ
     1172    10195                           DFU_ERR_MSG
     1173    10196                           DCB#
     1174    10197                           MASTER_ENTRY_KEY  - Symdef for key
     1175    10198              OUTPUT:      CATALOG_KEY - redef of CATALOG_KEY
     1176    10199              DESCRIPTION: This procedure reads a master entry.  The master entry key
     1177    10200                           contains a size field (4), the master catalog deck number,
     1178    10201                           and the entry number of the catalog to be read. The record
     1179    10202                           returned is a catalog key of a catalog in the deckfile.
     1180    10203        */
     1181    10204        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:213  
     1182    10205    1   DFU_READ_MASTER_ENTRY: PROC (DCB#) ALTRET ;

  10205  5 001247   200004 741300       DFU_READ_MA* STX1  ! 4,,AUTO

     1183    10206
     1184    10207    2      DCL DCB#  UBIN WORD ALIGNED ;
     1185    10208           %MASTER_ENTRY_KEY (STCLASS = "STATIC SYMDEF") ;
     1186    10222           %CATALOG_KEY (STCLASS = STATIC SYMDEF) ;
     1187    10236           %FPT_READ (FPTN = READ_MASTER_ENTRY,
     1188    10237                      BUF  = CATALOG_KEY,
     1189    10238                      KEY  = MASTER_ENTRY_KEY,
     1190    10239                      KEYS = YES,
     1191    10240                      WAIT = YES) ;
     1192    10279
     1193    10280        /* Code */
     1194    10281
     1195    10282    2      READ_MASTER_ENTRY.V.DCB# = DCB# ;

  10282  5 001250   200005 470500                    LDP0    @DCB#,,AUTO
         5 001251   000000 720100                    LXL0    0,,PR0
         5 001252   000040 740000 4                  STX0    READ_MASTER_ENTRY+8

     1196    10283    2      CALL M$READ (READ_MASTER_ENTRY) ALTRET (NO_MASTER_ENTRY) ;

  10283  5 001253   000030 630400 4                  EPPR0   READ_MASTER_ENTRY
         5 001254   440000 713400                    CLIMB   alt,read
         5 001255   401400 401760                    pmme    nvectors=4
         5 001256   001261 702000 5                  TSX2    NO_MASTER_ENTRY

     1197    10284    2      RETURN ;

  10284  5 001257   200004 221300                    LDX1  ! 4,,AUTO
         5 001260   000001 702211                    TSX2  ! 1,X1

     1198    10285
     1199    10286    2   NO_MASTER_ENTRY:
     1200    10287    2      CALL DFU_ERR_MSG (%E$DRME_NO_MAST_ENTRY, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:214  

  10287  5 001261   000015 236000 6     NO_MASTER_E* LDQ     13
         5 001262   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001263   000020 236000 6                  LDQ     16
         5 001264   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001265   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001266   000000 011000                    NOP     0

     1201    10288    2      ALTRETURN ;

  10288  5 001267   200004 221300                    LDX1  ! 4,,AUTO
         5 001270   000000 702211                    TSX2  ! 0,X1

     1202    10289
     1203    10290    2   END DFU_READ_MASTER_ENTRY ;
     1204    10291        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:215  
     1205    10292        /*I*  NAME:        DFU_READ_CATALOG_CONTROL
     1206    10293              AUTHOR:      Scott S. Sheppard
     1207    10294              PURPOSE:     Reads Catalog Control from the deckfile
     1208    10295              INTERFACE:   M$READ
     1209    10296                           DFU_ERR_MSG
     1210    10297              INPUT:       DCB#      - deckfile or temporary file
     1211    10298                           CATALOG_KEY - Symref filled by DFU_READ_MASTER_ENTRY
     1212    10299              OUTPUT:      CATALOG_DATA- Symdef for catalog data
     1213    10300              DESCRIPTION: This procedure reads a catalog control from the deckfile.
     1214    10301                           The catalog key is a 21 character name and a  2 byte deck
     1215    10302                           number.   The catalog control contains deck number, entry
     1216    10303                           and checksum information.
     1217    10304        */
     1218    10305        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:216  
     1219    10306    1   DFU_READ_CATALOG_CONTROL: PROC (DCB#) ALTRET ;

  10306  5 001271   200004 741300       DFU_READ_CA* STX1  ! 4,,AUTO

     1220    10307
     1221    10308    2      DCL DCB#  UBIN WORD ALIGNED ;
     1222    10309           %CATALOG_KEY (STCLASS = SYMREF) ;
     1223    10323           %CATALOG_DATA (STCLASS = "STATIC SYMDEF") ;
     1224    10337           %FPT_READ (FPTN = READ_CATALOG_CONTROL,
     1225    10338                      BUF  = CATALOG_DATA,
     1226    10339                      KEY  = CATALOG_KEY,
     1227    10340                      KEYS = YES,
     1228    10341                      WAIT = YES) ;
     1229    10380
     1230    10381        /* Code */
     1231    10382
     1232    10383    2      READ_CATALOG_CONTROL.V.DCB# = DCB# ;

  10383  5 001272   200005 470500                    LDP0    @DCB#,,AUTO
         5 001273   000000 720100                    LXL0    0,,PR0
         5 001274   000060 740000 4                  STX0    READ_CATALOG_CONTROL+8

     1233    10384    2      CALL M$READ (READ_CATALOG_CONTROL) ALTRET (NO_CATALOG_CONTROL) ;

  10384  5 001275   000050 630400 4                  EPPR0   READ_CATALOG_CONTROL
         5 001276   440000 713400                    CLIMB   alt,read
         5 001277   401400 401760                    pmme    nvectors=4
         5 001300   001303 702000 5                  TSX2    NO_CATALOG_CONTROL

     1234    10385    2      RETURN ;

  10385  5 001301   200004 221300                    LDX1  ! 4,,AUTO
         5 001302   000001 702211                    TSX2  ! 1,X1

     1235    10386
     1236    10387    2   NO_CATALOG_CONTROL:
     1237    10388    2      CALL DFU_ERR_MSG (%E$DRCC_NO_CAT_CNTRL, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:217  

  10388  5 001303   000015 236000 6     NO_CATALOG_* LDQ     13
         5 001304   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001305   000022 236000 6                  LDQ     18
         5 001306   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001307   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001310   000000 011000                    NOP     0

     1238    10389    2      ALTRETURN ;

  10389  5 001311   200004 221300                    LDX1  ! 4,,AUTO
         5 001312   000000 702211                    TSX2  ! 0,X1

     1239    10390
     1240    10391    2   END DFU_READ_CATALOG_CONTROL ;
     1241    10392        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:218  
     1242    10393        /*I*  NAME:        DFU_READ_SUBCATALOG
     1243    10394              AUTHOR:      Scott S. Sheppard
     1244    10395              PURPOSE:     Reads Subcatalog from the deckfile
     1245    10396              INTERFACE:   M$READ
     1246    10397                           DFU_ERR_MSG
     1247    10398              INPUT:       DCB#      - deckfile or temporary file
     1248    10399                           SUBCATALOG_KEY - Symdef for catalog key
     1249    10400              OUTPUT:      SUBCATALOG_DATA- Symdef for catalog data
     1250    10401              DESCRIPTION: This procedure reads the IFAD file identifier and
     1251    10402                           IFAD file number for a catalog from the deckfile.
     1252    10403                           The key used contains the  size (set to 4),   the
     1253    10404                           deck number of the catalog, and a zero   (for the
     1254    10405                           zeroeth entry in the catalog).The record returned
     1255    10406                           contains a 40 character file id  and  a  3  digit
     1256    10407                           file number.
     1257    10408                           The file identifier and number are from the  IFAD
     1258    10409                           source used to place the catalog in the deckfile.
     1259    10410        */
     1260    10411        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:219  
     1261    10412    1   DFU_READ_SUBCATALOG: PROC (DCB#) ALTRET ;

  10412  5 001313   200004 741300       DFU_READ_SU* STX1  ! 4,,AUTO

     1262    10413
     1263    10414    2      DCL DCB#  UBIN WORD ALIGNED ;
     1264    10415           %SUBCATALOG_KEY (STCLASS = "STATIC SYMDEF") ;
     1265    10429           %SUBCATALOG_DATA (STCLASS = "STATIC SYMDEF") ;
     1266    10442           %FPT_READ (FPTN = READ_SUBCATALOG,
     1267    10443                      BUF  = SUBCATALOG_DATA,
     1268    10444                      KEY  = SUBCATALOG_KEY,
     1269    10445                      KEYS = YES,
     1270    10446                      WAIT = YES) ;
     1271    10485
     1272    10486        /* Code */
     1273    10487
     1274    10488    2      READ_SUBCATALOG.V.DCB# = DCB# ;

  10488  5 001314   200005 470500                    LDP0    @DCB#,,AUTO
         5 001315   000000 720100                    LXL0    0,,PR0
         5 001316   000116 740000 4                  STX0    READ_SUBCATALOG+8

     1275    10489    2      CALL M$READ (READ_SUBCATALOG) ALTRET (NO_SUBCATALOG) ;

  10489  5 001317   000106 630400 4                  EPPR0   READ_SUBCATALOG
         5 001320   440000 713400                    CLIMB   alt,read
         5 001321   401400 401760                    pmme    nvectors=4
         5 001322   001325 702000 5                  TSX2    NO_SUBCATALOG

     1276    10490    2      RETURN ;

  10490  5 001323   200004 221300                    LDX1  ! 4,,AUTO
         5 001324   000001 702211                    TSX2  ! 1,X1

     1277    10491
     1278    10492    2   NO_SUBCATALOG:
     1279    10493    2      CALL DFU_ERR_MSG (%E$DRS_NO_SUBCAT, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:220  

  10493  5 001325   000015 236000 6     NO_SUBCATAL* LDQ     13
         5 001326   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001327   000024 236000 6                  LDQ     20
         5 001330   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001331   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001332   000000 011000                    NOP     0

     1280    10494    2      ALTRETURN ;

  10494  5 001333   200004 221300                    LDX1  ! 4,,AUTO
         5 001334   000000 702211                    TSX2  ! 0,X1

     1281    10495
     1282    10496    2   END DFU_READ_SUBCATALOG ;
     1283    10497        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:221  
     1284    10498        /*I*  NAME:        DFU_READ_CATALOG_ENTRY
     1285    10499              AUTHOR:      Scott S. Sheppard
     1286    10500              PURPOSE:     Reads Catalog Entry from the deckfile
     1287    10501              INTERFACE:   M$READ
     1288    10502                           DFU_ERR_MSG
     1289    10503              INPUT:       DCB#      - deckfile or temporary file
     1290    10504                           CATALOG_ENTRY_KEY  - Symdef for catalog entry key
     1291    10505              OUTPUT:      OBJECT_KEY         - Symdef for object key
     1292    10506              DESCRIPTION: This procedure reads a catalog entry. The catalog entry key
     1293    10507                           contains the deck number of the catalog and the entry
     1294    10508                           number desired. The record returned is an object key.
     1295    10509        */
     1296    10510
     1297    10511    1   DFU_READ_CATALOG_ENTRY: PROC (DCB#) ALTRET ;

  10511  5 001335   200004 741300       DFU_READ_CA* STX1  ! 4,,AUTO

     1298    10512
     1299    10513    2      DCL DCB#  UBIN WORD ALIGNED ;
     1300    10514           %CATALOG_ENTRY_KEY (STCLASS = "STATIC SYMDEF") ;
     1301    10528           %OBJECT_KEY (STCLASS = "STATIC SYMDEF") ;
     1302    10541           %FPT_READ (FPTN = READ_CATALOG_ENTRY,
     1303    10542                      BUF  = OBJECT_KEY,
     1304    10543                      KEY  = CATALOG_ENTRY_KEY,
     1305    10544                      KEYS = YES,
     1306    10545                      WAIT = YES) ;
     1307    10584
     1308    10585        /* Code */
     1309    10586
     1310    10587    2      READ_CATALOG_ENTRY.V.DCB# = DCB# ;

  10587  5 001336   200005 470500                    LDP0    @DCB#,,AUTO
         5 001337   000000 720100                    LXL0    0,,PR0
         5 001340   000144 740000 4                  STX0    READ_CATALOG_ENTRY+8

     1311    10588    2      CALL M$READ (READ_CATALOG_ENTRY) ALTRET (NO_CATALOG_ENTRY) ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:222  
  10588  5 001341   000134 630400 4                  EPPR0   READ_CATALOG_ENTRY
         5 001342   440000 713400                    CLIMB   alt,read
         5 001343   401400 401760                    pmme    nvectors=4
         5 001344   001347 702000 5                  TSX2    NO_CATALOG_ENTRY

     1312    10589    2      RETURN ;

  10589  5 001345   200004 221300                    LDX1  ! 4,,AUTO
         5 001346   000001 702211                    TSX2  ! 1,X1

     1313    10590
     1314    10591    2   NO_CATALOG_ENTRY:
     1315    10592    2      CALL DFU_ERR_MSG (%E$DRCE_NO_CAT_ENTRY, %TRUE) ;

  10592  5 001347   000015 236000 6     NO_CATALOG_* LDQ     13
         5 001350   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001351   000026 236000 6                  LDQ     22
         5 001352   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001353   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001354   000000 011000                    NOP     0

     1316    10593    2      ALTRETURN ;

  10593  5 001355   200004 221300                    LDX1  ! 4,,AUTO
         5 001356   000000 702211                    TSX2  ! 0,X1

     1317    10594
     1318    10595    2   END DFU_READ_CATALOG_ENTRY ;
     1319    10596        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:223  
     1320    10597        /*I*  NAME:        DFU_READ_OBJECT
     1321    10598              AUTHOR:      Scott S. Sheppard
     1322    10599              PURPOSE:     Reads Object Card from the deckfile
     1323    10600              INTERFACE:   M$READ
     1324    10601                           DFU_ERR_MSG
     1325    10602              INPUT:       DCB#      - deckfile or temporary file
     1326    10603                           OBJECT_KEY - Symref for object key
     1327    10604              OUTPUT:      OBJECT     - Symdef for $OBJECT card
     1328    10605              DESCRIPTION: This procedure reads an object card from the
     1329    10606                           deckfile. The key used contains a size field
     1330    10607                           (set to 23) and a 23 character descriptor of
     1331    10608                           the  object module (test page)   to be read.
     1332    10609                           The $OBJECT card returned contains the  deck
     1333    10610                           of the object code for the test page as well
     1334    10611                           other descriptive information. After a read,
     1335    10612                           the data is checked to ensure that a $OBJECT
     1336    10613                           card was found.
     1337    10614        */
     1338    10615        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:224  
     1339    10616    1   DFU_READ_OBJECT: PROC (DCB#) ALTRET ;

  10616  5 001357   200004 741300       DFU_READ_OB* STX1  ! 4,,AUTO

     1340    10617
     1341    10618    2      DCL DCB#  UBIN WORD ALIGNED ;
     1342    10619           %OBJECT_KEY (STCLASS = SYMREF) ;
     1343    10632           %OBJECT (STCLASS = "STATIC SYMDEF") ;
     1344    10695           %FPT_READ (FPTN = READ_OBJECT,
     1345    10696                      BUF  = OBJECT,
     1346    10697                      KEY  = OBJECT_KEY,
     1347    10698                      KEYS = YES,
     1348    10699                      WAIT = YES) ;
     1349    10738
     1350    10739        /* Code */
     1351    10740
     1352    10741    2      READ_OBJECT.V.DCB# = DCB# ;

  10741  5 001360   200005 470500                    LDP0    @DCB#,,AUTO
         5 001361   000000 720100                    LXL0    0,,PR0
         5 001362   000212 740000 4                  STX0    READ_OBJECT+8

     1353    10742    2      CALL M$READ (READ_OBJECT) ALTRET (NO_OBJECT) ;

  10742  5 001363   000202 630400 4                  EPPR0   READ_OBJECT
         5 001364   440000 713400                    CLIMB   alt,read
         5 001365   401400 401760                    pmme    nvectors=4
         5 001366   001405 702000 5                  TSX2    NO_OBJECT

     1354    10743    2      IF OBJECT.BCD.TYPE = 'OBJECT'

  10743  5 001367   040000 106400                    CMPC    fill='040'O
         5 001370   000153 600010 4                  ADSC9   OBJECT+1                 cn=3,n=8
         5 001371   000032 000006 3                  ADSC9   REVISION_KEY+3           cn=0,n=6
         5 001372   001375 601000 5                  TNZ     s:10746

     1355    10744    2      THEN RETURN ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:225  

  10744  5 001373   200004 221300                    LDX1  ! 4,,AUTO
         5 001374   000001 702211                    TSX2  ! 1,X1

     1356    10745    3      ELSE DO ;

     1357    10746    3              CALL DFU_ERR_MSG (%E$DRO_DECK_NO_OBJECT, %FALSE) ;

  10746  5 001375   000030 236000 6                  LDQ     24
         5 001376   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001377   000031 236000 6                  LDQ     25
         5 001400   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001401   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001402   000000 011000                    NOP     0

     1358    10747    3              ALTRETURN ;

  10747  5 001403   200004 221300                    LDX1  ! 4,,AUTO
         5 001404   000000 702211                    TSX2  ! 0,X1

     1359    10748    3           END /* ELSE */ ;
     1360    10749
     1361    10750    2   NO_OBJECT:
     1362    10751    2      CALL DFU_ERR_MSG (%E$DRO_NO_OBJECT, %TRUE) ;

  10751  5 001405   000015 236000 6     NO_OBJECT    LDQ     13
         5 001406   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001407   000033 236000 6                  LDQ     27
         5 001410   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001411   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001412   000000 011000                    NOP     0

     1363    10752    2      ALTRETURN ;

  10752  5 001413   200004 221300                    LDX1  ! 4,,AUTO
         5 001414   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:226  
     1364    10753
     1365    10754    2   END DFU_READ_OBJECT ;
     1366    10755        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:227  
     1367    10756        /*I*  NAME:        DFU_READ_BINARY
     1368    10757              AUTHOR:      Scott S. Sheppard
     1369    10758              PURPOSE:     Gets Binary Deck from the deckfile
     1370    10759             INTERFACE:    M$READ Monitor Service
     1371    10760                           DFU_ERR_MSG
     1372    10761             PARAMETERS:   DCB# - input
     1373    10762                           BUF_V - vector to the target area
     1374    10763             DATA:         BINARY_KEY - input
     1375    10764             DESCRIPTION:  This  procedure reads  a binary  record from a
     1376    10765                           deckfile  or a  temporary file  as dictated by
     1377    10766                           the DCB number passed. The binary image may be
     1378    10767                           an IFAD binary image, MCA diskette file, or an
     1379    10768                           MCA  diskette  directory.  The  results of the
     1380    10769                           read  will be  placed in  the buffer framed by
     1381    10770                           the   BUF_V  parameter.  If   any  errors  are
     1382    10771                           encountered, the procedure will print an error
     1383    10772                           message and ALTRETURN.
     1384    10773        */
     1385    10774        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:228  
     1386    10775    1   DFU_READ_BINARY: PROC (DCB#, BUF_V) ALTRET ;

  10775  5 001415   200004 741300       DFU_READ_BI* STX1  ! 4,,AUTO

     1387    10776
     1388    10777    2      DCL DCB#  UBIN WORD ALIGNED ;
     1389    10778    2      DCL BUF_V BIT (72) ALIGNED ;
     1390    10779           %BINARY_KEY (STCLASS = SYMREF) ;
     1391    10793           %FPT_READ (FPTN = READ_BINARY_DECK,
     1392    10794                      KEY  = BINARY_KEY,
     1393    10795                      KEYS = YES,
     1394    10796                      WAIT = YES) ;
     1395    10835
     1396    10836        /* Code */
     1397    10837
     1398    10838    2      READ_BINARY_DECK.V.DCB# = DCB# ;

  10838  5 001416   200005 470500                    LDP0    @DCB#,,AUTO
         5 001417   000000 720100                    LXL0    0,,PR0
         5 001420   000230 740000 4                  STX0    READ_BINARY_DECK+8

     1399    10839    2      READ_BINARY_DECK.BUF_ = BUF_V ;

  10839  5 001421   200006 471500                    LDP1    @BUF_V,,AUTO
         5 001422   000000 100500                    MLR     fill='000'O
         5 001423   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         5 001424   000224 000010 4                  ADSC9   READ_BINARY_DECK+4       cn=0,n=8

     1400    10840    2      CALL M$READ (READ_BINARY_DECK) ALTRET (BAD_BINARY) ;

  10840  5 001425   000220 630400 4                  EPPR0   READ_BINARY_DECK
         5 001426   440000 713400                    CLIMB   alt,read
         5 001427   401400 401760                    pmme    nvectors=4
         5 001430   001433 702000 5                  TSX2    BAD_BINARY

     1401    10841    2      RETURN ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:229  
  10841  5 001431   200004 221300                    LDX1  ! 4,,AUTO
         5 001432   000001 702211                    TSX2  ! 1,X1

     1402    10842
     1403    10843    2   BAD_BINARY:
     1404    10844    2      CALL DFU_ERR_MSG (%E$DRB_BAD_BINARY, %TRUE) ;

  10844  5 001433   000015 236000 6     BAD_BINARY   LDQ     13
         5 001434   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001435   000035 236000 6                  LDQ     29
         5 001436   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001437   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001440   000000 011000                    NOP     0

     1405    10845    2      ALTRETURN ;

  10845  5 001441   200004 221300                    LDX1  ! 4,,AUTO
         5 001442   000000 702211                    TSX2  ! 0,X1

     1406    10846
     1407    10847    2   END DFU_READ_BINARY ;
     1408    10848        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:230  
     1409    10849        /*I*  NAME:        DFU_READ_BCD_CARDS
     1410    10850              AUTHOR:      Scott S. Sheppard
     1411    10851              PURPOSE:     Reads BCD Cards from the deckfile
     1412    10852              INTERFACE:   M$READ
     1413    10853                           DFU_ERR_MSG
     1414    10854              INPUT:       DCB#      - deckfile or temporary file
     1415    10855                           BCD#    - Number of BCD cards
     1416    10856                           BCD_KEY - Symdef for BCD key
     1417    10857              OUTPUT:      BCD_B   - array of BCD cards
     1418    10858              DESCRIPTION: This procedure reads all patch cards and the
     1419    10859                           $DKEND card for a desired test page. The key
     1420    10860                           used contains a size field (set= 4) the deck
     1421    10861                           number of the test page, and the entry numb.
     1422    10862                           The entry number ranges from 0 to n,   where
     1423    10863                           the nTH entry is the $DKEND card.
     1424    10864        */
     1425    10865
     1426    10866    1   DFU_READ_BCD_CARDS: PROC (DCB#) ALTRET ;

  10866  5 001443   200004 741300       DFU_READ_BC* STX1  ! 4,,AUTO

     1427    10867
     1428    10868    2      DCL DCB#                       UBIN WORD ALIGNED ;
     1429    10869           %BCD_KEY (STCLASS = "STATIC SYMDEF") ;
     1430    10883    2      DCL CUR#                       UBIN WORD SYMREF ALIGNED ;
     1431    10884    2      DCL BCD#                       UBIN WORD SYMREF ALIGNED ;
     1432    10885           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
     1433    10897           %FPT_READ (FPTN = READ_BCD_CARD,
     1434    10898                      KEY  = BCD_KEY,
     1435    10899                      KEYS = YES,
     1436    10900                      WAIT = YES) ;
     1437    10939           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:231  
     1438    10940        /* Code */
     1439    10941
     1440    10942    2      READ_BCD_CARD.V.DCB# = DCB# ;

  10942  5 001444   200005 470500                    LDP0    @DCB#,,AUTO
         5 001445   000000 720100                    LXL0    0,,PR0
         5 001446   000250 740000 4                  STX0    READ_BCD_CARD+8

     1441    10943    3      DO CUR# = 1 TO BCD# ;

  10943  5 001447   000001 235007                    LDA     1,DL
         5 001450   000000 755000 xsym               STA     CUR#
         5 001451   001474 710000 5                  TRA     s:10947+3

     1442    10944    3         BCD_KEY.CARD# = CUR# ;

  10944  5 001452   000000 101400                    MRL     fill='000'O
         5 001453   000000 000004 xsym               ADSC9   CUR#                     cn=0,n=4
         5 001454   000236 600002 4                  ADSC9   BCD_KEY                  cn=3,n=2

     1443    10945    3         READ_BCD_CARD.BUF_ = VECTOR (BCD_B(CUR#-1)) ;

  10945  5 001455   000036 235000 6                  LDA     30
         5 001456   000000 236000 xsym               LDQ     CUR#
         5 001457   200014 755100                    STA     @SYSTEM_ERR+2,,AUTO
         5 001460   000025 402003                    MPY     21,DU
         5 001461   000025 136003                    SBLQ    21,DU
         5 001462   000103 036000 xsym               ADLQ    DUP+67
         5 001463   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 001464   000244 757000 4                  STAQ    READ_BCD_CARD+4

     1444    10946    3         CALL M$READ (READ_BCD_CARD) ALTRET (BAD_DECK) ;

  10946  5 001465   000240 630400 4                  EPPR0   READ_BCD_CARD
         5 001466   440000 713400                    CLIMB   alt,read
         5 001467   401400 401760                    pmme    nvectors=4
         5 001470   001517 702000 5                  TSX2    BAD_DECK
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:232  

     1445    10947    3      END /* DO */ ;

  10947  5 001471   000000 235000 xsym               LDA     CUR#
         5 001472   000001 035007                    ADLA    1,DL
         5 001473   000000 755000 xsym               STA     CUR#
         5 001474   000000 236000 xsym               LDQ     BCD#
         5 001475   000000 116000 xsym               CMPQ    CUR#
         5 001476   001452 603000 5                  TRC     s:10944

     1446    10948    2      IF SUBSTR (BCD_B(BCD#-1), 7, 5) = 'DKEND'

  10948  5 001477   000124 402007                    MPY     84,DL
         5 001500   000103 470400 xsym               LDP0    DUP+67
         5 001501   040000 106506                    CMPC    fill='040'O
         5 001502   077754 600005                    ADSC9   -20,Q,PR0                cn=3,n=5
         5 001503   000034 000005 3                  ADSC9   REVISION_KEY+5           cn=0,n=5
         5 001504   001507 601000 5                  TNZ     s:10951

     1447    10949    2      THEN RETURN ;

  10949  5 001505   200004 221300                    LDX1  ! 4,,AUTO
         5 001506   000001 702211                    TSX2  ! 1,X1

     1448    10950    3      ELSE DO ;

     1449    10951    3              CALL DFU_ERR_MSG (%E$DRBC_BAD_DECK, %FALSE) ;

  10951  5 001507   000030 236000 6                  LDQ     24
         5 001510   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001511   000040 236000 6                  LDQ     32
         5 001512   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001513   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001514   000000 011000                    NOP     0

     1450    10952    3              ALTRETURN ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:233  
  10952  5 001515   200004 221300                    LDX1  ! 4,,AUTO
         5 001516   000000 702211                    TSX2  ! 0,X1

     1451    10953    3           END /* ELSE */ ;
     1452    10954
     1453    10955    2   BAD_DECK:
     1454    10956    2      CALL DFU_ERR_MSG (%E$DRBC_NO_BCD_CARDS, %TRUE) ;

  10956  5 001517   000015 236000 6     BAD_DECK     LDQ     13
         5 001520   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001521   000042 236000 6                  LDQ     34
         5 001522   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001523   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001524   000000 011000                    NOP     0

     1455    10957    2      ALTRETURN ;

  10957  5 001525   200004 221300                    LDX1  ! 4,,AUTO
         5 001526   000000 702211                    TSX2  ! 0,X1

     1456    10958
     1457    10959    2   END DFU_READ_BCD_CARDS ;
     1458    10960        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:234  
     1459    10961        /*I*  NAME:        DFU_READ_OBJECT_REFLIST
     1460    10962              AUTHOR:      Scott S. Sheppard
     1461    10963              PURPOSE:     Reads Object Reference List from the deckfile
     1462    10964              INTERFACE:   M$READ
     1463    10965                           DFU_ERR_MSG
     1464    10966              INPUT:       DCB#      - deckfile or temporary file
     1465    10967                           OBJECT_REFLIST_KEY - Symdef for object ref. list
     1466    10968              OUTPUT:      OBJECT_REFLIST_DATA- Symdef for object ref. list
     1467    10969              DESCRIPTION: This  procedure  reads the  object reference list
     1468    10970                           for an object deck from the deckfile.
     1469    10971                           The key is based on the deck number and is always
     1470    10972                           the 201st entry.
     1471    10973                           The information returned  includes  the number of
     1472    10974                           times the deck is referenced and the master entry
     1473    10975                           numb. of the catalog and its entry in the catalog
     1474    10976                           Example: 3 1 1 2 1 5 7
     1475    10977                              3 references
     1476    10978                              Master Entry 1   (First Catalog in Deckfile)
     1477    10979                              Catalog Entry 1  (First Deck in the Catalog)
     1478    10980                              Master Entry 2   (Second Catalog in Deckfile)
     1479    10981                              Catalog Entry 1  (First Deck in the Catalog)
     1480    10982                              Master Entry 5   (Fifth Catalog in the Deckfile)
     1481    10983                              Catalog Entry 7  (Seventh Deck in the Catalog)
     1482    10984        */
     1483    10985        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:235  
     1484    10986    1   DFU_READ_OBJECT_REFLIST: PROC (DCB#) ALTRET ;

  10986  5 001527   200004 741300       DFU_READ_OB* STX1  ! 4,,AUTO

     1485    10987
     1486    10988    2      DCL DCB#  UBIN WORD ALIGNED ;
     1487    10989           %OBJECT_REFLIST_KEY (STCLASS = "STATIC SYMDEF") ;
     1488    11003           %OBJECT_REFLIST_DATA (STCLASS = "STATIC SYMDEF") ;
     1489    11018           %FPT_READ (FPTN = READ_OBJECT_REFLIST,
     1490    11019                      BUF  = OBJECT_REFLIST_DATA,
     1491    11020                      KEY  = OBJECT_REFLIST_KEY,
     1492    11021                      KEYS = YES,
     1493    11022                      WAIT = YES) ;
     1494    11061
     1495    11062        /* Code */
     1496    11063
     1497    11064    2      READ_OBJECT_REFLIST.V.DCB# = DCB# ;

  11064  5 001530   200005 470500                    LDP0    @DCB#,,AUTO
         5 001531   000000 720100                    LXL0    0,,PR0
         5 001532   000310 740000 4                  STX0    READ_OBJECT_REFLIST+8

     1498    11065    2      CALL M$READ (READ_OBJECT_REFLIST) ALTRET (NO_OBJECT_REFLIST) ;

  11065  5 001533   000300 630400 4                  EPPR0   READ_OBJECT_REFLIST
         5 001534   440000 713400                    CLIMB   alt,read
         5 001535   401400 401760                    pmme    nvectors=4
         5 001536   001541 702000 5                  TSX2    NO_OBJECT_REFLIST

     1499    11066    2      RETURN ;

  11066  5 001537   200004 221300                    LDX1  ! 4,,AUTO
         5 001540   000001 702211                    TSX2  ! 1,X1

     1500    11067
     1501    11068    2   NO_OBJECT_REFLIST:
     1502    11069    2      CALL DFU_ERR_MSG (%E$DROR_NO_REFLST, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:236  

  11069  5 001541   000015 236000 6     NO_OBJECT_R* LDQ     13
         5 001542   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001543   000044 236000 6                  LDQ     36
         5 001544   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001545   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001546   000000 011000                    NOP     0

     1503    11070    2      ALTRETURN ;

  11070  5 001547   200004 221300                    LDX1  ! 4,,AUTO
         5 001550   000000 702211                    TSX2  ! 0,X1

     1504    11071
     1505    11072    2   END DFU_READ_OBJECT_REFLIST ;
     1506    11073        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:237  
     1507    11074        /*I*  NAME:        DFU_READ_LAST_DECK#
     1508    11075              AUTHOR:      Scott S. Sheppard
     1509    11076              PURPOSE:     Reads Last Deck Number from the deckfile
     1510    11077              INTERFACE:   M$READ
     1511    11078                           DFU_ERR_MSG
     1512    11079              INPUT:       DCB#      - deckfile or temporary file
     1513    11080                           LAST_DECK_KEY - local constant 'LAST_DECK'
     1514    11081              OUTPUT:      LAST          - Symdef of last deck number
     1515    11082              DESCRIPTION: This procedure reads the last deck num. from the
     1516    11083                           deckfile. The last deck number record, keyed  by
     1517    11084                           the string 'LAST_DECK',  is  the  largest   deck
     1518    11085                           number in the deckfile.
     1519    11086        */
     1520    11087
     1521    11088    1   DFU_READ_LAST_DECK#: PROC (DCB#) ALTRET ;

  11088  5 001551   200004 741300       DFU_READ_LA* STX1  ! 4,,AUTO

     1522    11089
     1523    11090    2      DCL DCB#  UBIN WORD ALIGNED ;
     1524    11091           %LAST_DECK_KEY (STCLASS = CONSTANT) ;
     1525    11104           %LAST (STCLASS = "STATIC SYMDEF") ;
     1526    11117           %FPT_READ  (FPTN = READ_LAST_DECK#,
     1527    11118                       BUF  = LAST,
     1528    11119                       KEY  = LAST_DECK_KEY,
     1529    11120                       KEYS = YES,
     1530    11121                       WAIT = YES) ;
     1531    11160
     1532    11161        /* Code */
     1533    11162
     1534    11163    2      READ_LAST_DECK#.V.DCB# = DCB# ;

  11163  5 001552   200005 470500                    LDP0    @DCB#,,AUTO
         5 001553   000000 720100                    LXL0    0,,PR0
         5 001554   000330 740000 4                  STX0    READ_LAST_DECK#+8

     1535    11164    2      CALL M$READ (READ_LAST_DECK#) ALTRET (NO_LAST_DECK#) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:238  

  11164  5 001555   000320 630400 4                  EPPR0   READ_LAST_DECK#
         5 001556   440000 713400                    CLIMB   alt,read
         5 001557   401400 401760                    pmme    nvectors=4
         5 001560   001563 702000 5                  TSX2    NO_LAST_DECK#

     1536    11165    2      RETURN ;

  11165  5 001561   200004 221300                    LDX1  ! 4,,AUTO
         5 001562   000001 702211                    TSX2  ! 1,X1

     1537    11166
     1538    11167    2   NO_LAST_DECK#:
     1539    11168    2      CALL DFU_ERR_MSG (%E$DRLD_NO_LAST_DECK#, %TRUE) ;

  11168  5 001563   000015 236000 6     NO_LAST_DEC* LDQ     13
         5 001564   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001565   000046 236000 6                  LDQ     38
         5 001566   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001567   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001570   000000 011000                    NOP     0

     1540    11169    2      ALTRETURN ;

  11169  5 001571   200004 221300                    LDX1  ! 4,,AUTO
         5 001572   000000 702211                    TSX2  ! 0,X1

     1541    11170
     1542    11171    2   END DFU_READ_LAST_DECK# ;
     1543    11172        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:239  
     1544    11173        /*I*  NAME:        DFU_READ_LOG
     1545    11174              AUTHOR:      Scott S. Sheppard
     1546    11175              PURPOSE:     Reads Deckfile Status from the deckfile
     1547    11176              INTERFACE:   M$READ
     1548    11177                           DFU_ERR_MSG
     1549    11178              INPUT:       LOG_KEY - local constant
     1550    11179                           DUP.LOG_V - vector to the buffer
     1551    11180              OUTPUT:      Deckfile history log read from the deckfile
     1552    11181              DESCRIPTION: This procedure reads the deckfile history log
     1553    11182                           from the deckfile.
     1554    11183        */
     1555    11184
     1556    11185    1   DFU_READ_LOG: PROC ALTRET ;

  11185  5 001573   200004 741300       DFU_READ_LOG STX1  ! 4,,AUTO

     1557    11186
     1558    11187           %LOG_KEY (STCLASS = CONSTANT) ;
     1559    11200           %FPT_READ  (FPTN = READ_DECKFILE_LOG,
     1560    11201                       DCB  = M$DECKFILE,
     1561    11202                       KEY  = LOG_KEY,
     1562    11203                       KEYS = YES,
     1563    11204                       WAIT = YES) ;
     1564    11243
     1565    11244        /* Code */
     1566    11245
     1567    11246    2      READ_DECKFILE_LOG.BUF_ = DUP.LOG_V ;

  11246  5 001574   000136 237000 xsym               LDAQ    DUP+94
         5 001575   000342 757000 4                  STAQ    READ_DECKFILE_LOG+4

     1568    11247    2      CALL M$READ (READ_DECKFILE_LOG) ALTRET (NO_LOG) ;

  11247  5 001576   000336 630400 4                  EPPR0   READ_DECKFILE_LOG
         5 001577   440000 713400                    CLIMB   alt,read
         5 001600   401400 401760                    pmme    nvectors=4
         5 001601   001604 702000 5                  TSX2    NO_LOG
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:240  

     1569    11248    2      RETURN ;

  11248  5 001602   200004 221300                    LDX1  ! 4,,AUTO
         5 001603   000001 702211                    TSX2  ! 1,X1

     1570    11249
     1571    11250    2   NO_LOG:
     1572    11251    2      CALL DFU_ERR_MSG (%E$DRD_NO_LOG, %TRUE) ;

  11251  5 001604   000015 236000 6     NO_LOG       LDQ     13
         5 001605   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001606   000050 236000 6                  LDQ     40
         5 001607   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001610   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001611   000000 011000                    NOP     0

     1573    11252    2      ALTRETURN ;

  11252  5 001612   200004 221300                    LDX1  ! 4,,AUTO
         5 001613   000000 702211                    TSX2  ! 0,X1

     1574    11253
     1575    11254    2   END DFU_READ_LOG ;
     1576    11255        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:241  
     1577    11256        /*I*  NAME:        DFU_READ_REVISION
     1578    11257              AUTHOR:      Scott S. Sheppard
     1579    11258              PURPOSE:     Reads IFAD Revision from the deckfile
     1580    11259              INTERFACE:   M$READ
     1581    11260                           DFU_ERR_MSG
     1582    11261              INPUT:       REVISION_KEY - local constant
     1583    11262              OUTPUT:      REVISION_B
     1584    11263              DESCRIPTION: This procedure reads the IFAD revision buffer
     1585    11264                           from the deckfile.
     1586    11265        */
     1587    11266
     1588    11267    1   DFU_READ_REVISION: PROC ALTRET ;

  11267  5 001614   200004 741300       DFU_READ_RE* STX1  ! 4,,AUTO

     1589    11268
     1590    11269           %REVISION_KEY (STCLASS = CONSTANT) ;
     1591    11282           %REVISION_B (STCLASS = "STATIC SYMDEF") ;
     1592    11303           %FPT_READ  (FPTN = READ_DECKFILE_REVISION,
     1593    11304                       BUF  = REVISION_B,
     1594    11305                       DCB  = M$DECKFILE,
     1595    11306                       KEY  = REVISION_KEY,
     1596    11307                       KEYS = YES,
     1597    11308                       WAIT = YES) ;
     1598    11347
     1599    11348        /* Code */
     1600    11349
     1601    11350    2      CALL M$READ (READ_DECKFILE_REVISION) ALTRET (NO_REVISION) ;

  11350  5 001615   000362 630400 4                  EPPR0   READ_DECKFILE_REVISION
         5 001616   440000 713400                    CLIMB   alt,read
         5 001617   401400 401760                    pmme    nvectors=4
         5 001620   001623 702000 5                  TSX2    NO_REVISION

     1602    11351    2      RETURN ;

  11351  5 001621   200004 221300                    LDX1  ! 4,,AUTO
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:242  
         5 001622   000001 702211                    TSX2  ! 1,X1

     1603    11352
     1604    11353    2   NO_REVISION:
     1605    11354    2      CALL DFU_ERR_MSG (%E$DRR_NO_REVISION, %TRUE) ;

  11354  5 001623   000015 236000 6     NO_REVISION  LDQ     13
         5 001624   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001625   000052 236000 6                  LDQ     42
         5 001626   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001627   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001630   000000 011000                    NOP     0

     1606    11355    2      ALTRETURN ;

  11355  5 001631   200004 221300                    LDX1  ! 4,,AUTO
         5 001632   000000 702211                    TSX2  ! 0,X1

     1607    11356
     1608    11357    2   END DFU_READ_REVISION ;
     1609    11358        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:243  
     1610    11359        /*I*  NAME:        DFU_CHECK_ALREADY_SAVED
     1611    11360              AUTHOR:      Scott S. Sheppard
     1612    11361              PURPOSE:     Checks For Object Deck in Deckfile
     1613    11362              INTERFACE:   M$READ
     1614    11363                           DFU_ERR_MSG
     1615    11364              INPUT:       OBJECT_KEY - Symref for object key
     1616    11365                           OBJECT - current $Object Card
     1617    11366              OUTPUT:      OLD_OBJECT - temporary $OBJECT card
     1618    11367                           OBJECT - if already saved:
     1619    11368                                    deck number and title date changed
     1620    11369              DESCRIPTION: This procedure reads an object card from the
     1621    11370                           deckfile.This is done to determine if a deck
     1622    11371                           is already stored  in the deckfile.   If the
     1623    11372                           deck is stored, the $OBJECT cards of the old
     1624    11373                           and new are compared to check  for a  match.
     1625    11374                           If the cards match, the procedure altreturns
     1626    11375                           which implies that the deck does not need to
     1627    11376                           be added. If the procedure returns, no  card
     1628    11377                           was found in the deckfile  corresponding  to
     1629    11378                           the deck pending addition.
     1630    11379        */
     1631    11380        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:244  
     1632    11381    1   DFU_CHECK_ALREADY_SAVED: PROC ALTRET ;

  11381  5 001633   200004 741300       DFU_CHECK_A* STX1  ! 4,,AUTO

     1633    11382
     1634    11383           %OBJECT_KEY (STCLASS = SYMREF) ;
     1635    11396           %OBJECT (NAME    = OLD_OBJECT,
     1636    11397                    STCLASS = STATIC) ;
     1637    11460           %OBJECT (STCLASS = SYMREF) ;
     1638    11523           %FPT_READ (FPTN = READ_OBJECT,
     1639    11524                      BUF  = OLD_OBJECT,
     1640    11525                      DCB  = M$DECKFILE,
     1641    11526                      KEY  = OBJECT_KEY,
     1642    11527                      KEYS = YES,
     1643    11528                      WAIT = YES) ;
     1644    11567
     1645    11568        /* Code */
     1646    11569
     1647    11570    2      CALL M$READ (READ_OBJECT) ALTRET (READ_ERROR) ;

  11570  5 001634   000430 630400 4                  EPPR0   READ_OBJECT
         5 001635   440000 713400                    CLIMB   alt,read
         5 001636   401400 401760                    pmme    nvectors=4
         5 001637   001700 702000 5                  TSX2    READ_ERROR

     1648    11571    2      IF OLD_OBJECT.BINARY_COUNT  ~= OBJECT.BINARY_COUNT  OR

  11571  5 001640   000424 236000 4                  LDQ     OLD_OBJECT+20
         5 001641   000024 676000 xsym               ERQ     OBJECT+20
         5 001642   777777 376007                    ANQ     -1,DL
         5 001643   001656 601000 5                  TNZ     s:11575
         5 001644   000425 220000 4                  LDX0    OLD_OBJECT+21
         5 001645   000025 100000 xsym               CMPX0   OBJECT+21
         5 001646   001656 601000 5                  TNZ     s:11575
         5 001647   000425 236000 4                  LDQ     OLD_OBJECT+21
         5 001650   000025 676000 xsym               ERQ     OBJECT+21
         5 001651   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:245  
         5 001652   001656 601000 5                  TNZ     s:11575
         5 001653   000426 236000 4                  LDQ     OLD_OBJECT+22
         5 001654   000026 116000 xsym               CMPQ    OBJECT+22
         5 001655   001665 600000 5                  TZE     s:11577

     1649    11572    2              OLD_OBJECT.TOTAL_COUNT   ~= OBJECT.TOTAL_COUNT   OR
     1650    11573    2              OLD_OBJECT.LOAD_SIZE     ~= OBJECT.LOAD_SIZE     OR
     1651    11574    2              OLD_OBJECT.DECK_CHECKSUM ~= OBJECT.DECK_CHECKSUM
     1652    11575    2      THEN CALL DFU_ERR_MSG (%E$DCAS_MISMATCH, %FALSE) ;

  11575  5 001656   000030 236000 6                  LDQ     24
         5 001657   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001660   000054 236000 6                  LDQ     44
         5 001661   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001662   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001663   000000 011000                    NOP     0
         5 001664   001676 710000 5                  TRA     s:11582

     1653    11576    3      ELSE DO ;

     1654    11577    3              OBJECT.DECK# = OLD_OBJECT.DECK# ;

  11577  5 001665   000424 221000 4                  LDX1    OLD_OBJECT+20
         5 001666   000024 741000 xsym               STX1    OBJECT+20

     1655    11578    3              IF OBJECT.BCD.LIBRARY = 'HNIOA0'

  11578  5 001667   040000 106400                    CMPC    fill='040'O
         5 001670   000003 600006 xsym               ADSC9   OBJECT+3                 cn=3,n=6
         5 001671   000036 000006 3                  ADSC9   REVISION_KEY+7           cn=0,n=6
         5 001672   001676 600000 5                  TZE     s:11582

     1656    11579    3              THEN /* object card has no date */ ;
     1657    11580    3              ELSE OBJECT.BCD.DATE = OLD_OBJECT.BCD.DATE ;

  11580  5 001673   040000 100400                    MLR     fill='040'O
         5 001674   000420 400006 4                  ADSC9   OLD_OBJECT+16            cn=2,n=6
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:246  
         5 001675   000020 400006 xsym               ADSC9   OBJECT+16                cn=2,n=6

     1658    11581    3           END /* ELSE */ ;

     1659    11582    2      ALTRETURN ;

  11582  5 001676   200004 221300                    LDX1  ! 4,,AUTO
         5 001677   000000 702211                    TSX2  ! 0,X1

     1660    11583
     1661    11584    2   READ_ERROR:
     1662    11585    2      IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOKEY

  11585  5 001700   000000 470400 xsym  READ_ERROR   LDP0    B$TCB$
         5 001701   000000 471500                    LDP1    0,,PR0
         5 001702   100102 236100                    LDQ     66,,PR1
         5 001703   377770 376007                    ANQ     131064,DL
         5 001704   001020 116007                    CMPQ    528,DL
         5 001705   001714 600000 5                  TZE     s:11588

     1663    11586    2      THEN /* Deck is not saved in the deckfile. */ ;
     1664    11587    2      ELSE CALL DFU_ERR_MSG (%E$DCAS_READ_ERROR, %TRUE) ;

  11587  5 001706   000015 236000 6                  LDQ     13
         5 001707   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001710   000056 236000 6                  LDQ     46
         5 001711   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001712   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001713   000000 011000                    NOP     0

     1665    11588    2      RETURN ;

  11588  5 001714   200004 221300                    LDX1  ! 4,,AUTO
         5 001715   000001 702211                    TSX2  ! 1,X1

     1666    11589
     1667    11590    2   END DFU_CHECK_ALREADY_SAVED ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:247  
     1668    11591        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:248  
     1669    11592        /*I*  NAME:        DFU_CHECK_FOR_KEY
     1670    11593              AUTHOR:      Scott S. Sheppard
     1671    11594              PURPOSE:     Checks For Object Deck in Deckfile
     1672    11595              INTERFACE:   M$READ
     1673    11596                           DFU_ERR_MSG
     1674    11597              INPUT:       OBJECT_KEY - SYMREF for object key
     1675    11598              OUTPUT:      OBJECT     - contains $OBJECT card
     1676    11599              DESCRIPTION: This procedure reads an object card from the
     1677    11600                           deckfile.This is done to determine if a deck
     1678    11601                           is already stored  in the deckfile.   If the
     1679    11602                           deck is stored, the  $OBJECT  card  contains
     1680    11603                           information about the object deck.
     1681    11604        */
     1682    11605        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:249  
     1683    11606    1   DFU_CHECK_FOR_KEY: PROC ALTRET ;

  11606  5 001716   200004 741300       DFU_CHECK_F* STX1  ! 4,,AUTO

     1684    11607
     1685    11608           %OBJECT_KEY (STCLASS = SYMREF) ;
     1686    11621           %OBJECT (STCLASS = SYMREF) ;
     1687    11684           %FPT_READ (FPTN = READ_OBJECT,
     1688    11685                      BUF  = OBJECT,
     1689    11686                      DCB  = M$DECKFILE,
     1690    11687                      KEY  = OBJECT_KEY,
     1691    11688                      KEYS = YES,
     1692    11689                      WAIT = YES) ;
     1693    11728
     1694    11729        /* Code */
     1695    11730
     1696    11731    2      CALL M$READ (READ_OBJECT) ALTRET (READ_ERROR) ;

  11731  5 001717   000446 630400 4                  EPPR0   READ_OBJECT
         5 001720   440000 713400                    CLIMB   alt,read
         5 001721   401400 401760                    pmme    nvectors=4
         5 001722   001725 702000 5                  TSX2    READ_ERROR

     1697    11732    2      RETURN ;

  11732  5 001723   200004 221300                    LDX1  ! 4,,AUTO
         5 001724   000001 702211                    TSX2  ! 1,X1

     1698    11733
     1699    11734    2   READ_ERROR:
     1700    11735    2      IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOKEY

  11735  5 001725   000000 470400 xsym  READ_ERROR   LDP0    B$TCB$
         5 001726   000000 471500                    LDP1    0,,PR0
         5 001727   100102 236100                    LDQ     66,,PR1
         5 001730   377770 376007                    ANQ     131064,DL
         5 001731   001020 116007                    CMPQ    528,DL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:250  
         5 001732   001741 600000 5                  TZE     s:11738

     1701    11736    2      THEN /* Deck is not saved in the deckfile. */ ;
     1702    11737    2      ELSE CALL DFU_ERR_MSG (%E$DCFK_READ_ERROR, %TRUE) ;

  11737  5 001733   000015 236000 6                  LDQ     13
         5 001734   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001735   000060 236000 6                  LDQ     48
         5 001736   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001737   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001740   000000 011000                    NOP     0

     1703    11738    2      ALTRETURN ;

  11738  5 001741   200004 221300                    LDX1  ! 4,,AUTO
         5 001742   000000 702211                    TSX2  ! 0,X1

     1704    11739
     1705    11740    2   END DFU_CHECK_FOR_KEY ;
     1706    11741        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:251  
     1707    11742        /*I*  NAME:        DFU_DELETE_CATALOG_ENTRY
     1708    11743              AUTHOR:      Scott S. Sheppard
     1709    11744              PURPOSE:     Deletes Trailing Entry of Catalog
     1710    11745              INTERFACE:   M$DELREC
     1711    11746                           DFU_ERR_MSG
     1712    11747              INPUT:       CATALOG_DATA
     1713    11748              OUTPUT:      CATALOG_ENTRY_KEY
     1714    11749              DESCRIPTION: Suppose a catalog has N entries numbered from
     1715    11750                           1 to N. To delete the Mth entry, entries  M+1
     1716    11751                           through N are written over entries  M through
     1717    11752                           N-1.    This leaves the Nth entry as an extra
     1718    11753                           since the catalog now has 1 less entry.  This
     1719    11754                           procedure deletes the last entry of a catalog
     1720    11755                           so that the number of entries and the catalog
     1721    11756                           entry count match.
     1722    11757        */
     1723    11758        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:252  
     1724    11759    1   DFU_DELETE_CATALOG_ENTRY: PROC ALTRET ;

  11759  5 001743   200004 741300       DFU_DELETE_* STX1  ! 4,,AUTO

     1725    11760
     1726    11761           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
     1727    11775           %CATALOG_DATA (STCLASS = SYMREF) ;
     1728    11789           %FPT_DELREC (FPTN = DEL_ENTRY,
     1729    11790                        DCB  = M$DECKFILE,
     1730    11791                        KEY  = CATALOG_ENTRY_KEY) ;
     1731    11810
     1732    11811        /* Code */
     1733    11812
     1734    11813    2      CATALOG_ENTRY_KEY.DECK# = CATALOG_DATA.DECK# ;

  11813  5 001744   000000 236000 xsym               LDQ     CATALOG_DATA
         5 001745   000011 772000                    QRL     9
         5 001746   000000 552030 xsym               STBQ    CATALOG_ENTRY_KEY,'30'O

     1735    11814    2      CATALOG_ENTRY_KEY.ENTRY# = CATALOG_DATA.ENTRY_COUNT ;

  11814  5 001747   000000 100400                    MLR     fill='000'O
         5 001750   000000 400002 xsym               ADSC9   CATALOG_DATA             cn=2,n=2
         5 001751   000000 600002 xsym               ADSC9   CATALOG_ENTRY_KEY        cn=3,n=2

     1736    11815    2      CALL M$DELREC (DEL_ENTRY) ALTRET (ERROR) ;

  11815  5 001752   000464 630400 4                  EPPR0   DEL_ENTRY
         5 001753   440002 713400                    CLIMB   alt,+16386
         5 001754   401400 401760                    pmme    nvectors=4
         5 001755   001760 702000 5                  TSX2    ERROR

     1737    11816    2      RETURN ;

  11816  5 001756   200004 221300                    LDX1  ! 4,,AUTO
         5 001757   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:253  
     1738    11817
     1739    11818    2   ERROR:
     1740    11819    2      CALL DFU_ERR_MSG (%E$DDCE_BAD_DEL, %TRUE) ;

  11819  5 001760   000015 236000 6     ERROR        LDQ     13
         5 001761   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 001762   000062 236000 6                  LDQ     50
         5 001763   200011 756100                    STQ     @LGTH+2,,AUTO
         5 001764   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 001765   000000 011000                    NOP     0

     1741    11820    2      ALTRETURN ;

  11820  5 001766   200004 221300                    LDX1  ! 4,,AUTO
         5 001767   000000 702211                    TSX2  ! 0,X1

     1742    11821
     1743    11822    2   END DFU_DELETE_CATALOG_ENTRY ;
     1744    11823        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:254  
     1745    11824        /*I*  NAME:        DFU_DELETE_DECK
     1746    11825              AUTHOR:      Scott S. Sheppard
     1747    11826              PURPOSE:     Deletes Object Deck
     1748    11827              INTERFACE:   M$DELREC
     1749    11828                           DFU_ERR_MSG
     1750    11829              INPUT:       OBJECT_KEY
     1751    11830                           BINARY_KEY
     1752    11831                           OBJECT_REFLIST_KEY
     1753    11832              OUTPUT:      None.
     1754    11833              DESCRIPTION: This procedure  deletes the following  records
     1755    11834                           associated  with  an  object  deck   from  the
     1756    11835                           deckfile:
     1757    11836                              1. The $OBJECT Card    (object key)
     1758    11837                              2. The Binary Record   (deck key)
     1759    11838                              3. Any Patch Cards
     1760    11839                              4. The Object Reflist  (object reflist key)
     1761    11840                           Note:  Any  records deleted  from the deckfile
     1762    11841                                  occupy file space until a compaction is
     1763    11842                                  done or the file is copied over itself.
     1764    11843        */
     1765    11844        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:255  
     1766    11845    1   DFU_DELETE_DECK: PROC ALTRET ;

  11845  5 001770   200004 741300       DFU_DELETE_* STX1  ! 4,,AUTO

     1767    11846
     1768    11847           %OBJECT_KEY (STCLASS = SYMREF) ;
     1769    11860           %BINARY_KEY (STCLASS = "STATIC SYMDEF") ;
     1770    11874           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
     1771    11888           %FPT_DELREC (FPTN = DEL_$OBJECT_CARD,
     1772    11889                        DCB  = M$DECKFILE,
     1773    11890                        KEY  = OBJECT_KEY) ;
     1774    11909           %FPT_DELREC (FPTN = DEL_BINARY_THRU_REFLIST,
     1775    11910                        DCB  = M$DECKFILE,
     1776    11911                        KEY  = BINARY_KEY,
     1777    11912                        LKEY = OBJECT_REFLIST_KEY) ;
     1778    11931
     1779    11932        /* Code */
     1780    11933
     1781    11934    2      CALL M$DELREC (DEL_$OBJECT_CARD) ALTRET (ERROR) ;

  11934  5 001771   000500 630400 4                  EPPR0   DEL_$OBJECT_CARD
         5 001772   440002 713400                    CLIMB   alt,+16386
         5 001773   401400 401760                    pmme    nvectors=4
         5 001774   002003 702000 5                  TSX2    ERROR

     1782    11935    2      CALL M$DELREC (DEL_BINARY_THRU_REFLIST) ALTRET (ERROR) ;

  11935  5 001775   000512 630400 4                  EPPR0   DEL_BINARY_THRU_REFLIST
         5 001776   440002 713400                    CLIMB   alt,+16386
         5 001777   401400 401760                    pmme    nvectors=4
         5 002000   002003 702000 5                  TSX2    ERROR

     1783    11936    2      RETURN ;

  11936  5 002001   200004 221300                    LDX1  ! 4,,AUTO
         5 002002   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:256  
     1784    11937
     1785    11938    2   ERROR:
     1786    11939    2      CALL DFU_ERR_MSG (%E$DDD_BAD_DEL, %TRUE) ;

  11939  5 002003   000015 236000 6     ERROR        LDQ     13
         5 002004   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002005   000064 236000 6                  LDQ     52
         5 002006   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002007   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002010   000000 011000                    NOP     0

     1787    11940    2      ALTRETURN ;

  11940  5 002011   200004 221300                    LDX1  ! 4,,AUTO
         5 002012   000000 702211                    TSX2  ! 0,X1

     1788    11941
     1789    11942    2   END DFU_DELETE_DECK ;
     1790    11943        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:257  
     1791    11944        /*I*  NAME:        DFU_DELETE_MASTER_ENTRY
     1792    11945              AUTHOR:      Scott S. Sheppard
     1793    11946              PURPOSE:     Deletes Trailing Entry of Master
     1794    11947              INTERFACE:   M$DELREC
     1795    11948                           DFU_ERR_MSG
     1796    11949              INPUT:       MASTER_DATA
     1797    11950              OUTPUT:      MASTER_ENTRY_KEY
     1798    11951              DESCRIPTION: Suppose the master has N entries numbered from
     1799    11952                           1 to N.  To delete the Mth entry, entries  M+1
     1800    11953                           through N are  written over entries  M through
     1801    11954                           N-1.    This leaves the  Nth entry as an extra
     1802    11955                           since the master now has 1 less catalog.  This
     1803    11956                           procedure deletes the last entry of the master
     1804    11957                           catalog.
     1805    11958        */
     1806    11959        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:258  
     1807    11960    1   DFU_DELETE_MASTER_ENTRY: PROC ALTRET ;

  11960  5 002013   200004 741300       DFU_DELETE_* STX1  ! 4,,AUTO

     1808    11961
     1809    11962           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
     1810    11976           %MASTER_DATA (STCLASS = SYMREF) ;
     1811    11990           %FPT_DELREC (FPTN = DEL_ENTRY,
     1812    11991                        DCB  = M$DECKFILE,
     1813    11992                        KEY  = MASTER_ENTRY_KEY) ;
     1814    12011
     1815    12012        /* Code */
     1816    12013
     1817    12014    2      MASTER_ENTRY_KEY.DECK# = MASTER_DATA.DECK# ;

  12014  5 002014   000000 236000 xsym               LDQ     MASTER_DATA
         5 002015   000011 772000                    QRL     9
         5 002016   000000 552030 xsym               STBQ    MASTER_ENTRY_KEY,'30'O

     1818    12015    2      MASTER_ENTRY_KEY.ENTRY# = MASTER_DATA.ENTRY_COUNT ;

  12015  5 002017   000000 100400                    MLR     fill='000'O
         5 002020   000000 400002 xsym               ADSC9   MASTER_DATA              cn=2,n=2
         5 002021   000000 600002 xsym               ADSC9   MASTER_ENTRY_KEY         cn=3,n=2

     1819    12016    2      CALL M$DELREC (DEL_ENTRY) ALTRET (ERROR) ;

  12016  5 002022   000524 630400 4                  EPPR0   DEL_ENTRY
         5 002023   440002 713400                    CLIMB   alt,+16386
         5 002024   401400 401760                    pmme    nvectors=4
         5 002025   002030 702000 5                  TSX2    ERROR

     1820    12017    2      RETURN ;

  12017  5 002026   200004 221300                    LDX1  ! 4,,AUTO
         5 002027   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:259  
     1821    12018
     1822    12019    2   ERROR:
     1823    12020    2      CALL DFU_ERR_MSG (%E$DDME_BAD_DEL, %TRUE) ;

  12020  5 002030   000015 236000 6     ERROR        LDQ     13
         5 002031   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002032   000066 236000 6                  LDQ     54
         5 002033   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002034   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002035   000000 011000                    NOP     0

     1824    12021    2      ALTRETURN ;

  12021  5 002036   200004 221300                    LDX1  ! 4,,AUTO
         5 002037   000000 702211                    TSX2  ! 0,X1

     1825    12022
     1826    12023    2   END DFU_DELETE_MASTER_ENTRY ;
     1827    12024        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:260  
     1828    12025        /*I*  NAME:        DFU_DELETE_CATALOG
     1829    12026              AUTHOR:      Scott S. Sheppard
     1830    12027              PURPOSE:     Deletes Catalog References
     1831    12028              INTERFACE:   M$DELREC
     1832    12029                           DFU_ERR_MSG
     1833    12030              INPUT:       CATALOG_KEY
     1834    12031                           SUBCATALOG_KEY
     1835    12032              OUTPUT:      Catalog Control and Subcatalog Deleted.
     1836    12033              DESCRIPTION: When the  last deck from a catalog is deleted,
     1837    12034                           the  catalog  is  also deleted. This procedure
     1838    12035                           deletes the catalog entry keyed by its catalog
     1839    12036                           key and its corresponding subcatalog.
     1840    12037        */
     1841    12038
     1842    12039    1   DFU_DELETE_CATALOG: PROC ALTRET ;

  12039  5 002040   200004 741300       DFU_DELETE_* STX1  ! 4,,AUTO

     1843    12040
     1844    12041           %CATALOG_KEY (STCLASS = SYMREF) ;
     1845    12055           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
     1846    12069           %FPT_DELREC (FPTN = DEL_CATALOG,
     1847    12070                        DCB  = M$DECKFILE,
     1848    12071                        KEY  = CATALOG_KEY) ;
     1849    12090           %FPT_DELREC (FPTN = DEL_SUBCATALOG,
     1850    12091                        DCB  = M$DECKFILE,
     1851    12092                        KEY  = SUBCATALOG_KEY) ;
     1852    12111
     1853    12112        /* Code */
     1854    12113
     1855    12114    2      CALL M$DELREC (DEL_CATALOG) ALTRET (ERROR) ;

  12114  5 002041   000536 630400 4                  EPPR0   DEL_CATALOG
         5 002042   440002 713400                    CLIMB   alt,+16386
         5 002043   401400 401760                    pmme    nvectors=4
         5 002044   002053 702000 5                  TSX2    ERROR

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:261  
     1856    12115    2      CALL M$DELREC (DEL_SUBCATALOG) ALTRET (ERROR) ;

  12115  5 002045   000550 630400 4                  EPPR0   DEL_SUBCATALOG
         5 002046   440002 713400                    CLIMB   alt,+16386
         5 002047   401400 401760                    pmme    nvectors=4
         5 002050   002053 702000 5                  TSX2    ERROR

     1857    12116    2      RETURN ;

  12116  5 002051   200004 221300                    LDX1  ! 4,,AUTO
         5 002052   000001 702211                    TSX2  ! 1,X1

     1858    12117
     1859    12118    2   ERROR:
     1860    12119    2      CALL DFU_ERR_MSG (%E$DDC_BAD_DEL, %TRUE) ;

  12119  5 002053   000015 236000 6     ERROR        LDQ     13
         5 002054   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002055   000070 236000 6                  LDQ     56
         5 002056   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002057   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002060   000000 011000                    NOP     0

     1861    12120    2      ALTRETURN ;

  12120  5 002061   200004 221300                    LDX1  ! 4,,AUTO
         5 002062   000000 702211                    TSX2  ! 0,X1

     1862    12121
     1863    12122    2   END DFU_DELETE_CATALOG ;
     1864    12123        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:262  
     1865    12124        /*I*  NAME:        DFU_WRITE_MASTER_CONTROL
     1866    12125              AUTHOR:      Scott S. Sheppard
     1867    12126              PURPOSE:     Writes Master Control to the deckfile
     1868    12127              INTERFACE:   M$WRITE
     1869    12128                           DFU_ERR_MSG
     1870    12129              INPUT:       DCB#      - deckfile or temporary file
     1871    12130                           MASTER_KEY
     1872    12131              OUTPUT:      MASTER_DATA written to deckfile.
     1873    12132              DESCRIPTION: The procedure writes the master control  to  the
     1874    12133                           deckfile.  The master control record,  keyed  by
     1875    12134                           the string 'MASTER_CATALOG', contains  the  deck
     1876    12135                           number of the master control deck, the number of
     1877    12136                           entries (catalogs), and checksum information.
     1878    12137        */
     1879    12138        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:263  
     1880    12139    1   DFU_WRITE_MASTER_CONTROL: PROC (DCB#) ALTRET ;

  12139  5 002063   200004 741300       DFU_WRITE_M* STX1  ! 4,,AUTO

     1881    12140
     1882    12141    2      DCL DCB#  UBIN WORD ALIGNED ;
     1883    12142           %MASTER_KEY (STCLASS = CONSTANT) ;
     1884    12155           %MASTER_DATA (STCLASS = SYMREF) ;
     1885    12169           %FPT_WRITE (FPTN = WRITE_MASTER_CONTROL,
     1886    12170                       BUF  = MASTER_DATA,
     1887    12171                       BIN  = YES,
     1888    12172                       KEY  = MASTER_KEY,
     1889    12173                       WAIT = YES) ;
     1890    12204
     1891    12205        /* Code */
     1892    12206
     1893    12207    2      WRITE_MASTER_CONTROL.V.DCB# = DCB# ;

  12207  5 002064   200005 470500                    LDP0    @DCB#,,AUTO
         5 002065   000000 720100                    LXL0    0,,PR0
         5 002066   000572 740000 4                  STX0    WRITE_MASTER_CONTROL+8

     1894    12208    2      CALL M$WRITE (WRITE_MASTER_CONTROL) ALTRET (BAD_MASTER_CONTROL) ;

  12208  5 002067   000562 630400 4                  EPPR0   WRITE_MASTER_CONTROL
         5 002070   440001 713400                    CLIMB   alt,write
         5 002071   401400 401760                    pmme    nvectors=4
         5 002072   002075 702000 5                  TSX2    BAD_MASTER_CONTROL

     1895    12209    2      RETURN ;

  12209  5 002073   200004 221300                    LDX1  ! 4,,AUTO
         5 002074   000001 702211                    TSX2  ! 1,X1

     1896    12210
     1897    12211    2   BAD_MASTER_CONTROL:
     1898    12212    2      CALL DFU_ERR_MSG (%E$DWMC_BAD_MAST_CNTRL, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:264  

  12212  5 002075   000015 236000 6     BAD_MASTER_* LDQ     13
         5 002076   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002077   000072 236000 6                  LDQ     58
         5 002100   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002101   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002102   000000 011000                    NOP     0

     1899    12213    2      ALTRETURN ;

  12213  5 002103   200004 221300                    LDX1  ! 4,,AUTO
         5 002104   000000 702211                    TSX2  ! 0,X1

     1900    12214
     1901    12215    2   END DFU_WRITE_MASTER_CONTROL ;
     1902    12216        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:265  
     1903    12217        /*I*  NAME:        DFU_WRITE_MASTER_ENTRY
     1904    12218              AUTHOR:      Scott S. Sheppard
     1905    12219              PURPOSE:     Writes Master Entry to the deckfile
     1906    12220              INTERFACE:   M$WRITE
     1907    12221                           DFU_ERR_MSG
     1908    12222              INPUT:       DCB#      - deckfile or temporary file
     1909    12223                           MASTER_ENTRY_KEY
     1910    12224              OUTPUT:      CATALOG_KEY written to deckfile.
     1911    12225              DESCRIPTION: The procedure writes a master entry  to  the
     1912    12226                           deckfile.   A master entry key consists of a
     1913    12227                           size field (set to 4 for 4 bytes),  the deck
     1914    12228                           number of the master catalog, and the  entry
     1915    12229                           number of the catalog to be read. The record
     1916    12230                           returned is a catalog key which is 24 bytes.
     1917    12231        */
     1918    12232        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:266  
     1919    12233    1   DFU_WRITE_MASTER_ENTRY: PROC (DCB#) ALTRET ;

  12233  5 002105   200004 741300       DFU_WRITE_M* STX1  ! 4,,AUTO

     1920    12234
     1921    12235    2      DCL DCB#  UBIN WORD ALIGNED ;
     1922    12236           %MASTER_ENTRY_KEY (STCLASS = SYMREF) ;
     1923    12250           %CATALOG_KEY (STCLASS = SYMREF) ;
     1924    12264           %FPT_WRITE (FPTN = WRITE_MASTER_ENTRY,
     1925    12265                       BUF  = CATALOG_KEY,
     1926    12266                       BIN  = YES,
     1927    12267                       KEY  = MASTER_ENTRY_KEY,
     1928    12268                       WAIT = YES) ;
     1929    12299
     1930    12300        /* Code */
     1931    12301
     1932    12302    2      WRITE_MASTER_ENTRY.V.DCB# = DCB# ;

  12302  5 002106   200005 470500                    LDP0    @DCB#,,AUTO
         5 002107   000000 720100                    LXL0    0,,PR0
         5 002110   000606 740000 4                  STX0    WRITE_MASTER_ENTRY+8

     1933    12303    2      CALL M$WRITE (WRITE_MASTER_ENTRY) ALTRET (BAD_MASTER_ENTRY) ;

  12303  5 002111   000576 630400 4                  EPPR0   WRITE_MASTER_ENTRY
         5 002112   440001 713400                    CLIMB   alt,write
         5 002113   401400 401760                    pmme    nvectors=4
         5 002114   002117 702000 5                  TSX2    BAD_MASTER_ENTRY

     1934    12304    2      RETURN ;

  12304  5 002115   200004 221300                    LDX1  ! 4,,AUTO
         5 002116   000001 702211                    TSX2  ! 1,X1

     1935    12305
     1936    12306    2   BAD_MASTER_ENTRY:
     1937    12307    2      CALL DFU_ERR_MSG (%E$DWME_BAD_MAST_ENTRY, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:267  

  12307  5 002117   000015 236000 6     BAD_MASTER_* LDQ     13
         5 002120   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002121   000074 236000 6                  LDQ     60
         5 002122   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002123   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002124   000000 011000                    NOP     0

     1938    12308    2      ALTRETURN ;

  12308  5 002125   200004 221300                    LDX1  ! 4,,AUTO
         5 002126   000000 702211                    TSX2  ! 0,X1

     1939    12309
     1940    12310    2   END DFU_WRITE_MASTER_ENTRY ;
     1941    12311        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:268  
     1942    12312        /*I*  NAME:        DFU_WRITE_CATALOG_CONTROL
     1943    12313              AUTHOR:      Scott S. Sheppard
     1944    12314              PURPOSE:     Writes Catalog Control to the deckfile
     1945    12315              INTERFACE:   M$WRITE
     1946    12316                           DFU_ERR_MSG
     1947    12317              INPUT:       DCB#      - deckfile or temporary file
     1948    12318                           CATALOG_KEY
     1949    12319              OUTPUT:      CATALOG_DATA written to deckfile.
     1950    12320              DESCRIPTION: The procedure writes the catalog control  to  the
     1951    12321                           deckfile. The key used consists of the size field
     1952    12322                           (set to 23), the 21 byte catalog descritor, and a
     1953    12323                           number   which  distinguishes  identical  catalog
     1954    12324                           descritors. The record returned contains the deck
     1955    12325                           number for the catalog, the number of entries  in
     1956    12326                           the catalog, and the checksum for the catalog.
     1957    12327        */
     1958    12328        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:269  
     1959    12329    1   DFU_WRITE_CATALOG_CONTROL: PROC (DCB#) ALTRET ;

  12329  5 002127   200004 741300       DFU_WRITE_C* STX1  ! 4,,AUTO

     1960    12330
     1961    12331    2      DCL DCB#  UBIN WORD ALIGNED ;
     1962    12332           %CATALOG_KEY (STCLASS = SYMREF) ;
     1963    12346           %CATALOG_DATA (STCLASS = SYMREF) ;
     1964    12360           %FPT_WRITE (FPTN = WRITE_CATALOG_CONTROL,
     1965    12361                       BUF  = CATALOG_DATA,
     1966    12362                       BIN  = YES,
     1967    12363                       KEY  = CATALOG_KEY,
     1968    12364                       WAIT = YES) ;
     1969    12395
     1970    12396        /* Code */
     1971    12397
     1972    12398    2      WRITE_CATALOG_CONTROL.V.DCB# = DCB# ;

  12398  5 002130   200005 470500                    LDP0    @DCB#,,AUTO
         5 002131   000000 720100                    LXL0    0,,PR0
         5 002132   000622 740000 4                  STX0    WRITE_CATALOG_CONTROL+8

     1973    12399    2      CALL M$WRITE (WRITE_CATALOG_CONTROL) ALTRET (BAD_CATALOG_CONTROL) ;

  12399  5 002133   000612 630400 4                  EPPR0   WRITE_CATALOG_CONTROL
         5 002134   440001 713400                    CLIMB   alt,write
         5 002135   401400 401760                    pmme    nvectors=4
         5 002136   002141 702000 5                  TSX2    BAD_CATALOG_CONTROL

     1974    12400    2      RETURN ;

  12400  5 002137   200004 221300                    LDX1  ! 4,,AUTO
         5 002140   000001 702211                    TSX2  ! 1,X1

     1975    12401
     1976    12402    2   BAD_CATALOG_CONTROL:
     1977    12403    2      CALL DFU_ERR_MSG (%E$DWCC_BAD_CAT_CNTRL, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:270  

  12403  5 002141   000015 236000 6     BAD_CATALOG* LDQ     13
         5 002142   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002143   000076 236000 6                  LDQ     62
         5 002144   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002145   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002146   000000 011000                    NOP     0

     1978    12404    2      ALTRETURN ;

  12404  5 002147   200004 221300                    LDX1  ! 4,,AUTO
         5 002150   000000 702211                    TSX2  ! 0,X1

     1979    12405
     1980    12406    2   END DFU_WRITE_CATALOG_CONTROL ;
     1981    12407        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:271  
     1982    12408        /*I*  NAME:        DFU_WRITE_SUBCATALOG
     1983    12409              AUTHOR:      Scott S. Sheppard
     1984    12410              PURPOSE:     Writes Subcatalog to the deckfile
     1985    12411              INTERFACE:   M$WRITE
     1986    12412                           DFU_ERR_MSG
     1987    12413              INPUT:       DCB#      - deckfile or temporary file
     1988    12414                           SUBCATALOG_KEY
     1989    12415              OUTPUT:      SUBCATALOG_DATA written to deckfile.
     1990    12416              DESCRIPTION: This  procedure writes the tape serial number and
     1991    12417                           tape file number for a catalog  to  the deckfile.
     1992    12418                           The key used contains the  size (set to 4),   the
     1993    12419                           deck number of the catalog, and a zero   (for the
     1994    12420                           zeroeth entry in the catalog).The record returned
     1995    12421                           contains a 40 character file id  and  a  3  digit
     1996    12422                           file number.
     1997    12423                           The serial number and file number are  IFAD tape
     1998    12424                           serial number and file number used to originally
     1999    12425                           build the catalog.
     2000    12426        */
     2001    12427        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:272  
     2002    12428    1   DFU_WRITE_SUBCATALOG: PROC (DCB#) ALTRET ;

  12428  5 002151   200004 741300       DFU_WRITE_S* STX1  ! 4,,AUTO

     2003    12429
     2004    12430    2      DCL DCB#  UBIN WORD ALIGNED ;
     2005    12431           %SUBCATALOG_KEY (STCLASS = SYMREF) ;
     2006    12445           %SUBCATALOG_DATA (STCLASS = SYMREF) ;
     2007    12458           %FPT_WRITE (FPTN = WRITE_SUBCATALOG,
     2008    12459                       BUF  = SUBCATALOG_DATA,
     2009    12460                       BIN  = YES,
     2010    12461                       KEY  = SUBCATALOG_KEY,
     2011    12462                       WAIT = YES) ;
     2012    12493
     2013    12494        /* Code */
     2014    12495
     2015    12496    2      WRITE_SUBCATALOG.V.DCB# = DCB# ;

  12496  5 002152   200005 470500                    LDP0    @DCB#,,AUTO
         5 002153   000000 720100                    LXL0    0,,PR0
         5 002154   000636 740000 4                  STX0    WRITE_SUBCATALOG+8

     2016    12497    2      CALL M$WRITE (WRITE_SUBCATALOG) ALTRET (BAD_SUBCATALOG) ;

  12497  5 002155   000626 630400 4                  EPPR0   WRITE_SUBCATALOG
         5 002156   440001 713400                    CLIMB   alt,write
         5 002157   401400 401760                    pmme    nvectors=4
         5 002160   002163 702000 5                  TSX2    BAD_SUBCATALOG

     2017    12498    2      RETURN ;

  12498  5 002161   200004 221300                    LDX1  ! 4,,AUTO
         5 002162   000001 702211                    TSX2  ! 1,X1

     2018    12499
     2019    12500    2   BAD_SUBCATALOG:
     2020    12501    2      CALL DFU_ERR_MSG (%E$DWS_BAD_SUBCAT, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:273  

  12501  5 002163   000015 236000 6     BAD_SUBCATA* LDQ     13
         5 002164   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002165   000100 236000 6                  LDQ     64
         5 002166   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002167   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002170   000000 011000                    NOP     0

     2021    12502    2      ALTRETURN ;

  12502  5 002171   200004 221300                    LDX1  ! 4,,AUTO
         5 002172   000000 702211                    TSX2  ! 0,X1

     2022    12503
     2023    12504    2   END DFU_WRITE_SUBCATALOG ;
     2024    12505        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:274  
     2025    12506        /*I*  NAME:        DFU_WRITE_CATALOG_ENTRY
     2026    12507              AUTHOR:      Scott S. Sheppard
     2027    12508              PURPOSE:     Writes Catalog Entry to the deckfile
     2028    12509              INTERFACE:   M$WRITE
     2029    12510                           DFU_ERR_MSG
     2030    12511              INPUT:       DCB#      - deckfile or temporary file
     2031    12512                           CATALOG_ENTRY_KEY
     2032    12513              OUTPUT:      OBJECT_KEY written to deckfile.
     2033    12514              DESCRIPTION: The procedure writes a catalog entry  to  the
     2034    12515                           deckfile.   A catalog entry key consists of a
     2035    12516                           size field (set to 4 for 4 bytes),   the deck
     2036    12517                           number of the desired catalog, and the  entry
     2037    12518                           number of the catalog to be read.  The record
     2038    12519                           returned is an object key which is 24 bytes.
     2039    12520        */
     2040    12521        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:275  
     2041    12522    1   DFU_WRITE_CATALOG_ENTRY: PROC (DCB#) ALTRET ;

  12522  5 002173   200004 741300       DFU_WRITE_C* STX1  ! 4,,AUTO

     2042    12523
     2043    12524    2      DCL DCB#  UBIN WORD ALIGNED ;
     2044    12525           %CATALOG_ENTRY_KEY (STCLASS = SYMREF) ;
     2045    12539           %OBJECT_KEY (STCLASS = SYMREF) ;
     2046    12552           %FPT_WRITE (FPTN = WRITE_CATALOG_ENTRY,
     2047    12553                       BUF  = OBJECT_KEY,
     2048    12554                       BIN  = YES,
     2049    12555                       KEY  = CATALOG_ENTRY_KEY,
     2050    12556                       WAIT = YES) ;
     2051    12587
     2052    12588        /* Code */
     2053    12589
     2054    12590    2      WRITE_CATALOG_ENTRY.V.DCB# = DCB# ;

  12590  5 002174   200005 470500                    LDP0    @DCB#,,AUTO
         5 002175   000000 720100                    LXL0    0,,PR0
         5 002176   000652 740000 4                  STX0    WRITE_CATALOG_ENTRY+8

     2055    12591    2      CALL M$WRITE (WRITE_CATALOG_ENTRY) ALTRET (BAD_CATALOG_ENTRY) ;

  12591  5 002177   000642 630400 4                  EPPR0   WRITE_CATALOG_ENTRY
         5 002200   440001 713400                    CLIMB   alt,write
         5 002201   401400 401760                    pmme    nvectors=4
         5 002202   002205 702000 5                  TSX2    BAD_CATALOG_ENTRY

     2056    12592    2      RETURN ;

  12592  5 002203   200004 221300                    LDX1  ! 4,,AUTO
         5 002204   000001 702211                    TSX2  ! 1,X1

     2057    12593
     2058    12594    2   BAD_CATALOG_ENTRY:
     2059    12595    2      CALL DFU_ERR_MSG (%E$DWCE_BAD_CAT_ENTRY, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:276  

  12595  5 002205   000015 236000 6     BAD_CATALOG* LDQ     13
         5 002206   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002207   000102 236000 6                  LDQ     66
         5 002210   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002211   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002212   000000 011000                    NOP     0

     2060    12596    2      ALTRETURN ;

  12596  5 002213   200004 221300                    LDX1  ! 4,,AUTO
         5 002214   000000 702211                    TSX2  ! 0,X1

     2061    12597
     2062    12598    2   END DFU_WRITE_CATALOG_ENTRY ;
     2063    12599        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:277  
     2064    12600        /*I*  NAME:        DFU_WRITE_OBJECT
     2065    12601              AUTHOR:      Scott S. Sheppard
     2066    12602              PURPOSE:     Writes Object Card to the deckfile
     2067    12603              INTERFACE:   M$WRITE
     2068    12604                           DFU_ERR_MSG
     2069    12605              INPUT:       DCB#      - deckfile or temporary file
     2070    12606                           OBJECT_KEY
     2071    12607              OUTPUT:      $OBJECT card written to deckfile.
     2072    12608              DESCRIPTION: The procedure writes an object card  to  the
     2073    12609                           deckfile. The key used contains a size field
     2074    12610                           (set to 23) and a 23 character descriptor of
     2075    12611                           the  object module (test page)   to be read.
     2076    12612                           The $OBJECT card returned contains the  deck
     2077    12613                           of the object code for the test page as well
     2078    12614                           other descriptive information.
     2079    12615        */
     2080    12616        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:278  
     2081    12617    1   DFU_WRITE_OBJECT: PROC (DCB#) ALTRET ;

  12617  5 002215   200004 741300       DFU_WRITE_O* STX1  ! 4,,AUTO

     2082    12618
     2083    12619    2      DCL DCB#  UBIN WORD ALIGNED ;
     2084    12620           %OBJECT_KEY (STCLASS = SYMREF) ;
     2085    12633           %OBJECT (STCLASS = SYMREF) ;
     2086    12696           %FPT_WRITE (FPTN = WRITE_OBJECT,
     2087    12697                       BUF  = OBJECT,
     2088    12698                       BIN  = YES,
     2089    12699                       KEY  = OBJECT_KEY,
     2090    12700                       WAIT = YES) ;
     2091    12731
     2092    12732        /* Code */
     2093    12733
     2094    12734    2      WRITE_OBJECT.V.DCB# = DCB# ;

  12734  5 002216   200005 470500                    LDP0    @DCB#,,AUTO
         5 002217   000000 720100                    LXL0    0,,PR0
         5 002220   000666 740000 4                  STX0    WRITE_OBJECT+8

     2095    12735    2      CALL M$WRITE (WRITE_OBJECT) ALTRET (BAD_OBJECT) ;

  12735  5 002221   000656 630400 4                  EPPR0   WRITE_OBJECT
         5 002222   440001 713400                    CLIMB   alt,write
         5 002223   401400 401760                    pmme    nvectors=4
         5 002224   002227 702000 5                  TSX2    BAD_OBJECT

     2096    12736    2      RETURN ;

  12736  5 002225   200004 221300                    LDX1  ! 4,,AUTO
         5 002226   000001 702211                    TSX2  ! 1,X1

     2097    12737
     2098    12738    2   BAD_OBJECT:
     2099    12739    2      CALL DFU_ERR_MSG (%E$DWO_BAD_OBJECT, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:279  

  12739  5 002227   000015 236000 6     BAD_OBJECT   LDQ     13
         5 002230   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002231   000104 236000 6                  LDQ     68
         5 002232   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002233   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002234   000000 011000                    NOP     0

     2100    12740    2      ALTRETURN ;

  12740  5 002235   200004 221300                    LDX1  ! 4,,AUTO
         5 002236   000000 702211                    TSX2  ! 0,X1

     2101    12741
     2102    12742    2   END DFU_WRITE_OBJECT ;
     2103    12743        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:280  
     2104    12744        /*I*  NAME:        DFU_WRITE_BINARY
     2105    12745              AUTHOR:      Scott S. Sheppard
     2106    12746              PURPOSE:     Writes Binary Deck to the deckfile
     2107    12747             INTERFACE:    M$WRITE Monitor Service
     2108    12748                           DFU_ERR_MSG
     2109    12749             PARAMETERS:   DCB# - where does this go
     2110    12750                           BUF_V - vector to the target area
     2111    12751                           LGTH - number of bytes
     2112    12752             DATA:         BINARY_KEY - input
     2113    12753              DESCRIPTION: The procedure writes a binary record to  the
     2114    12754                           deckfile. The key used contains a size field
     2115    12755                           a  deck  number, and  an  entry  number. The
     2116    12756                           binary record written to the deckfile is the
     2117    12757                           actual test page which will  be  executed by
     2118    12758                           TOLTS.
     2119    12759        */
     2120    12760        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:281  
     2121    12761    1   DFU_WRITE_BINARY: PROC (DCB#, BUF_V, LGTH) ALTRET ;

  12761  5 002237   200004 741300       DFU_WRITE_B* STX1  ! 4,,AUTO

     2122    12762
     2123    12763    2      DCL DCB#  UBIN WORD ALIGNED ;
     2124    12764    2      DCL BUF_V BIT (72) ALIGNED ;
     2125    12765    2      DCL LGTH  UBIN WORD ALIGNED ;
     2126    12766           %BINARY_KEY (STCLASS = SYMREF) ;
     2127    12780           %FPT_WRITE (FPTN = WRITE_BINARY_DECK,
     2128    12781                       BIN  = YES,
     2129    12782                       KEY  = BINARY_KEY,
     2130    12783                       WAIT = YES) ;
     2131    12814
     2132    12815        /* Code */
     2133    12816
     2134    12817    2      WRITE_BINARY_DECK.V.DCB# = DCB# ;

  12817  5 002240   200005 470500                    LDP0    @DCB#,,AUTO
         5 002241   000000 720100                    LXL0    0,,PR0
         5 002242   000702 740000 4                  STX0    WRITE_BINARY_DECK+8

     2135    12818    2      WRITE_BINARY_DECK.BUF_ = BUF_V ;

  12818  5 002243   200006 471500                    LDP1    @BUF_V,,AUTO
         5 002244   000000 100500                    MLR     fill='000'O
         5 002245   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         5 002246   000676 000010 4                  ADSC9   WRITE_BINARY_DECK+4      cn=0,n=8

     2136    12819    2      WRITE_BINARY_DECK.BUF_.BOUND = LGTH - 1 ;

  12819  5 002247   200007 473500                    LDP3    @LGTH,,AUTO
         5 002250   300000 236100                    LDQ     0,,PR3
         5 002251   000001 136007                    SBLQ    1,DL
         5 002252   000020 736000                    QLS     16
         5 002253   000676 676000 4                  ERQ     WRITE_BINARY_DECK+4
         5 002254   000034 376000 xsym               ANQ     B_VECTNIL+28
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:282  
         5 002255   000676 656000 4                  ERSQ    WRITE_BINARY_DECK+4

     2137    12820    2      CALL M$WRITE (WRITE_BINARY_DECK) ALTRET (BAD_BINARY) ;

  12820  5 002256   000672 630400 4                  EPPR0   WRITE_BINARY_DECK
         5 002257   440001 713400                    CLIMB   alt,write
         5 002260   401400 401760                    pmme    nvectors=4
         5 002261   002264 702000 5                  TSX2    BAD_BINARY

     2138    12821    2      RETURN ;

  12821  5 002262   200004 221300                    LDX1  ! 4,,AUTO
         5 002263   000001 702211                    TSX2  ! 1,X1

     2139    12822
     2140    12823    2   BAD_BINARY:
     2141    12824    2      CALL DFU_ERR_MSG (%E$DWB_BAD_BINARY, %TRUE) ;

  12824  5 002264   000015 236000 6     BAD_BINARY   LDQ     13
         5 002265   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002266   000106 236000 6                  LDQ     70
         5 002267   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002270   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002271   000000 011000                    NOP     0

     2142    12825    2      ALTRETURN ;

  12825  5 002272   200004 221300                    LDX1  ! 4,,AUTO
         5 002273   000000 702211                    TSX2  ! 0,X1

     2143    12826
     2144    12827    2   END DFU_WRITE_BINARY ;
     2145    12828        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:283  
     2146    12829        /*I*  NAME:        DFU_WRITE_BCD_CARDS
     2147    12830              AUTHOR:      Scott S. Sheppard
     2148    12831              PURPOSE:     Writes BCD Cards to the deckfile
     2149    12832              INTERFACE:   M$WRITE
     2150    12833                           DFU_ERR_MSG
     2151    12834              INPUT:       DCB#      - deckfile or temporary file
     2152    12835                           BCD_KEY
     2153    12836              OUTPUT:      BCD_CARDS (patches and $DKEND) written to deckfile
     2154    12837              DESCRIPTION: The procedure writes all patch cards and the
     2155    12838                           $DKEND card for a desired test page. The key
     2156    12839                           used contains a size field (set= 4) the deck
     2157    12840                           number of the test page, and the entry numb.
     2158    12841                           The entry number ranges from 0 to n,   where
     2159    12842                           the nTH entry is the $DKEND card.
     2160    12843        */
     2161    12844
     2162    12845    1   DFU_WRITE_BCD_CARDS: PROC (DCB#) ALTRET ;

  12845  5 002274   200004 741300       DFU_WRITE_B* STX1  ! 4,,AUTO

     2163    12846
     2164    12847    2      DCL DCB#                       UBIN WORD ALIGNED ;
     2165    12848    2      DCL CUR#                       UBIN WORD SYMREF ALIGNED ;
     2166    12849    2      DCL BCD#                       UBIN WORD SYMREF ALIGNED ;
     2167    12850           %BCD_KEY (STCLASS = SYMREF) ;
     2168    12864           %BCD_B (STCLASS = "BASED (DUP.BCD_V.PTR$)") ;
     2169    12876           %FPT_WRITE (FPTN = WRITE_BCD_CARD,
     2170    12877                       KEY  = BCD_KEY,
     2171    12878                       WAIT = YES) ;
     2172    12909           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:284  
     2173    12910        /* Code */
     2174    12911
     2175    12912    2      WRITE_BCD_CARD.V.DCB# = DCB# ;

  12912  5 002275   200005 470500                    LDP0    @DCB#,,AUTO
         5 002276   000000 720100                    LXL0    0,,PR0
         5 002277   000716 740000 4                  STX0    WRITE_BCD_CARD+8

     2176    12913    3      DO CUR# = 1 TO BCD# ;

  12913  5 002300   000001 235007                    LDA     1,DL
         5 002301   000000 755000 xsym               STA     CUR#
         5 002302   002325 710000 5                  TRA     s:12917+3

     2177    12914    3         BCD_KEY.CARD# = CUR# ;

  12914  5 002303   000000 101400                    MRL     fill='000'O
         5 002304   000000 000004 xsym               ADSC9   CUR#                     cn=0,n=4
         5 002305   000000 600002 xsym               ADSC9   BCD_KEY                  cn=3,n=2

     2178    12915    3         WRITE_BCD_CARD.BUF_ = VECTOR (BCD_B(CUR#-1)) ;

  12915  5 002306   000036 235000 6                  LDA     30
         5 002307   000000 236000 xsym               LDQ     CUR#
         5 002310   200014 755100                    STA     @SYSTEM_ERR+2,,AUTO
         5 002311   000025 402003                    MPY     21,DU
         5 002312   000025 136003                    SBLQ    21,DU
         5 002313   000103 036000 xsym               ADLQ    DUP+67
         5 002314   200014 235100                    LDA     @SYSTEM_ERR+2,,AUTO
         5 002315   000712 757000 4                  STAQ    WRITE_BCD_CARD+4

     2179    12916    3         CALL M$WRITE (WRITE_BCD_CARD) ALTRET (BAD_DECK) ;

  12916  5 002316   000706 630400 4                  EPPR0   WRITE_BCD_CARD
         5 002317   440001 713400                    CLIMB   alt,write
         5 002320   401400 401760                    pmme    nvectors=4
         5 002321   002350 702000 5                  TSX2    BAD_DECK
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:285  

     2180    12917    3      END /* DO */ ;

  12917  5 002322   000000 235000 xsym               LDA     CUR#
         5 002323   000001 035007                    ADLA    1,DL
         5 002324   000000 755000 xsym               STA     CUR#
         5 002325   000000 236000 xsym               LDQ     BCD#
         5 002326   000000 116000 xsym               CMPQ    CUR#
         5 002327   002303 603000 5                  TRC     s:12914

     2181    12918    2      IF SUBSTR (BCD_B(BCD#-1), 7, 5) = 'DKEND'

  12918  5 002330   000124 402007                    MPY     84,DL
         5 002331   000103 470400 xsym               LDP0    DUP+67
         5 002332   040000 106506                    CMPC    fill='040'O
         5 002333   077754 600005                    ADSC9   -20,Q,PR0                cn=3,n=5
         5 002334   000034 000005 3                  ADSC9   REVISION_KEY+5           cn=0,n=5
         5 002335   002340 601000 5                  TNZ     s:12921

     2182    12919    2      THEN RETURN ;

  12919  5 002336   200004 221300                    LDX1  ! 4,,AUTO
         5 002337   000001 702211                    TSX2  ! 1,X1

     2183    12920    3      ELSE DO ;

     2184    12921    3              CALL DFU_ERR_MSG (%E$DWBC_BAD_DECK, %FALSE) ;

  12921  5 002340   000030 236000 6                  LDQ     24
         5 002341   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002342   000110 236000 6                  LDQ     72
         5 002343   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002344   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002345   000000 011000                    NOP     0

     2185    12922    3              ALTRETURN ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:286  
  12922  5 002346   200004 221300                    LDX1  ! 4,,AUTO
         5 002347   000000 702211                    TSX2  ! 0,X1

     2186    12923    3           END /* ELSE */ ;
     2187    12924
     2188    12925    2   BAD_DECK:
     2189    12926    2      CALL DFU_ERR_MSG (%E$DWBC_BAD_BCD_CARDS, %TRUE) ;

  12926  5 002350   000015 236000 6     BAD_DECK     LDQ     13
         5 002351   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002352   000112 236000 6                  LDQ     74
         5 002353   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002354   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002355   000000 011000                    NOP     0

     2190    12927    2      ALTRETURN ;

  12927  5 002356   200004 221300                    LDX1  ! 4,,AUTO
         5 002357   000000 702211                    TSX2  ! 0,X1

     2191    12928
     2192    12929    2   END DFU_WRITE_BCD_CARDS ;
     2193    12930        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:287  
     2194    12931        /*I*  NAME:        DFU_WRITE_OBJECT_REFLIST
     2195    12932              AUTHOR:      Scott S. Sheppard
     2196    12933              PURPOSE:     Writes Object Reference List to the deckfile
     2197    12934              INTERFACE:   M$WRITE
     2198    12935                           DFU_ERR_MSG
     2199    12936              INPUT:       DCB#      - deckfile or temporary file
     2200    12937                           OBJECT_REFLIST_KEY - Symref for object ref. list
     2201    12938              OUTPUT:      OBJECT_REFLIST_DATA- Symref for object ref. list
     2202    12939              DESCRIPTION: This  procedure writes the object reference list
     2203    12940                           for an object deck from the deckfile.
     2204    12941                           The key is based on the deck number and is always
     2205    12942                           the 201st entry.
     2206    12943        */
     2207    12944        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:288  
     2208    12945    1   DFU_WRITE_OBJECT_REFLIST: PROC (DCB#) ALTRET ;

  12945  5 002360   200004 741300       DFU_WRITE_O* STX1  ! 4,,AUTO

     2209    12946
     2210    12947    2      DCL DCB#  UBIN WORD ALIGNED ;
     2211    12948           %OBJECT_REFLIST_KEY (STCLASS = SYMREF) ;
     2212    12962           %OBJECT_REFLIST_DATA (STCLASS = SYMREF) ;
     2213    12977           %FPT_WRITE (FPTN = WRITE_OBJECT_REFLIST,
     2214    12978                       BIN  = YES,
     2215    12979                       BUF  = OBJECT_REFLIST_DATA,
     2216    12980                       KEY  = OBJECT_REFLIST_KEY,
     2217    12981                       WAIT = YES) ;
     2218    13012
     2219    13013        /* Code */
     2220    13014
     2221    13015    2      WRITE_OBJECT_REFLIST.V.DCB# = DCB# ;

  13015  5 002361   200005 470500                    LDP0    @DCB#,,AUTO
         5 002362   000000 720100                    LXL0    0,,PR0
         5 002363   000732 740000 4                  STX0    WRITE_OBJECT_REFLIST+8

     2222    13016    2      WRITE_OBJECT_REFLIST.BUF_.BOUND = (OBJECT_REFLIST_DATA.NUM_REFS * 4) + 3 ;

  13016  5 002364   000000 236000 xsym               LDQ     OBJECT_REFLIST_DATA
         5 002365   000002 736000                    QLS     2
         5 002366   000003 036007                    ADLQ    3,DL
         5 002367   000020 736000                    QLS     16
         5 002370   000726 676000 4                  ERQ     WRITE_OBJECT_REFLIST+4
         5 002371   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 002372   000726 656000 4                  ERSQ    WRITE_OBJECT_REFLIST+4

     2223    13017    2      CALL M$WRITE (WRITE_OBJECT_REFLIST) ALTRET (NO_OBJECT_REFLIST) ;

  13017  5 002373   000722 630400 4                  EPPR0   WRITE_OBJECT_REFLIST
         5 002374   440001 713400                    CLIMB   alt,write
         5 002375   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:289  
         5 002376   002401 702000 5                  TSX2    NO_OBJECT_REFLIST

     2224    13018    2      RETURN ;

  13018  5 002377   200004 221300                    LDX1  ! 4,,AUTO
         5 002400   000001 702211                    TSX2  ! 1,X1

     2225    13019
     2226    13020    2   NO_OBJECT_REFLIST:
     2227    13021    2      CALL DFU_ERR_MSG (%E$DWOR_BAD_REFLST, %TRUE) ;

  13021  5 002401   000015 236000 6     NO_OBJECT_R* LDQ     13
         5 002402   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002403   000114 236000 6                  LDQ     76
         5 002404   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002405   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002406   000000 011000                    NOP     0

     2228    13022    2      ALTRETURN ;

  13022  5 002407   200004 221300                    LDX1  ! 4,,AUTO
         5 002410   000000 702211                    TSX2  ! 0,X1

     2229    13023
     2230    13024    2   END DFU_WRITE_OBJECT_REFLIST ;
     2231    13025        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:290  
     2232    13026        /*I*  NAME:        DFU_WRITE_LAST_DECK#
     2233    13027              AUTHOR:      Scott S. Sheppard
     2234    13028              PURPOSE:     Writes Last Deck Number to the deckfile
     2235    13029              INTERFACE:   M$WRITE
     2236    13030                           DFU_ERR_MSG
     2237    13031              INPUT:       DCB#      - deckfile or temporary file
     2238    13032                           LAST_DECK_KEY - local constant 'LAST_DECK'
     2239    13033              OUTPUT:      LAST          - Symref of last deck number
     2240    13034              DESCRIPTION: This procedure writes the last deck numb. to the
     2241    13035                           deckfile. The last deck number record, keyed  by
     2242    13036                           the string 'LAST_DECK',     contains   the  deck
     2243    13037                           largest deck number in the deckfile.
     2244    13038        */
     2245    13039
     2246    13040    1   DFU_WRITE_LAST_DECK#: PROC (DCB#) ALTRET ;

  13040  5 002411   200004 741300       DFU_WRITE_L* STX1  ! 4,,AUTO

     2247    13041
     2248    13042    2      DCL DCB#  UBIN WORD ALIGNED ;
     2249    13043           %LAST_DECK_KEY (STCLASS = CONSTANT) ;
     2250    13056           %LAST (STCLASS = SYMREF) ;
     2251    13069           %FPT_WRITE (FPTN = WRITE_LAST_DECK#,
     2252    13070                       BUF  = LAST,
     2253    13071                       BIN  = YES,
     2254    13072                       KEY  = LAST_DECK_KEY,
     2255    13073                       WAIT = YES) ;
     2256    13104
     2257    13105        /* Code */
     2258    13106
     2259    13107    2      WRITE_LAST_DECK#.V.DCB# = DCB# ;

  13107  5 002412   200005 470500                    LDP0    @DCB#,,AUTO
         5 002413   000000 720100                    LXL0    0,,PR0
         5 002414   000746 740000 4                  STX0    WRITE_LAST_DECK#+8

     2260    13108    2      CALL M$WRITE (WRITE_LAST_DECK#) ALTRET (BAD_LAST_DECK#) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:291  

  13108  5 002415   000736 630400 4                  EPPR0   WRITE_LAST_DECK#
         5 002416   440001 713400                    CLIMB   alt,write
         5 002417   401400 401760                    pmme    nvectors=4
         5 002420   002423 702000 5                  TSX2    BAD_LAST_DECK#

     2261    13109    2      RETURN ;

  13109  5 002421   200004 221300                    LDX1  ! 4,,AUTO
         5 002422   000001 702211                    TSX2  ! 1,X1

     2262    13110
     2263    13111    2   BAD_LAST_DECK#:
     2264    13112    2      CALL DFU_ERR_MSG (%E$DWLD_BAD_LAST_DECK#, %TRUE) ;

  13112  5 002423   000015 236000 6     BAD_LAST_DE* LDQ     13
         5 002424   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002425   000116 236000 6                  LDQ     78
         5 002426   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002427   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002430   000000 011000                    NOP     0

     2265    13113    2      ALTRETURN ;

  13113  5 002431   200004 221300                    LDX1  ! 4,,AUTO
         5 002432   000000 702211                    TSX2  ! 0,X1

     2266    13114
     2267    13115    2   END DFU_WRITE_LAST_DECK# ;
     2268    13116        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:292  
     2269    13117        /*I*  NAME:        DFU_WRITE_LOG
     2270    13118              AUTHOR:      Scott S. Sheppard
     2271    13119              PURPOSE:     Writes Deckfile Status to the deckfile
     2272    13120              INTERFACE:   M$WRITE
     2273    13121                           DFU_ERR_MSG
     2274    13122              INPUT:       LOG_KEY - local constant
     2275    13123              OUTPUT:      Deckfile history log written to the deckfile
     2276    13124              DESCRIPTION: This procedure writes the deckfile history log
     2277    13125                           to the deckfile.
     2278    13126        */
     2279    13127
     2280    13128    1   DFU_WRITE_LOG: PROC ALTRET ;

  13128  5 002433   200004 741300       DFU_WRITE_L* STX1  ! 4,,AUTO

     2281    13129
     2282    13130           %LOG_KEY (STCLASS = CONSTANT) ;
     2283    13143           %LOG_B (STCLASS = "BASED (DUP.LOG_V.PTR$)") ;
     2284    13169           %FPT_WRITE (FPTN = WRITE_DECKFILE_LOG,
     2285    13170                       DCB  = M$DECKFILE,
     2286    13171                       KEY  = LOG_KEY,
     2287    13172                       WAIT = YES) ;
     2288    13203
     2289    13204        /* Code */
     2290    13205
     2291    13206    2      WRITE_DECKFILE_LOG.BUF_ = DUP.LOG_V ;

  13206  5 002434   000136 237000 xsym               LDAQ    DUP+94
         5 002435   000756 757000 4                  STAQ    WRITE_DECKFILE_LOG+4

     2292    13207    2      WRITE_DECKFILE_LOG.BUF_.BOUND = LOG_B.COUNT * %LOG_RCD_LGTH ;

  13207  5 002436   000137 470400 xsym               LDP0    DUP+95
         5 002437   000100 101500                    MRL     fill='000'O
         5 002440   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         5 002441   200014 000004                    ADSC9   @SYSTEM_ERR+2,,AUTO      cn=0,n=4
         5 002442   200014 236100                    LDQ     @SYSTEM_ERR+2,,AUTO
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:293  
         5 002443   000150 402007                    MPY     104,DL
         5 002444   000020 736000                    QLS     16
         5 002445   000756 676000 4                  ERQ     WRITE_DECKFILE_LOG+4
         5 002446   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 002447   000756 656000 4                  ERSQ    WRITE_DECKFILE_LOG+4

     2293    13208    2      CALL M$WRITE (WRITE_DECKFILE_LOG) ALTRET (NO_LOG) ;

  13208  5 002450   000752 630400 4                  EPPR0   WRITE_DECKFILE_LOG
         5 002451   440001 713400                    CLIMB   alt,write
         5 002452   401400 401760                    pmme    nvectors=4
         5 002453   002456 702000 5                  TSX2    NO_LOG

     2294    13209    2      RETURN ;

  13209  5 002454   200004 221300                    LDX1  ! 4,,AUTO
         5 002455   000001 702211                    TSX2  ! 1,X1

     2295    13210
     2296    13211    2   NO_LOG:
     2297    13212    2      CALL DFU_ERR_MSG (%E$DWD_NO_LOG, %TRUE) ;

  13212  5 002456   000015 236000 6     NO_LOG       LDQ     13
         5 002457   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002460   000120 236000 6                  LDQ     80
         5 002461   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002462   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002463   000000 011000                    NOP     0

     2298    13213    2      ALTRETURN ;

  13213  5 002464   200004 221300                    LDX1  ! 4,,AUTO
         5 002465   000000 702211                    TSX2  ! 0,X1

     2299    13214
     2300    13215    2   END DFU_WRITE_LOG ;
     2301    13216        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:294  
     2302    13217        /*I*  NAME:        DFU_WRITE_REVISION
     2303    13218              AUTHOR:      Scott S. Sheppard
     2304    13219              PURPOSE:     Writes IFAD Revision to the deckfile
     2305    13220              INTERFACE:   M$WRITE
     2306    13221                           DFU_ERR_MSG
     2307    13222              INPUT:       REVISION_KEY - local constant
     2308    13223                           REVISION_B
     2309    13224              DESCRIPTION: This procedure writes the IFAD revision buffer
     2310    13225                           to the deckfile.
     2311    13226        */
     2312    13227
     2313    13228    1   DFU_WRITE_REVISION: PROC ALTRET ;

  13228  5 002466   200004 741300       DFU_WRITE_R* STX1  ! 4,,AUTO

     2314    13229
     2315    13230           %REVISION_KEY (STCLASS = CONSTANT) ;
     2316    13243           %REVISION_B (STCLASS = SYMREF) ;
     2317    13264           %FPT_WRITE  (FPTN = WRITE_DECKFILE_REVISION,
     2318    13265                        BUF  = REVISION_B,
     2319    13266                        DCB  = M$DECKFILE,
     2320    13267                        KEY  = REVISION_KEY,
     2321    13268                        WAIT = YES) ;
     2322    13299
     2323    13300        /* Code */
     2324    13301
     2325    13302    2      CALL M$WRITE (WRITE_DECKFILE_REVISION) ALTRET (NO_REVISION) ;

  13302  5 002467   000766 630400 4                  EPPR0   WRITE_DECKFILE_REVISION
         5 002470   440001 713400                    CLIMB   alt,write
         5 002471   401400 401760                    pmme    nvectors=4
         5 002472   002475 702000 5                  TSX2    NO_REVISION

     2326    13303    2      RETURN ;

  13303  5 002473   200004 221300                    LDX1  ! 4,,AUTO
         5 002474   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:295  

     2327    13304
     2328    13305    2   NO_REVISION:
     2329    13306    2      CALL DFU_ERR_MSG (%E$DWR_NO_REVISION, %TRUE) ;

  13306  5 002475   000015 236000 6     NO_REVISION  LDQ     13
         5 002476   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002477   000122 236000 6                  LDQ     82
         5 002500   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002501   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002502   000000 011000                    NOP     0

     2330    13307    2      ALTRETURN ;

  13307  5 002503   200004 221300                    LDX1  ! 4,,AUTO
         5 002504   000000 702211                    TSX2  ! 0,X1

     2331    13308
     2332    13309    2   END DFU_WRITE_REVISION ;
     2333    13310        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:296  
     2334    13311        /*I*  NAME:        DFU_OPEN_TEMP
     2335    13312              AUTHOR:      Scott S. Sheppard
     2336    13313              PURPOSE:     Opens Temporary File
     2337    13314              INTERFACE:   M$OPEN Monitor Service
     2338    13315              INPUT:       TEMP_OPEN_TYPE   - update or read
     2339    13316              OUTPUT:      M$TEMP DCB opened
     2340    13317              DESCRIPTION: This procedure opens a temporary file used to store
     2341    13318                           records before they are written into the deckfile.
     2342    13319        */
     2343    13320
     2344    13321    1   DFU_OPEN_TEMP: PROC (TEMP_OPEN_TYPE) ALTRET ;

  13321  5 002505   200004 741300       DFU_OPEN_TE* STX1  ! 4,,AUTO

     2345    13322
     2346    13323    2      DCL TEMP_OPEN_TYPE             UBIN WORD ALIGNED ;
     2347    13324           %FPT_OPEN (FPTN  = TEMP_CREATE,
     2348    13325                      ACS   = DIRECT,
     2349    13326                      ASN   = FILE,
     2350    13327                      DCB   = M$TEMP,
     2351    13328                      DISP  = NAMED,
     2352    13329                      EXIST = NEWFILE,
     2353    13330                      FUN   = CREATE,
     2354    13331                      NAME  = TEMP_NAME,
     2355    13332                      ORG   = KEYED,
     2356    13333                      SHARE = NONE) ;
     2357    13442           %FPT_OPEN (FPTN  = TEMP_READ,
     2358    13443                      ACS   = DIRECT,
     2359    13444                      ASN   = FILE,
     2360    13445                      DCB   = M$TEMP,
     2361    13446                      DISP  = NAMED,
     2362    13447                      EXIST = OLDFILE,
     2363    13448                      FUN   = IN,
     2364    13449                      NAME  = TEMP_NAME,
     2365    13450                      ORG   = KEYED,
     2366    13451                      SHARE = NONE) ;
     2367    13560           %VLP_NAME (FPTN  = TEMP_NAME,
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:297  
     2368    13561                      NAME  = '*DEER_TEMP',
     2369    13562                      LEN   = 10) ;
     2370    13589           %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:298  
     2371    13590        /* Code */
     2372    13591
     2373    13592    3      DO CASE (TEMP_OPEN_TYPE) ;

  13592  5 002506   200005 470500                    LDP0    @TEMP_OPEN_TYPE,,AUTO
         5 002507   000000 235100                    LDA     0,,PR0
         5 002510   000003 115007                    CMPA    3,DL
         5 002511   002513 602005 5                  TNC     s:13592+5,AL
         5 002512   002530 710000 5                  TRA     ERROR
         5 002513   002516 710000 5                  TRA     s:13594
         5 002514   002530 710000 5                  TRA     ERROR
         5 002515   002523 710000 5                  TRA     s:13596

     2374    13593    3         CASE (%CREATE_FILE) ;

     2375    13594    3            CALL M$OPEN (TEMP_CREATE) ALTRET (ERROR) ;

  13594  5 002516   001002 630400 4                  EPPR0   TEMP_CREATE
         5 002517   450000 713400                    CLIMB   alt,open
         5 002520   410400 401760                    pmme    nvectors=18
         5 002521   002530 702000 5                  TSX2    ERROR
         5 002522   002540 710000 5                  TRA     s:13602

     2376    13595    3         CASE (%READ_FILE) ;

     2377    13596    3            CALL M$OPEN (TEMP_READ) ALTRET (ERROR) ;

  13596  5 002523   001074 630400 4                  EPPR0   TEMP_READ
         5 002524   450000 713400                    CLIMB   alt,open
         5 002525   410400 401760                    pmme    nvectors=18
         5 002526   002530 702000 5                  TSX2    ERROR
         5 002527   002540 710000 5                  TRA     s:13602

     2378    13597    3         CASE (ELSE) ;

     2379    13598    3   ERROR:
     2380    13599    3            CALL DFU_ERR_MSG (%E$DOT_OPEN_ERROR, %TRUE) ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:299  

  13599  5 002530   000015 236000 6     ERROR        LDQ     13
         5 002531   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002532   000124 236000 6                  LDQ     84
         5 002533   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002534   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002535   000000 011000                    NOP     0

     2381    13600    3            ALTRETURN ;

  13600  5 002536   200004 221300                    LDX1  ! 4,,AUTO
         5 002537   000000 702211                    TSX2  ! 0,X1

     2382    13601    3      END /* CASE */ ;

     2383    13602    2      RETURN ;

  13602  5 002540   200004 221300                    LDX1  ! 4,,AUTO
         5 002541   000001 702211                    TSX2  ! 1,X1

     2384    13603
     2385    13604    2   END DFU_OPEN_TEMP ;
     2386    13605        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:300  
     2387    13606        /*I*  NAME:        DFU_CLOSE_TEMP
     2388    13607              AUTHOR:      Scott S. Sheppard
     2389    13608              PURPOSE:     Closes Temporary File
     2390    13609              INTERFACE:   M$CLOSE
     2391    13610              INPUT:       TEMP_CLOSE_TYPE  - save or discard
     2392    13611              OUTPUT:      M$TEMP DCB closed
     2393    13612              DESCRIPTION: This procedure closes the DEER temporary file,
     2394    13613                           saving it or discarding it as dictated by  the
     2395    13614                           close type parameter.
     2396    13615        */
     2397    13616        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:301  
     2398    13617    1   DFU_CLOSE_TEMP: PROC (TEMP_CLOSE_TYPE) ALTRET ;

  13617  5 002542   200004 741300       DFU_CLOSE_T* STX1  ! 4,,AUTO

     2399    13618
     2400    13619    2      DCL TEMP_CLOSE_TYPE            UBIN WORD ALIGNED ;
     2401    13620           %F$DCB ;
     2402    13677           %FPT_CLOSE (FPTN = TEMP_SAVE,
     2403    13678                       DCB  = M$TEMP,
     2404    13679                       DISP = SAVE,
     2405    13680                       RELG = NO) ;
     2406    13722           %FPT_CLOSE (FPTN = TEMP_DISCARD,
     2407    13723                       DCB  = M$TEMP,
     2408    13724                       DISP = RELEASE,
     2409    13725                       RELG = YES) ;
     2410    13767
     2411    13768        /* Code */
     2412    13769
     2413    13770    2      IF DCBADDR (DCBNUM (M$TEMP)) -> F$DCB.FCD#

  13770  5 002543   000000 236007 xsym               LDQ     M$TEMP,DL
         5 002544   000125 470400 6                  LDP0    85
         5 002545   000000 471500                    LDP1    0,,PR0
         5 002546   100000 473506                    LDP3    0,QL,PR1
         5 002547   300031 236100                    LDQ     25,,PR3
         5 002550   020000 316007                    CANQ    8192,DL
         5 002551   002603 600000 5                  TZE     s:13782

     2414    13771    3      THEN DO CASE (TEMP_CLOSE_TYPE) ;

  13771  5 002552   200005 473500                    LDP3    @TEMP_CLOSE_TYPE,,AUTO
         5 002553   300000 235100                    LDA     0,,PR3
         5 002554   000002 115007                    CMPA    2,DL
         5 002555   002557 602005 5                  TNC     s:13771+5,AL
         5 002556   002573 710000 5                  TRA     ERROR
         5 002557   002561 710000 5                  TRA     s:13773
         5 002560   002566 710000 5                  TRA     s:13775
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:302  

     2415    13772    3              CASE (%SAVE_FILE) ;

     2416    13773    3                 CALL M$CLOSE (TEMP_SAVE) ALTRET (ERROR) ;

  13773  5 002561   001172 630400 4                  EPPR0   TEMP_SAVE
         5 002562   450001 713400                    CLIMB   alt,close
         5 002563   406000 401760                    pmme    nvectors=13
         5 002564   002573 702000 5                  TSX2    ERROR
         5 002565   002603 710000 5                  TRA     s:13782

     2417    13774    3              CASE (%DISCARD_FILE) ;

     2418    13775    3                 CALL M$CLOSE (TEMP_DISCARD) ALTRET (ERROR) ;

  13775  5 002566   001230 630400 4                  EPPR0   TEMP_DISCARD
         5 002567   450001 713400                    CLIMB   alt,close
         5 002570   406000 401760                    pmme    nvectors=13
         5 002571   002573 702000 5                  TSX2    ERROR
         5 002572   002603 710000 5                  TRA     s:13782

     2419    13776    3              CASE (ELSE) ;

     2420    13777    3   ERROR:
     2421    13778    3                 CALL DFU_ERR_MSG (%E$DCT_CLOSE_ERROR, %TRUE) ;

  13778  5 002573   000015 236000 6     ERROR        LDQ     13
         5 002574   200012 756100                    STQ     @ERROR_CODE+1,,AUTO
         5 002575   000127 236000 6                  LDQ     87
         5 002576   200011 756100                    STQ     @LGTH+2,,AUTO
         5 002577   002605 701000 5                  TSX1    DFU_ERR_MSG
         5 002600   000000 011000                    NOP     0

     2422    13779    3                 ALTRETURN ;

  13779  5 002601   200004 221300                    LDX1  ! 4,,AUTO
         5 002602   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:303  

     2423    13780    3           END /* THEN */ ;

     2424    13781    2      ELSE /* Do Nothing */ ;
     2425    13782    2      RETURN ;

  13782  5 002603   200004 221300                    LDX1  ! 4,,AUTO
         5 002604   000001 702211                    TSX2  ! 1,X1

     2426    13783
     2427    13784    2   END DFU_CLOSE_TEMP ;
     2428    13785        %EJECT ;
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:304  
     2429    13786        /*I*  NAME:        DFU_ERR_MSG
     2430    13787              AUTHOR:      Scott S. Sheppard
     2431    13788              PURPOSE:     Function Utility Error Message Reporter
     2432    13789              INTERFACE:   TOU$DU_USER_WRITE
     2433    13790                           TOU$DU_SYSTEM_ERRMSG
     2434    13791              INPUT:       ERROR_CODE - error message code
     2435    13792                           SYSTEM_ERR - system message flag
     2436    13793              OUTPUT:      DUP.MSG_CODE - set to appropriate message code
     2437    13794              DESCRIPTION: This procedure sets the message code and outputs
     2438    13795                           an error message.
     2439    13796        */
     2440    13797
     2441    13798    1   DFU_ERR_MSG: PROC (ERROR_CODE, SYSTEM_ERR) ;

  13798  5 002605   200010 741300       DFU_ERR_MSG  STX1  ! @LGTH+1,,AUTO

     2442    13799
     2443    13800    2      DCL ERROR_CODE  UBIN WORD ALIGNED ;
     2444    13801    2      DCL SYSTEM_ERR  BIT (1) CALIGNED ;
     2445    13802
     2446    13803        /* Code */
     2447    13804
     2448    13805    2      DUP.MSG_CODE = ERROR_CODE ;

  13805  5 002606   200011 470500                    LDP0    @ERROR_CODE,,AUTO
         5 002607   000000 235100                    LDA     0,,PR0
         5 002610   000020 755000 xsym               STA     DUP+16

     2449    13806    2      CALL TOU$DU_USER_WRITE ;

  13806  5 002611   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 002612   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         5 002613   000000 011000                    NOP     0

     2450    13807    2      IF SYSTEM_ERR

  13807  5 002614   200012 470500                    LDP0    @SYSTEM_ERR,,AUTO
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:305  
         5 002615   000000 066500                    CMPB    filb='0'B
         5 002616   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         5 002617   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         5 002620   002624 600000 5                  TZE     s:13810

     2451    13808    2      THEN CALL TOU$DU_SYSTEM_ERRMSG ;

  13808  5 002621   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 002622   000000 701000 xent               TSX1    TOU$DU_SYSTEM_ERRMSG
         5 002623   000000 011000                    NOP     0

     2452    13809    2      ELSE /* No system error message requested. */ ;
     2453    13810    2      RETURN ;

  13810  5 002624   200010 221300                    LDX1  ! @LGTH+1,,AUTO
         5 002625   000001 702211                    TSX2  ! 1,X1

MASTER_KEY
 Sect OctLoc
   3     000   016115 101123   124105 122137   103101 124101   114117 107***    .MASTER_CATALOG.

LAST_DECK_KEY
 Sect OctLoc
   3     004   011114 101123   124137 104105   103113 ******                    .LAST_DECK..

LOG_KEY
 Sect OctLoc
   3     007   010110 111123   124137 114117   107*** ******                    .HIST_LOG...

REVISION_KEY
 Sect OctLoc
   3     012   010122 105126   111123 111117   116*** ******                    .REVISION...

MASTER_KEY
 Sect OctLoc
   3     015   016115 101123   124105 122137   103101 124101   114117 107***    .MASTER_CATALOG.

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:306  
LAST_DECK_KEY
 Sect OctLoc
   3     021   011114 101123   124137 104105   103113 ******                    .LAST_DECK..

LOG_KEY
 Sect OctLoc
   3     024   010110 111123   124137 114117   107*** ******                    .HIST_LOG...

REVISION_KEY
 Sect OctLoc
   3     027   010122 105126   111123 111117   116*** ******                    .REVISION...

(unnamed)
 Sect OctLoc
   3     032   117102 112105   103124 040040   104113 105116   104040 040040    OBJECT  DKEND
   3     036   110116 111117   101060 040040                                    HNIOA0

MASTER_DATA
 Sect OctLoc
   4     000   000000 000000   104105 105122                                    ....DEER

READ_MASTER_CONTROL
 Sect OctLoc
   4     002   000005 777640   000012 006000   000003 577640   000000 006000    ................
   4     006   000001 777640   000000 006000   000000 177640   000000 006014    ................
   4     012   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     016   000000 000000   000000 000000                                    ........

MASTER_ENTRY_KEY
 Sect OctLoc
   4     020   004000 000000   000*** ******                                    ........

CATALOG_KEY
 Sect OctLoc
   4     022   027040 040040   040040 040040   040040 040040   040040 040040    .
   4     026   040040 040040   040040 000000                                          ..

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:307  
READ_MASTER_ENTRY
 Sect OctLoc
   4     030   000005 777640   000040 006000   000001 177640   000020 006000    ..... ..........
   4     034   000005 777640   000022 006000   000000 177640   000000 006014    ................
   4     040   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     044   000000 000000   000000 000000                                    ........

CATALOG_DATA
 Sect OctLoc
   4     046   000000 000000   104105 105122                                    ....DEER

READ_CATALOG_CONTROL
 Sect OctLoc
   4     050   000005 777640   000060 006000   000005 777640   000000 006000    .....0..........
   4     054   000001 777640   000046 006000   000000 177640   000000 006014    .....&..........
   4     060   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     064   000000 000000   000000 000000                                    ........

SUBCATALOG_KEY
 Sect OctLoc
   4     066   004000 000000   000*** ******                                    ........

SUBCATALOG_DATA
 Sect OctLoc
   4     070   040040 040040   040040 040040   040040 040040   040040 040040
   4     104*  040040 040040

READ_SUBCATALOG
 Sect OctLoc
   4     106   000005 777640   000116 006000   000001 177640   000066 006000    .....N.......6..
   4     112   000014 777640   000070 006000   000000 177640   000000 006014    .....8..........
   4     116   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     122   000000 000000   000000 000000                                    ........

CATALOG_ENTRY_KEY
 Sect OctLoc
   4     124   004000 000000   000*** ******                                    ........
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:308  

OBJECT_KEY
 Sect OctLoc
   4     126   027040 040040   040040 040040   040040 040040   040040 040040    .
   4     132   040040 040040   040040 040040

READ_CATALOG_ENTRY
 Sect OctLoc
   4     134   000005 777640   000144 006000   000001 177640   000124 006000    .....d.......T..
   4     140   000005 777640   000126 006000   000000 177640   000000 006014    .....V..........
   4     144   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     150   000000 000000   000000 000000                                    ........

OBJECT
 Sect OctLoc
   4     152   040040 040040   040040 040040   040040 040040   040040 040040
   4     176*  000000 000000   000000 000000   000000 000000   000000 000000    ................

READ_OBJECT
 Sect OctLoc
   4     202   000005 777640   000212 006000   000005 777640   000000 006000    ................
   4     206   000027 777640   000152 006000   000000 177640   000000 006014    .....j..........
   4     212   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     216   000000 000000   000000 000000                                    ........

READ_BINARY_DECK
 Sect OctLoc
   4     220   000005 777640   000230 006000   000001 177640   000000 006000    ................
   4     224   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     230   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     234   000000 000000   000000 000000                                    ........

BCD_KEY
 Sect OctLoc
   4     236   004000 000000   000*** ******                                    ........

READ_BCD_CARD
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:309  
 Sect OctLoc
   4     240   000005 777640   000250 006000   000001 177640   000236 006000    ................
   4     244   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     250   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     254   000000 000000   000000 000000                                    ........

OBJECT_REFLIST_KEY
 Sect OctLoc
   4     256   004000 000000   311*** ******                                    ........

OBJECT_REFLIST_DATA
 Sect OctLoc
   4     260   000000 000000   000000 000000   000000 000000   000000 000000    ................
   4     274*  000000 000000   000000 000000   000000 000000   000000 000000    ................

READ_OBJECT_REFLIST
 Sect OctLoc
   4     300   000005 777640   000310 006000   000001 177640   000256 006000    ................
   4     304   000017 777640   000260 006000   000000 177640   000000 006014    ................
   4     310   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     314   000000 000000   000000 000000                                    ........

LAST
 Sect OctLoc
   4     316   000000 044060   060060 ******                                    ..$000..

READ_LAST_DECK#
 Sect OctLoc
   4     320   000005 777640   000330 006000   000002 377640   000004 006000    ................
   4     324   000001 377640   000316 006000   000000 177640   000000 006014    ................
   4     330   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     334   000000 000000   000000 000000                                    ........

READ_DECKFILE_LOG
 Sect OctLoc
   4     336   000005 777640   000346 006000   000002 377640   000007 006000    ................
   4     342   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:310  
   4     346   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     352   000000 000000   000000 000000                                    ........

REVISION_B
 Sect OctLoc
   4     354   040040 040040   040040 103120   055066 040040   040040 040040          CP-6
   4     360   040040 040040   040*** ******                                         ...

READ_DECKFILE_REVISION
 Sect OctLoc
   4     362   000005 777640   000372 006000   000002 377640   000012 006000    ................
   4     366   000005 177640   000354 006000   000000 177640   000000 006014    ................
   4     372   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     376   000000 000000   000000 000000                                    ........

OLD_OBJECT
 Sect OctLoc
   4     400   040040 040040   040040 040040   040040 040040   040040 040040
   4     424*  000000 000000   000000 000000   000000 000000   000000 000000    ................

READ_OBJECT
 Sect OctLoc
   4     430   000005 777640   000440 006000   000005 777640   000000 006000    ................
   4     434   000027 777640   000400 006000   000000 177640   000000 006014    ................
   4     440   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     444   000000 000000   000000 000000                                    ........

READ_OBJECT
 Sect OctLoc
   4     446   000005 777640   000456 006000   000005 777640   000000 006000    ................
   4     452   000027 777640   000000 006000   000000 177640   000000 006014    ................
   4     456   000000 600000   000000 000000   000000 000000   000000 000000    ................
   4     462   000000 000000   000000 000000                                    ........

DEL_ENTRY
 Sect OctLoc
   4     464   000001 777640   000474 006000   000001 177640   000000 006000    ................
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:311  
   4     470   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     474   000000 000000   000000 000000                                    ........

BINARY_KEY
 Sect OctLoc
   4     476   004000 000000   000*** ******                                    ........

DEL_$OBJECT_CARD
 Sect OctLoc
   4     500   000001 777640   000510 006000   000005 777640   000000 006000    ................
   4     504   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     510   000000 000000   000000 000000                                    ........

DEL_BINARY_THRU_REFLIST
 Sect OctLoc
   4     512   000001 777640   000522 006000   000001 177640   000476 006000    ................
   4     516   000001 177640   000000 006000   000000 177640   000000 006014    ................
   4     522   000000 000000   000000 000000                                    ........

DEL_ENTRY
 Sect OctLoc
   4     524   000001 777640   000534 006000   000001 177640   000000 006000    ................
   4     530   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     534   000000 000000   000000 000000                                    ........

DEL_CATALOG
 Sect OctLoc
   4     536   000001 777640   000546 006000   000005 777640   000000 006000    ................
   4     542   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     546   000000 000000   000000 000000                                    ........

DEL_SUBCATALOG
 Sect OctLoc
   4     550   000001 777640   000560 006000   000001 177640   000000 006000    ................
   4     554   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     560   000000 000000   000000 000000                                    ........

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:312  
WRITE_MASTER_CONTROL
 Sect OctLoc
   4     562   000003 777640   000572 006000   000003 577640   000015 006000    ................
   4     566   000001 777640   000000 006000   000000 177640   000000 006014    ................
   4     572   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_MASTER_ENTRY
 Sect OctLoc
   4     576   000003 777640   000606 006000   000001 177640   000000 006000    ................
   4     602   000005 777640   000000 006000   000000 177640   000000 006014    ................
   4     606   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_CATALOG_CONTROL
 Sect OctLoc
   4     612   000003 777640   000622 006000   000005 777640   000000 006000    ................
   4     616   000001 777640   000000 006000   000000 177640   000000 006014    ................
   4     622   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_SUBCATALOG
 Sect OctLoc
   4     626   000003 777640   000636 006000   000001 177640   000000 006000    ................
   4     632   000014 777640   000000 006000   000000 177640   000000 006014    ................
   4     636   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_CATALOG_ENTRY
 Sect OctLoc
   4     642   000003 777640   000652 006000   000001 177640   000000 006000    ................
   4     646   000005 777640   000000 006000   000000 177640   000000 006014    ................
   4     652   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_OBJECT
 Sect OctLoc
   4     656   000003 777640   000666 006000   000005 777640   000000 006000    ................
   4     662   000027 777640   000000 006000   000000 177640   000000 006014    ................
   4     666   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_BINARY_DECK
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:313  
 Sect OctLoc
   4     672   000003 777640   000702 006000   000001 177640   000000 006000    ................
   4     676   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     702   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_BCD_CARD
 Sect OctLoc
   4     706   000003 777640   000716 006000   000001 177640   000000 006000    ................
   4     712   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     716   000000 400400   000000 000000   000000 000000   000000 000000    ................

WRITE_OBJECT_REFLIST
 Sect OctLoc
   4     722   000003 777640   000732 006000   000001 177640   000000 006000    ................
   4     726   000017 777640   000000 006000   000000 177640   000000 006014    ................
   4     732   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_LAST_DECK#
 Sect OctLoc
   4     736   000003 777640   000746 006000   000002 377640   000021 006000    ................
   4     742   000001 377640   000000 006000   000000 177640   000000 006014    ................
   4     746   000000 400400   000000 000000   000000 000000   040000 000000    ............ ...

WRITE_DECKFILE_LOG
 Sect OctLoc
   4     752   000003 777640   000762 006000   000002 377640   000024 006000    ................
   4     756   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4     762   000000 400400   000000 000000   000000 000000   000000 000000    ................

WRITE_DECKFILE_REVISION
 Sect OctLoc
   4     766   000003 777640   000776 006000   000002 377640   000027 006000    ................
   4     772   000005 177640   000000 006000   000000 177640   000000 006014    ................
   4     776   000000 400400   000000 000000   000000 000000   000000 000000    ................

TEMP_CREATE
 Sect OctLoc
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:314  
   4    1002   000025 777640   001046 006000   000000 177640   000000 006014    .....&..........
   4    1006   000000 177640   000000 006014   000002 577640   001166 006000    .............v..
   4    1012   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4    1046*  000000 000672   000000 003001   252525 002002   000040 252520    ............. ..
   4    1052   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   4    1056   000000 000000   000000 000000   000000 000000   000000 000000    ................
   4    1062   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   4    1066   040040 040040   000000 000000   000000 000000   000000 000000        ............
   4    1072   000000 000000   ****** ******                                    ........

TEMP_READ
 Sect OctLoc
   4    1074   000025 777640   001140 006000   000000 177640   000000 006014    .....`..........
   4    1100   000000 177640   000000 006014   000002 577640   001166 006000    .............v..
   4    1104   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4    1140*  000000 000472   000000 002001   252525 002002   000040 252520    ............. ..
   4    1144   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   4    1150   000000 000000   000000 000000   000000 000000   000000 000000    ................
   4    1154   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   4    1160   040040 040040   000000 000000   000000 000000   000000 000000        ............
   4    1164   000000 000000   ****** ******                                    ........

TEMP_NAME
 Sect OctLoc
   4    1166   012052 104105   105122 137124   105115 120***                    .*DEER_TEMP.

TEMP_SAVE
 Sect OctLoc
   4    1172   000003 777640   001224 006000   000000 177640   000000 006014    ................
   4    1176   000000 177640   000000 006014   000000 177640   000000 006014    ................
   4    1222*  000000 177640   000000 006014   000000 000002   000000 000040    ...............
   4    1226   000220 000000   000000 000000                                    ........

TEMP_DISCARD
 Sect OctLoc
   4    1230   000003 777640   001262 006000   000000 177640   000000 006014    ................
   4    1234   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:315  
   4    1260*  000000 177640   000000 006014   000000 200001   000000 000040    ...............
   4    1264   000220 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   6     000   000100 006000   037777 777640   000003 777774   000041 777640    .@...........!..
   6     004   000000 000210   000004 006000   001177 777640   000140 006000    .............`..
   6     010   000141 006000   001214 777640   000000 005064   000012 006000    .a.........4....
   6     014   000000 000372   000030 006000   000014 006000   000000 000373    ................
   6     020   000017 006000   000000 000374   000021 006000   000000 000375    ................
   6     024   000023 006000   000000 000376   000025 006000   000000 000377    ................
   6     030   000002 006000   000027 006000   000000 000401   000032 006000    ................
   6     034   000000 000400   000034 006000   000024 777640   000000 000402    ................
   6     040   000037 006000   000000 000403   000041 006000   000000 000404    .........!......
   6     044   000043 006000   000000 000405   000045 006000   000000 000432    .#.......%......
   6     050   000047 006000   000000 000434   000051 006000   000000 000407    .'.......)......
   6     054   000053 006000   000000 000406   000055 006000   000000 000410    .+.......-......
   6     060   000057 006000   000000 000411   000061 006000   000000 000412    ./.......1......
   6     064   000063 006000   000000 000413   000065 006000   000000 000414    .3.......5......
   6     070   000067 006000   000000 000415   000071 006000   000000 000416    .7.......9......
   6     074   000073 006000   000000 000417   000075 006000   000000 000420    .;.......=......
   6     100   000077 006000   000000 000421   000101 006000   000000 000422    .?.......A......
   6     104   000103 006000   000000 000423   000105 006000   000000 000424    .C.......E......
   6     110   000107 006000   000000 000425   000111 006000   000000 000426    .G.......I......
   6     114   000113 006000   000000 000427   000115 006000   000000 000433    .K.......M......
   6     120   000117 006000   000000 000435   000121 006000   000000 000430    .O.......Q......
   6     124   000123 006000   000000 006003   000000 000431   000126 006000    .S...........V..
     2454    13811
     2455    13812    2   END DFU_ERR_MSG ;
     2456    13813    1   END TOU$DFU ;

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:316  
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOU$DFU.
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:317  

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   138- 13813    429    30     5      0  y y y    0   1 TOU$DFU
                                  5      3    y y    0     TOU$DFU_DF_RD_MASTER_CONTROL
                                  5     14    y y    0     TOU$DFU_DF_RD_MASTER_ENTRY
                                  5     25    y y    0     TOU$DFU_DF_RD_CATALOG_CONTROL
                                  5     36    y y    0     TOU$DFU_DF_RD_SUBCATALOG
                                  5     47    y y    0     TOU$DFU_DF_RD_CATALOG_ENTRY
                                  5     60    y y    0     TOU$DFU_DF_RD_OBJECT
                                  5     71    y y    0     TOU$DFU_DF_RD_BINARY
                                  5    104    y y    0     TOU$DFU_DF_RD_FILE
                                  5    127    y y    0     TOU$DFU_DF_RD_BCD_CARDS
                                  5    140    y y    0     TOU$DFU_DF_RD_OBJECT_REFLIST
                                  5    151    y y    0     TOU$DFU_DF_RD_LAST_DECK#
                                  5    162    y y    0     TOU$DFU_DF_RD_LOG
                                  5    167    y y    0     TOU$DFU_DF_RD_REVISION
                                  5    174    y y    0     TOU$DFU_DF_CHECK_ALREADY_SAVED
                                  5    201    y y    0     TOU$DFU_DF_CHECK_FOR_KEY
                                  5    206    y y    0     TOU$DFU_DF_DL_CATALOG_ENTRY
                                  5    213    y y    0     TOU$DFU_DF_DL_DECK
                                  5    220    y y    0     TOU$DFU_DF_DL_MASTER_ENTRY
                                  5    225    y y    0     TOU$DFU_DF_DL_CATALOG
                                  5    232    y y    0     TOU$DFU_DF_WR_MASTER_CONTROL
                                  5    243    y y    0     TOU$DFU_DF_WR_MASTER_ENTRY
                                  5    254    y y    0     TOU$DFU_DF_WR_CATALOG_CONTROL
                                  5    265    y y    0     TOU$DFU_DF_WR_SUBCATALOG
                                  5    276    y y    0     TOU$DFU_DF_WR_CATALOG_ENTRY
                                  5    307    y y    0     TOU$DFU_DF_WR_OBJECT
                                  5    320    y y    0     TOU$DFU_DF_WR_BINARY
                                  5    340    y y    0     TOU$DFU_DF_WR_FILE
                                  5    371    y y    0     TOU$DFU_DF_WR_HDR
                                  5    416    y y    0     TOU$DFU_DF_WR_DIR
                                  5    444    y y    0     TOU$DFU_DF_WR_BCD_CARDS
                                  5    455    y y    0     TOU$DFU_DF_WR_OBJECT_REFLIST
                                  5    466    y y    0     TOU$DFU_DF_WR_LAST_DECK#
                                  5    477    y y    0     TOU$DFU_DF_WR_LOG
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:318  
                                  5    504    y y    0     TOU$DFU_DF_WR_REVISION
                                  5    511    y y    0     TOU$DFU_OPEN_TEMP
                                  5    520    y y    0     TOU$DFU_CLOSE_TEMP
                                  5    527    y y    0     TOU$DFU_TF_RD_MASTER_CONTROL
                                  5    540    y y    0     TOU$DFU_TF_RD_MASTER_ENTRY
                                  5    551    y y    0     TOU$DFU_TF_RD_CATALOG_CONTROL
                                  5    562    y y    0     TOU$DFU_TF_RD_SUBCATALOG
                                  5    573    y y    0     TOU$DFU_TF_RD_CATALOG_ENTRY
                                  5    604    y y    0     TOU$DFU_TF_RD_OBJECT
                                  5    615    y y    0     TOU$DFU_TF_RD_BINARY
                                  5    630    y y    0     TOU$DFU_TF_RD_FILE
                                  5    653    y y    0     TOU$DFU_TF_RD_HDR
                                  5    676    y y    0     TOU$DFU_TF_RD_DIR
                                  5    721    y y    0     TOU$DFU_TF_RD_BCD_CARDS
                                  5    732    y y    0     TOU$DFU_TF_RD_OBJECT_REFLIST
                                  5    743    y y    0     TOU$DFU_TF_RD_LAST_DECK#
                                  5    754    y y    0     TOU$DFU_TF_WR_MASTER_CONTROL
                                  5    765    y y    0     TOU$DFU_TF_WR_MASTER_ENTRY
                                  5    776    y y    0     TOU$DFU_TF_WR_CATALOG_CONTROL
                                  5   1007    y y    0     TOU$DFU_TF_WR_SUBCATALOG
                                  5   1020    y y    0     TOU$DFU_TF_WR_CATALOG_ENTRY
                                  5   1031    y y    0     TOU$DFU_TF_WR_OBJECT
                                  5   1042    y y    0     TOU$DFU_TF_WR_BINARY
                                  5   1062    y y    0     TOU$DFU_TF_WR_FILE
                                  5   1113    y y    0     TOU$DFU_TF_WR_DIR
                                  5   1140    y y    0     TOU$DFU_TF_WR_HDR
                                  5   1171    y y    0     TOU$DFU_TF_WR_BCD_CARDS
                                  5   1202    y y    0     TOU$DFU_TF_WR_OBJECT_REFLIST
                                  5   1213    y y    0     TOU$DFU_TF_WR_LAST_DECK#
  1 10105- 10189      6     7     5   1225  y y y    1     2 DFU_READ_MASTER_CONTROL
  2 10205- 10290      6     7     5   1247  y y y    1     2 DFU_READ_MASTER_ENTRY
  3 10306- 10391      6     7     5   1271  y y y    1     2 DFU_READ_CATALOG_CONTROL
  4 10412- 10496      6     7     5   1313  y y y    1     2 DFU_READ_SUBCATALOG
  5 10511- 10595      6     7     5   1335  y y y    1     2 DFU_READ_CATALOG_ENTRY
  6 10616- 10754     10     9     5   1357  y y y    1     2 DFU_READ_OBJECT
  7 10775- 10847      7     9     5   1415  y y y    2     2 DFU_READ_BINARY
  8 10866- 10959     14    11     5   1443  y y y    1     2 DFU_READ_BCD_CARDS
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:319  
  9 10986- 11072      6     7     5   1527  y y y    1     2 DFU_READ_OBJECT_REFLIST
 10 11088- 11171      6     7     5   1551  y y y    1     2 DFU_READ_LAST_DECK#
 11 11185- 11254      6     4     5   1573  y y y    0     2 DFU_READ_LOG
 12 11267- 11357      5     4     5   1614  y y y    0     2 DFU_READ_REVISION
 13 11381- 11590     13    20     5   1633  y y y    0     2 DFU_CHECK_ALREADY_SAVED
 14 11606- 11740      6     4     5   1716  y y y    0     2 DFU_CHECK_FOR_KEY
 15 11759- 11822      7     8     5   1743  y y y    0     2 DFU_DELETE_CATALOG_ENTRY
 16 11845- 11942      6     7     5   1770  y y y    0     2 DFU_DELETE_DECK
 17 11960- 12023      7     8     5   2013  y y y    0     2 DFU_DELETE_MASTER_ENTRY
 18 12039- 12122      6     6     5   2040  y y y    0     2 DFU_DELETE_CATALOG
 19 12139- 12215      6     7     5   2063  y y y    1     2 DFU_WRITE_MASTER_CONTROL
 20 12233- 12310      6     7     5   2105  y y y    1     2 DFU_WRITE_MASTER_ENTRY
 21 12329- 12406      6     7     5   2127  y y y    1     2 DFU_WRITE_CATALOG_CONTROL
 22 12428- 12504      6     7     5   2151  y y y    1     2 DFU_WRITE_SUBCATALOG
 23 12522- 12598      6     7     5   2173  y y y    1     2 DFU_WRITE_CATALOG_ENTRY
 24 12617- 12742      6     7     5   2215  y y y    1     2 DFU_WRITE_OBJECT
 25 12761- 12827      8    12     5   2237  y y y    3     2 DFU_WRITE_BINARY
 26 12845- 12929     14    11     5   2274  y y y    1     2 DFU_WRITE_BCD_CARDS
 27 12945- 13024      7    10     5   2360  y y y    1     2 DFU_WRITE_OBJECT_REFLIST
 28 13040- 13115      6     7     5   2411  y y y    1     2 DFU_WRITE_LAST_DECK#
 29 13128- 13215      7     7     5   2433  y y y    0     2 DFU_WRITE_LOG
 30 13228- 13309      5     4     5   2466  y y y    0     2 DFU_WRITE_REVISION
 31 13321- 13604     11     7     5   2505  y y y    1     2 DFU_OPEN_TEMP
 32 13617- 13784     12    10     5   2542  y y y    1     2 DFU_CLOSE_TEMP
 33 13798- 13812      6     4     5   2605  y   y    2     2 DFU_ERR_MSG
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:320  

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

             138   5      0 Proc    0                              9138   5      3 Entry   0
         $  9140   5      5 Call    0                              9142   5     13 Return  0
            9153   5     14 Entry   0                           $  9155   5     16 Call    0
            9157   5     24 Return  0                              9168   5     25 Entry   0
         $  9170   5     27 Call    0                              9172   5     35 Return  0
            9183   5     36 Entry   0                           $  9185   5     40 Call    0
            9187   5     46 Return  0                              9198   5     47 Entry   0
         $  9200   5     51 Call    0                              9202   5     57 Return  0
            9213   5     60 Entry   0                           $  9215   5     62 Call    0
            9217   5     70 Return  0                              9228   5     71 Entry   0
        $$  9230   5     73 Call    0                              9232   5    103 Return  0
            9243   5    104 Entry   0                       $$$$$  9245   5    106 Call    0
            9247   5    126 Return  0                              9258   5    127 Entry   0
         $  9260   5    131 Call    0                              9262   5    137 Return  0
            9273   5    140 Entry   0                           $  9275   5    142 Call    0
            9277   5    150 Return  0                              9288   5    151 Entry   0
         $  9290   5    153 Call    0                              9292   5    161 Return  0
            9302   5    162 Entry   0                              9304   5    164 Call    0
            9306   5    166 Return  0                              9316   5    167 Entry   0
            9318   5    171 Call    0                              9320   5    173 Return  0
            9331   5    174 Entry   0                              9333   5    176 Call    0
            9335   5    200 Return  0                              9350   5    201 Entry   0
            9352   5    203 Call    0                              9354   5    205 Return  0
            9365   5    206 Entry   0                              9367   5    210 Call    0
            9369   5    212 Return  0                              9380   5    213 Entry   0
            9382   5    215 Call    0                              9384   5    217 Return  0
            9395   5    220 Entry   0                              9397   5    222 Call    0
            9399   5    224 Return  0                              9410   5    225 Entry   0
            9412   5    227 Call    0                              9414   5    231 Return  0
            9425   5    232 Entry   0                           $  9427   5    234 Call    0
            9429   5    242 Return  0                              9440   5    243 Entry   0
         $  9442   5    245 Call    0                              9444   5    253 Return  0
            9455   5    254 Entry   0                           $  9457   5    256 Call    0
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:321  
            9459   5    264 Return  0                              9470   5    265 Entry   0
         $  9472   5    267 Call    0                              9474   5    275 Return  0
            9485   5    276 Entry   0                           $  9487   5    300 Call    0
            9489   5    306 Return  0                              9500   5    307 Entry   0
         $  9502   5    311 Call    0                              9504   5    317 Return  0
            9515   5    320 Entry   0                       $$$$$  9517   5    322 Call    0
            9521   5    337 Return  0                              9532   5    340 Entry   0
   $$$$$$$  9534   5    342 Call    0                              9538   5    370 Return  0
            9549   5    371 Entry   0                      $$$$$$  9551   5    373 Call    0
            9555   5    415 Return  0                              9566   5    416 Entry   0
    $$$$$$  9568   5    420 Call    0                              9572   5    443 Return  0
            9583   5    444 Entry   0                           $  9585   5    446 Call    0
            9587   5    454 Return  0                              9598   5    455 Entry   0
         $  9600   5    457 Call    0                              9602   5    465 Return  0
            9613   5    466 Entry   0                           $  9615   5    470 Call    0
            9617   5    476 Return  0                              9627   5    477 Entry   0
            9629   5    501 Call    0                              9631   5    503 Return  0
            9641   5    504 Entry   0                              9643   5    506 Call    0
            9645   5    510 Return  0                              9656   5    511 Entry   0
            9658   5    513 Call    0                              9660   5    517 Return  0
            9671   5    520 Entry   0                              9673   5    522 Call    0
            9675   5    526 Return  0                              9686   5    527 Entry   0
         $  9688   5    531 Call    0                              9690   5    537 Return  0
            9701   5    540 Entry   0                           $  9703   5    542 Call    0
            9705   5    550 Return  0                              9716   5    551 Entry   0
         $  9718   5    553 Call    0                              9720   5    561 Return  0
            9731   5    562 Entry   0                           $  9733   5    564 Call    0
            9735   5    572 Return  0                              9746   5    573 Entry   0
         $  9748   5    575 Call    0                              9750   5    603 Return  0
            9761   5    604 Entry   0                           $  9763   5    606 Call    0
            9765   5    614 Return  0                              9776   5    615 Entry   0
        $$  9778   5    617 Call    0                              9780   5    627 Return  0
            9791   5    630 Entry   0                       $$$$$  9793   5    632 Call    0
            9795   5    652 Return  0                              9807   5    653 Entry   0
     $$$$$  9809   5    655 Call    0                              9811   5    675 Return  0
            9822   5    676 Entry   0                       $$$$$  9824   5    700 Call    0
            9826   5    720 Return  0                              9837   5    721 Entry   0
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:322  
         $  9839   5    723 Call    0                              9841   5    731 Return  0
            9852   5    732 Entry   0                           $  9854   5    734 Call    0
            9856   5    742 Return  0                              9867   5    743 Entry   0
         $  9869   5    745 Call    0                              9871   5    753 Return  0
            9882   5    754 Entry   0                           $  9884   5    756 Call    0
            9886   5    764 Return  0                              9897   5    765 Entry   0
         $  9899   5    767 Call    0                              9901   5    775 Return  0
            9912   5    776 Entry   0                           $  9914   5   1000 Call    0
            9916   5   1006 Return  0                              9927   5   1007 Entry   0
         $  9929   5   1011 Call    0                              9931   5   1017 Return  0
            9942   5   1020 Entry   0                           $  9944   5   1022 Call    0
            9946   5   1030 Return  0                              9957   5   1031 Entry   0
         $  9959   5   1033 Call    0                              9961   5   1041 Return  0
            9972   5   1042 Entry   0                       $$$$$  9974   5   1044 Call    0
            9978   5   1061 Return  0                              9989   5   1062 Entry   0
   $$$$$$$  9991   5   1064 Call    0                              9995   5   1112 Return  0
           10006   5   1113 Entry   0                      $$$$$$ 10008   5   1115 Call    0
           10012   5   1137 Return  0                             10024   5   1140 Entry   0
   $$$$$$$ 10026   5   1142 Call    0                             10030   5   1170 Return  0
           10041   5   1171 Entry   0                           $ 10043   5   1173 Call    0
           10045   5   1201 Return  0                             10056   5   1202 Entry   0
         $ 10058   5   1204 Call    0                             10060   5   1212 Return  0
           10071   5   1213 Entry   0                           $ 10073   5   1215 Call    0
           10075   5   1223 Return  0
           10089   5   1224 Altret  0 TOU$DFU_ALTRETURN           10105   5   1225 Proc    1
           10181   5   1226 Assign  1                  $$$$$$$$$$ 10182   5   1231 MonCal  1
           10183   5   1235 Return  1
         $ 10186   5   1237 Call    1 NO_MASTER_CONTROL           10187   5   1245 Altret  1
           10205   5   1247 Proc    2                             10282   5   1250 Assign  2
$$$$$$$$$$ 10283   5   1253 MonCal  2                             10284   5   1257 Return  2
         $ 10287   5   1261 Call    2 NO_MASTER_ENTRY             10288   5   1267 Altret  2
           10306   5   1271 Proc    3                             10383   5   1272 Assign  3
$$$$$$$$$$ 10384   5   1275 MonCal  3                             10385   5   1301 Return  3
         $ 10388   5   1303 Call    3 NO_CATALOG_CONTROL
           10389   5   1311 Altret  3                             10412   5   1313 Proc    4
           10488   5   1314 Assign  4                  $$$$$$$$$$ 10489   5   1317 MonCal  4
           10490   5   1323 Return  4                           $ 10493   5   1325 Call    4 NO_SUBCATALOG
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:323  
           10494   5   1333 Altret  4                             10511   5   1335 Proc    5
           10587   5   1336 Assign  5                  $$$$$$$$$$ 10588   5   1341 MonCal  5
           10589   5   1345 Return  5                           $ 10592   5   1347 Call    5 NO_CATALOG_ENTRY
           10593   5   1355 Altret  5                             10616   5   1357 Proc    6
           10741   5   1360 Assign  6                  $$$$$$$$$$ 10742   5   1363 MonCal  6
           10743   5   1367 If      6                             10744   5   1373 Return  6
           10745   5   1375 Do      6                           $ 10746   5   1375 Call    6
           10747   5   1403 Altret  6                           $ 10751   5   1405 Call    6 NO_OBJECT
           10752   5   1413 Altret  6                             10775   5   1415 Proc    7
           10838   5   1416 Assign  7                           $ 10839   5   1421 Assign  7
$$$$$$$$$$ 10840   5   1425 MonCal  7                             10841   5   1431 Return  7
         $ 10844   5   1433 Call    7 BAD_BINARY                  10845   5   1441 Altret  7
           10866   5   1443 Proc    8                             10942   5   1444 Assign  8
           10943   5   1447 DoIndx  8                           $ 10944   5   1452 Assign  8
       $$$ 10945   5   1455 Assign  8                  $$$$$$$$$$ 10946   5   1465 MonCal  8
           10947   5   1471 EndInd  8                        $$$$ 10948   5   1477 If      8
           10949   5   1505 Return  8                             10950   5   1507 Do      8
         $ 10951   5   1507 Call    8                             10952   5   1515 Altret  8
         $ 10956   5   1517 Call    8 BAD_DECK                    10957   5   1525 Altret  8
           10986   5   1527 Proc    9                             11064   5   1530 Assign  9
$$$$$$$$$$ 11065   5   1533 MonCal  9                             11066   5   1537 Return  9
         $ 11069   5   1541 Call    9 NO_OBJECT_REFLIST           11070   5   1547 Altret  9
           11088   5   1551 Proc   10                             11163   5   1552 Assign 10
$$$$$$$$$$ 11164   5   1555 MonCal 10                             11165   5   1561 Return 10
         $ 11168   5   1563 Call   10 NO_LAST_DECK#               11169   5   1571 Altret 10
           11185   5   1573 Proc   11                             11246   5   1574 Assign 11
$$$$$$$$$$ 11247   5   1576 MonCal 11                             11248   5   1602 Return 11
         $ 11251   5   1604 Call   11 NO_LOG                      11252   5   1612 Altret 11
           11267   5   1614 Proc   12                  $$$$$$$$$$ 11350   5   1615 MonCal 12
           11351   5   1621 Return 12                           $ 11354   5   1623 Call   12 NO_REVISION
           11355   5   1631 Altret 12                             11381   5   1633 Proc   13
$$$$$$$$$$ 11570   5   1634 MonCal 13                         $$$ 11571   5   1640 If     13
         $ 11575   5   1656 Call   13                             11576   5   1665 Do     13
           11577   5   1665 Assign 13                             11578   5   1667 If     13
           11580   5   1673 Assign 13                             11581   5   1676 EndDo  13
           11582   5   1676 Altret 13                          $$ 11585   5   1700 If     13 READ_ERROR
         $ 11587   5   1706 Call   13                             11588   5   1714 Return 13
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:324  
           11606   5   1716 Proc   14                  $$$$$$$$$$ 11731   5   1717 MonCal 14
           11732   5   1723 Return 14                          $$ 11735   5   1725 If     14 READ_ERROR
         $ 11737   5   1733 Call   14                             11738   5   1741 Altret 14
           11759   5   1743 Proc   15                             11813   5   1744 Assign 15
           11814   5   1747 Assign 15                  $$$$$$$$$$ 11815   5   1752 MonCal 15
           11816   5   1756 Return 15                           $ 11819   5   1760 Call   15 ERROR
           11820   5   1766 Altret 15                             11845   5   1770 Proc   16
$$$$$$$$$$ 11934   5   1771 MonCal 16                  $$$$$$$$$$ 11935   5   1775 MonCal 16
           11936   5   2001 Return 16                           $ 11939   5   2003 Call   16 ERROR
           11940   5   2011 Altret 16                             11960   5   2013 Proc   17
           12014   5   2014 Assign 17                             12015   5   2017 Assign 17
$$$$$$$$$$ 12016   5   2022 MonCal 17                             12017   5   2026 Return 17
         $ 12020   5   2030 Call   17 ERROR                       12021   5   2036 Altret 17
           12039   5   2040 Proc   18                  $$$$$$$$$$ 12114   5   2041 MonCal 18
$$$$$$$$$$ 12115   5   2045 MonCal 18                             12116   5   2051 Return 18
         $ 12119   5   2053 Call   18 ERROR                       12120   5   2061 Altret 18
           12139   5   2063 Proc   19                             12207   5   2064 Assign 19
$$$$$$$$$$ 12208   5   2067 MonCal 19                             12209   5   2073 Return 19
         $ 12212   5   2075 Call   19 BAD_MASTER_CONTROL
           12213   5   2103 Altret 19                             12233   5   2105 Proc   20
           12302   5   2106 Assign 20                  $$$$$$$$$$ 12303   5   2111 MonCal 20
           12304   5   2115 Return 20                           $ 12307   5   2117 Call   20 BAD_MASTER_ENTRY
           12308   5   2125 Altret 20                             12329   5   2127 Proc   21
           12398   5   2130 Assign 21                  $$$$$$$$$$ 12399   5   2133 MonCal 21
           12400   5   2137 Return 21
         $ 12403   5   2141 Call   21 BAD_CATALOG_CONTROL
           12404   5   2147 Altret 21                             12428   5   2151 Proc   22
           12496   5   2152 Assign 22                  $$$$$$$$$$ 12497   5   2155 MonCal 22
           12498   5   2161 Return 22                           $ 12501   5   2163 Call   22 BAD_SUBCATALOG
           12502   5   2171 Altret 22                             12522   5   2173 Proc   23
           12590   5   2174 Assign 23                  $$$$$$$$$$ 12591   5   2177 MonCal 23
           12592   5   2203 Return 23
         $ 12595   5   2205 Call   23 BAD_CATALOG_ENTRY           12596   5   2213 Altret 23
           12617   5   2215 Proc   24                             12734   5   2216 Assign 24
$$$$$$$$$$ 12735   5   2221 MonCal 24                             12736   5   2225 Return 24
         $ 12739   5   2227 Call   24 BAD_OBJECT                  12740   5   2235 Altret 24
           12761   5   2237 Proc   25                             12817   5   2240 Assign 25
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:325  
         $ 12818   5   2243 Assign 25                          $$ 12819   5   2247 Assign 25
$$$$$$$$$$ 12820   5   2256 MonCal 25                             12821   5   2262 Return 25
         $ 12824   5   2264 Call   25 BAD_BINARY                  12825   5   2272 Altret 25
           12845   5   2274 Proc   26                             12912   5   2275 Assign 26
           12913   5   2300 DoIndx 26                           $ 12914   5   2303 Assign 26
       $$$ 12915   5   2306 Assign 26                  $$$$$$$$$$ 12916   5   2316 MonCal 26
           12917   5   2322 EndInd 26                        $$$$ 12918   5   2330 If     26
           12919   5   2336 Return 26                             12920   5   2340 Do     26
         $ 12921   5   2340 Call   26                             12922   5   2346 Altret 26
         $ 12926   5   2350 Call   26 BAD_DECK                    12927   5   2356 Altret 26
           12945   5   2360 Proc   27                             13015   5   2361 Assign 27
         $ 13016   5   2364 Assign 27                  $$$$$$$$$$ 13017   5   2373 MonCal 27
           13018   5   2377 Return 27
         $ 13021   5   2401 Call   27 NO_OBJECT_REFLIST           13022   5   2407 Altret 27
           13040   5   2411 Proc   28                             13107   5   2412 Assign 28
$$$$$$$$$$ 13108   5   2415 MonCal 28                             13109   5   2421 Return 28
         $ 13112   5   2423 Call   28 BAD_LAST_DECK#              13113   5   2431 Altret 28
           13128   5   2433 Proc   29                             13206   5   2434 Assign 29
     $$$$$ 13207   5   2436 Assign 29                  $$$$$$$$$$ 13208   5   2450 MonCal 29
           13209   5   2454 Return 29                           $ 13212   5   2456 Call   29 NO_LOG
           13213   5   2464 Altret 29                             13228   5   2466 Proc   30
$$$$$$$$$$ 13302   5   2467 MonCal 30                             13303   5   2473 Return 30
         $ 13306   5   2475 Call   30 NO_REVISION                 13307   5   2503 Altret 30
           13321   5   2505 Proc   31                          $$ 13592   5   2506 DoCase 31
           13593   5   2516 Case   31                  $$$$$$$$$$ 13594   5   2516 MonCal 31
           13595   5   2523 Case   31                  $$$$$$$$$$ 13596   5   2523 MonCal 31
           13597   5   2530 Case   31                           $ 13599   5   2530 Call   31 ERROR
           13600   5   2536 Altret 31                             13601   5   2540 EndCse 31
           13602   5   2540 Return 31                             13617   5   2542 Proc   32
       $$$ 13770   5   2543 If     32                          $$ 13771   5   2552 DoCase 32
           13772   5   2561 Case   32                  $$$$$$$$$$ 13773   5   2561 MonCal 32
           13774   5   2566 Case   32                  $$$$$$$$$$ 13775   5   2566 MonCal 32
           13776   5   2573 Case   32                           $ 13778   5   2573 Call   32 ERROR
           13779   5   2601 Altret 32                             13780   5   2603 EndCse 32
           13782   5   2603 Return 32                             13798   5   2605 Proc   33
           13805   5   2606 Assign 33                             13806   5   2611 Call   33
        $$ 13807   5   2614 If     33                             13808   5   2621 Call   33
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:326  
           13810   5   2624 Return 33

  **** Statement type totals  ****

    38 Assign   100 Call      36 MonCal     9 If         6 Case      95 Return
    36 Altret     2 DoIndx     2 DoCase     4 Do         2 EndInd     2 EndCse
     1 EndDo     34 Proc      62 Entry     33 Labels

 # major stmts=  318 Code/major= 4.49 # stmts=  429 Code/stmt= 3.33  Point total=107.4
 Cost/major stmt=  7.4 Cost/stmt=  5.4 Total cost=   2353.8

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$$$$$$$$$$$$
   6-8  $
  8-10
 10-12
 12-14  $
 14-16
 16-18
 18-20
 20-22
 22-??  $$$$$$$$
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:327  

 **** Variables and constants ****

  ****  Section 003 RoData TOU$DFU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/h STRC(90)    r     1 LAST_DECK_KEY             21-0-0/h STRC(90)    r     1 LAST_DECK_KEY
     7-0-0/h STRC(81)    r     1 LOG_KEY                   24-0-0/h STRC(81)    r     1 LOG_KEY
     0-0-0/c STRC(135)   r     1 MASTER_KEY                15-0-0/c STRC(135)   r     1 MASTER_KEY
    12-0-0/h STRC(81)    r     1 REVISION_KEY              27-0-0/h STRC(81)    r     1 REVISION_KEY

  ****  Section 004  Data  TOU$DFU

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   476-0-0/c STRC(45)    r     1 BINARY_KEY                46-0-0/w STRC(72)    r     1 CATALOG_DATA
   124-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY         22-0-0/w STRC(216)   r     1 CATALOG_KEY
   316-0-0/c STRC(54)    r     1 LAST                       0-0-0/w STRC(72)    r     1 MASTER_DATA
    20-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY         126-0-0/w STRC(216)   r     1 OBJECT_KEY
   260-0-0/w STRC(576)   r     1 OBJECT_REFLIST_DATA      256-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
   354-0-0/c STRC(189)   r     1 REVISION_B                70-0-0/c STRC(468)   r     1 SUBCATALOG_DATA
    66-0-0/c STRC(45)    r     1 SUBCATALOG_KEY          1166-0-0/c STRC(99)    r     1 TEMP_NAME

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

   236-0-0/c STRC(45)    r     1 BCD_KEY
   236-3-0/b UBIN(18)    r         2 CARD#

   500-0-0/d STRC(360)   r     1 DEL_$OBJECT_CARD
   510-0-0/d STRC(72)    r         2 V

   512-0-0/d STRC(360)   r     1 DEL_BINARY_THRU_REFLIST
   522-0-0/d STRC(72)    r         2 V

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:328  
   536-0-0/d STRC(360)   r     1 DEL_CATALOG
   546-0-0/d STRC(72)    r         2 V

   464-0-0/d STRC(360)   r     1 DEL_ENTRY
   474-0-0/d STRC(72)    r         2 V

   524-0-0/d STRC(360)   r     1 DEL_ENTRY
   534-0-0/d STRC(72)    r         2 V

   550-0-0/d STRC(360)   r     1 DEL_SUBCATALOG
   560-0-0/d STRC(72)    r         2 V

   152-0-0/w STRC(864)   r     1 OBJECT
   152-0-0/w STRC(720)   r         2 BCD
   153-3-0/c CHAR(8)     r          3 TYPE

   400-0-0/w STRC(864)   r     1 OLD_OBJECT
   400-0-0/w STRC(720)   r         2 BCD
   420-2-0/c CHAR(6)     r          3 DATE
   424-0-0/b UBIN(18)    r         2 DECK#
   424-2-0/b UBIN(18)    r         2 BINARY_COUNT
   425-0-0/b UBIN(18)    r         2 TOTAL_COUNT
   425-2-0/b UBIN(18)    r         2 LOAD_SIZE
   426-0-0/w UBIN        r         2 DECK_CHECKSUM

   240-0-0/d STRC(504)   r     1 READ_BCD_CARD
   244-0-0/w STRC(72)    r         2 BUF_
   250-0-0/d STRC(216)   r         2 V
   250-0-0/b UBIN(18)    r          3 DCB#

   220-0-0/d STRC(504)   r     1 READ_BINARY_DECK
   224-0-0/w STRC(72)    r         2 BUF_
   230-0-0/d STRC(216)   r         2 V
   230-0-0/b UBIN(18)    r          3 DCB#

    50-0-0/d STRC(504)   r     1 READ_CATALOG_CONTROL
    60-0-0/d STRC(216)   r         2 V
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:329  
    60-0-0/b UBIN(18)    r          3 DCB#

   134-0-0/d STRC(504)   r     1 READ_CATALOG_ENTRY
   144-0-0/d STRC(216)   r         2 V
   144-0-0/b UBIN(18)    r          3 DCB#

   336-0-0/d STRC(504)   r     1 READ_DECKFILE_LOG
   342-0-0/w STRC(72)    r         2 BUF_
   346-0-0/d STRC(216)   r         2 V

   362-0-0/d STRC(504)   r     1 READ_DECKFILE_REVISION
   372-0-0/d STRC(216)   r         2 V

   320-0-0/d STRC(504)   r     1 READ_LAST_DECK#
   330-0-0/d STRC(216)   r         2 V
   330-0-0/b UBIN(18)    r          3 DCB#

     2-0-0/d STRC(504)   r     1 READ_MASTER_CONTROL
    12-0-0/d STRC(216)   r         2 V
    12-0-0/b UBIN(18)    r          3 DCB#

    30-0-0/d STRC(504)   r     1 READ_MASTER_ENTRY
    40-0-0/d STRC(216)   r         2 V
    40-0-0/b UBIN(18)    r          3 DCB#

   202-0-0/d STRC(504)   r     1 READ_OBJECT
   212-0-0/d STRC(216)   r         2 V
   212-0-0/b UBIN(18)    r          3 DCB#

   430-0-0/d STRC(504)   r     1 READ_OBJECT
   440-0-0/d STRC(216)   r         2 V

   446-0-0/d STRC(504)   r     1 READ_OBJECT
   456-0-0/d STRC(216)   r         2 V

   300-0-0/d STRC(504)   r     1 READ_OBJECT_REFLIST
   310-0-0/d STRC(216)   r         2 V
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:330  
   310-0-0/b UBIN(18)    r          3 DCB#

   106-0-0/d STRC(504)   r     1 READ_SUBCATALOG
   116-0-0/d STRC(216)   r         2 V
   116-0-0/b UBIN(18)    r          3 DCB#

  1002-0-0/d STRC(2088)  r     1 TEMP_CREATE
  1046-0-0/d STRC(756)   r         2 V

  1230-0-0/d STRC(1080)  r     1 TEMP_DISCARD
  1262-0-0/d STRC(144)   r         2 V

  1074-0-0/d STRC(2088)  r     1 TEMP_READ
  1140-0-0/d STRC(756)   r         2 V

  1172-0-0/d STRC(1080)  r     1 TEMP_SAVE
  1224-0-0/d STRC(144)   r         2 V

   706-0-0/d STRC(432)   r     1 WRITE_BCD_CARD
   712-0-0/w STRC(72)    r         2 BUF_
   716-0-0/d STRC(144)   r         2 V
   716-0-0/b UBIN(18)    r          3 DCB#

   672-0-0/d STRC(432)   r     1 WRITE_BINARY_DECK
   676-0-0/w STRC(72)    r         2 BUF_
   676-0-0/b UBIN(20)    r          3 BOUND
   702-0-0/d STRC(144)   r         2 V
   702-0-0/b UBIN(18)    r          3 DCB#

   612-0-0/d STRC(432)   r     1 WRITE_CATALOG_CONTROL
   622-0-0/d STRC(144)   r         2 V
   622-0-0/b UBIN(18)    r          3 DCB#

   642-0-0/d STRC(432)   r     1 WRITE_CATALOG_ENTRY
   652-0-0/d STRC(144)   r         2 V
   652-0-0/b UBIN(18)    r          3 DCB#

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:331  
   752-0-0/d STRC(432)   r     1 WRITE_DECKFILE_LOG
   756-0-0/w STRC(72)    r         2 BUF_
   756-0-0/b UBIN(20)    r          3 BOUND
   762-0-0/d STRC(144)   r         2 V

   766-0-0/d STRC(432)   r     1 WRITE_DECKFILE_REVISION
   776-0-0/d STRC(144)   r         2 V

   736-0-0/d STRC(432)   r     1 WRITE_LAST_DECK#
   746-0-0/d STRC(144)   r         2 V
   746-0-0/b UBIN(18)    r          3 DCB#

   562-0-0/d STRC(432)   r     1 WRITE_MASTER_CONTROL
   572-0-0/d STRC(144)   r         2 V
   572-0-0/b UBIN(18)    r          3 DCB#

   576-0-0/d STRC(432)   r     1 WRITE_MASTER_ENTRY
   606-0-0/d STRC(144)   r         2 V
   606-0-0/b UBIN(18)    r          3 DCB#

   656-0-0/d STRC(432)   r     1 WRITE_OBJECT
   666-0-0/d STRC(144)   r         2 V
   666-0-0/b UBIN(18)    r          3 DCB#

   722-0-0/d STRC(432)   r     1 WRITE_OBJECT_REFLIST
   726-0-0/w STRC(72)    r         2 BUF_
   726-0-0/b UBIN(20)    r          3 BOUND
   732-0-0/d STRC(144)   r         2 V
   732-0-0/b UBIN(18)    r          3 DCB#

   626-0-0/d STRC(432)   r     1 WRITE_SUBCATALOG
   636-0-0/d STRC(144)   r         2 V
   636-0-0/b UBIN(18)    r          3 DCB#


  ****  Auto variables  ****

PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:332  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUF_V                     6-0-0/w PTR         r     1 @BUF_V
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
     5-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @DCB#
    11-0-0/w PTR         r     1 @ERROR_CODE                7-0-0/w PTR         r     1 @LGTH
    12-0-0/w PTR         r     1 @SYSTEM_ERR                5-0-0/w PTR         r     1 @TEMP_CLOSE_TYPE
     5-0-0/w PTR         r     1 @TEMP_OPEN_TYPE           *0-0-0/w BIT (72)    r     1 BUF_V
    *0-0-0/w BIT (72)    r     1 BUF_V                     *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 DCB#
    *0-0-0/w UBIN        r     1 DCB#                      *0-0-0/w UBIN        r     1 ERROR_CODE
    *0-0-0/w UBIN        r     1 LGTH                      *0-0-0/c BIT         r     1 SYSTEM_ERR
    *0-0-0/w UBIN        r     1 TEMP_CLOSE_TYPE           *0-0-0/w UBIN        r     1 TEMP_OPEN_TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w UBIN        r     1 BCD#
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:333  
     0-0-0/w UBIN        r     1 BCD#                       0-0-0/w UBIN        r     1 BIN#
     0-0-0/c STRC(45)    r     1 BINARY_KEY                 0-0-0/c STRC(45)    r     1 BINARY_KEY
     0-0-0/w STRC(72)    r     1 CATALOG_DATA               0-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY
     0-0-0/w STRC(216)   r     1 CATALOG_KEY                0-0-0/w STRC(216)   r     1 CATALOG_KEY
     0-0-0/w STRC(216)   r     1 CATALOG_KEY                0-0-0/w STRC(216)   r     1 CATALOG_KEY
     0-0-0/w UBIN        r     1 CUR#                       0-0-0/w UBIN        r     1 CUR#
     0-0-0/c STRC(54)    r     1 LAST                       0-0-0/w STRC(72)    r     1 MASTER_DATA
     0-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY           0-0-0/w STRC(864)   r     1 OBJECT
     0-0-0/w STRC(864)   r     1 OBJECT                     0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-0-0/w STRC(216)   r     1 OBJECT_KEY                 0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-0-0/w STRC(216)   r     1 OBJECT_KEY                 0-0-0/w STRC(216)   r     1 OBJECT_KEY
     0-0-0/w STRC(216)   r     1 OBJECT_KEY                 0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY
     0-0-0/c STRC(45)    r     1 OBJECT_REFLIST_KEY         0-0-0/c STRC(189)   r     1 REVISION_B
     0-0-0/c STRC(468)   r     1 SUBCATALOG_DATA            0-0-0/c STRC(45)    r     1 SUBCATALOG_KEY
     0-0-0/c STRC(45)    r     1 SUBCATALOG_KEY

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(45)    r     1 BCD_KEY
     0-3-0/b UBIN(18)    r         2 CARD#

     0-0-0/w STRC(72)    r     1 CATALOG_DATA
     0-0-0/b UBIN(18)    r         2 DECK#
     0-2-0/b UBIN(18)    r         2 ENTRY_COUNT

     0-0-0/c STRC(45)    r     1 CATALOG_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/d STRC(5220)  r     1 DUP
    20-0-0/w UBIN        r         2 MSG_CODE
   100-0-0/d STRC(72)    r         2 BINARY_V
   101-0-0/b PTR         r          3 PTR$
   102-0-0/d STRC(72)    r         2 BCD_V
   103-0-0/b PTR         r          3 PTR$
   136-0-0/d STRC(72)    r         2 LOG_V
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:334  
   137-0-0/b PTR         r          3 PTR$
   140-0-0/w STRC(72)    r         2 TEMP
   140-0-0/w UBIN        r          3 OPEN_TYPE
   141-0-0/w UBIN        r          3 CLOSE_TYPE

     0-0-0/w STRC(72)    r     1 MASTER_DATA
     0-0-0/b UBIN(18)    r         2 DECK#
     0-2-0/b UBIN(18)    r         2 ENTRY_COUNT

     0-0-0/c STRC(45)    r     1 MASTER_ENTRY_KEY
     0-1-0/b UBIN(18)    r         2 DECK#
     0-3-0/b UBIN(18)    r         2 ENTRY#

     0-0-0/w STRC(864)   r     1 OBJECT
    25-2-0/b UBIN(18)    r         2 LOAD_SIZE

     0-0-0/w STRC(864)   r     1 OBJECT
     0-0-0/w STRC(720)   r         2 BCD
     3-3-0/c CHAR(6)     r          3 LIBRARY
    20-2-0/c CHAR(6)     r          3 DATE
    24-0-0/b UBIN(18)    r         2 DECK#
    24-2-0/b UBIN(18)    r         2 BINARY_COUNT
    25-0-0/b UBIN(18)    r         2 TOTAL_COUNT
    25-2-0/b UBIN(18)    r         2 LOAD_SIZE
    26-0-0/w UBIN        r         2 DECK_CHECKSUM

     0-0-0/w STRC(576)   r     1 OBJECT_REFLIST_DATA
     0-0-0/b UBIN        r         2 NUM_REFS


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(84)    r     1 BCD_B(0:199)               0-0-0/c CHAR(84)    r     1 BCD_B(0:199)
     0-0-0N  NULL        r     1 M$DECKFILE                 0-0-0N  NULL        r     1 M$TEMP
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:335  

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT
   102-0-0/b STRC        r         2 ERR
   102-2-1/b UBIN(14)    r          3 ERR#

     0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w PTR         r         2 ALT$

     0-0-0/d ASTR(3528)  r     1 F$DCB
    31-2-4/b BIT         r         2 FCD#
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/c STRC(18665) r     1 LOG_B
     0-0-0/c UBIN(9)     r         2 COUNT

     0-0-0/d STRC)       r     1 MCA_B
    26-0-0/w STRC(1512)  r         2 DISKETTE_HEADER
    36-0-0/c CHAR(136)   r          3 DATA
   100-0-0/w STRC(23508) r         2 DIRECTORY
   110-0-0/c CHAR(16)    r          3 DATA(0:159)
  1310-0-0/w UBIN        r          3 SIZE
  1315-0-0/w STRC(65896) r         2 FILE
  1325-0-0/c STRC(65536) r          3 DATA



   Procedure TOU$DFU requires 1430 words for executable code.
   Procedure TOU$DFU requires 96 words of local(AUTO) storage.

    No errors detected in file TOU$DFU.:E05TSI    .
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:336  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:337  
          MINI XREF LISTING

B$ALT.CODE
      9113**DCL      9113--REDEF    9114--REDEF    9114--REDEF
B$ALT.ERR.ERR#
      9115**DCL      9115--REDEF   11585>>IF      11735>>IF
B$ALT.EVID
      9114**DCL      9114--REDEF    9114--REDEF
B$TCB.ALT$
      9109**DCL     11585>>IF      11735>>IF
B$TCB$
      8827**DCL     11585>>IF      11735>>IF
BAD_BINARY IN PROCEDURE DFU_READ_BINARY
     10844**LABEL   10840--CALLALT
BAD_BINARY IN PROCEDURE DFU_WRITE_BINARY
     12824**LABEL   12820--CALLALT
BAD_CATALOG_CONTROL IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12403**LABEL   12399--CALLALT
BAD_CATALOG_ENTRY IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12595**LABEL   12591--CALLALT
BAD_DECK IN PROCEDURE DFU_READ_BCD_CARDS
     10956**LABEL   10946--CALLALT
BAD_DECK IN PROCEDURE DFU_WRITE_BCD_CARDS
     12926**LABEL   12916--CALLALT
BAD_LAST_DECK# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13112**LABEL   13108--CALLALT
BAD_MASTER_CONTROL IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12212**LABEL   12208--CALLALT
BAD_MASTER_ENTRY IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12307**LABEL   12303--CALLALT
BAD_OBJECT IN PROCEDURE DFU_WRITE_OBJECT
     12739**LABEL   12735--CALLALT
BAD_SUBCATALOG IN PROCEDURE DFU_WRITE_SUBCATALOG
     12501**LABEL   12497--CALLALT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:338  
BCD# IN PROCEDURE DFU_READ_BCD_CARDS
     10884**DCL     10943>>DOINDEX 10948>>IF
BCD# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12849**DCL     12913>>DOINDEX 12918>>IF
BCD_B IN PROCEDURE DFU_READ_BCD_CARDS
     10894**DCL     10945--ASSIGN  10948>>IF
BCD_B IN PROCEDURE DFU_WRITE_BCD_CARDS
     12873**DCL     12915--ASSIGN  12918>>IF
BCD_KEY IN PROCEDURE DFU_READ_BCD_CARDS
     10878**DCL     10917--DCLINIT 10918--DCLINIT
BCD_KEY.CARD# IN PROCEDURE DFU_READ_BCD_CARDS
     10881**DCL     10944<<ASSIGN
BCD_KEY IN PROCEDURE DFU_WRITE_BCD_CARDS
     12859**DCL     12895--DCLINIT
BCD_KEY.CARD# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12862**DCL     12914<<ASSIGN
BIN#
      8828**DCL      9517>>CALL     9974>>CALL
BINARY_KEY IN PROCEDURE DFU_DELETE_DECK
     11869**DCL     11923--DCLINIT 11924--DCLINIT
BINARY_KEY IN PROCEDURE DFU_READ_BINARY
     10788**DCL     10813--DCLINIT 10814--DCLINIT
BINARY_KEY IN PROCEDURE DFU_WRITE_BINARY
     12775**DCL     12800--DCLINIT
BUF_V IN PROCEDURE DFU_READ_BINARY
     10778**DCL     10775--PROC    10839>>ASSIGN
BUF_V IN PROCEDURE DFU_WRITE_BINARY
     12764**DCL     12761--PROC    12818>>ASSIGN
CATALOG_DATA.DECK# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11785**DCL     11813>>ASSIGN
CATALOG_DATA.ENTRY_COUNT IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11786**DCL     11814>>ASSIGN
CATALOG_DATA IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10332**DCL     10360--DCLINIT 10361--DCLINIT
CATALOG_DATA IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12355**DCL     12382--DCLINIT 12383--DCLINIT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:339  
CATALOG_ENTRY_KEY IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11770**DCL     11802--DCLINIT 11803--DCLINIT
CATALOG_ENTRY_KEY.DECK# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11772**DCL     11813<<ASSIGN
CATALOG_ENTRY_KEY.ENTRY# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11773**DCL     11814<<ASSIGN
CATALOG_ENTRY_KEY IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10523**DCL     10562--DCLINIT 10563--DCLINIT
CATALOG_ENTRY_KEY IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12534**DCL     12573--DCLINIT
CATALOG_KEY IN PROCEDURE DFU_DELETE_CATALOG
     12050**DCL     12082--DCLINIT 12083--DCLINIT
CATALOG_KEY IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10318**DCL     10358--DCLINIT 10359--DCLINIT
CATALOG_KEY IN PROCEDURE DFU_READ_MASTER_ENTRY
     10231**DCL     10259--DCLINIT 10260--DCLINIT
CATALOG_KEY IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12341**DCL     12381--DCLINIT
CATALOG_KEY IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12259**DCL     12286--DCLINIT 12287--DCLINIT
CUR# IN PROCEDURE DFU_READ_BCD_CARDS
     10883**DCL     10943<<DOINDEX 10944>>ASSIGN  10945>>ASSIGN
CUR# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12848**DCL     12913<<DOINDEX 12914>>ASSIGN  12915>>ASSIGN
DCB# IN PROCEDURE DFU_READ_BCD_CARDS
     10868**DCL     10866--PROC    10942>>ASSIGN
DCB# IN PROCEDURE DFU_READ_BINARY
     10777**DCL     10775--PROC    10838>>ASSIGN
DCB# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10308**DCL     10306--PROC    10383>>ASSIGN
DCB# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10513**DCL     10511--PROC    10587>>ASSIGN
DCB# IN PROCEDURE DFU_READ_LAST_DECK#
     11090**DCL     11088--PROC    11163>>ASSIGN
DCB# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10107**DCL     10105--PROC    10181>>ASSIGN
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:340  
DCB# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10207**DCL     10205--PROC    10282>>ASSIGN
DCB# IN PROCEDURE DFU_READ_OBJECT
     10618**DCL     10616--PROC    10741>>ASSIGN
DCB# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     10988**DCL     10986--PROC    11064>>ASSIGN
DCB# IN PROCEDURE DFU_READ_SUBCATALOG
     10414**DCL     10412--PROC    10488>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12847**DCL     12845--PROC    12912>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_BINARY
     12763**DCL     12761--PROC    12817>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12331**DCL     12329--PROC    12398>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12524**DCL     12522--PROC    12590>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13042**DCL     13040--PROC    13107>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12141**DCL     12139--PROC    12207>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12235**DCL     12233--PROC    12302>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_OBJECT
     12619**DCL     12617--PROC    12734>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12947**DCL     12945--PROC    13015>>ASSIGN
DCB# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12430**DCL     12428--PROC    12496>>ASSIGN
DEL_$OBJECT_CARD IN PROCEDURE DFU_DELETE_DECK
     11901**DCL     11934<>CALL
DEL_$OBJECT_CARD.V IN PROCEDURE DFU_DELETE_DECK
     11904**DCL     11901--DCLINIT
DEL_BINARY_THRU_REFLIST IN PROCEDURE DFU_DELETE_DECK
     11923**DCL     11935<>CALL
DEL_BINARY_THRU_REFLIST.V IN PROCEDURE DFU_DELETE_DECK
     11926**DCL     11923--DCLINIT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:341  
DEL_CATALOG IN PROCEDURE DFU_DELETE_CATALOG
     12082**DCL     12114<>CALL
DEL_CATALOG.V IN PROCEDURE DFU_DELETE_CATALOG
     12085**DCL     12082--DCLINIT
DEL_ENTRY IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11802**DCL     11815<>CALL
DEL_ENTRY.V IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11805**DCL     11802--DCLINIT
DEL_ENTRY IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12003**DCL     12016<>CALL
DEL_ENTRY.V IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12006**DCL     12003--DCLINIT
DEL_SUBCATALOG IN PROCEDURE DFU_DELETE_CATALOG
     12103**DCL     12115<>CALL
DEL_SUBCATALOG.V IN PROCEDURE DFU_DELETE_CATALOG
     12106**DCL     12103--DCLINIT
DFU_CHECK_ALREADY_SAVED
     11381**PROC     9333--CALL
DFU_CHECK_FOR_KEY
     11606**PROC     9352--CALL
DFU_CLOSE_TEMP
     13617**PROC     9673--CALL
DFU_DELETE_CATALOG
     12039**PROC     9412--CALL
DFU_DELETE_CATALOG_ENTRY
     11759**PROC     9367--CALL
DFU_DELETE_DECK
     11845**PROC     9382--CALL
DFU_DELETE_MASTER_ENTRY
     11960**PROC     9397--CALL
DFU_ERR_MSG
     13798**PROC    10186--CALL    10287--CALL    10388--CALL    10493--CALL    10592--CALL    10746--CALL
     10751--CALL    10844--CALL    10951--CALL    10956--CALL    11069--CALL    11168--CALL    11251--CALL
     11354--CALL    11575--CALL    11587--CALL    11737--CALL    11819--CALL    11939--CALL    12020--CALL
     12119--CALL    12212--CALL    12307--CALL    12403--CALL    12501--CALL    12595--CALL    12739--CALL
     12824--CALL    12921--CALL    12926--CALL    13021--CALL    13112--CALL    13212--CALL    13306--CALL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:342  
     13599--CALL    13778--CALL
DFU_OPEN_TEMP
     13321**PROC     9658--CALL
DFU_READ_BCD_CARDS
     10866**PROC     9260--CALL     9839--CALL
DFU_READ_BINARY
     10775**PROC     9230--CALL     9245--CALL     9778--CALL     9793--CALL     9809--CALL     9824--CALL
DFU_READ_CATALOG_CONTROL
     10306**PROC     9170--CALL     9718--CALL
DFU_READ_CATALOG_ENTRY
     10511**PROC     9200--CALL     9748--CALL
DFU_READ_LAST_DECK#
     11088**PROC     9290--CALL     9869--CALL
DFU_READ_LOG
     11185**PROC     9304--CALL
DFU_READ_MASTER_CONTROL
     10105**PROC     9140--CALL     9688--CALL
DFU_READ_MASTER_ENTRY
     10205**PROC     9155--CALL     9703--CALL
DFU_READ_OBJECT
     10616**PROC     9215--CALL     9763--CALL
DFU_READ_OBJECT_REFLIST
     10986**PROC     9275--CALL     9854--CALL
DFU_READ_REVISION
     11267**PROC     9318--CALL
DFU_READ_SUBCATALOG
     10412**PROC     9185--CALL     9733--CALL
DFU_WRITE_BCD_CARDS
     12845**PROC     9585--CALL    10043--CALL
DFU_WRITE_BINARY
     12761**PROC     9517--CALL     9534--CALL     9551--CALL     9568--CALL     9974--CALL     9991--CALL
     10008--CALL    10026--CALL
DFU_WRITE_CATALOG_CONTROL
     12329**PROC     9457--CALL     9914--CALL
DFU_WRITE_CATALOG_ENTRY
     12522**PROC     9487--CALL     9944--CALL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:343  
DFU_WRITE_LAST_DECK#
     13040**PROC     9615--CALL    10073--CALL
DFU_WRITE_LOG
     13128**PROC     9629--CALL
DFU_WRITE_MASTER_CONTROL
     12139**PROC     9427--CALL     9884--CALL
DFU_WRITE_MASTER_ENTRY
     12233**PROC     9442--CALL     9899--CALL
DFU_WRITE_OBJECT
     12617**PROC     9502--CALL     9959--CALL
DFU_WRITE_OBJECT_REFLIST
     12945**PROC     9600--CALL    10058--CALL
DFU_WRITE_REVISION
     13228**PROC     9643--CALL
DFU_WRITE_SUBCATALOG
     12428**PROC     9472--CALL     9929--CALL
DUP.BCD_V.PTR$
      9048**DCL     10894--IMP-PTR 10945>>ASSIGN  10948>>IF      12873--IMP-PTR 12915>>ASSIGN  12918>>IF
DUP.BINARY_V
      9040**DCL      9230<>CALL     9517<>CALL     9778<>CALL     9974<>CALL
DUP.BINARY_V.PTR$
      9043**DCL      8904--IMP-PTR  9245>>CALL     9534>>CALL     9551>>CALL     9568>>CALL     9568>>CALL
      9793>>CALL     9809>>CALL     9824>>CALL     9991>>CALL    10008>>CALL    10026>>CALL
DUP.LOG_V
      9074**DCL      9079--REDEF   11246>>ASSIGN  13206>>ASSIGN
DUP.LOG_V.PTR$
      9077**DCL     13152--IMP-PTR 13207>>ASSIGN
DUP.MSG_CODE
      8995**DCL     13805<<ASSIGN
DUP.TEMP.CLOSE_TYPE
      9084**DCL      9673<>CALL
DUP.TEMP.OPEN_TYPE
      9082**DCL      9658<>CALL
ERROR IN PROCEDURE DFU_CLOSE_TEMP
     13778**LABEL   13773--CALLALT 13775--CALLALT
ERROR IN PROCEDURE DFU_DELETE_CATALOG
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:344  
     12119**LABEL   12114--CALLALT 12115--CALLALT
ERROR IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11819**LABEL   11815--CALLALT
ERROR IN PROCEDURE DFU_DELETE_DECK
     11939**LABEL   11934--CALLALT 11935--CALLALT
ERROR IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12020**LABEL   12016--CALLALT
ERROR IN PROCEDURE DFU_OPEN_TEMP
     13599**LABEL   13594--CALLALT 13596--CALLALT
ERROR_CODE IN PROCEDURE DFU_ERR_MSG
     13800**DCL     13798--PROC    13805>>ASSIGN
F$DCB.ACTPOS IN PROCEDURE DFU_CLOSE_TEMP
     13653**DCL     13653--REDEF
F$DCB.ARS# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL     13627--REDEF
F$DCB.ATTR IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL     13647--REDEF
F$DCB.BORROW IN PROCEDURE DFU_CLOSE_TEMP
     13661**DCL     13661--REDEF   13661--REDEF   13661--REDEF
F$DCB.DCBNAME.L IN PROCEDURE DFU_CLOSE_TEMP
     13675**DCL     13675--IMP-SIZ
F$DCB.EOMCHAR# IN PROCEDURE DFU_CLOSE_TEMP
     13631**DCL     13631--REDEF
F$DCB.FCD# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL     13770>>IF
F$DCB.FLDID IN PROCEDURE DFU_CLOSE_TEMP
     13656**DCL     13656--REDEF
F$DCB.FORM$ IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL     13650--REDEF
F$DCB.FSECT IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL     13666--REDEF
F$DCB.FSN# IN PROCEDURE DFU_CLOSE_TEMP
     13643**DCL     13643--REDEF   13643--REDEF   13644--REDEF
F$DCB.HEADER$ IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL     13649--REDEF
F$DCB.IXTNSIZE# IN PROCEDURE DFU_CLOSE_TEMP
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:345  
     13647**DCL     13647--REDEF
F$DCB.LASTSTA$ IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL     13636--REDEF
F$DCB.LVL IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL     13662--REDEF
F$DCB.NAME#.C IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL     13637--REDEF
F$DCB.NOEOF IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL     13659--REDEF
F$DCB.NRECS# IN PROCEDURE DFU_CLOSE_TEMP
     13648**DCL     13648--REDEF
F$DCB.NRECX IN PROCEDURE DFU_CLOSE_TEMP
     13667**DCL     13667--REDEF
F$DCB.OHDR IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL     13659--REDEF
F$DCB.ORG# IN PROCEDURE DFU_CLOSE_TEMP
     13642**DCL     13642--REDEF
F$DCB.PRECNO IN PROCEDURE DFU_CLOSE_TEMP
     13665**DCL     13665--REDEF
F$DCB.RCSZ IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL     13671--REDEF
F$DCB.RES# IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL     13638--REDEF
F$DCB.SETX IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL     13650--REDEF
F$DCB.TAB$ IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL     13650--REDEF
F$DCB.TDA IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL     13665--REDEF
F$DCB.WSN# IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL     13638--REDEF
LAST IN PROCEDURE DFU_READ_LAST_DECK#
     11113**DCL     11140--DCLINIT 11141--DCLINIT
LAST IN PROCEDURE DFU_WRITE_LAST_DECK#
     13065**DCL     13091--DCLINIT 13092--DCLINIT
LAST_DECK_KEY IN PROCEDURE DFU_READ_LAST_DECK#
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:346  
     11100**DCL     11138--DCLINIT 11139--DCLINIT
LAST_DECK_KEY IN PROCEDURE DFU_WRITE_LAST_DECK#
     13052**DCL     13090--DCLINIT
LGTH IN PROCEDURE DFU_WRITE_BINARY
     12765**DCL     12761--PROC    12819>>ASSIGN
LOG_B.COUNT IN PROCEDURE DFU_WRITE_LOG
     13153**DCL     13207>>ASSIGN
LOG_KEY IN PROCEDURE DFU_READ_LOG
     11196**DCL     11221--DCLINIT 11222--DCLINIT
LOG_KEY IN PROCEDURE DFU_WRITE_LOG
     13139**DCL     13189--DCLINIT
M$CLOSE
      5629**DCL-ENT 13773--CALL    13775--CALL
M$DECKFILE
      9122**DCL      9140<>CALL     9155<>CALL     9170<>CALL     9185<>CALL     9200<>CALL     9215<>CALL
      9230<>CALL     9245<>CALL     9260<>CALL     9275<>CALL     9290<>CALL     9427<>CALL     9442<>CALL
      9457<>CALL     9472<>CALL     9487<>CALL     9502<>CALL     9517<>CALL     9534<>CALL     9551<>CALL
      9568<>CALL     9585<>CALL     9600<>CALL     9615<>CALL
M$DELREC
      5631**DCL-ENT 11815--CALL    11934--CALL    11935--CALL    12016--CALL    12114--CALL    12115--CALL
M$OPEN
      5629**DCL-ENT 13594--CALL    13596--CALL
M$READ
      5630**DCL-ENT 10182--CALL    10283--CALL    10384--CALL    10489--CALL    10588--CALL    10742--CALL
     10840--CALL    10946--CALL    11065--CALL    11164--CALL    11247--CALL    11350--CALL    11570--CALL
     11731--CALL
M$TEMP
      9123**DCL      9688<>CALL     9703<>CALL     9718<>CALL     9733<>CALL     9748<>CALL     9763<>CALL
      9778<>CALL     9793<>CALL     9809<>CALL     9824<>CALL     9839<>CALL     9854<>CALL     9869<>CALL
      9884<>CALL     9899<>CALL     9914<>CALL     9929<>CALL     9944<>CALL     9959<>CALL     9974<>CALL
      9991<>CALL    10008<>CALL    10026<>CALL    10043<>CALL    10058<>CALL    10073<>CALL    13770--IF
M$WRITE
      5630**DCL-ENT 12208--CALL    12303--CALL    12399--CALL    12497--CALL    12591--CALL    12735--CALL
     12820--CALL    12916--CALL    13017--CALL    13108--CALL    13208--CALL    13302--CALL
MASTER_DATA.DECK# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11986**DCL     12014>>ASSIGN
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:347  
MASTER_DATA.ENTRY_COUNT IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11987**DCL     12015>>ASSIGN
MASTER_DATA IN PROCEDURE DFU_READ_MASTER_CONTROL
     10130**DCL     10158--DCLINIT 10159--DCLINIT
MASTER_DATA IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12164**DCL     12191--DCLINIT 12192--DCLINIT
MASTER_ENTRY_KEY IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11971**DCL     12003--DCLINIT 12004--DCLINIT
MASTER_ENTRY_KEY.DECK# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11973**DCL     12014<<ASSIGN
MASTER_ENTRY_KEY.ENTRY# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11974**DCL     12015<<ASSIGN
MASTER_ENTRY_KEY IN PROCEDURE DFU_READ_MASTER_ENTRY
     10217**DCL     10257--DCLINIT 10258--DCLINIT
MASTER_ENTRY_KEY IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12245**DCL     12285--DCLINIT
MASTER_KEY IN PROCEDURE DFU_READ_MASTER_CONTROL
     10117**DCL     10156--DCLINIT 10157--DCLINIT
MASTER_KEY IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12151**DCL     12190--DCLINIT
MCA_B.CONFIG.DATA
      8959**DCL      8960--REDEF
MCA_B.DIRECTORY
      8938**DCL      9824--CALL    10008--CALL    10008--CALL
MCA_B.DIRECTORY.DATA
      8940**DCL      9568--CALL
MCA_B.DIRECTORY.SIZE
      8942**DCL      9568<>CALL
MCA_B.DISKETTE_HEADER.DATA
      8937**DCL      9551--CALL     9809--CALL    10026--CALL
MCA_B.FILE.DATA
      8946**DCL      9245--CALL     9534--CALL     9793--CALL     9991--CALL
NO_CATALOG_CONTROL IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10388**LABEL   10384--CALLALT
NO_CATALOG_ENTRY IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10592**LABEL   10588--CALLALT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:348  
NO_LAST_DECK# IN PROCEDURE DFU_READ_LAST_DECK#
     11168**LABEL   11164--CALLALT
NO_LOG IN PROCEDURE DFU_READ_LOG
     11251**LABEL   11247--CALLALT
NO_LOG IN PROCEDURE DFU_WRITE_LOG
     13212**LABEL   13208--CALLALT
NO_MASTER_CONTROL IN PROCEDURE DFU_READ_MASTER_CONTROL
     10186**LABEL   10182--CALLALT
NO_MASTER_ENTRY IN PROCEDURE DFU_READ_MASTER_ENTRY
     10287**LABEL   10283--CALLALT
NO_OBJECT IN PROCEDURE DFU_READ_OBJECT
     10751**LABEL   10742--CALLALT
NO_OBJECT_REFLIST IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11069**LABEL   11065--CALLALT
NO_OBJECT_REFLIST IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13021**LABEL   13017--CALLALT
NO_REVISION IN PROCEDURE DFU_READ_REVISION
     11354**LABEL   11350--CALLALT
NO_REVISION IN PROCEDURE DFU_WRITE_REVISION
     13306**LABEL   13302--CALLALT
NO_SUBCATALOG IN PROCEDURE DFU_READ_SUBCATALOG
     10493**LABEL   10489--CALLALT
OBJECT.BCD
      8842**DCL      8864--REDEF    8887--REDEF
OBJECT.LOAD_SIZE
      8891**DCL      9534>>CALL     9991>>CALL    10026>>CALL
OBJECT.NIO_BCD.X_OF_N
      8875**DCL      8880--REDEF
OBJECT.BCD IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11470**DCL     11492--REDEF   11515--REDEF
OBJECT.BCD.DATE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11489**DCL     11580<<ASSIGN
OBJECT.BCD.LIBRARY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11473**DCL     11578>>IF
OBJECT.BINARY_COUNT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11517**DCL     11571>>IF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:349  
OBJECT.DECK# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11516**DCL     11577<<ASSIGN
OBJECT.DECK_CHECKSUM IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11520**DCL     11571>>IF
OBJECT.LOAD_SIZE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11519**DCL     11571>>IF
OBJECT.NIO_BCD.X_OF_N IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11503**DCL     11508--REDEF
OBJECT.TOTAL_COUNT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11518**DCL     11571>>IF
OBJECT IN PROCEDURE DFU_CHECK_FOR_KEY
     11630**DCL     11708--DCLINIT 11709--DCLINIT
OBJECT.BCD IN PROCEDURE DFU_CHECK_FOR_KEY
     11631**DCL     11653--REDEF   11676--REDEF
OBJECT.NIO_BCD.X_OF_N IN PROCEDURE DFU_CHECK_FOR_KEY
     11664**DCL     11669--REDEF
OBJECT IN PROCEDURE DFU_READ_OBJECT
     10641**DCL     10718--DCLINIT 10719--DCLINIT
OBJECT.BCD IN PROCEDURE DFU_READ_OBJECT
     10642**DCL     10664--REDEF   10687--REDEF
OBJECT.BCD.TYPE IN PROCEDURE DFU_READ_OBJECT
     10644**DCL     10743>>IF
OBJECT.NIO_BCD.X_OF_N IN PROCEDURE DFU_READ_OBJECT
     10675**DCL     10680--REDEF
OBJECT IN PROCEDURE DFU_WRITE_OBJECT
     12642**DCL     12718--DCLINIT 12719--DCLINIT
OBJECT.BCD IN PROCEDURE DFU_WRITE_OBJECT
     12643**DCL     12665--REDEF   12688--REDEF
OBJECT.NIO_BCD.X_OF_N IN PROCEDURE DFU_WRITE_OBJECT
     12676**DCL     12681--REDEF
OBJECT_KEY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11392**DCL     11545--DCLINIT 11546--DCLINIT
OBJECT_KEY IN PROCEDURE DFU_CHECK_FOR_KEY
     11617**DCL     11706--DCLINIT 11707--DCLINIT
OBJECT_KEY IN PROCEDURE DFU_DELETE_DECK
     11856**DCL     11901--DCLINIT 11902--DCLINIT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:350  
OBJECT_KEY IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10537**DCL     10564--DCLINIT 10565--DCLINIT
OBJECT_KEY IN PROCEDURE DFU_READ_OBJECT
     10628**DCL     10716--DCLINIT 10717--DCLINIT
OBJECT_KEY IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12548**DCL     12574--DCLINIT 12575--DCLINIT
OBJECT_KEY IN PROCEDURE DFU_WRITE_OBJECT
     12629**DCL     12717--DCLINIT
OBJECT_REFLIST_DATA IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11012**DCL     11041--DCLINIT 11042--DCLINIT
OBJECT_REFLIST_DATA IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12971**DCL     12999--DCLINIT 13000--DCLINIT
OBJECT_REFLIST_DATA.NUM_REFS IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12972**DCL     13016>>ASSIGN
OBJECT_REFLIST_KEY IN PROCEDURE DFU_DELETE_DECK
     11883**DCL     11925--DCLINIT 11926--DCLINIT
OBJECT_REFLIST_KEY IN PROCEDURE DFU_READ_OBJECT_REFLIST
     10998**DCL     11039--DCLINIT 11040--DCLINIT
OBJECT_REFLIST_KEY IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12957**DCL     12998--DCLINIT
OLD_OBJECT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11406**DCL     11547--DCLINIT 11548--DCLINIT
OLD_OBJECT.BCD IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11407**DCL     11429--REDEF   11452--REDEF
OLD_OBJECT.BCD.DATE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11426**DCL     11580>>ASSIGN
OLD_OBJECT.BINARY_COUNT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11454**DCL     11571>>IF
OLD_OBJECT.DECK# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11453**DCL     11577>>ASSIGN
OLD_OBJECT.DECK_CHECKSUM IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11457**DCL     11571>>IF
OLD_OBJECT.LOAD_SIZE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11456**DCL     11571>>IF
OLD_OBJECT.NIO_BCD.X_OF_N IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11440**DCL     11445--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:351  
OLD_OBJECT.TOTAL_COUNT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11455**DCL     11571>>IF
READ_BCD_CARD IN PROCEDURE DFU_READ_BCD_CARDS
     10917**DCL     10946<>CALL
READ_BCD_CARD.BUF_ IN PROCEDURE DFU_READ_BCD_CARDS
     10919**DCL     10945<<ASSIGN
READ_BCD_CARD.STATION_ IN PROCEDURE DFU_READ_BCD_CARDS
     10920**DCL     10921--REDEF
READ_BCD_CARD.V IN PROCEDURE DFU_READ_BCD_CARDS
     10921**DCL     10917--DCLINIT
READ_BCD_CARD.V.DCB# IN PROCEDURE DFU_READ_BCD_CARDS
     10921**DCL     10942<<ASSIGN
READ_BCD_CARD.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_BCD_CARDS
     10932**DCL     10932--REDEF
READ_BCD_CARD.V.INDX# IN PROCEDURE DFU_READ_BCD_CARDS
     10930**DCL     10930--REDEF
READ_BINARY_DECK IN PROCEDURE DFU_READ_BINARY
     10813**DCL     10840<>CALL
READ_BINARY_DECK.BUF_ IN PROCEDURE DFU_READ_BINARY
     10815**DCL     10839<<ASSIGN
READ_BINARY_DECK.STATION_ IN PROCEDURE DFU_READ_BINARY
     10816**DCL     10817--REDEF
READ_BINARY_DECK.V IN PROCEDURE DFU_READ_BINARY
     10817**DCL     10813--DCLINIT
READ_BINARY_DECK.V.DCB# IN PROCEDURE DFU_READ_BINARY
     10817**DCL     10838<<ASSIGN
READ_BINARY_DECK.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_BINARY
     10828**DCL     10828--REDEF
READ_BINARY_DECK.V.INDX# IN PROCEDURE DFU_READ_BINARY
     10826**DCL     10826--REDEF
READ_CATALOG_CONTROL IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10358**DCL     10384<>CALL
READ_CATALOG_CONTROL.STATION_ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10361**DCL     10362--REDEF
READ_CATALOG_CONTROL.V IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10362**DCL     10358--DCLINIT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:352  
READ_CATALOG_CONTROL.V.DCB# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10362**DCL     10383<<ASSIGN
READ_CATALOG_CONTROL.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10373**DCL     10373--REDEF
READ_CATALOG_CONTROL.V.INDX# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10371**DCL     10371--REDEF
READ_CATALOG_ENTRY IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10562**DCL     10588<>CALL
READ_CATALOG_ENTRY.STATION_ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10565**DCL     10566--REDEF
READ_CATALOG_ENTRY.V IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10566**DCL     10562--DCLINIT
READ_CATALOG_ENTRY.V.DCB# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10566**DCL     10587<<ASSIGN
READ_CATALOG_ENTRY.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10577**DCL     10577--REDEF
READ_CATALOG_ENTRY.V.INDX# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10575**DCL     10575--REDEF
READ_DECKFILE_LOG IN PROCEDURE DFU_READ_LOG
     11221**DCL     11247<>CALL
READ_DECKFILE_LOG.BUF_ IN PROCEDURE DFU_READ_LOG
     11223**DCL     11246<<ASSIGN
READ_DECKFILE_LOG.STATION_ IN PROCEDURE DFU_READ_LOG
     11224**DCL     11225--REDEF
READ_DECKFILE_LOG.V IN PROCEDURE DFU_READ_LOG
     11225**DCL     11221--DCLINIT
READ_DECKFILE_LOG.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_LOG
     11236**DCL     11236--REDEF
READ_DECKFILE_LOG.V.INDX# IN PROCEDURE DFU_READ_LOG
     11234**DCL     11234--REDEF
READ_DECKFILE_REVISION IN PROCEDURE DFU_READ_REVISION
     11325**DCL     11350<>CALL
READ_DECKFILE_REVISION.STATION_ IN PROCEDURE DFU_READ_REVISION
     11328**DCL     11329--REDEF
READ_DECKFILE_REVISION.V IN PROCEDURE DFU_READ_REVISION
     11329**DCL     11325--DCLINIT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:353  
READ_DECKFILE_REVISION.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_REVISION
     11340**DCL     11340--REDEF
READ_DECKFILE_REVISION.V.INDX# IN PROCEDURE DFU_READ_REVISION
     11338**DCL     11338--REDEF
READ_ERROR IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11585**LABEL   11570--CALLALT
READ_ERROR IN PROCEDURE DFU_CHECK_FOR_KEY
     11735**LABEL   11731--CALLALT
READ_LAST_DECK# IN PROCEDURE DFU_READ_LAST_DECK#
     11138**DCL     11164<>CALL
READ_LAST_DECK#.STATION_ IN PROCEDURE DFU_READ_LAST_DECK#
     11141**DCL     11142--REDEF
READ_LAST_DECK#.V IN PROCEDURE DFU_READ_LAST_DECK#
     11142**DCL     11138--DCLINIT
READ_LAST_DECK#.V.DCB# IN PROCEDURE DFU_READ_LAST_DECK#
     11142**DCL     11163<<ASSIGN
READ_LAST_DECK#.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_LAST_DECK#
     11153**DCL     11153--REDEF
READ_LAST_DECK#.V.INDX# IN PROCEDURE DFU_READ_LAST_DECK#
     11151**DCL     11151--REDEF
READ_MASTER_CONTROL IN PROCEDURE DFU_READ_MASTER_CONTROL
     10156**DCL     10182<>CALL
READ_MASTER_CONTROL.STATION_ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10159**DCL     10160--REDEF
READ_MASTER_CONTROL.V IN PROCEDURE DFU_READ_MASTER_CONTROL
     10160**DCL     10156--DCLINIT
READ_MASTER_CONTROL.V.DCB# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10160**DCL     10181<<ASSIGN
READ_MASTER_CONTROL.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10171**DCL     10171--REDEF
READ_MASTER_CONTROL.V.INDX# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10169**DCL     10169--REDEF
READ_MASTER_ENTRY IN PROCEDURE DFU_READ_MASTER_ENTRY
     10257**DCL     10283<>CALL
READ_MASTER_ENTRY.STATION_ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10260**DCL     10261--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:354  
READ_MASTER_ENTRY.V IN PROCEDURE DFU_READ_MASTER_ENTRY
     10261**DCL     10257--DCLINIT
READ_MASTER_ENTRY.V.DCB# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10261**DCL     10282<<ASSIGN
READ_MASTER_ENTRY.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10272**DCL     10272--REDEF
READ_MASTER_ENTRY.V.INDX# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10270**DCL     10270--REDEF
READ_OBJECT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11545**DCL     11570<>CALL
READ_OBJECT.STATION_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11548**DCL     11549--REDEF
READ_OBJECT.V IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11549**DCL     11545--DCLINIT
READ_OBJECT.V.DVBYTE.REREAD# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11560**DCL     11560--REDEF
READ_OBJECT.V.INDX# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11558**DCL     11558--REDEF
READ_OBJECT IN PROCEDURE DFU_CHECK_FOR_KEY
     11706**DCL     11731<>CALL
READ_OBJECT.STATION_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11709**DCL     11710--REDEF
READ_OBJECT.V IN PROCEDURE DFU_CHECK_FOR_KEY
     11710**DCL     11706--DCLINIT
READ_OBJECT.V.DVBYTE.REREAD# IN PROCEDURE DFU_CHECK_FOR_KEY
     11721**DCL     11721--REDEF
READ_OBJECT.V.INDX# IN PROCEDURE DFU_CHECK_FOR_KEY
     11719**DCL     11719--REDEF
READ_OBJECT IN PROCEDURE DFU_READ_OBJECT
     10716**DCL     10742<>CALL
READ_OBJECT.STATION_ IN PROCEDURE DFU_READ_OBJECT
     10719**DCL     10720--REDEF
READ_OBJECT.V IN PROCEDURE DFU_READ_OBJECT
     10720**DCL     10716--DCLINIT
READ_OBJECT.V.DCB# IN PROCEDURE DFU_READ_OBJECT
     10720**DCL     10741<<ASSIGN
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:355  
READ_OBJECT.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_OBJECT
     10731**DCL     10731--REDEF
READ_OBJECT.V.INDX# IN PROCEDURE DFU_READ_OBJECT
     10729**DCL     10729--REDEF
READ_OBJECT_REFLIST IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11039**DCL     11065<>CALL
READ_OBJECT_REFLIST.STATION_ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11042**DCL     11043--REDEF
READ_OBJECT_REFLIST.V IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11043**DCL     11039--DCLINIT
READ_OBJECT_REFLIST.V.DCB# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11043**DCL     11064<<ASSIGN
READ_OBJECT_REFLIST.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11054**DCL     11054--REDEF
READ_OBJECT_REFLIST.V.INDX# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11052**DCL     11052--REDEF
READ_SUBCATALOG IN PROCEDURE DFU_READ_SUBCATALOG
     10463**DCL     10489<>CALL
READ_SUBCATALOG.STATION_ IN PROCEDURE DFU_READ_SUBCATALOG
     10466**DCL     10467--REDEF
READ_SUBCATALOG.V IN PROCEDURE DFU_READ_SUBCATALOG
     10467**DCL     10463--DCLINIT
READ_SUBCATALOG.V.DCB# IN PROCEDURE DFU_READ_SUBCATALOG
     10467**DCL     10488<<ASSIGN
READ_SUBCATALOG.V.DVBYTE.REREAD# IN PROCEDURE DFU_READ_SUBCATALOG
     10478**DCL     10478--REDEF
READ_SUBCATALOG.V.INDX# IN PROCEDURE DFU_READ_SUBCATALOG
     10476**DCL     10476--REDEF
REVISION_B IN PROCEDURE DFU_READ_REVISION
     11291**DCL     11327--DCLINIT 11328--DCLINIT
REVISION_B.MASK IN PROCEDURE DFU_READ_REVISION
     11294**DCL     11296--REDEF
REVISION_B IN PROCEDURE DFU_WRITE_REVISION
     13252**DCL     13286--DCLINIT 13287--DCLINIT
REVISION_B.MASK IN PROCEDURE DFU_WRITE_REVISION
     13255**DCL     13257--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:356  
REVISION_KEY IN PROCEDURE DFU_READ_REVISION
     11278**DCL     11325--DCLINIT 11326--DCLINIT
REVISION_KEY IN PROCEDURE DFU_WRITE_REVISION
     13239**DCL     13285--DCLINIT
SUBCATALOG_DATA IN PROCEDURE DFU_READ_SUBCATALOG
     10438**DCL     10465--DCLINIT 10466--DCLINIT
SUBCATALOG_DATA IN PROCEDURE DFU_WRITE_SUBCATALOG
     12454**DCL     12480--DCLINIT 12481--DCLINIT
SUBCATALOG_KEY IN PROCEDURE DFU_DELETE_CATALOG
     12064**DCL     12103--DCLINIT 12104--DCLINIT
SUBCATALOG_KEY IN PROCEDURE DFU_READ_SUBCATALOG
     10424**DCL     10463--DCLINIT 10464--DCLINIT
SUBCATALOG_KEY IN PROCEDURE DFU_WRITE_SUBCATALOG
     12440**DCL     12479--DCLINIT
SYSTEM_ERR IN PROCEDURE DFU_ERR_MSG
     13801**DCL     13798--PROC    13807>>IF
TEMP_CLOSE_TYPE IN PROCEDURE DFU_CLOSE_TEMP
     13619**DCL     13617--PROC    13771>>DOCASE
TEMP_CREATE IN PROCEDURE DFU_OPEN_TEMP
     13398**DCL     13594<>CALL
TEMP_CREATE.ACSVEH_ IN PROCEDURE DFU_OPEN_TEMP
     13400**DCL     13401--REDEF
TEMP_CREATE.ALTKEYS_ IN PROCEDURE DFU_OPEN_TEMP
     13406**DCL     13407--REDEF   13407--REDEF
TEMP_CREATE.HDR_ IN PROCEDURE DFU_OPEN_TEMP
     13405**DCL     13406--REDEF
TEMP_CREATE.TAB_ IN PROCEDURE DFU_OPEN_TEMP
     13404**DCL     13405--REDEF
TEMP_CREATE.UHL_ IN PROCEDURE DFU_OPEN_TEMP
     13398**DCL     13399--REDEF   13399--REDEF
TEMP_CREATE.V IN PROCEDURE DFU_OPEN_TEMP
     13407**DCL     13398--DCLINIT
TEMP_CREATE.V.FSN# IN PROCEDURE DFU_OPEN_TEMP
     13438**DCL     13438--REDEF   13438--REDEF
TEMP_CREATE.WSN_ IN PROCEDURE DFU_OPEN_TEMP
     13404**DCL     13404--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:357  
TEMP_DISCARD IN PROCEDURE DFU_CLOSE_TEMP
     13748**DCL     13775<>CALL
TEMP_DISCARD.SN_ IN PROCEDURE DFU_CLOSE_TEMP
     13748**DCL     13748--REDEF
TEMP_DISCARD.UTL_ IN PROCEDURE DFU_CLOSE_TEMP
     13749**DCL     13749--REDEF
TEMP_DISCARD.V IN PROCEDURE DFU_CLOSE_TEMP
     13753**DCL     13748--DCLINIT
TEMP_DISCARD.V.EXPIRE# IN PROCEDURE DFU_CLOSE_TEMP
     13763**DCL     13763--REDEF
TEMP_DISCARD.V.TYPE# IN PROCEDURE DFU_CLOSE_TEMP
     13761**DCL     13761--REDEF
TEMP_DISCARD.V.XTNSIZE# IN PROCEDURE DFU_CLOSE_TEMP
     13758**DCL     13758--REDEF   13760--REDEF
TEMP_NAME IN PROCEDURE DFU_OPEN_TEMP
     13587**DCL     13399--DCLINIT 13517--DCLINIT
TEMP_OPEN_TYPE IN PROCEDURE DFU_OPEN_TEMP
     13323**DCL     13321--PROC    13592>>DOCASE
TEMP_READ IN PROCEDURE DFU_OPEN_TEMP
     13516**DCL     13596<>CALL
TEMP_READ.ACSVEH_ IN PROCEDURE DFU_OPEN_TEMP
     13518**DCL     13519--REDEF
TEMP_READ.ALTKEYS_ IN PROCEDURE DFU_OPEN_TEMP
     13524**DCL     13525--REDEF   13525--REDEF
TEMP_READ.HDR_ IN PROCEDURE DFU_OPEN_TEMP
     13523**DCL     13524--REDEF
TEMP_READ.TAB_ IN PROCEDURE DFU_OPEN_TEMP
     13522**DCL     13523--REDEF
TEMP_READ.UHL_ IN PROCEDURE DFU_OPEN_TEMP
     13516**DCL     13517--REDEF   13517--REDEF
TEMP_READ.V IN PROCEDURE DFU_OPEN_TEMP
     13525**DCL     13516--DCLINIT
TEMP_READ.V.FSN# IN PROCEDURE DFU_OPEN_TEMP
     13556**DCL     13556--REDEF   13556--REDEF
TEMP_READ.WSN_ IN PROCEDURE DFU_OPEN_TEMP
     13522**DCL     13522--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:358  
TEMP_SAVE IN PROCEDURE DFU_CLOSE_TEMP
     13703**DCL     13773<>CALL
TEMP_SAVE.SN_ IN PROCEDURE DFU_CLOSE_TEMP
     13703**DCL     13703--REDEF
TEMP_SAVE.UTL_ IN PROCEDURE DFU_CLOSE_TEMP
     13704**DCL     13704--REDEF
TEMP_SAVE.V IN PROCEDURE DFU_CLOSE_TEMP
     13708**DCL     13703--DCLINIT
TEMP_SAVE.V.EXPIRE# IN PROCEDURE DFU_CLOSE_TEMP
     13718**DCL     13718--REDEF
TEMP_SAVE.V.TYPE# IN PROCEDURE DFU_CLOSE_TEMP
     13716**DCL     13716--REDEF
TEMP_SAVE.V.XTNSIZE# IN PROCEDURE DFU_CLOSE_TEMP
     13713**DCL     13713--REDEF   13715--REDEF
TOU$DFU_ALTRETURN
     10089**LABEL    9140--CALLALT  9155--CALLALT  9170--CALLALT  9185--CALLALT  9200--CALLALT  9215--CALLALT
      9230--CALLALT  9245--CALLALT  9260--CALLALT  9275--CALLALT  9290--CALLALT  9304--CALLALT  9318--CALLALT
      9333--CALLALT  9352--CALLALT  9367--CALLALT  9382--CALLALT  9397--CALLALT  9412--CALLALT  9427--CALLALT
      9442--CALLALT  9457--CALLALT  9472--CALLALT  9487--CALLALT  9502--CALLALT  9517--CALLALT  9534--CALLALT
      9551--CALLALT  9568--CALLALT  9585--CALLALT  9600--CALLALT  9615--CALLALT  9629--CALLALT  9643--CALLALT
      9658--CALLALT  9673--CALLALT  9688--CALLALT  9703--CALLALT  9718--CALLALT  9733--CALLALT  9748--CALLALT
      9763--CALLALT  9778--CALLALT  9793--CALLALT  9809--CALLALT  9824--CALLALT  9839--CALLALT  9854--CALLALT
      9869--CALLALT  9884--CALLALT  9899--CALLALT  9914--CALLALT  9929--CALLALT  9944--CALLALT  9959--CALLALT
      9974--CALLALT  9991--CALLALT 10008--CALLALT 10026--CALLALT 10043--CALLALT 10058--CALLALT 10073--CALLALT
TOU$DU_SYSTEM_ERRMSG
      9128**DCL-ENT 13808--CALL
TOU$DU_USER_WRITE
      9127**DCL-ENT 13806--CALL
WRITE_BCD_CARD IN PROCEDURE DFU_WRITE_BCD_CARDS
     12895**DCL     12916<>CALL
WRITE_BCD_CARD.BUF_ IN PROCEDURE DFU_WRITE_BCD_CARDS
     12895**DCL     12915<<ASSIGN
WRITE_BCD_CARD.STATION_ IN PROCEDURE DFU_WRITE_BCD_CARDS
     12897**DCL     12897--REDEF
WRITE_BCD_CARD.V IN PROCEDURE DFU_WRITE_BCD_CARDS
     12898**DCL     12895--DCLINIT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:359  
WRITE_BCD_CARD.V.DCB# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12898**DCL     12912<<ASSIGN
WRITE_BCD_CARD.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12904**DCL     12904--REDEF
WRITE_BINARY_DECK IN PROCEDURE DFU_WRITE_BINARY
     12800**DCL     12820<>CALL
WRITE_BINARY_DECK.BUF_ IN PROCEDURE DFU_WRITE_BINARY
     12800**DCL     12818<<ASSIGN
WRITE_BINARY_DECK.BUF_.BOUND IN PROCEDURE DFU_WRITE_BINARY
     12800**DCL     12819<<ASSIGN
WRITE_BINARY_DECK.STATION_ IN PROCEDURE DFU_WRITE_BINARY
     12802**DCL     12802--REDEF
WRITE_BINARY_DECK.V IN PROCEDURE DFU_WRITE_BINARY
     12803**DCL     12800--DCLINIT
WRITE_BINARY_DECK.V.DCB# IN PROCEDURE DFU_WRITE_BINARY
     12803**DCL     12817<<ASSIGN
WRITE_BINARY_DECK.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_BINARY
     12809**DCL     12809--REDEF
WRITE_CATALOG_CONTROL IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12381**DCL     12399<>CALL
WRITE_CATALOG_CONTROL.STATION_ IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12383**DCL     12383--REDEF
WRITE_CATALOG_CONTROL.V IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12384**DCL     12381--DCLINIT
WRITE_CATALOG_CONTROL.V.DCB# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12384**DCL     12398<<ASSIGN
WRITE_CATALOG_CONTROL.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12390**DCL     12390--REDEF
WRITE_CATALOG_ENTRY IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12573**DCL     12591<>CALL
WRITE_CATALOG_ENTRY.STATION_ IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12575**DCL     12575--REDEF
WRITE_CATALOG_ENTRY.V IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12576**DCL     12573--DCLINIT
WRITE_CATALOG_ENTRY.V.DCB# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12576**DCL     12590<<ASSIGN
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:360  
WRITE_CATALOG_ENTRY.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12582**DCL     12582--REDEF
WRITE_DECKFILE_LOG IN PROCEDURE DFU_WRITE_LOG
     13189**DCL     13208<>CALL
WRITE_DECKFILE_LOG.BUF_ IN PROCEDURE DFU_WRITE_LOG
     13189**DCL     13206<<ASSIGN
WRITE_DECKFILE_LOG.BUF_.BOUND IN PROCEDURE DFU_WRITE_LOG
     13189**DCL     13207<<ASSIGN
WRITE_DECKFILE_LOG.STATION_ IN PROCEDURE DFU_WRITE_LOG
     13191**DCL     13191--REDEF
WRITE_DECKFILE_LOG.V IN PROCEDURE DFU_WRITE_LOG
     13192**DCL     13189--DCLINIT
WRITE_DECKFILE_LOG.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_LOG
     13198**DCL     13198--REDEF
WRITE_DECKFILE_REVISION IN PROCEDURE DFU_WRITE_REVISION
     13285**DCL     13302<>CALL
WRITE_DECKFILE_REVISION.STATION_ IN PROCEDURE DFU_WRITE_REVISION
     13287**DCL     13287--REDEF
WRITE_DECKFILE_REVISION.V IN PROCEDURE DFU_WRITE_REVISION
     13288**DCL     13285--DCLINIT
WRITE_DECKFILE_REVISION.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_REVISION
     13294**DCL     13294--REDEF
WRITE_LAST_DECK# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13090**DCL     13108<>CALL
WRITE_LAST_DECK#.STATION_ IN PROCEDURE DFU_WRITE_LAST_DECK#
     13092**DCL     13092--REDEF
WRITE_LAST_DECK#.V IN PROCEDURE DFU_WRITE_LAST_DECK#
     13093**DCL     13090--DCLINIT
WRITE_LAST_DECK#.V.DCB# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13093**DCL     13107<<ASSIGN
WRITE_LAST_DECK#.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13099**DCL     13099--REDEF
WRITE_MASTER_CONTROL IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12190**DCL     12208<>CALL
WRITE_MASTER_CONTROL.STATION_ IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12192**DCL     12192--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:361  
WRITE_MASTER_CONTROL.V IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12193**DCL     12190--DCLINIT
WRITE_MASTER_CONTROL.V.DCB# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12193**DCL     12207<<ASSIGN
WRITE_MASTER_CONTROL.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12199**DCL     12199--REDEF
WRITE_MASTER_ENTRY IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12285**DCL     12303<>CALL
WRITE_MASTER_ENTRY.STATION_ IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12287**DCL     12287--REDEF
WRITE_MASTER_ENTRY.V IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12288**DCL     12285--DCLINIT
WRITE_MASTER_ENTRY.V.DCB# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12288**DCL     12302<<ASSIGN
WRITE_MASTER_ENTRY.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12294**DCL     12294--REDEF
WRITE_OBJECT IN PROCEDURE DFU_WRITE_OBJECT
     12717**DCL     12735<>CALL
WRITE_OBJECT.STATION_ IN PROCEDURE DFU_WRITE_OBJECT
     12719**DCL     12719--REDEF
WRITE_OBJECT.V IN PROCEDURE DFU_WRITE_OBJECT
     12720**DCL     12717--DCLINIT
WRITE_OBJECT.V.DCB# IN PROCEDURE DFU_WRITE_OBJECT
     12720**DCL     12734<<ASSIGN
WRITE_OBJECT.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_OBJECT
     12726**DCL     12726--REDEF
WRITE_OBJECT_REFLIST IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12998**DCL     13017<>CALL
WRITE_OBJECT_REFLIST.BUF_.BOUND IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12998**DCL     13016<<ASSIGN
WRITE_OBJECT_REFLIST.STATION_ IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13000**DCL     13000--REDEF
WRITE_OBJECT_REFLIST.V IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13001**DCL     12998--DCLINIT
WRITE_OBJECT_REFLIST.V.DCB# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13001**DCL     13015<<ASSIGN
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:362  
WRITE_OBJECT_REFLIST.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13007**DCL     13007--REDEF
WRITE_SUBCATALOG IN PROCEDURE DFU_WRITE_SUBCATALOG
     12479**DCL     12497<>CALL
WRITE_SUBCATALOG.STATION_ IN PROCEDURE DFU_WRITE_SUBCATALOG
     12481**DCL     12481--REDEF
WRITE_SUBCATALOG.V IN PROCEDURE DFU_WRITE_SUBCATALOG
     12482**DCL     12479--DCLINIT
WRITE_SUBCATALOG.V.DCB# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12482**DCL     12496<<ASSIGN
WRITE_SUBCATALOG.V.DVBYTE.VFC# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12488**DCL     12488--REDEF
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:363  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:364  
              FULL UREF LISTING

B$ALT
      9113**DCL
B$ALT.BRKCNT
      9114**DCL
B$ALT.DCB#
      9114**DCL
B$ALT.ERR
      9114**DCL
B$ALT.ERR.CODE
      9115**DCL
B$ALT.ERR.FCG
      9115**DCL
B$ALT.ERR.MID
      9115**DCL
B$ALT.ERR.MON
      9115**DCL
B$ALT.ERR.SEV
      9115**DCL
B$ALT.EVSC
      9114**DCL
B$ALT.FPT
      9113**DCL
B$ALT.FPT.FCG
      9113**DCL
B$ALT.FPT.PMME
      9113**DCL
B$ALT.P#
      9117**DCL
B$ALT.SSFRAME
      9113**DCL
B$ALT.SUBC
      9114**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:365  
B$TCB
      9109**DCL
B$TCB.CURRSZ
      9109**DCL
B$TCB.STK$
      9109**DCL
B$TCB.TCBAVSZ
      9109**DCL
BCD_KEY.DECK# IN PROCEDURE DFU_READ_BCD_CARDS
     10880**DCL
BCD_KEY.SIZE IN PROCEDURE DFU_READ_BCD_CARDS
     10879**DCL
BCD_KEY.DECK# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12861**DCL
BCD_KEY.SIZE IN PROCEDURE DFU_WRITE_BCD_CARDS
     12860**DCL
BINARY_KEY.DECK# IN PROCEDURE DFU_DELETE_DECK
     11871**DCL
BINARY_KEY.ENTRY# IN PROCEDURE DFU_DELETE_DECK
     11872**DCL
BINARY_KEY.SIZE IN PROCEDURE DFU_DELETE_DECK
     11870**DCL
BINARY_KEY.DECK# IN PROCEDURE DFU_READ_BINARY
     10790**DCL
BINARY_KEY.ENTRY# IN PROCEDURE DFU_READ_BINARY
     10791**DCL
BINARY_KEY.SIZE IN PROCEDURE DFU_READ_BINARY
     10789**DCL
BINARY_KEY.DECK# IN PROCEDURE DFU_WRITE_BINARY
     12777**DCL
BINARY_KEY.ENTRY# IN PROCEDURE DFU_WRITE_BINARY
     12778**DCL
BINARY_KEY.SIZE IN PROCEDURE DFU_WRITE_BINARY
     12776**DCL
CATALOG_DATA IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11784**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:366  
CATALOG_DATA.RFU IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11787**DCL
CATALOG_DATA.DECK# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10333**DCL
CATALOG_DATA.ENTRY_COUNT IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10334**DCL
CATALOG_DATA.RFU IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10335**DCL
CATALOG_DATA.DECK# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12356**DCL
CATALOG_DATA.ENTRY_COUNT IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12357**DCL
CATALOG_DATA.RFU IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12358**DCL
CATALOG_ENTRY_KEY.SIZE IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11771**DCL
CATALOG_ENTRY_KEY.DECK# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10525**DCL
CATALOG_ENTRY_KEY.ENTRY# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10526**DCL
CATALOG_ENTRY_KEY.SIZE IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10524**DCL
CATALOG_ENTRY_KEY.DECK# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12536**DCL
CATALOG_ENTRY_KEY.ENTRY# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12537**DCL
CATALOG_ENTRY_KEY.SIZE IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12535**DCL
CATALOG_KEY.DATA IN PROCEDURE DFU_DELETE_CATALOG
     12052**DCL
CATALOG_KEY.DECK# IN PROCEDURE DFU_DELETE_CATALOG
     12053**DCL
CATALOG_KEY.SIZE IN PROCEDURE DFU_DELETE_CATALOG
     12051**DCL
CATALOG_KEY.DATA IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10320**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:367  
CATALOG_KEY.DECK# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10321**DCL
CATALOG_KEY.SIZE IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10319**DCL
CATALOG_KEY.DATA IN PROCEDURE DFU_READ_MASTER_ENTRY
     10233**DCL
CATALOG_KEY.DECK# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10234**DCL
CATALOG_KEY.SIZE IN PROCEDURE DFU_READ_MASTER_ENTRY
     10232**DCL
CATALOG_KEY.DATA IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12343**DCL
CATALOG_KEY.DECK# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12344**DCL
CATALOG_KEY.SIZE IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12342**DCL
CATALOG_KEY.DATA IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12261**DCL
CATALOG_KEY.DECK# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12262**DCL
CATALOG_KEY.SIZE IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12260**DCL
DEL_$OBJECT_CARD.IDBUF_ IN PROCEDURE DFU_DELETE_DECK
     11904**DCL
DEL_$OBJECT_CARD.KEY_ IN PROCEDURE DFU_DELETE_DECK
     11901**DCL
DEL_$OBJECT_CARD.KEY_.BOUND IN PROCEDURE DFU_DELETE_DECK
     11901**DCL
DEL_$OBJECT_CARD.KEY_.KEY$ IN PROCEDURE DFU_DELETE_DECK
     11902**DCL
DEL_$OBJECT_CARD.LKEY_ IN PROCEDURE DFU_DELETE_DECK
     11903**DCL
DEL_$OBJECT_CARD.LKEY_.BOUND IN PROCEDURE DFU_DELETE_DECK
     11903**DCL
DEL_$OBJECT_CARD.LKEY_.LKEY$ IN PROCEDURE DFU_DELETE_DECK
     11904**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:368  
DEL_$OBJECT_CARD.V.ALLDUPS# IN PROCEDURE DFU_DELETE_DECK
     11906**DCL
DEL_$OBJECT_CARD.V.BRK# IN PROCEDURE DFU_DELETE_DECK
     11906**DCL
DEL_$OBJECT_CARD.V.DCB# IN PROCEDURE DFU_DELETE_DECK
     11905**DCL
DEL_$OBJECT_CARD.V.DELALL# IN PROCEDURE DFU_DELETE_DECK
     11907**DCL
DEL_$OBJECT_CARD.V.INDX# IN PROCEDURE DFU_DELETE_DECK
     11905**DCL
DEL_$OBJECT_CARD.V.RECNUM# IN PROCEDURE DFU_DELETE_DECK
     11906**DCL
DEL_$OBJECT_CARD.V_ IN PROCEDURE DFU_DELETE_DECK
     11901**DCL
DEL_BINARY_THRU_REFLIST.IDBUF_ IN PROCEDURE DFU_DELETE_DECK
     11926**DCL
DEL_BINARY_THRU_REFLIST.KEY_ IN PROCEDURE DFU_DELETE_DECK
     11923**DCL
DEL_BINARY_THRU_REFLIST.KEY_.BOUND IN PROCEDURE DFU_DELETE_DECK
     11923**DCL
DEL_BINARY_THRU_REFLIST.KEY_.KEY$ IN PROCEDURE DFU_DELETE_DECK
     11924**DCL
DEL_BINARY_THRU_REFLIST.LKEY_ IN PROCEDURE DFU_DELETE_DECK
     11925**DCL
DEL_BINARY_THRU_REFLIST.LKEY_.BOUND IN PROCEDURE DFU_DELETE_DECK
     11925**DCL
DEL_BINARY_THRU_REFLIST.LKEY_.LKEY$ IN PROCEDURE DFU_DELETE_DECK
     11926**DCL
DEL_BINARY_THRU_REFLIST.V.ALLDUPS# IN PROCEDURE DFU_DELETE_DECK
     11928**DCL
DEL_BINARY_THRU_REFLIST.V.BRK# IN PROCEDURE DFU_DELETE_DECK
     11928**DCL
DEL_BINARY_THRU_REFLIST.V.DCB# IN PROCEDURE DFU_DELETE_DECK
     11927**DCL
DEL_BINARY_THRU_REFLIST.V.DELALL# IN PROCEDURE DFU_DELETE_DECK
     11929**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:369  
DEL_BINARY_THRU_REFLIST.V.INDX# IN PROCEDURE DFU_DELETE_DECK
     11927**DCL
DEL_BINARY_THRU_REFLIST.V.RECNUM# IN PROCEDURE DFU_DELETE_DECK
     11928**DCL
DEL_BINARY_THRU_REFLIST.V_ IN PROCEDURE DFU_DELETE_DECK
     11923**DCL
DEL_CATALOG.IDBUF_ IN PROCEDURE DFU_DELETE_CATALOG
     12085**DCL
DEL_CATALOG.KEY_ IN PROCEDURE DFU_DELETE_CATALOG
     12082**DCL
DEL_CATALOG.KEY_.BOUND IN PROCEDURE DFU_DELETE_CATALOG
     12082**DCL
DEL_CATALOG.KEY_.KEY$ IN PROCEDURE DFU_DELETE_CATALOG
     12083**DCL
DEL_CATALOG.LKEY_ IN PROCEDURE DFU_DELETE_CATALOG
     12084**DCL
DEL_CATALOG.LKEY_.BOUND IN PROCEDURE DFU_DELETE_CATALOG
     12084**DCL
DEL_CATALOG.LKEY_.LKEY$ IN PROCEDURE DFU_DELETE_CATALOG
     12085**DCL
DEL_CATALOG.V.ALLDUPS# IN PROCEDURE DFU_DELETE_CATALOG
     12087**DCL
DEL_CATALOG.V.BRK# IN PROCEDURE DFU_DELETE_CATALOG
     12087**DCL
DEL_CATALOG.V.DCB# IN PROCEDURE DFU_DELETE_CATALOG
     12086**DCL
DEL_CATALOG.V.DELALL# IN PROCEDURE DFU_DELETE_CATALOG
     12088**DCL
DEL_CATALOG.V.INDX# IN PROCEDURE DFU_DELETE_CATALOG
     12086**DCL
DEL_CATALOG.V.RECNUM# IN PROCEDURE DFU_DELETE_CATALOG
     12087**DCL
DEL_CATALOG.V_ IN PROCEDURE DFU_DELETE_CATALOG
     12082**DCL
DEL_ENTRY.IDBUF_ IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11805**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:370  
DEL_ENTRY.KEY_ IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11802**DCL
DEL_ENTRY.KEY_.BOUND IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11802**DCL
DEL_ENTRY.KEY_.KEY$ IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11803**DCL
DEL_ENTRY.LKEY_ IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11804**DCL
DEL_ENTRY.LKEY_.BOUND IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11804**DCL
DEL_ENTRY.LKEY_.LKEY$ IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11805**DCL
DEL_ENTRY.V.ALLDUPS# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11807**DCL
DEL_ENTRY.V.BRK# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11807**DCL
DEL_ENTRY.V.DCB# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11806**DCL
DEL_ENTRY.V.DELALL# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11808**DCL
DEL_ENTRY.V.INDX# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11806**DCL
DEL_ENTRY.V.RECNUM# IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11807**DCL
DEL_ENTRY.V_ IN PROCEDURE DFU_DELETE_CATALOG_ENTRY
     11802**DCL
DEL_ENTRY.IDBUF_ IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12006**DCL
DEL_ENTRY.KEY_ IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12003**DCL
DEL_ENTRY.KEY_.BOUND IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12003**DCL
DEL_ENTRY.KEY_.KEY$ IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12004**DCL
DEL_ENTRY.LKEY_ IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12005**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:371  
DEL_ENTRY.LKEY_.BOUND IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12005**DCL
DEL_ENTRY.LKEY_.LKEY$ IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12006**DCL
DEL_ENTRY.V.ALLDUPS# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12008**DCL
DEL_ENTRY.V.BRK# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12008**DCL
DEL_ENTRY.V.DCB# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12007**DCL
DEL_ENTRY.V.DELALL# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12009**DCL
DEL_ENTRY.V.INDX# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12007**DCL
DEL_ENTRY.V.RECNUM# IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12008**DCL
DEL_ENTRY.V_ IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     12003**DCL
DEL_SUBCATALOG.IDBUF_ IN PROCEDURE DFU_DELETE_CATALOG
     12106**DCL
DEL_SUBCATALOG.KEY_ IN PROCEDURE DFU_DELETE_CATALOG
     12103**DCL
DEL_SUBCATALOG.KEY_.BOUND IN PROCEDURE DFU_DELETE_CATALOG
     12103**DCL
DEL_SUBCATALOG.KEY_.KEY$ IN PROCEDURE DFU_DELETE_CATALOG
     12104**DCL
DEL_SUBCATALOG.LKEY_ IN PROCEDURE DFU_DELETE_CATALOG
     12105**DCL
DEL_SUBCATALOG.LKEY_.BOUND IN PROCEDURE DFU_DELETE_CATALOG
     12105**DCL
DEL_SUBCATALOG.LKEY_.LKEY$ IN PROCEDURE DFU_DELETE_CATALOG
     12106**DCL
DEL_SUBCATALOG.V.ALLDUPS# IN PROCEDURE DFU_DELETE_CATALOG
     12108**DCL
DEL_SUBCATALOG.V.BRK# IN PROCEDURE DFU_DELETE_CATALOG
     12108**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:372  
DEL_SUBCATALOG.V.DCB# IN PROCEDURE DFU_DELETE_CATALOG
     12107**DCL
DEL_SUBCATALOG.V.DELALL# IN PROCEDURE DFU_DELETE_CATALOG
     12109**DCL
DEL_SUBCATALOG.V.INDX# IN PROCEDURE DFU_DELETE_CATALOG
     12107**DCL
DEL_SUBCATALOG.V.RECNUM# IN PROCEDURE DFU_DELETE_CATALOG
     12108**DCL
DEL_SUBCATALOG.V_ IN PROCEDURE DFU_DELETE_CATALOG
     12103**DCL
DUP
      8974**DCL
DUP.BATCH_MODE
      8976**DCL
DUP.BCD_V
      9045**DCL
DUP.BOTTOM_LINE#
      9012**DCL
DUP.BREAK_DISABLED
      9094**DCL
DUP.BREAK_RETURN
      9096**DCL
DUP.BREAK_TERMINATE
      9092**DCL
DUP.CMD$
      8992**DCL
DUP.CPU_TYPE
      9105**DCL
DUP.CURRENT_LINE#
      9010**DCL
DUP.CURRENT_PAGE#
      9008**DCL
DUP.DF
      9051**DCL
DUP.DF.CLOSE_TYPE
      9060**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:373  
DUP.DF.ENTERED
      9052**DCL
DUP.DF.FID
      9062**DCL
DUP.DF.FID_LGTH
      9064**DCL
DUP.DF.NO_EXIST
      9054**DCL
DUP.DF.OPEN_TYPE
      9058**DCL
DUP.DF.REPORT_ERROR
      9056**DCL
DUP.DS_V
      8985**DCL
DUP.ERROR_IMAGE
      9014**DCL
DUP.FAULT_ERROR
      8980**DCL
DUP.FORCE_NEW_PAGE
      9016**DCL
DUP.HDR_CODE
      8997**DCL
DUP.HOLD_AREA
      9087**DCL
DUP.HOLD_AREA_LGTH
      9089**DCL
DUP.IFAD
      9019**DCL
DUP.IFAD.CONFIG_TAB
      9028**DCL
DUP.IFAD.DEVICE_INPUT
      9024**DCL
DUP.IFAD.DRIVE_NUMBER
      9034**DCL
DUP.IFAD.ENTERED
      9022**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:374  
DUP.IFAD.FID
      9036**DCL
DUP.IFAD.FID_LGTH
      9038**DCL
DUP.IFAD.IMU_NUMBER
      9032**DCL
DUP.IFAD.IMU_TAB
      9026**DCL
DUP.IFAD.ME_ALLOWED
      9020**DCL
DUP.IFAD.NUM_VOLUMES
      9030**DCL
DUP.LINE_VFC
      9006**DCL
DUP.LOG
      9067**DCL
DUP.LOG.CATALOG
      9070**DCL
DUP.LOG.DECK
      9072**DCL
DUP.LOG.TYPE
      9068**DCL
DUP.LOG_V_
      9079**DCL
DUP.MSG_V
      9001**DCL
DUP.MSG_V.PTR$
      9004**DCL
DUP.NUM_LINES
      8999**DCL
DUP.NUM_WORDS
      8983**DCL
DUP.PROCESS_COMPLETE
      8978**DCL
DUP.RESPONSE
      8988**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:375  
DUP.RESPONSE_LGTH
      8990**DCL
DUP.SITE_ID
      9103**DCL
DUP.SITE_NAME
      9098**DCL
DUP.SITE_NAME.LGTH
      9099**DCL
DUP.SITE_NAME.TEXT
      9101**DCL
DUP.TEMP
      9081**DCL
F$DCB IN PROCEDURE DFU_CLOSE_TEMP
     13621**DCL
F$DCB.ACCT# IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.ACS# IN PROCEDURE DFU_CLOSE_TEMP
     13645**DCL
F$DCB.AFTRBLK IN PROCEDURE DFU_CLOSE_TEMP
     13661**DCL
F$DCB.AGE IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.ALTKEYX IN PROCEDURE DFU_CLOSE_TEMP
     13652**DCL
F$DCB.AMFLG IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.AMFLG.ACCF IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.AMFLG.ACSF IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.AMFLG.INSF IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.AMFLG.PROF IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.AMFLG.SNLF IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:376  
F$DCB.AMFLG.USRF IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.AMR# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.AMRSETSTA IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.ANSISPANSEQ# IN PROCEDURE DFU_CLOSE_TEMP
     13655**DCL
F$DCB.ASN# IN PROCEDURE DFU_CLOSE_TEMP
     13642**DCL
F$DCB.ATTR.APL# IN PROCEDURE DFU_CLOSE_TEMP
     13647**DCL
F$DCB.ATTR.BIN# IN PROCEDURE DFU_CLOSE_TEMP
     13647**DCL
F$DCB.ATTR.DENS# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.ATTR.GRLGL# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.ATTR.LOWERCASE# IN PROCEDURE DFU_CLOSE_TEMP
     13647**DCL
F$DCB.ATTR.NATL# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.ATTR.NOXLATE# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.ATTR.TRANSLGL# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.ATTR.TRUOVRPRT# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.ATTR.UPPERCASE# IN PROCEDURE DFU_CLOSE_TEMP
     13646**DCL
F$DCB.AU# IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.AUTHFFLG IN PROCEDURE DFU_CLOSE_TEMP
     13653**DCL
F$DCB.AUTHFFLG.AU# IN PROCEDURE DFU_CLOSE_TEMP
     13655**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:377  
F$DCB.AUTHFFLG.AURD# IN PROCEDURE DFU_CLOSE_TEMP
     13655**DCL
F$DCB.AUTHFFLG.CREATE# IN PROCEDURE DFU_CLOSE_TEMP
     13655**DCL
F$DCB.AUTHFFLG.DELF# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.DELR# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.EXEC# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.NOLIST# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.READ# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.REATTR# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.TCTL# IN PROCEDURE DFU_CLOSE_TEMP
     13655**DCL
F$DCB.AUTHFFLG.UPD# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.AUTHFFLG.WNEW# IN PROCEDURE DFU_CLOSE_TEMP
     13654**DCL
F$DCB.BADARS# IN PROCEDURE DFU_CLOSE_TEMP
     13656**DCL
F$DCB.BFR IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.BFR.BUFUP IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR.BUFX IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR.CHNG IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR.CVM IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR.DA IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:378  
F$DCB.BFR.SCRUB IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR1 IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR1.CX IN PROCEDURE DFU_CLOSE_TEMP
     13674**DCL
F$DCB.BFR1.FLAGS IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR1.FLAGS.ONE_WORD_HEADER IN PROCEDURE DFU_CLOSE_TEMP
     13673**DCL
F$DCB.BFR1.SIZ IN PROCEDURE DFU_CLOSE_TEMP
     13674**DCL
F$DCB.BLKL# IN PROCEDURE DFU_CLOSE_TEMP
     13643**DCL
F$DCB.BLKLEN IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.BLOCKED# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.BOL# IN PROCEDURE DFU_CLOSE_TEMP
     13644**DCL
F$DCB.BUPF IN PROCEDURE DFU_CLOSE_TEMP
     13631**DCL
F$DCB.BUPM# IN PROCEDURE DFU_CLOSE_TEMP
     13642**DCL
F$DCB.BYTESLEFT IN PROCEDURE DFU_CLOSE_TEMP
     13665**DCL
F$DCB.CACHE IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.CBUFNUM IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL
F$DCB.CFU$ IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL
F$DCB.CHAIN# IN PROCEDURE DFU_CLOSE_TEMP
     13648**DCL
F$DCB.CHANTIME# IN PROCEDURE DFU_CLOSE_TEMP
     13648**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:379  
F$DCB.CNVRT# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.CODE16$ IN PROCEDURE DFU_CLOSE_TEMP
     13652**DCL
F$DCB.COMP# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.CONNCT# IN PROCEDURE DFU_CLOSE_TEMP
     13647**DCL
F$DCB.CONT IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.CRECNO IN PROCEDURE DFU_CLOSE_TEMP
     13665**DCL
F$DCB.CRECX IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL
F$DCB.CSEED IN PROCEDURE DFU_CLOSE_TEMP
     13665**DCL
F$DCB.CTG# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.CTLCMDIN IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
F$DCB.CVOL# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.CWORD IN PROCEDURE DFU_CLOSE_TEMP
     13670**DCL
F$DCB.CX IN PROCEDURE DFU_CLOSE_TEMP
     13670**DCL
F$DCB.DBGDCBNO# IN PROCEDURE DFU_CLOSE_TEMP
     13643**DCL
F$DCB.DBGSYSID# IN PROCEDURE DFU_CLOSE_TEMP
     13643**DCL
F$DCB.DCB# IN PROCEDURE DFU_CLOSE_TEMP
     13655**DCL
F$DCB.DCBNAME IN PROCEDURE DFU_CLOSE_TEMP
     13674**DCL
F$DCB.DCBNAME.N IN PROCEDURE DFU_CLOSE_TEMP
     13675**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:380  
F$DCB.DCBNAME.S IN PROCEDURE DFU_CLOSE_TEMP
     13675**DCL
F$DCB.DCBNAME.X IN PROCEDURE DFU_CLOSE_TEMP
     13675**DCL
F$DCB.DCT$ IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL
F$DCB.DDEV IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.DDEV.CP# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.DDEV.GR# IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.DDEV.IC# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.DDEV.LP# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.DDEV.UCOUT# IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.DDEV.XEQ# IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.DECRYPT IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
F$DCB.DENSITY# IN PROCEDURE DFU_CLOSE_TEMP
     13648**DCL
F$DCB.DESC IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.DESC.ACTIVE# IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL
F$DCB.DESC.ARCHIVE# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.BAD# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.BUF# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.BUPM# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:381  
F$DCB.DESC.DELF# IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.DESC.FETCH# IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL
F$DCB.DESC.NBUF# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.NOLIST# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.ODSTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.QS# IN PROCEDURE DFU_CLOSE_TEMP
     13635**DCL
F$DCB.DESC.TERMINATE# IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL
F$DCB.DESC.TPB# IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL
F$DCB.DEVADR IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL
F$DCB.DEVADR.CHAN# IN PROCEDURE DFU_CLOSE_TEMP
     13651**DCL
F$DCB.DEVADR.DVN# IN PROCEDURE DFU_CLOSE_TEMP
     13651**DCL
F$DCB.DEVADR.IOM# IN PROCEDURE DFU_CLOSE_TEMP
     13651**DCL
F$DCB.DISP# IN PROCEDURE DFU_CLOSE_TEMP
     13642**DCL
F$DCB.DQH$ IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL
F$DCB.DVBYTE IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
F$DCB.DVBYTE.BIN# IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
F$DCB.DVBYTE.TOP# IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
F$DCB.DVBYTE.TRANS# IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:382  
F$DCB.DVBYTE.VFC# IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
F$DCB.DVFC# IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL
F$DCB.DVTYPE# IN PROCEDURE DFU_CLOSE_TEMP
     13642**DCL
F$DCB.EBCDIC# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.ENQF IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.EOMVAL# IN PROCEDURE DFU_CLOSE_TEMP
     13631**DCL
F$DCB.EOMVAL#.VALUE# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.EOMVAL#.VFLG# IN PROCEDURE DFU_CLOSE_TEMP
     13631**DCL
F$DCB.EOP IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.EVENT IN PROCEDURE DFU_CLOSE_TEMP
     13652**DCL
F$DCB.EXIST# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.EXPIRE# IN PROCEDURE DFU_CLOSE_TEMP
     13644**DCL
F$DCB.FCI# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.FCN IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.FCN.CNT IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.FCN.F IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.FDCM IN PROCEDURE DFU_CLOSE_TEMP
     13665**DCL
F$DCB.FEPIO IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:383  
F$DCB.FEPIO.BPP IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.FEPIO.BUFX IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.FEPIO.EVENT IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.FEPIO.KEYX IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.FEPIO.KPP IN PROCEDURE DFU_CLOSE_TEMP
     13672**DCL
F$DCB.FEPIO2 IN PROCEDURE DFU_CLOSE_TEMP
     13674**DCL
F$DCB.FEPIO3 IN PROCEDURE DFU_CLOSE_TEMP
     13674**DCL
F$DCB.FEPSIZ IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL
F$DCB.FEPSIZ.BUF IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL
F$DCB.FEPSIZ.KEY IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL
F$DCB.FEXT IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.FEXTX IN PROCEDURE DFU_CLOSE_TEMP
     13644**DCL
F$DCB.FFLG IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FFLG.AU# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.FFLG.AURD# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.FFLG.CREATE# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.FFLG.DELF# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FFLG.DELR# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:384  
F$DCB.FFLG.EXEC# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.FFLG.NOLIST# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FFLG.READ# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FFLG.REATTR# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FFLG.TCTL# IN PROCEDURE DFU_CLOSE_TEMP
     13633**DCL
F$DCB.FFLG.UPD# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FFLG.WNEW# IN PROCEDURE DFU_CLOSE_TEMP
     13632**DCL
F$DCB.FIELDX IN PROCEDURE DFU_CLOSE_TEMP
     13652**DCL
F$DCB.FLPW# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.FMOD IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.FPRGX IN PROCEDURE DFU_CLOSE_TEMP
     13652**DCL
F$DCB.FPSTR IN PROCEDURE DFU_CLOSE_TEMP
     13667**DCL
F$DCB.FTAM IN PROCEDURE DFU_CLOSE_TEMP
     13661**DCL
F$DCB.FTAM.CTX IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL
F$DCB.FTAM.PMME IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL
F$DCB.FTAM.USR IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL
F$DCB.FUN# IN PROCEDURE DFU_CLOSE_TEMP
     13642**DCL
F$DCB.GDISP IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:385  
F$DCB.GHSTACS# IN PROCEDURE DFU_CLOSE_TEMP
     13651**DCL
F$DCB.GRPOS IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.GTYP IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.HASH IN PROCEDURE DFU_CLOSE_TEMP
     13665**DCL
F$DCB.IASN IN PROCEDURE DFU_CLOSE_TEMP
     13670**DCL
F$DCB.ID IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL
F$DCB.ID.DA IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL
F$DCB.ID.GX IN PROCEDURE DFU_CLOSE_TEMP
     13671**DCL
F$DCB.IFMT IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
F$DCB.IGNOREFSN# IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.INDX IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.IOERROK# IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.IORG IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL
F$DCB.IRRECX IN PROCEDURE DFU_CLOSE_TEMP
     13656**DCL
F$DCB.IWL IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
F$DCB.IWL.HDRIWL IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
F$DCB.IWL.SEQIWL IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
F$DCB.IWL.TABIWL IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:386  
F$DCB.JRNLBYPASS# IN PROCEDURE DFU_CLOSE_TEMP
     13651**DCL
F$DCB.KEYL# IN PROCEDURE DFU_CLOSE_TEMP
     13644**DCL
F$DCB.KEYTYPE# IN PROCEDURE DFU_CLOSE_TEMP
     13653**DCL
F$DCB.KEYX# IN PROCEDURE DFU_CLOSE_TEMP
     13644**DCL
F$DCB.KFIELDX IN PROCEDURE DFU_CLOSE_TEMP
     13653**DCL
F$DCB.LASTKEY IN PROCEDURE DFU_CLOSE_TEMP
     13661**DCL
F$DCB.LASTKEY$ IN PROCEDURE DFU_CLOSE_TEMP
     13661**DCL
F$DCB.LDCTX IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL
F$DCB.LDFLG IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL
F$DCB.LINES# IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL
F$DCB.LOAD# IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.LOGSEC IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
F$DCB.LPOOL IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL
F$DCB.LRDL0# IN PROCEDURE DFU_CLOSE_TEMP
     13645**DCL
F$DCB.LSLIDE# IN PROCEDURE DFU_CLOSE_TEMP
     13645**DCL
F$DCB.LSTAOR# IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.LSTBLK IN PROCEDURE DFU_CLOSE_TEMP
     13661**DCL
F$DCB.MAXVOL# IN PROCEDURE DFU_CLOSE_TEMP
     13648**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:387  
F$DCB.MEDIA IN PROCEDURE DFU_CLOSE_TEMP
     13669**DCL
F$DCB.MODCNT IN PROCEDURE DFU_CLOSE_TEMP
     13667**DCL
F$DCB.MOUNT IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL
F$DCB.MOVED IN PROCEDURE DFU_CLOSE_TEMP
     13670**DCL
F$DCB.MPC$ IN PROCEDURE DFU_CLOSE_TEMP
     13650**DCL
F$DCB.MUST_CVOL IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.NAME# IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.NAME#.C17 IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.NAME#.C17.CC IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.NAME#.L IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.NEW_FSECT IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL
F$DCB.OLDIOERR IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
F$DCB.OWNER IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL
F$DCB.PASS# IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.PASSF# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.PATH IN PROCEDURE DFU_CLOSE_TEMP
     13656**DCL
F$DCB.PATH.CHAN# IN PROCEDURE DFU_CLOSE_TEMP
     13656**DCL
F$DCB.PATH.IOM# IN PROCEDURE DFU_CLOSE_TEMP
     13656**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:388  
F$DCB.PGINGRAN IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
F$DCB.PRIVOPN IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
F$DCB.PSN# IN PROCEDURE DFU_CLOSE_TEMP
     13637**DCL
F$DCB.QISS# IN PROCEDURE DFU_CLOSE_TEMP
     13639**DCL
F$DCB.RA IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.RDL0# IN PROCEDURE DFU_CLOSE_TEMP
     13631**DCL
F$DCB.REALSPAN IN PROCEDURE DFU_CLOSE_TEMP
     13668**DCL
F$DCB.RECL# IN PROCEDURE DFU_CLOSE_TEMP
     13643**DCL
F$DCB.RESNT IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL
F$DCB.RESNT.NUM IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL
F$DCB.RESNT.TYP IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL
F$DCB.RETRYCNT# IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.RPOS IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.SEED# IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.SEGX IN PROCEDURE DFU_CLOSE_TEMP
     13667**DCL
F$DCB.SEQ# IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL
F$DCB.SEQCOL# IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL
F$DCB.SEQID# IN PROCEDURE DFU_CLOSE_TEMP
     13649**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:389  
F$DCB.SETSTA$ IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL
F$DCB.SEZ_OK IN PROCEDURE DFU_CLOSE_TEMP
     13658**DCL
F$DCB.SHARE# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.SHARED IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.SLIDE# IN PROCEDURE DFU_CLOSE_TEMP
     13631**DCL
F$DCB.SPAN IN PROCEDURE DFU_CLOSE_TEMP
     13659**DCL
F$DCB.SPANNED# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.SPARE# IN PROCEDURE DFU_CLOSE_TEMP
     13645**DCL
F$DCB.STARF IN PROCEDURE DFU_CLOSE_TEMP
     13657**DCL
F$DCB.STARTX IN PROCEDURE DFU_CLOSE_TEMP
     13653**DCL
F$DCB.STARX IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.STR# IN PROCEDURE DFU_CLOSE_TEMP
     13667**DCL
F$DCB.SYSID# IN PROCEDURE DFU_CLOSE_TEMP
     13644**DCL
F$DCB.TAPTYP IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.TAPTYP.CP6F IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.TAPTYP.HAVLASTKEY IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.TAPTYP.MANAGED IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL
F$DCB.TAPTYP.NOCVOL IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:390  
F$DCB.TAPTYP.PASTFM IN PROCEDURE DFU_CLOSE_TEMP
     13664**DCL
F$DCB.TAPTYP.RWASC IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.TAPTYP.USRBUF IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.TDALVL IN PROCEDURE DFU_CLOSE_TEMP
     13662**DCL
F$DCB.TDEXTST$ IN PROCEDURE DFU_CLOSE_TEMP
     13636**DCL
F$DCB.TDFLG IN PROCEDURE DFU_CLOSE_TEMP
     13647**DCL
F$DCB.TDFLG.SDSK# IN PROCEDURE DFU_CLOSE_TEMP
     13647**DCL
F$DCB.TDSTAT# IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL
F$DCB.TRNC IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.TYC IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.BLNKTP# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.BOF# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.BOT# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.CDALRT# IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.CGCRCW IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
F$DCB.TYC.CGCWRV IN PROCEDURE DFU_CLOSE_TEMP
     13630**DCL
F$DCB.TYC.CGFULL IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.CGKEYV IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:391  
F$DCB.TYC.CGLWRV IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.DACT# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.DI# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.EGV# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.EOD# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.EOF# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.EOT# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.FRAW# IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.IOERR# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.LAST# IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.LD# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.LDISC# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.MTRAP# IN PROCEDURE DFU_CLOSE_TEMP
     13628**DCL
F$DCB.TYC.OPER# IN PROCEDURE DFU_CLOSE_TEMP
     13627**DCL
F$DCB.TYC.PROT# IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.TIMO# IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYC.XTRARD IN PROCEDURE DFU_CLOSE_TEMP
     13629**DCL
F$DCB.TYPE# IN PROCEDURE DFU_CLOSE_TEMP
     13638**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:392  
F$DCB.UB$ IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.UBYTES IN PROCEDURE DFU_CLOSE_TEMP
     13666**DCL
F$DCB.UCOUT IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.UNIQUEBLD IN PROCEDURE DFU_CLOSE_TEMP
     13670**DCL
F$DCB.UOPT# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.UPDCNT IN PROCEDURE DFU_CLOSE_TEMP
     13670**DCL
F$DCB.VFCCHAR# IN PROCEDURE DFU_CLOSE_TEMP
     13652**DCL
F$DCB.VOL# IN PROCEDURE DFU_CLOSE_TEMP
     13648**DCL
F$DCB.VOLACCESS# IN PROCEDURE DFU_CLOSE_TEMP
     13640**DCL
F$DCB.WAIT IN PROCEDURE DFU_CLOSE_TEMP
     13660**DCL
F$DCB.WCDATA IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.WIDTH# IN PROCEDURE DFU_CLOSE_TEMP
     13634**DCL
F$DCB.WRCMP IN PROCEDURE DFU_CLOSE_TEMP
     13663**DCL
F$DCB.WSR# IN PROCEDURE DFU_CLOSE_TEMP
     13645**DCL
F$DCB.XTEND# IN PROCEDURE DFU_CLOSE_TEMP
     13641**DCL
F$DCB.XTNSIZE# IN PROCEDURE DFU_CLOSE_TEMP
     13645**DCL
LAST.DECK# IN PROCEDURE DFU_READ_LAST_DECK#
     11114**DCL
LAST.EDIT_NAME IN PROCEDURE DFU_READ_LAST_DECK#
     11115**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:393  
LAST.DECK# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13066**DCL
LAST.EDIT_NAME IN PROCEDURE DFU_WRITE_LAST_DECK#
     13067**DCL
LAST_DECK_KEY.DATA IN PROCEDURE DFU_READ_LAST_DECK#
     11102**DCL
LAST_DECK_KEY.SIZE IN PROCEDURE DFU_READ_LAST_DECK#
     11101**DCL
LAST_DECK_KEY.DATA IN PROCEDURE DFU_WRITE_LAST_DECK#
     13054**DCL
LAST_DECK_KEY.SIZE IN PROCEDURE DFU_WRITE_LAST_DECK#
     13053**DCL
LOG_B IN PROCEDURE DFU_WRITE_LOG
     13152**DCL
LOG_B.ACCESSES IN PROCEDURE DFU_WRITE_LOG
     13155**DCL
LOG_B.ACCESSES.CATALOG IN PROCEDURE DFU_WRITE_LOG
     13162**DCL
LOG_B.ACCESSES.DATE IN PROCEDURE DFU_WRITE_LOG
     13158**DCL
LOG_B.ACCESSES.DECK IN PROCEDURE DFU_WRITE_LOG
     13164**DCL
LOG_B.ACCESSES.IFAD IN PROCEDURE DFU_WRITE_LOG
     13166**DCL
LOG_B.ACCESSES.TIME IN PROCEDURE DFU_WRITE_LOG
     13160**DCL
LOG_B.ACCESSES.TYPE IN PROCEDURE DFU_WRITE_LOG
     13156**DCL
LOG_KEY.DATA IN PROCEDURE DFU_READ_LOG
     11198**DCL
LOG_KEY.SIZE IN PROCEDURE DFU_READ_LOG
     11197**DCL
LOG_KEY.DATA IN PROCEDURE DFU_WRITE_LOG
     13141**DCL
LOG_KEY.SIZE IN PROCEDURE DFU_WRITE_LOG
     13140**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:394  
M$ACCT
      5646**DCL-ENT
M$ACTIVATE
      5649**DCL-ENT
M$ALIB
      5642**DCL-ENT
M$ASUSER
      5644**DCL-ENT
M$ATTACH
      5651**DCL-ENT
M$BADPP
      5669**DCL-ENT
M$CGCTL
      5650**DCL-ENT
M$CGINFO
      5650**DCL-ENT
M$CHECK
      5631**DCL-ENT
M$CHGUNIT
      5689**DCL-ENT
M$CLRSTK
      5687**DCL-ENT
M$CMDVAR
      5698**DCL-ENT
M$CONFIG
      5659**DCL-ENT
M$CORRES
      5634**DCL-ENT
M$CPEXIT
      5643**DCL-ENT
M$CVM
      5667**DCL-ENT
M$CVOL
      5632**DCL-ENT
M$DCLFLD
      5659**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:395  
M$DEACTIVATE
      5649**DCL-ENT
M$DEQ
      5696**DCL-ENT
M$DETACH
      5651**DCL-ENT
M$DEVICE
      5633**DCL-ENT
M$DISPLAY
      5696**DCL-ENT
M$DISPRES
      5636**DCL-ENT
M$DLIB
      5642**DCL-ENT
M$DRIBBLE
      5659**DCL-ENT
M$DRTN
      5687**DCL-ENT
M$DSUSER
      5644**DCL-ENT
M$ENQ
      5695**DCL-ENT
M$EOM
      5654**DCL-ENT
M$ERASE
      5660**DCL-ENT
M$ERR
      5641**DCL-ENT
M$ERRMSG
      5692**DCL-ENT
M$EVENT
      5684**DCL-ENT
M$EXHUME
      5693**DCL-ENT
M$EXIT
      5641**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:396  
M$EXTEND
      5633**DCL-ENT
M$FDP
      5665**DCL-ENT
M$FDS
      5664**DCL-ENT
M$FEBOOT
      5657**DCL-ENT
M$FECTL
      5658**DCL-ENT
M$FEDUMP
      5657**DCL-ENT
M$FID
      5692**DCL-ENT
M$FINDPROC
      5646**DCL-ENT
M$FSUSER
      5644**DCL-ENT
M$FVP
      5666**DCL-ENT
M$FWCG
      5650**DCL-ENT
M$GBPL
      5670**DCL-ENT
M$GDDL
      5666**DCL-ENT
M$GDP
      5665**DCL-ENT
M$GDS
      5664**DCL-ENT
M$GETDCB
      5635**DCL-ENT
M$GETMOUSE
      5675**DCL-ENT
M$GETPM
      5676**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:397  
M$GJOB
      5694**DCL-ENT
M$GLINEATTR
      5654**DCL-ENT
M$GOODPP
      5669**DCL-ENT
M$GPLATEN
      5662**DCL-ENT
M$GPROMPT
      5661**DCL-ENT
M$GTRMATTR
      5655**DCL-ENT
M$GTRMCTL
      5653**DCL-ENT
M$GTRMTAB
      5656**DCL-ENT
M$GVP
      5665**DCL-ENT
M$HELP
      5692**DCL-ENT
M$INT
      5684**DCL-ENT
M$INTRTN
      5645**DCL-ENT
M$IOQ
      5680**DCL-ENT
M$JOBSTATS
      5694**DCL-ENT
M$KEYIN
      5634**DCL-ENT
M$LDEV
      5629**DCL-ENT
M$LDTRC
      5642**DCL-ENT
M$LIMIT
      5635**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:398  
M$LINES
      5634**DCL-ENT
M$LINK
      5641**DCL-ENT
M$MADMUCK
      5637**DCL-ENT
M$MAKUSER
      5668**DCL-ENT
M$MBS
      5636**DCL-ENT
M$MDFFLD
      5660**DCL-ENT
M$MERC
      5685**DCL-ENT
M$MERCS
      5686**DCL-ENT
M$MIRROR
      5680**DCL-ENT
M$MONINFO
      5697**DCL-ENT
M$MPL
      5670**DCL-ENT
M$NODEINFO
      5661**DCL-ENT
M$NXTUSR
      5695**DCL-ENT
M$OCMSG
      5693**DCL-ENT
M$OLAY
      5641**DCL-ENT
M$PAS
      5670**DCL-ENT
M$PATHCON
      5693**DCL-ENT
M$PDS
      5664**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:399  
M$PFIL
      5631**DCL-ENT
M$PLATEN
      5655**DCL-ENT
M$PRECORD
      5633**DCL-ENT
M$PROCNAME
      5646**DCL-ENT
M$PROFILE
      5657**DCL-ENT
M$PROMPT
      5653**DCL-ENT
M$RACST
      5637**DCL-ENT
M$RDSYSLOG
      5678**DCL-ENT
M$RELDCB
      5635**DCL-ENT
M$RELRES
      5636**DCL-ENT
M$RELSTARF
      5638**DCL-ENT
M$REM
      5638**DCL-ENT
M$RENV
      5685**DCL-ENT
M$REQUIRE
      5637**DCL-ENT
M$RETRY
      5686**DCL-ENT
M$RETRYS
      5686**DCL-ENT
M$REW
      5632**DCL-ENT
M$RLSFLD
      5660**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:400  
M$RPRIV
      5688**DCL-ENT
M$RSPP
      5667**DCL-ENT
M$RSWITCH
      5689**DCL-ENT
M$RUE
      5695**DCL-ENT
M$SAD
      5668**DCL-ENT
M$SAVE
      5644**DCL-ENT
M$SCON
      5645**DCL-ENT
M$SCREECH
      5643**DCL-ENT
M$SENV
      5685**DCL-ENT
M$SETFMA
      5629**DCL-ENT
M$SETFP
      5658**DCL-ENT
M$SINPUT
      5656**DCL-ENT
M$SLCFLD
      5661**DCL-ENT
M$SMOUSE
      5675**DCL-ENT
M$SMPRT
      5667**DCL-ENT
M$SPRIV
      5688**DCL-ENT
M$SSC
      5668**DCL-ENT
M$SSWITCH
      5688**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:401  
M$STATE
      5697**DCL-ENT
M$STD
      5669**DCL-ENT
M$STIMER
      5683**DCL-ENT
M$STLPP
      5666**DCL-ENT
M$STRAP
      5683**DCL-ENT
M$STRMATTR
      5655**DCL-ENT
M$STRMCTL
      5653**DCL-ENT
M$STRMTAB
      5656**DCL-ENT
M$SYMBIO
      5694**DCL-ENT
M$SYSCON
      5680**DCL-ENT
M$SYSID
      5698**DCL-ENT
M$TDCLOSE
      5679**DCL-ENT
M$TDIO
      5679**DCL-ENT
M$TDOPEN
      5678**DCL-ENT
M$TDREQCPU
      5679**DCL-ENT
M$TEMPWROC
      5673**DCL-ENT
M$TIME
      5696**DCL-ENT
M$TRAP
      5683**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:402  
M$TRMISC
      5658**DCL-ENT
M$TRMPRG
      5654**DCL-ENT
M$TRTN
      5687**DCL-ENT
M$TRUNC
      5630**DCL-ENT
M$TTIMER
      5683**DCL-ENT
M$UC
      5653**DCL
M$UMPL
      5670**DCL-ENT
M$UNFID
      5692**DCL-ENT
M$UNLATCH
      5649**DCL-ENT
M$UNSHARE
      5646**DCL-ENT
M$USRFIELD
      5689**DCL-ENT
M$VIRTUAL
      5664**DCL-ENT
M$WAIT
      5687**DCL-ENT
M$WEOF
      5632**DCL-ENT
M$WRSYSLOG
      5678**DCL-ENT
M$XCON
      5684**DCL-ENT
M$XCONRTN
      5645**DCL-ENT
M$XEQTIME
      5697**DCL-ENT
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:403  
M$XFLUSH
      5638**DCL-ENT
M$XMOUSE
      5675**DCL-ENT
M$XXX
      5641**DCL-ENT
M$YC
      5643**DCL-ENT
MASTER_DATA IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11985**DCL
MASTER_DATA.RFU IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11988**DCL
MASTER_DATA.DECK# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10131**DCL
MASTER_DATA.ENTRY_COUNT IN PROCEDURE DFU_READ_MASTER_CONTROL
     10132**DCL
MASTER_DATA.RFU IN PROCEDURE DFU_READ_MASTER_CONTROL
     10133**DCL
MASTER_DATA.DECK# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12165**DCL
MASTER_DATA.ENTRY_COUNT IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12166**DCL
MASTER_DATA.RFU IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12167**DCL
MASTER_ENTRY_KEY.SIZE IN PROCEDURE DFU_DELETE_MASTER_ENTRY
     11972**DCL
MASTER_ENTRY_KEY.DECK# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10219**DCL
MASTER_ENTRY_KEY.ENTRY# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10220**DCL
MASTER_ENTRY_KEY.SIZE IN PROCEDURE DFU_READ_MASTER_ENTRY
     10218**DCL
MASTER_ENTRY_KEY.DECK# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12247**DCL
MASTER_ENTRY_KEY.ENTRY# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12248**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:404  
MASTER_ENTRY_KEY.SIZE IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12246**DCL
MASTER_KEY.DATA IN PROCEDURE DFU_READ_MASTER_CONTROL
     10119**DCL
MASTER_KEY.SIZE IN PROCEDURE DFU_READ_MASTER_CONTROL
     10118**DCL
MASTER_KEY.DATA IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12153**DCL
MASTER_KEY.SIZE IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12152**DCL
MCA_B
      8904**DCL
MCA_B.COMMAND
      8914**DCL
MCA_B.COMMAND.DATA
      8916**DCL
MCA_B.COMMAND.HDR_BLK
      8915**DCL
MCA_B.CONFIG
      8957**DCL
MCA_B.CONFIG.DATA1
      8960**DCL
MCA_B.CONFIG.DATA1.NUMTAB
      8962**DCL
MCA_B.CONFIG.HDR_BLK
      8958**DCL
MCA_B.DCW_LIST
      8905**DCL
MCA_B.DCW_LIST.DCW1
      8907**DCL
MCA_B.DCW_LIST.DCW1.ADDRESS
      8908**DCL
MCA_B.DCW_LIST.DCW1.COUNT
      8909**DCL
MCA_B.DCW_LIST.DCW2
      8911**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:405  
MCA_B.DCW_LIST.DCW2.ADDRESS
      8912**DCL
MCA_B.DCW_LIST.DCW2.COUNT
      8913**DCL
MCA_B.DCW_LIST.IDCW1
      8906**DCL
MCA_B.DCW_LIST.IDCW2
      8910**DCL
MCA_B.DIRECTORY.CURRENT
      8943**DCL
MCA_B.DIRECTORY.HDR_BLK
      8939**DCL
MCA_B.DISKETTE_HEADER
      8935**DCL
MCA_B.DISKETTE_HEADER.HDR_BLK
      8936**DCL
MCA_B.DUMMY_BUFFER
      8953**DCL
MCA_B.DUMMY_BUFFER.DATA_WORDS
      8955**DCL
MCA_B.DUMMY_BUFFER.HDR_BLK
      8954**DCL
MCA_B.FILE
      8944**DCL
MCA_B.FILE.BYTES_READ
      8952**DCL
MCA_B.FILE.DATA.HDR
      8947**DCL
MCA_B.FILE.DATA.LD_CTL
      8948**DCL
MCA_B.FILE.DATA.SECTORS
      8949**DCL
MCA_B.FILE.HDR_BLK
      8945**DCL
MCA_B.FILE.SIZE
      8951**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:406  
MCA_B.STATUS
      8917**DCL
MCA_B.STATUS.ADAPTER
      8929**DCL
MCA_B.STATUS.IIOC
      8934**DCL
MCA_B.STATUS.INITIATE
      8927**DCL
MCA_B.STATUS.MAJOR
      8920**DCL
MCA_B.STATUS.MARKER
      8925**DCL
MCA_B.STATUS.ODD_WORD
      8924**DCL
MCA_B.STATUS.POWER
      8919**DCL
MCA_B.STATUS.RESIDUE
      8933**DCL
MCA_B.STATUS.SUB
      8921**DCL
MCA_B.STATUS.SUB.RDP
      8922**DCL
MCA_B.STATUS.SUB.VALUE
      8923**DCL
MCA_B.STATUS.TERMINATE
      8918**DCL
MCA_B.STATUS.TERM_POS
      8932**DCL
MCA_B.STATUS.WAS_R_W
      8931**DCL
OBJECT
      8841**DCL
OBJECT.BCD.ASSEMBLER
      8859**DCL
OBJECT.BCD.CLASS
      8847**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:407  
OBJECT.BCD.CONTROL
      8843**DCL
OBJECT.BCD.DATE
      8861**DCL
OBJECT.BCD.DONT_APPLY
      8848**DCL
OBJECT.BCD.DONT_APPLY.CP6
      8850**DCL
OBJECT.BCD.DONT_APPLY.DPS8000
      8853**DCL
OBJECT.BCD.DONT_APPLY.DPS90
      8852**DCL
OBJECT.BCD.FILENAME
      8857**DCL
OBJECT.BCD.GECALL
      8860**DCL
OBJECT.BCD.LBL
      8862**DCL
OBJECT.BCD.LIBRARY
      8845**DCL
OBJECT.BCD.LOAD_TYPE
      8846**DCL
OBJECT.BCD.MODEL
      8856**DCL
OBJECT.BCD.SEQ
      8863**DCL
OBJECT.BCD.TYPE
      8844**DCL
OBJECT.BCD_
      8887**DCL
OBJECT.BINARY_COUNT
      8889**DCL
OBJECT.CHECKSUM
      8893**DCL
OBJECT.DECK#
      8888**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:408  
OBJECT.DECK_CHECKSUM
      8892**DCL
OBJECT.NIO_BCD
      8864**DCL
OBJECT.NIO_BCD.ASSEMBLER
      8881**DCL
OBJECT.NIO_BCD.CLASS
      8869**DCL
OBJECT.NIO_BCD.CONTROL
      8865**DCL
OBJECT.NIO_BCD.DATA
      8871**DCL
OBJECT.NIO_BCD.EQUIP_TYPE
      8873**DCL
OBJECT.NIO_BCD.FILE_NAME
      8874**DCL
OBJECT.NIO_BCD.LBL
      8885**DCL
OBJECT.NIO_BCD.LIBRARY
      8867**DCL
OBJECT.NIO_BCD.LOAD_TYPE
      8868**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB
      8882**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB
      8883**DCL
OBJECT.NIO_BCD.SEQ
      8886**DCL
OBJECT.NIO_BCD.TYPE
      8866**DCL
OBJECT.NIO_BCD.X_OF_N.N
      8879**DCL
OBJECT.NIO_BCD.X_OF_N.X
      8877**DCL
OBJECT.NIO_BCD.X_OF_N_
      8880**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:409  
OBJECT.TOTAL_COUNT
      8890**DCL
OBJECT IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11469**DCL
OBJECT.BCD.ASSEMBLER IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11487**DCL
OBJECT.BCD.CLASS IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11475**DCL
OBJECT.BCD.CONTROL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11471**DCL
OBJECT.BCD.DONT_APPLY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11476**DCL
OBJECT.BCD.DONT_APPLY.CP6 IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11478**DCL
OBJECT.BCD.DONT_APPLY.DPS8000 IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11481**DCL
OBJECT.BCD.DONT_APPLY.DPS90 IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11480**DCL
OBJECT.BCD.FILENAME IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11485**DCL
OBJECT.BCD.GECALL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11488**DCL
OBJECT.BCD.LBL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11490**DCL
OBJECT.BCD.LOAD_TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11474**DCL
OBJECT.BCD.MODEL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11484**DCL
OBJECT.BCD.SEQ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11491**DCL
OBJECT.BCD.TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11472**DCL
OBJECT.BCD_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11515**DCL
OBJECT.CHECKSUM IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11521**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:410  
OBJECT.NIO_BCD IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11492**DCL
OBJECT.NIO_BCD.ASSEMBLER IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11509**DCL
OBJECT.NIO_BCD.CLASS IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11497**DCL
OBJECT.NIO_BCD.CONTROL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11493**DCL
OBJECT.NIO_BCD.DATA IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11499**DCL
OBJECT.NIO_BCD.EQUIP_TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11501**DCL
OBJECT.NIO_BCD.FILE_NAME IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11502**DCL
OBJECT.NIO_BCD.LBL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11513**DCL
OBJECT.NIO_BCD.LIBRARY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11495**DCL
OBJECT.NIO_BCD.LOAD_TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11496**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11510**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11511**DCL
OBJECT.NIO_BCD.SEQ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11514**DCL
OBJECT.NIO_BCD.TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11494**DCL
OBJECT.NIO_BCD.X_OF_N.N IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11507**DCL
OBJECT.NIO_BCD.X_OF_N.X IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11505**DCL
OBJECT.NIO_BCD.X_OF_N_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11508**DCL
OBJECT.BCD.ASSEMBLER IN PROCEDURE DFU_CHECK_FOR_KEY
     11648**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:411  
OBJECT.BCD.CLASS IN PROCEDURE DFU_CHECK_FOR_KEY
     11636**DCL
OBJECT.BCD.CONTROL IN PROCEDURE DFU_CHECK_FOR_KEY
     11632**DCL
OBJECT.BCD.DATE IN PROCEDURE DFU_CHECK_FOR_KEY
     11650**DCL
OBJECT.BCD.DONT_APPLY IN PROCEDURE DFU_CHECK_FOR_KEY
     11637**DCL
OBJECT.BCD.DONT_APPLY.CP6 IN PROCEDURE DFU_CHECK_FOR_KEY
     11639**DCL
OBJECT.BCD.DONT_APPLY.DPS8000 IN PROCEDURE DFU_CHECK_FOR_KEY
     11642**DCL
OBJECT.BCD.DONT_APPLY.DPS90 IN PROCEDURE DFU_CHECK_FOR_KEY
     11641**DCL
OBJECT.BCD.FILENAME IN PROCEDURE DFU_CHECK_FOR_KEY
     11646**DCL
OBJECT.BCD.GECALL IN PROCEDURE DFU_CHECK_FOR_KEY
     11649**DCL
OBJECT.BCD.LBL IN PROCEDURE DFU_CHECK_FOR_KEY
     11651**DCL
OBJECT.BCD.LIBRARY IN PROCEDURE DFU_CHECK_FOR_KEY
     11634**DCL
OBJECT.BCD.LOAD_TYPE IN PROCEDURE DFU_CHECK_FOR_KEY
     11635**DCL
OBJECT.BCD.MODEL IN PROCEDURE DFU_CHECK_FOR_KEY
     11645**DCL
OBJECT.BCD.SEQ IN PROCEDURE DFU_CHECK_FOR_KEY
     11652**DCL
OBJECT.BCD.TYPE IN PROCEDURE DFU_CHECK_FOR_KEY
     11633**DCL
OBJECT.BCD_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11676**DCL
OBJECT.BINARY_COUNT IN PROCEDURE DFU_CHECK_FOR_KEY
     11678**DCL
OBJECT.CHECKSUM IN PROCEDURE DFU_CHECK_FOR_KEY
     11682**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:412  
OBJECT.DECK# IN PROCEDURE DFU_CHECK_FOR_KEY
     11677**DCL
OBJECT.DECK_CHECKSUM IN PROCEDURE DFU_CHECK_FOR_KEY
     11681**DCL
OBJECT.LOAD_SIZE IN PROCEDURE DFU_CHECK_FOR_KEY
     11680**DCL
OBJECT.NIO_BCD IN PROCEDURE DFU_CHECK_FOR_KEY
     11653**DCL
OBJECT.NIO_BCD.ASSEMBLER IN PROCEDURE DFU_CHECK_FOR_KEY
     11670**DCL
OBJECT.NIO_BCD.CLASS IN PROCEDURE DFU_CHECK_FOR_KEY
     11658**DCL
OBJECT.NIO_BCD.CONTROL IN PROCEDURE DFU_CHECK_FOR_KEY
     11654**DCL
OBJECT.NIO_BCD.DATA IN PROCEDURE DFU_CHECK_FOR_KEY
     11660**DCL
OBJECT.NIO_BCD.EQUIP_TYPE IN PROCEDURE DFU_CHECK_FOR_KEY
     11662**DCL
OBJECT.NIO_BCD.FILE_NAME IN PROCEDURE DFU_CHECK_FOR_KEY
     11663**DCL
OBJECT.NIO_BCD.LBL IN PROCEDURE DFU_CHECK_FOR_KEY
     11674**DCL
OBJECT.NIO_BCD.LIBRARY IN PROCEDURE DFU_CHECK_FOR_KEY
     11656**DCL
OBJECT.NIO_BCD.LOAD_TYPE IN PROCEDURE DFU_CHECK_FOR_KEY
     11657**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB IN PROCEDURE DFU_CHECK_FOR_KEY
     11671**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB IN PROCEDURE DFU_CHECK_FOR_KEY
     11672**DCL
OBJECT.NIO_BCD.SEQ IN PROCEDURE DFU_CHECK_FOR_KEY
     11675**DCL
OBJECT.NIO_BCD.TYPE IN PROCEDURE DFU_CHECK_FOR_KEY
     11655**DCL
OBJECT.NIO_BCD.X_OF_N.N IN PROCEDURE DFU_CHECK_FOR_KEY
     11668**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:413  
OBJECT.NIO_BCD.X_OF_N.X IN PROCEDURE DFU_CHECK_FOR_KEY
     11666**DCL
OBJECT.NIO_BCD.X_OF_N_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11669**DCL
OBJECT.TOTAL_COUNT IN PROCEDURE DFU_CHECK_FOR_KEY
     11679**DCL
OBJECT.BCD.ASSEMBLER IN PROCEDURE DFU_READ_OBJECT
     10659**DCL
OBJECT.BCD.CLASS IN PROCEDURE DFU_READ_OBJECT
     10647**DCL
OBJECT.BCD.CONTROL IN PROCEDURE DFU_READ_OBJECT
     10643**DCL
OBJECT.BCD.DATE IN PROCEDURE DFU_READ_OBJECT
     10661**DCL
OBJECT.BCD.DONT_APPLY IN PROCEDURE DFU_READ_OBJECT
     10648**DCL
OBJECT.BCD.DONT_APPLY.CP6 IN PROCEDURE DFU_READ_OBJECT
     10650**DCL
OBJECT.BCD.DONT_APPLY.DPS8000 IN PROCEDURE DFU_READ_OBJECT
     10653**DCL
OBJECT.BCD.DONT_APPLY.DPS90 IN PROCEDURE DFU_READ_OBJECT
     10652**DCL
OBJECT.BCD.FILENAME IN PROCEDURE DFU_READ_OBJECT
     10657**DCL
OBJECT.BCD.GECALL IN PROCEDURE DFU_READ_OBJECT
     10660**DCL
OBJECT.BCD.LBL IN PROCEDURE DFU_READ_OBJECT
     10662**DCL
OBJECT.BCD.LIBRARY IN PROCEDURE DFU_READ_OBJECT
     10645**DCL
OBJECT.BCD.LOAD_TYPE IN PROCEDURE DFU_READ_OBJECT
     10646**DCL
OBJECT.BCD.MODEL IN PROCEDURE DFU_READ_OBJECT
     10656**DCL
OBJECT.BCD.SEQ IN PROCEDURE DFU_READ_OBJECT
     10663**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:414  
OBJECT.BCD_ IN PROCEDURE DFU_READ_OBJECT
     10687**DCL
OBJECT.BINARY_COUNT IN PROCEDURE DFU_READ_OBJECT
     10689**DCL
OBJECT.CHECKSUM IN PROCEDURE DFU_READ_OBJECT
     10693**DCL
OBJECT.DECK# IN PROCEDURE DFU_READ_OBJECT
     10688**DCL
OBJECT.DECK_CHECKSUM IN PROCEDURE DFU_READ_OBJECT
     10692**DCL
OBJECT.LOAD_SIZE IN PROCEDURE DFU_READ_OBJECT
     10691**DCL
OBJECT.NIO_BCD IN PROCEDURE DFU_READ_OBJECT
     10664**DCL
OBJECT.NIO_BCD.ASSEMBLER IN PROCEDURE DFU_READ_OBJECT
     10681**DCL
OBJECT.NIO_BCD.CLASS IN PROCEDURE DFU_READ_OBJECT
     10669**DCL
OBJECT.NIO_BCD.CONTROL IN PROCEDURE DFU_READ_OBJECT
     10665**DCL
OBJECT.NIO_BCD.DATA IN PROCEDURE DFU_READ_OBJECT
     10671**DCL
OBJECT.NIO_BCD.EQUIP_TYPE IN PROCEDURE DFU_READ_OBJECT
     10673**DCL
OBJECT.NIO_BCD.FILE_NAME IN PROCEDURE DFU_READ_OBJECT
     10674**DCL
OBJECT.NIO_BCD.LBL IN PROCEDURE DFU_READ_OBJECT
     10685**DCL
OBJECT.NIO_BCD.LIBRARY IN PROCEDURE DFU_READ_OBJECT
     10667**DCL
OBJECT.NIO_BCD.LOAD_TYPE IN PROCEDURE DFU_READ_OBJECT
     10668**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB IN PROCEDURE DFU_READ_OBJECT
     10682**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB IN PROCEDURE DFU_READ_OBJECT
     10683**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:415  
OBJECT.NIO_BCD.SEQ IN PROCEDURE DFU_READ_OBJECT
     10686**DCL
OBJECT.NIO_BCD.TYPE IN PROCEDURE DFU_READ_OBJECT
     10666**DCL
OBJECT.NIO_BCD.X_OF_N.N IN PROCEDURE DFU_READ_OBJECT
     10679**DCL
OBJECT.NIO_BCD.X_OF_N.X IN PROCEDURE DFU_READ_OBJECT
     10677**DCL
OBJECT.NIO_BCD.X_OF_N_ IN PROCEDURE DFU_READ_OBJECT
     10680**DCL
OBJECT.TOTAL_COUNT IN PROCEDURE DFU_READ_OBJECT
     10690**DCL
OBJECT.BCD.ASSEMBLER IN PROCEDURE DFU_WRITE_OBJECT
     12660**DCL
OBJECT.BCD.CLASS IN PROCEDURE DFU_WRITE_OBJECT
     12648**DCL
OBJECT.BCD.CONTROL IN PROCEDURE DFU_WRITE_OBJECT
     12644**DCL
OBJECT.BCD.DATE IN PROCEDURE DFU_WRITE_OBJECT
     12662**DCL
OBJECT.BCD.DONT_APPLY IN PROCEDURE DFU_WRITE_OBJECT
     12649**DCL
OBJECT.BCD.DONT_APPLY.CP6 IN PROCEDURE DFU_WRITE_OBJECT
     12651**DCL
OBJECT.BCD.DONT_APPLY.DPS8000 IN PROCEDURE DFU_WRITE_OBJECT
     12654**DCL
OBJECT.BCD.DONT_APPLY.DPS90 IN PROCEDURE DFU_WRITE_OBJECT
     12653**DCL
OBJECT.BCD.FILENAME IN PROCEDURE DFU_WRITE_OBJECT
     12658**DCL
OBJECT.BCD.GECALL IN PROCEDURE DFU_WRITE_OBJECT
     12661**DCL
OBJECT.BCD.LBL IN PROCEDURE DFU_WRITE_OBJECT
     12663**DCL
OBJECT.BCD.LIBRARY IN PROCEDURE DFU_WRITE_OBJECT
     12646**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:416  
OBJECT.BCD.LOAD_TYPE IN PROCEDURE DFU_WRITE_OBJECT
     12647**DCL
OBJECT.BCD.MODEL IN PROCEDURE DFU_WRITE_OBJECT
     12657**DCL
OBJECT.BCD.SEQ IN PROCEDURE DFU_WRITE_OBJECT
     12664**DCL
OBJECT.BCD.TYPE IN PROCEDURE DFU_WRITE_OBJECT
     12645**DCL
OBJECT.BCD_ IN PROCEDURE DFU_WRITE_OBJECT
     12688**DCL
OBJECT.BINARY_COUNT IN PROCEDURE DFU_WRITE_OBJECT
     12690**DCL
OBJECT.CHECKSUM IN PROCEDURE DFU_WRITE_OBJECT
     12694**DCL
OBJECT.DECK# IN PROCEDURE DFU_WRITE_OBJECT
     12689**DCL
OBJECT.DECK_CHECKSUM IN PROCEDURE DFU_WRITE_OBJECT
     12693**DCL
OBJECT.LOAD_SIZE IN PROCEDURE DFU_WRITE_OBJECT
     12692**DCL
OBJECT.NIO_BCD IN PROCEDURE DFU_WRITE_OBJECT
     12665**DCL
OBJECT.NIO_BCD.ASSEMBLER IN PROCEDURE DFU_WRITE_OBJECT
     12682**DCL
OBJECT.NIO_BCD.CLASS IN PROCEDURE DFU_WRITE_OBJECT
     12670**DCL
OBJECT.NIO_BCD.CONTROL IN PROCEDURE DFU_WRITE_OBJECT
     12666**DCL
OBJECT.NIO_BCD.DATA IN PROCEDURE DFU_WRITE_OBJECT
     12672**DCL
OBJECT.NIO_BCD.EQUIP_TYPE IN PROCEDURE DFU_WRITE_OBJECT
     12674**DCL
OBJECT.NIO_BCD.FILE_NAME IN PROCEDURE DFU_WRITE_OBJECT
     12675**DCL
OBJECT.NIO_BCD.LBL IN PROCEDURE DFU_WRITE_OBJECT
     12686**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:417  
OBJECT.NIO_BCD.LIBRARY IN PROCEDURE DFU_WRITE_OBJECT
     12668**DCL
OBJECT.NIO_BCD.LOAD_TYPE IN PROCEDURE DFU_WRITE_OBJECT
     12669**DCL
OBJECT.NIO_BCD.PRD_NUM_TAB IN PROCEDURE DFU_WRITE_OBJECT
     12683**DCL
OBJECT.NIO_BCD.PRG_NUM_TAB IN PROCEDURE DFU_WRITE_OBJECT
     12684**DCL
OBJECT.NIO_BCD.SEQ IN PROCEDURE DFU_WRITE_OBJECT
     12687**DCL
OBJECT.NIO_BCD.TYPE IN PROCEDURE DFU_WRITE_OBJECT
     12667**DCL
OBJECT.NIO_BCD.X_OF_N.N IN PROCEDURE DFU_WRITE_OBJECT
     12680**DCL
OBJECT.NIO_BCD.X_OF_N.X IN PROCEDURE DFU_WRITE_OBJECT
     12678**DCL
OBJECT.NIO_BCD.X_OF_N_ IN PROCEDURE DFU_WRITE_OBJECT
     12681**DCL
OBJECT.TOTAL_COUNT IN PROCEDURE DFU_WRITE_OBJECT
     12691**DCL
OBJECT_KEY.DATA IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11394**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11393**DCL
OBJECT_KEY.DATA IN PROCEDURE DFU_CHECK_FOR_KEY
     11619**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_CHECK_FOR_KEY
     11618**DCL
OBJECT_KEY.DATA IN PROCEDURE DFU_DELETE_DECK
     11858**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_DELETE_DECK
     11857**DCL
OBJECT_KEY.DATA IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10539**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10538**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:418  
OBJECT_KEY.DATA IN PROCEDURE DFU_READ_OBJECT
     10630**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_READ_OBJECT
     10629**DCL
OBJECT_KEY.DATA IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12550**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12549**DCL
OBJECT_KEY.DATA IN PROCEDURE DFU_WRITE_OBJECT
     12631**DCL
OBJECT_KEY.SIZE IN PROCEDURE DFU_WRITE_OBJECT
     12630**DCL
OBJECT_REFLIST_DATA.NUM_REFS IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11013**DCL
OBJECT_REFLIST_DATA.REFS IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11014**DCL
OBJECT_REFLIST_DATA.REFS.CE# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11016**DCL
OBJECT_REFLIST_DATA.REFS.ME# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11015**DCL
OBJECT_REFLIST_DATA.REFS IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12973**DCL
OBJECT_REFLIST_DATA.REFS.CE# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12975**DCL
OBJECT_REFLIST_DATA.REFS.ME# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12974**DCL
OBJECT_REFLIST_KEY.DECK# IN PROCEDURE DFU_DELETE_DECK
     11885**DCL
OBJECT_REFLIST_KEY.ENTRY# IN PROCEDURE DFU_DELETE_DECK
     11886**DCL
OBJECT_REFLIST_KEY.SIZE IN PROCEDURE DFU_DELETE_DECK
     11884**DCL
OBJECT_REFLIST_KEY.DECK# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11000**DCL
OBJECT_REFLIST_KEY.ENTRY# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11001**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:419  
OBJECT_REFLIST_KEY.SIZE IN PROCEDURE DFU_READ_OBJECT_REFLIST
     10999**DCL
OBJECT_REFLIST_KEY.DECK# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12959**DCL
OBJECT_REFLIST_KEY.ENTRY# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12960**DCL
OBJECT_REFLIST_KEY.SIZE IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12958**DCL
OLD_OBJECT.BCD.ASSEMBLER IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11424**DCL
OLD_OBJECT.BCD.CLASS IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11412**DCL
OLD_OBJECT.BCD.CONTROL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11408**DCL
OLD_OBJECT.BCD.DONT_APPLY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11413**DCL
OLD_OBJECT.BCD.DONT_APPLY.CP6 IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11415**DCL
OLD_OBJECT.BCD.DONT_APPLY.DPS8000 IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11418**DCL
OLD_OBJECT.BCD.DONT_APPLY.DPS90 IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11417**DCL
OLD_OBJECT.BCD.FILENAME IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11422**DCL
OLD_OBJECT.BCD.GECALL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11425**DCL
OLD_OBJECT.BCD.LBL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11427**DCL
OLD_OBJECT.BCD.LIBRARY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11410**DCL
OLD_OBJECT.BCD.LOAD_TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11411**DCL
OLD_OBJECT.BCD.MODEL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11421**DCL
OLD_OBJECT.BCD.SEQ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11428**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:420  
OLD_OBJECT.BCD.TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11409**DCL
OLD_OBJECT.BCD_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11452**DCL
OLD_OBJECT.CHECKSUM IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11458**DCL
OLD_OBJECT.NIO_BCD IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11429**DCL
OLD_OBJECT.NIO_BCD.ASSEMBLER IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11446**DCL
OLD_OBJECT.NIO_BCD.CLASS IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11434**DCL
OLD_OBJECT.NIO_BCD.CONTROL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11430**DCL
OLD_OBJECT.NIO_BCD.DATA IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11436**DCL
OLD_OBJECT.NIO_BCD.EQUIP_TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11438**DCL
OLD_OBJECT.NIO_BCD.FILE_NAME IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11439**DCL
OLD_OBJECT.NIO_BCD.LBL IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11450**DCL
OLD_OBJECT.NIO_BCD.LIBRARY IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11432**DCL
OLD_OBJECT.NIO_BCD.LOAD_TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11433**DCL
OLD_OBJECT.NIO_BCD.PRD_NUM_TAB IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11447**DCL
OLD_OBJECT.NIO_BCD.PRG_NUM_TAB IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11448**DCL
OLD_OBJECT.NIO_BCD.SEQ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11451**DCL
OLD_OBJECT.NIO_BCD.TYPE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11431**DCL
OLD_OBJECT.NIO_BCD.X_OF_N.N IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11444**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:421  
OLD_OBJECT.NIO_BCD.X_OF_N.X IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11442**DCL
OLD_OBJECT.NIO_BCD.X_OF_N_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11445**DCL
READ_BCD_CARD.BUF_.BOUND IN PROCEDURE DFU_READ_BCD_CARDS
     10919**DCL
READ_BCD_CARD.BUF_.BUF$ IN PROCEDURE DFU_READ_BCD_CARDS
     10920**DCL
READ_BCD_CARD.IDBUF_ IN PROCEDURE DFU_READ_BCD_CARDS
     10921**DCL
READ_BCD_CARD.KEY_ IN PROCEDURE DFU_READ_BCD_CARDS
     10917**DCL
READ_BCD_CARD.KEY_.BOUND IN PROCEDURE DFU_READ_BCD_CARDS
     10917**DCL
READ_BCD_CARD.KEY_.KEY$ IN PROCEDURE DFU_READ_BCD_CARDS
     10918**DCL
READ_BCD_CARD.V.DVBYTE IN PROCEDURE DFU_READ_BCD_CARDS
     10931**DCL
READ_BCD_CARD.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_BCD_CARDS
     10932**DCL
READ_BCD_CARD.V.DVBYTE.BP# IN PROCEDURE DFU_READ_BCD_CARDS
     10931**DCL
READ_BCD_CARD.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_BCD_CARDS
     10934**DCL
READ_BCD_CARD.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_BCD_CARDS
     10933**DCL
READ_BCD_CARD.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_BCD_CARDS
     10931**DCL
READ_BCD_CARD.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_BCD_CARDS
     10933**DCL
READ_BCD_CARD.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_BCD_CARDS
     10932**DCL
READ_BCD_CARD.V.EVENT# IN PROCEDURE DFU_READ_BCD_CARDS
     10930**DCL
READ_BCD_CARD.V.FULL# IN PROCEDURE DFU_READ_BCD_CARDS
     10923**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:422  
READ_BCD_CARD.V.ID# IN PROCEDURE DFU_READ_BCD_CARDS
     10922**DCL
READ_BCD_CARD.V.IDS# IN PROCEDURE DFU_READ_BCD_CARDS
     10923**DCL
READ_BCD_CARD.V.IOERROK# IN PROCEDURE DFU_READ_BCD_CARDS
     10924**DCL
READ_BCD_CARD.V.KEYCHNG# IN PROCEDURE DFU_READ_BCD_CARDS
     10923**DCL
READ_BCD_CARD.V.KEYR# IN PROCEDURE DFU_READ_BCD_CARDS
     10922**DCL
READ_BCD_CARD.V.KEYS# IN PROCEDURE DFU_READ_BCD_CARDS
     10922**DCL
READ_BCD_CARD.V.KEYTYPE# IN PROCEDURE DFU_READ_BCD_CARDS
     10930**DCL
READ_BCD_CARD.V.ODFNC# IN PROCEDURE DFU_READ_BCD_CARDS
     10935**DCL
READ_BCD_CARD.V.RECNUM# IN PROCEDURE DFU_READ_BCD_CARDS
     10935**DCL
READ_BCD_CARD.V.REREADPOS# IN PROCEDURE DFU_READ_BCD_CARDS
     10936**DCL
READ_BCD_CARD.V.SEED# IN PROCEDURE DFU_READ_BCD_CARDS
     10931**DCL
READ_BCD_CARD.V.SINPUTSIZE# IN PROCEDURE DFU_READ_BCD_CARDS
     10935**DCL
READ_BCD_CARD.V.STRPVFC# IN PROCEDURE DFU_READ_BCD_CARDS
     10934**DCL
READ_BCD_CARD.V.WAIT# IN PROCEDURE DFU_READ_BCD_CARDS
     10921**DCL
READ_BCD_CARD.V_ IN PROCEDURE DFU_READ_BCD_CARDS
     10917**DCL
READ_BINARY_DECK.BUF_.BOUND IN PROCEDURE DFU_READ_BINARY
     10815**DCL
READ_BINARY_DECK.BUF_.BUF$ IN PROCEDURE DFU_READ_BINARY
     10816**DCL
READ_BINARY_DECK.IDBUF_ IN PROCEDURE DFU_READ_BINARY
     10817**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:423  
READ_BINARY_DECK.KEY_ IN PROCEDURE DFU_READ_BINARY
     10813**DCL
READ_BINARY_DECK.KEY_.BOUND IN PROCEDURE DFU_READ_BINARY
     10813**DCL
READ_BINARY_DECK.KEY_.KEY$ IN PROCEDURE DFU_READ_BINARY
     10814**DCL
READ_BINARY_DECK.V.DVBYTE IN PROCEDURE DFU_READ_BINARY
     10827**DCL
READ_BINARY_DECK.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_BINARY
     10828**DCL
READ_BINARY_DECK.V.DVBYTE.BP# IN PROCEDURE DFU_READ_BINARY
     10827**DCL
READ_BINARY_DECK.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_BINARY
     10830**DCL
READ_BINARY_DECK.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_BINARY
     10829**DCL
READ_BINARY_DECK.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_BINARY
     10827**DCL
READ_BINARY_DECK.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_BINARY
     10829**DCL
READ_BINARY_DECK.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_BINARY
     10828**DCL
READ_BINARY_DECK.V.EVENT# IN PROCEDURE DFU_READ_BINARY
     10826**DCL
READ_BINARY_DECK.V.FULL# IN PROCEDURE DFU_READ_BINARY
     10819**DCL
READ_BINARY_DECK.V.ID# IN PROCEDURE DFU_READ_BINARY
     10818**DCL
READ_BINARY_DECK.V.IDS# IN PROCEDURE DFU_READ_BINARY
     10819**DCL
READ_BINARY_DECK.V.IOERROK# IN PROCEDURE DFU_READ_BINARY
     10820**DCL
READ_BINARY_DECK.V.KEYCHNG# IN PROCEDURE DFU_READ_BINARY
     10819**DCL
READ_BINARY_DECK.V.KEYR# IN PROCEDURE DFU_READ_BINARY
     10818**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:424  
READ_BINARY_DECK.V.KEYS# IN PROCEDURE DFU_READ_BINARY
     10818**DCL
READ_BINARY_DECK.V.KEYTYPE# IN PROCEDURE DFU_READ_BINARY
     10826**DCL
READ_BINARY_DECK.V.ODFNC# IN PROCEDURE DFU_READ_BINARY
     10831**DCL
READ_BINARY_DECK.V.RECNUM# IN PROCEDURE DFU_READ_BINARY
     10831**DCL
READ_BINARY_DECK.V.REREADPOS# IN PROCEDURE DFU_READ_BINARY
     10832**DCL
READ_BINARY_DECK.V.SEED# IN PROCEDURE DFU_READ_BINARY
     10827**DCL
READ_BINARY_DECK.V.SINPUTSIZE# IN PROCEDURE DFU_READ_BINARY
     10831**DCL
READ_BINARY_DECK.V.STRPVFC# IN PROCEDURE DFU_READ_BINARY
     10830**DCL
READ_BINARY_DECK.V.WAIT# IN PROCEDURE DFU_READ_BINARY
     10817**DCL
READ_BINARY_DECK.V_ IN PROCEDURE DFU_READ_BINARY
     10813**DCL
READ_CATALOG_CONTROL.BUF_ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10360**DCL
READ_CATALOG_CONTROL.BUF_.BOUND IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10360**DCL
READ_CATALOG_CONTROL.BUF_.BUF$ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10361**DCL
READ_CATALOG_CONTROL.IDBUF_ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10362**DCL
READ_CATALOG_CONTROL.KEY_ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10358**DCL
READ_CATALOG_CONTROL.KEY_.BOUND IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10358**DCL
READ_CATALOG_CONTROL.KEY_.KEY$ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10359**DCL
READ_CATALOG_CONTROL.V.DVBYTE IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10372**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:425  
READ_CATALOG_CONTROL.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10373**DCL
READ_CATALOG_CONTROL.V.DVBYTE.BP# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10372**DCL
READ_CATALOG_CONTROL.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10375**DCL
READ_CATALOG_CONTROL.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10374**DCL
READ_CATALOG_CONTROL.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10372**DCL
READ_CATALOG_CONTROL.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10374**DCL
READ_CATALOG_CONTROL.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10373**DCL
READ_CATALOG_CONTROL.V.EVENT# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10371**DCL
READ_CATALOG_CONTROL.V.FULL# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10364**DCL
READ_CATALOG_CONTROL.V.ID# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10363**DCL
READ_CATALOG_CONTROL.V.IDS# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10364**DCL
READ_CATALOG_CONTROL.V.IOERROK# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10365**DCL
READ_CATALOG_CONTROL.V.KEYCHNG# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10364**DCL
READ_CATALOG_CONTROL.V.KEYR# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10363**DCL
READ_CATALOG_CONTROL.V.KEYS# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10363**DCL
READ_CATALOG_CONTROL.V.KEYTYPE# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10371**DCL
READ_CATALOG_CONTROL.V.ODFNC# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10376**DCL
READ_CATALOG_CONTROL.V.RECNUM# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10376**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:426  
READ_CATALOG_CONTROL.V.REREADPOS# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10377**DCL
READ_CATALOG_CONTROL.V.SEED# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10372**DCL
READ_CATALOG_CONTROL.V.SINPUTSIZE# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10376**DCL
READ_CATALOG_CONTROL.V.STRPVFC# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10375**DCL
READ_CATALOG_CONTROL.V.WAIT# IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10362**DCL
READ_CATALOG_CONTROL.V_ IN PROCEDURE DFU_READ_CATALOG_CONTROL
     10358**DCL
READ_CATALOG_ENTRY.BUF_ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10564**DCL
READ_CATALOG_ENTRY.BUF_.BOUND IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10564**DCL
READ_CATALOG_ENTRY.BUF_.BUF$ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10565**DCL
READ_CATALOG_ENTRY.IDBUF_ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10566**DCL
READ_CATALOG_ENTRY.KEY_ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10562**DCL
READ_CATALOG_ENTRY.KEY_.BOUND IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10562**DCL
READ_CATALOG_ENTRY.KEY_.KEY$ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10563**DCL
READ_CATALOG_ENTRY.V.DVBYTE IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10576**DCL
READ_CATALOG_ENTRY.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10577**DCL
READ_CATALOG_ENTRY.V.DVBYTE.BP# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10576**DCL
READ_CATALOG_ENTRY.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10579**DCL
READ_CATALOG_ENTRY.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10578**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:427  
READ_CATALOG_ENTRY.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10576**DCL
READ_CATALOG_ENTRY.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10578**DCL
READ_CATALOG_ENTRY.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10577**DCL
READ_CATALOG_ENTRY.V.EVENT# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10575**DCL
READ_CATALOG_ENTRY.V.FULL# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10568**DCL
READ_CATALOG_ENTRY.V.ID# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10567**DCL
READ_CATALOG_ENTRY.V.IDS# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10568**DCL
READ_CATALOG_ENTRY.V.IOERROK# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10569**DCL
READ_CATALOG_ENTRY.V.KEYCHNG# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10568**DCL
READ_CATALOG_ENTRY.V.KEYR# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10567**DCL
READ_CATALOG_ENTRY.V.KEYS# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10567**DCL
READ_CATALOG_ENTRY.V.KEYTYPE# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10575**DCL
READ_CATALOG_ENTRY.V.ODFNC# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10580**DCL
READ_CATALOG_ENTRY.V.RECNUM# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10580**DCL
READ_CATALOG_ENTRY.V.REREADPOS# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10581**DCL
READ_CATALOG_ENTRY.V.SEED# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10576**DCL
READ_CATALOG_ENTRY.V.SINPUTSIZE# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10580**DCL
READ_CATALOG_ENTRY.V.STRPVFC# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10579**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:428  
READ_CATALOG_ENTRY.V.WAIT# IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10566**DCL
READ_CATALOG_ENTRY.V_ IN PROCEDURE DFU_READ_CATALOG_ENTRY
     10562**DCL
READ_DECKFILE_LOG.BUF_.BOUND IN PROCEDURE DFU_READ_LOG
     11223**DCL
READ_DECKFILE_LOG.BUF_.BUF$ IN PROCEDURE DFU_READ_LOG
     11224**DCL
READ_DECKFILE_LOG.IDBUF_ IN PROCEDURE DFU_READ_LOG
     11225**DCL
READ_DECKFILE_LOG.KEY_ IN PROCEDURE DFU_READ_LOG
     11221**DCL
READ_DECKFILE_LOG.KEY_.BOUND IN PROCEDURE DFU_READ_LOG
     11221**DCL
READ_DECKFILE_LOG.KEY_.KEY$ IN PROCEDURE DFU_READ_LOG
     11222**DCL
READ_DECKFILE_LOG.V.DCB# IN PROCEDURE DFU_READ_LOG
     11225**DCL
READ_DECKFILE_LOG.V.DVBYTE IN PROCEDURE DFU_READ_LOG
     11235**DCL
READ_DECKFILE_LOG.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_LOG
     11236**DCL
READ_DECKFILE_LOG.V.DVBYTE.BP# IN PROCEDURE DFU_READ_LOG
     11235**DCL
READ_DECKFILE_LOG.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_LOG
     11238**DCL
READ_DECKFILE_LOG.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_LOG
     11237**DCL
READ_DECKFILE_LOG.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_LOG
     11235**DCL
READ_DECKFILE_LOG.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_LOG
     11237**DCL
READ_DECKFILE_LOG.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_LOG
     11236**DCL
READ_DECKFILE_LOG.V.EVENT# IN PROCEDURE DFU_READ_LOG
     11234**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:429  
READ_DECKFILE_LOG.V.FULL# IN PROCEDURE DFU_READ_LOG
     11227**DCL
READ_DECKFILE_LOG.V.ID# IN PROCEDURE DFU_READ_LOG
     11226**DCL
READ_DECKFILE_LOG.V.IDS# IN PROCEDURE DFU_READ_LOG
     11227**DCL
READ_DECKFILE_LOG.V.IOERROK# IN PROCEDURE DFU_READ_LOG
     11228**DCL
READ_DECKFILE_LOG.V.KEYCHNG# IN PROCEDURE DFU_READ_LOG
     11227**DCL
READ_DECKFILE_LOG.V.KEYR# IN PROCEDURE DFU_READ_LOG
     11226**DCL
READ_DECKFILE_LOG.V.KEYS# IN PROCEDURE DFU_READ_LOG
     11226**DCL
READ_DECKFILE_LOG.V.KEYTYPE# IN PROCEDURE DFU_READ_LOG
     11234**DCL
READ_DECKFILE_LOG.V.ODFNC# IN PROCEDURE DFU_READ_LOG
     11239**DCL
READ_DECKFILE_LOG.V.RECNUM# IN PROCEDURE DFU_READ_LOG
     11239**DCL
READ_DECKFILE_LOG.V.REREADPOS# IN PROCEDURE DFU_READ_LOG
     11240**DCL
READ_DECKFILE_LOG.V.SEED# IN PROCEDURE DFU_READ_LOG
     11235**DCL
READ_DECKFILE_LOG.V.SINPUTSIZE# IN PROCEDURE DFU_READ_LOG
     11239**DCL
READ_DECKFILE_LOG.V.STRPVFC# IN PROCEDURE DFU_READ_LOG
     11238**DCL
READ_DECKFILE_LOG.V.WAIT# IN PROCEDURE DFU_READ_LOG
     11225**DCL
READ_DECKFILE_LOG.V_ IN PROCEDURE DFU_READ_LOG
     11221**DCL
READ_DECKFILE_REVISION.BUF_ IN PROCEDURE DFU_READ_REVISION
     11327**DCL
READ_DECKFILE_REVISION.BUF_.BOUND IN PROCEDURE DFU_READ_REVISION
     11327**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:430  
READ_DECKFILE_REVISION.BUF_.BUF$ IN PROCEDURE DFU_READ_REVISION
     11328**DCL
READ_DECKFILE_REVISION.IDBUF_ IN PROCEDURE DFU_READ_REVISION
     11329**DCL
READ_DECKFILE_REVISION.KEY_ IN PROCEDURE DFU_READ_REVISION
     11325**DCL
READ_DECKFILE_REVISION.KEY_.BOUND IN PROCEDURE DFU_READ_REVISION
     11325**DCL
READ_DECKFILE_REVISION.KEY_.KEY$ IN PROCEDURE DFU_READ_REVISION
     11326**DCL
READ_DECKFILE_REVISION.V.DCB# IN PROCEDURE DFU_READ_REVISION
     11329**DCL
READ_DECKFILE_REVISION.V.DVBYTE IN PROCEDURE DFU_READ_REVISION
     11339**DCL
READ_DECKFILE_REVISION.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_REVISION
     11340**DCL
READ_DECKFILE_REVISION.V.DVBYTE.BP# IN PROCEDURE DFU_READ_REVISION
     11339**DCL
READ_DECKFILE_REVISION.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_REVISION
     11342**DCL
READ_DECKFILE_REVISION.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_REVISION
     11341**DCL
READ_DECKFILE_REVISION.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_REVISION
     11339**DCL
READ_DECKFILE_REVISION.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_REVISION
     11341**DCL
READ_DECKFILE_REVISION.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_REVISION
     11340**DCL
READ_DECKFILE_REVISION.V.EVENT# IN PROCEDURE DFU_READ_REVISION
     11338**DCL
READ_DECKFILE_REVISION.V.FULL# IN PROCEDURE DFU_READ_REVISION
     11331**DCL
READ_DECKFILE_REVISION.V.ID# IN PROCEDURE DFU_READ_REVISION
     11330**DCL
READ_DECKFILE_REVISION.V.IDS# IN PROCEDURE DFU_READ_REVISION
     11331**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:431  
READ_DECKFILE_REVISION.V.IOERROK# IN PROCEDURE DFU_READ_REVISION
     11332**DCL
READ_DECKFILE_REVISION.V.KEYCHNG# IN PROCEDURE DFU_READ_REVISION
     11331**DCL
READ_DECKFILE_REVISION.V.KEYR# IN PROCEDURE DFU_READ_REVISION
     11330**DCL
READ_DECKFILE_REVISION.V.KEYS# IN PROCEDURE DFU_READ_REVISION
     11330**DCL
READ_DECKFILE_REVISION.V.KEYTYPE# IN PROCEDURE DFU_READ_REVISION
     11338**DCL
READ_DECKFILE_REVISION.V.ODFNC# IN PROCEDURE DFU_READ_REVISION
     11343**DCL
READ_DECKFILE_REVISION.V.RECNUM# IN PROCEDURE DFU_READ_REVISION
     11343**DCL
READ_DECKFILE_REVISION.V.REREADPOS# IN PROCEDURE DFU_READ_REVISION
     11344**DCL
READ_DECKFILE_REVISION.V.SEED# IN PROCEDURE DFU_READ_REVISION
     11339**DCL
READ_DECKFILE_REVISION.V.SINPUTSIZE# IN PROCEDURE DFU_READ_REVISION
     11343**DCL
READ_DECKFILE_REVISION.V.STRPVFC# IN PROCEDURE DFU_READ_REVISION
     11342**DCL
READ_DECKFILE_REVISION.V.WAIT# IN PROCEDURE DFU_READ_REVISION
     11329**DCL
READ_DECKFILE_REVISION.V_ IN PROCEDURE DFU_READ_REVISION
     11325**DCL
READ_LAST_DECK#.BUF_ IN PROCEDURE DFU_READ_LAST_DECK#
     11140**DCL
READ_LAST_DECK#.BUF_.BOUND IN PROCEDURE DFU_READ_LAST_DECK#
     11140**DCL
READ_LAST_DECK#.BUF_.BUF$ IN PROCEDURE DFU_READ_LAST_DECK#
     11141**DCL
READ_LAST_DECK#.IDBUF_ IN PROCEDURE DFU_READ_LAST_DECK#
     11142**DCL
READ_LAST_DECK#.KEY_ IN PROCEDURE DFU_READ_LAST_DECK#
     11138**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:432  
READ_LAST_DECK#.KEY_.BOUND IN PROCEDURE DFU_READ_LAST_DECK#
     11138**DCL
READ_LAST_DECK#.KEY_.KEY$ IN PROCEDURE DFU_READ_LAST_DECK#
     11139**DCL
READ_LAST_DECK#.V.DVBYTE IN PROCEDURE DFU_READ_LAST_DECK#
     11152**DCL
READ_LAST_DECK#.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_LAST_DECK#
     11153**DCL
READ_LAST_DECK#.V.DVBYTE.BP# IN PROCEDURE DFU_READ_LAST_DECK#
     11152**DCL
READ_LAST_DECK#.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_LAST_DECK#
     11155**DCL
READ_LAST_DECK#.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_LAST_DECK#
     11154**DCL
READ_LAST_DECK#.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_LAST_DECK#
     11152**DCL
READ_LAST_DECK#.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_LAST_DECK#
     11154**DCL
READ_LAST_DECK#.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_LAST_DECK#
     11153**DCL
READ_LAST_DECK#.V.EVENT# IN PROCEDURE DFU_READ_LAST_DECK#
     11151**DCL
READ_LAST_DECK#.V.FULL# IN PROCEDURE DFU_READ_LAST_DECK#
     11144**DCL
READ_LAST_DECK#.V.ID# IN PROCEDURE DFU_READ_LAST_DECK#
     11143**DCL
READ_LAST_DECK#.V.IDS# IN PROCEDURE DFU_READ_LAST_DECK#
     11144**DCL
READ_LAST_DECK#.V.IOERROK# IN PROCEDURE DFU_READ_LAST_DECK#
     11145**DCL
READ_LAST_DECK#.V.KEYCHNG# IN PROCEDURE DFU_READ_LAST_DECK#
     11144**DCL
READ_LAST_DECK#.V.KEYR# IN PROCEDURE DFU_READ_LAST_DECK#
     11143**DCL
READ_LAST_DECK#.V.KEYS# IN PROCEDURE DFU_READ_LAST_DECK#
     11143**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:433  
READ_LAST_DECK#.V.KEYTYPE# IN PROCEDURE DFU_READ_LAST_DECK#
     11151**DCL
READ_LAST_DECK#.V.ODFNC# IN PROCEDURE DFU_READ_LAST_DECK#
     11156**DCL
READ_LAST_DECK#.V.RECNUM# IN PROCEDURE DFU_READ_LAST_DECK#
     11156**DCL
READ_LAST_DECK#.V.REREADPOS# IN PROCEDURE DFU_READ_LAST_DECK#
     11157**DCL
READ_LAST_DECK#.V.SEED# IN PROCEDURE DFU_READ_LAST_DECK#
     11152**DCL
READ_LAST_DECK#.V.SINPUTSIZE# IN PROCEDURE DFU_READ_LAST_DECK#
     11156**DCL
READ_LAST_DECK#.V.STRPVFC# IN PROCEDURE DFU_READ_LAST_DECK#
     11155**DCL
READ_LAST_DECK#.V.WAIT# IN PROCEDURE DFU_READ_LAST_DECK#
     11142**DCL
READ_LAST_DECK#.V_ IN PROCEDURE DFU_READ_LAST_DECK#
     11138**DCL
READ_MASTER_CONTROL.BUF_ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10158**DCL
READ_MASTER_CONTROL.BUF_.BOUND IN PROCEDURE DFU_READ_MASTER_CONTROL
     10158**DCL
READ_MASTER_CONTROL.BUF_.BUF$ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10159**DCL
READ_MASTER_CONTROL.IDBUF_ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10160**DCL
READ_MASTER_CONTROL.KEY_ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10156**DCL
READ_MASTER_CONTROL.KEY_.BOUND IN PROCEDURE DFU_READ_MASTER_CONTROL
     10156**DCL
READ_MASTER_CONTROL.KEY_.KEY$ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10157**DCL
READ_MASTER_CONTROL.V.DVBYTE IN PROCEDURE DFU_READ_MASTER_CONTROL
     10170**DCL
READ_MASTER_CONTROL.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10171**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:434  
READ_MASTER_CONTROL.V.DVBYTE.BP# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10170**DCL
READ_MASTER_CONTROL.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10173**DCL
READ_MASTER_CONTROL.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10172**DCL
READ_MASTER_CONTROL.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10170**DCL
READ_MASTER_CONTROL.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10172**DCL
READ_MASTER_CONTROL.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10171**DCL
READ_MASTER_CONTROL.V.EVENT# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10169**DCL
READ_MASTER_CONTROL.V.FULL# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10162**DCL
READ_MASTER_CONTROL.V.ID# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10161**DCL
READ_MASTER_CONTROL.V.IDS# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10162**DCL
READ_MASTER_CONTROL.V.IOERROK# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10163**DCL
READ_MASTER_CONTROL.V.KEYCHNG# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10162**DCL
READ_MASTER_CONTROL.V.KEYR# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10161**DCL
READ_MASTER_CONTROL.V.KEYS# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10161**DCL
READ_MASTER_CONTROL.V.KEYTYPE# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10169**DCL
READ_MASTER_CONTROL.V.ODFNC# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10174**DCL
READ_MASTER_CONTROL.V.RECNUM# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10174**DCL
READ_MASTER_CONTROL.V.REREADPOS# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10175**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:435  
READ_MASTER_CONTROL.V.SEED# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10170**DCL
READ_MASTER_CONTROL.V.SINPUTSIZE# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10174**DCL
READ_MASTER_CONTROL.V.STRPVFC# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10173**DCL
READ_MASTER_CONTROL.V.WAIT# IN PROCEDURE DFU_READ_MASTER_CONTROL
     10160**DCL
READ_MASTER_CONTROL.V_ IN PROCEDURE DFU_READ_MASTER_CONTROL
     10156**DCL
READ_MASTER_ENTRY.BUF_ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10259**DCL
READ_MASTER_ENTRY.BUF_.BOUND IN PROCEDURE DFU_READ_MASTER_ENTRY
     10259**DCL
READ_MASTER_ENTRY.BUF_.BUF$ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10260**DCL
READ_MASTER_ENTRY.IDBUF_ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10261**DCL
READ_MASTER_ENTRY.KEY_ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10257**DCL
READ_MASTER_ENTRY.KEY_.BOUND IN PROCEDURE DFU_READ_MASTER_ENTRY
     10257**DCL
READ_MASTER_ENTRY.KEY_.KEY$ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10258**DCL
READ_MASTER_ENTRY.V.DVBYTE IN PROCEDURE DFU_READ_MASTER_ENTRY
     10271**DCL
READ_MASTER_ENTRY.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10272**DCL
READ_MASTER_ENTRY.V.DVBYTE.BP# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10271**DCL
READ_MASTER_ENTRY.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10274**DCL
READ_MASTER_ENTRY.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10273**DCL
READ_MASTER_ENTRY.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10271**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:436  
READ_MASTER_ENTRY.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10273**DCL
READ_MASTER_ENTRY.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10272**DCL
READ_MASTER_ENTRY.V.EVENT# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10270**DCL
READ_MASTER_ENTRY.V.FULL# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10263**DCL
READ_MASTER_ENTRY.V.ID# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10262**DCL
READ_MASTER_ENTRY.V.IDS# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10263**DCL
READ_MASTER_ENTRY.V.IOERROK# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10264**DCL
READ_MASTER_ENTRY.V.KEYCHNG# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10263**DCL
READ_MASTER_ENTRY.V.KEYR# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10262**DCL
READ_MASTER_ENTRY.V.KEYS# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10262**DCL
READ_MASTER_ENTRY.V.KEYTYPE# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10270**DCL
READ_MASTER_ENTRY.V.ODFNC# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10275**DCL
READ_MASTER_ENTRY.V.RECNUM# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10275**DCL
READ_MASTER_ENTRY.V.REREADPOS# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10276**DCL
READ_MASTER_ENTRY.V.SEED# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10271**DCL
READ_MASTER_ENTRY.V.SINPUTSIZE# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10275**DCL
READ_MASTER_ENTRY.V.STRPVFC# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10274**DCL
READ_MASTER_ENTRY.V.WAIT# IN PROCEDURE DFU_READ_MASTER_ENTRY
     10261**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:437  
READ_MASTER_ENTRY.V_ IN PROCEDURE DFU_READ_MASTER_ENTRY
     10257**DCL
READ_OBJECT.BUF_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11547**DCL
READ_OBJECT.BUF_.BOUND IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11547**DCL
READ_OBJECT.BUF_.BUF$ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11548**DCL
READ_OBJECT.IDBUF_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11549**DCL
READ_OBJECT.KEY_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11545**DCL
READ_OBJECT.KEY_.BOUND IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11545**DCL
READ_OBJECT.KEY_.KEY$ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11546**DCL
READ_OBJECT.V.DCB# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11549**DCL
READ_OBJECT.V.DVBYTE IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11559**DCL
READ_OBJECT.V.DVBYTE.BIN# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11560**DCL
READ_OBJECT.V.DVBYTE.BP# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11559**DCL
READ_OBJECT.V.DVBYTE.CONT# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11562**DCL
READ_OBJECT.V.DVBYTE.NODAT# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11561**DCL
READ_OBJECT.V.DVBYTE.TOP# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11559**DCL
READ_OBJECT.V.DVBYTE.TRANS# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11561**DCL
READ_OBJECT.V.DVBYTE.VFC# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11560**DCL
READ_OBJECT.V.EVENT# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11558**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:438  
READ_OBJECT.V.FULL# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11551**DCL
READ_OBJECT.V.ID# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11550**DCL
READ_OBJECT.V.IDS# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11551**DCL
READ_OBJECT.V.IOERROK# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11552**DCL
READ_OBJECT.V.KEYCHNG# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11551**DCL
READ_OBJECT.V.KEYR# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11550**DCL
READ_OBJECT.V.KEYS# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11550**DCL
READ_OBJECT.V.KEYTYPE# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11558**DCL
READ_OBJECT.V.ODFNC# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11563**DCL
READ_OBJECT.V.RECNUM# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11563**DCL
READ_OBJECT.V.REREADPOS# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11564**DCL
READ_OBJECT.V.SEED# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11559**DCL
READ_OBJECT.V.SINPUTSIZE# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11563**DCL
READ_OBJECT.V.STRPVFC# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11562**DCL
READ_OBJECT.V.WAIT# IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11549**DCL
READ_OBJECT.V_ IN PROCEDURE DFU_CHECK_ALREADY_SAVED
     11545**DCL
READ_OBJECT.BUF_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11708**DCL
READ_OBJECT.BUF_.BOUND IN PROCEDURE DFU_CHECK_FOR_KEY
     11708**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:439  
READ_OBJECT.BUF_.BUF$ IN PROCEDURE DFU_CHECK_FOR_KEY
     11709**DCL
READ_OBJECT.IDBUF_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11710**DCL
READ_OBJECT.KEY_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11706**DCL
READ_OBJECT.KEY_.BOUND IN PROCEDURE DFU_CHECK_FOR_KEY
     11706**DCL
READ_OBJECT.KEY_.KEY$ IN PROCEDURE DFU_CHECK_FOR_KEY
     11707**DCL
READ_OBJECT.V.DCB# IN PROCEDURE DFU_CHECK_FOR_KEY
     11710**DCL
READ_OBJECT.V.DVBYTE IN PROCEDURE DFU_CHECK_FOR_KEY
     11720**DCL
READ_OBJECT.V.DVBYTE.BIN# IN PROCEDURE DFU_CHECK_FOR_KEY
     11721**DCL
READ_OBJECT.V.DVBYTE.BP# IN PROCEDURE DFU_CHECK_FOR_KEY
     11720**DCL
READ_OBJECT.V.DVBYTE.CONT# IN PROCEDURE DFU_CHECK_FOR_KEY
     11723**DCL
READ_OBJECT.V.DVBYTE.NODAT# IN PROCEDURE DFU_CHECK_FOR_KEY
     11722**DCL
READ_OBJECT.V.DVBYTE.TOP# IN PROCEDURE DFU_CHECK_FOR_KEY
     11720**DCL
READ_OBJECT.V.DVBYTE.TRANS# IN PROCEDURE DFU_CHECK_FOR_KEY
     11722**DCL
READ_OBJECT.V.DVBYTE.VFC# IN PROCEDURE DFU_CHECK_FOR_KEY
     11721**DCL
READ_OBJECT.V.EVENT# IN PROCEDURE DFU_CHECK_FOR_KEY
     11719**DCL
READ_OBJECT.V.FULL# IN PROCEDURE DFU_CHECK_FOR_KEY
     11712**DCL
READ_OBJECT.V.ID# IN PROCEDURE DFU_CHECK_FOR_KEY
     11711**DCL
READ_OBJECT.V.IDS# IN PROCEDURE DFU_CHECK_FOR_KEY
     11712**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:440  
READ_OBJECT.V.IOERROK# IN PROCEDURE DFU_CHECK_FOR_KEY
     11713**DCL
READ_OBJECT.V.KEYCHNG# IN PROCEDURE DFU_CHECK_FOR_KEY
     11712**DCL
READ_OBJECT.V.KEYR# IN PROCEDURE DFU_CHECK_FOR_KEY
     11711**DCL
READ_OBJECT.V.KEYS# IN PROCEDURE DFU_CHECK_FOR_KEY
     11711**DCL
READ_OBJECT.V.KEYTYPE# IN PROCEDURE DFU_CHECK_FOR_KEY
     11719**DCL
READ_OBJECT.V.ODFNC# IN PROCEDURE DFU_CHECK_FOR_KEY
     11724**DCL
READ_OBJECT.V.RECNUM# IN PROCEDURE DFU_CHECK_FOR_KEY
     11724**DCL
READ_OBJECT.V.REREADPOS# IN PROCEDURE DFU_CHECK_FOR_KEY
     11725**DCL
READ_OBJECT.V.SEED# IN PROCEDURE DFU_CHECK_FOR_KEY
     11720**DCL
READ_OBJECT.V.SINPUTSIZE# IN PROCEDURE DFU_CHECK_FOR_KEY
     11724**DCL
READ_OBJECT.V.STRPVFC# IN PROCEDURE DFU_CHECK_FOR_KEY
     11723**DCL
READ_OBJECT.V.WAIT# IN PROCEDURE DFU_CHECK_FOR_KEY
     11710**DCL
READ_OBJECT.V_ IN PROCEDURE DFU_CHECK_FOR_KEY
     11706**DCL
READ_OBJECT.BUF_ IN PROCEDURE DFU_READ_OBJECT
     10718**DCL
READ_OBJECT.BUF_.BOUND IN PROCEDURE DFU_READ_OBJECT
     10718**DCL
READ_OBJECT.BUF_.BUF$ IN PROCEDURE DFU_READ_OBJECT
     10719**DCL
READ_OBJECT.IDBUF_ IN PROCEDURE DFU_READ_OBJECT
     10720**DCL
READ_OBJECT.KEY_ IN PROCEDURE DFU_READ_OBJECT
     10716**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:441  
READ_OBJECT.KEY_.BOUND IN PROCEDURE DFU_READ_OBJECT
     10716**DCL
READ_OBJECT.KEY_.KEY$ IN PROCEDURE DFU_READ_OBJECT
     10717**DCL
READ_OBJECT.V.DVBYTE IN PROCEDURE DFU_READ_OBJECT
     10730**DCL
READ_OBJECT.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_OBJECT
     10731**DCL
READ_OBJECT.V.DVBYTE.BP# IN PROCEDURE DFU_READ_OBJECT
     10730**DCL
READ_OBJECT.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_OBJECT
     10733**DCL
READ_OBJECT.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_OBJECT
     10732**DCL
READ_OBJECT.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_OBJECT
     10730**DCL
READ_OBJECT.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_OBJECT
     10732**DCL
READ_OBJECT.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_OBJECT
     10731**DCL
READ_OBJECT.V.EVENT# IN PROCEDURE DFU_READ_OBJECT
     10729**DCL
READ_OBJECT.V.FULL# IN PROCEDURE DFU_READ_OBJECT
     10722**DCL
READ_OBJECT.V.ID# IN PROCEDURE DFU_READ_OBJECT
     10721**DCL
READ_OBJECT.V.IDS# IN PROCEDURE DFU_READ_OBJECT
     10722**DCL
READ_OBJECT.V.IOERROK# IN PROCEDURE DFU_READ_OBJECT
     10723**DCL
READ_OBJECT.V.KEYCHNG# IN PROCEDURE DFU_READ_OBJECT
     10722**DCL
READ_OBJECT.V.KEYR# IN PROCEDURE DFU_READ_OBJECT
     10721**DCL
READ_OBJECT.V.KEYS# IN PROCEDURE DFU_READ_OBJECT
     10721**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:442  
READ_OBJECT.V.KEYTYPE# IN PROCEDURE DFU_READ_OBJECT
     10729**DCL
READ_OBJECT.V.ODFNC# IN PROCEDURE DFU_READ_OBJECT
     10734**DCL
READ_OBJECT.V.RECNUM# IN PROCEDURE DFU_READ_OBJECT
     10734**DCL
READ_OBJECT.V.REREADPOS# IN PROCEDURE DFU_READ_OBJECT
     10735**DCL
READ_OBJECT.V.SEED# IN PROCEDURE DFU_READ_OBJECT
     10730**DCL
READ_OBJECT.V.SINPUTSIZE# IN PROCEDURE DFU_READ_OBJECT
     10734**DCL
READ_OBJECT.V.STRPVFC# IN PROCEDURE DFU_READ_OBJECT
     10733**DCL
READ_OBJECT.V.WAIT# IN PROCEDURE DFU_READ_OBJECT
     10720**DCL
READ_OBJECT.V_ IN PROCEDURE DFU_READ_OBJECT
     10716**DCL
READ_OBJECT_REFLIST.BUF_ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11041**DCL
READ_OBJECT_REFLIST.BUF_.BOUND IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11041**DCL
READ_OBJECT_REFLIST.BUF_.BUF$ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11042**DCL
READ_OBJECT_REFLIST.IDBUF_ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11043**DCL
READ_OBJECT_REFLIST.KEY_ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11039**DCL
READ_OBJECT_REFLIST.KEY_.BOUND IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11039**DCL
READ_OBJECT_REFLIST.KEY_.KEY$ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11040**DCL
READ_OBJECT_REFLIST.V.DVBYTE IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11053**DCL
READ_OBJECT_REFLIST.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11054**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:443  
READ_OBJECT_REFLIST.V.DVBYTE.BP# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11053**DCL
READ_OBJECT_REFLIST.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11056**DCL
READ_OBJECT_REFLIST.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11055**DCL
READ_OBJECT_REFLIST.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11053**DCL
READ_OBJECT_REFLIST.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11055**DCL
READ_OBJECT_REFLIST.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11054**DCL
READ_OBJECT_REFLIST.V.EVENT# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11052**DCL
READ_OBJECT_REFLIST.V.FULL# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11045**DCL
READ_OBJECT_REFLIST.V.ID# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11044**DCL
READ_OBJECT_REFLIST.V.IDS# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11045**DCL
READ_OBJECT_REFLIST.V.IOERROK# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11046**DCL
READ_OBJECT_REFLIST.V.KEYCHNG# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11045**DCL
READ_OBJECT_REFLIST.V.KEYR# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11044**DCL
READ_OBJECT_REFLIST.V.KEYS# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11044**DCL
READ_OBJECT_REFLIST.V.KEYTYPE# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11052**DCL
READ_OBJECT_REFLIST.V.ODFNC# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11057**DCL
READ_OBJECT_REFLIST.V.RECNUM# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11057**DCL
READ_OBJECT_REFLIST.V.REREADPOS# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11058**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:444  
READ_OBJECT_REFLIST.V.SEED# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11053**DCL
READ_OBJECT_REFLIST.V.SINPUTSIZE# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11057**DCL
READ_OBJECT_REFLIST.V.STRPVFC# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11056**DCL
READ_OBJECT_REFLIST.V.WAIT# IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11043**DCL
READ_OBJECT_REFLIST.V_ IN PROCEDURE DFU_READ_OBJECT_REFLIST
     11039**DCL
READ_SUBCATALOG.BUF_ IN PROCEDURE DFU_READ_SUBCATALOG
     10465**DCL
READ_SUBCATALOG.BUF_.BOUND IN PROCEDURE DFU_READ_SUBCATALOG
     10465**DCL
READ_SUBCATALOG.BUF_.BUF$ IN PROCEDURE DFU_READ_SUBCATALOG
     10466**DCL
READ_SUBCATALOG.IDBUF_ IN PROCEDURE DFU_READ_SUBCATALOG
     10467**DCL
READ_SUBCATALOG.KEY_ IN PROCEDURE DFU_READ_SUBCATALOG
     10463**DCL
READ_SUBCATALOG.KEY_.BOUND IN PROCEDURE DFU_READ_SUBCATALOG
     10463**DCL
READ_SUBCATALOG.KEY_.KEY$ IN PROCEDURE DFU_READ_SUBCATALOG
     10464**DCL
READ_SUBCATALOG.V.DVBYTE IN PROCEDURE DFU_READ_SUBCATALOG
     10477**DCL
READ_SUBCATALOG.V.DVBYTE.BIN# IN PROCEDURE DFU_READ_SUBCATALOG
     10478**DCL
READ_SUBCATALOG.V.DVBYTE.BP# IN PROCEDURE DFU_READ_SUBCATALOG
     10477**DCL
READ_SUBCATALOG.V.DVBYTE.CONT# IN PROCEDURE DFU_READ_SUBCATALOG
     10480**DCL
READ_SUBCATALOG.V.DVBYTE.NODAT# IN PROCEDURE DFU_READ_SUBCATALOG
     10479**DCL
READ_SUBCATALOG.V.DVBYTE.TOP# IN PROCEDURE DFU_READ_SUBCATALOG
     10477**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:445  
READ_SUBCATALOG.V.DVBYTE.TRANS# IN PROCEDURE DFU_READ_SUBCATALOG
     10479**DCL
READ_SUBCATALOG.V.DVBYTE.VFC# IN PROCEDURE DFU_READ_SUBCATALOG
     10478**DCL
READ_SUBCATALOG.V.EVENT# IN PROCEDURE DFU_READ_SUBCATALOG
     10476**DCL
READ_SUBCATALOG.V.FULL# IN PROCEDURE DFU_READ_SUBCATALOG
     10469**DCL
READ_SUBCATALOG.V.ID# IN PROCEDURE DFU_READ_SUBCATALOG
     10468**DCL
READ_SUBCATALOG.V.IDS# IN PROCEDURE DFU_READ_SUBCATALOG
     10469**DCL
READ_SUBCATALOG.V.IOERROK# IN PROCEDURE DFU_READ_SUBCATALOG
     10470**DCL
READ_SUBCATALOG.V.KEYCHNG# IN PROCEDURE DFU_READ_SUBCATALOG
     10469**DCL
READ_SUBCATALOG.V.KEYR# IN PROCEDURE DFU_READ_SUBCATALOG
     10468**DCL
READ_SUBCATALOG.V.KEYS# IN PROCEDURE DFU_READ_SUBCATALOG
     10468**DCL
READ_SUBCATALOG.V.KEYTYPE# IN PROCEDURE DFU_READ_SUBCATALOG
     10476**DCL
READ_SUBCATALOG.V.ODFNC# IN PROCEDURE DFU_READ_SUBCATALOG
     10481**DCL
READ_SUBCATALOG.V.RECNUM# IN PROCEDURE DFU_READ_SUBCATALOG
     10481**DCL
READ_SUBCATALOG.V.REREADPOS# IN PROCEDURE DFU_READ_SUBCATALOG
     10482**DCL
READ_SUBCATALOG.V.SEED# IN PROCEDURE DFU_READ_SUBCATALOG
     10477**DCL
READ_SUBCATALOG.V.SINPUTSIZE# IN PROCEDURE DFU_READ_SUBCATALOG
     10481**DCL
READ_SUBCATALOG.V.STRPVFC# IN PROCEDURE DFU_READ_SUBCATALOG
     10480**DCL
READ_SUBCATALOG.V.WAIT# IN PROCEDURE DFU_READ_SUBCATALOG
     10467**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:446  
READ_SUBCATALOG.V_ IN PROCEDURE DFU_READ_SUBCATALOG
     10463**DCL
REVISION_B.DEER IN PROCEDURE DFU_READ_REVISION
     11300**DCL
REVISION_B.MAINTENANCE IN PROCEDURE DFU_READ_REVISION
     11296**DCL
REVISION_B.MAINTENANCE.CONTRACT IN PROCEDURE DFU_READ_REVISION
     11298**DCL
REVISION_B.VERSION IN PROCEDURE DFU_READ_REVISION
     11292**DCL
REVISION_B.DEER IN PROCEDURE DFU_WRITE_REVISION
     13261**DCL
REVISION_B.MAINTENANCE IN PROCEDURE DFU_WRITE_REVISION
     13257**DCL
REVISION_B.MAINTENANCE.CONTRACT IN PROCEDURE DFU_WRITE_REVISION
     13259**DCL
REVISION_B.VERSION IN PROCEDURE DFU_WRITE_REVISION
     13253**DCL
REVISION_KEY.DATA IN PROCEDURE DFU_READ_REVISION
     11280**DCL
REVISION_KEY.SIZE IN PROCEDURE DFU_READ_REVISION
     11279**DCL
REVISION_KEY.DATA IN PROCEDURE DFU_WRITE_REVISION
     13241**DCL
REVISION_KEY.SIZE IN PROCEDURE DFU_WRITE_REVISION
     13240**DCL
SUBCATALOG_DATA.IFAD_FID IN PROCEDURE DFU_READ_SUBCATALOG
     10439**DCL
SUBCATALOG_DATA.IFAD_FN IN PROCEDURE DFU_READ_SUBCATALOG
     10440**DCL
SUBCATALOG_DATA.IFAD_FID IN PROCEDURE DFU_WRITE_SUBCATALOG
     12455**DCL
SUBCATALOG_DATA.IFAD_FN IN PROCEDURE DFU_WRITE_SUBCATALOG
     12456**DCL
SUBCATALOG_KEY.DECK# IN PROCEDURE DFU_DELETE_CATALOG
     12066**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:447  
SUBCATALOG_KEY.ENTRY# IN PROCEDURE DFU_DELETE_CATALOG
     12067**DCL
SUBCATALOG_KEY.SIZE IN PROCEDURE DFU_DELETE_CATALOG
     12065**DCL
SUBCATALOG_KEY.DECK# IN PROCEDURE DFU_READ_SUBCATALOG
     10426**DCL
SUBCATALOG_KEY.ENTRY# IN PROCEDURE DFU_READ_SUBCATALOG
     10427**DCL
SUBCATALOG_KEY.SIZE IN PROCEDURE DFU_READ_SUBCATALOG
     10425**DCL
SUBCATALOG_KEY.DECK# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12442**DCL
SUBCATALOG_KEY.ENTRY# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12443**DCL
SUBCATALOG_KEY.SIZE IN PROCEDURE DFU_WRITE_SUBCATALOG
     12441**DCL
TEMP_CREATE.ACCESS_ IN PROCEDURE DFU_OPEN_TEMP
     13400**DCL
TEMP_CREATE.ACCT_ IN PROCEDURE DFU_OPEN_TEMP
     13402**DCL
TEMP_CREATE.FORM_ IN PROCEDURE DFU_OPEN_TEMP
     13406**DCL
TEMP_CREATE.FPARAM_ IN PROCEDURE DFU_OPEN_TEMP
     13403**DCL
TEMP_CREATE.FPRG_ IN PROCEDURE DFU_OPEN_TEMP
     13407**DCL
TEMP_CREATE.IFPARAM_ IN PROCEDURE DFU_OPEN_TEMP
     13403**DCL
TEMP_CREATE.INSTATTR_ IN PROCEDURE DFU_OPEN_TEMP
     13402**DCL
TEMP_CREATE.IRKEYS_ IN PROCEDURE DFU_OPEN_TEMP
     13407**DCL
TEMP_CREATE.IRREC_ IN PROCEDURE DFU_OPEN_TEMP
     13406**DCL
TEMP_CREATE.NAME_ IN PROCEDURE DFU_OPEN_TEMP
     13399**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:448  
TEMP_CREATE.NODENAME_ IN PROCEDURE DFU_OPEN_TEMP
     13404**DCL
TEMP_CREATE.PASS_ IN PROCEDURE DFU_OPEN_TEMP
     13400**DCL
TEMP_CREATE.PROCATTR_ IN PROCEDURE DFU_OPEN_TEMP
     13402**DCL
TEMP_CREATE.RECFIELD_ IN PROCEDURE DFU_OPEN_TEMP
     13405**DCL
TEMP_CREATE.SETSTA_ IN PROCEDURE DFU_OPEN_TEMP
     13399**DCL
TEMP_CREATE.SN_ IN PROCEDURE DFU_OPEN_TEMP
     13398**DCL
TEMP_CREATE.UATTR_ IN PROCEDURE DFU_OPEN_TEMP
     13401**DCL
TEMP_CREATE.V.ACS# IN PROCEDURE DFU_OPEN_TEMP
     13418**DCL
TEMP_CREATE.V.ANSISPANSEQ# IN PROCEDURE DFU_OPEN_TEMP
     13431**DCL
TEMP_CREATE.V.ASN# IN PROCEDURE DFU_OPEN_TEMP
     13417**DCL
TEMP_CREATE.V.ATTR# IN PROCEDURE DFU_OPEN_TEMP
     13434**DCL
TEMP_CREATE.V.AU# IN PROCEDURE DFU_OPEN_TEMP
     13436**DCL
TEMP_CREATE.V.BLKL# IN PROCEDURE DFU_OPEN_TEMP
     13424**DCL
TEMP_CREATE.V.BLOCKED# IN PROCEDURE DFU_OPEN_TEMP
     13419**DCL
TEMP_CREATE.V.BUPM# IN PROCEDURE DFU_OPEN_TEMP
     13420**DCL
TEMP_CREATE.V.CHAIN# IN PROCEDURE DFU_OPEN_TEMP
     13433**DCL
TEMP_CREATE.V.CNVRT# IN PROCEDURE DFU_OPEN_TEMP
     13427**DCL
TEMP_CREATE.V.COMP# IN PROCEDURE DFU_OPEN_TEMP
     13419**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:449  
TEMP_CREATE.V.COPIES# IN PROCEDURE DFU_OPEN_TEMP
     13439**DCL
TEMP_CREATE.V.CTG# IN PROCEDURE DFU_OPEN_TEMP
     13411**DCL
TEMP_CREATE.V.CVOL# IN PROCEDURE DFU_OPEN_TEMP
     13412**DCL
TEMP_CREATE.V.DBGDCBNO# IN PROCEDURE DFU_OPEN_TEMP
     13438**DCL
TEMP_CREATE.V.DBGSYSID# IN PROCEDURE DFU_OPEN_TEMP
     13438**DCL
TEMP_CREATE.V.DCB# IN PROCEDURE DFU_OPEN_TEMP
     13407**DCL
TEMP_CREATE.V.DCBCONLGL# IN PROCEDURE DFU_OPEN_TEMP
     13429**DCL
TEMP_CREATE.V.DELETE# IN PROCEDURE DFU_OPEN_TEMP
     13409**DCL
TEMP_CREATE.V.DENSITY# IN PROCEDURE DFU_OPEN_TEMP
     13439**DCL
TEMP_CREATE.V.DISP# IN PROCEDURE DFU_OPEN_TEMP
     13423**DCL
TEMP_CREATE.V.DVFC# IN PROCEDURE DFU_OPEN_TEMP
     13434**DCL
TEMP_CREATE.V.EBCDIC# IN PROCEDURE DFU_OPEN_TEMP
     13427**DCL
TEMP_CREATE.V.EVENT# IN PROCEDURE DFU_OPEN_TEMP
     13437**DCL
TEMP_CREATE.V.EXIST# IN PROCEDURE DFU_OPEN_TEMP
     13411**DCL
TEMP_CREATE.V.EXPIRE# IN PROCEDURE DFU_OPEN_TEMP
     13427**DCL
TEMP_CREATE.V.FINDPOS# IN PROCEDURE DFU_OPEN_TEMP
     13413**DCL
TEMP_CREATE.V.FUN# IN PROCEDURE DFU_OPEN_TEMP
     13417**DCL
TEMP_CREATE.V.GHSTACS# IN PROCEDURE DFU_OPEN_TEMP
     13422**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:450  
TEMP_CREATE.V.IGNOREFSN# IN PROCEDURE DFU_OPEN_TEMP
     13431**DCL
TEMP_CREATE.V.INITZ IN PROCEDURE DFU_OPEN_TEMP
     13408**DCL
TEMP_CREATE.V.INITZ.REASSIGN# IN PROCEDURE DFU_OPEN_TEMP
     13408**DCL
TEMP_CREATE.V.INITZ.SCRUB# IN PROCEDURE DFU_OPEN_TEMP
     13408**DCL
TEMP_CREATE.V.IOERROK# IN PROCEDURE DFU_OPEN_TEMP
     13429**DCL
TEMP_CREATE.V.IXTNSIZE# IN PROCEDURE DFU_OPEN_TEMP
     13426**DCL
TEMP_CREATE.V.JRNLBYPASS# IN PROCEDURE DFU_OPEN_TEMP
     13421**DCL
TEMP_CREATE.V.KEYL# IN PROCEDURE DFU_OPEN_TEMP
     13423**DCL
TEMP_CREATE.V.KEYTYPE# IN PROCEDURE DFU_OPEN_TEMP
     13433**DCL
TEMP_CREATE.V.KEYX# IN PROCEDURE DFU_OPEN_TEMP
     13422**DCL
TEMP_CREATE.V.LINES# IN PROCEDURE DFU_OPEN_TEMP
     13437**DCL
TEMP_CREATE.V.LOAD# IN PROCEDURE DFU_OPEN_TEMP
     13421**DCL
TEMP_CREATE.V.LRDL0# IN PROCEDURE DFU_OPEN_TEMP
     13425**DCL
TEMP_CREATE.V.LSLIDE# IN PROCEDURE DFU_OPEN_TEMP
     13424**DCL
TEMP_CREATE.V.LSTAOR# IN PROCEDURE DFU_OPEN_TEMP
     13421**DCL
TEMP_CREATE.V.MAXVOL# IN PROCEDURE DFU_OPEN_TEMP
     13433**DCL
TEMP_CREATE.V.NRECS# IN PROCEDURE DFU_OPEN_TEMP
     13426**DCL
TEMP_CREATE.V.OPER IN PROCEDURE DFU_OPEN_TEMP
     13409**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:451  
TEMP_CREATE.V.OPER.MNTONLY# IN PROCEDURE DFU_OPEN_TEMP
     13411**DCL
TEMP_CREATE.V.OPER.NXTA# IN PROCEDURE DFU_OPEN_TEMP
     13410**DCL
TEMP_CREATE.V.OPER.NXTF# IN PROCEDURE DFU_OPEN_TEMP
     13410**DCL
TEMP_CREATE.V.OPER.TEST# IN PROCEDURE DFU_OPEN_TEMP
     13409**DCL
TEMP_CREATE.V.OPER.THISF# IN PROCEDURE DFU_OPEN_TEMP
     13410**DCL
TEMP_CREATE.V.ORG# IN PROCEDURE DFU_OPEN_TEMP
     13418**DCL
TEMP_CREATE.V.OVERFDE# IN PROCEDURE DFU_OPEN_TEMP
     13430**DCL
TEMP_CREATE.V.QISS# IN PROCEDURE DFU_OPEN_TEMP
     13436**DCL
TEMP_CREATE.V.RECL# IN PROCEDURE DFU_OPEN_TEMP
     13424**DCL
TEMP_CREATE.V.RES# IN PROCEDURE DFU_OPEN_TEMP
     13422**DCL
TEMP_CREATE.V.SEED# IN PROCEDURE DFU_OPEN_TEMP
     13440**DCL
TEMP_CREATE.V.SEEDSPECIFIED# IN PROCEDURE DFU_OPEN_TEMP
     13431**DCL
TEMP_CREATE.V.SEQ# IN PROCEDURE DFU_OPEN_TEMP
     13435**DCL
TEMP_CREATE.V.SEQCOL# IN PROCEDURE DFU_OPEN_TEMP
     13435**DCL
TEMP_CREATE.V.SEQID# IN PROCEDURE DFU_OPEN_TEMP
     13437**DCL
TEMP_CREATE.V.SETDCB# IN PROCEDURE DFU_OPEN_TEMP
     13408**DCL
TEMP_CREATE.V.SHARE# IN PROCEDURE DFU_OPEN_TEMP
     13412**DCL
TEMP_CREATE.V.SPANNED# IN PROCEDURE DFU_OPEN_TEMP
     13420**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:452  
TEMP_CREATE.V.SPARE# IN PROCEDURE DFU_OPEN_TEMP
     13425**DCL
TEMP_CREATE.V.SRCHCOND IN PROCEDURE DFU_OPEN_TEMP
     13413**DCL
TEMP_CREATE.V.SRCHCOND.ANYF# IN PROCEDURE DFU_OPEN_TEMP
     13416**DCL
TEMP_CREATE.V.SRCHCOND.ARCHIVE# IN PROCEDURE DFU_OPEN_TEMP
     13415**DCL
TEMP_CREATE.V.SRCHCOND.BAD# IN PROCEDURE DFU_OPEN_TEMP
     13414**DCL
TEMP_CREATE.V.SRCHCOND.BUF# IN PROCEDURE DFU_OPEN_TEMP
     13414**DCL
TEMP_CREATE.V.SRCHCOND.DELF# IN PROCEDURE DFU_OPEN_TEMP
     13413**DCL
TEMP_CREATE.V.SRCHCOND.NOLIST# IN PROCEDURE DFU_OPEN_TEMP
     13413**DCL
TEMP_CREATE.V.SRCHCOND.QS# IN PROCEDURE DFU_OPEN_TEMP
     13415**DCL
TEMP_CREATE.V.SRCHCOND.REV# IN PROCEDURE DFU_OPEN_TEMP
     13416**DCL
TEMP_CREATE.V.TERMCONLGL# IN PROCEDURE DFU_OPEN_TEMP
     13430**DCL
TEMP_CREATE.V.TYPE# IN PROCEDURE DFU_OPEN_TEMP
     13419**DCL
TEMP_CREATE.V.UOPT# IN PROCEDURE DFU_OPEN_TEMP
     13417**DCL
TEMP_CREATE.V.VOL# IN PROCEDURE DFU_OPEN_TEMP
     13432**DCL
TEMP_CREATE.V.VOLACCESS# IN PROCEDURE DFU_OPEN_TEMP
     13436**DCL
TEMP_CREATE.V.XONLY# IN PROCEDURE DFU_OPEN_TEMP
     13428**DCL
TEMP_CREATE.V.XTEND# IN PROCEDURE DFU_OPEN_TEMP
     13428**DCL
TEMP_CREATE.V.XTNSIZE# IN PROCEDURE DFU_OPEN_TEMP
     13426**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:453  
TEMP_CREATE.VIRTUAL_ IN PROCEDURE DFU_OPEN_TEMP
     13399**DCL
TEMP_CREATE.V_ IN PROCEDURE DFU_OPEN_TEMP
     13398**DCL
TEMP_CREATE.WINDOW_ IN PROCEDURE DFU_OPEN_TEMP
     13401**DCL
TEMP_DISCARD.ACCESS_ IN PROCEDURE DFU_CLOSE_TEMP
     13750**DCL
TEMP_DISCARD.ACCT_ IN PROCEDURE DFU_CLOSE_TEMP
     13752**DCL
TEMP_DISCARD.ACSVEH_ IN PROCEDURE DFU_CLOSE_TEMP
     13751**DCL
TEMP_DISCARD.ALTKEYS_ IN PROCEDURE DFU_CLOSE_TEMP
     13753**DCL
TEMP_DISCARD.IFPARAM_ IN PROCEDURE DFU_CLOSE_TEMP
     13753**DCL
TEMP_DISCARD.INSTATTR_ IN PROCEDURE DFU_CLOSE_TEMP
     13751**DCL
TEMP_DISCARD.IRREC_ IN PROCEDURE DFU_CLOSE_TEMP
     13748**DCL
TEMP_DISCARD.NAME_ IN PROCEDURE DFU_CLOSE_TEMP
     13749**DCL
TEMP_DISCARD.PASS_ IN PROCEDURE DFU_CLOSE_TEMP
     13750**DCL
TEMP_DISCARD.PROCATTR_ IN PROCEDURE DFU_CLOSE_TEMP
     13752**DCL
TEMP_DISCARD.RECFIELD_ IN PROCEDURE DFU_CLOSE_TEMP
     13749**DCL
TEMP_DISCARD.UATTR_ IN PROCEDURE DFU_CLOSE_TEMP
     13751**DCL
TEMP_DISCARD.V.ALTBLD# IN PROCEDURE DFU_CLOSE_TEMP
     13762**DCL
TEMP_DISCARD.V.BUPM# IN PROCEDURE DFU_CLOSE_TEMP
     13761**DCL
TEMP_DISCARD.V.CLDCB# IN PROCEDURE DFU_CLOSE_TEMP
     13761**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:454  
TEMP_DISCARD.V.CLINFO# IN PROCEDURE DFU_CLOSE_TEMP
     13763**DCL
TEMP_DISCARD.V.CLSYSID# IN PROCEDURE DFU_CLOSE_TEMP
     13760**DCL
TEMP_DISCARD.V.DCB# IN PROCEDURE DFU_CLOSE_TEMP
     13754**DCL
TEMP_DISCARD.V.DESC IN PROCEDURE DFU_CLOSE_TEMP
     13758**DCL
TEMP_DISCARD.V.DESC.ACTIVE# IN PROCEDURE DFU_CLOSE_TEMP
     13760**DCL
TEMP_DISCARD.V.DESC.ARCHIVE# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.BAD# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.BUF# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.BUPM# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.DELF# IN PROCEDURE DFU_CLOSE_TEMP
     13758**DCL
TEMP_DISCARD.V.DESC.FETCH# IN PROCEDURE DFU_CLOSE_TEMP
     13760**DCL
TEMP_DISCARD.V.DESC.NBUF# IN PROCEDURE DFU_CLOSE_TEMP
     13760**DCL
TEMP_DISCARD.V.DESC.NOLIST# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.ODSTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.QS# IN PROCEDURE DFU_CLOSE_TEMP
     13759**DCL
TEMP_DISCARD.V.DESC.TERMINATE# IN PROCEDURE DFU_CLOSE_TEMP
     13760**DCL
TEMP_DISCARD.V.DESC.TPB# IN PROCEDURE DFU_CLOSE_TEMP
     13760**DCL
TEMP_DISCARD.V.DISP# IN PROCEDURE DFU_CLOSE_TEMP
     13757**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:455  
TEMP_DISCARD.V.EFTOPER IN PROCEDURE DFU_CLOSE_TEMP
     13755**DCL
TEMP_DISCARD.V.EFTOPER.ASTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13756**DCL
TEMP_DISCARD.V.EFTOPER.BACKUP# IN PROCEDURE DFU_CLOSE_TEMP
     13755**DCL
TEMP_DISCARD.V.EFTOPER.DELFDE# IN PROCEDURE DFU_CLOSE_TEMP
     13757**DCL
TEMP_DISCARD.V.EFTOPER.ISTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13756**DCL
TEMP_DISCARD.V.EFTOPER.UPDDESC# IN PROCEDURE DFU_CLOSE_TEMP
     13756**DCL
TEMP_DISCARD.V.GHSTACS# IN PROCEDURE DFU_CLOSE_TEMP
     13762**DCL
TEMP_DISCARD.V.LRDL0# IN PROCEDURE DFU_CLOSE_TEMP
     13764**DCL
TEMP_DISCARD.V.LSLIDE# IN PROCEDURE DFU_CLOSE_TEMP
     13764**DCL
TEMP_DISCARD.V.NOMARKS# IN PROCEDURE DFU_CLOSE_TEMP
     13762**DCL
TEMP_DISCARD.V.OPER IN PROCEDURE DFU_CLOSE_TEMP
     13754**DCL
TEMP_DISCARD.V.OPER.CHGATT# IN PROCEDURE DFU_CLOSE_TEMP
     13754**DCL
TEMP_DISCARD.V.OPER.REBLD# IN PROCEDURE DFU_CLOSE_TEMP
     13755**DCL
TEMP_DISCARD.V.OPER.RELG# IN PROCEDURE DFU_CLOSE_TEMP
     13754**DCL
TEMP_DISCARD.V.POS# IN PROCEDURE DFU_CLOSE_TEMP
     13761**DCL
TEMP_DISCARD.V.SPARE# IN PROCEDURE DFU_CLOSE_TEMP
     13764**DCL
TEMP_DISCARD.V.TRUNCATE# IN PROCEDURE DFU_CLOSE_TEMP
     13757**DCL
TEMP_DISCARD.V_ IN PROCEDURE DFU_CLOSE_TEMP
     13748**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:456  
TEMP_NAME.L# IN PROCEDURE DFU_OPEN_TEMP
     13587**DCL
TEMP_NAME.NAME# IN PROCEDURE DFU_OPEN_TEMP
     13587**DCL
TEMP_READ.ACCESS_ IN PROCEDURE DFU_OPEN_TEMP
     13518**DCL
TEMP_READ.ACCT_ IN PROCEDURE DFU_OPEN_TEMP
     13520**DCL
TEMP_READ.FORM_ IN PROCEDURE DFU_OPEN_TEMP
     13524**DCL
TEMP_READ.FPARAM_ IN PROCEDURE DFU_OPEN_TEMP
     13521**DCL
TEMP_READ.FPRG_ IN PROCEDURE DFU_OPEN_TEMP
     13525**DCL
TEMP_READ.IFPARAM_ IN PROCEDURE DFU_OPEN_TEMP
     13521**DCL
TEMP_READ.INSTATTR_ IN PROCEDURE DFU_OPEN_TEMP
     13520**DCL
TEMP_READ.IRKEYS_ IN PROCEDURE DFU_OPEN_TEMP
     13525**DCL
TEMP_READ.IRREC_ IN PROCEDURE DFU_OPEN_TEMP
     13524**DCL
TEMP_READ.NAME_ IN PROCEDURE DFU_OPEN_TEMP
     13517**DCL
TEMP_READ.NODENAME_ IN PROCEDURE DFU_OPEN_TEMP
     13522**DCL
TEMP_READ.PASS_ IN PROCEDURE DFU_OPEN_TEMP
     13518**DCL
TEMP_READ.PROCATTR_ IN PROCEDURE DFU_OPEN_TEMP
     13520**DCL
TEMP_READ.RECFIELD_ IN PROCEDURE DFU_OPEN_TEMP
     13523**DCL
TEMP_READ.SETSTA_ IN PROCEDURE DFU_OPEN_TEMP
     13517**DCL
TEMP_READ.SN_ IN PROCEDURE DFU_OPEN_TEMP
     13516**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:457  
TEMP_READ.UATTR_ IN PROCEDURE DFU_OPEN_TEMP
     13519**DCL
TEMP_READ.V.ACS# IN PROCEDURE DFU_OPEN_TEMP
     13536**DCL
TEMP_READ.V.ANSISPANSEQ# IN PROCEDURE DFU_OPEN_TEMP
     13549**DCL
TEMP_READ.V.ASN# IN PROCEDURE DFU_OPEN_TEMP
     13535**DCL
TEMP_READ.V.ATTR# IN PROCEDURE DFU_OPEN_TEMP
     13552**DCL
TEMP_READ.V.AU# IN PROCEDURE DFU_OPEN_TEMP
     13554**DCL
TEMP_READ.V.BLKL# IN PROCEDURE DFU_OPEN_TEMP
     13542**DCL
TEMP_READ.V.BLOCKED# IN PROCEDURE DFU_OPEN_TEMP
     13537**DCL
TEMP_READ.V.BUPM# IN PROCEDURE DFU_OPEN_TEMP
     13538**DCL
TEMP_READ.V.CHAIN# IN PROCEDURE DFU_OPEN_TEMP
     13551**DCL
TEMP_READ.V.CNVRT# IN PROCEDURE DFU_OPEN_TEMP
     13545**DCL
TEMP_READ.V.COMP# IN PROCEDURE DFU_OPEN_TEMP
     13537**DCL
TEMP_READ.V.COPIES# IN PROCEDURE DFU_OPEN_TEMP
     13557**DCL
TEMP_READ.V.CTG# IN PROCEDURE DFU_OPEN_TEMP
     13529**DCL
TEMP_READ.V.CVOL# IN PROCEDURE DFU_OPEN_TEMP
     13530**DCL
TEMP_READ.V.DBGDCBNO# IN PROCEDURE DFU_OPEN_TEMP
     13556**DCL
TEMP_READ.V.DBGSYSID# IN PROCEDURE DFU_OPEN_TEMP
     13556**DCL
TEMP_READ.V.DCB# IN PROCEDURE DFU_OPEN_TEMP
     13525**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:458  
TEMP_READ.V.DCBCONLGL# IN PROCEDURE DFU_OPEN_TEMP
     13547**DCL
TEMP_READ.V.DELETE# IN PROCEDURE DFU_OPEN_TEMP
     13527**DCL
TEMP_READ.V.DENSITY# IN PROCEDURE DFU_OPEN_TEMP
     13557**DCL
TEMP_READ.V.DISP# IN PROCEDURE DFU_OPEN_TEMP
     13541**DCL
TEMP_READ.V.DVFC# IN PROCEDURE DFU_OPEN_TEMP
     13552**DCL
TEMP_READ.V.EBCDIC# IN PROCEDURE DFU_OPEN_TEMP
     13545**DCL
TEMP_READ.V.EVENT# IN PROCEDURE DFU_OPEN_TEMP
     13555**DCL
TEMP_READ.V.EXIST# IN PROCEDURE DFU_OPEN_TEMP
     13529**DCL
TEMP_READ.V.EXPIRE# IN PROCEDURE DFU_OPEN_TEMP
     13545**DCL
TEMP_READ.V.FINDPOS# IN PROCEDURE DFU_OPEN_TEMP
     13531**DCL
TEMP_READ.V.FUN# IN PROCEDURE DFU_OPEN_TEMP
     13535**DCL
TEMP_READ.V.GHSTACS# IN PROCEDURE DFU_OPEN_TEMP
     13540**DCL
TEMP_READ.V.IGNOREFSN# IN PROCEDURE DFU_OPEN_TEMP
     13549**DCL
TEMP_READ.V.INITZ IN PROCEDURE DFU_OPEN_TEMP
     13526**DCL
TEMP_READ.V.INITZ.REASSIGN# IN PROCEDURE DFU_OPEN_TEMP
     13526**DCL
TEMP_READ.V.INITZ.SCRUB# IN PROCEDURE DFU_OPEN_TEMP
     13526**DCL
TEMP_READ.V.IOERROK# IN PROCEDURE DFU_OPEN_TEMP
     13547**DCL
TEMP_READ.V.IXTNSIZE# IN PROCEDURE DFU_OPEN_TEMP
     13544**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:459  
TEMP_READ.V.JRNLBYPASS# IN PROCEDURE DFU_OPEN_TEMP
     13539**DCL
TEMP_READ.V.KEYL# IN PROCEDURE DFU_OPEN_TEMP
     13541**DCL
TEMP_READ.V.KEYTYPE# IN PROCEDURE DFU_OPEN_TEMP
     13551**DCL
TEMP_READ.V.KEYX# IN PROCEDURE DFU_OPEN_TEMP
     13540**DCL
TEMP_READ.V.LINES# IN PROCEDURE DFU_OPEN_TEMP
     13555**DCL
TEMP_READ.V.LOAD# IN PROCEDURE DFU_OPEN_TEMP
     13539**DCL
TEMP_READ.V.LRDL0# IN PROCEDURE DFU_OPEN_TEMP
     13543**DCL
TEMP_READ.V.LSLIDE# IN PROCEDURE DFU_OPEN_TEMP
     13542**DCL
TEMP_READ.V.LSTAOR# IN PROCEDURE DFU_OPEN_TEMP
     13539**DCL
TEMP_READ.V.MAXVOL# IN PROCEDURE DFU_OPEN_TEMP
     13551**DCL
TEMP_READ.V.NRECS# IN PROCEDURE DFU_OPEN_TEMP
     13544**DCL
TEMP_READ.V.OPER IN PROCEDURE DFU_OPEN_TEMP
     13527**DCL
TEMP_READ.V.OPER.MNTONLY# IN PROCEDURE DFU_OPEN_TEMP
     13529**DCL
TEMP_READ.V.OPER.NXTA# IN PROCEDURE DFU_OPEN_TEMP
     13528**DCL
TEMP_READ.V.OPER.NXTF# IN PROCEDURE DFU_OPEN_TEMP
     13528**DCL
TEMP_READ.V.OPER.TEST# IN PROCEDURE DFU_OPEN_TEMP
     13527**DCL
TEMP_READ.V.OPER.THISF# IN PROCEDURE DFU_OPEN_TEMP
     13528**DCL
TEMP_READ.V.ORG# IN PROCEDURE DFU_OPEN_TEMP
     13536**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:460  
TEMP_READ.V.OVERFDE# IN PROCEDURE DFU_OPEN_TEMP
     13548**DCL
TEMP_READ.V.QISS# IN PROCEDURE DFU_OPEN_TEMP
     13554**DCL
TEMP_READ.V.RECL# IN PROCEDURE DFU_OPEN_TEMP
     13542**DCL
TEMP_READ.V.RES# IN PROCEDURE DFU_OPEN_TEMP
     13540**DCL
TEMP_READ.V.SEED# IN PROCEDURE DFU_OPEN_TEMP
     13558**DCL
TEMP_READ.V.SEEDSPECIFIED# IN PROCEDURE DFU_OPEN_TEMP
     13549**DCL
TEMP_READ.V.SEQ# IN PROCEDURE DFU_OPEN_TEMP
     13553**DCL
TEMP_READ.V.SEQCOL# IN PROCEDURE DFU_OPEN_TEMP
     13553**DCL
TEMP_READ.V.SEQID# IN PROCEDURE DFU_OPEN_TEMP
     13555**DCL
TEMP_READ.V.SETDCB# IN PROCEDURE DFU_OPEN_TEMP
     13526**DCL
TEMP_READ.V.SHARE# IN PROCEDURE DFU_OPEN_TEMP
     13530**DCL
TEMP_READ.V.SPANNED# IN PROCEDURE DFU_OPEN_TEMP
     13538**DCL
TEMP_READ.V.SPARE# IN PROCEDURE DFU_OPEN_TEMP
     13543**DCL
TEMP_READ.V.SRCHCOND IN PROCEDURE DFU_OPEN_TEMP
     13531**DCL
TEMP_READ.V.SRCHCOND.ANYF# IN PROCEDURE DFU_OPEN_TEMP
     13534**DCL
TEMP_READ.V.SRCHCOND.ARCHIVE# IN PROCEDURE DFU_OPEN_TEMP
     13533**DCL
TEMP_READ.V.SRCHCOND.BAD# IN PROCEDURE DFU_OPEN_TEMP
     13532**DCL
TEMP_READ.V.SRCHCOND.BUF# IN PROCEDURE DFU_OPEN_TEMP
     13532**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:461  
TEMP_READ.V.SRCHCOND.DELF# IN PROCEDURE DFU_OPEN_TEMP
     13531**DCL
TEMP_READ.V.SRCHCOND.NOLIST# IN PROCEDURE DFU_OPEN_TEMP
     13531**DCL
TEMP_READ.V.SRCHCOND.QS# IN PROCEDURE DFU_OPEN_TEMP
     13533**DCL
TEMP_READ.V.SRCHCOND.REV# IN PROCEDURE DFU_OPEN_TEMP
     13534**DCL
TEMP_READ.V.TERMCONLGL# IN PROCEDURE DFU_OPEN_TEMP
     13548**DCL
TEMP_READ.V.TYPE# IN PROCEDURE DFU_OPEN_TEMP
     13537**DCL
TEMP_READ.V.UOPT# IN PROCEDURE DFU_OPEN_TEMP
     13535**DCL
TEMP_READ.V.VOL# IN PROCEDURE DFU_OPEN_TEMP
     13550**DCL
TEMP_READ.V.VOLACCESS# IN PROCEDURE DFU_OPEN_TEMP
     13554**DCL
TEMP_READ.V.XONLY# IN PROCEDURE DFU_OPEN_TEMP
     13546**DCL
TEMP_READ.V.XTEND# IN PROCEDURE DFU_OPEN_TEMP
     13546**DCL
TEMP_READ.V.XTNSIZE# IN PROCEDURE DFU_OPEN_TEMP
     13544**DCL
TEMP_READ.VIRTUAL_ IN PROCEDURE DFU_OPEN_TEMP
     13517**DCL
TEMP_READ.V_ IN PROCEDURE DFU_OPEN_TEMP
     13516**DCL
TEMP_READ.WINDOW_ IN PROCEDURE DFU_OPEN_TEMP
     13519**DCL
TEMP_SAVE.ACCESS_ IN PROCEDURE DFU_CLOSE_TEMP
     13705**DCL
TEMP_SAVE.ACCT_ IN PROCEDURE DFU_CLOSE_TEMP
     13707**DCL
TEMP_SAVE.ACSVEH_ IN PROCEDURE DFU_CLOSE_TEMP
     13706**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:462  
TEMP_SAVE.ALTKEYS_ IN PROCEDURE DFU_CLOSE_TEMP
     13708**DCL
TEMP_SAVE.IFPARAM_ IN PROCEDURE DFU_CLOSE_TEMP
     13708**DCL
TEMP_SAVE.INSTATTR_ IN PROCEDURE DFU_CLOSE_TEMP
     13706**DCL
TEMP_SAVE.IRREC_ IN PROCEDURE DFU_CLOSE_TEMP
     13703**DCL
TEMP_SAVE.NAME_ IN PROCEDURE DFU_CLOSE_TEMP
     13704**DCL
TEMP_SAVE.PASS_ IN PROCEDURE DFU_CLOSE_TEMP
     13705**DCL
TEMP_SAVE.PROCATTR_ IN PROCEDURE DFU_CLOSE_TEMP
     13707**DCL
TEMP_SAVE.RECFIELD_ IN PROCEDURE DFU_CLOSE_TEMP
     13704**DCL
TEMP_SAVE.UATTR_ IN PROCEDURE DFU_CLOSE_TEMP
     13706**DCL
TEMP_SAVE.V.ALTBLD# IN PROCEDURE DFU_CLOSE_TEMP
     13717**DCL
TEMP_SAVE.V.BUPM# IN PROCEDURE DFU_CLOSE_TEMP
     13716**DCL
TEMP_SAVE.V.CLDCB# IN PROCEDURE DFU_CLOSE_TEMP
     13716**DCL
TEMP_SAVE.V.CLINFO# IN PROCEDURE DFU_CLOSE_TEMP
     13718**DCL
TEMP_SAVE.V.CLSYSID# IN PROCEDURE DFU_CLOSE_TEMP
     13715**DCL
TEMP_SAVE.V.DCB# IN PROCEDURE DFU_CLOSE_TEMP
     13709**DCL
TEMP_SAVE.V.DESC IN PROCEDURE DFU_CLOSE_TEMP
     13713**DCL
TEMP_SAVE.V.DESC.ACTIVE# IN PROCEDURE DFU_CLOSE_TEMP
     13715**DCL
TEMP_SAVE.V.DESC.ARCHIVE# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:463  
TEMP_SAVE.V.DESC.BAD# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
TEMP_SAVE.V.DESC.BUF# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
TEMP_SAVE.V.DESC.BUPM# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
TEMP_SAVE.V.DESC.DELF# IN PROCEDURE DFU_CLOSE_TEMP
     13713**DCL
TEMP_SAVE.V.DESC.FETCH# IN PROCEDURE DFU_CLOSE_TEMP
     13715**DCL
TEMP_SAVE.V.DESC.NBUF# IN PROCEDURE DFU_CLOSE_TEMP
     13715**DCL
TEMP_SAVE.V.DESC.NOLIST# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
TEMP_SAVE.V.DESC.ODSTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
TEMP_SAVE.V.DESC.QS# IN PROCEDURE DFU_CLOSE_TEMP
     13714**DCL
TEMP_SAVE.V.DESC.TERMINATE# IN PROCEDURE DFU_CLOSE_TEMP
     13715**DCL
TEMP_SAVE.V.DESC.TPB# IN PROCEDURE DFU_CLOSE_TEMP
     13715**DCL
TEMP_SAVE.V.DISP# IN PROCEDURE DFU_CLOSE_TEMP
     13712**DCL
TEMP_SAVE.V.EFTOPER IN PROCEDURE DFU_CLOSE_TEMP
     13710**DCL
TEMP_SAVE.V.EFTOPER.ASTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13711**DCL
TEMP_SAVE.V.EFTOPER.BACKUP# IN PROCEDURE DFU_CLOSE_TEMP
     13710**DCL
TEMP_SAVE.V.EFTOPER.DELFDE# IN PROCEDURE DFU_CLOSE_TEMP
     13712**DCL
TEMP_SAVE.V.EFTOPER.ISTOW# IN PROCEDURE DFU_CLOSE_TEMP
     13711**DCL
TEMP_SAVE.V.EFTOPER.UPDDESC# IN PROCEDURE DFU_CLOSE_TEMP
     13711**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:464  
TEMP_SAVE.V.GHSTACS# IN PROCEDURE DFU_CLOSE_TEMP
     13717**DCL
TEMP_SAVE.V.LRDL0# IN PROCEDURE DFU_CLOSE_TEMP
     13719**DCL
TEMP_SAVE.V.LSLIDE# IN PROCEDURE DFU_CLOSE_TEMP
     13719**DCL
TEMP_SAVE.V.NOMARKS# IN PROCEDURE DFU_CLOSE_TEMP
     13717**DCL
TEMP_SAVE.V.OPER IN PROCEDURE DFU_CLOSE_TEMP
     13709**DCL
TEMP_SAVE.V.OPER.CHGATT# IN PROCEDURE DFU_CLOSE_TEMP
     13709**DCL
TEMP_SAVE.V.OPER.REBLD# IN PROCEDURE DFU_CLOSE_TEMP
     13710**DCL
TEMP_SAVE.V.OPER.RELG# IN PROCEDURE DFU_CLOSE_TEMP
     13709**DCL
TEMP_SAVE.V.POS# IN PROCEDURE DFU_CLOSE_TEMP
     13716**DCL
TEMP_SAVE.V.SPARE# IN PROCEDURE DFU_CLOSE_TEMP
     13719**DCL
TEMP_SAVE.V.TRUNCATE# IN PROCEDURE DFU_CLOSE_TEMP
     13712**DCL
TEMP_SAVE.V_ IN PROCEDURE DFU_CLOSE_TEMP
     13703**DCL
TOU$DFU
       138**PROC
TOU$DFU_CLOSE_TEMP
      9671**ENTRY
TOU$DFU_DF_CHECK_ALREADY_SAVED
      9331**ENTRY
TOU$DFU_DF_CHECK_FOR_KEY
      9350**ENTRY
TOU$DFU_DF_DL_CATALOG
      9410**ENTRY
TOU$DFU_DF_DL_CATALOG_ENTRY
      9365**ENTRY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:465  
TOU$DFU_DF_DL_DECK
      9380**ENTRY
TOU$DFU_DF_DL_MASTER_ENTRY
      9395**ENTRY
TOU$DFU_DF_RD_BCD_CARDS
      9258**ENTRY
TOU$DFU_DF_RD_BINARY
      9228**ENTRY
TOU$DFU_DF_RD_CATALOG_CONTROL
      9168**ENTRY
TOU$DFU_DF_RD_CATALOG_ENTRY
      9198**ENTRY
TOU$DFU_DF_RD_FILE
      9243**ENTRY
TOU$DFU_DF_RD_LAST_DECK#
      9288**ENTRY
TOU$DFU_DF_RD_LOG
      9302**ENTRY
TOU$DFU_DF_RD_MASTER_CONTROL
      9138**ENTRY
TOU$DFU_DF_RD_MASTER_ENTRY
      9153**ENTRY
TOU$DFU_DF_RD_OBJECT
      9213**ENTRY
TOU$DFU_DF_RD_OBJECT_REFLIST
      9273**ENTRY
TOU$DFU_DF_RD_REVISION
      9316**ENTRY
TOU$DFU_DF_RD_SUBCATALOG
      9183**ENTRY
TOU$DFU_DF_WR_BCD_CARDS
      9583**ENTRY
TOU$DFU_DF_WR_BINARY
      9515**ENTRY
TOU$DFU_DF_WR_CATALOG_CONTROL
      9455**ENTRY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:466  
TOU$DFU_DF_WR_CATALOG_ENTRY
      9485**ENTRY
TOU$DFU_DF_WR_DIR
      9566**ENTRY
TOU$DFU_DF_WR_FILE
      9532**ENTRY
TOU$DFU_DF_WR_HDR
      9549**ENTRY
TOU$DFU_DF_WR_LAST_DECK#
      9613**ENTRY
TOU$DFU_DF_WR_LOG
      9627**ENTRY
TOU$DFU_DF_WR_MASTER_CONTROL
      9425**ENTRY
TOU$DFU_DF_WR_MASTER_ENTRY
      9440**ENTRY
TOU$DFU_DF_WR_OBJECT
      9500**ENTRY
TOU$DFU_DF_WR_OBJECT_REFLIST
      9598**ENTRY
TOU$DFU_DF_WR_REVISION
      9641**ENTRY
TOU$DFU_DF_WR_SUBCATALOG
      9470**ENTRY
TOU$DFU_OPEN_TEMP
      9656**ENTRY
TOU$DFU_TF_RD_BCD_CARDS
      9837**ENTRY
TOU$DFU_TF_RD_BINARY
      9776**ENTRY
TOU$DFU_TF_RD_CATALOG_CONTROL
      9716**ENTRY
TOU$DFU_TF_RD_CATALOG_ENTRY
      9746**ENTRY
TOU$DFU_TF_RD_DIR
      9822**ENTRY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:467  
TOU$DFU_TF_RD_FILE
      9791**ENTRY
TOU$DFU_TF_RD_HDR
      9807**ENTRY
TOU$DFU_TF_RD_LAST_DECK#
      9867**ENTRY
TOU$DFU_TF_RD_MASTER_CONTROL
      9686**ENTRY
TOU$DFU_TF_RD_MASTER_ENTRY
      9701**ENTRY
TOU$DFU_TF_RD_OBJECT
      9761**ENTRY
TOU$DFU_TF_RD_OBJECT_REFLIST
      9852**ENTRY
TOU$DFU_TF_RD_SUBCATALOG
      9731**ENTRY
TOU$DFU_TF_WR_BCD_CARDS
     10041**ENTRY
TOU$DFU_TF_WR_BINARY
      9972**ENTRY
TOU$DFU_TF_WR_CATALOG_CONTROL
      9912**ENTRY
TOU$DFU_TF_WR_CATALOG_ENTRY
      9942**ENTRY
TOU$DFU_TF_WR_DIR
     10006**ENTRY
TOU$DFU_TF_WR_FILE
      9989**ENTRY
TOU$DFU_TF_WR_HDR
     10024**ENTRY
TOU$DFU_TF_WR_LAST_DECK#
     10071**ENTRY
TOU$DFU_TF_WR_MASTER_CONTROL
      9882**ENTRY
TOU$DFU_TF_WR_MASTER_ENTRY
      9897**ENTRY
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:468  
TOU$DFU_TF_WR_OBJECT
      9957**ENTRY
TOU$DFU_TF_WR_OBJECT_REFLIST
     10056**ENTRY
TOU$DFU_TF_WR_SUBCATALOG
      9927**ENTRY
WRITE_BCD_CARD.BUF_.BOUND IN PROCEDURE DFU_WRITE_BCD_CARDS
     12895**DCL
WRITE_BCD_CARD.BUF_.BUF$ IN PROCEDURE DFU_WRITE_BCD_CARDS
     12897**DCL
WRITE_BCD_CARD.IDBUF_ IN PROCEDURE DFU_WRITE_BCD_CARDS
     12897**DCL
WRITE_BCD_CARD.KEY_ IN PROCEDURE DFU_WRITE_BCD_CARDS
     12895**DCL
WRITE_BCD_CARD.V.DVBYTE IN PROCEDURE DFU_WRITE_BCD_CARDS
     12903**DCL
WRITE_BCD_CARD.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12904**DCL
WRITE_BCD_CARD.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12904**DCL
WRITE_BCD_CARD.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12906**DCL
WRITE_BCD_CARD.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12905**DCL
WRITE_BCD_CARD.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12904**DCL
WRITE_BCD_CARD.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12905**DCL
WRITE_BCD_CARD.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12903**DCL
WRITE_BCD_CARD.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12905**DCL
WRITE_BCD_CARD.V.EVENT# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12903**DCL
WRITE_BCD_CARD.V.FULL# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12900**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:469  
WRITE_BCD_CARD.V.ID# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12899**DCL
WRITE_BCD_CARD.V.IOERROK# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12902**DCL
WRITE_BCD_CARD.V.KEYTYPE# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12902**DCL
WRITE_BCD_CARD.V.NEWKEY# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12901**DCL
WRITE_BCD_CARD.V.NOTIME# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12901**DCL
WRITE_BCD_CARD.V.ODFNC# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12907**DCL
WRITE_BCD_CARD.V.ONEWKEY# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12900**DCL
WRITE_BCD_CARD.V.REWRITE# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12901**DCL
WRITE_BCD_CARD.V.SEED# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12903**DCL
WRITE_BCD_CARD.V.WAIT# IN PROCEDURE DFU_WRITE_BCD_CARDS
     12898**DCL
WRITE_BCD_CARD.V_ IN PROCEDURE DFU_WRITE_BCD_CARDS
     12895**DCL
WRITE_BINARY_DECK.BUF_.BUF$ IN PROCEDURE DFU_WRITE_BINARY
     12802**DCL
WRITE_BINARY_DECK.IDBUF_ IN PROCEDURE DFU_WRITE_BINARY
     12802**DCL
WRITE_BINARY_DECK.KEY_ IN PROCEDURE DFU_WRITE_BINARY
     12800**DCL
WRITE_BINARY_DECK.V.DVBYTE IN PROCEDURE DFU_WRITE_BINARY
     12808**DCL
WRITE_BINARY_DECK.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_BINARY
     12809**DCL
WRITE_BINARY_DECK.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_BINARY
     12809**DCL
WRITE_BINARY_DECK.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_BINARY
     12811**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:470  
WRITE_BINARY_DECK.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_BINARY
     12810**DCL
WRITE_BINARY_DECK.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_BINARY
     12809**DCL
WRITE_BINARY_DECK.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_BINARY
     12810**DCL
WRITE_BINARY_DECK.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_BINARY
     12808**DCL
WRITE_BINARY_DECK.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_BINARY
     12810**DCL
WRITE_BINARY_DECK.V.EVENT# IN PROCEDURE DFU_WRITE_BINARY
     12808**DCL
WRITE_BINARY_DECK.V.FULL# IN PROCEDURE DFU_WRITE_BINARY
     12805**DCL
WRITE_BINARY_DECK.V.ID# IN PROCEDURE DFU_WRITE_BINARY
     12804**DCL
WRITE_BINARY_DECK.V.IOERROK# IN PROCEDURE DFU_WRITE_BINARY
     12807**DCL
WRITE_BINARY_DECK.V.KEYTYPE# IN PROCEDURE DFU_WRITE_BINARY
     12807**DCL
WRITE_BINARY_DECK.V.NEWKEY# IN PROCEDURE DFU_WRITE_BINARY
     12806**DCL
WRITE_BINARY_DECK.V.NOTIME# IN PROCEDURE DFU_WRITE_BINARY
     12806**DCL
WRITE_BINARY_DECK.V.ODFNC# IN PROCEDURE DFU_WRITE_BINARY
     12812**DCL
WRITE_BINARY_DECK.V.ONEWKEY# IN PROCEDURE DFU_WRITE_BINARY
     12805**DCL
WRITE_BINARY_DECK.V.REWRITE# IN PROCEDURE DFU_WRITE_BINARY
     12806**DCL
WRITE_BINARY_DECK.V.SEED# IN PROCEDURE DFU_WRITE_BINARY
     12808**DCL
WRITE_BINARY_DECK.V.WAIT# IN PROCEDURE DFU_WRITE_BINARY
     12803**DCL
WRITE_BINARY_DECK.V_ IN PROCEDURE DFU_WRITE_BINARY
     12800**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:471  
WRITE_CATALOG_CONTROL.BUF_ IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12381**DCL
WRITE_CATALOG_CONTROL.BUF_.BOUND IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12381**DCL
WRITE_CATALOG_CONTROL.BUF_.BUF$ IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12383**DCL
WRITE_CATALOG_CONTROL.IDBUF_ IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12383**DCL
WRITE_CATALOG_CONTROL.KEY_ IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12381**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12389**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12390**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12390**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12392**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12391**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12390**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12391**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12389**DCL
WRITE_CATALOG_CONTROL.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12391**DCL
WRITE_CATALOG_CONTROL.V.EVENT# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12389**DCL
WRITE_CATALOG_CONTROL.V.FULL# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12386**DCL
WRITE_CATALOG_CONTROL.V.ID# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12385**DCL
WRITE_CATALOG_CONTROL.V.IOERROK# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12388**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:472  
WRITE_CATALOG_CONTROL.V.KEYTYPE# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12388**DCL
WRITE_CATALOG_CONTROL.V.NEWKEY# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12387**DCL
WRITE_CATALOG_CONTROL.V.NOTIME# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12387**DCL
WRITE_CATALOG_CONTROL.V.ODFNC# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12393**DCL
WRITE_CATALOG_CONTROL.V.ONEWKEY# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12386**DCL
WRITE_CATALOG_CONTROL.V.REWRITE# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12387**DCL
WRITE_CATALOG_CONTROL.V.SEED# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12389**DCL
WRITE_CATALOG_CONTROL.V.WAIT# IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12384**DCL
WRITE_CATALOG_CONTROL.V_ IN PROCEDURE DFU_WRITE_CATALOG_CONTROL
     12381**DCL
WRITE_CATALOG_ENTRY.BUF_ IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12573**DCL
WRITE_CATALOG_ENTRY.BUF_.BOUND IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12573**DCL
WRITE_CATALOG_ENTRY.BUF_.BUF$ IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12575**DCL
WRITE_CATALOG_ENTRY.IDBUF_ IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12575**DCL
WRITE_CATALOG_ENTRY.KEY_ IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12573**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12581**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12582**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12582**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12584**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:473  
WRITE_CATALOG_ENTRY.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12583**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12582**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12583**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12581**DCL
WRITE_CATALOG_ENTRY.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12583**DCL
WRITE_CATALOG_ENTRY.V.EVENT# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12581**DCL
WRITE_CATALOG_ENTRY.V.FULL# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12578**DCL
WRITE_CATALOG_ENTRY.V.ID# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12577**DCL
WRITE_CATALOG_ENTRY.V.IOERROK# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12580**DCL
WRITE_CATALOG_ENTRY.V.KEYTYPE# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12580**DCL
WRITE_CATALOG_ENTRY.V.NEWKEY# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12579**DCL
WRITE_CATALOG_ENTRY.V.NOTIME# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12579**DCL
WRITE_CATALOG_ENTRY.V.ODFNC# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12585**DCL
WRITE_CATALOG_ENTRY.V.ONEWKEY# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12578**DCL
WRITE_CATALOG_ENTRY.V.REWRITE# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12579**DCL
WRITE_CATALOG_ENTRY.V.SEED# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12581**DCL
WRITE_CATALOG_ENTRY.V.WAIT# IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12576**DCL
WRITE_CATALOG_ENTRY.V_ IN PROCEDURE DFU_WRITE_CATALOG_ENTRY
     12573**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:474  
WRITE_DECKFILE_LOG.BUF_.BUF$ IN PROCEDURE DFU_WRITE_LOG
     13191**DCL
WRITE_DECKFILE_LOG.IDBUF_ IN PROCEDURE DFU_WRITE_LOG
     13191**DCL
WRITE_DECKFILE_LOG.KEY_ IN PROCEDURE DFU_WRITE_LOG
     13189**DCL
WRITE_DECKFILE_LOG.V.DCB# IN PROCEDURE DFU_WRITE_LOG
     13192**DCL
WRITE_DECKFILE_LOG.V.DVBYTE IN PROCEDURE DFU_WRITE_LOG
     13197**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_LOG
     13198**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_LOG
     13198**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_LOG
     13200**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_LOG
     13199**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_LOG
     13198**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_LOG
     13199**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_LOG
     13197**DCL
WRITE_DECKFILE_LOG.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_LOG
     13199**DCL
WRITE_DECKFILE_LOG.V.EVENT# IN PROCEDURE DFU_WRITE_LOG
     13197**DCL
WRITE_DECKFILE_LOG.V.FULL# IN PROCEDURE DFU_WRITE_LOG
     13194**DCL
WRITE_DECKFILE_LOG.V.ID# IN PROCEDURE DFU_WRITE_LOG
     13193**DCL
WRITE_DECKFILE_LOG.V.IOERROK# IN PROCEDURE DFU_WRITE_LOG
     13196**DCL
WRITE_DECKFILE_LOG.V.KEYTYPE# IN PROCEDURE DFU_WRITE_LOG
     13196**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:475  
WRITE_DECKFILE_LOG.V.NEWKEY# IN PROCEDURE DFU_WRITE_LOG
     13195**DCL
WRITE_DECKFILE_LOG.V.NOTIME# IN PROCEDURE DFU_WRITE_LOG
     13195**DCL
WRITE_DECKFILE_LOG.V.ODFNC# IN PROCEDURE DFU_WRITE_LOG
     13201**DCL
WRITE_DECKFILE_LOG.V.ONEWKEY# IN PROCEDURE DFU_WRITE_LOG
     13194**DCL
WRITE_DECKFILE_LOG.V.REWRITE# IN PROCEDURE DFU_WRITE_LOG
     13195**DCL
WRITE_DECKFILE_LOG.V.SEED# IN PROCEDURE DFU_WRITE_LOG
     13197**DCL
WRITE_DECKFILE_LOG.V.WAIT# IN PROCEDURE DFU_WRITE_LOG
     13192**DCL
WRITE_DECKFILE_LOG.V_ IN PROCEDURE DFU_WRITE_LOG
     13189**DCL
WRITE_DECKFILE_REVISION.BUF_ IN PROCEDURE DFU_WRITE_REVISION
     13285**DCL
WRITE_DECKFILE_REVISION.BUF_.BOUND IN PROCEDURE DFU_WRITE_REVISION
     13285**DCL
WRITE_DECKFILE_REVISION.BUF_.BUF$ IN PROCEDURE DFU_WRITE_REVISION
     13287**DCL
WRITE_DECKFILE_REVISION.IDBUF_ IN PROCEDURE DFU_WRITE_REVISION
     13287**DCL
WRITE_DECKFILE_REVISION.KEY_ IN PROCEDURE DFU_WRITE_REVISION
     13285**DCL
WRITE_DECKFILE_REVISION.V.DCB# IN PROCEDURE DFU_WRITE_REVISION
     13288**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE IN PROCEDURE DFU_WRITE_REVISION
     13293**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_REVISION
     13294**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_REVISION
     13294**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_REVISION
     13296**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:476  
WRITE_DECKFILE_REVISION.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_REVISION
     13295**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_REVISION
     13294**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_REVISION
     13295**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_REVISION
     13293**DCL
WRITE_DECKFILE_REVISION.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_REVISION
     13295**DCL
WRITE_DECKFILE_REVISION.V.EVENT# IN PROCEDURE DFU_WRITE_REVISION
     13293**DCL
WRITE_DECKFILE_REVISION.V.FULL# IN PROCEDURE DFU_WRITE_REVISION
     13290**DCL
WRITE_DECKFILE_REVISION.V.ID# IN PROCEDURE DFU_WRITE_REVISION
     13289**DCL
WRITE_DECKFILE_REVISION.V.IOERROK# IN PROCEDURE DFU_WRITE_REVISION
     13292**DCL
WRITE_DECKFILE_REVISION.V.KEYTYPE# IN PROCEDURE DFU_WRITE_REVISION
     13292**DCL
WRITE_DECKFILE_REVISION.V.NEWKEY# IN PROCEDURE DFU_WRITE_REVISION
     13291**DCL
WRITE_DECKFILE_REVISION.V.NOTIME# IN PROCEDURE DFU_WRITE_REVISION
     13291**DCL
WRITE_DECKFILE_REVISION.V.ODFNC# IN PROCEDURE DFU_WRITE_REVISION
     13297**DCL
WRITE_DECKFILE_REVISION.V.ONEWKEY# IN PROCEDURE DFU_WRITE_REVISION
     13290**DCL
WRITE_DECKFILE_REVISION.V.REWRITE# IN PROCEDURE DFU_WRITE_REVISION
     13291**DCL
WRITE_DECKFILE_REVISION.V.SEED# IN PROCEDURE DFU_WRITE_REVISION
     13293**DCL
WRITE_DECKFILE_REVISION.V.WAIT# IN PROCEDURE DFU_WRITE_REVISION
     13288**DCL
WRITE_DECKFILE_REVISION.V_ IN PROCEDURE DFU_WRITE_REVISION
     13285**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:477  
WRITE_LAST_DECK#.BUF_ IN PROCEDURE DFU_WRITE_LAST_DECK#
     13090**DCL
WRITE_LAST_DECK#.BUF_.BOUND IN PROCEDURE DFU_WRITE_LAST_DECK#
     13090**DCL
WRITE_LAST_DECK#.BUF_.BUF$ IN PROCEDURE DFU_WRITE_LAST_DECK#
     13092**DCL
WRITE_LAST_DECK#.IDBUF_ IN PROCEDURE DFU_WRITE_LAST_DECK#
     13092**DCL
WRITE_LAST_DECK#.KEY_ IN PROCEDURE DFU_WRITE_LAST_DECK#
     13090**DCL
WRITE_LAST_DECK#.V.DVBYTE IN PROCEDURE DFU_WRITE_LAST_DECK#
     13098**DCL
WRITE_LAST_DECK#.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13099**DCL
WRITE_LAST_DECK#.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13099**DCL
WRITE_LAST_DECK#.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13101**DCL
WRITE_LAST_DECK#.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13100**DCL
WRITE_LAST_DECK#.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13099**DCL
WRITE_LAST_DECK#.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13100**DCL
WRITE_LAST_DECK#.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13098**DCL
WRITE_LAST_DECK#.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13100**DCL
WRITE_LAST_DECK#.V.EVENT# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13098**DCL
WRITE_LAST_DECK#.V.FULL# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13095**DCL
WRITE_LAST_DECK#.V.ID# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13094**DCL
WRITE_LAST_DECK#.V.IOERROK# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13097**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:478  
WRITE_LAST_DECK#.V.KEYTYPE# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13097**DCL
WRITE_LAST_DECK#.V.NEWKEY# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13096**DCL
WRITE_LAST_DECK#.V.NOTIME# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13096**DCL
WRITE_LAST_DECK#.V.ODFNC# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13102**DCL
WRITE_LAST_DECK#.V.ONEWKEY# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13095**DCL
WRITE_LAST_DECK#.V.REWRITE# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13096**DCL
WRITE_LAST_DECK#.V.SEED# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13098**DCL
WRITE_LAST_DECK#.V.WAIT# IN PROCEDURE DFU_WRITE_LAST_DECK#
     13093**DCL
WRITE_LAST_DECK#.V_ IN PROCEDURE DFU_WRITE_LAST_DECK#
     13090**DCL
WRITE_MASTER_CONTROL.BUF_ IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12190**DCL
WRITE_MASTER_CONTROL.BUF_.BOUND IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12190**DCL
WRITE_MASTER_CONTROL.BUF_.BUF$ IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12192**DCL
WRITE_MASTER_CONTROL.IDBUF_ IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12192**DCL
WRITE_MASTER_CONTROL.KEY_ IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12190**DCL
WRITE_MASTER_CONTROL.V.DVBYTE IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12198**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12199**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12199**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12201**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:479  
WRITE_MASTER_CONTROL.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12200**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12199**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12200**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12198**DCL
WRITE_MASTER_CONTROL.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12200**DCL
WRITE_MASTER_CONTROL.V.EVENT# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12198**DCL
WRITE_MASTER_CONTROL.V.FULL# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12195**DCL
WRITE_MASTER_CONTROL.V.ID# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12194**DCL
WRITE_MASTER_CONTROL.V.IOERROK# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12197**DCL
WRITE_MASTER_CONTROL.V.KEYTYPE# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12197**DCL
WRITE_MASTER_CONTROL.V.NEWKEY# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12196**DCL
WRITE_MASTER_CONTROL.V.NOTIME# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12196**DCL
WRITE_MASTER_CONTROL.V.ODFNC# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12202**DCL
WRITE_MASTER_CONTROL.V.ONEWKEY# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12195**DCL
WRITE_MASTER_CONTROL.V.REWRITE# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12196**DCL
WRITE_MASTER_CONTROL.V.SEED# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12198**DCL
WRITE_MASTER_CONTROL.V.WAIT# IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12193**DCL
WRITE_MASTER_CONTROL.V_ IN PROCEDURE DFU_WRITE_MASTER_CONTROL
     12190**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:480  
WRITE_MASTER_ENTRY.BUF_ IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12285**DCL
WRITE_MASTER_ENTRY.BUF_.BOUND IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12285**DCL
WRITE_MASTER_ENTRY.BUF_.BUF$ IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12287**DCL
WRITE_MASTER_ENTRY.IDBUF_ IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12287**DCL
WRITE_MASTER_ENTRY.KEY_ IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12285**DCL
WRITE_MASTER_ENTRY.V.DVBYTE IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12293**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12294**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12294**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12296**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12295**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12294**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12295**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12293**DCL
WRITE_MASTER_ENTRY.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12295**DCL
WRITE_MASTER_ENTRY.V.EVENT# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12293**DCL
WRITE_MASTER_ENTRY.V.FULL# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12290**DCL
WRITE_MASTER_ENTRY.V.ID# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12289**DCL
WRITE_MASTER_ENTRY.V.IOERROK# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12292**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:481  
WRITE_MASTER_ENTRY.V.KEYTYPE# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12292**DCL
WRITE_MASTER_ENTRY.V.NEWKEY# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12291**DCL
WRITE_MASTER_ENTRY.V.NOTIME# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12291**DCL
WRITE_MASTER_ENTRY.V.ODFNC# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12297**DCL
WRITE_MASTER_ENTRY.V.ONEWKEY# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12290**DCL
WRITE_MASTER_ENTRY.V.REWRITE# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12291**DCL
WRITE_MASTER_ENTRY.V.SEED# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12293**DCL
WRITE_MASTER_ENTRY.V.WAIT# IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12288**DCL
WRITE_MASTER_ENTRY.V_ IN PROCEDURE DFU_WRITE_MASTER_ENTRY
     12285**DCL
WRITE_OBJECT.BUF_ IN PROCEDURE DFU_WRITE_OBJECT
     12717**DCL
WRITE_OBJECT.BUF_.BOUND IN PROCEDURE DFU_WRITE_OBJECT
     12717**DCL
WRITE_OBJECT.BUF_.BUF$ IN PROCEDURE DFU_WRITE_OBJECT
     12719**DCL
WRITE_OBJECT.IDBUF_ IN PROCEDURE DFU_WRITE_OBJECT
     12719**DCL
WRITE_OBJECT.KEY_ IN PROCEDURE DFU_WRITE_OBJECT
     12717**DCL
WRITE_OBJECT.V.DVBYTE IN PROCEDURE DFU_WRITE_OBJECT
     12725**DCL
WRITE_OBJECT.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_OBJECT
     12726**DCL
WRITE_OBJECT.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_OBJECT
     12726**DCL
WRITE_OBJECT.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_OBJECT
     12728**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:482  
WRITE_OBJECT.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_OBJECT
     12727**DCL
WRITE_OBJECT.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_OBJECT
     12726**DCL
WRITE_OBJECT.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_OBJECT
     12727**DCL
WRITE_OBJECT.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_OBJECT
     12725**DCL
WRITE_OBJECT.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_OBJECT
     12727**DCL
WRITE_OBJECT.V.EVENT# IN PROCEDURE DFU_WRITE_OBJECT
     12725**DCL
WRITE_OBJECT.V.FULL# IN PROCEDURE DFU_WRITE_OBJECT
     12722**DCL
WRITE_OBJECT.V.ID# IN PROCEDURE DFU_WRITE_OBJECT
     12721**DCL
WRITE_OBJECT.V.IOERROK# IN PROCEDURE DFU_WRITE_OBJECT
     12724**DCL
WRITE_OBJECT.V.KEYTYPE# IN PROCEDURE DFU_WRITE_OBJECT
     12724**DCL
WRITE_OBJECT.V.NEWKEY# IN PROCEDURE DFU_WRITE_OBJECT
     12723**DCL
WRITE_OBJECT.V.NOTIME# IN PROCEDURE DFU_WRITE_OBJECT
     12723**DCL
WRITE_OBJECT.V.ODFNC# IN PROCEDURE DFU_WRITE_OBJECT
     12729**DCL
WRITE_OBJECT.V.ONEWKEY# IN PROCEDURE DFU_WRITE_OBJECT
     12722**DCL
WRITE_OBJECT.V.REWRITE# IN PROCEDURE DFU_WRITE_OBJECT
     12723**DCL
WRITE_OBJECT.V.SEED# IN PROCEDURE DFU_WRITE_OBJECT
     12725**DCL
WRITE_OBJECT.V.WAIT# IN PROCEDURE DFU_WRITE_OBJECT
     12720**DCL
WRITE_OBJECT.V_ IN PROCEDURE DFU_WRITE_OBJECT
     12717**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:483  
WRITE_OBJECT_REFLIST.BUF_ IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12998**DCL
WRITE_OBJECT_REFLIST.BUF_.BUF$ IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13000**DCL
WRITE_OBJECT_REFLIST.IDBUF_ IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13000**DCL
WRITE_OBJECT_REFLIST.KEY_ IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12998**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13006**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13007**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13007**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13009**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13008**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13007**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13008**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13006**DCL
WRITE_OBJECT_REFLIST.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13008**DCL
WRITE_OBJECT_REFLIST.V.EVENT# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13006**DCL
WRITE_OBJECT_REFLIST.V.FULL# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13003**DCL
WRITE_OBJECT_REFLIST.V.ID# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13002**DCL
WRITE_OBJECT_REFLIST.V.IOERROK# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13005**DCL
WRITE_OBJECT_REFLIST.V.KEYTYPE# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13005**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:484  
WRITE_OBJECT_REFLIST.V.NEWKEY# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13004**DCL
WRITE_OBJECT_REFLIST.V.NOTIME# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13004**DCL
WRITE_OBJECT_REFLIST.V.ODFNC# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13010**DCL
WRITE_OBJECT_REFLIST.V.ONEWKEY# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13003**DCL
WRITE_OBJECT_REFLIST.V.REWRITE# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13004**DCL
WRITE_OBJECT_REFLIST.V.SEED# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13006**DCL
WRITE_OBJECT_REFLIST.V.WAIT# IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     13001**DCL
WRITE_OBJECT_REFLIST.V_ IN PROCEDURE DFU_WRITE_OBJECT_REFLIST
     12998**DCL
WRITE_SUBCATALOG.BUF_ IN PROCEDURE DFU_WRITE_SUBCATALOG
     12479**DCL
WRITE_SUBCATALOG.BUF_.BOUND IN PROCEDURE DFU_WRITE_SUBCATALOG
     12479**DCL
WRITE_SUBCATALOG.BUF_.BUF$ IN PROCEDURE DFU_WRITE_SUBCATALOG
     12481**DCL
WRITE_SUBCATALOG.IDBUF_ IN PROCEDURE DFU_WRITE_SUBCATALOG
     12481**DCL
WRITE_SUBCATALOG.KEY_ IN PROCEDURE DFU_WRITE_SUBCATALOG
     12479**DCL
WRITE_SUBCATALOG.V.DVBYTE IN PROCEDURE DFU_WRITE_SUBCATALOG
     12487**DCL
WRITE_SUBCATALOG.V.DVBYTE.BIN# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12488**DCL
WRITE_SUBCATALOG.V.DVBYTE.BP# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12488**DCL
WRITE_SUBCATALOG.V.DVBYTE.CONT# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12490**DCL
WRITE_SUBCATALOG.V.DVBYTE.NODAT# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12489**DCL
PL6.E3A0      #001=TOU$DFU File=TOU$DFU.:E05TSI                                  WED 07/30/97 06:42 Page:485  
WRITE_SUBCATALOG.V.DVBYTE.REREAD# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12488**DCL
WRITE_SUBCATALOG.V.DVBYTE.RRR# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12489**DCL
WRITE_SUBCATALOG.V.DVBYTE.TOP# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12487**DCL
WRITE_SUBCATALOG.V.DVBYTE.TRANS# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12489**DCL
WRITE_SUBCATALOG.V.EVENT# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12487**DCL
WRITE_SUBCATALOG.V.FULL# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12484**DCL
WRITE_SUBCATALOG.V.ID# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12483**DCL
WRITE_SUBCATALOG.V.IOERROK# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12486**DCL
WRITE_SUBCATALOG.V.KEYTYPE# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12486**DCL
WRITE_SUBCATALOG.V.NEWKEY# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12485**DCL
WRITE_SUBCATALOG.V.NOTIME# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12485**DCL
WRITE_SUBCATALOG.V.ODFNC# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12491**DCL
WRITE_SUBCATALOG.V.ONEWKEY# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12484**DCL
WRITE_SUBCATALOG.V.REWRITE# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12485**DCL
WRITE_SUBCATALOG.V.SEED# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12487**DCL
WRITE_SUBCATALOG.V.WAIT# IN PROCEDURE DFU_WRITE_SUBCATALOG
     12482**DCL
WRITE_SUBCATALOG.V_ IN PROCEDURE DFU_WRITE_SUBCATALOG
     12479**DCL
