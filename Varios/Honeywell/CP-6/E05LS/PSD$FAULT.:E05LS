VERSION E05

PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:1    
        1        1        /*M*  PSD$FAULT   Display information on hardware faults */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSD$FAULT: PROC;
        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386    1   DCL FAULT_TITLES (0:22) CHAR (20) CONSTANT INIT (
       12     5387    1         'Safe-store',
       13     5388    1         'Shutdown',
       14     5389    1         'Memory',
       15     5390    1         'MME',
       16     5391    1         'Fault-tag',
       17     5392    1         'Timer runout',
       18     5393    1         'Command',
       19     5394    1         'Derail',
       20     5395    1         'Lockup',
       21     5396    1         'Connect',
       22     5397    1         'Parity',
       23     5398    1         'IPR',
       24     5399    1         'Op not complete',
       25     5400    1         'Startup',
       26     5401    1         'Overflow',
       27     5402    1         'Divide check',
       28     5403    1         'Execute',
       29     5404    1         'Security 1',
       30     5405    1         'Dynamic linking',
       31     5406    1         'Missing segment',
       32     5407    1         'Missing WS',
       33     5408    1         'Missing page',
       34     5409    1         'Security 2');
       35     5410        %EJECT;
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:2    
       36     5411    1   DCL 1 FAULT_INFO STATIC,
       37     5412    1         2 TITLE CHAR (20),
       38     5413    1         2 TOTAL_ALL UBIN,
       39     5414    1         2 TOTAL_SNAP UBIN,
       40     5415    1         2 RATE_ALL UBIN,
       41     5416    1         2 RATE_SNAP UBIN;
       42     5417    1   DCL I UBIN;
       43     5418    1   DCL OLD$ PTR;
       44     5419    1   DCL NEW$ PTR;
       45     5420    1   DCL OLD UBIN;
       46     5421    1   DCL NEW UBIN;
       47     5422
       48     5423    1   DCL 1 FAULT_HDR CONSTANT,
       49     5424    1         2 P1 CHAR (0) INIT ('%/Fault type%26-Total faults%43-Faults per minute'),
       50     5425    1         2 P2 CHAR (0) INIT ('%/%23-  {all}  {snap}%43-  {all}  {snap}%/');
       51     5426
       52     5427
       53     5428    1   DCL 1 FAULT_FORMAT CONSTANT,
       54     5429    1         2 P1 CHAR (0) INIT ('%20A%23-%7D %7D%43-%7D %7D');
       55     5430
       56     5431        %INCLUDE XUF_ENTRY;
       57     5439    1   DCL PSL$LOCATE ENTRY (3);
       58     5440    1   DCL PSL$CHOMP ENTRY (5);
       59     5441    1   DCL PSD$SKIP ENTRY;
       60     5442    1   DCL PSD$EJECT ENTRY (1);
       61     5443        %EJECT;
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:3    
       62     5444    1      IF PS_OLD_PMDAT$ = ADDR(NIL)
       63     5445    1        THEN
       64     5446    1         CALL PSD$EJECT;
       65     5447    1        ELSE
       66     5448    1         CALL PSD$EJECT (8);
       67     5449
       68     5450    1      CALL X$WRITE (PS_FDS, VECTOR(FAULT_HDR));
       69     5451
       70     5452    1      CALL PSL$LOCATE (H_FLTCNT#, NEW$, OLD$);
       71     5453
       72     5454    2      DO I = 0 TO 22;
       73     5455
       74     5456    2         FAULT_INFO.TITLE = FAULT_TITLES(I);
       75     5457
       76     5458    2         NEW = NEW$ -> BLOCK.DATA(I);
       77     5459
       78     5460    2         IF OLD$ = ADDR(NIL)
       79     5461    2           THEN
       80     5462    2            OLD = 0;
       81     5463    2           ELSE
       82     5464    2            OLD = OLD$ -> BLOCK.DATA(I);
       83     5465
       84     5466    2         CALL PSL$CHOMP (OLD, NEW, DIFF#, FAULT_INFO.TOTAL_ALL,
       85     5467    2          FAULT_INFO.TOTAL_SNAP);
       86     5468
       87     5469    2         CALL PSL$CHOMP (OLD, NEW, RATE#, FAULT_INFO.RATE_ALL,
       88     5470    2          FAULT_INFO.RATE_SNAP);
       89     5471
       90     5472    2         IF FAULT_INFO.TOTAL_SNAP > 0
       91     5473    2          OR OLD$ = ADDR(NIL)
       92     5474    2           THEN
       93     5475    2            CALL X$WRITE (PS_FDS, VECTOR(FAULT_FORMAT), VECTOR(FAULT_INFO));
       94     5476
       95     5477    2         END;
       96     5478
       97     5479    1      CALL PSD$SKIP;
       98     5480
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:4    
       99     5481    1      RETURN;
      100     5482
      101     5483    1   END PSD$FAULT;

PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:5    
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$FAULT.

   Procedure PSD$FAULT requires 87 words for executable code.
   Procedure PSD$FAULT requires 16 words of local(AUTO) storage.

    No errors detected in file PSD$FAULT.:E05TSI    .

PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:6    

 Object Unit name= PSD$FAULT                                  File name= PSD$FAULT.:E05TOU
 UTS= JUL 30 '97 04:26:40.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11  RoData even  UTS    145    221  PSD$FAULT
   12   Data  even  none     9     11  PSD$FAULT
   13   Proc  even  none    87    127  PSD$FAULT
   14  RoData even  none    23     27  PSD$FAULT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    13      0   yes            yes      Std        0  PSD$FAULT
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 PSD$EJECT
         yes           Std      22 X$WRITE
         yes           Std       5 PSL$CHOMP
         yes           Std       3 PSL$LOCATE
         yes           Std       0 PSD$SKIP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_OLD_PMDAT$                         PS_BUFFER
     PS_STATS$                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:8    


        1        1        /*M*  PSD$FAULT   Display information on hardware faults */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSD$FAULT: PROC;

      8 13 000000   000000 700200 xent  PSD$FAULT    TSX0  ! X66_AUTO_0
        13 000001   000020 000000                    ZERO    16,0

        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386    1   DCL FAULT_TITLES (0:22) CHAR (20) CONSTANT INIT (
       12     5387    1         'Safe-store',
       13     5388    1         'Shutdown',
       14     5389    1         'Memory',
       15     5390    1         'MME',
       16     5391    1         'Fault-tag',
       17     5392    1         'Timer runout',
       18     5393    1         'Command',
       19     5394    1         'Derail',
       20     5395    1         'Lockup',
       21     5396    1         'Connect',
       22     5397    1         'Parity',
       23     5398    1         'IPR',
       24     5399    1         'Op not complete',
       25     5400    1         'Startup',
       26     5401    1         'Overflow',
       27     5402    1         'Divide check',
       28     5403    1         'Execute',
       29     5404    1         'Security 1',
       30     5405    1         'Dynamic linking',
       31     5406    1         'Missing segment',
       32     5407    1         'Missing WS',
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:9    
       33     5408    1         'Missing page',
       34     5409    1         'Security 2');
       35     5410        %EJECT;
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:10   
       36     5411    1   DCL 1 FAULT_INFO STATIC,
       37     5412    1         2 TITLE CHAR (20),
       38     5413    1         2 TOTAL_ALL UBIN,
       39     5414    1         2 TOTAL_SNAP UBIN,
       40     5415    1         2 RATE_ALL UBIN,
       41     5416    1         2 RATE_SNAP UBIN;
       42     5417    1   DCL I UBIN;
       43     5418    1   DCL OLD$ PTR;
       44     5419    1   DCL NEW$ PTR;
       45     5420    1   DCL OLD UBIN;
       46     5421    1   DCL NEW UBIN;
       47     5422
       48     5423    1   DCL 1 FAULT_HDR CONSTANT,
       49     5424    1         2 P1 CHAR (0) INIT ('%/Fault type%26-Total faults%43-Faults per minute'),
       50     5425    1         2 P2 CHAR (0) INIT ('%/%23-  {all}  {snap}%43-  {all}  {snap}%/');
       51     5426
       52     5427
       53     5428    1   DCL 1 FAULT_FORMAT CONSTANT,
       54     5429    1         2 P1 CHAR (0) INIT ('%20A%23-%7D %7D%43-%7D %7D');
       55     5430
       56     5431        %INCLUDE XUF_ENTRY;
       57     5439    1   DCL PSL$LOCATE ENTRY (3);
       58     5440    1   DCL PSL$CHOMP ENTRY (5);
       59     5441    1   DCL PSD$SKIP ENTRY;
       60     5442    1   DCL PSD$EJECT ENTRY (1);
       61     5443        %EJECT;
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:11   
       62     5444    1      IF PS_OLD_PMDAT$ = ADDR(NIL)

   5444 13 000002   000000 236000 xsym               LDQ     PS_OLD_PMDAT$
        13 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000004   000011 601000 13                 TNZ     s:5448

       63     5445    1        THEN
       64     5446    1         CALL PSD$EJECT;

   5446 13 000005   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000006   000000 701000 xent               TSX1    PSD$EJECT
        13 000007   000000 011000                    NOP     0
        13 000010   000015 710000 13                 TRA     s:5450

       65     5447    1        ELSE
       66     5448    1         CALL PSD$EJECT (8);

   5448 13 000011   000000 630400 14                 EPPR0   0
        13 000012   000017 631400 xsym               EPPR1   B_VECTNIL+15
        13 000013   000000 701000 xent               TSX1    PSD$EJECT
        13 000014   000000 011000                    NOP     0

       67     5449
       68     5450    1      CALL X$WRITE (PS_FDS, VECTOR(FAULT_HDR));

   5450 13 000015   000004 630400 14                 EPPR0   4
        13 000016   000020 631400 xsym               EPPR1   B_VECTNIL+16
        13 000017   000000 701000 xent               TSX1    X$WRITE
        13 000020   000000 011000                    NOP     0

       69     5451
       70     5452    1      CALL PSL$LOCATE (H_FLTCNT#, NEW$, OLD$);

   5452 13 000021   200005 630500                    EPPR0   OLD$,,AUTO
        13 000022   200014 450500                    STP0    NEW+4,,AUTO
        13 000023   200006 631500                    EPPR1   NEW$,,AUTO
        13 000024   200013 451500                    STP1    NEW+3,,AUTO
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:12   
        13 000025   000007 236000 14                 LDQ     7
        13 000026   200012 756100                    STQ     NEW+2,,AUTO
        13 000027   200012 630500                    EPPR0   NEW+2,,AUTO
        13 000030   000021 631400 xsym               EPPR1   B_VECTNIL+17
        13 000031   000000 701000 xent               TSX1    PSL$LOCATE
        13 000032   000000 011000                    NOP     0

       71     5453
       72     5454    2      DO I = 0 TO 22;

   5454 13 000033   200004 450100                    STZ     I,,AUTO

       73     5455
       74     5456    2         FAULT_INFO.TITLE = FAULT_TITLES(I);

   5456 13 000034   200004 236100                    LDQ     I,,AUTO
        13 000035   000024 402007                    MPY     20,DL
        13 000036   040000 100406                    MLR     fill='040'O
        13 000037   000000 000024 11                 ADSC9   FAULT_TITLES,Q           cn=0,n=20
        13 000040   000000 000024 12                 ADSC9   FAULT_INFO               cn=0,n=20

       75     5457
       76     5458    2         NEW = NEW$ -> BLOCK.DATA(I);

   5458 13 000041   200006 470500                    LDP0    NEW$,,AUTO
        13 000042   200004 720100                    LXL0    I,,AUTO
        13 000043   000002 235110                    LDA     2,X0,PR0
        13 000044   200010 755100                    STA     NEW,,AUTO

       77     5459
       78     5460    2         IF OLD$ = ADDR(NIL)

   5460 13 000045   200005 236100                    LDQ     OLD$,,AUTO
        13 000046   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000047   000052 601000 13                 TNZ     s:5464

       79     5461    2           THEN
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:13   
       80     5462    2            OLD = 0;

   5462 13 000050   200007 450100                    STZ     OLD,,AUTO
        13 000051   000055 710000 13                 TRA     s:5466

       81     5463    2           ELSE
       82     5464    2            OLD = OLD$ -> BLOCK.DATA(I);

   5464 13 000052   200005 471500                    LDP1    OLD$,,AUTO
        13 000053   100002 235110                    LDA     2,X0,PR1
        13 000054   200007 755100                    STA     OLD,,AUTO

       83     5465
       84     5466    2         CALL PSL$CHOMP (OLD, NEW, DIFF#, FAULT_INFO.TOTAL_ALL,

   5466 13 000055   000010 236000 14                 LDQ     8
        13 000056   200016 756100                    STQ     NEW+6,,AUTO
        13 000057   000012 237000 14                 LDAQ    10
        13 000060   200014 757100                    STAQ    NEW+4,,AUTO
        13 000061   200010 631500                    EPPR1   NEW,,AUTO
        13 000062   200013 451500                    STP1    NEW+3,,AUTO
        13 000063   200007 633500                    EPPR3   OLD,,AUTO
        13 000064   200012 453500                    STP3    NEW+2,,AUTO
        13 000065   200012 630500                    EPPR0   NEW+2,,AUTO
        13 000066   000023 631400 xsym               EPPR1   B_VECTNIL+19
        13 000067   000000 701000 xent               TSX1    PSL$CHOMP
        13 000070   000000 011000                    NOP     0

       85     5467    2          FAULT_INFO.TOTAL_SNAP);
       86     5468
       87     5469    2         CALL PSL$CHOMP (OLD, NEW, RATE#, FAULT_INFO.RATE_ALL,

   5469 13 000071   000014 236000 14                 LDQ     12
        13 000072   200016 756100                    STQ     NEW+6,,AUTO
        13 000073   000016 237000 14                 LDAQ    14
        13 000074   200014 757100                    STAQ    NEW+4,,AUTO
        13 000075   200010 630500                    EPPR0   NEW,,AUTO
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:14   
        13 000076   200013 450500                    STP0    NEW+3,,AUTO
        13 000077   200007 631500                    EPPR1   OLD,,AUTO
        13 000100   200012 451500                    STP1    NEW+2,,AUTO
        13 000101   200012 630500                    EPPR0   NEW+2,,AUTO
        13 000102   000023 631400 xsym               EPPR1   B_VECTNIL+19
        13 000103   000000 701000 xent               TSX1    PSL$CHOMP
        13 000104   000000 011000                    NOP     0

       88     5470    2          FAULT_INFO.RATE_SNAP);
       89     5471
       90     5472    2         IF FAULT_INFO.TOTAL_SNAP > 0

   5472 13 000105   000006 235000 12                 LDA     FAULT_INFO+6
        13 000106   000112 601000 13                 TNZ     s:5475
        13 000107   200005 236100                    LDQ     OLD$,,AUTO
        13 000110   000001 116000 xsym               CMPQ    B_VECTNIL+1
        13 000111   000116 601000 13                 TNZ     s:5477

       91     5473    2          OR OLD$ = ADDR(NIL)
       92     5474    2           THEN
       93     5475    2            CALL X$WRITE (PS_FDS, VECTOR(FAULT_FORMAT), VECTOR(FAULT_INFO));

   5475 13 000112   000024 630400 14                 EPPR0   20
        13 000113   000021 631400 xsym               EPPR1   B_VECTNIL+17
        13 000114   000000 701000 xent               TSX1    X$WRITE
        13 000115   000000 011000                    NOP     0

       94     5476
       95     5477    2         END;

   5477 13 000116   200004 235100                    LDA     I,,AUTO
        13 000117   000001 035007                    ADLA    1,DL
        13 000120   200004 755100                    STA     I,,AUTO
        13 000121   000027 115007                    CMPA    23,DL
        13 000122   000034 602000 13                 TNC     s:5456

       96     5478
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:15   
       97     5479    1      CALL PSD$SKIP;

   5479 13 000123   000002 631400 xsym               EPPR1   B_VECTNIL+2
        13 000124   000000 701000 xent               TSX1    PSD$SKIP
        13 000125   000000 011000                    NOP     0

       98     5480
       99     5481    1      RETURN;

   5481 13 000126   000000 702200 xent               TSX2  ! X66_ARET
      100     5482
      101     5483    1   END PSD$FAULT;

PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:16   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$FAULT.
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:17   

 **** Variables and constants ****

  ****  Section 007 RtLmCm PS_FDS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1080)  r     1 PS_FDS

  ****  Section 011 RoData PSD$FAULT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   212-0-0/c STRC(234)   r     1 FAULT_FORMAT             163-0-0/c STRC(819)   r     1 FAULT_HDR
     0-0-0/c CHAR(20)    r     1 FAULT_TITLES(0:22)

  ****  Section 012  Data  PSD$FAULT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(324)   r     1 FAULT_INFO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN        r     1 I                         10-0-0/w UBIN        r     1 NEW
     6-0-0/w PTR         r     1 NEW$                       7-0-0/w UBIN        r     1 OLD
     5-0-0/w PTR         r     1 OLD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:18   

     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w PTR         r     1 PS_OLD_PMDAT$
     0-0-0/w PTR         r     1 PS_STATS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 BLOCK                      0-0-0N  NULL        r     1 M$LO
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure PSD$FAULT requires 87 words for executable code.
   Procedure PSD$FAULT requires 16 words of local(AUTO) storage.

    No errors detected in file PSD$FAULT.:E05TSI    .
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:20   
          MINI XREF LISTING

BLOCK.DATA
      4918**DCL      5458>>ASSIGN   5464>>ASSIGN
FAULT_FORMAT
      5428**DCL      5475--CALL
FAULT_HDR
      5423**DCL      5450--CALL
FAULT_INFO
      5411**DCL      5475--CALL
FAULT_INFO.RATE_ALL
      5415**DCL      5469<>CALL
FAULT_INFO.RATE_SNAP
      5416**DCL      5469<>CALL
FAULT_INFO.TITLE
      5412**DCL      5456<<ASSIGN
FAULT_INFO.TOTAL_ALL
      5413**DCL      5466<>CALL
FAULT_INFO.TOTAL_SNAP
      5414**DCL      5466<>CALL     5472>>IF
FAULT_TITLES
      5386**DCL      5456>>ASSIGN
I
      5417**DCL      5454<<DOINDEX  5456>>ASSIGN   5458>>ASSIGN   5464>>ASSIGN
NEW
      5421**DCL      5458<<ASSIGN   5466<>CALL     5469<>CALL
NEW$
      5419**DCL      5452<>CALL     5458>>ASSIGN
OLD
      5420**DCL      5462<<ASSIGN   5464<<ASSIGN   5466<>CALL     5469<>CALL
OLD$
      5418**DCL      5452<>CALL     5460>>IF       5464>>ASSIGN   5472>>IF
PSD$EJECT
      5442**DCL-ENT  5446--CALL     5448--CALL
PL6.E3A0      #001=PSD$FAULT File=PSD$FAULT.:E05TSI                              WED 07/30/97 04:26 Page:21   
PSD$SKIP
      5441**DCL-ENT  5479--CALL
PSL$CHOMP
      5440**DCL-ENT  5466--CALL     5469--CALL
PSL$LOCATE
      5439**DCL-ENT  5452--CALL
PS_BUFFER
      4921**DCL      4956--DCLINIT  4958--DCLINIT
PS_COLLECT.CALCNT
      5076**DCL      5076--REDEF
PS_COLLECT.USRSRV
      5073**DCL      5074--REDEF
PS_FDS
      4938**DCL      5450<>CALL     5475<>CALL
PS_HLPCGBUF.DSPMSK
      5333**DCL      5339--REDEF
PS_HLPCGBUF.SLCMSK
      5374**DCL      5381--REDEF
PS_OLD_COLLECT.CALCNT
      5080**DCL      5081--REDEF
PS_OLD_COLLECT.USRSRV
      5078**DCL      5078--REDEF
PS_OLD_PMDAT$
      4500**DCL      5444>>IF
PS_STATS$
      5082**DCL      5084--IMP-PTR
TEXTC.LEN
      5086**DCL      5086--IMP-SIZ
X$WRITE
      5437**DCL-ENT  5450--CALL     5475--CALL
