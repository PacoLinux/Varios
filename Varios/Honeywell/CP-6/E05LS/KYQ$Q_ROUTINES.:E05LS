VERSION E05

PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:1    
        1        1        /*M* KYQ$Q_ROUTINES - Collection of URP internal Queue Routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /*
       10       10
       11       11          E X T E R N A L    I N T E R F A C E    D E S C R I P T I O N
       12       12
       13       13        INIT is called to do the basic settup.  If there is enough memory
       14       14        then the associated device's context will show Q_INPUT$ as having
       15       15        a pointer to the first available que item structure.
       16       16
       17       17        CLOSE is called by the routine(s) that are actually storing the info
       18       18        in the queue'd structure.  It is simply responsible for finding room
       19       19        to store the next new strcuture item which it indicates by updating
       20       20        Q_INPUT$.  It also increments the Q_CURRSIZE by the size in words of
       21       21        the last item.
       22       22
       23       23        FREE is the opposite side of CLOSE.  It has the job of updating the
       24       24        Q_OUTPUT$ pointer whenever the calling routine indicates that it is
       25       25        done with that particular queue'd entry.  Then if possible, it will
       26       26        return with Q_OUTPUT$ pointing to the next structure on the tail of
       27       27        the queue.  And after decrementing Q_CURRSIZE.
       28       28
       29       29        KILL does simply that.  It makes it look as if INIT had never been
       30       30        called by releasing all the memory occupied by the queue and then
       31       31        NILLing Q_INPUT$, Q_OUTPUT$, and zeroing Q_CURRSIZE.
       32       32
       33       33        RESET is a nicer form of KILL.  I will make the queue look as if the
       34       34        INIT routine had just been called.  I.E. Throw away all but one queue
       35       35        block and reset pointers to the beginning of that block.
       36       36
       37       37        */
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:2    
       38       38        %EJECT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:3    
       39       39        /*
       40       40                  I N T E R N A L   O V E R V I E W
       41       41
       42       42        From a more internal standpoint, what these routines will do is to
       43       43        manipulate, and maintain a queue of queue's.  Where the outer queue
       44       44        is a linked list of %KY#QBLOCK_SIZE word blocks that represent the
       45       45        memory being used by one device's queue.  And the internal queue is
       46       46        a FIFO list of KY$? items which are the commands that are being
       47       47        sent from the Munger/VDH interface to the Handler/Device interface.
       48       48
       49       49        And in the true spirit of Modularity ( May it rest in peace. ) the
       50       50        only thing visable to the external world are the individual structure
       51       51        items that are pointed to by KY$CTX.Q.INPUT$, and KY$CTX.Q.OUTPUT$.
       52       52
       53       53        */
       54       54        %EJECT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:4    
       55       55        /*P* NAME: KYQ$INIT                   INITIALIZE A DEVICE QUEUE. */
       56       56        /*
       57       57
       58       58          KYQ$INIT
       59       59             This routine is called by either the Handler Common Interface,
       60       60          or some other initialization location.  It has the job of setting
       61       61          up a useable queue for the whatever device may want it.
       62       62
       63       63             <Attempt to get the queue buffer from the system buffer pool>
       64       64             Succeeding -> continue with the process:
       65       65                <Save the pointer to the buffer in Q_FIRST$, and Q_CURRENT$>
       66       66                <Place a pointer to the first available word in Q_INPUT$>
       67       67                <Make Q_OUTPUT$ = Q_INPUT$>
       68       68                <Initialize all the queue items to meaningful values>
       69       69             Failing -> insufficient memory to run devices:
       70       70                <Errlog>
       71       71                <Return Bad Status: Indicated by NIL Q_INPUT$>
       72       72
       73       73        */
       74       74
       75       75        KYQ$INIT: PROC(KY$CTX) ALTRET;
       76       76        /**/
       77       77        %INCLUDE GH_HARDWARE_M;
       78      175        %INCLUDE LCP_6;
       79     4454        %INCLUDE KL_AFCN_C;
       80     4555        %INCLUDE KL_MACRO_C;
       81     7907        %INCLUDE K_ID_E;
       82     7957        %K#ENTID_E;
       83     7976        %K#LYRID_E;
       84     7983        %INCLUDE KY_URP_M;
       85     8278        %INCLUDE KY_SUBS_C;
       86     8367        %INCLUDE KV_GLBCNS_E;
       87     8708        %INCLUDE KV_PRMID_E;
       88     8882        %INCLUDE KV$GLB;
       89     9301        %INCLUDE KV$GLBCTX;
       90     9746        %INCLUDE KV$PRM;
       91     9959        %INCLUDE KH$STT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:5    
       92     9989        %INCLUDE KV_GLB_M;
       93    10111        %INCLUDE KY_DATA_R;
       94    10906        /**/
       95    10907        %KY$CTX;
       96    11084        /**/
       97    11085    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
       98    11086        /**/
       99    11087    1          DCL QBLOCKSIZE UBIN WORD;
      100    11088    1          DCL QBLOCK$ PTR;
      101    11089        %KY$REC;
      102    11128        %KY$Q_BLOCK;
      103    11133        /**/
      104    11134        %KV_PRMID_E;
      105    11290        /**/
      106    11291        %EJECT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:6    
      107    11292    1          QBLOCKSIZE = %KY#QBLOCK_SIZE;
      108    11293        /*%TRACE(WHEREAT = 13,INPUT$="KY$CTX.Q.INPUT$");*/
      109    11294    1          CALL KVB$GET2NSYS(QBLOCKSIZE,QBLOCK$) ALTRET(NOMEM);
      110    11295    1          KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL + QBLOCKSIZE
             11295                   * 2;
      111    11296
      112    11297    1          KY$CTX.Q.FIRST$ = QBLOCK$;
      113    11298    1          KY$CTX.Q.CURRENT$ = QBLOCK$;
      114    11299    1          QBLOCK$ -> KY$Q_BLOCK.NEXT$ = ADDR(NIL);
      115    11300    1          KY$CTX.Q.INPUT$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );
      116    11301    1          KY$CTX.Q.OUTPUT$ = KY$CTX.Q.INPUT$;
      117    11302
      118    11303    1          KY$CTX.Q.INPUT$ -> KY$REC.TYPE = 0;
      119    11304
      120    11305    1          RETURN;
      121    11306
      122    11307    1   NOMEM: ;
      123    11308    1          ALTRETURN;
      124    11309    1   END KYQ$INIT;
      125    11310        %EOD;

PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:7    
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$INIT.

   Procedure KYQ$INIT requires 63 words for executable code.
   Procedure KYQ$INIT requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:8    

 Object Unit name= KYQ$INIT                                   File name= KYQ$Q_ROUTINES.:E05TOU
 UTS= JUL 30 '97 02:44:33.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    63     3F  KYQ$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KYQ$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$GET2NSYS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                       r    G$ROS$
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:9    


        1        1        /*M* KYQ$Q_ROUTINES - Collection of URP internal Queue Routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /*
       10       10
       11       11          E X T E R N A L    I N T E R F A C E    D E S C R I P T I O N
       12       12
       13       13        INIT is called to do the basic settup.  If there is enough memory
       14       14        then the associated device's context will show Q_INPUT$ as having
       15       15        a pointer to the first available que item structure.
       16       16
       17       17        CLOSE is called by the routine(s) that are actually storing the info
       18       18        in the queue'd structure.  It is simply responsible for finding room
       19       19        to store the next new strcuture item which it indicates by updating
       20       20        Q_INPUT$.  It also increments the Q_CURRSIZE by the size in words of
       21       21        the last item.
       22       22
       23       23        FREE is the opposite side of CLOSE.  It has the job of updating the
       24       24        Q_OUTPUT$ pointer whenever the calling routine indicates that it is
       25       25        done with that particular queue'd entry.  Then if possible, it will
       26       26        return with Q_OUTPUT$ pointing to the next structure on the tail of
       27       27        the queue.  And after decrementing Q_CURRSIZE.
       28       28
       29       29        KILL does simply that.  It makes it look as if INIT had never been
       30       30        called by releasing all the memory occupied by the queue and then
       31       31        NILLing Q_INPUT$, Q_OUTPUT$, and zeroing Q_CURRSIZE.
       32       32
       33       33        RESET is a nicer form of KILL.  I will make the queue look as if the
       34       34        INIT routine had just been called.  I.E. Throw away all but one queue
       35       35        block and reset pointers to the beginning of that block.
       36       36
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:10   
       37       37        */
       38       38        %EJECT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:11   
       39       39        /*
       40       40                  I N T E R N A L   O V E R V I E W
       41       41
       42       42        From a more internal standpoint, what these routines will do is to
       43       43        manipulate, and maintain a queue of queue's.  Where the outer queue
       44       44        is a linked list of %KY#QBLOCK_SIZE word blocks that represent the
       45       45        memory being used by one device's queue.  And the internal queue is
       46       46        a FIFO list of KY$? items which are the commands that are being
       47       47        sent from the Munger/VDH interface to the Handler/Device interface.
       48       48
       49       49        And in the true spirit of Modularity ( May it rest in peace. ) the
       50       50        only thing visable to the external world are the individual structure
       51       51        items that are pointed to by KY$CTX.Q.INPUT$, and KY$CTX.Q.OUTPUT$.
       52       52
       53       53        */
       54       54        %EJECT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:12   
       55       55        /*P* NAME: KYQ$INIT                   INITIALIZE A DEVICE QUEUE. */
       56       56        /*
       57       57
       58       58          KYQ$INIT
       59       59             This routine is called by either the Handler Common Interface,
       60       60          or some other initialization location.  It has the job of setting
       61       61          up a useable queue for the whatever device may want it.
       62       62
       63       63             <Attempt to get the queue buffer from the system buffer pool>
       64       64             Succeeding -> continue with the process:
       65       65                <Save the pointer to the buffer in Q_FIRST$, and Q_CURRENT$>
       66       66                <Place a pointer to the first available word in Q_INPUT$>
       67       67                <Make Q_OUTPUT$ = Q_INPUT$>
       68       68                <Initialize all the queue items to meaningful values>
       69       69             Failing -> insufficient memory to run devices:
       70       70                <Errlog>
       71       71                <Return Bad Status: Indicated by NIL Q_INPUT$>
       72       72
       73       73        */
       74       74
       75       75        KYQ$INIT: PROC(KY$CTX) ALTRET;

     75   0 000000  D380 0000 0000  xent KYQ$INIT        LNJ,B5   X6A_AUTO_1
          0 000003       000E 0001                       DC       14,1

       76       76        /**/
       77       77        %INCLUDE GH_HARDWARE_M;
       78      175        %INCLUDE LCP_6;
       79     4454        %INCLUDE KL_AFCN_C;
       80     4555        %INCLUDE KL_MACRO_C;
       81     7907        %INCLUDE K_ID_E;
       82     7957        %K#ENTID_E;
       83     7976        %K#LYRID_E;
       84     7983        %INCLUDE KY_URP_M;
       85     8278        %INCLUDE KY_SUBS_C;
       86     8367        %INCLUDE KV_GLBCNS_E;
       87     8708        %INCLUDE KV_PRMID_E;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:13   
       88     8882        %INCLUDE KV$GLB;
       89     9301        %INCLUDE KV$GLBCTX;
       90     9746        %INCLUDE KV$PRM;
       91     9959        %INCLUDE KH$STT;
       92     9989        %INCLUDE KV_GLB_M;
       93    10111        %INCLUDE KY_DATA_R;
       94    10906        /**/
       95    10907        %KY$CTX;
       96    11084        /**/
       97    11085    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
       98    11086        /**/
       99    11087    1          DCL QBLOCKSIZE UBIN WORD;
      100    11088    1          DCL QBLOCK$ PTR;
      101    11089        %KY$REC;
      102    11128        %KY$Q_BLOCK;
      103    11133        /**/
      104    11134        %KV_PRMID_E;
      105    11290        /**/
      106    11291        %EJECT;
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:14   
      107    11292    1          QBLOCKSIZE = %KY#QBLOCK_SIZE;

  11292   0 000005  E870 0200                            LDR,R6   512,IMO
          0 000007  EF47 0006                            STR,R6   QBLOCKSIZE,AUTO

      108    11293        /*%TRACE(WHEREAT = 13,INPUT$="KY$CTX.Q.INPUT$");*/
      109    11294    1          CALL KVB$GET2NSYS(QBLOCKSIZE,QBLOCK$) ALTRET(NOMEM);

  11294   0 000009  EBC7 0007                            LAB,B6   QBLOCK$,AUTO
          0 00000B  EFC7 000C                            STB,B6   QBLOCK$+5,AUTO
          0 00000D  DBC7 0006                            LAB,B5   QBLOCKSIZE,AUTO
          0 00000F  DFC7 000A                            STB,B5   QBLOCK$+3,AUTO
          0 000011  BBC7 000A                            LAB,B3   QBLOCK$+3,AUTO
          0 000013  CBF0 0200                            LAB,B4   512,IMO
          0 000015  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          0 000018       0024                            DC       s:11303,PREL

      110    11295    1          KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL + QBLOCKSIZE
             11295                   * 2;

  11295   0 000019  F847 0006                            LDR,R7   QBLOCKSIZE,AUTO
          0 00001B  6C00                                 LDV,R6   0
          0 00001C  7081                                 DOL,R7   1
          0 00001D  8400 0000 001E  xsym                 AID      KY_STT_URP+30
          0 000020  8D00 0000 001E  xsym                 SDI      KY_STT_URP+30

      111    11296
      112    11297    1          KY$CTX.Q.FIRST$ = QBLOCK$;

  11297   0 000023  ECC7 0007                            LDB,B6   QBLOCK$,AUTO
          0 000025  DCC7 0004                            LDB,B5   @KY$CTX,AUTO
          0 000027  EFC5 000E                            STB,B6   14,B5

      113    11298    1          KY$CTX.Q.CURRENT$ = QBLOCK$;

  11298   0 000029  EFC5 0010                            STB,B6   16,B5

PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:15   
      114    11299    1          QBLOCK$ -> KY$Q_BLOCK.NEXT$ = ADDR(NIL);

  11299   0 00002B  CB80 0000 0000                       LAB,B4   0
          0 00002E  CF86                                 STB,B4   ,B6

      115    11300    1          KY$CTX.Q.INPUT$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );

  11300   0 00002F  ECC7 0007                            LDB,B6   QBLOCK$,AUTO
          0 000031  CBC6 0002                            LAB,B4   2,B6
          0 000033  CFC5 0012                            STB,B4   18,B5

      116    11301    1          KY$CTX.Q.OUTPUT$ = KY$CTX.Q.INPUT$;

  11301   0 000035  CFC5 0014                            STB,B4   20,B5

      117    11302
      118    11303    1          KY$CTX.Q.INPUT$ -> KY$REC.TYPE = 0;

  11303   0 000037  8804                                 LBF,'7F00'X       ,B4
  11303   0 000038       7F00

      119    11304
      120    11305    1          RETURN;

  11305   0 000039  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

  11303   0                              NOMEM           null
      121    11306
      122    11307    1   NOMEM: ;
      123    11308    1          ALTRETURN;

  11308   0 00003C  C380 0000 0000  xent NOMEM           LNJ,B4   X6A_AALT
      124    11309    1   END KYQ$INIT;
      125    11310        %EOD;

PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:16   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$INIT.
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:17   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                   *0-0-0/w STRC(608)   r     1 KY$CTX
     7-0-0/w PTR         r     1 QBLOCK$                    6-0-0/w UBIN(16)    r     1 QBLOCKSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(8192)  r     1 KY$Q_BLOCK                 0-0-0/w ASTR(80)    r     1 KY$REC


   Procedure KYQ$INIT requires 63 words for executable code.
   Procedure KYQ$INIT requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:18   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:19   
          MINI XREF LISTING

KVB$GET2NSYS
     11085**DCL-ENT 11294--CALL
KV_STT.REQSTATS.DSPMSK
     10782**DCL     10788--REDEF
KV_STT.REQSTATS.SLCMSK
     10823**DCL     10830--REDEF
KY$CTX
     10918**DCL        75--PROC
KY$CTX.DEFRD.STATUSW
     11060**DCL     11062--REDEF
KY$CTX.MODE
     11009**DCL     11017--REDEF
KY$CTX.Q.CURRENT$
     11022**DCL     11298<<ASSIGN
KY$CTX.Q.FIRST$
     11021**DCL     11297<<ASSIGN
KY$CTX.Q.INPUT$
     11023**DCL     11300<<ASSIGN  11301>>ASSIGN  11303>>ASSIGN
KY$CTX.Q.OUTPUT$
     11024**DCL     11301<<ASSIGN
KY$CTX.STATUSW
     10936**DCL     10938--REDEF   10946--REDEF   10960--REDEF   10974--REDEF   10988--REDEF
KY$CTX.VDIENB
     11074**DCL     11080--REDEF
KY$Q_BLOCK.DUMMY
     11131**DCL     11300--ASSIGN
KY$Q_BLOCK.NEXT$
     11130**DCL     11299<<ASSIGN
KY$REC.RECSIZE
     11116**DCL     11126--IMP-SIZ
KY$REC.TXTARRAY
     11125**DCL     11126--REDEF
PL6.E3A0      #001=KYQ$INIT File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:44 Page:20   
KY$REC.TYPE
     11115**DCL     11303<<ASSIGN
KY_STT_URP.REQSTATS.DSPMSK
     10431**DCL     10437--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     10472**DCL     10479--REDEF
KY_STT_URP.USRSTT.OTPBFRBYTUTL
     10503**DCL     11295<<ASSIGN  11295>>ASSIGN
NOMEM
     11303**LABEL   11294--CALLALT
QBLOCK$
     11088**DCL     11294<>CALL    11297>>ASSIGN  11298>>ASSIGN  11299>>ASSIGN  11300>>ASSIGN
QBLOCKSIZE
     11087**DCL     11292<<ASSIGN  11294<>CALL    11295>>ASSIGN

PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:21   
      126        1        /*T***********************************************************/
      127        2        /*T*                                                         */
      128        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      129        4        /*T*                                                         */
      130        5        /*T***********************************************************/
      131        6        /*P* NAME: KYQ$CLOSE                   FINISH CLOSEING QUEUE ENTRY */
      132        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      133        8               ECI=0,DIN=7,CSU=3,AND      */
      134        9        /*
      135       10
      136       11          KYQ$CLOSE
      137       12             This routine is invoked whenever the Munger determines that it
      138       13          has finished storing a structure in the allocated space.  It will
      139       14          (A) find space to store the next item, (B) maintain the queue size
      140       15          indicator, and (C) when necessary to give the schedular an initial
      141       16          kick, it will also do that.  And of course it does the basic queue
      142       17          manipulations to add a new entry to said queue.
      143       18
      144       19             <Disable to the interrupt level of the device, if required>
      145       20             <Calculate the size of the item just placed in the queue block>
      146       21             <Calculate where we want the next structure>
      147       22             <Find the end of the available space from that point>
      148       23             <Does it fit in the available space?>
      149       24             YES:
      150       25                <Great, just remember where it is going>
      151       26             NO:
      152       27                <Rats, and frazzle.  Try to get a new QBLOCK_SIZE word chunk>
      153       28                <IF it works.....>
      154       29                  <Good, link this new queue block into the list>
      155       30                  <Manipulate queue indicators>
      156       31                  <Set up new ITEM$: equals returned Q_INPUT$>
      157       32                <Otherwise>
      158       33                  ALTRETURN
      159       34
      160       35             <Maintain the information about queue size: Q_CURRSIZE>
      161       36             <Update Q_INPUT$>
      162       37
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:22   
      163       38             <Check to see if the device is IDLE>
      164       39             Yes:
      165       40                <Get the world moving again.>
      166       41                <Check if the Device is available>
      167       42                Yes:
      168       43                   <Call the scheduler>
      169       44                No:
      170       45                   <Inform the opoerator>
      171       46
      172       47             <Have we been Throttled?>
      173       48             No:
      174       49                <Is it time to Throttle?>
      175       50                Yes:
      176       51                   <Request Output Stop>
      177       52                   <Remember that we're Throttled>
      178       53
      179       54             <Enable, if this routine disabled>
      180       55             <Return>
      181       56
      182       57        */
      183       58
      184       59        KYQ$CLOSE: PROC( KY$CTX ) ALTRET;
      185       60        /**/
      186       61        %INCLUDE GH_HARDWARE_M;
      187      159        %INCLUDE LCP_6;
      188     4438        %INCLUDE KL_AFCN_C;
      189     4539        %INCLUDE KL_MACRO_C;
      190     7891        %INCLUDE K_ID_E;
      191     7941        %K#ENTID_E;
      192     7960        %K#LYRID_E;
      193     7967        %INCLUDE KY_URP_M;
      194     8262        %INCLUDE KY_SUBS_C;
      195     8351        %INCLUDE KV_GLBCNS_E;
      196     8692        %INCLUDE KV_PRMID_E;
      197     8866        %INCLUDE KV$GLB;
      198     9285        %INCLUDE KV$GLBCTX;
      199     9730        %INCLUDE KV$PRM;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:23   
      200     9943        %INCLUDE KH$STT;
      201     9973        %INCLUDE OC_SUBS_C;
      202    10704        %INCLUDE KV_GLB_M;
      203    10826        %INCLUDE KY_DATA_R;
      204    11621        %INCLUDE KHC_MAC_C;
      205    11662        %INCLUDE KH_MACRO_C;
      206    12405        /**/
      207    12406        %KY$CTX;
      208    12583        /**/
      209    12584    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      210    12585    1          DCL KYS$OUR_SCHED ENTRY(1) ALTRET;
      211    12586    1          DCL KYN$ENABLE ENTRY;
      212    12587    1          DCL KYN$DISABLE ENTRY;
      213    12588    1          DCL KYK$OPCON ENTRY(2);
      214    12589        /**/
      215    12590        %KV$PTR;
      216    12633        %INHIBIT_DCLS;
      217    12645        %KH$CTLTBL(FPTN=KH$CTLTBL,STCLASS="BASED(KH_CTLTBL$)");
      218    12857    1          DCL KH_CTLTBL$ PTR SYMREF;
      219    12858    1          DCL ONEWORD UBIN BASED;
      220    12859        %KV$VDI;
      221    12930        %KY$REC;
      222    12969        %KY$OUTMRK;
      223    12986        %KY$Q_BLOCK;
      224    12991    1          DCL QBLOCKSIZE UBIN WORD;
      225    12992    1          DCL INHIB_LVL UBIN WORD;
      226    12993    1          DCL QBLOCK$ PTR;
      227    12994    1          DCL ITEM$ PTR;
      228    12995    1          DCL ITEM_SIZE UBIN;
      229    12996    1          DCL CURRENT$ PTR;
      230    12997    1          DCL INPUT$ PTR;
      231    12998        /**/
      232    12999        %KV_PRMID_E;
      233    13155        /**/
      234    13156        %EJECT;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:24   
      235    13157    1          CALL KYN$DISABLE;
      236    13158
      237    13159    1          INPUT$ = KY$CTX.Q.INPUT$;
      238    13160        /*%TRACE(WHEREAT = 14,INPUT$="KY$CTX.Q.INPUT$");*/
      239    13161    1          CURRENT$ = KY$CTX.Q.CURRENT$;
      240    13162
      241    13163    2          DO CASE ( INPUT$ -> KY$REC.TYPE );
      242    13164    2             CASE ( %KY#TYPE_NONE );
      243    13165    2                CALL KYN$ENABLE;
      244    13166    2                RETURN;
      245    13167
      246    13168    2             CASE ( %KY#TYPE_REC,%KY#TYPE_VFU );
      247    13169    2                ITEM_SIZE = SIZEW( INPUT$ -> KY$REC );
      248    13170
      249    13171    2             CASE ( %KY#TYPE_OUTMRK );
      250    13172    2                ITEM_SIZE = SIZEW( INPUT$ -> KY$OUTMRK );
      251    13173
      252    13174    2          END;
      253    13175
      254    13176    1          ITEM$ = PINCRW( INPUT$, ITEM_SIZE );
      255    13177
      256    13178    1          IF ( PINCRW( CURRENT$, %KY#QBLOCK_SIZE ) <
      257    13179    1             PINCRW( ITEM$, %KY#MAXVFU_SIZEW) )THEN
      258    13180    2             DO;
      259    13181    2                ITEM$ = ADDR(NIL);
      260    13182
      261    13183    2                QBLOCKSIZE = %KY#QBLOCK_SIZE;
      262    13184    2                CALL KVB$GET2NSYS(QBLOCKSIZE,QBLOCK$) ALTRET(NOMEM);
      263    13185    2                KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL +
             13185                         QBLOCKSIZE * 2;
      264    13186
      265    13187    2                INPUT$ -> KY$REC.BLK_END = '1'B;
      266    13188
      267    13189    2                KY$CTX.Q.CURRENT$ -> KY$Q_BLOCK.NEXT$ = QBLOCK$;
      268    13190    2                KY$CTX.Q.CURRENT$ = QBLOCK$;
      269    13191    2                QBLOCK$ -> KY$Q_BLOCK.NEXT$ = ADDR(NIL);
      270    13192    2                ITEM$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:25   
      271    13193    2             END;
      272    13194
      273    13195    1          KY$CTX.Q.CURRSIZE = KY$CTX.Q.CURRSIZE + ITEM_SIZE;
      274    13196    1          KY$CTX.Q.INPUT$ = ITEM$;
      275    13197
      276    13198    1          ITEM$ -> KY$REC.TYPE = 0;
      277    13199
      278    13200    1          IF NOT(KY$CTX.Q.THRTL.BUF_OVRFLOW) THEN
      279    13201    2             DO;
      280    13202    2                IF ( KY$CTX.Q.CURRSIZE >= KY$CTX.Q.UPRLIMIT ) THEN
      281    13203    3                   DO;
      282    13204    3                      %KV_VDI.RQSOTP = '0'B;
      283    13205    3                      KY$CTX.Q.THRTL.BUF_OVRFLOW = '1'B;
      284    13206    3                   END;
      285    13207    2             END;
      286    13208
      287    13209    1          IF ( KY$CTX.DVC_STATE = %KY#ST_IDLE ) THEN
      288    13210    2             DO;
      289    13211    2                CALL KYS$OUR_SCHED ( KY$CTX ) ALTRET( GO_RDYWAIT );
      290    13212    2             END;
      291    13213    1          ELSE
      292    13214    2             DO;
      293    13215    2                IF ( KY$CTX.DVC_STATE = %KY#ST_OFFLINE ) THEN
      294    13216    3                   DO;
      295    13217    3                      GOTO GO_RDYWAIT;
      296    13218    3                   END;
      297    13219    2             END;
      298    13220
      299    13221        /*%TRACE(WHEREAT = 18,INPUT$="KY$CTX.Q.INPUT$");*/
      300    13222    1          CALL KYN$ENABLE;
      301    13223    1          RETURN;
      302    13224
      303    13225    1   NOMEM: ;
      304    13226    1          CALL KYN$ENABLE;
      305    13227    1          ALTRETURN;
      306    13228
      307    13229    1   GO_RDYWAIT: ;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:26   
      308    13230    1          KY$CTX.DVC_STATE = %KY#ST_RDYWAIT;
      309    13231    1          CALL KYK$OPCON(KY$CTX,OC_WRTM);
      310    13232    1          CALL KYN$ENABLE;
      311    13233    1          RETURN;
      312    13234    1   END KYQ$CLOSE;
      313    13235        %EOD;

PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:27   
--  Include file information  --

   KH_MACRO_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$CLOSE.

   Procedure KYQ$CLOSE requires 239 words for executable code.
   Procedure KYQ$CLOSE requires 24 words of local(AUTO) storage.

PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:28   

 Object Unit name= KYQ$CLOSE                                  File name= KYQ$Q_ROUTINES.:E05TOU
 UTS= JUL 30 '97 02:45:14.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   239     EF  KYQ$CLOSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KYQ$CLOSE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KYN$DISABLE
         yes           Std       0 KYN$ENABLE
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       1 KYS$OUR_SCHED
         yes           Std       2 KYK$OPCON
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:29   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                            KV$PTR$                               KH_CTLTBL$
r    G$ROS$
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:30   


      126        1        /*T***********************************************************/
      127        2        /*T*                                                         */
      128        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      129        4        /*T*                                                         */
      130        5        /*T***********************************************************/
      131        6        /*P* NAME: KYQ$CLOSE                   FINISH CLOSEING QUEUE ENTRY */
      132        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      133        8               ECI=0,DIN=7,CSU=3,AND      */
      134        9        /*
      135       10
      136       11          KYQ$CLOSE
      137       12             This routine is invoked whenever the Munger determines that it
      138       13          has finished storing a structure in the allocated space.  It will
      139       14          (A) find space to store the next item, (B) maintain the queue size
      140       15          indicator, and (C) when necessary to give the schedular an initial
      141       16          kick, it will also do that.  And of course it does the basic queue
      142       17          manipulations to add a new entry to said queue.
      143       18
      144       19             <Disable to the interrupt level of the device, if required>
      145       20             <Calculate the size of the item just placed in the queue block>
      146       21             <Calculate where we want the next structure>
      147       22             <Find the end of the available space from that point>
      148       23             <Does it fit in the available space?>
      149       24             YES:
      150       25                <Great, just remember where it is going>
      151       26             NO:
      152       27                <Rats, and frazzle.  Try to get a new QBLOCK_SIZE word chunk>
      153       28                <IF it works.....>
      154       29                  <Good, link this new queue block into the list>
      155       30                  <Manipulate queue indicators>
      156       31                  <Set up new ITEM$: equals returned Q_INPUT$>
      157       32                <Otherwise>
      158       33                  ALTRETURN
      159       34
      160       35             <Maintain the information about queue size: Q_CURRSIZE>
      161       36             <Update Q_INPUT$>
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:31   
      162       37
      163       38             <Check to see if the device is IDLE>
      164       39             Yes:
      165       40                <Get the world moving again.>
      166       41                <Check if the Device is available>
      167       42                Yes:
      168       43                   <Call the scheduler>
      169       44                No:
      170       45                   <Inform the opoerator>
      171       46
      172       47             <Have we been Throttled?>
      173       48             No:
      174       49                <Is it time to Throttle?>
      175       50                Yes:
      176       51                   <Request Output Stop>
      177       52                   <Remember that we're Throttled>
      178       53
      179       54             <Enable, if this routine disabled>
      180       55             <Return>
      181       56
      182       57        */
      183       58
      184       59        KYQ$CLOSE: PROC( KY$CTX ) ALTRET;

     59   0 000000  D380 0000 0000  xent KYQ$CLOSE       LNJ,B5   X6A_AUTO_1
          0 000003       0018 0001                       DC       24,1

      185       60        /**/
      186       61        %INCLUDE GH_HARDWARE_M;
      187      159        %INCLUDE LCP_6;
      188     4438        %INCLUDE KL_AFCN_C;
      189     4539        %INCLUDE KL_MACRO_C;
      190     7891        %INCLUDE K_ID_E;
      191     7941        %K#ENTID_E;
      192     7960        %K#LYRID_E;
      193     7967        %INCLUDE KY_URP_M;
      194     8262        %INCLUDE KY_SUBS_C;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:32   
      195     8351        %INCLUDE KV_GLBCNS_E;
      196     8692        %INCLUDE KV_PRMID_E;
      197     8866        %INCLUDE KV$GLB;
      198     9285        %INCLUDE KV$GLBCTX;
      199     9730        %INCLUDE KV$PRM;
      200     9943        %INCLUDE KH$STT;
      201     9973        %INCLUDE OC_SUBS_C;
      202    10704        %INCLUDE KV_GLB_M;
      203    10826        %INCLUDE KY_DATA_R;
      204    11621        %INCLUDE KHC_MAC_C;
      205    11662        %INCLUDE KH_MACRO_C;
      206    12405        /**/
      207    12406        %KY$CTX;
      208    12583        /**/
      209    12584    1          DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      210    12585    1          DCL KYS$OUR_SCHED ENTRY(1) ALTRET;
      211    12586    1          DCL KYN$ENABLE ENTRY;
      212    12587    1          DCL KYN$DISABLE ENTRY;
      213    12588    1          DCL KYK$OPCON ENTRY(2);
      214    12589        /**/
      215    12590        %KV$PTR;
      216    12633        %INHIBIT_DCLS;
      217    12645        %KH$CTLTBL(FPTN=KH$CTLTBL,STCLASS="BASED(KH_CTLTBL$)");
      218    12857    1          DCL KH_CTLTBL$ PTR SYMREF;
      219    12858    1          DCL ONEWORD UBIN BASED;
      220    12859        %KV$VDI;
      221    12930        %KY$REC;
      222    12969        %KY$OUTMRK;
      223    12986        %KY$Q_BLOCK;
      224    12991    1          DCL QBLOCKSIZE UBIN WORD;
      225    12992    1          DCL INHIB_LVL UBIN WORD;
      226    12993    1          DCL QBLOCK$ PTR;
      227    12994    1          DCL ITEM$ PTR;
      228    12995    1          DCL ITEM_SIZE UBIN;
      229    12996    1          DCL CURRENT$ PTR;
      230    12997    1          DCL INPUT$ PTR;
      231    12998        /**/
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:33   
      232    12999        %KV_PRMID_E;
      233    13155        /**/
      234    13156        %EJECT;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:34   
      235    13157    1          CALL KYN$DISABLE;

  13157   0 000005  CBF0 0000                            LAB,B4   0,IMO
          0 000007  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          0 00000A       0001                            DC       s:13159,PREL

      236    13158
      237    13159    1          INPUT$ = KY$CTX.Q.INPUT$;

  13159   0 00000B  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00000D  DCC6 0012                            LDB,B5   18,B6
          0 00000F  DFC7 0011                            STB,B5   INPUT$,AUTO

      238    13160        /*%TRACE(WHEREAT = 14,INPUT$="KY$CTX.Q.INPUT$");*/
      239    13161    1          CURRENT$ = KY$CTX.Q.CURRENT$;

  13161   0 000011  CCC6 0010                            LDB,B4   16,B6
          0 000013  CFC7 000F                            STB,B4   CURRENT$,AUTO

      240    13162
      241    13163    2          DO CASE ( INPUT$ -> KY$REC.TYPE );

  13163   0 000015  B805                                 LDR,R3   ,B5
          0 000016  3048                                 SOR,R3   8
          0 000017  B570 007F                            AND,R3   127,IMO
          0 000019  3D04                                 CMV,R3   4
          0 00001A  0281 0021                            BGE      s:13176,PREL
          0 00001C  A830 0000 0022  00                   LDR,R2   s:13163+13,R3
          0 00001F  83A0 0000 0026  00                   JMP      s:13165,R2
          0 000022       0000                            DC       s:13165,PREL
          0 000023       0009                            DC       s:13169,PREL
          0 000024       0013                            DC       s:13172,PREL
          0 000025       0009                            DC       s:13169,PREL

      242    13164    2             CASE ( %KY#TYPE_NONE );

      243    13165    2                CALL KYN$ENABLE;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:35   

  13165   0 000026  CBF0 0000                            LAB,B4   0,IMO
          0 000028  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 00002B       0001                            DC       s:13166,PREL

      244    13166    2                RETURN;

  13166   0 00002C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      245    13167
      246    13168    2             CASE ( %KY#TYPE_REC,%KY#TYPE_VFU );

      247    13169    2                ITEM_SIZE = SIZEW( INPUT$ -> KY$REC );

  13169   0 00002F  E805                                 LDR,R6   ,B5
          0 000030  E570 00FF                            AND,R6   255,IMO
          0 000032  6003                                 SOL,R6   3
          0 000033  6E5F                                 ADV,R6   95
          0 000034  6044                                 SOR,R6   4
          0 000035  EF47 000E                            STR,R6   ITEM_SIZE,AUTO
          0 000037  0F81 0004                            B        s:13176,PREL

      248    13170
      249    13171    2             CASE ( %KY#TYPE_OUTMRK );

      250    13172    2                ITEM_SIZE = SIZEW( INPUT$ -> KY$OUTMRK );

  13172   0 000039  6C04                                 LDV,R6   4
          0 00003A  EF47 000E                            STR,R6   ITEM_SIZE,AUTO

      251    13173
      252    13174    2          END;

      253    13175
      254    13176    1          ITEM$ = PINCRW( INPUT$, ITEM_SIZE );

  13176   0 00003C  F847 000E                            LDR,R7   ITEM_SIZE,AUTO
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:36   
          0 00003E  6C00                                 LDV,R6   0
          0 00003F  8447 0011                            AID      INPUT$,AUTO
          0 000041  8D47 000C                            SDI      ITEM$,AUTO

      255    13177
      256    13178    1          IF ( PINCRW( CURRENT$, %KY#QBLOCK_SIZE ) <

  13178   0 000043  BBC4 0200                            LAB,B3   512,B4
          0 000045  ACC7 000C                            LDB,B2   ITEM$,AUTO
          0 000047  9BC2 007F                            LAB,B1   127,B2
          0 000049  9FC7 0014                            STB,B1   INPUT$+3,AUTO
          0 00004B  BDC7 0014                            CMB,B3   INPUT$+3,AUTO
          0 00004D  0281 003D                            BGE      s:13195,PREL

      257    13179    1             PINCRW( ITEM$, %KY#MAXVFU_SIZEW) )THEN
      258    13180    2             DO;

      259    13181    2                ITEM$ = ADDR(NIL);

  13181   0 00004F  BB80 0000 0000                       LAB,B3   0
          0 000052  BFC7 000C                            STB,B3   ITEM$,AUTO

      260    13182
      261    13183    2                QBLOCKSIZE = %KY#QBLOCK_SIZE;

  13183   0 000054  E870 0200                            LDR,R6   512,IMO
          0 000056  EF47 0008                            STR,R6   QBLOCKSIZE,AUTO

      262    13184    2                CALL KVB$GET2NSYS(QBLOCKSIZE,QBLOCK$) ALTRET(NOMEM);

  13184   0 000058  ABC7 000A                            LAB,B2   QBLOCK$,AUTO
          0 00005A  AFC7 0016                            STB,B2   INPUT$+5,AUTO
          0 00005C  EBC7 0008                            LAB,B6   QBLOCKSIZE,AUTO
          0 00005E  EFC7 0014                            STB,B6   INPUT$+3,AUTO
          0 000060  BBC7 0014                            LAB,B3   INPUT$+3,AUTO
          0 000062  CBF0 0200                            LAB,B4   512,IMO
          0 000064  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:37   
          0 000067       0063                            DC       s:13209,PREL

      263    13185    2                KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL +
             13185                         QBLOCKSIZE * 2;

  13185   0 000068  F847 0008                            LDR,R7   QBLOCKSIZE,AUTO
          0 00006A  6C00                                 LDV,R6   0
          0 00006B  7081                                 DOL,R7   1
          0 00006C  8400 0000 001E  xsym                 AID      KY_STT_URP+30
          0 00006F  8D00 0000 001E  xsym                 SDI      KY_STT_URP+30

      264    13186
      265    13187    2                INPUT$ -> KY$REC.BLK_END = '1'B;

  13187   0 000072  ECC7 0011                            LDB,B6   INPUT$,AUTO
          0 000074  8906                                 LBT,'8000'X       ,B6
          0 000075       8000

      266    13188
      267    13189    2                KY$CTX.Q.CURRENT$ -> KY$Q_BLOCK.NEXT$ = QBLOCK$;

  13189   0 000076  DCC7 0004                            LDB,B5   @KY$CTX,AUTO
          0 000078  CCC5 0010                            LDB,B4   16,B5
          0 00007A  BCC7 000A                            LDB,B3   QBLOCK$,AUTO
          0 00007C  BF84                                 STB,B3   ,B4

      268    13190    2                KY$CTX.Q.CURRENT$ = QBLOCK$;

  13190   0 00007D  CCC7 000A                            LDB,B4   QBLOCK$,AUTO
          0 00007F  CFC5 0010                            STB,B4   16,B5

      269    13191    2                QBLOCK$ -> KY$Q_BLOCK.NEXT$ = ADDR(NIL);

  13191   0 000081  BB80 0000 0000                       LAB,B3   0
          0 000084  BF84                                 STB,B3   ,B4

      270    13192    2                ITEM$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:38   

  13192   0 000085  CCC7 000A                            LDB,B4   QBLOCK$,AUTO
          0 000087  BBC4 0002                            LAB,B3   2,B4
          0 000089  BFC7 000C                            STB,B3   ITEM$,AUTO

      271    13193    2             END;

      272    13194
      273    13195    1          KY$CTX.Q.CURRSIZE = KY$CTX.Q.CURRSIZE + ITEM_SIZE;

  13195   0 00008B  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00008D  E846 0017                            LDR,R6   23,B6
          0 00008F  EA47 000E                            ADD,R6   ITEM_SIZE,AUTO
          0 000091  EF46 0017                            STR,R6   23,B6

      274    13196    1          KY$CTX.Q.INPUT$ = ITEM$;

  13196   0 000093  DCC7 000C                            LDB,B5   ITEM$,AUTO
          0 000095  DFC6 0012                            STB,B5   18,B6

      275    13197
      276    13198    1          ITEM$ -> KY$REC.TYPE = 0;

  13198   0 000097  8805                                 LBF,'7F00'X       ,B5
  13198   0 000098       7F00

      277    13199
      278    13200    1          IF NOT(KY$CTX.Q.THRTL.BUF_OVRFLOW) THEN

  13200   0 000099  89C6 0016                            CMZ      22,B6
          0 00009B  0801 0011                            BAL      s:13209,PREL

      279    13201    2             DO;

      280    13202    2                IF ( KY$CTX.Q.CURRSIZE >= KY$CTX.Q.UPRLIMIT ) THEN

  13202   0 00009D  E846 0017                            LDR,R6   23,B6
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:39   
          0 00009F  E946 0018                            CMR,R6   24,B6
          0 0000A1  0201 000B                            BL       s:13209,PREL

      281    13203    3                   DO;

      282    13204    3                      %KV_VDI.RQSOTP = '0'B;

  13204   0 0000A3  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 0000A6  BC84                                 LDB,B3   ,B4
          0 0000A7  8843 0019                            LBF,'0008'X       25,B3
          0 0000A9       0008

      283    13205    3                      KY$CTX.Q.THRTL.BUF_OVRFLOW = '1'B;

  13205   0 0000AA  8946 0016                            LBT,'8000'X       22,B6
  13205   0 0000AC       8000

      284    13206    3                   END;

      285    13207    2             END;

      286    13208
      287    13209    1          IF ( KY$CTX.DVC_STATE = %KY#ST_IDLE ) THEN

  13209   0 0000AD  E2C6 0004                            LLH,R6   4,B6
          0 0000AF  6D01                                 CMV,R6   1
          0 0000B0  0981 000B                            BNE      s:13215,PREL

      288    13210    2             DO;

      289    13211    2                CALL KYS$OUR_SCHED ( KY$CTX ) ALTRET( GO_RDYWAIT );

  13211   0 0000B2  BBC7 0004                            LAB,B3   @KY$CTX,AUTO
          0 0000B4  CBF0 0100                            LAB,B4   256,IMO
          0 0000B6  E380 0000 0000  xent                 LNJ,B6   KYS$OUR_SCHED
          0 0000B9       001A                            DC       s:13226,PREL

PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:40   
      290    13212    2             END;

  13212   0 0000BA  0F81 0006                            B        s:13222,PREL

      291    13213    1          ELSE
      292    13214    2             DO;

      293    13215    2                IF ( KY$CTX.DVC_STATE = %KY#ST_OFFLINE ) THEN

  13215   0 0000BC  6D06                                 CMV,R6   6
          0 0000BD  0981 0003                            BNE      s:13222,PREL

      294    13216    3                   DO;

      295    13217    3                      GOTO GO_RDYWAIT;

  13217   0 0000BF  0F81 0013                            B        s:13226,PREL

      296    13218    3                   END;
      297    13219    2             END;
      298    13220
      299    13221        /*%TRACE(WHEREAT = 18,INPUT$="KY$CTX.Q.INPUT$");*/
      300    13222    1          CALL KYN$ENABLE;

  13222   0 0000C1  CBF0 0000                            LAB,B4   0,IMO
          0 0000C3  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 0000C6       0001                            DC       s:13223,PREL

      301    13223    1          RETURN;

  13223   0 0000C7  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

  13209   0                              NOMEM           null
      302    13224
      303    13225    1   NOMEM: ;
      304    13226    1          CALL KYN$ENABLE;

PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:41   
  13226   0 0000CA  CBF0 0000            NOMEM           LAB,B4   0,IMO
          0 0000CC  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 0000CF       0001                            DC       s:13227,PREL

      305    13227    1          ALTRETURN;

  13227   0 0000D0  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

  13226   0                              GO_RDYWAIT      null
      306    13228
      307    13229    1   GO_RDYWAIT: ;
      308    13230    1          KY$CTX.DVC_STATE = %KY#ST_RDYWAIT;

  13230   0 0000D3  6C02                 GO_RDYWAIT      LDV,R6   2
          0 0000D4  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 0000D6  E7C6 0004                            STH,R6   4,B6

      309    13231    1          CALL KYK$OPCON(KY$CTX,OC_WRTM);

  13231   0 0000D8  DBF0 0002                            LAB,B5   2,IMO
          0 0000DA  DFC7 0016                            STB,B5   INPUT$+5,AUTO
          0 0000DC  EFC7 0014                            STB,B6   INPUT$+3,AUTO
          0 0000DE  BBC7 0014                            LAB,B3   INPUT$+3,AUTO
          0 0000E0  CBF0 0200                            LAB,B4   512,IMO
          0 0000E2  E380 0000 0000  xent                 LNJ,B6   KYK$OPCON
          0 0000E5       0001                            DC       s:13232,PREL

      310    13232    1          CALL KYN$ENABLE;

  13232   0 0000E6  CBF0 0000                            LAB,B4   0,IMO
          0 0000E8  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 0000EB       0001                            DC       s:13233,PREL

      311    13233    1          RETURN;

  13233   0 0000EC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      312    13234    1   END KYQ$CLOSE;
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:42   
      313    13235        %EOD;

PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:43   
--  Include file information  --

   KH_MACRO_C.:E05TOU  is referenced.
   KHC_MAC_C.:E05TOU  is referenced.
   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$CLOSE.
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:44   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                    F-0-0/w PTR         r     1 CURRENT$
    11-0-0/w PTR         r     1 INPUT$                     C-0-0/w PTR         r     1 ITEM$
     E-0-0/w UBIN(16)    r     1 ITEM_SIZE                 *0-0-0/w STRC(608)   r     1 KY$CTX
     A-0-0/w PTR         r     1 QBLOCK$                    8-0-0/w UBIN(16)    r     1 QBLOCKSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KH_CTLTBL$                 0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(64)    r     1 KY$OUTMRK                  0-0-0/w STRC(8192)  r     1 KY$Q_BLOCK
     0-0-0/w ASTR(80)    r     1 KY$REC


   Procedure KYQ$CLOSE requires 239 words for executable code.
   Procedure KYQ$CLOSE requires 24 words of local(AUTO) storage.
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:45   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:46   
          MINI XREF LISTING

CURRENT$
     12996**DCL     13161<<ASSIGN  13178>>IF
GO_RDYWAIT
     13226**LABEL   13211--CALLALT 13217--GOTO
INPUT$
     12997**DCL     13159<<ASSIGN  13163>>DOCASE  13169>>ASSIGN  13169>>ASSIGN  13172>>ASSIGN  13176>>ASSIGN
     13187>>ASSIGN
ITEM$
     12994**DCL     13176<<ASSIGN  13178>>IF      13181<<ASSIGN  13192<<ASSIGN  13196>>ASSIGN  13198>>ASSIGN
ITEM_SIZE
     12995**DCL     13169<<ASSIGN  13172<<ASSIGN  13176>>ASSIGN  13195>>ASSIGN
KH_CTLTBL$
     12857**DCL     12662--IMP-PTR
KV$PTR.INPCNDPND
     12617**DCL     12626--REDEF   12630--REDEF
KV$PTR.LINLST$
     12613**DCL     12614--REDEF
KV$PTR.VDI$
     12611**DCL     13204>>ASSIGN
KV$PTR$
     12605**DCL     12611--IMP-PTR 13204>>ASSIGN
KV$VDI.RQSOTP
     12916**DCL     13204<<ASSIGN
KVB$GET2NSYS
     12584**DCL-ENT 13184--CALL
KV_STT.REQSTATS.DSPMSK
     11497**DCL     11503--REDEF
KV_STT.REQSTATS.SLCMSK
     11538**DCL     11545--REDEF
KY$CTX
     12417**DCL        59--PROC    13211<>CALL    13231<>CALL
KY$CTX.DEFRD.STATUSW
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:47   
     12559**DCL     12561--REDEF
KY$CTX.DVC_STATE
     12420**DCL     13209>>IF      13215>>IF      13230<<ASSIGN
KY$CTX.MODE
     12508**DCL     12516--REDEF
KY$CTX.Q.CURRENT$
     12521**DCL     13161>>ASSIGN  13189>>ASSIGN  13190<<ASSIGN
KY$CTX.Q.CURRSIZE
     12534**DCL     13195<<ASSIGN  13195>>ASSIGN  13202>>IF
KY$CTX.Q.INPUT$
     12522**DCL     13159>>ASSIGN  13196<<ASSIGN
KY$CTX.Q.THRTL.BUF_OVRFLOW
     12528**DCL     13200>>IF      13205<<ASSIGN
KY$CTX.Q.UPRLIMIT
     12535**DCL     13202>>IF
KY$CTX.STATUSW
     12435**DCL     12437--REDEF   12445--REDEF   12459--REDEF   12473--REDEF   12487--REDEF
KY$CTX.VDIENB
     12573**DCL     12579--REDEF
KY$OUTMRK
     12980**DCL     13172--ASSIGN
KY$Q_BLOCK.DUMMY
     12989**DCL     13192--ASSIGN
KY$Q_BLOCK.NEXT$
     12988**DCL     13189<<ASSIGN  13191<<ASSIGN
KY$REC
     12954**DCL     13169--ASSIGN
KY$REC.BLK_END
     12955**DCL     13187<<ASSIGN
KY$REC.RECSIZE
     12957**DCL     12967--IMP-SIZ 13169>>ASSIGN
KY$REC.TXTARRAY
     12966**DCL     12967--REDEF
KY$REC.TYPE
     12956**DCL     13163>>DOCASE  13198<<ASSIGN
KYK$OPCON
PL6.E3A0      #002=KYQ$CLOSE File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:45 Page:48   
     12588**DCL-ENT 13231--CALL
KYN$DISABLE
     12587**DCL-ENT 13157--CALL
KYN$ENABLE
     12586**DCL-ENT 13165--CALL    13222--CALL    13226--CALL    13232--CALL
KYS$OUR_SCHED
     12585**DCL-ENT 13211--CALL
KY_STT_URP.REQSTATS.DSPMSK
     11146**DCL     11152--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     11187**DCL     11194--REDEF
KY_STT_URP.USRSTT.OTPBFRBYTUTL
     11218**DCL     13185<<ASSIGN  13185>>ASSIGN
NOMEM
     13209**LABEL   13184--CALLALT
QBLOCK$
     12993**DCL     13184<>CALL    13189>>ASSIGN  13190>>ASSIGN  13191>>ASSIGN  13192>>ASSIGN
QBLOCKSIZE
     12991**DCL     13183<<ASSIGN  13184<>CALL    13185>>ASSIGN

PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:49   
      314        1        /*T***********************************************************/
      315        2        /*T*                                                         */
      316        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      317        4        /*T*                                                         */
      318        5        /*T***********************************************************/
      319        6        /*P* NAME: KYQ$FREE            RELEASE SPACE USED BY HEAD QUEUE ITEM. */
      320        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      321        8               ECI=0,DIN=7,CSU=3,AND      */
      322        9        /*
      323       10
      324       11          KYQ$FREE
      325       12             This routine is called by a Device Controller after it has
      326       13          successfully processed the last queue'd command.  It does the
      327       14          internal pointer manipulation to release the item.
      328       15             <Disable to the interrupt level of the device, if required>
      329       16
      330       17             <Calculate the size of the item pointed to by Q_OUTPUT$>
      331       18             <Is the Next Item on a different page?>
      332       19             No:
      333       20                <New Q_OUTPUT$ is Old Q_OUTPUT$ + Item Size>
      334       21             Yes:
      335       22                <Note that by definition Q_CURRENT$ ~= Q_FIRST$>
      336       23                <Calculate new Q_OUTPUT$>
      337       24                <Release the QBLOCK currently being pointed to be Q_FIRST$>
      338       25
      339       26             <Have we been Throttled?>
      340       27             Yes:
      341       28                <Is it time to Unthrottle?>
      342       29                Yes:
      343       30                   <Request Output>
      344       31                   <Remember that we're not throttled>
      345       32
      346       33             <Calculate new Q_CURRSIZE>
      347       34             <Enable, if this routine disabled>
      348       35             <Return>
      349       36
      350       37        */
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:50   
      351       38
      352       39        KYQ$FREE: PROC( KY$CTX );
      353       40        %INCLUDE GH_HARDWARE_M;
      354      138        %INCLUDE LCP_6;
      355     4417        %INCLUDE KL_AFCN_C;
      356     4518        %INCLUDE KL_MACRO_C;
      357     7870        %INCLUDE K_ID_E;
      358     7920        %K#ENTID_E;
      359     7939        %K#LYRID_E;
      360     7946        %INCLUDE KY_URP_M;
      361     8241        %INCLUDE KY_SUBS_C;
      362     8330        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      363     8671        %INCLUDE KV_PRMID_E;
      364     8845        %INCLUDE KV$GLB;
      365     9264        %INCLUDE KV$VDH;
      366     9695        %INCLUDE KV$GLBCTX;
      367    10140        %INCLUDE KV$PRM;
      368    10353        %INCLUDE KH$STT;
      369    10383        %INCLUDE KV_GLB_M;
      370    10505        %INCLUDE KY_DATA_R;
      371    11300        /**/
      372    11301        %KY$CTX;
      373    11478        /**/
      374    11479    1          DCL KVV$VDI ENTRY(1) ALTRET;
      375    11480    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      376    11481    1          DCL KYN$ENABLE ENTRY;
      377    11482    1          DCL KYN$DISABLE ENTRY;
      378    11483        /**/
      379    11484        %KV$PTR;
      380    11527        %KV$VDI;
      381    11598        %KV$VDH_EVT (STCLASS=AUTO);
      382    11633        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      383    11668        %KY$REC;
      384    11707        %KY$OUTMRK;
      385    11724        %KY$Q_BLOCK;
      386    11729    1          DCL QBLOCKSIZE UBIN WORD;
      387    11730    1          DCL INHIB_LVL UBIN WORD;
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:51   
      388    11731    1          DCL QBLOCK$ PTR;
      389    11732    1          DCL ITEM_SIZE UBIN;
      390    11733    1          DCL OUTPUT$ PTR;
      391    11734        /**/
      392    11735        %KV_PRMID_E;
      393    11891        /**/
      394    11892        %EJECT;
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:52   
      395    11893    1          CALL KYN$DISABLE;
      396    11894
      397    11895    1          OUTPUT$ = KY$CTX.Q.OUTPUT$;
      398    11896        /*%TRACE(WHEREAT = 15,INPUT$="KY$CTX.Q.INPUT$");*/
      399    11897
      400    11898    2          DO CASE ( OUTPUT$ -> KY$REC.TYPE );
      401    11899    2             CASE ( %KY#TYPE_REC ,%KY#TYPE_VFU );
      402    11900    2                ITEM_SIZE = SIZEW( OUTPUT$ -> KY$REC );
      403    11901
      404    11902    2             CASE ( %KY#TYPE_OUTMRK );
      405    11903    2                ITEM_SIZE = SIZEW( OUTPUT$ -> KY$OUTMRK );
      406    11904
      407    11905    2          END;
      408    11906
      409    11907    1          IF NOT( OUTPUT$ -> KY$REC.BLK_END ) THEN
      410    11908    2             DO;
      411    11909    2                KY$CTX.Q.OUTPUT$ = PINCRW( OUTPUT$, ITEM_SIZE );
      412    11910    2             END;
      413    11911    1          ELSE
      414    11912    2             DO;
      415    11913    2                QBLOCK$ = KY$CTX.Q.FIRST$ -> KY$Q_BLOCK.NEXT$;
      416    11914    2                QBLOCKSIZE = %KY#QBLOCK_SIZE;
      417    11915    2                CALL KVB$RLS2NSYS(QBLOCKSIZE,KY$CTX.Q.FIRST$);
      418    11916    2                KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL -
             11916                         QBLOCKSIZE * 2;
      419    11917    2                KY$CTX.Q.FIRST$ = QBLOCK$;
      420    11918    2                KY$CTX.Q.OUTPUT$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );
      421    11919    2             END;
      422    11920
      423    11921    1          KY$CTX.Q.CURRSIZE = KY$CTX.Q.CURRSIZE - ITEM_SIZE;
      424    11922
      425    11923    1          IF KY$CTX.Q.THRTL.BUF_OVRFLOW THEN
      426    11924    2             DO;
      427    11925    2                IF KY$CTX.Q.CURRSIZE <= KY$CTX.Q.LOWRLIMIT THEN
      428    11926    3                   DO;
      429    11927    3                      IF NOT %KV_VDI.RQSOTP THEN
      430    11928    4                         DO;
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:53   
      431    11929    4                            %KV_VDI.RQSOTP = '1'B;
      432    11930    4                            KV$VDH_EVT = KV_VDH_EVT_RQSOTP;
      433    11931    4                            CALL KVV$VDI(KV$VDH_EVT);
      434    11932    4                         END;              /* IF NOT %KV_VDI.RQSOTP */
      435    11933    3                      KY$CTX.Q.THRTL.BUF_OVRFLOW = '0'B;
      436    11934    3                   END;                    /* IF CURRSIZE <= LOWRLIMIT */
      437    11935    2             END;                          /* IF BUF_OVRFLOW */
      438    11936
      439    11937    1          CALL KYN$ENABLE;
      440    11938    1          RETURN;
      441    11939    1   END KYQ$FREE;
      442    11940        %EOD;

PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:54   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$FREE.

   Procedure KYQ$FREE requires 168 words for executable code.
   Procedure KYQ$FREE requires 20 words of local(AUTO) storage.

PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:55   

 Object Unit name= KYQ$FREE                                   File name= KYQ$Q_ROUTINES.:E05TOU
 UTS= JUL 30 '97 02:46:01.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   168     A8  KYQ$FREE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KYQ$FREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KYN$DISABLE
 yes     yes           Std       2 KVB$RLS2NSYS
 yes     yes           Std       1 KVV$VDI
         yes           Std       0 KYN$ENABLE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                            KV$PTR$                               KV_VDH_EVT_RQSOTP
r    G$ROS$
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:56   


      314        1        /*T***********************************************************/
      315        2        /*T*                                                         */
      316        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      317        4        /*T*                                                         */
      318        5        /*T***********************************************************/
      319        6        /*P* NAME: KYQ$FREE            RELEASE SPACE USED BY HEAD QUEUE ITEM. */
      320        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      321        8               ECI=0,DIN=7,CSU=3,AND      */
      322        9        /*
      323       10
      324       11          KYQ$FREE
      325       12             This routine is called by a Device Controller after it has
      326       13          successfully processed the last queue'd command.  It does the
      327       14          internal pointer manipulation to release the item.
      328       15             <Disable to the interrupt level of the device, if required>
      329       16
      330       17             <Calculate the size of the item pointed to by Q_OUTPUT$>
      331       18             <Is the Next Item on a different page?>
      332       19             No:
      333       20                <New Q_OUTPUT$ is Old Q_OUTPUT$ + Item Size>
      334       21             Yes:
      335       22                <Note that by definition Q_CURRENT$ ~= Q_FIRST$>
      336       23                <Calculate new Q_OUTPUT$>
      337       24                <Release the QBLOCK currently being pointed to be Q_FIRST$>
      338       25
      339       26             <Have we been Throttled?>
      340       27             Yes:
      341       28                <Is it time to Unthrottle?>
      342       29                Yes:
      343       30                   <Request Output>
      344       31                   <Remember that we're not throttled>
      345       32
      346       33             <Calculate new Q_CURRSIZE>
      347       34             <Enable, if this routine disabled>
      348       35             <Return>
      349       36
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:57   
      350       37        */
      351       38
      352       39        KYQ$FREE: PROC( KY$CTX );

     39   0 000000  D380 0000 0000  xent KYQ$FREE        LNJ,B5   X6A_AUTO_1
          0 000003       0014 0001                       DC       20,1

      353       40        %INCLUDE GH_HARDWARE_M;
      354      138        %INCLUDE LCP_6;
      355     4417        %INCLUDE KL_AFCN_C;
      356     4518        %INCLUDE KL_MACRO_C;
      357     7870        %INCLUDE K_ID_E;
      358     7920        %K#ENTID_E;
      359     7939        %K#LYRID_E;
      360     7946        %INCLUDE KY_URP_M;
      361     8241        %INCLUDE KY_SUBS_C;
      362     8330        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      363     8671        %INCLUDE KV_PRMID_E;
      364     8845        %INCLUDE KV$GLB;
      365     9264        %INCLUDE KV$VDH;
      366     9695        %INCLUDE KV$GLBCTX;
      367    10140        %INCLUDE KV$PRM;
      368    10353        %INCLUDE KH$STT;
      369    10383        %INCLUDE KV_GLB_M;
      370    10505        %INCLUDE KY_DATA_R;
      371    11300        /**/
      372    11301        %KY$CTX;
      373    11478        /**/
      374    11479    1          DCL KVV$VDI ENTRY(1) ALTRET;
      375    11480    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      376    11481    1          DCL KYN$ENABLE ENTRY;
      377    11482    1          DCL KYN$DISABLE ENTRY;
      378    11483        /**/
      379    11484        %KV$PTR;
      380    11527        %KV$VDI;
      381    11598        %KV$VDH_EVT (STCLASS=AUTO);
      382    11633        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:58   
      383    11668        %KY$REC;
      384    11707        %KY$OUTMRK;
      385    11724        %KY$Q_BLOCK;
      386    11729    1          DCL QBLOCKSIZE UBIN WORD;
      387    11730    1          DCL INHIB_LVL UBIN WORD;
      388    11731    1          DCL QBLOCK$ PTR;
      389    11732    1          DCL ITEM_SIZE UBIN;
      390    11733    1          DCL OUTPUT$ PTR;
      391    11734        /**/
      392    11735        %KV_PRMID_E;
      393    11891        /**/
      394    11892        %EJECT;
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:59   
      395    11893    1          CALL KYN$DISABLE;

  11893   0 000005  CBF0 0000                            LAB,B4   0,IMO
          0 000007  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          0 00000A       0001                            DC       s:11895,PREL

      396    11894
      397    11895    1          OUTPUT$ = KY$CTX.Q.OUTPUT$;

  11895   0 00000B  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00000D  DCC6 0014                            LDB,B5   20,B6
          0 00000F  DFC7 000D                            STB,B5   OUTPUT$,AUTO

      398    11896        /*%TRACE(WHEREAT = 15,INPUT$="KY$CTX.Q.INPUT$");*/
      399    11897
      400    11898    2          DO CASE ( OUTPUT$ -> KY$REC.TYPE );

  11898   0 000011  B805                                 LDR,R3   ,B5
          0 000012  3048                                 SOR,R3   8
          0 000013  B570 007F                            AND,R3   127,IMO
          0 000015  3D04                                 CMV,R3   4
          0 000016  0281 0018                            BGE      s:11907,PREL
          0 000018  A830 0000 001E  00                   LDR,R2   s:11898+13,R3
          0 00001B  83A0 0000 0022  00                   JMP      s:11900,R2
          0 00001E       000D                            DC       s:11907,PREL
          0 00001F       0000                            DC       s:11900,PREL
          0 000020       000A                            DC       s:11903,PREL
          0 000021       0000                            DC       s:11900,PREL

      401    11899    2             CASE ( %KY#TYPE_REC ,%KY#TYPE_VFU );

      402    11900    2                ITEM_SIZE = SIZEW( OUTPUT$ -> KY$REC );

  11900   0 000022  E805                                 LDR,R6   ,B5
          0 000023  E570 00FF                            AND,R6   255,IMO
          0 000025  6003                                 SOL,R6   3
          0 000026  6E5F                                 ADV,R6   95
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:60   
          0 000027  6044                                 SOR,R6   4
          0 000028  EF47 000C                            STR,R6   ITEM_SIZE,AUTO
          0 00002A  0F81 0004                            B        s:11907,PREL

      403    11901
      404    11902    2             CASE ( %KY#TYPE_OUTMRK );

      405    11903    2                ITEM_SIZE = SIZEW( OUTPUT$ -> KY$OUTMRK );

  11903   0 00002C  6C04                                 LDV,R6   4
          0 00002D  EF47 000C                            STR,R6   ITEM_SIZE,AUTO

      406    11904
      407    11905    2          END;

      408    11906
      409    11907    1          IF NOT( OUTPUT$ -> KY$REC.BLK_END ) THEN

  11907   0 00002F  8985                                 CMZ      ,B5
          0 000030  0801 000A                            BAL      s:11913,PREL

      410    11908    2             DO;

      411    11909    2                KY$CTX.Q.OUTPUT$ = PINCRW( OUTPUT$, ITEM_SIZE );

  11909   0 000032  F847 000C                            LDR,R7   ITEM_SIZE,AUTO
          0 000034  6C00                                 LDV,R6   0
          0 000035  8447 000D                            AID      OUTPUT$,AUTO
          0 000037  8D46 0014                            SDI      20,B6

      412    11910    2             END;

  11910   0 000039  0F81 0033                            B        s:11921,PREL

      413    11911    1          ELSE
      414    11912    2             DO;

PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:61   
      415    11913    2                QBLOCK$ = KY$CTX.Q.FIRST$ -> KY$Q_BLOCK.NEXT$;

  11913   0 00003B  CCC6 000E                            LDB,B4   14,B6
          0 00003D  BC84                                 LDB,B3   ,B4
          0 00003E  BFC7 000A                            STB,B3   QBLOCK$,AUTO

      416    11914    2                QBLOCKSIZE = %KY#QBLOCK_SIZE;

  11914   0 000040  E870 0200                            LDR,R6   512,IMO
          0 000042  EF47 0008                            STR,R6   QBLOCKSIZE,AUTO

      417    11915    2                CALL KVB$RLS2NSYS(QBLOCKSIZE,KY$CTX.Q.FIRST$);

  11915   0 000044  ABC6 000E                            LAB,B2   14,B6
          0 000046  AFC7 0012                            STB,B2   OUTPUT$+5,AUTO
          0 000048  CBC7 0008                            LAB,B4   QBLOCKSIZE,AUTO
          0 00004A  CFC7 0010                            STB,B4   OUTPUT$+3,AUTO
          0 00004C  BBC7 0010                            LAB,B3   OUTPUT$+3,AUTO
          0 00004E  CBF0 0200                            LAB,B4   512,IMO
          0 000050  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          0 000053       0001                            DC       s:11916,PREL

      418    11916    2                KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL -
             11916                         QBLOCKSIZE * 2;

  11916   0 000054  F847 0008                            LDR,R7   QBLOCKSIZE,AUTO
          0 000056  6C00                                 LDV,R6   0
          0 000057  7081                                 DOL,R7   1
          0 000058  8656                                 CPL      R6
          0 000059  8657                                 CPL      R7
          0 00005A  8470 0000 0001                       AID      1,IMO
          0 00005D  8400 0000 001E  xsym                 AID      KY_STT_URP+30
          0 000060  8D00 0000 001E  xsym                 SDI      KY_STT_URP+30

      419    11917    2                KY$CTX.Q.FIRST$ = QBLOCK$;

  11917   0 000063  ECC7 000A                            LDB,B6   QBLOCK$,AUTO
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:62   
          0 000065  DCC7 0004                            LDB,B5   @KY$CTX,AUTO
          0 000067  EFC5 000E                            STB,B6   14,B5

      420    11918    2                KY$CTX.Q.OUTPUT$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );

  11918   0 000069  CBC6 0002                            LAB,B4   2,B6
          0 00006B  CFC5 0014                            STB,B4   20,B5

      421    11919    2             END;

      422    11920
      423    11921    1          KY$CTX.Q.CURRSIZE = KY$CTX.Q.CURRSIZE - ITEM_SIZE;

  11921   0 00006D  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00006F  E846 0017                            LDR,R6   23,B6
          0 000071  E247 000C                            SUB,R6   ITEM_SIZE,AUTO
          0 000073  EF46 0017                            STR,R6   23,B6

      424    11922
      425    11923    1          IF KY$CTX.Q.THRTL.BUF_OVRFLOW THEN

  11923   0 000075  89C6 0016                            CMZ      22,B6
          0 000077  0881 0027                            BAGE     s:11937,PREL

      426    11924    2             DO;

      427    11925    2                IF KY$CTX.Q.CURRSIZE <= KY$CTX.Q.LOWRLIMIT THEN

  11925   0 000079  E946 0019                            CMR,R6   25,B6
          0 00007B  0301 0023                            BG       s:11937,PREL

      428    11926    3                   DO;

      429    11927    3                      IF NOT %KV_VDI.RQSOTP THEN

  11927   0 00007D  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 000080  CC85                                 LDB,B4   ,B5
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:63   
          0 000081  82C4 0019                            LB,'0008'X        25,B4
          0 000083       0008
          0 000084  0501 0015                            BBT      s:11933,PREL

      430    11928    4                         DO;

      431    11929    4                            %KV_VDI.RQSOTP = '1'B;

  11929   0 000086  8944 0019                            LBT,'0008'X       25,B4
  11929   0 000088       0008

      432    11930    4                            KV$VDH_EVT = KV_VDH_EVT_RQSOTP;

  11930   0 000089  8C80 0000 0000  xsym                 LDI      KV_VDH_EVT_RQSOTP
          0 00008C  8D47 0006                            SDI      KV$VDH_EVT,AUTO

      433    11931    4                            CALL KVV$VDI(KV$VDH_EVT);

  11931   0 00008E  CBC7 0006                            LAB,B4   KV$VDH_EVT,AUTO
          0 000090  CFC7 0010                            STB,B4   OUTPUT$+3,AUTO
          0 000092  BBC7 0010                            LAB,B3   OUTPUT$+3,AUTO
          0 000094  CBF0 0100                            LAB,B4   256,IMO
          0 000096  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          0 000099       0001                            DC       s:11933,PREL

      434    11932    4                         END;              /* IF NOT %KV_VDI.RQSOTP */

      435    11933    3                      KY$CTX.Q.THRTL.BUF_OVRFLOW = '0'B;

  11933   0 00009A  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00009C  8846 0016                            LBF,'8000'X       22,B6
          0 00009E       8000

      436    11934    3                   END;                    /* IF CURRSIZE <= LOWRLIMIT */

      437    11935    2             END;                          /* IF BUF_OVRFLOW */

PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:64   
      438    11936
      439    11937    1          CALL KYN$ENABLE;

  11937   0 00009F  CBF0 0000                            LAB,B4   0,IMO
          0 0000A1  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 0000A4       0001                            DC       s:11938,PREL

      440    11938    1          RETURN;

  11938   0 0000A5  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      441    11939    1   END KYQ$FREE;
      442    11940        %EOD;

PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:65   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$FREE.
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:66   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                    C-0-0/w UBIN(16)    r     1 ITEM_SIZE
     6-0-0/w STRC(32)    r     1 KV$VDH_EVT                *0-0-0/w STRC(608)   r     1 KY$CTX
     D-0-0/w PTR         r     1 OUTPUT$                    A-0-0/w PTR         r     1 QBLOCK$
     8-0-0/w UBIN(16)    r     1 QBLOCKSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RQSOTP
     0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(64)    r     1 KY$OUTMRK                  0-0-0/w STRC(8192)  r     1 KY$Q_BLOCK
     0-0-0/w ASTR(80)    r     1 KY$REC


   Procedure KYQ$FREE requires 168 words for executable code.
   Procedure KYQ$FREE requires 20 words of local(AUTO) storage.
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:68   
          MINI XREF LISTING

ITEM_SIZE
     11732**DCL     11900<<ASSIGN  11903<<ASSIGN  11909>>ASSIGN  11921>>ASSIGN
KV$PTR.INPCNDPND
     11511**DCL     11520--REDEF   11524--REDEF
KV$PTR.LINLST$
     11507**DCL     11508--REDEF
KV$PTR.VDI$
     11505**DCL     11927>>IF      11929>>ASSIGN
KV$PTR$
     11499**DCL     11505--IMP-PTR 11927>>IF      11929>>ASSIGN
KV$VDH_EVT
     11625**DCL     11930<<ASSIGN  11931<>CALL
KV$VDI.RQSOTP
     11584**DCL     11927>>IF      11929<<ASSIGN
KVB$RLS2NSYS
     11480**DCL-ENT 11915--CALL
KVV$VDI
     11479**DCL-ENT 11931--CALL
KV_STT.REQSTATS.DSPMSK
     11176**DCL     11182--REDEF
KV_STT.REQSTATS.SLCMSK
     11217**DCL     11224--REDEF
KV_VDH_EVT_RQSOTP
     11660**DCL     11930>>ASSIGN
KY$CTX
     11312**DCL        39--PROC
KY$CTX.DEFRD.STATUSW
     11454**DCL     11456--REDEF
KY$CTX.MODE
     11403**DCL     11411--REDEF
KY$CTX.Q.CURRSIZE
     11429**DCL     11921<<ASSIGN  11921>>ASSIGN  11925>>IF
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:69   
KY$CTX.Q.FIRST$
     11415**DCL     11913>>ASSIGN  11915<>CALL    11917<<ASSIGN
KY$CTX.Q.LOWRLIMIT
     11431**DCL     11925>>IF
KY$CTX.Q.OUTPUT$
     11418**DCL     11895>>ASSIGN  11909<<ASSIGN  11918<<ASSIGN
KY$CTX.Q.THRTL.BUF_OVRFLOW
     11423**DCL     11923>>IF      11933<<ASSIGN
KY$CTX.STATUSW
     11330**DCL     11332--REDEF   11340--REDEF   11354--REDEF   11368--REDEF   11382--REDEF
KY$CTX.VDIENB
     11468**DCL     11474--REDEF
KY$OUTMRK
     11718**DCL     11903--ASSIGN
KY$Q_BLOCK.DUMMY
     11727**DCL     11918--ASSIGN
KY$Q_BLOCK.NEXT$
     11726**DCL     11913>>ASSIGN
KY$REC
     11692**DCL     11900--ASSIGN
KY$REC.BLK_END
     11693**DCL     11907>>IF
KY$REC.RECSIZE
     11695**DCL     11705--IMP-SIZ 11900>>ASSIGN
KY$REC.TXTARRAY
     11704**DCL     11705--REDEF
KY$REC.TYPE
     11694**DCL     11898>>DOCASE
KYN$DISABLE
     11482**DCL-ENT 11893--CALL
KYN$ENABLE
     11481**DCL-ENT 11937--CALL
KY_STT_URP.REQSTATS.DSPMSK
     10825**DCL     10831--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     10866**DCL     10873--REDEF
PL6.E3A0      #003=KYQ$FREE File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:70   
KY_STT_URP.USRSTT.OTPBFRBYTUTL
     10897**DCL     11916<<ASSIGN  11916>>ASSIGN
OUTPUT$
     11733**DCL     11895<<ASSIGN  11898>>DOCASE  11900>>ASSIGN  11900>>ASSIGN  11903>>ASSIGN  11907>>IF
     11909>>ASSIGN
QBLOCK$
     11731**DCL     11913<<ASSIGN  11917>>ASSIGN  11918>>ASSIGN
QBLOCKSIZE
     11729**DCL     11914<<ASSIGN  11915<>CALL    11916>>ASSIGN

PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:71   
      443        1        /*T***********************************************************/
      444        2        /*T*                                                         */
      445        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      446        4        /*T*                                                         */
      447        5        /*T***********************************************************/
      448        6        /*P* NAME: KYQ$KILL            REMOVE ALL NONPROCESSED QUEUE ENTRIES. */
      449        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      450        8               ECI=0,DIN=7,CSU=3,AND      */
      451        9        /*
      452       10
      453       11          KYQ$KILL
      454       12             This is the 'Get Thee Gone!' entry point.  It has the somewhat
      455       13          dubious honor of freeing up all of the queue'd commands that have
      456       14          not yet been processed.
      457       15
      458       16             <Disable to the interrupt level of the device, if required>
      459       17             <LOOP while the KY$CTX.Q.FIRST$ is not NULL>
      460       18                <Update KY$CTX.Q.FIRST$>
      461       19                <Free the Queue block>
      462       20                <ENDLOOP>
      463       21
      464       22             <Enable, if this routine disabled>
      465       23             <Return>
      466       24
      467       25        */
      468       26
      469       27        KYQ$KILL: PROC( KY$CTX );
      470       28        /**/
      471       29        %INCLUDE GH_HARDWARE_M;
      472      127        %INCLUDE LCP_6;
      473     4406        %INCLUDE KL_AFCN_C;
      474     4507        %INCLUDE KL_MACRO_C;
      475     7859        %INCLUDE K_ID_E;
      476     7909        %K#ENTID_E;
      477     7928        %K#LYRID_E;
      478     7935        %INCLUDE KY_URP_M;
      479     8230        %INCLUDE KY_SUBS_C;
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:72   
      480     8319        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      481     8660        %INCLUDE KV_PRMID_E;
      482     8834        %INCLUDE KV$GLB;
      483     9253        %INCLUDE KV$GLBCTX;
      484     9698        %INCLUDE KV$PRM;
      485     9911        %INCLUDE KH$STT;
      486     9941        %INCLUDE KV_GLB_M;
      487    10063        %INCLUDE KY_DATA_R;
      488    10858        /**/
      489    10859        %KY$CTX;
      490    11036        /**/
      491    11037    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      492    11038    1          DCL KYN$ENABLE ENTRY;
      493    11039    1          DCL KYN$DISABLE ENTRY;
      494    11040        /**/
      495    11041        %KY$Q_BLOCK;
      496    11046    1          DCL QBLOCKSIZE UBIN WORD;
      497    11047    1          DCL INHIB_LVL UBIN WORD;
      498    11048    1          DCL QBLOCK$ PTR;
      499    11049        /**/
      500    11050        %KV_PRMID_E;
      501    11206        /**/
      502    11207        %EJECT;
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:73   
      503    11208    1          CALL KYN$DISABLE;
      504    11209        /*%TRACE(WHEREAT = 16,INPUT$="KY$CTX.Q.INPUT$");*/
      505    11210
      506    11211    1          KY$CTX.Q.INPUT$ = ADDR(NIL);
      507    11212    1          KY$CTX.Q.OUTPUT$ = ADDR(NIL);
      508    11213
      509    11214    2          DO WHILE( KY$CTX.Q.FIRST$ ~= ADDR(NIL) );
      510    11215    2             QBLOCK$ = KY$CTX.Q.FIRST$;
      511    11216    2             KY$CTX.Q.FIRST$ = QBLOCK$ -> KY$Q_BLOCK.NEXT$;
      512    11217
      513    11218    2             QBLOCKSIZE = %KY#QBLOCK_SIZE;
      514    11219    2             CALL KVB$RLS2NSYS(QBLOCKSIZE,QBLOCK$);
      515    11220    2             KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL -
             11220                      QBLOCKSIZE * 2;
      516    11221    2          END;
      517    11222
      518    11223    1          KY$CTX.Q.CURRENT$ = ADDR(NIL);
      519    11224    1          KY$CTX.Q.CURRSIZE = 0;
      520    11225
      521    11226    1          CALL KYN$ENABLE;
      522    11227    1          RETURN;
      523    11228    1   END KYQ$KILL;
      524    11229        %EOD;

PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:74   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$KILL.

   Procedure KYQ$KILL requires 90 words for executable code.
   Procedure KYQ$KILL requires 14 words of local(AUTO) storage.

PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:75   

 Object Unit name= KYQ$KILL                                   File name= KYQ$Q_ROUTINES.:E05TOU
 UTS= JUL 30 '97 02:46:51.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    90     5A  KYQ$KILL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KYQ$KILL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KYN$DISABLE
 yes     yes           Std       2 KVB$RLS2NSYS
         yes           Std       0 KYN$ENABLE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                       r    G$ROS$
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:76   


      443        1        /*T***********************************************************/
      444        2        /*T*                                                         */
      445        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      446        4        /*T*                                                         */
      447        5        /*T***********************************************************/
      448        6        /*P* NAME: KYQ$KILL            REMOVE ALL NONPROCESSED QUEUE ENTRIES. */
      449        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      450        8               ECI=0,DIN=7,CSU=3,AND      */
      451        9        /*
      452       10
      453       11          KYQ$KILL
      454       12             This is the 'Get Thee Gone!' entry point.  It has the somewhat
      455       13          dubious honor of freeing up all of the queue'd commands that have
      456       14          not yet been processed.
      457       15
      458       16             <Disable to the interrupt level of the device, if required>
      459       17             <LOOP while the KY$CTX.Q.FIRST$ is not NULL>
      460       18                <Update KY$CTX.Q.FIRST$>
      461       19                <Free the Queue block>
      462       20                <ENDLOOP>
      463       21
      464       22             <Enable, if this routine disabled>
      465       23             <Return>
      466       24
      467       25        */
      468       26
      469       27        KYQ$KILL: PROC( KY$CTX );

     27   0 000000  D380 0000 0000  xent KYQ$KILL        LNJ,B5   X6A_AUTO_1
          0 000003       000E 0001                       DC       14,1

      470       28        /**/
      471       29        %INCLUDE GH_HARDWARE_M;
      472      127        %INCLUDE LCP_6;
      473     4406        %INCLUDE KL_AFCN_C;
      474     4507        %INCLUDE KL_MACRO_C;
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:77   
      475     7859        %INCLUDE K_ID_E;
      476     7909        %K#ENTID_E;
      477     7928        %K#LYRID_E;
      478     7935        %INCLUDE KY_URP_M;
      479     8230        %INCLUDE KY_SUBS_C;
      480     8319        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      481     8660        %INCLUDE KV_PRMID_E;
      482     8834        %INCLUDE KV$GLB;
      483     9253        %INCLUDE KV$GLBCTX;
      484     9698        %INCLUDE KV$PRM;
      485     9911        %INCLUDE KH$STT;
      486     9941        %INCLUDE KV_GLB_M;
      487    10063        %INCLUDE KY_DATA_R;
      488    10858        /**/
      489    10859        %KY$CTX;
      490    11036        /**/
      491    11037    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      492    11038    1          DCL KYN$ENABLE ENTRY;
      493    11039    1          DCL KYN$DISABLE ENTRY;
      494    11040        /**/
      495    11041        %KY$Q_BLOCK;
      496    11046    1          DCL QBLOCKSIZE UBIN WORD;
      497    11047    1          DCL INHIB_LVL UBIN WORD;
      498    11048    1          DCL QBLOCK$ PTR;
      499    11049        /**/
      500    11050        %KV_PRMID_E;
      501    11206        /**/
      502    11207        %EJECT;
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:78   
      503    11208    1          CALL KYN$DISABLE;

  11208   0 000005  CBF0 0000                            LAB,B4   0,IMO
          0 000007  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          0 00000A       0001                            DC       s:11211,PREL

      504    11209        /*%TRACE(WHEREAT = 16,INPUT$="KY$CTX.Q.INPUT$");*/
      505    11210
      506    11211    1          KY$CTX.Q.INPUT$ = ADDR(NIL);

  11211   0 00000B  EB80 0000 0000                       LAB,B6   0
          0 00000E  DCC7 0004                            LDB,B5   @KY$CTX,AUTO
          0 000010  EFC5 0012                            STB,B6   18,B5

      507    11212    1          KY$CTX.Q.OUTPUT$ = ADDR(NIL);

  11212   0 000012  CB80 0000 0000                       LAB,B4   0
          0 000015  CFC5 0014                            STB,B4   20,B5

      508    11213
      509    11214    2          DO WHILE( KY$CTX.Q.FIRST$ ~= ADDR(NIL) );

  11214   0 000017  0F81 002D                            B        s:11221,PREL

      510    11215    2             QBLOCK$ = KY$CTX.Q.FIRST$;

  11215   0 000019  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00001B  DCC6 000E                            LDB,B5   14,B6
          0 00001D  DFC7 0008                            STB,B5   QBLOCK$,AUTO

      511    11216    2             KY$CTX.Q.FIRST$ = QBLOCK$ -> KY$Q_BLOCK.NEXT$;

  11216   0 00001F  CC85                                 LDB,B4   ,B5
          0 000020  CFC6 000E                            STB,B4   14,B6

      512    11217
      513    11218    2             QBLOCKSIZE = %KY#QBLOCK_SIZE;
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:79   

  11218   0 000022  E870 0200                            LDR,R6   512,IMO
          0 000024  EF47 0006                            STR,R6   QBLOCKSIZE,AUTO

      514    11219    2             CALL KVB$RLS2NSYS(QBLOCKSIZE,QBLOCK$);

  11219   0 000026  BBC7 0008                            LAB,B3   QBLOCK$,AUTO
          0 000028  BFC7 000C                            STB,B3   QBLOCK$+4,AUTO
          0 00002A  ABC7 0006                            LAB,B2   QBLOCKSIZE,AUTO
          0 00002C  AFC7 000A                            STB,B2   QBLOCK$+2,AUTO
          0 00002E  BBC7 000A                            LAB,B3   QBLOCK$+2,AUTO
          0 000030  CBF0 0200                            LAB,B4   512,IMO
          0 000032  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          0 000035       0001                            DC       s:11220,PREL

      515    11220    2             KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL -
             11220                      QBLOCKSIZE * 2;

  11220   0 000036  F847 0006                            LDR,R7   QBLOCKSIZE,AUTO
          0 000038  6C00                                 LDV,R6   0
          0 000039  7081                                 DOL,R7   1
          0 00003A  8656                                 CPL      R6
          0 00003B  8657                                 CPL      R7
          0 00003C  8470 0000 0001                       AID      1,IMO
          0 00003F  8400 0000 001E  xsym                 AID      KY_STT_URP+30
          0 000042  8D00 0000 001E  xsym                 SDI      KY_STT_URP+30

      516    11221    2          END;

  11221   0 000045  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000047  8DC6 000E                            CMN      14,B6
          0 000049  09D0                                 BNE      s:11215,SPREL

      517    11222
      518    11223    1          KY$CTX.Q.CURRENT$ = ADDR(NIL);

  11223   0 00004A  DB80 0000 0000                       LAB,B5   0
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:80   
          0 00004D  DFC6 0010                            STB,B5   16,B6

      519    11224    1          KY$CTX.Q.CURRSIZE = 0;

  11224   0 00004F  8746 0017                            CL       23,B6

      520    11225
      521    11226    1          CALL KYN$ENABLE;

  11226   0 000051  CBF0 0000                            LAB,B4   0,IMO
          0 000053  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 000056       0001                            DC       s:11227,PREL

      522    11227    1          RETURN;

  11227   0 000057  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      523    11228    1   END KYQ$KILL;
      524    11229        %EOD;

PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:81   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$KILL.
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:82   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                   *0-0-0/w STRC(608)   r     1 KY$CTX
     8-0-0/w PTR         r     1 QBLOCK$                    6-0-0/w UBIN(16)    r     1 QBLOCKSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(8192)  r     1 KY$Q_BLOCK


   Procedure KYQ$KILL requires 90 words for executable code.
   Procedure KYQ$KILL requires 14 words of local(AUTO) storage.
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:83   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:84   
          MINI XREF LISTING

KVB$RLS2NSYS
     11037**DCL-ENT 11219--CALL
KV_STT.REQSTATS.DSPMSK
     10734**DCL     10740--REDEF
KV_STT.REQSTATS.SLCMSK
     10775**DCL     10782--REDEF
KY$CTX
     10870**DCL        27--PROC
KY$CTX.DEFRD.STATUSW
     11012**DCL     11014--REDEF
KY$CTX.MODE
     10961**DCL     10969--REDEF
KY$CTX.Q.CURRENT$
     10974**DCL     11223<<ASSIGN
KY$CTX.Q.CURRSIZE
     10987**DCL     11224<<ASSIGN
KY$CTX.Q.FIRST$
     10973**DCL     11214>>DOWHILE 11215>>ASSIGN  11216<<ASSIGN
KY$CTX.Q.INPUT$
     10975**DCL     11211<<ASSIGN
KY$CTX.Q.OUTPUT$
     10976**DCL     11212<<ASSIGN
KY$CTX.STATUSW
     10888**DCL     10890--REDEF   10898--REDEF   10912--REDEF   10926--REDEF   10940--REDEF
KY$CTX.VDIENB
     11026**DCL     11032--REDEF
KY$Q_BLOCK.NEXT$
     11043**DCL     11216>>ASSIGN
KYN$DISABLE
     11039**DCL-ENT 11208--CALL
KYN$ENABLE
     11038**DCL-ENT 11226--CALL
PL6.E3A0      #004=KYQ$KILL File=KYQ$Q_ROUTINES.:E05TSI                          WED 07/30/97 02:46 Page:85   
KY_STT_URP.REQSTATS.DSPMSK
     10383**DCL     10389--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     10424**DCL     10431--REDEF
KY_STT_URP.USRSTT.OTPBFRBYTUTL
     10455**DCL     11220<<ASSIGN  11220>>ASSIGN
QBLOCK$
     11048**DCL     11215<<ASSIGN  11216>>ASSIGN  11219<>CALL
QBLOCKSIZE
     11046**DCL     11218<<ASSIGN  11219<>CALL    11220>>ASSIGN

PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:86   
      525        1        /*T***********************************************************/
      526        2        /*T*                                                         */
      527        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      528        4        /*T*                                                         */
      529        5        /*T***********************************************************/
      530        6        /*P* NAME: KYQ$RESET         BRING QUEUE TO FRESHLY INITIALIZED STATE. */
      531        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      532        8               ECI=0,DIN=7,CSU=3,AND      */
      533        9        /*
      534       10
      535       11          KYQ$RESET
      536       12             Although it may seem slightly repeditive, this routine kills
      537       13          the que too.  But it kills it in a somewhat nicer way, it just
      538       14          brings the queue back to the status that it had immediatly after
      539       15          initialization.
      540       16
      541       17           <Loop while CURRENT$ ~=FIRST$>
      542       18              <Update FIRST$>
      543       19              <Free the page pointed to by FIRST$>
      544       20              <Endloop>
      545       21
      546       22           <Set OUTPUT$ to NULL, and INPUT$ to point to BUFFER(FIRST$)>
      547       23           <Set Q_CURRSIZE to 0>
      548       24
      549       25        *V*  We may have to do something with the output markers that VDI
      550       26        *V*  insists on leaving laying around.  And in that case, this
      551       27        *V*  routine will totally have to be re-written, since we will not
      552       28        *V*  be able to treat the queue as a collection of %KY#QBLOCK_SIZE
      553       29        *V*  items.  We will have to look at each queue'd item individualy.
      554       30
      555       31        */
      556       32
      557       33        KYQ$RESET: PROC( KY$CTX );
      558       34        /**/
      559       35        %INCLUDE GH_HARDWARE_M;
      560      133        %INCLUDE LCP_6;
      561     4412        %INCLUDE KL_AFCN_C;
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:87   
      562     4513        %INCLUDE KL_MACRO_C;
      563     7865        %INCLUDE K_ID_E;
      564     7915        %K#ENTID_E;
      565     7934        %K#LYRID_E;
      566     7941        %INCLUDE KY_URP_M;
      567     8236        %INCLUDE KY_SUBS_C;
      568     8325        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      569     8666        %INCLUDE KV_PRMID_E;
      570     8840        %INCLUDE KV$GLB;
      571     9259        %INCLUDE KV$GLBCTX;
      572     9704        %INCLUDE KV$VDH;
      573    10135        %INCLUDE KV$PRM;
      574    10348        %INCLUDE KH$STT;
      575    10378        %INCLUDE KV_GLB_M;
      576    10500        %INCLUDE KY_DATA_R;
      577    11295        /**/
      578    11296        %KY$CTX;
      579    11473        /**/
      580    11474    1          DCL KVV$VDI ENTRY(1) ALTRET;
      581    11475    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      582    11476    1          DCL KYN$ENABLE ENTRY;
      583    11477    1          DCL KYN$DISABLE ENTRY;
      584    11478        /**/
      585    11479        %KV$PTR;
      586    11522        %KV$VDI;
      587    11593        %KV$VDH_EVT (STCLASS=AUTO);
      588    11628        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      589    11663        %KY$Q_BLOCK;
      590    11668        %KY$REC;
      591    11707    1          DCL QBLOCKSIZE UBIN WORD;
      592    11708    1          DCL INHIB_LVL UBIN WORD;
      593    11709    1          DCL QBLOCK$ PTR;
      594    11710        /**/
      595    11711        %KV_PRMID_E;
      596    11867        /**/
      597    11868        %EJECT;
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:88   
      598    11869    1          CALL KYN$DISABLE;
      599    11870        /*%TRACE(WHEREAT = 17,INPUT$="KY$CTX.Q.INPUT$");*/
      600    11871    2          DO WHILE( KY$CTX.Q.FIRST$ ~= KY$CTX.Q.CURRENT$ );
      601    11872    2             QBLOCK$ = KY$CTX.Q.FIRST$;
      602    11873    2             KY$CTX.Q.FIRST$ = QBLOCK$ -> KY$Q_BLOCK.NEXT$;
      603    11874    2             QBLOCKSIZE = %KY#QBLOCK_SIZE;
      604    11875    2             CALL KVB$RLS2NSYS(QBLOCKSIZE,QBLOCK$);
      605    11876    2             KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL -
             11876                      QBLOCKSIZE * 2;
      606    11877    2          END;
      607    11878    1          QBLOCK$ = KY$CTX.Q.FIRST$;
      608    11879    1          QBLOCK$ -> KY$Q_BLOCK.NEXT$ = ADDR(NIL);
      609    11880    1          KY$CTX.Q.INPUT$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );
      610    11881    1          KY$CTX.Q.OUTPUT$ = KY$CTX.Q.INPUT$;
      611    11882    1          KY$CTX.Q.CURRSIZE = 0;
      612    11883    1          KY$CTX.Q.INPUT$ -> KY$REC.TYPE = 0;
      613    11884         /* turn output backon incase so we can receive subsequent data on this device*/
      614    11885    1          %KV_VDI.RQSOTP = '1'B;
      615    11886    1          CALL KYN$ENABLE;
      616    11887    1          RETURN;
      617    11888    1   END KYQ$RESET;

PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:89   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$RESET.

   Procedure KYQ$RESET requires 104 words for executable code.
   Procedure KYQ$RESET requires 16 words of local(AUTO) storage.

    No errors detected in file KYQ$Q_ROUTINES.:E05TSI    .

PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:90   

 Object Unit name= KYQ$RESET                                  File name= KYQ$Q_ROUTINES.:E05TOU
 UTS= JUL 30 '97 02:47:27.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   104     68  KYQ$RESET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KYQ$RESET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KYN$DISABLE
 yes     yes           Std       2 KVB$RLS2NSYS
         yes           Std       0 KYN$ENABLE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KY_STT_URP                            KV$PTR$                          r    G$ROS$
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:91   


      525        1        /*T***********************************************************/
      526        2        /*T*                                                         */
      527        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      528        4        /*T*                                                         */
      529        5        /*T***********************************************************/
      530        6        /*P* NAME: KYQ$RESET         BRING QUEUE TO FRESHLY INITIALIZED STATE. */
      531        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
      532        8               ECI=0,DIN=7,CSU=3,AND      */
      533        9        /*
      534       10
      535       11          KYQ$RESET
      536       12             Although it may seem slightly repeditive, this routine kills
      537       13          the que too.  But it kills it in a somewhat nicer way, it just
      538       14          brings the queue back to the status that it had immediatly after
      539       15          initialization.
      540       16
      541       17           <Loop while CURRENT$ ~=FIRST$>
      542       18              <Update FIRST$>
      543       19              <Free the page pointed to by FIRST$>
      544       20              <Endloop>
      545       21
      546       22           <Set OUTPUT$ to NULL, and INPUT$ to point to BUFFER(FIRST$)>
      547       23           <Set Q_CURRSIZE to 0>
      548       24
      549       25        *V*  We may have to do something with the output markers that VDI
      550       26        *V*  insists on leaving laying around.  And in that case, this
      551       27        *V*  routine will totally have to be re-written, since we will not
      552       28        *V*  be able to treat the queue as a collection of %KY#QBLOCK_SIZE
      553       29        *V*  items.  We will have to look at each queue'd item individualy.
      554       30
      555       31        */
      556       32
      557       33        KYQ$RESET: PROC( KY$CTX );

     33   0 000000  D380 0000 0000  xent KYQ$RESET       LNJ,B5   X6A_AUTO_1
          0 000003       0010 0001                       DC       16,1
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:92   

      558       34        /**/
      559       35        %INCLUDE GH_HARDWARE_M;
      560      133        %INCLUDE LCP_6;
      561     4412        %INCLUDE KL_AFCN_C;
      562     4513        %INCLUDE KL_MACRO_C;
      563     7865        %INCLUDE K_ID_E;
      564     7915        %K#ENTID_E;
      565     7934        %K#LYRID_E;
      566     7941        %INCLUDE KY_URP_M;
      567     8236        %INCLUDE KY_SUBS_C;
      568     8325        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      569     8666        %INCLUDE KV_PRMID_E;
      570     8840        %INCLUDE KV$GLB;
      571     9259        %INCLUDE KV$GLBCTX;
      572     9704        %INCLUDE KV$VDH;
      573    10135        %INCLUDE KV$PRM;
      574    10348        %INCLUDE KH$STT;
      575    10378        %INCLUDE KV_GLB_M;
      576    10500        %INCLUDE KY_DATA_R;
      577    11295        /**/
      578    11296        %KY$CTX;
      579    11473        /**/
      580    11474    1          DCL KVV$VDI ENTRY(1) ALTRET;
      581    11475    1          DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      582    11476    1          DCL KYN$ENABLE ENTRY;
      583    11477    1          DCL KYN$DISABLE ENTRY;
      584    11478        /**/
      585    11479        %KV$PTR;
      586    11522        %KV$VDI;
      587    11593        %KV$VDH_EVT (STCLASS=AUTO);
      588    11628        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP,STCLASS=SYMREF);
      589    11663        %KY$Q_BLOCK;
      590    11668        %KY$REC;
      591    11707    1          DCL QBLOCKSIZE UBIN WORD;
      592    11708    1          DCL INHIB_LVL UBIN WORD;
      593    11709    1          DCL QBLOCK$ PTR;
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:93   
      594    11710        /**/
      595    11711        %KV_PRMID_E;
      596    11867        /**/
      597    11868        %EJECT;
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:94   
      598    11869    1          CALL KYN$DISABLE;

  11869   0 000005  CBF0 0000                            LAB,B4   0,IMO
          0 000007  E380 0000 0000  xent                 LNJ,B6   KYN$DISABLE
          0 00000A       0001                            DC       s:11871,PREL

      599    11870        /*%TRACE(WHEREAT = 17,INPUT$="KY$CTX.Q.INPUT$");*/
      600    11871    2          DO WHILE( KY$CTX.Q.FIRST$ ~= KY$CTX.Q.CURRENT$ );

  11871   0 00000B  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00000D  DCC6 000E                            LDB,B5   14,B6
          0 00000F  DDC6 0010                            CMB,B5   16,B6
          0 000011  0901 0034                            BE       s:11878,PREL

      601    11872    2             QBLOCK$ = KY$CTX.Q.FIRST$;

  11872   0 000013  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000015  DCC6 000E                            LDB,B5   14,B6
          0 000017  DFC7 000A                            STB,B5   QBLOCK$,AUTO

      602    11873    2             KY$CTX.Q.FIRST$ = QBLOCK$ -> KY$Q_BLOCK.NEXT$;

  11873   0 000019  CC85                                 LDB,B4   ,B5
          0 00001A  CFC6 000E                            STB,B4   14,B6

      603    11874    2             QBLOCKSIZE = %KY#QBLOCK_SIZE;

  11874   0 00001C  E870 0200                            LDR,R6   512,IMO
          0 00001E  EF47 0008                            STR,R6   QBLOCKSIZE,AUTO

      604    11875    2             CALL KVB$RLS2NSYS(QBLOCKSIZE,QBLOCK$);

  11875   0 000020  BBC7 000A                            LAB,B3   QBLOCK$,AUTO
          0 000022  BFC7 000E                            STB,B3   QBLOCK$+4,AUTO
          0 000024  CBC7 0008                            LAB,B4   QBLOCKSIZE,AUTO
          0 000026  CFC7 000C                            STB,B4   QBLOCK$+2,AUTO
          0 000028  BBC7 000C                            LAB,B3   QBLOCK$+2,AUTO
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:95   
          0 00002A  CBF0 0200                            LAB,B4   512,IMO
          0 00002C  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          0 00002F       0001                            DC       s:11876,PREL

      605    11876    2             KY_STT_URP.USRSTT.OTPBFRBYTUTL = KY_STT_URP.USRSTT.OTPBFRBYTUTL -
             11876                      QBLOCKSIZE * 2;

  11876   0 000030  F847 0008                            LDR,R7   QBLOCKSIZE,AUTO
          0 000032  6C00                                 LDV,R6   0
          0 000033  7081                                 DOL,R7   1
          0 000034  8656                                 CPL      R6
          0 000035  8657                                 CPL      R7
          0 000036  8470 0000 0001                       AID      1,IMO
          0 000039  8400 0000 001E  xsym                 AID      KY_STT_URP+30
          0 00003C  8D00 0000 001E  xsym                 SDI      KY_STT_URP+30

      606    11877    2          END;

  11877   0 00003F  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000041  DCC6 000E                            LDB,B5   14,B6
          0 000043  DDC6 0010                            CMB,B5   16,B6
          0 000045  09CE                                 BNE      s:11872,SPREL

      607    11878    1          QBLOCK$ = KY$CTX.Q.FIRST$;

  11878   0 000046  DFC7 000A                            STB,B5   QBLOCK$,AUTO

      608    11879    1          QBLOCK$ -> KY$Q_BLOCK.NEXT$ = ADDR(NIL);

  11879   0 000048  CB80 0000 0000                       LAB,B4   0
          0 00004B  CF85                                 STB,B4   ,B5

      609    11880    1          KY$CTX.Q.INPUT$ = ADDR( QBLOCK$ -> KY$Q_BLOCK.DUMMY );

  11880   0 00004C  DCC7 000A                            LDB,B5   QBLOCK$,AUTO
          0 00004E  CBC5 0002                            LAB,B4   2,B5
          0 000050  CFC6 0012                            STB,B4   18,B6
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:96   

      610    11881    1          KY$CTX.Q.OUTPUT$ = KY$CTX.Q.INPUT$;

  11881   0 000052  CFC6 0014                            STB,B4   20,B6

      611    11882    1          KY$CTX.Q.CURRSIZE = 0;

  11882   0 000054  8746 0017                            CL       23,B6

      612    11883    1          KY$CTX.Q.INPUT$ -> KY$REC.TYPE = 0;

  11883   0 000056  8804                                 LBF,'7F00'X       ,B4
  11883   0 000057       7F00

      613    11884         /* turn output backon incase so we can receive subsequent data on this device*/
      614    11885    1          %KV_VDI.RQSOTP = '1'B;

  11885   0 000058  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 00005B  CC85                                 LDB,B4   ,B5
          0 00005C  8944 0019                            LBT,'0008'X       25,B4
          0 00005E       0008

      615    11886    1          CALL KYN$ENABLE;

  11886   0 00005F  CBF0 0000                            LAB,B4   0,IMO
          0 000061  E380 0000 0000  xent                 LNJ,B6   KYN$ENABLE
          0 000064       0001                            DC       s:11887,PREL

      616    11887    1          RETURN;

  11887   0 000065  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      617    11888    1   END KYQ$RESET;

PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:97   
--  Include file information  --

   KY_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KV$PRM.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYQ$RESET.
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:98   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                   *0-0-0/w STRC(608)   r     1 KY$CTX
     A-0-0/w PTR         r     1 QBLOCK$                    8-0-0/w UBIN(16)    r     1 QBLOCKSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(672)   r     1 KY_STT_URP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(8192)  r     1 KY$Q_BLOCK                 0-0-0/w ASTR(80)    r     1 KY$REC


   Procedure KYQ$RESET requires 104 words for executable code.
   Procedure KYQ$RESET requires 16 words of local(AUTO) storage.

    No errors detected in file KYQ$Q_ROUTINES.:E05TSI    .
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:99   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:100  
          MINI XREF LISTING

KV$PTR.INPCNDPND
     11506**DCL     11515--REDEF   11519--REDEF
KV$PTR.LINLST$
     11502**DCL     11503--REDEF
KV$PTR.VDI$
     11500**DCL     11885>>ASSIGN
KV$PTR$
     11494**DCL     11500--IMP-PTR 11885>>ASSIGN
KV$VDI.RQSOTP
     11579**DCL     11885<<ASSIGN
KVB$RLS2NSYS
     11475**DCL-ENT 11875--CALL
KV_STT.REQSTATS.DSPMSK
     11171**DCL     11177--REDEF
KV_STT.REQSTATS.SLCMSK
     11212**DCL     11219--REDEF
KY$CTX
     11307**DCL        33--PROC
KY$CTX.DEFRD.STATUSW
     11449**DCL     11451--REDEF
KY$CTX.MODE
     11398**DCL     11406--REDEF
KY$CTX.Q.CURRENT$
     11411**DCL     11871>>DOWHILE
KY$CTX.Q.CURRSIZE
     11424**DCL     11882<<ASSIGN
KY$CTX.Q.FIRST$
     11410**DCL     11871>>DOWHILE 11872>>ASSIGN  11873<<ASSIGN  11878>>ASSIGN
KY$CTX.Q.INPUT$
     11412**DCL     11880<<ASSIGN  11881>>ASSIGN  11883>>ASSIGN
KY$CTX.Q.OUTPUT$
     11413**DCL     11881<<ASSIGN
PL6.E3A0      #005=KYQ$RESET File=KYQ$Q_ROUTINES.:E05TSI                         WED 07/30/97 02:47 Page:101  
KY$CTX.STATUSW
     11325**DCL     11327--REDEF   11335--REDEF   11349--REDEF   11363--REDEF   11377--REDEF
KY$CTX.VDIENB
     11463**DCL     11469--REDEF
KY$Q_BLOCK.DUMMY
     11666**DCL     11880--ASSIGN
KY$Q_BLOCK.NEXT$
     11665**DCL     11873>>ASSIGN  11879<<ASSIGN
KY$REC.RECSIZE
     11695**DCL     11705--IMP-SIZ
KY$REC.TXTARRAY
     11704**DCL     11705--REDEF
KY$REC.TYPE
     11694**DCL     11883<<ASSIGN
KYN$DISABLE
     11477**DCL-ENT 11869--CALL
KYN$ENABLE
     11476**DCL-ENT 11886--CALL
KY_STT_URP.REQSTATS.DSPMSK
     10820**DCL     10826--REDEF
KY_STT_URP.REQSTATS.SLCMSK
     10861**DCL     10868--REDEF
KY_STT_URP.USRSTT.OTPBFRBYTUTL
     10892**DCL     11876<<ASSIGN  11876>>ASSIGN
QBLOCK$
     11709**DCL     11872<<ASSIGN  11873>>ASSIGN  11875<>CALL    11878<<ASSIGN  11879>>ASSIGN  11880>>ASSIGN
QBLOCKSIZE
     11707**DCL     11874<<ASSIGN  11875<>CALL    11876>>ASSIGN
