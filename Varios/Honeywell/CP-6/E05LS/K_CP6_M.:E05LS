

15:02 JUL 28 '97 K_CP6_M.:E05SI                                            1    
    1      /*M* K_CP6_M - Graphics related macros for Presentation-layer Services */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /* G$GRPRND Presentation layer structure: Graphic rendition */
    8
    9      /* Substructure describing the graphic rendition items. */
   10
   11
   12      /* Abstracted graphic rendition.  The graphic rendition passed */
   13      /* is in GRPRND.ID (and is a number) rather than the bits that */
   14      /* are subordinate to GRPRND. */
   15
   16      %MACRO G$GRPRND(NAME = G$GRPRND,
   17                      LVL = 1,
   18                      LAST = ";",
   19                      STCLASS = BASED,
   20                      ALGN = UNAL,
   21                      ABS(YES = '1'B, NO = '0'B) = '0'B,
   22                      HDN(YES = '1'B, NO = '0'B) = '0'B,
   23                      INCINT(YES = '1'B, NO = '0'B) = '0'B,
   24                      DCRINT(YES = '1'B, NO = '0'B) = '0'B,
   25                      UNDSCR(YES = '1'B, NO = '0'B) = '0'B,
   26                      SLWBLN(YES = '1'B, NO = '0'B) = '0'B,
   27                      FSTBLN(YES = '1'B, NO = '0'B) = '0'B,
   28                      RVRVID(YES = '1'B, NO = '0'B) = '0'B);
   29
   30
   31      %LSET LISTDIR = '0'B;
   32      %LSET LISTEXP = '1'B;
   33      %LSET LISTCOM = '0'B;
   34      %LSET LISTSUB = '1'B;
   35      %LSET STR = SUBSTR(CONCAT(TEXTCHAR(STCLASS), '   '), 0, 3);
   36      %IF (STR = 'STA')OR(STR = 'CON')OR(STR = 'EXT');
   37      %LSET EINIT = CHARTEXT('');
15:02 JUL 28 '97 K_CP6_M.:E05SI                                            2    
   38      %LSET INIT = CHARTEXT('INIT');
   39      %ELSE;
   40      %LSET INIT = CHARTEXT('/*');
   41      %LSET EINIT = CHARTEXT('*/');
   42      %ENDIF;
   43
   44      %IF LVL = 1;
   45      DCL 1 NAME STCLASS ALIGNED,
   46      %ELSE;
   47            %(LVL) NAME ALGN,
   48      %ENDIF;
   49      /*
   50      WARNING - If the following structure is changed, G#GRPRND_E may
   51      also have to be changed to correspond.
   52      */
   53
   54              %(LVL+1) %CHARTEXT('ABS') BIT(1) UNAL %INIT(ABS)%EINIT,
   55
   56      /* Abstract graphic rendition id. */
   57
   58              %(LVL+1) %CHARTEXT('HDN') BIT(1) UNAL %INIT(HDN)%EINIT,
   59
   60      /* Graphic rendition:  increased intensity */
   61
   62              %(LVL+1) %CHARTEXT('INCINT') BIT(1) UNAL %INIT(INCINT)%EINIT,
   63
   64      /* Graphic rendition:  decreased intensity */
   65
   66              %(LVL+1) %CHARTEXT('DCRINT') BIT(1) UNAL %INIT(DCRINT)%EINIT,
   67
   68      /* Graphic rendition:  under-score */
   69
   70              %(LVL+1) %CHARTEXT('UNDSCR') BIT(1) UNAL %INIT(UNDSCR)%EINIT,
   71
   72      /* Graphic rendition:  slow blink */
   73
   74              %(LVL+1) %CHARTEXT('SLWBLN') BIT(1) UNAL %INIT(SLWBLN)%EINIT,
15:02 JUL 28 '97 K_CP6_M.:E05SI                                            3    
   75
   76      /* Graphic rendition:  fast blink */
   77
   78              %(LVL+1) %CHARTEXT('FSTBLN') BIT(1) UNAL %INIT(FSTBLN)%EINIT,
   79
   80      /* Graphic rendition:  reverse video */
   81
   82              %(LVL+1) %CHARTEXT('RVRVID') BIT(1) UNAL %INIT(RVRVID)%EINIT LAST
   83      %MEND;
   84      /*
   85      EQUs describing bit strings that may be used with the G$GRPRND
   86      group item to refer to the individual bits.
   87      */
   88      %MACRO G#GRPRND_E;
   89
   90      %EQU G#GRPRND_ABS    = '10000000'B;
   91      %EQU G#GRPRND_HDN    = '01000000'B;
   92      %EQU G#GRPRND_INCINT = '00100000'B;
   93      %EQU G#GRPRND_DCRINT = '00010000'B;
   94      %EQU G#GRPRND_UNDSCR = '00001000'B;
   95      %EQU G#GRPRND_SLWBLN = '00000100'B;
   96      %EQU G#GRPRND_FSTBLN = '00000010'B;
   97      %EQU G#GRPRND_RVRVID = '00000001'B;
   98
   99      %MEND;
  100
  101
  102
  103      /* G$QLF Presentation layer structure: Qualification definition */
  104
  105      /* Substructure describing the qualification items. */
  106
  107
  108      /* Qualification:  accept all */
  109
  110      %MACRO G$QLF(NAME = G$QLF,
  111                   LVL = 1,
15:02 JUL 28 '97 K_CP6_M.:E05SI                                            4    
  112                   LAST = ";",
  113                   STCLASS = BASED,
  114                   ALGN = UNAL,
  115                   ACPALL(YES = '1'B, NO = '0'B) = '0'B,
  116                   PRTGRD(YES = '1'B, NO = '0'B) = '0'B,
  117                   ACPGRP(YES = '1'B, NO = '0'B) = '0'B,
  118                   ACPNMR(YES = '1'B, NO = '0'B) = '0'B,
  119                   ACPALP(YES = '1'B, NO = '0'B) = '0'B,
  120                   PRT(YES = '1'B, NO = '0'B) = '0'B,
  121                   MSTENT(YES = '1'B, NO = '0'B) = '0'B,
  122                   CNS(YES = '1'B, NO = '0'B) = '0'B);
  123
  124
  125      %LSET LISTDIR = '0'B;
  126      %LSET LISTEXP = '1'B;
  127      %LSET LISTCOM = '0'B;
  128      %LSET LISTSUB = '1'B;
  129      %LSET STR = SUBSTR(CONCAT(TEXTCHAR(STCLASS), '   '), 0, 3);
  130      %IF (STR = 'STA')OR(STR = 'CON')OR(STR = 'EXT');
  131      %LSET INIT = CHARTEXT('INIT');
  132      %LSET EINIT = CHARTEXT('');
  133      %ELSE;
  134      %LSET INIT = CHARTEXT('/*');
  135      %LSET EINIT = CHARTEXT('*/');
  136      %ENDIF;
  137
  138      %IF LVL = 1;
  139      DCL 1 NAME STCLASS ALIGNED,
  140      %ELSE;
  141            %(LVL) NAME ALGN,
  142      %ENDIF;
  143      /*
  144      WARNING - If the following structure is changed, G#QLF_E may
  145      also have to be changed to correspond.
  146      */
  147              %(LVL+1) %CHARTEXT('ACPALL') BIT(1) UNAL %INIT(ACPALL)%EINIT,
  148
15:02 JUL 28 '97 K_CP6_M.:E05SI                                            5    
  149      /* Qualification:  protect, guard */
  150
  151              %(LVL+1) %CHARTEXT('PRTGRD') BIT(1) UNAL %INIT(PRTGRD)%EINIT,
  152
  153      /* Qualification:  accept graphics */
  154
  155              %(LVL+1) %CHARTEXT('ACPGRP') BIT(1) UNAL %INIT(ACPGRP)%EINIT,
  156
  157      /* Qualification:  accept numerics */
  158
  159              %(LVL+1) %CHARTEXT('ACPNMR') BIT(1) UNAL %INIT(ACPNMR)%EINIT,
  160
  161      /* Qualification:  accept alphabetics */
  162
  163              %(LVL+1) %CHARTEXT('ACPALP') BIT(1) UNAL %INIT(ACPALP)%EINIT,
  164
  165      /* Qualification:  protect (and don't guard) */
  166
  167              %(LVL+1) %CHARTEXT('PRT') BIT(1) UNAL %INIT(PRT)%EINIT,
  168
  169      /* Qualification:  must enter.  Input must occur into this field. */
  170
  171              %(LVL+1) %CHARTEXT('MSTENT') BIT(1) UNAL %INIT(MSTENT)%EINIT,
  172
  173      /* Constant.  Don't erase this field unless the erase function */
  174      /* explicitly declares that constant fields are to be erased. */
  175      /* Constant fields are implicitly protected, to a greater extent */
  176      /* than fields that are only 'protected'. */
  177
  178              %(LVL+1) %CHARTEXT('CNS') BIT(1) UNAL %INIT(CNS)%EINIT LAST
  179      %MEND;
  180      /*
  181      EQUs describing bit strings that may be used with the G$QLF
  182      group item to refer to the individual bits.
  183      */
  184      %MACRO G#QLF_E;
  185
15:02 JUL 28 '97 K_CP6_M.:E05SI                                            6    
  186      %EQU G#QLF_ACPALL    = '10000000'B;
  187      %EQU G#QLF_PRTGRD    = '01000000'B;
  188      %EQU G#QLF_ACPGRP    = '00100000'B;
  189      %EQU G#QLF_ACPNMR    = '00010000'B;
  190      %EQU G#QLF_ACPALP    = '00001000'B;
  191      %EQU G#QLF_PRT       = '00000100'B;
  192      %EQU G#QLF_MSTENT    = '00000010'B;
  193      %EQU G#QLF_CNS       = '00000001'B;
  194
  195      %MEND;

