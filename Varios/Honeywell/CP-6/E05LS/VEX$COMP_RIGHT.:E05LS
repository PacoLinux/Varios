VERSION E05

PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:1    
        1        1        /*M*    VEX$COMP_RIGHT - EDIT ROUTINE TO MOVE TEXT RIGHT COMPRESSING BLANKS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$COMP_RIGHT: PROC(CLMN,MOVE#);
        9        9        /**/
       10       10        /*F*     NAME:     VEX$COMP_RIGHT
       11       11                 PURPOSE:  TO SHIFT A RECORD RIGHT FROM A GIVEN COLUMN AND
       12       12                           COMPRESS BLANK STRINGS TO A SINGLE BLANK TO
       13       13                           MAKE ROOM FOR THE SHIFT. THE HOLE CREATED IS FILLED
       14       14                           WITH BLANKS.                            */
       15       15        /**/
       16       16        /*D*     NAME:     VEX$COMP_RIGHT
       17       17                 PARAMETERS: CLMN - FIRST COLUMN TO BE SHIFTED RIGHT
       18       18                           MOVE# - NUMBER OF COLUMN POSITIONS TO BE MOVED
       19       19                 DESCRIPTION: IF DATA WILL BE LOST OFF OF THE RIGHT END OF THE
       20       20                           RECORD THE USER IS INFORMED OF THE 'OVERFLOW'. A
       21       21                           SEARCH IS THEN MADE OF THE RECORD IN REC_BUF FOR BLANK
       22       22                           STRINGS OF MORE THAN ONE BLANK THAT CAN BE COMPRESSED
       23       23                           TO A SINGLE BLANK. THESE BLANK STRINGS ARE COMPRESSED
       24       24                           AS NEEDED UNTIL ENOUGH ROOM HAS BEEN MADE TO DO
       25       25                           THE SHIFT. IF THE END OF RECORD (REC_SIZE) IS ENCOUNTERED
       26       26                           BEFORE ENOUGH BLANKS HAVE BEEN COMPRESSED THEN VEX$MOVE_RIGHT
       27       27                           IS CALLED TO MOVE THE RIGHT HAND SIDE OF THE RECORD
       28       28                           TO THE RIGHT ENOUGH TO BE ABLE TO DO THE SHIFT. THE
       29       29                           HOLE CREATED IS BLANK FILLED AND VEX$COMP_RIGHT ALWAYS
       30       30                           RETURNS NORMALLY.                       */
       31       31        /**/
       32       32        /**********************************************************************/
       33       33        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       34       34        /**********************************************************************/
       35       35    1   DCL CLMN UBIN(36);
       36       36    1   DCL MOVE# UBIN(36);
       37       37        /*****************************************************************/
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:2    
       38       38        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       39       39        /*****************************************************************/
       40       40    1   DCL CR_CLMN UBIN(36);
       41       41    1   DCL I UBIN(36);
       42       42    1   DCL MOVED_COUNT UBIN(36);
       43       43        /*****************************************************************/
       44       44        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       45       45        /*****************************************************************/
       46       46        %INCLUDE VE_SUBS_C;
       47      240        %INCLUDE VE_PERR_C;
       48      457        /**/
       49      458        %INCLUDE VE_FLAGS_R;
       50      509        /**/
       51      510    1   DCL 1 REC_BUF CHAR(PC_RECSIZE#) SYMREF;
       52      511    1   DCL 1 REC_BUF_ARRAY(0:1023) REDEF REC_BUF CHAR(1) CALIGNED;
       53      512    1   DCL REC_SIZE UBIN(36) SYMREF;
       54      513    1   DCL CMD_BUF CHAR(256) SYMREF;
       55      514    1   DCL MAX_CLMN UBIN(36) SYMREF;
       56      515    1   DCL BLANKS CHAR(4)   SYMREF;
       57      516    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       58      517    1   DCL VEX$MOVE_RIGHT ENTRY(2);
       59      518        /*****************************************************************************/
       60      519        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       61      520        /*****************************************************************************/
       62      521    2        IF (CLMN + MOVE# > MAX_CLMN) THEN DO;
       63      522    2           CALL INSERT(REC_BUF,CLMN,REC_SIZE-CLMN,BLANKS);
       64      523    3           IF (~FLAGS.OVERFLOWMSG) THEN DO;
       65      524    3              CALL VEX$ERROR(E$E_OVERFLOW,2);
       66      525    3              FLAGS.OVERFLOWMSG = TRUE;
       67      526    3              END;
       68      527    2           REC_SIZE = MAX_CLMN;
       69      528    2           RETURN;
       70      529    2           END;
       71      530        /**/
       72      531        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
       73      532                 MESSAGE:  Overflow
       74      533                 MESSAGE1: Some characters have been lost off of the right
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:3    
       75      534                           edge of the record
       76      535                 DESCRIPTION: A shifting operation has caused some characters
       77      536                            to slide off of the right end of the record.
       78      537        */
       79      538    1        CR_CLMN = CLMN;                    /* COLUMN OF BLANK STRING = CR_CLMN   */
       80      539    1        MOVED_COUNT = 0;                   /* COLUMNS SHIFTED SO FAR             */
       81      540        /**/
       82      541    2        DO WHILE (MOVED_COUNT < MOVE#);
       83      542    2           CALL INDEX (CR_CLMN,'  ',SUBSTR(REC_BUF,0,REC_SIZE),CR_CLMN)
       84      543    2              ALTRET (CR_MOVE);            /* FIND TWO BLANKS                    */
       85      544    2           I = 1;
       86      545    3           DO WHILE (( I < MOVE# - MOVED_COUNT) AND
       87      546    3              ( I + CR_CLMN <= MAX_CLMN) AND
       88      547    3              ( REC_BUF_ARRAY(CR_CLMN + I + 1) = ' '));
       89      548    3              I = I+1;                     /* COUNT BLANKS                       */
       90      549    3              END;
       91      550        /**/
       92      551    2           CMD_BUF = SUBSTR(REC_BUF,CLMN,CR_CLMN-CLMN); /* TEXT TO MOVE       */
       93      552    2           CALL INSERT (REC_BUF,CLMN+I,CR_CLMN - CLMN,CMD_BUF);
       94      553    2           CALL INSERT (REC_BUF,CLMN,I,BLANKS); /* FILL HOLE                  */
       95      554    2           MOVED_COUNT = MOVED_COUNT+I;
       96      555    2           CR_CLMN = CR_CLMN + I;          /* COUNT UP INDEXES                   */
       97      556    2           END;
       98      557        /**/
       99      558    1        IF (CR_CLMN > REC_SIZE) THEN REC_SIZE = CR_CLMN;
      100      559    1        RETURN;
      101      560        /**/
      102      561    1   CR_MOVE:
      103      562    1        CALL VEX$MOVE_RIGHT(CLMN,MOVE# - MOVED_COUNT);
      104      563    1        RETURN;
      105      564    1   END;                                    /* END VEX$COMP_RIGHT                 */

PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:4    
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$COMP_RIGHT.

   Procedure VEX$COMP_RIGHT requires 125 words for executable code.
   Procedure VEX$COMP_RIGHT requires 12 words of local(AUTO) storage.

    No errors detected in file VEX$COMP_RIGHT.:E05TSI    .

PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:5    

 Object Unit name= VEX$COMP_RIGHT                             File name= VEX$COMP_RIGHT.:E05TOU
 UTS= JUL 30 '97 07:11:27.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  VEX$COMP_RIGHT
    1   Proc  even  none   125    175  VEX$COMP_RIGHT
    2  RoData even  none     3      3  VEX$COMP_RIGHT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  VEX$COMP_RIGHT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VEX$ERROR
         yes           Std       2 VEX$MOVE_RIGHT
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FLAGS                                 REC_BUF                               REC_SIZE
     CMD_BUF                               MAX_CLMN                              BLANKS
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:7    


        1        1        /*M*    VEX$COMP_RIGHT - EDIT ROUTINE TO MOVE TEXT RIGHT COMPRESSING BLANKS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$COMP_RIGHT: PROC(CLMN,MOVE#);

      8  1 000000   000000 700200 xent  VEX$COMP_RI* TSX0  ! X66_AUTO_2
         1 000001   000014 000002                    ZERO    12,2

        9        9        /**/
       10       10        /*F*     NAME:     VEX$COMP_RIGHT
       11       11                 PURPOSE:  TO SHIFT A RECORD RIGHT FROM A GIVEN COLUMN AND
       12       12                           COMPRESS BLANK STRINGS TO A SINGLE BLANK TO
       13       13                           MAKE ROOM FOR THE SHIFT. THE HOLE CREATED IS FILLED
       14       14                           WITH BLANKS.                            */
       15       15        /**/
       16       16        /*D*     NAME:     VEX$COMP_RIGHT
       17       17                 PARAMETERS: CLMN - FIRST COLUMN TO BE SHIFTED RIGHT
       18       18                           MOVE# - NUMBER OF COLUMN POSITIONS TO BE MOVED
       19       19                 DESCRIPTION: IF DATA WILL BE LOST OFF OF THE RIGHT END OF THE
       20       20                           RECORD THE USER IS INFORMED OF THE 'OVERFLOW'. A
       21       21                           SEARCH IS THEN MADE OF THE RECORD IN REC_BUF FOR BLANK
       22       22                           STRINGS OF MORE THAN ONE BLANK THAT CAN BE COMPRESSED
       23       23                           TO A SINGLE BLANK. THESE BLANK STRINGS ARE COMPRESSED
       24       24                           AS NEEDED UNTIL ENOUGH ROOM HAS BEEN MADE TO DO
       25       25                           THE SHIFT. IF THE END OF RECORD (REC_SIZE) IS ENCOUNTERED
       26       26                           BEFORE ENOUGH BLANKS HAVE BEEN COMPRESSED THEN VEX$MOVE_RIGHT
       27       27                           IS CALLED TO MOVE THE RIGHT HAND SIDE OF THE RECORD
       28       28                           TO THE RIGHT ENOUGH TO BE ABLE TO DO THE SHIFT. THE
       29       29                           HOLE CREATED IS BLANK FILLED AND VEX$COMP_RIGHT ALWAYS
       30       30                           RETURNS NORMALLY.                       */
       31       31        /**/
       32       32        /**********************************************************************/
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:8    
       33       33        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       34       34        /**********************************************************************/
       35       35    1   DCL CLMN UBIN(36);
       36       36    1   DCL MOVE# UBIN(36);
       37       37        /*****************************************************************/
       38       38        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       39       39        /*****************************************************************/
       40       40    1   DCL CR_CLMN UBIN(36);
       41       41    1   DCL I UBIN(36);
       42       42    1   DCL MOVED_COUNT UBIN(36);
       43       43        /*****************************************************************/
       44       44        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       45       45        /*****************************************************************/
       46       46        %INCLUDE VE_SUBS_C;
       47      240        %INCLUDE VE_PERR_C;
       48      457        /**/
       49      458        %INCLUDE VE_FLAGS_R;
       50      509        /**/
       51      510    1   DCL 1 REC_BUF CHAR(PC_RECSIZE#) SYMREF;
       52      511    1   DCL 1 REC_BUF_ARRAY(0:1023) REDEF REC_BUF CHAR(1) CALIGNED;
       53      512    1   DCL REC_SIZE UBIN(36) SYMREF;
       54      513    1   DCL CMD_BUF CHAR(256) SYMREF;
       55      514    1   DCL MAX_CLMN UBIN(36) SYMREF;
       56      515    1   DCL BLANKS CHAR(4)   SYMREF;
       57      516    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       58      517    1   DCL VEX$MOVE_RIGHT ENTRY(2);
       59      518        /*****************************************************************************/
       60      519        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       61      520        /*****************************************************************************/
       62      521    2        IF (CLMN + MOVE# > MAX_CLMN) THEN DO;

    521  1 000002   200003 470500                    LDP0    @CLMN,,AUTO
         1 000003   200004 471500                    LDP1    @MOVE#,,AUTO
         1 000004   000000 236100                    LDQ     0,,PR0
         1 000005   100000 036100                    ADLQ    0,,PR1
         1 000006   000000 116000 xsym               CMPQ    MAX_CLMN
         1 000007   000036 602000 1                  TNC     s:538
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:9    
         1 000010   000036 600000 1                  TZE     s:538

       63      522    2           CALL INSERT(REC_BUF,CLMN,REC_SIZE-CLMN,BLANKS);

    522  1 000011   000000 236000 xsym               LDQ     REC_SIZE
         1 000012   000000 136100                    SBLQ    0,,PR0
         1 000013   000000 235100                    LDA     0,,PR0
         1 000014   000000 620006                    EAX0    0,QL
         1 000015   040045 100400                    MLR     fill='040'O
         1 000016   000000 000004 xsym               ADSC9   BLANKS                   cn=0,n=4
         1 000017   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0

       64      523    3           IF (~FLAGS.OVERFLOWMSG) THEN DO;

    523  1 000020   000000 236000 xsym               LDQ     FLAGS
         1 000021   000023 736000                    QLS     19
         1 000022   400000 376003                    ANQ     -131072,DU
         1 000023   400000 676003                    ERQ     -131072,DU
         1 000024   000033 600000 1                  TZE     s:527

       65      524    3              CALL VEX$ERROR(E$E_OVERFLOW,2);

    524  1 000025   000001 630400 2                  EPPR0   1
         1 000026   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000027   000000 701000 xent               TSX1    VEX$ERROR
         1 000030   000000 011000                    NOP     0

       66      525    3              FLAGS.OVERFLOWMSG = TRUE;

    525  1 000031   200000 236007                    LDQ     65536,DL
         1 000032   000000 256000 xsym               ORSQ    FLAGS

       67      526    3              END;

       68      527    2           REC_SIZE = MAX_CLMN;

    527  1 000033   000000 235000 xsym               LDA     MAX_CLMN
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:10   
         1 000034   000000 755000 xsym               STA     REC_SIZE

       69      528    2           RETURN;

    528  1 000035   000000 702200 xent               TSX2  ! X66_ARET

       70      529    2           END;
       71      530        /**/
       72      531        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
       73      532                 MESSAGE:  Overflow
       74      533                 MESSAGE1: Some characters have been lost off of the right
       75      534                           edge of the record
       76      535                 DESCRIPTION: A shifting operation has caused some characters
       77      536                            to slide off of the right end of the record.
       78      537        */
       79      538    1        CR_CLMN = CLMN;                    /* COLUMN OF BLANK STRING = CR_CLMN   */

    538  1 000036   000000 235100                    LDA     0,,PR0
         1 000037   200005 755100                    STA     CR_CLMN,,AUTO

       80      539    1        MOVED_COUNT = 0;                   /* COLUMNS SHIFTED SO FAR             */

    539  1 000040   200007 450100                    STZ     MOVED_COUNT,,AUTO

       81      540        /**/
       82      541    2        DO WHILE (MOVED_COUNT < MOVE#);

    541  1 000041   200007 236100                    LDQ     MOVED_COUNT,,AUTO
         1 000042   100000 116100                    CMPQ    0,,PR1
         1 000043   000152 603000 1                  TRC     s:558

       83      542    2           CALL INDEX (CR_CLMN,'  ',SUBSTR(REC_BUF,0,REC_SIZE),CR_CLMN)

    542  1 000044   000000 236000 xsym               LDQ     REC_SIZE
         1 000045   200005 136100                    SBLQ    CR_CLMN,,AUTO
         1 000046   200010 756100                    STQ     MOVED_COUNT+1,,AUTO
         1 000047   200005 236100                    LDQ     CR_CLMN,,AUTO
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:11   
         1 000050   200010 720100                    LXL0    MOVED_COUNT+1,,AUTO
         1 000051   200005 235100                    LDA     CR_CLMN,,AUTO
         1 000052   000000 120445                    SCD
         1 000053   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0
         1 000054   000000 000002 0                  ADSC9   0                        cn=0,n=2
         1 000055   200005 000100                    ARG     CR_CLMN,,AUTO
         1 000056   200005 056100                    ASQ     CR_CLMN,,AUTO
         1 000057   000062 607000 1                  TTF     s:544
         1 000060   200005 054100                    AOS     CR_CLMN,,AUTO
         1 000061   000160 710000 1                  TRA     CR_MOVE

       84      543    2              ALTRET (CR_MOVE);            /* FIND TWO BLANKS                    */
       85      544    2           I = 1;

    544  1 000062   000001 235007                    LDA     1,DL
         1 000063   200006 755100                    STA     I,,AUTO

       86      545    3           DO WHILE (( I < MOVE# - MOVED_COUNT) AND

    545  1 000064   000070 710000 1                  TRA     s:549

       87      546    3              ( I + CR_CLMN <= MAX_CLMN) AND
       88      547    3              ( REC_BUF_ARRAY(CR_CLMN + I + 1) = ' '));
       89      548    3              I = I+1;                     /* COUNT BLANKS                       */

    548  1 000065   200006 235100                    LDA     I,,AUTO
         1 000066   000001 035007                    ADLA    1,DL
         1 000067   200006 755100                    STA     I,,AUTO

       90      549    3              END;

    549  1 000070   200004 470500                    LDP0    @MOVE#,,AUTO
         1 000071   000000 236100                    LDQ     0,,PR0
         1 000072   200007 136100                    SBLQ    MOVED_COUNT,,AUTO
         1 000073   000112 604000 1                  TMI     s:551
         1 000074   200006 116100                    CMPQ    I,,AUTO
         1 000075   000112 602000 1                  TNC     s:551
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:12   
         1 000076   000112 600000 1                  TZE     s:551
         1 000077   200006 236100                    LDQ     I,,AUTO
         1 000100   200005 036100                    ADLQ    CR_CLMN,,AUTO
         1 000101   000000 116000 xsym               CMPQ    MAX_CLMN
         1 000102   000104 600000 1                  TZE     s:549+12
         1 000103   000112 603000 1                  TRC     s:551
         1 000104   200005 236100                    LDQ     CR_CLMN,,AUTO
         1 000105   200006 036100                    ADLQ    I,,AUTO
         1 000106   040000 106406                    CMPC    fill='040'O
         1 000107   000000 200001 xsym               ADSC9   REC_BUF,Q                cn=1,n=1
         1 000110   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         1 000111   000065 600000 1                  TZE     s:548

       91      550        /**/
       92      551    2           CMD_BUF = SUBSTR(REC_BUF,CLMN,CR_CLMN-CLMN); /* TEXT TO MOVE       */

    551  1 000112   200003 471500                    LDP1    @CLMN,,AUTO
         1 000113   200005 236100                    LDQ     CR_CLMN,,AUTO
         1 000114   100000 136100                    SBLQ    0,,PR1
         1 000115   100000 235100                    LDA     0,,PR1
         1 000116   000000 620006                    EAX0    0,QL
         1 000117   040000 100445                    MLR     fill='040'O
         1 000120   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0
         1 000121   000000 000400 xsym               ADSC9   CMD_BUF                  cn=0,n=256

       93      552    2           CALL INSERT (REC_BUF,CLMN+I,CR_CLMN - CLMN,CMD_BUF);

    552  1 000122   100000 236100                    LDQ     0,,PR1
         1 000123   200006 036100                    ADLQ    I,,AUTO
         1 000124   200010 756100                    STQ     MOVED_COUNT+1,,AUTO
         1 000125   200005 236100                    LDQ     CR_CLMN,,AUTO
         1 000126   100000 136100                    SBLQ    0,,PR1
         1 000127   000000 620006                    EAX0    0,QL
         1 000130   200010 235100                    LDA     MOVED_COUNT+1,,AUTO
         1 000131   040045 100400                    MLR     fill='040'O
         1 000132   000000 000400 xsym               ADSC9   CMD_BUF                  cn=0,n=256
         1 000133   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:13   

       94      553    2           CALL INSERT (REC_BUF,CLMN,I,BLANKS); /* FILL HOLE                  */

    553  1 000134   100000 235100                    LDA     0,,PR1
         1 000135   200006 720100                    LXL0    I,,AUTO
         1 000136   040045 100400                    MLR     fill='040'O
         1 000137   000000 000004 xsym               ADSC9   BLANKS                   cn=0,n=4
         1 000140   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0

       95      554    2           MOVED_COUNT = MOVED_COUNT+I;

    554  1 000141   200007 236100                    LDQ     MOVED_COUNT,,AUTO
         1 000142   200006 036100                    ADLQ    I,,AUTO
         1 000143   200007 756100                    STQ     MOVED_COUNT,,AUTO

       96      555    2           CR_CLMN = CR_CLMN + I;          /* COUNT UP INDEXES                   */

    555  1 000144   200005 236100                    LDQ     CR_CLMN,,AUTO
         1 000145   200006 036100                    ADLQ    I,,AUTO
         1 000146   200005 756100                    STQ     CR_CLMN,,AUTO

       97      556    2           END;

    556  1 000147   200007 236100                    LDQ     MOVED_COUNT,,AUTO
         1 000150   000000 116100                    CMPQ    0,,PR0
         1 000151   000044 602000 1                  TNC     s:542

       98      557        /**/
       99      558    1        IF (CR_CLMN > REC_SIZE) THEN REC_SIZE = CR_CLMN;

    558  1 000152   000000 236000 xsym               LDQ     REC_SIZE
         1 000153   200005 116100                    CMPQ    CR_CLMN,,AUTO
         1 000154   000157 603000 1                  TRC     s:559

    558  1 000155   200005 235100                    LDA     CR_CLMN,,AUTO
         1 000156   000000 755000 xsym               STA     REC_SIZE

PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:14   
      100      559    1        RETURN;

    559  1 000157   000000 702200 xent               TSX2  ! X66_ARET

      101      560        /**/
      102      561    1   CR_MOVE:
      103      562    1        CALL VEX$MOVE_RIGHT(CLMN,MOVE# - MOVED_COUNT);

    562  1 000160   200004 470500       CR_MOVE      LDP0    @MOVE#,,AUTO
         1 000161   000000 236100                    LDQ     0,,PR0
         1 000162   200007 136100                    SBLQ    MOVED_COUNT,,AUTO
         1 000163   200010 756100                    STQ     MOVED_COUNT+1,,AUTO
         1 000164   200010 631500                    EPPR1   MOVED_COUNT+1,,AUTO
         1 000165   200013 451500                    STP1    MOVED_COUNT+4,,AUTO
         1 000166   200003 236100                    LDQ     @CLMN,,AUTO
         1 000167   200012 756100                    STQ     MOVED_COUNT+3,,AUTO
         1 000170   200012 630500                    EPPR0   MOVED_COUNT+3,,AUTO
         1 000171   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000172   000000 701000 xent               TSX1    VEX$MOVE_RIGHT
         1 000173   000000 011000                    NOP     0

      104      563    1        RETURN;

    563  1 000174   000000 702200 xent               TSX2  ! X66_ARET
      105      564    1   END;                                    /* END VEX$COMP_RIGHT                 */

PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:15   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$COMP_RIGHT.
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:16   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CLMN                      4-0-0/w PTR         r     1 @MOVE#
    *0-0-0/w UBIN        r     1 CLMN                       5-0-0/w UBIN        r     1 CR_CLMN
     6-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 MOVE#
     7-0-0/w UBIN        r     1 MOVED_COUNT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(4)     r     1 BLANKS                     0-0-0/c CHAR(256)   r     1 CMD_BUF
     0-0-0/b STRC(72)    r     1 FLAGS                      0-0-0/w UBIN        r     1 MAX_CLMN
     0-0-0/c CHAR(1024)  r     1 REC_BUF
     0-0-0/c CHAR        r     1 REC_BUF_ARRAY(0:1023)
     0-0-0/w UBIN        r     1 REC_SIZE


   Procedure VEX$COMP_RIGHT requires 125 words for executable code.
   Procedure VEX$COMP_RIGHT requires 12 words of local(AUTO) storage.

    No errors detected in file VEX$COMP_RIGHT.:E05TSI    .
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:18   
          MINI XREF LISTING

BLANKS
       515**DCL       522>>CALLBLT   553>>CALLBLT
CLMN
        35**DCL         8--PROC      521>>IF        522>>CALLBLT   522>>CALLBLT   538>>ASSIGN    551>>ASSIGN
       551>>ASSIGN    552>>CALLBLT   552>>CALLBLT   553>>CALLBLT   562<>CALL
CMD_BUF
       513**DCL       551<<ASSIGN    552>>CALLBLT
CR_CLMN
        40**DCL       538<<ASSIGN    542<<CALLBLT   542>>CALLBLT   545>>DOWHILE   545>>DOWHILE   551>>ASSIGN
       552>>CALLBLT   555<<ASSIGN    555>>ASSIGN    558>>IF        558>>ASSIGN
CR_MOVE
       562**LABEL     542--CALLALT
FLAGS.OVERFLOWMSG
       486**DCL       523>>IF        525<<ASSIGN
I
        41**DCL       544<<ASSIGN    545>>DOWHILE   545>>DOWHILE   545>>DOWHILE   548<<ASSIGN    548>>ASSIGN
       552>>CALLBLT   553>>CALLBLT   554>>ASSIGN    555>>ASSIGN
MAX_CLMN
       514**DCL       521>>IF        527>>ASSIGN    545>>DOWHILE
MOVE#
        36**DCL         8--PROC      521>>IF        541>>DOWHILE   545>>DOWHILE   562>>CALL
MOVED_COUNT
        42**DCL       539<<ASSIGN    541>>DOWHILE   545>>DOWHILE   554<<ASSIGN    554>>ASSIGN    562>>CALL
REC_BUF
       510**DCL       511--REDEF     522<<CALLBLT   542>>CALLBLT   551>>ASSIGN    552<<CALLBLT   553<<CALLBLT
REC_BUF_ARRAY
       511**DCL       545>>DOWHILE
REC_SIZE
       512**DCL       522>>CALLBLT   527<<ASSIGN    542>>CALLBLT   558>>IF        558<<ASSIGN
VEX$ERROR
       516**DCL-ENT   524--CALL
VEX$MOVE_RIGHT
PL6.E3A0      #001=VEX$COMP_RIGHT File=VEX$COMP_RIGHT.:E05TSI                    WED 07/30/97 07:11 Page:19   
       517**DCL-ENT   562--CALL
