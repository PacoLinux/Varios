VERSION E05

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:1    
        1        1        /*M* IGN$SYSID Common module for GHOST1 and OUTSYM used to find SYSID range  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        /**/
        9        9        /*D* NAME:        IGN$SYSID
       10       10             PURPOSE:     To find the next SYSID range and  highest existing BOOTID
       11       11             CALL:        CALL IGN$SYSID(FO_CITE);
       12       12                             where: FO_CITE is a MACRO containing .NXT, .NUM and .SPAN
       13       13             DESCRIPTION: IGN$SYSID finds the best SYSID range and if this is
       14       14                          GHOST1, the highest BOOTID found and then calls M$SYSID
       15       15                          to cause these found values to be used.
       16       16
       17       17                          The 'best' range is the first of the following:
       18       18                             1) A range of free sysids at least FO_CITE.SPAN long
       19       19                                starting at FO_CITE.NXT+FO_CITE.NUM.
       20       20                             2) A range of SPAN or more free sysids starting
       21       21                                at the largest found sysid.
       22       22                             3) A range of SPAN or more free sysids anywhere
       23       23                             4) A range of SPAN or more sysids discarding old
       24       24                                records from :JOBSTATS oldest first.
       25       25                             5) The largest range of sysids ignoring :JOBSTATS
       26       26                                records over one day old regardless of range size.
       27       27
       28       28                           After determining what the next SYSID range for this
       29       29                           uptime will be, IGN$SYSID calls M$SYSID to store the
       30       30                           the SYSID range into monitor data, for use when creating
       31       31                           new SYSIDs. The range is defined to start at S_SYSID
       32       32                           and contains S_NSYSIDS available sysids.
       33       33
       34       34                           If the caller is GHOST1, M$SYSID is also passed the highest
       35       35                           found BOOTID. M$SYSID will store a BOOTID one greater
       36       36                           than the larger of this passed BOOTID and S_STREAMFILEID
       37       37                           into S_STREAMFILEID and FO_SYMBINFO.STREAMFILEID.
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:2    
       38       38                           The starting SYSID of the new range will also be stored
       39       39                           into GHOST1's B$ROSEG.STREAMFILENO.
       40       40
       41       41                           SLUG, who inherits GHOST1's ROSEG, stores his own
       42       42                           B$ROSEG.STREAMFILENO into that of each MING ghost
       43       43                           which gets started.  When the output COOP builds an
       44       44                           ouput symbiont file, the name of that file is
       45       45                                BBBSSSSSSNNNNNNCCC
       46       46                           where BBB is S_STREAMFILEID, SSSSSS is the
       47       47                           user's SYSID, NNNNNN is B$ROSEG.STREAMFILENO and
       48       48                           is incremented by one for each such file built,
       49       49                           and CCC is the concurrent mode chunk number.
       50       50
       51       51                           The results of all this are:
       52       52
       53       53                           o Whenever the system is booted, regardless of
       54       54                           whether or not the recovery buffer is saved,
       55       55                           the new SYSID range is guaranteed not to contain any
       56       56                           in-use SYSIDs. In other words, whenever a
       57       57                           batch job is submitted, or an output symbiont
       58       58                           file is created, the existence of the file in
       59       59                           :SYMI or :SYMO will cause the new SYSID range upon
       60       60                           reboot to be reasonable.
       61       61
       62       62                           o Whenever the system is booted, the BOOTID of
       63       63                           any output symbiont file created after we go thru
       64       64                           IGN$SYSID is guaranteed to be greater than that
       65       65                           of any output symbiont files which existed at
       66       66                           boot time.  Since the BOOTID is monotonic increasing,
       67       67                           OUTSYM can recover the output symbiont queues by
       68       68                           scanning the :SYMO file directory from the top
       69       69                           until he encounters a file whose BOOTID is equal
       70       70                           to the current BOOTID and this algorithm
       71       71                           guarantees that he will not recover a file which
       72       72                           is currently being built.
       73       73
       74       74                           o Even though system (MING) ghosts always have
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:3    
       75       75                           the same SYSID, the output symbiont files which
       76       76                           they create always have unique names, due to
       77       77                           their STREAMFILENO always starting out equal to
       78       78                           the first SYSID of the new SYSID range.
       79       79
       80       80                           o When a batch job gets caught in a crash and
       81       81                           is rerun, any output symbiont files created by
       82       82                           it the second time will have different names,
       83       83                           due to the different BOOTID.  However, the
       84       84                           SYSID and NUM for these files will be the same,
       85       85                           and this can cause confusion with operator keyins
       86       86                           which reference these files.  For this and other
       87       87                           reasons, output files for jobs which are to be
       88       88                           rerun will be deleted by OUTSYM at boot time.
       89       89        */
       90       90
       91       91
       92       92        IGN$SYSID: PROC(FO_CITE);
       93       93
       94       94
       95       95
       96       96        /**/
       97       97        /* INCLUDES */
       98       98        /**/
       99       99        %INCLUDE CP_6;
      100      180        %INCLUDE CP_6_SUBS;
      101      720        %INCLUDE JG_GHOSTS_C;
      102      810 S      %INCLUDE B$JIT_C;
      103      811        %INCLUDE F$DCB;
      104      860        %INCLUDE FS$FIT;
      105      903        %INCLUDE F_ERRORS_C;
      106     1143        %INCLUDE FOO_MAC_C;
      107     1891        %INCLUDE XSJ_MAC_C;
      108     1970        %INCLUDE XSJ_SUBS_C;
      109     1997        %INCLUDE XUD_UTS_M;
      110     2079        %XUD$UTS_ENTRIES;
      111     2111        %XUD_UTS_EQU;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:4    
      112     2122        /**/
      113     2123        /* PARAMETERS */
      114     2124        /**/
      115     2125        %FO_CITE(FPTN=FO_CITE,STCLASS=" ",TYP=GMSY);
      116     2184        /**/
      117     2185        /* BASED STRUCTURES */
      118     2186        /**/
      119     2187        %B$JIT0;
      120     2276        %A$JIT6X;
      121     2279    1   DCL B$CHAR3 CHAR(3) BASED ALIGNED;
      122     2280        %B$TCB;
      123     2283        %B$ALT;
      124     2291    1   DCL B$BYTE UBIN BYTE BASED ALIGNED;
      125     2292        %FS_OSFN (FPTN=FS$OSFN,STCLASS=BASED);
      126     2306        %XSJ_INFOKEY (FPTN=XSJ$INFOKEY,STCLASS=BASED);
      127     2319    1   DCL SYS$IDS(0:99999) UBIN(4) UNAL BASED(SYSIDBUF_.BUF$);
      128     2320    1   DCL PAGES$11(0:11263) UBIN BASED(SYSIDBUF_.BUF$);
      129     2321        /**/
      130     2322        /* AUTO */
      131     2323        /**/
      132     2324    1   DCL M$SID$ PTR;
      133     2325    1   DCL I UBIN WORD ALIGNED;
      134     2326    1   DCL AGE UBIN;
      135     2327    1   DCL AGES(0:15) BIT(1) UNAL;
      136     2328    1   DCL DONE BIT(1) ALIGNED;
      137     2329    1   DCL SYSID UBIN;
      138     2330    1   DCL NSYSIDS UBIN;
      139     2331    1   DCL TRIES UBIN;
      140     2332        /**/
      141     2333        /* STATIC */
      142     2334        /**/
      143     2335    1   DCL NOWUTS UBIN WORD STATIC DALIGNED;
      144     2336    1   DCL KEYBUF (0:31) UBIN WORD STATIC ALIGNED;
      145     2337    1   DCL 1 BAD_FID_INFO STATIC CALIGNED,
      146     2338    1         2 * CHAR(0) CALIGNED INIT (' *** GHOST1 found bad sysid in :SYMO, file='),
      147     2339    1         2 NAME_ CHAR(31) CALIGNED INIT(' ');
      148     2340    1   DCL 1 SYSIDBUF_ STATIC DALIGNED,
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:5    
      149     2341    1         2 * BIT(36),
      150     2342    1         2 BUF$ PTR,
      151     2343    1         2 BUFPTR REDEF BUF$ UBIN;
      152     2344        %XSJ_PARAM                             (FPTN=JOPN_IN,
      153     2345                 DCB       = M$SID,
      154     2346                 MODE      = %IN#,
      155     2347                 SHARE     = %IN#,
      156     2348                 STCLASS   = CONSTANT);
      157     2365        %XSJ_INFOKEY                           (FPTN=JKEY,
      158     2366                 STCLASS   = STATIC);
      159     2379        %XSJ_JOBINFO                           (FPTN=JREC,
      160     2380                 STCLASS   = STATIC);
      161     2395        %FS_OSFN                               (FPTN=SYMODUMMY,
      162     2396                 TXBOOTID  = 'zzz',
      163     2397                 TXSYSID   = '999999',
      164     2398                 TXNUM     = '999999',
      165     2399                 TXCNUM    = '999',
      166     2400                 STCLASS   = CONSTANT);
      167     2414        /**/
      168     2415        /* DCBS */
      169     2416        /**/
      170     2417    1   DCL M$SID DCB;
      171     2418        /**/
      172     2419        /* REFS */
      173     2420        /**/
      174     2421    1   DCL B$JIT$ PTR SYMREF;
      175     2422    1   DCL B$TCB$ PTR SYMREF;
      176     2423    1   DCL XSJ$OPENF ENTRY(1) ALTRET;
      177     2424    1   DCL IGJ$JOBSTATS ENTRY(2);
      178     2425        /**/
      179     2426        /* PMME FPTS */
      180     2427        /**/
      181     2428        %FPT_GDP                               (FPTN= FPT_GDP,
      182     2429                 STCLASS   = CONSTANT,
      183     2430                 PAGES     = 11,
      184     2431                 RESULTS   = SYSIDBUF_);
      185     2445        %FPT_FDP                               (FPTN= FPT_FDP,
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:6    
      186     2446                 STCLASS   = CONSTANT,
      187     2447                 PAGES     = 11,
      188     2448                 RESULTS   = SYSIDBUF_);
      189     2462        %FPT_OPEN                              (FPTN= SCAN_SYMOFD,
      190     2463                 STCLASS   = CONSTANT,
      191     2464                 DCB       = M$SID,
      192     2465                 ACCT      = SYMOACCT,
      193     2466                 ASN       = FILE,
      194     2467                 FUN       = IN,
      195     2468                 TEST      = YES,
      196     2469                 NXTF      = YES,
      197     2470                 REV       = YES);
      198     2579        %VLP_ACCT          (FPTN = SYMOACCT,
      199     2580                 STCLASS   = CONSTANT,
      200     2581                 ACCT      = ':SYMO');
      201     2594        %FPT_OPEN                              (FPTN= OPEN_SYMOFD,
      202     2595                 STCLASS   = CONSTANT,
      203     2596                 DCB       = M$SID,
      204     2597                 ACCT      = SYMOACCT,
      205     2598                 NAME      = SYMODUMMY,
      206     2599                 ASN       = FILE,
      207     2600                 FUN       = IN,
      208     2601                 TEST      = YES);
      209     2710        %FPT_OPEN                              (FPTN= SCAN_SYMIFD,
      210     2711                 STCLASS   = CONSTANT,
      211     2712                 DCB       = M$SID,
      212     2713                 ACCT      = SYMIACCT,
      213     2714                 ASN       = FILE,
      214     2715                 FUN       = IN,
      215     2716                 TEST      = YES,
      216     2717                 NXTF      = YES);
      217     2826        %VLP_ACCT          (FPTN = SYMIACCT,
      218     2827                 STCLASS   = CONSTANT,
      219     2828                 ACCT      = ':SYMI');
      220     2841        %FPT_OPEN                              (FPTN= OPEN_SYMIFD,
      221     2842                 STCLASS   = CONSTANT,
      222     2843                 DCB       = M$SID,
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:7    
      223     2844                 ACCT      = SYMIACCT,
      224     2845                 NAME      = SYMIDUMMY,
      225     2846                 ASN       = FILE,
      226     2847                 FUN       = IN,
      227     2848                 TEST      = YES);
      228     2957        %VLP_NAME          (FPTN=SYMIDUMMY,
      229     2958                 STCLASS   = CONSTANT,
      230     2959                 NAME      = '0');
      231     2986        %FPT_TIME                              (FPTN=GET_TIME,
      232     2987                 DEST      = UTS,
      233     2988                 SOURCE    = CLOCK,
      234     2989                 TSTAMP    = NOWUTS,
      235     2990                 STCLASS   = CONSTANT);
      236     3009        %FPT_READ                              (FPTN=JSCAN,
      237     3010                 DCB       = M$SID,
      238     3011                 BUF       = JREC,
      239     3012                 WAIT      = YES,
      240     3013                 KEY       = KEYBUF,
      241     3014                 KEYS      = NO,
      242     3015                 KEYR      = YES,
      243     3016                 STCLASS   = CONSTANT);
      244     3055        %FPT_READ                              (FPTN=JREAD,
      245     3056                 DCB       = M$SID,
      246     3057                 BUF       = JREC,
      247     3058                 WAIT      = YES,
      248     3059                 KEY       = JKEY,
      249     3060                 KEYS      = YES,
      250     3061                 KEYR      = NO,
      251     3062                 STCLASS   = CONSTANT);
      252     3101        %FPT_CLOSE                             (FPTN= FPT_CLOSE,
      253     3102                 STCLASS   = CONSTANT,
      254     3103                 DCB       = M$SID);
      255     3145        %FPT_SYSID                             (FPTN= FPT_SYSID,
      256     3146                 STCLASS   = STATIC);
      257     3162        %VLR_SYSID                             (FPTN= VLR_SYSID,
      258     3163                 STCLASS   = AUTO,
      259     3164                 N         = 512);
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:8    
      260     3178        %FPT_TEMPWROC                          (FPTN=WRITE_BAD_FID,
      261     3179                  STCLASS=STATIC,
      262     3180                  BUFW=BAD_FID_INFO);
      263     3196        /**/
      264     3197        /* SUBS */
      265     3198        /**/
      266     3199        %SUB B$ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      267     3200        %EJECT;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:9    
      268     3201    1           CALL M$TIME(GET_TIME);
      269     3202    1           M$SID$=DCBADDR(DCBNUM(M$SID));
      270     3203        /**/
      271     3204        /* Get SYS$IDS array space, zero it out and initialize BOOTID to lowest value */
      272     3205        /**/
      273     3206    1           SYSIDBUF_.BUFPTR = 0;
      274     3207    1           CALL M$GDP(FPT_GDP);
      275     3208    1           PAGES$11 = '0'B;           /* This is really zeroing out SYS$IDS but  */
      276     3209                                      /* PL6 generates a CSL if SYS$IDS = '0'B is     */
      277     3210                                           /* used instead. That doesn't zero out all */
      278     3211                                      /* 11 pages. This generates an MLR which does   */
      279     3212    1           AGES = '0'B;
      280     3213    1           AGES(0) = '1'B;
      281     3214    1           AGES(1) = '1'B;
      282     3215    1           FPT_SYSID.V = '0'B;
      283     3216    1           FPT_SYSID.V.BOOTID# = '$$$';
      284     3217        /**/
      285     3218        /* Flag SYS$IDS(0) and MING ghost SYSID slots as used */
      286     3219        /**/
      287     3220    2           DO I=0 TO JG_MING#;
      288     3221    2             SYS$IDS(I) = 1;
      289     3222    2             END;
      290     3223        /**/
      291     3224        /* Flag the currently 'in-use' SYSIDs as in use */
      292     3225        /**/
      293     3226    2           DO I=FO_CITE.NXT TO FO_CITE.NXT+FO_CITE.NUM-1;
      294     3227    2             IF I>99999
      295     3228    2               THEN SYS$IDS(I+JG_MING#-99999) = 1;
      296     3229    2               ELSE SYS$IDS(I) = 1;
      297     3230    2             END;
      298     3231        /**/
      299     3232        /* Get running SYSIDs and flag in SYS$IDS */
      300     3233        /**/
      301     3234    1           FPT_SYSID.V.GETSYSIDS# = '1'B;
      302     3235    1           FPT_SYSID.SYSIDBUF_ = VECTOR(VLR_SYSID);
      303     3236    1           CALL M$SYSID(FPT_SYSID);
      304     3237    2           DO I=0 TO VLR_SYSID.NSYSIDS-1;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:10   
      305     3238    2             SYS$IDS(VLR_SYSID.SYSIDS(I)) = 1;
      306     3239    2             END;
      307     3240    1           FPT_SYSID.V.GETSYSIDS# = '0'B;
      308     3241        /**/
      309     3242        /* Scan .:SYMI account for its SYSIDs */
      310     3243        /**/
      311     3244    1           CALL M$OPEN (OPEN_SYMIFD) ALTRET(IGNOR1);
      312     3245    1   IGNOR1: DONE = '0'B;
      313     3246    2           DO WHILE(NOT DONE);
      314     3247    2             CALL M$OPEN (SCAN_SYMIFD) ALTRET(SYMIALT);
      315     3248    2             IF M$SID$->F$DCB.NAME.L=7
      316     3249    2               AND SUBSTR(M$SID$->F$DCB.NAME.C,0,1) >= '0'
      317     3250    2               AND SUBSTR(M$SID$->F$DCB.NAME.C,0,1) <= '9'
      318     3251    3               THEN DO;
      319     3252    3                 CALL CHARBIN(I,SUBSTR(M$SID$->F$DCB.NAME.C,0,6));
      320     3253    3                 SYS$IDS(I) = 1;
      321     3254    3                 END;
      322     3255    3             DO WHILE('0'B);
      323     3256    3   SYMIALT:    IF B$ERRCODE = %E$FDEOF THEN DONE='1'B;
      324     3257    3               END;
      325     3258    2             END;
      326     3259        /**/
      327     3260        /* Scan .:SYMO account for its SYSIDs. These include SYSIDs of jobs with     */
      328     3261        /* pending output and also for MING ghosts, a SYSID-like value in the        */
      329     3262        /* output file number field (used for uniquifying purposes).                 */
      330     3263        /*                                                                           */
      331     3264        /* The last-used BOOTID is also obtained here from the first found file.     */
      332     3265        /**/
      333     3266    1           CALL M$OPEN (OPEN_SYMOFD) ALTRET(IGNOR2);
      334     3267    1   IGNOR2: DONE = '0'B;
      335     3268    2           DO WHILE(NOT DONE);
      336     3269    2             CALL M$OPEN (SCAN_SYMOFD) ALTRET(SYMOALT);
      337     3270    2             IF M$SID$->F$DCB.NAME.L = SYMODUMMY.CNT
      338     3271    2               AND SUBSTR(ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.SYSID,0,1) >= '0'
      339     3272    2               AND SUBSTR(ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.SYSID,0,1) <= '9'
      340     3273    3               THEN DO;
      341     3274    3                 CALL CHARBIN (I,ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.SYSID);
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:11   
      342     3275    3                 IF I>99999
      343     3276    3                   THEN
      344     3277    4                   DO;
      345     3278    4                     BAD_FID_INFO.NAME_=M$SID$->F$DCB.NAME.C;
      346     3279    4                     I=99999;
      347     3280    4                     CALL M$TEMPWROC(WRITE_BAD_FID)
      348     3281    4                       WHENALTRETURN
      349     3282    5                       DO;
      350     3283    5                         END;
      351     3284    4                     END;                  /* DO IF BAD SYSID                    */
      352     3285    3                 SYS$IDS(I) = 1;
      353     3286    3                 IF I>=1 AND I<=JG_MING#
      354     3287    4                   THEN DO; /* MING ghost; get the 'SYSID' from the filenum also */
      355     3288    4                     CALL CHARBIN(I,ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.NUM);
      356     3289    4                     SYS$IDS(I) = 1;
      357     3290    4                     END;
      358     3291    3                 IF FPT_SYSID.V.BOOTID#='$$$'
      359     3292    3                   THEN FPT_SYSID.V.BOOTID#
      360     3293    3                       = ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.BOOTID;
      361     3294    3                 END;
      362     3295    3             DO WHILE('0'B);
      363     3296    3   SYMOALT:    IF B$ERRCODE = %E$FDEOF THEN DONE='1'B;
      364     3297    3               END;
      365     3298    2             END;
      366     3299        /**/
      367     3300        /* Scan the :JOBSTATS file for completed jobs recording their age in days in */
      368     3301        /* SYS$IDS. Any job older than 15 days gets the maximum of 15 days.          */
      369     3302        /**/
      370     3303    1           TRIES=0;
      371     3304    1   TRYAGAIN:;
      372     3305    1           TRIES=TRIES+1;
      373     3306    1           IF TRIES>99 THEN GOTO JSFEND;
      374     3307    1           CALL XSJ$OPENF (JOPN_IN) ALTRET(TRYAGAIN);
      375     3308    1           JKEY.SYSID#=JG_MING#;
      376     3309    1           CALL M$READ (JREAD) ALTRET(IGNOR3);
      377     3310    1   IGNOR3: DONE = '0'B;
      378     3311    2           DO WHILE(NOT DONE);
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:12   
      379     3312    2             CALL M$READ(JSCAN) ALTRET(JSCANALT);
      380     3313    2             IF ADDR(KEYBUF)->B$BYTE = LENGTHC(XSJ$INFOKEY)-1
      381     3314    3               THEN DO;
      382     3315    3                 CALL XUD$UTS_ADJUST(AGE,JREC.OFF_TIME#,%UTS_CSEC_DAY#-1);
      383     3316    3                 CALL XUD$UTS_DIFF(AGE,NOWUTS,AGE);
      384     3317    3                 AGE = AGE / %UTS_CSEC_DAY#;
      385     3318    3                 IF AGE>15 THEN AGE=15;
      386     3319    3                 SYS$IDS(ADDR(KEYBUF)->XSJ$INFOKEY.SYSID#) = AGE;
      387     3320    3                 AGES(AGE) = '1'B;
      388     3321    3                 END;
      389     3322    2               ELSE DONE = '1'B;
      390     3323    3             DO WHILE('0'B);
      391     3324    3   JSCANALT:   IF B$ERRCODE=%E$EOF THEN DONE='1'B;
      392     3325    3               END;
      393     3326    2             END;
      394     3327    1   JSFEND:
      395     3328        /**/
      396     3329        /* Now that we've finally gotten all the known SYSIDs tabulated, lets find   */
      397     3330        /*      the best range of SYSIDs to use next.                                */
      398     3331        /**/
      399     3332    1           CALL FIND_BEST_RANGE(SYSID,NSYSIDS);
      400     3333    1           FPT_SYSID.V.SETSYSID# = '1'B;
      401     3334    1           FPT_SYSID.V.SYSID# = SYSID;
      402     3335    1           FPT_SYSID.V.NSYSIDS# = NSYSIDS;
      403     3336        /**/
      404     3337        /* If this is GHOST1 (system initialization), we must also set BOOTID.       */
      405     3338        /**/
      406     3339    1           IF B$JIT$->B$JIT.USER=JG_GHOST1#
      407     3340    1             THEN FPT_SYSID.V.SETBOOTID# = '1'B;
      408     3341        /**/
      409     3342        /* Now call IGJ$JOBSTATS to delete all records from the :JOBSTATS file       */
      410     3343        /* pertaining to any sysid to be set in the new range.                       */
      411     3344        /**/
      412     3345    1           CALL IGJ$JOBSTATS(SYSID,NSYSIDS);
      413     3346        /**/
      414     3347        /* And now, the call we've all been waiting for...                           */
      415     3348        /*    Set the new SYSID range and possibly the new BOOTID.                   */
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:13   
      416     3349        /**/
      417     3350    1           CALL M$SYSID(FPT_SYSID);
      418     3351        /**/
      419     3352        /* Clean up our messes behind us...                                          */
      420     3353        /**/
      421     3354    1           CALL M$FDP(FPT_FDP);
      422     3355    1           CALL M$CLOSE(FPT_CLOSE);
      423     3356    1           RETURN;
      424     3357        %EJECT;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:14   
      425     3358    1   FIND_BEST_RANGE: PROC(BEST_SYSID,BEST_RANGE);
      426     3359        /*I* NAME:        FIND_BEST_RANGE
      427     3360             PURPOSE:     To find the best range of SYSIDs to return to the system
      428     3361             CALL:        CALL FIND_BEST_RANGE(BEST_SYSID,BEST_RANGE);
      429     3362             INPUT:       SYS$IDS - An array of current sysid usage
      430     3363                          AGES - An array of which ages are to be found in SYS$IDS
      431     3364                          FO_CITE.NXT - Next SYSID to be used by the system before
      432     3365                             this call
      433     3366                          FO_CITE.NUM - Number of sysids left before this call
      434     3367                          FO_CITE.SPAN - Minimum size of sysid range to return
      435     3368                             if at all possible
      436     3369             OUTPUT:      BEST_SYSID - First sysid of the found sysid range
      437     3370                          BEST_RANGE - Number of sysids in the found range
      438     3371             DESCRIPTION: FIND_BEST_RANGE looks for the best sysid range it
      439     3372                          can find and returns this range in BEST_SYSID and
      440     3373                          BEST_RANGE. The 'best' range is the first of the following:
      441     3374                             1) A range of free sysids at least FO_CITE.SPAN long
      442     3375                                starting at FO_CITE.NXT+FO_CITE.NUM.
      443     3376                             2) A range of SPAN starting at the oldest found
      444     3377                                sysid.
      445     3378                             3) A range of SPAN or more free sysids anywhere
      446     3379                             4) A range of SPAN or more sysids discarding old
      447     3380                                records from :JOBSTATS oldest first.
      448     3381                             5) The largest range of sysids ignoring :JOBSTATS
      449     3382                                records over one day old regardless of range size.
      450     3383                          This procedure will always return some range. The range
      451     3384                          may, however, have length 0.
      452     3385        */
      453     3386    2   DCL BEST_SYSID UBIN;
      454     3387    2   DCL BEST_RANGE UBIN;
      455     3388    2   DCL ENDHIT BIT(1) ALIGNED;
      456     3389    2   DCL J UBIN;
      457     3390    2   DCL START UBIN;
      458     3391    2   DCL RSTART SBIN;
      459     3392    2   DCL REALSTART UBIN;
      460     3393    2   DCL RANGE UBIN;
      461     3394        %EJECT;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:15   
      462     3395    2           START = FO_CITE.NXT+FO_CITE.NUM;
      463     3396    2           J=99999;
      464     3397    3           DO WHILE (SYS$IDS(J) = 0 AND J ~= 0);
      465     3398    3             J=J-1;
      466     3399    3             END;
      467     3400    2           IF J > START
      468     3401    2             THEN
      469     3402    2               START = J+1;
      470     3403    2           IF START>99999 THEN START=START+JG_MING#-99999;
      471     3404    2           DONE = '0'B;
      472     3405    3           DO WHILE(NOT DONE);
      473     3406    3             BEST_SYSID = 0;
      474     3407    3             BEST_RANGE = 0;
      475     3408    3             RSTART = START;
      476     3409    4             DO WHILE(RSTART<START+99999 AND NOT DONE);
      477     3410    4               RANGE = 0;
      478     3411    4               REALSTART = MOD(RSTART,100000);
      479     3412    4               ENDHIT = '0'B;
      480     3413    5               DO WHILE(NOT ENDHIT);
      481     3414    5                 J = REALSTART+RANGE;
      482     3415    5                 IF J>99999 THEN J=J+JG_MING#-99999;
      483     3416    5                 IF SYS$IDS(J)=0 AND RANGE+JG_MING#<99999
      484     3417    5                   THEN RANGE = RANGE+1;
      485     3418    5                   ELSE ENDHIT = '1'B;
      486     3419    5                 END;
      487     3420    4               IF RANGE<FO_CITE.SPAN
      488     3421    5                 THEN DO;
      489     3422    5                   IF RANGE>BEST_RANGE
      490     3423    6                     THEN DO;
      491     3424    6                       BEST_SYSID = REALSTART;
      492     3425    6                       BEST_RANGE = RANGE;
      493     3426    6                       END;
      494     3427    5                   RSTART = RSTART+RANGE;
      495     3428    5                   IF REALSTART+RANGE>99999 THEN RSTART=RSTART+JG_MING#;
      496     3429    6                   DO WHILE(SYS$IDS(MOD(RSTART,100000))~=0);
      497     3430    6                     RSTART = RSTART+1;
      498     3431    6                     END;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:16   
      499     3432    5                   END;
      500     3433    5                 ELSE DO;
      501     3434    5                   BEST_SYSID = REALSTART;
      502     3435    5                   BEST_RANGE = RANGE;
      503     3436    5                   DONE = '1'B;
      504     3437    5                   END;
      505     3438    4               END;
      506     3439    3             IF NOT DONE
      507     3440    4               THEN DO;
      508     3441    4                 AGE = 15;
      509     3442    5                 DO WHILE(NOT AGES(AGE));
      510     3443    5                   AGE = AGE-1;
      511     3444    5                   END;
      512     3445    4                 IF AGE=1
      513     3446    4                   THEN DONE = '1'B;
      514     3447    5                   ELSE DO;
      515     3448    6                     DO I=0 TO 99999;
      516     3449    6                       IF SYS$IDS(I)=AGE
      517     3450    6                         THEN SYS$IDS(I) = 0;
      518     3451    6                       END;
      519     3452    5                     AGES(AGE) = '0'B;
      520     3453    5                     END;
      521     3454    4                 END;
      522     3455    3             END;
      523     3456    2           RETURN;
      524     3457    2   END FIND_BEST_RANGE;
      525     3458    1   END IGN$SYSID;

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:17   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IGN$SYSID.

   Procedure IGN$SYSID requires 518 words for executable code.
   Procedure IGN$SYSID requires 284 words of local(AUTO) storage.

    No errors detected in file IGN$SYSID.:E05TSI    .

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:18   

 Object Unit name= IGN$SYSID                                  File name= IGN$SYSID.:E05TOU
 UTS= JUL 29 '97 22:36:44.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    76    114  IGN$SYSID
    2  RoData even  UTS    335    517  IGN$SYSID
    3   DCB   even  none     0      0  M$SID
    4   Proc  even  none   518   1006  IGN$SYSID
    5  RoData even  none    10     12  IGN$SYSID

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        1  IGN$SYSID

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 IGJ$JOBSTATS
 yes     yes           Std       1 XSJ$OPENF
 yes     yes           Std       3 XUD$UTS_ADJUST
 yes     yes           Std       3 XUD$UTS_DIFF
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:19   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$SID                                 B$JIT$
     B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:20   


        1        1        /*M* IGN$SYSID Common module for GHOST1 and OUTSYM used to find SYSID range  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        /**/
        9        9        /*D* NAME:        IGN$SYSID
       10       10             PURPOSE:     To find the next SYSID range and  highest existing BOOTID
       11       11             CALL:        CALL IGN$SYSID(FO_CITE);
       12       12                             where: FO_CITE is a MACRO containing .NXT, .NUM and .SPAN
       13       13             DESCRIPTION: IGN$SYSID finds the best SYSID range and if this is
       14       14                          GHOST1, the highest BOOTID found and then calls M$SYSID
       15       15                          to cause these found values to be used.
       16       16
       17       17                          The 'best' range is the first of the following:
       18       18                             1) A range of free sysids at least FO_CITE.SPAN long
       19       19                                starting at FO_CITE.NXT+FO_CITE.NUM.
       20       20                             2) A range of SPAN or more free sysids starting
       21       21                                at the largest found sysid.
       22       22                             3) A range of SPAN or more free sysids anywhere
       23       23                             4) A range of SPAN or more sysids discarding old
       24       24                                records from :JOBSTATS oldest first.
       25       25                             5) The largest range of sysids ignoring :JOBSTATS
       26       26                                records over one day old regardless of range size.
       27       27
       28       28                           After determining what the next SYSID range for this
       29       29                           uptime will be, IGN$SYSID calls M$SYSID to store the
       30       30                           the SYSID range into monitor data, for use when creating
       31       31                           new SYSIDs. The range is defined to start at S_SYSID
       32       32                           and contains S_NSYSIDS available sysids.
       33       33
       34       34                           If the caller is GHOST1, M$SYSID is also passed the highest
       35       35                           found BOOTID. M$SYSID will store a BOOTID one greater
       36       36                           than the larger of this passed BOOTID and S_STREAMFILEID
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:21   
       37       37                           into S_STREAMFILEID and FO_SYMBINFO.STREAMFILEID.
       38       38                           The starting SYSID of the new range will also be stored
       39       39                           into GHOST1's B$ROSEG.STREAMFILENO.
       40       40
       41       41                           SLUG, who inherits GHOST1's ROSEG, stores his own
       42       42                           B$ROSEG.STREAMFILENO into that of each MING ghost
       43       43                           which gets started.  When the output COOP builds an
       44       44                           ouput symbiont file, the name of that file is
       45       45                                BBBSSSSSSNNNNNNCCC
       46       46                           where BBB is S_STREAMFILEID, SSSSSS is the
       47       47                           user's SYSID, NNNNNN is B$ROSEG.STREAMFILENO and
       48       48                           is incremented by one for each such file built,
       49       49                           and CCC is the concurrent mode chunk number.
       50       50
       51       51                           The results of all this are:
       52       52
       53       53                           o Whenever the system is booted, regardless of
       54       54                           whether or not the recovery buffer is saved,
       55       55                           the new SYSID range is guaranteed not to contain any
       56       56                           in-use SYSIDs. In other words, whenever a
       57       57                           batch job is submitted, or an output symbiont
       58       58                           file is created, the existence of the file in
       59       59                           :SYMI or :SYMO will cause the new SYSID range upon
       60       60                           reboot to be reasonable.
       61       61
       62       62                           o Whenever the system is booted, the BOOTID of
       63       63                           any output symbiont file created after we go thru
       64       64                           IGN$SYSID is guaranteed to be greater than that
       65       65                           of any output symbiont files which existed at
       66       66                           boot time.  Since the BOOTID is monotonic increasing,
       67       67                           OUTSYM can recover the output symbiont queues by
       68       68                           scanning the :SYMO file directory from the top
       69       69                           until he encounters a file whose BOOTID is equal
       70       70                           to the current BOOTID and this algorithm
       71       71                           guarantees that he will not recover a file which
       72       72                           is currently being built.
       73       73
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:22   
       74       74                           o Even though system (MING) ghosts always have
       75       75                           the same SYSID, the output symbiont files which
       76       76                           they create always have unique names, due to
       77       77                           their STREAMFILENO always starting out equal to
       78       78                           the first SYSID of the new SYSID range.
       79       79
       80       80                           o When a batch job gets caught in a crash and
       81       81                           is rerun, any output symbiont files created by
       82       82                           it the second time will have different names,
       83       83                           due to the different BOOTID.  However, the
       84       84                           SYSID and NUM for these files will be the same,
       85       85                           and this can cause confusion with operator keyins
       86       86                           which reference these files.  For this and other
       87       87                           reasons, output files for jobs which are to be
       88       88                           rerun will be deleted by OUTSYM at boot time.
       89       89        */
       90       90
       91       91
       92       92        IGN$SYSID: PROC(FO_CITE);

     92  4 000000   000000 700200 xent  IGN$SYSID    TSX0  ! X66_AUTO_1
         4 000001   000434 000001                    ZERO    284,1

       93       93
       94       94
       95       95
       96       96        /**/
       97       97        /* INCLUDES */
       98       98        /**/
       99       99        %INCLUDE CP_6;
      100      180        %INCLUDE CP_6_SUBS;
      101      720        %INCLUDE JG_GHOSTS_C;
      102      810 S      %INCLUDE B$JIT_C;
      103      811        %INCLUDE F$DCB;
      104      860        %INCLUDE FS$FIT;
      105      903        %INCLUDE F_ERRORS_C;
      106     1143        %INCLUDE FOO_MAC_C;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:23   
      107     1891        %INCLUDE XSJ_MAC_C;
      108     1970        %INCLUDE XSJ_SUBS_C;
      109     1997        %INCLUDE XUD_UTS_M;
      110     2079        %XUD$UTS_ENTRIES;
      111     2111        %XUD_UTS_EQU;
      112     2122        /**/
      113     2123        /* PARAMETERS */
      114     2124        /**/
      115     2125        %FO_CITE(FPTN=FO_CITE,STCLASS=" ",TYP=GMSY);
      116     2184        /**/
      117     2185        /* BASED STRUCTURES */
      118     2186        /**/
      119     2187        %B$JIT0;
      120     2276        %A$JIT6X;
      121     2279    1   DCL B$CHAR3 CHAR(3) BASED ALIGNED;
      122     2280        %B$TCB;
      123     2283        %B$ALT;
      124     2291    1   DCL B$BYTE UBIN BYTE BASED ALIGNED;
      125     2292        %FS_OSFN (FPTN=FS$OSFN,STCLASS=BASED);
      126     2306        %XSJ_INFOKEY (FPTN=XSJ$INFOKEY,STCLASS=BASED);
      127     2319    1   DCL SYS$IDS(0:99999) UBIN(4) UNAL BASED(SYSIDBUF_.BUF$);
      128     2320    1   DCL PAGES$11(0:11263) UBIN BASED(SYSIDBUF_.BUF$);
      129     2321        /**/
      130     2322        /* AUTO */
      131     2323        /**/
      132     2324    1   DCL M$SID$ PTR;
      133     2325    1   DCL I UBIN WORD ALIGNED;
      134     2326    1   DCL AGE UBIN;
      135     2327    1   DCL AGES(0:15) BIT(1) UNAL;
      136     2328    1   DCL DONE BIT(1) ALIGNED;
      137     2329    1   DCL SYSID UBIN;
      138     2330    1   DCL NSYSIDS UBIN;
      139     2331    1   DCL TRIES UBIN;
      140     2332        /**/
      141     2333        /* STATIC */
      142     2334        /**/
      143     2335    1   DCL NOWUTS UBIN WORD STATIC DALIGNED;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:24   
      144     2336    1   DCL KEYBUF (0:31) UBIN WORD STATIC ALIGNED;
      145     2337    1   DCL 1 BAD_FID_INFO STATIC CALIGNED,
      146     2338    1         2 * CHAR(0) CALIGNED INIT (' *** GHOST1 found bad sysid in :SYMO, file='),
      147     2339    1         2 NAME_ CHAR(31) CALIGNED INIT(' ');
      148     2340    1   DCL 1 SYSIDBUF_ STATIC DALIGNED,
      149     2341    1         2 * BIT(36),
      150     2342    1         2 BUF$ PTR,
      151     2343    1         2 BUFPTR REDEF BUF$ UBIN;
      152     2344        %XSJ_PARAM                             (FPTN=JOPN_IN,
      153     2345                 DCB       = M$SID,
      154     2346                 MODE      = %IN#,
      155     2347                 SHARE     = %IN#,
      156     2348                 STCLASS   = CONSTANT);
      157     2365        %XSJ_INFOKEY                           (FPTN=JKEY,
      158     2366                 STCLASS   = STATIC);
      159     2379        %XSJ_JOBINFO                           (FPTN=JREC,
      160     2380                 STCLASS   = STATIC);
      161     2395        %FS_OSFN                               (FPTN=SYMODUMMY,
      162     2396                 TXBOOTID  = 'zzz',
      163     2397                 TXSYSID   = '999999',
      164     2398                 TXNUM     = '999999',
      165     2399                 TXCNUM    = '999',
      166     2400                 STCLASS   = CONSTANT);
      167     2414        /**/
      168     2415        /* DCBS */
      169     2416        /**/
      170     2417    1   DCL M$SID DCB;
      171     2418        /**/
      172     2419        /* REFS */
      173     2420        /**/
      174     2421    1   DCL B$JIT$ PTR SYMREF;
      175     2422    1   DCL B$TCB$ PTR SYMREF;
      176     2423    1   DCL XSJ$OPENF ENTRY(1) ALTRET;
      177     2424    1   DCL IGJ$JOBSTATS ENTRY(2);
      178     2425        /**/
      179     2426        /* PMME FPTS */
      180     2427        /**/
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:25   
      181     2428        %FPT_GDP                               (FPTN= FPT_GDP,
      182     2429                 STCLASS   = CONSTANT,
      183     2430                 PAGES     = 11,
      184     2431                 RESULTS   = SYSIDBUF_);
      185     2445        %FPT_FDP                               (FPTN= FPT_FDP,
      186     2446                 STCLASS   = CONSTANT,
      187     2447                 PAGES     = 11,
      188     2448                 RESULTS   = SYSIDBUF_);
      189     2462        %FPT_OPEN                              (FPTN= SCAN_SYMOFD,
      190     2463                 STCLASS   = CONSTANT,
      191     2464                 DCB       = M$SID,
      192     2465                 ACCT      = SYMOACCT,
      193     2466                 ASN       = FILE,
      194     2467                 FUN       = IN,
      195     2468                 TEST      = YES,
      196     2469                 NXTF      = YES,
      197     2470                 REV       = YES);
      198     2579        %VLP_ACCT          (FPTN = SYMOACCT,
      199     2580                 STCLASS   = CONSTANT,
      200     2581                 ACCT      = ':SYMO');
      201     2594        %FPT_OPEN                              (FPTN= OPEN_SYMOFD,
      202     2595                 STCLASS   = CONSTANT,
      203     2596                 DCB       = M$SID,
      204     2597                 ACCT      = SYMOACCT,
      205     2598                 NAME      = SYMODUMMY,
      206     2599                 ASN       = FILE,
      207     2600                 FUN       = IN,
      208     2601                 TEST      = YES);
      209     2710        %FPT_OPEN                              (FPTN= SCAN_SYMIFD,
      210     2711                 STCLASS   = CONSTANT,
      211     2712                 DCB       = M$SID,
      212     2713                 ACCT      = SYMIACCT,
      213     2714                 ASN       = FILE,
      214     2715                 FUN       = IN,
      215     2716                 TEST      = YES,
      216     2717                 NXTF      = YES);
      217     2826        %VLP_ACCT          (FPTN = SYMIACCT,
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:26   
      218     2827                 STCLASS   = CONSTANT,
      219     2828                 ACCT      = ':SYMI');
      220     2841        %FPT_OPEN                              (FPTN= OPEN_SYMIFD,
      221     2842                 STCLASS   = CONSTANT,
      222     2843                 DCB       = M$SID,
      223     2844                 ACCT      = SYMIACCT,
      224     2845                 NAME      = SYMIDUMMY,
      225     2846                 ASN       = FILE,
      226     2847                 FUN       = IN,
      227     2848                 TEST      = YES);
      228     2957        %VLP_NAME          (FPTN=SYMIDUMMY,
      229     2958                 STCLASS   = CONSTANT,
      230     2959                 NAME      = '0');
      231     2986        %FPT_TIME                              (FPTN=GET_TIME,
      232     2987                 DEST      = UTS,
      233     2988                 SOURCE    = CLOCK,
      234     2989                 TSTAMP    = NOWUTS,
      235     2990                 STCLASS   = CONSTANT);
      236     3009        %FPT_READ                              (FPTN=JSCAN,
      237     3010                 DCB       = M$SID,
      238     3011                 BUF       = JREC,
      239     3012                 WAIT      = YES,
      240     3013                 KEY       = KEYBUF,
      241     3014                 KEYS      = NO,
      242     3015                 KEYR      = YES,
      243     3016                 STCLASS   = CONSTANT);
      244     3055        %FPT_READ                              (FPTN=JREAD,
      245     3056                 DCB       = M$SID,
      246     3057                 BUF       = JREC,
      247     3058                 WAIT      = YES,
      248     3059                 KEY       = JKEY,
      249     3060                 KEYS      = YES,
      250     3061                 KEYR      = NO,
      251     3062                 STCLASS   = CONSTANT);
      252     3101        %FPT_CLOSE                             (FPTN= FPT_CLOSE,
      253     3102                 STCLASS   = CONSTANT,
      254     3103                 DCB       = M$SID);
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:27   
      255     3145        %FPT_SYSID                             (FPTN= FPT_SYSID,
      256     3146                 STCLASS   = STATIC);
      257     3162        %VLR_SYSID                             (FPTN= VLR_SYSID,
      258     3163                 STCLASS   = AUTO,
      259     3164                 N         = 512);
      260     3178        %FPT_TEMPWROC                          (FPTN=WRITE_BAD_FID,
      261     3179                  STCLASS=STATIC,
      262     3180                  BUFW=BAD_FID_INFO);
      263     3196        /**/
      264     3197        /* SUBS */
      265     3198        /**/
      266     3199        %SUB B$ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      267     3200        %EJECT;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:28   
      268     3201    1           CALL M$TIME(GET_TIME);

   3201  4 000002   000410 630400 2                  EPPR0   GET_TIME
         4 000003   020004 713400                    CLIMB   8196
         4 000004   402000 401760                    pmme    nvectors=5

      269     3202    1           M$SID$=DCBADDR(DCBNUM(M$SID));

   3202  4 000005   000000 236007 xsym               LDQ     M$SID,DL
         4 000006   000000 470400 5                  LDP0    0
         4 000007   000000 471500                    LDP1    0,,PR0
         4 000010   100000 236106                    LDQ     0,QL,PR1
         4 000011   200004 756100                    STQ     M$SID$,,AUTO

      270     3203        /**/
      271     3204        /* Get SYS$IDS array space, zero it out and initialize BOOTID to lowest value */
      272     3205        /**/
      273     3206    1           SYSIDBUF_.BUFPTR = 0;

   3206  4 000012   000067 450000 1                  STZ     SYSIDBUF_+1

      274     3207    1           CALL M$GDP(FPT_GDP);

   3207  4 000013   000016 630400 2                  EPPR0   FPT_GDP
         4 000014   030003 713400                    CLIMB   12291
         4 000015   400400 401760                    pmme    nvectors=2

      275     3208    1           PAGES$11 = '0'B;           /* This is really zeroing out SYS$IDS but  */

   3208  4 000016   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000017   130000 220003                    LDX0    45056,DU
         4 000020   000140 100400                    MLR     fill='000'O
         4 000021   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000022   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      276     3209                                      /* PL6 generates a CSL if SYS$IDS = '0'B is     */
      277     3210                                           /* used instead. That doesn't zero out all */
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:29   
      278     3211                                      /* 11 pages. This generates an MLR which does   */
      279     3212    1           AGES = '0'B;

   3212  4 000023   000001 236000 5                  LDQ     1
         4 000024   200007 356100                    ANSQ    AGES,,AUTO

      280     3213    1           AGES(0) = '1'B;

   3213  4 000025   400000 236003                    LDQ     -131072,DU
         4 000026   200007 256100                    ORSQ    AGES,,AUTO

      281     3214    1           AGES(1) = '1'B;

   3214  4 000027   200000 236003                    LDQ     65536,DU
         4 000030   200007 256100                    ORSQ    AGES,,AUTO

      282     3215    1           FPT_SYSID.V = '0'B;

   3215  4 000031   000000 235003                    LDA     0,DU
         4 000032   000000 236003                    LDQ     0,DU
         4 000033   000102 757000 1                  STAQ    FPT_SYSID+4

      283     3216    1           FPT_SYSID.V.BOOTID# = '$$$';

   3216  4 000034   000516 236000 2                  LDQ     FPT_CLOSE+30
         4 000035   000011 772000                    QRL     9
         4 000036   000102 552034 1                  STBQ    FPT_SYSID+4,'34'O

      284     3217        /**/
      285     3218        /* Flag SYS$IDS(0) and MING ghost SYSID slots as used */
      286     3219        /**/
      287     3220    2           DO I=0 TO JG_MING#;

   3220  4 000037   200005 450100                    STZ     I,,AUTO

      288     3221    2             SYS$IDS(I) = 1;

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:30   
   3221  4 000040   200005 235100                    LDA     I,,AUTO
         4 000041   000002 735000                    ALS     2
         4 000042   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000043   003105 061400                    CSR     bolr='003'O
         4 000044   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 000045   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4

      289     3222    2             END;

   3222  4 000046   200005 236100                    LDQ     I,,AUTO
         4 000047   000001 036007                    ADLQ    1,DL
         4 000050   200005 756100                    STQ     I,,AUTO
         4 000051   000020 116007                    CMPQ    16,DL
         4 000052   000040 602000 4                  TNC     s:3221

      290     3223        /**/
      291     3224        /* Flag the currently 'in-use' SYSIDs as in use */
      292     3225        /**/
      293     3226    2           DO I=FO_CITE.NXT TO FO_CITE.NXT+FO_CITE.NUM-1;

   3226  4 000053   200003 470500                    LDP0    @FO_CITE,,AUTO
         4 000054   000001 235100                    LDA     1,,PR0
         4 000055   200005 755100                    STA     I,,AUTO
         4 000056   000100 710000 4                  TRA     s:3230+3

      294     3227    2             IF I>99999

   3227  4 000057   200005 235100                    LDA     I,,AUTO
         4 000060   303240 115007                    CMPA    100000,DL
         4 000061   000070 602000 4                  TNC     s:3229

      295     3228    2               THEN SYS$IDS(I+JG_MING#-99999) = 1;

   3228  4 000062   000002 735000                    ALS     2
         4 000063   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000064   003105 061400                    CSR     bolr='003'O
         4 000065   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:31   
         4 000066   052232 460004                    BDSC    -11110,A,PR0             by=2,bit=6,n=4
         4 000067   000075 710000 4                  TRA     s:3230

      296     3229    2               ELSE SYS$IDS(I) = 1;

   3229  4 000070   000002 735000                    ALS     2
         4 000071   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000072   003105 061400                    CSR     bolr='003'O
         4 000073   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 000074   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4

      297     3230    2             END;

   3230  4 000075   200005 236100                    LDQ     I,,AUTO
         4 000076   000001 036007                    ADLQ    1,DL
         4 000077   200005 756100                    STQ     I,,AUTO
         4 000100   200003 470500                    LDP0    @FO_CITE,,AUTO
         4 000101   000001 236100                    LDQ     1,,PR0
         4 000102   000002 036100                    ADLQ    2,,PR0
         4 000103   200005 116100                    CMPQ    I,,AUTO
         4 000104   000106 600000 4                  TZE     s:3234
         4 000105   000057 603000 4                  TRC     s:3227

      298     3231        /**/
      299     3232        /* Get running SYSIDs and flag in SYS$IDS */
      300     3233        /**/
      301     3234    1           FPT_SYSID.V.GETSYSIDS# = '1'B;

   3234  4 000106   400000 236003                    LDQ     -131072,DU
         4 000107   000102 256000 1                  ORSQ    FPT_SYSID+4

      302     3235    1           FPT_SYSID.SYSIDBUF_ = VECTOR(VLR_SYSID);

   3235  4 000110   000002 235000 5                  LDA     2
         4 000111   200430 452500                    STP2    RANGE+2,,AUTO
         4 000112   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000113   000014 036003                    ADLQ    12,DU
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:32   
         4 000114   000100 757000 1                  STAQ    FPT_SYSID+2

      303     3236    1           CALL M$SYSID(FPT_SYSID);

   3236  4 000115   000076 630400 1                  EPPR0   FPT_SYSID
         4 000116   020026 713400                    CLIMB   8214
         4 000117   400400 401760                    pmme    nvectors=2

      304     3237    2           DO I=0 TO VLR_SYSID.NSYSIDS-1;

   3237  4 000120   200005 450100                    STZ     I,,AUTO
         4 000121   000140 710000 4                  TRA     s:3239+3

      305     3238    2             SYS$IDS(VLR_SYSID.SYSIDS(I)) = 1;

   3238  4 000122   200005 235100                    LDA     I,,AUTO
         4 000123   000001 735000                    ALS     1
         4 000124   000100 101505                    MRL     fill='000'O
         4 000125   200015 000002                    ADSC9   VLR_SYSID+1,A,AUTO       cn=0,n=2
         4 000126   200430 000004                    ADSC9   RANGE+2,,AUTO            cn=0,n=4
         4 000127   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000130   000002 736000                    QLS     2
         4 000131   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000132   003106 061400                    CSR     bolr='003'O
         4 000133   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 000134   000000 000004                    BDSC    0,Q,PR0                  by=0,bit=0,n=4

      306     3239    2             END;

   3239  4 000135   200005 236100                    LDQ     I,,AUTO
         4 000136   000001 036007                    ADLQ    1,DL
         4 000137   200005 756100                    STQ     I,,AUTO
         4 000140   200005 236100                    LDQ     I,,AUTO
         4 000141   200014 116100                    CMPQ    VLR_SYSID,,AUTO
         4 000142   000122 602000 4                  TNC     s:3238

      307     3240    1           FPT_SYSID.V.GETSYSIDS# = '0'B;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:33   

   3240  4 000143   000031 236000 xsym               LDQ     B_VECTNIL+25
         4 000144   000102 356000 1                  ANSQ    FPT_SYSID+4

      308     3241        /**/
      309     3242        /* Scan .:SYMI account for its SYSIDs */
      310     3243        /**/
      311     3244    1           CALL M$OPEN (OPEN_SYMIFD) ALTRET(IGNOR1);

   3244  4 000145   000314 630400 2                  EPPR0   OPEN_SYMIFD
         4 000146   450000 713400                    CLIMB   alt,open
         4 000147   410400 401760                    pmme    nvectors=18
         4 000150   000151 702000 4                  TSX2    IGNOR1

      312     3245    1   IGNOR1: DONE = '0'B;

   3245  4 000151   200010 450100       IGNOR1       STZ     DONE,,AUTO

      313     3246    2           DO WHILE(NOT DONE);

   3246  4 000152   000220 710000 4                  TRA     s:3258

      314     3247    2             CALL M$OPEN (SCAN_SYMIFD) ALTRET(SYMIALT);

   3247  4 000153   000220 630400 2                  EPPR0   SCAN_SYMIFD
         4 000154   450000 713400                    CLIMB   alt,open
         4 000155   410400 401760                    pmme    nvectors=18
         4 000156   000210 702000 4                  TSX2    SYMIALT

      315     3248    2             IF M$SID$->F$DCB.NAME.L=7

   3248  4 000157   200004 470500                    LDP0    M$SID$,,AUTO
         4 000160   000010 236100                    LDQ     8,,PR0
         4 000161   777000 376003                    ANQ     -512,DU
         4 000162   007000 116003                    CMPQ    3584,DU
         4 000163   000207 601000 4                  TNZ     s:3255
         4 000164   000010 236100                    LDQ     8,,PR0
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:34   
         4 000165   000777 376003                    ANQ     511,DU
         4 000166   000060 116003                    CMPQ    48,DU
         4 000167   000207 602000 4                  TNC     s:3255
         4 000170   000010 236100                    LDQ     8,,PR0
         4 000171   000777 376003                    ANQ     511,DU
         4 000172   000071 116003                    CMPQ    57,DU
         4 000173   000175 600000 4                  TZE     s:3252
         4 000174   000207 603000 4                  TRC     s:3255

      316     3249    2               AND SUBSTR(M$SID$->F$DCB.NAME.C,0,1) >= '0'
      317     3250    2               AND SUBSTR(M$SID$->F$DCB.NAME.C,0,1) <= '9'
      318     3251    3               THEN DO;

      319     3252    3                 CALL CHARBIN(I,SUBSTR(M$SID$->F$DCB.NAME.C,0,6));

   3252  4 000175   000100 305500                    DTB
         4 000176   000010 230006                    NDSC9   8,,PR0                   cn=1,s=nosgn,sf=0,n=6
         4 000177   200430 000010                    NDSC9   RANGE+2,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         4 000200   200431 235100                    LDA     RANGE+3,,AUTO
         4 000201   200005 755100                    STA     I,,AUTO

      320     3253    3                 SYS$IDS(I) = 1;

   3253  4 000202   000002 735000                    ALS     2
         4 000203   000067 471400 1                  LDP1    SYSIDBUF_+1
         4 000204   003105 061400                    CSR     bolr='003'O
         4 000205   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 000206   100000 000004                    BDSC    0,A,PR1                  by=0,bit=0,n=4

      321     3254    3                 END;

      322     3255    3             DO WHILE('0'B);

   3255  4 000207   000220 710000 4                  TRA     s:3258

      323     3256    3   SYMIALT:    IF B$ERRCODE = %E$FDEOF THEN DONE='1'B;

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:35   
   3256  4 000210   000000 470400 xsym  SYMIALT      LDP0    B$TCB$
         4 000211   000000 471500                    LDP1    0,,PR0
         4 000212   100102 236100                    LDQ     66,,PR1
         4 000213   377770 376007                    ANQ     131064,DL
         4 000214   001540 116007                    CMPQ    864,DL
         4 000215   000220 601000 4                  TNZ     s:3258

   3256  4 000216   400000 236003                    LDQ     -131072,DU
         4 000217   200010 756100                    STQ     DONE,,AUTO

      324     3257    3               END;

      325     3258    2             END;

   3258  4 000220   200010 234100                    SZN     DONE,,AUTO
         4 000221   000153 605000 4                  TPL     s:3247

      326     3259        /**/
      327     3260        /* Scan .:SYMO account for its SYSIDs. These include SYSIDs of jobs with     */
      328     3261        /* pending output and also for MING ghosts, a SYSID-like value in the        */
      329     3262        /* output file number field (used for uniquifying purposes).                 */
      330     3263        /*                                                                           */
      331     3264        /* The last-used BOOTID is also obtained here from the first found file.     */
      332     3265        /**/
      333     3266    1           CALL M$OPEN (OPEN_SYMOFD) ALTRET(IGNOR2);

   3266  4 000222   000126 630400 2                  EPPR0   OPEN_SYMOFD
         4 000223   450000 713400                    CLIMB   alt,open
         4 000224   410400 401760                    pmme    nvectors=18
         4 000225   000226 702000 4                  TSX2    IGNOR2

      334     3267    1   IGNOR2: DONE = '0'B;

   3267  4 000226   200010 450100       IGNOR2       STZ     DONE,,AUTO

      335     3268    2           DO WHILE(NOT DONE);

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:36   
   3268  4 000227   000340 710000 4                  TRA     s:3298

      336     3269    2             CALL M$OPEN (SCAN_SYMOFD) ALTRET(SYMOALT);

   3269  4 000230   000032 630400 2                  EPPR0   SCAN_SYMOFD
         4 000231   450000 713400                    CLIMB   alt,open
         4 000232   410400 401760                    pmme    nvectors=18
         4 000233   000330 702000 4                  TSX2    SYMOALT

      337     3270    2             IF M$SID$->F$DCB.NAME.L = SYMODUMMY.CNT

   3270  4 000234   200004 470500                    LDP0    M$SID$,,AUTO
         4 000235   000010 236100                    LDQ     8,,PR0
         4 000236   000010 676000 2                  ERQ     SYMODUMMY
         4 000237   777000 376003                    ANQ     -512,DU
         4 000240   000327 601000 4                  TNZ     s:3295
         4 000241   000011 236100                    LDQ     9,,PR0
         4 000242   777000 376003                    ANQ     -512,DU
         4 000243   060000 116003                    CMPQ    24576,DU
         4 000244   000327 602000 4                  TNC     s:3295
         4 000245   000011 236100                    LDQ     9,,PR0
         4 000246   777000 376003                    ANQ     -512,DU
         4 000247   071000 116003                    CMPQ    29184,DU
         4 000250   000252 600000 4                  TZE     s:3274
         4 000251   000327 603000 4                  TRC     s:3295

      338     3271    2               AND SUBSTR(ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.SYSID,0,1) >= '0'
      339     3272    2               AND SUBSTR(ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.SYSID,0,1) <= '9'
      340     3273    3               THEN DO;

      341     3274    3                 CALL CHARBIN (I,ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.SYSID);

   3274  4 000252   000100 305500                    DTB
         4 000253   000011 030006                    NDSC9   9,,PR0                   cn=0,s=nosgn,sf=0,n=6
         4 000254   200430 000010                    NDSC9   RANGE+2,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         4 000255   200431 235100                    LDA     RANGE+3,,AUTO
         4 000256   200005 755100                    STA     I,,AUTO
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:37   

      342     3275    3                 IF I>99999

   3275  4 000257   303240 115007                    CMPA    100000,DL
         4 000260   000273 602000 4                  TNC     s:3285

      343     3276    3                   THEN
      344     3277    4                   DO;

      345     3278    4                     BAD_FID_INFO.NAME_=M$SID$->F$DCB.NAME.C;

   3278  4 000261   040000 100500                    MLR     fill='040'O
         4 000262   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31
         4 000263   000054 600037 1                  ADSC9   BAD_FID_INFO+10          cn=3,n=31

      346     3279    4                     I=99999;

   3279  4 000264   303237 236007                    LDQ     99999,DL
         4 000265   200005 756100                    STQ     I,,AUTO

      347     3280    4                     CALL M$TEMPWROC(WRITE_BAD_FID)

   3280  4 000266   000104 630400 1                  EPPR0   WRITE_BAD_FID
         4 000267   510000 713400                    CLIMB   alt,+36864
         4 000270   401000 401760                    pmme    nvectors=3
         4 000271   000273 702000 4                  TSX2    s:3285
         4 000272   000273 710000 4                  TRA     s:3285

      348     3281    4                       WHENALTRETURN
      349     3282    5                       DO;

      350     3283    5                         END;

      351     3284    4                     END;                  /* DO IF BAD SYSID                    */

      352     3285    3                 SYS$IDS(I) = 1;

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:38   
   3285  4 000273   200005 235100                    LDA     I,,AUTO
         4 000274   000002 735000                    ALS     2
         4 000275   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000276   003105 061400                    CSR     bolr='003'O
         4 000277   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 000300   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4

      353     3286    3                 IF I>=1 AND I<=JG_MING#

   3286  4 000301   200005 236100                    LDQ     I,,AUTO
         4 000302   000320 600000 4                  TZE     s:3291
         4 000303   000020 116007                    CMPQ    16,DL
         4 000304   000320 603000 4                  TRC     s:3291

      354     3287    4                   THEN DO; /* MING ghost; get the 'SYSID' from the filenum also */

      355     3288    4                     CALL CHARBIN(I,ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.NUM);

   3288  4 000305   200004 470500                    LDP0    M$SID$,,AUTO
         4 000306   000100 305500                    DTB
         4 000307   000012 430006                    NDSC9   10,,PR0                  cn=2,s=nosgn,sf=0,n=6
         4 000310   200430 000010                    NDSC9   RANGE+2,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         4 000311   200431 235100                    LDA     RANGE+3,,AUTO
         4 000312   200005 755100                    STA     I,,AUTO

      356     3289    4                     SYS$IDS(I) = 1;

   3289  4 000313   000002 735000                    ALS     2
         4 000314   000067 471400 1                  LDP1    SYSIDBUF_+1
         4 000315   003105 061400                    CSR     bolr='003'O
         4 000316   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 000317   100000 000004                    BDSC    0,A,PR1                  by=0,bit=0,n=4

      357     3290    4                     END;

      358     3291    3                 IF FPT_SYSID.V.BOOTID#='$$$'

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:39   
   3291  4 000320   040000 106400                    CMPC    fill='040'O
         4 000321   000102 200003 1                  ADSC9   FPT_SYSID+4              cn=1,n=3
         4 000322   000516 000003 2                  ADSC9   FPT_CLOSE+30             cn=0,n=3
         4 000323   000327 601000 4                  TNZ     s:3295

      359     3292    3                   THEN FPT_SYSID.V.BOOTID#

   3292  4 000324   200004 470500                    LDP0    M$SID$,,AUTO
         4 000325   000010 236100                    LDQ     8,,PR0
         4 000326   000102 552034 1                  STBQ    FPT_SYSID+4,'34'O

      360     3293    3                       = ADDR(M$SID$->F$DCB.NAME)->FS$OSFN.BOOTID;
      361     3294    3                 END;

      362     3295    3             DO WHILE('0'B);

   3295  4 000327   000340 710000 4                  TRA     s:3298

      363     3296    3   SYMOALT:    IF B$ERRCODE = %E$FDEOF THEN DONE='1'B;

   3296  4 000330   000000 470400 xsym  SYMOALT      LDP0    B$TCB$
         4 000331   000000 471500                    LDP1    0,,PR0
         4 000332   100102 236100                    LDQ     66,,PR1
         4 000333   377770 376007                    ANQ     131064,DL
         4 000334   001540 116007                    CMPQ    864,DL
         4 000335   000340 601000 4                  TNZ     s:3298

   3296  4 000336   400000 236003                    LDQ     -131072,DU
         4 000337   200010 756100                    STQ     DONE,,AUTO

      364     3297    3               END;

      365     3298    2             END;

   3298  4 000340   200010 234100                    SZN     DONE,,AUTO
         4 000341   000230 605000 4                  TPL     s:3269

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:40   
      366     3299        /**/
      367     3300        /* Scan the :JOBSTATS file for completed jobs recording their age in days in */
      368     3301        /* SYS$IDS. Any job older than 15 days gets the maximum of 15 days.          */
      369     3302        /**/
      370     3303    1           TRIES=0;

   3303  4 000342   200013 450100                    STZ     TRIES,,AUTO

   3303  4 000343                       TRYAGAIN     null
      371     3304    1   TRYAGAIN:;
      372     3305    1           TRIES=TRIES+1;

   3305  4 000343   200013 235100                    LDA     TRIES,,AUTO
         4 000344   000001 035007                    ADLA    1,DL
         4 000345   200013 755100                    STA     TRIES,,AUTO

      373     3306    1           IF TRIES>99 THEN GOTO JSFEND;

   3306  4 000346   000144 115007                    CMPA    100,DL
         4 000347   000461 603000 4                  TRC     JSFEND

      374     3307    1           CALL XSJ$OPENF (JOPN_IN) ALTRET(TRYAGAIN);

   3307  4 000350   000003 630400 5                  EPPR0   3
         4 000351   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000352   000000 701000 xent               TSX1    XSJ$OPENF
         4 000353   000343 702000 4                  TSX2    TRYAGAIN

      375     3308    1           JKEY.SYSID#=JG_MING#;

   3308  4 000354   017000 236007                    LDQ     7680,DL
         4 000355   000070 552030 1                  STBQ    JKEY,'30'O

      376     3309    1           CALL M$READ (JREAD) ALTRET(IGNOR3);

   3309  4 000356   000442 630400 2                  EPPR0   JREAD
         4 000357   440000 713400                    CLIMB   alt,read
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:41   
         4 000360   401400 401760                    pmme    nvectors=4
         4 000361   000362 702000 4                  TSX2    IGNOR3

      377     3310    1   IGNOR3: DONE = '0'B;

   3310  4 000362   200010 450100       IGNOR3       STZ     DONE,,AUTO

      378     3311    2           DO WHILE(NOT DONE);

   3311  4 000363   000457 710000 4                  TRA     s:3326

      379     3312    2             CALL M$READ(JSCAN) ALTRET(JSCANALT);

   3312  4 000364   000424 630400 2                  EPPR0   JSCAN
         4 000365   440000 713400                    CLIMB   alt,read
         4 000366   401400 401760                    pmme    nvectors=4
         4 000367   000447 702000 4                  TSX2    JSCANALT

      380     3313    2             IF ADDR(KEYBUF)->B$BYTE = LENGTHC(XSJ$INFOKEY)-1

   3313  4 000370   000002 236000 1                  LDQ     KEYBUF
         4 000371   777000 376003                    ANQ     -512,DU
         4 000372   002000 116003                    CMPQ    1024,DU
         4 000373   000444 601000 4                  TNZ     s:3322

      381     3314    3               THEN DO;

      382     3315    3                 CALL XUD$UTS_ADJUST(AGE,JREC.OFF_TIME#,%UTS_CSEC_DAY#-1);

   3315  4 000374   000005 236000 5                  LDQ     5
         4 000375   200432 756100                    STQ     RANGE+4,,AUTO
         4 000376   000006 236000 5                  LDQ     6
         4 000377   200431 756100                    STQ     RANGE+3,,AUTO
         4 000400   200006 630500                    EPPR0   AGE,,AUTO
         4 000401   200430 450500                    STP0    RANGE+2,,AUTO
         4 000402   200430 630500                    EPPR0   RANGE+2,,AUTO
         4 000403   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:42   
         4 000404   000000 701000 xent               TSX1    XUD$UTS_ADJUST
         4 000405   000000 011000                    NOP     0

      383     3316    3                 CALL XUD$UTS_DIFF(AGE,NOWUTS,AGE);

   3316  4 000406   200006 630500                    EPPR0   AGE,,AUTO
         4 000407   200432 450500                    STP0    RANGE+4,,AUTO
         4 000410   000007 236000 5                  LDQ     7
         4 000411   200431 756100                    STQ     RANGE+3,,AUTO
         4 000412   200006 631500                    EPPR1   AGE,,AUTO
         4 000413   200430 451500                    STP1    RANGE+2,,AUTO
         4 000414   200430 630500                    EPPR0   RANGE+2,,AUTO
         4 000415   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000416   000000 701000 xent               TSX1    XUD$UTS_DIFF
         4 000417   000000 011000                    NOP     0

      384     3317    3                 AGE = AGE / %UTS_CSEC_DAY#;

   3317  4 000420   200006 236100                    LDQ     AGE,,AUTO
         4 000421   000001 772000                    QRL     1
         4 000422   000010 506000 5                  DIV     8
         4 000423   200006 756100                    STQ     AGE,,AUTO

      385     3318    3                 IF AGE>15 THEN AGE=15;

   3318  4 000424   000020 116007                    CMPQ    16,DL
         4 000425   000430 602000 4                  TNC     s:3319

   3318  4 000426   000017 235007                    LDA     15,DL
         4 000427   200006 755100                    STA     AGE,,AUTO

      386     3319    3                 SYS$IDS(ADDR(KEYBUF)->XSJ$INFOKEY.SYSID#) = AGE;

   3319  4 000430   000002 236000 1                  LDQ     KEYBUF
         4 000431   000007 772000                    QRL     7
         4 000432   000011 376000 5                  ANQ     9
         4 000433   000067 470400 1                  LDP0    SYSIDBUF_+1
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:43   
         4 000434   003106 061500                    CSR     bolr='003'O
         4 000435   200006 000044                    BDSC    AGE,,AUTO                by=0,bit=0,n=36
         4 000436   000000 000004                    BDSC    0,Q,PR0                  by=0,bit=0,n=4

      387     3320    3                 AGES(AGE) = '1'B;

   3320  4 000437   200006 235100                    LDA     AGE,,AUTO
         4 000440   003105 060400                    CSL     bolr='003'O
         4 000441   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 000442   200007 000001                    BDSC    AGES,A,AUTO              by=0,bit=0,n=1

      388     3321    3                 END;

   3321  4 000443   000446 710000 4                  TRA     s:3323

      389     3322    2               ELSE DONE = '1'B;

   3322  4 000444   400000 236003                    LDQ     -131072,DU
         4 000445   200010 756100                    STQ     DONE,,AUTO

      390     3323    3             DO WHILE('0'B);

   3323  4 000446   000457 710000 4                  TRA     s:3326

      391     3324    3   JSCANALT:   IF B$ERRCODE=%E$EOF THEN DONE='1'B;

   3324  4 000447   000000 470400 xsym  JSCANALT     LDP0    B$TCB$
         4 000450   000000 471500                    LDP1    0,,PR0
         4 000451   100102 236100                    LDQ     66,,PR1
         4 000452   377770 376007                    ANQ     131064,DL
         4 000453   000060 116007                    CMPQ    48,DL
         4 000454   000457 601000 4                  TNZ     s:3326

   3324  4 000455   400000 236003                    LDQ     -131072,DU
         4 000456   200010 756100                    STQ     DONE,,AUTO

      392     3325    3               END;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:44   

      393     3326    2             END;

   3326  4 000457   200010 234100                    SZN     DONE,,AUTO
         4 000460   000364 605000 4                  TPL     s:3312

      394     3327    1   JSFEND:
      395     3328        /**/
      396     3329        /* Now that we've finally gotten all the known SYSIDs tabulated, lets find   */
      397     3330        /*      the best range of SYSIDs to use next.                                */
      398     3331        /**/
      399     3332    1           CALL FIND_BEST_RANGE(SYSID,NSYSIDS);

   3332  4 000461   200012 630500       JSFEND       EPPR0   NSYSIDS,,AUTO
         4 000462   200420 450500                    STP0    @BEST_SYSID+1,,AUTO
         4 000463   200011 631500                    EPPR1   SYSID,,AUTO
         4 000464   200417 451500                    STP1    VLR_SYSID+259,,AUTO
         4 000465   000526 701000 4                  TSX1    FIND_BEST_RANGE
         4 000466   000000 011000                    NOP     0

      400     3333    1           FPT_SYSID.V.SETSYSID# = '1'B;

   3333  4 000467   200000 236003                    LDQ     65536,DU
         4 000470   000102 256000 1                  ORSQ    FPT_SYSID+4

      401     3334    1           FPT_SYSID.V.SYSID# = SYSID;

   3334  4 000471   200011 720100                    LXL0    SYSID,,AUTO
         4 000472   000103 740000 1                  STX0    FPT_SYSID+5

      402     3335    1           FPT_SYSID.V.NSYSIDS# = NSYSIDS;

   3335  4 000473   200012 721100                    LXL1    NSYSIDS,,AUTO
         4 000474   000103 441000 1                  SXL1    FPT_SYSID+5

      403     3336        /**/
      404     3337        /* If this is GHOST1 (system initialization), we must also set BOOTID.       */
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:45   
      405     3338        /**/
      406     3339    1           IF B$JIT$->B$JIT.USER=JG_GHOST1#

   3339  4 000475   000000 470400 xsym               LDP0    B$JIT$
         4 000476   000000 236100                    LDQ     0,,PR0
         4 000477   000777 376003                    ANQ     511,DU
         4 000500   000001 116003                    CMPQ    1,DU
         4 000501   000504 601000 4                  TNZ     s:3345

      407     3340    1             THEN FPT_SYSID.V.SETBOOTID# = '1'B;

   3340  4 000502   100000 236003                    LDQ     32768,DU
         4 000503   000102 256000 1                  ORSQ    FPT_SYSID+4

      408     3341        /**/
      409     3342        /* Now call IGJ$JOBSTATS to delete all records from the :JOBSTATS file       */
      410     3343        /* pertaining to any sysid to be set in the new range.                       */
      411     3344        /**/
      412     3345    1           CALL IGJ$JOBSTATS(SYSID,NSYSIDS);

   3345  4 000504   200012 631500                    EPPR1   NSYSIDS,,AUTO
         4 000505   200431 451500                    STP1    RANGE+3,,AUTO
         4 000506   200011 633500                    EPPR3   SYSID,,AUTO
         4 000507   200430 453500                    STP3    RANGE+2,,AUTO
         4 000510   200430 630500                    EPPR0   RANGE+2,,AUTO
         4 000511   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000512   000000 701000 xent               TSX1    IGJ$JOBSTATS
         4 000513   000000 011000                    NOP     0

      413     3346        /**/
      414     3347        /* And now, the call we've all been waiting for...                           */
      415     3348        /*    Set the new SYSID range and possibly the new BOOTID.                   */
      416     3349        /**/
      417     3350    1           CALL M$SYSID(FPT_SYSID);

   3350  4 000514   000076 630400 1                  EPPR0   FPT_SYSID
         4 000515   020026 713400                    CLIMB   8214
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:46   
         4 000516   400400 401760                    pmme    nvectors=2

      418     3351        /**/
      419     3352        /* Clean up our messes behind us...                                          */
      420     3353        /**/
      421     3354    1           CALL M$FDP(FPT_FDP);

   3354  4 000517   000024 630400 2                  EPPR0   FPT_FDP
         4 000520   030004 713400                    CLIMB   12292
         4 000521   400400 401760                    pmme    nvectors=2

      422     3355    1           CALL M$CLOSE(FPT_CLOSE);

   3355  4 000522   000460 630400 2                  EPPR0   FPT_CLOSE
         4 000523   050001 713400                    CLIMB   close
         4 000524   406000 401760                    pmme    nvectors=13

      423     3356    1           RETURN;

   3356  4 000525   000000 702200 xent               TSX2  ! X66_ARET

      424     3357        %EJECT;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:47   
      425     3358    1   FIND_BEST_RANGE: PROC(BEST_SYSID,BEST_RANGE);

   3358  4 000526   200416 741300       FIND_BEST_R* STX1  ! VLR_SYSID+258,,AUTO

      426     3359        /*I* NAME:        FIND_BEST_RANGE
      427     3360             PURPOSE:     To find the best range of SYSIDs to return to the system
      428     3361             CALL:        CALL FIND_BEST_RANGE(BEST_SYSID,BEST_RANGE);
      429     3362             INPUT:       SYS$IDS - An array of current sysid usage
      430     3363                          AGES - An array of which ages are to be found in SYS$IDS
      431     3364                          FO_CITE.NXT - Next SYSID to be used by the system before
      432     3365                             this call
      433     3366                          FO_CITE.NUM - Number of sysids left before this call
      434     3367                          FO_CITE.SPAN - Minimum size of sysid range to return
      435     3368                             if at all possible
      436     3369             OUTPUT:      BEST_SYSID - First sysid of the found sysid range
      437     3370                          BEST_RANGE - Number of sysids in the found range
      438     3371             DESCRIPTION: FIND_BEST_RANGE looks for the best sysid range it
      439     3372                          can find and returns this range in BEST_SYSID and
      440     3373                          BEST_RANGE. The 'best' range is the first of the following:
      441     3374                             1) A range of free sysids at least FO_CITE.SPAN long
      442     3375                                starting at FO_CITE.NXT+FO_CITE.NUM.
      443     3376                             2) A range of SPAN starting at the oldest found
      444     3377                                sysid.
      445     3378                             3) A range of SPAN or more free sysids anywhere
      446     3379                             4) A range of SPAN or more sysids discarding old
      447     3380                                records from :JOBSTATS oldest first.
      448     3381                             5) The largest range of sysids ignoring :JOBSTATS
      449     3382                                records over one day old regardless of range size.
      450     3383                          This procedure will always return some range. The range
      451     3384                          may, however, have length 0.
      452     3385        */
      453     3386    2   DCL BEST_SYSID UBIN;
      454     3387    2   DCL BEST_RANGE UBIN;
      455     3388    2   DCL ENDHIT BIT(1) ALIGNED;
      456     3389    2   DCL J UBIN;
      457     3390    2   DCL START UBIN;
      458     3391    2   DCL RSTART SBIN;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:48   
      459     3392    2   DCL REALSTART UBIN;
      460     3393    2   DCL RANGE UBIN;
      461     3394        %EJECT;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:49   
      462     3395    2           START = FO_CITE.NXT+FO_CITE.NUM;

   3395  4 000527   200003 470500                    LDP0    @FO_CITE,,AUTO
         4 000530   000001 236100                    LDQ     1,,PR0
         4 000531   000002 036100                    ADLQ    2,,PR0
         4 000532   200423 756100                    STQ     START,,AUTO

      463     3396    2           J=99999;

   3396  4 000533   303237 235007                    LDA     99999,DL
         4 000534   200422 755100                    STA     J,,AUTO

      464     3397    3           DO WHILE (SYS$IDS(J) = 0 AND J ~= 0);

   3397  4 000535   000541 710000 4                  TRA     s:3399

      465     3398    3             J=J-1;

   3398  4 000536   200422 235100                    LDA     J,,AUTO
         4 000537   000001 135007                    SBLA    1,DL
         4 000540   200422 755100                    STA     J,,AUTO

      466     3399    3             END;

   3399  4 000541   000002 735000                    ALS     2
         4 000542   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000543   003100 061505                    CSR     bolr='003'O
         4 000544   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4
         4 000545   200430 000044                    BDSC    RANGE+2,,AUTO            by=0,bit=0,n=36
         4 000546   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000547   000000 116003                    CMPQ    0,DU
         4 000550   000553 601000 4                  TNZ     s:3400
         4 000551   200422 235100                    LDA     J,,AUTO
         4 000552   000536 601000 4                  TNZ     s:3398

      467     3400    2           IF J > START

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:50   
   3400  4 000553   200423 236100                    LDQ     START,,AUTO
         4 000554   200422 116100                    CMPQ    J,,AUTO
         4 000555   000561 603000 4                  TRC     s:3403

      468     3401    2             THEN
      469     3402    2               START = J+1;

   3402  4 000556   200422 235100                    LDA     J,,AUTO
         4 000557   000001 035007                    ADLA    1,DL
         4 000560   200423 755100                    STA     START,,AUTO

      470     3403    2           IF START>99999 THEN START=START+JG_MING#-99999;

   3403  4 000561   200423 235100                    LDA     START,,AUTO
         4 000562   303240 115007                    CMPA    100000,DL
         4 000563   000566 602000 4                  TNC     s:3404

   3403  4 000564   303220 135007                    SBLA    99984,DL
         4 000565   200423 755100                    STA     START,,AUTO

      471     3404    2           DONE = '0'B;

   3404  4 000566   200010 450100                    STZ     DONE,,AUTO

      472     3405    3           DO WHILE(NOT DONE);

   3405  4 000567   001002 710000 4                  TRA     s:3455

      473     3406    3             BEST_SYSID = 0;

   3406  4 000570   200417 470500                    LDP0    @BEST_SYSID,,AUTO
         4 000571   000000 450100                    STZ     0,,PR0

      474     3407    3             BEST_RANGE = 0;

   3407  4 000572   200420 471500                    LDP1    @BEST_RANGE,,AUTO
         4 000573   100000 450100                    STZ     0,,PR1
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:51   

      475     3408    3             RSTART = START;

   3408  4 000574   200423 235100                    LDA     START,,AUTO
         4 000575   200424 755100                    STA     RSTART,,AUTO

      476     3409    4             DO WHILE(RSTART<START+99999 AND NOT DONE);

   3409  4 000576   000724 710000 4                  TRA     s:3438

      477     3410    4               RANGE = 0;

   3410  4 000577   200426 450100                    STZ     RANGE,,AUTO

      478     3411    4               REALSTART = MOD(RSTART,100000);

   3411  4 000600   200424 236100                    LDQ     RSTART,,AUTO
         4 000601   303240 506007                    DIV     100000,DL
         4 000602   200425 755100                    STA     REALSTART,,AUTO

      479     3412    4               ENDHIT = '0'B;

   3412  4 000603   200421 450100                    STZ     ENDHIT,,AUTO

      480     3413    5               DO WHILE(NOT ENDHIT);

   3413  4 000604   000635 710000 4                  TRA     s:3419

      481     3414    5                 J = REALSTART+RANGE;

   3414  4 000605   200425 236100                    LDQ     REALSTART,,AUTO
         4 000606   200426 036100                    ADLQ    RANGE,,AUTO
         4 000607   200422 756100                    STQ     J,,AUTO

      482     3415    5                 IF J>99999 THEN J=J+JG_MING#-99999;

   3415  4 000610   303240 116007                    CMPQ    100000,DL
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:52   
         4 000611   000614 602000 4                  TNC     s:3416

   3415  4 000612   303220 136007                    SBLQ    99984,DL
         4 000613   200422 756100                    STQ     J,,AUTO

      483     3416    5                 IF SYS$IDS(J)=0 AND RANGE+JG_MING#<99999

   3416  4 000614   200422 235100                    LDA     J,,AUTO
         4 000615   000002 735000                    ALS     2
         4 000616   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000617   003100 061505                    CSR     bolr='003'O
         4 000620   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4
         4 000621   200430 000044                    BDSC    RANGE+2,,AUTO            by=0,bit=0,n=36
         4 000622   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000623   000000 116003                    CMPQ    0,DU
         4 000624   000633 601000 4                  TNZ     s:3418
         4 000625   200426 235100                    LDA     RANGE,,AUTO
         4 000626   303220 115007                    CMPA    99984,DL
         4 000627   000633 603000 4                  TRC     s:3418

      484     3417    5                   THEN RANGE = RANGE+1;

   3417  4 000630   000001 035007                    ADLA    1,DL
         4 000631   200426 755100                    STA     RANGE,,AUTO
         4 000632   000635 710000 4                  TRA     s:3419

      485     3418    5                   ELSE ENDHIT = '1'B;

   3418  4 000633   400000 236003                    LDQ     -131072,DU
         4 000634   200421 756100                    STQ     ENDHIT,,AUTO

      486     3419    5                 END;

   3419  4 000635   200421 234100                    SZN     ENDHIT,,AUTO
         4 000636   000605 605000 4                  TPL     s:3414

      487     3420    4               IF RANGE<FO_CITE.SPAN
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:53   

   3420  4 000637   200003 470500                    LDP0    @FO_CITE,,AUTO
         4 000640   200426 236100                    LDQ     RANGE,,AUTO
         4 000641   000003 116100                    CMPQ    3,,PR0
         4 000642   000715 603000 4                  TRC     s:3434

      488     3421    5                 THEN DO;

      489     3422    5                   IF RANGE>BEST_RANGE

   3422  4 000643   200420 471500                    LDP1    @BEST_RANGE,,AUTO
         4 000644   100000 116100                    CMPQ    0,,PR1
         4 000645   000653 602000 4                  TNC     s:3427
         4 000646   000653 600000 4                  TZE     s:3427

      490     3423    6                     THEN DO;

      491     3424    6                       BEST_SYSID = REALSTART;

   3424  4 000647   200417 473500                    LDP3    @BEST_SYSID,,AUTO
         4 000650   200425 235100                    LDA     REALSTART,,AUTO
         4 000651   300000 755100                    STA     0,,PR3

      492     3425    6                       BEST_RANGE = RANGE;

   3425  4 000652   100000 756100                    STQ     0,,PR1

      493     3426    6                       END;

      494     3427    5                   RSTART = RSTART+RANGE;

   3427  4 000653   200424 036100                    ADLQ    RSTART,,AUTO
         4 000654   200424 756100                    STQ     RSTART,,AUTO

      495     3428    5                   IF REALSTART+RANGE>99999 THEN RSTART=RSTART+JG_MING#;

   3428  4 000655   200425 236100                    LDQ     REALSTART,,AUTO
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:54   
         4 000656   200426 036100                    ADLQ    RANGE,,AUTO
         4 000657   303240 116007                    CMPQ    100000,DL
         4 000660   000663 602000 4                  TNC     s:3429

   3428  4 000661   000017 236007                    LDQ     15,DL
         4 000662   200424 056100                    ASQ     RSTART,,AUTO

      496     3429    6                   DO WHILE(SYS$IDS(MOD(RSTART,100000))~=0);

   3429  4 000663   200424 236100                    LDQ     RSTART,,AUTO
         4 000664   303240 506007                    DIV     100000,DL
         4 000665   000002 735000                    ALS     2
         4 000666   000670 605000 4                  TPL     s:3429+5
         4 000667   000044 035003                    ADLA    36,DU
         4 000670   000067 473400 1                  LDP3    SYSIDBUF_+1
         4 000671   003100 061505                    CSR     bolr='003'O
         4 000672   300000 000004                    BDSC    0,A,PR3                  by=0,bit=0,n=4
         4 000673   200430 000044                    BDSC    RANGE+2,,AUTO            by=0,bit=0,n=36
         4 000674   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000675   000000 116003                    CMPQ    0,DU
         4 000676   000724 600000 4                  TZE     s:3438

      497     3430    6                     RSTART = RSTART+1;

   3430  4 000677   200424 054100                    AOS     RSTART,,AUTO

      498     3431    6                     END;

   3431  4 000700   200424 236100                    LDQ     RSTART,,AUTO
         4 000701   303240 506007                    DIV     100000,DL
         4 000702   000002 735000                    ALS     2
         4 000703   000705 605000 4                  TPL     s:3431+5
         4 000704   000044 035003                    ADLA    36,DU
         4 000705   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000706   003100 061505                    CSR     bolr='003'O
         4 000707   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4
         4 000710   200430 000044                    BDSC    RANGE+2,,AUTO            by=0,bit=0,n=36
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:55   
         4 000711   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000712   000000 116003                    CMPQ    0,DU
         4 000713   000677 601000 4                  TNZ     s:3430

      499     3432    5                   END;

   3432  4 000714   000724 710000 4                  TRA     s:3438

      500     3433    5                 ELSE DO;

      501     3434    5                   BEST_SYSID = REALSTART;

   3434  4 000715   200417 471500                    LDP1    @BEST_SYSID,,AUTO
         4 000716   200425 235100                    LDA     REALSTART,,AUTO
         4 000717   100000 755100                    STA     0,,PR1

      502     3435    5                   BEST_RANGE = RANGE;

   3435  4 000720   200420 473500                    LDP3    @BEST_RANGE,,AUTO
         4 000721   300000 756100                    STQ     0,,PR3

      503     3436    5                   DONE = '1'B;

   3436  4 000722   400000 236003                    LDQ     -131072,DU
         4 000723   200010 756100                    STQ     DONE,,AUTO

      504     3437    5                   END;

      505     3438    4               END;

   3438  4 000724   200423 236100                    LDQ     START,,AUTO
         4 000725   303237 036007                    ADLQ    99999,DL
         4 000726   000731 604000 4                  TMI     s:3438+5
         4 000727   200424 116100                    CMPQ    RSTART,,AUTO
         4 000730   000733 604400 4                  TMOZ    s:3439
         4 000731   200010 234100                    SZN     DONE,,AUTO
         4 000732   000577 605000 4                  TPL     s:3410
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:56   

      506     3439    3             IF NOT DONE

   3439  4 000733   200010 234100                    SZN     DONE,,AUTO
         4 000734   001002 604000 4                  TMI     s:3455

      507     3440    4               THEN DO;

      508     3441    4                 AGE = 15;

   3441  4 000735   000017 235007                    LDA     15,DL
         4 000736   200006 755100                    STA     AGE,,AUTO

      509     3442    5                 DO WHILE(NOT AGES(AGE));

   3442  4 000737   000743 710000 4                  TRA     s:3444

      510     3443    5                   AGE = AGE-1;

   3443  4 000740   200006 235100                    LDA     AGE,,AUTO
         4 000741   000001 135007                    SBLA    1,DL
         4 000742   200006 755100                    STA     AGE,,AUTO

      511     3444    5                   END;

   3444  4 000743   000000 066505                    CMPB    filb='0'B
         4 000744   200007 000001                    BDSC    AGES,A,AUTO              by=0,bit=0,n=1
         4 000745   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 000746   000740 600000 4                  TZE     s:3443

      512     3445    4                 IF AGE=1

   3445  4 000747   000001 115007                    CMPA    1,DL
         4 000750   000754 601000 4                  TNZ     s:3448

      513     3446    4                   THEN DONE = '1'B;

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:57   
   3446  4 000751   400000 236003                    LDQ     -131072,DU
         4 000752   200010 756100                    STQ     DONE,,AUTO
         4 000753   001002 710000 4                  TRA     s:3455

      514     3447    5                   ELSE DO;

      515     3448    6                     DO I=0 TO 99999;

   3448  4 000754   200005 450100                    STZ     I,,AUTO

      516     3449    6                       IF SYS$IDS(I)=AGE

   3449  4 000755   200005 235100                    LDA     I,,AUTO
         4 000756   000002 735000                    ALS     2
         4 000757   000067 470400 1                  LDP0    SYSIDBUF_+1
         4 000760   003100 061505                    CSR     bolr='003'O
         4 000761   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4
         4 000762   200430 000044                    BDSC    RANGE+2,,AUTO            by=0,bit=0,n=36
         4 000763   200430 236100                    LDQ     RANGE+2,,AUTO
         4 000764   200006 116100                    CMPQ    AGE,,AUTO
         4 000765   000771 601000 4                  TNZ     s:3451

      517     3450    6                         THEN SYS$IDS(I) = 0;

   3450  4 000766   003105 061400                    CSR     bolr='003'O
         4 000767   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         4 000770   000000 000004                    BDSC    0,A,PR0                  by=0,bit=0,n=4

      518     3451    6                       END;

   3451  4 000771   200005 236100                    LDQ     I,,AUTO
         4 000772   000001 036007                    ADLQ    1,DL
         4 000773   200005 756100                    STQ     I,,AUTO
         4 000774   303240 116007                    CMPQ    100000,DL
         4 000775   000755 602000 4                  TNC     s:3449

      519     3452    5                     AGES(AGE) = '0'B;
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:58   

   3452  4 000776   200006 235100                    LDA     AGE,,AUTO
         4 000777   003105 060400                    CSL     bolr='003'O
         4 001000   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         4 001001   200007 000001                    BDSC    AGES,A,AUTO              by=0,bit=0,n=1

      520     3453    5                     END;

      521     3454    4                 END;

      522     3455    3             END;

   3455  4 001002   200010 234100                    SZN     DONE,,AUTO
         4 001003   000570 605000 4                  TPL     s:3406

      523     3456    2           RETURN;

   3456  4 001004   200416 221300                    LDX1  ! VLR_SYSID+258,,AUTO
         4 001005   000001 702211                    TSX2  ! 1,X1
      524     3457    2   END FIND_BEST_RANGE;
      525     3458    1   END IGN$SYSID;

PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:59   
--  Include file information  --

   XUD_UTS_M.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IGN$SYSID.
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:60   

 **** Variables and constants ****

  ****  Section 001  Data  IGN$SYSID

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    42-0-0/c STRC(666)   r     1 BAD_FID_INFO              76-0-0/d STRC(216)   r     1 FPT_SYSID
    70-0-0/w STRC(27)    r     1 JKEY                      71-0-0/w STRC(180)   r     1 JREC
     2-0-0/w UBIN        r     1 KEYBUF(0:31)               0-0-0/d UBIN        r     1 NOWUTS
    66-0-0/d STRC(72)    r     1 SYSIDBUF_                104-0-0/d STRC(288)   r     1 WRITE_BAD_FID

  ****  Section 002 RoData IGN$SYSID

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   460-0-0/d STRC(1080)  r     1 FPT_CLOSE                 24-0-0/d STRC(216)   r     1 FPT_FDP
    16-0-0/d STRC(216)   r     1 FPT_GDP                  410-0-0/d STRC(432)   r     1 GET_TIME
     0-0-0/d STRC(288)   r     1 JOPN_IN                  442-0-0/d STRC(504)   r     1 JREAD
   424-0-0/d STRC(504)   r     1 JSCAN                    314-0-0/d STRC(2088)  r     1 OPEN_SYMIFD
   126-0-0/d STRC(2088)  r     1 OPEN_SYMOFD              220-0-0/d STRC(2088)  r     1 SCAN_SYMIFD
    32-0-0/d STRC(2088)  r     1 SCAN_SYMOFD              312-0-0/c STRC(72)    r     1 SYMIACCT
   406-0-0/c STRC(18)    r     1 SYMIDUMMY                124-0-0/c STRC(72)    r     1 SYMOACCT
    10-0-0/w STRC(171)   r     1 SYMODUMMY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   420-0-0/w PTR         r     1 @BEST_RANGE              417-0-0/w PTR         r     1 @BEST_SYSID
     3-0-0/w PTR         r     1 @FO_CITE                   6-0-0/w UBIN        r     1 AGE
     7-0-0/b BIT         r     1 AGES(0:15)                *0-0-0/w UBIN        r     1 BEST_RANGE
    *0-0-0/w UBIN        r     1 BEST_SYSID                10-0-0/w BIT         r     1 DONE
   421-0-0/w BIT         r     1 ENDHIT                    *0-0-0/w STRC(144)   r     1 FO_CITE
     5-0-0/w UBIN        r     1 I                        422-0-0/w UBIN        r     1 J
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:61   
     4-0-0/w PTR         r     1 M$SID$                    12-0-0/w UBIN        r     1 NSYSIDS
   426-0-0/w UBIN        r     1 RANGE                    425-0-0/w UBIN        r     1 REALSTART
   424-0-0/w SBIN        r     1 RSTART                   423-0-0/w UBIN        r     1 START
    11-0-0/w UBIN        r     1 SYSID                     13-0-0/w UBIN        r     1 TRIES
    14-0-0/w STRC(9252)  r     1 VLR_SYSID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w UBIN(9)     r     1 B$BYTE
     0-0-0/d STRC(2088)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(171)   r     1 FS$OSFN
     0-0-0N  NULL        r     1 M$SID                      0-0-0/w UBIN        r     1 PAGES$11(0:11263)
     0-0-0/b UBIN(4)     r     1 SYS$IDS(0:99999)           0-0-0/w STRC(27)    r     1 XSJ$INFOKEY


   Procedure IGN$SYSID requires 518 words for executable code.
   Procedure IGN$SYSID requires 284 words of local(AUTO) storage.

    No errors detected in file IGN$SYSID.:E05TSI    .
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:62   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:63   
          MINI XREF LISTING

AGE
      2326**DCL      3315<>CALL     3316<>CALL     3316<>CALL     3317<<ASSIGN   3317>>ASSIGN   3318>>IF
      3318<<ASSIGN   3319>>ASSIGN   3320>>ASSIGN   3441<<ASSIGN   3442>>DOWHILE  3443<<ASSIGN   3443>>ASSIGN
      3445>>IF       3449>>IF       3452>>ASSIGN
AGES
      2327**DCL      3212<<ASSIGN   3213<<ASSIGN   3214<<ASSIGN   3320<<ASSIGN   3442>>DOWHILE  3452<<ASSIGN
B$ALT.CODE
      2285**DCL      2285--REDEF    2286--REDEF    2286--REDEF
B$ALT.ERR.CODE
      2287**DCL      3256>>IF       3296>>IF       3324>>IF
B$ALT.ERR.ERR#
      2287**DCL      2287--REDEF
B$ALT.EVID
      2286**DCL      2286--REDEF    2286--REDEF
B$BYTE
      2291**DCL      3313>>IF
B$JIT.ERR.MID
      2194**DCL      2194--REDEF
B$JIT.USER
      2193**DCL      3339>>IF
B$JIT$
      2421**DCL      2188--IMP-PTR  3339>>IF
B$TCB.ALT$
      2281**DCL      3256>>IF       3296>>IF       3324>>IF
B$TCB$
      2422**DCL      3256>>IF       3296>>IF       3324>>IF
BAD_FID_INFO
      2337**DCL      3191--DCLINIT  3192--DCLINIT
BAD_FID_INFO.NAME_
      2339**DCL      3278<<ASSIGN
BEST_RANGE IN PROCEDURE FIND_BEST_RANGE
      3387**DCL      3358--PROC     3407<<ASSIGN   3422>>IF       3425<<ASSIGN   3435<<ASSIGN
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:64   
BEST_SYSID IN PROCEDURE FIND_BEST_RANGE
      3386**DCL      3358--PROC     3406<<ASSIGN   3424<<ASSIGN   3434<<ASSIGN
DONE
      2328**DCL      3245<<ASSIGN   3246>>DOWHILE  3256<<ASSIGN   3267<<ASSIGN   3268>>DOWHILE  3296<<ASSIGN
      3310<<ASSIGN   3311>>DOWHILE  3322<<ASSIGN   3324<<ASSIGN   3404<<ASSIGN   3405>>DOWHILE  3409>>DOWHILE
      3436<<ASSIGN   3439>>IF       3446<<ASSIGN
ENDHIT IN PROCEDURE FIND_BEST_RANGE
      3388**DCL      3412<<ASSIGN   3413>>DOWHILE  3418<<ASSIGN
F$DCB.ACTPOS
       837**DCL       837--REDEF
F$DCB.ARS
       812**DCL       812--REDEF
F$DCB.ATTR
       830**DCL       831--REDEF
F$DCB.BORROW
       845**DCL       845--REDEF     845--REDEF     845--REDEF
F$DCB.DCBNAME.L
       859**DCL       859--IMP-SIZ
F$DCB.EOMCHAR
       816**DCL       816--REDEF
F$DCB.FLDID
       840**DCL       840--REDEF
F$DCB.FORM$
       834**DCL       834--REDEF
F$DCB.FSECT
       850**DCL       850--REDEF
F$DCB.FSN
       827**DCL       827--REDEF     827--REDEF     828--REDEF
F$DCB.HEADER$
       833**DCL       833--REDEF
F$DCB.IXTNSIZE
       831**DCL       831--REDEF
F$DCB.LASTSTA$
       821**DCL       821--REDEF
F$DCB.LVL
       846**DCL       846--REDEF
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:65   
F$DCB.NAME
       821**DCL      3270--IF       3270--IF       3274--CALLBLT  3288--CALLBLT  3292--ASSIGN
F$DCB.NAME.C
       821**DCL       821--REDEF    3248>>IF       3248>>IF       3252>>CALLBLT  3278>>ASSIGN
F$DCB.NAME.L
       821**DCL      3248>>IF       3270>>IF
F$DCB.NOEOF
       842**DCL       842--REDEF
F$DCB.NRECS
       832**DCL       832--REDEF
F$DCB.NRECX
       851**DCL       851--REDEF
F$DCB.OHDR
       843**DCL       843--REDEF
F$DCB.ORG
       826**DCL       826--REDEF
F$DCB.PRECNO
       849**DCL       849--REDEF
F$DCB.RCSZ
       854**DCL       854--REDEF
F$DCB.RES
       822**DCL       822--REDEF
F$DCB.SETX
       834**DCL       834--REDEF
F$DCB.TAB$
       833**DCL       834--REDEF
F$DCB.TDA
       848**DCL       848--REDEF
F$DCB.WSN
       823**DCL       823--REDEF
FIND_BEST_RANGE
      3358**PROC     3332--CALL
FO_CITE
      2139**DCL        92--PROC
FO_CITE.NUM
      2175**DCL      3226>>DOINDEX  3395>>ASSIGN
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:66   
FO_CITE.NXT
      2172**DCL      3226>>DOINDEX  3226>>DOINDEX  3395>>ASSIGN
FO_CITE.SPAN
      2178**DCL      3420>>IF
FPT_CLOSE
      3126**DCL      3355<>CALL
FPT_CLOSE.SN_
      3126**DCL      3126--REDEF
FPT_CLOSE.UTL_
      3127**DCL      3127--REDEF
FPT_CLOSE.V
      3131**DCL      3126--DCLINIT
FPT_CLOSE.V.EXPIRE#
      3141**DCL      3141--REDEF
FPT_CLOSE.V.TYPE#
      3139**DCL      3139--REDEF
FPT_CLOSE.V.XTNSIZE#
      3136**DCL      3136--REDEF    3138--REDEF
FPT_FDP
      2459**DCL      3354<>CALL
FPT_FDP.V
      2459**DCL      2459--DCLINIT
FPT_GDP
      2442**DCL      3207<>CALL
FPT_GDP.V
      2442**DCL      2442--DCLINIT
FPT_SYSID
      3157**DCL      3236<>CALL     3350<>CALL
FPT_SYSID.SYSIDBUF_
      3157**DCL      3235<<ASSIGN
FPT_SYSID.V
      3158**DCL      3157--DCLINIT  3215<<ASSIGN
FPT_SYSID.V.BOOTID#
      3159**DCL      3216<<ASSIGN   3291>>IF       3292<<ASSIGN
FPT_SYSID.V.GETSYSIDS#
      3158**DCL      3234<<ASSIGN   3240<<ASSIGN
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:67   
FPT_SYSID.V.NSYSIDS#
      3160**DCL      3335<<ASSIGN
FPT_SYSID.V.SETBOOTID#
      3158**DCL      3340<<ASSIGN
FPT_SYSID.V.SETSYSID#
      3158**DCL      3333<<ASSIGN
FPT_SYSID.V.SYSID#
      3160**DCL      3334<<ASSIGN
FS$OSFN.BOOTID
      2303**DCL      3292>>ASSIGN
FS$OSFN.NUM
      2304**DCL      3288>>CALLBLT
FS$OSFN.SYSID
      2303**DCL      3270>>IF       3270>>IF       3274>>CALLBLT
GET_TIME
      3001**DCL      3201<>CALL
GET_TIME.V
      3005**DCL      3001--DCLINIT
I
      2325**DCL      3220<<DOINDEX  3221>>ASSIGN   3226<<DOINDEX  3227>>IF       3228>>ASSIGN   3229>>ASSIGN
      3237<<DOINDEX  3238>>ASSIGN   3252<<CALLBLT  3253>>ASSIGN   3274<<CALLBLT  3275>>IF       3279<<ASSIGN
      3285>>ASSIGN   3286>>IF       3286>>IF       3288<<CALLBLT  3289>>ASSIGN   3448<<DOINDEX  3449>>IF
      3450>>ASSIGN
IGJ$JOBSTATS
      2424**DCL-ENT  3345--CALL
IGNOR1
      3245**LABEL    3244--CALLALT
IGNOR2
      3267**LABEL    3266--CALLALT
IGNOR3
      3310**LABEL    3309--CALLALT
J IN PROCEDURE FIND_BEST_RANGE
      3389**DCL      3396<<ASSIGN   3397>>DOWHILE  3397>>DOWHILE  3398<<ASSIGN   3398>>ASSIGN   3400>>IF
      3402>>ASSIGN   3414<<ASSIGN   3415>>IF       3415<<ASSIGN   3415>>ASSIGN   3416>>IF
JKEY
      2377**DCL      3079--DCLINIT  3080--DCLINIT
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:68   
JKEY.SYSID#
      2377**DCL      3308<<ASSIGN
JOPN_IN
      2359**DCL      3307<>CALL
JREAD
      3079**DCL      3309<>CALL
JREAD.STATION_
      3082**DCL      3083--REDEF
JREAD.V
      3083**DCL      3079--DCLINIT
JREAD.V.DVBYTE.REREAD#
      3094**DCL      3094--REDEF
JREAD.V.INDX#
      3092**DCL      3092--REDEF
JREC
      2391**DCL      3035--DCLINIT  3036--DCLINIT  3081--DCLINIT  3082--DCLINIT
JREC.OFF_TIME#
      2392**DCL      3315<>CALL
JSCAN
      3033**DCL      3312<>CALL
JSCAN.STATION_
      3036**DCL      3037--REDEF
JSCAN.V
      3037**DCL      3033--DCLINIT
JSCAN.V.DVBYTE.REREAD#
      3048**DCL      3048--REDEF
JSCAN.V.INDX#
      3046**DCL      3046--REDEF
JSCANALT
      3324**LABEL    3312--CALLALT
JSFEND
      3332**LABEL    3306--GOTO
KEYBUF
      2336**DCL      3033--DCLINIT  3034--DCLINIT  3313--IF       3319--ASSIGN
M$CLOSE
       108**DCL-ENT  3355--CALL
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:69   
M$FDP
       144**DCL-ENT  3354--CALL
M$GDP
       144**DCL-ENT  3207--CALL
M$OPEN
       108**DCL-ENT  3244--CALL     3247--CALL     3266--CALL     3269--CALL
M$READ
       109**DCL-ENT  3309--CALL     3312--CALL
M$SID
      2417**DCL      3202--ASSIGN
M$SID$
      2324**DCL      3202<<ASSIGN   3248>>IF       3248>>IF       3248>>IF       3252>>CALLBLT  3270>>IF
      3270>>IF       3270>>IF       3274>>CALLBLT  3278>>ASSIGN   3288>>CALLBLT  3292>>ASSIGN
M$SYSID
       177**DCL-ENT  3236--CALL     3350--CALL
M$TEMPWROC
       152**DCL-ENT  3280--CALL
M$TIME
       175**DCL-ENT  3201--CALL
NOWUTS
      2335**DCL      3005--DCLINIT  3316<>CALL
NSYSIDS
      2330**DCL      3332<>CALL     3335>>ASSIGN   3345<>CALL
OPEN_SYMIFD
      2913**DCL      3244<>CALL
OPEN_SYMIFD.ACSVEH_
      2915**DCL      2916--REDEF
OPEN_SYMIFD.ALTKEYS_
      2921**DCL      2922--REDEF    2922--REDEF
OPEN_SYMIFD.HDR_
      2920**DCL      2921--REDEF
OPEN_SYMIFD.TAB_
      2919**DCL      2920--REDEF
OPEN_SYMIFD.UHL_
      2913**DCL      2914--REDEF    2914--REDEF
OPEN_SYMIFD.V
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:70   
      2922**DCL      2913--DCLINIT
OPEN_SYMIFD.V.FSN#
      2953**DCL      2953--REDEF    2953--REDEF
OPEN_SYMIFD.WSN_
      2919**DCL      2919--REDEF
OPEN_SYMOFD
      2666**DCL      3266<>CALL
OPEN_SYMOFD.ACSVEH_
      2668**DCL      2669--REDEF
OPEN_SYMOFD.ALTKEYS_
      2674**DCL      2675--REDEF    2675--REDEF
OPEN_SYMOFD.HDR_
      2673**DCL      2674--REDEF
OPEN_SYMOFD.TAB_
      2672**DCL      2673--REDEF
OPEN_SYMOFD.UHL_
      2666**DCL      2667--REDEF    2667--REDEF
OPEN_SYMOFD.V
      2675**DCL      2666--DCLINIT
OPEN_SYMOFD.V.FSN#
      2706**DCL      2706--REDEF    2706--REDEF
OPEN_SYMOFD.WSN_
      2672**DCL      2672--REDEF
PAGES$11
      2320**DCL      3208<<ASSIGN
RANGE IN PROCEDURE FIND_BEST_RANGE
      3393**DCL      3410<<ASSIGN   3414>>ASSIGN   3416>>IF       3417<<ASSIGN   3417>>ASSIGN   3420>>IF
      3422>>IF       3425>>ASSIGN   3427>>ASSIGN   3428>>IF       3435>>ASSIGN
REALSTART IN PROCEDURE FIND_BEST_RANGE
      3392**DCL      3411<<ASSIGN   3414>>ASSIGN   3424>>ASSIGN   3428>>IF       3434>>ASSIGN
RSTART IN PROCEDURE FIND_BEST_RANGE
      3391**DCL      3408<<ASSIGN   3409>>DOWHILE  3411>>ASSIGN   3427<<ASSIGN   3427>>ASSIGN   3428<<ASSIGN
      3428>>ASSIGN   3429>>DOWHILE  3430<<ASSIGN   3430>>ASSIGN
SCAN_SYMIFD
      2782**DCL      3247<>CALL
SCAN_SYMIFD.ACSVEH_
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:71   
      2784**DCL      2785--REDEF
SCAN_SYMIFD.ALTKEYS_
      2790**DCL      2791--REDEF    2791--REDEF
SCAN_SYMIFD.HDR_
      2789**DCL      2790--REDEF
SCAN_SYMIFD.TAB_
      2788**DCL      2789--REDEF
SCAN_SYMIFD.UHL_
      2782**DCL      2783--REDEF    2783--REDEF
SCAN_SYMIFD.V
      2791**DCL      2782--DCLINIT
SCAN_SYMIFD.V.FSN#
      2822**DCL      2822--REDEF    2822--REDEF
SCAN_SYMIFD.WSN_
      2788**DCL      2788--REDEF
SCAN_SYMOFD
      2535**DCL      3269<>CALL
SCAN_SYMOFD.ACSVEH_
      2537**DCL      2538--REDEF
SCAN_SYMOFD.ALTKEYS_
      2543**DCL      2544--REDEF    2544--REDEF
SCAN_SYMOFD.HDR_
      2542**DCL      2543--REDEF
SCAN_SYMOFD.TAB_
      2541**DCL      2542--REDEF
SCAN_SYMOFD.UHL_
      2535**DCL      2536--REDEF    2536--REDEF
SCAN_SYMOFD.V
      2544**DCL      2535--DCLINIT
SCAN_SYMOFD.V.FSN#
      2575**DCL      2575--REDEF    2575--REDEF
SCAN_SYMOFD.WSN_
      2541**DCL      2541--REDEF
START IN PROCEDURE FIND_BEST_RANGE
      3390**DCL      3395<<ASSIGN   3400>>IF       3402<<ASSIGN   3403>>IF       3403<<ASSIGN   3403>>ASSIGN
      3408>>ASSIGN   3409>>DOWHILE
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:72   
SYMIACCT
      2839**DCL      2787--DCLINIT  2918--DCLINIT
SYMIALT
      3256**LABEL    3247--CALLALT
SYMIDUMMY
      2984**DCL      2914--DCLINIT
SYMOACCT
      2592**DCL      2540--DCLINIT  2671--DCLINIT
SYMOALT
      3296**LABEL    3269--CALLALT
SYMODUMMY
      2411**DCL      2667--DCLINIT
SYMODUMMY.CNT
      2411**DCL      3270>>IF
SYS$IDS
      2319**DCL      3221<<ASSIGN   3228<<ASSIGN   3229<<ASSIGN   3238<<ASSIGN   3253<<ASSIGN   3285<<ASSIGN
      3289<<ASSIGN   3319<<ASSIGN   3397>>DOWHILE  3416>>IF       3429>>DOWHILE  3449>>IF       3450<<ASSIGN
SYSID
      2329**DCL      3332<>CALL     3334>>ASSIGN   3345<>CALL
SYSIDBUF_
      2340**DCL      2442--DCLINIT  2459--DCLINIT
SYSIDBUF_.BUF$
      2342**DCL      2319--IMP-PTR  2320--IMP-PTR  2343--REDEF    3208>>ASSIGN   3221>>ASSIGN   3228>>ASSIGN
      3229>>ASSIGN   3238>>ASSIGN   3253>>ASSIGN   3285>>ASSIGN   3289>>ASSIGN   3319>>ASSIGN   3397>>DOWHILE
      3416>>IF       3429>>DOWHILE  3449>>IF       3450>>ASSIGN
SYSIDBUF_.BUFPTR
      2343**DCL      3206<<ASSIGN
TRIES
      2331**DCL      3303<<ASSIGN   3305<<ASSIGN   3305>>ASSIGN   3306>>IF
TRYAGAIN
      3303**LABEL    3307--CALLALT
VLR_SYSID
      3175**DCL      3235--ASSIGN
VLR_SYSID.NSYSIDS
      3175**DCL      3237>>DOINDEX
VLR_SYSID.SYSIDS
PL6.E3A0      #001=IGN$SYSID File=IGN$SYSID.:E05TSI                              TUE 07/29/97 22:36 Page:73   
      3175**DCL      3238>>ASSIGN
WRITE_BAD_FID
      3191**DCL      3280<>CALL
WRITE_BAD_FID.V
      3194**DCL      3191--DCLINIT
XSJ$INFOKEY
      2317**DCL      3313--IF
XSJ$INFOKEY.SYSID#
      2317**DCL      3319>>ASSIGN
XSJ$OPENF
      2423**DCL-ENT  3307--CALL
XUD$UTS_ADJUST
      2098**DCL-ENT  3315--CALL
XUD$UTS_DIFF
      2080**DCL-ENT  3316--CALL
