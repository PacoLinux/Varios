VERSION E05

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:1    
        1        1        /*M* FRX$OPR Attach DCB to appropriate resource during open*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*NSO,MCL=0,MOC,MEC,CLM=3,EXM=3,CRT=6,DMR,PLM=3,IND=3,ENU=0,DCI=3,
        8        8        CSU=3,ECU=3,THI=0,DTI=0,CRM=86 */
        9        9        FRX$OPR: PROC (CGTYPE,CGATTR,CG) ALTRET;
       10       10           /**/
       11       11           /**/
       12       12    1   DCL CGTYPE CHAR(4);
       13       13    1   DCL CGATTR BIT(18) ALIGNED;
       14       14    1   DCL CG CHAR(20);
       15       15    1   DCL LDCT$ PTR;
       16       16    1   DCL RAT$ PTR;
       17       17    1   DCL RA1$ PTR;
       18       18    1   DCL RA2$ PTR;
       19       19    1   DCL DCB$ PTR;
       20       20    1   DCL RTYP CHAR(2);
       21       21    1   DCL RNUM CHAR(2);
       22       22    1   DCL RCD SBIN ;
       23       23    1   DCL SID UBIN WORD;
       24       24    1   DCL CCSE UBIN WORD;
       25       25    1   DCL M4 BIT(36) ALIGNED;
       26       26    1   DCL TDCT UBIN WORD;
       27       27    1   DCL M5 BIT(36) ALIGNED;
       28       28    1   DCL DEVC BIT(36) ALIGNED;
       29       29    1   DCL MODE UBIN WORD;
       30       30    1   DCL ANNCE SBIN WORD;
       31       31    1   DCL AVRCNT UBIN WORD;
       32       32    1   DCL OLTX UBIN WORD;
       33       33    1   DCL 1 TRES ALIGNED,
       34       34    1         2 * (0:2) UBIN WORD;
       35       35    1   DCL ATTR BIT(36) ALIGNED;
       36       36    1   DCL 1 FR_KMSG ALIGNED,
       37       37    1         2 SER# CHAR(6) UNAL,
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:2    
       38       38    1         2 ACCT CHAR(8) UNAL,
       39       39    1         2 FRM BIT(1) UNAL,
       40       40    1         2 ASN UBIN(8) UNAL,
       41       41    1         2 FUN UBIN(9)UNAL,
       42       42    1         2 VSN UBIN,
       43       43    1         2 DENS UBIN(9) UNAL;
       44       44    1   DCL RESTRT REMEMBER;
       45       45    1   DCL OCI$MK_WR ENTRY(7);
       46       46    1   DCL SSR$REG ENTRY(3) ALTRET;
       47       47    1   DCL SSR$RUE ENTRY(4);
       48       48    1   DCL FPM$MNTOD ENTRY(2) ALTRET;
       49       49    1   DCL FRZ$DSMT ENTRY(1);
       50       50    1   DCL FRZ$GETRES ENTRY(5) ALTRET;
       51       51    1   DCL FRZ$RRES ENTRY(2);
       52       52    1   DCL FRS$OPSTRS ENTRY;
       53       53    1   DCL FRS$RESADD ENTRY(1);
       54       54    1   DCL FRS$CLSTRS ENTRY;
       55       55    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
       56       56    1   DCL FRB$CCLS ENTRY;
       57       57    1   DCL SSS$BLOCK ENTRY;
       58       58    1   DCL KCO$TRMCONGOTCG ENTRY(4) ALTRET;
       59       59    1   DCL KCO$TRMGO ENTRY(1) ALTRET;
       60       60    1   DCL SSS$SYSTIME ENTRY(1);
       61       61    1   DCL M$MWRITE ENTRY(1) ALTRET;
       62       62    1   DCL B$JIT$ PTR SYMREF;
       63       63    1   DCL S_CUN UBIN(36) SYMREF;
       64       64           /**/
       65       65           /**/
       66       66        %INCLUDE B_ERRORS_C;
       67     1193        %INCLUDE UD_SEV_C;
       68     1207           /**/
       69     1208    1   DCL 1 WRNGTPE CONSTANT ALIGNED,
       70     1209    1         2 FCG BIT(18) UNAL INIT('062201'O),
       71     1210    1         2 ERR UBIN(15) UNAL INIT(%E$BADSER),
       72     1211    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       73     1212    1   DCL 1 DUPREEL CONSTANT ALIGNED,
       74     1213    1         2 FCG BIT(18) UNAL INIT('062201'O),
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:3    
       75     1214    1         2 ERR UBIN(15) UNAL INIT(%E$DUPREEL),
       76     1215    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       77     1216    1   DCL 1 NOSHR CONSTANT ALIGNED,
       78     1217    1         2 FCG BIT(18) UNAL INIT('062201'O),
       79     1218    1         2 ERR UBIN(15) UNAL INIT(%E$REOPN),
       80     1219    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       81     1220    1   DCL 1 NOMO CONSTANT ALIGNED,
       82     1221    1         2 FCG BIT(18) UNAL INIT('062201'O),
       83     1222    1         2 ERR UBIN(15) UNAL INIT(%E$NORES),
       84     1223    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       85     1224    1   DCL 1 BADLPCL CONSTANT ALIGNED,
       86     1225    1         2 FCG BIT(18) UNAL INIT('062201'O),
       87     1226    1         2 ERR UBIN(15) UNAL INIT(%E$BADRES),
       88     1227    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       89     1228    1   DCL 1 NODPYT CONSTANT ALIGNED,
       90     1229    1         2 FCG BIT(18) UNAL INIT('062201'O),
       91     1230    1         2 ERR UBIN(15) UNAL INIT(%E$NODP),
       92     1231    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       93     1232    1   DCL 1 BRKMNT CONSTANT ALIGNED,
       94     1233    1         2 FCG BIT(18) UNAL INIT('062201'O),
       95     1234    1         2 ERR UBIN(15) UNAL INIT(%E$MNTBRK),
       96     1235    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       97     1236    1   DCL 1 CANT CONSTANT ALIGNED,
       98     1237    1         2 FCG BIT(18) UNAL INIT('062201'O),
       99     1238    1         2 ERR UBIN(15) UNAL INIT(%E$CANT),
      100     1239    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      101     1240    1   DCL 1 BDATTR CONSTANT ALIGNED,
      102     1241    1         2 FCG BIT(18) UNAL INIT('062201'O),
      103     1242    1         2 ERR UBIN(15) UNAL INIT(%E$BDATTR),
      104     1243    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      105     1244    1   DCL 1 NORSNN CONSTANT ALIGNED,
      106     1245    1         2 FCG BIT(18) UNAL INIT('062201'O),
      107     1246    1         2 ERR UBIN(15) UNAL INIT(%E$NORSNN),
      108     1247    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      109     1248    1   DCL 1 LDSC CONSTANT ALIGNED,
      110     1249    1         2 FCG BIT(18) UNAL INIT('062201'O),
      111     1250    1         2 ERR UBIN(15) UNAL INIT(%E$LDSC),
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:4    
      112     1251    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      113     1252    1   DCL 1 NORSS CONSTANT ALIGNED,
      114     1253    1         2 FCG BIT(18) UNAL INIT('062201'O),
      115     1254    1         2 ERR UBIN(15) UNAL INIT(%E$NORSS),
      116     1255    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      117     1256    1   DCL 1 NCGAU CONSTANT ALIGNED,
      118     1257    1         2 FCG BIT(18) UNAL INIT('062201'O),
      119     1258    1         2 ERR UBIN(15) UNAL INIT(%E$NCGAU),
      120     1259    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      121     1260    1   DCL 1 NOTAU CONSTANT ALIGNED,
      122     1261    1         2 FCG BIT(18) UNAL INIT('062201'O),
      123     1262    1         2 ERR UBIN(15) UNAL INIT(%E$NOTAU),
      124     1263    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      125     1264           /**/
      126     1265           /**/
      127     1266        %INCLUDE B$USER;
      128     1482        %B$USERREFS;
      129     1486        %INCLUDE CP_6;
      130     7045        %INCLUDE NK_VFC_C;
      131     7119        %INCLUDE NK$LDCT;
      132     7221        %INCLUDE FR$RAT;
      133     7274        %FR$RAT (NAME=RAT,STCLASS="BASED(RAT$)");
      134     7314        %INCLUDE EL$TABLES;
      135     7637        %INCLUDE FR_DATA_R;
      136     7669        %INCLUDE F$DCB;
      137     7718        %INCLUDE B$JIT_C;
      138     8032        %B$JIT0;
      139     8121        %U$JIT1X;
      140     8124        %M$JIT2X;
      141     8127        %F$JIT3;
      142     8132        %S$JIT4X;
      143     8135        %J$JIT5X;
      144     8138        %A$JIT6;
      145     8148        %INCLUDE SS_SCHED_C;
      146     8381        %INCLUDE NK_LDCT_R;
      147     8390        %INCLUDE EL_SUBS_C;
      148     8474        %INCLUDE NK_SUBS;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:5    
      149     8499        %INCLUDE FR_SUBS;
      150     8567        %INCLUDE CP_6_SUBS;
      151     9107        %INCLUDE FM$MACROS;
      152     9482        %INCLUDE JG_GHOSTS_C;
      153     9572        %FM$DEV(BASED="BASED(FM$SET$)");
      154     9578    1   DCL FM$SET$ PTR SYMREF;
      155     9579        %INCLUDE OC_SUBS_C;
      156    10310        %NK$LDCT;
      157    10356        %EL$MTDMT (NAME=LMNT,STCLASS="");
      158    10359        %FPT_WRITE (FPTN=CANCE,STCLASS=CONSTANT,DCB=M$UC,VFC=YES);
      159    10390        %FPT_WRITE (FPTN=AANCE,STCLASS=AUTO);
      160    10421    1   DCL AUACCT CHAR(8) DALIGNED;
      161    10422    1   DCL 1 CBUF CONSTANT ALIGNED,
      162    10423    1         2 PREF,
      163    10424    1           3 VFC CHAR(1) UNAL INIT(%VFC_TRANSITION1),
      164    10425    1           3 DOTS CHAR(3) UNAL INIT('...'),
      165    10426    1         2 FXD CHAR(9) UNAL INIT('MOUNTing '),
      166    10427    1         2 YY CHAR(2) UNAL INIT('LT'),
      167    10428    1         2 CRNCH CHAR(1) UNAL INIT('#'),
      168    10429    1         2 VOL CHAR(6) UNAL INIT('VOLUME'),
      169    10430    1         2 FXD1 CHAR(11) UNAL INIT(' is MOUNTed');
      170    10431    1   DCL 1 ABUF ALIGNED,
      171    10432    1         2 MTNG,
      172    10433    1           3 * CHAR(13) UNAL,
      173    10434    1           3 YY CHAR(2) UNAL,
      174    10435    1           3 * CHAR(1) UNAL,
      175    10436    1           3 VOL CHAR(6) UNAL,
      176    10437    1         2 * CHAR(11) UNAL;
      177    10438    1   DCL 1 ABUFR REDEF ABUF ALIGNED,
      178    10439    1         2 * CHAR(9) UNAL,
      179    10440    1         2 MNTD,
      180    10441    1           3 PREF,
      181    10442    1             4 * CHAR(4) UNAL,
      182    10443    1           3 YYVL CHAR(9) UNAL,
      183    10444    1           3 * CHAR(11) UNAL;
      184    10445        %B$CGAUCI (FPTN=CGINFO,STCLASS=AUTO);
      185    10467           /**/
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:6    
      186    10468           /**/
      187    10469        %SUB MTNNSR=4 /*MT01/SER*/;
      188    10470        %SUB MTNNSC=5 /*MT01/   */;
      189    10471        %SUB MT__SR=6 /*MT/SER*/;
      190    10472        %SUB MT__SC=7 /*MT/ */;
      191    10473        %SUB LPNN="8,9 /*LP01*/";
      192    10474        %SUB LP__="10,11 /*LP  */";
      193    10475        %SUB DP__="2 /*DP */";
      194    10476        %SUB DPNN="0 /*DP */";
      195    10477        %SUB ODNNSR=12 /* OD01/SER */;
      196    10478        %SUB OD__SR=14 /* OD/SER */;
      197    10479        %SUB CL__SR=16 /*CLxxSER */;
      198    10480        %SUB CL__SC=17 /*CLxx */;
      199    10481           /**/
      200    10482           /**/
      201    10483        %EJECT;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:7    
      202    10484    1   FRX$CGCON: ENTRY (CGTYPE,CGATTR,CG) ALTRET;
      203    10485    1      RTYP = SUBSTR(CGTYPE,0,2);
      204    10486    1      RNUM = SUBSTR(CGTYPE,2,2);
      205    10487    1      ATTR = CGATTR;
      206    10488    1      RCD = FR_NPOOL;
      207    10489    1      CALL GETDN
      208    10490    2      WHENALTRETURN DO;
      209    10491    2         ALTRETURN;
      210    10492    2         END;
      211    10493    1      CGINFO.WIDTH = 0;
      212    10494    1      CGINFO.LENGTH = 0;
      213    10495    1      CGINFO.WHO.ACCT = ' ';
      214    10496    1      CGINFO.WHO.NAME = ' ';
      215    10497    1      LDCT$ = NK$LDCT$(RAT.DCTX);
      216    10498    1      CGINFO.FLG.INPUT = LDCT$->NK$LDCT.DFLG.INPUT;
      217    10499    1      CGINFO.FLG.OUTPUT = LDCT$->NK$LDCT.DFLG.OUTPUT;
      218    10500    1      CGINFO.ATTR = RAT.RES.M2;
      219    10501    1      CGINFO.NWINFO = 0;
      220    10502    1      CALL KCO$TRMCONGOTCG(LDCT$,CG,CGINFO,MODE)
      221    10503    2      WHENALTRETURN DO;
      222    10504    2         B$JIT.ERR = NOMO;
      223    10505    2         B$JIT.ERR.CODE = MODE;
      224    10506    2         ALTRETURN;
      225    10507    2         END;
      226    10508    1      CALL KCO$TRMGO(LDCT$);
      227    10509    1      RAT.FLG.OPN = '1'B;
      228    10510    1      RETURN;
      229    10511
      230    10512        %EJECT;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:8    
      231    10513    1   FRX$COPN: ENTRY ALTRET ;
      232    10514    1      CALL FRB$CCLS;
      233    10515           /**/
      234    10516    1   FRX$OPN: ENTRY ALTRET;
      235    10517           /**/
      236    10518    1      CALL SSS$SYSTIME( LMNT.REQ_UTS );
      237    10519    1      REMEMBER REOPN IN RESTRT;
      238    10520    1      CALL SSS$BLOCK;
      239    10521    1      DCB$=B$JIT$->B$JIT.DCB$;
      240    10522    1      DCB$->F$DCB.SETX=0;
      241    10523    1      RTYP=DCB$->F$DCB.RESNT.TYP;
      242    10524    1      RNUM=DCB$->F$DCB.RESNT.NUM;
      243    10525    1      SID=B$JIT$->B$JIT.SYSID;
      244    10526    1      MODE=B$JIT$->B$JIT.MODE;
      245    10527    1      ATTR=DCB$->F$DCB.ATTR;
      246    10528    1      RCD=FR_NPOOL;
      247    10529    1      IF RTYP='DP' THEN RCD=FR_DP;
      248    10530    2      IF RTYP='LT' OR RTYP='MT' OR RTYP='FT' THEN DO;
      249    10531    2         RCD=FR_MT;
      250    10532    2         RTYP='MT';
      251    10533    2         END;
      252    10534    1      CCSE=RCD*4;
      253    10535    1      IF RTYP='OD' THEN CCSE=ODNNSR;
      254    10536    2      IF RTYP='CL' THEN DO;
      255    10537    2         CCSE=CL__SR-2;
      256    10538    2         RNUM=' ';
      257    10539    2         IF NOT ATTR THEN ATTR='777777'O; /* There's no default for CL */
      258    10540    2         END;
      259    10541    1      IF DCB$->F$DCB.PSN<=' ' THEN CCSE=CCSE+1;
      260    10542    1      IF (RNUM=' ') THEN CCSE=CCSE+2;
      261    10543    2      ELSE DO;
      262    10544    2         IF RNUM<='00' OR RNUM>'99' THEN GOTO BDNUM;
      263    10545    2         END;
      264    10546    1      IF B$JIT.MODE=%M_INT# AND S$CU$->B$U.FLG.ANNCE THEN ANNCE=1;
      265    10547    1      ELSE ANNCE=0;
      266    10548    1   REOPN: ;
      267    10549    1      AVRCNT=FR_AVRCNT;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:9    
      268    10550    2      DO CASE (CCSE);
      269    10551    2      CASE(MTNNSR,ODNNSR);
      270    10552    2         CALL GETDN ALTRET (ALTRT);
      271    10553    2         IF DCB$->F$DCB.PSN~=RAT.REEL.SER
      272    10554    3           OR (RAT.REEL.ASID~=0 AND RAT.REEL.ASID~=SID) THEN DO;
      273    10555    4            IF RAT.FLG.MBIT.MTD THEN DO;
      274    10556    4   WTPE:       ;
      275    10557    4               B$JIT$->B$JIT.ERR=WRNGTPE;
      276    10558           /*E*  ERROR:         FRA-E$BADSER-E
      277    10559                  MESSAGE: Serial number% %SN% does not match what's mounted.
      278    10560                 MESSAGE1: You've specified both a serial number and a virtual
      279    10561                           drive on which to use it%( %UF)%.
      280    10562                           There is currently a different serial number mounted
      281    10563                           by you on that drive.
      282    10564                 MESSAGE2: It is possible to open to resources by generic type
      283    10565                           (MT) or specific virtual drive (MT01).  The virtual
      284    10566                           drive was defined by you on a !RES or !ORES command.
      285    10567                           Now you've specified both a serial number AND the
      286    10568                           virtual drive% (%UF)%, but you already have
      287    10569                           something else mounted there.  REMOVE the current
      288    10570                           serial number, use a different virtual drive, or
      289    10571                           ask for the drive generically (MT#ABCD not MT01#ABCD.
      290    10572                 DESCRIPTION:   The user said something like:
      291    10573                                C MT01#ABCD/XX TO MT01#WXYZ/BB                          */
      292    10574    4               ALTRETURN;
      293    10575    4               END;
      294    10576    3            CALL SRSER ALTRET (MOUNT);
      295    10577    4            IF RA1$->RAT.FLG.MBIT.MTD THEN DO;
      296    10578    4   DPRL:       ;
      297    10579    4               B$JIT$->B$JIT.ERR=DUPREEL;
      298    10580           /*E*  ERROR:         FRA-E$DUPREEL-E
      299    10581                  MESSAGE: You're already using that serial number% (%SN)%.
      300    10582                 MESSAGE1: You've specified both a serial number and a virtual
      301    10583                           drive on which to use it%( %UF)%.
      302    10584                           You currently have that same serial number mounted
      303    10585                           on another virtual drive.  It is possible that this
      304    10586                           error occurred because you asked for the same tape
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:10   
      305    10587                           but specified different densities for the drive.
      306    10588                 MESSAGE2: It is possible to open to resources by generic type
      307    10589                           (MT) or specific virtual drive (MT01).  The virtual
      308    10590                           drive was defined by you on a !RES or !ORES command.
      309    10591                           Now you've specified both a serial number AND the
      310    10592                           virtual drive% (%UF)%, but you already have
      311    10593                           the serial number mounted on another drive. REMOVE the
      312    10594                           serial number, use a different virtual drive, or
      313    10595                           ask for the drive generically (MT#ABCD not MT01#ABCD).
      314    10596                 DESCRIPTION:   This has most often happened because of changes
      315    10597                                in the density at which a given tape reel was requested.
      316    10598                                The user could have said:
      317    10599                                C MT01#ABCD/XX TO MT02#ABCD/YY                          */
      318    10600    4   ALTRT:      ALTRETURN;
      319    10601    4               END;
      320    10602    3            CALL SLIDE ALTRET (DMMT);
      321    10603    3            END;
      322    10604    2      CASE(MTNNSC);
      323    10605    2         CALL GETDN ALTRET (ALTRT);
      324    10606    3         IF RAT.FLG.MBIT~=%(MTDBIT|MTSCBIT) THEN DO;
      325    10607    3            IF RAT.FLG.MBIT.MTD THEN GOTO WTPE;
      326    10608    3   SCRCOM:  ;
      327    10609    4            IF NOT RAT.FLG.MBIT.MTSC OR RAT.REEL.ASID~=SID THEN DO;
      328    10610    4               CALL SRSCR ALTRET (MOUNT);
      329    10611    4               END;
      330    10612    3            END;
      331    10613    2      CASE(MT__SR,DP__,DPNN,OD__SR);
      332    10614    2         CALL SRSER ALTRET (LOMNT);
      333    10615    3         IF RA1$->RAT.FLG.MBIT.MTD THEN DO;
      334    10616    4            IF RA1$->RAT.FLG.OPN THEN DO;
      335    10617    4   TWODCB:     ;
      336    10618    4               B$JIT$->B$JIT.ERR=NOSHR;
      337    10619           /*E*  ERROR:         FRA-E$REOPN-E
      338    10620                  MESSAGE: That resource% (%UF)% is already open!
      339    10621                 MESSAGE1: Only one DCB at a time may be open to a given resource.
      340    10622                           The resource you opened to% (%UF)% is already open.
      341    10623                 DESCRIPTION:   In this case the user asked for a tape by serial
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:11   
      342    10624                                number and already had a DCB open to it.  like:
      343    10625                                C MT#ABCD/XX TO MT#ABCD/YY                              */
      344    10626    4               ALTRETURN;
      345    10627    4               END;
      346    10628    3            IF ATTR&~RA1$->RAT.RES.M2 THEN GOTO DPRL;
      347    10629    3            RAT$=RA1$;
      348    10630    3            END;
      349    10631    3         ELSE DO;
      350    10632    3            CALL GETLOW ALTRET (CSE6SLD);
      351    10633    3            ALTRETURN;
      352    10634    3   CSE6SLD: ;
      353    10635    3            IF RAT$~=RA1$ THEN CALL SLIDE ALTRET (DMMTDP);
      354    10636    3            END;
      355    10637    2         GOTO CSEX;
      356    10638    2   NODPDN: ;
      357    10639    2         CCSE=DP__;
      358    10640    2         B$JIT.ERR='0'B;
      359    10641    2   LOMNT: ;
      360    10642    3         IF CCSE=DPNN THEN DO;
      361    10643    3            CALL GETDN ALTRET (NODPDN);
      362    10644    3            GOTO MOUNT;
      363    10645    3            END;
      364    10646    2         CALL GETLOW ALTRET (MOUNT);
      365    10647    2         M4=%(MTNNBIT|SOLBIT|OPNBIT);
      366    10648    2         CALL GETLOW1 ALTRET (DMMTMT);
      367    10649    2         M4=%(SOLBIT|OPNBIT);
      368    10650    2         CALL GETLOW1 ALTRET (DMMTMT);
      369    10651    2         ALTRETURN;
      370    10652    2   DMMTMT: ;
      371    10653    2         RA1$=RAT$;
      372    10654    2         GOTO DMMT;
      373    10655    2      CASE(MT__SC);
      374    10656    2         M4=%(MTDBIT|MTSCBIT|MTNNBIT|SOLBIT|OPNBIT);
      375    10657    2         M5=%(MTDBIT|MTSCBIT);
      376    10658    2         CALL GETLOW1 ALTRET (CSEX);
      377    10659    2         CALL GETLOW ALTRET (SCRCOM);
      378    10660    2         M4=%(SOLBIT|OPNBIT);
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:12   
      379    10661    2         CALL GETLOW1 ALTRET(DMMTMT);
      380    10662    2         ALTRETURN;
      381    10663    2      CASE(LPNN);
      382    10664    2         CALL GETDN ALTRET (ALTRT);
      383    10665    2         IF RAT.RCOD=FR_FEPRES THEN EXIT;/* No forms for FEP resource */
      384    10666    3         IF DCB$->F$DCB.PSN~=RAT.REEL.SER OR NOT RAT.FLG.RUP THEN DO;
      385    10667    4            IF RAT.FLG.MBIT.MTD THEN DO;
      386    10668    4               IF NOT RAT.FLG.FORM THEN GOTO WTPE;
      387    10669    4               RAT.FLG.MBIT.MTD='0'B;
      388    10670    4               END;
      389    10671    3            GOTO MNT2;
      390    10672    3            END;
      391    10673    2      CASE(LP__);
      392    10674    2   BDNUM: ;
      393    10675    2         B$JIT$->B$JIT.ERR=BADLPCL;
      394    10676           /*E*  ERROR:         FRA-E$BADRES-E
      395    10677                  MESSAGE: The full resource name% for %UF% must be specified.
      396    10678                 MESSAGE1: Except for tape or disk resources% (%UF here)%, it is
      397    10679                           not legal to specify only the generic type (e.g. LP)
      398    10680                           of the resource.  The full virtual name as specified
      399    10681                           on the !RES or !ORES command (e.g. LP01) must be given
      400    10682                           as RES on the M$OPEN.  If you did not intend to open
      401    10683                           to a resource, check the list of legal oplabels in
      402    10684                           the reference manual.
      403    10685                 DESCRIPTION:   Probably the user did something like:
      404    10686                                C ME TO QQ#
      405    10687                                QQ is not an oplabel but the # says its a device        */
      406    10688    2         ALTRETURN;
      407    10689    2      CASE(CL__SR,CL__SC);
      408    10690    3         IF NOT B$JIT.CLRES THEN DO;
      409    10691    3            B$JIT.ERR=NOMO;
      410    10692    3            ALTRETURN;
      411    10693    3            END;
      412    10694    2         IF B$JIT.CLRES(2) THEN RNUM='00';
      413    10695    2         ELSE IF B$JIT.CLRES(0) THEN RNUM='01';
      414    10696    2            ELSE RNUM='02';
      415    10697           /* Search for a candidate */
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:13   
      416    10698    2         RAT$=FR$HD$(FR_NPOOL);
      417    10699    3         DO INHIBIT; /* No moving targets, please */
      418    10700    4            DO WHILE '1'B;
      419    10701    5               IF RAT$=ADDR(NIL) THEN DO;
      420    10702    5                  IF NOT B$JIT.ERR THEN B$JIT.ERR=NORSS;
      421    10703           /*E* ERROR: FRA-E$NORSS
      422    10704                MESSAGE: All CL devices% for %DC% are busy or disconnected.
      423    10705           */
      424    10706    5                  ALTRETURN;
      425    10707    5                  END;
      426    10708    4               IF RTYP=RAT.TYP AND NOT ATTR&~RAT.M1 AND RAT.FLG.RUP
      427    10709    4                 AND (CCSE=CL__SC OR RAT.REEL.SER=DCB$->F$DCB.PSN)
      428    10710    4               THEN EXIT;
      429    10711    4   CL_NXT:     RAT$=RAT.LNK$;
      430    10712    4               END;
      431    10713    3            AUACCT=NK$LDCT$(RAT.DCTX)->NK$LDCT.LOGON_ACCT;
      432    10714    4            IF RAT.CLFLG.MULT THEN DO;
      433    10715    4               IF DCB$->F$DCB.AU /* the guy wants to own it */
      434    10716    4               THEN IF RAT.CLFLG.AUCTL THEN GOTO CL_RES;
      435    10717    4                  ELSE GOTO CL_NXT;
      436    10718    4               IF RAT.CLFLG.AUCTL AND RAT.RES.SISID=0
      437    10719    4                 AND NOT B$JIT.PRIV.ACTIVE.MSYS
      438    10720    5                 AND AUACCT~='?' AND AUACCT~=B$JIT.ACCN THEN DO;
      439    10721    5                  B$JIT.ERR=NOTAU;
      440    10722           /*E* ERROR: FRA-E$NOTAU
      441    10723                MESSAGE: That resource %(%UF, %DC) %needs an AU.
      442    10724           */
      443    10725    5                  GOTO CL_NXT;
      444    10726    5                  END;
      445    10727    4               IF NOT RAT.CLFLG.AUCTL OR RAT.RES.SISID=0 OR RAT.RES.SISID=SID
      446    10728    4               THEN DCB$->F$DCB.IORG=%VARIABLE#;
      447    10729    4               ELSE DCB$->F$DCB.IORG=%UNDEF#;
      448    10730    4               END; /* If CLFLG.MULT */
      449    10731    4            ELSE DO;
      450    10732    4   CL_RES:     IF RAT.RES.SISID~=0 THEN GOTO CL_NXT; /* That one's busy */
      451    10733    4               IF RAT.CLFLG.AUCTL
      452    10734    5                 AND AUACCT~='?' AND AUACCT~=B$JIT.ACCN THEN DO;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:14   
      453    10735    5                  B$JIT.ERR=NCGAU;
      454    10736           /*E* ERROR: FRA-E$NCGAU
      455    10737                MESSAGE: Your account cannot control that resource%(%UF, %DC)%.
      456    10738           */
      457    10739    5                  GOTO CL_NXT;
      458    10740    5                  END;
      459    10741    4               RA1$=RAT$;
      460    10742    4               CALL FRZ$GETRES(RTYP,ATTR,SID,MODE,RAT$) ALTRET (ALTRT);
      461    10743    4               DCB$->F$DCB.IORG=%FIXED#;
      462    10744    4               IF RA1$~=RAT$ THEN CALL SLIDEGO;
      463    10745    4               END; /* if not CLFLG.MULT */
      464    10746    3            RAT.FLG.OPN='1'B; /* Set here so we get to FRB$CLS if it goes away */
      465    10747    3            END;
      466    10748    2         OLTX=0;
      467    10749    2         IF RNUM='02' THEN OLTX=OLTX+1;
      468    10750    2         IF RNUM~='00' THEN B$JIT.CLRES(OLTX)='0'B;
      469    10751    2         DCB$->F$DCB.CRECX=B$JIT.ARECX;
      470    10752    2         B$JIT.ARECX=B$JIT.ARECX+1;
      471    10753    2         IF RAT.RES.SISID=SID THEN RA1$=RAT$;
      472    10754    3         ELSE DO;
      473    10755    3            RA1$=ADDR(AANCE);
      474    10756    3            RA1$->RAT=RAT;
      475    10757    3            RA1$->RAT.RES.M2=ATTR;
      476    10758    3            END;
      477    10759    2         RA1$->RAT.RES.ACTX=DCB$->F$DCB.CRECX;
      478    10760    2         RA1$->RAT.RES.NUMB=RNUM;
      479    10761    2         DCB$->F$DCB.RESNT.NUM=RNUM;
      480    10762    2         CALL FRS$OPSTRS;
      481    10763    2         CALL FRS$RESADD (RA1$->RAT);
      482    10764    2         CALL FRS$CLSTRS;
      483    10765    2      CASE (ELSE);
      484    10766    2         B$JIT$->B$JIT.ERR=NODPYT;
      485    10767           /*E*  ERROR:         FRA-E$NODP-E
      486    10768                  MESSAGE: A DP or OD resource DCB% like %DC% requires a volume name.
      487    10769                 MESSAGE1: A volume name (SN) must be specified to begin use of
      488    10770                           a DP or OD resource% as you've requested in %DC%.
      489    10771                 DESCRIPTION:  See message 1.                                           */
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:15   
      490    10772    2         ALTRETURN;
      491    10773    2      END;
      492    10774    1   CSEX: ;
      493    10775    2      DO INHIBIT;
      494    10776    2         IF RAT.DCTX = 0 /* Resource disconnected */
      495    10777    3         THEN DO;
      496    10778    3            B$JIT$->B$JIT.ERR = LDSC;
      497    10779           /*E* ERROR: FRA-E$LDSC-E
      498    10780                MESSAGE: The resource being opened to has disconnected.
      499    10781                MESSAGE1: Between the time of acquiring a resource and
      500    10782                          the open, the resource disconnected from the
      501    10783                          system.
      502    10784           */
      503    10785    3            ALTRETURN;
      504    10786    3            END;
      505    10787    2         IF NOT RAT.FLG&%(RUPBIT|OPNBIT) THEN GOTO REOPN;
      506    10788    2         RAT.FLG.OPN='1'B;
      507    10789    2         END;
      508    10790    2      IF RTYP~='CL' THEN DO;
      509    10791    2         DCB$->F$DCB.RESNT.NUM=RAT.RES.NUMB;
      510    10792    2         IF RAT.FLG.MBIT.MTD THEN EXIT;
      511    10793    2         RAT.FLG.MBIT.MTD='1'B;
      512    10794    2         IF DCB$->F$DCB.RESNT.NUM~=' ' THEN RAT.FLG.MTNN='1'B;
      513    10795    2         RAT.REEL.ASID=RAT.RES.SISID;
      514    10796    2         B$JIT$->B$JIT.MOUNTS(RCD)=B$JIT$->B$JIT.MOUNTS(RCD)+1;
      515    10797    2         LMNT.SYSID=SID;
      516    10798    3         IF RCD=FR_DP THEN DO;
      517    10799    3            LMNT.PSN=RAT.REEL.SER;
      518    10800    3            CALL BINCHAR(LMNT.VOLUME,MOD(DCB$->F$DCB.CSEED,1000000));
      519    10801    3            END;
      520    10802    3         ELSE DO;
      521    10803    3            LMNT.VOLUME=RAT.REEL.SER;
      522    10804    3            LMNT.PSN=' ';
      523    10805    3            END;
      524    10806    2         LMNT.DEVNAME=NK$LDCT$(RAT.DCTX)->LDCT.DEVNM;
      525    10807    2         CALL ELA$SYSLOG (EL_MOUNT,LMNT,SIZEW(LMNT),'0'B,1,RA1$);
      526    10808    3         IF ANNCE<0 OR ANNCE>0 AND DCB$->F$DCB.PSN=' ' THEN DO;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:16   
      527    10809    4            IF ANNCE>0 THEN DO;
      528    10810    4               ABUF=CBUF;
      529    10811    4               AANCE=CANCE;
      530    10812    4               ABUF.MTNG.YY=DCB$->F$DCB.RESNT.TYP;
      531    10813    4               END;
      532    10814    3            ABUF.MTNG.VOL=LMNT.VOLUME;
      533    10815    3            ABUFR.MNTD.PREF=CBUF.PREF;
      534    10816    3            AANCE.BUF_=VECTOR(ABUFR.MNTD);
      535    10817    3            CALL M$MWRITE (AANCE) ALTRET (MTDON);
      536    10818    3   MTDON:   ;
      537    10819    3            B$JIT.DCB$=DCB$;
      538    10820    3            END;
      539    10821    2         END;
      540    10822    1      IF DCB$->F$DCB.PSN~=' ' THEN RAT.FLG.MBIT.MTSC='0'B;
      541    10823    1      DCB$->F$DCB.PSN=RAT.REEL.SER;
      542    10824    1      IF ATTR='0'B THEN DCB$->F$DCB.ATTR=RAT.RES.M2;
      543    10825    1      DCB$->F$DCB.SETX=RAT.DCTX;
      544    10826    1      B$JIT.ERR='0'B;
      545    10827    1      RETURN;
      546    10828           /**/
      547    10829    1   DMMTDP:;
      548    10830    2      IF RCD=FR_DP THEN DO;
      549    10831           /* DONT MOVE A DP FROM ONE RTYP TO ANOTHER */
      550    10832    2         B$JIT.ERR=BDATTR;
      551    10833    2         ALTRETURN;
      552    10834    2         END;
      553    10835           /**/
      554    10836    1   DMMT: ;
      555    10837    1      CALL FRZ$DSMT (RA1$->RAT);
      556    10838    1   MOUNT: ;
      557    10839    1      TDCT=0;
      558    10840    1      IF RAT.RES.RFLG.CANT OR S_CUN=JG_PIG# THEN GOTO CNTMNT;
      559    10841    1      IF S$CU$->B$U.ASYNCH&~%U_RESET THEN GOTO BRKOUT;
      560    10842    1      M4=%(SOLBIT|RUPBIT);
      561    10843    2      DO WHILE(RAT.FLG&M4);
      562    10844    2         RA1$=FR$HD$(RCD);
      563    10845    3         DO WHILE (RA1$~=ADDR(NIL));
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:17   
      564    10846    4            IF NOT RA1$->RAT.FLG&M4 THEN DO;
      565    10847    4               CALL SLIDE ALTRET (MNT1);
      566    10848    4               GOTO MNT2;
      567    10849    4               END;
      568    10850    3   MNT1:    ;
      569    10851    3            RA1$=RA1$->RAT.LNK$;
      570    10852    3            END;
      571    10853    2         IF NOT M4&%SOLBIT THEN EXIT; /* SOLRUP->RUP->0 */
      572    10854    2         M4=%RUPBIT;
      573    10855    2         END;
      574    10856    1   MNT2: ;
      575    10857    2      IF ANNCE>0 THEN DO;
      576    10858    2         ANNCE=-1;
      577    10859    2         ABUF=CBUF;
      578    10860    2         ABUF.MTNG.YY=DCB$->F$DCB.RESNT.TYP;
      579    10861    2         ABUF.MTNG.VOL=DCB$->F$DCB.PSN;
      580    10862    2         AANCE=CANCE;
      581    10863    2         AANCE.BUF_=VECTOR(ABUF.MTNG);
      582    10864    2         CALL M$MWRITE (AANCE) ALTRET (MSGON);
      583    10865    2   MSGON: ;
      584    10866    2         B$JIT.DCB$=DCB$;
      585    10867    2         END;
      586    10868    2      DO INHIBIT;
      587    10869    2         IF AVRCNT~=FR_AVRCNT THEN GOTO REOPN;
      588    10870    2         RAT.FLG.MBIT.SOL='1'B;
      589    10871    2         RAT.SSER=DCB$->F$DCB.PSN;
      590    10872    2         RAT.SOLU=S_CUN;
      591    10873    2         END;
      592    10874    1      FR_KMSG.SER#=DCB$->F$DCB.PSN;
      593    10875    1      FR_KMSG.ACCT=B$JIT$->B$JIT.ACCN;
      594    10876    1      FR_KMSG.FRM=RAT.FLG.FORM;
      595    10877    1      FR_KMSG.ASN=DCB$->F$DCB.ASN;
      596    10878    1      FR_KMSG.FUN=DCB$->F$DCB.FUN;
      597    10879    1      IF ATTR&%ATTR_D6250# THEN FR_KMSG.DENS=1;
      598    10880    1      ELSE FR_KMSG.DENS=0;
      599    10881    1      TDCT=RAT.DCTX;
      600    10882    2      DO CASE(RCD);
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:18   
      601    10883    2      CASE(FR_DP);
      602    10884    2         DEVC=M_DISK;
      603    10885    2         FR_KMSG.ASN=%FILE#;
      604    10886    2         FR_KMSG.VSN=DCB$->F$DCB.CSEED;
      605    10887    2      CASE(FR_MT);
      606    10888    2         DEVC=M_TAPE;
      607    10889    2      CASE(ELSE);
      608    10890    2         DEVC=M_UR;
      609    10891    2      END;
      610    10892    1   MNT3: ;
      611    10893    1      IF RTYP = 'OD' THEN
      612    10894    1         CALL FPM$MNTOD (TDCT, DCB$->F$DCB.PSN) ALTRET (MNTBK);
      613    10895    2      ELSE DO;
      614    10896    2         CALL OCI$MK_WR (DEVC, MOUNT_MSG#, LENGTHC(FR_MMSGL), FR_MMSGL, FR_KMSG, TDCT);
      615    10897    2         CALL SSR$REG (%SS_SL, ADDR(NIL), MNTWAIT) ALTRET (MNTBK);
      616    10898    2         END;
      617    10899    2      IF SID=RAT.RES.SISID THEN DO;
      618    10900    3         IF RAT.RES.RFLG.CANT THEN DO;
      619    10901    3   CNTMNT:  ;
      620    10902    3            B$JIT$->B$JIT.ERR=CANT;
      621    10903           /*E*  ERROR:         FRA-E$CANT-E
      622    10904                  MESSAGE: The operator cannot do your mount request% for %UF%!
      623    10905                 MESSAGE1: When a request to mount a tape appears on the
      624    10906                           operators console, the operator has the ability
      625    10907                           to cancel the mount request with a keyin.  This
      626    10908                           was done to your last mount request% for %UF%.
      627    10909                 DESCRIPTION:   This error results from use of the CANT MOUNT keyin     */
      628    10910    3            GOTO FORGET;
      629    10911    3            END;
      630    10912    2         IF RAT.FLG.MBIT.SOL THEN GOTO MNT3;
      631    10913    2         END;
      632    10914    1      GOTO REOPN;
      633    10915    1   MNTBK: ;
      634    10916    1      IF SID~=RAT.RES.SISID THEN GOTO REOPN;
      635    10917    1   BRKOUT:;
      636    10918    1      RAT.FLG.MBIT.SOL='0'B;
      637    10919    1      B$JIT$->B$JIT.ERR=BRKMNT;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:19   
      638    10920           /*E*  ERROR:         FRA-E$MNTBRK-E
      639    10921                  MESSAGE: BREAK or CONTROL-Y during mount% of %UF%.
      640    10922                 MESSAGE1: When a terminal user hits BREAK or CTL-Y with a
      641    10923                           mount operation in progress, that operation is
      642    10924                           aborted.  If you still wish to do the mount% of %UF%,
      643    10925                           please try it again.
      644    10926                 DESCRIPTION:   The worst part of the problem is CVOL, where the
      645    10927                                current operation requires both reels to be up to
      646    10928                                complete.  It seems wrong to disallow break and
      647    10929                                control-y while the operator looks for the next
      648    10930                                reel, so we make the user start over.  after all,
      649    10931                                he is the one with the itchy fingers                    */
      650    10932    1   FORGET: ;
      651    10933    1      RAT.RES.RFLG.CANT='0'B;
      652    10934    1      IF RAT.RES.RFLG.OLT THEN CALL FRZ$RRES (RAT,MODE);
      653    10935    1      IF TDCT~=0 AND RTYP ~= 'OD' THEN
      654    10936    1         CALL OCI$MK_WR (DEVC,FRGT_MSG#,LENGTHC(FR_MMSGL),FR_MMSGL,FR_KMSG,TDCT);
      655    10937    1      ALTRETURN;
      656    10938           /**/
      657    10939           /**/
      658    10940           /*         SUBROUTINES        */
      659    10941           /**/
      660    10942           /**/
      661    10943    1   GETLOW: PROC ALTRET;
      662    10944    2      M4=%MTDBIT;
      663    10945    2      M5='0'B;
      664    10946    2   GETLOW1: ENTRY ALTRET;
      665    10947    2      RA2$=FR$HD$(RCD);
      666    10948    2      RNUM='9:';
      667    10949    3      DO WHILE (RA2$~=ADDR(NIL));
      668    10950    3         IF (RA2$->RAT.RES.SISID=SID
      669    10951    3           AND RA2$->RAT.TYP=RTYP
      670    10952    3           AND (RA2$->RAT.FLG&M4)=M5
      671    10953    3           AND RA2$->RAT.RES.NUMB<RNUM)
      672    10954    3           AND (NOT RA2$->RAT.RES.RFLG.NOSLD OR RCD~=FR_DP)
      673    10955    3           AND (ATTR&~RA2$->RAT.RES.M2)='0'B
      674    10956    4         THEN DO;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:20   
      675    10957    4            RNUM=RA2$->RAT.RES.NUMB;
      676    10958    4            RAT$=RA2$;
      677    10959    4            END;
      678    10960    3         RA2$=RA2$->RAT.LNK$;
      679    10961    3         END;
      680    10962    2      IF RNUM>='03' AND RTYP='MT' AND M5='0'B
      681    10963    3      THEN DO OLTX=0 TO 1;
      682    10964    4         IF B$JIT$->B$JIT.OLTA(OLTX) THEN DO;
      683    10965    4            CALL GETOLT ALTRET (NOOLT);
      684    10966    4            RNUM=RAT.RES.NUMB;
      685    10967    4            ALTRETURN;
      686    10968    4   NOOLT:   ;
      687    10969    4            IF RNUM='9:' THEN RETURN;
      688    10970    4            B$JIT.ERR='0'B;
      689    10971    4            ALTRETURN;
      690    10972    4            END;
      691    10973    3         END;
      692    10974    2      IF RNUM~='9:' THEN ALTRETURN;
      693    10975    2      RNUM=DCB$->F$DCB.RESNT.NUM;
      694    10976    2      IF M5='0'B THEN B$JIT.ERR=NOMO;
      695    10977           /*E*  ERROR:         FRA-E$NORES-E
      696    10978                  MESSAGE: Your resources of this type% (%UF)% are exhausted!
      697    10979                 MESSAGE1: Physical resources are obtained via the !RES or !ORES
      698    10980                           command.  Non-BATCH users are permitted at most two
      699    10981                           tape drives without the use of !ORES.  If you own any
      700    10982                           of the resources you are asking for% (%UF)%, they are
      701    10983                           all in use.  Note that you might have (e.g.) tapes
      702    10984                           but none with the attributes you requested.
      703    10985                 DESCRIPTION:   We cannot find (or get) a drive owned by this user
      704    10986                                to which to open his DCB.  Watch out for attribute
      705    10987                                mismatches - the user may have a tape left that does
      706    10988                                not have the attributes (density) he is asking for      */
      707    10989    2      RETURN;
      708    10990           /**/
      709    10991           /**/
      710    10992    2   GETDN: ENTRY ALTRET;
      711    10993    3      IF RTYP='MT' AND RNUM<='02' THEN DO;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:21   
      712    10994    3         IF RNUM='01' THEN OLTX=0;
      713    10995    3         ELSE OLTX=1;
      714    10996    4         IF B$JIT$->B$JIT.OLTA(OLTX) THEN DO;
      715    10997    4            CALL GETOLT ALTRET (NOOLT1);
      716    10998    4            RETURN;
      717    10999    4            END;
      718    11000    3         END;
      719    11001    2   NOOLT1:;
      720    11002    2      RAT$=FR$HD$(RCD);
      721    11003    3      DO WHILE (RAT$~=ADDR(NIL));
      722    11004    3         IF (RAT.RES.SISID=SID
      723    11005    3           AND RAT.RES.NUMB=RNUM
      724    11006    3           AND RAT.TYP=RTYP)
      725    11007    4         THEN DO;
      726    11008    5            IF ATTR&~RAT.RES.M2 THEN DO;
      727    11009    5               B$JIT.ERR=BDATTR;
      728    11010           /*E*  ERROR:         FRA-E$BDATTR-E
      729    11011                  MESSAGE: Your resource% for %UF% does not have those attributes!
      730    11012                 MESSAGE1: You attempted to open to a resource% for %UF% specifying
      731    11013                           attributes that it does not have.  Attributes
      732    11014                           (e.g. 1600BPI,LOWERCASE) must be requested on the
      733    11015                           !RES or !ORES command used to acquire the resource.
      734    11016                 DESCRIPTION:   The user probably asked for a 6250 BPI tape on a
      735    11017                                drive he acquired without asking for that attribute.    */
      736    11018    5               ALTRETURN;
      737    11019    5               END;
      738    11020    4            B$JIT.ERR='0'B;
      739    11021    4            IF NOT RAT.FLG.OPN THEN RETURN;
      740    11022    4            B$JIT$->B$JIT.ERR=NOSHR;
      741    11023           /*E*  ERROR:         FRA-E$REOPN-E
      742    11024                 DESCRIPTION:   In this case the user asked for a specific drive
      743    11025                                that he already has a DCB open to                       */
      744    11026    4            ALTRETURN;
      745    11027    4            END;
      746    11028    3         RAT$=RAT.LNK$;
      747    11029    3         END;
      748    11030    2      IF B$JIT.ERR='0'B THEN B$JIT.ERR=NORSNN;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:22   
      749    11031           /*E*  ERROR:         FRA-E$NORSNN-E
      750    11032                  MESSAGE: You do not own such a resource% for %UF%!
      751    11033                 MESSAGE1: You tried to open% to %UF% with a full resource
      752    11034                           name (dvnn not dv) but you have no resource by that
      753    11035                           name.  The resource virtual name may be optionally
      754    11036                           specified on the !RES or !ORES command.
      755    11037                 DESCRIPTION:   He probably left something off his !resource command.   */
      756    11038    2      ALTRETURN;
      757    11039    2   END;
      758    11040           /**/
      759    11041           /**/
      760    11042    1   GETOLT: PROC ALTRET;
      761    11043    2      CALL FRZ$GETRES (RTYP,DCB$->F$DCB.ATTR,SID,MODE,RA2$) ALTRET (ALTOUT);
      762    11044    2      B$JIT$->B$JIT.OLTA(OLTX)='0'B;
      763    11045    2      RAT$=RA2$;
      764    11046    2      RAT.RES.RFLG.OLT='1'B;
      765    11047    2      IF OLTX=0 THEN RAT.RES.NUMB='01';
      766    11048    2      ELSE RAT.RES.NUMB='02';
      767    11049    2      RAT.RES.ACTX=B$JIT.ARECX;
      768    11050    2      B$JIT.ARECX=B$JIT.ARECX+1;
      769    11051    2      RAT.RES.RFLG.NOSLD='1'B;
      770    11052    2      CALL FRS$OPSTRS;
      771    11053    2      CALL FRS$RESADD (RAT$->RAT);
      772    11054    2      CALL FRS$CLSTRS;
      773    11055    2      RAT.RES.RFLG.NOSLD='0'B;
      774    11056    2      UNWIND TO RESTRT; /* The tables might have changed on us now. */
      775    11057    2   ALTOUT: ;
      776    11058    2      ALTRETURN;
      777    11059    2   END;
      778    11060           /**/
      779    11061           /**/
      780    11062    1   SRSCR: PROC ALTRET;
      781    11063    2      RA2$=ADDR(NIL);
      782    11064    2      RA1$=FR$HD$(RCD);
      783    11065    3      DO WHILE (RA1$~=ADDR(NIL));
      784    11066    4         IF RA1$->RAT.REEL.ASID=SID AND RA1$->RAT.FLG.MBIT=%MTSCBIT THEN DO;
      785    11067    4            CALL SLIDE ALTRET (SRSCR1);
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:23   
      786    11068    4            RETURN;
      787    11069    4   SRSCR1:  ;
      788    11070    4            RA2$=RA1$;
      789    11071    4            END;
      790    11072    3         RA1$=RA1$->RAT.LNK$;
      791    11073    3         END;
      792    11074    2      IF RA2$=ADDR(NIL) THEN ALTRETURN;
      793    11075    2      CALL FRZ$DSMT (RA2$->RAT);
      794    11076    2      ALTRETURN;
      795    11077           /**/
      796    11078           /**/
      797    11079    2   SRSER: ENTRY ALTRET;
      798    11080    2      OLTX=SID; /* SEARCH FIRST FOR ON OF OURS. */
      799    11081    2   SRSER0:;
      800    11082    2      RA1$=FR$HD$(RCD);
      801    11083    3      DO WHILE (RA1$~=ADDR(NIL));
      802    11084    3         IF (RA1$->RAT.REEL.SER=DCB$->F$DCB.PSN
      803    11085    3           AND RA1$->RAT.REEL.ASID=OLTX)
      804    11086    4         THEN DO;
      805    11087    4            IF RCD~=FR_DP THEN RETURN;
      806    11088    4            IF DCB$->F$DCB.CSEED=0
      807    11089    4              OR DCB$->F$DCB.CSEED=FM$DEV.VSN(RA1$->RAT.DCTX)
      808    11090    4            THEN RETURN;
      809    11091    4            END;
      810    11092    3         RA1$=RA1$->RAT.LNK$;
      811    11093    3         END;
      812    11094    2      IF OLTX=0 THEN ALTRETURN;
      813    11095    2      OLTX=0;
      814    11096    2      GOTO SRSER0;
      815    11097    2   END;
      816    11098           /**/
      817    11099           /**/
      818    11100    1   SLIDE: PROC ALTRET;
      819    11101    2      IF RA1$->RAT.FLG.MBIT.MTD
      820    11102    2        OR RA1$->RAT.FLG.DOWN
      821    11103    2        OR RA1$->RAT.RES.RFLG.NOSLD
      822    11104    2        OR RAT.RES.RFLG.NOSLD
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:24   
      823    11105    2        OR RAT.RES.M2&~RA1$->RAT.M1 THEN ALTRETURN;
      824    11106    3      IF RA1$->RAT.RES.M2&~RAT.M1 OR RA1$->RAT.FLG.MBIT.SOL THEN DO;
      825    11107    3         RA2$=FR$HD$(RCD);
      826    11108    4         DO WHILE (RA2$~=ADDR(NIL));
      827    11109    4            IF RA2$->RAT.FLG='0'B
      828    11110    4              AND RA2$->RAT.RES.SISID=0
      829    11111    4              AND RA2$->RAT.RES.RFLG.NOSLD='0'B
      830    11112    5              AND (RA1$->RAT.RES.M2&~RA2$->RAT.M1)='0'B THEN DO;
      831    11113    5               TRES=RA1$->RAT.RES;
      832    11114    5               RA1$->RAT.RES=RA2$->RAT.RES;
      833    11115    5               RA2$->RAT.RES=TRES;
      834    11116    5               GOTO SLGO;
      835    11117    5               END;
      836    11118    4            RA2$=RA2$->RAT.LNK$;
      837    11119    4            END;
      838    11120    3         ALTRETURN;
      839    11121    3         END;
      840    11122    2   SLGO: ;
      841    11123    3      IF RA1$->RAT.FLG.MBIT.SOL THEN DO;
      842    11124    3         RA1$->RAT.FLG.MBIT.SOL='0'B;
      843    11125    3         CALL SSR$RUE (%SS_WU,RA1$->RAT.SOLU);
      844    11126    3         END;
      845    11127    2   SLIDEGO: ENTRY ALTRET;
      846    11128    3      DO INHIBIT;
      847    11129    3         TRES=RAT.RES;
      848    11130    3         RAT.RES=RA1$->RAT.RES;
      849    11131    3         RA1$->RAT.RES=TRES;
      850    11132    3         RAT$=RA1$;
      851    11133    3         RETURN;
      852    11134    3         END;
      853    11135    2   END;
      854    11136           /**/
      855    11137           /**/
      856    11138    1   END;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:25   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   NK_SUBS.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   FR_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL$TABLES.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FRX$OPR.

   Procedure FRX$OPR requires 1391 words for executable code.
   Procedure FRX$OPR requires 86 words of local(AUTO) storage.

    No errors detected in file FRX$OPR.:E05TSI    .

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:26   

 Object Unit name= FRX$OPR                                    File name= FRX$OPR.:E05TOU
 UTS= JUL 29 '97 17:24:53.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     47     57  FRX$OPR
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none  1391   2557  FRX$OPR
    3  RoData even  none    32     40  FRX$OPR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  FRX$OPR
     2      3          yes     yes      Std        3  FRX$CGCON
     2    124          yes     yes      Std        0  FRX$COPN
     2    132          yes     yes      Std        0  FRX$OPN
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:27   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SSS$SYSTIME
         yes           Std       1 FRS$RESADD
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       1 M$MWRITE
 yes     yes           Std       4 KCO$TRMCONGOTCG
 yes     yes           Std       1 KCO$TRMGO
         yes           Std       0 FRB$CCLS
         yes           Std       7 OCI$MK_WR
         yes           Std       2 FRZ$RRES
         yes           Std       0 SSS$BLOCK
         yes           Std       0 FRS$CLSTRS
 yes     yes           Std       6 ELA$SYSLOG
         yes           Std       0 FRS$OPSTRS
         yes           Std       1 FRZ$DSMT
 yes     yes           Std       2 FPM$MNTOD
 yes     yes           Std       5 FRZ$GETRES
         yes           Std       4 SSR$RUE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                S_CUN                                 S$CU$
     M$UC                                  FR$HD$                                FR_MMSGL
     FR_AVRCNT                             N$DCT$$                               FM$SET$
     B_VECTNIL
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:28   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:29   


        1        1        /*M* FRX$OPR Attach DCB to appropriate resource during open*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*NSO,MCL=0,MOC,MEC,CLM=3,EXM=3,CRT=6,DMR,PLM=3,IND=3,ENU=0,DCI=3,
        8        8        CSU=3,ECU=3,THI=0,DTI=0,CRM=86 */
        9        9        FRX$OPR: PROC (CGTYPE,CGATTR,CG) ALTRET;

      9  2 000000   000000 700200 xent  FRX$OPR      TSX0  ! X66_AUTO_3
         2 000001   000126 000003                    ZERO    86,3
         2 000002   000005 710000 2                  TRA     s:10485

       10       10           /**/
       11       11           /**/
       12       12    1   DCL CGTYPE CHAR(4);
       13       13    1   DCL CGATTR BIT(18) ALIGNED;
       14       14    1   DCL CG CHAR(20);
       15       15    1   DCL LDCT$ PTR;
       16       16    1   DCL RAT$ PTR;
       17       17    1   DCL RA1$ PTR;
       18       18    1   DCL RA2$ PTR;
       19       19    1   DCL DCB$ PTR;
       20       20    1   DCL RTYP CHAR(2);
       21       21    1   DCL RNUM CHAR(2);
       22       22    1   DCL RCD SBIN ;
       23       23    1   DCL SID UBIN WORD;
       24       24    1   DCL CCSE UBIN WORD;
       25       25    1   DCL M4 BIT(36) ALIGNED;
       26       26    1   DCL TDCT UBIN WORD;
       27       27    1   DCL M5 BIT(36) ALIGNED;
       28       28    1   DCL DEVC BIT(36) ALIGNED;
       29       29    1   DCL MODE UBIN WORD;
       30       30    1   DCL ANNCE SBIN WORD;
       31       31    1   DCL AVRCNT UBIN WORD;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:30   
       32       32    1   DCL OLTX UBIN WORD;
       33       33    1   DCL 1 TRES ALIGNED,
       34       34    1         2 * (0:2) UBIN WORD;
       35       35    1   DCL ATTR BIT(36) ALIGNED;
       36       36    1   DCL 1 FR_KMSG ALIGNED,
       37       37    1         2 SER# CHAR(6) UNAL,
       38       38    1         2 ACCT CHAR(8) UNAL,
       39       39    1         2 FRM BIT(1) UNAL,
       40       40    1         2 ASN UBIN(8) UNAL,
       41       41    1         2 FUN UBIN(9)UNAL,
       42       42    1         2 VSN UBIN,
       43       43    1         2 DENS UBIN(9) UNAL;
       44       44    1   DCL RESTRT REMEMBER;
       45       45    1   DCL OCI$MK_WR ENTRY(7);
       46       46    1   DCL SSR$REG ENTRY(3) ALTRET;
       47       47    1   DCL SSR$RUE ENTRY(4);
       48       48    1   DCL FPM$MNTOD ENTRY(2) ALTRET;
       49       49    1   DCL FRZ$DSMT ENTRY(1);
       50       50    1   DCL FRZ$GETRES ENTRY(5) ALTRET;
       51       51    1   DCL FRZ$RRES ENTRY(2);
       52       52    1   DCL FRS$OPSTRS ENTRY;
       53       53    1   DCL FRS$RESADD ENTRY(1);
       54       54    1   DCL FRS$CLSTRS ENTRY;
       55       55    1   DCL ELA$SYSLOG ENTRY(6) ALTRET;
       56       56    1   DCL FRB$CCLS ENTRY;
       57       57    1   DCL SSS$BLOCK ENTRY;
       58       58    1   DCL KCO$TRMCONGOTCG ENTRY(4) ALTRET;
       59       59    1   DCL KCO$TRMGO ENTRY(1) ALTRET;
       60       60    1   DCL SSS$SYSTIME ENTRY(1);
       61       61    1   DCL M$MWRITE ENTRY(1) ALTRET;
       62       62    1   DCL B$JIT$ PTR SYMREF;
       63       63    1   DCL S_CUN UBIN(36) SYMREF;
       64       64           /**/
       65       65           /**/
       66       66        %INCLUDE B_ERRORS_C;
       67     1193        %INCLUDE UD_SEV_C;
       68     1207           /**/
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:31   
       69     1208    1   DCL 1 WRNGTPE CONSTANT ALIGNED,
       70     1209    1         2 FCG BIT(18) UNAL INIT('062201'O),
       71     1210    1         2 ERR UBIN(15) UNAL INIT(%E$BADSER),
       72     1211    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       73     1212    1   DCL 1 DUPREEL CONSTANT ALIGNED,
       74     1213    1         2 FCG BIT(18) UNAL INIT('062201'O),
       75     1214    1         2 ERR UBIN(15) UNAL INIT(%E$DUPREEL),
       76     1215    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       77     1216    1   DCL 1 NOSHR CONSTANT ALIGNED,
       78     1217    1         2 FCG BIT(18) UNAL INIT('062201'O),
       79     1218    1         2 ERR UBIN(15) UNAL INIT(%E$REOPN),
       80     1219    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       81     1220    1   DCL 1 NOMO CONSTANT ALIGNED,
       82     1221    1         2 FCG BIT(18) UNAL INIT('062201'O),
       83     1222    1         2 ERR UBIN(15) UNAL INIT(%E$NORES),
       84     1223    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       85     1224    1   DCL 1 BADLPCL CONSTANT ALIGNED,
       86     1225    1         2 FCG BIT(18) UNAL INIT('062201'O),
       87     1226    1         2 ERR UBIN(15) UNAL INIT(%E$BADRES),
       88     1227    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       89     1228    1   DCL 1 NODPYT CONSTANT ALIGNED,
       90     1229    1         2 FCG BIT(18) UNAL INIT('062201'O),
       91     1230    1         2 ERR UBIN(15) UNAL INIT(%E$NODP),
       92     1231    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       93     1232    1   DCL 1 BRKMNT CONSTANT ALIGNED,
       94     1233    1         2 FCG BIT(18) UNAL INIT('062201'O),
       95     1234    1         2 ERR UBIN(15) UNAL INIT(%E$MNTBRK),
       96     1235    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
       97     1236    1   DCL 1 CANT CONSTANT ALIGNED,
       98     1237    1         2 FCG BIT(18) UNAL INIT('062201'O),
       99     1238    1         2 ERR UBIN(15) UNAL INIT(%E$CANT),
      100     1239    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      101     1240    1   DCL 1 BDATTR CONSTANT ALIGNED,
      102     1241    1         2 FCG BIT(18) UNAL INIT('062201'O),
      103     1242    1         2 ERR UBIN(15) UNAL INIT(%E$BDATTR),
      104     1243    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      105     1244    1   DCL 1 NORSNN CONSTANT ALIGNED,
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:32   
      106     1245    1         2 FCG BIT(18) UNAL INIT('062201'O),
      107     1246    1         2 ERR UBIN(15) UNAL INIT(%E$NORSNN),
      108     1247    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      109     1248    1   DCL 1 LDSC CONSTANT ALIGNED,
      110     1249    1         2 FCG BIT(18) UNAL INIT('062201'O),
      111     1250    1         2 ERR UBIN(15) UNAL INIT(%E$LDSC),
      112     1251    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      113     1252    1   DCL 1 NORSS CONSTANT ALIGNED,
      114     1253    1         2 FCG BIT(18) UNAL INIT('062201'O),
      115     1254    1         2 ERR UBIN(15) UNAL INIT(%E$NORSS),
      116     1255    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      117     1256    1   DCL 1 NCGAU CONSTANT ALIGNED,
      118     1257    1         2 FCG BIT(18) UNAL INIT('062201'O),
      119     1258    1         2 ERR UBIN(15) UNAL INIT(%E$NCGAU),
      120     1259    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      121     1260    1   DCL 1 NOTAU CONSTANT ALIGNED,
      122     1261    1         2 FCG BIT(18) UNAL INIT('062201'O),
      123     1262    1         2 ERR UBIN(15) UNAL INIT(%E$NOTAU),
      124     1263    1         2 SEV UBIN(3) UNAL INIT(SEV_ERROR#);
      125     1264           /**/
      126     1265           /**/
      127     1266        %INCLUDE B$USER;
      128     1482        %B$USERREFS;
      129     1486        %INCLUDE CP_6;
      130     7045        %INCLUDE NK_VFC_C;
      131     7119        %INCLUDE NK$LDCT;
      132     7221        %INCLUDE FR$RAT;
      133     7274        %FR$RAT (NAME=RAT,STCLASS="BASED(RAT$)");
      134     7314        %INCLUDE EL$TABLES;
      135     7637        %INCLUDE FR_DATA_R;
      136     7669        %INCLUDE F$DCB;
      137     7718        %INCLUDE B$JIT_C;
      138     8032        %B$JIT0;
      139     8121        %U$JIT1X;
      140     8124        %M$JIT2X;
      141     8127        %F$JIT3;
      142     8132        %S$JIT4X;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:33   
      143     8135        %J$JIT5X;
      144     8138        %A$JIT6;
      145     8148        %INCLUDE SS_SCHED_C;
      146     8381        %INCLUDE NK_LDCT_R;
      147     8390        %INCLUDE EL_SUBS_C;
      148     8474        %INCLUDE NK_SUBS;
      149     8499        %INCLUDE FR_SUBS;
      150     8567        %INCLUDE CP_6_SUBS;
      151     9107        %INCLUDE FM$MACROS;
      152     9482        %INCLUDE JG_GHOSTS_C;
      153     9572        %FM$DEV(BASED="BASED(FM$SET$)");
      154     9578    1   DCL FM$SET$ PTR SYMREF;
      155     9579        %INCLUDE OC_SUBS_C;
      156    10310        %NK$LDCT;
      157    10356        %EL$MTDMT (NAME=LMNT,STCLASS="");
      158    10359        %FPT_WRITE (FPTN=CANCE,STCLASS=CONSTANT,DCB=M$UC,VFC=YES);
      159    10390        %FPT_WRITE (FPTN=AANCE,STCLASS=AUTO);
      160    10421    1   DCL AUACCT CHAR(8) DALIGNED;
      161    10422    1   DCL 1 CBUF CONSTANT ALIGNED,
      162    10423    1         2 PREF,
      163    10424    1           3 VFC CHAR(1) UNAL INIT(%VFC_TRANSITION1),
      164    10425    1           3 DOTS CHAR(3) UNAL INIT('...'),
      165    10426    1         2 FXD CHAR(9) UNAL INIT('MOUNTing '),
      166    10427    1         2 YY CHAR(2) UNAL INIT('LT'),
      167    10428    1         2 CRNCH CHAR(1) UNAL INIT('#'),
      168    10429    1         2 VOL CHAR(6) UNAL INIT('VOLUME'),
      169    10430    1         2 FXD1 CHAR(11) UNAL INIT(' is MOUNTed');
      170    10431    1   DCL 1 ABUF ALIGNED,
      171    10432    1         2 MTNG,
      172    10433    1           3 * CHAR(13) UNAL,
      173    10434    1           3 YY CHAR(2) UNAL,
      174    10435    1           3 * CHAR(1) UNAL,
      175    10436    1           3 VOL CHAR(6) UNAL,
      176    10437    1         2 * CHAR(11) UNAL;
      177    10438    1   DCL 1 ABUFR REDEF ABUF ALIGNED,
      178    10439    1         2 * CHAR(9) UNAL,
      179    10440    1         2 MNTD,
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:34   
      180    10441    1           3 PREF,
      181    10442    1             4 * CHAR(4) UNAL,
      182    10443    1           3 YYVL CHAR(9) UNAL,
      183    10444    1           3 * CHAR(11) UNAL;
      184    10445        %B$CGAUCI (FPTN=CGINFO,STCLASS=AUTO);
      185    10467           /**/
      186    10468           /**/
      187    10469        %SUB MTNNSR=4 /*MT01/SER*/;
      188    10470        %SUB MTNNSC=5 /*MT01/   */;
      189    10471        %SUB MT__SR=6 /*MT/SER*/;
      190    10472        %SUB MT__SC=7 /*MT/ */;
      191    10473        %SUB LPNN="8,9 /*LP01*/";
      192    10474        %SUB LP__="10,11 /*LP  */";
      193    10475        %SUB DP__="2 /*DP */";
      194    10476        %SUB DPNN="0 /*DP */";
      195    10477        %SUB ODNNSR=12 /* OD01/SER */;
      196    10478        %SUB OD__SR=14 /* OD/SER */;
      197    10479        %SUB CL__SR=16 /*CLxxSER */;
      198    10480        %SUB CL__SC=17 /*CLxx */;
      199    10481           /**/
      200    10482           /**/
      201    10483        %EJECT;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:35   
      202    10484    1   FRX$CGCON: ENTRY (CGTYPE,CGATTR,CG) ALTRET;

  10484  2 000003   000000 700200 xent  FRX$CGCON    TSX0  ! X66_AUTO_3
         2 000004   000126 000003                    ZERO    86,3

      203    10485    1      RTYP = SUBSTR(CGTYPE,0,2);

  10485  2 000005   200003 470500                    LDP0    @CGTYPE,,AUTO
         2 000006   040100 100500                    MLR     fill='040'O
         2 000007   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         2 000010   200013 000002                    ADSC9   RTYP,,AUTO               cn=0,n=2

      204    10486    1      RNUM = SUBSTR(CGTYPE,2,2);

  10486  2 000011   040100 100500                    MLR     fill='040'O
         2 000012   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000013   200014 000002                    ADSC9   RNUM,,AUTO               cn=0,n=2

      205    10487    1      ATTR = CGATTR;

  10487  2 000014   200004 471500                    LDP1    @CGATTR,,AUTO
         2 000015   100000 236100                    LDQ     0,,PR1
         2 000016   777777 376003                    ANQ     -1,DU
         2 000017   200033 756100                    STQ     ATTR,,AUTO

      206    10488    1      RCD = FR_NPOOL;

  10488  2 000020   000002 235007                    LDA     2,DL
         2 000021   200015 755100                    STA     RCD,,AUTO

      207    10489    1      CALL GETDN

  10489  2 000022   002051 701000 2                  TSX1    GETDN
         2 000023   000025 702000 2                  TSX2    s:10491
         2 000024   000026 710000 2                  TRA     s:10493

      208    10490    2      WHENALTRETURN DO;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:36   

      209    10491    2         ALTRETURN;

  10491  2 000025   000000 702200 xent               TSX2  ! X66_AALT

      210    10492    2         END;
      211    10493    1      CGINFO.WIDTH = 0;

  10493  2 000026   000000 220003                    LDX0    0,DU
         2 000027   200103 740100                    STX0    CGINFO,,AUTO

      212    10494    1      CGINFO.LENGTH = 0;

  10494  2 000030   200103 440100                    SXL0    CGINFO,,AUTO

      213    10495    1      CGINFO.WHO.ACCT = ' ';

  10495  2 000031   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000032   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000033   200106 757100                    STAQ    CGINFO+3,,AUTO

      214    10496    1      CGINFO.WHO.NAME = ' ';

  10496  2 000034   040100 100400                    MLR     fill='040'O
         2 000035   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000036   200110 000014                    ADSC9   CGINFO+5,,AUTO           cn=0,n=12

      215    10497    1      LDCT$ = NK$LDCT$(RAT.DCTX);

  10497  2 000037   200007 470500                    LDP0    RAT$,,AUTO
         2 000040   000003 721100                    LXL1    3,,PR0
         2 000041   000000 471400 xsym               LDP1    N$DCT$$
         2 000042   100000 236111                    LDQ     0,X1,PR1
         2 000043   200006 756100                    STQ     LDCT$,,AUTO

      216    10498    1      CGINFO.FLG.INPUT = LDCT$->NK$LDCT.DFLG.INPUT;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:37   
  10498  2 000044   200006 473500                    LDP3    LDCT$,,AUTO
         2 000045   300006 236100                    LDQ     6,,PR3
         2 000046   000022 736000                    QLS     18
         2 000047   200113 676100                    ERQ     CGINFO+8,,AUTO
         2 000050   400000 376003                    ANQ     -131072,DU
         2 000051   200113 656100                    ERSQ    CGINFO+8,,AUTO

      217    10499    1      CGINFO.FLG.OUTPUT = LDCT$->NK$LDCT.DFLG.OUTPUT;

  10499  2 000052   300006 236100                    LDQ     6,,PR3
         2 000053   000022 736000                    QLS     18
         2 000054   200113 676100                    ERQ     CGINFO+8,,AUTO
         2 000055   200000 376003                    ANQ     65536,DU
         2 000056   200113 656100                    ERSQ    CGINFO+8,,AUTO

      218    10500    1      CGINFO.ATTR = RAT.RES.M2;

  10500  2 000057   000002 236100                    LDQ     2,,PR0
         2 000060   000011 772000                    QRL     9
         2 000061   200113 552130                    STBQ    CGINFO+8,'30'O,AUTO

      219    10501    1      CGINFO.NWINFO = 0;

  10501  2 000062   000000 236003                    LDQ     0,DU
         2 000063   200113 552104                    STBQ    CGINFO+8,'04'O,AUTO

      220    10502    1      CALL KCO$TRMCONGOTCG(LDCT$,CG,CGINFO,MODE)

  10502  2 000064   200024 634500                    EPPR4   MODE,,AUTO
         2 000065   200123 454500                    STP4    CGINFO+16,,AUTO
         2 000066   200103 635500                    EPPR5   CGINFO,,AUTO
         2 000067   200122 455500                    STP5    CGINFO+15,,AUTO
         2 000070   200005 236100                    LDQ     @CG,,AUTO
         2 000071   200121 756100                    STQ     CGINFO+14,,AUTO
         2 000072   200006 636500                    EPPR6   LDCT$,,AUTO
         2 000073   200120 456500                    STP6    CGINFO+13,,AUTO
         2 000074   200120 630500                    EPPR0   CGINFO+13,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:38   
         2 000075   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000076   000000 701000 xent               TSX1    KCO$TRMCONGOTCG
         2 000077   000101 702000 2                  TSX2    s:10504
         2 000100   000112 710000 2                  TRA     s:10508

      221    10503    2      WHENALTRETURN DO;

      222    10504    2         B$JIT.ERR = NOMO;

  10504  2 000101   000003 236000 0                  LDQ     NOMO
         2 000102   000000 470400 xsym               LDP0    B$JIT$
         2 000103   000012 756100                    STQ     10,,PR0

      223    10505    2         B$JIT.ERR.CODE = MODE;

  10505  2 000104   200024 236100                    LDQ     MODE,,AUTO
         2 000105   000003 736000                    QLS     3
         2 000106   000012 676100                    ERQ     10,,PR0
         2 000107   377770 376007                    ANQ     131064,DL
         2 000110   000012 656100                    ERSQ    10,,PR0

      224    10506    2         ALTRETURN;

  10506  2 000111   000000 702200 xent               TSX2  ! X66_AALT

      225    10507    2         END;
      226    10508    1      CALL KCO$TRMGO(LDCT$);

  10508  2 000112   200006 630500                    EPPR0   LDCT$,,AUTO
         2 000113   200120 450500                    STP0    CGINFO+13,,AUTO
         2 000114   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 000115   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000116   000000 701000 xent               TSX1    KCO$TRMGO
         2 000117   000000 011000                    NOP     0

      227    10509    1      RAT.FLG.OPN = '1'B;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:39   
  10509  2 000120   200007 470500                    LDP0    RAT$,,AUTO
         2 000121   000020 236007                    LDQ     16,DL
         2 000122   000010 256100                    ORSQ    8,,PR0

      228    10510    1      RETURN;

  10510  2 000123   000000 702200 xent               TSX2  ! X66_ARET

      229    10511
      230    10512        %EJECT;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:40   
      231    10513    1   FRX$COPN: ENTRY ALTRET ;

  10513  2 000124   000000 700200 xent  FRX$COPN     TSX0  ! X66_AUTO_3
         2 000125   000126 000003                    ZERO    86,3

      232    10514    1      CALL FRB$CCLS;

  10514  2 000126   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000127   000000 701000 xent               TSX1    FRB$CCLS
         2 000130   000000 011000                    NOP     0
         2 000131   000134 710000 2                  TRA     s:10518

      233    10515           /**/
      234    10516    1   FRX$OPN: ENTRY ALTRET;

  10516  2 000132   000000 700200 xent  FRX$OPN      TSX0  ! X66_AUTO_3
         2 000133   000126 000003                    ZERO    86,3

      235    10517           /**/
      236    10518    1      CALL SSS$SYSTIME( LMNT.REQ_UTS );

  10518  2 000134   200052 630500                    EPPR0   LMNT+6,,AUTO
         2 000135   200120 450500                    STP0    CGINFO+13,,AUTO
         2 000136   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 000137   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000140   000000 701000 xent               TSX1    SSS$SYSTIME
         2 000141   000000 011000                    NOP     0

      237    10519    1      REMEMBER REOPN IN RESTRT;

  10519  2 000142   000272 635000 2                  EAA     REOPN
         2 000143   200042 452500                    STP2    RESTRT,,AUTO
         2 000144   200043 755100                    STA     RESTRT+1,,AUTO

      238    10520    1      CALL SSS$BLOCK;

  10520  2 000145   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:41   
         2 000146   000000 701000 xent               TSX1    SSS$BLOCK
         2 000147   000000 011000                    NOP     0

      239    10521    1      DCB$=B$JIT$->B$JIT.DCB$;

  10521  2 000150   000000 470400 xsym               LDP0    B$JIT$
         2 000151   000232 236100                    LDQ     154,,PR0
         2 000152   200012 756100                    STQ     DCB$,,AUTO

      240    10522    1      DCB$->F$DCB.SETX=0;

  10522  2 000153   000000 220003                    LDX0    0,DU
         2 000154   200012 471500                    LDP1    DCB$,,AUTO
         2 000155   100051 440100                    SXL0    41,,PR1

      241    10523    1      RTYP=DCB$->F$DCB.RESNT.TYP;

  10523  2 000156   100026 221100                    LDX1    22,,PR1
         2 000157   200013 741100                    STX1    RTYP,,AUTO

      242    10524    1      RNUM=DCB$->F$DCB.RESNT.NUM;

  10524  2 000160   100026 722100                    LXL2    22,,PR1
         2 000161   200014 742100                    STX2    RNUM,,AUTO

      243    10525    1      SID=B$JIT$->B$JIT.SYSID;

  10525  2 000162   000000 236100                    LDQ     0,,PR0
         2 000163   777777 376007                    ANQ     -1,DL
         2 000164   200016 756100                    STQ     SID,,AUTO

      244    10526    1      MODE=B$JIT$->B$JIT.MODE;

  10526  2 000165   000000 236100                    LDQ     0,,PR0
         2 000166   000040 772000                    QRL     32
         2 000167   200024 756100                    STQ     MODE,,AUTO

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:42   
      245    10527    1      ATTR=DCB$->F$DCB.ATTR;

  10527  2 000170   100040 236100                    LDQ     32,,PR1
         2 000171   000022 736000                    QLS     18
         2 000172   200033 756100                    STQ     ATTR,,AUTO

      246    10528    1      RCD=FR_NPOOL;

  10528  2 000173   000002 235007                    LDA     2,DL
         2 000174   200015 755100                    STA     RCD,,AUTO

      247    10529    1      IF RTYP='DP' THEN RCD=FR_DP;

  10529  2 000175   000043 101000 0                  CMPX1   CBUF+9
         2 000176   000200 601000 2                  TNZ     s:10530

  10529  2 000177   200015 450100                    STZ     RCD,,AUTO

      248    10530    2      IF RTYP='LT' OR RTYP='MT' OR RTYP='FT' THEN DO;

  10530  2 000200   000044 101000 0                  CMPX1   CBUF+10
         2 000201   000206 600000 2                  TZE     s:10531
         2 000202   000045 101000 0                  CMPX1   CBUF+11
         2 000203   000206 600000 2                  TZE     s:10531
         2 000204   000046 101000 0                  CMPX1   CBUF+12
         2 000205   000212 601000 2                  TNZ     s:10534

      249    10531    2         RCD=FR_MT;

  10531  2 000206   000001 235007                    LDA     1,DL
         2 000207   200015 755100                    STA     RCD,,AUTO

      250    10532    2         RTYP='MT';

  10532  2 000210   000045 223000 0                  LDX3    CBUF+11
         2 000211   200013 743100                    STX3    RTYP,,AUTO

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:43   
      251    10533    2         END;

      252    10534    1      CCSE=RCD*4;

  10534  2 000212   200015 235100                    LDA     RCD,,AUTO
         2 000213   000002 735000                    ALS     2
         2 000214   200017 755100                    STA     CCSE,,AUTO

      253    10535    1      IF RTYP='OD' THEN CCSE=ODNNSR;

  10535  2 000215   200013 221100                    LDX1    RTYP,,AUTO
         2 000216   000047 101000 0                  CMPX1   CBUF+13
         2 000217   000222 601000 2                  TNZ     s:10536

  10535  2 000220   000014 235007                    LDA     12,DL
         2 000221   200017 755100                    STA     CCSE,,AUTO

      254    10536    2      IF RTYP='CL' THEN DO;

  10536  2 000222   000050 101000 0                  CMPX1   CBUF+14
         2 000223   000234 601000 2                  TNZ     s:10541

      255    10537    2         CCSE=CL__SR-2;

  10537  2 000224   000016 235007                    LDA     14,DL
         2 000225   200017 755100                    STA     CCSE,,AUTO

      256    10538    2         RNUM=' ';

  10538  2 000226   040040 223003                    LDX3    16416,DU
         2 000227   200014 743100                    STX3    RNUM,,AUTO

      257    10539    2         IF NOT ATTR THEN ATTR='777777'O; /* There's no default for CL */

  10539  2 000230   000000 116003                    CMPQ    0,DU
         2 000231   000234 601000 2                  TNZ     s:10541

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:44   
  10539  2 000232   777777 236003                    LDQ     -1,DU
         2 000233   200033 756100                    STQ     ATTR,,AUTO

      258    10540    2         END;

      259    10541    1      IF DCB$->F$DCB.PSN<=' ' THEN CCSE=CCSE+1;

  10541  2 000234   040100 106400                    CMPC    fill='040'O
         2 000235   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000236   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 000237   000242 602000 2                  TNC     s:10542

  10541  2 000240   000001 035007                    ADLA    1,DL
         2 000241   200017 755100                    STA     CCSE,,AUTO

      260    10542    1      IF (RNUM=' ') THEN CCSE=CCSE+2;

  10542  2 000242   200014 222100                    LDX2    RNUM,,AUTO
         2 000243   040040 102003                    CMPX2   16416,DU
         2 000244   000250 601000 2                  TNZ     s:10544

  10542  2 000245   000002 035007                    ADLA    2,DL
         2 000246   200017 755100                    STA     CCSE,,AUTO
         2 000247   000256 710000 2                  TRA     s:10546

      261    10543    2      ELSE DO;

      262    10544    2         IF RNUM<='00' OR RNUM>'99' THEN GOTO BDNUM;

  10544  2 000250   000051 223000 0                  LDX3    CBUF+15
         2 000251   200014 103100                    CMPX3   RNUM,,AUTO
         2 000252   000543 603000 2                  TRC     BDNUM
         2 000253   000052 224000 0                  LDX4    CBUF+16
         2 000254   200014 104100                    CMPX4   RNUM,,AUTO
         2 000255   000543 602000 2                  TNC     BDNUM

      263    10545    2         END;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:45   

      264    10546    1      IF B$JIT.MODE=%M_INT# AND S$CU$->B$U.FLG.ANNCE THEN ANNCE=1;

  10546  2 000256   000000 236100                    LDQ     0,,PR0
         2 000257   740000 376003                    ANQ     -16384,DU
         2 000260   140000 116003                    CMPQ    49152,DU
         2 000261   000271 601000 2                  TNZ     s:10547
         2 000262   000000 473400 xsym               LDP3    S$CU$
         2 000263   300000 236100                    LDQ     0,,PR3
         2 000264   040000 316007                    CANQ    16384,DL
         2 000265   000271 600000 2                  TZE     s:10547

  10546  2 000266   000001 235007                    LDA     1,DL
         2 000267   200025 755100                    STA     ANNCE,,AUTO
         2 000270   000272 710000 2                  TRA     REOPN

      265    10547    1      ELSE ANNCE=0;

  10547  2 000271   200025 450100                    STZ     ANNCE,,AUTO

  10546  2 000272                       REOPN        null
      266    10548    1   REOPN: ;
      267    10549    1      AVRCNT=FR_AVRCNT;

  10549  2 000272   000000 235000 xsym               LDA     FR_AVRCNT
         2 000273   200026 755100                    STA     AVRCNT,,AUTO

      268    10550    2      DO CASE (CCSE);

  10550  2 000274   200017 236100                    LDQ     CCSE,,AUTO
         2 000275   000022 116007                    CMPQ    18,DL
         2 000276   000300 602006 2                  TNC     s:10550+4,QL
         2 000277   001073 710000 2                  TRA     s:10766
         2 000300   000413 710000 2                  TRA     s:10614
         2 000301   001073 710000 2                  TRA     s:10766
         2 000302   000413 710000 2                  TRA     s:10614
         2 000303   001073 710000 2                  TRA     s:10766
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:46   
         2 000304   000322 710000 2                  TRA     s:10552
         2 000305   000365 710000 2                  TRA     s:10605
         2 000306   000413 710000 2                  TRA     s:10614
         2 000307   000477 710000 2                  TRA     s:10656
         2 000310   000514 710000 2                  TRA     s:10664
         2 000311   000514 710000 2                  TRA     s:10664
         2 000312   000543 710000 2                  TRA     BDNUM
         2 000313   000543 710000 2                  TRA     BDNUM
         2 000314   000322 710000 2                  TRA     s:10552
         2 000315   001073 710000 2                  TRA     s:10766
         2 000316   000413 710000 2                  TRA     s:10614
         2 000317   001073 710000 2                  TRA     s:10766
         2 000320   000547 710000 2                  TRA     s:10690
         2 000321   000547 710000 2                  TRA     s:10690

      269    10551    2      CASE(MTNNSR,ODNNSR);

      270    10552    2         CALL GETDN ALTRET (ALTRT);

  10552  2 000322   002051 701000 2                  TSX1    GETDN
         2 000323   000361 702000 2                  TSX2    ALTRT

      271    10553    2         IF DCB$->F$DCB.PSN~=RAT.REEL.SER

  10553  2 000324   200012 470500                    LDP0    DCB$,,AUTO
         2 000325   200007 471500                    LDP1    RAT$,,AUTO
         2 000326   040100 106500                    CMPC    fill='040'O
         2 000327   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 000330   100004 400006                    ADSC9   4,,PR1                   cn=2,n=6
         2 000331   000341 601000 2                  TNZ     s:10555
         2 000332   100004 220100                    LDX0    4,,PR1
         2 000333   001077 600000 2                  TZE     CSEX
         2 000334   100004 236100                    LDQ     4,,PR1
         2 000335   000022 732000                    QRS     18
         2 000336   000341 604000 2                  TMI     s:10555
         2 000337   200016 116100                    CMPQ    SID,,AUTO
         2 000340   001077 600000 2                  TZE     CSEX
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:47   

      272    10554    3           OR (RAT.REEL.ASID~=0 AND RAT.REEL.ASID~=SID) THEN DO;

      273    10555    4            IF RAT.FLG.MBIT.MTD THEN DO;

  10555  2 000341   100010 236100                    LDQ     8,,PR1
         2 000342   000400 316007                    CANQ    256,DL
         2 000343   000350 600000 2                  TZE     s:10576

      274    10556    4   WTPE:       ;

  10556  2 000344                       WTPE         null
      275    10557    4               B$JIT$->B$JIT.ERR=WRNGTPE;

  10557  2 000344   000000 236000 0                  LDQ     WRNGTPE
         2 000345   000000 470400 xsym               LDP0    B$JIT$
         2 000346   000012 756100                    STQ     10,,PR0

      276    10558           /*E*  ERROR:         FRA-E$BADSER-E
      277    10559                  MESSAGE: Serial number% %SN% does not match what's mounted.
      278    10560                 MESSAGE1: You've specified both a serial number and a virtual
      279    10561                           drive on which to use it%( %UF)%.
      280    10562                           There is currently a different serial number mounted
      281    10563                           by you on that drive.
      282    10564                 MESSAGE2: It is possible to open to resources by generic type
      283    10565                           (MT) or specific virtual drive (MT01).  The virtual
      284    10566                           drive was defined by you on a !RES or !ORES command.
      285    10567                           Now you've specified both a serial number AND the
      286    10568                           virtual drive% (%UF)%, but you already have
      287    10569                           something else mounted there.  REMOVE the current
      288    10570                           serial number, use a different virtual drive, or
      289    10571                           ask for the drive generically (MT#ABCD not MT01#ABCD.
      290    10572                 DESCRIPTION:   The user said something like:
      291    10573                                C MT01#ABCD/XX TO MT01#WXYZ/BB                          */
      292    10574    4               ALTRETURN;

  10574  2 000347   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:48   

      293    10575    4               END;
      294    10576    3            CALL SRSER ALTRET (MOUNT);

  10576  2 000350   002333 701000 2                  TSX1    SRSER
         2 000351   001333 702000 2                  TSX2    MOUNT

      295    10577    4            IF RA1$->RAT.FLG.MBIT.MTD THEN DO;

  10577  2 000352   200010 470500                    LDP0    RA1$,,AUTO
         2 000353   000010 236100                    LDQ     8,,PR0
         2 000354   000400 316007                    CANQ    256,DL
         2 000355   000362 600000 2                  TZE     s:10602

  10557  2 000356                       DPRL         null
      296    10578    4   DPRL:       ;
      297    10579    4               B$JIT$->B$JIT.ERR=DUPREEL;

  10579  2 000356   000001 236000 0                  LDQ     DUPREEL
         2 000357   000000 470400 xsym               LDP0    B$JIT$
         2 000360   000012 756100                    STQ     10,,PR0

      298    10580           /*E*  ERROR:         FRA-E$DUPREEL-E
      299    10581                  MESSAGE: You're already using that serial number% (%SN)%.
      300    10582                 MESSAGE1: You've specified both a serial number and a virtual
      301    10583                           drive on which to use it%( %UF)%.
      302    10584                           You currently have that same serial number mounted
      303    10585                           on another virtual drive.  It is possible that this
      304    10586                           error occurred because you asked for the same tape
      305    10587                           but specified different densities for the drive.
      306    10588                 MESSAGE2: It is possible to open to resources by generic type
      307    10589                           (MT) or specific virtual drive (MT01).  The virtual
      308    10590                           drive was defined by you on a !RES or !ORES command.
      309    10591                           Now you've specified both a serial number AND the
      310    10592                           virtual drive% (%UF)%, but you already have
      311    10593                           the serial number mounted on another drive. REMOVE the
      312    10594                           serial number, use a different virtual drive, or
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:49   
      313    10595                           ask for the drive generically (MT#ABCD not MT01#ABCD).
      314    10596                 DESCRIPTION:   This has most often happened because of changes
      315    10597                                in the density at which a given tape reel was requested.
      316    10598                                The user could have said:
      317    10599                                C MT01#ABCD/XX TO MT02#ABCD/YY                          */
      318    10600    4   ALTRT:      ALTRETURN;

  10600  2 000361   000000 702200 xent  ALTRT        TSX2  ! X66_AALT

      319    10601    4               END;
      320    10602    3            CALL SLIDE ALTRET (DMMT);

  10602  2 000362   002410 701000 2                  TSX1    SLIDE
         2 000363   001327 702000 2                  TSX2    DMMT

      321    10603    3            END;

  10603  2 000364   001077 710000 2                  TRA     CSEX

      322    10604    2      CASE(MTNNSC);

      323    10605    2         CALL GETDN ALTRET (ALTRT);

  10605  2 000365   002051 701000 2                  TSX1    GETDN
         2 000366   000361 702000 2                  TSX2    ALTRT

      324    10606    3         IF RAT.FLG.MBIT~=%(MTDBIT|MTSCBIT) THEN DO;

  10606  2 000367   200007 470500                    LDP0    RAT$,,AUTO
         2 000370   000010 236100                    LDQ     8,,PR0
         2 000371   000700 376007                    ANQ     448,DL
         2 000372   000600 116007                    CMPQ    384,DL
         2 000373   001077 600000 2                  TZE     CSEX

      325    10607    3            IF RAT.FLG.MBIT.MTD THEN GOTO WTPE;

  10607  2 000374   000010 236100                    LDQ     8,,PR0
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:50   
         2 000375   000400 316007                    CANQ    256,DL
         2 000376   000344 601000 2                  TNZ     WTPE

  10607  2 000377                       SCRCOM       null
      326    10608    3   SCRCOM:  ;
      327    10609    4            IF NOT RAT.FLG.MBIT.MTSC OR RAT.REEL.ASID~=SID THEN DO;

  10609  2 000377   200007 470500                    LDP0    RAT$,,AUTO
         2 000400   000010 236100                    LDQ     8,,PR0
         2 000401   000200 316007                    CANQ    128,DL
         2 000402   000410 600000 2                  TZE     s:10610
         2 000403   000004 236100                    LDQ     4,,PR0
         2 000404   000022 732000                    QRS     18
         2 000405   000410 604000 2                  TMI     s:10610
         2 000406   200016 116100                    CMPQ    SID,,AUTO
         2 000407   001077 600000 2                  TZE     CSEX

      328    10610    4               CALL SRSCR ALTRET (MOUNT);

  10610  2 000410   002264 701000 2                  TSX1    SRSCR
         2 000411   001333 702000 2                  TSX2    MOUNT

      329    10611    4               END;

      330    10612    3            END;

  10612  2 000412   001077 710000 2                  TRA     CSEX

      331    10613    2      CASE(MT__SR,DP__,DPNN,OD__SR);

      332    10614    2         CALL SRSER ALTRET (LOMNT);

  10614  2 000413   002333 701000 2                  TSX1    SRSER
         2 000414   000454 702000 2                  TSX2    LOMNT

      333    10615    3         IF RA1$->RAT.FLG.MBIT.MTD THEN DO;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:51   
  10615  2 000415   200010 470500                    LDP0    RA1$,,AUTO
         2 000416   000010 236100                    LDQ     8,,PR0
         2 000417   000400 316007                    CANQ    256,DL
         2 000420   000437 600000 2                  TZE     s:10632

      334    10616    4            IF RA1$->RAT.FLG.OPN THEN DO;

  10616  2 000421   000020 316007                    CANQ    16,DL
         2 000422   000427 600000 2                  TZE     s:10628

  10611  2 000423                       TWODCB       null
      335    10617    4   TWODCB:     ;
      336    10618    4               B$JIT$->B$JIT.ERR=NOSHR;

  10618  2 000423   000002 236000 0                  LDQ     NOSHR
         2 000424   000000 471400 xsym               LDP1    B$JIT$
         2 000425   100012 756100                    STQ     10,,PR1

      337    10619           /*E*  ERROR:         FRA-E$REOPN-E
      338    10620                  MESSAGE: That resource% (%UF)% is already open!
      339    10621                 MESSAGE1: Only one DCB at a time may be open to a given resource.
      340    10622                           The resource you opened to% (%UF)% is already open.
      341    10623                 DESCRIPTION:   In this case the user asked for a tape by serial
      342    10624                                number and already had a DCB open to it.  like:
      343    10625                                C MT#ABCD/XX TO MT#ABCD/YY                              */
      344    10626    4               ALTRETURN;

  10626  2 000426   000000 702200 xent               TSX2  ! X66_AALT

      345    10627    4               END;
      346    10628    3            IF ATTR&~RA1$->RAT.RES.M2 THEN GOTO DPRL;

  10628  2 000427   000002 236100                    LDQ     2,,PR0
         2 000430   777777 376003                    ANQ     -1,DU
         2 000431   777777 676003                    ERQ     -1,DU
         2 000432   200033 376100                    ANQ     ATTR,,AUTO
         2 000433   000356 601000 2                  TNZ     DPRL
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:52   

      347    10629    3            RAT$=RA1$;

  10629  2 000434   200010 236100                    LDQ     RA1$,,AUTO
         2 000435   200007 756100                    STQ     RAT$,,AUTO

      348    10630    3            END;

  10630  2 000436   000447 710000 2                  TRA     s:10637

      349    10631    3         ELSE DO;

      350    10632    3            CALL GETLOW ALTRET (CSE6SLD);

  10632  2 000437   001711 701000 2                  TSX1    GETLOW
         2 000440   000442 702000 2                  TSX2    CSE6SLD

      351    10633    3            ALTRETURN;

  10633  2 000441   000000 702200 xent               TSX2  ! X66_AALT

  10632  2 000442                       CSE6SLD      null
      352    10634    3   CSE6SLD: ;
      353    10635    3            IF RAT$~=RA1$ THEN CALL SLIDE ALTRET (DMMTDP);

  10635  2 000442   200007 236100                    LDQ     RAT$,,AUTO
         2 000443   200010 116100                    CMPQ    RA1$,,AUTO
         2 000444   000447 600000 2                  TZE     s:10637

  10635  2 000445   002410 701000 2                  TSX1    SLIDE
         2 000446   001321 702000 2                  TSX2    DMMTDP

      354    10636    3            END;

      355    10637    2         GOTO CSEX;

  10637  2 000447   001077 710000 2                  TRA     CSEX
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:53   

  10628  2 000450                       NODPDN       null
      356    10638    2   NODPDN: ;
      357    10639    2         CCSE=DP__;

  10639  2 000450   000002 235007                    LDA     2,DL
         2 000451   200017 755100                    STA     CCSE,,AUTO

      358    10640    2         B$JIT.ERR='0'B;

  10640  2 000452   000000 470400 xsym               LDP0    B$JIT$
         2 000453   000012 450100                    STZ     10,,PR0

  10640  2 000454                       LOMNT        null
      359    10641    2   LOMNT: ;
      360    10642    3         IF CCSE=DPNN THEN DO;

  10642  2 000454   200017 235100                    LDA     CCSE,,AUTO
         2 000455   000461 601000 2                  TNZ     s:10646

      361    10643    3            CALL GETDN ALTRET (NODPDN);

  10643  2 000456   002051 701000 2                  TSX1    GETDN
         2 000457   000450 702000 2                  TSX2    NODPDN

      362    10644    3            GOTO MOUNT;

  10644  2 000460   001333 710000 2                  TRA     MOUNT

      363    10645    3            END;
      364    10646    2         CALL GETLOW ALTRET (MOUNT);

  10646  2 000461   001711 701000 2                  TSX1    GETLOW
         2 000462   001333 702000 2                  TSX2    MOUNT

      365    10647    2         M4=%(MTNNBIT|SOLBIT|OPNBIT);

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:54   
  10647  2 000463   160000 236003                    LDQ     57344,DU
         2 000464   200020 756100                    STQ     M4,,AUTO

      366    10648    2         CALL GETLOW1 ALTRET (DMMTMT);

  10648  2 000465   001716 701000 2                  TSX1    GETLOW1
         2 000466   000474 702000 2                  TSX2    DMMTMT

      367    10649    2         M4=%(SOLBIT|OPNBIT);

  10649  2 000467   120000 236003                    LDQ     40960,DU
         2 000470   200020 756100                    STQ     M4,,AUTO

      368    10650    2         CALL GETLOW1 ALTRET (DMMTMT);

  10650  2 000471   001716 701000 2                  TSX1    GETLOW1
         2 000472   000474 702000 2                  TSX2    DMMTMT

      369    10651    2         ALTRETURN;

  10651  2 000473   000000 702200 xent               TSX2  ! X66_AALT

  10649  2 000474                       DMMTMT       null
      370    10652    2   DMMTMT: ;
      371    10653    2         RA1$=RAT$;

  10653  2 000474   200007 236100                    LDQ     RAT$,,AUTO
         2 000475   200010 756100                    STQ     RA1$,,AUTO

      372    10654    2         GOTO DMMT;

  10654  2 000476   001327 710000 2                  TRA     DMMT

      373    10655    2      CASE(MT__SC);

      374    10656    2         M4=%(MTDBIT|MTSCBIT|MTNNBIT|SOLBIT|OPNBIT);

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:55   
  10656  2 000477   760000 236003                    LDQ     -8192,DU
         2 000500   200020 756100                    STQ     M4,,AUTO

      375    10657    2         M5=%(MTDBIT|MTSCBIT);

  10657  2 000501   600000 236003                    LDQ     -65536,DU
         2 000502   200022 756100                    STQ     M5,,AUTO

      376    10658    2         CALL GETLOW1 ALTRET (CSEX);

  10658  2 000503   001716 701000 2                  TSX1    GETLOW1
         2 000504   001077 702000 2                  TSX2    CSEX

      377    10659    2         CALL GETLOW ALTRET (SCRCOM);

  10659  2 000505   001711 701000 2                  TSX1    GETLOW
         2 000506   000377 702000 2                  TSX2    SCRCOM

      378    10660    2         M4=%(SOLBIT|OPNBIT);

  10660  2 000507   120000 236003                    LDQ     40960,DU
         2 000510   200020 756100                    STQ     M4,,AUTO

      379    10661    2         CALL GETLOW1 ALTRET(DMMTMT);

  10661  2 000511   001716 701000 2                  TSX1    GETLOW1
         2 000512   000474 702000 2                  TSX2    DMMTMT

      380    10662    2         ALTRETURN;

  10662  2 000513   000000 702200 xent               TSX2  ! X66_AALT

      381    10663    2      CASE(LPNN);

      382    10664    2         CALL GETDN ALTRET (ALTRT);

  10664  2 000514   002051 701000 2                  TSX1    GETDN
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:56   
         2 000515   000361 702000 2                  TSX2    ALTRT

      383    10665    2         IF RAT.RCOD=FR_FEPRES THEN EXIT;/* No forms for FEP resource */

  10665  2 000516   200007 470500                    LDP0    RAT$,,AUTO
         2 000517   000003 236100                    LDQ     3,,PR0
         2 000520   000740 376003                    ANQ     480,DU
         2 000521   000240 116003                    CMPQ    160,DU
         2 000522   001077 600000 2                  TZE     CSEX

      384    10666    3         IF DCB$->F$DCB.PSN~=RAT.REEL.SER OR NOT RAT.FLG.RUP THEN DO;

  10666  2 000523   200012 471500                    LDP1    DCB$,,AUTO
         2 000524   040100 106500                    CMPC    fill='040'O
         2 000525   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 000526   000004 400006                    ADSC9   4,,PR0                   cn=2,n=6
         2 000527   000533 601000 2                  TNZ     s:10667
         2 000530   000010 236100                    LDQ     8,,PR0
         2 000531   000004 316007                    CANQ    4,DL
         2 000532   001077 601000 2                  TNZ     CSEX

      385    10667    4            IF RAT.FLG.MBIT.MTD THEN DO;

  10667  2 000533   000010 236100                    LDQ     8,,PR0
         2 000534   000400 316007                    CANQ    256,DL
         2 000535   000542 600000 2                  TZE     s:10671

      386    10668    4               IF NOT RAT.FLG.FORM THEN GOTO WTPE;

  10668  2 000536   000010 316007                    CANQ    8,DL
         2 000537   000344 600000 2                  TZE     WTPE

      387    10669    4               RAT.FLG.MBIT.MTD='0'B;

  10669  2 000540   000000 236000 3                  LDQ     0
         2 000541   000010 356100                    ANSQ    8,,PR0

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:57   
      388    10670    4               END;

      389    10671    3            GOTO MNT2;

  10671  2 000542   001406 710000 2                  TRA     MNT2

      390    10672    3            END;
      391    10673    2      CASE(LP__);

  10667  2 000543                       BDNUM        null
      392    10674    2   BDNUM: ;
      393    10675    2         B$JIT$->B$JIT.ERR=BADLPCL;

  10675  2 000543   000004 236000 0                  LDQ     BADLPCL
         2 000544   000000 470400 xsym               LDP0    B$JIT$
         2 000545   000012 756100                    STQ     10,,PR0

      394    10676           /*E*  ERROR:         FRA-E$BADRES-E
      395    10677                  MESSAGE: The full resource name% for %UF% must be specified.
      396    10678                 MESSAGE1: Except for tape or disk resources% (%UF here)%, it is
      397    10679                           not legal to specify only the generic type (e.g. LP)
      398    10680                           of the resource.  The full virtual name as specified
      399    10681                           on the !RES or !ORES command (e.g. LP01) must be given
      400    10682                           as RES on the M$OPEN.  If you did not intend to open
      401    10683                           to a resource, check the list of legal oplabels in
      402    10684                           the reference manual.
      403    10685                 DESCRIPTION:   Probably the user did something like:
      404    10686                                C ME TO QQ#
      405    10687                                QQ is not an oplabel but the # says its a device        */
      406    10688    2         ALTRETURN;

  10688  2 000546   000000 702200 xent               TSX2  ! X66_AALT

      407    10689    2      CASE(CL__SR,CL__SC);

      408    10690    3         IF NOT B$JIT.CLRES THEN DO;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:58   
  10690  2 000547   000000 470400 xsym               LDP0    B$JIT$
         2 000550   000325 236100                    LDQ     213,,PR0
         2 000551   700000 316003                    CANQ    -32768,DU
         2 000552   000556 601000 2                  TNZ     s:10694

      409    10691    3            B$JIT.ERR=NOMO;

  10691  2 000553   000003 236000 0                  LDQ     NOMO
         2 000554   000012 756100                    STQ     10,,PR0

      410    10692    3            ALTRETURN;

  10692  2 000555   000000 702200 xent               TSX2  ! X66_AALT

      411    10693    3            END;
      412    10694    2         IF B$JIT.CLRES(2) THEN RNUM='00';

  10694  2 000556   100000 316003                    CANQ    32768,DU
         2 000557   000563 600000 2                  TZE     s:10695

  10694  2 000560   000051 220000 0                  LDX0    CBUF+15
         2 000561   200014 740100                    STX0    RNUM,,AUTO
         2 000562   000572 710000 2                  TRA     s:10698

      413    10695    2         ELSE IF B$JIT.CLRES(0) THEN RNUM='01';

  10695  2 000563   000325 234100                    SZN     213,,PR0
         2 000564   000570 605000 2                  TPL     s:10696

  10695  2 000565   000053 220000 0                  LDX0    CBUF+17
         2 000566   200014 740100                    STX0    RNUM,,AUTO
         2 000567   000572 710000 2                  TRA     s:10698

      414    10696    2            ELSE RNUM='02';

  10696  2 000570   000054 220000 0                  LDX0    CBUF+18
         2 000571   200014 740100                    STX0    RNUM,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:59   

      415    10697           /* Search for a candidate */
      416    10698    2         RAT$=FR$HD$(FR_NPOOL);

  10698  2 000572   000002 236000 xsym               LDQ     FR$HD$+2
         2 000573   200007 756100                    STQ     RAT$,,AUTO

      417    10699    3         DO INHIBIT; /* No moving targets, please */

      418    10700    4            DO WHILE '1'B;

      419    10701    5               IF RAT$=ADDR(NIL) THEN DO;

  10701  2 000574   200007 236300                    LDQ   ! RAT$,,AUTO
         2 000575   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         2 000576   000605 601200 2                  TNZ   ! s:10708

      420    10702    5                  IF NOT B$JIT.ERR THEN B$JIT.ERR=NORSS;

  10702  2 000577   000000 470600 xsym               LDP0  ! B$JIT$
         2 000600   000012 235300                    LDA   ! 10,,PR0
         2 000601   000604 601200 2                  TNZ   ! s:10706

  10702  2 000602   000013 236200 0                  LDQ   ! NORSS
         2 000603   000012 756300                    STQ   ! 10,,PR0

      421    10703           /*E* ERROR: FRA-E$NORSS
      422    10704                MESSAGE: All CL devices% for %DC% are busy or disconnected.
      423    10705           */
      424    10706    5                  ALTRETURN;

  10706  2 000604   000000 702200 xent               TSX2  ! X66_AALT

      425    10707    5                  END;
      426    10708    4               IF RTYP=RAT.TYP AND NOT ATTR&~RAT.M1 AND RAT.FLG.RUP

  10708  2 000605   200013 220300                    LDX0  ! RTYP,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:60   
         2 000606   200007 470700                    LDP0  ! RAT$,,AUTO
         2 000607   000010 100300                    CMPX0 ! 8,,PR0
         2 000610   000631 601200 2                  TNZ   ! CL_NXT
         2 000611   000006 236300                    LDQ   ! 6,,PR0
         2 000612   777777 376203                    ANQ   ! -1,DU
         2 000613   777777 676203                    ERQ   ! -1,DU
         2 000614   200033 376300                    ANQ   ! ATTR,,AUTO
         2 000615   000631 601200 2                  TNZ   ! CL_NXT
         2 000616   000010 236300                    LDQ   ! 8,,PR0
         2 000617   000004 316207                    CANQ  ! 4,DL
         2 000620   000631 600200 2                  TZE   ! CL_NXT
         2 000621   200017 235300                    LDA   ! CCSE,,AUTO
         2 000622   000021 115207                    CMPA  ! 17,DL
         2 000623   000635 600200 2                  TZE   ! s:10713
         2 000624   200012 471700                    LDP1  ! DCB$,,AUTO
         2 000625   040100 106700                    CMPC  ! fill='040'O
         2 000626   000004 400006                    ADSC9   4,,PR0                   cn=2,n=6
         2 000627   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 000630   000635 600200 2                  TZE   ! s:10713

      427    10709    4                 AND (CCSE=CL__SC OR RAT.REEL.SER=DCB$->F$DCB.PSN)
      428    10710    4               THEN EXIT;
      429    10711    4   CL_NXT:     RAT$=RAT.LNK$;

  10711  2 000631   200007 470700       CL_NXT       LDP0  ! RAT$,,AUTO
         2 000632   000000 236300                    LDQ   ! 0,,PR0
         2 000633   200007 756300                    STQ   ! RAT$,,AUTO

      430    10712    4               END;

  10712  2 000634   000574 710200 2                  TRA   ! s:10701

      431    10713    3            AUACCT=NK$LDCT$(RAT.DCTX)->NK$LDCT.LOGON_ACCT;

  10713  2 000635   000003 721300                    LXL1  ! 3,,PR0
         2 000636   000000 471600 xsym               LDP1  ! N$DCT$$
         2 000637   100000 473711                    LDP3  ! 0,X1,PR1
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:61   
         2 000640   300024 237300                    LDAQ  ! 20,,PR3
         2 000641   200070 757300                    STAQ  ! AUACCT,,AUTO

      432    10714    4            IF RAT.CLFLG.MULT THEN DO;

  10714  2 000642   000003 236300                    LDQ   ! 3,,PR0
         2 000643   000010 316203                    CANQ  ! 8,DU
         2 000644   000724 600200 2                  TZE   ! CL_RES

      433    10715    4               IF DCB$->F$DCB.AU /* the guy wants to own it */

  10715  2 000645   200012 474700                    LDP4  ! DCB$,,AUTO
         2 000646   400031 236300                    LDQ   ! 25,,PR4
         2 000647   200000 316203                    CANQ  ! 65536,DU
         2 000650   000655 600200 2                  TZE   ! s:10718

      434    10716    4               THEN IF RAT.CLFLG.AUCTL THEN GOTO CL_RES;

  10716  2 000651   000003 236300                    LDQ   ! 3,,PR0
         2 000652   000020 316203                    CANQ  ! 16,DU
         2 000653   000724 601200 2                  TNZ   ! CL_RES

      435    10717    4                  ELSE GOTO CL_NXT;

  10717  2 000654   000631 710200 2                  TRA   ! CL_NXT

      436    10718    4               IF RAT.CLFLG.AUCTL AND RAT.RES.SISID=0

  10718  2 000655   000003 236300                    LDQ   ! 3,,PR0
         2 000656   000020 316203                    CANQ  ! 16,DU
         2 000657   000700 600200 2                  TZE   ! s:10727
         2 000660   000001 222300                    LDX2  ! 1,,PR0
         2 000661   000700 601200 2                  TNZ   ! s:10727
         2 000662   000000 475600 xsym               LDP5  ! B$JIT$
         2 000663   500013 236300                    LDQ   ! 11,,PR5
         2 000664   000010 316207                    CANQ  ! 8,DL
         2 000665   000700 601200 2                  TNZ   ! s:10727
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:62   
         2 000666   200070 237300                    LDAQ  ! AUACCT,,AUTO
         2 000667   000002 117200 3                  CMPAQ ! 2
         2 000670   000700 600200 2                  TZE   ! s:10727
         2 000671   040100 106700                    CMPC  ! fill='040'O
         2 000672   200070 000010                    ADSC9   AUACCT,,AUTO             cn=0,n=8
         2 000673   500001 000010                    ADSC9   1,,PR5                   cn=0,n=8
         2 000674   000700 600200 2                  TZE   ! s:10727

      437    10719    4                 AND NOT B$JIT.PRIV.ACTIVE.MSYS
      438    10720    5                 AND AUACCT~='?' AND AUACCT~=B$JIT.ACCN THEN DO;

      439    10721    5                  B$JIT.ERR=NOTAU;

  10721  2 000675   000015 236200 0                  LDQ   ! NOTAU
         2 000676   500012 756300                    STQ   ! 10,,PR5

      440    10722           /*E* ERROR: FRA-E$NOTAU
      441    10723                MESSAGE: That resource %(%UF, %DC) %needs an AU.
      442    10724           */
      443    10725    5                  GOTO CL_NXT;

  10725  2 000677   000631 710200 2                  TRA   ! CL_NXT

      444    10726    5                  END;
      445    10727    4               IF NOT RAT.CLFLG.AUCTL OR RAT.RES.SISID=0 OR RAT.RES.SISID=SID

  10727  2 000700   000003 236300                    LDQ   ! 3,,PR0
         2 000701   000020 316203                    CANQ  ! 16,DU
         2 000702   000712 600200 2                  TZE   ! s:10728
         2 000703   000001 222300                    LDX2  ! 1,,PR0
         2 000704   000712 600200 2                  TZE   ! s:10728
         2 000705   000001 236300                    LDQ   ! 1,,PR0
         2 000706   000022 732200                    QRS   ! 18
         2 000707   000717 604200 2                  TMI   ! s:10729
         2 000710   200016 116300                    CMPQ  ! SID,,AUTO
         2 000711   000717 601200 2                  TNZ   ! s:10729

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:63   
      446    10728    4               THEN DCB$->F$DCB.IORG=%VARIABLE#;

  10728  2 000712   400070 236300                    LDQ   ! 56,,PR4
         2 000713   000001 376200 3                  ANQ   ! 1
         2 000714   020000 276203                    ORQ   ! 8192,DU
         2 000715   400070 756300                    STQ   ! 56,,PR4
         2 000716   000775 710200 2                  TRA   ! s:10746

      447    10729    4               ELSE DCB$->F$DCB.IORG=%UNDEF#;

  10729  2 000717   400070 236300                    LDQ   ! 56,,PR4
         2 000720   000001 376200 3                  ANQ   ! 1
         2 000721   021000 276203                    ORQ   ! 8704,DU
         2 000722   400070 756300                    STQ   ! 56,,PR4

      448    10730    4               END; /* If CLFLG.MULT */

  10730  2 000723   000775 710200 2                  TRA   ! s:10746

      449    10731    4            ELSE DO;

      450    10732    4   CL_RES:     IF RAT.RES.SISID~=0 THEN GOTO CL_NXT; /* That one's busy */

  10732  2 000724   000001 222300       CL_RES       LDX2  ! 1,,PR0
         2 000725   000631 601200 2                  TNZ   ! CL_NXT

      451    10733    4               IF RAT.CLFLG.AUCTL

  10733  2 000726   000020 316203                    CANQ  ! 16,DU
         2 000727   000743 600200 2                  TZE   ! s:10741
         2 000730   200070 237300                    LDAQ  ! AUACCT,,AUTO
         2 000731   000002 117200 3                  CMPAQ ! 2
         2 000732   000743 600200 2                  TZE   ! s:10741
         2 000733   000000 474600 xsym               LDP4  ! B$JIT$
         2 000734   040100 106700                    CMPC  ! fill='040'O
         2 000735   200070 000010                    ADSC9   AUACCT,,AUTO             cn=0,n=8
         2 000736   400001 000010                    ADSC9   1,,PR4                   cn=0,n=8
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:64   
         2 000737   000743 600200 2                  TZE   ! s:10741

      452    10734    5                 AND AUACCT~='?' AND AUACCT~=B$JIT.ACCN THEN DO;

      453    10735    5                  B$JIT.ERR=NCGAU;

  10735  2 000740   000014 236200 0                  LDQ   ! NCGAU
         2 000741   400012 756300                    STQ   ! 10,,PR4

      454    10736           /*E* ERROR: FRA-E$NCGAU
      455    10737                MESSAGE: Your account cannot control that resource%(%UF, %DC)%.
      456    10738           */
      457    10739    5                  GOTO CL_NXT;

  10739  2 000742   000631 710200 2                  TRA   ! CL_NXT

      458    10740    5                  END;
      459    10741    4               RA1$=RAT$;

  10741  2 000743   200007 236300                    LDQ   ! RAT$,,AUTO
         2 000744   200010 756300                    STQ   ! RA1$,,AUTO

      460    10742    4               CALL FRZ$GETRES(RTYP,ATTR,SID,MODE,RAT$) ALTRET (ALTRT);

  10742  2 000745   200007 633700                    EPPR3 ! RAT$,,AUTO
         2 000746   200124 453700                    STP3  ! CGINFO+17,,AUTO
         2 000747   200024 634700                    EPPR4 ! MODE,,AUTO
         2 000750   200123 454700                    STP4  ! CGINFO+16,,AUTO
         2 000751   200016 635700                    EPPR5 ! SID,,AUTO
         2 000752   200122 455700                    STP5  ! CGINFO+15,,AUTO
         2 000753   200033 636700                    EPPR6 ! ATTR,,AUTO
         2 000754   200121 456700                    STP6  ! CGINFO+14,,AUTO
         2 000755   200013 637700                    EPPR7 ! RTYP,,AUTO
         2 000756   200120 457700                    STP7  ! CGINFO+13,,AUTO
         2 000757   200120 630700                    EPPR0 ! CGINFO+13,,AUTO
         2 000760   000023 631600 xsym               EPPR1 ! B_VECTNIL+19
         2 000761   000000 701200 xent               TSX1  ! FRZ$GETRES
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:65   
         2 000762   000361 702200 2                  TSX2  ! ALTRT

      461    10743    4               DCB$->F$DCB.IORG=%FIXED#;

  10743  2 000763   200012 470700                    LDP0  ! DCB$,,AUTO
         2 000764   000070 236300                    LDQ   ! 56,,PR0
         2 000765   000001 376200 3                  ANQ   ! 1
         2 000766   017000 276203                    ORQ   ! 7680,DU
         2 000767   000070 756300                    STQ   ! 56,,PR0

      462    10744    4               IF RA1$~=RAT$ THEN CALL SLIDEGO;

  10744  2 000770   200010 236300                    LDQ   ! RA1$,,AUTO
         2 000771   200007 116300                    CMPQ  ! RAT$,,AUTO
         2 000772   000775 600200 2                  TZE   ! s:10746

  10744  2 000773   002535 701200 2                  TSX1  ! SLIDEGO
         2 000774   000000 011200                    NOP   ! 0

      463    10745    4               END; /* if not CLFLG.MULT */

      464    10746    3            RAT.FLG.OPN='1'B; /* Set here so we get to FRB$CLS if it goes away */

  10746  2 000775   200007 470700                    LDP0  ! RAT$,,AUTO
         2 000776   000020 236207                    LDQ   ! 16,DL
         2 000777   000010 256300                    ORSQ  ! 8,,PR0

      465    10747    3            END;

      466    10748    2         OLTX=0;

  10748  2 001000   200027 450100                    STZ     OLTX,,AUTO

      467    10749    2         IF RNUM='02' THEN OLTX=OLTX+1;

  10749  2 001001   200014 220100                    LDX0    RNUM,,AUTO
         2 001002   000054 100000 0                  CMPX0   CBUF+18
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:66   
         2 001003   001007 601000 2                  TNZ     s:10750

  10749  2 001004   200027 235100                    LDA     OLTX,,AUTO
         2 001005   000001 035007                    ADLA    1,DL
         2 001006   200027 755100                    STA     OLTX,,AUTO

      468    10750    2         IF RNUM~='00' THEN B$JIT.CLRES(OLTX)='0'B;

  10750  2 001007   000051 100000 0                  CMPX0   CBUF+15
         2 001010   001016 600000 2                  TZE     s:10751

  10750  2 001011   000000 471400 xsym               LDP1    B$JIT$
         2 001012   200027 235100                    LDA     OLTX,,AUTO
         2 001013   003105 060400                    CSL     bolr='003'O
         2 001014   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 001015   100325 000001                    BDSC    213,A,PR1                by=0,bit=0,n=1

      469    10751    2         DCB$->F$DCB.CRECX=B$JIT.ARECX;

  10751  2 001016   000000 470400 xsym               LDP0    B$JIT$
         2 001017   000333 721100                    LXL1    219,,PR0
         2 001020   177777 361003                    ANX1    65535,DU
         2 001021   200012 471500                    LDP1    DCB$,,AUTO
         2 001022   100067 441100                    SXL1    55,,PR1

      470    10752    2         B$JIT.ARECX=B$JIT.ARECX+1;

  10752  2 001023   000333 236100                    LDQ     219,,PR0
         2 001024   177777 376007                    ANQ     65535,DL
         2 001025   000001 036007                    ADLQ    1,DL
         2 001026   000333 676100                    ERQ     219,,PR0
         2 001027   177777 376007                    ANQ     65535,DL
         2 001030   000333 656100                    ERSQ    219,,PR0

      471    10753    2         IF RAT.RES.SISID=SID THEN RA1$=RAT$;

  10753  2 001031   200007 473500                    LDP3    RAT$,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:67   
         2 001032   300001 236100                    LDQ     1,,PR3
         2 001033   000022 732000                    QRS     18
         2 001034   001042 604000 2                  TMI     s:10755
         2 001035   200016 116100                    CMPQ    SID,,AUTO
         2 001036   001042 601000 2                  TNZ     s:10755

  10753  2 001037   200007 236100                    LDQ     RAT$,,AUTO
         2 001040   200010 756100                    STQ     RA1$,,AUTO
         2 001041   001052 710000 2                  TRA     s:10759

      472    10754    3         ELSE DO;

      473    10755    3            RA1$=ADDR(AANCE);

  10755  2 001042   200054 634500                    EPPR4   AANCE,,AUTO
         2 001043   200010 454500                    STP4    RA1$,,AUTO

      474    10756    3            RA1$->RAT=RAT;

  10756  2 001044   000100 100500                    MLR     fill='000'O
         2 001045   300000 000044                    ADSC9   0,,PR3                   cn=0,n=36
         2 001046   400000 000044                    ADSC9   0,,PR4                   cn=0,n=36

      475    10757    3            RA1$->RAT.RES.M2=ATTR;

  10757  2 001047   200033 221100                    LDX1    ATTR,,AUTO
         2 001050   200010 470500                    LDP0    RA1$,,AUTO
         2 001051   000002 741100                    STX1    2,,PR0

      476    10758    3            END;

      477    10759    2         RA1$->RAT.RES.ACTX=DCB$->F$DCB.CRECX;

  10759  2 001052   100067 721100                    LXL1    55,,PR1
         2 001053   200010 470500                    LDP0    RA1$,,AUTO
         2 001054   000002 441100                    SXL1    2,,PR0

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:68   
      478    10760    2         RA1$->RAT.RES.NUMB=RNUM;

  10760  2 001055   200010 470500                    LDP0    RA1$,,AUTO
         2 001056   000001 440100                    SXL0    1,,PR0

      479    10761    2         DCB$->F$DCB.RESNT.NUM=RNUM;

  10761  2 001057   100026 440100                    SXL0    22,,PR1

      480    10762    2         CALL FRS$OPSTRS;

  10762  2 001060   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001061   000000 701000 xent               TSX1    FRS$OPSTRS
         2 001062   000000 011000                    NOP     0

      481    10763    2         CALL FRS$RESADD (RA1$->RAT);

  10763  2 001063   200010 630500                    EPPR0   RA1$,,AUTO
         2 001064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001065   000000 701000 xent               TSX1    FRS$RESADD
         2 001066   000000 011000                    NOP     0

      482    10764    2         CALL FRS$CLSTRS;

  10764  2 001067   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001070   000000 701000 xent               TSX1    FRS$CLSTRS
         2 001071   000000 011000                    NOP     0
         2 001072   001077 710000 2                  TRA     CSEX

      483    10765    2      CASE (ELSE);

      484    10766    2         B$JIT$->B$JIT.ERR=NODPYT;

  10766  2 001073   000005 236000 0                  LDQ     NODPYT
         2 001074   000000 470400 xsym               LDP0    B$JIT$
         2 001075   000012 756100                    STQ     10,,PR0

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:69   
      485    10767           /*E*  ERROR:         FRA-E$NODP-E
      486    10768                  MESSAGE: A DP or OD resource DCB% like %DC% requires a volume name.
      487    10769                 MESSAGE1: A volume name (SN) must be specified to begin use of
      488    10770                           a DP or OD resource% as you've requested in %DC%.
      489    10771                 DESCRIPTION:  See message 1.                                           */
      490    10772    2         ALTRETURN;

  10772  2 001076   000000 702200 xent               TSX2  ! X66_AALT

      491    10773    2      END;

  10761  2 001077                       CSEX         null
      492    10774    1   CSEX: ;
      493    10775    2      DO INHIBIT;

      494    10776    2         IF RAT.DCTX = 0 /* Resource disconnected */

  10776  2 001077   200007 470700                    LDP0  ! RAT$,,AUTO
         2 001100   000003 720300                    LXL0  ! 3,,PR0
         2 001101   001106 601200 2                  TNZ   ! s:10787

      495    10777    3         THEN DO;

      496    10778    3            B$JIT$->B$JIT.ERR = LDSC;

  10778  2 001102   000012 236200 0                  LDQ   ! LDSC
         2 001103   000000 471600 xsym               LDP1  ! B$JIT$
         2 001104   100012 756300                    STQ   ! 10,,PR1

      497    10779           /*E* ERROR: FRA-E$LDSC-E
      498    10780                MESSAGE: The resource being opened to has disconnected.
      499    10781                MESSAGE1: Between the time of acquiring a resource and
      500    10782                          the open, the resource disconnected from the
      501    10783                          system.
      502    10784           */
      503    10785    3            ALTRETURN;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:70   
  10785  2 001105   000000 702200 xent               TSX2  ! X66_AALT

      504    10786    3            END;
      505    10787    2         IF NOT RAT.FLG&%(RUPBIT|OPNBIT) THEN GOTO REOPN;

  10787  2 001106   000010 236300                    LDQ   ! 8,,PR0
         2 001107   000033 736200                    QLS   ! 27
         2 001110   024000 376203                    ANQ   ! 10240,DU
         2 001111   000272 600200 2                  TZE   ! REOPN

      506    10788    2         RAT.FLG.OPN='1'B;

  10788  2 001112   000020 236207                    LDQ   ! 16,DL
         2 001113   000010 256300                    ORSQ  ! 8,,PR0

      507    10789    2         END;

      508    10790    2      IF RTYP~='CL' THEN DO;

  10790  2 001114   200013 221100                    LDX1    RTYP,,AUTO
         2 001115   000050 101000 0                  CMPX1   CBUF+14
         2 001116   001274 600000 2                  TZE     s:10822

      509    10791    2         DCB$->F$DCB.RESNT.NUM=RAT.RES.NUMB;

  10791  2 001117   000001 722100                    LXL2    1,,PR0
         2 001120   200012 471500                    LDP1    DCB$,,AUTO
         2 001121   100026 442100                    SXL2    22,,PR1

      510    10792    2         IF RAT.FLG.MBIT.MTD THEN EXIT;

  10792  2 001122   000010 236100                    LDQ     8,,PR0
         2 001123   000400 316007                    CANQ    256,DL
         2 001124   001274 601000 2                  TNZ     s:10822

      511    10793    2         RAT.FLG.MBIT.MTD='1'B;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:71   
  10793  2 001125   000400 236007                    LDQ     256,DL
         2 001126   000010 256100                    ORSQ    8,,PR0

      512    10794    2         IF DCB$->F$DCB.RESNT.NUM~=' ' THEN RAT.FLG.MTNN='1'B;

  10794  2 001127   100026 720100                    LXL0    22,,PR1
         2 001130   040040 100003                    CMPX0   16416,DU
         2 001131   001134 600000 2                  TZE     s:10795

  10794  2 001132   000040 236007                    LDQ     32,DL
         2 001133   000010 256100                    ORSQ    8,,PR0

      513    10795    2         RAT.REEL.ASID=RAT.RES.SISID;

  10795  2 001134   000001 220100                    LDX0    1,,PR0
         2 001135   000004 740100                    STX0    4,,PR0

      514    10796    2         B$JIT$->B$JIT.MOUNTS(RCD)=B$JIT$->B$JIT.MOUNTS(RCD)+1;

  10796  2 001136   200015 235100                    LDA     RCD,,AUTO
         2 001137   000001 735000                    ALS     1
         2 001140   000000 470400 xsym               LDP0    B$JIT$
         2 001141   000100 100505                    MLR     fill='000'O
         2 001142   000332 000002                    ADSC9   218,A,PR0                cn=0,n=2
         2 001143   200121 000004                    ADSC9   CGINFO+14,,AUTO          cn=0,n=4
         2 001144   200121 236100                    LDQ     CGINFO+14,,AUTO
         2 001145   000022 732000                    QRS     18
         2 001146   000001 036007                    ADLQ    1,DL
         2 001147   200120 756100                    STQ     CGINFO+13,,AUTO
         2 001150   000105 101500                    MRL     fill='000'O
         2 001151   200120 000004                    ADSC9   CGINFO+13,,AUTO          cn=0,n=4
         2 001152   000332 000002                    ADSC9   218,A,PR0                cn=0,n=2

      515    10797    2         LMNT.SYSID=SID;

  10797  2 001153   200016 236100                    LDQ     SID,,AUTO
         2 001154   200044 756100                    STQ     LMNT,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:72   

      516    10798    3         IF RCD=FR_DP THEN DO;

  10798  2 001155   200015 235100                    LDA     RCD,,AUTO
         2 001156   001172 601000 2                  TNZ     s:10803

      517    10799    3            LMNT.PSN=RAT.REEL.SER;

  10799  2 001157   200007 470500                    LDP0    RAT$,,AUTO
         2 001160   040100 100500                    MLR     fill='040'O
         2 001161   000004 400006                    ADSC9   4,,PR0                   cn=2,n=6
         2 001162   200046 400006                    ADSC9   LMNT+2,,AUTO             cn=2,n=6

      518    10800    3            CALL BINCHAR(LMNT.VOLUME,MOD(DCB$->F$DCB.CSEED,1000000));

  10800  2 001163   100072 236100                    LDQ     58,,PR1
         2 001164   000004 506000 3                  DIV     4
         2 001165   200120 755100                    STA     CGINFO+13,,AUTO
         2 001166   000100 301500                    BTD
         2 001167   200120 000004                    NDSC9   CGINFO+13,,AUTO          cn=0,s=lsgnf,sf=0,n=4
         2 001170   200045 030006                    NDSC9   LMNT+1,,AUTO             cn=0,s=nosgn,sf=0,n=6

      519    10801    3            END;

  10801  2 001171   001201 710000 2                  TRA     s:10806

      520    10802    3         ELSE DO;

      521    10803    3            LMNT.VOLUME=RAT.REEL.SER;

  10803  2 001172   200007 470500                    LDP0    RAT$,,AUTO
         2 001173   040100 100500                    MLR     fill='040'O
         2 001174   000004 400006                    ADSC9   4,,PR0                   cn=2,n=6
         2 001175   200045 000006                    ADSC9   LMNT+1,,AUTO             cn=0,n=6

      522    10804    3            LMNT.PSN=' ';

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:73   
  10804  2 001176   040100 100400                    MLR     fill='040'O
         2 001177   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001200   200046 400006                    ADSC9   LMNT+2,,AUTO             cn=2,n=6

      523    10805    3            END;

      524    10806    2         LMNT.DEVNAME=NK$LDCT$(RAT.DCTX)->LDCT.DEVNM;

  10806  2 001201   000003 720100                    LXL0    3,,PR0
         2 001202   000000 473400 xsym               LDP3    N$DCT$$
         2 001203   300000 474510                    LDP4    0,X0,PR3
         2 001204   400002 237100                    LDAQ    2,,PR4
         2 001205   200050 757100                    STAQ    LMNT+4,,AUTO

      525    10807    2         CALL ELA$SYSLOG (EL_MOUNT,LMNT,SIZEW(LMNT),'0'B,1,RA1$);

  10807  2 001206   200010 634500                    EPPR4   RA1$,,AUTO
         2 001207   200125 454500                    STP4    CGINFO+18,,AUTO
         2 001210   000006 236000 3                  LDQ     6
         2 001211   200124 756100                    STQ     CGINFO+17,,AUTO
         2 001212   000010 237000 3                  LDAQ    8
         2 001213   200122 757100                    STAQ    CGINFO+15,,AUTO
         2 001214   200044 635500                    EPPR5   LMNT,,AUTO
         2 001215   200121 455500                    STP5    CGINFO+14,,AUTO
         2 001216   000012 236000 3                  LDQ     10
         2 001217   200120 756100                    STQ     CGINFO+13,,AUTO
         2 001220   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001221   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001222   000000 701000 xent               TSX1    ELA$SYSLOG
         2 001223   000000 011000                    NOP     0

      526    10808    3         IF ANNCE<0 OR ANNCE>0 AND DCB$->F$DCB.PSN=' ' THEN DO;

  10808  2 001224   200025 235100                    LDA     ANNCE,,AUTO
         2 001225   001234 604000 2                  TMI     s:10809
         2 001226   001274 604400 2                  TMOZ    s:10822
         2 001227   200012 470500                    LDP0    DCB$,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:74   
         2 001230   040000 106500                    CMPC    fill='040'O
         2 001231   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 001232   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001233   001274 601000 2                  TNZ     s:10822

      527    10809    4            IF ANNCE>0 THEN DO;

  10809  2 001234   000000 115003                    CMPA    0,DU
         2 001235   001250 604400 2                  TMOZ    s:10814

      528    10810    4               ABUF=CBUF;

  10810  2 001236   000100 100400                    MLR     fill='000'O
         2 001237   000032 000041 0                  ADSC9   CBUF                     cn=0,n=33
         2 001240   200072 000041                    ADSC9   ABUF,,AUTO               cn=0,n=33

      529    10811    4               AANCE=CANCE;

  10811  2 001241   000100 100400                    MLR     fill='000'O
         2 001242   000016 000060 0                  ADSC9   CANCE                    cn=0,n=48
         2 001243   200054 000060                    ADSC9   AANCE,,AUTO              cn=0,n=48

      530    10812    4               ABUF.MTNG.YY=DCB$->F$DCB.RESNT.TYP;

  10812  2 001244   200012 470500                    LDP0    DCB$,,AUTO
         2 001245   000026 236100                    LDQ     22,,PR0
         2 001246   000011 772000                    QRL     9
         2 001247   200075 552130                    STBQ    ABUF+3,'30'O,AUTO

      531    10813    4               END;

      532    10814    3            ABUF.MTNG.VOL=LMNT.VOLUME;

  10814  2 001250   040100 100500                    MLR     fill='040'O
         2 001251   200045 000006                    ADSC9   LMNT+1,,AUTO             cn=0,n=6
         2 001252   200076 000006                    ADSC9   ABUF+4,,AUTO             cn=0,n=6

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:75   
      533    10815    3            ABUFR.MNTD.PREF=CBUF.PREF;

  10815  2 001253   000100 100400                    MLR     fill='000'O
         2 001254   000032 000004 0                  ADSC9   CBUF                     cn=0,n=4
         2 001255   200074 200004                    ADSC9   ABUF+2,,AUTO             cn=1,n=4

      534    10816    3            AANCE.BUF_=VECTOR(ABUFR.MNTD);

  10816  2 001256   000013 235000 3                  LDA     11
         2 001257   200120 452500                    STP2    CGINFO+13,,AUTO
         2 001260   200120 236100                    LDQ     CGINFO+13,,AUTO
         2 001261   000014 036000 3                  ADLQ    12
         2 001262   200060 757100                    STAQ    AANCE+4,,AUTO

      535    10817    3            CALL M$MWRITE (AANCE) ALTRET (MTDON);

  10817  2 001263   200054 630500                    EPPR0   AANCE,,AUTO
         2 001264   200120 450500                    STP0    CGINFO+13,,AUTO
         2 001265   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001266   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001267   000000 701000 xent               TSX1    M$MWRITE
         2 001270   001271 702000 2                  TSX2    MTDON

  10816  2 001271                       MTDON        null
      536    10818    3   MTDON:   ;
      537    10819    3            B$JIT.DCB$=DCB$;

  10819  2 001271   200012 236100                    LDQ     DCB$,,AUTO
         2 001272   000000 470400 xsym               LDP0    B$JIT$
         2 001273   000232 756100                    STQ     154,,PR0

      538    10820    3            END;

      539    10821    2         END;

      540    10822    1      IF DCB$->F$DCB.PSN~=' ' THEN RAT.FLG.MBIT.MTSC='0'B;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:76   
  10822  2 001274   200012 470500                    LDP0    DCB$,,AUTO
         2 001275   040000 106500                    CMPC    fill='040'O
         2 001276   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 001277   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001300   001304 600000 2                  TZE     s:10823

  10822  2 001301   200007 471500                    LDP1    RAT$,,AUTO
         2 001302   000015 236000 3                  LDQ     13
         2 001303   100010 356100                    ANSQ    8,,PR1

      541    10823    1      DCB$->F$DCB.PSN=RAT.REEL.SER;

  10823  2 001304   200007 471500                    LDP1    RAT$,,AUTO
         2 001305   040100 100500                    MLR     fill='040'O
         2 001306   100004 400006                    ADSC9   4,,PR1                   cn=2,n=6
         2 001307   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6

      542    10824    1      IF ATTR='0'B THEN DCB$->F$DCB.ATTR=RAT.RES.M2;

  10824  2 001310   200033 235100                    LDA     ATTR,,AUTO
         2 001311   001314 601000 2                  TNZ     s:10825

  10824  2 001312   100002 220100                    LDX0    2,,PR1
         2 001313   000040 440100                    SXL0    32,,PR0

      543    10825    1      DCB$->F$DCB.SETX=RAT.DCTX;

  10825  2 001314   100003 720100                    LXL0    3,,PR1
         2 001315   000051 440100                    SXL0    41,,PR0

      544    10826    1      B$JIT.ERR='0'B;

  10826  2 001316   000000 473400 xsym               LDP3    B$JIT$
         2 001317   300012 450100                    STZ     10,,PR3

      545    10827    1      RETURN;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:77   
  10827  2 001320   000000 702200 xent               TSX2  ! X66_ARET

  10826  2 001321                       DMMTDP       null
      546    10828           /**/
      547    10829    1   DMMTDP:;
      548    10830    2      IF RCD=FR_DP THEN DO;

  10830  2 001321   200015 235100                    LDA     RCD,,AUTO
         2 001322   001327 601000 2                  TNZ     DMMT

      549    10831           /* DONT MOVE A DP FROM ONE RTYP TO ANOTHER */
      550    10832    2         B$JIT.ERR=BDATTR;

  10832  2 001323   000010 236000 0                  LDQ     BDATTR
         2 001324   000000 470400 xsym               LDP0    B$JIT$
         2 001325   000012 756100                    STQ     10,,PR0

      551    10833    2         ALTRETURN;

  10833  2 001326   000000 702200 xent               TSX2  ! X66_AALT

  10830  2 001327                       DMMT         null
      552    10834    2         END;
      553    10835           /**/
      554    10836    1   DMMT: ;
      555    10837    1      CALL FRZ$DSMT (RA1$->RAT);

  10837  2 001327   200010 630500                    EPPR0   RA1$,,AUTO
         2 001330   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001331   000000 701000 xent               TSX1    FRZ$DSMT
         2 001332   000000 011000                    NOP     0

  10830  2 001333                       MOUNT        null
      556    10838    1   MOUNT: ;
      557    10839    1      TDCT=0;

  10839  2 001333   200021 450100                    STZ     TDCT,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:78   

      558    10840    1      IF RAT.RES.RFLG.CANT OR S_CUN=JG_PIG# THEN GOTO CNTMNT;

  10840  2 001334   200007 470500                    LDP0    RAT$,,AUTO
         2 001335   000003 236100                    LDQ     3,,PR0
         2 001336   004000 316003                    CANQ    2048,DU
         2 001337   001624 601000 2                  TNZ     CNTMNT
         2 001340   000000 235000 xsym               LDA     S_CUN
         2 001341   000007 115007                    CMPA    7,DL
         2 001342   001624 600000 2                  TZE     CNTMNT

      559    10841    1      IF S$CU$->B$U.ASYNCH&~%U_RESET THEN GOTO BRKOUT;

  10841  2 001343   000003 236000 xsym               LDQ     B_VECTNIL+3
         2 001344   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 001345   000000 471400 xsym               LDP1    S$CU$
         2 001346   100001 376100                    ANQ     1,,PR1
         2 001347   001642 601000 2                  TNZ     BRKOUT

      560    10842    1      M4=%(SOLBIT|RUPBIT);

  10842  2 001350   104000 236003                    LDQ     34816,DU
         2 001351   200020 756100                    STQ     M4,,AUTO

      561    10843    2      DO WHILE(RAT.FLG&M4);

  10843  2 001352   001401 710000 2                  TRA     s:10855

      562    10844    2         RA1$=FR$HD$(RCD);

  10844  2 001353   200015 720100                    LXL0    RCD,,AUTO
         2 001354   000000 236010 xsym               LDQ     FR$HD$,X0
         2 001355   200010 756100                    STQ     RA1$,,AUTO

      563    10845    3         DO WHILE (RA1$~=ADDR(NIL));

  10845  2 001356   001372 710000 2                  TRA     s:10852
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:79   

      564    10846    4            IF NOT RA1$->RAT.FLG&M4 THEN DO;

  10846  2 001357   200010 470500                    LDP0    RA1$,,AUTO
         2 001360   000010 236100                    LDQ     8,,PR0
         2 001361   000033 736000                    QLS     27
         2 001362   200020 376100                    ANQ     M4,,AUTO
         2 001363   001367 601000 2                  TNZ     MNT1

      565    10847    4               CALL SLIDE ALTRET (MNT1);

  10847  2 001364   002410 701000 2                  TSX1    SLIDE
         2 001365   001367 702000 2                  TSX2    MNT1

      566    10848    4               GOTO MNT2;

  10848  2 001366   001406 710000 2                  TRA     MNT2

  10846  2 001367                       MNT1         null
      567    10849    4               END;
      568    10850    3   MNT1:    ;
      569    10851    3            RA1$=RA1$->RAT.LNK$;

  10851  2 001367   200010 470500                    LDP0    RA1$,,AUTO
         2 001370   000000 236100                    LDQ     0,,PR0
         2 001371   200010 756100                    STQ     RA1$,,AUTO

      570    10852    3            END;

  10852  2 001372   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001373   001357 601000 2                  TNZ     s:10846

      571    10853    2         IF NOT M4&%SOLBIT THEN EXIT; /* SOLRUP->RUP->0 */

  10853  2 001374   200020 236100                    LDQ     M4,,AUTO
         2 001375   100000 376003                    ANQ     32768,DU
         2 001376   001406 600000 2                  TZE     MNT2
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:80   

      572    10854    2         M4=%RUPBIT;

  10854  2 001377   004000 236003                    LDQ     2048,DU
         2 001400   200020 756100                    STQ     M4,,AUTO

      573    10855    2         END;

  10855  2 001401   200007 470500                    LDP0    RAT$,,AUTO
         2 001402   000010 236100                    LDQ     8,,PR0
         2 001403   000033 736000                    QLS     27
         2 001404   200020 376100                    ANQ     M4,,AUTO
         2 001405   001353 601000 2                  TNZ     s:10844

  10851  2 001406                       MNT2         null
      574    10856    1   MNT2: ;
      575    10857    2      IF ANNCE>0 THEN DO;

  10857  2 001406   200025 235100                    LDA     ANNCE,,AUTO
         2 001407   001445 604400 2                  TMOZ    s:10869

      576    10858    2         ANNCE=-1;

  10858  2 001410   000001 336007                    LCQ     1,DL
         2 001411   200025 756100                    STQ     ANNCE,,AUTO

      577    10859    2         ABUF=CBUF;

  10859  2 001412   000100 100400                    MLR     fill='000'O
         2 001413   000032 000041 0                  ADSC9   CBUF                     cn=0,n=33
         2 001414   200072 000041                    ADSC9   ABUF,,AUTO               cn=0,n=33

      578    10860    2         ABUF.MTNG.YY=DCB$->F$DCB.RESNT.TYP;

  10860  2 001415   200012 470500                    LDP0    DCB$,,AUTO
         2 001416   000026 236100                    LDQ     22,,PR0
         2 001417   000011 772000                    QRL     9
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:81   
         2 001420   200075 552130                    STBQ    ABUF+3,'30'O,AUTO

      579    10861    2         ABUF.MTNG.VOL=DCB$->F$DCB.PSN;

  10861  2 001421   040100 100500                    MLR     fill='040'O
         2 001422   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         2 001423   200076 000006                    ADSC9   ABUF+4,,AUTO             cn=0,n=6

      580    10862    2         AANCE=CANCE;

  10862  2 001424   000100 100400                    MLR     fill='000'O
         2 001425   000016 000060 0                  ADSC9   CANCE                    cn=0,n=48
         2 001426   200054 000060                    ADSC9   AANCE,,AUTO              cn=0,n=48

      581    10863    2         AANCE.BUF_=VECTOR(ABUF.MTNG);

  10863  2 001427   000016 235000 3                  LDA     14
         2 001430   200120 452500                    STP2    CGINFO+13,,AUTO
         2 001431   200120 236100                    LDQ     CGINFO+13,,AUTO
         2 001432   000072 036003                    ADLQ    58,DU
         2 001433   200060 757100                    STAQ    AANCE+4,,AUTO

      582    10864    2         CALL M$MWRITE (AANCE) ALTRET (MSGON);

  10864  2 001434   200054 631500                    EPPR1   AANCE,,AUTO
         2 001435   200120 451500                    STP1    CGINFO+13,,AUTO
         2 001436   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001437   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001440   000000 701000 xent               TSX1    M$MWRITE
         2 001441   001442 702000 2                  TSX2    MSGON

  10863  2 001442                       MSGON        null
      583    10865    2   MSGON: ;
      584    10866    2         B$JIT.DCB$=DCB$;

  10866  2 001442   200012 236100                    LDQ     DCB$,,AUTO
         2 001443   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:82   
         2 001444   000232 756100                    STQ     154,,PR0

      585    10867    2         END;

      586    10868    2      DO INHIBIT;

      587    10869    2         IF AVRCNT~=FR_AVRCNT THEN GOTO REOPN;

  10869  2 001445   200026 236300                    LDQ   ! AVRCNT,,AUTO
         2 001446   000000 116200 xsym               CMPQ  ! FR_AVRCNT
         2 001447   000272 601200 2                  TNZ   ! REOPN

      588    10870    2         RAT.FLG.MBIT.SOL='1'B;

  10870  2 001450   200007 470700                    LDP0  ! RAT$,,AUTO
         2 001451   000100 236207                    LDQ   ! 64,DL
         2 001452   000010 256300                    ORSQ  ! 8,,PR0

      589    10871    2         RAT.SSER=DCB$->F$DCB.PSN;

  10871  2 001453   200012 471700                    LDP1  ! DCB$,,AUTO
         2 001454   040100 100700                    MLR   ! fill='040'O
         2 001455   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 001456   000006 400006                    ADSC9   6,,PR0                   cn=2,n=6

      590    10872    2         RAT.SOLU=S_CUN;

  10872  2 001457   200007 470700                    LDP0  ! RAT$,,AUTO
         2 001460   000000 236200 xsym               LDQ   ! S_CUN
         2 001461   000011 736200                    QLS   ! 9
         2 001462   000010 552310                    STBQ  ! 8,'10'O,PR0

      591    10873    2         END;

      592    10874    1      FR_KMSG.SER#=DCB$->F$DCB.PSN;

  10874  2 001463   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:83   
         2 001464   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 001465   200034 000006                    ADSC9   FR_KMSG,,AUTO            cn=0,n=6

      593    10875    1      FR_KMSG.ACCT=B$JIT$->B$JIT.ACCN;

  10875  2 001466   000000 473400 xsym               LDP3    B$JIT$
         2 001467   040100 100500                    MLR     fill='040'O
         2 001470   300001 000010                    ADSC9   1,,PR3                   cn=0,n=8
         2 001471   200035 400010                    ADSC9   FR_KMSG+1,,AUTO          cn=2,n=8

      594    10876    1      FR_KMSG.FRM=RAT.FLG.FORM;

  10876  2 001472   000010 236100                    LDQ     8,,PR0
         2 001473   000016 736000                    QLS     14
         2 001474   200037 676100                    ERQ     FR_KMSG+3,,AUTO
         2 001475   400000 376007                    ANQ     -131072,DL
         2 001476   200037 656100                    ERSQ    FR_KMSG+3,,AUTO

      595    10877    1      FR_KMSG.ASN=DCB$->F$DCB.ASN;

  10877  2 001477   100032 236100                    LDQ     26,,PR1
         2 001500   200037 676100                    ERQ     FR_KMSG+3,,AUTO
         2 001501   377000 376007                    ANQ     130560,DL
         2 001502   200037 656100                    ERSQ    FR_KMSG+3,,AUTO

      596    10878    1      FR_KMSG.FUN=DCB$->F$DCB.FUN;

  10878  2 001503   100032 236100                    LDQ     26,,PR1
         2 001504   000022 772000                    QRL     18
         2 001505   200037 552104                    STBQ    FR_KMSG+3,'04'O,AUTO

      597    10879    1      IF ATTR&%ATTR_D6250# THEN FR_KMSG.DENS=1;

  10879  2 001506   200033 236100                    LDQ     ATTR,,AUTO
         2 001507   400000 376003                    ANQ     -131072,DU
         2 001510   001514 600000 2                  TZE     s:10880

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:84   
  10879  2 001511   001000 236003                    LDQ     512,DU
         2 001512   200041 756100                    STQ     FR_KMSG+5,,AUTO
         2 001513   001515 710000 2                  TRA     s:10881

      598    10880    1      ELSE FR_KMSG.DENS=0;

  10880  2 001514   200041 450100                    STZ     FR_KMSG+5,,AUTO

      599    10881    1      TDCT=RAT.DCTX;

  10881  2 001515   000003 236100                    LDQ     3,,PR0
         2 001516   777777 376007                    ANQ     -1,DL
         2 001517   200021 756100                    STQ     TDCT,,AUTO

      600    10882    2      DO CASE(RCD);

  10882  2 001520   200015 235100                    LDA     RCD,,AUTO
         2 001521   000002 115007                    CMPA    2,DL
         2 001522   001524 602005 2                  TNC     s:10882+4,AL
         2 001523   001542 710000 2                  TRA     s:10890
         2 001524   001526 710000 2                  TRA     s:10884
         2 001525   001537 710000 2                  TRA     s:10888

      601    10883    2      CASE(FR_DP);

      602    10884    2         DEVC=M_DISK;

  10884  2 001526   100000 236003                    LDQ     32768,DU
         2 001527   200023 756100                    STQ     DEVC,,AUTO

      603    10885    2         FR_KMSG.ASN=%FILE#;

  10885  2 001530   200037 236100                    LDQ     FR_KMSG+3,,AUTO
         2 001531   000017 376000 3                  ANQ     15
         2 001532   001000 276007                    ORQ     512,DL
         2 001533   200037 756100                    STQ     FR_KMSG+3,,AUTO

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:85   
      604    10886    2         FR_KMSG.VSN=DCB$->F$DCB.CSEED;

  10886  2 001534   100072 235100                    LDA     58,,PR1
         2 001535   200040 755100                    STA     FR_KMSG+4,,AUTO
         2 001536   001544 710000 2                  TRA     MNT3

      605    10887    2      CASE(FR_MT);

      606    10888    2         DEVC=M_TAPE;

  10888  2 001537   100000 236003                    LDQ     32768,DU
         2 001540   200023 756100                    STQ     DEVC,,AUTO
         2 001541   001544 710000 2                  TRA     MNT3

      607    10889    2      CASE(ELSE);

      608    10890    2         DEVC=M_UR;

  10890  2 001542   100000 236003                    LDQ     32768,DU
         2 001543   200023 756100                    STQ     DEVC,,AUTO

      609    10891    2      END;

      610    10892    1   MNT3: ;

  10892  2 001544                       MNT3         null
      611    10893    1      IF RTYP = 'OD' THEN

  10893  2 001544   200013 220100                    LDX0    RTYP,,AUTO
         2 001545   000047 100000 0                  CMPX0   CBUF+13
         2 001546   001561 601000 2                  TNZ     s:10896

      612    10894    1         CALL FPM$MNTOD (TDCT, DCB$->F$DCB.PSN) ALTRET (MNTBK);

  10894  2 001547   200012 236100                    LDQ     DCB$,,AUTO
         2 001550   000024 036003                    ADLQ    20,DU
         2 001551   200121 756100                    STQ     CGINFO+14,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:86   
         2 001552   200021 630500                    EPPR0   TDCT,,AUTO
         2 001553   200120 450500                    STP0    CGINFO+13,,AUTO
         2 001554   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001555   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001556   000000 701000 xent               TSX1    FPM$MNTOD
         2 001557   001634 702000 2                  TSX2    MNTBK
         2 001560   001613 710000 2                  TRA     s:10899

      613    10895    2      ELSE DO;

      614    10896    2        CALL OCI$MK_WR (DEVC, MOUNT_MSG#, LENGTHC(FR_MMSGL), FR_MMSGL, FR_KMSG, TDCT);

  10896  2 001561   200021 630500                    EPPR0   TDCT,,AUTO
         2 001562   200125 450500                    STP0    CGINFO+18,,AUTO
         2 001563   200034 631500                    EPPR1   FR_KMSG,,AUTO
         2 001564   200124 451500                    STP1    CGINFO+17,,AUTO
         2 001565   000022 237000 3                  LDAQ    18
         2 001566   200122 757100                    STAQ    CGINFO+15,,AUTO
         2 001567   000021 236000 3                  LDQ     17
         2 001570   200121 756100                    STQ     CGINFO+14,,AUTO
         2 001571   200023 633500                    EPPR3   DEVC,,AUTO
         2 001572   200120 453500                    STP3    CGINFO+13,,AUTO
         2 001573   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001574   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001575   000000 701000 xent               TSX1    OCI$MK_WR
         2 001576   000000 011000                    NOP     0

      615    10897    2         CALL SSR$REG (%SS_SL, ADDR(NIL), MNTWAIT) ALTRET (MNTBK);

  10897  2 001577   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 001600   200120 756100                    STQ     CGINFO+13,,AUTO
         2 001601   000026 236000 3                  LDQ     22
         2 001602   200123 756100                    STQ     CGINFO+16,,AUTO
         2 001603   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001604   200122 450500                    STP0    CGINFO+15,,AUTO
         2 001605   000027 236000 3                  LDQ     23
         2 001606   200121 756100                    STQ     CGINFO+14,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:87   
         2 001607   200121 630500                    EPPR0   CGINFO+14,,AUTO
         2 001610   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001611   000000 701000 xent               TSX1    SSR$REG
         2 001612   001634 702000 2                  TSX2    MNTBK

      616    10898    2         END;

      617    10899    2      IF SID=RAT.RES.SISID THEN DO;

  10899  2 001613   200007 470500                    LDP0    RAT$,,AUTO
         2 001614   000001 236100                    LDQ     1,,PR0
         2 001615   000022 732000                    QRS     18
         2 001616   001633 604000 2                  TMI     s:10914
         2 001617   200016 116100                    CMPQ    SID,,AUTO
         2 001620   001633 601000 2                  TNZ     s:10914

      618    10900    3         IF RAT.RES.RFLG.CANT THEN DO;

  10900  2 001621   000003 236100                    LDQ     3,,PR0
         2 001622   004000 316003                    CANQ    2048,DU
         2 001623   001630 600000 2                  TZE     s:10912

  10897  2 001624                       CNTMNT       null
      619    10901    3   CNTMNT:  ;
      620    10902    3            B$JIT$->B$JIT.ERR=CANT;

  10902  2 001624   000007 236000 0                  LDQ     CANT
         2 001625   000000 471400 xsym               LDP1    B$JIT$
         2 001626   100012 756100                    STQ     10,,PR1

      621    10903           /*E*  ERROR:         FRA-E$CANT-E
      622    10904                  MESSAGE: The operator cannot do your mount request% for %UF%!
      623    10905                 MESSAGE1: When a request to mount a tape appears on the
      624    10906                           operators console, the operator has the ability
      625    10907                           to cancel the mount request with a keyin.  This
      626    10908                           was done to your last mount request% for %UF%.
      627    10909                 DESCRIPTION:   This error results from use of the CANT MOUNT keyin     */
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:88   
      628    10910    3            GOTO FORGET;

  10910  2 001627   001647 710000 2                  TRA     FORGET

      629    10911    3            END;
      630    10912    2         IF RAT.FLG.MBIT.SOL THEN GOTO MNT3;

  10912  2 001630   000010 236100                    LDQ     8,,PR0
         2 001631   000100 316007                    CANQ    64,DL
         2 001632   001544 601000 2                  TNZ     MNT3

      631    10913    2         END;

      632    10914    1      GOTO REOPN;

  10914  2 001633   000272 710000 2                  TRA     REOPN

  10914  2 001634                       MNTBK        null
      633    10915    1   MNTBK: ;
      634    10916    1      IF SID~=RAT.RES.SISID THEN GOTO REOPN;

  10916  2 001634   200007 470500                    LDP0    RAT$,,AUTO
         2 001635   000001 236100                    LDQ     1,,PR0
         2 001636   000022 732000                    QRS     18
         2 001637   000272 604000 2                  TMI     REOPN
         2 001640   200016 116100                    CMPQ    SID,,AUTO
         2 001641   000272 601000 2                  TNZ     REOPN

  10916  2 001642                       BRKOUT       null
      635    10917    1   BRKOUT:;
      636    10918    1      RAT.FLG.MBIT.SOL='0'B;

  10918  2 001642   000030 236000 3                  LDQ     24
         2 001643   000010 356100                    ANSQ    8,,PR0

      637    10919    1      B$JIT$->B$JIT.ERR=BRKMNT;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:89   
  10919  2 001644   000006 236000 0                  LDQ     BRKMNT
         2 001645   000000 471400 xsym               LDP1    B$JIT$
         2 001646   100012 756100                    STQ     10,,PR1

  10919  2 001647                       FORGET       null
      638    10920           /*E*  ERROR:         FRA-E$MNTBRK-E
      639    10921                  MESSAGE: BREAK or CONTROL-Y during mount% of %UF%.
      640    10922                 MESSAGE1: When a terminal user hits BREAK or CTL-Y with a
      641    10923                           mount operation in progress, that operation is
      642    10924                           aborted.  If you still wish to do the mount% of %UF%,
      643    10925                           please try it again.
      644    10926                 DESCRIPTION:   The worst part of the problem is CVOL, where the
      645    10927                                current operation requires both reels to be up to
      646    10928                                complete.  It seems wrong to disallow break and
      647    10929                                control-y while the operator looks for the next
      648    10930                                reel, so we make the user start over.  after all,
      649    10931                                he is the one with the itchy fingers                    */
      650    10932    1   FORGET: ;
      651    10933    1      RAT.RES.RFLG.CANT='0'B;

  10933  2 001647   000031 236000 3                  LDQ     25
         2 001650   000003 356100                    ANSQ    3,,PR0

      652    10934    1      IF RAT.RES.RFLG.OLT THEN CALL FRZ$RRES (RAT,MODE);

  10934  2 001651   200007 470500                    LDP0    RAT$,,AUTO
         2 001652   000003 236100                    LDQ     3,,PR0
         2 001653   020000 316003                    CANQ    8192,DU
         2 001654   001665 600000 2                  TZE     s:10935

  10934  2 001655   200024 633500                    EPPR3   MODE,,AUTO
         2 001656   200121 453500                    STP3    CGINFO+14,,AUTO
         2 001657   200007 236100                    LDQ     RAT$,,AUTO
         2 001660   200120 756100                    STQ     CGINFO+13,,AUTO
         2 001661   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001662   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001663   000000 701000 xent               TSX1    FRZ$RRES
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:90   
         2 001664   000000 011000                    NOP     0

      653    10935    1      IF TDCT~=0 AND RTYP ~= 'OD' THEN

  10935  2 001665   200021 235100                    LDA     TDCT,,AUTO
         2 001666   001710 600000 2                  TZE     s:10937
         2 001667   200013 220100                    LDX0    RTYP,,AUTO
         2 001670   000047 100000 0                  CMPX0   CBUF+13
         2 001671   001710 600000 2                  TZE     s:10937

      654    10936    1         CALL OCI$MK_WR (DEVC,FRGT_MSG#,LENGTHC(FR_MMSGL),FR_MMSGL,FR_KMSG,TDCT);

  10936  2 001672   200021 630500                    EPPR0   TDCT,,AUTO
         2 001673   200125 450500                    STP0    CGINFO+18,,AUTO
         2 001674   200034 631500                    EPPR1   FR_KMSG,,AUTO
         2 001675   200124 451500                    STP1    CGINFO+17,,AUTO
         2 001676   000022 237000 3                  LDAQ    18
         2 001677   200122 757100                    STAQ    CGINFO+15,,AUTO
         2 001700   000033 236000 3                  LDQ     27
         2 001701   200121 756100                    STQ     CGINFO+14,,AUTO
         2 001702   200023 633500                    EPPR3   DEVC,,AUTO
         2 001703   200120 453500                    STP3    CGINFO+13,,AUTO
         2 001704   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 001705   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001706   000000 701000 xent               TSX1    OCI$MK_WR
         2 001707   000000 011000                    NOP     0

      655    10937    1      ALTRETURN;

  10937  2 001710   000000 702200 xent               TSX2  ! X66_AALT

      656    10938           /**/
      657    10939           /**/
      658    10940           /*         SUBROUTINES        */
      659    10941           /**/
      660    10942           /**/
      661    10943    1   GETLOW: PROC ALTRET;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:91   

  10943  2 001711   200114 741300       GETLOW       STX1  ! CGINFO+9,,AUTO

      662    10944    2      M4=%MTDBIT;

  10944  2 001712   400000 236003                    LDQ     -131072,DU
         2 001713   200020 756100                    STQ     M4,,AUTO

      663    10945    2      M5='0'B;

  10945  2 001714   200022 450100                    STZ     M5,,AUTO
         2 001715   001717 710000 2                  TRA     s:10947

      664    10946    2   GETLOW1: ENTRY ALTRET;

  10946  2 001716   200114 741300       GETLOW1      STX1  ! CGINFO+9,,AUTO

      665    10947    2      RA2$=FR$HD$(RCD);

  10947  2 001717   200015 720100                    LXL0    RCD,,AUTO
         2 001720   000000 236010 xsym               LDQ     FR$HD$,X0
         2 001721   200011 756100                    STQ     RA2$,,AUTO

      666    10948    2      RNUM='9:';

  10948  2 001722   000055 222000 0                  LDX2    CBUF+19
         2 001723   200014 742100                    STX2    RNUM,,AUTO

      667    10949    3      DO WHILE (RA2$~=ADDR(NIL));

  10949  2 001724   001765 710000 2                  TRA     s:10961

      668    10950    3         IF (RA2$->RAT.RES.SISID=SID

  10950  2 001725   200011 470500                    LDP0    RA2$,,AUTO
         2 001726   000001 236100                    LDQ     1,,PR0
         2 001727   000022 732000                    QRS     18
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:92   
         2 001730   001763 604000 2                  TMI     s:10960
         2 001731   200016 116100                    CMPQ    SID,,AUTO
         2 001732   001763 601000 2                  TNZ     s:10960
         2 001733   000010 220100                    LDX0    8,,PR0
         2 001734   200013 100100                    CMPX0   RTYP,,AUTO
         2 001735   001763 601000 2                  TNZ     s:10960
         2 001736   000010 236100                    LDQ     8,,PR0
         2 001737   000033 736000                    QLS     27
         2 001740   200020 376100                    ANQ     M4,,AUTO
         2 001741   200022 116100                    CMPQ    M5,,AUTO
         2 001742   001763 601000 2                  TNZ     s:10960
         2 001743   000001 721100                    LXL1    1,,PR0
         2 001744   200014 101100                    CMPX1   RNUM,,AUTO
         2 001745   001763 603000 2                  TRC     s:10960
         2 001746   000003 236100                    LDQ     3,,PR0
         2 001747   010000 316003                    CANQ    4096,DU
         2 001750   001753 600000 2                  TZE     s:10950+22
         2 001751   200015 235100                    LDA     RCD,,AUTO
         2 001752   001763 600000 2                  TZE     s:10960
         2 001753   000002 236100                    LDQ     2,,PR0
         2 001754   777777 376003                    ANQ     -1,DU
         2 001755   777777 676003                    ERQ     -1,DU
         2 001756   200033 376100                    ANQ     ATTR,,AUTO
         2 001757   001763 601000 2                  TNZ     s:10960

      669    10951    3           AND RA2$->RAT.TYP=RTYP
      670    10952    3           AND (RA2$->RAT.FLG&M4)=M5
      671    10953    3           AND RA2$->RAT.RES.NUMB<RNUM)
      672    10954    3           AND (NOT RA2$->RAT.RES.RFLG.NOSLD OR RCD~=FR_DP)
      673    10955    3           AND (ATTR&~RA2$->RAT.RES.M2)='0'B
      674    10956    4         THEN DO;

      675    10957    4            RNUM=RA2$->RAT.RES.NUMB;

  10957  2 001760   200014 741100                    STX1    RNUM,,AUTO

      676    10958    4            RAT$=RA2$;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:93   

  10958  2 001761   200011 236100                    LDQ     RA2$,,AUTO
         2 001762   200007 756100                    STQ     RAT$,,AUTO

      677    10959    4            END;

      678    10960    3         RA2$=RA2$->RAT.LNK$;

  10960  2 001763   000000 236100                    LDQ     0,,PR0
         2 001764   200011 756100                    STQ     RA2$,,AUTO

      679    10961    3         END;

  10961  2 001765   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 001766   001725 601000 2                  TNZ     s:10950

      680    10962    2      IF RNUM>='03' AND RTYP='MT' AND M5='0'B

  10962  2 001767   200014 220100                    LDX0    RNUM,,AUTO
         2 001770   000056 100000 0                  CMPX0   CBUF+20
         2 001771   002032 602000 2                  TNC     s:10974
         2 001772   200013 221100                    LDX1    RTYP,,AUTO
         2 001773   000045 101000 0                  CMPX1   CBUF+11
         2 001774   002032 601000 2                  TNZ     s:10974
         2 001775   200022 235100                    LDA     M5,,AUTO
         2 001776   002032 601000 2                  TNZ     s:10974

      681    10963    3      THEN DO OLTX=0 TO 1;

  10963  2 001777   200027 450100                    STZ     OLTX,,AUTO

      682    10964    4         IF B$JIT$->B$JIT.OLTA(OLTX) THEN DO;

  10964  2 002000   000000 470400 xsym               LDP0    B$JIT$
         2 002001   200027 235100                    LDA     OLTX,,AUTO
         2 002002   000000 066505                    CMPB    filb='0'B
         2 002003   000333 400001                    BDSC    219,A,PR0                by=2,bit=0,n=1
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:94   
         2 002004   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 002005   002026 600000 2                  TZE     s:10973

      683    10965    4            CALL GETOLT ALTRET (NOOLT);

  10965  2 002006   002161 701000 2                  TSX1    GETOLT
         2 002007   002015 702000 2                  TSX2    NOOLT

      684    10966    4            RNUM=RAT.RES.NUMB;

  10966  2 002010   200007 470500                    LDP0    RAT$,,AUTO
         2 002011   000001 720100                    LXL0    1,,PR0
         2 002012   200014 740100                    STX0    RNUM,,AUTO

      685    10967    4            ALTRETURN;

  10967  2 002013   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002014   000000 702211                    TSX2  ! 0,X1

  10966  2 002015                       NOOLT        null
      686    10968    4   NOOLT:   ;
      687    10969    4            IF RNUM='9:' THEN RETURN;

  10969  2 002015   200014 220100                    LDX0    RNUM,,AUTO
         2 002016   000055 100000 0                  CMPX0   CBUF+19
         2 002017   002022 601000 2                  TNZ     s:10970

  10969  2 002020   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002021   000001 702211                    TSX2  ! 1,X1

      688    10970    4            B$JIT.ERR='0'B;

  10970  2 002022   000000 470400 xsym               LDP0    B$JIT$
         2 002023   000012 450100                    STZ     10,,PR0

      689    10971    4            ALTRETURN;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:95   
  10971  2 002024   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002025   000000 702211                    TSX2  ! 0,X1

      690    10972    4            END;
      691    10973    3         END;

  10973  2 002026   000001 035007                    ADLA    1,DL
         2 002027   200027 755100                    STA     OLTX,,AUTO
         2 002030   000002 115007                    CMPA    2,DL
         2 002031   002000 602000 2                  TNC     s:10964

      692    10974    2      IF RNUM~='9:' THEN ALTRETURN;

  10974  2 002032   200014 220100                    LDX0    RNUM,,AUTO
         2 002033   000055 100000 0                  CMPX0   CBUF+19
         2 002034   002037 600000 2                  TZE     s:10975

  10974  2 002035   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002036   000000 702211                    TSX2  ! 0,X1

      693    10975    2      RNUM=DCB$->F$DCB.RESNT.NUM;

  10975  2 002037   200012 470500                    LDP0    DCB$,,AUTO
         2 002040   000026 721100                    LXL1    22,,PR0
         2 002041   200014 741100                    STX1    RNUM,,AUTO

      694    10976    2      IF M5='0'B THEN B$JIT.ERR=NOMO;

  10976  2 002042   200022 235100                    LDA     M5,,AUTO
         2 002043   002047 601000 2                  TNZ     s:10989

  10976  2 002044   000003 236000 0                  LDQ     NOMO
         2 002045   000000 471400 xsym               LDP1    B$JIT$
         2 002046   100012 756100                    STQ     10,,PR1

      695    10977           /*E*  ERROR:         FRA-E$NORES-E
      696    10978                  MESSAGE: Your resources of this type% (%UF)% are exhausted!
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:96   
      697    10979                 MESSAGE1: Physical resources are obtained via the !RES or !ORES
      698    10980                           command.  Non-BATCH users are permitted at most two
      699    10981                           tape drives without the use of !ORES.  If you own any
      700    10982                           of the resources you are asking for% (%UF)%, they are
      701    10983                           all in use.  Note that you might have (e.g.) tapes
      702    10984                           but none with the attributes you requested.
      703    10985                 DESCRIPTION:   We cannot find (or get) a drive owned by this user
      704    10986                                to which to open his DCB.  Watch out for attribute
      705    10987                                mismatches - the user may have a tape left that does
      706    10988                                not have the attributes (density) he is asking for      */
      707    10989    2      RETURN;

  10989  2 002047   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002050   000001 702211                    TSX2  ! 1,X1

      708    10990           /**/
      709    10991           /**/
      710    10992    2   GETDN: ENTRY ALTRET;

  10992  2 002051   200114 741300       GETDN        STX1  ! CGINFO+9,,AUTO

      711    10993    3      IF RTYP='MT' AND RNUM<='02' THEN DO;

  10993  2 002052   200013 220100                    LDX0    RTYP,,AUTO
         2 002053   000045 100000 0                  CMPX0   CBUF+11
         2 002054   002101 601000 2                  TNZ     NOOLT1
         2 002055   000054 222000 0                  LDX2    CBUF+18
         2 002056   200014 102100                    CMPX2   RNUM,,AUTO
         2 002057   002101 602000 2                  TNC     NOOLT1

      712    10994    3         IF RNUM='01' THEN OLTX=0;

  10994  2 002060   200014 223100                    LDX3    RNUM,,AUTO
         2 002061   000053 103000 0                  CMPX3   CBUF+17
         2 002062   002065 601000 2                  TNZ     s:10995

  10994  2 002063   200027 450100                    STZ     OLTX,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:97   
         2 002064   002067 710000 2                  TRA     s:10996

      713    10995    3         ELSE OLTX=1;

  10995  2 002065   000001 235007                    LDA     1,DL
         2 002066   200027 755100                    STA     OLTX,,AUTO

      714    10996    4         IF B$JIT$->B$JIT.OLTA(OLTX) THEN DO;

  10996  2 002067   000000 470400 xsym               LDP0    B$JIT$
         2 002070   200027 235100                    LDA     OLTX,,AUTO
         2 002071   000000 066505                    CMPB    filb='0'B
         2 002072   000333 400001                    BDSC    219,A,PR0                by=2,bit=0,n=1
         2 002073   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 002074   002101 600000 2                  TZE     NOOLT1

      715    10997    4            CALL GETOLT ALTRET (NOOLT1);

  10997  2 002075   002161 701000 2                  TSX1    GETOLT
         2 002076   002101 702000 2                  TSX2    NOOLT1

      716    10998    4            RETURN;

  10998  2 002077   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002100   000001 702211                    TSX2  ! 1,X1

      717    10999    4            END;
      718    11000    3         END;
      719    11001    2   NOOLT1:;

  11001  2 002101                       NOOLT1       null
      720    11002    2      RAT$=FR$HD$(RCD);

  11002  2 002101   200015 720100                    LXL0    RCD,,AUTO
         2 002102   000000 236010 xsym               LDQ     FR$HD$,X0
         2 002103   200007 756100                    STQ     RAT$,,AUTO

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:98   
      721    11003    3      DO WHILE (RAT$~=ADDR(NIL));

  11003  2 002104   002150 710000 2                  TRA     s:11029

      722    11004    3         IF (RAT.RES.SISID=SID

  11004  2 002105   200007 470500                    LDP0    RAT$,,AUTO
         2 002106   000001 236100                    LDQ     1,,PR0
         2 002107   000022 732000                    QRS     18
         2 002110   002146 604000 2                  TMI     s:11028
         2 002111   200016 116100                    CMPQ    SID,,AUTO
         2 002112   002146 601000 2                  TNZ     s:11028
         2 002113   000001 720100                    LXL0    1,,PR0
         2 002114   200014 100100                    CMPX0   RNUM,,AUTO
         2 002115   002146 601000 2                  TNZ     s:11028
         2 002116   000010 221100                    LDX1    8,,PR0
         2 002117   200013 101100                    CMPX1   RTYP,,AUTO
         2 002120   002146 601000 2                  TNZ     s:11028

      723    11005    3           AND RAT.RES.NUMB=RNUM
      724    11006    3           AND RAT.TYP=RTYP)
      725    11007    4         THEN DO;

      726    11008    5            IF ATTR&~RAT.RES.M2 THEN DO;

  11008  2 002121   000002 236100                    LDQ     2,,PR0
         2 002122   777777 376003                    ANQ     -1,DU
         2 002123   777777 676003                    ERQ     -1,DU
         2 002124   200033 376100                    ANQ     ATTR,,AUTO
         2 002125   002133 600000 2                  TZE     s:11020

      727    11009    5               B$JIT.ERR=BDATTR;

  11009  2 002126   000010 236000 0                  LDQ     BDATTR
         2 002127   000000 471400 xsym               LDP1    B$JIT$
         2 002130   100012 756100                    STQ     10,,PR1

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:99   
      728    11010           /*E*  ERROR:         FRA-E$BDATTR-E
      729    11011                  MESSAGE: Your resource% for %UF% does not have those attributes!
      730    11012                 MESSAGE1: You attempted to open to a resource% for %UF% specifying
      731    11013                           attributes that it does not have.  Attributes
      732    11014                           (e.g. 1600BPI,LOWERCASE) must be requested on the
      733    11015                           !RES or !ORES command used to acquire the resource.
      734    11016                 DESCRIPTION:   The user probably asked for a 6250 BPI tape on a
      735    11017                                drive he acquired without asking for that attribute.    */
      736    11018    5               ALTRETURN;

  11018  2 002131   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002132   000000 702211                    TSX2  ! 0,X1

      737    11019    5               END;
      738    11020    4            B$JIT.ERR='0'B;

  11020  2 002133   000000 471400 xsym               LDP1    B$JIT$
         2 002134   100012 450100                    STZ     10,,PR1

      739    11021    4            IF NOT RAT.FLG.OPN THEN RETURN;

  11021  2 002135   000010 236100                    LDQ     8,,PR0
         2 002136   000020 316007                    CANQ    16,DL
         2 002137   002142 601000 2                  TNZ     s:11022

  11021  2 002140   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002141   000001 702211                    TSX2  ! 1,X1

      740    11022    4            B$JIT$->B$JIT.ERR=NOSHR;

  11022  2 002142   000002 236000 0                  LDQ     NOSHR
         2 002143   100012 756100                    STQ     10,,PR1

      741    11023           /*E*  ERROR:         FRA-E$REOPN-E
      742    11024                 DESCRIPTION:   In this case the user asked for a specific drive
      743    11025                                that he already has a DCB open to                       */
      744    11026    4            ALTRETURN;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:100  

  11026  2 002144   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002145   000000 702211                    TSX2  ! 0,X1

      745    11027    4            END;
      746    11028    3         RAT$=RAT.LNK$;

  11028  2 002146   000000 236100                    LDQ     0,,PR0
         2 002147   200007 756100                    STQ     RAT$,,AUTO

      747    11029    3         END;

  11029  2 002150   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002151   002105 601000 2                  TNZ     s:11004

      748    11030    2      IF B$JIT.ERR='0'B THEN B$JIT.ERR=NORSNN;

  11030  2 002152   000000 470400 xsym               LDP0    B$JIT$
         2 002153   000012 235100                    LDA     10,,PR0
         2 002154   002157 601000 2                  TNZ     s:11038

  11030  2 002155   000011 236000 0                  LDQ     NORSNN
         2 002156   000012 756100                    STQ     10,,PR0

      749    11031           /*E*  ERROR:         FRA-E$NORSNN-E
      750    11032                  MESSAGE: You do not own such a resource% for %UF%!
      751    11033                 MESSAGE1: You tried to open% to %UF% with a full resource
      752    11034                           name (dvnn not dv) but you have no resource by that
      753    11035                           name.  The resource virtual name may be optionally
      754    11036                           specified on the !RES or !ORES command.
      755    11037                 DESCRIPTION:   He probably left something off his !resource command.   */
      756    11038    2      ALTRETURN;

  11038  2 002157   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002160   000000 702211                    TSX2  ! 0,X1

      757    11039    2   END;
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:101  
      758    11040           /**/
      759    11041           /**/
      760    11042    1   GETOLT: PROC ALTRET;

  11042  2 002161   200116 741300       GETOLT       STX1  ! CGINFO+11,,AUTO

      761    11043    2      CALL FRZ$GETRES (RTYP,DCB$->F$DCB.ATTR,SID,MODE,RA2$) ALTRET (ALTOUT);

  11043  2 002162   200011 630500                    EPPR0   RA2$,,AUTO
         2 002163   200124 450500                    STP0    CGINFO+17,,AUTO
         2 002164   200024 631500                    EPPR1   MODE,,AUTO
         2 002165   200123 451500                    STP1    CGINFO+16,,AUTO
         2 002166   200016 633500                    EPPR3   SID,,AUTO
         2 002167   200122 453500                    STP3    CGINFO+15,,AUTO
         2 002170   200012 236100                    LDQ     DCB$,,AUTO
         2 002171   000034 036000 3                  ADLQ    28
         2 002172   200121 756100                    STQ     CGINFO+14,,AUTO
         2 002173   200013 634500                    EPPR4   RTYP,,AUTO
         2 002174   200120 454500                    STP4    CGINFO+13,,AUTO
         2 002175   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 002176   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 002177   000000 701000 xent               TSX1    FRZ$GETRES
         2 002200   002262 702000 2                  TSX2    ALTOUT

      762    11044    2      B$JIT$->B$JIT.OLTA(OLTX)='0'B;

  11044  2 002201   000000 470400 xsym               LDP0    B$JIT$
         2 002202   200027 235100                    LDA     OLTX,,AUTO
         2 002203   003105 060400                    CSL     bolr='003'O
         2 002204   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 002205   000333 400001                    BDSC    219,A,PR0                by=2,bit=0,n=1

      763    11045    2      RAT$=RA2$;

  11045  2 002206   200011 236100                    LDQ     RA2$,,AUTO
         2 002207   200007 756100                    STQ     RAT$,,AUTO

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:102  
      764    11046    2      RAT.RES.RFLG.OLT='1'B;

  11046  2 002210   200007 470500                    LDP0    RAT$,,AUTO
         2 002211   020000 236003                    LDQ     8192,DU
         2 002212   000003 256100                    ORSQ    3,,PR0

      765    11047    2      IF OLTX=0 THEN RAT.RES.NUMB='01';

  11047  2 002213   000000 115003                    CMPA    0,DU
         2 002214   002221 601000 2                  TNZ     s:11048

  11047  2 002215   000053 220000 0                  LDX0    CBUF+17
         2 002216   200007 470500                    LDP0    RAT$,,AUTO
         2 002217   000001 440100                    SXL0    1,,PR0
         2 002220   002224 710000 2                  TRA     s:11049

      766    11048    2      ELSE RAT.RES.NUMB='02';

  11048  2 002221   000054 220000 0                  LDX0    CBUF+18
         2 002222   200007 470500                    LDP0    RAT$,,AUTO
         2 002223   000001 440100                    SXL0    1,,PR0

      767    11049    2      RAT.RES.ACTX=B$JIT.ARECX;

  11049  2 002224   000000 470400 xsym               LDP0    B$JIT$
         2 002225   000333 720100                    LXL0    219,,PR0
         2 002226   177777 360003                    ANX0    65535,DU
         2 002227   200007 471500                    LDP1    RAT$,,AUTO
         2 002230   100002 440100                    SXL0    2,,PR1

      768    11050    2      B$JIT.ARECX=B$JIT.ARECX+1;

  11050  2 002231   000333 236100                    LDQ     219,,PR0
         2 002232   177777 376007                    ANQ     65535,DL
         2 002233   000001 036007                    ADLQ    1,DL
         2 002234   000333 676100                    ERQ     219,,PR0
         2 002235   177777 376007                    ANQ     65535,DL
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:103  
         2 002236   000333 656100                    ERSQ    219,,PR0

      769    11051    2      RAT.RES.RFLG.NOSLD='1'B;

  11051  2 002237   200007 471500                    LDP1    RAT$,,AUTO
         2 002240   010000 236003                    LDQ     4096,DU
         2 002241   100003 256100                    ORSQ    3,,PR1

      770    11052    2      CALL FRS$OPSTRS;

  11052  2 002242   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002243   000000 701000 xent               TSX1    FRS$OPSTRS
         2 002244   000000 011000                    NOP     0

      771    11053    2      CALL FRS$RESADD (RAT$->RAT);

  11053  2 002245   200007 630500                    EPPR0   RAT$,,AUTO
         2 002246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002247   000000 701000 xent               TSX1    FRS$RESADD
         2 002250   000000 011000                    NOP     0

      772    11054    2      CALL FRS$CLSTRS;

  11054  2 002251   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002252   000000 701000 xent               TSX1    FRS$CLSTRS
         2 002253   000000 011000                    NOP     0

      773    11055    2      RAT.RES.RFLG.NOSLD='0'B;

  11055  2 002254   200007 470500                    LDP0    RAT$,,AUTO
         2 002255   000035 236000 3                  LDQ     29
         2 002256   000003 356100                    ANSQ    3,,PR0

      774    11056    2      UNWIND TO RESTRT; /* The tables might have changed on us now. */

  11056  2 002257   200042 237300                    LDAQ  ! RESTRT,,AUTO
         2 002260   000000 700200 xent               TSX0  ! X66_AUNWIND
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:104  
         2 002261   000000 000200                    ZERO    0,128

  11056  2 002262                       ALTOUT       null
      775    11057    2   ALTOUT: ;
      776    11058    2      ALTRETURN;

  11058  2 002262   200116 221300                    LDX1  ! CGINFO+11,,AUTO
         2 002263   000000 702211                    TSX2  ! 0,X1

      777    11059    2   END;
      778    11060           /**/
      779    11061           /**/
      780    11062    1   SRSCR: PROC ALTRET;

  11062  2 002264   200114 741300       SRSCR        STX1  ! CGINFO+9,,AUTO

      781    11063    2      RA2$=ADDR(NIL);

  11063  2 002265   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002266   200011 756100                    STQ     RA2$,,AUTO

      782    11064    2      RA1$=FR$HD$(RCD);

  11064  2 002267   200015 720100                    LXL0    RCD,,AUTO
         2 002270   000000 236010 xsym               LDQ     FR$HD$,X0
         2 002271   200010 756100                    STQ     RA1$,,AUTO

      783    11065    3      DO WHILE (RA1$~=ADDR(NIL));

  11065  2 002272   002316 710000 2                  TRA     s:11073

      784    11066    4         IF RA1$->RAT.REEL.ASID=SID AND RA1$->RAT.FLG.MBIT=%MTSCBIT THEN DO;

  11066  2 002273   200010 470500                    LDP0    RA1$,,AUTO
         2 002274   000004 236100                    LDQ     4,,PR0
         2 002275   000022 732000                    QRS     18
         2 002276   002313 604000 2                  TMI     s:11072
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:105  
         2 002277   200016 116100                    CMPQ    SID,,AUTO
         2 002300   002313 601000 2                  TNZ     s:11072
         2 002301   000010 236100                    LDQ     8,,PR0
         2 002302   000700 376007                    ANQ     448,DL
         2 002303   000200 116007                    CMPQ    128,DL
         2 002304   002313 601000 2                  TNZ     s:11072

      785    11067    4            CALL SLIDE ALTRET (SRSCR1);

  11067  2 002305   002410 701000 2                  TSX1    SLIDE
         2 002306   002311 702000 2                  TSX2    SRSCR1

      786    11068    4            RETURN;

  11068  2 002307   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002310   000001 702211                    TSX2  ! 1,X1

  11067  2 002311                       SRSCR1       null
      787    11069    4   SRSCR1:  ;
      788    11070    4            RA2$=RA1$;

  11070  2 002311   200010 236100                    LDQ     RA1$,,AUTO
         2 002312   200011 756100                    STQ     RA2$,,AUTO

      789    11071    4            END;

      790    11072    3         RA1$=RA1$->RAT.LNK$;

  11072  2 002313   200010 470500                    LDP0    RA1$,,AUTO
         2 002314   000000 236100                    LDQ     0,,PR0
         2 002315   200010 756100                    STQ     RA1$,,AUTO

      791    11073    3         END;

  11073  2 002316   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002317   002273 601000 2                  TNZ     s:11066

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:106  
      792    11074    2      IF RA2$=ADDR(NIL) THEN ALTRETURN;

  11074  2 002320   200011 236100                    LDQ     RA2$,,AUTO
         2 002321   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002322   002325 601000 2                  TNZ     s:11075

  11074  2 002323   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002324   000000 702211                    TSX2  ! 0,X1

      793    11075    2      CALL FRZ$DSMT (RA2$->RAT);

  11075  2 002325   200011 630500                    EPPR0   RA2$,,AUTO
         2 002326   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 002327   000000 701000 xent               TSX1    FRZ$DSMT
         2 002330   000000 011000                    NOP     0

      794    11076    2      ALTRETURN;

  11076  2 002331   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002332   000000 702211                    TSX2  ! 0,X1

      795    11077           /**/
      796    11078           /**/
      797    11079    2   SRSER: ENTRY ALTRET;

  11079  2 002333   200114 741300       SRSER        STX1  ! CGINFO+9,,AUTO

      798    11080    2      OLTX=SID; /* SEARCH FIRST FOR ON OF OURS. */

  11080  2 002334   200016 235100                    LDA     SID,,AUTO
         2 002335   200027 755100                    STA     OLTX,,AUTO

  11080  2 002336                       SRSER0       null
      799    11081    2   SRSER0:;
      800    11082    2      RA1$=FR$HD$(RCD);

  11082  2 002336   200015 720100                    LXL0    RCD,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:107  
         2 002337   000000 236010 xsym               LDQ     FR$HD$,X0
         2 002340   200010 756100                    STQ     RA1$,,AUTO

      801    11083    3      DO WHILE (RA1$~=ADDR(NIL));

  11083  2 002341   002400 710000 2                  TRA     s:11093

      802    11084    3         IF (RA1$->RAT.REEL.SER=DCB$->F$DCB.PSN

  11084  2 002342   200010 470500                    LDP0    RA1$,,AUTO
         2 002343   200012 471500                    LDP1    DCB$,,AUTO
         2 002344   040100 106500                    CMPC    fill='040'O
         2 002345   000004 400006                    ADSC9   4,,PR0                   cn=2,n=6
         2 002346   100024 000006                    ADSC9   20,,PR1                  cn=0,n=6
         2 002347   002376 601000 2                  TNZ     s:11092
         2 002350   000004 236100                    LDQ     4,,PR0
         2 002351   000022 732000                    QRS     18
         2 002352   002376 604000 2                  TMI     s:11092
         2 002353   200027 116100                    CMPQ    OLTX,,AUTO
         2 002354   002376 601000 2                  TNZ     s:11092

      803    11085    3           AND RA1$->RAT.REEL.ASID=OLTX)
      804    11086    4         THEN DO;

      805    11087    4            IF RCD~=FR_DP THEN RETURN;

  11087  2 002355   200015 235100                    LDA     RCD,,AUTO
         2 002356   002361 600000 2                  TZE     s:11088

  11087  2 002357   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002360   000001 702211                    TSX2  ! 1,X1

      806    11088    4            IF DCB$->F$DCB.CSEED=0

  11088  2 002361   100072 235100                    LDA     58,,PR1
         2 002362   002374 600000 2                  TZE     s:11090
         2 002363   000003 236100                    LDQ     3,,PR0
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:108  
         2 002364   000003 736000                    QLS     3
         2 002365   000036 376000 3                  ANQ     30
         2 002366   000000 473400 xsym               LDP3    FM$SET$
         2 002367   000000 620006                    EAX0    0,QL
         2 002370   100072 236100                    LDQ     58,,PR1
         2 002371   002376 604000 2                  TMI     s:11092
         2 002372   300001 116110                    CMPQ    1,X0,PR3
         2 002373   002376 601000 2                  TNZ     s:11092

      807    11089    4              OR DCB$->F$DCB.CSEED=FM$DEV.VSN(RA1$->RAT.DCTX)
      808    11090    4            THEN RETURN;

  11090  2 002374   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002375   000001 702211                    TSX2  ! 1,X1

      809    11091    4            END;
      810    11092    3         RA1$=RA1$->RAT.LNK$;

  11092  2 002376   000000 236100                    LDQ     0,,PR0
         2 002377   200010 756100                    STQ     RA1$,,AUTO

      811    11093    3         END;

  11093  2 002400   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002401   002342 601000 2                  TNZ     s:11084

      812    11094    2      IF OLTX=0 THEN ALTRETURN;

  11094  2 002402   200027 235100                    LDA     OLTX,,AUTO
         2 002403   002406 601000 2                  TNZ     s:11095

  11094  2 002404   200114 221300                    LDX1  ! CGINFO+9,,AUTO
         2 002405   000000 702211                    TSX2  ! 0,X1

      813    11095    2      OLTX=0;

  11095  2 002406   200027 450100                    STZ     OLTX,,AUTO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:109  

      814    11096    2      GOTO SRSER0;

  11096  2 002407   002336 710000 2                  TRA     SRSER0

      815    11097    2   END;
      816    11098           /**/
      817    11099           /**/
      818    11100    1   SLIDE: PROC ALTRET;

  11100  2 002410   200116 741300       SLIDE        STX1  ! CGINFO+11,,AUTO

      819    11101    2      IF RA1$->RAT.FLG.MBIT.MTD

  11101  2 002411   200010 470500                    LDP0    RA1$,,AUTO
         2 002412   000010 236100                    LDQ     8,,PR0
         2 002413   000400 316007                    CANQ    256,DL
         2 002414   002435 601000 2                  TNZ     s:11105
         2 002415   000002 316007                    CANQ    2,DL
         2 002416   002435 601000 2                  TNZ     s:11105
         2 002417   000003 236100                    LDQ     3,,PR0
         2 002420   010000 316003                    CANQ    4096,DU
         2 002421   002435 601000 2                  TNZ     s:11105
         2 002422   200007 471500                    LDP1    RAT$,,AUTO
         2 002423   100003 236100                    LDQ     3,,PR1
         2 002424   010000 316003                    CANQ    4096,DU
         2 002425   002435 601000 2                  TNZ     s:11105
         2 002426   000006 236100                    LDQ     6,,PR0
         2 002427   777777 376003                    ANQ     -1,DU
         2 002430   777777 676003                    ERQ     -1,DU
         2 002431   000022 772000                    QRL     18
         2 002432   000000 620006                    EAX0    0,QL
         2 002433   100002 360100                    ANX0    2,,PR1
         2 002434   002436 600000 2                  TZE     s:11106

      820    11102    2        OR RA1$->RAT.FLG.DOWN
      821    11103    2        OR RA1$->RAT.RES.RFLG.NOSLD
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:110  
      822    11104    2        OR RAT.RES.RFLG.NOSLD
      823    11105    2        OR RAT.RES.M2&~RA1$->RAT.M1 THEN ALTRETURN;

  11105  2 002435   000000 702211                    TSX2  ! 0,X1

      824    11106    3      IF RA1$->RAT.RES.M2&~RAT.M1 OR RA1$->RAT.FLG.MBIT.SOL THEN DO;

  11106  2 002436   100006 236100                    LDQ     6,,PR1
         2 002437   777777 376003                    ANQ     -1,DU
         2 002440   777777 676003                    ERQ     -1,DU
         2 002441   000022 772000                    QRL     18
         2 002442   000000 620006                    EAX0    0,QL
         2 002443   000002 360100                    ANX0    2,,PR0
         2 002444   002450 601000 2                  TNZ     s:11107
         2 002445   000010 236100                    LDQ     8,,PR0
         2 002446   000100 316007                    CANQ    64,DL
         2 002447   002516 600000 2                  TZE     SLGO

      825    11107    3         RA2$=FR$HD$(RCD);

  11107  2 002450   200015 720100                    LXL0    RCD,,AUTO
         2 002451   000000 236010 xsym               LDQ     FR$HD$,X0
         2 002452   200011 756100                    STQ     RA2$,,AUTO

      826    11108    4         DO WHILE (RA2$~=ADDR(NIL));

  11108  2 002453   002512 710000 2                  TRA     s:11119

      827    11109    4            IF RA2$->RAT.FLG='0'B

  11109  2 002454   200011 470500                    LDP0    RA2$,,AUTO
         2 002455   000010 236100                    LDQ     8,,PR0
         2 002456   000777 316007                    CANQ    511,DL
         2 002457   002510 601000 2                  TNZ     s:11118
         2 002460   000001 220100                    LDX0    1,,PR0
         2 002461   002510 601000 2                  TNZ     s:11118
         2 002462   000003 236100                    LDQ     3,,PR0
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:111  
         2 002463   010000 316003                    CANQ    4096,DU
         2 002464   002510 601000 2                  TNZ     s:11118
         2 002465   000006 236100                    LDQ     6,,PR0
         2 002466   777777 376003                    ANQ     -1,DU
         2 002467   777777 676003                    ERQ     -1,DU
         2 002470   000022 772000                    QRL     18
         2 002471   000000 621006                    EAX1    0,QL
         2 002472   200010 471500                    LDP1    RA1$,,AUTO
         2 002473   100002 361100                    ANX1    2,,PR1
         2 002474   002510 601000 2                  TNZ     s:11118

      828    11110    4              AND RA2$->RAT.RES.SISID=0
      829    11111    4              AND RA2$->RAT.RES.RFLG.NOSLD='0'B
      830    11112    5              AND (RA1$->RAT.RES.M2&~RA2$->RAT.M1)='0'B THEN DO;

      831    11113    5               TRES=RA1$->RAT.RES;

  11113  2 002475   000100 100500                    MLR     fill='000'O
         2 002476   100001 000011                    ADSC9   1,,PR1                   cn=0,n=9
         2 002477   200030 000014                    ADSC9   TRES,,AUTO               cn=0,n=12

      832    11114    5               RA1$->RAT.RES=RA2$->RAT.RES;

  11114  2 002500   000100 100500                    MLR     fill='000'O
         2 002501   000001 000011                    ADSC9   1,,PR0                   cn=0,n=9
         2 002502   100001 000011                    ADSC9   1,,PR1                   cn=0,n=9

      833    11115    5               RA2$->RAT.RES=TRES;

  11115  2 002503   200011 470500                    LDP0    RA2$,,AUTO
         2 002504   000100 100500                    MLR     fill='000'O
         2 002505   200030 000011                    ADSC9   TRES,,AUTO               cn=0,n=9
         2 002506   000001 000011                    ADSC9   1,,PR0                   cn=0,n=9

      834    11116    5               GOTO SLGO;

  11116  2 002507   002516 710000 2                  TRA     SLGO
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:112  

      835    11117    5               END;
      836    11118    4            RA2$=RA2$->RAT.LNK$;

  11118  2 002510   000000 236100                    LDQ     0,,PR0
         2 002511   200011 756100                    STQ     RA2$,,AUTO

      837    11119    4            END;

  11119  2 002512   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 002513   002454 601000 2                  TNZ     s:11109

      838    11120    3         ALTRETURN;

  11120  2 002514   200116 221300                    LDX1  ! CGINFO+11,,AUTO
         2 002515   000000 702211                    TSX2  ! 0,X1

  11113  2 002516                       SLGO         null
      839    11121    3         END;
      840    11122    2   SLGO: ;
      841    11123    3      IF RA1$->RAT.FLG.MBIT.SOL THEN DO;

  11123  2 002516   200010 470500                    LDP0    RA1$,,AUTO
         2 002517   000010 236100                    LDQ     8,,PR0
         2 002520   000100 316007                    CANQ    64,DL
         2 002521   002534 600000 2                  TZE     s:11126

      842    11124    3         RA1$->RAT.FLG.MBIT.SOL='0'B;

  11124  2 002522   000030 236000 3                  LDQ     24
         2 002523   000010 356100                    ANSQ    8,,PR0

      843    11125    3         CALL SSR$RUE (%SS_WU,RA1$->RAT.SOLU);

  11125  2 002524   200010 236100                    LDQ     RA1$,,AUTO
         2 002525   000037 036000 3                  ADLQ    31
         2 002526   000033 235000 3                  LDA     27
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:113  
         2 002527   200120 757100                    STAQ    CGINFO+13,,AUTO
         2 002530   200120 630500                    EPPR0   CGINFO+13,,AUTO
         2 002531   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 002532   000000 701000 xent               TSX1    SSR$RUE
         2 002533   000000 011000                    NOP     0

      844    11126    3         END;

  11126  2 002534   002536 710000 2                  TRA     s:11129

      845    11127    2   SLIDEGO: ENTRY ALTRET;

  11127  2 002535   200116 741300       SLIDEGO      STX1  ! CGINFO+11,,AUTO

      846    11128    3      DO INHIBIT;

      847    11129    3         TRES=RAT.RES;

  11129  2 002536   200007 470700                    LDP0  ! RAT$,,AUTO
         2 002537   000100 100700                    MLR   ! fill='000'O
         2 002540   000001 000011                    ADSC9   1,,PR0                   cn=0,n=9
         2 002541   200030 000014                    ADSC9   TRES,,AUTO               cn=0,n=12

      848    11130    3         RAT.RES=RA1$->RAT.RES;

  11130  2 002542   200010 471700                    LDP1  ! RA1$,,AUTO
         2 002543   000100 100700                    MLR   ! fill='000'O
         2 002544   100001 000011                    ADSC9   1,,PR1                   cn=0,n=9
         2 002545   000001 000011                    ADSC9   1,,PR0                   cn=0,n=9

      849    11131    3         RA1$->RAT.RES=TRES;

  11131  2 002546   200010 470700                    LDP0  ! RA1$,,AUTO
         2 002547   000100 100700                    MLR   ! fill='000'O
         2 002550   200030 000011                    ADSC9   TRES,,AUTO               cn=0,n=9
         2 002551   000001 000011                    ADSC9   1,,PR0                   cn=0,n=9

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:114  
      850    11132    3         RAT$=RA1$;

  11132  2 002552   200010 236300                    LDQ   ! RA1$,,AUTO
         2 002553   200007 756300                    STQ   ! RAT$,,AUTO

      851    11133    3         RETURN;

  11133  2 002554   200116 221300                    LDX1  ! CGINFO+11,,AUTO
         2 002555   000001 702211                    TSX2  ! 1,X1

      852    11134    3         END;

      853    11135    2   END;

  11135  2 002556   000001 702211                    TSX2  ! 1,X1

WRNGTPE
 Sect OctLoc
   0     000   062201 012124                                                    2..T

DUPREEL
 Sect OctLoc
   0     001   062201 012134                                                    2..\

NOSHR
 Sect OctLoc
   0     002   062201 012144                                                    2..d

NOMO
 Sect OctLoc
   0     003   062201 012154                                                    2..l

BADLPCL
 Sect OctLoc
   0     004   062201 012164                                                    2..t

NODPYT
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:115  
 Sect OctLoc
   0     005   062201 012174                                                    2..|

BRKMNT
 Sect OctLoc
   0     006   062201 012204                                                    2...

CANT
 Sect OctLoc
   0     007   062201 012234                                                    2...

BDATTR
 Sect OctLoc
   0     010   062201 012314                                                    2...

NORSNN
 Sect OctLoc
   0     011   062201 012324                                                    2...

LDSC
 Sect OctLoc
   0     012   062201 000144                                                    2..d

NORSS
 Sect OctLoc
   0     013   062201 012254                                                    2...

NCGAU
 Sect OctLoc
   0     014   062201 015534                                                    2...

NOTAU
 Sect OctLoc
   0     015   062201 015474                                                    2...

CANCE
 Sect OctLoc
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:116  
   0     016   000003 777640   000026 006000   000000 177640   000000 006014    ................
   0     022   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     026   000000 400400   000000 000000   000000 000000   100000 000000    ............@...

CBUF
 Sect OctLoc
   0     032   037056 056056   115117 125116   124151 156147   040114 124043    ....MOUNTing LT#
   0     036   126117 114125   115105 040151   163040 115117   125116 124145    VOLUME is MOUNTe
   0     042   144*** ******                                                    d...

(unnamed)
 Sect OctLoc
   0     043   104120 040040   114124 040040   115124 040040   106124 040040    DP  LT  MT  FT
   0     047   117104 040040   103114 040040   060060 040040   071071 040040    OD  CL  00  99
   0     053   060061 040040   060062 040040   071072 040040   060063 040040    01  02  9:  03

(unnamed)
 Sect OctLoc
   3     000   777777 777377   700777 777777   077040 040040   040040 040040    ........?
   3     004   000003 641100   000000 000146   000003 006000   000000 000000    ...@...f........
   3     010   000011 006000   000002 006000   000005 006000   000005 777640    ................
   3     014   000074 200000   777777 777577   000005 377640   777777 400777    .<..............
   3     020   000000 000025   000020 006000   000010 006000   000000 006000    ................
   3     024   000000 000031   000000 000170   000025 006000   000024 006000    .......x........
   3     030   777777 777677   773777 777777   000000 000027   000032 006000    ................
   3     034   000040 400000   767777 777777   000007 777770   000010 400000    . ..............
      854    11136           /**/
      855    11137           /**/
      856    11138    1   END;

PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:117  
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   NK_SUBS.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   FR_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   EL$TABLES.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure FRX$OPR.
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:118  

 **** Variables and constants ****

  ****  Section 000 RoData FRX$OPR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC        r     1 BADLPCL                   10-0-0/w STRC        r     1 BDATTR
     6-0-0/w STRC        r     1 BRKMNT                    16-0-0/d STRC(432)   r     1 CANCE
     7-0-0/w STRC        r     1 CANT                      32-0-0/w STRC(297)   r     1 CBUF
     1-0-0/w STRC        r     1 DUPREEL                   12-0-0/w STRC        r     1 LDSC
    14-0-0/w STRC        r     1 NCGAU                      5-0-0/w STRC        r     1 NODPYT
     3-0-0/w STRC        r     1 NOMO                      11-0-0/w STRC        r     1 NORSNN
    13-0-0/w STRC        r     1 NORSS                      2-0-0/w STRC        r     1 NOSHR
    15-0-0/w STRC        r     1 NOTAU                      0-0-0/w STRC        r     1 WRNGTPE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @CG                        4-0-0/w PTR         r     1 @CGATTR
     3-0-0/w PTR         r     1 @CGTYPE                   54-0-0/d STRC(432)   r     1 AANCE
    72-0-0/w STRC(297)   r     1 ABUF                      72-0-0/w STRC(297)   r     1 ABUFR
    25-0-0/w SBIN        r     1 ANNCE                     33-0-0/w BIT         r     1 ATTR
    70-0-0/d CHAR(8)     r     1 AUACCT                    26-0-0/w UBIN        r     1 AVRCNT
    17-0-0/w UBIN        r     1 CCSE                      *0-0-0/c CHAR(20)    r     1 CG
    *0-0-0/w BIT (18)    r     1 CGATTR                   103-0-0/w STRC(324)   r     1 CGINFO
    *0-0-0/c CHAR(4)     r     1 CGTYPE                    12-0-0/w PTR         r     1 DCB$
    23-0-0/w BIT         r     1 DEVC                      34-0-0/w STRC(189)   r     1 FR_KMSG
     6-0-0/w PTR         r     1 LDCT$                     44-0-0/w STRC(252)   r     1 LMNT
    20-0-0/w BIT         r     1 M4                        22-0-0/w BIT         r     1 M5
    24-0-0/w UBIN        r     1 MODE                      27-0-0/w UBIN        r     1 OLTX
    10-0-0/w PTR         r     1 RA1$                      11-0-0/w PTR         r     1 RA2$
     7-0-0/w PTR         r     1 RAT$                      15-0-0/w SBIN        r     1 RCD
    42-0-0/d REMB        r     1 RESTRT                    14-0-0/c CHAR(2)     r     1 RNUM
    13-0-0/c CHAR(2)     r     1 RTYP                      16-0-0/w UBIN        r     1 SID
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:119  
    21-0-0/w UBIN        r     1 TDCT                      30-0-0/w STRC(108)   r     1 TRES

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 FM$SET$
     0-0-0/w PTR         r     1 FR$HD$(0:3)                0-0-0/w UBIN        r     1 FR_AVRCNT
     0-0-0/c CHAR(6)     r     1 FR_MMSGL                   0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(576)   r     1 B$U
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(288)   r     1 FM$DEV(0:0)
     0-0-0N  NULL        r     1 M$UC                       0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)
     0-0-0/w STRC(324)   r     1 RAT


   Procedure FRX$OPR requires 1391 words for executable code.
   Procedure FRX$OPR requires 86 words of local(AUTO) storage.

    No errors detected in file FRX$OPR.:E05TSI    .
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:120  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:121  
          MINI XREF LISTING

AANCE
     10407**DCL     10755--ASSIGN  10811<<ASSIGN  10817<>CALL    10862<<ASSIGN  10864<>CALL
AANCE.BUF_
     10407**DCL     10816<<ASSIGN  10863<<ASSIGN
AANCE.STATION_
     10409**DCL     10409--REDEF
AANCE.V.DVBYTE.VFC#
     10416**DCL     10416--REDEF
ABUF
     10431**DCL     10438--REDEF   10810<<ASSIGN  10859<<ASSIGN
ABUF.MTNG
     10432**DCL     10863--ASSIGN
ABUF.MTNG.VOL
     10436**DCL     10814<<ASSIGN  10861<<ASSIGN
ABUF.MTNG.YY
     10434**DCL     10812<<ASSIGN  10860<<ASSIGN
ABUFR.MNTD
     10440**DCL     10816--ASSIGN
ABUFR.MNTD.PREF
     10441**DCL     10815<<ASSIGN
ALTOUT IN PROCEDURE GETOLT
     11056**LABEL   11043--CALLALT
ALTRT
     10600**LABEL   10552--CALLALT 10605--CALLALT 10664--CALLALT 10742--CALLALT
ANNCE
        30**DCL     10546<<ASSIGN  10547<<ASSIGN  10808>>IF      10808>>IF      10809>>IF      10857>>IF
     10858<<ASSIGN
ATTR
        35**DCL     10487<<ASSIGN  10527<<ASSIGN  10539>>IF      10539<<ASSIGN  10628>>IF      10708>>IF
     10742<>CALL    10757>>ASSIGN  10824>>IF      10879>>IF      10950>>IF      11008>>IF
AUACCT
     10421**DCL     10713<<ASSIGN  10718>>IF      10718>>IF      10733>>IF      10733>>IF
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:122  
AVRCNT
        31**DCL     10549<<ASSIGN  10869>>IF
B$DO.ECCINFO
      1417**DCL      1418--REDEF
B$JIT.ACCN
      8038**DCL     10718>>IF      10733>>IF      10875>>ASSIGN
B$JIT.ARECX
      8140**DCL     10751>>ASSIGN  10752<<ASSIGN  10752>>ASSIGN  11049>>ASSIGN  11050<<ASSIGN  11050>>ASSIGN
B$JIT.CLRES
      8139**DCL     10690>>IF      10694>>IF      10695>>IF      10750<<ASSIGN
B$JIT.DCB$
      8128**DCL     10521>>ASSIGN  10819<<ASSIGN  10866<<ASSIGN
B$JIT.ERR
      8038**DCL     10504<<ASSIGN  10557<<ASSIGN  10579<<ASSIGN  10618<<ASSIGN  10640<<ASSIGN  10675<<ASSIGN
     10691<<ASSIGN  10702>>IF      10702<<ASSIGN  10721<<ASSIGN  10735<<ASSIGN  10766<<ASSIGN  10778<<ASSIGN
     10826<<ASSIGN  10832<<ASSIGN  10902<<ASSIGN  10919<<ASSIGN  10970<<ASSIGN  10976<<ASSIGN  11009<<ASSIGN
     11020<<ASSIGN  11022<<ASSIGN  11030>>IF      11030<<ASSIGN
B$JIT.ERR.CODE
      8039**DCL     10505<<ASSIGN
B$JIT.ERR.MID
      8039**DCL      8039--REDEF
B$JIT.MODE
      8033**DCL     10526>>ASSIGN  10546>>IF
B$JIT.MOUNTS
      8140**DCL     10796<<ASSIGN  10796>>ASSIGN
B$JIT.OLTA
      8140**DCL     10964>>IF      10996>>IF      11044<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      8143**DCL      8143--REDEF    8144--REDEF
B$JIT.PRIV.ACTIVE.MSYS
      8043**DCL     10718>>IF
B$JIT.SYSID
      8038**DCL     10525>>ASSIGN
B$JIT.TSLINE
      8141**DCL      8142--REDEF
B$JIT$
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:123  
        62**DCL      8033--IMP-PTR 10504>>ASSIGN  10505>>ASSIGN  10521>>ASSIGN  10525>>ASSIGN  10526>>ASSIGN
     10546>>IF      10557>>ASSIGN  10579>>ASSIGN  10618>>ASSIGN  10640>>ASSIGN  10675>>ASSIGN  10690>>IF
     10691>>ASSIGN  10694>>IF      10695>>IF      10702>>IF      10702>>ASSIGN  10718>>IF      10718>>IF
     10721>>ASSIGN  10733>>IF      10735>>ASSIGN  10750>>ASSIGN  10751>>ASSIGN  10752>>ASSIGN  10752>>ASSIGN
     10766>>ASSIGN  10778>>ASSIGN  10796>>ASSIGN  10796>>ASSIGN  10819>>ASSIGN  10826>>ASSIGN  10832>>ASSIGN
     10866>>ASSIGN  10875>>ASSIGN  10902>>ASSIGN  10919>>ASSIGN  10964>>IF      10970>>ASSIGN  10976>>ASSIGN
     10996>>IF      11009>>ASSIGN  11020>>ASSIGN  11022>>ASSIGN  11030>>IF      11030>>ASSIGN  11044>>ASSIGN
     11049>>ASSIGN  11050>>ASSIGN  11050>>ASSIGN
B$U.ASYNCH
      1354**DCL     10841>>IF
B$U.FLG.ANNCE
      1312**DCL     10546>>IF
B$U.MISC
      1396**DCL      1397--REDEF
B$USER.MISC
      1472**DCL      1473--REDEF
BADLPCL
      1224**DCL     10675>>ASSIGN
BDATTR
      1240**DCL     10832>>ASSIGN  11009>>ASSIGN
BDNUM
     10667**LABEL   10544--GOTO
BRKMNT
      1232**DCL     10919>>ASSIGN
BRKOUT
     10916**LABEL   10841--GOTO
CANCE
     10376**DCL     10811>>ASSIGN  10862>>ASSIGN
CANCE.STATION_
     10378**DCL     10378--REDEF
CANCE.V
     10379**DCL     10376--DCLINIT
CANCE.V.DVBYTE.VFC#
     10385**DCL     10385--REDEF
CANT
      1236**DCL     10902>>ASSIGN
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:124  
CBUF
     10422**DCL     10810>>ASSIGN  10859>>ASSIGN
CBUF.PREF
     10423**DCL     10815>>ASSIGN
CCSE
        24**DCL     10534<<ASSIGN  10535<<ASSIGN  10537<<ASSIGN  10541<<ASSIGN  10541>>ASSIGN  10542<<ASSIGN
     10542>>ASSIGN  10550>>DOCASE  10639<<ASSIGN  10642>>IF      10708>>IF
CG
        14**DCL         9--PROC    10484--ENTRY   10502<>CALL
CGATTR
        13**DCL         9--PROC    10484--ENTRY   10487>>ASSIGN
CGINFO
     10457**DCL     10502<>CALL
CGINFO.ATTR
     10464**DCL     10464--REDEF   10500<<ASSIGN
CGINFO.FLG.INPUT
     10463**DCL     10498<<ASSIGN
CGINFO.FLG.OUTPUT
     10463**DCL     10499<<ASSIGN
CGINFO.LENGTH
     10461**DCL     10494<<ASSIGN
CGINFO.NWINFO
     10465**DCL     10501<<ASSIGN
CGINFO.WHO.ACCT
     10462**DCL     10495<<ASSIGN
CGINFO.WHO.NAME
     10462**DCL     10496<<ASSIGN
CGINFO.WIDTH
     10461**DCL     10493<<ASSIGN
CGTYPE
        12**DCL         9--PROC    10484--ENTRY   10485>>ASSIGN  10486>>ASSIGN
CL_NXT
     10711**LABEL   10717--GOTO    10725--GOTO    10732--GOTO    10739--GOTO
CL_RES
     10732**LABEL   10716--GOTO
CNTMNT
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:125  
     10897**LABEL   10840--GOTO
CSE6SLD
     10632**LABEL   10632--CALLALT
CSEX
     10761**LABEL   10637--GOTO    10658--CALLALT
DCB$
        19**DCL     10521<<ASSIGN  10522>>ASSIGN  10523>>ASSIGN  10524>>ASSIGN  10527>>ASSIGN  10541>>IF
     10553>>IF      10666>>IF      10708>>IF      10715>>IF      10728>>ASSIGN  10729>>ASSIGN  10743>>ASSIGN
     10751>>ASSIGN  10759>>ASSIGN  10761>>ASSIGN  10791>>ASSIGN  10794>>IF      10800>>CALLBLT 10808>>IF
     10812>>ASSIGN  10819>>ASSIGN  10822>>IF      10823>>ASSIGN  10824>>ASSIGN  10825>>ASSIGN  10860>>ASSIGN
     10861>>ASSIGN  10866>>ASSIGN  10871>>ASSIGN  10874>>ASSIGN  10877>>ASSIGN  10878>>ASSIGN  10886>>ASSIGN
     10894>>CALL    10975>>ASSIGN  11043>>CALL    11084>>IF      11088>>IF      11088>>IF
DEVC
        28**DCL     10884<<ASSIGN  10888<<ASSIGN  10890<<ASSIGN  10896<>CALL    10936<>CALL
DMMT
     10830**LABEL   10602--CALLALT 10654--GOTO
DMMTDP
     10826**LABEL   10635--CALLALT
DMMTMT
     10649**LABEL   10648--CALLALT 10650--CALLALT 10661--CALLALT
DPRL
     10557**LABEL   10628--GOTO
DUPREEL
      1212**DCL     10579>>ASSIGN
ELA$SYSLOG
        55**DCL-ENT 10807--CALL
F$DCB.ACTPOS
      7695**DCL      7695--REDEF
F$DCB.ARS
      7670**DCL      7670--REDEF
F$DCB.ASN
      7685**DCL     10877>>ASSIGN
F$DCB.ATTR
      7688**DCL      7689--REDEF   10527>>ASSIGN  10824<<ASSIGN  11043<>CALL
F$DCB.AU
      7681**DCL     10715>>IF
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:126  
F$DCB.BORROW
      7703**DCL      7703--REDEF    7703--REDEF    7703--REDEF
F$DCB.CRECX
      7706**DCL     10751<<ASSIGN  10759>>ASSIGN
F$DCB.CSEED
      7707**DCL     10800>>CALLBLT 10886>>ASSIGN  11088>>IF      11088>>IF
F$DCB.DCBNAME.L
      7717**DCL      7717--IMP-SIZ
F$DCB.EOMCHAR
      7674**DCL      7674--REDEF
F$DCB.FLDID
      7698**DCL      7698--REDEF
F$DCB.FORM$
      7692**DCL      7692--REDEF
F$DCB.FSECT
      7708**DCL      7708--REDEF
F$DCB.FSN
      7685**DCL      7685--REDEF    7685--REDEF    7686--REDEF
F$DCB.FUN
      7684**DCL     10878>>ASSIGN
F$DCB.HEADER$
      7691**DCL      7691--REDEF
F$DCB.IORG
      7706**DCL     10728<<ASSIGN  10729<<ASSIGN  10743<<ASSIGN
F$DCB.IXTNSIZE
      7689**DCL      7689--REDEF
F$DCB.LASTSTA$
      7679**DCL      7679--REDEF
F$DCB.LVL
      7704**DCL      7704--REDEF
F$DCB.NAME.C
      7679**DCL      7679--REDEF
F$DCB.NOEOF
      7700**DCL      7700--REDEF
F$DCB.NRECS
      7690**DCL      7690--REDEF
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:127  
F$DCB.NRECX
      7709**DCL      7709--REDEF
F$DCB.OHDR
      7701**DCL      7701--REDEF
F$DCB.ORG
      7684**DCL      7684--REDEF
F$DCB.PRECNO
      7707**DCL      7707--REDEF
F$DCB.PSN
      7680**DCL     10541>>IF      10553>>IF      10666>>IF      10708>>IF      10808>>IF      10822>>IF
     10823<<ASSIGN  10861>>ASSIGN  10871>>ASSIGN  10874>>ASSIGN  10894<>CALL    11084>>IF
F$DCB.RCSZ
      7712**DCL      7712--REDEF
F$DCB.RES
      7680**DCL      7680--REDEF
F$DCB.RESNT.NUM
      7681**DCL     10524>>ASSIGN  10761<<ASSIGN  10791<<ASSIGN  10794>>IF      10975>>ASSIGN
F$DCB.RESNT.TYP
      7680**DCL     10523>>ASSIGN  10812>>ASSIGN  10860>>ASSIGN
F$DCB.SETX
      7692**DCL      7692--REDEF   10522<<ASSIGN  10825<<ASSIGN
F$DCB.TAB$
      7691**DCL      7692--REDEF
F$DCB.TDA
      7706**DCL      7706--REDEF
F$DCB.WSN
      7681**DCL      7681--REDEF
FM$DEV.USERLIST
      9574**DCL      9575--REDEF
FM$DEV.VSN
      9573**DCL     11088>>IF
FM$SET$
      9578**DCL      9573--IMP-PTR 11088>>IF
FORGET
     10919**LABEL   10910--GOTO
FPM$MNTOD
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:128  
        48**DCL-ENT 10894--CALL
FR$HD$
      7646**DCL     10698>>ASSIGN  10844>>ASSIGN  10947>>ASSIGN  11002>>ASSIGN  11064>>ASSIGN  11082>>ASSIGN
     11107>>ASSIGN
FRB$CCLS
        56**DCL-ENT 10514--CALL
FRS$CLSTRS
        54**DCL-ENT 10764--CALL    11054--CALL
FRS$OPSTRS
        52**DCL-ENT 10762--CALL    11052--CALL
FRS$RESADD
        53**DCL-ENT 10763--CALL    11053--CALL
FRZ$DSMT
        49**DCL-ENT 10837--CALL    11075--CALL
FRZ$GETRES
        50**DCL-ENT 10742--CALL    11043--CALL
FRZ$RRES
        51**DCL-ENT 10934--CALL
FR_AVRCNT
      7663**DCL     10549>>ASSIGN  10869>>IF
FR_KMSG
        36**DCL     10896<>CALL    10936<>CALL
FR_KMSG.ACCT
        38**DCL     10875<<ASSIGN
FR_KMSG.ASN
        40**DCL     10877<<ASSIGN  10885<<ASSIGN
FR_KMSG.DENS
        43**DCL     10879<<ASSIGN  10880<<ASSIGN
FR_KMSG.FRM
        39**DCL     10876<<ASSIGN
FR_KMSG.FUN
        41**DCL     10878<<ASSIGN
FR_KMSG.SER#
        37**DCL     10874<<ASSIGN
FR_KMSG.VSN
        42**DCL     10886<<ASSIGN
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:129  
FR_MMSGL
      7648**DCL     10896--CALL    10896<>CALL    10936--CALL    10936<>CALL
GETDN IN PROCEDURE GETLOW
     10992**ENTRY   10489--CALL    10552--CALL    10605--CALL    10643--CALL    10664--CALL
GETLOW
     10943**PROC    10632--CALL    10646--CALL    10659--CALL
GETLOW1 IN PROCEDURE GETLOW
     10946**ENTRY   10648--CALL    10650--CALL    10658--CALL    10661--CALL
GETOLT
     11042**PROC    10965--CALL    10997--CALL
KCO$TRMCONGOTCG
        58**DCL-ENT 10502--CALL
KCO$TRMGO
        59**DCL-ENT 10508--CALL
LDCT$
        15**DCL     10497<<ASSIGN  10498>>ASSIGN  10499>>ASSIGN  10502<>CALL    10508<>CALL
LDSC
      1248**DCL     10778>>ASSIGN
LMNT
     10357**DCL     10807<>CALL    10807--CALL
LMNT.DEVNAME
     10357**DCL     10806<<ASSIGN
LMNT.PSN
     10357**DCL     10799<<ASSIGN  10804<<ASSIGN
LMNT.REQ_UTS
     10357**DCL     10518<>CALL
LMNT.SYSID
     10357**DCL     10797<<ASSIGN
LMNT.VOLUME
     10357**DCL     10800<<CALLBLT 10803<<ASSIGN  10814>>ASSIGN
LOMNT
     10640**LABEL   10614--CALLALT
M$MWRITE
        61**DCL-ENT 10817--CALL    10864--CALL
M4
        25**DCL     10647<<ASSIGN  10649<<ASSIGN  10656<<ASSIGN  10660<<ASSIGN  10842<<ASSIGN  10843>>DOWHILE
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:130  
     10846>>IF      10853>>IF      10854<<ASSIGN  10944<<ASSIGN  10950>>IF
M5
        27**DCL     10657<<ASSIGN  10945<<ASSIGN  10950>>IF      10962>>IF      10976>>IF
MNT1
     10846**LABEL   10847--CALLALT
MNT2
     10851**LABEL   10671--GOTO    10848--GOTO
MNT3
     10892**LABEL   10912--GOTO
MNTBK
     10914**LABEL   10894--CALLALT 10897--CALLALT
MODE
        29**DCL     10502<>CALL    10505>>ASSIGN  10526<<ASSIGN  10742<>CALL    10934<>CALL    11043<>CALL
MOUNT
     10830**LABEL   10576--CALLALT 10610--CALLALT 10644--GOTO    10646--CALLALT
MSGON
     10863**LABEL   10864--CALLALT
MTDON
     10816**LABEL   10817--CALLALT
N$DCT$$
      8388**DCL      8388--IMP-PTR 10497>>ASSIGN  10713>>ASSIGN  10806>>ASSIGN
NCGAU
      1256**DCL     10735>>ASSIGN
NK$LDCT.DDT$
     10325**DCL     10325--REDEF
NK$LDCT.DEVNM
     10325**DCL     10806>>ASSIGN
NK$LDCT.DFLG.INPUT
     10327**DCL     10498>>ASSIGN
NK$LDCT.DFLG.OUTPUT
     10327**DCL     10499>>ASSIGN
NK$LDCT.IOQ$
     10324**DCL     10325--REDEF
NK$LDCT.LDCTX
     10326**DCL     10326--REDEF
NK$LDCT.LKFLG.ABORTED
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:131  
     10338**DCL     10339--REDEF
NK$LDCT.LOGON_ACCT
     10353**DCL     10713>>ASSIGN
NK$LDCT.RLCID.LDCTX
     10348**DCL     10348--REDEF
NK$LDCT.STA$
     10344**DCL     10345--REDEF
NK$LDCT.SYMB$
     10323**DCL     10323--REDEF   10323--REDEF   10324--REDEF
NK$LDCT$
      8388**DCL     10497>>ASSIGN  10713>>ASSIGN  10806>>ASSIGN
NODPDN
     10628**LABEL   10643--CALLALT
NODPYT
      1228**DCL     10766>>ASSIGN
NOMO
      1220**DCL     10504>>ASSIGN  10691>>ASSIGN  10976>>ASSIGN
NOOLT IN PROCEDURE GETLOW
     10966**LABEL   10965--CALLALT
NOOLT1 IN PROCEDURE GETLOW
     11001**LABEL   10997--CALLALT
NORSNN
      1244**DCL     11030>>ASSIGN
NORSS
      1252**DCL     10702>>ASSIGN
NOSHR
      1216**DCL     10618>>ASSIGN  11022>>ASSIGN
NOTAU
      1260**DCL     10721>>ASSIGN
OCI$MK_WR
        45**DCL-ENT 10896--CALL    10936--CALL
OLTX
        32**DCL     10748<<ASSIGN  10749<<ASSIGN  10749>>ASSIGN  10750>>ASSIGN  10963<<DOINDEX 10964>>IF
     10994<<ASSIGN  10995<<ASSIGN  10996>>IF      11044>>ASSIGN  11047>>IF      11080<<ASSIGN  11084>>IF
     11094>>IF      11095<<ASSIGN
RA1$
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:132  
        17**DCL     10577>>IF      10615>>IF      10616>>IF      10628>>IF      10629>>ASSIGN  10635>>IF
     10653<<ASSIGN  10741<<ASSIGN  10744>>IF      10753<<ASSIGN  10755<<ASSIGN  10756>>ASSIGN  10757>>ASSIGN
     10759>>ASSIGN  10760>>ASSIGN  10763>>CALL    10807<>CALL    10837>>CALL    10844<<ASSIGN  10845>>DOWHILE
     10846>>IF      10851<<ASSIGN  10851>>ASSIGN  11064<<ASSIGN  11065>>DOWHILE 11066>>IF      11066>>IF
     11070>>ASSIGN  11072<<ASSIGN  11072>>ASSIGN  11082<<ASSIGN  11083>>DOWHILE 11084>>IF      11084>>IF
     11088>>IF      11092<<ASSIGN  11092>>ASSIGN  11101>>IF      11101>>IF      11101>>IF      11101>>IF
     11106>>IF      11106>>IF      11109>>IF      11113>>ASSIGN  11114>>ASSIGN  11123>>IF      11124>>ASSIGN
     11125>>CALL    11130>>ASSIGN  11131>>ASSIGN  11132>>ASSIGN
RA2$
        18**DCL     10947<<ASSIGN  10949>>DOWHILE 10950>>IF      10950>>IF      10950>>IF      10950>>IF
     10950>>IF      10950>>IF      10957>>ASSIGN  10958>>ASSIGN  10960<<ASSIGN  10960>>ASSIGN  11043<>CALL
     11045>>ASSIGN  11063<<ASSIGN  11070<<ASSIGN  11074>>IF      11075>>CALL    11107<<ASSIGN  11108>>DOWHILE
     11109>>IF      11109>>IF      11109>>IF      11109>>IF      11114>>ASSIGN  11115>>ASSIGN  11118<<ASSIGN
     11118>>ASSIGN
RAT
      7276**DCL     10756<<ASSIGN  10756>>ASSIGN  10763<>CALL    10837<>CALL    10934<>CALL    11053<>CALL
     11075<>CALL
RAT.CLFLG.AUCTL
      7291**DCL     10716>>IF      10718>>IF      10727>>IF      10733>>IF
RAT.CLFLG.MULT
      7292**DCL     10714>>IF
RAT.DCTX
      7294**DCL     10497>>ASSIGN  10713>>ASSIGN  10776>>IF      10806>>ASSIGN  10825>>ASSIGN  10881>>ASSIGN
     11088>>IF
RAT.FLG
      7302**DCL     10787>>IF      10843>>DOWHILE 10846>>IF      10950>>IF      11109>>IF
RAT.FLG.DOWN
      7311**DCL     11101>>IF
RAT.FLG.FORM
      7309**DCL     10668>>IF      10876>>ASSIGN
RAT.FLG.MBIT
      7303**DCL     10606>>IF      11066>>IF
RAT.FLG.MBIT.MTD
      7304**DCL     10555>>IF      10577>>IF      10607>>IF      10615>>IF      10667>>IF      10669<<ASSIGN
     10792>>IF      10793<<ASSIGN  11101>>IF
RAT.FLG.MBIT.MTSC
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:133  
      7305**DCL     10609>>IF      10822<<ASSIGN
RAT.FLG.MBIT.SOL
      7306**DCL     10870<<ASSIGN  10912>>IF      10918<<ASSIGN  11106>>IF      11123>>IF      11124<<ASSIGN
RAT.FLG.MTNN
      7307**DCL     10794<<ASSIGN
RAT.FLG.OPN
      7308**DCL     10509<<ASSIGN  10616>>IF      10746<<ASSIGN  10788<<ASSIGN  11021>>IF
RAT.FLG.RUP
      7310**DCL     10666>>IF      10708>>IF
RAT.LNK$
      7277**DCL     10711>>ASSIGN  10851>>ASSIGN  10960>>ASSIGN  11028>>ASSIGN  11072>>ASSIGN  11092>>ASSIGN
     11118>>ASSIGN
RAT.M1
      7298**DCL     10708>>IF      11101>>IF      11106>>IF      11109>>IF
RAT.RCOD
      7289**DCL     10665>>IF
RAT.REEL.ASID
      7296**DCL     10553>>IF      10553>>IF      10609>>IF      10795<<ASSIGN  11066>>IF      11084>>IF
RAT.REEL.SER
      7297**DCL     10553>>IF      10666>>IF      10708>>IF      10799>>ASSIGN  10803>>ASSIGN  10823>>ASSIGN
     11084>>IF
RAT.RES
      7278**DCL     11113>>ASSIGN  11114<<ASSIGN  11114>>ASSIGN  11115<<ASSIGN  11129>>ASSIGN  11130<<ASSIGN
     11130>>ASSIGN  11131<<ASSIGN
RAT.RES.ACTX
      7282**DCL     10759<<ASSIGN  11049<<ASSIGN
RAT.RES.M2
      7281**DCL     10500>>ASSIGN  10628>>IF      10757<<ASSIGN  10824>>ASSIGN  10950>>IF      11008>>IF
     11101>>IF      11106>>IF      11109>>IF
RAT.RES.NUMB
      7280**DCL     10760<<ASSIGN  10791>>ASSIGN  10950>>IF      10957>>ASSIGN  10966>>ASSIGN  11004>>IF
     11047<<ASSIGN  11048<<ASSIGN
RAT.RES.RFLG.CANT
      7287**DCL     10840>>IF      10900>>IF      10933<<ASSIGN
RAT.RES.RFLG.NOSLD
      7286**DCL     10950>>IF      11051<<ASSIGN  11055<<ASSIGN  11101>>IF      11101>>IF      11109>>IF
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:134  
RAT.RES.RFLG.OLT
      7285**DCL     10934>>IF      11046<<ASSIGN
RAT.RES.SISID
      7279**DCL     10718>>IF      10727>>IF      10727>>IF      10732>>IF      10753>>IF      10795>>ASSIGN
     10899>>IF      10916>>IF      10950>>IF      11004>>IF      11109>>IF
RAT.SOLU
      7301**DCL     10872<<ASSIGN  11125<>CALL
RAT.SSER
      7299**DCL     10871<<ASSIGN
RAT.TYP
      7300**DCL     10708>>IF      10950>>IF      11004>>IF
RAT$
        16**DCL      7276--IMP-PTR 10497>>ASSIGN  10500>>ASSIGN  10509>>ASSIGN  10553>>IF      10553>>IF
     10553>>IF      10555>>IF      10606>>IF      10607>>IF      10609>>IF      10609>>IF      10629<<ASSIGN
     10635>>IF      10653>>ASSIGN  10665>>IF      10666>>IF      10666>>IF      10667>>IF      10668>>IF
     10669>>ASSIGN  10698<<ASSIGN  10701>>IF      10708>>IF      10708>>IF      10708>>IF      10708>>IF
     10711<<ASSIGN  10711>>ASSIGN  10713>>ASSIGN  10714>>IF      10716>>IF      10718>>IF      10718>>IF
     10727>>IF      10727>>IF      10727>>IF      10732>>IF      10733>>IF      10741>>ASSIGN  10742<>CALL
     10744>>IF      10746>>ASSIGN  10753>>IF      10753>>ASSIGN  10756>>ASSIGN  10776>>IF      10787>>IF
     10788>>ASSIGN  10791>>ASSIGN  10792>>IF      10793>>ASSIGN  10794>>ASSIGN  10795>>ASSIGN  10795>>ASSIGN
     10799>>ASSIGN  10803>>ASSIGN  10806>>ASSIGN  10822>>ASSIGN  10823>>ASSIGN  10824>>ASSIGN  10825>>ASSIGN
     10840>>IF      10843>>DOWHILE 10870>>ASSIGN  10871>>ASSIGN  10872>>ASSIGN  10876>>ASSIGN  10881>>ASSIGN
     10899>>IF      10900>>IF      10912>>IF      10916>>IF      10918>>ASSIGN  10933>>ASSIGN  10934>>IF
     10934>>CALL    10958<<ASSIGN  10966>>ASSIGN  11002<<ASSIGN  11003>>DOWHILE 11004>>IF      11004>>IF
     11004>>IF      11008>>IF      11021>>IF      11028<<ASSIGN  11028>>ASSIGN  11045<<ASSIGN  11046>>ASSIGN
     11047>>ASSIGN  11048>>ASSIGN  11049>>ASSIGN  11051>>ASSIGN  11053>>CALL    11055>>ASSIGN  11101>>IF
     11101>>IF      11106>>IF      11129>>ASSIGN  11130>>ASSIGN  11132<<ASSIGN
RCD
        22**DCL     10488<<ASSIGN  10528<<ASSIGN  10529<<ASSIGN  10531<<ASSIGN  10534>>ASSIGN  10796>>ASSIGN
     10796>>ASSIGN  10798>>IF      10830>>IF      10844>>ASSIGN  10882>>DOCASE  10947>>ASSIGN  10950>>IF
     11002>>ASSIGN  11064>>ASSIGN  11082>>ASSIGN  11087>>IF      11107>>ASSIGN
REOPN
     10546**LABEL   10519--REMEMBR 10787--GOTO    10869--GOTO    10914--GOTO    10916--GOTO
RESTRT
        44**DCL     10519<<REMEMBR 11056>>UNWIND
RNUM
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:135  
        21**DCL     10486<<ASSIGN  10524<<ASSIGN  10538<<ASSIGN  10542>>IF      10544>>IF      10544>>IF
     10694<<ASSIGN  10695<<ASSIGN  10696<<ASSIGN  10749>>IF      10750>>IF      10760>>ASSIGN  10761>>ASSIGN
     10948<<ASSIGN  10950>>IF      10957<<ASSIGN  10962>>IF      10966<<ASSIGN  10969>>IF      10974>>IF
     10975<<ASSIGN  10993>>IF      10994>>IF      11004>>IF
RTYP
        20**DCL     10485<<ASSIGN  10523<<ASSIGN  10529>>IF      10530>>IF      10530>>IF      10530>>IF
     10532<<ASSIGN  10535>>IF      10536>>IF      10708>>IF      10742<>CALL    10790>>IF      10893>>IF
     10935>>IF      10950>>IF      10962>>IF      10993>>IF      11004>>IF      11043<>CALL
S$CU$
      1483**DCL     10546>>IF      10841>>IF
SCRCOM
     10607**LABEL   10659--CALLALT
SID
        23**DCL     10525<<ASSIGN  10553>>IF      10609>>IF      10727>>IF      10742<>CALL    10753>>IF
     10797>>ASSIGN  10899>>IF      10916>>IF      10950>>IF      11004>>IF      11043<>CALL    11066>>IF
     11080>>ASSIGN
SLGO IN PROCEDURE SLIDE
     11113**LABEL   11116--GOTO
SLIDE
     11100**PROC    10602--CALL    10635--CALL    10847--CALL    11067--CALL
SLIDEGO IN PROCEDURE SLIDE
     11127**ENTRY   10744--CALL
SRSCR
     11062**PROC    10610--CALL
SRSCR1 IN PROCEDURE SRSCR
     11067**LABEL   11067--CALLALT
SRSER IN PROCEDURE SRSCR
     11079**ENTRY   10576--CALL    10614--CALL
SRSER0 IN PROCEDURE SRSCR
     11080**LABEL   11096--GOTO
SSR$REG
        46**DCL-ENT 10897--CALL
SSR$RUE
        47**DCL-ENT 11125--CALL
SSS$BLOCK
        57**DCL-ENT 10520--CALL
PL6.E3A0      #001=FRX$OPR File=FRX$OPR.:E05TSI                                  TUE 07/29/97 17:24 Page:136  
SSS$SYSTIME
        60**DCL-ENT 10518--CALL
S_CUN
        63**DCL     10840>>IF      10872>>ASSIGN
TDCT
        26**DCL     10839<<ASSIGN  10881<<ASSIGN  10894<>CALL    10896<>CALL    10935>>IF      10936<>CALL
TRES
        33**DCL     11113<<ASSIGN  11115>>ASSIGN  11129<<ASSIGN  11131>>ASSIGN
WRNGTPE
      1208**DCL     10557>>ASSIGN
WTPE
     10556**LABEL   10607--GOTO    10668--GOTO
