

15:24 JUL 28 '97 XUW_MACRO_C.:E05SI                                        1    
    1      /*M* XUW_MACRO_C - Wildcarding macros */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      %MACRO XUW_WILDCARD
    8            (FPTN=XUW_WILDCARD,
    9             STCLASS=STATIC,
   10             PATTERN=NIL,
   11             INPUT=NIL,
   12             TEMPLATE=NIL,
   13             OUTPUT=NIL,
   14             OUTPUT_LEN=0,
   15             CONTAINS(YES='1'B,NO='0'B)='0'B,
   16             WILD_CHAR='?');
   17      %LSET LISTDIR='0'B;
   18      %LSET LISTEXP='1'B;
   19      %LSET LISTCOM='0'B;
   20      %LSET LISTSUB='1'B;
   21      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   22      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   23      %LSET INIT=CHARTEXT('INIT');
   24      %ELSE;
   25      %LSET INIT=CHARTEXT('/*');
   26      %ENDIF;
   27      /*F* NAME:  XUW_WILDCARD
   28                          */
   29
   30                          /*K* CONTAINS = {YES|NO}  Specifies, if YES,
   31                          that this option will search for the
   32                          wildcarded pattern anywhere in the input
   33                          string.  If CONTAINS = NO, the
   34                          input string must exactly match the
   35                          pattern with no additional characters to
   36                          the right or left.  For example:
   37                          .FIF
15:24 JUL 28 '97 XUW_MACRO_C.:E05SI                                        2    
   38
   39                              INPUT = 'I am a Duckie!'
   40                              PATTERN = 'Duck?'
   41
   42                          .FIN
   43                          The PATTERN will match INPUT if
   44                          CONTAINS = YES.  The default is NO.
   45                          */
   46
   47                          /*K* ERROR - VALUE-BIT(36)  Contains the
   48                          result of the string match/format
   49                          operation in standard CP-6 error code
   50                          form.  The field ERROR.ERR# reflects the
   51                          results of the XUW service.  See XUW
   52                          Error Codes for details.
   53                          */
   54
   55                          /*K* INPUT = VARIABLE  Locates the input
   56                          string to be compared.  The input string
   57                          may not exceed 511 bytes or be zero.
   58                          The default is NIL.
   59                          */
   60
   61                          /*K* OUTPUT = VARIABLE  Locates the output
   62                          string produced by X$WILDFMT.
   63                          */
   64
   65                          /*K* OUTPUT_LEN - VALUE-DEC(0-?)  Specifies
   66                          the length (UBIN WORD) of the output
   67                          string produced by X$WILDFMT.
   68                          */
   69
   70                          /*K* PATTERN = VARIABLE  Locates the pattern
   71                          to be compared with the input string.
   72                          The pattern includes one or more
   73                          wildcard characters.  This string may
   74                          not be zero or exceed 511 bytes.  The
15:24 JUL 28 '97 XUW_MACRO_C.:E05SI                                        3    
   75                          default is NIL.
   76                          */
   77
   78                          /*K* TEMPLATE = VARIABLE  Specifies a
   79                          wildcarded string used to format the
   80                          output string.  The template string may
   81                          not be zero or exceed 511 bytes.  The
   82                          default is NIL.
   83                          */
   84
   85                          /*K* WILD_CHAR = VALUE-CHAR(1)  Specifies the
   86                          wildcard character.  The default is ?.
   87                          */
   88      DCL 1 FPTN STCLASS DALIGNED,
   89            2 PATTERN_ ALIGNED,
   90              3 BOUND SBIN(20) UNAL %INIT(SIZEV(PATTERN))%CHARTEXT('/**/'),
   91              3 * BIT(12) %INIT('7772'O)%CHARTEXT('/**/'),
   92              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
   93              3 PATTERN$ PTR %INIT(ADDR(PATTERN))%CHARTEXT('/**/'),
   94            2 INPUT_ ALIGNED,
   95              3 BOUND SBIN(20) UNAL %INIT(SIZEV(INPUT))%CHARTEXT('/**/'),
   96              3 * BIT(12) %INIT('7772'O)%CHARTEXT('/**/'),
   97              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
   98              3 INPUT$ PTR %INIT(ADDR(INPUT))%CHARTEXT('/**/'),
   99            2 TEMPLATE_ ALIGNED,
  100              3 BOUND SBIN(20) UNAL %INIT(SIZEV(TEMPLATE))%CHARTEXT('/**/'),
  101              3 * BIT(12) %INIT('7772'O)%CHARTEXT('/**/'),
  102              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
  103              3 TEMPLATE$ PTR %INIT(ADDR(TEMPLATE))%CHARTEXT('/**/'),
  104            2 OUTPUT_ ALIGNED,
  105              3 BOUND SBIN(20) UNAL %INIT(SIZEV(OUTPUT))%CHARTEXT('/**/'),
  106              3 * BIT(12) %INIT('7772'O)%CHARTEXT('/**/'),
  107              3 * BIT(4) %INIT('0'B)%CHARTEXT('/**/'),
  108              3 OUTPUT$ PTR %INIT(ADDR(OUTPUT))%CHARTEXT('/**/'),
  109            2 ERROR ALIGNED,
  110              3 FCG BIT(12) UNAL %INIT('0'O)%CHARTEXT('/**/'),
  111              3 MID BIT(6) UNAL %INIT('0'O)%CHARTEXT('/**/'),
15:24 JUL 28 '97 XUW_MACRO_C.:E05SI                                        4    
  112              3 MON BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  113              3 ERR# UBIN(14) UNAL %INIT(0)%CHARTEXT('/**/'),
  114              3 SEV UBIN(3) UNAL %INIT(0)%CHARTEXT('/**/'),
  115            2 WILD_CHAR# CALIGNED CHAR(1) %INIT(WILD_CHAR)%CHARTEXT('/**/'),
  116            2 CONTAINS# BIT(1) UNAL %INIT(CONTAINS)%CHARTEXT('/**/'),
  117            2 * BIT(8) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  118            2 * BIT(18) UNAL %INIT('0'B)%CHARTEXT('/**/'),
  119            2 %CHARTEXT('OUTPUT_LEN') UBIN WORD ALIGNED %INIT(OUTPUT_LEN)%CHARTEXT('/**/'),
  120            2 * BIT(36) ALIGNED %INIT('0'B)%CHARTEXT('/**/');
  121      %MEND;
  122      /**/
  123      %MACRO XUW_ENTRIES (OMIT=NIL);
  124      %IF TEXTCHAR(OMIT)~='X$WILDFMT';
  125          DCL X$WILDFMT ENTRY(1) ALTRET;
  126          DCL X$WILDCMP ENTRY(1) ALTRET;
  127          %ENDIF;
  128      %IF TEXTCHAR(OMIT)~='X$WILDTFMT';
  129          DCL X$WILDTFMT ENTRY(6) ALTRET;
  130          %ENDIF;
  131      %IF TEXTCHAR(OMIT)~='X$WILDTCMP';
  132          DCL X$WILDTCMP ENTRY(4) ALTRET;
  133          %ENDIF;
  134      %MEND;

