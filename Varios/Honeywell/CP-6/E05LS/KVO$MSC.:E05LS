VERSION E05

PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:1    
        1        1        /*M* KVO$MSC VDH miscellaneous output routines                                */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVO$ERSTO_ENDOF_SRD: PROC;
        9        9        /* The purpose of this routine is to erase from the current position
       10       10           to the end of the current subordinate real device.  A call to the
       11       11           RDH is setup which frames the area to be erased.                           */
       12       12
       13       13    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       14       14    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       15       15 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
       16       16 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
       17       17 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
       18       18 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
       19       19        %INCLUDE K_CP6_M;
       20      215        %G#GRPRND_E;
       21      225        %KV$MRD (STCLASS="BASED(Y@SRD$)");      /*  VDH Master real device            */
       22      272        %EQU KV_MRD=CHARTEXT('KV$SRD.MRD$->KV$MRD');
       23      273        %KV$PTR;                                /*  VDH Pointers, status              */
       24      316        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  VDH Subordinate real device       */
       25      591        %EQU KV_SRD=CHARTEXT('KV$SRD');
       26      592        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       27      663
       28      664    1   DCL Y@SRD$ PTR;
       29      665        %KV$USR_ERS(NAME = KV_USR_ERS, STCLASS = SYMREF READONLY);
       30      769        %KV$USR_ERS(NAME = USR_ERS, STCLASS = "");
       31      873        %KV$USR_SETATR(NAME = KV_USR_SETATR, STCLASS = SYMREF READONLY);
       32      996        %KV$USR_SETATR(NAME = USR_SETATR, STCLASS = "");
       33     1119
       34     1120    1   DCL 1 Y@ ALIGNED AUTO,
       35     1121        /* Flags to control what happens here                                         */
       36     1122
       37     1123        /* CMPOTP required to get DVCLINBIS right for AUTONL guys. */
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:2    
       38     1124
       39     1125    1          2 CMPOTP BIT(1),
       40     1126        %EQU CMPOTP='8000'X;
       41     1127
       42     1128        /* Delete field attribute declarations.                                       */
       43     1129
       44     1130    1          2 DLTATR BIT(1),
       45     1131        %EQU DLTATR='4000'X;
       46     1132
       47     1133        /* Begin at current position */
       48     1134
       49     1135    1          2 BGNCRT BIT(1),
       50     1136        %EQU BGNCRT='2000'X;
       51     1137
       52     1138        /* Begin at topleft position */
       53     1139
       54     1140    1          2 BGNTOP BIT(1),
       55     1141        %EQU BGNTOP='1000'X;
       56     1142
       57     1143        /* End at fieldend position */
       58     1144
       59     1145    1          2 ENDINP BIT(1),
       60     1146        %EQU ENDINP='0800'X;
       61     1147
       62     1148        /* End at bottomright position */
       63     1149
       64     1150    1          2 ENDBTM BIT(1),
       65     1151        %EQU ENDBTM='0400'X;
       66     1152
       67     1153        /* Erase the whole screen */
       68     1154
       69     1155    1          2 ERSMRD BIT(1),
       70     1156        %EQU ERSMRD='0200'X;
       71     1157
       72     1158        /* No HI_NONBLN optimization */
       73     1159
       74     1160    1          2 NO_OPT BIT(1);
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:3    
       75     1161        %EQU NO_OPT='0100'X;
       76     1162
       77     1163        %EJECT;
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:4    
       78     1164    1      Y@ = %(BGNCRT|ENDBTM|CMPOTP);
       79     1165    1      GOTO SUBCOMMON;
       80     1166
       81     1167        /* Erase to end of SRD, deleting attribute declarations.                      */
       82     1168
       83     1169    1   KVO$ERSTO_ENDOF_SRD_DLTATR: ENTRY;
       84     1170
       85     1171    1      Y@ = %(BGNCRT|ENDBTM|CMPOTP|DLTATR);
       86     1172    1      GOTO SUBCOMMON;
       87     1173
       88     1174        /* Erase to end of input field. If none declared, erase to end
       89     1175           of SRD.                                                                    */
       90     1176
       91     1177    1   KVO$ERSTO_ENDOF_INP: ENTRY;
       92     1178
       93     1179    1      Y@ = %(BGNCRT|ENDINP|CMPOTP);
       94     1180        /* Make sure SRD.CRT.PST and DVCLINBIS are correct.
       95     1181           On autonl devices, they may not be if positioning is pending               */
       96     1182
       97     1183    1      GOTO SUBCOMMON;
       98     1184
       99     1185        /* Erase the entire SRD.                                                      */
      100     1186
      101     1187    1   KVO$ERSSRD: ENTRY;
      102     1188    1      Y@ = %(BGNTOP|ENDBTM|DLTATR|NO_OPT);
      103     1189    1      GOTO SUBCOMMON;
      104     1190
      105     1191        /* Erase the SRD through HI_NONBLN_PST. */
      106     1192
      107     1193    1   KVO$ERSSRDTO_HI_NONBLN: ENTRY;
      108     1194    1      Y@ = %(BGNTOP|ENDBTM|DLTATR);
      109     1195    1      GOTO SUBCOMMON;                      /* LOOK BELOW                         */
      110     1196
      111     1197        /* Erase the entire device                                                    */
      112     1198
      113     1199    1   KVO$ERSMRD: ENTRY;
      114     1200    1      Y@ = %(ERSMRD|NO_OPT);
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:5    
      115     1201    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      116     1202    1      Y@SRD$ = KV$PTR.SRD$;
      117     1203    2      IF NOT %KV_MRD.CTNFRM THEN DO;
      118     1204    2         USR_ERS = KV_USR_ERS;
      119     1205    2         IF Y@.CMPOTP AND %KV_VDI.OTPCNDPND.PST~=0 THEN CALL KVV$CALUSR_PST;
      120     1206    3         IF Y@.ERSMRD THEN DO;
      121     1207    3            USR_ERS.ENDPHSCLM = %KV_MRD.WDT;
      122     1208    3            USR_ERS.BTMRHT.CLM = USR_ERS.ENDPHSCLM;
      123     1209    3            USR_ERS.BTMRHT.LIN = %KV_MRD.LNG;
      124     1210    3         END; ELSE DO;
      125     1211    4            IF Y@.ENDINP AND %KV_SRD.FLDEND.CLM~=0 THEN DO;
      126     1212    4               USR_ERS.ENDPHSCLM = %KV_SRD.FLDEND.CLM;
      127     1213    4               USR_ERS.BTMRHT.LIN = %KV_SRD.FLDEND.LIN;
      128     1214    4            END; ELSE DO;
      129     1215    4               USR_ERS.ENDPHSCLM = %KV_SRD.BTMRHT.CLM;
      130     1216    4               USR_ERS.BTMRHT.LIN = %KV_SRD.BTMRHT.LIN;
      131     1217    4            END;
      132     1218    3            USR_ERS.BTMRHT.CLM = %KV_SRD.BTMRHT.CLM;
      133     1219    3            USR_ERS.TOPLFT.CLM = %KV_SRD.TOPLFT.CLM;
      134     1220    4            IF Y@.BGNCRT THEN DO;
      135     1221    4               IF %KV_SRD.CRT_PST>%KV_SRD.HI_NONBLN_PST THEN RETURN;
      136     1222    4               USR_ERS.BGNPHSCLM = %KV_SRD.CRT.CLM;
      137     1223    4               USR_ERS.TOPLFT.LIN = %KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS;
      138     1224    4            END; ELSE DO;
      139     1225    4               USR_ERS.BGNPHSCLM = %KV_SRD.TOPLFT.CLM;
      140     1226    4               USR_ERS.TOPLFT.LIN = %KV_SRD.TOPLFT.LIN;
      141     1227    4            END;
      142     1228    3         END;
      143     1229    2         USR_ERS.DLTATR = Y@.DLTATR;
      144     1230    2         IF Y@.NO_OPT THEN %KV_SRD.HI_NONBLN = USR_ERS.BTMRHT;
      145     1231    2         IF Y@&%(ERSMRD|BGNTOP) AND %KV_MRD.DCLATRWHNOTP
      146     1232    3           AND %KV_MRD.DVCATR&%(G#GRPRND_UNDSCR|G#GRPRND_RVRVID) THEN DO;
      147     1233    3            USR_SETATR = KV_USR_SETATR;
      148     1234    3            USR_SETATR.PHSPST = USR_ERS.TOPLFT;
      149     1235    3            CALL KVV$CALUSR (USR_SETATR);
      150     1236    3         END;
      151     1237    2         CALL KVV$CALUSR (USR_ERS);
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:6    
      152     1238    2         USR_ERS.BTMRHT.CLM = USR_ERS.ENDPHSCLM;
      153     1239    3         IF USR_ERS.BTMRHT_PST>=%KV_SRD.HI_NONBLN_PST THEN DO;
      154     1240
      155     1241        /* The ending physical position of the erasure is at or beyond
      156     1242           the previous hi non-blank position, so we may have a new,
      157     1243           lower hi non-blank position.                                               */
      158     1244
      159     1245    4            IF (USR_ERS.BGNPHSCLM <= USR_ERS.TOPLFT.CLM) THEN DO;
      160     1246
      161     1247        /* We started the erasure in the left margin column.
      162     1248           the highest non-blank character is at most on the previous line.           */
      163     1249
      164     1250    4               %KV_SRD.HI_NONBLN.CLM = USR_ERS.BTMRHT.CLM;
      165     1251    4               %KV_SRD.HI_NONBLN.LIN = USR_ERS.TOPLFT.LIN-%KV_SRD.DVCLINBIS-1;
      166     1252    4            END; ELSE DO;
      167     1253
      168     1254        /* We didn't start the erasure on the left margin column* highest non-blank ch*/
      169     1255
      170     1256    4               %KV_SRD.HI_NONBLN.CLM = USR_ERS.BGNPHSCLM-1;
      171     1257    4               %KV_SRD.HI_NONBLN.LIN = USR_ERS.TOPLFT.LIN-%KV_SRD.DVCLINBIS;
      172     1258    4            END /* IF */;
      173     1259    3         END /* IF */;
      174     1260    2         %KV_SRD.VRTPSTOK = '1'B;
      175     1261    2         %KV_SRD.HI_NONBLNVRT = '1'B;
      176     1262    2      END /* IF */;
      177     1263    1   END /* SUBROUTINE */;
      178     1264
      179     1265        %EOD;

PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:7    
--  Include file information  --

   K_CP6_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$ERSTO_ENDOF_SRD.

   Procedure KVO$ERSTO_ENDOF_SRD requires 325 words for executable code.
   Procedure KVO$ERSTO_ENDOF_SRD requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:8    

 Object Unit name= KVO$ERSTO_ENDOF_SRD                        File name= KVO$MSC.:E05TOU
 UTS= JUL 30 '97 02:09:00.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   325    145  KVO$ERSTO_ENDOF_SRD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KVO$ERSTO_ENDOF_SRD
     0      C                  yes      Std        0  KVO$ERSTO_ENDOF_SRD_DLTATR
     0     18                  yes      Std        0  KVO$ERSTO_ENDOF_INP
     0     24                  yes      Std        0  KVO$ERSSRD
     0     30                  yes      Std        0  KVO$ERSSRDTO_HI_NONBLN
     0     3C                  yes      Std        0  KVO$ERSMRD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 KVV$CALUSR_PST
 yes     yes           Std       1 KVV$CALUSR
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    KV_USR_ERS                       r    KV_USR_SETATR
r    G$ROS$
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:10   


        1        1        /*M* KVO$MSC VDH miscellaneous output routines                                */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVO$ERSTO_ENDOF_SRD: PROC;

      8   0 000000  D380 0000 0000  xent KVO$ERSTO_ENDOF*LNJ,B5   X6A_AUTO_0
          0 000003       0014 0000                       DC       20,0

        9        9        /* The purpose of this routine is to erase from the current position
       10       10           to the end of the current subordinate real device.  A call to the
       11       11           RDH is setup which frames the area to be erased.                           */
       12       12
       13       13    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       14       14    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       15       15 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
       16       16 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
       17       17 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
       18       18 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
       19       19        %INCLUDE K_CP6_M;
       20      215        %G#GRPRND_E;
       21      225        %KV$MRD (STCLASS="BASED(Y@SRD$)");      /*  VDH Master real device            */
       22      272        %EQU KV_MRD=CHARTEXT('KV$SRD.MRD$->KV$MRD');
       23      273        %KV$PTR;                                /*  VDH Pointers, status              */
       24      316        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  VDH Subordinate real device       */
       25      591        %EQU KV_SRD=CHARTEXT('KV$SRD');
       26      592        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
       27      663
       28      664    1   DCL Y@SRD$ PTR;
       29      665        %KV$USR_ERS(NAME = KV_USR_ERS, STCLASS = SYMREF READONLY);
       30      769        %KV$USR_ERS(NAME = USR_ERS, STCLASS = "");
       31      873        %KV$USR_SETATR(NAME = KV_USR_SETATR, STCLASS = SYMREF READONLY);
       32      996        %KV$USR_SETATR(NAME = USR_SETATR, STCLASS = "");
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:11   
       33     1119
       34     1120    1   DCL 1 Y@ ALIGNED AUTO,
       35     1121        /* Flags to control what happens here                                         */
       36     1122
       37     1123        /* CMPOTP required to get DVCLINBIS right for AUTONL guys. */
       38     1124
       39     1125    1          2 CMPOTP BIT(1),
       40     1126        %EQU CMPOTP='8000'X;
       41     1127
       42     1128        /* Delete field attribute declarations.                                       */
       43     1129
       44     1130    1          2 DLTATR BIT(1),
       45     1131        %EQU DLTATR='4000'X;
       46     1132
       47     1133        /* Begin at current position */
       48     1134
       49     1135    1          2 BGNCRT BIT(1),
       50     1136        %EQU BGNCRT='2000'X;
       51     1137
       52     1138        /* Begin at topleft position */
       53     1139
       54     1140    1          2 BGNTOP BIT(1),
       55     1141        %EQU BGNTOP='1000'X;
       56     1142
       57     1143        /* End at fieldend position */
       58     1144
       59     1145    1          2 ENDINP BIT(1),
       60     1146        %EQU ENDINP='0800'X;
       61     1147
       62     1148        /* End at bottomright position */
       63     1149
       64     1150    1          2 ENDBTM BIT(1),
       65     1151        %EQU ENDBTM='0400'X;
       66     1152
       67     1153        /* Erase the whole screen */
       68     1154
       69     1155    1          2 ERSMRD BIT(1),
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:12   
       70     1156        %EQU ERSMRD='0200'X;
       71     1157
       72     1158        /* No HI_NONBLN optimization */
       73     1159
       74     1160    1          2 NO_OPT BIT(1);
       75     1161        %EQU NO_OPT='0100'X;
       76     1162
       77     1163        %EJECT;
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:13   
       78     1164    1      Y@ = %(BGNCRT|ENDBTM|CMPOTP);

   1164   0 000005  E870 A400                            LDR,R6   -23552,IMO
          0 000007  6048                                 SOR,R6   8
          0 000008  E7C7 0011                            STH,R6   Y@,AUTO

       79     1165    1      GOTO SUBCOMMON;

   1165   0 00000A  0F81 003B                            B        s:1200,PREL

       80     1166
       81     1167        /* Erase to end of SRD, deleting attribute declarations.                      */
       82     1168
       83     1169    1   KVO$ERSTO_ENDOF_SRD_DLTATR: ENTRY;

   1169   0 00000C  D380 0000 0000  xent KVO$ERSTO_ENDOF*LNJ,B5   X6A_AUTO_0
          0 00000F       0014 0000                       DC       20,0

       84     1170
       85     1171    1      Y@ = %(BGNCRT|ENDBTM|CMPOTP|DLTATR);

   1171   0 000011  E870 E400                            LDR,R6   -7168,IMO
          0 000013  6048                                 SOR,R6   8
          0 000014  E7C7 0011                            STH,R6   Y@,AUTO

       86     1172    1      GOTO SUBCOMMON;

   1172   0 000016  0F81 002F                            B        s:1200,PREL

       87     1173
       88     1174        /* Erase to end of input field. If none declared, erase to end
       89     1175           of SRD.                                                                    */
       90     1176
       91     1177    1   KVO$ERSTO_ENDOF_INP: ENTRY;

   1177   0 000018  D380 0000 0000  xent KVO$ERSTO_ENDOF*LNJ,B5   X6A_AUTO_0
          0 00001B       0014 0000                       DC       20,0
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:14   

       92     1178
       93     1179    1      Y@ = %(BGNCRT|ENDINP|CMPOTP);

   1179   0 00001D  E870 A800                            LDR,R6   -22528,IMO
          0 00001F  6048                                 SOR,R6   8
          0 000020  E7C7 0011                            STH,R6   Y@,AUTO

       94     1180        /* Make sure SRD.CRT.PST and DVCLINBIS are correct.
       95     1181           On autonl devices, they may not be if positioning is pending               */
       96     1182
       97     1183    1      GOTO SUBCOMMON;

   1183   0 000022  0F81 0023                            B        s:1200,PREL

       98     1184
       99     1185        /* Erase the entire SRD.                                                      */
      100     1186
      101     1187    1   KVO$ERSSRD: ENTRY;

   1187   0 000024  D380 0000 0000  xent KVO$ERSSRD      LNJ,B5   X6A_AUTO_0
          0 000027       0014 0000                       DC       20,0

      102     1188    1      Y@ = %(BGNTOP|ENDBTM|DLTATR|NO_OPT);

   1188   0 000029  E870 5500                            LDR,R6   21760,IMO
          0 00002B  6048                                 SOR,R6   8
          0 00002C  E7C7 0011                            STH,R6   Y@,AUTO

      103     1189    1      GOTO SUBCOMMON;

   1189   0 00002E  0F81 0017                            B        s:1200,PREL

      104     1190
      105     1191        /* Erase the SRD through HI_NONBLN_PST. */
      106     1192
      107     1193    1   KVO$ERSSRDTO_HI_NONBLN: ENTRY;
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:15   

   1193   0 000030  D380 0000 0000  xent KVO$ERSSRDTO_HI*LNJ,B5   X6A_AUTO_0
          0 000033       0014 0000                       DC       20,0

      108     1194    1      Y@ = %(BGNTOP|ENDBTM|DLTATR);

   1194   0 000035  E870 5400                            LDR,R6   21504,IMO
          0 000037  6048                                 SOR,R6   8
          0 000038  E7C7 0011                            STH,R6   Y@,AUTO

      109     1195    1      GOTO SUBCOMMON;                      /* LOOK BELOW                         */

   1195   0 00003A  0F81 000B                            B        s:1200,PREL

      110     1196
      111     1197        /* Erase the entire device                                                    */
      112     1198
      113     1199    1   KVO$ERSMRD: ENTRY;

   1199   0 00003C  D380 0000 0000  xent KVO$ERSMRD      LNJ,B5   X6A_AUTO_0
          0 00003F       0014 0000                       DC       20,0

      114     1200    1      Y@ = %(ERSMRD|NO_OPT);

   1200   0 000041  E870 0300                            LDR,R6   768,IMO
          0 000043  6048                                 SOR,R6   8
          0 000044  E7C7 0011                            STH,R6   Y@,AUTO

   1200   0                              SUBCOMMON       null
      115     1201    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      116     1202    1      Y@SRD$ = KV$PTR.SRD$;

   1202   0 000046  EC80 0000 0000  xsym SUBCOMMON       LDB,B6   KV$PTR$
          0 000049  DCC6 000A                            LDB,B5   10,B6
          0 00004B  DFC7 0004                            STB,B5   Y@SRD$,AUTO

      117     1203    2      IF NOT %KV_MRD.CTNFRM THEN DO;
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:16   

   1203   0 00004D  CC85                                 LDB,B4   ,B5
          0 00004E  82C4 0018                            LB,'0800'X        24,B4
          0 000050       0800
          0 000051  0501 00F0                            BBT      s:1263,PREL

      118     1204    2         USR_ERS = KV_USR_ERS;

   1204   0 000053  AB80 0000 0000  xsym                 LAB,B2   KV_USR_ERS
          0 000056  2C00                                 LDV,R2   0
          0 000057  6C0E                                 LDV,R6   14
          0 000058  BB87                                 LAB,B3   ,AUTO
          0 000059  3C0C                                 LDV,R3   12
          0 00005A  0008                                 MMM

      119     1205    2         IF Y@.CMPOTP AND %KV_VDI.OTPCNDPND.PST~=0 THEN CALL KVV$CALUSR_PST;

   1205   0 00005B  89C7 0011                            CMZ      Y@,AUTO
          0 00005D  0881 000F                            BAGE     s:1206,PREL
          0 00005F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000062  DC86                                 LDB,B5   ,B6
          0 000063  E845 001A                            LDR,R6   26,B5
          0 000065  6901 0007                            BEZ,R6   s:1206,PREL

   1205   0 000067  CBF0 0000                            LAB,B4   0,IMO
          0 000069  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 00006C       0001                            DC       s:1206,PREL

      120     1206    3         IF Y@.ERSMRD THEN DO;

   1206   0 00006D  82C7 0011                            LB,'0200'X        Y@,AUTO
   1206   0 00006F       0200
          0 000070  0581 0011                            BBF      s:1211,PREL

      121     1207    3            USR_ERS.ENDPHSCLM = %KV_MRD.WDT;

   1207   0 000072  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:17   
          0 000074  DC86                                 LDB,B5   ,B6
          0 000075  E845 000B                            LDR,R6   11,B5
          0 000077  EF47 000C                            STR,R6   USR_ERS+6,AUTO

      122     1208    3            USR_ERS.BTMRHT.CLM = USR_ERS.ENDPHSCLM;

   1208   0 000079  EF47 000A                            STR,R6   USR_ERS+4,AUTO

      123     1209    3            USR_ERS.BTMRHT.LIN = %KV_MRD.LNG;

   1209   0 00007B  DC86                                 LDB,B5   ,B6
          0 00007C  D2C5 0015                            LLH,R5   21,B5
          0 00007E  DF47 0009                            STR,R5   USR_ERS+3,AUTO

      124     1210    3         END; ELSE DO;

   1210   0 000080  0F81 004A                            B        s:1229,PREL

      125     1211    4            IF Y@.ENDINP AND %KV_SRD.FLDEND.CLM~=0 THEN DO;

   1211   0 000082  82C7 0011                            LB,'0800'X        Y@,AUTO
   1211   0 000084       0800
          0 000085  0581 000F                            BBF      s:1215,PREL
          0 000087  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          0 000089  E846 0011                            LDR,R6   17,B6
          0 00008B  6901 0009                            BEZ,R6   s:1215,PREL

      126     1212    4               USR_ERS.ENDPHSCLM = %KV_SRD.FLDEND.CLM;

   1212   0 00008D  EF47 000C                            STR,R6   USR_ERS+6,AUTO

      127     1213    4               USR_ERS.BTMRHT.LIN = %KV_SRD.FLDEND.LIN;

   1213   0 00008F  D846 0010                            LDR,R5   16,B6
          0 000091  DF47 0009                            STR,R5   USR_ERS+3,AUTO

      128     1214    4            END; ELSE DO;
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:18   

   1214   0 000093  0F81 000B                            B        s:1218,PREL

      129     1215    4               USR_ERS.ENDPHSCLM = %KV_SRD.BTMRHT.CLM;

   1215   0 000095  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          0 000097  E846 000C                            LDR,R6   12,B6
          0 000099  EF47 000C                            STR,R6   USR_ERS+6,AUTO

      130     1216    4               USR_ERS.BTMRHT.LIN = %KV_SRD.BTMRHT.LIN;

   1216   0 00009B  D846 000B                            LDR,R5   11,B6
          0 00009D  DF47 0009                            STR,R5   USR_ERS+3,AUTO

      131     1217    4            END;

      132     1218    3            USR_ERS.BTMRHT.CLM = %KV_SRD.BTMRHT.CLM;

   1218   0 00009F  C846 000C                            LDR,R4   12,B6
          0 0000A1  CF47 000A                            STR,R4   USR_ERS+4,AUTO

      133     1219    3            USR_ERS.TOPLFT.CLM = %KV_SRD.TOPLFT.CLM;

   1219   0 0000A3  B846 000A                            LDR,R3   10,B6
          0 0000A5  BF47 0008                            STR,R3   USR_ERS+2,AUTO

      134     1220    4            IF Y@.BGNCRT THEN DO;

   1220   0 0000A7  82C7 0011                            LB,'2000'X        Y@,AUTO
   1220   0 0000A9       2000
          0 0000AA  0581 001A                            BBF      s:1225,PREL

      135     1221    4               IF %KV_SRD.CRT_PST>%KV_SRD.HI_NONBLN_PST THEN RETURN;

   1221   0 0000AC  8CC6 0015                            LDI      21,B6
          0 0000AE  84C6 0017                            SID      23,B6
          0 0000B0  6801 0008                            BLZ,R6   s:1222,PREL
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:19   
          0 0000B2  6A01 0003                            BGZ,R6   s:1221+10,PREL
          0 0000B4  7901 0004                            BEZ,R7   s:1222,PREL

   1221   0 0000B6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      136     1222    4               USR_ERS.BGNPHSCLM = %KV_SRD.CRT.CLM;

   1222   0 0000B9  E846 0016                            LDR,R6   22,B6
          0 0000BB  EF47 000B                            STR,R6   USR_ERS+5,AUTO

      137     1223    4               USR_ERS.TOPLFT.LIN = %KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS;

   1223   0 0000BD  A846 0015                            LDR,R2   21,B6
          0 0000BF  AA46 0019                            ADD,R2   25,B6
          0 0000C1  AF47 0007                            STR,R2   USR_ERS+1,AUTO

      138     1224    4            END; ELSE DO;

   1224   0 0000C3  0F81 0007                            B        s:1229,PREL

      139     1225    4               USR_ERS.BGNPHSCLM = %KV_SRD.TOPLFT.CLM;

   1225   0 0000C5  BF47 000B                            STR,R3   USR_ERS+5,AUTO

      140     1226    4               USR_ERS.TOPLFT.LIN = %KV_SRD.TOPLFT.LIN;

   1226   0 0000C7  A846 0009                            LDR,R2   9,B6
          0 0000C9  AF47 0007                            STR,R2   USR_ERS+1,AUTO

      141     1227    4            END;

      142     1228    3         END;

      143     1229    2         USR_ERS.DLTATR = Y@.DLTATR;

   1229   0 0000CB  E847 0011                            LDR,R6   Y@,AUTO
          0 0000CD  6047                                 SOR,R6   7
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:20   
          0 0000CE  EAC7 0006                            SRM,R6,'0080'X    USR_ERS,AUTO
          0 0000D0       0080

      144     1230    2         IF Y@.NO_OPT THEN %KV_SRD.HI_NONBLN = USR_ERS.BTMRHT;

   1230   0 0000D1  82C7 0011                            LB,'0100'X        Y@,AUTO
   1230   0 0000D3       0100
          0 0000D4  0581 0005                            BBF      s:1231,PREL

   1230   0 0000D6  8CC7 0009                            LDI      USR_ERS+3,AUTO
          0 0000D8  8D46 0017                            SDI      23,B6

      145     1231    2         IF Y@&%(ERSMRD|BGNTOP) AND %KV_MRD.DCLATRWHNOTP

   1231   0 0000DA  E2C7 0011                            LLH,R6   Y@,AUTO
          0 0000DC  6008                                 SOL,R6   8
          0 0000DD  E570 1200                            AND,R6   4608,IMO
          0 0000DF  6901 0026                            BEZ,R6   s:1237,PREL
          0 0000E1  DC86                                 LDB,B5   ,B6
          0 0000E2  82C5 0018                            LB,'0200'X        24,B5
          0 0000E4       0200
          0 0000E5  0581 0020                            BBF      s:1237,PREL
          0 0000E7  E2C5 001F                            LLH,R6   31,B5
          0 0000E9  6008                                 SOL,R6   8
          0 0000EA  E570 0900                            AND,R6   2304,IMO
          0 0000EC  6901 0019                            BEZ,R6   s:1237,PREL

      146     1232    3           AND %KV_MRD.DVCATR&%(G#GRPRND_UNDSCR|G#GRPRND_RVRVID) THEN DO;

      147     1233    3            USR_SETATR = KV_USR_SETATR;

   1233   0 0000EE  AB80 0000 0000  xsym                 LAB,B2   KV_USR_SETATR
          0 0000F1  2C00                                 LDV,R2   0
          0 0000F2  6C08                                 LDV,R6   8
          0 0000F3  BB87                                 LAB,B3   ,AUTO
          0 0000F4  3C1A                                 LDV,R3   26
          0 0000F5  0008                                 MMM
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:21   

      148     1234    3            USR_SETATR.PHSPST = USR_ERS.TOPLFT;

   1234   0 0000F6  8CC7 0007                            LDI      USR_ERS+1,AUTO
          0 0000F8  8D47 000E                            SDI      USR_SETATR+1,AUTO

      149     1235    3            CALL KVV$CALUSR (USR_SETATR);

   1235   0 0000FA  EBC7 000D                            LAB,B6   USR_SETATR,AUTO
          0 0000FC  EFC7 0012                            STB,B6   Y@+1,AUTO
          0 0000FE  BBC7 0012                            LAB,B3   Y@+1,AUTO
          0 000100  CBF0 0100                            LAB,B4   256,IMO
          0 000102  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          0 000105       0001                            DC       s:1237,PREL

      150     1236    3         END;

      151     1237    2         CALL KVV$CALUSR (USR_ERS);

   1237   0 000106  EBC7 0006                            LAB,B6   USR_ERS,AUTO
          0 000108  EFC7 0012                            STB,B6   Y@+1,AUTO
          0 00010A  BBC7 0012                            LAB,B3   Y@+1,AUTO
          0 00010C  CBF0 0100                            LAB,B4   256,IMO
          0 00010E  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          0 000111       0001                            DC       s:1238,PREL

      152     1238    2         USR_ERS.BTMRHT.CLM = USR_ERS.ENDPHSCLM;

   1238   0 000112  E847 000C                            LDR,R6   USR_ERS+6,AUTO
          0 000114  EF47 000A                            STR,R6   USR_ERS+4,AUTO

      153     1239    3         IF USR_ERS.BTMRHT_PST>=%KV_SRD.HI_NONBLN_PST THEN DO;

   1239   0 000116  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          0 000118  8CC7 0009                            LDI      USR_ERS+3,AUTO
          0 00011A  84C6 0017                            SID      23,B6
          0 00011C  6801 001F                            BLZ,R6   s:1260,PREL
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:22   

      154     1240
      155     1241        /* The ending physical position of the erasure is at or beyond
      156     1242           the previous hi non-blank position, so we may have a new,
      157     1243           lower hi non-blank position.                                               */
      158     1244
      159     1245    4            IF (USR_ERS.BGNPHSCLM <= USR_ERS.TOPLFT.CLM) THEN DO;

   1245   0 00011E  E847 000B                            LDR,R6   USR_ERS+5,AUTO
          0 000120  6801 0012                            BLZ,R6   s:1256,PREL
          0 000122  E947 0008                            CMR,R6   USR_ERS+2,AUTO
          0 000124  0A01 000E                            BAG      s:1256,PREL

      160     1246
      161     1247        /* We started the erasure in the left margin column.
      162     1248           the highest non-blank character is at most on the previous line.           */
      163     1249
      164     1250    4               %KV_SRD.HI_NONBLN.CLM = USR_ERS.BTMRHT.CLM;

   1250   0 000126  D847 000A                            LDR,R5   USR_ERS+4,AUTO
          0 000128  DF46 0018                            STR,R5   24,B6

      165     1251    4               %KV_SRD.HI_NONBLN.LIN = USR_ERS.TOPLFT.LIN-%KV_SRD.DVCLINBIS-1;

   1251   0 00012A  C847 0007                            LDR,R4   USR_ERS+1,AUTO
          0 00012C  C246 0019                            SUB,R4   25,B6
          0 00012E  4EFF                                 ADV,R4   -1
          0 00012F  CF46 0017                            STR,R4   23,B6

      166     1252    4            END; ELSE DO;

   1252   0 000131  0F81 000A                            B        s:1260,PREL

      167     1253
      168     1254        /* We didn't start the erasure on the left margin column* highest non-blank ch*/
      169     1255
      170     1256    4               %KV_SRD.HI_NONBLN.CLM = USR_ERS.BGNPHSCLM-1;
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:23   

   1256   0 000133  6EFF                                 ADV,R6   -1
          0 000134  EF46 0018                            STR,R6   24,B6

      171     1257    4               %KV_SRD.HI_NONBLN.LIN = USR_ERS.TOPLFT.LIN-%KV_SRD.DVCLINBIS;

   1257   0 000136  D847 0007                            LDR,R5   USR_ERS+1,AUTO
          0 000138  D246 0019                            SUB,R5   25,B6
          0 00013A  DF46 0017                            STR,R5   23,B6

      172     1258    4            END /* IF */;

      173     1259    3         END /* IF */;

      174     1260    2         %KV_SRD.VRTPSTOK = '1'B;

   1260   0 00013C  8946 000E                            LBT,'0010'X       14,B6
   1260   0 00013E       0010

      175     1261    2         %KV_SRD.HI_NONBLNVRT = '1'B;

   1261   0 00013F  8946 000E                            LBT,'0002'X       14,B6
   1261   0 000141       0002

      176     1262    2      END /* IF */;

      177     1263    1   END /* SUBROUTINE */;

   1263   0 000142  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      178     1264
      179     1265        %EOD;

PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:24   
--  Include file information  --

   K_CP6_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is never referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$ERSTO_ENDOF_SRD.
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:25   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w STRC(112)   r     1 USR_ERS                    D-0-0/w STRC(64)    r     1 USR_SETATR
    11-0-0/w STRC(8)     r     1 Y@                         4-0-0/w PTR         r     1 Y@SRD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(112)   r     1 KV_USR_ERS
     0-0-0/w STRC(64)    r     1 KV_USR_SETATR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVO$ERSTO_ENDOF_SRD requires 325 words for executable code.
   Procedure KVO$ERSTO_ENDOF_SRD requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:26   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:27   
          MINI XREF LISTING

KV$MRD.CTNFRM
       260**DCL      1203>>IF
KV$MRD.DCLATRWHNOTP
       260**DCL      1231>>IF
KV$MRD.DVCATR
       269**DCL      1231>>IF
KV$MRD.LNG
       251**DCL      1209>>ASSIGN
KV$MRD.WDT
       248**DCL      1207>>ASSIGN
KV$PTR.INPCNDPND
       300**DCL       309--REDEF     313--REDEF
KV$PTR.LINLST$
       296**DCL       297--REDEF
KV$PTR.SRD$
       296**DCL      1202>>ASSIGN
KV$PTR.VDI$
       294**DCL      1205>>IF
KV$PTR$
       288**DCL       294--IMP-PTR  1202>>ASSIGN   1205>>IF
KV$SRD.BTMRHT
       433**DCL       438--REDEF
KV$SRD.BTMRHT.CLM
       435**DCL      1215>>ASSIGN   1218>>ASSIGN
KV$SRD.BTMRHT.LIN
       435**DCL      1216>>ASSIGN
KV$SRD.CRT
       509**DCL       514--REDEF
KV$SRD.CRT.CLM
       511**DCL      1222>>ASSIGN
KV$SRD.CRT.LIN
       511**DCL      1223>>ASSIGN
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:28   
KV$SRD.CRT_PST
       514**DCL      1221>>IF
KV$SRD.DVCLINBIS
       551**DCL      1223>>ASSIGN   1251>>ASSIGN   1257>>ASSIGN
KV$SRD.FLDEND
       473**DCL       478--REDEF
KV$SRD.FLDEND.CLM
       475**DCL      1211>>IF       1212>>ASSIGN
KV$SRD.FLDEND.LIN
       475**DCL      1213>>ASSIGN
KV$SRD.HI_NONBLN
       543**DCL       548--REDEF    1230<<ASSIGN
KV$SRD.HI_NONBLN.CLM
       545**DCL      1250<<ASSIGN   1256<<ASSIGN
KV$SRD.HI_NONBLN.LIN
       545**DCL      1251<<ASSIGN   1257<<ASSIGN
KV$SRD.HI_NONBLNVRT
       443**DCL      1261<<ASSIGN
KV$SRD.HI_NONBLN_PST
       548**DCL      1221>>IF       1239>>IF
KV$SRD.MRD$
       337**DCL      1203>>IF       1207>>ASSIGN   1209>>ASSIGN   1231>>IF       1231>>IF
KV$SRD.ORG
       365**DCL       370--REDEF
KV$SRD.SRDEND
       578**DCL       583--REDEF
KV$SRD.TOPLFT
       399**DCL       404--REDEF
KV$SRD.TOPLFT.CLM
       401**DCL      1219>>ASSIGN   1225>>ASSIGN
KV$SRD.TOPLFT.LIN
       401**DCL      1226>>ASSIGN
KV$SRD.VRTPSTOK
       442**DCL      1260<<ASSIGN
KV$VDI.OTPCNDPND.PST
       650**DCL      1205>>IF
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:29   
KVV$CALUSR
        13**DCL-ENT  1235--CALL     1237--CALL
KVV$CALUSR_PST
        14**DCL-ENT  1205--CALL
KV_USR_ERS
       692**DCL      1204>>ASSIGN
KV_USR_ERS.BTMRHT
       759**DCL       764--REDEF
KV_USR_ERS.TOPLFT
       725**DCL       730--REDEF
KV_USR_SETATR
       900**DCL      1233>>ASSIGN
KV_USR_SETATR.PHSPST
       933**DCL       938--REDEF
SUBCOMMON
      1200**LABEL    1165--GOTO     1172--GOTO     1183--GOTO     1189--GOTO     1195--GOTO
USR_ERS
       796**DCL      1204<<ASSIGN   1237<>CALL
USR_ERS.BGNPHSCLM
       871**DCL      1222<<ASSIGN   1225<<ASSIGN   1245>>IF       1256>>ASSIGN
USR_ERS.BTMRHT
       863**DCL       868--REDEF    1230>>ASSIGN
USR_ERS.BTMRHT.CLM
       865**DCL      1208<<ASSIGN   1218<<ASSIGN   1238<<ASSIGN   1250>>ASSIGN
USR_ERS.BTMRHT.LIN
       865**DCL      1209<<ASSIGN   1213<<ASSIGN   1216<<ASSIGN
USR_ERS.BTMRHT_PST
       868**DCL      1239>>IF
USR_ERS.DLTATR
       802**DCL      1229<<ASSIGN
USR_ERS.ENDPHSCLM
       871**DCL      1207<<ASSIGN   1208>>ASSIGN   1212<<ASSIGN   1215<<ASSIGN   1238>>ASSIGN
USR_ERS.TOPLFT
       829**DCL       834--REDEF    1234>>ASSIGN
USR_ERS.TOPLFT.CLM
       831**DCL      1219<<ASSIGN   1245>>IF
PL6.E3A0      #001=KVO$ERSTO_ENDOF_SRD File=KVO$MSC.:E05TSI                      WED 07/30/97 02:09 Page:30   
USR_ERS.TOPLFT.LIN
       831**DCL      1223<<ASSIGN   1226<<ASSIGN   1251>>ASSIGN   1257>>ASSIGN
USR_SETATR
      1023**DCL      1233<<ASSIGN   1235<>CALL
USR_SETATR.PHSPST
      1056**DCL      1061--REDEF    1234<<ASSIGN
Y@
      1120**DCL      1164<<ASSIGN   1171<<ASSIGN   1179<<ASSIGN   1188<<ASSIGN   1194<<ASSIGN   1200<<ASSIGN
      1231>>IF
Y@.BGNCRT
      1135**DCL      1220>>IF
Y@.CMPOTP
      1125**DCL      1205>>IF
Y@.DLTATR
      1130**DCL      1229>>ASSIGN
Y@.ENDINP
      1145**DCL      1211>>IF
Y@.ERSMRD
      1155**DCL      1206>>IF
Y@.NO_OPT
      1160**DCL      1230>>IF
Y@SRD$
       664**DCL       246--IMP-PTR   337--IMP-PTR  1202<<ASSIGN   1203>>IF       1207>>ASSIGN   1209>>ASSIGN
      1211>>IF       1212>>ASSIGN   1213>>ASSIGN   1215>>ASSIGN   1216>>ASSIGN   1218>>ASSIGN   1219>>ASSIGN
      1221>>IF       1221>>IF       1222>>ASSIGN   1223>>ASSIGN   1223>>ASSIGN   1225>>ASSIGN   1226>>ASSIGN
      1230>>ASSIGN   1231>>IF       1231>>IF       1239>>IF       1250>>ASSIGN   1251>>ASSIGN   1251>>ASSIGN
      1256>>ASSIGN   1257>>ASSIGN   1257>>ASSIGN   1260>>ASSIGN   1261>>ASSIGN

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:31   
      180        1        /*T***********************************************************/
      181        2        /*T*                                                         */
      182        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      183        4        /*T*                                                         */
      184        5        /*T***********************************************************/
      185        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      186        7        KVO$ERS: PROC(PRM_USR_ERS);
      187        8        /* The purpose of this routine is to erase the area framed by the
      188        9           argument structure.  This is done by either using device control
      189       10           (IF IT IS AVAILABLE), OR BY USING BLANKING.                                */
      190       11
      191       12    1   DCL KVO$DVCCTR ENTRY(1);
      192       13    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
      193       14
      194       15        %INCLUDE KV_ERD_E;                      /* Offsets into KV$ERD (for DVCCTR).  */
      195      102 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
      196      103 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
      197      104 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
      198      105 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
      199      106 S      %INCLUDE KV$INT;                        /* VDH internal data                  */
      200      107        %INCLUDE K_CP6_M;
      201      303        %G#GRPRND_E;
      202      313        %KV$ERD (STCLASS="BASED(Y@MRD$)");      /*  VDH Master real device extension  */
      203      397        %EQU KV_ERD = CHARTEXT('KV$MRD.ERD$->KV$ERD');
      204      398        %KV$MRD (STCLASS="BASED(Y@MRD$)");      /*  VDH Master real device            */
      205      445        %EQU KV_MRD = CHARTEXT('KV$MRD');
      206      446        %KV$MVD;
      207      490        %KV$PTR;                                /*  VDH Pointers, status              */
      208      533        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  VDH Subordinate real device       */
      209      808        %EQU KV_SRD = CHARTEXT('KV$SRD');
      210      809        %KV$TRNTBL;
      211      867        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
      212      938        %KV$USR_ERS(NAME = PRM_USR_ERS, STCLASS = ); /*  VDH-user erase               */
      213     1042
      214     1043    1   DCL KVO$OTP1_NONVRT ENTRY(1);
      215     1044
      216     1045        %KV#VD_ORG_E;
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:32   
      217     1053        %KV_PHSPSTMOD_E;
      218     1060    1   DCL Y@SRD$ PTR;
      219     1061    1   DCL Y@MRD$ PTR;
      220     1062
      221     1063        /* Original (upon entry) physical position                                    */
      222     1064
      223     1065    1   DCL 1 Y@ ALIGNED AUTO,
      224     1066    1          2 SCROLL BIT(1),
      225     1067        %KV$PST(NAME = ORG, LVL = 2, LAST = ";");
      226     1101    1   DCL USE_EL0 BIT(1);
      227     1102        %EJECT;
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:33   
      228     1103    1      Y@SRD$ = KV$PTR.SRD$;
      229     1104    1      Y@MRD$ = KV$PTR.MRD$;
      230     1105
      231     1106        /* If the dltatr bit is set, position home and send out the
      232     1107           delete sequence specified in kv$erd.  Only do this if
      233     1108           dltallflds_chr is specified in kv$erd.                                     */
      234     1109        /*N* NOTE THAT TO MAKE THIS ALL WORK RIGHT, THIS ROUTINE WILL                 */
      235     1110        /*N* EVENTUALLY HAVE TO LOOK AND SEE WHAT AREA IS FRAMED BY THE               */
      236     1111        /*N* KV$USR_ERS STRUCTURE AND ONLY ERASE ATTRIBUTES IN THAT AREA.             */
      237     1112        /*N* WE PRESENTLY ASSUME THE ENTIRE SCREEN IS TO BE ZAPPED.                   */
      238     1113
      239     1114
      240     1115    1      IF PRM_USR_ERS.DLTATR
      241     1116    2        AND (%KV_ERD.DLTALLFLDS_CHR ~= 0) THEN DO;
      242     1117
      243     1118
      244     1119    2         CALL KVO$DVCCTR (%KV$ERD_DLTALLFLDS_CHR#/8);
      245     1120    2      END /* IF */;
      246     1121
      247     1122
      248     1123    1      IF %KV_VDI.OTPCNDPND.PST=%KV_PHSPSTMOD_BLN THEN CALL KVV$CALUSR_PST;
      249     1124    1      ELSE %KV_VDI.OTPCNDPND.PST = 0;
      250     1125        /* Stash the current physical position                                        */
      251     1126
      252     1127    1      Y@.ORG = %KV_SRD.CRT;
      253     1128    1      Y@.SCROLL = %KV_SRD.SCROLL;
      254     1129    1      %KV_SRD.CRT.LIN = PRM_USR_ERS.TOPLFT.LIN-%KV_SRD.DVCLINBIS;
      255     1130    1      %KV_SRD.CRT.CLM = PRM_USR_ERS.BGNPHSCLM;
      256     1131    2      IF %KV_SRD.CRT.CLM>PRM_USR_ERS.BTMRHT.CLM THEN DO;
      257     1132        /* Sometimes a request starts past the right edge, usually because of
      258     1133           a terminal with LIMBOCLM.  Start at the next line, so that ones without
      259     1134           LIMBOCLM work properly. */
      260     1135
      261     1136    2         %KV_SRD.CRT.CLM = PRM_USR_ERS.TOPLFT.CLM;
      262     1137    2         %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+1;
      263     1138    2         IF %KV_SRD.CRT.LIN<=PRM_USR_ERS.BTMRHT.LIN THEN EXIT;
      264     1139        /* Nothing left to do.  Give up. */
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:34   
      265     1140
      266     1141    2         %KV_SRD.CRT = Y@.ORG;
      267     1142    2         RETURN;
      268     1143    2      END;
      269     1144    1      %KV_SRD.SCROLL = '0'B;
      270     1145        /* If we are not at the start of the area to be erased, lets go there.
      271     1146           in almost all cases, we'll have to be there anyway                         */
      272     1147
      273     1148    1      IF %KV_SRD.CRT.LIN~=%KV_MRD.DVCLIN
      274     1149    2        OR %KV_SRD.CRT.CLM~=%KV_MRD.DVCCLM THEN DO;
      275     1150
      276     1151        /* Call vdh to position to the start of the are to be erased using
      277     1152           skip mode                                                                  */
      278     1153
      279     1154    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      280     1155    2         CALL KVV$CALUSR_PST;
      281     1156    2      END /* IF */;
      282     1157
      283     1158    2   ERSDON: DO UNTIL ('1'B);
      284     1159
      285     1160        /* We EXIT this DO as soon as we have carried out the erasure. */
      286     1161
      287     1162    2         USE_EL0 = '0'B;
      288     1163
      289     1164        /* See if the area to be erased extends to the end of a line. if not,
      290     1165           there is currently no possibility of using device control                   */
      291     1166
      292     1167    2         IF PRM_USR_ERS.BTMRHT.CLM=%KV_MRD.WDT AND (NOT %KV_MRD.DCLATRWHNOTP
      293     1168    3           OR NOT %KV_MRD.DVCATR&%(G#GRPRND_RVRVID|G#GRPRND_UNDSCR) ) THEN DO;
      294     1169
      295     1170    4            IF PRM_USR_ERS.ENDPHSCLM=PRM_USR_ERS.BTMRHT.CLM THEN DO;
      296     1171
      297     1172        /* Ending column must also be right if erase function is used. */
      298     1173
      299     1174        /* If only one line is to be erased, use el0 if it's there                    */
      300     1175
      301     1176    4               IF (PRM_USR_ERS.BTMRHT.LIN=PRM_USR_ERS.TOPLFT.LIN
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:35   
      302     1177    4                 OR %KV_SRD.CRT.LIN>=%KV_SRD.HI_NONBLN.LIN)
      303     1178    5                 AND %KV_ERD.EL0_CHR~=0 THEN DO;
      304     1179    5                  IF NOT PRM_USR_ERS.DLTATR
      305     1180    6                    AND %KV_MVD.ORG=%KV#VD_ORG_FORM AND %KV_ERD.EL0DLTFLD THEN DO;
      306     1181
      307     1182        /* The first position (only) may have an attribute. Don't delete it. */
      308     1183
      309     1184    6                     CALL KVO$OTP1_NONVRT (ASCBIN(%KV_TRNTBL.SP_CHR));
      310     1185    6                     IF PRM_USR_ERS.ENDPHSCLM=PRM_USR_ERS.BGNPHSCLM
      311     1186    6                     THEN EXIT ERSDON;
      312     1187    6                  END;
      313     1188    5                  CALL KVO$DVCCTR (%KV$ERD_EL0_CHR#/8);
      314     1189    5                  EXIT ERSDON;
      315     1190    5               END /* IF */;
      316     1191        /* See if the area to be erased extends to end of device                      */
      317     1192
      318     1193    5               IF (PRM_USR_ERS.BTMRHT.LIN = %KV_MRD.LNG) THEN DO;
      319     1194
      320     1195        /* Otherwise, if we're erasing the whole device, and there is a
      321     1196           usable erase device function, lets use it                                  */
      322     1197
      323     1198    5                  IF (PRM_USR_ERS.TOPLFT.LIN = 1)
      324     1199    5                    AND (PRM_USR_ERS.BGNPHSCLM = 1)
      325     1200    6                    AND (%KV_ERD.ED2_CHR ~= 0) THEN DO;
      326     1201
      327     1202        /* Lets erase the display                                                     */
      328     1203
      329     1204    6                     CALL KVO$DVCCTR (%KV$ERD_ED2_CHR#/8);
      330     1205    6                     EXIT ERSDON;
      331     1206    6                  END /* IF */;
      332     1207        /* See if there is an erase to end of device function                         */
      333     1208
      334     1209    5                  IF (PRM_USR_ERS.TOPLFT.CLM = 1)
      335     1210    6                    AND (%KV_ERD.ED0_CHR ~= 0) THEN DO;
      336     1211
      337     1212        /* There is and we're positioned to start of area, so lets use it             */
      338     1213
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:36   
      339     1214    6                     CALL KVO$DVCCTR (%KV$ERD_ED0_CHR#/8);
      340     1215    6                     EXIT ERSDON;
      341     1216    6                  END /* IF */;
      342     1217    5               END /* IF */;
      343     1218    4            END /* IF */;
      344     1219        /* Otherwise, the area extends to the end of line, not device. we
      345     1220           are positioned to start of area.  See if there is a usable erase to
      346     1221           end of line function                                                       */
      347     1222
      348     1223    4            IF (%KV_ERD.EL0_CHR ~= 0) THEN DO;
      349     1224
      350     1225        /* Use the erase to end of line function,
      351     1226           as many times as req'd to do the job.                                      */
      352     1227
      353     1228    4               USE_EL0 = '1'B;
      354     1229    4            END /* IF */;
      355     1230    3         END /* IF */;
      356     1231        /* if we get here, the only way to do the job is a line at a time
      357     1232           using EL0 or blanking mode.  we are already at start of area   */
      358     1233
      359     1234    2         IF USE_EL0 OR PRM_USR_ERS.TOPLFT.CLM~=%KV_SRD.TOPLFT.CLM
      360     1235    2           OR PRM_USR_ERS.BTMRHT.CLM~=%KV_SRD.BTMRHT.CLM
      361     1236    3         THEN DO WHILE '1'B;
      362     1237
      363     1238    3            IF PRM_USR_ERS.ENDPHSCLM<PRM_USR_ERS.BTMRHT.CLM
      364     1239    3              AND %KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS=PRM_USR_ERS.BTMRHT.LIN
      365     1240    3            THEN EXIT;                     /* Use blanks for a short last line   */
      366     1241    4            IF NOT USE_EL0 THEN DO;
      367     1242    4               %KV_SRD.CRT.CLM = PRM_USR_ERS.BTMRHT.CLM+1;
      368     1243    4               IF %KV_SRD.HI_NONBLN.LIN=%KV_SRD.CRT.LIN
      369     1244    4                 AND %KV_SRD.HI_NONBLN.CLM<PRM_USR_ERS.BTMRHT.CLM
      370     1245    4               THEN %KV_SRD.CRT.CLM = %KV_SRD.HI_NONBLN.CLM+1;
      371     1246    4               %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_BLN;
      372     1247    4               CALL KVV$CALUSR_PST;
      373     1248    3            END; ELSE IF %KV_SRD.CRT.CLM<=%KV_SRD.BTMRHT.CLM
      374     1249    3            THEN CALL KVO$DVCCTR (%KV$ERD_EL0_CHR#/8);
      375     1250    3            IF %KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS=PRM_USR_ERS.BTMRHT.LIN
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:37   
      376     1251    3              OR %KV_SRD.CRT.LIN>=%KV_SRD.HI_NONBLN.LIN
      377     1252    3            THEN EXIT ERSDON;
      378     1253
      379     1254    3            %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+1;
      380     1255    3            %KV_SRD.CRT.CLM = PRM_USR_ERS.TOPLFT.CLM;
      381     1256    3            %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      382     1257    3            CALL KVV$CALUSR_PST;
      383     1258    3         END;                              /* DO WHILE '1'B                      */
      384     1259
      385     1260    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_BLN;
      386     1261    2         %KV_SRD.CRT.CLM = PRM_USR_ERS.ENDPHSCLM;
      387     1262    2         %KV_SRD.CRT.LIN = PRM_USR_ERS.BTMRHT.LIN-%KV_SRD.DVCLINBIS;
      388     1263    2         IF %KV_SRD.CRT_PST>%KV_SRD.HI_NONBLN_PST
      389     1264    2         THEN %KV_SRD.CRT = %KV_SRD.HI_NONBLN;
      390     1265    2         %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM+1;
      391     1266    2         CALL KVV$CALUSR_PST;
      392     1267    2      END ERSDON;
      393     1268
      394     1269        /* Position back to where we started when we came in                          */
      395     1270
      396     1271    1      %KV_SRD.SCROLL = Y@.SCROLL;
      397     1272    2      IF NOT PRM_USR_ERS.NO_RE_PST AND %KV_SRD.CRT_PST~=Y@.ORG_PST THEN DO;
      398     1273    2         %KV_SRD.CRT = Y@.ORG;
      399     1274
      400     1275        /* Use skipping mode to get back in place                                     */
      401     1276
      402     1277    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      403     1278    2      END /* IF */;
      404     1279
      405     1280    1   END /* SUBROUTINE */;
      406     1281
      407     1282        %EOD;

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:38   
--  Include file information  --

   K_CP6_M.:E05TOU  is referenced.
   KV_ERD_E.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$ERS.

   Procedure KVO$ERS requires 517 words for executable code.
   Procedure KVO$ERS requires 17 words of local(AUTO) storage.

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:39   

 Object Unit name= KVO$ERS                                    File name= KVO$MSC.:E05TOU
 UTS= JUL 30 '97 02:09:16.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   517    205  KVO$ERS
    1  RoData even  none    12      C  KVO$ERS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KVO$ERS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KVO$DVCCTR
 yes     yes           Std       0 KVV$CALUSR_PST
         yes           Std       1 KVO$OTP1_NONVRT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                          r    G$ROS$
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:40   


      180        1        /*T***********************************************************/
      181        2        /*T*                                                         */
      182        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      183        4        /*T*                                                         */
      184        5        /*T***********************************************************/
      185        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      186        7        KVO$ERS: PROC(PRM_USR_ERS);

      7   0 000000  D380 0000 0000  xent KVO$ERS         LNJ,B5   X6A_AUTO_1
          0 000003       0011 0001                       DC       17,1

      187        8        /* The purpose of this routine is to erase the area framed by the
      188        9           argument structure.  This is done by either using device control
      189       10           (IF IT IS AVAILABLE), OR BY USING BLANKING.                                */
      190       11
      191       12    1   DCL KVO$DVCCTR ENTRY(1);
      192       13    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
      193       14
      194       15        %INCLUDE KV_ERD_E;                      /* Offsets into KV$ERD (for DVCCTR).  */
      195      102 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
      196      103 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
      197      104 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
      198      105 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
      199      106 S      %INCLUDE KV$INT;                        /* VDH internal data                  */
      200      107        %INCLUDE K_CP6_M;
      201      303        %G#GRPRND_E;
      202      313        %KV$ERD (STCLASS="BASED(Y@MRD$)");      /*  VDH Master real device extension  */
      203      397        %EQU KV_ERD = CHARTEXT('KV$MRD.ERD$->KV$ERD');
      204      398        %KV$MRD (STCLASS="BASED(Y@MRD$)");      /*  VDH Master real device            */
      205      445        %EQU KV_MRD = CHARTEXT('KV$MRD');
      206      446        %KV$MVD;
      207      490        %KV$PTR;                                /*  VDH Pointers, status              */
      208      533        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  VDH Subordinate real device       */
      209      808        %EQU KV_SRD = CHARTEXT('KV$SRD');
      210      809        %KV$TRNTBL;
      211      867        %KV$VDI;                                /*  VDI (VDH < ->VDH user interface)  */
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:41   
      212      938        %KV$USR_ERS(NAME = PRM_USR_ERS, STCLASS = ); /*  VDH-user erase               */
      213     1042
      214     1043    1   DCL KVO$OTP1_NONVRT ENTRY(1);
      215     1044
      216     1045        %KV#VD_ORG_E;
      217     1053        %KV_PHSPSTMOD_E;
      218     1060    1   DCL Y@SRD$ PTR;
      219     1061    1   DCL Y@MRD$ PTR;
      220     1062
      221     1063        /* Original (upon entry) physical position                                    */
      222     1064
      223     1065    1   DCL 1 Y@ ALIGNED AUTO,
      224     1066    1          2 SCROLL BIT(1),
      225     1067        %KV$PST(NAME = ORG, LVL = 2, LAST = ";");
      226     1101    1   DCL USE_EL0 BIT(1);
      227     1102        %EJECT;
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:42   
      228     1103    1      Y@SRD$ = KV$PTR.SRD$;

   1103   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  DCC6 000A                            LDB,B5   10,B6
          0 00000A  DFC7 0006                            STB,B5   Y@SRD$,AUTO

      229     1104    1      Y@MRD$ = KV$PTR.MRD$;

   1104   0 00000C  CCC6 0008                            LDB,B4   8,B6
          0 00000E  CFC7 0008                            STB,B4   Y@MRD$,AUTO

      230     1105
      231     1106        /* If the dltatr bit is set, position home and send out the
      232     1107           delete sequence specified in kv$erd.  Only do this if
      233     1108           dltallflds_chr is specified in kv$erd.                                     */
      234     1109        /*N* NOTE THAT TO MAKE THIS ALL WORK RIGHT, THIS ROUTINE WILL                 */
      235     1110        /*N* EVENTUALLY HAVE TO LOOK AND SEE WHAT AREA IS FRAMED BY THE               */
      236     1111        /*N* KV$USR_ERS STRUCTURE AND ONLY ERASE ATTRIBUTES IN THAT AREA.             */
      237     1112        /*N* WE PRESENTLY ASSUME THE ENTIRE SCREEN IS TO BE ZAPPED.                   */
      238     1113
      239     1114
      240     1115    1      IF PRM_USR_ERS.DLTATR

   1115   0 000010  BCC7 0004                            LDB,B3   @PRM_USR_ERS,AUTO
          0 000012  8283                                 LB,'0080'X        ,B3
          0 000013       0080
          0 000014  0581 0011                            BBF      s:1123,PREL
          0 000016  ACC4 0008                            LDB,B2   8,B4
          0 000018  82C2 0029                            LB,'00FF'X        41,B2
          0 00001A       00FF
          0 00001B  0581 000A                            BBF      s:1123,PREL

      241     1116    2        AND (%KV_ERD.DLTALLFLDS_CHR ~= 0) THEN DO;

      242     1117
      243     1118
      244     1119    2         CALL KVO$DVCCTR (%KV$ERD_DLTALLFLDS_CHR#/8);
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:43   

   1119   0 00001D  BB80 0000 0001  01                   LAB,B3   +1
          0 000020  CBF0 0100                            LAB,B4   256,IMO
          0 000022  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          0 000025       0001                            DC       s:1123,PREL

      245     1120    2      END /* IF */;

      246     1121
      247     1122
      248     1123    1      IF %KV_VDI.OTPCNDPND.PST=%KV_PHSPSTMOD_BLN THEN CALL KVV$CALUSR_PST;

   1123   0 000026  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000029  DC86                                 LDB,B5   ,B6
          0 00002A  E845 001A                            LDR,R6   26,B5
          0 00002C  6D02                                 CMV,R6   2
          0 00002D  0981 0009                            BNE      s:1124,PREL

   1123   0 00002F  CBF0 0000                            LAB,B4   0,IMO
          0 000031  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 000034       0001                            DC       s:1123+15,PREL
          0 000035  0F81 0003                            B        s:1127,PREL

      249     1124    1      ELSE %KV_VDI.OTPCNDPND.PST = 0;

   1124   0 000037  8745 001A                            CL       26,B5

      250     1125        /* Stash the current physical position                                        */
      251     1126
      252     1127    1      Y@.ORG = %KV_SRD.CRT;

   1127   0 000039  ECC7 0006                            LDB,B6   Y@SRD$,AUTO
          0 00003B  8CC6 0015                            LDI      21,B6
          0 00003D  8D47 000B                            SDI      Y@+1,AUTO

      253     1128    1      Y@.SCROLL = %KV_SRD.SCROLL;

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:44   
   1128   0 00003F  D846 000E                            LDR,R5   14,B6
          0 000041  500C                                 SOL,R5   12
          0 000042  D570 8000                            AND,R5   -32768,IMO
          0 000044  DF47 000A                            STR,R5   Y@,AUTO

      254     1129    1      %KV_SRD.CRT.LIN = PRM_USR_ERS.TOPLFT.LIN-%KV_SRD.DVCLINBIS;

   1129   0 000046  DCC7 0004                            LDB,B5   @PRM_USR_ERS,AUTO
          0 000048  C845 0001                            LDR,R4   1,B5
          0 00004A  C246 0019                            SUB,R4   25,B6
          0 00004C  CF46 0015                            STR,R4   21,B6

      255     1130    1      %KV_SRD.CRT.CLM = PRM_USR_ERS.BGNPHSCLM;

   1130   0 00004E  B845 0005                            LDR,R3   5,B5
          0 000050  BF46 0016                            STR,R3   22,B6

      256     1131    2      IF %KV_SRD.CRT.CLM>PRM_USR_ERS.BTMRHT.CLM THEN DO;

   1131   0 000052  B945 0004                            CMR,R3   4,B5
          0 000054  0A81 0012                            BALE     s:1144,PREL

      257     1132        /* Sometimes a request starts past the right edge, usually because of
      258     1133           a terminal with LIMBOCLM.  Start at the next line, so that ones without
      259     1134           LIMBOCLM work properly. */
      260     1135
      261     1136    2         %KV_SRD.CRT.CLM = PRM_USR_ERS.TOPLFT.CLM;

   1136   0 000056  B845 0002                            LDR,R3   2,B5
          0 000058  BF46 0016                            STR,R3   22,B6

      262     1137    2         %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+1;

   1137   0 00005A  8AC6 0015                            INC      21,B6

      263     1138    2         IF %KV_SRD.CRT.LIN<=PRM_USR_ERS.BTMRHT.LIN THEN EXIT;

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:45   
   1138   0 00005C  C846 0015                            LDR,R4   21,B6
          0 00005E  C945 0003                            CMR,R4   3,B5
          0 000060  0A81 0006                            BALE     s:1144,PREL

      264     1139        /* Nothing left to do.  Give up. */
      265     1140
      266     1141    2         %KV_SRD.CRT = Y@.ORG;

   1141   0 000062  8D46 0015                            SDI      21,B6

      267     1142    2         RETURN;

   1142   0 000064  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      268     1143    2      END;
      269     1144    1      %KV_SRD.SCROLL = '0'B;

   1144   0 000067  8846 000E                            LBF,'0008'X       14,B6
   1144   0 000069       0008

      270     1145        /* If we are not at the start of the area to be erased, lets go there.
      271     1146           in almost all cases, we'll have to be there anyway                         */
      272     1147
      273     1148    1      IF %KV_SRD.CRT.LIN~=%KV_MRD.DVCLIN

   1148   0 00006A  CCC7 0008                            LDB,B4   Y@MRD$,AUTO
          0 00006C  C944 001D                            CMR,R4   29,B4
          0 00006E  0981 0007                            BNE      s:1154,PREL
          0 000070  3801 0005                            BLZ,R3   s:1154,PREL
          0 000072  B944 001E                            CMR,R3   30,B4
          0 000074  0901 000E                            BE       s:1156,PREL

      274     1149    2        OR %KV_SRD.CRT.CLM~=%KV_MRD.DVCCLM THEN DO;

      275     1150
      276     1151        /* Call vdh to position to the start of the are to be erased using
      277     1152           skip mode                                                                  */
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:46   
      278     1153
      279     1154    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   1154   0 000076  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          0 000079  AC83                                 LDB,B2   ,B3
          0 00007A  5C01                                 LDV,R5   1
          0 00007B  DF42 001A                            STR,R5   26,B2

      280     1155    2         CALL KVV$CALUSR_PST;

   1155   0 00007D  CBF0 0000                            LAB,B4   0,IMO
          0 00007F  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 000082       0001                            DC       s:1156,PREL

      281     1156    2      END /* IF */;

      282     1157
      283     1158    2   ERSDON: DO UNTIL ('1'B);

   1158   0                              ERSDON          null
      284     1159
      285     1160        /* We EXIT this DO as soon as we have carried out the erasure. */
      286     1161
      287     1162    2         USE_EL0 = '0'B;

   1162   0 000083  8747 000D            ERSDON          CL       USE_EL0,AUTO

      288     1163
      289     1164        /* See if the area to be erased extends to the end of a line. if not,
      290     1165           there is currently no possibility of using device control                   */
      291     1166
      292     1167    2         IF PRM_USR_ERS.BTMRHT.CLM=%KV_MRD.WDT AND (NOT %KV_MRD.DCLATRWHNOTP

   1167   0 000085  ECC7 0004                            LDB,B6   @PRM_USR_ERS,AUTO
          0 000087  DCC7 0008                            LDB,B5   Y@MRD$,AUTO
          0 000089  E846 0004                            LDR,R6   4,B6
          0 00008B  6801 00A6                            BLZ,R6   s:1234,PREL
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:47   
          0 00008D  E945 000B                            CMR,R6   11,B5
          0 00008F  0981 00A2                            BNE      s:1234,PREL
          0 000091  82C5 0018                            LB,'0200'X        24,B5
          0 000093       0200
          0 000094  0581 0008                            BBF      s:1170,PREL
          0 000096  D2C5 001F                            LLH,R5   31,B5
          0 000098  5008                                 SOL,R5   8
          0 000099  D570 0900                            AND,R5   2304,IMO
          0 00009B  5981 0096                            BNEZ,R5  s:1234,PREL

      293     1168    3           OR NOT %KV_MRD.DVCATR&%(G#GRPRND_RVRVID|G#GRPRND_UNDSCR) ) THEN DO;

      294     1169
      295     1170    4            IF PRM_USR_ERS.ENDPHSCLM=PRM_USR_ERS.BTMRHT.CLM THEN DO;

   1170   0 00009D  6801 008A                            BLZ,R6   s:1223,PREL
          0 00009F  E946 0006                            CMR,R6   6,B6
          0 0000A1  0981 0086                            BNE      s:1223,PREL

      296     1171
      297     1172        /* Ending column must also be right if erase function is used. */
      298     1173
      299     1174        /* If only one line is to be erased, use el0 if it's there                    */
      300     1175
      301     1176    4               IF (PRM_USR_ERS.BTMRHT.LIN=PRM_USR_ERS.TOPLFT.LIN

   1176   0 0000A3  D846 0003                            LDR,R5   3,B6
          0 0000A5  D946 0001                            CMR,R5   1,B6
          0 0000A7  0901 0009                            BE       s:1176+14,PREL
          0 0000A9  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 0000AB  C844 0015                            LDR,R4   21,B4
          0 0000AD  C944 0017                            CMR,R4   23,B4
          0 0000AF  0801 0042                            BAL      s:1193,PREL
          0 0000B1  CCC5 0008                            LDB,B4   8,B5
          0 0000B3  82C4 0021                            LB,'00FF'X        33,B4
          0 0000B5       00FF
          0 0000B6  0581 003B                            BBF      s:1193,PREL
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:48   

      302     1177    4                 OR %KV_SRD.CRT.LIN>=%KV_SRD.HI_NONBLN.LIN)
      303     1178    5                 AND %KV_ERD.EL0_CHR~=0 THEN DO;

      304     1179    5                  IF NOT PRM_USR_ERS.DLTATR

   1179   0 0000B8  8286                                 LB,'0080'X        ,B6
   1179   0 0000B9       0080
          0 0000BA  0501 002C                            BBT      s:1188,PREL
          0 0000BC  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          0 0000BF  ACC3 0006                            LDB,B2   6,B3
          0 0000C1  C2C2 0015                            LLH,R4   21,B2
          0 0000C3  4D04                                 CMV,R4   4
          0 0000C4  0981 0022                            BNE      s:1188,PREL
          0 0000C6  82C4 0016                            LB,'0004'X        22,B4
          0 0000C8       0004
          0 0000C9  0581 001D                            BBF      s:1188,PREL

      305     1180    6                    AND %KV_MVD.ORG=%KV#VD_ORG_FORM AND %KV_ERD.EL0DLTFLD THEN DO;

      306     1181
      307     1182        /* The first position (only) may have an attribute. Don't delete it. */
      308     1183
      309     1184    6                     CALL KVO$OTP1_NONVRT (ASCBIN(%KV_TRNTBL.SP_CHR));

   1184   0 0000CB  9CC2 000E                            LDB,B1   14,B2
          0 0000CD  B841 001D                            LDR,R3   29,B1
          0 0000CF  B570 00FF                            AND,R3   255,IMO
          0 0000D1  BF47 000E                            STR,R3   USE_EL0+1,AUTO
          0 0000D3  CBC7 000E                            LAB,B4   USE_EL0+1,AUTO
          0 0000D5  CFC7 000F                            STB,B4   USE_EL0+2,AUTO
          0 0000D7  BBC7 000F                            LAB,B3   USE_EL0+2,AUTO
          0 0000D9  CBF0 0100                            LAB,B4   256,IMO
          0 0000DB  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          0 0000DE       0001                            DC       s:1185,PREL

      310     1185    6                     IF PRM_USR_ERS.ENDPHSCLM=PRM_USR_ERS.BGNPHSCLM
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:49   

   1185   0 0000DF  ECC7 0004                            LDB,B6   @PRM_USR_ERS,AUTO
          0 0000E1  E846 0006                            LDR,R6   6,B6
          0 0000E3  E946 0005                            CMR,R6   5,B6
          0 0000E5  0901 00FB                            BE       s:1271,PREL

      311     1186    6                     THEN EXIT ERSDON;
      312     1187    6                  END;

      313     1188    5                  CALL KVO$DVCCTR (%KV$ERD_EL0_CHR#/8);

   1188   0 0000E7  BB80 0000 0004  01                   LAB,B3   +4
          0 0000EA  CBF0 0100                            LAB,B4   256,IMO
          0 0000EC  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          0 0000EF       0001                            DC       s:1189,PREL

      314     1189    5                  EXIT ERSDON;

   1189   0 0000F0  0F81 00F0                            B        s:1271,PREL

      315     1190    5               END /* IF */;
      316     1191        /* See if the area to be erased extends to end of device                      */
      317     1192
      318     1193    5               IF (PRM_USR_ERS.BTMRHT.LIN = %KV_MRD.LNG) THEN DO;

   1193   0 0000F2  C2C5 0015                            LLH,R4   21,B5
          0 0000F4  C955                                 CMR,R4   R5
          0 0000F5  0981 0032                            BNE      s:1223,PREL

      319     1194
      320     1195        /* Otherwise, if we're erasing the whole device, and there is a
      321     1196           usable erase device function, lets use it                                  */
      322     1197
      323     1198    5                  IF (PRM_USR_ERS.TOPLFT.LIN = 1)

   1198   0 0000F7  B846 0001                            LDR,R3   1,B6
          0 0000F9  3D01                                 CMV,R3   1
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:50   
          0 0000FA  0981 0017                            BNE      s:1209,PREL
          0 0000FC  A846 0005                            LDR,R2   5,B6
          0 0000FE  2D01                                 CMV,R2   1
          0 0000FF  0981 0012                            BNE      s:1209,PREL
          0 000101  CCC5 0008                            LDB,B4   8,B5
          0 000103  92C4 0024                            LLH,R1   36,B4
          0 000105  1901 000C                            BEZ,R1   s:1209,PREL

      324     1199    5                    AND (PRM_USR_ERS.BGNPHSCLM = 1)
      325     1200    6                    AND (%KV_ERD.ED2_CHR ~= 0) THEN DO;

      326     1201
      327     1202        /* Lets erase the display                                                     */
      328     1203
      329     1204    6                     CALL KVO$DVCCTR (%KV$ERD_ED2_CHR#/8);

   1204   0 000107  BB80 0000 0007  01                   LAB,B3   +7
          0 00010A  CBF0 0100                            LAB,B4   256,IMO
          0 00010C  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          0 00010F       0001                            DC       s:1205,PREL

      330     1205    6                     EXIT ERSDON;

   1205   0 000110  0F81 00D0                            B        s:1271,PREL

      331     1206    6                  END /* IF */;
      332     1207        /* See if there is an erase to end of device function                         */
      333     1208
      334     1209    5                  IF (PRM_USR_ERS.TOPLFT.CLM = 1)

   1209   0 000112  A846 0002                            LDR,R2   2,B6
          0 000114  2D01                                 CMV,R2   1
          0 000115  0981 0012                            BNE      s:1223,PREL
          0 000117  CCC5 0008                            LDB,B4   8,B5
          0 000119  92C4 0021                            LLH,R1   33,B4
          0 00011B  1901 000C                            BEZ,R1   s:1223,PREL

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:51   
      335     1210    6                    AND (%KV_ERD.ED0_CHR ~= 0) THEN DO;

      336     1211
      337     1212        /* There is and we're positioned to start of area, so lets use it             */
      338     1213
      339     1214    6                     CALL KVO$DVCCTR (%KV$ERD_ED0_CHR#/8);

   1214   0 00011D  BB80 0000 000A  01                   LAB,B3   +10
          0 000120  CBF0 0100                            LAB,B4   256,IMO
          0 000122  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          0 000125       0001                            DC       s:1215,PREL

      340     1215    6                     EXIT ERSDON;

   1215   0 000126  0F81 00BA                            B        s:1271,PREL

      341     1216    6                  END /* IF */;
      342     1217    5               END /* IF */;
      343     1218    4            END /* IF */;
      344     1219        /* Otherwise, the area extends to the end of line, not device. we
      345     1220           are positioned to start of area.  See if there is a usable erase to
      346     1221           end of line function                                                       */
      347     1222
      348     1223    4            IF (%KV_ERD.EL0_CHR ~= 0) THEN DO;

   1223   0 000128  CCC5 0008                            LDB,B4   8,B5
          0 00012A  82C4 0021                            LB,'00FF'X        33,B4
          0 00012C       00FF
          0 00012D  0581 0004                            BBF      s:1234,PREL

      349     1224
      350     1225        /* Use the erase to end of line function,
      351     1226           as many times as req'd to do the job.                                      */
      352     1227
      353     1228    4               USE_EL0 = '1'B;

   1228   0 00012F  8947 000D                            LBT,'8000'X       USE_EL0,AUTO
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:52   
   1228   0 000131       8000

      354     1229    4            END /* IF */;

      355     1230    3         END /* IF */;

      356     1231        /* if we get here, the only way to do the job is a line at a time
      357     1232           using EL0 or blanking mode.  we are already at start of area   */
      358     1233
      359     1234    2         IF USE_EL0 OR PRM_USR_ERS.TOPLFT.CLM~=%KV_SRD.TOPLFT.CLM

   1234   0 000132  89C7 000D                            CMZ      USE_EL0,AUTO
          0 000134  0801 000D                            BAL      s:1238,PREL
          0 000136  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
          0 000138  D846 0002                            LDR,R5   2,B6
          0 00013A  D944 000A                            CMR,R5   10,B4
          0 00013C  0981 0005                            BNE      s:1238,PREL
          0 00013E  E944 000C                            CMR,R6   12,B4
          0 000140  0901 0077                            BE       s:1260,PREL

      360     1235    2           OR PRM_USR_ERS.BTMRHT.CLM~=%KV_SRD.BTMRHT.CLM
      361     1236    3         THEN DO WHILE '1'B;

      362     1237
      363     1238    3            IF PRM_USR_ERS.ENDPHSCLM<PRM_USR_ERS.BTMRHT.CLM

   1238   0 000142  ECC7 0004                            LDB,B6   @PRM_USR_ERS,AUTO
          0 000144  E846 0006                            LDR,R6   6,B6
          0 000146  6801 000F                            BLZ,R6   s:1241,PREL
          0 000148  E946 0004                            CMR,R6   4,B6
          0 00014A  0881 000B                            BAGE     s:1241,PREL
          0 00014C  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 00014E  D845 0015                            LDR,R5   21,B5
          0 000150  DA45 0019                            ADD,R5   25,B5
          0 000152  D946 0003                            CMR,R5   3,B6
          0 000154  0901 0063                            BE       s:1260,PREL

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:53   
      364     1239    3              AND %KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS=PRM_USR_ERS.BTMRHT.LIN
      365     1240    3            THEN EXIT;                     /* Use blanks for a short last line   */
      366     1241    4            IF NOT USE_EL0 THEN DO;

   1241   0 000156  89C7 000D                            CMZ      USE_EL0,AUTO
          0 000158  0801 0027                            BAL      s:1248+2,PREL

      367     1242    4               %KV_SRD.CRT.CLM = PRM_USR_ERS.BTMRHT.CLM+1;

   1242   0 00015A  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 00015C  D846 0004                            LDR,R5   4,B6
          0 00015E  5E01                                 ADV,R5   1
          0 00015F  DF45 0016                            STR,R5   22,B5

      368     1243    4               IF %KV_SRD.HI_NONBLN.LIN=%KV_SRD.CRT.LIN

   1243   0 000161  E845 0017                            LDR,R6   23,B5
          0 000163  E945 0015                            CMR,R6   21,B5
          0 000165  0981 000B                            BNE      s:1246,PREL
          0 000167  C845 0018                            LDR,R4   24,B5
          0 000169  C946 0004                            CMR,R4   4,B6
          0 00016B  0881 0005                            BAGE     s:1246,PREL

      369     1244    4                 AND %KV_SRD.HI_NONBLN.CLM<PRM_USR_ERS.BTMRHT.CLM
      370     1245    4               THEN %KV_SRD.CRT.CLM = %KV_SRD.HI_NONBLN.CLM+1;

   1245   0 00016D  D854                                 LDR,R5   R4
          0 00016E  5E01                                 ADV,R5   1
          0 00016F  DF45 0016                            STR,R5   22,B5

      371     1246    4               %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_BLN;

   1246   0 000171  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 000174  BC84                                 LDB,B3   ,B4
          0 000175  4C02                                 LDV,R4   2
          0 000176  CF43 001A                            STR,R4   26,B3

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:54   
      372     1247    4               CALL KVV$CALUSR_PST;

   1247   0 000178  CBF0 0000                            LAB,B4   0,IMO
          0 00017A  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 00017D       0001                            DC       s:1248,PREL

      373     1248    3            END; ELSE IF %KV_SRD.CRT.CLM<=%KV_SRD.BTMRHT.CLM

   1248   0 00017E  0F81 0012                            B        s:1250,PREL

   1248   0 000180  DCC7 0006                            LDB,B5   Y@SRD$,AUTO
          0 000182  D845 0016                            LDR,R5   22,B5
          0 000184  D945 000C                            CMR,R5   12,B5
          0 000186  0A01 000A                            BAG      s:1250,PREL

      374     1249    3            THEN CALL KVO$DVCCTR (%KV$ERD_EL0_CHR#/8);

   1249   0 000188  BB80 0000 0004  01                   LAB,B3   +4
          0 00018B  CBF0 0100                            LAB,B4   256,IMO
          0 00018D  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          0 000190       0001                            DC       s:1250,PREL

      375     1250    3            IF %KV_SRD.CRT.LIN+%KV_SRD.DVCLINBIS=PRM_USR_ERS.BTMRHT.LIN

   1250   0 000191  ECC7 0006                            LDB,B6   Y@SRD$,AUTO
          0 000193  E846 0015                            LDR,R6   21,B6
          0 000195  EA46 0019                            ADD,R6   25,B6
          0 000197  DCC7 0004                            LDB,B5   @PRM_USR_ERS,AUTO
          0 000199  E945 0003                            CMR,R6   3,B5
          0 00019B  0901 0045                            BE       s:1271,PREL
          0 00019D  E846 0015                            LDR,R6   21,B6
          0 00019F  E946 0017                            CMR,R6   23,B6
          0 0001A1  0881 003F                            BAGE     s:1271,PREL

      376     1251    3              OR %KV_SRD.CRT.LIN>=%KV_SRD.HI_NONBLN.LIN
      377     1252    3            THEN EXIT ERSDON;
      378     1253
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:55   
      379     1254    3            %KV_SRD.CRT.LIN = %KV_SRD.CRT.LIN+1;

   1254   0 0001A3  8AC6 0015                            INC      21,B6

      380     1255    3            %KV_SRD.CRT.CLM = PRM_USR_ERS.TOPLFT.CLM;

   1255   0 0001A5  E845 0002                            LDR,R6   2,B5
          0 0001A7  EF46 0016                            STR,R6   22,B6

      381     1256    3            %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   1256   0 0001A9  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 0001AC  BC84                                 LDB,B3   ,B4
          0 0001AD  5C01                                 LDV,R5   1
          0 0001AE  DF43 001A                            STR,R5   26,B3

      382     1257    3            CALL KVV$CALUSR_PST;

   1257   0 0001B0  CBF0 0000                            LAB,B4   0,IMO
          0 0001B2  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 0001B5       0001                            DC       s:1258,PREL

      383     1258    3         END;                              /* DO WHILE '1'B                      */

   1258   0 0001B6  0F81 FF8B                            B        s:1238,PREL

      384     1259
      385     1260    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_BLN;

   1260   0 0001B8  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          0 0001BB  CC85                                 LDB,B4   ,B5
          0 0001BC  6C02                                 LDV,R6   2
          0 0001BD  EF44 001A                            STR,R6   26,B4

      386     1261    2         %KV_SRD.CRT.CLM = PRM_USR_ERS.ENDPHSCLM;

   1261   0 0001BF  CCC7 0006                            LDB,B4   Y@SRD$,AUTO
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:56   
          0 0001C1  D846 0006                            LDR,R5   6,B6
          0 0001C3  DF44 0016                            STR,R5   22,B4

      387     1262    2         %KV_SRD.CRT.LIN = PRM_USR_ERS.BTMRHT.LIN-%KV_SRD.DVCLINBIS;

   1262   0 0001C5  C846 0003                            LDR,R4   3,B6
          0 0001C7  C244 0019                            SUB,R4   25,B4
          0 0001C9  CF44 0015                            STR,R4   21,B4

      388     1263    2         IF %KV_SRD.CRT_PST>%KV_SRD.HI_NONBLN_PST

   1263   0 0001CB  8CC4 0015                            LDI      21,B4
          0 0001CD  84C4 0017                            SID      23,B4
          0 0001CF  6801 0009                            BLZ,R6   s:1265,PREL
          0 0001D1  6A01 0003                            BGZ,R6   s:1264,PREL
          0 0001D3  7901 0005                            BEZ,R7   s:1265,PREL

      389     1264    2         THEN %KV_SRD.CRT = %KV_SRD.HI_NONBLN;

   1264   0 0001D5  8CC4 0017                            LDI      23,B4
          0 0001D7  8D44 0015                            SDI      21,B4

      390     1265    2         %KV_SRD.CRT.CLM = %KV_SRD.CRT.CLM+1;

   1265   0 0001D9  8AC4 0016                            INC      22,B4

      391     1266    2         CALL KVV$CALUSR_PST;

   1266   0 0001DB  CBF0 0000                            LAB,B4   0,IMO
          0 0001DD  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          0 0001E0       0001                            DC       s:1271,PREL

      392     1267    2      END ERSDON;

      393     1268
      394     1269        /* Position back to where we started when we came in                          */
      395     1270
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:57   
      396     1271    1      %KV_SRD.SCROLL = Y@.SCROLL;

   1271   0 0001E1  E847 000A                            LDR,R6   Y@,AUTO
          0 0001E3  604C                                 SOR,R6   12
          0 0001E4  ECC7 0006                            LDB,B6   Y@SRD$,AUTO
          0 0001E6  EAC6 000E                            SRM,R6,'0008'X    14,B6
          0 0001E8       0008

      397     1272    2      IF NOT PRM_USR_ERS.NO_RE_PST AND %KV_SRD.CRT_PST~=Y@.ORG_PST THEN DO;

   1272   0 0001E9  DCC7 0004                            LDB,B5   @PRM_USR_ERS,AUTO
          0 0001EB  8285                                 LB,'0040'X        ,B5
          0 0001EC       0040
          0 0001ED  0501 0014                            BBT      s:1280,PREL
          0 0001EF  8CC6 0015                            LDI      21,B6
          0 0001F1  84C7 000B                            SID      Y@+1,AUTO
          0 0001F3  6981 0003                            BNEZ,R6  s:1273,PREL
          0 0001F5  7901 000C                            BEZ,R7   s:1280,PREL

      398     1273    2         %KV_SRD.CRT = Y@.ORG;

   1273   0 0001F7  8CC7 000B                            LDI      Y@+1,AUTO
          0 0001F9  8D46 0015                            SDI      21,B6

      399     1274
      400     1275        /* Use skipping mode to get back in place                                     */
      401     1276
      402     1277    2         %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   1277   0 0001FB  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          0 0001FE  BC84                                 LDB,B3   ,B4
          0 0001FF  5C01                                 LDV,R5   1
          0 000200  DF43 001A                            STR,R5   26,B3

      403     1278    2      END /* IF */;

      404     1279
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:58   
      405     1280    1   END /* SUBROUTINE */;

   1280   0 000202  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      406     1281
      407     1282        %EOD;

PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:59   
--  Include file information  --

   K_CP6_M.:E05TOU  is referenced.
   KV_ERD_E.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$ERS.
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:60   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_USR_ERS              *0-0-0/w STRC(112)   r     1 PRM_USR_ERS
     D-0-0/b BIT         r     1 USE_EL0                    A-0-0/w STRC(48)    r     1 Y@
     8-0-0/w PTR         r     1 Y@MRD$                     6-0-0/w PTR         r     1 Y@SRD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(728)   r     1 KV$ERD                     0-0-0/w STRC(512)   r     1 KV$MRD
     0-0-0/w STRC(512)   r     1 KV$MVD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(499)   r     1 KV$TRNTBL
     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVO$ERS requires 517 words for executable code.
   Procedure KVO$ERS requires 17 words of local(AUTO) storage.
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:61   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:62   
          MINI XREF LISTING

ERSDON
      1158**LABEL    1186--EXIT     1189--EXIT     1205--EXIT     1215--EXIT     1252--EXIT
KV$ERD.DLTALLFLDS_CHR
       389**DCL      1115>>IF
KV$ERD.ED0_CHR
       383**DCL      1209>>IF
KV$ERD.ED2_CHR
       385**DCL      1198>>IF
KV$ERD.EL0DLTFLD
       375**DCL      1179>>IF
KV$ERD.EL0_CHR
       383**DCL      1176>>IF       1223>>IF
KV$ERD.EXTSRD_CHR
       391**DCL       391--REDEF     392--REDEF
KV$MRD.DCLATRWHNOTP
       433**DCL      1167>>IF
KV$MRD.DVCATR
       442**DCL      1167>>IF
KV$MRD.DVCCLM
       442**DCL      1148>>IF
KV$MRD.DVCLIN
       442**DCL      1148>>IF
KV$MRD.ERD$
       420**DCL      1115>>IF       1176>>IF       1179>>IF       1198>>IF       1209>>IF       1223>>IF
KV$MRD.LNG
       424**DCL      1193>>IF
KV$MRD.WDT
       421**DCL      1167>>IF
KV$MVD.ORG
       473**DCL      1179>>IF
KV$MVD.TRNTBL$
       470**DCL      1184>>CALL
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:63   
KV$PTR.INPCNDPND
       517**DCL       526--REDEF     530--REDEF
KV$PTR.LINLST$
       513**DCL       514--REDEF
KV$PTR.MRD$
       512**DCL      1104>>ASSIGN
KV$PTR.MVD$
       512**DCL      1179>>IF       1184>>CALL
KV$PTR.SRD$
       513**DCL      1103>>ASSIGN
KV$PTR.VDI$
       511**DCL      1123>>IF       1124>>ASSIGN   1154>>ASSIGN   1246>>ASSIGN   1256>>ASSIGN   1260>>ASSIGN
      1277>>ASSIGN
KV$PTR$
       505**DCL       511--IMP-PTR  1103>>ASSIGN   1104>>ASSIGN   1123>>IF       1124>>ASSIGN   1154>>ASSIGN
      1179>>IF       1184>>CALL     1246>>ASSIGN   1256>>ASSIGN   1260>>ASSIGN   1277>>ASSIGN
KV$SRD.BTMRHT
       650**DCL       655--REDEF
KV$SRD.BTMRHT.CLM
       652**DCL      1234>>IF       1248>>IF
KV$SRD.CRT
       726**DCL       731--REDEF    1127>>ASSIGN   1141<<ASSIGN   1264<<ASSIGN   1273<<ASSIGN
KV$SRD.CRT.CLM
       728**DCL      1130<<ASSIGN   1131>>IF       1136<<ASSIGN   1148>>IF       1242<<ASSIGN   1245<<ASSIGN
      1248>>IF       1255<<ASSIGN   1261<<ASSIGN   1265<<ASSIGN   1265>>ASSIGN
KV$SRD.CRT.LIN
       728**DCL      1129<<ASSIGN   1137<<ASSIGN   1137>>ASSIGN   1138>>IF       1148>>IF       1176>>IF
      1238>>IF       1243>>IF       1250>>IF       1250>>IF       1254<<ASSIGN   1254>>ASSIGN   1262<<ASSIGN
KV$SRD.CRT_PST
       731**DCL      1263>>IF       1272>>IF
KV$SRD.DVCLINBIS
       768**DCL      1129>>ASSIGN   1238>>IF       1250>>IF       1262>>ASSIGN
KV$SRD.FLDEND
       690**DCL       695--REDEF
KV$SRD.HI_NONBLN
       760**DCL       765--REDEF    1264>>ASSIGN
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:64   
KV$SRD.HI_NONBLN.CLM
       762**DCL      1243>>IF       1245>>ASSIGN
KV$SRD.HI_NONBLN.LIN
       762**DCL      1176>>IF       1243>>IF       1250>>IF
KV$SRD.HI_NONBLN_PST
       765**DCL      1263>>IF
KV$SRD.ORG
       582**DCL       587--REDEF
KV$SRD.SCROLL
       659**DCL      1128>>ASSIGN   1144<<ASSIGN   1271<<ASSIGN
KV$SRD.SRDEND
       795**DCL       800--REDEF
KV$SRD.TOPLFT
       616**DCL       621--REDEF
KV$SRD.TOPLFT.CLM
       618**DCL      1234>>IF
KV$TRNTBL.OTPESCCHR
       860**DCL       860--REDEF
KV$TRNTBL.SP_CHR
       862**DCL      1184<>CALL
KV$VDI.OTPCNDPND.PST
       925**DCL      1123>>IF       1124<<ASSIGN   1154<<ASSIGN   1246<<ASSIGN   1256<<ASSIGN   1260<<ASSIGN
      1277<<ASSIGN
KVO$DVCCTR
        12**DCL-ENT  1119--CALL     1188--CALL     1204--CALL     1214--CALL     1249--CALL
KVO$OTP1_NONVRT
      1043**DCL-ENT  1184--CALL
KVV$CALUSR_PST
        13**DCL-ENT  1123--CALL     1155--CALL     1247--CALL     1257--CALL     1266--CALL
PRM_USR_ERS
       965**DCL         7--PROC
PRM_USR_ERS.BGNPHSCLM
      1040**DCL      1130>>ASSIGN   1185>>IF       1198>>IF
PRM_USR_ERS.BTMRHT
      1032**DCL      1037--REDEF
PRM_USR_ERS.BTMRHT.CLM
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:65   
      1034**DCL      1131>>IF       1167>>IF       1170>>IF       1234>>IF       1238>>IF       1242>>ASSIGN
      1243>>IF
PRM_USR_ERS.BTMRHT.LIN
      1034**DCL      1138>>IF       1176>>IF       1193>>IF       1238>>IF       1250>>IF       1262>>ASSIGN
PRM_USR_ERS.DLTATR
       971**DCL      1115>>IF       1179>>IF
PRM_USR_ERS.ENDPHSCLM
      1040**DCL      1170>>IF       1185>>IF       1238>>IF       1261>>ASSIGN
PRM_USR_ERS.NO_RE_PST
       971**DCL      1272>>IF
PRM_USR_ERS.TOPLFT
       998**DCL      1003--REDEF
PRM_USR_ERS.TOPLFT.CLM
      1000**DCL      1136>>ASSIGN   1209>>IF       1234>>IF       1255>>ASSIGN
PRM_USR_ERS.TOPLFT.LIN
      1000**DCL      1129>>ASSIGN   1176>>IF       1198>>IF
USE_EL0
      1101**DCL      1162<<ASSIGN   1228<<ASSIGN   1234>>IF       1241>>IF
Y@.ORG
      1093**DCL      1098--REDEF    1127<<ASSIGN   1141>>ASSIGN   1273>>ASSIGN
Y@.ORG_PST
      1098**DCL      1272>>IF
Y@.SCROLL
      1066**DCL      1128<<ASSIGN   1271>>ASSIGN
Y@MRD$
      1061**DCL       348--IMP-PTR   419--IMP-PTR  1104<<ASSIGN   1115>>IF       1148>>IF       1148>>IF
      1167>>IF       1167>>IF       1167>>IF       1176>>IF       1179>>IF       1193>>IF       1198>>IF
      1209>>IF       1223>>IF
Y@SRD$
      1060**DCL       554--IMP-PTR  1103<<ASSIGN   1127>>ASSIGN   1128>>ASSIGN   1129>>ASSIGN   1129>>ASSIGN
      1130>>ASSIGN   1131>>IF       1136>>ASSIGN   1137>>ASSIGN   1137>>ASSIGN   1138>>IF       1141>>ASSIGN
      1144>>ASSIGN   1148>>IF       1148>>IF       1176>>IF       1176>>IF       1234>>IF       1234>>IF
      1238>>IF       1238>>IF       1242>>ASSIGN   1243>>IF       1243>>IF       1243>>IF       1245>>ASSIGN
      1245>>ASSIGN   1248>>IF       1248>>IF       1250>>IF       1250>>IF       1250>>IF       1250>>IF
      1254>>ASSIGN   1254>>ASSIGN   1255>>ASSIGN   1261>>ASSIGN   1262>>ASSIGN   1262>>ASSIGN   1263>>IF
      1263>>IF       1264>>ASSIGN   1264>>ASSIGN   1265>>ASSIGN   1265>>ASSIGN   1271>>ASSIGN   1272>>IF
PL6.E3A0      #002=KVO$ERS File=KVO$MSC.:E05TSI                                  WED 07/30/97 02:09 Page:66   
      1273>>ASSIGN

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:67   
      408        1        /*T***********************************************************/
      409        2        /*T*                                                         */
      410        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      411        4        /*T*                                                         */
      412        5        /*T***********************************************************/
      413        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      414        7        KVO$SCREND: PROC;
      415        8
      416        9        /* Screen end - do halt, erase, home, etc.                                    */
      417       10
      418       11 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
      419       12 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
      420       13 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
      421       14 S      %INCLUDE KV$VDH;                        /* VDH-user ->VDH VDI functions       */
      422       15 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
      423       16 S      %INCLUDE KV$INT;                        /* VDH internal data                  */
      424       17        %KV$MRD;                                /*  REAL DEVICE CONTEXT BLOCK         */
      425       64        %KV$MVD;                                /*  VIRTUAL DEVICE CONTEXT BLOCK      */
      426      108        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
      427      151        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  SUBORDINATE REAL DEVICE CONTEXT   */
      428      426        %EQU KV_SRD=CHARTEXT('KV$SRD');
      429      427        %KV$USRPRM;                             /*  VDH-user parameters               */
      430      478        %KV$USR_PST (NAME=KV_USR_PST_PAG, TOPPAGCNT=1, PHSPSTMOD=SKP, STCLASS=CONSTANT);
      431      548        %KV$VDH_OTPLCL(NAME = KV_VDH_OTPLCL, STCLASS = SYMREF);
      432      621        %KV$VDH_PST(NAME = KV_VDH_PST_NEWLIN, STCLASS = SYMREF);
      433      695        %KV$VDI;                                /*  VDI CONTEXT                       */
      434      766        %KV_PHSPSTMOD_E;
      435      773        %KV_USR_EVT_ID_E;
      436      793
      437      794    1   DCL KVO$WRPBLN ENTRY;
      438      795    1   DCL KVO$PAGBRK ENTRY;
      439      796    1   DCL KVO$PST ENTRY(1);
      440      797    1   DCL KVO$OTPLCL ENTRY(1);
      441      798    1   DCL KVO$OTP1_NONVRT ENTRY(1);
      442      799    1   DCL KVO$ERSTO_ENDOF_SRD ENTRY;
      443      800    1   DCL KVO$ERSSRDTO_HI_NONBLN ENTRY;
      444      801    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:68   
      445      802    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
      446      803    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
      447      804        %EJECT;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:69   
      448      805        /* AUTO variables */
      449      806
      450      807        /* Pointer to SRD to PL6 can remember it better */
      451      808
      452      809    1   DCL Y@SRD$ PTR;
      453      810
      454      811    1   DCL LINES UBIN WORD;
      455      812
      456      813        /* Original (at time of subroutine call) physical column.                     */
      457      814
      458      815    1   DCL ORGPHSCLM UBIN WORD ALIGNED;
      459      816
      460      817        /* Local flags, grouped for easy initialization                               */
      461      818
      462      819    1   DCL 1 FLGS,
      463      820
      464      821        /* LF. We output the halt message after doing a line feed.                    */
      465      822
      466      823    1          2 LF BIT(1),
      467      824
      468      825        /* Position pending. We updated the current position, and
      469      826           should set positioning-pending before exiting.                             */
      470      827
      471      828    1          2 PSTPND BIT(1),
      472      829
      473      830        /* This call is a result of cntrl-l or cancelled output on non-scroll
      474      831           no pagehalt is needed, and make sure the entire screen is erased           */
      475      832
      476      833    1          2 NO_HLT BIT(1);
      477      834
      478      835
      479      836         %KV$VDH_OTPLCL(NAME = VDH_OTPLCL, STCLASS = AUTO);
      480      909         %KV$VDH_PST(NAME = VDH_PST, STCLASS = AUTO);
      481      983        %EJECT;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:70   
      482      984        /* The Code */
      483      985
      484      986    1      FLGS = '0'B;
      485      987    1      GOTO SUBCOMMON;                      /* LOOK BELOW                         */
      486      988
      487      989
      488      990
      489      991    1   KVO$SCRENDNO_HLT: ENTRY;
      490      992    1      FLGS = '0'B;
      491      993    1      FLGS.NO_HLT = '1'B;
      492      994
      493      995
      494      996
      495      997    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      496      998    2      IF NOT %KV_VDI.DVCPGNENB THEN DO;
      497      999    2         RETURN;
      498     1000    2      END /* IF */;
      499     1001    1      Y@SRD$ = KV$PTR.SRD$;
      500     1002    1      ORGPHSCLM = %KV_SRD.CRT.CLM;
      501     1003    1      %KV_VDI.DVCPGNENB = '0'B;
      502     1004    2      IF %KV_SRD.PAGEHALT AND NOT FLGS.NO_HLT THEN DO;
      503     1005
      504     1006        /* We're to halt at the end of the page.                                      */
      505     1007
      506     1008    3         IF %KV_SRD.PRINTHALT AND %KV_SRD.LNG>1 THEN DO;
      507     1009
      508     1010        /* We are to print the halt message                                           */
      509     1011
      510     1012    4            IF %KV_SRD.BTMRHT.LIN>%KV_SRD.CRT.LIN THEN DO;
      511     1013
      512     1014        /* This SRD displays more than 1 line. Put the halt message
      513     1015           on the bottom line.                                                        */
      514     1016
      515     1017    4               VDH_PST = KV_VDH_PST_NEWLIN;
      516     1018    4               VDH_PST.PSTVAL.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.CRT.LIN;
      517     1019    4               CALL KVO$PST(VDH_PST) ;
      518     1020    4               FLGS.LF = '1'B;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:71   
      519     1021    4            END /* IF */;
      520     1022    3            ELSE IF ORGPHSCLM~=%KV_SRD.TOPLFT.CLM
      521     1023    3            THEN CALL KVO$OTP1_NONVRT(BINASC(13));
      522     1024    3            VDH_OTPLCL = KV_VDH_OTPLCL;
      523     1025    3            VDH_OTPLCL.BFR_.ADR$ = ADDR(%KV_USRPRM);
      524     1026    3            VDH_OTPLCL.BFR_.BYTX = POFFC(ADDR(%KV_USRPRM.HLTMSG), ADDR(%KV_USRPRM));
      525     1027    3            VDH_OTPLCL.BFR_.BYTSIZ = %KV_USRPRM.HLTMSGSIZ;
      526     1028    3            VDH_OTPLCL.NONVRT = '1'B;
      527     1029    3            CALL KVO$OTPLCL(VDH_OTPLCL) ;
      528     1030    3            CALL KVO$OTP1_NONVRT(BINASC(13));
      529     1031    3         END; ELSE DO;
      530     1032
      531     1033        /* Send a CR, BEL  instead                                                     */
      532     1034
      533     1035    4            IF %KV_SRD.CRT.LIN<%KV_SRD.BTMRHT.LIN THEN DO;
      534     1036    4               IF %KV_VDI.OTPCNDPND.PST=%KV_PHSPSTMOD_BLN
      535     1037    4               THEN CALL KVV$CALUSR_PST;
      536     1038    4               %KV_SRD.CRT.LIN = %KV_SRD.BTMRHT.LIN;
      537     1039    4               IF %KV_SRD.WRPPAG THEN CALL KVO$WRPBLN;
      538     1040    4               ELSE %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      539     1041    4            END;
      540     1042    3            CALL KVO$OTP1_NONVRT(BINASC(13));
      541     1043    3            CALL KVO$OTP1_NONVRT(BINASC(7));
      542     1044    3         END /* IF */;
      543     1045    2         CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_HLTOTP);
      544     1046    2      END /* IF */;
      545     1047    1      LINES = %KV_SRD.BTMRHT.LIN-%KV_SRD.TOPLFT.LIN;
      546     1048    2      IF NOT FLGS.LF THEN DO;
      547     1049    2         LINES = LINES+1;
      548     1050    2      END /* IF */;
      549     1051    2      IF FLGS.NO_HLT THEN DO;
      550     1052    2         %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.TOPLFT.LIN;
      551     1053    2         %KV_MVD.VRTCLM = 1;
      552     1054    2         ORGPHSCLM = %KV_SRD.TOPLFT.CLM;
      553     1055    2         LINES = LINES+%KV_SRD.CRT.LIN-%KV_SRD.TOPLFT.LIN;
      554     1056    2      END; ELSE DO UNTIL %KV_SRD.CRTVRTLINPHSLIN<%KV_SRD.BTMRHT.LIN
      555     1057    2        OR %KV_SRD.CRTVRTLINPHSLIN=%KV_SRD.TOPLFT.LIN OR LINES=0;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:72   
      556     1058    2         %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN-LINES;
      557     1059    2      END /* IF */;
      558     1060    2      IF %KV_SRD.SCROLL AND %KV_SRD.LNG>1 THEN DO;
      559     1061
      560     1062        /* This terminal is being scrolled.                                           */
      561     1063
      562     1064    3         IF FLGS.LF THEN DO;
      563     1065
      564     1066        /* We did a line feed before outputting a halt message, so we
      565     1067           need to erase the halt message.                                            */
      566     1068
      567     1069    3            CALL KVO$ERSTO_ENDOF_SRD;
      568     1070    3         END /* IF */;
      569     1071    2         %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS+LINES;
      570     1072    2         %KV_SRD.HI_NONBLN.LIN = %KV_SRD.HI_NONBLN.LIN-LINES;
      571     1073    2         FLGS.PSTPND = '1'B;
      572     1074    2      END; ELSE DO;
      573     1075
      574     1076        /* This terminal isn't being scrolled.                                        */
      575     1077
      576     1078    3         IF %KV_MRD.CTNFRM THEN DO;
      577     1079
      578     1080        /* This device is supporting continous forms. We need to go
      579     1081           thru a page-topping procedure.                                             */
      580     1082
      581     1083    4            IF %KV_MRD.LNG=255 AND NOT FLGS.NO_HLT THEN DO;
      582     1084
      583     1085        /* For continuous forms, just backup the line counter unless FF_FLUSHing */
      584     1086
      585     1087    4               %KV_MRD.DVCLIN = %KV_MRD.DVCLIN-%KV_MRD.LNG;
      586     1088    4               FLGS.PSTPND = '1'B;         /* And do the real positioning later  */
      587     1089    4            END; ELSE DO;
      588     1090    5               IF NOT %KV_MRD.FF_INCCR AND NOT %KV_SRD.NOOPTMIZ THEN DO;
      589     1091    5                  LINES = %KV_MRD.DVCCLM;  /* Only do the FF here                */
      590     1092    5                  %KV_MRD.DVCCLM = 1;
      591     1093    4               END; ELSE LINES = 1;
      592     1094    4               CALL KVV$CALUSR (KV_USR_PST_PAG);
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:73   
      593     1095    4               IF ORGPHSCLM~=LINES THEN FLGS.PSTPND = '1'B;
      594     1096    4               %KV_MRD.DVCCLM = LINES;
      595     1097    4            END;
      596     1098    3         END; ELSE DO;
      597     1099
      598     1100        /* This device has an in-place page, i.e., the page doesn't move,
      599     1101           and we need to erase it.                                                   */
      600     1102
      601     1103    4            IF %KV_SRD.WRPPAG AND %KV_SRD.LNG>1 THEN DO;
      602     1104    5               IF NOT FLGS.NO_HLT THEN DO;
      603     1105
      604     1106        /* No need to erase the whole screen, just the rest of it.                    */
      605     1107
      606     1108    5                  %KV_SRD.CRT.LIN = %KV_SRD.BTMRHT.LIN;
      607     1109    5                  IF FLGS.LF          /* Make WRPBLN erase the hltmsg if needed  */
      608     1110    5                  THEN %KV_SRD.NXTNONBLNLIN = %KV_SRD.BTMRHT.LIN;
      609     1111    5                  CALL KVO$WRPBLN;
      610     1112    5               END /* IF */;
      611     1113    4               %KV_SRD.NXTNONBLNLIN = %KV_SRD.TOPLFT.LIN;
      612     1114    4            END; ELSE DO;
      613     1115    4               CALL KVO$ERSSRDTO_HI_NONBLN;
      614     1116    4            END /* IF */;
      615     1117    3            FLGS.PSTPND = '1'B;
      616     1118    3         END /* IF */;
      617     1119
      618     1120        /* Declare the hi non-blank physical position to be the
      619     1121           position just before the top left margin point.                            */
      620     1122
      621     1123    2         %KV_SRD.HI_NONBLN.CLM = %KV_SRD.BTMRHT.CLM;
      622     1124    2         %KV_SRD.HI_NONBLN.LIN = %KV_SRD.TOPLFT.LIN-1;
      623     1125    2      END /* IF */;
      624     1126    1      %KV_SRD.CRT.LIN = %KV_SRD.TOPLFT.LIN;
      625     1127    2      IF (%KV_SRD.CRTVRTLINPHSLIN > %KV_SRD.CRT.LIN) THEN DO;
      626     1128    2         %KV_SRD.CRT.LIN = %KV_SRD.CRTVRTLINPHSLIN;
      627     1129    2         FLGS.PSTPND = '1'B;
      628     1130    2      END /* IF */;
      629     1131    1      CALL KVO$WRPBLN;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:74   
      630     1132    2      IF NOT %KV_SRD.SCROLL THEN DO;
      631     1133
      632     1134
      633     1135    2         CALL KVO$PAGBRK;
      634     1136    2      END /* IF */;
      635     1137    1      %KV_SRD.CRT.CLM = ORGPHSCLM;
      636     1138    1      %KV_VDI.DVCPGNENB = '1'B;
      637     1139
      638     1140        /* Set output conditions pending to get us home                               */
      639     1141
      640     1142    2      IF FLGS.PSTPND THEN DO;
      641     1143
      642     1144        /* We're to make sure that position-pending is set.                           */
      643     1145
      644     1146    3         IF (%KV_VDI.OTPCNDPND.PST = 0) THEN DO;
      645     1147
      646     1148        /* There isn't currently any positioning pending.                             */
      647     1149
      648     1150    3            %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      649     1151    3         END /* IF */;
      650     1152    2         IF %KV_SRD.DVCLINBIS+%KV_SRD.CRT.LIN>512
      651     1153
      652     1154        /* Don't get too far behind, or the output interrupt that finally catches up
      653     1155           will take too long. */
      654     1156
      655     1157    2         THEN CALL KVV$CALUSR_PST;
      656     1158    2      END /* IF */;
      657     1159    1   END /* SUBROUTINE */;
      658     1160        %EOD;

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:75   
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$SCREND.

   Procedure KVO$SCREND requires 581 words for executable code.
   Procedure KVO$SCREND requires 24 words of local(AUTO) storage.

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:76   

 Object Unit name= KVO$SCREND                                 File name= KVO$MSC.:E05TOU
 UTS= JUL 30 '97 02:09:35.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      4      4  KVO$SCREND
    1   Proc  even  none   581    245  KVO$SCREND
    2  RoData even  none    11      B  KVO$SCREND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  KVO$SCREND
     1      9                  yes      Std        0  KVO$SCRENDNO_HLT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KVO$PST
         yes           Std       1 KVO$OTP1_NONVRT
 yes     yes           Std       0 KVV$CALUSR_PST
         yes           Std       0 KVO$ERSSRDTO_HI_NONBLN
         yes           Std       0 KVO$WRPBLN
         yes           Std       0 KVO$ERSTO_ENDOF_SRD
 yes     yes           Std       1 KVV$CALUSR_EVT
 yes     yes           Std       1 KVV$CALUSR
         yes           Std       1 KVO$OTPLCL
         yes           Std       0 KVO$PAGBRK
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:77   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_VDH_OTPLCL                         KV_VDH_PST_NEWLIN
r    G$ROS$
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:78   


      408        1        /*T***********************************************************/
      409        2        /*T*                                                         */
      410        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      411        4        /*T*                                                         */
      412        5        /*T***********************************************************/
      413        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      414        7        KVO$SCREND: PROC;

      7   1 000000  D380 0000 0000  xent KVO$SCREND      LNJ,B5   X6A_AUTO_0
          1 000003       0018 0000                       DC       24,0

      415        8
      416        9        /* Screen end - do halt, erase, home, etc.                                    */
      417       10
      418       11 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
      419       12 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
      420       13 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
      421       14 S      %INCLUDE KV$VDH;                        /* VDH-user ->VDH VDI functions       */
      422       15 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
      423       16 S      %INCLUDE KV$INT;                        /* VDH internal data                  */
      424       17        %KV$MRD;                                /*  REAL DEVICE CONTEXT BLOCK         */
      425       64        %KV$MVD;                                /*  VIRTUAL DEVICE CONTEXT BLOCK      */
      426      108        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
      427      151        %KV$SRD (STCLASS="BASED(Y@SRD$)");      /*  SUBORDINATE REAL DEVICE CONTEXT   */
      428      426        %EQU KV_SRD=CHARTEXT('KV$SRD');
      429      427        %KV$USRPRM;                             /*  VDH-user parameters               */
      430      478        %KV$USR_PST (NAME=KV_USR_PST_PAG, TOPPAGCNT=1, PHSPSTMOD=SKP, STCLASS=CONSTANT);
      431      548        %KV$VDH_OTPLCL(NAME = KV_VDH_OTPLCL, STCLASS = SYMREF);
      432      621        %KV$VDH_PST(NAME = KV_VDH_PST_NEWLIN, STCLASS = SYMREF);
      433      695        %KV$VDI;                                /*  VDI CONTEXT                       */
      434      766        %KV_PHSPSTMOD_E;
      435      773        %KV_USR_EVT_ID_E;
      436      793
      437      794    1   DCL KVO$WRPBLN ENTRY;
      438      795    1   DCL KVO$PAGBRK ENTRY;
      439      796    1   DCL KVO$PST ENTRY(1);
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:79   
      440      797    1   DCL KVO$OTPLCL ENTRY(1);
      441      798    1   DCL KVO$OTP1_NONVRT ENTRY(1);
      442      799    1   DCL KVO$ERSTO_ENDOF_SRD ENTRY;
      443      800    1   DCL KVO$ERSSRDTO_HI_NONBLN ENTRY;
      444      801    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
      445      802    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
      446      803    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
      447      804        %EJECT;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:80   
      448      805        /* AUTO variables */
      449      806
      450      807        /* Pointer to SRD to PL6 can remember it better */
      451      808
      452      809    1   DCL Y@SRD$ PTR;
      453      810
      454      811    1   DCL LINES UBIN WORD;
      455      812
      456      813        /* Original (at time of subroutine call) physical column.                     */
      457      814
      458      815    1   DCL ORGPHSCLM UBIN WORD ALIGNED;
      459      816
      460      817        /* Local flags, grouped for easy initialization                               */
      461      818
      462      819    1   DCL 1 FLGS,
      463      820
      464      821        /* LF. We output the halt message after doing a line feed.                    */
      465      822
      466      823    1          2 LF BIT(1),
      467      824
      468      825        /* Position pending. We updated the current position, and
      469      826           should set positioning-pending before exiting.                             */
      470      827
      471      828    1          2 PSTPND BIT(1),
      472      829
      473      830        /* This call is a result of cntrl-l or cancelled output on non-scroll
      474      831           no pagehalt is needed, and make sure the entire screen is erased           */
      475      832
      476      833    1          2 NO_HLT BIT(1);
      477      834
      478      835
      479      836         %KV$VDH_OTPLCL(NAME = VDH_OTPLCL, STCLASS = AUTO);
      480      909         %KV$VDH_PST(NAME = VDH_PST, STCLASS = AUTO);
      481      983        %EJECT;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:81   
      482      984        /* The Code */
      483      985
      484      986    1      FLGS = '0'B;

    986   1 000005  8747 0008                            CL       FLGS,AUTO

      485      987    1      GOTO SUBCOMMON;                      /* LOOK BELOW                         */

    987   1 000007  0F81 000B                            B        s:993,PREL

      486      988
      487      989
      488      990
      489      991    1   KVO$SCRENDNO_HLT: ENTRY;

    991   1 000009  D380 0000 0000  xent KVO$SCRENDNO_HLTLNJ,B5   X6A_AUTO_0
          1 00000C       0018 0000                       DC       24,0

      490      992    1      FLGS = '0'B;

    992   1 00000E  8747 0008                            CL       FLGS,AUTO

      491      993    1      FLGS.NO_HLT = '1'B;

    993   1 000010  8947 0008                            LBT,'2000'X       FLGS,AUTO
    993   1 000012       2000

    993   1                              SUBCOMMON       null
      492      994
      493      995
      494      996
      495      997    1   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
      496      998    2      IF NOT %KV_VDI.DVCPGNENB THEN DO;

    998   1 000013  EC80 0000 0000  xsym SUBCOMMON       LDB,B6   KV$PTR$
          1 000016  DC86                                 LDB,B5   ,B6
          1 000017  82C5 0019                            LB,'0004'X        25,B5
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:82   
          1 000019       0004
          1 00001A  0501 0004                            BBT      s:1001,PREL

      497      999    2         RETURN;

    999   1 00001C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      498     1000    2      END /* IF */;
      499     1001    1      Y@SRD$ = KV$PTR.SRD$;

   1001   1 00001F  CCC6 000A                            LDB,B4   10,B6
          1 000021  CFC7 0004                            STB,B4   Y@SRD$,AUTO

      500     1002    1      ORGPHSCLM = %KV_SRD.CRT.CLM;

   1002   1 000023  E844 0016                            LDR,R6   22,B4
          1 000025  EF47 0007                            STR,R6   ORGPHSCLM,AUTO

      501     1003    1      %KV_VDI.DVCPGNENB = '0'B;

   1003   1 000027  8845 0019                            LBF,'0004'X       25,B5
   1003   1 000029       0004

      502     1004    2      IF %KV_SRD.PAGEHALT AND NOT FLGS.NO_HLT THEN DO;

   1004   1 00002A  82C4 000E                            LB,'0020'X        14,B4
   1004   1 00002C       0020
          1 00002D  0581 00D7                            BBF      s:1047,PREL
          1 00002F  82C7 0008                            LB,'2000'X        FLGS,AUTO
          1 000031       2000
          1 000032  0501 00D2                            BBT      s:1047,PREL

      503     1005
      504     1006        /* We're to halt at the end of the page.                                      */
      505     1007
      506     1008    3         IF %KV_SRD.PRINTHALT AND %KV_SRD.LNG>1 THEN DO;

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:83   
   1008   1 000034  82C4 000E                            LB,'0080'X        14,B4
   1008   1 000036       0080
          1 000037  0581 0086                            BBF      s:1035,PREL
          1 000039  D2C4 000E                            LLH,R5   14,B4
          1 00003B  5D01                                 CMV,R5   1
          1 00003C  0381 0081                            BLE      s:1035,PREL

      507     1009
      508     1010        /* We are to print the halt message                                           */
      509     1011
      510     1012    4            IF %KV_SRD.BTMRHT.LIN>%KV_SRD.CRT.LIN THEN DO;

   1012   1 00003E  C844 000B                            LDR,R4   11,B4
          1 000040  C944 0015                            CMR,R4   21,B4
          1 000042  0A81 0022                            BALE     s:1022,PREL

      511     1013
      512     1014        /* This SRD displays more than 1 line. Put the halt message
      513     1015           on the bottom line.                                                        */
      514     1016
      515     1017    4               VDH_PST = KV_VDH_PST_NEWLIN;

   1017   1 000044  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_PST_NEWLIN
          1 000047  2C00                                 LDV,R2   0
          1 000048  6C08                                 LDV,R6   8
          1 000049  BB87                                 LAB,B3   ,AUTO
          1 00004A  3C1C                                 LDV,R3   28
          1 00004B  0008                                 MMM

      516     1018    4               VDH_PST.PSTVAL.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.CRT.LIN;

   1018   1 00004C  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 00004E  E846 000B                            LDR,R6   11,B6
          1 000050  E246 0015                            SUB,R6   21,B6
          1 000052  EF47 0010                            STR,R6   VDH_PST+2,AUTO

      517     1019    4               CALL KVO$PST(VDH_PST) ;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:84   

   1019   1 000054  DBC7 000E                            LAB,B5   VDH_PST,AUTO
          1 000056  DFC7 0012                            STB,B5   VDH_PST+4,AUTO
          1 000058  BBC7 0012                            LAB,B3   VDH_PST+4,AUTO
          1 00005A  CBF0 0100                            LAB,B4   256,IMO
          1 00005C  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          1 00005F       0001                            DC       s:1020,PREL

      518     1020    4               FLGS.LF = '1'B;

   1020   1 000060  8947 0008                            LBT,'8000'X       FLGS,AUTO
   1020   1 000062       8000

      519     1021    4            END /* IF */;

   1021   1 000063  0F81 0010                            B        s:1024,PREL

      520     1022    3            ELSE IF ORGPHSCLM~=%KV_SRD.TOPLFT.CLM

   1022   1 000065  6801 0005                            BLZ,R6   s:1023,PREL
          1 000067  E944 000A                            CMR,R6   10,B4
          1 000069  0901 000A                            BE       s:1024,PREL

      521     1023    3            THEN CALL KVO$OTP1_NONVRT(BINASC(13));

   1023   1 00006B  BB80 0000 0001  02                   LAB,B3   +1
          1 00006E  CBF0 0100                            LAB,B4   256,IMO
          1 000070  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          1 000073       0001                            DC       s:1024,PREL

      522     1024    3            VDH_OTPLCL = KV_VDH_OTPLCL;

   1024   1 000074  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_OTPLCL
          1 000077  2C00                                 LDV,R2   0
          1 000078  6C0A                                 LDV,R6   10
          1 000079  BB87                                 LAB,B3   ,AUTO
          1 00007A  3C12                                 LDV,R3   18
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:85   
          1 00007B  0008                                 MMM

      523     1025    3            VDH_OTPLCL.BFR_.ADR$ = ADDR(%KV_USRPRM);

   1025   1 00007C  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 00007F  DC86                                 LDB,B5   ,B6
          1 000080  CCC5 0008                            LDB,B4   8,B5
          1 000082  CFC7 000A                            STB,B4   VDH_OTPLCL+1,AUTO

      524     1026    3            VDH_OTPLCL.BFR_.BYTX = POFFC(ADDR(%KV_USRPRM.HLTMSG), ADDR(%KV_USRPRM));

   1026   1 000084  DC86                                 LDB,B5   ,B6
          1 000085  ACC5 0008                            LDB,B2   8,B5
          1 000087  AFC7 0012                            STB,B2   VDH_PST+4,AUTO
          1 000089  8CC7 0012                            LDI      VDH_PST+4,AUTO
          1 00008B  7031                                 DCL,R7   1
          1 00008C  AFC7 0014                            STB,B2   VDH_PST+6,AUTO
          1 00008E  8D47 0016                            SDI      VDH_PST+8,AUTO
          1 000090  8CC7 0014                            LDI      VDH_PST+6,AUTO
          1 000092  7031                                 DCL,R7   1
          1 000093  8470 0000 0003                       AID      3,IMO
          1 000096  7071                                 DCR,R7   1
          1 000097  7031                                 DCL,R7   1
          1 000098  84C7 0016                            SID      VDH_PST+8,AUTO
          1 00009A  E857                                 LDR,R6   R7
          1 00009B  EF47 000C                            STR,R6   VDH_OTPLCL+3,AUTO

      525     1027    3            VDH_OTPLCL.BFR_.BYTSIZ = %KV_USRPRM.HLTMSGSIZ;

   1027   1 00009D  DC86                                 LDB,B5   ,B6
          1 00009E  9CC5 0008                            LDB,B1   8,B5
          1 0000A0  D2C1 0001                            LLH,R5   1,B1
          1 0000A2  DF47 000D                            STR,R5   VDH_OTPLCL+4,AUTO

      526     1028    3            VDH_OTPLCL.NONVRT = '1'B;

   1028   1 0000A4  8947 0009                            LBT,'0080'X       VDH_OTPLCL,AUTO
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:86   
   1028   1 0000A6       0080

      527     1029    3            CALL KVO$OTPLCL(VDH_OTPLCL) ;

   1029   1 0000A7  DBC7 0009                            LAB,B5   VDH_OTPLCL,AUTO
          1 0000A9  DFC7 0012                            STB,B5   VDH_PST+4,AUTO
          1 0000AB  BBC7 0012                            LAB,B3   VDH_PST+4,AUTO
          1 0000AD  CBF0 0100                            LAB,B4   256,IMO
          1 0000AF  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          1 0000B2       0001                            DC       s:1030,PREL

      528     1030    3            CALL KVO$OTP1_NONVRT(BINASC(13));

   1030   1 0000B3  BB80 0000 0001  02                   LAB,B3   +1
          1 0000B6  CBF0 0100                            LAB,B4   256,IMO
          1 0000B8  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          1 0000BB       0001                            DC       s:1031,PREL

      529     1031    3         END; ELSE DO;

   1031   1 0000BC  0F81 003F                            B        s:1045,PREL

      530     1032
      531     1033        /* Send a CR, BEL  instead                                                     */
      532     1034
      533     1035    4            IF %KV_SRD.CRT.LIN<%KV_SRD.BTMRHT.LIN THEN DO;

   1035   1 0000BE  D844 0015                            LDR,R5   21,B4
          1 0000C0  D944 000B                            CMR,R5   11,B4
          1 0000C2  0881 0027                            BAGE     s:1042,PREL

      534     1036    4               IF %KV_VDI.OTPCNDPND.PST=%KV_PHSPSTMOD_BLN

   1036   1 0000C4  DC86                                 LDB,B5   ,B6
          1 0000C5  C845 001A                            LDR,R4   26,B5
          1 0000C7  4D02                                 CMV,R4   2
          1 0000C8  0981 0007                            BNE      s:1038,PREL
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:87   

      535     1037    4               THEN CALL KVV$CALUSR_PST;

   1037   1 0000CA  CBF0 0000                            LAB,B4   0,IMO
          1 0000CC  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          1 0000CF       0001                            DC       s:1038,PREL

      536     1038    4               %KV_SRD.CRT.LIN = %KV_SRD.BTMRHT.LIN;

   1038   1 0000D0  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0000D2  E846 000B                            LDR,R6   11,B6
          1 0000D4  EF46 0015                            STR,R6   21,B6

      537     1039    4               IF %KV_SRD.WRPPAG THEN CALL KVO$WRPBLN;

   1039   1 0000D6  82C6 000E                            LB,'0001'X        14,B6
   1039   1 0000D8       0001
          1 0000D9  0581 0009                            BBF      s:1040,PREL

   1039   1 0000DB  CBF0 0000                            LAB,B4   0,IMO
          1 0000DD  E380 0000 0000  xent                 LNJ,B6   KVO$WRPBLN
          1 0000E0       0001                            DC       s:1039+11,PREL
          1 0000E1  0F81 0008                            B        s:1042,PREL

      538     1040    4               ELSE %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   1040   1 0000E3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 0000E6  CC85                                 LDB,B4   ,B5
          1 0000E7  5C01                                 LDV,R5   1
          1 0000E8  DF44 001A                            STR,R5   26,B4

      539     1041    4            END;

      540     1042    3            CALL KVO$OTP1_NONVRT(BINASC(13));

   1042   1 0000EA  BB80 0000 0001  02                   LAB,B3   +1
          1 0000ED  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:88   
          1 0000EF  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          1 0000F2       0001                            DC       s:1043,PREL

      541     1043    3            CALL KVO$OTP1_NONVRT(BINASC(7));

   1043   1 0000F3  BB80 0000 0004  02                   LAB,B3   +4
          1 0000F6  CBF0 0100                            LAB,B4   256,IMO
          1 0000F8  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          1 0000FB       0001                            DC       s:1045,PREL

      542     1044    3         END /* IF */;

      543     1045    2         CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_HLTOTP);

   1045   1 0000FC  BB80 0000 0007  02                   LAB,B3   +7
          1 0000FF  CBF0 0100                            LAB,B4   256,IMO
          1 000101  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          1 000104       0001                            DC       s:1047,PREL

      544     1046    2      END /* IF */;

      545     1047    1      LINES = %KV_SRD.BTMRHT.LIN-%KV_SRD.TOPLFT.LIN;

   1047   1 000105  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 000107  E846 000B                            LDR,R6   11,B6
          1 000109  E246 0009                            SUB,R6   9,B6
          1 00010B  EF47 0006                            STR,R6   LINES,AUTO

      546     1048    2      IF NOT FLGS.LF THEN DO;

   1048   1 00010D  89C7 0008                            CMZ      FLGS,AUTO
          1 00010F  0801 0003                            BAL      s:1051,PREL

      547     1049    2         LINES = LINES+1;

   1049   1 000111  8AC7 0006                            INC      LINES,AUTO

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:89   
      548     1050    2      END /* IF */;

      549     1051    2      IF FLGS.NO_HLT THEN DO;

   1051   1 000113  82C7 0008                            LB,'2000'X        FLGS,AUTO
   1051   1 000115       2000
          1 000116  0581 001B                            BBF      s:1058,PREL

      550     1052    2         %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.TOPLFT.LIN;

   1052   1 000118  E846 0009                            LDR,R6   9,B6
          1 00011A  EF46 0013                            STR,R6   19,B6

      551     1053    2         %KV_MVD.VRTCLM = 1;

   1053   1 00011C  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00011F  CCC5 0006                            LDB,B4   6,B5
          1 000121  5C01                                 LDV,R5   1
          1 000122  DF44 001B                            STR,R5   27,B4

      552     1054    2         ORGPHSCLM = %KV_SRD.TOPLFT.CLM;

   1054   1 000124  E846 000A                            LDR,R6   10,B6
          1 000126  EF47 0007                            STR,R6   ORGPHSCLM,AUTO

      553     1055    2         LINES = LINES+%KV_SRD.CRT.LIN-%KV_SRD.TOPLFT.LIN;

   1055   1 000128  C847 0006                            LDR,R4   LINES,AUTO
          1 00012A  CA46 0015                            ADD,R4   21,B6
          1 00012C  C246 0009                            SUB,R4   9,B6
          1 00012E  CF47 0006                            STR,R4   LINES,AUTO

      554     1056    2      END; ELSE DO UNTIL %KV_SRD.CRTVRTLINPHSLIN<%KV_SRD.BTMRHT.LIN

   1056   1 000130  0F81 0014                            B        s:1060,PREL

      555     1057    2        OR %KV_SRD.CRTVRTLINPHSLIN=%KV_SRD.TOPLFT.LIN OR LINES=0;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:90   
      556     1058    2         %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN-LINES;

   1058   1 000132  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 000134  E846 0013                            LDR,R6   19,B6
          1 000136  E247 0006                            SUB,R6   LINES,AUTO
          1 000138  EF46 0013                            STR,R6   19,B6

      557     1059    2      END /* IF */;

   1059   1 00013A  E946 000B                            CMR,R6   11,B6
          1 00013C  0801 0008                            BAL      s:1060,PREL
          1 00013E  E946 0009                            CMR,R6   9,B6
          1 000140  0901 0004                            BE       s:1060,PREL
          1 000142  D847 0006                            LDR,R5   LINES,AUTO
          1 000144  59EE                                 BNEZ,R5  s:1058,SPREL

      558     1060    2      IF %KV_SRD.SCROLL AND %KV_SRD.LNG>1 THEN DO;

   1060   1 000145  82C6 000E                            LB,'0008'X        14,B6
   1060   1 000147       0008
          1 000148  0581 0023                            BBF      s:1078,PREL
          1 00014A  E2C6 000E                            LLH,R6   14,B6
          1 00014C  6D01                                 CMV,R6   1
          1 00014D  0381 001E                            BLE      s:1078,PREL

      559     1061
      560     1062        /* This terminal is being scrolled.                                           */
      561     1063
      562     1064    3         IF FLGS.LF THEN DO;

   1064   1 00014F  89C7 0008                            CMZ      FLGS,AUTO
          1 000151  0881 0007                            BAGE     s:1071,PREL

      563     1065
      564     1066        /* We did a line feed before outputting a halt message, so we
      565     1067           need to erase the halt message.                                            */
      566     1068
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:91   
      567     1069    3            CALL KVO$ERSTO_ENDOF_SRD;

   1069   1 000153  CBF0 0000                            LAB,B4   0,IMO
          1 000155  E380 0000 0000  xent                 LNJ,B6   KVO$ERSTO_ENDOF_SRD
          1 000158       0001                            DC       s:1071,PREL

      568     1070    3         END /* IF */;

      569     1071    2         %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS+LINES;

   1071   1 000159  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 00015B  E846 0019                            LDR,R6   25,B6
          1 00015D  EA47 0006                            ADD,R6   LINES,AUTO
          1 00015F  EF46 0019                            STR,R6   25,B6

      570     1072    2         %KV_SRD.HI_NONBLN.LIN = %KV_SRD.HI_NONBLN.LIN-LINES;

   1072   1 000161  D846 0017                            LDR,R5   23,B6
          1 000163  D247 0006                            SUB,R5   LINES,AUTO
          1 000165  DF46 0017                            STR,R5   23,B6

      571     1073    2         FLGS.PSTPND = '1'B;

   1073   1 000167  8947 0008                            LBT,'4000'X       FLGS,AUTO
   1073   1 000169       4000

      572     1074    2      END; ELSE DO;

   1074   1 00016A  0F81 008D                            B        s:1126,PREL

      573     1075
      574     1076        /* This terminal isn't being scrolled.                                        */
      575     1077
      576     1078    3         IF %KV_MRD.CTNFRM THEN DO;

   1078   1 00016C  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 00016F  CCC5 0008                            LDB,B4   8,B5
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:92   
          1 000171  82C4 0018                            LB,'0800'X        24,B4
          1 000173       0800
          1 000174  0581 0048                            BBF      s:1103,PREL

      577     1079
      578     1080        /* This device is supporting continous forms. We need to go
      579     1081           thru a page-topping procedure.                                             */
      580     1082
      581     1083    4            IF %KV_MRD.LNG=255 AND NOT FLGS.NO_HLT THEN DO;

   1083   1 000176  E2C4 0015                            LLH,R6   21,B4
          1 000178  E970 00FF                            CMR,R6   255,IMO
          1 00017A  0981 0010                            BNE      s:1090,PREL
          1 00017C  82C7 0008                            LB,'2000'X        FLGS,AUTO
          1 00017E       2000
          1 00017F  0501 000B                            BBT      s:1090,PREL

      582     1084
      583     1085        /* For continuous forms, just backup the line counter unless FF_FLUSHing */
      584     1086
      585     1087    4               %KV_MRD.DVCLIN = %KV_MRD.DVCLIN-%KV_MRD.LNG;

   1087   1 000181  E244 001D                            SUB,R6   29,B4
          1 000183  8256                                 NEG      R6
          1 000184  EF44 001D                            STR,R6   29,B4

      586     1088    4               FLGS.PSTPND = '1'B;         /* And do the real positioning later  */

   1088   1 000186  8947 0008                            LBT,'4000'X       FLGS,AUTO
   1088   1 000188       4000

      587     1089    4            END; ELSE DO;

   1089   1 000189  0F81 0063                            B        s:1123,PREL

      588     1090    5               IF NOT %KV_MRD.FF_INCCR AND NOT %KV_SRD.NOOPTMIZ THEN DO;

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:93   
   1090   1 00018B  82C4 0018                            LB,'0002'X        24,B4
   1090   1 00018D       0002
          1 00018E  0501 000E                            BBT      s:1093+2,PREL
          1 000190  89C6 001D                            CMZ      29,B6
          1 000192  0801 000A                            BAL      s:1093+2,PREL

      589     1091    5                  LINES = %KV_MRD.DVCCLM;  /* Only do the FF here                */

   1091   1 000194  D844 001E                            LDR,R5   30,B4
          1 000196  DF47 0006                            STR,R5   LINES,AUTO

      590     1092    5                  %KV_MRD.DVCCLM = 1;

   1092   1 000198  5C01                                 LDV,R5   1
          1 000199  DF44 001E                            STR,R5   30,B4

      591     1093    4               END; ELSE LINES = 1;

   1093   1 00019B  0F81 0004                            B        s:1094,PREL

   1093   1 00019D  5C01                                 LDV,R5   1
          1 00019E  DF47 0006                            STR,R5   LINES,AUTO

      592     1094    4               CALL KVV$CALUSR (KV_USR_PST_PAG);

   1094   1 0001A0  BB80 0000 0009  02                   LAB,B3   +9
          1 0001A3  CBF0 0100                            LAB,B4   256,IMO
          1 0001A5  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          1 0001A8       0001                            DC       s:1095,PREL

      593     1095    4               IF ORGPHSCLM~=LINES THEN FLGS.PSTPND = '1'B;

   1095   1 0001A9  E847 0007                            LDR,R6   ORGPHSCLM,AUTO
          1 0001AB  E947 0006                            CMR,R6   LINES,AUTO
          1 0001AD  0901 0004                            BE       s:1096,PREL

   1095   1 0001AF  8947 0008                            LBT,'4000'X       FLGS,AUTO
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:94   
   1095   1 0001B1       4000

      594     1096    4               %KV_MRD.DVCCLM = LINES;

   1096   1 0001B2  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0001B5  DCC6 0008                            LDB,B5   8,B6
          1 0001B7  D847 0006                            LDR,R5   LINES,AUTO
          1 0001B9  DF45 001E                            STR,R5   30,B5

      595     1097    4            END;

      596     1098    3         END; ELSE DO;

   1098   1 0001BB  0F81 0031                            B        s:1123,PREL

      597     1099
      598     1100        /* This device has an in-place page, i.e., the page doesn't move,
      599     1101           and we need to erase it.                                                   */
      600     1102
      601     1103    4            IF %KV_SRD.WRPPAG AND %KV_SRD.LNG>1 THEN DO;

   1103   1 0001BD  82C6 000E                            LB,'0001'X        14,B6
   1103   1 0001BF       0001
          1 0001C0  0581 0023                            BBF      s:1115,PREL
          1 0001C2  E2C6 000E                            LLH,R6   14,B6
          1 0001C4  6D01                                 CMV,R6   1
          1 0001C5  0381 001E                            BLE      s:1115,PREL

      602     1104    5               IF NOT FLGS.NO_HLT THEN DO;

   1104   1 0001C7  82C7 0008                            LB,'2000'X        FLGS,AUTO
   1104   1 0001C9       2000
          1 0001CA  0501 0011                            BBT      s:1113,PREL

      603     1105
      604     1106        /* No need to erase the whole screen, just the rest of it.                    */
      605     1107
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:95   
      606     1108    5                  %KV_SRD.CRT.LIN = %KV_SRD.BTMRHT.LIN;

   1108   1 0001CC  D846 000B                            LDR,R5   11,B6
          1 0001CE  DF46 0015                            STR,R5   21,B6

      607     1109    5                  IF FLGS.LF          /* Make WRPBLN erase the hltmsg if needed  */

   1109   1 0001D0  89C7 0008                            CMZ      FLGS,AUTO
          1 0001D2  0881 0003                            BAGE     s:1111,PREL

      608     1110    5                  THEN %KV_SRD.NXTNONBLNLIN = %KV_SRD.BTMRHT.LIN;

   1110   1 0001D4  DF46 0014                            STR,R5   20,B6

      609     1111    5                  CALL KVO$WRPBLN;

   1111   1 0001D6  CBF0 0000                            LAB,B4   0,IMO
          1 0001D8  E380 0000 0000  xent                 LNJ,B6   KVO$WRPBLN
          1 0001DB       0001                            DC       s:1113,PREL

      610     1112    5               END /* IF */;

      611     1113    4               %KV_SRD.NXTNONBLNLIN = %KV_SRD.TOPLFT.LIN;

   1113   1 0001DC  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0001DE  E846 0009                            LDR,R6   9,B6
          1 0001E0  EF46 0014                            STR,R6   20,B6

      612     1114    4            END; ELSE DO;

   1114   1 0001E2  0F81 0007                            B        s:1117,PREL

      613     1115    4               CALL KVO$ERSSRDTO_HI_NONBLN;

   1115   1 0001E4  CBF0 0000                            LAB,B4   0,IMO
          1 0001E6  E380 0000 0000  xent                 LNJ,B6   KVO$ERSSRDTO_HI_NONBLN
          1 0001E9       0001                            DC       s:1117,PREL
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:96   

      614     1116    4            END /* IF */;

      615     1117    3            FLGS.PSTPND = '1'B;

   1117   1 0001EA  8947 0008                            LBT,'4000'X       FLGS,AUTO
   1117   1 0001EC       4000

      616     1118    3         END /* IF */;

      617     1119
      618     1120        /* Declare the hi non-blank physical position to be the
      619     1121           position just before the top left margin point.                            */
      620     1122
      621     1123    2         %KV_SRD.HI_NONBLN.CLM = %KV_SRD.BTMRHT.CLM;

   1123   1 0001ED  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 0001EF  E846 000C                            LDR,R6   12,B6
          1 0001F1  EF46 0018                            STR,R6   24,B6

      622     1124    2         %KV_SRD.HI_NONBLN.LIN = %KV_SRD.TOPLFT.LIN-1;

   1124   1 0001F3  D846 0009                            LDR,R5   9,B6
          1 0001F5  5EFF                                 ADV,R5   -1
          1 0001F6  DF46 0017                            STR,R5   23,B6

      623     1125    2      END /* IF */;

      624     1126    1      %KV_SRD.CRT.LIN = %KV_SRD.TOPLFT.LIN;

   1126   1 0001F8  E846 0009                            LDR,R6   9,B6
          1 0001FA  EF46 0015                            STR,R6   21,B6

      625     1127    2      IF (%KV_SRD.CRTVRTLINPHSLIN > %KV_SRD.CRT.LIN) THEN DO;

   1127   1 0001FC  E946 0013                            CMR,R6   19,B6
          1 0001FE  0881 0008                            BAGE     s:1131,PREL
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:97   

      626     1128    2         %KV_SRD.CRT.LIN = %KV_SRD.CRTVRTLINPHSLIN;

   1128   1 000200  E846 0013                            LDR,R6   19,B6
          1 000202  EF46 0015                            STR,R6   21,B6

      627     1129    2         FLGS.PSTPND = '1'B;

   1129   1 000204  8947 0008                            LBT,'4000'X       FLGS,AUTO
   1129   1 000206       4000

      628     1130    2      END /* IF */;

      629     1131    1      CALL KVO$WRPBLN;

   1131   1 000207  CBF0 0000                            LAB,B4   0,IMO
          1 000209  E380 0000 0000  xent                 LNJ,B6   KVO$WRPBLN
          1 00020C       0001                            DC       s:1132,PREL

      630     1132    2      IF NOT %KV_SRD.SCROLL THEN DO;

   1132   1 00020D  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 00020F  82C6 000E                            LB,'0008'X        14,B6
          1 000211       0008
          1 000212  0501 0007                            BBT      s:1137,PREL

      631     1133
      632     1134
      633     1135    2         CALL KVO$PAGBRK;

   1135   1 000214  CBF0 0000                            LAB,B4   0,IMO
          1 000216  E380 0000 0000  xent                 LNJ,B6   KVO$PAGBRK
          1 000219       0001                            DC       s:1137,PREL

      634     1136    2      END /* IF */;

      635     1137    1      %KV_SRD.CRT.CLM = ORGPHSCLM;
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:98   

   1137   1 00021A  ECC7 0004                            LDB,B6   Y@SRD$,AUTO
          1 00021C  E847 0007                            LDR,R6   ORGPHSCLM,AUTO
          1 00021E  EF46 0016                            STR,R6   22,B6

      636     1138    1      %KV_VDI.DVCPGNENB = '1'B;

   1138   1 000220  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000223  CC85                                 LDB,B4   ,B5
          1 000224  8944 0019                            LBT,'0004'X       25,B4
          1 000226       0004

      637     1139
      638     1140        /* Set output conditions pending to get us home                               */
      639     1141
      640     1142    2      IF FLGS.PSTPND THEN DO;

   1142   1 000227  82C7 0008                            LB,'4000'X        FLGS,AUTO
   1142   1 000229       4000
          1 00022A  0581 0017                            BBF      s:1159,PREL

      641     1143
      642     1144        /* We're to make sure that position-pending is set.                           */
      643     1145
      644     1146    3         IF (%KV_VDI.OTPCNDPND.PST = 0) THEN DO;

   1146   1 00022C  CC85                                 LDB,B4   ,B5
          1 00022D  D844 001A                            LDR,R5   26,B4
          1 00022F  5981 0004                            BNEZ,R5  s:1152,PREL

      645     1147
      646     1148        /* There isn't currently any positioning pending.                             */
      647     1149
      648     1150    3            %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   1150   1 000231  5C01                                 LDV,R5   1
          1 000232  DF44 001A                            STR,R5   26,B4
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:99   

      649     1151    3         END /* IF */;

      650     1152    2         IF %KV_SRD.DVCLINBIS+%KV_SRD.CRT.LIN>512

   1152   1 000234  D846 0019                            LDR,R5   25,B6
          1 000236  DA46 0015                            ADD,R5   21,B6
          1 000238  D970 0200                            CMR,R5   512,IMO
          1 00023A  0A81 0007                            BALE     s:1159,PREL

      651     1153
      652     1154        /* Don't get too far behind, or the output interrupt that finally catches up
      653     1155           will take too long. */
      654     1156
      655     1157    2         THEN CALL KVV$CALUSR_PST;

   1157   1 00023C  CBF0 0000                            LAB,B4   0,IMO
          1 00023E  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          1 000241       0001                            DC       s:1159,PREL

      656     1158    2      END /* IF */;

      657     1159    1   END /* SUBROUTINE */;

   1159   1 000242  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      658     1160        %EOD;

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:100  
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$SCREND.
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:101  

 **** Variables and constants ****

  ****  Section 000 RoData KVO$SCREND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 KV_USR_PST_PAG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/b STRC(3)     r     1 FLGS                       6-0-0/w UBIN(16)    r     1 LINES
     7-0-0/w UBIN(16)    r     1 ORGPHSCLM                  9-0-0/w STRC(80)    r     1 VDH_OTPLCL
     E-0-0/w STRC(64)    r     1 VDH_PST                    4-0-0/w PTR         r     1 Y@SRD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(80)    r     1 KV_VDH_OTPLCL
     0-0-0/w STRC(64)    r     1 KV_VDH_PST_NEWLIN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(496)   r     1 KV$SRD
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI

PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:102  

   Procedure KVO$SCREND requires 581 words for executable code.
   Procedure KVO$SCREND requires 24 words of local(AUTO) storage.
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:103  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:104  
          MINI XREF LISTING

FLGS
       819**DCL       986<<ASSIGN    992<<ASSIGN
FLGS.LF
       823**DCL      1020<<ASSIGN   1048>>IF       1064>>IF       1109>>IF
FLGS.NO_HLT
       833**DCL       993<<ASSIGN   1004>>IF       1051>>IF       1083>>IF       1104>>IF
FLGS.PSTPND
       828**DCL      1073<<ASSIGN   1088<<ASSIGN   1095<<ASSIGN   1117<<ASSIGN   1129<<ASSIGN   1142>>IF
KV$MRD.CTNFRM
        52**DCL      1078>>IF
KV$MRD.DVCCLM
        61**DCL      1091>>ASSIGN   1092<<ASSIGN   1096<<ASSIGN
KV$MRD.DVCLIN
        61**DCL      1087<<ASSIGN   1087>>ASSIGN
KV$MRD.FF_INCCR
        54**DCL      1090>>IF
KV$MRD.LNG
        43**DCL      1083>>IF       1087>>ASSIGN
KV$MVD.VRTCLM
       103**DCL      1053<<ASSIGN
KV$PTR.INPCNDPND
       135**DCL       144--REDEF     148--REDEF
KV$PTR.LINLST$
       131**DCL       132--REDEF
KV$PTR.MRD$
       130**DCL      1078>>IF       1083>>IF       1087>>ASSIGN   1087>>ASSIGN   1087>>ASSIGN   1090>>IF
      1091>>ASSIGN   1092>>ASSIGN   1096>>ASSIGN
KV$PTR.MVD$
       130**DCL      1053>>ASSIGN
KV$PTR.SRD$
       131**DCL      1001>>ASSIGN
KV$PTR.VDI$
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:105  
       129**DCL       998>>IF       1003>>ASSIGN   1025>>ASSIGN   1026>>ASSIGN   1026>>ASSIGN   1027>>ASSIGN
      1036>>IF       1040>>ASSIGN   1138>>ASSIGN   1146>>IF       1150>>ASSIGN
KV$PTR$
       123**DCL       129--IMP-PTR   998>>IF       1001>>ASSIGN   1003>>ASSIGN   1025>>ASSIGN   1026>>ASSIGN
      1026>>ASSIGN   1027>>ASSIGN   1036>>IF       1040>>ASSIGN   1053>>ASSIGN   1078>>IF       1083>>IF
      1087>>ASSIGN   1087>>ASSIGN   1087>>ASSIGN   1090>>IF       1091>>ASSIGN   1092>>ASSIGN   1096>>ASSIGN
      1138>>ASSIGN   1146>>IF       1150>>ASSIGN
KV$SRD.BTMRHT
       268**DCL       273--REDEF
KV$SRD.BTMRHT.CLM
       270**DCL      1123>>ASSIGN
KV$SRD.BTMRHT.LIN
       270**DCL      1012>>IF       1018>>ASSIGN   1035>>IF       1038>>ASSIGN   1047>>ASSIGN   1056>>DOUNTIL
      1108>>ASSIGN   1110>>ASSIGN
KV$SRD.CRT
       344**DCL       349--REDEF
KV$SRD.CRT.CLM
       346**DCL      1002>>ASSIGN   1137<<ASSIGN
KV$SRD.CRT.LIN
       346**DCL      1012>>IF       1018>>ASSIGN   1035>>IF       1038<<ASSIGN   1055>>ASSIGN   1108<<ASSIGN
      1126<<ASSIGN   1127>>IF       1128<<ASSIGN   1152>>IF
KV$SRD.CRTVRTLINPHSLIN
       316**DCL      1052<<ASSIGN   1056>>DOUNTIL  1056>>DOUNTIL  1058<<ASSIGN   1058>>ASSIGN   1127>>IF
      1128>>ASSIGN
KV$SRD.DVCLINBIS
       386**DCL      1071<<ASSIGN   1071>>ASSIGN   1152>>IF
KV$SRD.FLDEND
       308**DCL       313--REDEF
KV$SRD.HI_NONBLN
       378**DCL       383--REDEF
KV$SRD.HI_NONBLN.CLM
       380**DCL      1123<<ASSIGN
KV$SRD.HI_NONBLN.LIN
       380**DCL      1072<<ASSIGN   1072>>ASSIGN   1124<<ASSIGN
KV$SRD.LNG
       276**DCL      1008>>IF       1060>>IF       1103>>IF
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:106  
KV$SRD.NOOPTMIZ
       422**DCL      1090>>IF
KV$SRD.NXTNONBLNLIN
       316**DCL      1110<<ASSIGN   1113<<ASSIGN
KV$SRD.ORG
       200**DCL       205--REDEF
KV$SRD.PAGEHALT
       277**DCL      1004>>IF
KV$SRD.PRINTHALT
       276**DCL      1008>>IF
KV$SRD.SCROLL
       277**DCL      1060>>IF       1132>>IF
KV$SRD.SRDEND
       413**DCL       418--REDEF
KV$SRD.TOPLFT
       234**DCL       239--REDEF
KV$SRD.TOPLFT.CLM
       236**DCL      1022>>IF       1054>>ASSIGN
KV$SRD.TOPLFT.LIN
       236**DCL      1047>>ASSIGN   1052>>ASSIGN   1055>>ASSIGN   1056>>DOUNTIL  1113>>ASSIGN   1124>>ASSIGN
      1126>>ASSIGN
KV$SRD.WRPPAG
       278**DCL      1039>>IF       1103>>IF
KV$USRPRM
       448**DCL      1025--ASSIGN   1026--ASSIGN
KV$USRPRM.HLTMSG
       449**DCL      1026--ASSIGN
KV$USRPRM.HLTMSGSIZ
       448**DCL      1027>>ASSIGN
KV$VDI.DVCPGNENB
       752**DCL       998>>IF       1003<<ASSIGN   1138<<ASSIGN
KV$VDI.OTPCNDPND.PST
       753**DCL      1036>>IF       1040<<ASSIGN   1146>>IF       1150<<ASSIGN
KV$VDI.USRPRM$
       717**DCL      1025>>ASSIGN   1026>>ASSIGN   1026>>ASSIGN   1027>>ASSIGN
KVO$ERSSRDTO_HI_NONBLN
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:107  
       800**DCL-ENT  1115--CALL
KVO$ERSTO_ENDOF_SRD
       799**DCL-ENT  1069--CALL
KVO$OTP1_NONVRT
       798**DCL-ENT  1023--CALL     1030--CALL     1042--CALL     1043--CALL
KVO$OTPLCL
       797**DCL-ENT  1029--CALL
KVO$PAGBRK
       795**DCL-ENT  1135--CALL
KVO$PST
       796**DCL-ENT  1019--CALL
KVO$WRPBLN
       794**DCL-ENT  1039--CALL     1111--CALL     1131--CALL
KVV$CALUSR
       802**DCL-ENT  1094--CALL
KVV$CALUSR_EVT
       801**DCL-ENT  1045--CALL
KVV$CALUSR_PST
       803**DCL-ENT  1037--CALL     1157--CALL
KV_USR_PST_PAG
       505**DCL      1094<>CALL
KV_USR_PST_PAG.PHSPST
       538**DCL       543--REDEF
KV_VDH_OTPLCL
       584**DCL      1024>>ASSIGN
KV_VDH_PST_NEWLIN
       648**DCL      1017>>ASSIGN
KV_VDH_PST_NEWLIN.PSTVAL
       686**DCL       691--REDEF
LINES
       811**DCL      1047<<ASSIGN   1049<<ASSIGN   1049>>ASSIGN   1055<<ASSIGN   1055>>ASSIGN   1056>>DOUNTIL
      1058>>ASSIGN   1071>>ASSIGN   1072>>ASSIGN   1091<<ASSIGN   1093<<ASSIGN   1095>>IF       1096>>ASSIGN
ORGPHSCLM
       815**DCL      1002<<ASSIGN   1022>>IF       1054<<ASSIGN   1095>>IF       1137>>ASSIGN
SUBCOMMON
       993**LABEL     987--GOTO
PL6.E3A0      #003=KVO$SCREND File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:108  
VDH_OTPLCL
       872**DCL      1024<<ASSIGN   1029<>CALL
VDH_OTPLCL.BFR_.ADR$
       905**DCL      1025<<ASSIGN
VDH_OTPLCL.BFR_.BYTSIZ
       905**DCL      1027<<ASSIGN
VDH_OTPLCL.BFR_.BYTX
       905**DCL      1026<<ASSIGN
VDH_OTPLCL.NONVRT
       878**DCL      1028<<ASSIGN
VDH_PST
       936**DCL      1017<<ASSIGN   1019<>CALL
VDH_PST.PSTVAL
       974**DCL       979--REDEF
VDH_PST.PSTVAL.LIN
       976**DCL      1018<<ASSIGN
Y@SRD$
       809**DCL       172--IMP-PTR  1001<<ASSIGN   1002>>ASSIGN   1004>>IF       1008>>IF       1008>>IF
      1012>>IF       1012>>IF       1018>>ASSIGN   1018>>ASSIGN   1022>>IF       1035>>IF       1035>>IF
      1038>>ASSIGN   1038>>ASSIGN   1039>>IF       1047>>ASSIGN   1047>>ASSIGN   1052>>ASSIGN   1052>>ASSIGN
      1054>>ASSIGN   1055>>ASSIGN   1055>>ASSIGN   1056>>DOUNTIL  1056>>DOUNTIL  1056>>DOUNTIL  1056>>DOUNTIL
      1058>>ASSIGN   1058>>ASSIGN   1060>>IF       1060>>IF       1071>>ASSIGN   1071>>ASSIGN   1072>>ASSIGN
      1072>>ASSIGN   1090>>IF       1103>>IF       1103>>IF       1108>>ASSIGN   1108>>ASSIGN   1110>>ASSIGN
      1110>>ASSIGN   1113>>ASSIGN   1113>>ASSIGN   1123>>ASSIGN   1123>>ASSIGN   1124>>ASSIGN   1124>>ASSIGN
      1126>>ASSIGN   1126>>ASSIGN   1127>>IF       1127>>IF       1128>>ASSIGN   1128>>ASSIGN   1132>>IF
      1137>>ASSIGN   1152>>IF       1152>>IF

PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:109  
      659        1        /*T***********************************************************/
      660        2        /*T*                                                         */
      661        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      662        4        /*T*                                                         */
      663        5        /*T***********************************************************/
      664        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      665        7        KVO$WRPBLN: PROC;
      666        8
      667        9        /* Erase from nxtnonblnlin to CRT.lin                                      */
      668       10
      669       11 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
      670       12 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
      671       13 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
      672       14 S      %INCLUDE KV$VDH;                        /* VDH-user ->VDH VDI functions       */
      673       15 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
      674       16 S      %INCLUDE KV$INT;                        /* VDH internal data                  */
      675       17        %KV$PTR;
      676       60        %KV$SRD;
      677      335        %KV$MRD;
      678      382        %KV$VDI;
      679      453        %KV_INPUNT_E;
      680      458    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
      681      459
      682      460        /* SRD hi_nonbln position saved here so that it can be
      683      461           modified for erase to work past it, then restored.                         */
      684      462        %KV$PST(NAME = NONBLN, STCLASS = AUTO);
      685      496
      686      497         %KV$USR_ERS(NAME = USR_ERS, STCLASS = AUTO);
      687      601         %KV$USR_ERS(NAME = KV_USR_ERS, STCLASS = SYMREF);
      688      705
      689      706    2      IF %KV_SRD.DVCLINBIS=0 AND %KV_MRD.FSTERS AND %KV_SRD.WRPPAG THEN DO;
      690      707    2         USR_ERS = KV_USR_ERS;
      691      708    2         USR_ERS.BGNPHSCLM = %KV_SRD.TOPLFT.CLM;
      692      709    2         USR_ERS.TOPLFT.CLM = %KV_SRD.TOPLFT.CLM;
      693      710    2         USR_ERS.ENDPHSCLM = %KV_SRD.BTMRHT.CLM;
      694      711    2         USR_ERS.BTMRHT.CLM = %KV_SRD.BTMRHT.CLM;
      695      712    2         NONBLN = %KV_SRD.HI_NONBLN;
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:110  
      696      713    2         USR_ERS.TOPLFT.LIN = %KV_SRD.NXTNONBLNLIN;
      697      714    2         USR_ERS.BTMRHT.LIN = %KV_SRD.CRT.LIN+1;
      698      715    2         IF (USR_ERS.BTMRHT.LIN > %KV_SRD.BTMRHT.LIN)
      699      716    2         THEN USR_ERS.BTMRHT.LIN = %KV_SRD.BTMRHT.LIN;
      700      717    3         IF (USR_ERS.BTMRHT.LIN >= USR_ERS.TOPLFT.LIN) THEN DO;
      701      718    3            %KV_SRD.HI_NONBLN_PST = USR_ERS.BTMRHT_PST;
      702      719    3            CALL KVV$CALUSR (USR_ERS);
      703      720    3         END /* IF */;
      704      721    2         %KV_SRD.HI_NONBLN = NONBLN;
      705      722    2         %KV_SRD.NXTNONBLNLIN = USR_ERS.BTMRHT.LIN + 1;
      706      723    2         IF (%KV_VDI.INPUNT ~= %KV_INPUNT_BLK)
      707      724    2         THEN %KV_SRD.FLDEND_PST = USR_ERS.BTMRHT_PST;
      708      725    2      END /* IF */;
      709      726    1   END /* SUBROUTINE */;

PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:111  
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$WRPBLN.

   Procedure KVO$WRPBLN requires 135 words for executable code.
   Procedure KVO$WRPBLN requires 16 words of local(AUTO) storage.

    No errors detected in file KVO$MSC.:E05TSI    .

PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:112  

 Object Unit name= KVO$WRPBLN                                 File name= KVO$MSC.:E05TOU
 UTS= JUL 30 '97 02:09:55.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   135     87  KVO$WRPBLN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  KVO$WRPBLN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVV$CALUSR
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_USR_ERS                       r    G$ROS$
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:113  


      659        1        /*T***********************************************************/
      660        2        /*T*                                                         */
      661        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      662        4        /*T*                                                         */
      663        5        /*T***********************************************************/
      664        6        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
      665        7        KVO$WRPBLN: PROC;

      7   0 000000  D380 0000 0000  xent KVO$WRPBLN      LNJ,B5   X6A_AUTO_0
          0 000003       0010 0000                       DC       16,0

      666        8
      667        9        /* Erase from nxtnonblnlin to CRT.lin                                      */
      668       10
      669       11 S      %INCLUDE KV_GLBCNS_E;                   /* VDH global constant EQUs           */
      670       12 S      %INCLUDE KV$GLBCTX;                     /* VDH global context                 */
      671       13 S      %INCLUDE KV$GLB;                        /* VDH global substructures           */
      672       14 S      %INCLUDE KV$VDH;                        /* VDH-user ->VDH VDI functions       */
      673       15 S      %INCLUDE KV$USR;                        /* VDH ->VDH-user VDI functions       */
      674       16 S      %INCLUDE KV$INT;                        /* VDH internal data                  */
      675       17        %KV$PTR;
      676       60        %KV$SRD;
      677      335        %KV$MRD;
      678      382        %KV$VDI;
      679      453        %KV_INPUNT_E;
      680      458    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
      681      459
      682      460        /* SRD hi_nonbln position saved here so that it can be
      683      461           modified for erase to work past it, then restored.                         */
      684      462        %KV$PST(NAME = NONBLN, STCLASS = AUTO);
      685      496
      686      497         %KV$USR_ERS(NAME = USR_ERS, STCLASS = AUTO);
      687      601         %KV$USR_ERS(NAME = KV_USR_ERS, STCLASS = SYMREF);
      688      705
      689      706    2      IF %KV_SRD.DVCLINBIS=0 AND %KV_MRD.FSTERS AND %KV_SRD.WRPPAG THEN DO;

PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:114  
    706   0 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000008  DCC6 000A                            LDB,B5   10,B6
          0 00000A  E845 0019                            LDR,R6   25,B5
          0 00000C  6981 0077                            BNEZ,R6  s:726,PREL
          0 00000E  CCC6 0008                            LDB,B4   8,B6
          0 000010  82C4 0017                            LB,'0001'X        23,B4
          0 000012       0001
          0 000013  0581 0070                            BBF      s:726,PREL
          0 000015  82C5 000E                            LB,'0001'X        14,B5
          0 000017       0001
          0 000018  0581 006B                            BBF      s:726,PREL

      690      707    2         USR_ERS = KV_USR_ERS;

    707   0 00001A  AB80 0000 0000  xsym                 LAB,B2   KV_USR_ERS
          0 00001D  2C00                                 LDV,R2   0
          0 00001E  6C0E                                 LDV,R6   14
          0 00001F  BB87                                 LAB,B3   ,AUTO
          0 000020  3C0C                                 LDV,R3   12
          0 000021  0008                                 MMM

      691      708    2         USR_ERS.BGNPHSCLM = %KV_SRD.TOPLFT.CLM;

    708   0 000022  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000025  DCC6 000A                            LDB,B5   10,B6
          0 000027  E845 000A                            LDR,R6   10,B5
          0 000029  EF47 000B                            STR,R6   USR_ERS+5,AUTO

      692      709    2         USR_ERS.TOPLFT.CLM = %KV_SRD.TOPLFT.CLM;

    709   0 00002B  DCC6 000A                            LDB,B5   10,B6
          0 00002D  D845 000A                            LDR,R5   10,B5
          0 00002F  DF47 0008                            STR,R5   USR_ERS+2,AUTO

      693      710    2         USR_ERS.ENDPHSCLM = %KV_SRD.BTMRHT.CLM;

    710   0 000031  C845 000C                            LDR,R4   12,B5
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:115  
          0 000033  CF47 000C                            STR,R4   USR_ERS+6,AUTO

      694      711    2         USR_ERS.BTMRHT.CLM = %KV_SRD.BTMRHT.CLM;

    711   0 000035  DCC6 000A                            LDB,B5   10,B6
          0 000037  B845 000C                            LDR,R3   12,B5
          0 000039  BF47 000A                            STR,R3   USR_ERS+4,AUTO

      695      712    2         NONBLN = %KV_SRD.HI_NONBLN;

    712   0 00003B  DCC6 000A                            LDB,B5   10,B6
          0 00003D  8CC5 0017                            LDI      23,B5
          0 00003F  8D47 0004                            SDI      NONBLN,AUTO

      696      713    2         USR_ERS.TOPLFT.LIN = %KV_SRD.NXTNONBLNLIN;

    713   0 000041  A845 0014                            LDR,R2   20,B5
          0 000043  AF47 0007                            STR,R2   USR_ERS+1,AUTO

      697      714    2         USR_ERS.BTMRHT.LIN = %KV_SRD.CRT.LIN+1;

    714   0 000045  9845 0015                            LDR,R1   21,B5
          0 000047  1E01                                 ADV,R1   1
          0 000048  9F47 0009                            STR,R1   USR_ERS+3,AUTO

      698      715    2         IF (USR_ERS.BTMRHT.LIN > %KV_SRD.BTMRHT.LIN)

    715   0 00004A  9945 000B                            CMR,R1   11,B5
          0 00004C  0A81 0005                            BALE     s:717,PREL

      699      716    2         THEN USR_ERS.BTMRHT.LIN = %KV_SRD.BTMRHT.LIN;

    716   0 00004E  9845 000B                            LDR,R1   11,B5
          0 000050  9F47 0009                            STR,R1   USR_ERS+3,AUTO

      700      717    3         IF (USR_ERS.BTMRHT.LIN >= USR_ERS.TOPLFT.LIN) THEN DO;

PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:116  
    717   0 000052  9952                                 CMR,R1   R2
          0 000053  0801 0011                            BAL      s:721,PREL

      701      718    3            %KV_SRD.HI_NONBLN_PST = USR_ERS.BTMRHT_PST;

    718   0 000055  8CC7 0009                            LDI      USR_ERS+3,AUTO
          0 000057  8D45 0017                            SDI      23,B5

      702      719    3            CALL KVV$CALUSR (USR_ERS);

    719   0 000059  DBC7 0006                            LAB,B5   USR_ERS,AUTO
          0 00005B  DFC7 000E                            STB,B5   USR_ERS+8,AUTO
          0 00005D  BBC7 000E                            LAB,B3   USR_ERS+8,AUTO
          0 00005F  CBF0 0100                            LAB,B4   256,IMO
          0 000061  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          0 000064       0001                            DC       s:721,PREL

      703      720    3         END /* IF */;

      704      721    2         %KV_SRD.HI_NONBLN = NONBLN;

    721   0 000065  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          0 000068  DCC6 000A                            LDB,B5   10,B6
          0 00006A  8CC7 0004                            LDI      NONBLN,AUTO
          0 00006C  8D45 0017                            SDI      23,B5

      705      722    2         %KV_SRD.NXTNONBLNLIN = USR_ERS.BTMRHT.LIN + 1;

    722   0 00006E  DCC6 000A                            LDB,B5   10,B6
          0 000070  D847 0009                            LDR,R5   USR_ERS+3,AUTO
          0 000072  5E01                                 ADV,R5   1
          0 000073  DF45 0014                            STR,R5   20,B5

      706      723    2         IF (%KV_VDI.INPUNT ~= %KV_INPUNT_BLK)

    723   0 000075  DC86                                 LDB,B5   ,B6
          0 000076  C845 001D                            LDR,R4   29,B5
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:117  
          0 000078  4045                                 SOR,R4   5
          0 000079  C570 0003                            AND,R4   3,IMO
          0 00007B  4D03                                 CMV,R4   3
          0 00007C  0901 0007                            BE       s:726,PREL

      707      724    2         THEN %KV_SRD.FLDEND_PST = USR_ERS.BTMRHT_PST;

    724   0 00007E  CCC6 000A                            LDB,B4   10,B6
          0 000080  8CC7 0009                            LDI      USR_ERS+3,AUTO
          0 000082  8D44 0010                            SDI      16,B4

      708      725    2      END /* IF */;

      709      726    1   END /* SUBROUTINE */;

    726   0 000084  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:118  
--  Include file information  --

   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$WRPBLN.
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:119  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC(32)    r     1 NONBLN                     6-0-0/w STRC(112)   r     1 USR_ERS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(112)   r     1 KV_USR_ERS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(480)   r     1 KV$PTR
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KVO$WRPBLN requires 135 words for executable code.
   Procedure KVO$WRPBLN requires 16 words of local(AUTO) storage.

    No errors detected in file KVO$MSC.:E05TSI    .
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:120  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:121  
          MINI XREF LISTING

KV$MRD.FSTERS
       368**DCL       706>>IF
KV$PTR.INPCNDPND
        44**DCL        53--REDEF      57--REDEF
KV$PTR.LINLST$
        40**DCL        41--REDEF
KV$PTR.MRD$
        39**DCL       706>>IF
KV$PTR.SRD$
        40**DCL       706>>IF        706>>IF        708>>ASSIGN    709>>ASSIGN    710>>ASSIGN    711>>ASSIGN
       712>>ASSIGN    713>>ASSIGN    714>>ASSIGN    715>>IF        716>>ASSIGN    718>>ASSIGN    721>>ASSIGN
       722>>ASSIGN    724>>ASSIGN
KV$PTR.VDI$
        38**DCL       723>>IF
KV$PTR$
        32**DCL        38--IMP-PTR   706>>IF        706>>IF        706>>IF        708>>ASSIGN    709>>ASSIGN
       710>>ASSIGN    711>>ASSIGN    712>>ASSIGN    713>>ASSIGN    714>>ASSIGN    715>>IF        716>>ASSIGN
       718>>ASSIGN    721>>ASSIGN    722>>ASSIGN    723>>IF        724>>ASSIGN
KV$SRD.BTMRHT
       177**DCL       182--REDEF
KV$SRD.BTMRHT.CLM
       179**DCL       710>>ASSIGN    711>>ASSIGN
KV$SRD.BTMRHT.LIN
       179**DCL       715>>IF        716>>ASSIGN
KV$SRD.CRT
       253**DCL       258--REDEF
KV$SRD.CRT.LIN
       255**DCL       714>>ASSIGN
KV$SRD.DVCLINBIS
       295**DCL       706>>IF
KV$SRD.FLDEND
       217**DCL       222--REDEF
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:122  
KV$SRD.FLDEND_PST
       222**DCL       724<<ASSIGN
KV$SRD.HI_NONBLN
       287**DCL       292--REDEF     712>>ASSIGN    721<<ASSIGN
KV$SRD.HI_NONBLN_PST
       292**DCL       718<<ASSIGN
KV$SRD.NXTNONBLNLIN
       225**DCL       713>>ASSIGN    722<<ASSIGN
KV$SRD.ORG
       109**DCL       114--REDEF
KV$SRD.SRDEND
       322**DCL       327--REDEF
KV$SRD.TOPLFT
       143**DCL       148--REDEF
KV$SRD.TOPLFT.CLM
       145**DCL       708>>ASSIGN    709>>ASSIGN
KV$SRD.WRPPAG
       187**DCL       706>>IF
KV$VDI.INPUNT
       444**DCL       723>>IF
KVV$CALUSR
       458**DCL-ENT   719--CALL
KV_USR_ERS
       628**DCL       707>>ASSIGN
KV_USR_ERS.BTMRHT
       695**DCL       700--REDEF
KV_USR_ERS.TOPLFT
       661**DCL       666--REDEF
NONBLN
       486**DCL       712<<ASSIGN    721>>ASSIGN
USR_ERS
       524**DCL       707<<ASSIGN    719<>CALL
USR_ERS.BGNPHSCLM
       599**DCL       708<<ASSIGN
USR_ERS.BTMRHT
       591**DCL       596--REDEF
PL6.E3A0      #004=KVO$WRPBLN File=KVO$MSC.:E05TSI                               WED 07/30/97 02:09 Page:123  
USR_ERS.BTMRHT.CLM
       593**DCL       711<<ASSIGN
USR_ERS.BTMRHT.LIN
       593**DCL       714<<ASSIGN    715>>IF        716<<ASSIGN    717>>IF        722>>ASSIGN
USR_ERS.BTMRHT_PST
       596**DCL       718>>ASSIGN    724>>ASSIGN
USR_ERS.ENDPHSCLM
       599**DCL       710<<ASSIGN
USR_ERS.TOPLFT
       557**DCL       562--REDEF
USR_ERS.TOPLFT.CLM
       559**DCL       709<<ASSIGN
USR_ERS.TOPLFT.LIN
       559**DCL       713<<ASSIGN    717>>IF
