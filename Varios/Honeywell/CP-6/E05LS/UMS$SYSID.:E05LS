VERSION E05

PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:1    
        1        1        /*M* UMS$SYSID  Monitor module to set and allocate SYSIDs and BOOTID         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        UMS$SYSID: PROC;
        9        9        /*D* NAME:        UMS$SYSID
       10       10             PURPOSE:     To handle the M$SYSID pmme
       11       11             CALL:        CALL UMS$SYSID;
       12       12             INPUT:       B$PS$(0) - Points to an FPT$SYSID_V area
       13       13                          B$PS$(1) - Points to a VLR_SYSID area
       14       14             OUTPUT:      S_SYSID - Possibly set to new SYSID range start
       15       15                          S_NSYSIDS - Possibly set to new SYSID range length
       16       16                          S_GETTING_SYSIDS - Reset if FPTN.V.SETSYSID is set
       17       17                          S_STREAMFILEID - Possibly set to BOOTID for this boot
       18       18                          FO_SYMBINFO.STREAMFILEID - Possibly set to BOOTID also
       19       19                          ROSEG.STREAMFILENO - Set to new S_SYSID if this
       20       20                             caller is GHOST1 setting S_SYSID
       21       21                          CACHE - Possibly turned on
       22       22                          VLR_SYSID - Passed back to the user containing all
       23       23                             running SYSIDs
       24       24             DESCRIPTION: UMS$SYSID has three separate functions. These are:
       25       25                             o Return all running SYSIDs to the caller
       26       26                             o Set the system BOOTID
       27       27                             o Set a new SYSID allocation range
       28       28
       29       29                          Which functions are performed depend solely on the
       30       30                          option bits in the V-area of the FPT.
       31       31                          FPT$SYSID_V.GETSYSIDS   - Returns running SYSIDs
       32       32                          FPT$SYSID_V.SETSYSID    - Sets S_SYSID and S_NSYSIDS
       33       33                          FPT$SYSID_V.SETBOOTID   - Sets S_STREAMFILEID
       34       34
       35       35                          The procedure will fill in B$JIT.ERR.CODE if:
       36       36                             o Called by other than GHOST1 or OUTSYM
       37       37                             o Too small a VLR_SYSID area is passed
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:2    
       38       38        */
       39       39        %INCLUDE B$JIT_C;
       40      353        %INCLUDE B$ROSEG;
       41      416        %INCLUDE B$USER;
       42      632        %B$USERREFS;
       43      636        %INCLUDE B_ERRORS_C;
       44     1763        %INCLUDE B_PTRS_R;
       45     1771        %INCLUDE HF_LOCK_C;
       46     1785        %INCLUDE JG_GHOSTS_C;
       47     1875        %INCLUDE SS_SCHED_C;
       48     2108        %INCLUDE SS_SCHED_R;
       49     2151        %INCLUDE UM$CP6V_C;
       50     2338        %INCLUDE UM_CP6;
       51     3190        %B$JIT0;
       52     3279    1         2 * BIT(1);
       53     3280        %FPT$SYSID_V;
       54     3284        %VLR$SYSID_V;
       55     3287        %VLR_SYMBINFO (FPTN=FO_SYMBINFO,STCLASS=SYMREF);
       56     3303    1   DCL B$JIT$ PTR SYMREF;
       57     3304    1   DCL B$ROSEG$ PTR SYMREF;
       58     3305    1   DCL B_MUAIS UBIN SYMREF;
       59     3306    1   DCL S_CUN UBIN SYMREF;
       60     3307    1   DCL HFF$DSIZ ENTRY(2);
       61     3308    1   DCL UMS$BTON ENTRY(2) ALTRET;
       62     3309    1   DCL UMS$NTOB ENTRY(2) ALTRET;
       63     3310    1   DCL SSS$CACHE ENTRY;
       64     3311    1   DCL SSS$CACHEBP ENTRY;
       65     3312        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:3    
       66     3313    1           B$JIT$->B$JIT.ERR = '251523400002'O; /* UMS-0-2                       */
       67     3314    1           IF (S_CUN~=JG_GHOST1# AND S_CUN~=JG_OUTSYM#)
       68     3315    1             OR (S_CUN~=JG_GHOST1# AND B$PS$(0)->FPT$SYSID_V.SETBOOTID)
       69     3316    2             THEN DO;
       70     3317    2               B$JIT$->B$JIT.ERR.CODE = %E$DOMAIN;
       71     3318        /*E* ERROR: UMS-E$DOMAIN-2
       72     3319           MESSAGE: Only GHOST1 or OUTSYM may use M$SYSID
       73     3320        */
       74     3321    2               RETURN;
       75     3322    2               END;
       76     3323    1           IF B$PS$(0)->FPT$SYSID_V.SETBOOTID
       77     3324    1             THEN CALL SETBOOTID;
       78     3325    1           IF B$PS$(0)->FPT$SYSID_V.GETSYSIDS
       79     3326    1             THEN CALL GETSYSIDS ALTRET(DONE);
       80     3327    1           IF B$PS$(0)->FPT$SYSID_V.SETSYSID
       81     3328    1             THEN CALL SETSYSID;
       82     3329    1   DONE:   RETURN;
       83     3330        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:4    
       84     3331    1   SETBOOTID: PROC;
       85     3332        /*I* NAME:        SETBOOTID
       86     3333             PURPOSE:     To set the new BOOTID for this uptime
       87     3334             CALL:        CALL SETBOOTID;
       88     3335             INPUT:       B$PS$(0)->FPT$SYSID_V.BOOTID - Highest found BOOTID from
       89     3336                             :SYMO account
       90     3337                          S_STREAMFILEID - BOOTID from last uptime if recovered OK
       91     3338             OUTPUT:      S_STREAMFILEID - Set to BOOTID for this uptime
       92     3339                          FO_SYMBINFO.STREAMFILEID# - Set to BOOTID for this uptime
       93     3340             DESCRIPTION: SETBOOTID determines the BOOTID for this uptime as one
       94     3341                          greater than the greater of S_STREAMFILEID and
       95     3342                          B$PS$(0)->FPT$SYSID_V.BOOTID. This new BOOTID is stored
       96     3343                          into S_STREAMFILEID and FO_SYMBINFO.STREAMFILEID.
       97     3344        */
       98     3345    2   DCL I SBIN;
       99     3346    2           IF B$PS$(0)->FPT$SYSID_V.BOOTID>S_STREAMFILEID
      100     3347    2             THEN S_STREAMFILEID = B$PS$(0)->FPT$SYSID_V.BOOTID;
      101     3348    2           CALL UMS$BTON(I,S_STREAMFILEID);
      102     3349    2           I = I+1;
      103     3350    2           CALL UMS$NTOB(I,S_STREAMFILEID);
      104     3351    2           FO_SYMBINFO.STREAMFILEID# = S_STREAMFILEID;
      105     3352    2           RETURN;
      106     3353    2   END SETBOOTID;
      107     3354        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:5    
      108     3355    1   GETSYSIDS: PROC  ALTRET;
      109     3356        /*I* NAME:        GETSYSIDS
      110     3357             PURPOSE:     To fill in the passed VLR_SYSID area with running SSYSIDs
      111     3358             CALL:        CALL GETSYSIDS;
      112     3359             DESCRIPTION: GETSYSIDS runs through the user tables extracting
      113     3360                          all running users' SYSIDs. These are placed into
      114     3361                          the passed-in VLR_SYSID. If there are more SYSIDs
      115     3362                          currently running that the VLR_SYSID allows for,
      116     3363                          B$JIT.ERR will recieve E$LD and the procedure will
      117     3364                          ALTRETURN.
      118     3365        */
      119     3366    2   DCL MAX_SYSIDS UBIN;
      120     3367    2   DCL SYSIDS UBIN;
      121     3368    2   DCL I SBIN;
      122     3369    2           CALL HFF$DSIZ(1,MAX_SYSIDS);
      123     3370    2           MAX_SYSIDS = (MAX_SYSIDS-1)*2;
      124     3371    2           SYSIDS = 0;
      125     3372    3           DO I=1 TO B_MUAIS;
      126     3373    3             IF B$USRT$->B$USER.US(I)~=%SS_SNULL
      127     3374    3               THEN IF SYSIDS<MAX_SYSIDS
      128     3375    4                   THEN DO;
      129     3376    4                     B$PS$(1)->VLR$SYSID_V.SYSIDS(SYSIDS)
      130     3377    4                       = B$USRT$->B$USER.SYSID(I);
      131     3378    4                     SYSIDS = SYSIDS+1;
      132     3379    4                     END;
      133     3380    4                   ELSE DO;
      134     3381    4                     B$JIT$->B$JIT.ERR.CODE = %E$LD;
      135     3382        /*E* ERROR: UMS-E$LD-2
      136     3383           MESSAGE: You didn't pass a large enough VLR_SYSID area to hold all
      137     3384                    running SYSIDs
      138     3385        */
      139     3386    4                     ALTRETURN;
      140     3387    4                     END;
      141     3388    3             END;
      142     3389    2           B$PS$(1)->VLR$SYSID_V.NSYSIDS = SYSIDS;
      143     3390    2           RETURN;
      144     3391    2   END GETSYSIDS;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:6    
      145     3392        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:7    
      146     3393    1   SETSYSID: PROC;
      147     3394        /*I* NAME:        SETSYSID
      148     3395             PURPOSE:     To set a new SYSID range into S_SYSID and S_NSYSIDS
      149     3396             CALL:        CALL SETSYSID;
      150     3397             DESCRIPTION: SETSYSID uses the range of SYSIDs passed in by the
      151     3398                          caller and the current remaining SYSID range to
      152     3399                          determine the new SYSID range. If the new SYSID range
      153     3400                          is immediately following the current range, the two
      154     3401                          are tacked together and used as one. If they are not
      155     3402                          adjacent, the new passed-in range is used. If GHOST1
      156     3403                          is the caller, this must be system initialization and
      157     3404                          as such, there is no current SYSID range to tack the
      158     3405                          new range onto; the passed-in range will be used regardless.
      159     3406
      160     3407                          S_GETTING_SYSIDS is reset.
      161     3408
      162     3409                          If this is GHOST1, ROSEG.STREAMFILENO is set to S_SYSID also.
      163     3410
      164     3411                          The CACHE is turned off and S_SYSIDGATE is locked
      165     3412                          while the changes to S_SYSID, S_NSYSIDS and S_GETTING__SYSIDS
      166     3413                          are being made. When the changes are complete, the CACHE is
      167     3414                          turned on and S_SYSIDGATE is unlocked.
      168     3415        */
      169     3416    2   DCL NEXT_SYSID SBIN;
      170     3417              %LOCK(G#=S_SYSIDGATE);
      171     3420    2           CALL SSS$CACHEBP;
      172     3421    2           NEXT_SYSID = S_SYSID+S_NSYSIDS;
      173     3422    2           IF NEXT_SYSID>99999
      174     3423    2             THEN NEXT_SYSID = MOD(NEXT_SYSID+JG_MING#,99999);
      175     3424    2           IF NEXT_SYSID=B$PS$(0)->FPT$SYSID_V.SYSID AND S_CUN~=JG_GHOST1#
      176     3425    2             THEN S_NSYSIDS = S_NSYSIDS+B$PS$(0)->FPT$SYSID_V.NSYSIDS;
      177     3426    3             ELSE DO;
      178     3427    3               S_SYSID = B$PS$(0)->FPT$SYSID_V.SYSID;
      179     3428    3               S_NSYSIDS = B$PS$(0)->FPT$SYSID_V.NSYSIDS;
      180     3429    3               END;
      181     3430    2           IF S_CUN=JG_GHOST1#
      182     3431    2             THEN B$ROSEG$->B$ROSEG.STREAMFILENO = S_SYSID;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:8    
      183     3432    2           S_GETTING_SYSIDS = '0'B;
      184     3433    2           CALL SSS$CACHE;
      185     3434                %UNLOCK(G#=S_SYSIDGATE);
      186     3437    2           RETURN;
      187     3438    2   END SETSYSID;
      188     3439    1   END UMS$SYSID;
      189     3440        %EOD;

PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:9    
--  Include file information  --

   UM_CP6.:E05TOU  is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure UMS$SYSID.

   Procedure UMS$SYSID requires 174 words for executable code.
   Procedure UMS$SYSID requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:10   

 Object Unit name= UMS$SYSID                                  File name= UMS$SYSID.:E05TOU
 UTS= JUL 30 '97 06:59:44.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  UMS$SYSID
    1   Proc  even  none   174    256  UMS$SYSID
    2  RoData even  none     4      4  UMS$SYSID

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  UMS$SYSID

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 UMS$BTON
 yes     yes           Std       2 UMS$NTOB
         yes           Std       2 HFF$DSIZ
         yes           Std       1 HFC$LOCK
         yes           Std       0 SSS$CACHEBP
         yes           Std       1 HFC$UNLOCK
         yes           Std       0 SSS$CACHE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$USRT$                          r    B$PS$                                 S_STREAMFILEID
     S_SYSID                               S_NSYSIDS                             S_GETTING_SYSIDS
     S_SYSIDGATE                           FO_SYMBINFO                           B$JIT$
     B$ROSEG$                              B_MUAIS                               S_CUN
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:12   


        1        1        /*M* UMS$SYSID  Monitor module to set and allocate SYSIDs and BOOTID         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        UMS$SYSID: PROC;

      8  1 000000   000000 700200 xent  UMS$SYSID    TSX0  ! X66_AUTO_0
         1 000001   000012 000000                    ZERO    10,0

        9        9        /*D* NAME:        UMS$SYSID
       10       10             PURPOSE:     To handle the M$SYSID pmme
       11       11             CALL:        CALL UMS$SYSID;
       12       12             INPUT:       B$PS$(0) - Points to an FPT$SYSID_V area
       13       13                          B$PS$(1) - Points to a VLR_SYSID area
       14       14             OUTPUT:      S_SYSID - Possibly set to new SYSID range start
       15       15                          S_NSYSIDS - Possibly set to new SYSID range length
       16       16                          S_GETTING_SYSIDS - Reset if FPTN.V.SETSYSID is set
       17       17                          S_STREAMFILEID - Possibly set to BOOTID for this boot
       18       18                          FO_SYMBINFO.STREAMFILEID - Possibly set to BOOTID also
       19       19                          ROSEG.STREAMFILENO - Set to new S_SYSID if this
       20       20                             caller is GHOST1 setting S_SYSID
       21       21                          CACHE - Possibly turned on
       22       22                          VLR_SYSID - Passed back to the user containing all
       23       23                             running SYSIDs
       24       24             DESCRIPTION: UMS$SYSID has three separate functions. These are:
       25       25                             o Return all running SYSIDs to the caller
       26       26                             o Set the system BOOTID
       27       27                             o Set a new SYSID allocation range
       28       28
       29       29                          Which functions are performed depend solely on the
       30       30                          option bits in the V-area of the FPT.
       31       31                          FPT$SYSID_V.GETSYSIDS   - Returns running SYSIDs
       32       32                          FPT$SYSID_V.SETSYSID    - Sets S_SYSID and S_NSYSIDS
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:13   
       33       33                          FPT$SYSID_V.SETBOOTID   - Sets S_STREAMFILEID
       34       34
       35       35                          The procedure will fill in B$JIT.ERR.CODE if:
       36       36                             o Called by other than GHOST1 or OUTSYM
       37       37                             o Too small a VLR_SYSID area is passed
       38       38        */
       39       39        %INCLUDE B$JIT_C;
       40      353        %INCLUDE B$ROSEG;
       41      416        %INCLUDE B$USER;
       42      632        %B$USERREFS;
       43      636        %INCLUDE B_ERRORS_C;
       44     1763        %INCLUDE B_PTRS_R;
       45     1771        %INCLUDE HF_LOCK_C;
       46     1785        %INCLUDE JG_GHOSTS_C;
       47     1875        %INCLUDE SS_SCHED_C;
       48     2108        %INCLUDE SS_SCHED_R;
       49     2151        %INCLUDE UM$CP6V_C;
       50     2338        %INCLUDE UM_CP6;
       51     3190        %B$JIT0;
       52     3279    1         2 * BIT(1);
       53     3280        %FPT$SYSID_V;
       54     3284        %VLR$SYSID_V;
       55     3287        %VLR_SYMBINFO (FPTN=FO_SYMBINFO,STCLASS=SYMREF);
       56     3303    1   DCL B$JIT$ PTR SYMREF;
       57     3304    1   DCL B$ROSEG$ PTR SYMREF;
       58     3305    1   DCL B_MUAIS UBIN SYMREF;
       59     3306    1   DCL S_CUN UBIN SYMREF;
       60     3307    1   DCL HFF$DSIZ ENTRY(2);
       61     3308    1   DCL UMS$BTON ENTRY(2) ALTRET;
       62     3309    1   DCL UMS$NTOB ENTRY(2) ALTRET;
       63     3310    1   DCL SSS$CACHE ENTRY;
       64     3311    1   DCL SSS$CACHEBP ENTRY;
       65     3312        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:14   
       66     3313    1           B$JIT$->B$JIT.ERR = '251523400002'O; /* UMS-0-2                       */

   3313  1 000002   000000 236000 0                  LDQ     0
         1 000003   000000 470400 xsym               LDP0    B$JIT$
         1 000004   000012 756100                    STQ     10,,PR0

       67     3314    1           IF (S_CUN~=JG_GHOST1# AND S_CUN~=JG_OUTSYM#)

   3314  1 000005   000000 235000 xsym               LDA     S_CUN
         1 000006   000001 115007                    CMPA    1,DL
         1 000007   000012 600000 1                  TZE     s:3314+5
         1 000010   000003 115007                    CMPA    3,DL
         1 000011   000020 601000 1                  TNZ     s:3317
         1 000012   000001 115007                    CMPA    1,DL
         1 000013   000025 600000 1                  TZE     s:3323
         1 000014   000000 471400 xsym               LDP1    B$PS$
         1 000015   100000 236100                    LDQ     0,,PR1
         1 000016   100000 316003                    CANQ    32768,DU
         1 000017   000025 600000 1                  TZE     s:3323

       68     3315    1             OR (S_CUN~=JG_GHOST1# AND B$PS$(0)->FPT$SYSID_V.SETBOOTID)
       69     3316    2             THEN DO;

       70     3317    2               B$JIT$->B$JIT.ERR.CODE = %E$DOMAIN;

   3317  1 000020   000012 236100                    LDQ     10,,PR0
         1 000021   000000 376000 2                  ANQ     0
         1 000022   006260 276007                    ORQ     3248,DL
         1 000023   000012 756100                    STQ     10,,PR0

       71     3318        /*E* ERROR: UMS-E$DOMAIN-2
       72     3319           MESSAGE: Only GHOST1 or OUTSYM may use M$SYSID
       73     3320        */
       74     3321    2               RETURN;

   3321  1 000024   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:15   
       75     3322    2               END;
       76     3323    1           IF B$PS$(0)->FPT$SYSID_V.SETBOOTID

   3323  1 000025   000000 471400 xsym               LDP1    B$PS$
         1 000026   100000 236100                    LDQ     0,,PR1
         1 000027   100000 316003                    CANQ    32768,DU
         1 000030   000033 600000 1                  TZE     s:3325

       77     3324    1             THEN CALL SETBOOTID;

   3324  1 000031   000047 701000 1                  TSX1    SETBOOTID
         1 000032   000000 011000                    NOP     0

       78     3325    1           IF B$PS$(0)->FPT$SYSID_V.GETSYSIDS

   3325  1 000033   000000 470400 xsym               LDP0    B$PS$
         1 000034   000000 234100                    SZN     0,,PR0
         1 000035   000040 605000 1                  TPL     s:3327

       79     3326    1             THEN CALL GETSYSIDS ALTRET(DONE);

   3326  1 000036   000106 701000 1                  TSX1    GETSYSIDS
         1 000037   000046 702000 1                  TSX2    DONE

       80     3327    1           IF B$PS$(0)->FPT$SYSID_V.SETSYSID

   3327  1 000040   000000 470400 xsym               LDP0    B$PS$
         1 000041   000000 236100                    LDQ     0,,PR0
         1 000042   200000 316003                    CANQ    65536,DU
         1 000043   000046 600000 1                  TZE     DONE

       81     3328    1             THEN CALL SETSYSID;

   3328  1 000044   000175 701000 1                  TSX1    SETSYSID
         1 000045   000000 011000                    NOP     0

       82     3329    1   DONE:   RETURN;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:16   

   3329  1 000046   000000 702200 xent  DONE         TSX2  ! X66_ARET

       83     3330        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:17   
       84     3331    1   SETBOOTID: PROC;

   3331  1 000047   200004 741300       SETBOOTID    STX1  ! 4,,AUTO

       85     3332        /*I* NAME:        SETBOOTID
       86     3333             PURPOSE:     To set the new BOOTID for this uptime
       87     3334             CALL:        CALL SETBOOTID;
       88     3335             INPUT:       B$PS$(0)->FPT$SYSID_V.BOOTID - Highest found BOOTID from
       89     3336                             :SYMO account
       90     3337                          S_STREAMFILEID - BOOTID from last uptime if recovered OK
       91     3338             OUTPUT:      S_STREAMFILEID - Set to BOOTID for this uptime
       92     3339                          FO_SYMBINFO.STREAMFILEID# - Set to BOOTID for this uptime
       93     3340             DESCRIPTION: SETBOOTID determines the BOOTID for this uptime as one
       94     3341                          greater than the greater of S_STREAMFILEID and
       95     3342                          B$PS$(0)->FPT$SYSID_V.BOOTID. This new BOOTID is stored
       96     3343                          into S_STREAMFILEID and FO_SYMBINFO.STREAMFILEID.
       97     3344        */
       98     3345    2   DCL I SBIN;
       99     3346    2           IF B$PS$(0)->FPT$SYSID_V.BOOTID>S_STREAMFILEID

   3346  1 000050   000000 470400 xsym               LDP0    B$PS$
         1 000051   040100 106400                    CMPC    fill='040'O
         1 000052   000000 000003 xsym               ADSC9   S_STREAMFILEID           cn=0,n=3
         1 000053   000000 200003                    ADSC9   0,,PR0                   cn=1,n=3
         1 000054   000061 603000 1                  TRC     s:3348

      100     3347    2             THEN S_STREAMFILEID = B$PS$(0)->FPT$SYSID_V.BOOTID;

   3347  1 000055   000000 236100                    LDQ     0,,PR0
         1 000056   000011 736000                    QLS     9
         1 000057   000040 276007                    ORQ     32,DL
         1 000060   000000 756000 xsym               STQ     S_STREAMFILEID

      101     3348    2           CALL UMS$BTON(I,S_STREAMFILEID);

   3348  1 000061   000001 236000 2                  LDQ     1
         1 000062   200011 756100                    STQ     I+2,,AUTO
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:18   
         1 000063   200005 631500                    EPPR1   I,,AUTO
         1 000064   200010 451500                    STP1    I+1,,AUTO
         1 000065   200010 630500                    EPPR0   I+1,,AUTO
         1 000066   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000067   000000 701000 xent               TSX1    UMS$BTON
         1 000070   000000 011000                    NOP     0

      102     3349    2           I = I+1;

   3349  1 000071   200005 054100                    AOS     I,,AUTO

      103     3350    2           CALL UMS$NTOB(I,S_STREAMFILEID);

   3350  1 000072   000001 236000 2                  LDQ     1
         1 000073   200011 756100                    STQ     I+2,,AUTO
         1 000074   200005 630500                    EPPR0   I,,AUTO
         1 000075   200010 450500                    STP0    I+1,,AUTO
         1 000076   200010 630500                    EPPR0   I+1,,AUTO
         1 000077   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000100   000000 701000 xent               TSX1    UMS$NTOB
         1 000101   000000 011000                    NOP     0

      104     3351    2           FO_SYMBINFO.STREAMFILEID# = S_STREAMFILEID;

   3351  1 000102   000000 236000 xsym               LDQ     S_STREAMFILEID
         1 000103   000020 552070 xsym               STBQ    FO_SYMBINFO+16,'70'O

      105     3352    2           RETURN;

   3352  1 000104   200004 221300                    LDX1  ! 4,,AUTO
         1 000105   000001 702211                    TSX2  ! 1,X1

      106     3353    2   END SETBOOTID;
      107     3354        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:19   
      108     3355    1   GETSYSIDS: PROC  ALTRET;

   3355  1 000106   200004 741300       GETSYSIDS    STX1  ! 4,,AUTO

      109     3356        /*I* NAME:        GETSYSIDS
      110     3357             PURPOSE:     To fill in the passed VLR_SYSID area with running SSYSIDs
      111     3358             CALL:        CALL GETSYSIDS;
      112     3359             DESCRIPTION: GETSYSIDS runs through the user tables extracting
      113     3360                          all running users' SYSIDs. These are placed into
      114     3361                          the passed-in VLR_SYSID. If there are more SYSIDs
      115     3362                          currently running that the VLR_SYSID allows for,
      116     3363                          B$JIT.ERR will recieve E$LD and the procedure will
      117     3364                          ALTRETURN.
      118     3365        */
      119     3366    2   DCL MAX_SYSIDS UBIN;
      120     3367    2   DCL SYSIDS UBIN;
      121     3368    2   DCL I SBIN;
      122     3369    2           CALL HFF$DSIZ(1,MAX_SYSIDS);

   3369  1 000107   200005 630500                    EPPR0   MAX_SYSIDS,,AUTO
         1 000110   200011 450500                    STP0    I+2,,AUTO
         1 000111   000002 236000 2                  LDQ     2
         1 000112   200010 756100                    STQ     I+1,,AUTO
         1 000113   200010 630500                    EPPR0   I+1,,AUTO
         1 000114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000115   000000 701000 xent               TSX1    HFF$DSIZ
         1 000116   000000 011000                    NOP     0

      123     3370    2           MAX_SYSIDS = (MAX_SYSIDS-1)*2;

   3370  1 000117   200005 235100                    LDA     MAX_SYSIDS,,AUTO
         1 000120   000001 735000                    ALS     1
         1 000121   000002 135007                    SBLA    2,DL
         1 000122   200005 755100                    STA     MAX_SYSIDS,,AUTO

      124     3371    2           SYSIDS = 0;

PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:20   
   3371  1 000123   200006 450100                    STZ     SYSIDS,,AUTO

      125     3372    3           DO I=1 TO B_MUAIS;

   3372  1 000124   000001 236007                    LDQ     1,DL
         1 000125   200007 756100                    STQ     I,,AUTO
         1 000126   000164 710000 1                  TRA     s:3388+1

      126     3373    3             IF B$USRT$->B$USER.US(I)~=%SS_SNULL

   3373  1 000127   200007 235100                    LDA     I,,AUTO
         1 000130   000004 735000                    ALS     4
         1 000131   000000 470400 xsym               LDP0    B$USRT$
         1 000132   000011 236105                    LDQ     9,AL,PR0
         1 000133   770000 376003                    ANQ     -4096,DU
         1 000134   300000 116003                    CMPQ    98304,DU
         1 000135   000163 600000 1                  TZE     s:3388

      127     3374    3               THEN IF SYSIDS<MAX_SYSIDS

   3374  1 000136   200006 236100                    LDQ     SYSIDS,,AUTO
         1 000137   200005 116100                    CMPQ    MAX_SYSIDS,,AUTO
         1 000140   000154 603000 1                  TRC     s:3381

      128     3375    4                   THEN DO;

      129     3376    4                     B$PS$(1)->VLR$SYSID_V.SYSIDS(SYSIDS)

   3376  1 000141   200007 235100                    LDA     I,,AUTO
         1 000142   000006 735000                    ALS     6
         1 000143   000001 736000                    QLS     1
         1 000144   000001 471400 xsym               LDP1    B$PS$+1
         1 000145   000106 100505                    MLR     fill='000'O
         1 000146   000014 400002                    ADSC9   12,A,PR0                 cn=2,n=2
         1 000147   100001 000002                    ADSC9   1,Q,PR1                  cn=0,n=2

      130     3377    4                       = B$USRT$->B$USER.SYSID(I);
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:21   
      131     3378    4                     SYSIDS = SYSIDS+1;

   3378  1 000150   200006 235100                    LDA     SYSIDS,,AUTO
         1 000151   000001 035007                    ADLA    1,DL
         1 000152   200006 755100                    STA     SYSIDS,,AUTO

      132     3379    4                     END;

   3379  1 000153   000163 710000 1                  TRA     s:3388

      133     3380    4                   ELSE DO;

      134     3381    4                     B$JIT$->B$JIT.ERR.CODE = %E$LD;

   3381  1 000154   000000 471400 xsym               LDP1    B$JIT$
         1 000155   100012 236100                    LDQ     10,,PR1
         1 000156   000000 376000 2                  ANQ     0
         1 000157   000070 276007                    ORQ     56,DL
         1 000160   100012 756100                    STQ     10,,PR1

      135     3382        /*E* ERROR: UMS-E$LD-2
      136     3383           MESSAGE: You didn't pass a large enough VLR_SYSID area to hold all
      137     3384                    running SYSIDs
      138     3385        */
      139     3386    4                     ALTRETURN;

   3386  1 000161   200004 221300                    LDX1  ! 4,,AUTO
         1 000162   000000 702211                    TSX2  ! 0,X1

      140     3387    4                     END;
      141     3388    3             END;

   3388  1 000163   200007 054100                    AOS     I,,AUTO
         1 000164   000000 236000 xsym               LDQ     B_MUAIS
         1 000165   000127 604000 1                  TMI     s:3373
         1 000166   200007 116100                    CMPQ    I,,AUTO
         1 000167   000127 605000 1                  TPL     s:3373
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:22   

      142     3389    2           B$PS$(1)->VLR$SYSID_V.NSYSIDS = SYSIDS;

   3389  1 000170   000001 470400 xsym               LDP0    B$PS$+1
         1 000171   200006 235100                    LDA     SYSIDS,,AUTO
         1 000172   000000 755100                    STA     0,,PR0

      143     3390    2           RETURN;

   3390  1 000173   200004 221300                    LDX1  ! 4,,AUTO
         1 000174   000001 702211                    TSX2  ! 1,X1

      144     3391    2   END GETSYSIDS;
      145     3392        %EJECT;
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:23   
      146     3393    1   SETSYSID: PROC;

   3393  1 000175   200004 741300       SETSYSID     STX1  ! 4,,AUTO

      147     3394        /*I* NAME:        SETSYSID
      148     3395             PURPOSE:     To set a new SYSID range into S_SYSID and S_NSYSIDS
      149     3396             CALL:        CALL SETSYSID;
      150     3397             DESCRIPTION: SETSYSID uses the range of SYSIDs passed in by the
      151     3398                          caller and the current remaining SYSID range to
      152     3399                          determine the new SYSID range. If the new SYSID range
      153     3400                          is immediately following the current range, the two
      154     3401                          are tacked together and used as one. If they are not
      155     3402                          adjacent, the new passed-in range is used. If GHOST1
      156     3403                          is the caller, this must be system initialization and
      157     3404                          as such, there is no current SYSID range to tack the
      158     3405                          new range onto; the passed-in range will be used regardless.
      159     3406
      160     3407                          S_GETTING_SYSIDS is reset.
      161     3408
      162     3409                          If this is GHOST1, ROSEG.STREAMFILENO is set to S_SYSID also.
      163     3410
      164     3411                          The CACHE is turned off and S_SYSIDGATE is locked
      165     3412                          while the changes to S_SYSID, S_NSYSIDS and S_GETTING__SYSIDS
      166     3413                          are being made. When the changes are complete, the CACHE is
      167     3414                          turned on and S_SYSIDGATE is unlocked.
      168     3415        */
      169     3416    2   DCL NEXT_SYSID SBIN;
      170     3417              %LOCK(G#=S_SYSIDGATE);

   3418  1 000176   000003 630400 2                  EPPR0   3
         1 000177   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000200   000000 701000 xent               TSX1    HFC$LOCK
         1 000201   000000 011000                    NOP     0

      171     3420    2           CALL SSS$CACHEBP;

   3420  1 000202   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:24   
         1 000203   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000204   000000 011000                    NOP     0

      172     3421    2           NEXT_SYSID = S_SYSID+S_NSYSIDS;

   3421  1 000205   000000 236000 xsym               LDQ     S_SYSID
         1 000206   000000 036000 xsym               ADLQ    S_NSYSIDS
         1 000207   200005 756100                    STQ     NEXT_SYSID,,AUTO

      173     3422    2           IF NEXT_SYSID>99999

   3422  1 000210   303237 116007                    CMPQ    99999,DL
         1 000211   000215 604400 1                  TMOZ    s:3424

      174     3423    2             THEN NEXT_SYSID = MOD(NEXT_SYSID+JG_MING#,99999);

   3423  1 000212   000017 036007                    ADLQ    15,DL
         1 000213   303237 506007                    DIV     99999,DL
         1 000214   200005 755100                    STA     NEXT_SYSID,,AUTO

      175     3424    2           IF NEXT_SYSID=B$PS$(0)->FPT$SYSID_V.SYSID AND S_CUN~=JG_GHOST1#

   3424  1 000215   000000 470400 xsym               LDP0    B$PS$
         1 000216   000001 236100                    LDQ     1,,PR0
         1 000217   000022 772000                    QRL     18
         1 000220   200005 116100                    CMPQ    NEXT_SYSID,,AUTO
         1 000221   000232 601000 1                  TNZ     s:3427
         1 000222   000000 235000 xsym               LDA     S_CUN
         1 000223   000001 115007                    CMPA    1,DL
         1 000224   000232 600000 1                  TZE     s:3427

      176     3425    2             THEN S_NSYSIDS = S_NSYSIDS+B$PS$(0)->FPT$SYSID_V.NSYSIDS;

   3425  1 000225   000001 236100                    LDQ     1,,PR0
         1 000226   777777 376007                    ANQ     -1,DL
         1 000227   000000 036000 xsym               ADLQ    S_NSYSIDS
         1 000230   000000 756000 xsym               STQ     S_NSYSIDS
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:25   
         1 000231   000236 710000 1                  TRA     s:3430

      177     3426    3             ELSE DO;

      178     3427    3               S_SYSID = B$PS$(0)->FPT$SYSID_V.SYSID;

   3427  1 000232   000000 756000 xsym               STQ     S_SYSID

      179     3428    3               S_NSYSIDS = B$PS$(0)->FPT$SYSID_V.NSYSIDS;

   3428  1 000233   000001 236100                    LDQ     1,,PR0
         1 000234   777777 376007                    ANQ     -1,DL
         1 000235   000000 756000 xsym               STQ     S_NSYSIDS

      180     3429    3               END;

      181     3430    2           IF S_CUN=JG_GHOST1#

   3430  1 000236   000000 235000 xsym               LDA     S_CUN
         1 000237   000001 115007                    CMPA    1,DL
         1 000240   000244 601000 1                  TNZ     s:3432

      182     3431    2             THEN B$ROSEG$->B$ROSEG.STREAMFILENO = S_SYSID;

   3431  1 000241   000000 720000 xsym               LXL0    S_SYSID
         1 000242   000000 471400 xsym               LDP1    B$ROSEG$
         1 000243   100115 440100                    SXL0    77,,PR1

      183     3432    2           S_GETTING_SYSIDS = '0'B;

   3432  1 000244   000000 450000 xsym               STZ     S_GETTING_SYSIDS

      184     3433    2           CALL SSS$CACHE;

   3433  1 000245   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000246   000000 701000 xent               TSX1    SSS$CACHE
         1 000247   000000 011000                    NOP     0
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:26   

      185     3434                %UNLOCK(G#=S_SYSIDGATE);

   3435  1 000250   000003 630400 2                  EPPR0   3
         1 000251   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000252   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000253   000000 011000                    NOP     0

      186     3437    2           RETURN;

   3437  1 000254   200004 221300                    LDX1  ! 4,,AUTO
         1 000255   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   0     000   251523 400002                                                    ....

(unnamed)
 Sect OctLoc
   2     000   777777 400007   000000 006000   000003 006000   000000 006000    ................
      187     3438    2   END SETSYSID;
      188     3439    1   END UMS$SYSID;
      189     3440        %EOD;

PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:27   
--  Include file information  --

   UM_CP6.:E05TOU  is referenced.
   UM$CP6V_C.:E05TOU  is referenced.
   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_PTRS_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure UMS$SYSID.
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:28   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w SBIN        r     1 I                          7-0-0/w SBIN        r     1 I
     5-0-0/w UBIN        r     1 MAX_SYSIDS                 5-0-0/w SBIN        r     1 NEXT_SYSID
     6-0-0/w UBIN        r     1 SYSIDS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS$(0:19)
     0-0-0/w PTR         r     1 B$ROSEG$                   0-0-0/w PTR         r     1 B$USRT$
     0-0-0/w UBIN        r     1 B_MUAIS                    0-0-0/w STRC(1152)  r     1 FO_SYMBINFO
     0-0-0/w UBIN        r     1 S_CUN                      0-0-0/w BIT         r     1 S_GETTING_SYSIDS
     0-0-0/w UBIN        r     1 S_NSYSIDS                  0-0-0/w CHAR(3)     r     1 S_STREAMFILEID
     0-0-0/w UBIN        r     1 S_SYSID                    0-0-0/b BIT (72)    r     1 S_SYSIDGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(865)   r     1 B$JIT                      0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/w STRC(576)   r     1 B$USER(0:0)                0-0-0/d STRC(72)    r     1 FPT$SYSID_V
     0-0-0/w STRC(54)    r     1 VLR$SYSID_V


   Procedure UMS$SYSID requires 174 words for executable code.
   Procedure UMS$SYSID requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:30   
          MINI XREF LISTING

B$DO.ECCINFO
       567**DCL       568--REDEF
B$JIT.ERR
      3196**DCL      3313<<ASSIGN
B$JIT.ERR.CODE
      3197**DCL      3317<<ASSIGN   3381<<ASSIGN
B$JIT.ERR.MID
      3197**DCL      3197--REDEF
B$JIT$
      3303**DCL      3191--IMP-PTR  3313>>ASSIGN   3317>>ASSIGN   3381>>ASSIGN
B$PS$
      1770**DCL      3314>>IF       3323>>IF       3325>>IF       3327>>IF       3346>>IF       3347>>ASSIGN
      3376>>ASSIGN   3389>>ASSIGN   3424>>IF       3425>>ASSIGN   3427>>ASSIGN   3428>>ASSIGN
B$ROSEG.STREAMFILENO
       394**DCL      3431<<ASSIGN
B$ROSEG$
      3304**DCL      3431>>ASSIGN
B$U.MISC
       546**DCL       547--REDEF
B$USER.MISC
       622**DCL       623--REDEF
B$USER.SYSID
       617**DCL      3376>>ASSIGN
B$USER.US
       609**DCL      3373>>IF
B$USRT$
       634**DCL      3373>>IF       3376>>ASSIGN
B_MUAIS
      3305**DCL      3372>>DOINDEX
DONE
      3329**LABEL    3326--CALLALT
FO_SYMBINFO.STREAMFILEID#
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:31   
      3299**DCL      3351<<ASSIGN
FPT$SYSID_V.BOOTID
      3281**DCL      3346>>IF       3347>>ASSIGN
FPT$SYSID_V.GETSYSIDS
      3281**DCL      3325>>IF
FPT$SYSID_V.NSYSIDS
      3282**DCL      3425>>ASSIGN   3428>>ASSIGN
FPT$SYSID_V.SETBOOTID
      3281**DCL      3314>>IF       3323>>IF
FPT$SYSID_V.SETSYSID
      3281**DCL      3327>>IF
FPT$SYSID_V.SYSID
      3281**DCL      3424>>IF       3427>>ASSIGN
GETSYSIDS
      3355**PROC     3326--CALL
HFC$LOCK
      1784**DCL-ENT  3418--CALL
HFC$UNLOCK
      1784**DCL-ENT  3435--CALL
HFF$DSIZ
      3307**DCL-ENT  3369--CALL
I IN PROCEDURE GETSYSIDS
      3368**DCL      3372<<DOINDEX  3373>>IF       3376>>ASSIGN
I IN PROCEDURE SETBOOTID
      3345**DCL      3348<>CALL     3349<<ASSIGN   3349>>ASSIGN   3350<>CALL
MAX_SYSIDS IN PROCEDURE GETSYSIDS
      3366**DCL      3369<>CALL     3370<<ASSIGN   3370>>ASSIGN   3374>>IF
NEXT_SYSID IN PROCEDURE SETSYSID
      3416**DCL      3421<<ASSIGN   3422>>IF       3423<<ASSIGN   3423>>ASSIGN   3424>>IF
SETBOOTID
      3331**PROC     3324--CALL
SETSYSID
      3393**PROC     3328--CALL
SSS$CACHE
      3310**DCL-ENT  3433--CALL
SSS$CACHEBP
PL6.E3A0      #001=UMS$SYSID File=UMS$SYSID.:E05TSI                              WED 07/30/97 06:59 Page:32   
      3311**DCL-ENT  3420--CALL
SYSIDS IN PROCEDURE GETSYSIDS
      3367**DCL      3371<<ASSIGN   3374>>IF       3376>>ASSIGN   3378<<ASSIGN   3378>>ASSIGN   3389>>ASSIGN
S_CUN
      3306**DCL      3314>>IF       3314>>IF       3314>>IF       3424>>IF       3430>>IF
S_GETTING_SYSIDS
      2140**DCL      3432<<ASSIGN
S_NSYSIDS
      2140**DCL      3421>>ASSIGN   3425<<ASSIGN   3425>>ASSIGN   3428<<ASSIGN
S_STREAMFILEID
      2140**DCL      3346>>IF       3347<<ASSIGN   3348<>CALL     3350<>CALL     3351>>ASSIGN
S_SYSID
      2140**DCL      3421>>ASSIGN   3427<<ASSIGN   3431>>ASSIGN
S_SYSIDGATE
      2149**DCL      3418<>CALL     3435<>CALL
UMS$BTON
      3308**DCL-ENT  3348--CALL
UMS$NTOB
      3309**DCL-ENT  3350--CALL
VLR$SYSID_V.NSYSIDS
      3285**DCL      3389<<ASSIGN
VLR$SYSID_V.SYSIDS
      3285**DCL      3376<<ASSIGN

PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:33   
      190        1        /*T***********************************************************/
      191        2        /*T*                                                         */
      192        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      193        4        /*T*                                                         */
      194        5        /*T***********************************************************/
      195        6        UMS$BTON: PROC (NUM,BOOTID) ALTRET;
      196        7        /*D* NAME:        UMS$BTON
      197        8             PURPOSE:     To translate a BOOTID to a NUM
      198        9             DESCRIPTION: The given BOOTID is translated to an 18-bit number,
      199       10                          and inserted into the passed NUM. The routine
      200       11                          ALTRETs if the BOOTID is illegal.
      201       12
      202       13                          The BOOTID is a 3-character string generated
      203       14                          from an 18-bit NUM, in such a way that
      204       15                          BOOTIDs sort in the same order as NUMs.
      205       16                          When UMS$SYSID establishes the bootid NUM to
      206       17                          be used on this boot, it translates it into
      207       18                          a corresponding BOOTID, which is used as the
      208       19                          prefix for all output symbiont file names. */
      209       20        /**/
      210       21        /* PARAMETERS */
      211       22        /**/
      212       23    1   DCL NUM UBIN WORD ALIGNED;
      213       24    1   DCL 1 NUMR REDEF NUM ALIGNED,
      214       25    1         2 * UBIN HALF UNAL,
      215       26    1         2 C1 UBIN(6) UNAL,
      216       27    1         2 C2 UBIN(6) UNAL,
      217       28    1         2 C3 UBIN(6) UNAL;
      218       29    1   DCL BOOTID CHAR(3) ALIGNED;
      219       30    1   DCL 1 BOOTIDR REDEF BOOTID ALIGNED,
      220       31    1         2 C1 CHAR(1) UNAL,
      221       32    1         2 C2 CHAR(1) UNAL,
      222       33    1         2 C3 CHAR(1) UNAL;
      223       34        /**/
      224       35        /* CONSTANT */
      225       36        /**/
      226       37    1   DCL XLTABLE CHAR(64) CONSTANT ALIGNED
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:34   
      227       38    1    INIT('$0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz');
      228       39        /**/
      229       40        /* AUTO */
      230       41        /**/
      231       42    1   DCL I UBIN WORD ALIGNED;
      232       43        %EJECT;
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:35   
      233       44    1           NUM=0;
      234       45    1           CALL INDEX (I,BOOTIDR.C1,XLTABLE) ALTRET(ALTRT);
      235       46    1           NUMR.C1=I;
      236       47    1           CALL INDEX (I,BOOTIDR.C2,XLTABLE) ALTRET(ALTRT);
      237       48    1           NUMR.C2=I;
      238       49    1           CALL INDEX (I,BOOTIDR.C3,XLTABLE) ALTRET(ALTRT);
      239       50    1           NUMR.C3=I;
      240       51    1           RETURN;
      241       52    1   ALTRT:  ALTRETURN;
      242       53        %EJECT;
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:36   
      243       54    1   UMS$NTOB: ENTRY(NUM,BOOTID) ALTRET;     /* !!Doesn't ALTRET!!                 */
      244       55        /*D* NAME:         UMS$NTOB
      245       56             PURPOSE:      To translate a NUM to a BOOTID
      246       57             DESCRIPTION:  The given NUM is translated to a 3-character
      247       58                           string which is then inserted in the passed
      248       59                           BOOTID. */
      249       60    1           BOOTIDR.C1=SUBSTR(XLTABLE,NUMR.C1,1);
      250       61    1           BOOTIDR.C2=SUBSTR(XLTABLE,NUMR.C2,1);
      251       62    1           BOOTIDR.C3=SUBSTR(XLTABLE,NUMR.C3,1);
      252       63    1           RETURN;
      253       64    1   END UMS$BTON;
      254       65        %EOD;

PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:37   
      No diagnostics issued in procedure UMS$BTON.

   Procedure UMS$BTON requires 52 words for executable code.
   Procedure UMS$BTON requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:38   

 Object Unit name= UMS$BTON                                   File name= UMS$SYSID.:E05TOU
 UTS= JUL 30 '97 07:00:06.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     16     20  UMS$BTON
    1   Proc  even  none    52     64  UMS$BTON

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  UMS$BTON
     1     36          yes     yes      Std        2  UMS$NTOB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:39   


      190        1        /*T***********************************************************/
      191        2        /*T*                                                         */
      192        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      193        4        /*T*                                                         */
      194        5        /*T***********************************************************/
      195        6        UMS$BTON: PROC (NUM,BOOTID) ALTRET;

      6  1 000000   000000 700200 xent  UMS$BTON     TSX0  ! X66_AUTO_2
         1 000001   000006 000002                    ZERO    6,2

      196        7        /*D* NAME:        UMS$BTON
      197        8             PURPOSE:     To translate a BOOTID to a NUM
      198        9             DESCRIPTION: The given BOOTID is translated to an 18-bit number,
      199       10                          and inserted into the passed NUM. The routine
      200       11                          ALTRETs if the BOOTID is illegal.
      201       12
      202       13                          The BOOTID is a 3-character string generated
      203       14                          from an 18-bit NUM, in such a way that
      204       15                          BOOTIDs sort in the same order as NUMs.
      205       16                          When UMS$SYSID establishes the bootid NUM to
      206       17                          be used on this boot, it translates it into
      207       18                          a corresponding BOOTID, which is used as the
      208       19                          prefix for all output symbiont file names. */
      209       20        /**/
      210       21        /* PARAMETERS */
      211       22        /**/
      212       23    1   DCL NUM UBIN WORD ALIGNED;
      213       24    1   DCL 1 NUMR REDEF NUM ALIGNED,
      214       25    1         2 * UBIN HALF UNAL,
      215       26    1         2 C1 UBIN(6) UNAL,
      216       27    1         2 C2 UBIN(6) UNAL,
      217       28    1         2 C3 UBIN(6) UNAL;
      218       29    1   DCL BOOTID CHAR(3) ALIGNED;
      219       30    1   DCL 1 BOOTIDR REDEF BOOTID ALIGNED,
      220       31    1         2 C1 CHAR(1) UNAL,
      221       32    1         2 C2 CHAR(1) UNAL,
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:40   
      222       33    1         2 C3 CHAR(1) UNAL;
      223       34        /**/
      224       35        /* CONSTANT */
      225       36        /**/
      226       37    1   DCL XLTABLE CHAR(64) CONSTANT ALIGNED
      227       38    1    INIT('$0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz');
      228       39        /**/
      229       40        /* AUTO */
      230       41        /**/
      231       42    1   DCL I UBIN WORD ALIGNED;
      232       43        %EJECT;
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:41   
      233       44    1           NUM=0;

     44  1 000002   200003 470500                    LDP0    @NUM,,AUTO
         1 000003   000000 450100                    STZ     0,,PR0

      234       45    1           CALL INDEX (I,BOOTIDR.C1,XLTABLE) ALTRET(ALTRT);

     45  1 000004   200004 471500                    LDP1    @BOOTID,,AUTO
         1 000005   000100 124400                    SCM     mask='000'O
         1 000006   000000 000100 0                  ADSC9   XLTABLE                  cn=0,n=64
         1 000007   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000010   200005 000100                    ARG     I,,AUTO
         1 000011   000035 606400 1                  TTN     ALTRT

      235       46    1           NUMR.C1=I;

     46  1 000012   200005 236100                    LDQ     I,,AUTO
         1 000013   000014 736000                    QLS     12
         1 000014   000000 752104                    STCQ    0,'04'O,PR0

      236       47    1           CALL INDEX (I,BOOTIDR.C2,XLTABLE) ALTRET(ALTRT);

     47  1 000015   000100 124400                    SCM     mask='000'O
         1 000016   000000 000100 0                  ADSC9   XLTABLE                  cn=0,n=64
         1 000017   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1
         1 000020   200005 000100                    ARG     I,,AUTO
         1 000021   000035 606400 1                  TTN     ALTRT

      237       48    1           NUMR.C2=I;

     48  1 000022   200005 236100                    LDQ     I,,AUTO
         1 000023   000006 736000                    QLS     6
         1 000024   000000 752102                    STCQ    0,'02'O,PR0

      238       49    1           CALL INDEX (I,BOOTIDR.C3,XLTABLE) ALTRET(ALTRT);

     49  1 000025   000100 124400                    SCM     mask='000'O
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:42   
         1 000026   000000 000100 0                  ADSC9   XLTABLE                  cn=0,n=64
         1 000027   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1
         1 000030   200005 000100                    ARG     I,,AUTO
         1 000031   000035 606400 1                  TTN     ALTRT

      239       50    1           NUMR.C3=I;

     50  1 000032   200005 236100                    LDQ     I,,AUTO
         1 000033   000000 752101                    STCQ    0,'01'O,PR0

      240       51    1           RETURN;

     51  1 000034   000000 702200 xent               TSX2  ! X66_ARET

      241       52    1   ALTRT:  ALTRETURN;

     52  1 000035   000000 702200 xent  ALTRT        TSX2  ! X66_AALT

      242       53        %EJECT;
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:43   
      243       54    1   UMS$NTOB: ENTRY(NUM,BOOTID) ALTRET;     /* !!Doesn't ALTRET!!                 */

     54  1 000036   000000 700200 xent  UMS$NTOB     TSX0  ! X66_AUTO_2
         1 000037   000006 000002                    ZERO    6,2

      244       55        /*D* NAME:         UMS$NTOB
      245       56             PURPOSE:      To translate a NUM to a BOOTID
      246       57             DESCRIPTION:  The given NUM is translated to a 3-character
      247       58                           string which is then inserted in the passed
      248       59                           BOOTID. */
      249       60    1           BOOTIDR.C1=SUBSTR(XLTABLE,NUMR.C1,1);

     60  1 000040   200003 470500                    LDP0    @NUM,,AUTO
         1 000041   000000 236100                    LDQ     0,,PR0
         1 000042   000014 772000                    QRL     12
         1 000043   000077 376007                    ANQ     63,DL
         1 000044   200004 471500                    LDP1    @BOOTID,,AUTO
         1 000045   040100 100406                    MLR     fill='040'O
         1 000046   000000 000001 0                  ADSC9   XLTABLE,Q                cn=0,n=1
         1 000047   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

      250       61    1           BOOTIDR.C2=SUBSTR(XLTABLE,NUMR.C2,1);

     61  1 000050   000000 236100                    LDQ     0,,PR0
         1 000051   000006 772000                    QRL     6
         1 000052   000077 376007                    ANQ     63,DL
         1 000053   040100 100406                    MLR     fill='040'O
         1 000054   000000 000001 0                  ADSC9   XLTABLE,Q                cn=0,n=1
         1 000055   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1

      251       62    1           BOOTIDR.C3=SUBSTR(XLTABLE,NUMR.C3,1);

     62  1 000056   000000 236100                    LDQ     0,,PR0
         1 000057   000077 376007                    ANQ     63,DL
         1 000060   040100 100406                    MLR     fill='040'O
         1 000061   000000 000001 0                  ADSC9   XLTABLE,Q                cn=0,n=1
         1 000062   100000 400001                    ADSC9   0,,PR1                   cn=2,n=1
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:44   

      252       63    1           RETURN;

     63  1 000063   000000 702200 xent               TSX2  ! X66_ARET

XLTABLE
 Sect OctLoc
   0     000   044060 061062   063064 065066   067070 071101   102103 104105    $0123456789ABCDE
   0     004   106107 110111   112113 114115   116117 120121   122123 124125    FGHIJKLMNOPQRSTU
   0     010   126127 130131   132137 141142   143144 145146   147150 151152    VWXYZ_abcdefghij
   0     014   153154 155156   157160 161162   163164 165166   167170 171172    klmnopqrstuvwxyz
      253       64    1   END UMS$BTON;
      254       65        %EOD;

PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:45   
      No diagnostics issued in procedure UMS$BTON.
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:46   

 **** Variables and constants ****

  ****  Section 000 RoData UMS$BTON

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(64)    r     1 XLTABLE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BOOTID                    3-0-0/w PTR         r     1 @NUM
    *0-0-0/w CHAR(3)     r     1 BOOTID                    *0-0-0/w STRC(27)    r     1 BOOTIDR
     5-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 NUM
    *0-0-0/w STRC        r     1 NUMR


   Procedure UMS$BTON requires 52 words for executable code.
   Procedure UMS$BTON requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:47   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=UMS$BTON File=UMS$SYSID.:E05TSI                               WED 07/30/97 07:00 Page:48   
          MINI XREF LISTING

ALTRT
        52**LABEL      45--CALLALT    47--CALLALT    49--CALLALT
BOOTID
        29**DCL         6--PROC       30--REDEF      54--ENTRY
BOOTIDR.C1
        31**DCL        45>>CALLBLT    60<<ASSIGN
BOOTIDR.C2
        32**DCL        47>>CALLBLT    61<<ASSIGN
BOOTIDR.C3
        33**DCL        49>>CALLBLT    62<<ASSIGN
I
        42**DCL        45<<CALLBLT    46>>ASSIGN     47<<CALLBLT    48>>ASSIGN     49<<CALLBLT    50>>ASSIGN
NUM
        23**DCL         6--PROC       24--REDEF      44<<ASSIGN     54--ENTRY
NUMR.C1
        26**DCL        46<<ASSIGN     60>>ASSIGN
NUMR.C2
        27**DCL        48<<ASSIGN     61>>ASSIGN
NUMR.C3
        28**DCL        50<<ASSIGN     62>>ASSIGN
XLTABLE
        37**DCL        45>>CALLBLT    47>>CALLBLT    49>>CALLBLT    60>>ASSIGN     61>>ASSIGN     62>>ASSIGN

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:49   
      255        1        /*T***********************************************************/
      256        2        /*T*                                                         */
      257        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      258        4        /*T*                                                         */
      259        5        /*T***********************************************************/
      260        6        UMS$NXTSID: PROC (SYSID) ALTRET;
      261        7        /*D* NAME:         UMS$NXTSID
      262        8             PURPOSE:      To allocate a new SYSID
      263        9             CALL:         CALL UMS$NXTSID(SYSID) ALTRET(NONE_AVAILABLE);
      264       10             INPUT:        None
      265       11             OUTPUT:       NORMAL RETURN:  NEWSYSID = new SYSID
      266       12                           ALL RETURNS  :  Cache turned on
      267       13             DESCRIPTION:  The new SYSID allocated is NEWSYSID; the ALTRET
      268       14                           indicates no sysids are available on the system.
      269       15
      270       16                           UMS$NXTSID freely allocates new SYSIDs until
      271       17                           S_NSYSIDS falls below NSYSIDS_THRESH#. At this point,
      272       18                           UMS$NXTSID writes a message to OUTSYM telling him to
      273       19                           please go out and find a new range of SYSIDs to use.
      274       20                           In the mean time, UMS$NXTSID goes on freely allocating
      275       21                           new SYSIDs until no more are available. If this
      276       22                           point is reached and OUTSYM is still looking for
      277       23                           a new SYSID range, any user calling UMS$NXTSID will
      278       24                           be put into a 5 second wait after which he will try
      279       25                           again. If a user calls UMS$NXTSID, no SYSIDs are
      280       26                           available and OUTSYM could not find a new range,
      281       27                           UMS$NXTSID will ALTRETURN indicating no SYSIDs
      282       28                           available on the system.
      283       29
      284       30                           OUTSYM operates by finding a new range of SYSIDs
      285       31                           to use and calling M$SYSID to set the new range
      286       32                           into S_SYSID and S_NSYSIDS. The M$SYSID service
      287       33                           will also reset S_GETTING_SYSIDS whether OUTSYM
      288       34                           returned S_NSYSIDS>0 or not.
      289       35        */
      290       36
      291       37
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:50   
      292       38        /**/
      293       39        /* PARAMETERS */
      294       40        /**/
      295       41    1   DCL SYSID UBIN;
      296       42
      297       43
      298       44
      299       45        /**/
      300       46        /* INCLUDES */
      301       47        /**/
      302       48        %INCLUDE B$JIT;
      303      651        %INCLUDE B$USER;
      304      867        %B$USERREFS;
      305      871        %INCLUDE FOO_MAC_C;
      306     1619        %INCLUDE FOO_SUBS_C;
      307     1855        %INCLUDE HF_LOCK_C;
      308     1869        %INCLUDE JG_EVID_C;
      309     2094        %INCLUDE JG_GHOSTS_C;
      310     2184        %INCLUDE KL_ERRORS_C;
      311     2226        %INCLUDE OC_MESSHD_C;
      312     2279        %INCLUDE OC_SUBS_C;
      313     3010        %INCLUDE SS_SCHED_C;
      314     3243        %INCLUDE SS_SCHED_R;
      315     3286
      316     3287
      317     3288
      318     3289        /**/
      319     3290        /* SUBS */
      320     3291        /**/
      321     3292        %SUB NSYSIDS_THRESH#=1000;              /* TIME TO GET MORE SYSIDS            */
      322     3293        %SUB SYSID_SPAN#=30000;                 /* TRY TO GET AT LEAST THIS MANY SIDS */
      323     3294
      324     3295
      325     3296
      326     3297        /**/
      327     3298        /* BASED STRUCTURES */
      328     3299        /**/
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:51   
      329     3300    1   DCL 1 RESULTS DALIGNED BASED,
      330     3301    1         2 MODE SBIN,
      331     3302    1         2 CODE UBIN(36),
      332     3303    1         2 SYSID UBIN(36),
      333     3304    1         2 UN UBIN(36);
      334     3305
      335     3306
      336     3307
      337     3308        /**/
      338     3309        /* AUTO */
      339     3310        /**/
      340     3311    1   DCL GET_SYSIDS BIT(1) ALIGNED;
      341     3312    1   DCL I UBIN WORD;
      342     3313    1   DCL MODE SBIN WORD;
      343     3314    1   DCL NXTUSRSID UBIN WORD;
      344     3315    1   DCL NEWSYSID UBIN WORD;
      345     3316        %FO_CITE (FPTN=FO_CITE,STCLASS=AUTO,TYP=GMSY);
      346     3375
      347     3376
      348     3377
      349     3378        /**/
      350     3379        /* CONSTANT */
      351     3380        /**/
      352     3381        %OC_MESSHD_D (NAME=NOSYSIDSMSG,
      353     3382                 NPARMS    = 0,
      354     3383                 ATR       = M_SYS,
      355     3384                 MSG       = SYSID_MSG#,
      356     3385                 STCLASS   = CONSTANT);
      357     3398    1           2 * UBIN BYTE UNAL INIT(0);
      358     3399        %FO_CITE (FPTN=FO_CITEC,STCLASS=CONSTANT,TYP=GMSY,COD=FOEV_GMSY#);
      359     3458
      360     3459
      361     3460
      362     3461        /**/
      363     3462        /* REFS */
      364     3463        /**/
      365     3464    1   DCL KUW$WRITE ENTRY(3) ALTRET;
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:52   
      366     3465    1   DCL SSR$REG ENTRY(3) ALTRET;
      367     3466    1   DCL SSS$CACHEBP ENTRY;
      368     3467    1   DCL SSS$CACHE ENTRY;
      369     3468    1   DCL B$JIT$ PTR SYMREF;
      370     3469    1   DCL NK_HLPUN UBIN WORD SYMREF;
      371     3470    1   DCL B$PS0$ PTR SYMREF;
      372     3471    1   DCL S_CUN UBIN WORD SYMREF;
      373     3472    1   DCL J_OUTSYM CHAR(8) SYMREF READONLY;
      374     3473    1   DCL J_KEYIN CHAR(8) SYMREF READONLY;
      375     3474        %EJECT;
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:53   
      376     3475    1           GET_SYSIDS = '0'B;
      377     3476    2           DO WHILE('0'B);
      378     3477    2   WAIT_FOR_SYSIDS:
      379     3478    2             CALL SSS$CACHE;
      380     3479                  %UNLOCK (G#=S_SYSIDGATE);
      381     3482    2             CALL SSR$REG(%SS_SL,,5) ALTRET(IGNORE);
      382     3483                                                /* Wait 5 seconds and try again       */
      383     3484    2   IGNORE:   END;
      384     3485                %LOCK (G#=S_SYSIDGATE);
      385     3488    1           CALL SSS$CACHEBP;
      386     3489    1           IF S_NSYSIDS=0
      387     3490    1             THEN IF S_GETTING_SYSIDS
      388     3491    1                 THEN GOTO WAIT_FOR_SYSIDS;
      389     3492    1                 ELSE NEWSYSID = 0;
      390     3493    2             ELSE DO;
      391     3494    2               NEWSYSID=S_SYSID;
      392     3495    2               IF S_SYSID<99999
      393     3496    2                 THEN S_SYSID = S_SYSID+1;
      394     3497    2                 ELSE S_SYSID = JG_MING#+1;
      395     3498    2               S_NSYSIDS=S_NSYSIDS-1;
      396     3499    2               IF S_NSYSIDS<=NSYSIDS_THRESH#
      397     3500    3                 THEN DO;
      398     3501    3                   IF ~S_GETTING_SYSIDS
      399     3502    4                     THEN DO;              /* Kick OUTSYM to get more SYSIDs     */
      400     3503    4                       GET_SYSIDS = '1'B;
      401     3504    4                       S_GETTING_SYSIDS = '1'B;
      402     3505    4                       FO_CITE=FO_CITEC;
      403     3506    4                       FO_CITE.NXT = S_SYSID;
      404     3507    4                       FO_CITE.NUM = S_NSYSIDS;
      405     3508    4                       FO_CITE.SPAN = SYSID_SPAN#;
      406     3509    4                       END;
      407     3510    3                   END;
      408     3511    2               END;
      409     3512    1           CALL SSS$CACHE;
      410     3513                %UNLOCK (G#=S_SYSIDGATE);
      411     3516    1           IF GET_SYSIDS
      412     3517    1             THEN CALL KUW$WRITE(FO_CITE,LENGTHC(FO_CITE),J_OUTSYM);
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:54   
      413     3518    1           IF NEWSYSID=0
      414     3519    2             THEN DO;
      415     3520    2               CALL KUW$WRITE(NOSYSIDSMSG,LENGTHC(NOSYSIDSMSG),J_KEYIN);
      416     3521    2               ALTRETURN;
      417     3522    2               END;
      418     3523    1             ELSE SYSID = NEWSYSID;
      419     3524    1           RETURN;
      420     3525        %EJECT;
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:55   
      421     3526    1   UMS$NXTUSR: ENTRY ALTRET;
      422     3527        /*                                                                    */
      423     3528        /*                                                                    */
      424     3529        /*    RESULTS.CODE INDICATES IF USER NUMBER ASSIGNED.                 */
      425     3530        /*         CODE=0  OK                                                 */
      426     3531        /*                      (ERROR CODES IN KL_ERRORS_C)                  */
      427     3532        /*             =E$NUSR  NO USER SLOTS AVAILABLE                       */
      428     3533        /*             =E$NOOL  NO USER SLOTS FOR THIS MODE AVAILABLE         */
      429     3534        /*             =E$NOSYD NO SYSIDS AVAILABLE                           */
      430     3535        /*                                                                    */
      431     3536    1           MODE=B$PS0$->RESULTS.MODE;      /* SEE B$JIT FOR MODE DEFINITION      */
      432     3537    1           IF S_CUN=NK_HLPUN
      433     3538    2             THEN DO;
      434     3539    2               IF MODE>0 AND MODE~=%M_BATCH#
      435     3540    3                 THEN DO;
      436     3541    3                   CALL UMS$NXTSID(NXTUSRSID) ALTRET(NOSYSIDS);
      437     3542    4                   DO WHILE('0'B);
      438     3543    4   NOSYSIDS:         B$PS0$->RESULTS.CODE=%E$NOSYD;
      439     3544    4                     RETURN;
      440     3545    4                     END;
      441     3546    3                   B$PS0$->RESULTS.SYSID=NXTUSRSID;
      442     3547    3                   END;
      443     3548                    %LOCK (G#=S_SCHDGATE);
      444     3551    2               CALL SSS$CACHEBP;
      445     3552    2               IF MODE < 0
      446     3553    3                 THEN DO;
      447     3554    3                   MODE=MODE*-1;
      448     3555    3                   B$USRT$->B$USER.BL(B$PS0$->RESULTS.UN)=0;
      449     3556    3                   B$USRT$->B$USER.FL(B$PS0$->RESULTS.UN)=S_HQ(%SS_SNULL);
      450     3557    3                   B$USRT$->B$USER.BL(S_HQ(%SS_SNULL))=B$PS0$->RESULTS.UN;
      451     3558    3                   S_HQ(%SS_SNULL)=B$PS0$->RESULTS.UN;
      452     3559    3                   END;
      453     3560    3                 ELSE DO;
      454     3561    3                   IF S_CUIS(MODE) < S_MUIS(MODE)
      455     3562    3                     THEN IF S_HQ(%SS_SNULL) ~= 0 AND S_CTUIS < S_TUIS
      456     3563    4                         THEN DO;
      457     3564    4                           I=S_HQ(%SS_SNULL); /* GET USR # FROM HEAD OF NULL QUEUE */
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:56   
      458     3565    4                           S_HQ(%SS_SNULL)=B$USRT$->B$USER.FL(I);
      459     3566    4                           B$PS0$->RESULTS.CODE=0; /*  OK                        */
      460     3567    4                           B$PS0$->RESULTS.UN=I;
      461     3568    4                           GOTO GOTIT;
      462     3569    4   GOTIT:
      463     3570    4                           END;
      464     3571    3                         ELSE B$PS0$->RESULTS.CODE=%E$NUSR;
      465     3572    3                     ELSE B$PS0$->RESULTS.CODE=%E$NOOL;
      466     3573    3                   END;
      467     3574    2               CALL SSS$CACHE;
      468     3575                    %UNLOCK (G#=S_SCHDGATE);
      469     3578    2               END;
      470     3579    1             ELSE B$JIT$->B$JIT.ERR='232322004054'O; /* NOT ALLOWED FOR THIS USER */
      471     3580    1           RETURN;
      472     3581    1   END UMS$NXTSID;

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:57   
--  Include file information  --

   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure UMS$NXTSID.

   Procedure UMS$NXTSID requires 190 words for executable code.
   Procedure UMS$NXTSID requires 18 words of local(AUTO) storage.

    No errors detected in file UMS$SYSID.:E05TSI    .

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:58   

 Object Unit name= UMS$NXTSID                                 File name= UMS$SYSID.:E05TOU
 UTS= JUL 30 '97 07:00:14.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     11     13  UMS$NXTSID
    1   Proc  even  none   190    276  UMS$NXTSID
    2  RoData even  none    12     14  UMS$NXTSID

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  UMS$NXTSID
     1    134          yes     yes      Std        0  UMS$NXTUSR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$CACHE
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 SSR$REG
         yes           Std       0 SSS$CACHEBP
         yes           Std       1 HFC$LOCK
 yes     yes           Std       3 KUW$WRITE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:59   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$USRT$                               S_CUIS                                S_MUIS
     S_CTUIS                               S_TUIS                                S_HQ
     S_SYSID                               S_NSYSIDS                             S_GETTING_SYSIDS
     S_SCHDGATE                            S_SYSIDGATE                           B$JIT$
     NK_HLPUN                              B$PS0$                                S_CUN
r    J_OUTSYM                         r    J_KEYIN                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:60   


      255        1        /*T***********************************************************/
      256        2        /*T*                                                         */
      257        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      258        4        /*T*                                                         */
      259        5        /*T***********************************************************/
      260        6        UMS$NXTSID: PROC (SYSID) ALTRET;

      6  1 000000   000000 700200 xent  UMS$NXTSID   TSX0  ! X66_AUTO_1
         1 000001   000022 000001                    ZERO    18,1

      261        7        /*D* NAME:         UMS$NXTSID
      262        8             PURPOSE:      To allocate a new SYSID
      263        9             CALL:         CALL UMS$NXTSID(SYSID) ALTRET(NONE_AVAILABLE);
      264       10             INPUT:        None
      265       11             OUTPUT:       NORMAL RETURN:  NEWSYSID = new SYSID
      266       12                           ALL RETURNS  :  Cache turned on
      267       13             DESCRIPTION:  The new SYSID allocated is NEWSYSID; the ALTRET
      268       14                           indicates no sysids are available on the system.
      269       15
      270       16                           UMS$NXTSID freely allocates new SYSIDs until
      271       17                           S_NSYSIDS falls below NSYSIDS_THRESH#. At this point,
      272       18                           UMS$NXTSID writes a message to OUTSYM telling him to
      273       19                           please go out and find a new range of SYSIDs to use.
      274       20                           In the mean time, UMS$NXTSID goes on freely allocating
      275       21                           new SYSIDs until no more are available. If this
      276       22                           point is reached and OUTSYM is still looking for
      277       23                           a new SYSID range, any user calling UMS$NXTSID will
      278       24                           be put into a 5 second wait after which he will try
      279       25                           again. If a user calls UMS$NXTSID, no SYSIDs are
      280       26                           available and OUTSYM could not find a new range,
      281       27                           UMS$NXTSID will ALTRETURN indicating no SYSIDs
      282       28                           available on the system.
      283       29
      284       30                           OUTSYM operates by finding a new range of SYSIDs
      285       31                           to use and calling M$SYSID to set the new range
      286       32                           into S_SYSID and S_NSYSIDS. The M$SYSID service
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:61   
      287       33                           will also reset S_GETTING_SYSIDS whether OUTSYM
      288       34                           returned S_NSYSIDS>0 or not.
      289       35        */
      290       36
      291       37
      292       38        /**/
      293       39        /* PARAMETERS */
      294       40        /**/
      295       41    1   DCL SYSID UBIN;
      296       42
      297       43
      298       44
      299       45        /**/
      300       46        /* INCLUDES */
      301       47        /**/
      302       48        %INCLUDE B$JIT;
      303      651        %INCLUDE B$USER;
      304      867        %B$USERREFS;
      305      871        %INCLUDE FOO_MAC_C;
      306     1619        %INCLUDE FOO_SUBS_C;
      307     1855        %INCLUDE HF_LOCK_C;
      308     1869        %INCLUDE JG_EVID_C;
      309     2094        %INCLUDE JG_GHOSTS_C;
      310     2184        %INCLUDE KL_ERRORS_C;
      311     2226        %INCLUDE OC_MESSHD_C;
      312     2279        %INCLUDE OC_SUBS_C;
      313     3010        %INCLUDE SS_SCHED_C;
      314     3243        %INCLUDE SS_SCHED_R;
      315     3286
      316     3287
      317     3288
      318     3289        /**/
      319     3290        /* SUBS */
      320     3291        /**/
      321     3292        %SUB NSYSIDS_THRESH#=1000;              /* TIME TO GET MORE SYSIDS            */
      322     3293        %SUB SYSID_SPAN#=30000;                 /* TRY TO GET AT LEAST THIS MANY SIDS */
      323     3294
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:62   
      324     3295
      325     3296
      326     3297        /**/
      327     3298        /* BASED STRUCTURES */
      328     3299        /**/
      329     3300    1   DCL 1 RESULTS DALIGNED BASED,
      330     3301    1         2 MODE SBIN,
      331     3302    1         2 CODE UBIN(36),
      332     3303    1         2 SYSID UBIN(36),
      333     3304    1         2 UN UBIN(36);
      334     3305
      335     3306
      336     3307
      337     3308        /**/
      338     3309        /* AUTO */
      339     3310        /**/
      340     3311    1   DCL GET_SYSIDS BIT(1) ALIGNED;
      341     3312    1   DCL I UBIN WORD;
      342     3313    1   DCL MODE SBIN WORD;
      343     3314    1   DCL NXTUSRSID UBIN WORD;
      344     3315    1   DCL NEWSYSID UBIN WORD;
      345     3316        %FO_CITE (FPTN=FO_CITE,STCLASS=AUTO,TYP=GMSY);
      346     3375
      347     3376
      348     3377
      349     3378        /**/
      350     3379        /* CONSTANT */
      351     3380        /**/
      352     3381        %OC_MESSHD_D (NAME=NOSYSIDSMSG,
      353     3382                 NPARMS    = 0,
      354     3383                 ATR       = M_SYS,
      355     3384                 MSG       = SYSID_MSG#,
      356     3385                 STCLASS   = CONSTANT);
      357     3398    1           2 * UBIN BYTE UNAL INIT(0);
      358     3399        %FO_CITE (FPTN=FO_CITEC,STCLASS=CONSTANT,TYP=GMSY,COD=FOEV_GMSY#);
      359     3458
      360     3459
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:63   
      361     3460
      362     3461        /**/
      363     3462        /* REFS */
      364     3463        /**/
      365     3464    1   DCL KUW$WRITE ENTRY(3) ALTRET;
      366     3465    1   DCL SSR$REG ENTRY(3) ALTRET;
      367     3466    1   DCL SSS$CACHEBP ENTRY;
      368     3467    1   DCL SSS$CACHE ENTRY;
      369     3468    1   DCL B$JIT$ PTR SYMREF;
      370     3469    1   DCL NK_HLPUN UBIN WORD SYMREF;
      371     3470    1   DCL B$PS0$ PTR SYMREF;
      372     3471    1   DCL S_CUN UBIN WORD SYMREF;
      373     3472    1   DCL J_OUTSYM CHAR(8) SYMREF READONLY;
      374     3473    1   DCL J_KEYIN CHAR(8) SYMREF READONLY;
      375     3474        %EJECT;
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:64   
      376     3475    1           GET_SYSIDS = '0'B;

   3475  1 000002   200004 450100                    STZ     GET_SYSIDS,,AUTO

      377     3476    2           DO WHILE('0'B);

   3476  1 000003   000024 710000 1                  TRA     IGNORE

      378     3477    2   WAIT_FOR_SYSIDS:
      379     3478    2             CALL SSS$CACHE;

   3478  1 000004   000002 631400 xsym  WAIT_FOR_SY* EPPR1   B_VECTNIL+2
         1 000005   000000 701000 xent               TSX1    SSS$CACHE
         1 000006   000000 011000                    NOP     0

      380     3479                  %UNLOCK (G#=S_SYSIDGATE);

   3480  1 000007   000000 630400 2                  EPPR0   0
         1 000010   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000011   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000012   000000 011000                    NOP     0

      381     3482    2             CALL SSR$REG(%SS_SL,,5) ALTRET(IGNORE);

   3482  1 000013   000002 236000 2                  LDQ     2
         1 000014   200020 756100                    STQ     FO_CITE+7,,AUTO
         1 000015   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000016   000003 235000 2                  LDA     3
         1 000017   200016 757100                    STAQ    FO_CITE+5,,AUTO
         1 000020   200016 630500                    EPPR0   FO_CITE+5,,AUTO
         1 000021   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000022   000000 701000 xent               TSX1    SSR$REG
         1 000023   000024 702000 1                  TSX2    IGNORE

      382     3483                                                /* Wait 5 seconds and try again       */
      383     3484    2   IGNORE:   END;

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:65   
   3484  1 000024                       IGNORE       null
      384     3485                %LOCK (G#=S_SYSIDGATE);

   3486  1 000024   000000 630400 2                  EPPR0   0
         1 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000026   000000 701000 xent               TSX1    HFC$LOCK
         1 000027   000000 011000                    NOP     0

      385     3488    1           CALL SSS$CACHEBP;

   3488  1 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000031   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000032   000000 011000                    NOP     0

      386     3489    1           IF S_NSYSIDS=0

   3489  1 000033   000000 235000 xsym               LDA     S_NSYSIDS
         1 000034   000041 601000 1                  TNZ     s:3494

      387     3490    1             THEN IF S_GETTING_SYSIDS

   3490  1 000035   000000 234000 xsym               SZN     S_GETTING_SYSIDS
         1 000036   000004 604000 1                  TMI     WAIT_FOR_SYSIDS

      388     3491    1                 THEN GOTO WAIT_FOR_SYSIDS;
      389     3492    1                 ELSE NEWSYSID = 0;

   3492  1 000037   200010 450100                    STZ     NEWSYSID,,AUTO
         1 000040   000077 710000 1                  TRA     s:3512

      390     3493    2             ELSE DO;

      391     3494    2               NEWSYSID=S_SYSID;

   3494  1 000041   000000 236000 xsym               LDQ     S_SYSID
         1 000042   200010 756100                    STQ     NEWSYSID,,AUTO

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:66   
      392     3495    2               IF S_SYSID<99999

   3495  1 000043   303237 116007                    CMPQ    99999,DL
         1 000044   000050 603000 1                  TRC     s:3497

      393     3496    2                 THEN S_SYSID = S_SYSID+1;

   3496  1 000045   000001 036007                    ADLQ    1,DL
         1 000046   000000 756000 xsym               STQ     S_SYSID
         1 000047   000052 710000 1                  TRA     s:3498

      394     3497    2                 ELSE S_SYSID = JG_MING#+1;

   3497  1 000050   000020 235007                    LDA     16,DL
         1 000051   000000 755000 xsym               STA     S_SYSID

      395     3498    2               S_NSYSIDS=S_NSYSIDS-1;

   3498  1 000052   000000 235000 xsym               LDA     S_NSYSIDS
         1 000053   000001 135007                    SBLA    1,DL
         1 000054   000000 755000 xsym               STA     S_NSYSIDS

      396     3499    2               IF S_NSYSIDS<=NSYSIDS_THRESH#

   3499  1 000055   001751 115007                    CMPA    1001,DL
         1 000056   000077 603000 1                  TRC     s:3512

      397     3500    3                 THEN DO;

      398     3501    3                   IF ~S_GETTING_SYSIDS

   3501  1 000057   000000 236000 xsym               LDQ     S_GETTING_SYSIDS
         1 000060   400000 376003                    ANQ     -131072,DU
         1 000061   400000 676003                    ERQ     -131072,DU
         1 000062   000077 600000 1                  TZE     s:3512

      399     3502    4                     THEN DO;              /* Kick OUTSYM to get more SYSIDs     */
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:67   

      400     3503    4                       GET_SYSIDS = '1'B;

   3503  1 000063   400000 236003                    LDQ     -131072,DU
         1 000064   200004 756100                    STQ     GET_SYSIDS,,AUTO

      401     3504    4                       S_GETTING_SYSIDS = '1'B;

   3504  1 000065   000000 756000 xsym               STQ     S_GETTING_SYSIDS

      402     3505    4                       FO_CITE=FO_CITEC;

   3505  1 000066   000100 100400                    MLR     fill='000'O
         1 000067   000006 000020 0                  ADSC9   FO_CITEC                 cn=0,n=16
         1 000070   200011 000020                    ADSC9   FO_CITE,,AUTO            cn=0,n=16

      403     3506    4                       FO_CITE.NXT = S_SYSID;

   3506  1 000071   000000 235000 xsym               LDA     S_SYSID
         1 000072   200012 755100                    STA     FO_CITE+1,,AUTO

      404     3507    4                       FO_CITE.NUM = S_NSYSIDS;

   3507  1 000073   000000 235000 xsym               LDA     S_NSYSIDS
         1 000074   200013 755100                    STA     FO_CITE+2,,AUTO

      405     3508    4                       FO_CITE.SPAN = SYSID_SPAN#;

   3508  1 000075   072460 235007                    LDA     30000,DL
         1 000076   200014 755100                    STA     FO_CITE+3,,AUTO

      406     3509    4                       END;

      407     3510    3                   END;

      408     3511    2               END;

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:68   
      409     3512    1           CALL SSS$CACHE;

   3512  1 000077   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000100   000000 701000 xent               TSX1    SSS$CACHE
         1 000101   000000 011000                    NOP     0

      410     3513                %UNLOCK (G#=S_SYSIDGATE);

   3514  1 000102   000000 630400 2                  EPPR0   0
         1 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000104   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000105   000000 011000                    NOP     0

      411     3516    1           IF GET_SYSIDS

   3516  1 000106   200004 234100                    SZN     GET_SYSIDS,,AUTO
         1 000107   000122 605000 1                  TPL     s:3518

      412     3517    1             THEN CALL KUW$WRITE(FO_CITE,LENGTHC(FO_CITE),J_OUTSYM);

   3517  1 000110   000005 236000 2                  LDQ     5
         1 000111   200020 756100                    STQ     FO_CITE+7,,AUTO
         1 000112   000006 236000 2                  LDQ     6
         1 000113   200017 756100                    STQ     FO_CITE+6,,AUTO
         1 000114   200011 630500                    EPPR0   FO_CITE,,AUTO
         1 000115   200016 450500                    STP0    FO_CITE+5,,AUTO
         1 000116   200016 630500                    EPPR0   FO_CITE+5,,AUTO
         1 000117   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000120   000000 701000 xent               TSX1    KUW$WRITE
         1 000121   000000 011000                    NOP     0

      413     3518    1           IF NEWSYSID=0

   3518  1 000122   200010 235100                    LDA     NEWSYSID,,AUTO
         1 000123   000131 601000 1                  TNZ     s:3523

      414     3519    2             THEN DO;
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:69   

      415     3520    2               CALL KUW$WRITE(NOSYSIDSMSG,LENGTHC(NOSYSIDSMSG),J_KEYIN);

   3520  1 000124   000010 630400 2                  EPPR0   8
         1 000125   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000126   000000 701000 xent               TSX1    KUW$WRITE
         1 000127   000000 011000                    NOP     0

      416     3521    2               ALTRETURN;

   3521  1 000130   000000 702200 xent               TSX2  ! X66_AALT

      417     3522    2               END;
      418     3523    1             ELSE SYSID = NEWSYSID;

   3523  1 000131   200003 470500                    LDP0    @SYSID,,AUTO
         1 000132   000000 755100                    STA     0,,PR0

      419     3524    1           RETURN;

   3524  1 000133   000000 702200 xent               TSX2  ! X66_ARET

      420     3525        %EJECT;
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:70   
      421     3526    1   UMS$NXTUSR: ENTRY ALTRET;

   3526  1 000134   000000 700200 xent  UMS$NXTUSR   TSX0  ! X66_AUTO_1
         1 000135   000022 000001                    ZERO    18,1

      422     3527        /*                                                                    */
      423     3528        /*                                                                    */
      424     3529        /*    RESULTS.CODE INDICATES IF USER NUMBER ASSIGNED.                 */
      425     3530        /*         CODE=0  OK                                                 */
      426     3531        /*                      (ERROR CODES IN KL_ERRORS_C)                  */
      427     3532        /*             =E$NUSR  NO USER SLOTS AVAILABLE                       */
      428     3533        /*             =E$NOOL  NO USER SLOTS FOR THIS MODE AVAILABLE         */
      429     3534        /*             =E$NOSYD NO SYSIDS AVAILABLE                           */
      430     3535        /*                                                                    */
      431     3536    1           MODE=B$PS0$->RESULTS.MODE;      /* SEE B$JIT FOR MODE DEFINITION      */

   3536  1 000136   000000 470400 xsym               LDP0    B$PS0$
         1 000137   000000 235100                    LDA     0,,PR0
         1 000140   200006 755100                    STA     MODE,,AUTO

      432     3537    1           IF S_CUN=NK_HLPUN

   3537  1 000141   000000 236000 xsym               LDQ     S_CUN
         1 000142   000000 116000 xsym               CMPQ    NK_HLPUN
         1 000143   000272 601000 1                  TNZ     s:3579

      433     3538    2             THEN DO;

      434     3539    2               IF MODE>0 AND MODE~=%M_BATCH#

   3539  1 000144   000000 115003                    CMPA    0,DU
         1 000145   000166 604400 1                  TMOZ    s:3549
         1 000146   000001 115007                    CMPA    1,DL
         1 000147   000166 600000 1                  TZE     s:3549

      435     3540    3                 THEN DO;

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:71   
      436     3541    3                   CALL UMS$NXTSID(NXTUSRSID) ALTRET(NOSYSIDS);

   3541  1 000150   200007 631500                    EPPR1   NXTUSRSID,,AUTO
         1 000151   200016 451500                    STP1    FO_CITE+5,,AUTO
         1 000152   200016 630500                    EPPR0   FO_CITE+5,,AUTO
         1 000153   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000154   000000 701000 1                  TSX1    s:6
         1 000155   000157 702000 1                  TSX2    NOSYSIDS

      437     3542    4                   DO WHILE('0'B);

   3542  1 000156   000163 710000 1                  TRA     s:3546

      438     3543    4   NOSYSIDS:         B$PS0$->RESULTS.CODE=%E$NOSYD;

   3543  1 000157   002265 235007       NOSYSIDS     LDA     1205,DL
         1 000160   000000 470400 xsym               LDP0    B$PS0$
         1 000161   000001 755100                    STA     1,,PR0

      439     3544    4                     RETURN;

   3544  1 000162   000000 702200 xent               TSX2  ! X66_ARET

      440     3545    4                     END;

      441     3546    3                   B$PS0$->RESULTS.SYSID=NXTUSRSID;

   3546  1 000163   000000 470400 xsym               LDP0    B$PS0$
         1 000164   200007 235100                    LDA     NXTUSRSID,,AUTO
         1 000165   000002 755100                    STA     2,,PR0

      442     3547    3                   END;

      443     3548                    %LOCK (G#=S_SCHDGATE);

   3549  1 000166   000013 630400 2                  EPPR0   11
         1 000167   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:72   
         1 000170   000000 701000 xent               TSX1    HFC$LOCK
         1 000171   000000 011000                    NOP     0

      444     3551    2               CALL SSS$CACHEBP;

   3551  1 000172   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000173   000000 701000 xent               TSX1    SSS$CACHEBP
         1 000174   000000 011000                    NOP     0

      445     3552    2               IF MODE < 0

   3552  1 000175   200006 235100                    LDA     MODE,,AUTO
         1 000176   000227 605000 1                  TPL     s:3561

      446     3553    3                 THEN DO;

      447     3554    3                   MODE=MODE*-1;

   3554  1 000177   000000 531000                    NEG     0
         1 000200   200006 755100                    STA     MODE,,AUTO

      448     3555    3                   B$USRT$->B$USER.BL(B$PS0$->RESULTS.UN)=0;

   3555  1 000201   000000 470400 xsym               LDP0    B$PS0$
         1 000202   000003 235100                    LDA     3,,PR0
         1 000203   000004 735000                    ALS     4
         1 000204   000000 471400 xsym               LDP1    B$USRT$
         1 000205   100003 450105                    STZ     3,AL,PR1

      449     3556    3                   B$USRT$->B$USER.FL(B$PS0$->RESULTS.UN)=S_HQ(%SS_SNULL);

   3556  1 000206   000000 470400 xsym               LDP0    B$PS0$
         1 000207   000003 235100                    LDA     3,,PR0
         1 000210   000004 735000                    ALS     4
         1 000211   000030 236000 xsym               LDQ     S_HQ+24
         1 000212   000000 471400 xsym               LDP1    B$USRT$
         1 000213   100002 756105                    STQ     2,AL,PR1
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:73   

      450     3557    3                   B$USRT$->B$USER.BL(S_HQ(%SS_SNULL))=B$PS0$->RESULTS.UN;

   3557  1 000214   000030 235000 xsym               LDA     S_HQ+24
         1 000215   000004 735000                    ALS     4
         1 000216   000000 470400 xsym               LDP0    B$PS0$
         1 000217   000000 471400 xsym               LDP1    B$USRT$
         1 000220   000000 620005                    EAX0    0,AL
         1 000221   000003 235100                    LDA     3,,PR0
         1 000222   100003 755110                    STA     3,X0,PR1

      451     3558    3                   S_HQ(%SS_SNULL)=B$PS0$->RESULTS.UN;

   3558  1 000223   000000 470400 xsym               LDP0    B$PS0$
         1 000224   000003 235100                    LDA     3,,PR0
         1 000225   000030 755000 xsym               STA     S_HQ+24

      452     3559    3                   END;

   3559  1 000226   000262 710000 1                  TRA     s:3574

      453     3560    3                 ELSE DO;

      454     3561    3                   IF S_CUIS(MODE) < S_MUIS(MODE)

   3561  1 000227   200006 720100                    LXL0    MODE,,AUTO
         1 000230   000000 236010 xsym               LDQ     S_CUIS,X0
         1 000231   000000 116005 xsym               CMPQ    S_MUIS,AL
         1 000232   000257 605000 1                  TPL     s:3572

      455     3562    3                     THEN IF S_HQ(%SS_SNULL) ~= 0 AND S_CTUIS < S_TUIS

   3562  1 000233   000030 235000 xsym               LDA     S_HQ+24
         1 000234   000253 600000 1                  TZE     s:3571
         1 000235   000000 236000 xsym               LDQ     S_CTUIS
         1 000236   000000 116000 xsym               CMPQ    S_TUIS
         1 000237   000253 605000 1                  TPL     s:3571
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:74   

      456     3563    4                         THEN DO;

      457     3564    4                           I=S_HQ(%SS_SNULL); /* GET USR # FROM HEAD OF NULL QUEUE */

   3564  1 000240   200005 755100                    STA     I,,AUTO

      458     3565    4                           S_HQ(%SS_SNULL)=B$USRT$->B$USER.FL(I);

   3565  1 000241   000004 735000                    ALS     4
         1 000242   000000 470400 xsym               LDP0    B$USRT$
         1 000243   000002 235105                    LDA     2,AL,PR0
         1 000244   000030 755000 xsym               STA     S_HQ+24

      459     3566    4                           B$PS0$->RESULTS.CODE=0; /*  OK                        */

   3566  1 000245   000000 471400 xsym               LDP1    B$PS0$
         1 000246   100001 450100                    STZ     1,,PR1

      460     3567    4                           B$PS0$->RESULTS.UN=I;

   3567  1 000247   200005 235100                    LDA     I,,AUTO
         1 000250   100003 755100                    STA     3,,PR1

      461     3568    4                           GOTO GOTIT;

   3568  1 000251   000252 710000 1                  TRA     s:3568+1
         1 000252   000262 710000 1                  TRA     s:3574

      462     3569    4   GOTIT:
      463     3570    4                           END;
      464     3571    3                         ELSE B$PS0$->RESULTS.CODE=%E$NUSR;

   3571  1 000253   002263 236007                    LDQ     1203,DL
         1 000254   000000 470400 xsym               LDP0    B$PS0$
         1 000255   000001 756100                    STQ     1,,PR0
         1 000256   000262 710000 1                  TRA     s:3574
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:75   

      465     3572    3                     ELSE B$PS0$->RESULTS.CODE=%E$NOOL;

   3572  1 000257   002264 235007                    LDA     1204,DL
         1 000260   000000 470400 xsym               LDP0    B$PS0$
         1 000261   000001 755100                    STA     1,,PR0

      466     3573    3                   END;

      467     3574    2               CALL SSS$CACHE;

   3574  1 000262   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000263   000000 701000 xent               TSX1    SSS$CACHE
         1 000264   000000 011000                    NOP     0

      468     3575                    %UNLOCK (G#=S_SCHDGATE);

   3576  1 000265   000013 630400 2                  EPPR0   11
         1 000266   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000267   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000270   000000 011000                    NOP     0

      469     3578    2               END;

   3578  1 000271   000275 710000 1                  TRA     s:3580

      470     3579    1             ELSE B$JIT$->B$JIT.ERR='232322004054'O; /* NOT ALLOWED FOR THIS USER */

   3579  1 000272   000012 236000 0                  LDQ     FO_CITEC+4
         1 000273   000000 471400 xsym               LDP1    B$JIT$
         1 000274   100012 756100                    STQ     10,,PR1

      471     3580    1           RETURN;

   3580  1 000275   000000 702200 xent               TSX2  ! X66_ARET

NOSYSIDSMSG
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:76   
 Sect OctLoc
   0     000   200000 000107   ****** 000003   000*** ******   040040 040040    ...G........
   0     004   040040 040040   000*** ******                                        ....

FO_CITEC
 Sect OctLoc
   0     006   000015 ******   000000 000000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   0     012   232322 004054                                                    ...,

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000000 000031   000007 006000   000001 006000    ................
   2     004   000000 000020   000000 006000   000004 006000   000000 000025    ................
   2     010   000000 006000   000007 006000   000000 006000   000000 006000    ................
      472     3581    1   END UMS$NXTSID;

PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:77   
--  Include file information  --

   SS_CNTRLD_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_R.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure UMS$NXTSID.
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:78   

 **** Variables and constants ****

  ****  Section 000 RoData UMS$NXTSID

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w STRC(144)   r     1 FO_CITEC                   0-0-0/c STRC(189)   r     1 NOSYSIDSMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SYSID                    11-0-0/w STRC(144)   r     1 FO_CITE
     4-0-0/w BIT         r     1 GET_SYSIDS                 5-0-0/w UBIN        r     1 I
     6-0-0/w SBIN        r     1 MODE                      10-0-0/w UBIN        r     1 NEWSYSID
     7-0-0/w UBIN        r     1 NXTUSRSID                 *0-0-0/w UBIN        r     1 SYSID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$USRT$                    0-0-0/c CHAR(8)     r     1 J_KEYIN
     0-0-0/c CHAR(8)     r     1 J_OUTSYM                   0-0-0/w UBIN        r     1 NK_HLPUN
     0-0-0/w SBIN        r     1 S_CTUIS                    0-0-0/w SBIN        r     1 S_CUIS(0:4)
     0-0-0/w UBIN        r     1 S_CUN                      0-0-0/w BIT         r     1 S_GETTING_SYSIDS
     0-0-0/w SBIN        r     1 S_HQ(0:8191)               0-0-0/w SBIN        r     1 S_MUIS(0:4)
     0-0-0/w UBIN        r     1 S_NSYSIDS                  0-0-0/b BIT (72)    r     1 S_SCHDGATE
     0-0-0/w UBIN        r     1 S_SYSID                    0-0-0/b BIT (72)    r     1 S_SYSIDGATE
     0-0-0/w SBIN        r     1 S_TUIS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:79   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(576)   r     1 B$USER(0:0)
     0-0-0/d STRC(144)   r     1 RESULTS


   Procedure UMS$NXTSID requires 190 words for executable code.
   Procedure UMS$NXTSID requires 18 words of local(AUTO) storage.

    No errors detected in file UMS$SYSID.:E05TSI    .
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:81   
          MINI XREF LISTING

B$DO.ECCINFO
       802**DCL       803--REDEF
B$JIT.CPFLAGS1.SLEAZE
       469**DCL       469--REDEF
B$JIT.ERR
       375**DCL      3579<<ASSIGN
B$JIT.ERR.MID
       376**DCL       376--REDEF
B$JIT.JRESPEAK
       537**DCL       538--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       646**DCL       646--REDEF     647--REDEF
B$JIT.PNR
       550**DCL       550--REDEF
B$JIT.TSLINE
       644**DCL       645--REDEF
B$JIT$
      3468**DCL       370--IMP-PTR  3579>>ASSIGN
B$PS0$
      3470**DCL      3536>>ASSIGN   3543>>ASSIGN   3546>>ASSIGN   3555>>ASSIGN   3556>>ASSIGN   3557>>ASSIGN
      3558>>ASSIGN   3566>>ASSIGN   3567>>ASSIGN   3571>>ASSIGN   3572>>ASSIGN
B$U.MISC
       781**DCL       782--REDEF
B$USER.BL
       830**DCL      3555<<ASSIGN   3557<<ASSIGN
B$USER.FL
       829**DCL      3556<<ASSIGN   3565>>ASSIGN
B$USER.MISC
       857**DCL       858--REDEF
B$USRT$
       869**DCL      3555>>ASSIGN   3556>>ASSIGN   3557>>ASSIGN   3565>>ASSIGN
FO_CITE
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:82   
      3330**DCL      3505<<ASSIGN   3517<>CALL     3517--CALL
FO_CITE.NUM
      3366**DCL      3507<<ASSIGN
FO_CITE.NXT
      3363**DCL      3506<<ASSIGN
FO_CITE.SPAN
      3369**DCL      3508<<ASSIGN
FO_CITEC
      3413**DCL      3505>>ASSIGN
GET_SYSIDS
      3311**DCL      3475<<ASSIGN   3503<<ASSIGN   3516>>IF
GOTIT
      3570**LABEL    3568--GOTO
HFC$LOCK
      1868**DCL-ENT  3486--CALL     3549--CALL
HFC$UNLOCK
      1868**DCL-ENT  3480--CALL     3514--CALL     3576--CALL
I
      3312**DCL      3564<<ASSIGN   3565>>ASSIGN   3567>>ASSIGN
IGNORE
      3484**LABEL    3482--CALLALT
J_KEYIN
      3473**DCL      3520<>CALL
J_OUTSYM
      3472**DCL      3517<>CALL
KUW$WRITE
      3464**DCL-ENT  3517--CALL     3520--CALL
MODE
      3313**DCL      3536<<ASSIGN   3539>>IF       3539>>IF       3552>>IF       3554<<ASSIGN   3554>>ASSIGN
      3561>>IF       3561>>IF
NEWSYSID
      3315**DCL      3492<<ASSIGN   3494<<ASSIGN   3518>>IF       3523>>ASSIGN
NK_HLPUN
      3469**DCL      3537>>IF
NOSYSIDS
      3543**LABEL    3541--CALLALT
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:83   
NOSYSIDSMSG
      3386**DCL      3520<>CALL     3520--CALL
NOSYSIDSMSG.FLAGS
      3393**DCL      3394--REDEF
NOSYSIDSMSG.MSGID
      3389**DCL      3390--REDEF
NXTUSRSID
      3314**DCL      3541<>CALL     3546>>ASSIGN
RESULTS.CODE
      3302**DCL      3543<<ASSIGN   3566<<ASSIGN   3571<<ASSIGN   3572<<ASSIGN
RESULTS.MODE
      3301**DCL      3536>>ASSIGN
RESULTS.SYSID
      3303**DCL      3546<<ASSIGN
RESULTS.UN
      3304**DCL      3555>>ASSIGN   3556>>ASSIGN   3557>>ASSIGN   3558>>ASSIGN   3567<<ASSIGN
SSR$REG
      3465**DCL-ENT  3482--CALL
SSS$CACHE
      3467**DCL-ENT  3478--CALL     3512--CALL     3574--CALL
SSS$CACHEBP
      3466**DCL-ENT  3488--CALL     3551--CALL
SYSID
        41**DCL         6--PROC     3523<<ASSIGN
S_CTUIS
      3269**DCL      3562>>IF
S_CUIS
      3269**DCL      3561>>IF
S_CUN
      3471**DCL      3537>>IF
S_GETTING_SYSIDS
      3275**DCL      3490>>IF       3501>>IF       3504<<ASSIGN
S_HQ
      3270**DCL      3556>>ASSIGN   3557>>ASSIGN   3558<<ASSIGN   3562>>IF       3564>>ASSIGN   3565<<ASSIGN
S_MUIS
      3269**DCL      3561>>IF
PL6.E3A0      #003=UMS$NXTSID File=UMS$SYSID.:E05TSI                             WED 07/30/97 07:00 Page:84   
S_NSYSIDS
      3275**DCL      3489>>IF       3498<<ASSIGN   3498>>ASSIGN   3499>>IF       3507>>ASSIGN
S_SCHDGATE
      3284**DCL      3549<>CALL     3576<>CALL
S_SYSID
      3275**DCL      3494>>ASSIGN   3495>>IF       3496<<ASSIGN   3496>>ASSIGN   3497<<ASSIGN   3506>>ASSIGN
S_SYSIDGATE
      3284**DCL      3480<>CALL     3486<>CALL     3514<>CALL
S_TUIS
      3269**DCL      3562>>IF
UMS$NXTSID
         6**PROC     3541--CALL
WAIT_FOR_SYSIDS
      3478**LABEL    3491--GOTO
