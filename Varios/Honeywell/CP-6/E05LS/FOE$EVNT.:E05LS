VERSION E05

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:1    
        1        1        /*M* FOE$EVNT OUTSYM ghost event handling routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOE$EVNT
       10       10             PURPOSE:      To receive EVENTs for the OUTSYM ghost
       11       11        */
       12       12        /**/
       13       13        /*F* NAME:         FOE$EVNT
       14       14             PURPOSE:      To receive asynchronous EVENTs for the OUTSYM
       15       15                           ghost.
       16       16             DESCRIPTION:  FOE$EVNT is the M$EVENT event receiver for
       17       17                           the OUTSYM ghost.
       18       18
       19       19                           The information appropriate to the event is
       20       20                           extracted into an event queue frame which is
       21       21                           then placed on the tail of the event queue.
       22       22
       23       23                           Note that if the main routine of OUTSYM was
       24       24                           asleep when the event ocurred, it will have
       25       25                           been awakened and will pick up the event
       26       26                           from the queue.  Hence FOE$EVNT does not look
       27       27                           at the events themselves; its only purpose
       28       28                           is to format the info nicely and stuff it into
       29       29                           the queue. */
       30       30
       31       31        /**/
       32       32        FOE$EVNT: PROC ASYNC;
       33       33
       34       34
       35       35
       36       36        /**/
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:2    
       37       37        /* INCLUDES */
       38       38        /**/
       39       39        %INCLUDE CP_6;
       40      120        %INCLUDE FO_SCODE_C;
       41      148        %INCLUDE FOO_SUBS_C;
       42      384        %INCLUDE FS$FIT;
       43      427        %INCLUDE FOO_MAC_C;
       44     1175        %INCLUDE UE_ERRORS_C;
       45     1193        %INCLUDE FOO_DATA_R;
       46     2359        %INCLUDE JG_EVID_C;
       47     2584
       48     2585
       49     2586
       50     2587        /**/
       51     2588        /* BASED STRUCTURES */
       52     2589        /**/
       53     2590        %B$TCB;
       54     2593        %B$ALT;
       55     2601        %B$NWIO;
       56     2686        %FO_CITE (FPTN=FO$CITE,TYP=JOB,STCLASS=BASED);
       57     2745
       58     2746
       59     2747
       60     2748        /**/
       61     2749        /* AUTO */
       62     2750        /**/
       63     2751    1   DCL EVENT UBIN WORD;
       64     2752    1   DCL 1 EVNT REDEF EVENT,
       65     2753    1         2 * UBIN(18) UNAL,
       66     2754    1         2 EVID UBIN(18) UNAL;
       67     2755    1   DCL STK$ PTR;
       68     2756    1   DCL I UBIN;
       69     2757    1   DCL EVNT$ PTR;
       70     2758    1   DCL RENV UBIN WORD;
       71     2759
       72     2760
       73     2761        %SUB F_FO='0617'O;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:3    
       74     2762        %SUB M_E='05'O;
       75     2763
       76     2764        /**/
       77     2765        /* REFS */
       78     2766        /**/
       79     2767    1   DCL B$TCB$ PTR SYMREF;
       80     2768
       81     2769
       82     2770
       83     2771        /**/
       84     2772        /* REFS */
       85     2773        /**/
       86     2774    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
       87     2775    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
       88     2776        %EJECT;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:4    
       89     2777        /**/
       90     2778        /* BEGIN HERE */
       91     2779        /**/
       92     2780    2           DO INHIBIT;
       93     2781    2           STK$=B$TCB$->B$TCB.STK$;
       94     2782
       95     2783
       96     2784
       97     2785    2           RENV=0;
       98     2786    2           EVNT$=FO_FEVHD$;
       99     2787    2           FO_FEVHD$=EVNT$->FO$EVNT.LNK$;
      100     2788    2           IF FO_FEVHD$=ADDR(NIL) THEN FO_FEVTL$=ADDR(NIL);
      101     2789
      102     2790                                /* LINK IT INTO THE QUEUE NOW, SO THAT THE
      103     2791                                   QUEUE CONTAINS EVENT FRAMES IN THE ORDER
      104     2792                                   THAT THE EVENTS WERE RECEIVED */
      105     2793
      106     2794    2           EVNT$->FO$EVNT.LNK$=ADDR(NIL);
      107     2795    2           IF FO_EVTL$=ADDR(NIL) THEN
      108     2796    3             DO;
      109     2797    3             FO_EVHD$=EVNT$;
      110     2798    3             END;
      111     2799    2           ELSE
      112     2800    3             DO;
      113     2801    3             FO_EVTL$->FO$EVNT.LNK$=EVNT$;
      114     2802    3             END;
      115     2803    2           FO_EVTL$=EVNT$;
      116     2804    2           END; /* DO INHIBIT */
      117     2805    1         EVNT$->FO$EVNT.ENDAC=0;
      118     2806        %EJECT;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:5    
      119     2807        /***
      120     2808         ***
      121     2809         ***
      122     2810         ***     PROCESS THE EVENT HERE
      123     2811         ***
      124     2812         ***
      125     2813         ***/
      126     2814    1         EVENT=STK$->B$NWIO.EVID; /* TO PICK OFF THE SUBCODE */
      127     2815    2           DO CASE (EVNT.EVID); /* MAIN EVENT CODE */
      128     2816        /***
      129     2817         ***
      130     2818         ***
      131     2819         ***     CSCG READ COMPLETE
      132     2820         ***
      133     2821         ***
      134     2822         ***/
      135     2823    2             CASE (FO_CSRD#);
      136     2824
      137     2825    2               EVNT$->FO$EVNT.ENDAC=FOEA_CSCG#;
      138     2826    2               EVNT$->FO$EVNT.CITE$=ADDR(FO_CSCGBUF);
      139     2827    2               IF STK$->B$NWIO.ERR ~= '0'B THEN
      140     2828    3                 DO INHIBIT;
      141     2829    3                 CALL SENV;
      142     2830    3                 CALL FOI$SNAP (%S$CSCGERR,F_FO,M_E);
      143     2831        /*S* SCREECH_CODE: FOE-S$CSCGERR
      144     2832             TYPE:         SNAP
      145     2833             MESSAGE:      OUTSYM - error reading CSCG
      146     2834             DESCRIPTION:  This SCREECH occurs when OUTSYM receives notif-
      147     2835                           ication that his no-wait read on the CSCG
      148     2836                           is complete, but that an error occurred. This
      149     2837                           implies that the CSCG is blotto.   */
      150     2838    3                 GOTO NOEVENT;
      151     2839    3                 END;
      152     2840    2               IF STK$->B$NWIO.CGPARM.STATION# ~= 'KEYIN' THEN
      153     2841    2                EVNT$->FO$EVNT.CODE=ADDR(FO_CSCGBUF)->FO$CITE.CODE;
      154     2842    2               ELSE EVNT$->FO$EVNT.CODE=FOEV_KEYIN#;
      155     2843        /***
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:6    
      156     2844         ***
      157     2845         ***
      158     2846         ***     OUTSYM COMGROUP READ COMPLETE
      159     2847         ***
      160     2848         ***
      161     2849         ***/
      162     2850    2             CASE (FO_OSAU#);
      163     2851    2               EVNT$->FO$EVNT.ENDAC=FOEA_OSCG#;
      164     2852    2               EVNT$->FO$EVNT.CODE=FOEV_OSAU#;
      165     2853        /***
      166     2854         ***
      167     2855         ***
      168     2856         ***     UNKNOWN EVENT CODE
      169     2857         ***
      170     2858         ***
      171     2859         ***/
      172     2860    2             CASE (ELSE);
      173     2861
      174     2862    2               CALL SENV;
      175     2863    3                 DO INHIBIT;
      176     2864    3                 CALL FOI$SNAP (%S$BADEV,F_FO,M_E);
      177     2865    3                 END;
      178     2866        /*S* SCREECH_CODE: FOE-S$BADEV
      179     2867             TYPE:         SNAP
      180     2868             MESSAGE:      Unknown          event passed to OUTSYM
      181     2869             REMARKS:      OUTSYM's event receiver routine has encountered
      182     2870                           an unknown event code.  */
      183     2871
      184     2872                                /* COME HERE TO PASS GARBO (NOP) EVENT */
      185     2873    2   NOEVENT:    ;
      186     2874    2               EVNT$->FO$EVNT.CODE=FOEV_NOP#;
      187     2875        /**/
      188     2876    2           END;
      189     2877        /** RETURN **/
      190     2878    1   ENDEVENT:
      191     2879    1         IF RENV=1 THEN CALL M$RENV;
      192     2880    1         RETURN;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:7    
      193     2881
      194     2882        /**** PROC TO SENV *****/
      195     2883    1   SENV: PROC;
      196     2884    2         CALL M$SENV ALTRET(NOSENV);
      197     2885    2         RENV=1;
      198     2886    2         RETURN;
      199     2887    2   NOSENV:;
      200     2888    2         IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$ALTEMPTY THEN RETURN;
      201     2889    2         CALL M$MERC;
      202     2890    2         RETURN;
      203     2891    2   END SENV;
      204     2892        %EJECT;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:8    
      205     2893        /**/
      206     2894        /*F* NAME:         FOE$XCON
      207     2895             PURPOSE:      To receive exit control for the OUTSYM ghost
      208     2896             DESCRIPTION:  Upon receiving exit control, OUTSYM simply
      209     2897                           SCREECHes.
      210     2898        */
      211     2899    1   FOE$XCON: ENTRY ASYNC;
      212     2900        /**/
      213     2901    1         CALL FOI$CRASH (%S$XCON,F_FO,M_E);
      214     2902        /*S* SCREECH_CODE: FOE-S$XCON
      215     2903             TYPE:         SCREECH
      216     2904             MESSAGE:      OUTSYM has aborted
      217     2905             REMARKS:      If OUTSYM aborts then we must SCREECH due
      218     2906                           to possible symbiont activity ongoing in
      219     2907                           the monitor, which cannot be synched with
      220     2908                           an LDTRCed copy of the ghost. */
      221     2909    1   END FOE$EVNT;

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:9    
--  Include file information  --

   JG_EVID_C.:E05TOU  is referenced.
   FOO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   FO_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FOE$EVNT.

   Procedure FOE$EVNT requires 112 words for executable code.
   Procedure FOE$EVNT requires 10 words of local(AUTO) storage.

    No errors detected in file FOE$EVNT.:E05TSI    .

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:10   

 Object Unit name= FOE$EVNT                                   File name= FOE$EVNT.:E05TOU
 UTS= JUL 29 '97 17:06:40.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  FOE$EVNT
    2   Proc  even  none   112    160  FOE$EVNT
    3  RoData even  none    15     17  FOE$EVNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  FOE$EVNT
     2    151                  yes     Async       0  FOE$XCON

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 FOI$SNAP
 yes     yes           Std       3 FOI$CRASH
                       nStd      0 X66_AAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AARET
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FO_CSCGBUF                            FO_EVHD$
     FO_EVTL$                              FO_FEVHD$                             FO_FEVTL$
     B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:12   


        1        1        /*M* FOE$EVNT OUTSYM ghost event handling routine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOE$EVNT
       10       10             PURPOSE:      To receive EVENTs for the OUTSYM ghost
       11       11        */
       12       12        /**/
       13       13        /*F* NAME:         FOE$EVNT
       14       14             PURPOSE:      To receive asynchronous EVENTs for the OUTSYM
       15       15                           ghost.
       16       16             DESCRIPTION:  FOE$EVNT is the M$EVENT event receiver for
       17       17                           the OUTSYM ghost.
       18       18
       19       19                           The information appropriate to the event is
       20       20                           extracted into an event queue frame which is
       21       21                           then placed on the tail of the event queue.
       22       22
       23       23                           Note that if the main routine of OUTSYM was
       24       24                           asleep when the event ocurred, it will have
       25       25                           been awakened and will pick up the event
       26       26                           from the queue.  Hence FOE$EVNT does not look
       27       27                           at the events themselves; its only purpose
       28       28                           is to format the info nicely and stuff it into
       29       29                           the queue. */
       30       30
       31       31        /**/
       32       32        FOE$EVNT: PROC ASYNC;

     32  2 000000   000000 700200 xent  FOE$EVNT     TSX0  ! X66_AAUTO
         2 000001   000012 000000                    ZERO    10,0
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:13   

       33       33
       34       34
       35       35
       36       36        /**/
       37       37        /* INCLUDES */
       38       38        /**/
       39       39        %INCLUDE CP_6;
       40      120        %INCLUDE FO_SCODE_C;
       41      148        %INCLUDE FOO_SUBS_C;
       42      384        %INCLUDE FS$FIT;
       43      427        %INCLUDE FOO_MAC_C;
       44     1175        %INCLUDE UE_ERRORS_C;
       45     1193        %INCLUDE FOO_DATA_R;
       46     2359        %INCLUDE JG_EVID_C;
       47     2584
       48     2585
       49     2586
       50     2587        /**/
       51     2588        /* BASED STRUCTURES */
       52     2589        /**/
       53     2590        %B$TCB;
       54     2593        %B$ALT;
       55     2601        %B$NWIO;
       56     2686        %FO_CITE (FPTN=FO$CITE,TYP=JOB,STCLASS=BASED);
       57     2745
       58     2746
       59     2747
       60     2748        /**/
       61     2749        /* AUTO */
       62     2750        /**/
       63     2751    1   DCL EVENT UBIN WORD;
       64     2752    1   DCL 1 EVNT REDEF EVENT,
       65     2753    1         2 * UBIN(18) UNAL,
       66     2754    1         2 EVID UBIN(18) UNAL;
       67     2755    1   DCL STK$ PTR;
       68     2756    1   DCL I UBIN;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:14   
       69     2757    1   DCL EVNT$ PTR;
       70     2758    1   DCL RENV UBIN WORD;
       71     2759
       72     2760
       73     2761        %SUB F_FO='0617'O;
       74     2762        %SUB M_E='05'O;
       75     2763
       76     2764        /**/
       77     2765        /* REFS */
       78     2766        /**/
       79     2767    1   DCL B$TCB$ PTR SYMREF;
       80     2768
       81     2769
       82     2770
       83     2771        /**/
       84     2772        /* REFS */
       85     2773        /**/
       86     2774    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
       87     2775    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
       88     2776        %EJECT;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:15   
       89     2777        /**/
       90     2778        /* BEGIN HERE */
       91     2779        /**/
       92     2780    2           DO INHIBIT;

       93     2781    2           STK$=B$TCB$->B$TCB.STK$;

   2781  2 000002   000000 470600 xsym               LDP0  ! B$TCB$
         2 000003   000001 236300                    LDQ   ! 1,,PR0
         2 000004   200004 756300                    STQ   ! STK$,,AUTO

       94     2782
       95     2783
       96     2784
       97     2785    2           RENV=0;

   2785  2 000005   200007 450300                    STZ   ! RENV,,AUTO

       98     2786    2           EVNT$=FO_FEVHD$;

   2786  2 000006   000000 236200 xsym               LDQ   ! FO_FEVHD$
         2 000007   200006 756300                    STQ   ! EVNT$,,AUTO

       99     2787    2           FO_FEVHD$=EVNT$->FO$EVNT.LNK$;

   2787  2 000010   200006 471700                    LDP1  ! EVNT$,,AUTO
         2 000011   100000 236300                    LDQ   ! 0,,PR1
         2 000012   000000 756200 xsym               STQ   ! FO_FEVHD$

      100     2788    2           IF FO_FEVHD$=ADDR(NIL) THEN FO_FEVTL$=ADDR(NIL);

   2788  2 000013   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         2 000014   000017 601200 2                  TNZ   ! s:2794

   2788  2 000015   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         2 000016   000000 756200 xsym               STQ   ! FO_FEVTL$

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:16   
      101     2789
      102     2790                                /* LINK IT INTO THE QUEUE NOW, SO THAT THE
      103     2791                                   QUEUE CONTAINS EVENT FRAMES IN THE ORDER
      104     2792                                   THAT THE EVENTS WERE RECEIVED */
      105     2793
      106     2794    2           EVNT$->FO$EVNT.LNK$=ADDR(NIL);

   2794  2 000017   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         2 000020   100000 756300                    STQ   ! 0,,PR1

      107     2795    2           IF FO_EVTL$=ADDR(NIL) THEN

   2795  2 000021   000000 236200 xsym               LDQ   ! FO_EVTL$
         2 000022   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         2 000023   000027 601200 2                  TNZ   ! s:2801

      108     2796    3             DO;

      109     2797    3             FO_EVHD$=EVNT$;

   2797  2 000024   200006 236300                    LDQ   ! EVNT$,,AUTO
         2 000025   000000 756200 xsym               STQ   ! FO_EVHD$

      110     2798    3             END;

   2798  2 000026   000032 710200 2                  TRA   ! s:2803

      111     2799    2           ELSE
      112     2800    3             DO;

      113     2801    3             FO_EVTL$->FO$EVNT.LNK$=EVNT$;

   2801  2 000027   200006 236300                    LDQ   ! EVNT$,,AUTO
         2 000030   000000 470600 xsym               LDP0  ! FO_EVTL$
         2 000031   000000 756300                    STQ   ! 0,,PR0

      114     2802    3             END;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:17   

      115     2803    2           FO_EVTL$=EVNT$;

   2803  2 000032   000000 756200 xsym               STQ   ! FO_EVTL$

      116     2804    2           END; /* DO INHIBIT */

      117     2805    1         EVNT$->FO$EVNT.ENDAC=0;

   2805  2 000033   000000 220003                    LDX0    0,DU
         2 000034   100001 440100                    SXL0    1,,PR1

      118     2806        %EJECT;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:18   
      119     2807        /***
      120     2808         ***
      121     2809         ***
      122     2810         ***     PROCESS THE EVENT HERE
      123     2811         ***
      124     2812         ***
      125     2813         ***/
      126     2814    1         EVENT=STK$->B$NWIO.EVID; /* TO PICK OFF THE SUBCODE */

   2814  2 000035   200004 470500                    LDP0    STK$,,AUTO
         2 000036   000101 235100                    LDA     65,,PR0
         2 000037   200003 755100                    STA     EVENT,,AUTO

      127     2815    2           DO CASE (EVNT.EVID); /* MAIN EVENT CODE */

   2815  2 000040   200003 721100                    LXL1    EVENT,,AUTO
         2 000041   000003 101003                    CMPX1   3,DU
         2 000042   000044 602011 2                  TNC     s:2815+4,X1
         2 000043   000106 710000 2                  TRA     s:2862
         2 000044   000106 710000 2                  TRA     s:2862
         2 000045   000047 710000 2                  TRA     s:2825
         2 000046   000101 710000 2                  TRA     s:2851

      128     2816        /***
      129     2817         ***
      130     2818         ***
      131     2819         ***     CSCG READ COMPLETE
      132     2820         ***
      133     2821         ***
      134     2822         ***/
      135     2823    2             CASE (FO_CSRD#);

      136     2824
      137     2825    2               EVNT$->FO$EVNT.ENDAC=FOEA_CSCG#;

   2825  2 000047   000001 222003                    LDX2    1,DU
         2 000050   100001 442100                    SXL2    1,,PR1
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:19   

      138     2826    2               EVNT$->FO$EVNT.CITE$=ADDR(FO_CSCGBUF);

   2826  2 000051   000000 236000 3                  LDQ     0
         2 000052   100002 756100                    STQ     2,,PR1

      139     2827    2               IF STK$->B$NWIO.ERR ~= '0'B THEN

   2827  2 000053   000102 235100                    LDA     66,,PR0
         2 000054   000064 600000 2                  TZE     s:2840

      140     2828    3                 DO INHIBIT;

      141     2829    3                 CALL SENV;

   2829  2 000055   000125 701200 2                  TSX1  ! SENV
         2 000056   000000 011200                    NOP   ! 0

      142     2830    3                 CALL FOI$SNAP (%S$CSCGERR,F_FO,M_E);

   2830  2 000057   000004 630600 3                  EPPR0 ! 4
         2 000060   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         2 000061   000000 701200 xent               TSX1  ! FOI$SNAP
         2 000062   000000 011200                    NOP   ! 0

      143     2831        /*S* SCREECH_CODE: FOE-S$CSCGERR
      144     2832             TYPE:         SNAP
      145     2833             MESSAGE:      OUTSYM - error reading CSCG
      146     2834             DESCRIPTION:  This SCREECH occurs when OUTSYM receives notif-
      147     2835                           ication that his no-wait read on the CSCG
      148     2836                           is complete, but that an error occurred. This
      149     2837                           implies that the CSCG is blotto.   */
      150     2838    3                 GOTO NOEVENT;

   2838  2 000063   000114 710200 2                  TRA   ! NOEVENT

      151     2839    3                 END;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:20   

      152     2840    2               IF STK$->B$NWIO.CGPARM.STATION# ~= 'KEYIN' THEN

   2840  2 000064   200004 470500                    LDP0    STK$,,AUTO
         2 000065   040000 106500                    CMPC    fill='040'O
         2 000066   000107 000010                    ADSC9   71,,PR0                  cn=0,n=8
         2 000067   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000070   000075 600000 2                  TZE     s:2842

      153     2841    2                EVNT$->FO$EVNT.CODE=ADDR(FO_CSCGBUF)->FO$CITE.CODE;

   2841  2 000071   000000 220000 xsym               LDX0    FO_CSCGBUF
         2 000072   200006 471500                    LDP1    EVNT$,,AUTO
         2 000073   100001 740100                    STX0    1,,PR1
         2 000074   000117 710000 2                  TRA     ENDEVENT

      154     2842    2               ELSE EVNT$->FO$EVNT.CODE=FOEV_KEYIN#;

   2842  2 000075   000003 220003                    LDX0    3,DU
         2 000076   200006 471500                    LDP1    EVNT$,,AUTO
         2 000077   100001 740100                    STX0    1,,PR1
         2 000100   000117 710000 2                  TRA     ENDEVENT

      155     2843        /***
      156     2844         ***
      157     2845         ***
      158     2846         ***     OUTSYM COMGROUP READ COMPLETE
      159     2847         ***
      160     2848         ***
      161     2849         ***/
      162     2850    2             CASE (FO_OSAU#);

      163     2851    2               EVNT$->FO$EVNT.ENDAC=FOEA_OSCG#;

   2851  2 000101   000002 222003                    LDX2    2,DU
         2 000102   100001 442100                    SXL2    1,,PR1

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:21   
      164     2852    2               EVNT$->FO$EVNT.CODE=FOEV_OSAU#;

   2852  2 000103   000001 223003                    LDX3    1,DU
         2 000104   100001 743100                    STX3    1,,PR1
         2 000105   000117 710000 2                  TRA     ENDEVENT

      165     2853        /***
      166     2854         ***
      167     2855         ***
      168     2856         ***     UNKNOWN EVENT CODE
      169     2857         ***
      170     2858         ***
      171     2859         ***/
      172     2860    2             CASE (ELSE);

      173     2861
      174     2862    2               CALL SENV;

   2862  2 000106   000125 701000 2                  TSX1    SENV
         2 000107   000000 011000                    NOP     0

      175     2863    3                 DO INHIBIT;

      176     2864    3                 CALL FOI$SNAP (%S$BADEV,F_FO,M_E);

   2864  2 000110   000010 630600 3                  EPPR0 ! 8
         2 000111   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         2 000112   000000 701200 xent               TSX1  ! FOI$SNAP
         2 000113   000000 011200                    NOP   ! 0

      177     2865    3                 END;

   2864  2 000114                       NOEVENT      null
      178     2866        /*S* SCREECH_CODE: FOE-S$BADEV
      179     2867             TYPE:         SNAP
      180     2868             MESSAGE:      Unknown          event passed to OUTSYM
      181     2869             REMARKS:      OUTSYM's event receiver routine has encountered
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:22   
      182     2870                           an unknown event code.  */
      183     2871
      184     2872                                /* COME HERE TO PASS GARBO (NOP) EVENT */
      185     2873    2   NOEVENT:    ;
      186     2874    2               EVNT$->FO$EVNT.CODE=FOEV_NOP#;

   2874  2 000114   000000 220003                    LDX0    0,DU
         2 000115   200006 470500                    LDP0    EVNT$,,AUTO
         2 000116   000001 740100                    STX0    1,,PR0

      187     2875        /**/
      188     2876    2           END;

      189     2877        /** RETURN **/
      190     2878    1   ENDEVENT:
      191     2879    1         IF RENV=1 THEN CALL M$RENV;

   2879  2 000117   200007 235100       ENDEVENT     LDA     RENV,,AUTO
         2 000120   000001 115007                    CMPA    1,DL
         2 000121   000124 601000 2                  TNZ     s:2880

   2879  2 000122   010016 713400                    CLIMB   4110
         2 000123   000000 401760                    pmme    nvectors=0

      192     2880    1         RETURN;

   2880  2 000124   000000 702200 xent               TSX2  ! X66_AARET

      193     2881
      194     2882        /**** PROC TO SENV *****/
      195     2883    1   SENV: PROC;

   2883  2 000125   200010 741300       SENV         STX1  ! RENV+1,,AUTO

      196     2884    2         CALL M$SENV ALTRET(NOSENV);

   2884  2 000126   410011 713400                    CLIMB   alt,+4105
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:23   
         2 000127   000000 401760                    pmme    nvectors=0
         2 000130   000135 702000 2                  TSX2    NOSENV

      197     2885    2         RENV=1;

   2885  2 000131   000001 235007                    LDA     1,DL
         2 000132   200007 755100                    STA     RENV,,AUTO

      198     2886    2         RETURN;

   2886  2 000133   200010 221300                    LDX1  ! RENV+1,,AUTO
         2 000134   000001 702211                    TSX2  ! 1,X1

   2885  2 000135                       NOSENV       null
      199     2887    2   NOSENV:;
      200     2888    2         IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$ALTEMPTY THEN RETURN;

   2888  2 000135   000000 470400 xsym               LDP0    B$TCB$
         2 000136   000000 471500                    LDP1    0,,PR0
         2 000137   100102 236100                    LDQ     66,,PR1
         2 000140   377770 376007                    ANQ     131064,DL
         2 000141   007610 116007                    CMPQ    3976,DL
         2 000142   000145 601000 2                  TNZ     s:2889

   2888  2 000143   200010 221300                    LDX1  ! RENV+1,,AUTO
         2 000144   000001 702211                    TSX2  ! 1,X1

      201     2889    2         CALL M$MERC;

   2889  2 000145   010007 713400                    CLIMB   4103
         2 000146   000000 401760                    pmme    nvectors=0

      202     2890    2         RETURN;

   2890  2 000147   200010 221300                    LDX1  ! RENV+1,,AUTO
         2 000150   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:24   
      203     2891    2   END SENV;
      204     2892        %EJECT;
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:25   
      205     2893        /**/
      206     2894        /*F* NAME:         FOE$XCON
      207     2895             PURPOSE:      To receive exit control for the OUTSYM ghost
      208     2896             DESCRIPTION:  Upon receiving exit control, OUTSYM simply
      209     2897                           SCREECHes.
      210     2898        */
      211     2899    1   FOE$XCON: ENTRY ASYNC;

   2899  2 000151   000000 700200 xent  FOE$XCON     TSX0  ! X66_AAUTO
         2 000152   000012 000000                    ZERO    10,0

      212     2900        /**/
      213     2901    1         CALL FOI$CRASH (%S$XCON,F_FO,M_E);

   2901  2 000153   000014 630400 3                  EPPR0   12
         2 000154   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000155   000000 701000 xent               TSX1    FOI$CRASH
         2 000156   000000 011000                    NOP     0

      214     2902        /*S* SCREECH_CODE: FOE-S$XCON
      215     2903             TYPE:         SCREECH
      216     2904             MESSAGE:      OUTSYM has aborted
      217     2905             REMARKS:      If OUTSYM aborts then we must SCREECH due
      218     2906                           to possible symbiont activity ongoing in
      219     2907                           the monitor, which cannot be synched with
      220     2908                           an LDTRCed copy of the ghost. */
      221     2909    1   END FOE$EVNT;

   2909  2 000157   000000 702200 xent               TSX2  ! X66_AARET

PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:26   
--  Include file information  --

   JG_EVID_C.:E05TOU  is referenced.
   FOO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   UE_ERRORS_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   FO_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FOE$EVNT.
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:27   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN        r     1 EVENT                      3-0-0/w STRC        r     1 EVNT
     6-0-0/w PTR         r     1 EVNT$                      7-0-0/w UBIN        r     1 RENV
     4-0-0/w PTR         r     1 STK$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d CHAR(140)   r     1 FO_CSCGBUF
     0-0-0/w PTR         r     1 FO_EVHD$                   0-0-0/w PTR         r     1 FO_EVTL$
     0-0-0/w PTR         r     1 FO_FEVHD$                  0-0-0/w PTR         r     1 FO_FEVTL$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(2880)  r     1 B$NWIO
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(90)    r     1 FO$CITE
     0-0-0/w STRC(108)   r     1 FO$EVNT                    0-0-0/w ASTR(351)   r     1 FO$JOB


   Procedure FOE$EVNT requires 112 words for executable code.
   Procedure FOE$EVNT requires 10 words of local(AUTO) storage.

    No errors detected in file FOE$EVNT.:E05TSI    .
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:29   
          MINI XREF LISTING

B$ALT.CODE
      2595**DCL      2595--REDEF    2596--REDEF    2596--REDEF
B$ALT.ERR.CODE
      2597**DCL      2888>>IF
B$ALT.ERR.ERR#
      2597**DCL      2597--REDEF
B$ALT.EVID
      2596**DCL      2596--REDEF    2596--REDEF
B$NWIO.CGPARM.MSGIDXT
      2635**DCL      2638--REDEF
B$NWIO.CGPARM.STATION#
      2629**DCL      2840>>IF
B$NWIO.CODE
      2604**DCL      2604--REDEF    2605--REDEF    2605--REDEF
B$NWIO.ERR
      2605**DCL      2827>>IF
B$NWIO.ERR.ERR#
      2606**DCL      2606--REDEF
B$NWIO.EVID
      2605**DCL      2605--REDEF    2605--REDEF    2814>>ASSIGN
B$TCB.ALT$
      2591**DCL      2888>>IF
B$TCB.STK$
      2591**DCL      2781>>ASSIGN
B$TCB$
      2767**DCL      2781>>ASSIGN   2888>>IF
EVENT
      2751**DCL      2752--REDEF    2814<<ASSIGN
EVNT.EVID
      2754**DCL      2815>>DOCASE
EVNT$
      2757**DCL      2786<<ASSIGN   2787>>ASSIGN   2794>>ASSIGN   2797>>ASSIGN   2801>>ASSIGN   2803>>ASSIGN
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:30   
      2805>>ASSIGN   2825>>ASSIGN   2826>>ASSIGN   2841>>ASSIGN   2842>>ASSIGN   2851>>ASSIGN   2852>>ASSIGN
      2874>>ASSIGN
FO$CITE.BATCH
      2710**DCL      2713--REDEF    2717--REDEF
FO$CITE.CODE
      2704**DCL      2841>>ASSIGN
FO$CITE.NUM
      2719**DCL      2722--REDEF
FO$DEV.NAME
      1317**DCL      1318--REDEF
FO$DEV.RACCT
      1385**DCL      1386--REDEF
FO$DKEYIN.CHKP
      1224**DCL      1225--REDEF
FO$DKEYIN.DEVNM
      1217**DCL      1218--REDEF
FO$DKEYIN.TNAME
      1229**DCL      1230--REDEF    1231--REDEF
FO$EVNT.CITE$
      1405**DCL      2826<<ASSIGN
FO$EVNT.CODE
      1403**DCL      2841<<ASSIGN   2842<<ASSIGN   2852<<ASSIGN   2874<<ASSIGN
FO$EVNT.ENDAC
      1404**DCL      2805<<ASSIGN   2825<<ASSIGN   2851<<ASSIGN
FO$EVNT.LNK$
      1402**DCL      2787>>ASSIGN   2794<<ASSIGN   2801<<ASSIGN
FO$FIL.DEST
      1453**DCL      1454--REDEF
FO$FKEYIN.ACCT
      1258**DCL      1259--REDEF
FO$FKEYIN.NOTFORM
      1254**DCL      1255--REDEF
FO$JOB.JNL
      1565**DCL      1572--IMP-SIZ
FO$RKEYIN.DEVNM
      1281**DCL      1282--REDEF
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:31   
FOI$CRASH
      2774**DCL-ENT  2901--CALL
FOI$SNAP
      2775**DCL-ENT  2830--CALL     2864--CALL
FO_CSCGBUF
      1634**DCL      2826--ASSIGN   2841--ASSIGN
FO_DEV_INIT.NAME
      1983**DCL      1984--REDEF
FO_DEV_INIT.RACCT
      2051**DCL      2052--REDEF
FO_EVHD$
      1634**DCL      2797<<ASSIGN
FO_EVTL$
      1635**DCL      2795>>IF       2801>>ASSIGN   2803<<ASSIGN
FO_FEVHD$
      1635**DCL      2786>>ASSIGN   2787<<ASSIGN   2788>>IF
FO_FEVTL$
      1635**DCL      2788<<ASSIGN
FO_FIL_INIT.DEST
      1880**DCL      1881--REDEF
FO_OSYMBKEYIN.DEVNM
      1701**DCL      1702--REDEF
FO_OSYMBUF.FO_OSYMBDEV.NAME
      1743**DCL      1744--REDEF
FO_OSYMBUF.FO_OSYMBDEV.RACCT
      1811**DCL      1812--REDEF
M$MERC
       104**DCL-ENT  2889--CALL
M$RENV
       104**DCL-ENT  2879--CALL
M$SENV
       104**DCL-ENT  2884--CALL
NOEVENT
      2864**LABEL    2838--GOTO
NOSENV IN PROCEDURE SENV
      2885**LABEL    2884--CALLALT
PL6.E3A0      #001=FOE$EVNT File=FOE$EVNT.:E05TSI                                TUE 07/29/97 17:06 Page:32   
RENV
      2758**DCL      2785<<ASSIGN   2879>>IF       2885<<ASSIGN
SENV
      2883**PROC     2829--CALL     2862--CALL
STK$
      2755**DCL      2781<<ASSIGN   2814>>ASSIGN   2827>>IF       2840>>IF
