

15:01 JUL 28 '97 KZ$OTPBFR.:E05SI                                          1    
    1      /*M* KZ$OTPBFR - SYNC line output buffer header */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* */
    8
    9
   10      /*F* NAME:         KZ$OTPBFR
   11           PURPOSE:      This is the common output buffer header for all
   12                         SYNC lines.  The data immediately follows the header.
   13      */
   14
   15
   16      %MACRO KZ$OTPBFR(NAME=KZ$OTPBFR,LAST=";",STCLASS=BASED);
   17      %LSET LISTDIR='0'B;
   18      %LSET LISTEXP='1'B;
   19      %LSET LISTCOM='0'B;
   20      %LSET LISTSUB='1'B;
   21      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   22      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   23      %LSET INIT=CHARTEXT('INIT');
   24      %ELSE;
   25      %LSET INIT=CHARTEXT('/*');
   26      %ENDIF;
   27
   28      DCL 1 NAME STCLASS ALIGNED,
   29
   30            2 LNK$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   31                                              /* LNK$ - Link to next buffer         */
   32
   33            2 TYP UBIN BYTE %INIT(%KZ#BFRTYP_OTP)%CHARTEXT('/**/') CALIGNED,
   34                                         /* TYP - Type of buffer (KZ#BFRTYP_OTP)    */
   35
   36            2 FLAGS,
   37
15:01 JUL 28 '97 KZ$OTPBFR.:E05SI                                          2    
   38              3 FIRST# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   39                     /* FIRST# - Set if this buffer must be the first sent
   40                                 to the device after a select.  That is, the
   41                                 previous buffer may not be command-chained
   42                                 to this one.  */
   43
   44              3 LAST# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   45                     /* LAST# - Set if this buffer must be the last sent during
   46                                a select sequence.  That is, this buffer may
   47                                not be command-chained to the next.  */
   48
   49              3 CNT# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   50                        /* CNT# - Set if this buffer's DATA_SIZ has
   51                                  been counted into KZ$3270DEV.OTPBYTES */
   52
   53              3 ERR# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   54                     /* ERR# - Set if an error occurred while trying to send
   55                               this buffer */
   56
   57              3 HALT,
   58
   59                4 PAG# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   60                                              /* PAG# - Set if page halt here       */
   61
   62                4 INP# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   63                                              /* INP# - Set if halt for input       */
   64
   65              3 RELOTPBFR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   66
   67              3 TRANS# BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   68                     /* TRANS - Buffer is TRANSPARENT:  send with MLCP ORDER #17.   */
   69
   70            /* This bit was added for an unknown reason near the end of
   71               the E00 integrations.  It made the KZ$OTPBFR structure
   72               9 words long instead of 8, and was only checked once in
   73               KZH$HIPDV, and never set anywhere.
   74               To get the buffer size down to 8 again, it was taken out
15:01 JUL 28 '97 KZ$OTPBFR.:E05SI                                          3    
   75               again for E02.  If anyone discovers why it's there, they
   76               might consider REDEF-ing one of the above flag bits instead,
   77               if they can find one that polled VIP doesn't use.
   78               Star #xxxxx was used to get rid of this bit.
   79            2 DELETED BIT(1) %INIT('0'B)%CHARTEXT('\**\'),
   80                                    \* SET BY VDH HANDLER WHEN 'DELETED OUTPUT"     *\
   81            */
   82
   83            2 DATA_SIZ UBIN %INIT(0)%CHARTEXT('/**/'),
   84                                              /* DATA_SIZ - Size of data in bytes.  */
   85
   86            2 BFRSIZ UBIN %INIT(0)%CHARTEXT('/**/'),
   87                          /* BFRSIZ - Size of buffer.  Index to KZ_3270_BFRSIZ
   88                             if 3270; size in words if RBT.              */
   89
   90            2 CMPCOD UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
   91                                              /* CMPCOD - Completion code           */
   92
   93            2 MRKCNT UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
   94                     /* MRKCNT - Count of number of output marker items that exist
   95                                 at the end of this buffer. */
   96
   97            2 DEV$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/') LAST
   98                                              /* DEV$ - Ptr to device context       */
   99
  100      %MEND;

