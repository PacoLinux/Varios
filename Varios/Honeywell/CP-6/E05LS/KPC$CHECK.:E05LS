VERSION E05

PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:1    
        1        1        /*M*     KPC$CHECK Checks a FEP and shows drive types and status              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPC$CHECK
        8        8                 PURPOSE:       Report on diskette drive type and status.
        9        9                 DESCRIPTION:   This command is used to display the diskette
       10       10                                drive types for a given FEP.
       11       11        */
       12       12        KPC$CHECK : PROC( OUT$ );
       13       13        /**/
       14       14        /*  Include files  */
       15       15        /**/
       16       16        %INCLUDE XU_MACRO_C;
       17     3122        %INCLUDE KP_DATA_R;
       18     4374        %INCLUDE XU_SUBS_C;
       19     4466        %INCLUDE KP_MSG;
       20     4559        %INCLUDE XUF_ENTRY;
       21     4567        /**/
       22     4568        /*  Entry declarations  */
       23     4569        /**/
       24     4570        %KP_ENTRIES (OMIT=KPC$CHECK);
       25     4676        /**/
       26     4677        /*  BASED DATA  */
       27     4678        /**/
       28     4679        %PARSE$OUT    ( NAME    = OUT$BLK,
       29     4680                        STCLASS = BASED );
       30     4725        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       31     4801        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:2    
       32     4802        /**/
       33     4803        /*  Local goodies  */
       34     4804        /**/
       35     4805    1   DCL OUT$ PTR;
       36     4806    1   DCL NSUBLKS UBIN WORD;
       37     4807    1   DCL FEP_NUM UBIN WORD;
       38     4808    1   DCL PART SBIN WORD;
       39     4809    1   DCL PART$ PTR;
       40     4810    1   DCL OPT SBIN WORD;
       41     4811    1   DCL OPT$ PTR;
       42     4812    1   DCL TYPE_CODE SBIN WORD ALIGNED;
       43     4813    1   DCL 1 TYPE_CODE_ REDEF TYPE_CODE ALIGNED,
       44     4814    1         2 * BIT(20) UNAL,
       45     4815    1         2 HOB UBIN(8) UNAL,
       46     4816    1         2 LOB UBIN(8) UNAL;
       47     4817    1   DCL DEV_STATUS SBIN WORD ALIGNED;
       48     4818    1   DCL 1 DEV_STATUS_ REDEF DEV_STATUS ALIGNED,
       49     4819    1         2 * BIT(20) UNAL,
       50     4820    1         2 HOB UBIN(8) UNAL,
       51     4821    1         2 LOB UBIN(8) UNAL;
       52     4822    1   DCL CHANNEL SBIN WORD ALIGNED;
       53     4823    1   DCL 1 CHANNEL_ REDEF CHANNEL ALIGNED,
       54     4824    1         2 * BIT(20) UNAL,
       55     4825    1         2 HOB UBIN(8) UNAL,
       56     4826    1         2 LOB UBIN(8) UNAL;
       57     4827    1   DCL DRIVE_NUMBER SBIN;
       58     4828    1   DCL OPERATION_STATUS SBIN;
       59     4829    1   DCL I SBIN;
       60     4830        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:3    
       61     4831        /**/
       62     4832        /*  FORMATTER TEXT STRINGS  */
       63     4833        /**/
       64     4834    1   DCL FMT1 CONSTANT CHAR(0) INIT(
       65     4835    1            'Drive %D on channel %4ZH:  type = %4ZH, status = %4ZH.');
       66     4836        /**/
       67     4837        /*  EQUs for readability & abbreviation  */
       68     4838        /**/
       69     4839        %EQU RESPONSE# = CHARTEXT('KP_FECG_IN$ -> KP$MSG.CHECK_RSP');
       70     4840        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:4    
       71     4841        /**/
       72     4842        /*  Make sure he is allowed to do this thing.  */
       73     4843        /**/
       74     4844    1           CALL KPU$SECURITY(%KP_PRIV_RD#) ALTRET(CANT_OPEN);
       75     4845        /**/
       76     4846        /*  Loop, processing options.  */
       77     4847        /**/
       78     4848    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;
       79     4849    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);
       80     4850    3              DO CASE(PART$ -> OUT$BLK.CODE);
       81     4851    3               CASE(1);                    /* DRIVE ID                           */
       82     4852    3                 CALL KPU$FEP_AND_DRIVE(
       83     4853    3                   PART$ -> OUT$BLK,
       84     4854    3                   FEP_NUM,I) ALTRET(CANT_OPEN);
       85     4855    3                 CALL KPX$OPEN( FEP_NUM, -1 ) ALTRET(CANT_OPEN);
       86     4856    3               END;                        /* END CASE                           */
       87     4857    2              END;                         /* END DO INDEX                       */
       88     4858        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:5    
       89     4859        /**/
       90     4860        /*  Send a message to PIGLET asking for CHECK data.  */
       91     4861        /**/
       92     4862    1           KP_FECG_OUT$ -> KP$MSG.HEAD.MSG_TYPE = %KP_CHECK_RQS#;
       93     4863    1           KP_FECG_OUT$ -> KP$MSG.HEAD.DRIVE_NO = 0;
       94     4864    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SEC_SIZE = 0;
       95     4865    1           KP_FECG_OUT$ -> KP$MSG.HEAD.TRACK_NO = 0;
       96     4866    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SECTOR_NO = 0;
       97     4867    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SIDE = 0;
       98     4868    1           KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES = '0'B;
       99     4869    1           KP_FECG_OUT_SIZE = SIZEC(KP$MSG.HEAD);
      100     4870    1           CALL KPI$IO_SVC(%KP_FECG_WRITE#) ALTRET(PIGETTE_ERR);
      101     4871        /**/
      102     4872        /*  Read response from FEP and check for errors.  */
      103     4873        /**/
      104     4874    1           CALL KPI$IO_SVC(%KP_FECG_READ#) ALTRET(PIGETTE_ERR);
      105     4875    1           CALL KPE$CHECK_ERR(%KP_CHECK_RSP#) ALTRET(PIGETTE_ERR);
      106     4876        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:6    
      107     4877        /**/
      108     4878        /*  List each drive.  */
      109     4879        /**/
      110     4880    2           DO I = 0 TO %KP_MAX_DRIVE#;
      111     4881    2              DEV_STATUS_ = '0'B;
      112     4882    2              DEV_STATUS_.HOB = %RESPONSE#.DRIVE.DEV_STATUS.HOB(I);
      113     4883    2              DEV_STATUS_.LOB = %RESPONSE#.DRIVE.DEV_STATUS.LOB(I);
      114     4884    2              OPERATION_STATUS = %RESPONSE#.DRIVE.OPERATION_STATUS(I);
      115     4885    2              TYPE_CODE_ = '0'B;
      116     4886    2              TYPE_CODE_.HOB = %RESPONSE#.DRIVE.TYPE.HOB(I);
      117     4887    2              TYPE_CODE_.LOB = %RESPONSE#.DRIVE.TYPE.LOB(I);
      118     4888    2              CHANNEL_ = '0'B;
      119     4889    2              CHANNEL_.HOB = %RESPONSE#.DRIVE.CHAN.HOB(I);
      120     4890    2              CHANNEL_.LOB = %RESPONSE#.DRIVE.CHAN.LOB(I);
      121     4891    2              DRIVE_NUMBER = %RESPONSE#.DRIVE.NUMBER(I);
      122     4892    2              IF TYPE_CODE > 0 THEN
      123     4893    3                DO;                        /* Drive exists                       */
      124     4894    3                  CALL X$WRITE (F_FDS, VECTOR(FMT1),
      125     4895    3                                VECTOR(DRIVE_NUMBER),
      126     4896    3                                VECTOR(CHANNEL),
      127     4897    3                                VECTOR(TYPE_CODE),
      128     4898    3                                VECTOR(DEV_STATUS));
      129     4899    3                  CALL KPI$IO_SVC (%KP_LO_WRITE#);
      130     4900    3                  END;
      131     4901    2              END;                         /* END INDEX                          */
      132     4902        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:7    
      133     4903        /**/
      134     4904        /*  We're finished, and it all went OK.  */
      135     4905        /**/
      136     4906    1           CALL KPX$CLOSE( FEP_NUM, -1 ) ALTRET(CANT_CLOSE);
      137     4907        /**/
      138     4908    1           RETURN;
      139     4909        /**/
      140     4910        /* Get here when things become severely fouled */
      141     4911        /**/
      142     4912    1   BAD_OPTS: ;
      143     4913    1   PIGETTE_ERR: ;
      144     4914    1   CANT_CLOSE: ;
      145     4915    1   CANT_OPEN: ;
      146     4916    1           RETURN;
      147     4917    1   END KPC$CHECK;

PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:8    
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPC$CHECK.

   Procedure KPC$CHECK requires 176 words for executable code.
   Procedure KPC$CHECK requires 46 words of local(AUTO) storage.

    No errors detected in file KPC$CHECK.:E05TSI    .

PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:9    

 Object Unit name= KPC$CHECK                                  File name= KPC$CHECK.:E05TOU
 UTS= JUL 30 '97 01:17:33.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     14     16  KPC$CHECK
    2   Proc  even  none   176    260  KPC$CHECK
    3  RoData even  none    11     13  KPC$CHECK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KPC$CHECK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KPU$SECURITY
 yes     yes           Std       2 KPX$OPEN
 yes     yes           Std       3 KPU$FEP_AND_DRIVE
 yes     yes           Std       1 KPE$CHECK_ERR
         yes           Std      22 X$WRITE
 yes     yes           Std       2 KPX$CLOSE
 yes     yes           Std       1 KPI$IO_SVC
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:10   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KP_INBUF                              KP_RU_OUTBUF
     KP_FECG_IN$                           KP_FECG_OUT$                          KP_FECG_OUT_SIZE
     KP_RU_KEY                             F_FDS                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:11   


        1        1        /*M*     KPC$CHECK Checks a FEP and shows drive types and status              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*     NAME:          KPC$CHECK
        8        8                 PURPOSE:       Report on diskette drive type and status.
        9        9                 DESCRIPTION:   This command is used to display the diskette
       10       10                                drive types for a given FEP.
       11       11        */
       12       12        KPC$CHECK : PROC( OUT$ );

     12  2 000000   000000 700200 xent  KPC$CHECK    TSX0  ! X66_AUTO_1
         2 000001   000056 000001                    ZERO    46,1

       13       13        /**/
       14       14        /*  Include files  */
       15       15        /**/
       16       16        %INCLUDE XU_MACRO_C;
       17     3122        %INCLUDE KP_DATA_R;
       18     4374        %INCLUDE XU_SUBS_C;
       19     4466        %INCLUDE KP_MSG;
       20     4559        %INCLUDE XUF_ENTRY;
       21     4567        /**/
       22     4568        /*  Entry declarations  */
       23     4569        /**/
       24     4570        %KP_ENTRIES (OMIT=KPC$CHECK);
       25     4676        /**/
       26     4677        /*  BASED DATA  */
       27     4678        /**/
       28     4679        %PARSE$OUT    ( NAME    = OUT$BLK,
       29     4680                        STCLASS = BASED );
       30     4725        %KP$MSG (NAME = KP$MSG,STCLASS = BASED);
       31     4801        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:12   
       32     4802        /**/
       33     4803        /*  Local goodies  */
       34     4804        /**/
       35     4805    1   DCL OUT$ PTR;
       36     4806    1   DCL NSUBLKS UBIN WORD;
       37     4807    1   DCL FEP_NUM UBIN WORD;
       38     4808    1   DCL PART SBIN WORD;
       39     4809    1   DCL PART$ PTR;
       40     4810    1   DCL OPT SBIN WORD;
       41     4811    1   DCL OPT$ PTR;
       42     4812    1   DCL TYPE_CODE SBIN WORD ALIGNED;
       43     4813    1   DCL 1 TYPE_CODE_ REDEF TYPE_CODE ALIGNED,
       44     4814    1         2 * BIT(20) UNAL,
       45     4815    1         2 HOB UBIN(8) UNAL,
       46     4816    1         2 LOB UBIN(8) UNAL;
       47     4817    1   DCL DEV_STATUS SBIN WORD ALIGNED;
       48     4818    1   DCL 1 DEV_STATUS_ REDEF DEV_STATUS ALIGNED,
       49     4819    1         2 * BIT(20) UNAL,
       50     4820    1         2 HOB UBIN(8) UNAL,
       51     4821    1         2 LOB UBIN(8) UNAL;
       52     4822    1   DCL CHANNEL SBIN WORD ALIGNED;
       53     4823    1   DCL 1 CHANNEL_ REDEF CHANNEL ALIGNED,
       54     4824    1         2 * BIT(20) UNAL,
       55     4825    1         2 HOB UBIN(8) UNAL,
       56     4826    1         2 LOB UBIN(8) UNAL;
       57     4827    1   DCL DRIVE_NUMBER SBIN;
       58     4828    1   DCL OPERATION_STATUS SBIN;
       59     4829    1   DCL I SBIN;
       60     4830        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:13   
       61     4831        /**/
       62     4832        /*  FORMATTER TEXT STRINGS  */
       63     4833        /**/
       64     4834    1   DCL FMT1 CONSTANT CHAR(0) INIT(
       65     4835    1            'Drive %D on channel %4ZH:  type = %4ZH, status = %4ZH.');
       66     4836        /**/
       67     4837        /*  EQUs for readability & abbreviation  */
       68     4838        /**/
       69     4839        %EQU RESPONSE# = CHARTEXT('KP_FECG_IN$ -> KP$MSG.CHECK_RSP');
       70     4840        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:14   
       71     4841        /**/
       72     4842        /*  Make sure he is allowed to do this thing.  */
       73     4843        /**/
       74     4844    1           CALL KPU$SECURITY(%KP_PRIV_RD#) ALTRET(CANT_OPEN);

   4844  2 000002   000000 630400 3                  EPPR0   0
         2 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000004   000000 701000 xent               TSX1    KPU$SECURITY
         2 000005   000257 702000 2                  TSX2    BAD_OPTS

       75     4845        /**/
       76     4846        /*  Loop, processing options.  */
       77     4847        /**/
       78     4848    2           DO PART = 0 TO OUT$ -> OUT$BLK.NSUBLKS -1;

   4848  2 000006   200006 450100                    STZ     PART,,AUTO
         2 000007   000046 710000 2                  TRA     s:4857+1

       79     4849    2              PART$ = OUT$ -> OUT$BLK.SUBLK$(PART);

   4849  2 000010   200003 470500                    LDP0    @OUT$,,AUTO
         2 000011   000000 471500                    LDP1    0,,PR0
         2 000012   200006 720100                    LXL0    PART,,AUTO
         2 000013   100003 236110                    LDQ     3,X0,PR1
         2 000014   200007 756100                    STQ     PART$,,AUTO

       80     4850    3              DO CASE(PART$ -> OUT$BLK.CODE);

   4850  2 000015   200007 473500                    LDP3    PART$,,AUTO
         2 000016   300000 721100                    LXL1    0,,PR3
         2 000017   000002 101003                    CMPX1   2,DU
         2 000020   000022 602011 2                  TNC     s:4850+5,X1
         2 000021   000045 710000 2                  TRA     s:4857
         2 000022   000045 710000 2                  TRA     s:4857
         2 000023   000024 710000 2                  TRA     s:4852

       81     4851    3               CASE(1);                    /* DRIVE ID                           */
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:15   

       82     4852    3                 CALL KPU$FEP_AND_DRIVE(

   4852  2 000024   200017 634500                    EPPR4   I,,AUTO
         2 000025   200022 454500                    STP4    I+3,,AUTO
         2 000026   200005 631500                    EPPR1   FEP_NUM,,AUTO
         2 000027   200021 451500                    STP1    I+2,,AUTO
         2 000030   200020 756100                    STQ     I+1,,AUTO
         2 000031   200020 630500                    EPPR0   I+1,,AUTO
         2 000032   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000033   000000 701000 xent               TSX1    KPU$FEP_AND_DRIVE
         2 000034   000257 702000 2                  TSX2    BAD_OPTS

       83     4853    3                   PART$ -> OUT$BLK,
       84     4854    3                   FEP_NUM,I) ALTRET(CANT_OPEN);
       85     4855    3                 CALL KPX$OPEN( FEP_NUM, -1 ) ALTRET(CANT_OPEN);

   4855  2 000035   000001 236000 3                  LDQ     1
         2 000036   200021 756100                    STQ     I+2,,AUTO
         2 000037   200005 630500                    EPPR0   FEP_NUM,,AUTO
         2 000040   200020 450500                    STP0    I+1,,AUTO
         2 000041   200020 630500                    EPPR0   I+1,,AUTO
         2 000042   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000043   000000 701000 xent               TSX1    KPX$OPEN
         2 000044   000257 702000 2                  TSX2    BAD_OPTS

       86     4856    3               END;                        /* END CASE                           */

       87     4857    2              END;                         /* END DO INDEX                       */

   4857  2 000045   200006 054100                    AOS     PART,,AUTO
         2 000046   200003 470500                    LDP0    @OUT$,,AUTO
         2 000047   000000 471500                    LDP1    0,,PR0
         2 000050   100001 236100                    LDQ     1,,PR1
         2 000051   000022 772000                    QRL     18
         2 000052   200006 116100                    CMPQ    PART,,AUTO
         2 000053   000010 605400 2                  TPNZ    s:4849
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:16   

       88     4858        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:17   
       89     4859        /**/
       90     4860        /*  Send a message to PIGLET asking for CHECK data.  */
       91     4861        /**/
       92     4862    1           KP_FECG_OUT$ -> KP$MSG.HEAD.MSG_TYPE = %KP_CHECK_RQS#;

   4862  2 000054   000000 473400 xsym               LDP3    KP_FECG_OUT$
         2 000055   021000 236003                    LDQ     8704,DU
         2 000056   300000 552140                    STBQ    0,'40'O,PR3

       93     4863    1           KP_FECG_OUT$ -> KP$MSG.HEAD.DRIVE_NO = 0;

   4863  2 000057   000000 471400 xsym               LDP1    KP_FECG_OUT$
         2 000060   000000 236003                    LDQ     0,DU
         2 000061   100000 552120                    STBQ    0,'20'O,PR1

       94     4864    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SEC_SIZE = 0;

   4864  2 000062   000000 471400 xsym               LDP1    KP_FECG_OUT$
         2 000063   100002 552104                    STBQ    2,'04'O,PR1

       95     4865    1           KP_FECG_OUT$ -> KP$MSG.HEAD.TRACK_NO = 0;

   4865  2 000064   100002 552120                    STBQ    2,'20'O,PR1

       96     4866    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SECTOR_NO = 0;

   4866  2 000065   100002 552110                    STBQ    2,'10'O,PR1

       97     4867    1           KP_FECG_OUT$ -> KP$MSG.HEAD.SIDE = 0;

   4867  2 000066   100002 552140                    STBQ    2,'40'O,PR1

       98     4868    1           KP_FECG_OUT$ -> KP$MSG.HEAD.NUM_BYTES = '0'B;

   4868  2 000067   000000 220003                    LDX0    0,DU
         2 000070   100001 440100                    SXL0    1,,PR1

PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:18   
       99     4869    1           KP_FECG_OUT_SIZE = SIZEC(KP$MSG.HEAD);

   4869  2 000071   000022 235007                    LDA     18,DL
         2 000072   000000 755000 xsym               STA     KP_FECG_OUT_SIZE

      100     4870    1           CALL KPI$IO_SVC(%KP_FECG_WRITE#) ALTRET(PIGETTE_ERR);

   4870  2 000073   000002 630400 3                  EPPR0   2
         2 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000075   000000 701000 xent               TSX1    KPI$IO_SVC
         2 000076   000257 702000 2                  TSX2    BAD_OPTS

      101     4871        /**/
      102     4872        /*  Read response from FEP and check for errors.  */
      103     4873        /**/
      104     4874    1           CALL KPI$IO_SVC(%KP_FECG_READ#) ALTRET(PIGETTE_ERR);

   4874  2 000077   000003 630400 3                  EPPR0   3
         2 000100   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000101   000000 701000 xent               TSX1    KPI$IO_SVC
         2 000102   000257 702000 2                  TSX2    BAD_OPTS

      105     4875    1           CALL KPE$CHECK_ERR(%KP_CHECK_RSP#) ALTRET(PIGETTE_ERR);

   4875  2 000103   000005 630400 3                  EPPR0   5
         2 000104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000105   000000 701000 xent               TSX1    KPE$CHECK_ERR
         2 000106   000257 702000 2                  TSX2    BAD_OPTS

      106     4876        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:19   
      107     4877        /**/
      108     4878        /*  List each drive.  */
      109     4879        /**/
      110     4880    2           DO I = 0 TO %KP_MAX_DRIVE#;

   4880  2 000107   200017 450100                    STZ     I,,AUTO

      111     4881    2              DEV_STATUS_ = '0'B;

   4881  2 000110   200013 450100                    STZ     DEV_STATUS,,AUTO

      112     4882    2              DEV_STATUS_.HOB = %RESPONSE#.DRIVE.DEV_STATUS.HOB(I);

   4882  2 000111   200017 235100                    LDA     I,,AUTO
         2 000112   000001 735000                    ALS     1
         2 000113   000000 470400 xsym               LDP0    KP_FECG_IN$
         2 000114   000005 236105                    LDQ     5,AL,PR0
         2 000115   000023 772000                    QRL     19
         2 000116   200013 676100                    ERQ     DEV_STATUS,,AUTO
         2 000117   177400 376007                    ANQ     65280,DL
         2 000120   200013 656100                    ERSQ    DEV_STATUS,,AUTO

      113     4883    2              DEV_STATUS_.LOB = %RESPONSE#.DRIVE.DEV_STATUS.LOB(I);

   4883  2 000121   000005 236105                    LDQ     5,AL,PR0
         2 000122   000022 772000                    QRL     18
         2 000123   200013 676100                    ERQ     DEV_STATUS,,AUTO
         2 000124   000377 376007                    ANQ     255,DL
         2 000125   200013 656100                    ERSQ    DEV_STATUS,,AUTO

      114     4884    2              OPERATION_STATUS = %RESPONSE#.DRIVE.OPERATION_STATUS(I);

   4884  2 000126   000004 236105                    LDQ     4,AL,PR0
         2 000127   000777 376007                    ANQ     511,DL
         2 000130   200016 756100                    STQ     OPERATION_STATUS,,AUTO

      115     4885    2              TYPE_CODE_ = '0'B;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:20   

   4885  2 000131   200012 450100                    STZ     TYPE_CODE,,AUTO

      116     4886    2              TYPE_CODE_.HOB = %RESPONSE#.DRIVE.TYPE.HOB(I);

   4886  2 000132   000005 236105                    LDQ     5,AL,PR0
         2 000133   000001 772000                    QRL     1
         2 000134   200012 676100                    ERQ     TYPE_CODE,,AUTO
         2 000135   177400 376007                    ANQ     65280,DL
         2 000136   200012 656100                    ERSQ    TYPE_CODE,,AUTO

      117     4887    2              TYPE_CODE_.LOB = %RESPONSE#.DRIVE.TYPE.LOB(I);

   4887  2 000137   000005 236105                    LDQ     5,AL,PR0
         2 000140   200012 676100                    ERQ     TYPE_CODE,,AUTO
         2 000141   000377 376007                    ANQ     255,DL
         2 000142   200012 656100                    ERSQ    TYPE_CODE,,AUTO

      118     4888    2              CHANNEL_ = '0'B;

   4888  2 000143   200014 450100                    STZ     CHANNEL,,AUTO

      119     4889    2              CHANNEL_.HOB = %RESPONSE#.DRIVE.CHAN.HOB(I);

   4889  2 000144   000006 236105                    LDQ     6,AL,PR0
         2 000145   000023 772000                    QRL     19
         2 000146   200014 676100                    ERQ     CHANNEL,,AUTO
         2 000147   177400 376007                    ANQ     65280,DL
         2 000150   200014 656100                    ERSQ    CHANNEL,,AUTO

      120     4890    2              CHANNEL_.LOB = %RESPONSE#.DRIVE.CHAN.LOB(I);

   4890  2 000151   000006 236105                    LDQ     6,AL,PR0
         2 000152   000022 772000                    QRL     18
         2 000153   200014 676100                    ERQ     CHANNEL,,AUTO
         2 000154   000377 376007                    ANQ     255,DL
         2 000155   200014 656100                    ERSQ    CHANNEL,,AUTO
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:21   

      121     4891    2              DRIVE_NUMBER = %RESPONSE#.DRIVE.NUMBER(I);

   4891  2 000156   000004 236105                    LDQ     4,AL,PR0
         2 000157   000011 772000                    QRL     9
         2 000160   000777 376007                    ANQ     511,DL
         2 000161   200015 756100                    STQ     DRIVE_NUMBER,,AUTO

      122     4892    2              IF TYPE_CODE > 0 THEN

   4892  2 000162   200012 235100                    LDA     TYPE_CODE,,AUTO
         2 000163   000242 604400 2                  TMOZ    s:4901

      123     4893    3                DO;                        /* Drive exists                       */

      124     4894    3                  CALL X$WRITE (F_FDS, VECTOR(FMT1),

   4894  2 000164   777640 235007                    LDA     -96,DL
         2 000165   200020 452500                    STP2    I+1,,AUTO
         2 000166   200020 236100                    LDQ     I+1,,AUTO
         2 000167   000015 036003                    ADLQ    13,DU
         2 000170   200022 757100                    STAQ    I+3,,AUTO
         2 000171   777640 235007                    LDA     -96,DL
         2 000172   200024 452500                    STP2    I+5,,AUTO
         2 000173   200024 236100                    LDQ     I+5,,AUTO
         2 000174   000014 036003                    ADLQ    12,DU
         2 000175   200026 757100                    STAQ    I+7,,AUTO
         2 000176   777640 235007                    LDA     -96,DL
         2 000177   200030 452500                    STP2    I+9,,AUTO
         2 000200   200030 236100                    LDQ     I+9,,AUTO
         2 000201   000012 036003                    ADLQ    10,DU
         2 000202   200032 757100                    STAQ    I+11,,AUTO
         2 000203   777640 235007                    LDA     -96,DL
         2 000204   200034 452500                    STP2    I+13,,AUTO
         2 000205   200034 236100                    LDQ     I+13,,AUTO
         2 000206   000013 036003                    ADLQ    11,DU
         2 000207   200040 757100                    STAQ    I+17,,AUTO
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:22   
         2 000210   200022 237100                    LDAQ    I+3,,AUTO
         2 000211   200036 757100                    STAQ    I+15,,AUTO
         2 000212   200026 237100                    LDAQ    I+7,,AUTO
         2 000213   200042 757100                    STAQ    I+19,,AUTO
         2 000214   200032 237100                    LDAQ    I+11,,AUTO
         2 000215   200044 757100                    STAQ    I+21,,AUTO
         2 000216   200040 237100                    LDAQ    I+17,,AUTO
         2 000217   200046 757100                    STAQ    I+23,,AUTO
         2 000220   200046 631500                    EPPR1   I+23,,AUTO
         2 000221   200055 451500                    STP1    I+30,,AUTO
         2 000222   200044 633500                    EPPR3   I+21,,AUTO
         2 000223   200054 453500                    STP3    I+29,,AUTO
         2 000224   200042 634500                    EPPR4   I+19,,AUTO
         2 000225   200053 454500                    STP4    I+28,,AUTO
         2 000226   200036 635500                    EPPR5   I+15,,AUTO
         2 000227   200052 455500                    STP5    I+27,,AUTO
         2 000230   000010 237000 3                  LDAQ    8
         2 000231   200050 757100                    STAQ    I+25,,AUTO
         2 000232   200050 630500                    EPPR0   I+25,,AUTO
         2 000233   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000234   000000 701000 xent               TSX1    X$WRITE
         2 000235   000000 011000                    NOP     0

      125     4895    3                                VECTOR(DRIVE_NUMBER),
      126     4896    3                                VECTOR(CHANNEL),
      127     4897    3                                VECTOR(TYPE_CODE),
      128     4898    3                                VECTOR(DEV_STATUS));
      129     4899    3                  CALL KPI$IO_SVC (%KP_LO_WRITE#);

   4899  2 000236   000012 630400 3                  EPPR0   10
         2 000237   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000240   000000 701000 xent               TSX1    KPI$IO_SVC
         2 000241   000000 011000                    NOP     0

      130     4900    3                  END;

      131     4901    2              END;                         /* END INDEX                          */
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:23   

   4901  2 000242   200017 054100                    AOS     I,,AUTO
         2 000243   200017 235100                    LDA     I,,AUTO
         2 000244   000005 115007                    CMPA    5,DL
         2 000245   000110 604400 2                  TMOZ    s:4881

      132     4902        %EJECT;
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:24   
      133     4903        /**/
      134     4904        /*  We're finished, and it all went OK.  */
      135     4905        /**/
      136     4906    1           CALL KPX$CLOSE( FEP_NUM, -1 ) ALTRET(CANT_CLOSE);

   4906  2 000246   000001 236000 3                  LDQ     1
         2 000247   200021 756100                    STQ     I+2,,AUTO
         2 000250   200005 630500                    EPPR0   FEP_NUM,,AUTO
         2 000251   200020 450500                    STP0    I+1,,AUTO
         2 000252   200020 630500                    EPPR0   I+1,,AUTO
         2 000253   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000254   000000 701000 xent               TSX1    KPX$CLOSE
         2 000255   000257 702000 2                  TSX2    BAD_OPTS

      137     4907        /**/
      138     4908    1           RETURN;

   4908  2 000256   000000 702200 xent               TSX2  ! X66_ARET

   4906  2 000257                       BAD_OPTS     null
   4906  2 000257                       PIGETTE_ERR  null
   4906  2 000257                       CANT_CLOSE   null
   4906  2 000257                       CANT_OPEN    null
      139     4909        /**/
      140     4910        /* Get here when things become severely fouled */
      141     4911        /**/
      142     4912    1   BAD_OPTS: ;
      143     4913    1   PIGETTE_ERR: ;
      144     4914    1   CANT_CLOSE: ;
      145     4915    1   CANT_OPEN: ;
      146     4916    1           RETURN;

   4916  2 000257   000000 702200 xent               TSX2  ! X66_ARET
      147     4917    1   END KPC$CHECK;

PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:25   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   KP_MSG.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KP_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KP_PERR_C.:E05TOU  is referenced.
   KP_SUBS.:E05TOU  is referenced.
   KP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KPC$CHECK.
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:26   

 **** Variables and constants ****

  ****  Section 001 RoData KPC$CHECK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(54)    r     1 FMT1

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OUT$                     14-0-0/w SBIN        r     1 CHANNEL
    14-0-0/w STRC        r     1 CHANNEL_                  13-0-0/w SBIN        r     1 DEV_STATUS
    13-0-0/w STRC        r     1 DEV_STATUS_               15-0-0/w SBIN        r     1 DRIVE_NUMBER
     5-0-0/w UBIN        r     1 FEP_NUM                   17-0-0/w SBIN        r     1 I
    16-0-0/w SBIN        r     1 OPERATION_STATUS          *0-0-0/w PTR         r     1 OUT$
     6-0-0/w SBIN        r     1 PART                       7-0-0/w PTR         r     1 PART$
    12-0-0/w SBIN        r     1 TYPE_CODE                 12-0-0/w STRC        r     1 TYPE_CODE_

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1080)  r     1 F_FDS                      0-0-0/w PTR         r     1 KP_FECG_IN$
     0-0-0/w PTR         r     1 KP_FECG_OUT$               0-0-0/w UBIN        r     1 KP_FECG_OUT_SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(18594) r     1 KP$MSG                     0-0-0/w STRC(144)   r     1 OUT$BLK

PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:27   

   Procedure KPC$CHECK requires 176 words for executable code.
   Procedure KPC$CHECK requires 46 words of local(AUTO) storage.

    No errors detected in file KPC$CHECK.:E05TSI    .
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:29   
          MINI XREF LISTING

CANT_CLOSE
      4906**LABEL    4906--CALLALT
CANT_OPEN
      4906**LABEL    4844--CALLALT  4852--CALLALT  4855--CALLALT
CHANNEL
      4822**DCL      4823--REDEF    4894--CALL
CHANNEL_
      4823**DCL      4888<<ASSIGN
CHANNEL_.HOB
      4825**DCL      4889<<ASSIGN
CHANNEL_.LOB
      4826**DCL      4890<<ASSIGN
DEV_STATUS
      4817**DCL      4818--REDEF    4894--CALL
DEV_STATUS_
      4818**DCL      4881<<ASSIGN
DEV_STATUS_.HOB
      4820**DCL      4882<<ASSIGN
DEV_STATUS_.LOB
      4821**DCL      4883<<ASSIGN
DRIVE_NUMBER
      4827**DCL      4891<<ASSIGN   4894--CALL
FEP_NUM
      4807**DCL      4852<>CALL     4855<>CALL     4906<>CALL
FMT1
      4834**DCL      4894--CALL
F_FDS
      4223**DCL      4894<>CALL
I
      4829**DCL      4852<>CALL     4880<<DOINDEX  4882>>ASSIGN   4883>>ASSIGN   4884>>ASSIGN   4886>>ASSIGN
      4887>>ASSIGN   4889>>ASSIGN   4890>>ASSIGN   4891>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.CHAN.HOB
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:30   
      4770**DCL      4889>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.CHAN.LOB
      4771**DCL      4890>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.DEV_STATUS.HOB
      4764**DCL      4882>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.DEV_STATUS.LOB
      4765**DCL      4883>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.NUMBER
      4761**DCL      4891>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.OPERATION_STATUS
      4762**DCL      4884>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.TYPE.HOB
      4767**DCL      4886>>ASSIGN
KP$MSG.CHECK_RSP.DRIVE.TYPE.LOB
      4768**DCL      4887>>ASSIGN
KP$MSG.HEAD
      4727**DCL      4869--ASSIGN
KP$MSG.HEAD.DRIVE_NO
      4729**DCL      4863<<ASSIGN
KP$MSG.HEAD.MSG_TYPE
      4728**DCL      4862<<ASSIGN
KP$MSG.HEAD.NUM_BYTES
      4735**DCL      4868<<ASSIGN
KP$MSG.HEAD.SECTOR_NO
      4744**DCL      4866<<ASSIGN
KP$MSG.HEAD.SEC_SIZE
      4745**DCL      4864<<ASSIGN
KP$MSG.HEAD.SIDE
      4742**DCL      4867<<ASSIGN
KP$MSG.HEAD.TRACK_NO
      4743**DCL      4865<<ASSIGN
KP$MSG.TDATA
      4752**DCL      4753--REDEF    4754--REDEF    4759--REDEF    4773--REDEF    4778--REDEF    4782--REDEF
      4788--REDEF    4791--REDEF
KPE$CHECK_ERR
      4590**DCL-ENT  4875--CALL
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:31   
KPI$IO_SVC
      4605**DCL-ENT  4870--CALL     4874--CALL     4899--CALL
KPU$FEP_AND_DRIVE
      4623**DCL-ENT  4852--CALL
KPU$SECURITY
      4673**DCL-ENT  4844--CALL
KPX$CLOSE
      4639**DCL-ENT  4906--CALL
KPX$OPEN
      4645**DCL-ENT  4855--CALL
KP_EXIT.V.STEPCC#
      4045**DCL      4045--REDEF
KP_FECG_IN$
      3971**DCL      4882>>ASSIGN   4883>>ASSIGN   4884>>ASSIGN   4886>>ASSIGN   4887>>ASSIGN   4889>>ASSIGN
      4890>>ASSIGN   4891>>ASSIGN
KP_FECG_OUT$
      3971**DCL      4862>>ASSIGN   4863>>ASSIGN   4864>>ASSIGN   4865>>ASSIGN   4866>>ASSIGN   4867>>ASSIGN
      4868>>ASSIGN
KP_FECG_OUT_SIZE
      3971**DCL      4869<<ASSIGN
KP_INBUF
      3967**DCL      3967--REDEF
KP_RU_KEY
      3975**DCL      3976--REDEF
KP_RU_KEY.NODE
      3975**DCL      3975--REDEF
KP_RU_KEY.PAGE
      3976**DCL      3976--REDEF
KP_RU_OUTBUF
      3969**DCL      3969--REDEF
OPERATION_STATUS
      4828**DCL      4884<<ASSIGN
OUT$
      4805**DCL        12--PROC     4848>>DOINDEX  4849>>ASSIGN
OUT$BLK
      4686**DCL      4852<>CALL
PL6.E3A0      #001=KPC$CHECK File=KPC$CHECK.:E05TSI                              WED 07/30/97 01:17 Page:32   
OUT$BLK.CODE
      4694**DCL      4850>>DOCASE
OUT$BLK.NSUBLKS
      4698**DCL      4848>>DOINDEX
OUT$BLK.SUBLK$
      4719**DCL      4849>>ASSIGN
PART
      4808**DCL      4848<<DOINDEX  4849>>ASSIGN
PART$
      4809**DCL      4849<<ASSIGN   4850>>DOCASE   4852>>CALL
PIGETTE_ERR
      4906**LABEL    4870--CALLALT  4874--CALLALT  4875--CALLALT
TYPE_CODE
      4812**DCL      4813--REDEF    4892>>IF       4894--CALL
TYPE_CODE_
      4813**DCL      4885<<ASSIGN
TYPE_CODE_.HOB
      4815**DCL      4886<<ASSIGN
TYPE_CODE_.LOB
      4816**DCL      4887<<ASSIGN
X$WRITE
      4565**DCL-ENT  4894--CALL
