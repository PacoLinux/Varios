VERSION E05

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:1    
        1        1        /*M* KVM$RCV VDH Message receive routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8        %EQU DO_LTR = '0'B;
        9        9        KVM$RCV: PROC;
       10       10        %INCLUDE KV_INT_M;
       11      153        /*
       12      154        The release 1 ASYNC handler architect and principal designer and
       13      155        implementor was Paul Stendal.  Ira Scharfglass participated in the
       14      156        design and implementation of the user input function table builder,
       15      157        the VFC/VFU code, and the statistics code.
       16      158
       17      159        The release B02 virtual device handler architect, principal designer,
       18      160        and principal implementor was Paul Stendal.  Peter Rumsey and
       19      161        Ira Scharfglass were also major designer/implementors.
       20      162        John Gabler, J.T. Anderson, Don Hanrahan, and Ted Martner
       21      163        also made significant contributions.
       22      164
       23      165        The release C00 virtual device handler was converted from SIL-6
       24      166        to PL-6 by Dave Harmon, Jackie Pang, Peter Rumsey, and Paul Stendal.
       25      167        Then, primarily Peter Rumsey and Paul Stendal continued to enhance it,
       26      168        with some contributions from Jackie Pang and John Gabler.
       27      169
       28      170        */
       29      171        %KV$BOX(PAGE = YES, TITLE = "SYMREFs, ENTRY declarations, and DCBs.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:2    
               189        /***************************************************************************
               190         *                                                                         *
               191         *                   SYMREFs, ENTRY declarations, and DCBs.                *
               192         *                                                                         *
               193         ***************************************************************************/

       30      198        /*
       31      199        Declare SYMREFs.
       32      200        */
       33      201    1   DCL G$HAND_Q$ PTR SYMREF READONLY;
       34      202        /*
       35      203        Declare external procedures CALLed.
       36      204        */
       37      205    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
       38      206    1   DCL KHC$DISPATCH ENTRY(1) ALTRET;
       39      207    1   DCL KHC$WAIT ENTRY ALTRET;
       40      208    1   DCL KHI$DISABLE ENTRY (1);
       41      209    1   DCL KHI$ENABLE ENTRY;
       42      210    1   DCL KVC$CNC ENTRY(1) ALTRET;
       43      211    1   DCL KVC$DSC ENTRY(1);
       44      212    1   DCL KVC$DCLSTR ENTRY(1) ALTRET;
       45      213    1   DCL KVC$OPNFRM ENTRY(1) ALTRET;
       46      214    1   DCL KVC$RLSFRM ENTRY;
       47      215    1   DCL KVC$RLSMVD ENTRY;
       48      216    1   DCL KVC$RLSSSN ENTRY;
       49      217    1   DCL KVC$RLSSTR ENTRY;
       50      218    1   DCL KVC$RLSVDI ENTRY;
       51      219    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
       52      220    1   DCL KHD$SCREECH ENTRY(1);
       53      221    1   DCL KVE$DLTALLRCR ENTRY ALTRET;
       54      222    1   DCL KVE$DSPUPD ENTRY ALTRET;
       55      223    1   DCL KVE$INSREC ENTRY ALTRET;
       56      224    1   DCL KVE$RQSDAT ENTRY(1) ALTRET;
       57      225    1   DCL KVF$ADDFLD ENTRY ALTRET;
       58      226    1   DCL KVF$ALLFLD_RSTSLC ENTRY ALTRET;
       59      227    1   DCL KVF$FNDFLD ENTRY ALTRET;
       60      228    1   DCL KVF$FNDFLDID ENTRY(1) ALTRET;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:3    
       61      229    1   DCL KVF$NXTSLCFLD ENTRY(1) ALTRET;
       62      230    1   DCL KVF$RQSDAT ENTRY(1);
       63      231    1   DCL KVF$TOPPAG ENTRY;
       64      232    1   DCL KVF$UPDFRM_CRT ENTRY;
       65      233    1   DCL KVI$ABRRED ENTRY;
       66      234    1   DCL KVI$ACTRED ENTRY(1);
       67      235    1   DCL KVI$ENBNO_WATRED ENTRY;
       68      236    1   DCL KVI$ENBRED ENTRY;
       69      237    1   DCL KVI$INTINPOPRX ENTRY(1);
       70      238    1   DCL KVI$RQSDAT ENTRY(1);
       71      239    1   DCL KVM$FLUSHCQ ENTRY ALTRET;
       72      240    1   DCL KVM$SND ENTRY(1) ALTRET;
       73      241    1   DCL KVM$UIFT ENTRY(1); /*N* TEMP FOR IMP CHECKOUT */
       74      242    1   DCL KVO$DVCCTR ENTRY(1);
       75      243    1   DCL KVO$ERSMRD ENTRY;
       76      244    1   DCL KVO$ERSSRD ENTRY;
       77      245    1   DCL KVO$OTP1_NONVRT ENTRY(1);
       78      246    1   DCL KVO$OTPLCL ENTRY(1);
       79      247    1   DCL KVO$PST ENTRY(1);
       80      248    1   DCL KVO$PSTAFTHI_NONBLNPHSPST ENTRY;
       81      249    1   DCL KVO$SCRENDNO_HLT ENTRY;
       82      250    1   DCL KVO$VFCAFTTXT ENTRY(1);
       83      251    1   DCL KVO$VFCBFRTXT ENTRY(1);
       84      252    1   DCL KVO$X364 ENTRY(1);
       85      253    1   DCL KVP$GETPRM ENTRY(1);
       86      254    1   DCL KVP$SETPRM ENTRY(1);
       87      255    1   DCL KVS$SETSTR ENTRY(1);
       88      256    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       89      257    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       90      258    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       91      259    1   DCL KVV$VDIINT ENTRY(1) ALTRET;
       92      260        %KV$BOX(PAGE = YES, TITLE =
               260            "INCLUDEs, EQUs, based structures, static data defined elsewhere.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:4    
               278    1   /***************************************************************************
               279    1    *                                                                         *
               280    1    *      INCLUDEs, EQUs, based structures, static data defined elsewhere.   *
               281    1    *                                                                         *
               282    1    ***************************************************************************/

       93      287        /*
       94      288        INCLUDE files, constants, based structures,
       95      289        and static data contained elsewhere.
       96      290        */
       97      291
       98      292        %INCLUDE LCP_6;
       99      483        %INCLUDE KH$CHN;
      100      605        %KH$CHN;
      101      729        %INCLUDE KH$CLK;
      102     1099        %INCLUDE KH_CLKFNC_E;
      103     1144    1   DCL KH_INHLVL UBIN SYMREF;
      104     1145        %INCLUDE K_CP6_M;
      105     1341        %G#GRPRND_E;
      106     1351        %G#QLF_E;
      107     1361
      108     1362        %INCLUDE K_ID_E;
      109     1412        %K#ENTID_E;
      110     1431        %K#LYRID_E;
      111     1438
      112     1439        %INCLUDE KV_INT;
      113     1478
      114     1479        %INCLUDE KL_AFCN_C;
      115     1580
      116     1581        %INCLUDE KL_MACRO_C;
      117     4933
      118     4934        %INCLUDE KNH_MACRO_C;
      119     5217        %FPT_CONNECT_ACK (STCLASS = "BASED(Y@FPT$)");
      120     5266        %FPT_TERM (STCLASS = "BASED(Y@FPT$)");
      121     5288        %KNH$MESS (FPTN = KNH_MESS, STCLASS = "BASED(Y@SICI$)");
      122     5337        %KNH$QHDR (FPTN = KNH_QHDR, STCLASS = "BASED(G$HAND_Q$)");
      123     5350
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:5    
      124     5351        %INCLUDE KV_ERD_E;
      125     5438
      126     5439 S      %INCLUDE KV_GLBCNS_E;
      127     5440        %KV#VD_ORG_E;
      128     5448        %KV#DATMOD_E;
      129     5454        %KV#CQ_HNDID_E;
      130     5459        %KV#TRCENT_TYP_E;
      131     5469        %KV_CLKNMB_E;
      132     5478        %KV_DSCRSN_E;
      133     5487        %KV_CMPCOD_E;
      134     5501        %KV_INPOPRX_E;
      135     5513        %KV_INPUNT_E;
      136     5518        %KV_MRKTYP_E;
      137     5526        %KV_SCHRSN_E;
      138     5533        %KV_USR_EVT_ID_E;
      139     5553        %KV_VDH_EVT_ID_E;
      140     5559
      141     5560 S      %INCLUDE KV_PRMID_E;
      142     5561        %KV_PRMID_E;
      143     5717        %KV_SCP_E;
      144     5727
      145     5728 S      %INCLUDE KV$GLB;
      146     5729 S      %INCLUDE KV$GLBCTX;
      147     5730        %INCLUDE KV_ERRORS_C;
      148     5790        %INCLUDE KV_SCODE_C;
      149     5811        %INCLUDE F_ERRORS_C;
      150     6051        %KV_PTR_STT_E;
      151     6066        %KV$MRD;
      152     6113        %KV$MVD;
      153     6157        %KV$PTR;
      154     6200        %KV$SRD;
      155     6475        %KV$SSN;
      156     6554        %KV$SSN (NAME = KV_SSN, STCLASS = "BASED(KV_RCVSSN$)");
      157     6633        %KV$STR;
      158     6720        %KV$MVD (NAME=KV_MVD, STCLASS=SYMREF);
      159     6764        %KV$SRD (NAME=KV_SRD, STCLASS=SYMREF);
      160     7039        %KV$USRPRM;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:6    
      161     7090        %KV$VDI (PTREQU = NO);
      162     7161        %EQU KV_VDI = CHARTEXT('KV_SSN.VDI$->KV$VDI');
      163     7162
      164     7163        %INCLUDE KV_GLB;
      165     7186        %KV_CQ;
      166     7202        %INCLUDE KV$INPFNC;
      167     7761        %KV$INPFNCTBL;
      168     7845 S      %INCLUDE KV$VDH;
      169     7846        %KV$INPOPR;
      170     7945
      171     7946 S      %INCLUDE KV$INT;
      172     7947        %KV_LINLST_SLCFLDSTT_E;
      173     7953        %KV$ERD;
      174     8037        %KV$FLD;
      175     8125        %KV$FLD (NAME = Y$FLD_TXT, LAST = ",");
      176     8213    1          2 TXTCHR REDEF TXT CHAR(Y$FLD_TXT.WDT) UNAL;
      177     8214        %KV$FLD (NAME=KV_FLD, STCLASS=SYMREF);
      178     8302        %KV$FLDLST;
      179     8326        %KV$GETPRM;
      180     8368        %KV$LIN;
      181     8392        %KV$LINLST;
      182     8419        %KV$TRNTBL;
      183     8477
      184     8478 S      %INCLUDE KV$SND;
      185     8479        %KV_SND_FNC_E;
      186     8495        %KV$SND_CMPDSCSSN (NAME = KV_SND_CMPDSCSSN, STCLASS = SYMREF READONLY);
      187     8550        %KV$SND_CNC (NAME = KV_SND_CNC, STCLASS = SYMREF READONLY);
      188     8638        %KV$SND_MRK (NAME = KV_SND_MRK, STCLASS = SYMREF READONLY);
      189     8694        %KV$SND_PRM (NAME = KV_SND_PRM, STCLASS = SYMREF READONLY);
      190     8779        %KV$SND_RQSDAT_GNR (NAME = KV_SND_RQSDAT_GNR, STCLASS = SYMREF READONLY);
      191     8834
      192     8835        %INCLUDE KV$SP;
      193     8906        %KN_SP_ALL;
      194     8966    1   DCL 1 KV_SP_MSG(0:%KN_FCN_HI) REDEF KN_SP_MSG ALIGNED,
      195     8967        %KV$SP_MSG (LVL=2);
      196     8996        %KV$SP_MSG (NAME = KV$SP_MSG, STCLASS = "BASED(Y@SP_MSG$)");
      197     9025
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:7    
      198     9026 S      %INCLUDE KV$USR;
      199     9027        %KV$USR_DAT (NAME = KV_USR_DAT, STCLASS = SYMREF READONLY);
      200     9111        %KV$USR_DAT;
      201     9195        %KV$USR_EVT;
      202     9230        %KV$USR_EVT (NAME = KV_USR_EVT, STCLASS = SYMREF READONLY);
      203     9265        %KV$USR_PST (NAME = KV_USR_PST, STCLASS = SYMREF READONLY);
      204     9335        %KV$USR_RQSDAT (NAME = KV_USR_RQSDAT, STCLASS = SYMREF READONLY);
      205     9398    1   DCL KV_USR_SETATR UBIN SYMREF;
      206     9399        %KV$VDH_CNC (NAME = KV_VDH_CNC, STCLASS = SYMREF READONLY);
      207     9491        %KV$VDH_DAT (NAME = KV_VDH_DAT, STCLASS = SYMREF READONLY);
      208     9571        %KV$VDH_DAT (NAME = KV_VDH_DAT_TIMOUT, STCLASS = SYMREF READONLY);
      209     9651        %KV$VDH_DAT (NAME = KV_VDH_DAT_CLS, STCLASS = SYMREF READONLY);
      210     9731        %KV$VDH_DSC (NAME=KV_VDH_DSC, STCLASS=SYMREF);
      211     9767        %KV$VDH_GETPRM (NAME = KV_VDH_GETPRM, STCLASS = SYMREF READONLY);
      212     9829        %KV$VDH_PST (NAME = KV_VDH_PST_VRT, STCLASS = SYMREF READONLY);
      213     9903        %KV$VDH_PST (NAME = KV_VDH_PST_NEWLIN_VRT, STCLASS = SYMREF READONLY);
      214     9977
      215     9978 S      %INCLUDE KV$VDO;
      216     9979        %KV_VDO_ALL (NAME=KV_VDO%FNC, STCLASS="BASED(KV_RCVVDO$)", DAT=YES,
      217     9980         VLPSTCLASS="BASED(KV_RCVVDO.VDO%FNC%CHARTEXT('$'))");
      218    12123        %KV$VDOVLP_KEY (NAME = Y$VDOVLP_KEY, STCLASS = "BASED(KV_RCVVDO.VDOVLP_KEY$)",
      219    12124        LAST = ",");
      220    12174    1      2 KEY(0:1) UBIN BYTE CALIGNED;
      221    12175
      222    12176        %INCLUDE KV$VDP;
      223    12334        %KV$VDP_VDO (NAME="KV_VDP_VDO(0:0)", DCLARY=NO, STCLASS=SYMREF READONLY);
      224    12381        /*
      225    12382        Character string used for moving data from KV$VDOVLP_DATx to KV$FLD.TXT.
      226    12383        */
      227    12384    1   DCL Y$TXTCHR CHAR(Y@VFC) BASED(KV_RCVVDO.OTPLCL.BFR_.ADR$);
      228    12385        /*
      229    12386        KV$TRCBFR (VDH trace buffer) declaration.
      230    12387        */
      231    12388        %KV$TRCBFR (NAME = Y$TRCBFR, STCLASS = "BASED(Y@TRCBFR$)");
      232    12446
      233    12447        %KV$STT (CHKARYDCL = YES);              /* Must be after KV$VDO               */
      234    12841
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:8    
      235    12842        %KV$BOX(PAGE = YES, TITLE = "Static data contained within this PROCedure.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:9    
             12860    1   /***************************************************************************
             12861    1    *                                                                         *
             12862    1    *                Static data contained within this PROCedure.             *
             12863    1    *                                                                         *
             12864    1    ***************************************************************************/

      236    12869        /*
      237    12870        Static (and constant) data contained within this procedure.
      238    12871        */
      239    12872        %KH$EXP (FPTN=KH_EXP, STCLASS=STATIC);
      240    12935
      241    12936        %KH$CLK (FPTN=Y@CLK, STCLASS=STATIC, FNC=%KH#CLK_SETCLK, PRDUNT=KH#C_MIN,
      242    12937         VDH_CLK=YES, UVAL=%KV_CLKNMB_REDTIMOUT);
      243    13086
      244    13087        %FPT_WRSYSLOG (STCLASS=CONSTANT,FCG=KV, MID=M, MON='1'B, SEV=3,
      245    13088         FPTN=FPT_WRSYSLOG_VDOVLPBYNSIDU, ERR=%E$VDOVLPBYNSIDU);
      246    13183
      247    13184        %FPT_WRSYSLOG (STCLASS=CONSTANT,FCG=KV, MID=M, MON='1'B, SEV=3,
      248    13185         FPTN=FPT_WRSYSLOG_BADVDOVLPFNCCOD, ERR=%E$BADVDOVLPFNCCOD);
      249    13280
      250    13281        %FPT_WRSYSLOG (STCLASS=CONSTANT,FCG=KV, MID=M, MON='1'B, SEV=3,
      251    13282         FPTN=FPT_WRSYSLOG_BADVDOFNCCOD, ERR=%E$BADVDOFNCCOD);
      252    13377
      253    13378        /*
      254    13379        Pointer to the KV$SSN context for the session being processed.
      255    13380        */
      256    13381    1   DCL KV_RCVSSN$ PTR SYMREF;
      257    13382
      258    13383    1   DCL KV_RCVVDO$ PTR SYMREF;
      259    13384
      260    13385    1   DCL KV$RCVVDO$ PTR SYMREF;
      261    13386
      262    13387    1   DCL KV$RCVSSN$ PTR SYMREF;
      263    13388
      264    13389        %KV$RCVSSN (NAME=Y_RCVSSN, STCLASS=CONSTANT);
      265    13414        %KV$RCVVDO (NAME = Y_RCVVDO, STCLASS = CONSTANT);
      266    13555        %KV$SND_DAT (NAME=Y_SND_DAT, STCLASS=CONSTANT SYMDEF, VDOVLP_ERR$=Y_VDOVLP_ERR);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:10   
      267    13674        /*
      268    13675        Initialized copies of KV$TRCENT.
      269    13676        */
      270    13677        %KV$TRCENT (NAME = Y_TRCENT_RCVSSN, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_RCVSSN)
             13677            ;
      271    13706        %KV$TRCENT (NAME = Y_TRCENT_RCVVDO, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_RCVVDO)
             13706            ;
      272    13735        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_ACK, STCLASS = STATIC,
      273    13736        TYP = %KV_MRKTYP_ACK,
      274    13737        MSTRTR = YES,
      275    13738        CMPOTP = YES);
      276    13800
      277    13801        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_MRK, STCLASS = STATIC,
      278    13802        TYP = %KV_MRKTYP_MRK,
      279    13803        MSTRTR = YES,
      280    13804        CMPOTP = YES);
      281    13866
      282    13867        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_SAVLSTRCRID, STCLASS = STATIC,
      283    13868        TYP = %KV_MRKTYP_SAVLSTRCRID,
      284    13869        MSTRTR = NO,
      285    13870        CMPOTP = NO);
      286    13932
      287    13933        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_SNDLSTRCRID, STCLASS = STATIC,
      288    13934        TYP = %KV_MRKTYP_SNDLSTRCRID,
      289    13935        MSTRTR = YES,
      290    13936        CMPOTP = YES);
      291    13998
      292    13999        %KV$VDH_DSC (NAME=Y_VDH_DSC_TIMOUT, STCLASS=CONSTANT, RSN=%KV_DSCRSN_PTH,
      293    14000         ALLSSN=YES);
      294    14036
      295    14037        %KV$VDH_OTPLCL (NAME=Y_OTPLCL_RSTRGNSCR, TRN=YES, STCLASS=CONSTANT,
      296    14038         TEXT="%CONCAT(BINASC(27),'[r')");
      297    14111        %KV$VDH_SETPRM (NAME = Y_VDH_SETPRM, STCLASS = STATIC);
      298    14173
      299    14174        %KV$VDOVLP_ERR (NAME=Y_VDOVLP_ERR, STCLASS=STATIC, FCG=KV, SEV=4, MON='1'B);
      300    14271
      301    14272        %VLP_SCODE (FPTN=KVM_BADLDCT,STCLASS=CONSTANT,FCG=KV,MID=M,ERR#=%S$KV_BADLDCT);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:11   
      302    14333
      303    14334        %KV$VDOVLP_FLDID (NAME=Y_VDOVLP_FLDID, STCLASS=STATIC);
      304    14385
      305    14386        %KV$BOX(PAGE = YES, TITLE = "AUTO variables.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:12   
             14404    1   /***************************************************************************
             14405    1    *                                                                         *
             14406    1    *                              AUTO variables.                            *
             14407    1    *                                                                         *
             14408    1    ***************************************************************************/

      306    14413        /*
      307    14414        AUTO variables.
      308    14415        */
      309    14416        /*
      310    14417        Pointer to the KNH$MESS$ (SICI, beginning of SIDU) being processed.
      311    14418        */
      312    14419    1   DCL Y@SICI$ PTR AUTO;
      313    14420        /*
      314    14421        Session interface data unit (SIDU) word size.  Size of
      315    14422        KNH_MESS, FPT, and VDOs/VDOVLPs.
      316    14423        */
      317    14424    1   DCL Y@SIDU_WRDSIZ SBIN WORD AUTO;
      318    14425        /*
      319    14426        Next RPTR value (Y@MY_RPTR+(Y@SIDU_WRDSIZ+1)/2)
      320    14427        */
      321    14428    1   DCL Y@NXT_RPTR REDEF Y@SIDU_WRDSIZ UBIN WORD;
      322    14429        /*
      323    14430         !!! The interface to KV_CQ_HNDSBR$ needs Y@MY_RPTR right after Y@NXT_RPTR !!!
      324    14431         !!! Insert NOTHING here !!!
      325    14432        Current RPTR for VDH messages (may be after the CQ RPTR,
      326    14433        if a CQ_HNDID handler leaves messages in the queue).
      327    14434        */
      328    14435    1   DCL Y@MY_RPTR UBIN WORD AUTO;
      329    14436        /*
      330    14437        SIDU end pointer.  Points after the end of the SIDU being
      331    14438        worked on.
      332    14439        */
      333    14440    1   DCL Y@SIDU_END$ PTR AUTO;
      334    14441        /*
      335    14442        Pointer to the FPT being processed.
      336    14443        */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:13   
      337    14444    1   DCL Y@FPT$ PTR AUTO;
      338    14445        /*
      339    14446        Pointer to the session protocol sequencing definition array element
      340    14447        for this message type (KN_FCN_...).
      341    14448        */
      342    14449    1   DCL Y@SP_MSG$ PTR AUTO;
      343    14450        /*
      344    14451           Stuff to remember between session switches.
      345    14452        */
      346    14453        %KV$RCVSSN (NAME = KV_RCVSSN, STCLASS = AUTO);
      347    14478        /*
      348    14479           Stuff to remember between VDOs.
      349    14480        */
      350    14481        %KV$RCVVDO (NAME = KV_RCVVDO, STCLASS = AUTO);
      351    14622        /*
      352    14623        Pointer to the next VDOVLP to process (after the one currently
      353    14624        being processed) or to the next VDO to process.
      354    14625        */
      355    14626    1   DCL Y@NXTVDOVLP$ PTR AUTO;
      356    14627        /*
      357    14628        Saved VRTLINPHSLIN for block mode read DAT_IMD
      358    14629        */
      359    14630    1   DCL Y@PRVVRTLINPHSLIN UBIN WORD AUTO;
      360    14631        /*
      361    14632        Auto copy of a VDH trace entry.
      362    14633        */
      363    14634        %KV$TRCENT (NAME = Y@TRCENT, STCLASS = AUTO);
      364    14663        /*
      365    14664        Pointer to KV$TRCBFR.
      366    14665        */
      367    14666    1   DCL Y@TRCBFR$ PTR AUTO;
      368    14667        /*
      369    14668        VFC character being passed to the VFC processing routines.
      370    14669        */
      371    14670    1   DCL Y@VFC UBIN BYTE AUTO;
      372    14671        /*
      373    14672        VDH-user's inhibit level.  Used for setting up calls to KHI$DISABLE.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:14   
      374    14673        */
      375    14674    1   DCL Y@INHLVL UBIN WORD AUTO;
      376    14675        /*
      377    14676        Send maximum number of bytes (temp cell)
      378    14677        */
      379    14678    1   DCL Y@SNDMAXNMBBYT UBIN WORD AUTO;
      380    14679        /*
      381    14680        Send maximum number of records (temp cell)
      382    14681        */
      383    14682    1   DCL Y@SNDMAXNMBRCR UBIN WORD AUTO;
      384    14683        /*
      385    14684        Temporary word.
      386    14685        */
      387    14686    1   DCL Y@TMPWRD1 SBIN WORD AUTO;
      388    14687    1   DCL Y@TMPWRD1U REDEF Y@TMPWRD1 UBIN;
      389    14688        /*
      390    14689        Temporary word.
      391    14690        */
      392    14691    1   DCL Y@TMPWRD2 SBIN WORD AUTO;
      393    14692        /*
      394    14693        Temporary pointer.
      395    14694        */
      396    14695    1   DCL Y@TMP$ PTR AUTO;
      397    14696        /*
      398    14697        Number of words taken up by the field entry of a field being manipulated
      399    14698        */
      400    14699    1   DCL Y@FLDWRDSIZ SBIN;
      401    14700        /*
      402    14701        Number of words taken up by the field to the left of the
      403    14702           one we are building
      404    14703        */
      405    14704        /*
      406    14705          Handler subroutine entry point. Since you can't CALL EPTR_ARRAY(n).
      407    14706          (Is n an index, or an argument).
      408    14707        */
      409    14708    1   DCL Y@CQ_HNDSBR$ EPTR AUTO;
      410    14709    1   DCL Y@PRVSTRWRDSIZ UBIN;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:15   
      411    14710
      412    14711        %KV$MRD (NAME=KV@MRD, STCLASS=AUTO);
      413    14758
      414    14759        %KV$MVD (NAME=KV@MVD, STCLASS=AUTO);
      415    14803
      416    14804        %KV$PTR (NAME = KV@PTR, STCLASS = AUTO);
      417    14847
      418    14848        %KV$SND_CNC (NAME = KV@SND_CNC, STCLASS = AUTO);
      419    14936
      420    14937        %KV$SND_MRK (NAME = KV@SND_MRK, STCLASS = AUTO);
      421    14993
      422    14994        %KV$SND_PRM (NAME = KV@SND_PRM, STCLASS = AUTO);
      423    15079
      424    15080        %KV$SRD (NAME=KV@SRD, STCLASS=AUTO);
      425    15355
      426    15356        %KV$USR_DAT (NAME = KV@USR_DAT, STCLASS = AUTO);
      427    15440
      428    15441        %KV$USR_EVT (NAME = KV@USR_EVT, STCLASS = AUTO);
      429    15476
      430    15477        %KV$USR_RQSDAT (NAME = KV@USR_RQSDAT, STCLASS = AUTO);
      431    15540
      432    15541        %KV$VDH_CNC (NAME = KV@VDH_CNC, STCLASS = AUTO);
      433    15633
      434    15634        %KV$VDH_DAT (NAME = KV@VDH_DAT, STCLASS = AUTO);
      435    15714
      436    15715        %KV$VDH_GETPRM (NAME = KV@VDH_GETPRM, STCLASS = AUTO);
      437    15777
      438    15778        %KV$VDOVLP_MRK (NAME = KV@VDOVLP_MRK, STCLASS = AUTO);
      439    15831        %KV$BOX(PAGE = YES, TITLE = "Main loop; scan circular queue.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:16   
             15849    1   /***************************************************************************
             15850    1    *                                                                         *
             15851    1    *                      Main loop; scan circular queue.                    *
             15852    1    *                                                                         *
             15853    1    ***************************************************************************/

      440    15858        /*F*   NAME: KVM$RCV - CQ Message Receiver
      441    15859
      442    15860        This is the main scheduled-execution processing loop.
      443    15861        Its purpose is to process information received by the handler through
      444    15862        the receive circular queue (RCQ) or as a result of clock expirations.
      445    15863        There are no exits
      446    15864        or returns, although there is an M$WAIT monitor service request
      447    15865        to wait for something
      448    15866        to do.
      449    15867
      450    15868        The handler should call KVM$RCV as the last phase of initialization.
      451    15869
      452    15870        The information processed from the RCQ consists of items
      453    15871        known as session interface data units (KNH$MESS structure,
      454    15872        optionally followed by further session interface control information
      455    15873        (FPT_...), optionally followed by session interface data
      456    15874        (KV$VDO_...s and optionally KV$VDOVLP_...s)).
      457    15875
      458    15876        Any clocks that have expired are processed between these messages.
      459    15877
      460    15878        If a KNH$MESS destined for other then VDH is encountered, a call is
      461    15879        made to the KV_CQ_HNDSBR$ routine designated by KNH$MESS.UIDX.CQ_HNDID.
      462    15880        That routine then processes as many contiguous messages as there are in
      463    15881        the RCQ for it, updating the KNH_QHDR.RCQ.RPTR pointer as it goes.
      464    15882        When done, it returns here to continue the RCQ scan.
      465    15883        The KV_CQ_HNDSBR$ routine can be found in KV_GLB.:LIBRARY.
      466    15884        */
      467    15885    1      KV_RCVSSN$ = ADDR(NIL);
      468    15886    1      KV$RCVVDO$ = ADDR(KV_RCVVDO);
      469    15887    1      KV$RCVSSN$ = ADDR(KV_RCVSSN);
      470    15888    1      KV_RCVSSN = Y_RCVSSN;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:17   
      471    15889    1      KV@MVD = KV_MVD;
      472    15890    1      KV@MVD.SRD$ = ADDR(KV@SRD);
      473    15891    1      KV@SRD = KV_SRD;
      474    15892    1      KV@SRD.BTMRHT.LIN = 1;
      475    15893    1      KV@SRD.LNG = 1;
      476    15894
      477    15895    2      DO WHILE ('1'B);
      478    15896    2         Y@MY_RPTR = KNH_QHDR.RCQ.RPTR;
      479    15897
      480    15898    3         DO WHILE '1'B;
      481    15899    4   CLOCK_LOOP:DO WHILE '1'B;
      482    15900    5               CALL KHC$DISPATCH (KH_EXP) WHENRETURN DO;
      483    15901    5                  IF KH_EXP.UID$~=KV_RCVSSN$ AND KV_RCVSSN$~=ADDR(NIL) THEN
      484    15902    5                  CALL Y$CLNUP_SSN;
      485    15903
      486    15904    5                  KV_RCVSSN$ = KH_EXP.UID$;
      487    15905    5                  KV$PTR$ = KV_SSN.SNCPTR$;
      488    15906        /*N* Set up DEV and DBG for debug purposes.  Save current time
      489    15907        for STATs. */
      490    15908    5                  %KV_VDI.BSY = '1'B;
      491    15909    5                  KV_RCVVDO.VDP_VDO = '0'B;
      492    15910    6                  IF KV$PTR$~=%KV_VDI.ASNINPPTR$ THEN DO;
      493    15911
      494    15912        /* We're in a different session than the device, fix it up. */
      495    15913
      496    15914    6                     KV_RCVVDO.VDP_VDO.SETSTR = '1'B;
      497    15915    6                     KV_RCVVDO.VDP_VDO.PSTSTR = '1'B;
      498    15916    6                     KV_RCVVDO.VDP_VDO.RSTSTR = '1'B;
      499    15917    6                     KV_RCVVDO.PRVSTR$ = ADDR(NIL);
      500    15918    6                     KV_RCVVDO$ = ADDR(Y@TMPWRD1);
      501    15919    6                     KV_VDO.STR = %KV_STR.ID;
      502    15920    6                     CALL KVS$SETSTR;
      503    15921    6                  END;
      504    15922    5                  KV_SSN.CLKSET(KH_EXP.UVAL) = '0'B;
      505    15923
      506    15924        /* What sort of clock is it? */
      507    15925
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:18   
      508    15926    6                  DO CASE (KH_EXP.UVAL);
      509    15927    6                  CASE (%KV_CLKNMB_REDTIMOUT);
      510    15928        /* System read-timeout.  Disconnect the guy. */
      511    15929
      512    15930    6                     Y@TMP$ = %KV_VDI.SSN$;
      513    15931
      514    15932        /* But only if this is the last clock and all SSNs are reading or blocked. */
      515    15933
      516    15934    7   CLK_LOOP:         DO WHILE '1'B;
      517    15935    7                        IF Y@TMP$->KV$SSN.CLKSET(%KV_CLKNMB_REDTIMOUT)
      518    15936        /*N* It'd be nicer if this worked - but when ons of the "session"s
      519    15937             is the direct comgroup one for TP, it never times out.
      520    15938                               OR NOT Y@TMP$->KV$SSN.REDRQSPND
      521    15939                               AND NOT Y@TMP$->KV$SSN.OTPBLK
      522    15940        */
      523    15941    7                        THEN EXIT;
      524    15942    7                        Y@TMP$ = Y@TMP$->KV$SSN.LNK$;
      525    15943    8                        IF Y@TMP$ = ADDR(NIL) THEN DO;
      526    15944    8                           %KV_VDI.INTPHSDSC = '1'B;
      527    15945    8                           CALL KVC$DSC (Y_VDH_DSC_TIMOUT);
      528    15946    8                           EXIT CLK_LOOP;
      529    15947    8                        END;
      530    15948    7                     END;
      531    15949    6                  CASE (%KV_CLKNMB_USRREDTIMOUT);
      532    15950        /* User read-timeout.  Abort the read. */
      533    15951
      534    15952    6                     KV@VDH_DAT = KV_VDH_DAT_TIMOUT;
      535    15953    6                     CALL KVI$ACTRED (KV@VDH_DAT);
      536    15954    6                  CASE (ELSE);
      537    15955        /* Another one.  Call the RDH for processing. */
      538    15956
      539    15957    6                     KV@USR_EVT = KV_USR_EVT;
      540    15958    6                     KV@USR_EVT.ID = %KV_USR_EVT_ID_CLKEXP;
      541    15959    6                     KV@USR_EVT.PRM = KH_EXP.UVAL;
      542    15960    6                     CALL KVV$CALUSR_EVT (KV@USR_EVT);
      543    15961    6                  END;
      544    15962    5               END;                        /* WHENRETURN                         */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:19   
      545    15963    5               WHENALTRETURN DO;
      546    15964    5                  KH_EXP.CTBCTX$ = ADDR(NIL);
      547    15965    5                  EXIT CLOCK_LOOP;
      548    15966    5               END;
      549    15967    4            END CLOCK_LOOP;
      550    15968    3            IF Y@MY_RPTR=KNH_QHDR.RCQ.IPTR THEN EXIT;
      551    15969
      552    15970        /* Nothing left to do if there's no messages in the Q. */
      553    15971
      554    15972    3            Y@SICI$ = PINCRW(KV_RCVCQ$, Y@MY_RPTR*2);
      555    15973    4            IF KNH_MESS.UIDX.CQ_HNDID = 0 THEN DO;
      556    15974        /*
      557    15975        This message is for VDH, as opposed to X.25, etc.
      558    15976        */
      559    15977    4               Y@SIDU_WRDSIZ = SIZEW(KNH_MESS) +
      560    15978    4                 (((KNH_MESS.FPTSZ +
      561    15979    4                 KNH_MESS.MSGSZ) + 1) / 2);
      562    15980
      563    15981    4               Y@SIDU_END$ = PINCRW(Y@SICI$, Y@SIDU_WRDSIZ);
      564    15982
      565    15983    5               IF NOT KNH_MESS.FLAGS.FREE THEN DO;
      566    15984        /*
      567    15985        This message has not yet been processed.
      568    15986        Set up the pointer to the session protocol definition entry for
      569    15987        this KN_FCN_...
      570    15988        */
      571    15989    5                  Y@SP_MSG$ = ADDR(KV_SP_MSG(KNH_MESS.FUNCTION));
      572    15990
      573    15991    5                  IF NOT KV$SP_MSG.SETUP_SSN THEN EXIT;
      574    15992        /*
      575    15993        This session function refers to VDH session context that might
      576    15994        already be set up.
      577    15995        */
      578    15996    5                  IF KV_RCVSSN$~=ADDR(NIL)
      579    15997    5                  THEN IF KNH_MESS.UID$~=KV_RCVSSN$ OR %KV_VDI.DFR
      580    15998        /*
      581    15999        We were processing (on the scheduled thread also) another
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:20   
      582    16000        session.  Do it's clean-up now.
      583    16001        */
      584    16002    5                  THEN CALL Y$CLNUP_SSN;
      585    16003
      586    16004    5                  KV_RCVSSN$ = KNH_MESS.UID$;
      587    16005    5                  IF KNH_MESS.LDCTX ~= KV_SSN.SSNCNCID AND
      588    16006    6                    KV$SP_MSG.CHKSSNCNCID THEN DO;
      589    16007    6                     IF Y@SIDU_WRDSIZ<=SIZEW(KNH_MESS) THEN GOTO LOOP_MSG;
      590    16008        /* (A LOOP message could very well be waiting in the RCQ when we got
      591    16009           and responded to a TERM message, so it shouldn't cause a crash.) */
      592    16010        /*
      593    16011        We're to check the session connection ID (against the LDCTX).
      594    16012        The LDCTX (session identifier) being passed to us by session
      595    16013        doesn't match the identifier we have in our context for
      596    16014        (presumably) this session.  The context and/or code within
      597    16015        this node has problems.
      598    16016        */
      599    16017        /*S*  SCREECH_CODE: KVM-S$KV_BADLDCT
      600    16018              MESSAGE: LDCTXs in KNH$MESS and KV_SSN don't match.
      601    16019        */
      602    16020    6                     CALL KHD$SCREECH (KVM_BADLDCT);
      603    16021    6                     GOTO CLOCK_LOOP;      /* Don't trash the registers          */
      604    16022    6                  END;
      605    16023    5                  KV$PTR$ = KV_SSN.SNCPTR$;
      606    16024        /*N* Set up DEV and DBG for debug purposes.  Save current time
      607    16025        for STATs. */
      608    16026        /*
      609    16027        We don't want to send any markers around - we're on the synchronous thread.
      610    16028        */
      611    16029    5                  KV_SSN.MRKRQSENB = '0'B;
      612    16030    5                  %KV_VDI.BSY = '1'B;
      613    16031    5                  %KV_STT.RCV.SSNINTDATUNTCNT = %KV_STT.RCV.SSNINTDATUNTCNT + 1;
      614    16032    5                  %KV_STT.RCV.SSNINTDATUNTBYTCNT = %KV_STT.RCV.SSNINTDATUNTBYTCNT +
             16032                           Y@SIDU_WRDSIZ * 2;
      615    16033    5               END;                        /* END IF KV$SP_MSG.SETUP_SSN         */
      616    16034    4   LOOP_MSG:   Y@NXT_RPTR = Y@MY_RPTR+(Y@SIDU_WRDSIZ+1)/2;
      617    16035
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:21   
      618    16036    4               IF KNH_MESS.FPTSZ>0
      619    16037    4               THEN Y@FPT$ = PINCRW(ADDR(KNH_MESS), SIZEW(KNH_MESS));
      620    16038    4               ELSE Y@FPT$ = ADDR(NIL);
      621    16039
      622    16040    4               KV_RCVVDO$ = PINCRW(ADDR(KNH_MESS),
      623    16041    4                 SIZEW(KNH_MESS) + KNH_MESS.FPTSZ/2);
      624    16042        %KV$BOX(PAGE = YES, TITLE = "Process session interface control information");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:22   
             16060    4   /***************************************************************************
             16061    4    *                                                                         *
             16062    4    *               Process session interface control information             *
             16063    4    *                                                                         *
             16064    4    ***************************************************************************/

      625    16069    5               DO CASE (KNH_MESS.FUNCTION);
      626    16070        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_DATA");

             16088    5   /***************************************************************************
             16089    5    *                                                                         *
             16090    5    *                      Session/CQ message:  KN_FCN_DATA                   *
             16091    5    *                                                                         *
             16092    5    ***************************************************************************/

      627    16097    5               CASE %KN_FCN_DATA;
      628    16098        /*
      629    16099        Session data (presentation protocol) is being passed.
      630    16100        */
      631    16101    5                  KNH_MESS.FLAGS.FREE = '1'B;
      632    16102    5                  CALL Y$RCVVDO;
      633    16103        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_INIT");

             16121    5   /***************************************************************************
             16122    5    *                                                                         *
             16123    5    *                      Session/CQ message:  KN_FCN_INIT                   *
             16124    5    *                                                                         *
             16125    5    ***************************************************************************/

      634    16130    5               CASE %KN_FCN_INIT;
      635    16131        /*
      636    16132        The distant end is initiating a connection to us.
      637    16133        */
      638    16134    5                  KNH_MESS.FLAGS.FREE = '1'B;
      639    16135    5                  CALL Y$RCVVDO;
      640    16136    5                  KV@VDH_CNC = KV_VDH_CNC;
      641    16137    5                  KV@VDH_CNC.SSNCNCINT = '0'B;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:23   
      642    16138    5                  KV@VDH_CNC.DSTNTWADR.LDCTX = KNH_MESS.LDCTX;
      643    16139    5                  CALL KVC$CNC(KV@VDH_CNC);
      644    16140        /* Any failure was already cleaned up by KVC */
      645    16141    5                  KV$PTR$ = KV_SSN.SNCPTR$;
      646    16142        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_INIT_ACK");

             16160    5   /***************************************************************************
             16161    5    *                                                                         *
             16162    5    *                    Session/CQ message:  KN_FCN_INIT_ACK                 *
             16163    5    *                                                                         *
             16164    5    ***************************************************************************/

      647    16169    5               CASE %KN_FCN_INIT_ACK;
      648    16170    5                  KNH_MESS.FLAGS.FREE = '1'B;
      649    16171    6                  IF FPT_CONNECT_ACK.REASON ~= 0 THEN DO;
      650    16172        /*
      651    16173        The connection we initiated was rejected.
      652    16174        */
      653    16175        /*N* do reject */
      654    16176                          %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_LGNRJC,
      655    16177                          PRM = FPT_CONNECT_ACK.REASON);
             16189        /* !C! */
             16190    7           IF KV_SSN.VDI$->KV$VDI.USREVTENB (9) THEN DO;
             16192    7              KV@USR_EVT = KV_USR_EVT;
             16193    7              KV@USR_EVT.ID = 9;
             16194    7              KV@USR_EVT.PRM = FPT_CONNECT_ACK.REASON;
             16195    7              CALL KVV$CALUSR_EVT (KV@USR_EVT);
             16200    7              END;
             16202        /* ! ! */
      656    16204    6                     CALL Y$RCVVDO;
      657    16205        /*
      658    16206           If we never got connected to anything, nuke the context.
      659    16207        */
      660    16208    6                     IF NOT KV_SSN.LGCDSC THEN CALL KVC$DSC (KV_VDH_DSC);
      661    16209    6                     KV_SSN.RLSSSN = '1'B;
      662    16210    6                  END; ELSE DO;
      663    16211        /*
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:24   
      664    16212        The connection we initiated was accepted.
      665    16213        */
      666    16214        /*N* do accept */
      667    16215    6                     KV_SSN.SSNCNCID = KNH_MESS.LDCTX;
      668    16216    7                     IF KV_SSN.LGCDSC THEN DO;
      669    16217        /*
      670    16218           We've sent a DSC_RQS, but the new endpoint didn't get it. Do it again.
      671    16219        */
      672    16220    7                        KV_SSN.LGCDSC = '0'B;
      673    16221    7                        CALL KVC$DSC (KV_VDH_DSC);
      674    16222    7                     END;
      675    16223    7                     IF NOT KV_SSN.LGN THEN DO;
      676    16224                             %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_LGNACP);
             16236        /* !C! */
             16237    8           IF KV_SSN.VDI$->KV$VDI.USREVTENB (8) THEN DO;
             16244    8              CALL KVV$CALUSR_EVT (8);
             16247    8              END;
             16249        /* ! ! */
      677    16251    7                     END;
      678    16252        /*N* REWORK LGNACP */
      679    16253    6                     CALL Y$RCVVDO;
      680    16254    6                  END;
      681    16255        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_NOP");

             16273    6   /***************************************************************************
             16274    6    *                                                                         *
             16275    6    *                      Session/CQ message:  KN_FCN_NOP                    *
             16276    6    *                                                                         *
             16277    6    ***************************************************************************/

      682    16282    5               CASE %KN_FCN_NOP;
      683    16283        /*
      684    16284        NOP (no-operation) function.  This signifies the current end
      685    16285        of the receive circular queue, and that we should wrap back
      686    16286        to the beginning of the queue to look for further data.
      687    16287        */
      688    16288    5                  Y@NXT_RPTR = 0;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:25   
      689    16289        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_TERM");

             16307    5   /***************************************************************************
             16308    5    *                                                                         *
             16309    5    *                      Session/CQ message:  KN_FCN_TERM                   *
             16310    5    *                                                                         *
             16311    5    ***************************************************************************/

      690    16316    5               CASE %KN_FCN_TERM;
      691    16317        /*
      692    16318        The distant end is terminating the connection to us.
      693    16319        */
      694    16320    5                  KNH_MESS.FLAGS.FREE = '1'B;
      695    16321    5                  CALL Y$RCVVDO;
      696    16322    5                  IF (FPT_TERM.REASON = 0)
      697    16323    6                    AND (FPT_TERM.RLCID ~= '0'B) THEN DO;
      698    16324        /*
      699    16325        Complete the session disconnect, and start up a new session
      700    16326        to the ultimate network endpoint.
      701    16327        */
      702    16328    6                     CALL KVM$SND (KV_SND_CMPDSCSSN);
      703    16329    6                     KV_SSN.LGN = '0'B;
      704    16330    6                     KV_SSN.STTRQSENB = '1'B;
      705    16331    6                     KV_SSN.WATINPDLTMRK = '0'B;
      706    16332    6                     KV_SSN.WATOTPDLTMRK = '0'B;
      707    16333    6                     KV_SSN.RCVFLWCTRCRDINC = 0;
      708    16334    6                     KV@SND_CNC = KV_SND_CNC;
      709    16335    6                     KV@SND_CNC.SCNENDPNTID = '0'B;
      710    16336    6                     KV@SND_CNC.LINSPD = %KV_VDI.LINSPD;
      711    16337    6                     KV@SND_CNC.DSTNTWADR = FPT_TERM.RLCID;
      712    16338    6                     CALL KVM$SND(KV@SND_CNC);
      713    16339    6                  END;                     /* END IF FPT_TERM.REASON = 0         */
      714    16340    6                  ELSE DO;
      715    16341    7                     IF NOT KV_SSN.LGCDSC THEN DO;
      716    16342        /*
      717    16343           We've received a KN_FCN_TERM with there being any KV$VDO_DSC activity.
      718    16344           Report the disconnect so the VDH-user sees something consistent.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:26   
      719    16345           During logon, report a logon_reject, too.
      720    16346        */
      721    16347    8                        IF KV_SSN.LGN THEN DO;
      722    16348                                %KV$CALUSR_EVT (PRM=FPT_TERM.REASON,
      723    16349                                EVT_ID=%KV_USR_EVT_ID_LGNRJC);
             16361        /* !C! */
             16362    9           IF KV_SSN.VDI$->KV$VDI.USREVTENB (9) THEN DO;
             16364    9              KV@USR_EVT = KV_USR_EVT;
             16365    9              KV@USR_EVT.ID = 9;
             16366    9              KV@USR_EVT.PRM = FPT_TERM.REASON;
             16367    9              CALL KVV$CALUSR_EVT (KV@USR_EVT);
             16372    9              END;
             16374        /* ! ! */
      724    16376    8                        END;
      725    16377    7                        CALL KVC$DSC (KV_VDH_DSC);
      726    16378    7                     END;
      727    16379    6                     KV_SSN.RLSSSN = '1'B;
      728    16380    6                  END;
      729    16381        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_TERM_ACK");

             16399    6   /***************************************************************************
             16400    6    *                                                                         *
             16401    6    *                    Session/CQ message:  KN_FCN_TERM_ACK                 *
             16402    6    *                                                                         *
             16403    6    ***************************************************************************/

      730    16408    5               CASE %KN_FCN_TERM_ACK;
      731    16409        /*
      732    16410        The distant end is acknowledging the KN_FCN_TERM we sent.
      733    16411        */
      734    16412    5                  KNH_MESS.FLAGS.FREE = '1'B;
      735    16413    5                  CALL Y$RCVVDO;
      736    16414    5               CASE (ELSE);
      737    16415    5                  RETURN;
      738    16416    5               END;                        /* END CASE KNH$MESS.FUNCTION         */
      739    16417
      740    16418
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:27   
      741    16419    4            END;                           /* END IF KNH_MESS.UIDX.CQ_HNDID = 0  */
      742    16420    4            ELSE IF KNH_MESS.FUNCTION=%KN_FCN_NOP THEN DO;
      743    16421        /*
      744    16422        The CQ needs to be wrapped.  The UID HND_ID is just junk.  Wrap it.
      745    16423        */
      746    16424    4               Y@NXT_RPTR = 0;
      747    16425    4            END; ELSE DO;             /* END IF KNH_MESS.FUNCTION = %KN_FCN_NOP  */
      748    16426        /*
      749    16427        This KNH_MESS isn't for VDH.  CALL the appropriate CQ handler.
      750    16428        */
      751    16429    4               Y@CQ_HNDSBR$ = KV_CQ_HNDSBR$(KNH_MESS.UIDX.CQ_HNDID);
      752    16430    4               Y@NXT_RPTR = 65535;
      753    16431        /*
      754    16432        Put a bad value in the parameter, so we can tell if it gets returned.
      755    16433        */
      756    16434    4               CALL Y@CQ_HNDSBR$(Y@NXT_RPTR);
      757    16435    4               Y@MY_RPTR = Y@NXT_RPTR; /* any change to RCQ.RPTR will be a NOP   */
      758    16436    4               IF Y@MY_RPTR=65535 THEN Y@NXT_RPTR = KNH_QHDR.RCQ.RPTR;
      759    16437        /*
      760    16438        If no RPTR was returned, then assume all messages were processed.
      761    16439        */
      762    16440    4            END;                      /* END ELSE KNH_MESS.UIDX.CQ_HNDID = 0     */
      763    16441    3            IF KNH_QHDR.RCQ.SZ-Y@NXT_RPTR<=(SIZEW(KNH_MESS)+1)/2
      764    16442    3              AND Y@NXT_RPTR>KNH_QHDR.RCQ.IPTR
      765    16443        /*
      766    16444        There isn't room in the CQ for a NOP message to wrap it, and
      767    16445        the insert pointer has been wrapped.  Wrap the remove pointer.
      768    16446        */
      769    16447    3            THEN Y@NXT_RPTR = 0;
      770    16448    3            IF Y@MY_RPTR=KNH_QHDR.RCQ.RPTR THEN KNH_QHDR.RCQ.RPTR = Y@NXT_RPTR;
      771    16449    3            Y@MY_RPTR = Y@NXT_RPTR;
      772    16450    3         END;                              /* END WHILE RPTR ~= IPTR             */
      773    16451        %EJECT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:28   
      774    16452    2         CALL Y$CLNUP_SSN;
      775    16453    2         CALL KHC$WAIT;
      776    16454    2         IF KNH_QHDR.CTX.WU THEN CALL KVM$FLUSHCQ;
      777    16455    2      END;                                 /* END WHILE ('1'B)                   */
      778    16456        %KV$BOX(PAGE = YES, TITLE = "High-level presentation message processing.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:29   
             16474    2   /***************************************************************************
             16475    2    *                                                                         *
             16476    2    *                High-level presentation message processing.              *
             16477    2    *                                                                         *
             16478    2    ***************************************************************************/

      779    16483    1   Y$RCVVDO: PROC ALTRET;
      780    16484        /*
      781    16485        Receive VDOs.
      782    16486        If there is any presentation protocol (session data) present,
      783    16487        process it.
      784    16488        */
      785    16489    3      IF KV_SSN.TRCBFR$ ~= ADDR(NIL) THEN DO;
      786    16490        /*
      787    16491        The VDH trace buffer does exist.  Do VDH tracing.
      788    16492        */
      789    16493    3         Y@TRCBFR$ = KV_SSN.TRCBFR$;
      790    16494    3         Y@TRCENT = Y_TRCENT_RCVSSN;
      791    16495    3         Y@TRCENT.FNC = KNH_MESS.FUNCTION;
      792    16496    3         CALL Y$TRC;
      793    16497    3      END;                                 /* END IF TRCBFR$ ~= NIL              */
      794    16498    3      DO WHILE KV_RCVVDO$ < Y@SIDU_END$;
      795    16499        /*
      796    16500        There is presentation protocol present.
      797    16501        This loop is iterated for each VDO.
      798    16502        */
      799    16503    3         KV_RCVVDO = Y_RCVVDO;
      800    16504        /*
      801    16505        Set up the pointer to the presentation (virtual device)
      802    16506        protocol definition entry for
      803    16507        this KV$VDO_...
      804    16508        */
      805    16509    3         KV_RCVVDO.VDP_VDO = KV_VDP_VDO(KV_VDO.FNC);
      806    16510    3         %KV_STT.RCV.VDOCNT = %KV_STT.RCV.VDOCNT + 1;
      807    16511    3         %KV_STT.RCVVDOFNCCNT(KV_VDO.FNC) = %KV_STT.RCVVDOFNCCNT(KV_VDO.FNC) + 1;
      808    16512
      809    16513    4         IF KV_SSN.TRCBFR$ ~= ADDR(NIL) THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:30   
      810    16514        /*
      811    16515        The VDH trace buffer does exist.  Do VDH tracing.
      812    16516        */
      813    16517    4            Y@TRCENT = Y_TRCENT_RCVVDO;
      814    16518    4            Y@TRCENT.FNC = KV_VDO.FNC;
      815    16519    4            CALL Y$TRC;
      816    16520    4         END;                              /* END IF TRCBFR$ ~= NIL              */
      817    16521
      818    16522    4         IF KV_VDO.STR~=%KV_STR.ID AND KV_RCVVDO.VDP_VDO.SETSTR THEN DO;
      819    16523    4            IF %KV_STR.SNDMAXNMBRCR~=0 THEN KV_RCVVDO.VDP_VDO.RSTSTR = '1'B;
      820    16524    4            CALL KVS$SETSTR;
      821    16525    4         END;
      822    16526    4         ELSE IF KV$PTR$~=%KV_VDI.ASNINPPTR$ THEN DO;
      823    16527
      824    16528        /* We need to set up the context properly. */
      825    16529
      826    16530    4            KV_RCVVDO.VDP_VDO.SETSTR = '1'B;
      827    16531    4            CALL KVS$SETSTR;
      828    16532    4         END;
      829    16533    3         ELSE IF KV_RCVVDO.VDP_VDO.PSTSTR AND NOT KV_RCVVDO.VDP_VDO.RSTSTR
      830    16534        /*
      831    16535           We're to get there and stay there. Make sure we do.
      832    16536        */
      833    16537    3         THEN KV_RCVSSN.PRVSTR$ = ADDR(NIL);
      834    16538    3         Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO$, KV_RCVVDO.VDP_VDO.WRDSIZ);
      835    16539
      836    16540    4         IF KV_VDO.VLP THEN DO;
      837    16541        /*
      838    16542        There are VDOVLPs following this VDO.
      839    16543        */
      840    16544    5            DO UNTIL KV_VDOVLP.LST;
      841    16545        /*
      842    16546        This loop is iterated for each VDOVLP.
      843    16547        */
      844    16548    5               IF Y@NXTVDOVLP$ > Y@SIDU_END$ THEN EXIT;
      845    16549        /*
      846    16550        This VDOVLP goes beyond the end of the SIDU.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:31   
      847    16551        Either the presentation message is screwed up, or
      848    16552        the session interface is.
      849    16553        */
      850    16554    5               KV_RCVVDO.VDOVLP$ = Y@NXTVDOVLP$;
      851    16555    6               DO CASE (KV_VDOVLP.TYP);
      852    16556        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_CG_MSGID");

             16574    6   /***************************************************************************
             16575    6    *                                                                         *
             16576    6    *                Presentation parameter:  KV$VDOVLP_CG_MSGID              *
             16577    6    *                                                                         *
             16578    6    ***************************************************************************/

      853    16583        /*
      854    16584        Build a vector to the VLP for CG_MSGID (comgroup MSGID parameter).
      855    16585        */
      856    16586    6               CASE (%KV_VDOVLP_TYP_CG_MSGID);
      857    16587    6                  KV_RCVVDO.VDOVLP_CG_MSGID$ = KV_RCVVDO.VDOVLP$;
      858    16588    6                  KV_RCVVDO.VDP_VDO.RUTACK = '0'B; /* A marker needs it now.     */
      859    16589    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_CG_MSGID));
      860    16590        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_CG_MSGTYP");

             16608    6   /***************************************************************************
             16609    6    *                                                                         *
             16610    6    *                Presentation parameter:  KV$VDOVLP_CG_MSGTYP             *
             16611    6    *                                                                         *
             16612    6    ***************************************************************************/

      861    16617        /*
      862    16618        Build a vector to the VLP for CG_MSGTYP (comgroup MSGTYP parameter).
      863    16619        */
      864    16620    6               CASE (%KV_VDOVLP_TYP_CG_MSGTYP);
      865    16621    6                  KV_RCVVDO.VDOVLP_CG_MSGTYP$ = KV_RCVVDO.VDOVLP$;
      866    16622    6                  KV_RCVVDO.VDP_VDO.RUTACK = '0'B; /* A marker needs it now.     */
      867    16623    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_CG_MSGTYP));
      868    16624        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_CG_STA");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:32   
             16642    6   /***************************************************************************
             16643    6    *                                                                         *
             16644    6    *                 Presentation parameter:  KV$VDOVLP_CG_STA               *
             16645    6    *                                                                         *
             16646    6    ***************************************************************************/

      869    16651        /*
      870    16652        Build a vector to the VLP for CG_STA (comgroup STA parameter).
      871    16653        */
      872    16654    6               CASE (%KV_VDOVLP_TYP_CG_STA);
      873    16655    6                  KV_RCVVDO.VDOVLP_CG_STA$ = KV_RCVVDO.VDOVLP$;
      874    16656    6                  KV_RCVVDO.VDP_VDO.RUTACK = '0'B; /* A marker needs it now.     */
      875    16657    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_CG_STA));
      876    16658        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_DAT1");

             16676    6   /***************************************************************************
             16677    6    *                                                                         *
             16678    6    *                  Presentation parameter:  KV$VDOVLP_DAT1                *
             16679    6    *                                                                         *
             16680    6    ***************************************************************************/

      877    16685        /*
      878    16686        Build a vector to the VLP for DAT1 (data, 1 size byte).
      879    16687        */
      880    16688    6               CASE (%KV_VDOVLP_TYP_DAT1);
      881    16689    6                  KV_RCVVDO.VDOVLP_DAT1$ = KV_RCVVDO.VDOVLP$;
      882    16690    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_DAT1));
      883    16691    6                  KV_RCVVDO.OTPLCL.BFR_.ADR$ = ADDR(KV_VDOVLP_DAT1.DAT);
      884    16692    6                  KV_RCVVDO.OTPLCL.BFR_.BYTSIZ = LENGTHC(KV_VDOVLP_DAT1.DAT);
      885    16693        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_DAT2");

             16711    6   /***************************************************************************
             16712    6    *                                                                         *
             16713    6    *                  Presentation parameter:  KV$VDOVLP_DAT2                *
             16714    6    *                                                                         *
             16715    6    ***************************************************************************/

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:33   
      886    16720        /*
      887    16721        Build a vector to the VLP for DAT2 (data, 2 size bytes).
      888    16722        */
      889    16723    6               CASE (%KV_VDOVLP_TYP_DAT2);
      890    16724    6                  KV_RCVVDO.VDOVLP_DAT2$ = KV_RCVVDO.VDOVLP$;
      891    16725    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_DAT2));
      892    16726    6                  KV_RCVVDO.OTPLCL.BFR_.ADR$ = ADDR(KV_VDOVLP_DAT2.DAT);
      893    16727    6                  KV_RCVVDO.OTPLCL.BFR_.BYTSIZ = LENGTHC(KV_VDOVLP_DAT2.DAT);
      894    16728        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_ENTSRD");

             16746    6   /***************************************************************************
             16747    6    *                                                                         *
             16748    6    *                 Presentation parameter:  KV$VDOVLP_ENTSRD               *
             16749    6    *                                                                         *
             16750    6    ***************************************************************************/

      895    16755        /*
      896    16756        Build a vector to the VLP for ENTSRD (enter-SRD device character string).
      897    16757        */
      898    16758    6               CASE (%KV_VDOVLP_TYP_ENTSRD);
      899    16759    6                  KV_RCVVDO.VDOVLP_ENTSRD$ = KV_RCVVDO.VDOVLP$;
      900    16760    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_ENTSRD));
      901    16761        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_ERR");

             16779    6   /***************************************************************************
             16780    6    *                                                                         *
             16781    6    *                   Presentation parameter:  KV$VDOVLP_ERR                *
             16782    6    *                                                                         *
             16783    6    ***************************************************************************/

      902    16788        /*
      903    16789        Build a vector to the VLP for ERR (ERR code).
      904    16790        */
      905    16791    6               CASE (%KV_VDOVLP_TYP_ERR);
      906    16792    6                  KV_RCVVDO.VDOVLP_ERR$ = KV_RCVVDO.VDOVLP$;
      907    16793    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_ERR));
      908    16794        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_FLDID");
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:34   

             16812    6   /***************************************************************************
             16813    6    *                                                                         *
             16814    6    *                  Presentation parameter:  KV$VDOVLP_FLDID               *
             16815    6    *                                                                         *
             16816    6    ***************************************************************************/

      909    16821        /*
      910    16822        Build a vector to the VLP for FLDID (field ID).
      911    16823        */
      912    16824    6               CASE (%KV_VDOVLP_TYP_FLDID);
      913    16825    6                  KV_RCVVDO.VDOVLP_FLDID$ = KV_RCVVDO.VDOVLP$;
      914    16826    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_FLDID));
      915    16827    6                  IF %KV_MVD.ORG~=%KV#VD_ORG_FORM OR %KV_MVD.FRMSCNINH THEN EXIT;
      916    16828        /*
      917    16829        Find the associated field on a FORM device.
      918    16830        */
      919    16831    6                  CALL Y$SLCFLD_FLDID;
      920    16832        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_KEY");

             16850    6   /***************************************************************************
             16851    6    *                                                                         *
             16852    6    *                   Presentation parameter:  KV$VDOVLP_KEY                *
             16853    6    *                                                                         *
             16854    6    ***************************************************************************/

      921    16859        /*
      922    16860        Build a vector to the VLP for KEY.
      923    16861        */
      924    16862    6               CASE (%KV_VDOVLP_TYP_KEY);
      925    16863    6                  KV_RCVVDO.VDOVLP_KEY$ = KV_RCVVDO.VDOVLP$;
      926    16864    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_KEY));
      927    16865    6                  IF %KV_MVD.ORG~=%KV#VD_ORG_FORM OR %KV_MVD.FRMSCNINH THEN EXIT;
      928    16866        /*
      929    16867        This key is specifying line/column on a FORM virtual device.
      930    16868        */
      931    16869    6                  CALL Y$SLCFLD_KEY;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:35   
      932    16870        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_MRK");

             16888    6   /***************************************************************************
             16889    6    *                                                                         *
             16890    6    *                   Presentation parameter:  KV$VDOVLP_MRK                *
             16891    6    *                                                                         *
             16892    6    ***************************************************************************/

      933    16897        /*
      934    16898        Build a vector to the VLP for MRK (marker ID).
      935    16899        */
      936    16900    6               CASE (%KV_VDOVLP_TYP_MRK);
      937    16901    6                  KV_RCVVDO.VDOVLP_MRK$ = KV_RCVVDO.VDOVLP$;
      938    16902    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_MRK));
      939    16903        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  Unrecognized");

             16921    6   /***************************************************************************
             16922    6    *                                                                         *
             16923    6    *                   Presentation parameter:  Unrecognized                 *
             16924    6    *                                                                         *
             16925    6    ***************************************************************************/

      940    16930    6               CASE (ELSE);
      941    16931        /*
      942    16932        We received a VDOVLP we don't have a case statement for.
      943    16933        */
      944    16934        /*E* ERROR:         KVM-E$BADVDOVLPFNCCOD-0
      945    16935        *    MESSAGE:       Bad function code on KV$VDOVLP
      946    16936        *    DESCRIPTION:   VDH received a message containing a KV$VDOVLP.FNC
      947    16937        *                   that is illegal
      948    16938        */
      949    16939    6                  CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_BADVDOVLPFNCCOD, %KH_CHN)
             16939                           ;
      950    16940    6                  ALTRETURN;
      951    16941    6               END;                        /* END DO CASE KV_VDOVLP.TYP          */
      952    16942    5            END;                           /* END DO UNTIL KV_VDOVLP.LST         */
      953    16943    4         END;                              /* END IF KV_VDO.VLP                  */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:36   
      954    16944    4         IF Y@NXTVDOVLP$ > Y@SIDU_END$ THEN DO;
      955    16945        /*
      956    16946        This VDOVLP goes beyond the end of the SIDU.
      957    16947        Either the presentation message is screwed up, or
      958    16948        the session interface is.
      959    16949        */
      960    16950        /*E* ERROR:         KVM-E$VDOVLPBYNSIDU-0
      961    16951        *    MESSAGE:       KV$VDOVLP goes beyond the end of the SIDU
      962    16952        *    DESCRIPTION:   VDH received a message containing a KV$VDOVLP
      963    16953        *                   that goes beyond the end of the Session Interface
      964    16954        *                   data unit (framed by the KNH_MESS structure).
      965    16955        */
      966    16956    4            CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_VDOVLPBYNSIDU, %KH_CHN);
      967    16957    4            ALTRETURN;
      968    16958    4         END;                              /* END IF Y@NXTVDOVLP$ > Y@SIDU_END$  */
      969    16959    3         %KV_STT.RCV.VDOBYTCNT = %KV_STT.RCV.VDOBYTCNT +
      970    16960    3           POFFW(Y@NXTVDOVLP$, KV_RCVVDO$)*2;
      971    16961    3   Y$DO_CASE_FNC:
      972    16962    4         DO CASE (KV_VDO.FNC);
      973    16963        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  BLKDAT (block-data)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:37   
             16981    4   /***************************************************************************
             16982    4    *                                                                         *
             16983    4    *                 Presentation message:  BLKDAT (block-data)              *
             16984    4    *                                                                         *
             16985    4    ***************************************************************************/

      974    16990    4         CASE %KV_VDO_FNC_BLKDAT;
      975    16991        /*
      976    16992        Block data VDO.  The other end can no longer send us data
      977    16993        because it has run out of flow control credits.
      978    16994        */
      979    16995    4            KV_SSN.OTPBLK = '1'B;
      980    16996    4            IF KV_VDO_BLKDAT.RCRBYTSIZ > %KV_VDI.RCVFLWCTRMAXCRD THEN
      981    16997        /*
      982    16998        The number of bytes in the record the other end wants to send
      983    16999        is greater than the maximum flow control value.  Temorarily
      984    17000        increase the max so the record can be sent.
      985    17001        */
      986    17002    4            KV_SSN.RCVFLWCTRTMPMAXCRD = KV_VDO_BLKDAT.RCRBYTSIZ;
      987    17003        /*
      988    17004        Possibly ask the other end for more data.
      989    17005        */
      990    17006    4            IF KV_SSN.NO_WATREDTRG THEN CALL KVI$ENBNO_WATRED;
      991    17007    4            ELSE IF %KV_VDI.RQSOTP AND (NOT KV_SSN.REDRQSPND
      992    17008    4              OR KV$PTR.INPCNDPND.TRN OR %KV_VDI.INPUNT=%KV_INPUNT_RCR)
      993    17009    4            THEN CALL KVM$SND (KV_SND_RQSDAT_GNR);
      994    17010    4            IF KV_SSN.OTPBLK AND NOT KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT)
      995    17011    5              AND %KV_MRD.INPUT AND %KH_CHN.REDTIMOUTPRD~=0 THEN DO;
      996    17012    5               Y@CLK.PRD = %KH_CHN.REDTIMOUTPRD;
      997    17013    5               Y@CLK.UID$ = KV_RCVSSN$;
      998    17014    5               Y@CLK.CTBCTX$ = ADDR(NIL);
      999    17015    6               CALL KHC$CLOCK (Y@CLK) WHENRETURN DO;
     1000    17016    6                  KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT) = '1'B;
     1001    17017    6               END;
     1002    17018    5            END;
     1003    17019        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  CLS (path close)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:38   
             17037    5   /***************************************************************************
             17038    5    *                                                                         *
             17039    5    *                  Presentation message:  CLS (path close)                *
             17040    5    *                                                                         *
             17041    5    ***************************************************************************/

     1004    17046    4         CASE %KV_VDO_FNC_CLSSSN_RQS;
     1005    17047        /*
     1006    17048        The path is being closed.
     1007    17049        */
     1008    17050    4            KV@VDH_DAT = KV_VDH_DAT_CLS;
     1009    17051    4            CALL KVI$ACTRED (KV@VDH_DAT);
     1010    17052    5            IF KV_SSN.LGN THEN DO;
     1011    17053        /*
     1012    17054           Report logon-reject if that is the case
     1013    17055        */
     1014    17056                    %KV$CALUSR_EVT (EVT_ID=%KV_USR_EVT_ID_LGNRJC,
     1015    17057                    PRM=KV_VDO_CLSSSN.RSN);
             17069        /* !C! */
             17070    6           IF KV_SSN.VDI$->KV$VDI.USREVTENB (9) THEN DO;
             17072    6              KV@USR_EVT = KV_USR_EVT;
             17073    6              KV@USR_EVT.ID = 9;
             17074    6              KV@USR_EVT.PRM = KV_VDO_CLSSSN.RSN;
             17075    6              CALL KVV$CALUSR_EVT (KV@USR_EVT);
             17080    6              END;
             17082        /* ! ! */
     1016    17084    5            END;
     1017    17085        /*
     1018    17086        Do a new-line if we're in the middle of a line,
     1019    17087        or a new-page if specified and we're in the middle of a page.
     1020    17088        */
     1021    17089    4            ELSE IF %KV_MRD.PRINTTYPE AND %KV_MRD.OUTPUT AND NOT %KV_VDI.PHSDSC
     1022    17090    5            THEN IF %KV_MRD.FF_FLUSH THEN DO;
     1023    17091    5               IF %KV_SRD.LNG<255 AND %KV_SRD.CRT_PST=%KV_SRD.TOPLFT_PST
     1024    17092    5               THEN EXIT;
     1025    17093    5               %KV_MVD.FRMSCNINH = '1'B;   /* No PAGBRK - stop at TOF            */
     1026    17094    5               CALL KVO$SCRENDNO_HLT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:39   
     1027    17095    5               %KV_MVD.PAGBRKPND = '1'B;   /* Ignore PAG VFCs                    */
     1028    17096    5               %KV_MVD.FRMSCNINH = '0'B;   /* And set up for continuing          */
     1029    17097    5               %KV_VDI.DVCPGNENB = '0'B;   /* with the rest of the header        */
     1030    17098    5            END;
     1031    17099    4            ELSE IF %KV_SRD.CRT.LIN<=%KV_SRD.HI_NONBLN.LIN
     1032    17100    4            THEN CALL KVO$PST (KV_VDH_PST_NEWLIN_VRT);
     1033    17101    4            KV_SSN.OPN = '0'B;
     1034    17102                 %KV$CALUSR_EVT (EVT_ID=%KV_USR_EVT_ID_CLS);
             17114        /* !C! */
             17115    5           IF KV_SSN.VDI$->KV$VDI.USREVTENB (2) THEN DO;
             17122    5              CALL KVV$CALUSR_EVT (2);
             17125    5              END;
             17127        /* ! ! */
     1035    17129        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  CLSSTR (close stream)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:40   
             17147    5   /***************************************************************************
             17148    5    *                                                                         *
             17149    5    *                Presentation message:  CLSSTR (close stream)             *
             17150    5    *                                                                         *
             17151    5    ***************************************************************************/

     1036    17156    4         CASE %KV_VDO_FNC_CLSSTR;
     1037    17157        /*
     1038    17158        Close stream VDO.  The options make it interesting.
     1039    17159        */
     1040    17160    4            %KV_STR.ERR = '0'B;
     1041    17161    5            IF %KV_MVD.ORG>=%KV#VD_ORG_X364 THEN DO;
     1042    17162    5               %KV_STR.GRPRND = '0'B;
     1043    17163    6               IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;
     1044    17164    6                  IF NOT %KV_STR.OPN THEN EXIT;
     1045    17165        /* Leave it X364 if not opened by this stream. */
     1046    17166    6                  CALL KVC$RLSFRM;
     1047    17167    6               END; ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;
     1048    17168    6                  CALL KVS$SETSTR;
     1049    17169    6                  CALL KVE$DLTALLRCR;
     1050    17170    6                  CALL KVE$DSPUPD;
     1051    17171    6               END; ELSE DO;
     1052    17172    6                  %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ALL;
     1053    17173    6                  CALL Y$FRMVDO;
     1054    17174    6                  %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;
     1055    17175    7                  IF %KV_MVD.RETYPOVR AND %KV_LINLST.FRMDSP THEN DO;
     1056    17176    7                     CALL KVS$SETSTR;
     1057    17177    7                     CALL KVF$UPDFRM_CRT;
     1058    17178    7                     %KV_LINLST.FRMDSP = '0'B;
     1059    17179    7                  END;
     1060    17180    6               END;
     1061    17181    5            END;
     1062    17182    4            %KV_STR.OPN = '0'B;
     1063    17183    4            IF KV_VDO.STR~=1               /* Never release stream 1             */
     1064    17184    5            THEN IF KV_VDO_CLSSTR.NEWSSN THEN DO;
     1065    17185        /* We want a new connection, using this stream - which is then disassociated
     1066    17186           from this one. */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:41   
     1067    17187
     1068    17188    5               CALL KVS$SETSTR;
     1069    17189    5               IF %KV_MVD.ORG~=%KV#VD_ORG_UR THEN CALL KVC$RLSFRM;
     1070    17190    5               KV@VDH_CNC = KV_VDH_CNC;
     1071    17191    5               KV@VDH_CNC.NEWSSN = '1'B;
     1072    17192    5               KV@VDH_CNC.SSNCNCINT = '0'B;
     1073    17193    5               KV@VDH_CNC.LCLENDPNTID = %KH_CHN.TERMID;
     1074    17194    6               CALL KVC$CNC (KV@VDH_CNC) WHENRETURN DO;
     1075    17195    6                  IF KV_RCVSSN.PRVSTR$~=ADDR(NIL)
     1076    17196    6                  THEN IF KV_RCVSSN.PRVSTR$->KV$STR.SSN$~=KV_RCVSSN$
     1077    17197    6                  THEN KV_RCVSSN.PRVSTR$ = ADDR(NIL);
     1078    17198    6                  CALL KVS$SETSTR(1);
     1079    17199    6               END;
     1080    17200    5            END;
     1081    17201    5            ELSE IF KV_VDO_CLSSTR.DLT THEN DO;
     1082    17202        /* The stream's context is to be released. */
     1083    17203
     1084    17204    5               CALL KVS$SETSTR;
     1085    17205    5               IF KV_RCVSSN.PRVSTR$=KV$PTR.STR$ THEN KV_RCVSSN.PRVSTR$ = ADDR(NIL);
     1086    17206    5               CALL KVC$RLSSTR;
     1087    17207    5               CALL KVS$SETSTR(1);
     1088    17208    5            END;
     1089    17209        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  DAT (data)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:42   
             17227    5   /***************************************************************************
             17228    5    *                                                                         *
             17229    5    *                     Presentation message:  DAT (data)                   *
             17230    5    *                                                                         *
             17231    5    ***************************************************************************/

     1090    17236    4         CASE %KV_VDO_FNC_DAT,%KV_VDO_FNC_DAT_IMD;
     1091    17237        /*
     1092    17238        Data VDO.  The other end is sending us data (e.g., text).
     1093    17239        */
     1094    17240
     1095    17241    5            IF %KV_VDI.PHSDSC THEN DO;
     1096    17242
     1097    17243        /* we had a physical disconnect (line dropped)                      */
     1098    17244
     1099    17245        /*E* ERROR:  KVM-E$DATDLT_DSC-C
     1100    17246        MESSAGE0:  Data was ignored because it was received after a disconnect
     1101    17247        MESSAGE1:  Data (probably written by a CP-6 or LCP-6 program) has been
     1102    17248        ignored because it was received after a disconnect was initiated
     1103    17249        (probably caused by the terminal's link dropping).
     1104    17250        */
     1105    17251    5               CALL Y$SETERRCOD (%E$DATDLT_DSC);
     1106    17252    5               EXIT Y$DO_CASE_FNC;
     1107    17253    5            END;                           /* END IF KV_VDI.PHSDSC               */
     1108    17254        /*N* TEMP CODE TO CHECK OUT IMP */
     1109    17255    4            IF KV_VDO_DAT.DATCTRCHRTYP=%KV_DATCTRCHRTYP_VFC
     1110    17256    5              AND ASCBIN(KV_VDO_DAT.DATCTRCHR)=BITBIN('19'X) THEN DO;
     1111    17257    5               KV_RCVVDO.VDP_VDO.RUTACK = '0'B;
     1112    17258    5               Y_VDH_SETPRM.VAL_.BYTX = 0;
     1113    17259    5               Y_VDH_SETPRM.VAL_.ADR$ = KV_RCVVDO.OTPLCL.BFR_.ADR$;
     1114    17260    5               Y_VDH_SETPRM.VAL_.BYTSIZ = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1115    17261    5               CALL KVM$UIFT (Y_VDH_SETPRM);
     1116    17262    5               EXIT Y$DO_CASE_FNC;
     1117    17263    5            END;
     1118    17264    4            IF KV_SSN.WATOTPDLTMRK OR KV_SSN.OUTPUTDISCARD
     1119    17265    5              OR %KV_VDI.HALFDUPLEXPAPERTAPE OR NOT %KV_MRD.OUTPUT THEN DO;
     1120    17266
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:43   
     1121    17267        /* one of the following is true.                                    */
     1122    17268
     1123    17269        /* we are waiting for a marker, and are to ignore writes until
     1124    17270           it arrives (there was an output purge request).                  */
     1125    17271
     1126    17272        /* we are in output-ignore mode.                                    */
     1127    17273
     1128    17274        /* we are in half-duplex paper tape mode.                           */
     1129    17275
     1130    17276
     1131    17277        /* we will still process DAT_IMD messages, as they aren't
     1132    17278           subject to the above conditions.                                 */
     1133    17279
     1134    17280    6               IF (KV_VDO.FNC = %KV_VDO_FNC_DAT) THEN DO;
     1135    17281
     1136    17282        /* this is a data message (as opposed to a data immediate message).       */
     1137    17283
     1138    17284    6                  CALL Y$SETERRCOD (%E$DATDLT_DLT);
     1139    17285        /*E* ERROR: KV-E$DATDLT_DLT-E
     1140    17286        MESSAGE0:Data ignored due to output-delete function. */
     1141    17287    6                  EXIT Y$DO_CASE_FNC;
     1142    17288    6               END;                        /* END IF KV_VDO.FNC = DAT            */
     1143    17289    5            END;                           /* END IF WATOTPDLTMRK ...            */
     1144    17290    4            KV_SSN.WRTRQSCNT = KV_SSN.WRTRQSCNT+1;
     1145    17291    4            %KV_STT.RCV.DATVDOCNT = %KV_STT.RCV.DATVDOCNT+1;
     1146    17292    4            %KV_STT.RCV.DATVDOBYTCNT = %KV_STT.RCV.DATVDOBYTCNT +
     1147    17293    4              POFFW(Y@NXTVDOVLP$, KV_RCVVDO$)*2;
     1148    17294    4            %KV_STT.RCV.DATVDODATBYTCNT = %KV_STT.RCV.DATVDODATBYTCNT +
     1149    17295    4              KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1150    17296    4            IF KV_VDO.FNC = %KV_VDO_FNC_DAT
     1151    17297
     1152    17298        /* Note that the output has arrived since the last RQSDAT. */
     1153    17299
     1154    17300    4            THEN KV_SSN.RCVFLWCTRCRDINC = KV_SSN.RCVFLWCTRCRDINC +
     1155    17301    4              KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1156    17302    5            DO CASE (%KV_MVD.ORG);
     1157    17303    5            CASE %KV#VD_ORG_UR, %KV#VD_ORG_X364;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:44   
     1158    17304    5               Y@VFC = ASCBIN(KV_VDO_DAT.DATCTRCHR);
     1159    17305    5               IF (KV_VDO_DAT.DATCTRCHRTYP ~= %KV_DATCTRCHRTYP_VFC) OR
     1160    17306    6                 Y@VFC=26 OR Y@VFC>=29 AND Y@VFC<128 THEN DO;
     1161    17307    6                  IF KV_VDO_DAT.DATCTRCHRTYP~=%KV_DATCTRCHRTYP_VFC THEN Y@VFC=0;
     1162    17308        /*
     1163    17309        Either there is no VFC being passed, or the VFC is
     1164    17310        legal (.1D <= VFC <= .7F  or  VFC = .1A).
     1165    17311        */
     1166    17312    6                  ELSE IF Y@VFC<30 THEN KV_RCVVDO.OTPLCL.BFR_.ADR$ = ADDR(NIL);
     1167    17313        /*
     1168    17314           Page VFC has no data.
     1169    17315        */
     1170    17316    6                  IF KV_VDO_DAT.DATMOD = %KV_DATMOD_TRN OR
     1171    17317    7                    KV_VDO_DAT.DATMOD = %KV_DATMOD_BNR THEN DO;
     1172    17318
     1173    17319        /* this is a transparent or binary data message */
     1174    17320        /* so no translation or formatting of any kind is to be done. */
     1175    17321
     1176    17322    7                     IF (%KV_VDI.USEOTPBFRTRN AND KV_VDO_DAT.DATMOD = %KV_DATMOD_TRN)
             17322                              OR
     1177    17323    8                       (%KV_VDI.USEOTPBFRBNR AND KV_VDO_DAT.DATMOD = %KV_DATMOD_BNR)
             17323                                THEN DO;
     1178    17324
     1179    17325        /* We're to use the VDH output buffer mechanism (KV$VDI.OTPBFR_)
     1180    17326           for transparent output.                                          */
     1181    17327
     1182    17328        /* Frame the data in the message buffer and call the output
     1183    17329           buffering routine.                                               */
     1184    17330
     1185    17331    9                        IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;
     1186    17332        /*
     1187    17333        There was data passed in this message.
     1188    17334        */
     1189    17335    9                           IF %KV_VDI.INPUNT~=%KV_INPUNT_RCR
     1190    17336        /*
     1191    17337           no positionless output to record mode devices - BISYNC gets lost.
     1192    17338        */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:45   
     1193    17339    9                           THEN KV_RCVVDO.OTPLCL.TRN = '1'B;
     1194    17340    9                           CALL KVO$OTPLCL (KV_RCVVDO.OTPLCL);
     1195    17341    9                        END;               /* IF OTPLCL.BFR_.ADR$~=NIL           */
     1196    17342    8                     END;                  /* END IF USEOTPBFRTRN ...            */
     1197    17343    8                     ELSE DO;
     1198    17344
     1199    17345        /* This is a transparent or binary output request, and we're not to use
     1200    17346           the VDH output buffer mechanism.                                 */
     1201    17347
     1202    17348    8                        CALL Y$USR_DAT;
     1203    17349    8                     END;                  /* END ELSE IF USEOTPBFRTRN...        */
     1204    17350    7                  END;                     /* END IF TRN OR BNR                  */
     1205    17351    7                  ELSE DO;
     1206    17352
     1207    17353        /* this is a non-transparent, non-binary mode data message         */
     1208    17354
     1209    17355    7                     IF KV_VDO.FNC=%KV_VDO_FNC_DAT
     1210    17356    7                     THEN KV_SSN.HDNTYPIS_DCB = KV_VDO_DAT.DCBHDR;
     1211    17357    7                     ELSE IF %KV_MRD.MSGLIN AND KV_SSN.MSGLIN THEN Y@VFC = 1;
     1212    17358    7                     ELSE IF KV_SSN.MSGHLT THEN KV_RCVVDO.OTPLCL.NO_WRAP = '1'B;
     1213    17359    8                     IF (%KV_SRD.LNG=0 OR %KV_SRD.WDT=0) AND Y@VFC~=1 THEN DO;
     1214    17360    8                        CALL Y$SETERRCOD (%E$DATDLT_OPTWND);
     1215    17361        /*E* ERROR: KV-E$DATDLT_OPTWND-C
     1216    17362        MESSAGE0:Operation aborted due to empty window. */
     1217    17363    8                        EXIT Y$DO_CASE_FNC;
     1218    17364    8                     END;
     1219    17365    7                     IF KV_VDO.FNC=%KV_VDO_FNC_DAT_IMD
     1220    17366
     1221    17367        /* Save the input field location for DAT_IMD to a 3270. */
     1222    17368
     1223    17369    7                     THEN Y@PRVVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN;
     1224    17370    8                     IF %KV_VDI.USEOTPBFR OR %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;
     1225    17371
     1226    17372        /* We're to use the VDH output buffering mechanism (KV$VDI.OTPBFR_),
     1227    17373           or, KVO$X364 will take care of that choice. */
     1228    17374
     1229    17375    8   NXT_MSG_LIN:         ;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:46   
     1230    17376    9                        IF Y@VFC=1 THEN DO;
     1231    17377    9                           CALL KVO$DVCCTR (%KV$ERD_MSGLIN_CHR#/8);
     1232    17378    9                           KV@MRD = %KV_MRD;
     1233    17379    9                           KV@MVD.TRNTBL$ = %KV_MVD.TRNTBL$;
     1234    17380    9                           KV$PTR.MVD$ = ADDR(KV@MVD);
     1235    17381    9                           KV$PTR.MRD$ = ADDR(KV@MRD);
     1236    17382    9                           KV$PTR.SRD$ = ADDR(KV@SRD);
     1237    17383    9                           KV@SRD.MRD$ = ADDR(KV@MRD);
     1238    17384    9                           KV@MRD.DVCLIN = KV@SRD.CRT.LIN;
     1239    17385    9                           KV@MRD.DVCCLM = 1;
     1240    17386    9                           KV@MRD.MINSP_FORPST = 0;
     1241    17387    9                           KV@SRD.CRT.CLM = 1;
     1242    17388    9                           KV_RCVVDO.OTPLCL.NO_WRAP = '1'B;
     1243    17389    9                           KV@SRD.BTMRHT.CLM = KV@MRD.WDT;
     1244    17390    9                           KV@SRD.VRTPSTOK = '1'B;
     1245    17391    9                           KV@MVD.VRTCLM = 1;
     1246    17392    9                        END;
     1247    17393
     1248    17394        /* perform any 'before' VFC                                         */
     1249    17395
     1250    17396    8                        IF Y@VFC>1 AND NOT KV_VDO_DAT.CTN.PRV
     1251    17397    8                        THEN CALL KVO$VFCBFRTXT(Y@VFC);
     1252    17398
     1253    17399        /* call vdh write to process the textual write                      */
     1254    17400
     1255    17401
     1256    17402    9                        IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;
     1257    17403        /*
     1258    17404        There was data passed in this message.
     1259    17405        */
     1260    17406        /*
     1261    17407           Find out whether a messageline message needs to be wrapped.
     1262    17408        */
     1263    17409    9                           Y@TMPWRD1 = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1264    17410    9                           IF %KV_MVD.ORG=%KV#VD_ORG_UR
     1265    17411    9                           THEN CALL KVO$OTPLCL (KV_RCVVDO.OTPLCL);
     1266    17412    9                           ELSE CALL KVO$X364 (KV_RCVVDO.OTPLCL);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:47   
     1267    17413    9                           IF Y@TMPWRD1=KV_RCVVDO.OTPLCL.BFR_.BYTSIZ
     1268    17414    9                           THEN KV_RCVVDO.OTPLCL.BFR_.BYTSIZ=0;
     1269    17415    9                        END;               /* OTPLCL.BFR_.ADR$~=NIL              */
     1270    17416    9                        IF Y@VFC~=1 AND KV_RCVVDO.OTPLCL.NO_WRAP THEN DO;
     1271    17417
     1272    17418        /* Do the MSGHLT at the end of each line of the message */
     1273    17419    9                           CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_HLTOTP);
     1274    17420    9                           IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ~=0
     1275    17421    9                           THEN GOTO NXT_MSG_LIN;
     1276    17422    9                        END;
     1277    17423
     1278    17424
     1279    17425        /* perform any 'after' VFC                                          */
     1280    17426
     1281    17427    8                        IF Y@VFC>1 AND NOT KV_VDO_DAT.CTN.NXT
     1282    17428    8                        THEN CALL KVO$VFCAFTTXT(Y@VFC);
     1283    17429    8                     END;                  /* END IF USEOTPBFR DO                */
     1284    17430    8                     ELSE DO;
     1285    17431
     1286    17432        /* We're to pass the data to the VDH-user via KV@VDH_DAT.           */
     1287    17433
     1288    17434    8                        CALL Y$USR_DAT;
     1289    17435    8                     END;                  /* END ELSE IF USEOTPBFR DO           */
     1290    17436    7                  END;                     /* END ELSE IF USEOTPBFRTRN ...       */
     1291    17437    7                  IF KV_VDO.FNC=%KV_VDO_FNC_DAT_IMD THEN DO;
     1292    17438    8                     IF Y@VFC=1 THEN DO;
     1293    17439    8                        CALL KVO$DVCCTR (%KV$ERD_ENDMSGLIN_CHR#/8);
     1294    17440    8                        KV$PTR.MVD$ = %KV_STR.MVD$;
     1295    17441    8                        KV$PTR.SRD$ = %KV_MVD.SRD$;
     1296    17442    8                        KV$PTR.MRD$ = %KV_SRD.MRD$;
     1297    17443    8                        IF NOT KV_SSN.MSGHLT THEN EXIT;
     1298    17444    8                        CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_HLTOTP);
     1299    17445    8                        IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ~=0
     1300    17446    8                        THEN GOTO NXT_MSG_LIN;
     1301    17447    8                     END;
     1302    17448    7                     ELSE IF %KV_MVD.REDSSNID~=0 AND
     1303    17449    8                       NOT KV$PTR.INPCNDPND.TRN THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:48   
     1304    17450
     1305    17451        /* this is a data-immediate request, there is a read
     1306    17452           enabled, and the read isn't in transparent mode. re-type the
     1307    17453           read message, if appropriate.                                    */
     1308    17454
     1309    17455    9                        IF %KV_VDI.INPUNT=%KV_INPUNT_BLK THEN DO;
     1310    17456    9                           %KV_SRD.CRTVRTLINPHSLIN = Y@PRVVRTLINPHSLIN;
     1311    17457    9                           EXIT Y$DO_CASE_FNC;
     1312    17458    9                        END;
     1313    17459    8                        IF %KV_MVD.REDSSNID=KV_SSN.SSNID
     1314    17460    9                          AND KV_SSN.REDSTRID=%KV_STR.ID THEN DO;
     1315    17461    9                           %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN;
     1316    17462    9                           %KV_SRD.PRMVRTCLM = MOD(%KV_SRD.PRMVRTCLM, %KV_SRD.WDT);
     1317    17463   10                           IF %KV_MVD.DISPINPUT OR %KV_MVD.RETYPOVR THEN DO;
     1318    17464        /*n* needs more work? logon?                                        */
     1319    17465
     1320    17466        /* we are echoing the input (somewhat, at least)                    */
     1321    17467
     1322    17468   10                              CALL KVI$ENBRED;
     1323    17469   10                              CALL KVI$INTINPOPRX (%KV_INPOPRX_RE_TYP);
     1324    17470   10                              EXIT Y$DO_CASE_FNC;
     1325    17471   10                           END;
     1326    17472    9                        END;
     1327    17473    8                     END;
     1328    17474    7                  END;                     /* END IF DAT_IMD AND RED ...         */
     1329    17475    6                  IF Y@VFC~=1 THEN %KV_MVD.REDSSNID = 0;
     1330    17476    6               END;
     1331    17477    6               ELSE DO;                    /* ELSE IF LEGAL VFC                  */
     1332    17478        /*
     1333    17479        The VFC passed is illegal.
     1334    17480        */
     1335    17481        /*N* Should we report bad vfc (optionally) back to host? */
     1336    17482    6               END;                        /* END IF LEGAL VFC                   */
     1337    17483    5            CASE %KV#VD_ORG_FORM;
     1338    17484
     1339    17485    5               IF KV_VDO_DAT.DATCTRCHRTYP=%KV_DATCTRCHRTYP_VFC
     1340    17486    6                 AND KV_VDO_DAT.DATCTRCHR=BITASC('1A'X) THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:49   
     1341    17487
     1342    17488        /* this is a "print page" request. Do it. */
     1343    17489
     1344    17490    6                  CALL KVF$TOPPAG;
     1345    17491    6                  EXIT Y$DO_CASE_FNC;
     1346    17492    6               END;
     1347    17493    5               CALL Y$FRMVDO;
     1348    17494    5            CASE %KV#VD_ORG_SE;
     1349    17495
     1350    17496    5               IF KV_RCVVDO.VDOVLP_KEY$=ADDR(NIL)
     1351    17497    6               THEN IF KV_RCVVDO.VDOVLP_ERR$=ADDR(NIL) THEN DO;
     1352    17498    6   NO_SE_KEY:     ;
     1353    17499        /*N*           %KV_STR.ERR.CODE = %E$KEYREQUIRED; */
     1354    17500    6                  EXIT Y$DO_CASE_FNC;
     1355    17501    6               END;
     1356    17502    5               ELSE IF KV_VDOVLP_ERR.ERRCODE.ERR#~=%E$EOF THEN GOTO NO_SE_KEY;
     1357    17503    5               CALL KVE$INSREC;
     1358    17504    5            END;                           /* END CASE KV$MVD.ORG                */
     1359    17505        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  DCLFLD (declare field)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:50   
             17523    5   /***************************************************************************
             17524    5    *                                                                         *
             17525    5    *               Presentation message:  DCLFLD (declare field)             *
             17526    5    *                                                                         *
             17527    5    ***************************************************************************/

     1360    17532    4         CASE %KV_VDO_FNC_DCLFLD;
     1361    17533
     1362    17534        /* Setup KV$PTR with the row and column of the field we wish to
     1363    17535           create and call KVF$FNDFLD to determine if the coordinates given
     1364    17536           are legal for this mvd and whether or not a field already exists
     1365    17537           in this location                                                           */
     1366    17538
     1367    17539
     1368    17540    4            KV$PTR.VRTCLM = KV_VDO_DCLFLD.CLM;
     1369    17541    4            KV$PTR.VRTLIN = KV_VDO_DCLFLD.LIN;
     1370    17542    4            CALL KVF$FNDFLD;
     1371    17543
     1372    17544        /* This function is not of the 'select' type                                  */
     1373    17545
     1374    17546    4            %KV_LINLST.LSTOPRSLC = '0'B;
     1375    17547    4            IF %KV_LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ONE
     1376    17548    4            THEN %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_UN_KNW;
     1377    17549         /* (The "one" field might move here, so be sure to search for it) */
     1378    17550
     1379    17551        /* If the given coordinates are not legal within the mvd, post an error
     1380    17552           and discontinue processing                                                 */
     1381    17553
     1382    17554    4            Y@TMPWRD1 = KV_VDO_DCLFLD.CLM+KV_VDO_DCLFLD.WDT-1;
     1383    17555    4            IF KV$PTR.STT=%KV_PTR_STT_ILGLIN
     1384    17556    4              OR KV$PTR.STT=%KV_PTR_STT_ILGCLM
     1385    17557    4              OR KV_VDO_DCLFLD.WDT<=0
     1386    17558    5              OR Y@TMPWRD1U>%KV_SRD.WDT THEN DO;
     1387    17559        /*E* ERROR:KV-E$ILGFLDPST-E
     1388    17560             MESSAGE:Start or end position of a field is off the device.
     1389    17561             MESSAGE1:A field declaration specified a position that does not fit
     1390    17562                      entirely on one line.  The offending field's FLDID is in the DCB.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:51   
     1391    17563        */
     1392    17564                    %KV_VDOERR (COD = %E$ILGFLDPST,
     1393    17565                    VDOFNC = %KV_VDO_FNC_DCLFLD,
     1394    17566                    FLDID = KV_VDO_DCLFLD.ID);
     1395    17582    5               EXIT Y$DO_CASE_FNC;
     1396    17583    5            END;                           /* IF                                 */
     1397    17584
     1398    17585        /* If this field will overlap another field, report an error and
     1399    17586           discontinue processing                                                     */
     1400    17587
     1401    17588    4            IF %KV_MRD.ATRRQRDSPPST
     1402    17589    5            THEN IF %KV_VDI.INPUNT=%KV_INPUNT_BLK THEN DO;
     1403    17590        /*
     1404    17591           Blocked input needs disjoint attr bytes to get the input right.
     1405    17592        */
     1406    17593    5               Y@TMPWRD1 = Y@TMPWRD1+1;
     1407    17594    6               IF KV$PTR.FLDWRDX>SIZEW(KV$FLDLST) THEN DO;
     1408    17595    6                  IF KV$PTR.FLDWRDX<=%KV_FLDLST.LSTENTWRDX
     1409    17596    6                  THEN Y@TMP$ = PINCRW(KV$PTR.FLD$,-%KV_FLD.PRVSTRWRDSIZ);
     1410    17597    6                  ELSE Y@TMP$ = PINCRW(KV$PTR.FLDLST$,%KV_FLDLST.LSTENTWRDX);
     1411    17598    6                  IF Y@TMP$->KV$FLD.VRTCLM+Y@TMP$->KV$FLD.WDT=KV$PTR.VRTCLM
     1412    17599    6                  THEN Y@TMPWRD1 = 0;      /* Indicate an error condition.       */
     1413    17600    6               END;
     1414    17601    5               IF Y@TMPWRD1>%KV_SRD.WDT THEN IF KV_VDO_DCLFLD.WDT=1
     1415    17602    5                 OR KV_VDO_DCLFLD.WDT=2 AND KV$PTR.VRTLIN=%KV_SRD.LNG
     1416    17603    5               THEN Y@TMPWRD1 = 0;         /* Null fields are also disallowed.   */
     1417    17604    5            END;
     1418    17605    4            ELSE IF KV$PTR.VRTCLM=%KV_SRD.WDT
     1419    17606    4              AND (KV$PTR.VRTLIN=%KV_SRD.LNG OR %KV_SRD.SRDEND.CLM<%KV_MRD.WDT)
     1420    17607    4            THEN Y@TMPWRD1 = 0;       /* The last field needs at least 2 psts.   */
     1421    17608    4            IF (KV$PTR.STT = %KV_PTR_STT_IN_FLDCLMN)
     1422    17609    4              OR Y@TMPWRD1=0
     1423    17610    4              OR (KV$PTR.STT = %KV_PTR_STT_IN_FLDCLM1)
     1424    17611
     1425    17612        /* We want to insure that this field will not run into the field
     1426    17613           which follows it on the line                                               */
     1427    17614
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:52   
     1428    17615        /* If this field will be before the first field or between fields,
     1429    17616           KV$PTR points to the field that will follow the new one. Make
     1430    17617           sure that the column it starts in is greater than the last column
     1431    17618           of the new field.                                                          */
     1432    17619
     1433    17620    4              OR (KV$PTR.STT=%KV_PTR_STT_BFRFRSFLD
     1434    17621    4              OR KV$PTR.STT=%KV_PTR_STT_BTWFLD)
     1435    17622    5              AND Y@TMPWRD1>=%KV_FLD.VRTCLM THEN DO;
     1436    17623
     1437    17624        /* Report an error and exit                                                   */
     1438    17625
     1439    17626        /*E*  ERROR: KV-E$OVRLAPFLD-E
     1440    17627              MESSAGE:Overlapping field declaration.
     1441    17628              MESSAGE1:Overlapping fields declared.  DCB.FLDID contains ID for second
     1442    17629                       field if deferred error report - the first for a direct one.
     1443    17630        */
     1444    17631                    %KV_VDOERR (COD = %E$OVRLAPFLD,
     1445    17632                    VDOFNC = %KV_VDO_FNC_DCLFLD,
     1446    17633                    FLDID = KV_VDO_DCLFLD.ID);
     1447    17649    5               IF Y@TMPWRD1=0
     1448    17650    6               THEN IF KV$PTR.VRTCLM>=%KV_SRD.WDT-1 THEN DO;
     1449    17651    6                  %KV_STR.ERR.COD = %E$ILGFLDPST;
     1450    17652    6                  EXIT Y$DO_CASE_FNC;
     1451    17653    5               END; ELSE KV$PTR.FLD$ = Y@TMP$;
     1452    17654    5               IF KV_RCVVDO.VDOVLP_MRK$~=ADDR(NIL)
     1453    17655    5               THEN IF KV_VDOVLP_MRK.MRKTYP=%KV_VDOMRKTYP_ENDACK
     1454    17656    5                 AND NOT KV_VDOVLP_MRK.RSP
     1455    17657    5               THEN %KV_LINLST.ERRFLDID = %KV_FLD.ID;
     1456    17658    5               EXIT Y$DO_CASE_FNC;
     1457    17659    5            END;                           /* IF                                 */
     1458    17660
     1459    17661        /* Determine how many words this field will occupy                            */
     1460    17662
     1461    17663    4            Y@FLDWRDSIZ = ((KV_VDO_DCLFLD.WDT + (LENGTHC(%KV_FLD) - 1) + 1) / 2);
     1462    17664
     1463    17665        /* Determine now what the Y@PRVSTRWRDSIZ field for the new entry will
     1464    17666           look like. If this is the first field on the line or the only
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:53   
     1465    17667           field on the line, it will be 0. Otherwise, calculate it based
     1466    17668           on the current contents of KV$PTR                                          */
     1467    17669
     1468    17670    4            IF (KV$PTR.STT ~= %KV_PTR_STT_NO_FLD)
     1469    17671    5              AND (KV$PTR.STT ~= %KV_PTR_STT_BFRFRSFLD) THEN DO;
     1470    17672    6               IF (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD) THEN DO;
     1471    17673    6                  Y@PRVSTRWRDSIZ = PINCRW(KV$PTR.FLDLST$, %KV_FLDLST.LSTENTWRDX)->
             17673                           KV$FLD.STRWRDSIZ;
     1472    17674    6               END; ELSE DO;
     1473    17675    6                  Y@PRVSTRWRDSIZ = %KV_FLD.PRVSTRWRDSIZ;
     1474    17676    6               END;                        /* IF                                 */
     1475    17677    5            END; ELSE DO;
     1476    17678    5               Y@PRVSTRWRDSIZ = SIZEW(KV$FLDLST);
     1477    17679    5            END;                           /* IF                                 */
     1478    17680
     1479    17681        /* If this field belongs at the end of the line and there is room at the
     1480    17682           end of the field list buffer, just build a ptr to where the field will
     1481    17683           go and dont bother to call all the routines which aquire memory
     1482    17684           and shuffle data (this is the fast path)                                   */
     1483    17685
     1484    17686    4            Y@TMP$ = ADDR(NIL);
     1485    17687
     1486    17688    4            IF (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD)
     1487    17689    5              OR (KV$PTR.STT = %KV_PTR_STT_NO_FLD) THEN DO;
     1488    17690    6               IF (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD) THEN DO;
     1489    17691    6                  Y@TMPWRD1 = %KV_FLDLST.LSTENTWRDX + PINCRW(KV$PTR.FLDLST$, %KV_FLDLST
             17691                           .LSTENTWRDX)->KV$FLD.STRWRDSIZ;
     1490    17692    6               END; ELSE DO;
     1491    17693    6                  Y@TMPWRD1 = SIZEW(KV$FLDLST);
     1492    17694    6               END;                        /* IF                                 */
     1493    17695
     1494    17696        /* If the number of words available is greater than the amount
     1495    17697           we need, just do a fast update                                         */
     1496    17698
     1497    17699    5               IF KV$PTR.FLDLST$~=ADDR(NIL)
     1498    17700    6               THEN IF %KV_FLDLST.LSTCELWRDX-Y@TMPWRD1>Y@FLDWRDSIZ THEN DO;
     1499    17701    6                  Y@TMP$ = KV$PTR.FLD$;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:54   
     1500    17702    6               END;                        /* IF                                 */
     1501    17703    5            END;                           /* IF                                 */
     1502    17704
     1503    17705        /* If it fits, Y@TMP$ will contain the ptr to the field entry                     */
     1504    17706
     1505    17707    5            IF (Y@TMP$ ~= ADDR(NIL)) THEN DO;
     1506    17708
     1507    17709        /* This field will fit right at the end of the buffer and thus becomes
     1508    17710           the new last entry. Update the field list header                           */
     1509    17711
     1510    17712    5               %KV_FLDLST.LSTENTWRDX = KV$PTR.FLDWRDX;
     1511    17713
     1512    17714        /* Otherwise, this field will not fit at the end of the current field
     1513    17715           list buffer. Call a routine to make room for the new field and
     1514    17716           update the linkages we updated above.                                      */
     1515    17717
     1516    17718    5            END; ELSE DO;
     1517    17719    5               KV_RCVSSN.FLDWRDSIZ = Y@FLDWRDSIZ;
     1518    17720    6               CALL KVF$ADDFLD WHENALTRETURN DO;
     1519    17721    6                  %KV_LINLST.ERRFLDID = KV_VDO_DCLFLD.ID;
     1520    17722    6                  EXIT Y$DO_CASE_FNC;
     1521    17723    6               END;
     1522    17724    5            END;                           /* IF                                 */
     1523    17725
     1524    17726        /* Move in the field definition from the function.
     1525    17727        */
     1526    17728
     1527    17729        /* Build the field structure in AUTO to get more efficient code generated.
     1528    17730        */
     1529    17731        %EQU Y@FLD=CHARTEXT('ADDR(KV@PTR)->KV$FLD');
     1530    17732    4            %Y@FLD = KV_FLD;
     1531    17733    4            %Y@FLD.ID = KV_VDO_DCLFLD.ID;
     1532    17734    4            %Y@FLD.STRWRDSIZ = Y@FLDWRDSIZ;
     1533    17735    4            %Y@FLD.PRVSTRWRDSIZ = Y@PRVSTRWRDSIZ;
     1534    17736    4            %Y@FLD.VRTCLM = KV_VDO_DCLFLD.CLM;
     1535    17737    4            %Y@FLD.ATRCLM = KV_VDO_DCLFLD.CLM;
     1536    17738    4            %Y@FLD.HI_NONBLNCLM = KV_VDO_DCLFLD.CLM-1;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:55   
     1537    17739    4            %KV_LIN.UPDFLDCNT = 255;
     1538    17740    4            %Y@FLD.QLF = KV_VDO_DCLFLD.QLF;
     1539    17741
     1540    17742        /* Set the INPut bit if this field is not protected, not guarded and
     1541    17743           not constant                                                               */
     1542    17744
     1543    17745    5            IF NOT %Y@FLD.QLF&%(G#QLF_PRT| G#QLF_PRTGRD| G#QLF_CNS) THEN DO;
     1544    17746    5               %Y@FLD.INP = '1'B;
     1545    17747
     1546    17748        /* Start out protected                                                        */
     1547    17749
     1548    17750    5               %Y@FLD.QLF.PRT = '1'B;
     1549    17751    5            END;
     1550    17752
     1551    17753        /* Setup graphic rendition. First check for abstracted rendition              */
     1552    17754
     1553    17755    5            IF KV_VDO_DCLFLD.GRPRND.ABS THEN DO;
     1554    17756    5               %Y@FLD.GRPRND =
     1555    17757    5                 %KV_MRD.ABSGRPRND(BITBIN(KV_VDO_DCLFLD.GRPRND&'07'X));
     1556    17758
     1557    17759        /* Otherwise, just move in the bits specified in DCLFLD function
             17759        */
     1558    17760
     1559    17761    5            END; ELSE DO;
     1560    17762    5               %Y@FLD.GRPRND = KV_VDO_DCLFLD.GRPRND;
     1561    17763    5            END;                           /* IF                                 */
     1562    17764
     1563    17765        /* The field entry itself always contains the actual bits                     */
     1564    17766
     1565    17767    4            %Y@FLD.WDT = KV_VDO_DCLFLD.WDT;
     1566    17768
     1567    17769    4            Y@TMPWRD1 = %Y@FLD.VRTCLM+%Y@FLD.WDT;
     1568    17770    5            IF %KV_MRD.ATRRQRDSPPST THEN DO;
     1569    17771    5               %Y@FLD.HI_NONBLNCLM = %Y@FLD.VRTCLM;
     1570    17772    6               IF Y@TMPWRD1>%KV_SRD.WDT THEN DO;
     1571    17773
     1572    17774        /* The field wont fit on the screen, truncate it                             */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:56   
     1573    17775
     1574    17776    6                  Y@TMPWRD1 = %KV_SRD.WDT;
     1575    17777    6               END;                        /* IF                                 */
     1576    17778    5               IF Y@TMPWRD1=%KV_SRD.SRDEND.CLM-%KV_SRD.ORG.CLM
     1577    17779    5                 AND (%KV_LIN.VRTLIN>=%KV_SRD.LNG AND %KV_MRD.NO_FLDTRM
     1578    17780    6                 OR %KV_SRD.SRDEND.CLM<%KV_MRD.WDT) THEN DO;
     1579    17781
     1580    17782        /* We need the last position to restore attributes for the message line       */
     1581    17783
     1582    17784    6                  Y@TMPWRD1 = Y@TMPWRD1 - 1;
     1583    17785    6               END;                        /* IF                                 */
     1584    17786    5               %Y@FLD.WDT = Y@TMPWRD1-%Y@FLD.VRTCLM;
     1585    17787    5               Y@TMPWRD1 = Y@TMPWRD1+1;    /* first avail text byte for nxtfld   */
     1586    17788    5            END;
     1587    17789    5            IF (KV$PTR.FLDWRDX > SIZEW(KV$FLDLST)) THEN DO;
     1588    17790    5               Y@TMP$ = PINCRW(KV$PTR.FLD$, - %Y@FLD.PRVSTRWRDSIZ);
     1589    17791    5               Y@TMPWRD2 = Y@TMP$->KV$FLD.VRTCLM+Y@TMP$->KV$FLD.WDT;
     1590    17792    5               IF %KV_MRD.ATRRQRDSPPST THEN Y@TMPWRD2 = Y@TMPWRD2+1;
     1591    17793    6               IF Y@TMPWRD2>=%Y@FLD.VRTCLM THEN DO;
     1592    17794    6                  IF Y@TMPWRD2>%Y@FLD.VRTCLM /* Only possible if ATRRQRDSPPST    */
     1593    17795    6                  THEN %Y@FLD.ATRCLM = Y@TMP$->KV$FLD.ATRCLM;
     1594    17796    6                  Y@TMP$->KV$FLD.TRMATRRQR = '0'B;
     1595    17797
     1596    17798        /* The previous field abuts this one, put attrs in its attr byte              */
     1597    17799
     1598    17800    6               END;                        /* IF                                 */
     1599    17801    5            END;                           /* IF                                 */
     1600    17802
     1601    17803        /* Now check the following ones for the same situation                        */
     1602    17804
     1603    17805    4            IF Y@TMPWRD1<=%KV_MRD.WDT OR %KV_MRD.NO_FLDTRM
     1604    17806    4            THEN %Y@FLD.TRMATRRQR = '1'B;
     1605    17807    4            Y@TMPWRD2 = KV$PTR.FLDWRDX + %Y@FLD.STRWRDSIZ;
     1606    17808    4            Y@TMP$ = PINCRW(KV$PTR.FLDLST$, Y@TMPWRD2);
     1607    17809    5            DO WHILE Y@TMPWRD2<=%KV_FLDLST.LSTENTWRDX;
     1608    17810    5               IF Y@TMPWRD1<Y@TMP$->KV$FLD.ATRCLM THEN EXIT;
     1609    17811    5               %Y@FLD.TRMATRRQR = '0'B;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:57   
     1610    17812    5               IF Y@TMPWRD1=Y@TMP$->KV$FLD.ATRCLM THEN EXIT;
     1611    17813    5               Y@TMP$->KV$FLD.ATRCLM = %Y@FLD.ATRCLM;
     1612    17814    5               Y@TMPWRD2 = Y@TMPWRD2 + Y@TMP$->KV$FLD.STRWRDSIZ;
     1613    17815    5               Y@TMP$ = PINCRW(KV$PTR.FLDLST$, Y@TMPWRD2);
     1614    17816    5            END;                           /* LOOP                               */
     1615    17817    4            %KV_FLD = %Y@FLD;
     1616    17818    4            CALL Y$MOVDATTO_FLD;
     1617    17819
     1618    17820        %KV$BOX (PAGE=YES, TITLE="Presentation message:  DCLSTR (new stream)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:58   
             17838    4   /***************************************************************************
             17839    4    *                                                                         *
             17840    4    *                 Presentation message:  DCLSTR (new stream)              *
             17841    4    *                                                                         *
             17842    4    ***************************************************************************/

     1619    17847    4         CASE %KV_VDO_FNC_DCLSTR;
     1620    17848        /*
     1621    17849           Create a new stream.
     1622    17850        */
     1623    17851    4            Y@TMPWRD1 = KV_VDO_DCLSTR.STRID;
     1624    17852
     1625    17853        /* First check to see if we already have one. */
     1626    17854
     1627    17855    4            Y@TMP$ = KV_SSN.STR$;
     1628    17856    5            DO WHILE Y@TMP$~=ADDR(NIL);
     1629    17857    6               IF Y@TMP$->KV$STR.ID=Y@TMPWRD1 THEN DO;
     1630    17858    6                  IF KV$PTR.MVD$=Y@TMP$->KV$STR.MVD$
     1631    17859    6                    OR NOT KV_VDO_DCLSTR.RE_STR THEN EXIT Y$DO_CASE_FNC;
     1632    17860    6                  IF Y@TMP$->KV$STR.MVD$->KV$MVD.ORG~=%KV#VD_ORG_UR
     1633    17861    7                    OR %KV_MVD.ORG~=%KV#VD_ORG_UR AND %KV_STR.OPN THEN DO;
     1634    17862    7                     CALL Y$SETERRCOD (%E$ORGNOTCOM);
     1635    17863    7                     EXIT Y$DO_CASE_FNC;
     1636    17864    7                  END;
     1637    17865    7                  IF %KV_MVD.USRCNT=1 THEN DO;
     1638    17866    7                     CALL KVS$SETSTR;
     1639    17867    7                     CALL KVC$RLSMVD;
     1640    17868    7                  END;
     1641    17869    6                  ELSE %KV_MVD.USRCNT = %KV_MVD.USRCNT-1;
     1642    17870    6                  KV$PTR.MVD$ = Y@TMP$->KV$STR.MVD$;
     1643    17871    6                  %KV_STR.MVD$ = Y@TMP$->KV$STR.MVD$;
     1644    17872    6                  %KV_STR.ERR.COD = 0;
     1645    17873    6                  %KV_MVD.USRCNT = %KV_MVD.USRCNT+1;
     1646    17874    6                  KV$PTR.SRD$ = %KV_MVD.SRD$;
     1647    17875    6                  %KV_SRD.UNKRGN = '1'B;
     1648    17876    6                  KV$PTR.MRD$ = %KV_SRD.MRD$;
     1649    17877    6                  IF KV_RCVSSN.PRVSTR$=ADDR(NIL) THEN KV_RCVSSN.PRVSTR$ = Y@TMP$;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:59   
     1650    17878    6                  EXIT Y$DO_CASE_FNC;
     1651    17879    6               END;
     1652    17880    5               Y@TMP$ = Y@TMP$->KV$STR.LNK$;
     1653    17881    5            END;
     1654    17882    4            %KV_STR.ERR.COD = 0;
     1655    17883    5            CALL KVC$DCLSTR (Y@TMPWRD1) WHENALTRETURN DO;
     1656    17884    5            END;
     1657    17885        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  DLT (delete)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:60   
             17903    5   /***************************************************************************
             17904    5    *                                                                         *
             17905    5    *                    Presentation message:  DLT (delete)                  *
             17906    5    *                                                                         *
             17907    5    ***************************************************************************/

     1658    17912    4         CASE %KV_VDO_FNC_DLT;
     1659    17913    4            IF KV_VDO_DLT.CTLFLG.RSTBRKCNT THEN KV_SSN.BRKCNT = 0;
     1660    17914    4            IF KV_VDO_DLT.CTLFLG.DLTINP
     1661    17915    4            THEN CALL KVI$INTINPOPRX (%KV_INPOPRX_PRGINP);
     1662    17916    4            IF KV_VDO_DLT.CTLFLG.DLTOTP
     1663    17917    4            THEN CALL KVI$INTINPOPRX (%KV_INPOPRX_PRGOTP);
     1664    17918    5            IF KV_VDO_DLT.CTLFLG.ABRRED THEN DO;
     1665    17919    5               IF %KV_STR.SNDMAXNMBRCR=0 THEN EXIT;
     1666    17920    5               KV_SSN.REDRQSPND = '1'B;    /* Make like it started, even if not.*/
     1667    17921    5   Y$CANCEL_READ:;
     1668    17922    5               KV@VDH_DAT = KV_VDH_DAT_TIMOUT;
     1669    17923    5               KV@VDH_DAT.CMPCOD = %KV_CMPCOD_DLT;
     1670    17924        /*E* ERROR:KV-E$OPER-C
     1671    17925             MESSAGE:Nowait read aborted by M$TRMPRG.
     1672    17926        */
     1673    17927    5               CALL KVI$ACTRED (KV@VDH_DAT);
     1674    17928    5            END;
     1675    17929    5            IF KV_VDO_DLT.CTLFLG.CRSHER THEN DO;
     1676    17930    5               KV_RCVVDO.PRVSTR$ = ADDR(NIL);
     1677    17931    5               KV_RCVSSN.PRVSTR$ = KV_RCVVDO.PRVSTR$;
     1678    17932    5               IF KV_RCVSSN.PRVPTR$~=ADDR(NIL) THEN GOTO CHN_SSN;
     1679    17933    5            END;
     1680    17934        %KV$BOX (PAGE=YES, TITLE="Presentation message:  DSC_RQS (disconnect request)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:61   
             17952    5   /***************************************************************************
             17953    5    *                                                                         *
             17954    5    *            Presentation message:  DSC_RQS (disconnect request)          *
             17955    5    *                                                                         *
             17956    5    ***************************************************************************/

     1681    17961    4         CASE %KV_VDO_FNC_DSC_RQS;
     1682    17962        /*
     1683    17963        Request for disconnect.
     1684    17964        */
     1685    17965    4            %KV_VDI.INTPHSDSC = KV_VDO_DSC.INTPHSDSC;
     1686    17966    4            CALL KVC$DSC (KV_VDH_DSC);
     1687    17967        %KV$BOX (PAGE=YES, TITLE="Presentation message:  DSC_RSP (disconnect response)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:62   
             17985    4   /***************************************************************************
             17986    4    *                                                                         *
             17987    4    *            Presentation message:  DSC_RSP (disconnect response)         *
             17988    4    *                                                                         *
             17989    4    ***************************************************************************/

     1688    17994    4         CASE %KV_VDO_FNC_DSC_RSP;
     1689    17995        /*
     1690    17996        Response for disconnect.
     1691    17997        */
     1692    17998    4            KV_SSN.DSCRSPRCV = '1'B;
     1693    17999        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  ERS (erase)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:63   
             18017    4   /***************************************************************************
             18018    4    *                                                                         *
             18019    4    *                     Presentation message:  ERS (erase)                  *
             18020    4    *                                                                         *
             18021    4    ***************************************************************************/

     1694    18026    4         CASE %KV_VDO_FNC_ERS;
     1695    18027    4            IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN CALL Y$FRMVDO;
     1696    18028    4            ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN CALL KVE$DLTALLRCR;
     1697    18029        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  HVPS (H/V position)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:64   
             18047    4   /***************************************************************************
             18048    4    *                                                                         *
             18049    4    *                 Presentation message:  HVPS (H/V position)              *
             18050    4    *                                                                         *
             18051    4    ***************************************************************************/

     1698    18056    4         CASE %KV_VDO_FNC_HVPS;
     1699    18057        /*N* THIS IS JUST A TEMPORARY HOME FOR THIS CODE.  FIGURE OUT WHAT IT SHOULD DO */
     1700    18058        /*N* MAYBE TRIGGERED OFF OF VDOVLP_KEY/FLDID? */
     1701    18059
     1702    18060
     1703    18061        /* Setup KV$PTR for a call to KVF$FNDFLD to see if this field exists
     1704    18062           and whether or not the coordinates we are going to are legal for
     1705    18063           this VD                                                                    */
     1706    18064
     1707    18065    4            KV$PTR.VRTLIN = KV_VDO_HVPS.LIN;
     1708    18066
     1709    18067    4            KV$PTR.VRTCLM = KV_VDO_HVPS.CLM;
     1710    18068    5            CALL Y$SLCFLD_HVPS WHENRETURN DO;
     1711    18069
     1712    18070        /* Note that the last function was of the 'select type'                       */
     1713    18071
     1714    18072    5               %KV_LINLST.LSTOPRSLC = '1'B;
     1715    18073    5            END;
     1716    18074        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  MRK (marker)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:65   
             18092    5   /***************************************************************************
             18093    5    *                                                                         *
             18094    5    *                    Presentation message:  MRK (marker)                  *
             18095    5    *                                                                         *
             18096    5    ***************************************************************************/

     1717    18101    4         CASE %KV_VDO_FNC_MRK;
     1718    18102        /*
     1719    18103        We don't do anything here; the common code for handling the receipt
     1720    18104        of markers at the bottom of this case statement will do the work.
     1721    18105        */
     1722    18106        %KV$BOX(PAGE = YES, TITLE =
             18106            "Presentation message:  OPNSSN_RQS (open-session request)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:66   
             18124    4   /***************************************************************************
             18125    4    *                                                                         *
             18126    4    *          Presentation message:  OPNSSN_RQS (open-session request)       *
             18127    4    *                                                                         *
             18128    4    ***************************************************************************/

     1723    18133    4         CASE %KV_VDO_FNC_OPNSSN_RQS;
     1724    18134        /*
     1725    18135        TEMP CODE FOR OPEN REQUEST
     1726    18136        */
     1727    18137                 %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_OPN);
             18149        /* !C! */
             18150    5           IF KV_SSN.VDI$->KV$VDI.USREVTENB (10) THEN DO;
             18157    5              CALL KVV$CALUSR_EVT (10);
             18160    5              END;
             18162        /* ! ! */
     1728    18164    4            KV_SSN.LSTOTPRCRID = '0'B;
     1729    18165    4            KV_SSN.OTPBLK = '1'B;          /* Force a "set" operation            */
     1730    18166    4            KV_SSN.OPN = '1'B;
     1731    18167    4            CALL KVM$SND (KV_SND_RQSDAT_GNR);
     1732    18168        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  OPNSTR (open stream)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:67   
             18186    4   /***************************************************************************
             18187    4    *                                                                         *
             18188    4    *                Presentation message:  OPNSTR (open stream)              *
             18189    4    *                                                                         *
             18190    4    ***************************************************************************/

     1733    18195    4         CASE %KV_VDO_FNC_OPNSTR;
     1734    18196        /*
     1735    18197           Open a stream.  The parameters contain (at least) ORG.
     1736    18198        */
     1737    18199        /*N*  IF %KV_STR.OPN THEN CALL SCREECH; */
     1738    18200    5            DO CASE KV_VDO_OPNSTR.ORG;
     1739    18201    5            CASE %KV#VD_ORG_FORM, %KV#VD_ORG_SE, %KV#VD_ORG_X364;
     1740    18202        /*
     1741    18203           For FORMS-type opens, we want to position there and stay.
     1742    18204        */
     1743    18205    5               %KV_STR.RE_REDCLM = 1;
     1744    18206    5               KV_RCVVDO.VDP_VDO.RSTSTR = '0'B;
     1745    18207    5               CALL KVS$SETSTR;
     1746    18208    5               CALL KVC$OPNFRM (KV_VDO);
     1747    18209    5            CASE ELSE;
     1748    18210    5               IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN EXIT Y$DO_CASE_FNC;
     1749    18211    5               IF %KV_MVD.ORG>%KV#VD_ORG_X364 THEN CALL KVC$RLSFRM;
     1750    18212    5               %KV_MVD.ORG = %KV#VD_ORG_UR;
     1751    18213    5            END;
     1752    18214    4            %KV_STR.OPN = '1'B;
     1753    18215        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  PRM_SET (parameter-set)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:68   
             18233    4   /***************************************************************************
             18234    4    *                                                                         *
             18235    4    *               Presentation message:  PRM_SET (parameter-set)            *
             18236    4    *                                                                         *
             18237    4    ***************************************************************************/

     1754    18242    4         CASE %KV_VDO_FNC_PRM_SET;
     1755    18243        /*
     1756    18244        Parameter-set VDO.  The other end wants us to set parameters
     1757    18245        in our context.
     1758    18246        */
     1759    18247    4            IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ<2 THEN EXIT;
     1760    18248    4            Y_VDH_SETPRM.PRMID = %KV_PRMID_TYPLNG;
     1761    18249    4            Y_VDH_SETPRM.VAL_.ADR$ = KV_RCVVDO.OTPLCL.BFR_.ADR$;
     1762    18250    4            Y_VDH_SETPRM.VAL_.BYTSIZ = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1763    18251    4            Y_VDH_SETPRM.VAL_.BYTX = 0;
     1764    18252    4            IF KV_VDO.STR~=0 THEN Y_VDH_SETPRM.SCP = %KV_SCP_STR;
     1765    18253    4            ELSE Y_VDH_SETPRM.SCP = %KV_SCP_SSN;
     1766    18254    4            CALL KVP$SETPRM(Y_VDH_SETPRM);
     1767    18255        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RLSFLD (release field)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:69   
             18273    4   /***************************************************************************
             18274    4    *                                                                         *
             18275    4    *               Presentation message:  RLSFLD (release field)             *
             18276    4    *                                                                         *
             18277    4    ***************************************************************************/

     1768    18282    4         CASE %KV_VDO_FNC_RLSFLD;
     1769    18283    4            CALL Y$FRMVDO;
     1770    18284        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RQSDAT (request data)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:70   
             18302    4   /***************************************************************************
             18303    4    *                                                                         *
             18304    4    *                Presentation message:  RQSDAT (request data)             *
             18305    4    *                                                                         *
             18306    4    ***************************************************************************/

     1771    18311    4         CASE %KV_VDO_FNC_RQSDAT;
     1772    18312        /*
     1773    18313        Request data VDO.  The other is requesting us to send data,
     1774    18314        allowing us to send data, or cancelling a previous request for data.
     1775    18315        */
     1776    18316    4            IF KV_VDO_RQSDAT.INCMAXNMBBYT THEN
     1777    18317        /*
     1778    18318        The maximum number of bytes we can send is (may be) being incremented.
     1779    18319        */
     1780    18320    4            Y@SNDMAXNMBBYT = KV_SSN.SNDMAXNMBBYT + KV_VDO_RQSDAT.MAXNMBBYT;
     1781    18321    4            ELSE
     1782    18322        /*
     1783    18323        The maximum number of bytes we can send is being set.
     1784    18324        */
     1785    18325    4            Y@SNDMAXNMBBYT = KV_VDO_RQSDAT.MAXNMBBYT;
     1786    18326
     1787    18327    4            IF KV_VDO_RQSDAT.INCMAXNMBRCR THEN
     1788    18328        /*
     1789    18329        The maximum number of records we can send is (may be) being incremented.
     1790    18330        */
     1791    18331    4            Y@SNDMAXNMBRCR = %KV_STR.SNDMAXNMBRCR + KV_VDO_RQSDAT.MAXNMBRCR;
     1792    18332    4            ELSE
     1793    18333        /*
     1794    18334        The maximum number of records we can send is being set.
     1795    18335        */
     1796    18336    4            Y@SNDMAXNMBRCR = KV_VDO_RQSDAT.MAXNMBRCR;
     1797    18337
     1798    18338    4            IF (Y@SNDMAXNMBBYT = 0) OR
     1799    18339    5              (Y@SNDMAXNMBRCR = 0) THEN DO;
     1800    18340        /*
     1801    18341        Previous flow control information allowing us to send data
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:71   
     1802    18342        is being cancelled.
     1803    18343        */
     1804    18344    5               %KV_STR.SNDMAXNMBRCR = BITBIN(KV_SSN.REDRQSPND);
     1805    18345    5               IF KV_SSN.REDRQSPND AND KV_SSN.REDBFR__.DATBYTSIZ>0
     1806    18346    5               THEN GOTO Y$CANCEL_READ;    /* in VDO_DLT                         */
     1807    18347    5               CALL KVI$ABRRED;
     1808    18348    5               EXIT Y$DO_CASE_FNC;
     1809    18349    5            END;
     1810    18350        /*
     1811    18351        This VDO is requesting data.
     1812    18352        */
     1813    18353    4            IF KV_SSN.CLSPND THEN EXIT Y$DO_CASE_FNC;
     1814    18354        /*
     1815    18355        A close request is pending.  Simply ignore this request.
     1816    18356        */
     1817    18357
     1818    18358    4            IF KV_VDO_RQSDAT.WAT AND KV_SSN.WATINPDLTMRK
     1819    18359        /*
     1820    18360        The other end is waiting for a response to this request,
     1821    18361        but we're waiting for an input-delete marker to
     1822    18362        come back, so it's already got one.  Ignore this request.
     1823    18363        */
     1824    18364    4            THEN EXIT Y$DO_CASE_FNC;
     1825    18365
     1826    18366    5            IF NOT %KV_MRD.INPUT THEN DO;
     1827    18367        /*
     1828    18368        The current MRD isn't declared as being capable of input.
     1829    18369        */
     1830    18370    5               CALL KVI$ABRRED;
     1831    18371    5               Y_VDOVLP_ERR.ERRCODE.ERR# = %E$READ;
     1832    18372    5               GOTO Y@SND_ERR;
     1833    18373    5            END;
     1834    18374    5            IF %KV_SRD.LNG=0 OR %KV_SRD.WDT=0 THEN DO;
     1835    18375    5               Y_VDOVLP_ERR.ERRCODE.ERR# = %E$DATDLT_OPTWND;
     1836    18376    5   Y@SND_ERR:  ;
     1837    18377    5               %KV_STR.SNDMAXNMBRCR = %KV_STR.SNDMAXNMBRCR+1;
     1838    18378    5               CALL KVM$SND(Y_SND_DAT);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:72   
     1839    18379    5               EXIT Y$DO_CASE_FNC;
     1840    18380    5            END;                           /* END IF NOT INPUT                   */
     1841    18381
     1842    18382    5            IF KV_VDO_RQSDAT.MAXRCRBYTSIZ = 0 THEN DO;
     1843    18383        /*
     1844    18384        The maximum record size specified by the other end is 0.
     1845    18385        Error.
     1846    18386        */
     1847    18387        /*N* DO ERROR LOG */
     1848    18388        /*N* SEND SOME SORT OF ERROR INDICATION (CLOSE OR DISCONNECT?) */
     1849    18389    5               EXIT Y$DO_CASE_FNC;
     1850    18390    5            END;                           /* END IF MAXRCRBYTSIZ = 0            */
     1851    18391
     1852    18392    4            %KV_STR.WATRED = KV_VDO_RQSDAT.WAT;
     1853    18393    4            KV_SSN.BP = KV_VDO_RQSDAT.BP;
     1854    18394    4            KV_SSN.REDMLT = KV_VDO_RQSDAT.READMLT;
     1855    18395    4            KV_SSN.SNDMAXNMBBYT = Y@SNDMAXNMBBYT;
     1856    18396    4            %KV_STR.SNDMAXNMBRCR = Y@SNDMAXNMBRCR;
     1857    18397    4            KV@USR_RQSDAT = KV_USR_RQSDAT;
     1858    18398    4            KV@USR_RQSDAT.MAXRCRBYTSIZ = KV_VDO_RQSDAT.MAXRCRBYTSIZ;
     1859    18399    4            KV@USR_RQSDAT.DATMOD = KV_VDO_RQSDAT.DATMOD;
     1860    18400    4            KV@USR_RQSDAT.RE_RED = KV_VDO_RQSDAT.RE_RED;
     1861    18401    4            KV@USR_RQSDAT.EOFNO_DAT = KV_VDO_RQSDAT.EOFNO_DAT;
     1862    18402
     1863    18403    5            IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN DO;
     1864    18404        /*
     1865    18405        This is a request of data from a FORM virtual device.
     1866    18406        */
     1867    18407    5               IF KV_RCVVDO.VDOVLP_FLDID$=ADDR(NIL)
     1868    18408    5                 AND KV_RCVVDO.VDOVLP_KEY$=ADDR(NIL)
     1869    18409        /*
     1870    18410           If the actual M$READ specified a key (too) then start reading
     1871    18411           at that field.
     1872    18412        */
     1873    18413    5               THEN KV$PTR.FLD$ = ADDR(NIL);
     1874    18414    5               CALL KVF$RQSDAT(KV@USR_RQSDAT);
     1875    18415
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:73   
     1876    18416    4            END; ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE
     1877    18417        /*
     1878    18418           Screen editor also needs special treatment.
     1879    18419        */
     1880    18420    4            THEN CALL KVE$RQSDAT (KV@USR_RQSDAT);
     1881    18421        /*
     1882    18422        This is a request of data from a TERMINAL or UR virtual device.
     1883    18423        */
     1884    18424    4            ELSE CALL KVI$RQSDAT(KV@USR_RQSDAT);
     1885    18425
     1886    18426        /* Leave the cursor here if this read is still active and the selected
     1887    18427           session's isn't. */
     1888    18428
     1889    18429    4            IF %KV_VDI.AUTCRS AND %KV_STR.SNDMAXNMBRCR>0
     1890    18430    4              AND KV_RCVSSN.PRVPTR$~=ADDR(NIL)
     1891    18431    4            THEN IF NOT KV_RCVSSN.PRVPTR$->KV$PTR.SSN$->KV$SSN.REDRQSPND
     1892    18432    4              OR KV$PTR.SRD$=KV_RCVSSN.PRVPTR$->KV$PTR.SRD$
     1893    18433    4              AND NOT KV$PTR.INPCNDPND.TRN
     1894    18434    4              AND KV_RCVSSN.PRVPTR$->KV$PTR.SSN$->KV$SSN.REDBFR__.DATBYTSIZ
     1895    18435    4              <=KV_SSN.REDBFR__.DATBYTSIZ
     1896    18436    5            THEN DO;
     1897    18437    5   CHN_SSN:    ;
     1898    18438    6               IF %KV_VDI.KEPTYP THEN DO;
     1899    18439        /* Move the typeahead here, and all that that entails. */
     1900    18440    6                  Y@TMP$ = KV_RCVSSN.PRVPTR$->KV$PTR.SSN$;
     1901    18441    6                  KV_SSN.TYPAHDBFRCNT = Y@TMP$->KV$SSN.TYPAHDBFRCNT;
     1902    18442    6                  KV_SSN.TYPAHDBFRINPFNC$ = Y@TMP$->KV$SSN.TYPAHDBFRINPFNC$;
     1903    18443    6                  KV_SSN.TYPAHDBFRINS$ = Y@TMP$->KV$SSN.TYPAHDBFRINS$;
     1904    18444    6                  KV_SSN.TYPAHDBFRINPFNCX = Y@TMP$->KV$SSN.TYPAHDBFRINPFNCX;
     1905    18445    6                  KV_SSN.TYPCND = Y@TMP$->KV$SSN.TYPCND;
     1906    18446    6                  KV_SSN.TYPCND.TRN = KV$PTR.INPCNDPND.TRN;
     1907    18447    6                  Y@TMP$->KV$SSN.TYPCND.NOT_TRN = '0'B;
     1908    18448    6                  Y@TMP$->KV$SSN.TYPAHDBFRINS$ = KV_SSN.TYPAHDBFRHED$;
     1909    18449    6                  KV_SSN.TYPAHDBFRHED$ = Y@TMP$->KV$SSN.TYPAHDBFRHED$;
     1910    18450    6                  Y@TMP$->KV$SSN.TYPAHDBFRHED$ = Y@TMP$->KV$SSN.TYPAHDBFRINS$;
     1911    18451    6                  Y@TMP$->KV$SSN.TYPAHDBFRINPFNC$ = ADDR(NIL);
     1912    18452    6                  Y@TMP$->KV$SSN.TYPAHDBFRCNT = 1;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:74   
     1913    18453    6                  KV$PTR.INPCNDPND.OPRX =
     1914    18454    6                    KV_RCVSSN.PRVPTR$->KV$PTR.INPCNDPND.OPRX;
     1915    18455    6                  KV$PTR.INPCNDPND_MSK.NOT_TRN =
     1916    18456    6                    KV_RCVSSN.PRVPTR$->KV$PTR.INPCNDPND_MSK.NOT_TRN;
     1917    18457    6                  KV_RCVSSN.PRVPTR$->KV$PTR.INPCNDPND_MSK.NOT_TRN = '0'B;
     1918    18458    6                  CALL KVV$VDIINT (KV_VDH_DAT);
     1919    18459    6               END;
     1920    18460    5               KV_RCVSSN.PRVPTR$ = ADDR(NIL);
     1921    18461    5            END;
     1922    18462        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RQSMRK (request marker)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:75   
             18480    5   /***************************************************************************
             18481    5    *                                                                         *
             18482    5    *               Presentation message:  RQSMRK (request marker)            *
             18483    5    *                                                                         *
             18484    5    ***************************************************************************/

     1923    18489    4         CASE %KV_VDO_FNC_RQSMRK;
     1924    18490        /*
     1925    18491        We don't do anything here; the common code for handling the receipt
     1926    18492        of a request for a  marker at the bottom of this case statement will do the work.
     1927    18493        */
     1928    18494        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RQSPRM (request parameters)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:76   
             18512    4   /***************************************************************************
             18513    4    *                                                                         *
             18514    4    *             Presentation message:  RQSPRM (request parameters)          *
             18515    4    *                                                                         *
             18516    4    ***************************************************************************/

     1929    18521    4         CASE %KV_VDO_FNC_RQSPRM;
     1930    18522    4            IF KV_SSN.WATINPDLTMRK
     1931    18523        /*
     1932    18524        We're waiting for a marker to come back for deleting requests.
     1933    18525        Ignore this request.
     1934    18526        */
     1935    18527    4            THEN EXIT Y$DO_CASE_FNC;
     1936    18528        /*N* IF INPDLTMRK KILLS GETPRM, SENDING MRK SHOULD PURGE PRM BFR CHN. */
     1937    18529    5            IF KV_SSN.SNDPRMBFRHED$ = ADDR(NIL) THEN DO;
     1938    18530        /*
     1939    18531        There are no parameter buffers waiting to be sent.
     1940    18532        */
     1941    18533    5               KV@VDH_GETPRM = KV_VDH_GETPRM;
     1942    18534    5               KV@VDH_GETPRM.PRMID = KV_VDO_RQSPRM.PRMID;
     1943    18535    5               KV@VDH_GETPRM.MAXBYTSIZ = KV_VDO_RQSPRM.MAXNMBBYT;
     1944    18536    5               CALL KVP$GETPRM(KV@VDH_GETPRM);
     1945    18537    5               KV_SSN.SNDPRMBFRHED$ = KV@VDH_GETPRM.BFRHED$;
     1946    18538    5               KV_RCVSSN.BFRLMTEXC = KV@VDH_GETPRM.BFRLMTEXC;
     1947    18539    5            END; ELSE DO;                  /* ELSE IF SNDPRMBFRHED$ = NIL        */
     1948    18540        /*
     1949    18541        We already have parameter buffers waiting to be sent.
     1950    18542        */
     1951    18543    5               KV_RCVSSN.BFRLMTEXC = '0'B;
     1952    18544    5            END;                           /* END IF SNDPRMBFRHED$ = NIL         */
     1953    18545    4            KV@SND_PRM = KV_SND_PRM;
     1954    18546    5            IF KV_SSN.SNDPRMBFRHED$ ~= ADDR(NIL) THEN DO;
     1955    18547        /*
     1956    18548        There are parameter buffers waiting to be sent.
     1957    18549        */
     1958    18550    5               KV@SND_PRM.DAT__ = KV_SSN.SNDPRMBFRHED$->KV$GETPRM.DAT__;
     1959    18551    6               IF KV_RCVSSN.BFRLMTEXC THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:77   
     1960    18552        /*
     1961    18553        We had a buffer limit exceeded on this buffer.
     1962    18554        The requested structure wouldn't
     1963    18555        fit into a bufer of the maximum size specified.
     1964    18556        */
     1965    18557    6                  KV@SND_PRM.CMPCOD = %KV_CMPCOD_BFRLMTEXC;
     1966    18558    6               END;                        /* END IF BFRLMTEXC                   */
     1967    18559    5               KV_SSN.SNDPRMBFRHED$ = KV_SSN.SNDPRMBFRHED$->KV$GETPRM.LNK$;
     1968    18560    6               IF KV_SSN.SNDPRMBFRHED$ ~= ADDR(NIL) THEN DO;
     1969    18561        /*
     1970    18562        This isn't the last parameter buffer in the chain, so tell
     1971    18563        the other end we're continuing.
     1972    18564        */
     1973    18565    6                  KV@SND_PRM.CTN = '1'B;
     1974    18566    6               END;                        /* END IF SNDPRMBFRHED$ ~= NIL        */
     1975    18567    5            END; ELSE DO;                  /* ELSE IF SNDPRMBFRHED$ ~= NIL       */
     1976    18568        /*
     1977    18569        There are no parameter buffers waiting to be sent.
     1978    18570        Assume KVP$GETPRM couldn't get memory.
     1979    18571        */
     1980    18572    5               KV@SND_PRM.CMPCOD = %KV_CMPCOD_BFRLMTEXC;
     1981    18573    5            END;                           /* END IF SNDPRMBFRHED$ ~= NIL        */
     1982    18574    5            IF KV_RCVVDO.VDOVLP_CG_MSGID$ ~= ADDR(NIL) THEN DO;
     1983    18575        /*
     1984    18576        Return the com-group MSGID VDOVLP, indicating that the
     1985    18577        VDOVLP is now a response.
     1986    18578        */
     1987    18579    5               KV_VDOVLP_CG_MSGID.RSP = '1'B;
     1988    18580    5               KV@SND_PRM.VDOVLP.CG_MSGID$ = ADDR(KV_VDOVLP_CG_MSGID);
     1989    18581    5            END;                           /* END IF VDOVLP_CG_MSGID$ ~= NIL     */
     1990    18582    5            IF KV_RCVVDO.VDOVLP_CG_MSGTYP$ ~= ADDR(NIL) THEN DO;
     1991    18583        /*
     1992    18584        Return the com-group MSGTYP VDOVLP, indicating that the
     1993    18585        VDOVLP is now a response.
     1994    18586        */
     1995    18587    5               KV_VDOVLP_CG_MSGTYP.RSP = '1'B;
     1996    18588    5               KV@SND_PRM.VDOVLP.CG_MSGTYP$ = ADDR(KV_VDOVLP_CG_MSGTYP);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:78   
     1997    18589    5            END;                           /* END IF VDOVLP_CG_MSGTYP$ ~= NIL    */
     1998    18590    5            IF KV_RCVVDO.VDOVLP_CG_STA$ ~= ADDR(NIL) THEN DO;
     1999    18591        /*
     2000    18592        Return the com-group STA VDOVLP, indicating that the
     2001    18593        VDOVLP is now a response.
     2002    18594        */
     2003    18595    5               KV_VDOVLP_CG_STA.RSP = '1'B;
     2004    18596    5               KV@SND_PRM.VDOVLP.CG_STA$ = ADDR(KV_VDOVLP_CG_STA);
     2005    18597    5            END;                           /* END IF VDOVLP_CG_STA$ ~= NIL       */
     2006    18598    4            CALL KVM$SND(KV@SND_PRM);
     2007    18599        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  SLCFLD (select field)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:79   
             18617    4   /***************************************************************************
             18618    4    *                                                                         *
             18619    4    *                Presentation message:  SLCFLD (select field)             *
             18620    4    *                                                                         *
             18621    4    ***************************************************************************/

     2008    18626    4         CASE %KV_VDO_FNC_SLCFLD;
     2009    18627
     2010    18628    4            IF KV_RCVVDO.VDOVLP_KEY$=ADDR(NIL)
     2011    18629    5              AND KV_RCVVDO.VDOVLP_FLDID$=ADDR(NIL) THEN DO;
     2012    18630    5               %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ALL;
     2013    18631
     2014    18632        /* There is a null key on this SLCFLD function, so it is of the 'all'
     2015    18633           type.                                                                      */
     2016    18634
     2017    18635    5            END;
     2018    18636    4            %KV_LINLST.LSTOPRSLC = '1'B;
     2019    18637        %KV$BOX(PAGE = YES, TITLE =
             18637            "Presentation message:  SLCGRPRND (select graphic rendition)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:80   
             18655    4   /***************************************************************************
             18656    4    *                                                                         *
             18657    4    *        Presentation message:  SLCGRPRND (select graphic rendition)      *
             18658    4    *                                                                         *
             18659    4    ***************************************************************************/

     2020    18664    4         CASE %KV_VDO_FNC_SLCGRPRND;
     2021    18665    4            CALL Y$FRMVDO;
     2022    18666        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  SLCQLF (select qualification)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:81   
             18684    4   /***************************************************************************
             18685    4    *                                                                         *
             18686    4    *            Presentation message:  SLCQLF (select qualification)         *
             18687    4    *                                                                         *
             18688    4    ***************************************************************************/

     2023    18693    4         CASE %KV_VDO_FNC_SLCQLF;
     2024    18694    4            CALL Y$FRMVDO;
     2025    18695        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  STT (Status)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:82   
             18713    4   /***************************************************************************
             18714    4    *                                                                         *
             18715    4    *                    Presentation message:  STT (Status)                  *
             18716    4    *                                                                         *
             18717    4    ***************************************************************************/

     2026    18722    4         CASE %KV_VDO_FNC_STT;
     2027    18723        /*
     2028    18724        Status.  We requested the other end's status (e.g., ESC-Q).
     2029    18725        */
     2030    18726    4            KV_SSN.STTRQSENB = '1'B;
     2031    18727    5            IF KV_RCVVDO.OTPLCL.BFR_.ADR$ ~= ADDR(NIL) THEN DO;
     2032    18728        /*
     2033    18729        There was data passed in this message.
     2034    18730        */
     2035    18731    6               IF %KV_VDI.USEOTPBFR THEN DO;
     2036    18732
     2037    18733        /* We're to use the VDH output buffering mechanism (KV$VDI.OTPBFR_). */
     2038    18734
     2039    18735    7                  IF %KV_MVD.ORG>=%KV#VD_ORG_X364 THEN DO;
     2040    18736    7                     KV_RCVVDO.VDP_VDO.SETSTR = '1'B;
     2041    18737    7                     KV_RCVVDO.VDP_VDO.PSTSTR = '1'B;
     2042    18738    7                     KV_RCVVDO.VDP_VDO.RSTSTR = '1'B;
     2043    18739    7                     CALL KVS$SETSTR;
     2044    18740    7                  END;
     2045    18741    6                  IF (%KV_VDI.INPUNT = %KV_INPUNT_BLK)
     2046    18742    7                    AND %KV_VDI.USRRQSDAT.RED THEN DO;
     2047    18743        /*
     2048    18744        This is a block-mode device with a read outstanding.  Position
     2049    18745        to just beyond the hi non-blank position before outputting
     2050    18746        the text.
     2051    18747        */
     2052    18748    7                     CALL KVO$PSTAFTHI_NONBLNPHSPST;
     2053    18749    7                  END;                /* END IF INPUNT = BLK AND USRRQSDAT.RED   */
     2054    18750    6                  CALL KVO$OTP1_NONVRT(%ASCBIN('!'));
     2055    18751
     2056    18752        /* Call VDH output-local to process the text                               */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:83   
     2057    18753
     2058    18754    6                  KV_RCVVDO.OTPLCL.NONVRT = '1'B;
     2059    18755    6                  CALL KVO$OTPLCL (KV_RCVVDO.OTPLCL);
     2060    18756
     2061    18757    6                  CALL KVO$OTP1_NONVRT(%ASCBIN('!'));
     2062    18758    6                  IF (%KV_VDI.INPUNT = %KV_INPUNT_BLK)
     2063    18759    6                    AND %KV_VDI.USRRQSDAT.RED
     2064    18760    7                    AND (%KV_SRD.FLDEND_PST ~= 0) THEN DO;
     2065    18761        /*
     2066    18762        This is a block-mode input device, there is a read pending,
     2067    18763        and there is an input field declared.
     2068    18764        Position the cursor to the virtual column it belongs in.
     2069    18765        */
     2070    18766    7                     CALL KVO$PST(KV_VDH_PST_VRT);
     2071    18767    7                  END;                     /* END IF INPUNT = BLK ...            */
     2072    18768    6               END;                        /* END IF USEOTPBFR DO                */
     2073    18769    6               ELSE DO;
     2074    18770
     2075    18771        /*N* STTRSP VDO , but can't user OTPLCL                             */
     2076    18772
     2077    18773    6               END;                        /* END ELSE IF USEOTPBFR DO           */
     2078    18774    5            END;                           /* END IF KV_RCVVDO.DAT_ ~= NIL       */
     2079    18775        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  UPDRELDVC (update real device)")
             18775            ;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:84   
             18793    5   /***************************************************************************
             18794    5    *                                                                         *
             18795    5    *           Presentation message:  UPDRELDVC (update real device)         *
             18796    5    *                                                                         *
             18797    5    ***************************************************************************/

     2080    18802    4         CASE %KV_VDO_FNC_UPDRELDVC;
     2081    18803        /*N* CHECK */
     2082    18804
     2083    18805        /* Put the stuff on the screen (but not on paper).                            */
     2084    18806
     2085    18807    5            IF %KV_MVD.RETYPOVR THEN DO;
     2086    18808    5               IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN CALL KVF$UPDFRM_CRT;
     2087    18809    5               ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN CALL KVE$DSPUPD;
     2088    18810    5            END;                           /* IF                                 */
     2089    18811        %KV$BOX(PAGE = YES, TITLE = "End of presentation message loop");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:85   
             18829    5   /***************************************************************************
             18830    5    *                                                                         *
             18831    5    *                      End of presentation message loop                   *
             18832    5    *                                                                         *
             18833    5    ***************************************************************************/

     2090    18838    4         CASE (ELSE);
     2091    18839        /*
     2092    18840        We received a VDO we don't have a case statement for.
     2093    18841        */
     2094    18842        /*E* ERROR:         KVM-E$BADVDOFNCCOD-0
     2095    18843        *    MESSAGE:       Bad function code on KV$VDO
     2096    18844        *    DESCRIPTION:   VDH received a message containing a KV$VDO.FNC
     2097    18845        *                   that is illegal
     2098    18846        */
     2099    18847    4            CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_BADVDOFNCCOD, %KH_CHN);
     2100    18848    4            ALTRETURN;
     2101    18849    4         END;                              /* END DO CASE KV_VDO.FNC             */
     2102    18850        %EJECT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:86   
     2103    18851    4         IF KV_RCVVDO.VDOVLP_ENTSRD$ ~= ADDR(NIL) THEN DO;
     2104    18852        /*
     2105    18853        Process the enter-SRD string that was passed.
     2106    18854        */
     2107    18855    4            Y_VDH_SETPRM.SCP = %KV_SCP_SRD;
     2108    18856    4            Y_VDH_SETPRM.PRMID = %KV_PRMID_ENTSRDCHR;
     2109    18857    4            Y_VDH_SETPRM.VAL_.ADR$ = ADDR(KV_VDOVLP_ENTSRD);
     2110    18858    4            Y_VDH_SETPRM.VAL_.BYTX = LENGTHV(KV_VDOVLP);
     2111    18859    4            Y_VDH_SETPRM.VAL_.BYTSIZ = KV_VDOVLP_ENTSRD.BYTSIZ+1;
     2112    18860    4            CALL KVP$SETPRM(Y_VDH_SETPRM);
     2113    18861    4         END;                         /* END IF KV_RCVVDO.VDOVLP_ENTSRD$ ~= NIL  */
     2114    18862
     2115    18863    4         IF KV_RCVVDO.VDOVLP_MRK$ ~= ADDR(NIL) THEN DO;
     2116    18864        /*
     2117    18865        There was a KV$VDOVLP_MRK passed to us on this message.
     2118    18866        */
     2119    18867    5            IF KV_VDOVLP_MRK.RSP THEN DO;
     2120    18868        /*
     2121    18869        This marker is in response to a marker we sent.
     2122    18870        */
     2123    18871    6               IF KV_VDOVLP_MRK.MRKTYP=%KV_VDOMRKTYP_MRK THEN DO;
     2124    18872        /*
     2125    18873        This marker is in response to a marker request that we sent
     2126    18874        to delete data or requests possibly being sent from the other end.
     2127    18875        */
     2128    18876    7                  IF KV_VDOVLP_MRK.ID.UBIN_DBLBYT = KV_SSN.OTPDLTMRKNMB THEN DO;
     2129    18877        /*
     2130    18878        We're to no longer delete data coming to us from the other end.
     2131    18879        */
     2132    18880    7                     KV_SSN.WATOTPDLTMRK = '0'B;
     2133    18881    7                  END;                     /* END IF OTPDLTMRKNMB = ID           */
     2134    18882    7                  IF KV_VDOVLP_MRK.ID.UBIN_DBLBYT = KV_SSN.INPDLTMRKNMB THEN DO;
     2135    18883        /*
     2136    18884        We're to no longer delete requests coming to us from the other end.
     2137    18885        */
     2138    18886    7                     KV_SSN.WATINPDLTMRK = '0'B;
     2139    18887    7                  END;                     /* END IF INPDLTMRKNMB = ID           */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:87   
     2140    18888    6               END;                        /* END CASE MRKTYP                    */
     2141    18889    5            END;                           /* END IF KV_VDOVLP_MRK.RSP           */
     2142    18890    5            ELSE DO;
     2143    18891        /*
     2144    18892        The other end is requesting that we send back to it this marker.
     2145    18893        */
     2146    18894    6               DO CASE (KV_VDOVLP_MRK.MRKTYP);
     2147    18895    6               CASE %KV_VDOMRKTYP_ENDACK;
     2148    18896
     2149    18897        /* This write has end-to-end ACK set on it. We are to acknowledge
     2150    18898           the successful processing and receipt of the associated
     2151    18899           data by the VDH-user's object, distant end, etc.                 */
     2152    18900
     2153    18901    6                  IF %KV_MVD.ORG>=%KV#VD_ORG_FORM OR
     2154    18902    6                    (%KV_STR.ERR.COD ~= 0) OR
     2155    18903    7                    NOT KV_RCVVDO.VDP_VDO.RUTACK THEN DO;
     2156    18904
     2157    18905        /* We're to respond immediately with any error status we have.      */
     2158    18906
     2159    18907    7   SND_MRK:          ;
     2160    18908    7                     KV@SND_MRK = KV_SND_MRK;
     2161    18909    7                     KV@SND_MRK.VDOVLP.MRK$ = ADDR(KV@VDOVLP_MRK);
     2162    18910    7                     KV@VDOVLP_MRK = KV_VDOVLP_MRK;
     2163    18911    7                     KV@VDOVLP_MRK.RSP = '1'B;
     2164    18912    8                     IF %KV_STR.ERR.COD~=0 THEN DO;
     2165    18913    8                        KV@SND_MRK.VDOVLP.ERR$ = ADDR(Y_VDOVLP_ERR);
     2166    18914        /*N* MAKE  A TABLE   Y_VDOVLP_ERR.ERRCODE.MID = %KV_STR.ERR.VDOTYP; */
     2167    18915    8                        Y_VDOVLP_ERR.ERRCODE.ERR# = %KV_STR.ERR.COD;
     2168    18916    9                        IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN DO;
     2169    18917    9                           KV@SND_MRK.VDOVLP.FLDID$ = ADDR(Y_VDOVLP_FLDID);
     2170    18918    9                           Y_VDOVLP_FLDID.FLDID = %KV_LINLST.ERRFLDID;
     2171    18919    9                        END;
     2172    18920    8                     END;
     2173    18921    7                     KV@SND_MRK.VDOVLP.CG_MSGID$ = ADDR(KV_VDOVLP_CG_MSGID);
     2174    18922    7                     KV@SND_MRK.VDOVLP.CG_MSGTYP$ = ADDR(KV_VDOVLP_CG_MSGTYP);
     2175    18923    7                     KV@SND_MRK.VDOVLP.CG_STA$ = ADDR(KV_VDOVLP_CG_STA);
     2176    18924    7                     CALL KVM$SND(KV@SND_MRK);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:88   
     2177    18925    7                     %KV_STR.ERR = '0'B;
     2178    18926    7                  END;                     /* END IF ORG = FORM                  */
     2179    18927    7                  ELSE DO;
     2180    18928
     2181    18929        /* We're to pass an output marker thru the output data stream.
     2182    18930           Later, when the VDH user passes the output marker data back
     2183    18931           to us, we'll pass it on to the distant end.                      */
     2184    18932
     2185    18933    7                     Y_USR_OTPMRK_ACK.DAT.ID = KV_VDOVLP_MRK.ID;
     2186    18934    7                     CALL KVV$CALUSR (Y_USR_OTPMRK_ACK) ALTRET(SND_MRK);
     2187    18935    7                  END;                     /* END ELSE IF ORG = FORM...          */
     2188    18936    6               CASE %KV_VDOMRKTYP_LSTRCRID;
     2189    18937        /*
     2190    18938        We're to track this marker thru the VDH-user's output stream, and
     2191    18939        save the last of these markers that is successfully processed,
     2192    18940        e.g., the data preceeding it isn't deleted or lost.
     2193    18941        */
     2194    18942    6                  Y_USR_OTPMRK_SAVLSTRCRID.DAT.ID = KV_VDOVLP_MRK.ID;
     2195    18943    6                  CALL KVV$CALUSR (Y_USR_OTPMRK_SAVLSTRCRID);
     2196    18944    6               CASE %KV_VDOMRKTYP_MRK;
     2197    18945        /*
     2198    18946        We're to track this marker thru the VDH-user's output stream, and
     2199    18947        return the marker when either successfully processed or otherwise
     2200    18948        disposed of (e.g., the data preceeding it is deleted or lost).
     2201    18949        */
     2202    18950    6                  Y_USR_OTPMRK_MRK.DAT.ID = KV_VDOVLP_MRK.ID;
     2203    18951    6                  CALL KVV$CALUSR (Y_USR_OTPMRK_MRK) ALTRET(SND_MRK);
     2204    18952    6               CASE %KV_VDOMRKTYP_SNDLSTRCRID;
     2205    18953        /*
     2206    18954        We're to track this marker thru the VDH-user's output stream, and
     2207    18955        then (when it comes back to VDH) send the marker ID from the
     2208    18956        last OTPMRK returned that had a type of SAVLSTRCRID.
     2209    18957        */
     2210    18958    6                  CALL KVV$CALUSR (Y_USR_OTPMRK_SNDLSTRCRID) ALTRET(SND_MRK);
     2211    18959    6               END;                        /* END CASE MRKTYP                    */
     2212    18960    5            END;                           /* END ELSE IF KV_VDOVLP_MRK.RSP      */
     2213    18961    4         END;                              /* END IF KV_VDOVLP_MRK exists        */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:89   
     2214    18962
     2215    18963    4         IF KV_RCVVDO.PRVSTR$~=ADDR(NIL) THEN DO;
     2216    18964        /*
     2217    18965           We only changed the context to point here. Put it back.
     2218    18966        */
     2219    18967    4            KV_RCVVDO.VDP_VDO.SETSTR = '0'B;
     2220    18968    4            CALL KVS$SETSTR;
     2221    18969    4         END;
     2222    18970    3         KV_RCVVDO$ = Y@NXTVDOVLP$;
     2223    18971    3      END;                                 /* END IF KV_RCVVDO$ ~= Y@SIDU_END$   */
     2224    18972    2   END Y$RCVVDO;
     2225    18973        %KV$BOX(PAGE=YES, TITLE= "Set KV$STR.ERR if VDO wants an ACK");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:90   
             18991    2   /***************************************************************************
             18992    2    *                                                                         *
             18993    2    *                     Set KV$STR.ERR if VDO wants an ACK                  *
             18994    2    *                                                                         *
             18995    2    ***************************************************************************/

     2226    19000    1   Y$SETERRCOD: PROC(ERRCOD);
     2227    19001
     2228    19002    2   DCL ERRCOD UBIN;
     2229    19003
     2230    19004    2      IF KV_RCVVDO.VDOVLP_MRK$~=ADDR(NIL)
     2231    19005    2      THEN IF KV_VDOVLP_MRK.MRKTYP=%KV_VDOMRKTYP_ENDACK
     2232    19006    2      THEN %KV_STR.ERR.COD = ERRCOD;
     2233    19007    2      RETURN;
     2234    19008    2   END Y$SETERRCOD;
     2235    19009        %KV$BOX(PAGE = YES, TITLE = "Clean up session");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:91   
             19027    2   /***************************************************************************
             19028    2    *                                                                         *
             19029    2    *                              Clean up session                           *
             19030    2    *                                                                         *
             19031    2    ***************************************************************************/

     2236    19036        /*
     2237    19037        Clean-up session.  We're done processing this session.
     2238    19038        */
     2239    19039    1   Y$CLNUP_SSN: PROC;
     2240    19040    3      IF KV_RCVSSN$~=ADDR(NIL) THEN DO;
     2241    19041        /*
     2242    19042        There is a session to be cleaned up.
     2243    19043        */
     2244    19044    3         IF %KV_VDI.RQSOTP AND KV_SSN.SSNCNCID~=0
     2245    19045    4           AND KV_SSN.RCVFLWCTRCRDINC>=%KV_VDI.RCVFLWCTRMINCRDINC THEN DO;
     2246    19046
     2247    19047        /* The user is requesting output. See if we should send flow        */
     2248    19048        /* control information to the other end.                            */
     2249    19049
     2250    19050    4            CALL KVM$SND (KV_SND_RQSDAT_GNR);
     2251    19051    4         END;                              /* END IF RQSOTP                      */
     2252    19052    4         IF KV_RCVSSN.PRVSTR$~=ADDR(NIL) OR KV_RCVSSN.PRVPTR$~=ADDR(NIL) THEN DO;
     2253    19053
     2254    19054        /* We're to set the previous stream as the current stream, as the   */
     2255    19055        /* request we just processed is somewhat asynchronous, and we don't */
     2256    19056        /* want to disturb what was going on.                               */
     2257    19057
     2258    19058    4            KV_RCVVDO.VDP_VDO.SETSTR = '0'B;
     2259    19059    4            KV_RCVVDO.PRVSTR$ = ADDR(NIL);
     2260    19060    4            CALL KVS$SETSTR;
     2261    19061    4         END;                              /* END IF SETPRVSTR                   */
     2262    19062    3         KV$PTR$ = %KV_VDI.ASNINPPTR$;
     2263    19063    3   Y$CHKFORDFR:
     2264    19064    4         DO WHILE ('1'B);                  /* LOOP START                         */
     2265    19065
     2266    19066        /* This loop is re-iterated if we find a %KV_VDI.DFR bit on          */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:92   
     2267    19067        /* at the bottom when we're about to reset %KV_VDI.BSY.              */
     2268    19068        /* In that case, we have to process the defer bits again.           */
     2269    19069
     2270    19070    5            IF %KV_VDI.USREVTENB(%KV_USR_EVT_ID_SCH) AND %KV_VDI.DFR THEN DO;
     2271    19071
     2272    19072        /* Do any necessary VDH-user scheduling (deferred execution, etc).  */
     2273    19073
     2274    19074    5               IF %KV_SSN.SSNCNCID=0 AND NOT %KV_SSN.RLSSSN THEN EXIT;
     2275    19075    5               KV@USR_EVT = KV_USR_EVT;
     2276    19076    5               KV@USR_EVT.ID = %KV_USR_EVT_ID_SCH;
     2277    19077
     2278    19078        /* This loop is traversed for each scheduling bit found set.        */
     2279    19079
     2280    19080    6               DO KV@USR_EVT.PRM = 0 TO 4;
     2281    19081
     2282    19082    7                  IF %KV_VDI.DFR.USR(KV@USR_EVT.PRM) THEN DO;
     2283    19083
     2284    19084        /* We found a set bit. Call the user with it.                       */
     2285    19085
     2286    19086    7                     %KV_VDI.DFR.USR(KV@USR_EVT.PRM) = '0'B;
     2287    19087    7                     CALL KVV$CALUSR_EVT (KV@USR_EVT);
     2288    19088    7                  END;                     /* END IF DFR.USR(fPT.PRM)            */
     2289    19089    6               END;                        /* END PRM=0 TO 4                     */
     2290    19090    5            END;                      /* END IF USREVTENB(EVT_ID_SCH) AND DFR    */
     2291    19091
     2292    19092        /* There is no message Q, so tell the VDH-user we're exiting.       */
     2293    19093        /* The user then does its cleanup, if any, and we all exit together. */
     2294    19094
     2295    19095        /*N* FLAG SHOULD INCLUDE MRD-Q'd MESSAGES                           */
     2296    19096                 %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_VDHEXT);
             19108        /* !C! */
             19109    5           IF KV_SSN.VDI$->KV$VDI.USREVTENB (14) THEN DO;
             19116    5              CALL KVV$CALUSR_EVT (14);
             19119    5              END;
             19121        /* ! ! */
     2297    19123    5            IF KV_SSN.RLSSSN THEN DO;
     2298    19124
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:93   
     2299    19125        /* WE ARE TO RELEASE THIS SESSION ONCE QUIESCENCE IS ACHIEVED.      */
     2300    19126
     2301    19127    6               IF %KV_VDI.SSNCNT=1 THEN DO;
     2302    19128        /*
     2303    19129
     2304    19130        This is the last session in this instance of VDI.
     2305    19131        */
     2306    19132
     2307    19133    7                  IF NOT %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) THEN DO;
     2308    19134
     2309    19135        /* We aren't waiting for the VDH-user to report %KV_VDH_EVT_ID_RLSVDI.       */
     2310    19136
     2311    19137        /*
     2312    19138           Turn the terminal on again, since the next read wont see this VDI.
     2313    19139        */
     2314    19140    7                     IF NOT %KV_VDI.PHSDSC AND NOT %KV_VDI.INTPHSDSC
     2315    19141    8                       AND %KV_VDI.FULLDUPLEXPAPERTAPE THEN DO;
     2316    19142    8                        CALL KVO$OTP1_NONVRT (17);
     2317    19143    8                        %KV_VDI.FULLDUPLEXPAPERTAPE = '0'B;
     2318    19144    8                        GOTO Y$CHKFORDFR;  /* Gotta VDHEXT again.                */
     2319    19145    8                     END;
     2320    19146    7                     IF NOT %KV_MRD.CALUSR_PST AND NOT %KV_VDI.PHSDSC
     2321    19147    7                     THEN IF %KV_ERD.RGNSCR
     2322    19148    8                     THEN IF %KV_MRD.USRCNT>1 OR %KV_SRD.BRDEXS THEN DO;
     2323    19149    8                        IF KV_SSN.LSTPRMID=1 THEN EXIT;
     2324    19150    8                        KV_SSN.LSTPRMID = 1;
     2325    19151    8                        CALL KVO$OTPLCL (Y_OTPLCL_RSTRGNSCR);
     2326    19152    8                        GOTO Y$CHKFORDFR;  /* Gotta VDHEXT again.                */
     2327    19153    8                     END;
     2328    19154    7                     CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_RLSVDI)
     2329    19155    8                     WHENRETURN DO;
     2330    19156
     2331    19157        /* The VDH-user is ready to complete the disconnect.                */
     2332    19158
     2333    19159    8                        KV_RCVSSN$ = ADDR(NIL);
     2334    19160    8                        CALL KVC$RLSSSN;
     2335    19161    8                        CALL KVC$RLSVDI;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:94   
     2336    19162    8                        EXIT Y$CHKFORDFR;
     2337    19163    8                     END;
     2338    19164    8                     WHENALTRETURN DO;
     2339    19165
     2340    19166        /* The VDH-user isn't ready to complete the disconnect.             */
     2341    19167
     2342    19168    8                        %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) = '1'B;
     2343    19169    8                     END;
     2344    19170    7                  END;                     /* END IF KV@VDH_EVT_ENB(RLSVDI)      */
     2345    19171    6               END;                        /* END IF KV$SSN.LNK$ = NIL           */
     2346    19172    6               ELSE DO;
     2347    19173
     2348    19174        /* This is not the last session for this instance of VDI.           */
     2349    19175
     2350    19176    6                  KV$PTR$ = KV_SSN.SNCPTR$;
     2351    19177    6                  CALL KVC$RLSSSN;
     2352    19178        /*
     2353    19179           We just changed to a different session. Run through at least one more
     2354    19180           time in case there's some output needing to go.
     2355    19181        */
     2356    19182    6                  KV_RCVSSN$ = KV$PTR.SSN$;
     2357    19183    6                  GOTO Y$CHKFORDFR;
     2358    19184    6               END;                        /* END ELSE IF KV$SSN.LNK = NIL       */
     2359    19185    5            END;                           /* END IF RLSSSN                      */
     2360    19186
     2361    19187    4            Y@INHLVL = KH_INHLVL;
     2362    19188    4            CALL KHI$DISABLE(Y@INHLVL);
     2363    19189    4            IF %KV_SSN.SSNCNCID=0 AND NOT %KV_SSN.RLSSSN OR NOT %KV_VDI.DFR
     2364    19190    5              OR NOT %KV_VDI.USREVTENB(%KV_USR_EVT_ID_SCH) THEN DO;
     2365    19191
     2366    19192        /* Either there is no deferred processing to do, or the user        */
     2367    19193        /* isn't currently allowing the reporting of deferred processing    */
     2368    19194        /* requests. No need to check for another request to do             */
     2369    19195        /* deferred processing since we last checked the defer bits above.  */
     2370    19196
     2371    19197    5               IF %KV_SSN.SSNCNCID~=0 OR %KV_SSN.RLSSSN THEN %KV_VDI.BSY = '0'B;
     2372    19198    5               KV_RCVSSN$ = ADDR(NIL);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:95   
     2373    19199    5               CALL KHI$ENABLE;
     2374    19200    5               EXIT Y$CHKFORDFR;
     2375    19201    5            END;                           /* END IF KV$VDI.DFR ...              */
     2376    19202    4            CALL KHI$ENABLE;
     2377    19203    4         END Y$CHKFORDFR;
     2378    19204    3         KV_RCVSSN = Y_RCVSSN;
     2379    19205    3      END;                                 /* END IF KV_RCVSSN$~=NIL             */
     2380    19206    2   END Y$CLNUP_SSN;
     2381    19207        %KV$BOX(PAGE = YES, TITLE = "Do VDH tracing");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:96   
             19225    2   /***************************************************************************
             19226    2    *                                                                         *
             19227    2    *                               Do VDH tracing                            *
             19228    2    *                                                                         *
             19229    2    ***************************************************************************/

     2382    19234    1   Y$TRC: PROC;
     2383    19235    3      IF Y@TRCENT = (Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) & %KV#TRCENT_MSK) THEN DO;
     2384    19236        /*
     2385    19237        The last trace entry is identical to the entry we're about
     2386    19238        to put in, with the possible exception of the multiple
     2387    19239        entry bit.  Just set the multiple entry bit, and don't add
     2388    19240        another entry.
     2389    19241        */
     2390    19242    3         Y$TRCBFR.TRCENT.MLT(Y$TRCBFR.TRCENTX) = '1'B;
     2391    19243    3      END; ELSE DO;
     2392    19244        /*
     2393    19245        The last entry isn't identical to the entry we're about to
     2394    19246        add.  Add another entry, possibly wrapping the index first.
     2395    19247        */
     2396    19248    3         Y$TRCBFR.TRCENTX = Y$TRCBFR.TRCENTX + 1;
     2397    19249    3         IF Y$TRCBFR.TRCENTX > Y$TRCBFR.MAXTRCENTX THEN
     2398    19250    3         Y$TRCBFR.TRCENTX = 0;
     2399    19251
     2400    19252    3         Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) = Y@TRCENT;
     2401    19253    3      END;                                 /* END ELSE IF TRCENTX = MAXTRCENTX   */
     2402    19254    2   END Y$TRC;
     2403    19255        %KV$BOX(PAGE = YES, TITLE = "Move data to KV$FLD");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:97   
             19273    2   /***************************************************************************
             19274    2    *                                                                         *
             19275    2    *                            Move data to KV$FLD                          *
             19276    2    *                                                                         *
             19277    2    ***************************************************************************/

     2404    19282    1   Y$MOVDATTO_FLD: PROC;
     2405    19283
     2406    19284    2      Y@VFC = 0;
     2407    19285        /* If there is any text, move it in                                           */
     2408    19286
     2409    19287    3      IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;
     2410    19288    3         IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ>%KV_FLD.WDT
     2411    19289    3         THEN KV_RCVVDO.OTPLCL.BFR_.BYTSIZ = %KV_FLD.WDT;
     2412    19290    3         Y@VFC = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     2413    19291    3      END;                                 /* IF                                 */
     2414    19292    3      IF %KV_FLD.TXTSIZ>0 OR Y@VFC>0 THEN DO;
     2415    19293        /*
     2416    19294           Only redisplay the field if it really changed.
     2417    19295        */
     2418    19296    3         IF %KV_FLD.TXTSIZ>0 AND Y@VFC>0
     2419    19297    3         THEN IF ADDR(%KV_FLD)->Y$FLD_TXT.TXTCHR=Y$TXTCHR THEN EXIT;
     2420    19298    3         ADDR(%KV_FLD)->Y$FLD_TXT.TXTCHR = Y$TXTCHR;
     2421    19299    3         IF %KV_FLD.GRPRND&%(G#GRPRND_RVRVID|G#GRPRND_UNDSCR)
     2422    19300    3           OR %KV_FLD.TXTSIZ>0 OR Y$TXTCHR~=' '
     2423    19301    3         THEN %KV_FLD.UPD.TXT = '1'B;
     2424    19302    3      END;
     2425    19303    2      %KV_FLD.TXTSIZ = Y@VFC;
     2426    19304    2   END Y$MOVDATTO_FLD;
     2427    19305        %KV$BOX(PAGE = YES, TITLE = "Process KEY for FORMs virtual device");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:98   
             19323    2   /***************************************************************************
             19324    2    *                                                                         *
             19325    2    *                    Process KEY for FORMs virtual device                 *
             19326    2    *                                                                         *
             19327    2    ***************************************************************************/

     2428    19332    1   Y$SLCFLD_KEY: PROC ALTRET;
     2429    19333        /*
     2430    19334        Select the field specified by the KEY.
     2431    19335        If the last VDO was a SLCFLD, all currently selected fields remain
     2432    19336        selected, and the field specified by KEY is added to the list of
     2433    19337        selected fields.
     2434    19338        If the last VDO wasn't a SLCFLD, all fields are un-selected before
     2435    19339        the field specified by KEY is selected.
     2436    19340        */
     2437    19341    2      KV$PTR.VRTLIN = Y$VDOVLP_KEY.KEY(0);
     2438    19342    2      KV$PTR.VRTCLM = Y$VDOVLP_KEY.KEY(1);
     2439    19343
     2440    19344    2   Y$SLCFLD_HVPS: ENTRY ALTRET;
     2441    19345        /*
     2442    19346        Entry for HVPS VDO, which contains line and column.
     2443    19347        */
     2444    19348    2      CALL KVF$FNDFLD;
     2445    19349    2      GOTO FLD_FND;
     2446    19350
     2447    19351    2   Y$SLCFLD_FLDID: ENTRY ALTRET;
     2448    19352        /*
     2449    19353        Entry to select the field by FLDID.
     2450    19354        */
     2451    19355    2      CALL KVF$FNDFLDID (KV_VDOVLP_FLDID.FLDID);
     2452    19356    2   FLD_FND:;
     2453    19357
     2454    19358        /* If the last function was not of the 'select' type, reset the selected
     2455    19359           status of all fields, before we begin.                                     */
     2456    19360
     2457    19361    3      IF NOT %KV_LINLST.LSTOPRSLC THEN DO;
     2458    19362
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:99   
     2459    19363        /* If only one field is selected, zap it                                      */
     2460    19364
     2461    19365    4         IF (%KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ONE) THEN DO;
     2462    19366    4            PINCRW(%KV_LINLST.ONEFLDLIN$->KV$LIN.FLDLST$,
     2463    19367    4              %KV_LINLST.ONEFLDWRDX)->KV$FLD.SLC = '0'B;
     2464    19368
     2465    19369        /* If all fields are selected or an unknown number of fields is selected
     2466    19370           we have to go through and reset the SLC bit of each selected field.
     2467    19371           this must be done to insure we dont leave any stray SLC bits set.          */
     2468    19372
     2469    19373    4         END;
     2470    19374    4         ELSE IF (%KV_LINLST.SLCFLDSTT ~= %KV_LINLST_SLCFLDSTT_NON) THEN DO;
     2471    19375    4            CALL KVF$ALLFLD_RSTSLC;
     2472    19376    4         END;                              /* IF                                 */
     2473    19377
     2474    19378        /* Set selected status to none                                                */
     2475    19379
     2476    19380    3         %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;
     2477    19381    3      END;                                 /* IF                                 */
     2478    19382
     2479    19383    3      IF KV$PTR.STT~=%KV_PTR_STT_IN_FLDCLM1 THEN DO;
     2480    19384    3         IF KV$PTR.STT=%KV_PTR_STT_ILGLIN
     2481    19385    4           OR KV$PTR.STT=%KV_PTR_STT_ILGCLM THEN DO;
     2482    19386                 %KV_VDOERR (COD = %E$ILGFLDPST,
     2483    19387                 VDOFNC = %KV_VDO_FNC_SLCFLD);
     2484    19403    4         END; ELSE DO;
     2485    19404        /*E* ERROR: KV-E$NO_FLD-E
     2486    19405             MESSAGE:Field has not been declared.
     2487    19406        */
     2488    19407                 %KV_VDOERR (COD = %E$NO_FLD,
     2489    19408                 VDOFNC = %KV_VDO_FNC_HVPS);
     2490    19424    4         END;
     2491    19425    3         ALTRETURN;
     2492    19426    3      END;                                 /* IF                                 */
     2493    19427
     2494    19428        /* Setup new select status                                                    */
     2495    19429    2      %KV_FLD.SLC = '1'B;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:100  
     2496    19430
     2497    19431        /* If no fields are selected, we now have one                                 */
     2498    19432
     2499    19433    3      IF (%KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON) THEN DO;
     2500    19434    3         %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ONE;
     2501    19435    3         %KV_LINLST.ONEFLDWRDX = KV$PTR.FLDWRDX;
     2502    19436    3         %KV_LINLST.ONEFLDLIN$ = KV$PTR.LIN$;
     2503    19437
     2504    19438        /* If one field was selected, it goes unknown (we cleared the one field
     2505    19439           select status above                                                        */
     2506    19440
     2507    19441    3      END;
     2508    19442    3      ELSE IF (%KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ONE) THEN DO;
     2509    19443    3         %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_UN_KNW;
     2510    19444
     2511    19445        /* Otherwise, if the old select status was unknown or all, it stays
     2512    19446           just that way                                                              */
     2513    19447
     2514    19448    3      END;                                 /* IF                                 */
     2515    19449    2   END Y$SLCFLD_KEY;
     2516    19450        %KV$BOX(PAGE = YES, TITLE = "ERS, RLSFLD, SLCQLF, SLCGRPRND for FORM VD");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:101  
             19468    2   /***************************************************************************
             19469    2    *                                                                         *
             19470    2    *                 ERS, RLSFLD, SLCQLF, SLCGRPRND for FORM VD              *
             19471    2    *                                                                         *
             19472    2    ***************************************************************************/

     2517    19477    1   Y$FRMVDO: PROC;
     2518    19478        /* If no fields are selected, report an error and exit                        */
     2519    19479
     2520    19480    2      KV@PTR.LINLST$ = KV$PTR.LINLST$;
     2521    19481    2      KV@PTR.FLDWRDX = 0;
     2522    19482        %EQU Y_LINLST=CHARTEXT('KV@PTR.LINLST$->KV$LINLST');
     2523    19483    3      IF (%Y_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON) THEN DO;
     2524    19484              %KV_VDOERR (COD = %E$NO_FLDSLC,
     2525    19485              VDOFNC = KV_VDO.FNC);
     2526    19501    3         RETURN;
     2527    19502    3      END;                                 /* IF                                 */
     2528    19503    2      %Y_LINLST.LSTOPRSLC = '0'B;
     2529    19504
     2530    19505        /* Init KV@PTR.FLDWRDX to start the field scan
             19505              */
     2531    19506
     2532    19507    3      DO WHILE '1'B;
     2533    19508
     2534    19509    3         IF %Y_LINLST.SLCFLDSTT~=%KV_LINLST_SLCFLDSTT_ONE
     2535    19510    3         THEN CALL KVF$NXTSLCFLD(KV@PTR)
     2536    19511    4         WHENRETURN DO;
     2537    19512    4            Y@TMP$ = KV@PTR.FLD$;
     2538    19513    4         END;
     2539    19514    4         WHENALTRETURN DO; RETURN; END;
     2540    19515
     2541    19516        /* Otherwise this is a one time trip. Build a pointer to the single
     2542    19517         field in KV@PTR.FLD$
             19517         */
     2543    19518
     2544    19519    3         ELSE IF KV@PTR.FLDWRDX~=0 THEN RETURN;
     2545    19520    4         ELSE DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:102  
     2546    19521    4            KV@PTR.FLDWRDX = %Y_LINLST.ONEFLDWRDX;
     2547    19522    4            KV@PTR.LIN$ = %Y_LINLST.ONEFLDLIN$;
     2548    19523    4            Y@TMP$ = PINCRW(KV@PTR.LIN$->KV$LIN.FLDLST$, KV@PTR.FLDWRDX);
     2549    19524    4         END;                              /* IF                                 */
     2550    19525
     2551    19526        /* Separate out the processing of the functions                         */
     2552    19527
     2553    19528    4         DO CASE( KV_VDO.FNC );
     2554    19529
     2555    19530        /* RLSFLD function                                                            */
     2556    19531
     2557    19532    4         CASE %KV_VDO_FNC_RLSFLD, %KV_VDO_FNC_CLSSTR;
     2558    19533
     2559    19534        /* If all fields have been selected, deleting becomes a simple case
     2560    19535           of resetting LSTENTWRDX for all lines, since we dont give back             */
     2561    19536
     2562    19537    4            IF %Y_LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ALL
     2563    19538    4              AND (%KV_SRD.LNG+5>=%KV_MRD.LNG OR NOT %Y_LINLST.FRMDSP
     2564    19539    5   /*N* eh?   OR %KV_SRD.FSTDLTFLD */ OR %KV_MRD.DCLATRWHNOTP) THEN DO;
     2565    19540    5               Y@TMPWRD1 = SIZEW(KV$LINLST);
     2566    19541    6               DO UNTIL(Y@TMPWRD1 > %Y_LINLST.LSTENTWRDX);
     2567    19542    6                  Y@TMP$ = PINCRW(KV@PTR.LINLST$, Y@TMPWRD1);
     2568    19543    6                  Y@TMP$->KV$LIN.FRMDSP = '0'B;
     2569    19544    6                  Y@TMP$->KV$LIN.UPDFLDCNT = 0;
     2570    19545    7                  IF (Y@TMP$->KV$LIN.FLDLST$ ~= ADDR(NIL)) THEN DO;
     2571    19546    7                     Y@TMP$->KV$LIN.FLDLST$->KV$FLDLST.LSTENTWRDX = 0;
     2572    19547    7                     Y@TMP$->KV$LIN.FLDLST$->KV$FLDLST.ATRCNT = 0;
     2573    19548    7                  END;                     /* IF                                 */
     2574    19549    6                  Y@TMPWRD1 = Y@TMPWRD1 + SIZEW(KV$LIN);
     2575    19550    6               END;                        /* LOOP                               */
     2576    19551
     2577    19552        /* Call the RDH to zap all the attributes on the given device.                */
     2578    19553        /*n* for now, the RDH will look at this bit and if set, it will
     2579    19554             clear the entire screen and zap all the attributes. Eventually
     2580    19555             the RDH will only zap the attributes in the described area. This
     2581    19556             needs to work for multiple mvd's.                                        */
     2582    19557
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:103  
     2583    19558    5               IF %KV_MRD.DCLATRWHNOTP AND %KV_MRD.DVCATR
     2584    19559    5               THEN CALL KVV$CALUSR (KV_USR_SETATR);
     2585    19560    5               IF %Y_LINLST.FRMDSP
     2586    19561    5               THEN IF %KV_SRD.LNG+5>=%KV_MRD.LNG
     2587    19562    5               THEN CALL KVO$ERSMRD;
     2588    19563    5               ELSE CALL KVO$ERSSRD;
     2589    19564    5               %Y_LINLST.FRMDSP = '0'B;
     2590    19565    5               %Y_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;
     2591    19566    5               %KV_SRD.NXTNONBLNLIN = 255;
     2592    19567    5               RETURN;
     2593    19568
     2594    19569        /* Otherwise, we have a single field to zap, setup KV$PTR to point to
     2595    19570           it and call the delete routine                                             */
     2596    19571
     2597    19572    5            END; ELSE DO;
     2598    19573    5               Y@TMP$->KV$FLD.QLF = '0'B;
     2599    19574    5               Y@TMP$->KV$FLD.GRPRND = '0'B;
     2600    19575    5               Y@TMP$->KV$FLD.NEW = '1'B;  /* Kina misnomer in this case.        */
     2601    19576    5               Y@TMP$->KV$FLD.INP = '0'B;  /* Now marked for deletion            */
     2602    19577    5               Y@TMP$->KV$FLD.UPD = '11'B; /* Make sure it happens               */
     2603    19578    5               Y@TMP$->KV$FLD.TXTSIZ = 0;
     2604    19579    5               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;
     2605    19580    5               IF %Y_LINLST.SLCFLDSTT~=%KV_LINLST_SLCFLDSTT_ONE THEN EXIT;
     2606    19581    5               %Y_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;
     2607    19582    5               RETURN;                     /* All done if only one field.        */
     2608    19583    5            END;                           /* IF                                 */
     2609    19584
     2610    19585        /* SLCQLF function                                                            */
     2611    19586
     2612    19587    4         CASE %KV_VDO_FNC_SLCQLF;
     2613    19588
     2614    19589    4            Y@TMP$->KV$FLD.QLF = KV_VDO_SLCQLF.QLF;
     2615    19590
     2616    19591        /* Recompute INPut-ness. */
     2617    19592
     2618    19593    4            IF Y@TMP$->KV$FLD.QLF&%(G#QLF_PRT| G#QLF_PRTGRD| G#QLF_CNS)
     2619    19594    4            THEN Y@TMP$->KV$FLD.INP = '0'B;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:104  
     2620    19595    5            ELSE DO;
     2621    19596    5               Y@TMP$->KV$FLD.INP = '1'B;
     2622    19597    5               Y@TMP$->KV$FLD.QLF.PRT = '1'B;
     2623    19598    5            END;
     2624    19599
     2625    19600        /* Set attribute updated                                                      */
     2626    19601
     2627    19602    4            GOTO SET_ATR_UPD;
     2628    19603
     2629    19604        /* SLCGRPRND function                                                         */
     2630    19605
     2631    19606    4         CASE %KV_VDO_FNC_SLCGRPRND;
     2632    19607
     2633    19608        /* Setup graphic rendition. First check for abstracted rendition              */
     2634    19609
     2635    19610    5            IF KV_VDO_SLCGRPRND.GRPRND.ABS THEN DO;
     2636    19611
     2637    19612        /* Move in the abstracted rendition, if its legal                             */
     2638    19613
     2639    19614    5               Y@TMP$->KV$FLD.GRPRND =
     2640    19615    5                 %KV_MRD.ABSGRPRND(BITBIN(KV_VDO_SLCGRPRND.GRPRND&'07'X));
     2641    19616
     2642    19617        /* Otherwise, just move in the bits specified in SLCGRPRND function
             19617        */
     2643    19618
     2644    19619    5            END; ELSE DO;
     2645    19620    5               Y@TMP$->KV$FLD.GRPRND = KV_VDO_SLCGRPRND.GRPRND;
     2646    19621    5            END;                           /* IF                                 */
     2647    19622
     2648    19623        /* Set attribute updated                                                      */
     2649    19624
     2650    19625    4   SET_ATR_UPD:;
     2651    19626    5            IF %KV_MVD.RETYPOVR THEN DO;
     2652    19627    5               Y@TMP$->KV$FLD.UPD.ATR = '1'B;
     2653    19628    5               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;
     2654    19629    5               IF Y@TMP$->KV$FLD.TXTSIZ>0
     2655    19630    5                 AND (%KV_MRD.DCLATRWHNOTP OR %KV_MRD.SMLHDNATR)
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:105  
     2656    19631    5               THEN Y@TMP$->KV$FLD.UPD.TXT = '1'B;
     2657    19632    5            END;                           /* IF                                 */
     2658    19633    5            IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;
     2659    19634    5               KV$PTR.FLD$ = Y@TMP$;
     2660    19635    5               CALL Y$MOVDATTO_FLD;
     2661    19636    5            END;
     2662    19637
     2663    19638        /* DAT function                                                               */
     2664    19639
     2665    19640    4         CASE %KV_VDO_FNC_DAT;
     2666    19641
     2667    19642        /* Update the selected fields with the data                                   */
     2668    19643
     2669    19644    4            KV$PTR.FLD$ = Y@TMP$;
     2670    19645    4            CALL Y$MOVDATTO_FLD;
     2671    19646    4            KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;
     2672    19647
     2673    19648        /* ERS function                                                               */
     2674    19649
     2675    19650    4         CASE %KV_VDO_FNC_ERS;
     2676    19651
     2677    19652        /* We know that this field has been selected. Lets make sure that
     2678    19653           it also falls within the catagory specified by the ERS function            */
     2679    19654
     2680    19655
     2681    19656        /* If the field is protected, make sure we are erasing protected
     2682    19657           fields                                                                     */
     2683    19658
     2684    19659    4            IF Y@TMP$->KV$FLD.QLF.PRT
     2685    19660    4              AND NOT Y@TMP$->KV$FLD.INP
     2686    19661    4              AND NOT KV_VDO_ERS.PRT
     2687    19662
     2688    19663        /* If the field is constant, make sure we are erasing constant
     2689    19664           fields                                                                     */
     2690    19665
     2691    19666    4              OR Y@TMP$->KV$FLD.QLF.CNS
     2692    19667    4              AND NOT KV_VDO_ERS.CNS THEN EXIT; /* CASE                          */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:106  
     2693    19668
     2694    19669        /* Either the right bits are set, or the field is unprotected                 */
     2695    19670
     2696    19671    5            IF Y@TMP$->KV$FLD.TXTSIZ > 0 THEN DO;
     2697    19672
     2698    19673        /* If there was something there
     2699    19674           kill any visible attributes too                                            */
     2700    19675
     2701    19676    5               IF Y@TMP$->KV$FLD.GRPRND&%(G#GRPRND_UNDSCR|G#GRPRND_RVRVID)
     2702    19677    5               THEN Y@TMP$->KV$FLD.UPD.ATR = '1'B;
     2703    19678    5               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;
     2704    19679    5               Y@TMP$->KV$FLD.UPD.TXT = '1'B;
     2705    19680    5            END;                           /* IF                                 */
     2706    19681    4            Y@TMP$->KV$FLD.TXTSIZ = 0;
     2707    19682    4         END;                              /* CASE                               */
     2708    19683    3      END;                                 /* WHILE '1'B                         */
     2709    19684    2   END Y$FRMVDO;
     2710    19685        %KV$BOX(PAGE = YES, TITLE = "Call VDH-user with KV$USR_DAT");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:107  
             19703    2   /***************************************************************************
             19704    2    *                                                                         *
             19705    2    *                       Call VDH-user with KV$USR_DAT                     *
             19706    2    *                                                                         *
             19707    2    ***************************************************************************/

     2711    19712    1   Y$USR_DAT: PROC;
     2712    19713
     2713    19714        /* Call the VDH-user with KV@USR_DAT.                               */
     2714    19715
     2715    19716        %KV$CHNPHSPSTMOD;
             19729    3                 IF KV_SSN.VDI$->KV$VDI.OTPCNDPND.PST ~= 0 THEN DO;
             19732    3                    CALL KVV$CALUSR_PST;
             19733    3                    END;
     2716    19740    2      KV@USR_DAT = KV_USR_DAT;
     2717    19741    3      IF KV_RCVVDO.OTPLCL.BFR_.ADR$ ~= ADDR(NIL) THEN DO;
     2718    19742    3         KV@USR_DAT.DAT__.ADR$ = KV_RCVVDO.OTPLCL.BFR_.ADR$;
     2719    19743    3         KV@USR_DAT.DAT__.DATBYTSIZ = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     2720    19744    3      END;                                 /* END DO DAT$ ~= NIL                 */
     2721    19745    2      IF KV_VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC THEN
     2722    19746    2      KV@USR_DAT.DATCTRCHR = KV_VDO_DAT.DATCTRCHR;
     2723    19747    2      KV@USR_DAT.DATCTRCHRTYP = KV_VDO_DAT.DATCTRCHRTYP;
     2724    19748    2      KV@USR_DAT.DATMOD = KV_VDO_DAT.DATMOD;
     2725    19749    2      CALL KVV$CALUSR(KV@USR_DAT);
     2726    19750    2   END Y$USR_DAT;
     2727    19751    1   END KVM$RCV;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:108  
--  Include file information  --

   KV$VDP.:E05TOU  is referenced.
   KV$SP.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   KV_GLB.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   KV_SCODE_C.:E05TOU  is referenced.
   KV_ERRORS_C.:E05TOU  is referenced.
   KV_ERD_E.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   K_CP6_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:109  
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVM$RCV.

   Procedure KVM$RCV requires 6482 words for executable code.
   Procedure KVM$RCV requires 344 words of local(AUTO) storage.

    No errors detected in file KVM$RCV.:E05TSI    .

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:110  

 Object Unit name= KVM$RCV                                    File name= KVM$RCV.:E05TOU
 UTS= JUL 30 '97 02:05:34.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    46     2E  KVM$RCV
    1  RoData even  UTS    140     8C  KVM$RCV
    2   Proc  even  none  6482   1952  KVM$RCV
    3  RoData even  none    77     4D  KVM$RCV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  KVM$RCV

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    1     67  Y_SND_DAT
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:111  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KHC$DISPATCH
         yes           Std       1 KVS$SETSTR
 yes     yes           Std       1 KVC$CNC
 yes     yes           Std       0 KVM$FLUSHCQ
         yes           Std       1 KVC$DSC
 yes     yes           Std       0 KHC$WAIT
         yes           Std       1 KVI$ACTRED
 yes     yes           Std       1 KVV$CALUSR_EVT
 yes     yes           Std       1 KVM$SND
         yes           Std       1 KHD$SCREECH
         yes           Std       0 KVO$SCRENDNO_HLT
         yes           Std       1 KVO$X364
 yes     yes           Std       0 KVE$INSREC
 yes     yes           Std       0 KVF$FNDFLD
         yes           Std       1 KVI$RQSDAT
         yes           Std       1 KVO$DVCCTR
 yes     yes           Std       2 KHD$ERRLOG_SETTERMID_CHN
         yes           Std       0 KVI$ENBNO_WATRED
 yes     yes           Std       1 KHC$CLOCK
 yes     yes           Std       0 KVE$DSPUPD
         yes           Std       1 KVP$GETPRM
         yes           Std       0 KVC$RLSSTR
 yes     yes           Std       1 KVC$OPNFRM
         yes           Std       1 KVF$RQSDAT
 yes     yes           Std       1 KVE$RQSDAT
         yes           Std       0 KVI$ENBRED
 yes     yes           Std       1 KVC$DCLSTR
 yes     yes           Std       1 KVV$CALUSR
         yes           Std       0 KVC$RLSFRM
 yes     yes           Std       0 KVF$ADDFLD
         yes           Std       0 KVC$RLSMVD
         yes           Std       1 KVP$SETPRM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:112  
         yes           Std       1 KVM$UIFT
         yes           Std       1 KVO$VFCAFTTXT
 yes     yes           Std       0 KVE$DLTALLRCR
         yes           Std       1 KVO$OTPLCL
         yes           Std       0 KVF$TOPPAG
 yes     yes           Std       1 KVV$VDIINT
         yes           Std       1 KVO$OTP1_NONVRT
         yes           Std       1 KVO$VFCBFRTXT
         yes           Std       0 KVI$ABRRED
         yes           Std       0 KVO$PSTAFTHI_NONBLNPHSPST
         yes           Std       1 KVO$PST
         yes           Std       0 KVF$UPDFRM_CRT
         yes           Std       1 KVI$INTINPOPRX
         yes           Std       0 KHI$ENABLE
         yes           Std       0 KVC$RLSSSN
         yes           Std       1 KHI$DISABLE
         yes           Std       0 KVC$RLSVDI
 yes     yes           Std       1 KVF$FNDFLDID
 yes     yes           Std       0 KVF$ALLFLD_RSTSLC
 yes     yes           Std       1 KVF$NXTSLCFLD
         yes           Std       0 KVO$ERSSRD
         yes           Std       0 KVO$ERSMRD
 yes     yes           Std       0 KVV$CALUSR_PST
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:113  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$HAND_Q$                             KH_INHLVL                             KV$PTR$
     KV_MVD                                KV_SRD                                KV_CQ_HNDSBR$
     KV_RCVCQ$                             KV_FLD                           r    KV_SND_CMPDSCSSN
r    KV_SND_CNC                       r    KV_SND_MRK                       r    KV_SND_PRM
r    KV_SND_RQSDAT_GNR                r    KN_SP_MSG                        r    KV_USR_DAT
r    KV_USR_EVT                       r    KV_USR_RQSDAT                         KV_USR_SETATR
r    KV_VDH_CNC                       r    KV_VDH_DAT                       r    KV_VDH_DAT_TIMOUT
r    KV_VDH_DAT_CLS                        KV_VDH_DSC                       r    KV_VDH_GETPRM
r    KV_VDH_PST_VRT                   r    KV_VDH_PST_NEWLIN_VRT            r    KV_VDP_VDO
     KV_RCVSSN$                            KV_RCVVDO$                            KV$RCVVDO$
     KV$RCVSSN$                       r    G$ROS$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:114  


        1        1        /*M* KVM$RCV VDH Message receive routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8        %EQU DO_LTR = '0'B;
        9        9        KVM$RCV: PROC;

      9   2 000000  D380 0000 0000  xent KVM$RCV         LNJ,B5   X6A_AUTO_0
          2 000003       0158 0000                       DC       344,0

       10       10        %INCLUDE KV_INT_M;
       11      153        /*
       12      154        The release 1 ASYNC handler architect and principal designer and
       13      155        implementor was Paul Stendal.  Ira Scharfglass participated in the
       14      156        design and implementation of the user input function table builder,
       15      157        the VFC/VFU code, and the statistics code.
       16      158
       17      159        The release B02 virtual device handler architect, principal designer,
       18      160        and principal implementor was Paul Stendal.  Peter Rumsey and
       19      161        Ira Scharfglass were also major designer/implementors.
       20      162        John Gabler, J.T. Anderson, Don Hanrahan, and Ted Martner
       21      163        also made significant contributions.
       22      164
       23      165        The release C00 virtual device handler was converted from SIL-6
       24      166        to PL-6 by Dave Harmon, Jackie Pang, Peter Rumsey, and Paul Stendal.
       25      167        Then, primarily Peter Rumsey and Paul Stendal continued to enhance it,
       26      168        with some contributions from Jackie Pang and John Gabler.
       27      169
       28      170        */
       29      171        %KV$BOX(PAGE = YES, TITLE = "SYMREFs, ENTRY declarations, and DCBs.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:115  
               189        /***************************************************************************
               190         *                                                                         *
               191         *                   SYMREFs, ENTRY declarations, and DCBs.                *
               192         *                                                                         *
               193         ***************************************************************************/

       30      198        /*
       31      199        Declare SYMREFs.
       32      200        */
       33      201    1   DCL G$HAND_Q$ PTR SYMREF READONLY;
       34      202        /*
       35      203        Declare external procedures CALLed.
       36      204        */
       37      205    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
       38      206    1   DCL KHC$DISPATCH ENTRY(1) ALTRET;
       39      207    1   DCL KHC$WAIT ENTRY ALTRET;
       40      208    1   DCL KHI$DISABLE ENTRY (1);
       41      209    1   DCL KHI$ENABLE ENTRY;
       42      210    1   DCL KVC$CNC ENTRY(1) ALTRET;
       43      211    1   DCL KVC$DSC ENTRY(1);
       44      212    1   DCL KVC$DCLSTR ENTRY(1) ALTRET;
       45      213    1   DCL KVC$OPNFRM ENTRY(1) ALTRET;
       46      214    1   DCL KVC$RLSFRM ENTRY;
       47      215    1   DCL KVC$RLSMVD ENTRY;
       48      216    1   DCL KVC$RLSSSN ENTRY;
       49      217    1   DCL KVC$RLSSTR ENTRY;
       50      218    1   DCL KVC$RLSVDI ENTRY;
       51      219    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
       52      220    1   DCL KHD$SCREECH ENTRY(1);
       53      221    1   DCL KVE$DLTALLRCR ENTRY ALTRET;
       54      222    1   DCL KVE$DSPUPD ENTRY ALTRET;
       55      223    1   DCL KVE$INSREC ENTRY ALTRET;
       56      224    1   DCL KVE$RQSDAT ENTRY(1) ALTRET;
       57      225    1   DCL KVF$ADDFLD ENTRY ALTRET;
       58      226    1   DCL KVF$ALLFLD_RSTSLC ENTRY ALTRET;
       59      227    1   DCL KVF$FNDFLD ENTRY ALTRET;
       60      228    1   DCL KVF$FNDFLDID ENTRY(1) ALTRET;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:116  
       61      229    1   DCL KVF$NXTSLCFLD ENTRY(1) ALTRET;
       62      230    1   DCL KVF$RQSDAT ENTRY(1);
       63      231    1   DCL KVF$TOPPAG ENTRY;
       64      232    1   DCL KVF$UPDFRM_CRT ENTRY;
       65      233    1   DCL KVI$ABRRED ENTRY;
       66      234    1   DCL KVI$ACTRED ENTRY(1);
       67      235    1   DCL KVI$ENBNO_WATRED ENTRY;
       68      236    1   DCL KVI$ENBRED ENTRY;
       69      237    1   DCL KVI$INTINPOPRX ENTRY(1);
       70      238    1   DCL KVI$RQSDAT ENTRY(1);
       71      239    1   DCL KVM$FLUSHCQ ENTRY ALTRET;
       72      240    1   DCL KVM$SND ENTRY(1) ALTRET;
       73      241    1   DCL KVM$UIFT ENTRY(1); /*N* TEMP FOR IMP CHECKOUT */
       74      242    1   DCL KVO$DVCCTR ENTRY(1);
       75      243    1   DCL KVO$ERSMRD ENTRY;
       76      244    1   DCL KVO$ERSSRD ENTRY;
       77      245    1   DCL KVO$OTP1_NONVRT ENTRY(1);
       78      246    1   DCL KVO$OTPLCL ENTRY(1);
       79      247    1   DCL KVO$PST ENTRY(1);
       80      248    1   DCL KVO$PSTAFTHI_NONBLNPHSPST ENTRY;
       81      249    1   DCL KVO$SCRENDNO_HLT ENTRY;
       82      250    1   DCL KVO$VFCAFTTXT ENTRY(1);
       83      251    1   DCL KVO$VFCBFRTXT ENTRY(1);
       84      252    1   DCL KVO$X364 ENTRY(1);
       85      253    1   DCL KVP$GETPRM ENTRY(1);
       86      254    1   DCL KVP$SETPRM ENTRY(1);
       87      255    1   DCL KVS$SETSTR ENTRY(1);
       88      256    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       89      257    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       90      258    1   DCL KVV$CALUSR_PST ENTRY ALTRET;
       91      259    1   DCL KVV$VDIINT ENTRY(1) ALTRET;
       92      260        %KV$BOX(PAGE = YES, TITLE =
               260            "INCLUDEs, EQUs, based structures, static data defined elsewhere.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:117  
               278    1   /***************************************************************************
               279    1    *                                                                         *
               280    1    *      INCLUDEs, EQUs, based structures, static data defined elsewhere.   *
               281    1    *                                                                         *
               282    1    ***************************************************************************/

       93      287        /*
       94      288        INCLUDE files, constants, based structures,
       95      289        and static data contained elsewhere.
       96      290        */
       97      291
       98      292        %INCLUDE LCP_6;
       99      483        %INCLUDE KH$CHN;
      100      605        %KH$CHN;
      101      729        %INCLUDE KH$CLK;
      102     1099        %INCLUDE KH_CLKFNC_E;
      103     1144    1   DCL KH_INHLVL UBIN SYMREF;
      104     1145        %INCLUDE K_CP6_M;
      105     1341        %G#GRPRND_E;
      106     1351        %G#QLF_E;
      107     1361
      108     1362        %INCLUDE K_ID_E;
      109     1412        %K#ENTID_E;
      110     1431        %K#LYRID_E;
      111     1438
      112     1439        %INCLUDE KV_INT;
      113     1478
      114     1479        %INCLUDE KL_AFCN_C;
      115     1580
      116     1581        %INCLUDE KL_MACRO_C;
      117     4933
      118     4934        %INCLUDE KNH_MACRO_C;
      119     5217        %FPT_CONNECT_ACK (STCLASS = "BASED(Y@FPT$)");
      120     5266        %FPT_TERM (STCLASS = "BASED(Y@FPT$)");
      121     5288        %KNH$MESS (FPTN = KNH_MESS, STCLASS = "BASED(Y@SICI$)");
      122     5337        %KNH$QHDR (FPTN = KNH_QHDR, STCLASS = "BASED(G$HAND_Q$)");
      123     5350
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:118  
      124     5351        %INCLUDE KV_ERD_E;
      125     5438
      126     5439 S      %INCLUDE KV_GLBCNS_E;
      127     5440        %KV#VD_ORG_E;
      128     5448        %KV#DATMOD_E;
      129     5454        %KV#CQ_HNDID_E;
      130     5459        %KV#TRCENT_TYP_E;
      131     5469        %KV_CLKNMB_E;
      132     5478        %KV_DSCRSN_E;
      133     5487        %KV_CMPCOD_E;
      134     5501        %KV_INPOPRX_E;
      135     5513        %KV_INPUNT_E;
      136     5518        %KV_MRKTYP_E;
      137     5526        %KV_SCHRSN_E;
      138     5533        %KV_USR_EVT_ID_E;
      139     5553        %KV_VDH_EVT_ID_E;
      140     5559
      141     5560 S      %INCLUDE KV_PRMID_E;
      142     5561        %KV_PRMID_E;
      143     5717        %KV_SCP_E;
      144     5727
      145     5728 S      %INCLUDE KV$GLB;
      146     5729 S      %INCLUDE KV$GLBCTX;
      147     5730        %INCLUDE KV_ERRORS_C;
      148     5790        %INCLUDE KV_SCODE_C;
      149     5811        %INCLUDE F_ERRORS_C;
      150     6051        %KV_PTR_STT_E;
      151     6066        %KV$MRD;
      152     6113        %KV$MVD;
      153     6157        %KV$PTR;
      154     6200        %KV$SRD;
      155     6475        %KV$SSN;
      156     6554        %KV$SSN (NAME = KV_SSN, STCLASS = "BASED(KV_RCVSSN$)");
      157     6633        %KV$STR;
      158     6720        %KV$MVD (NAME=KV_MVD, STCLASS=SYMREF);
      159     6764        %KV$SRD (NAME=KV_SRD, STCLASS=SYMREF);
      160     7039        %KV$USRPRM;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:119  
      161     7090        %KV$VDI (PTREQU = NO);
      162     7161        %EQU KV_VDI = CHARTEXT('KV_SSN.VDI$->KV$VDI');
      163     7162
      164     7163        %INCLUDE KV_GLB;
      165     7186        %KV_CQ;
      166     7202        %INCLUDE KV$INPFNC;
      167     7761        %KV$INPFNCTBL;
      168     7845 S      %INCLUDE KV$VDH;
      169     7846        %KV$INPOPR;
      170     7945
      171     7946 S      %INCLUDE KV$INT;
      172     7947        %KV_LINLST_SLCFLDSTT_E;
      173     7953        %KV$ERD;
      174     8037        %KV$FLD;
      175     8125        %KV$FLD (NAME = Y$FLD_TXT, LAST = ",");
      176     8213    1          2 TXTCHR REDEF TXT CHAR(Y$FLD_TXT.WDT) UNAL;
      177     8214        %KV$FLD (NAME=KV_FLD, STCLASS=SYMREF);
      178     8302        %KV$FLDLST;
      179     8326        %KV$GETPRM;
      180     8368        %KV$LIN;
      181     8392        %KV$LINLST;
      182     8419        %KV$TRNTBL;
      183     8477
      184     8478 S      %INCLUDE KV$SND;
      185     8479        %KV_SND_FNC_E;
      186     8495        %KV$SND_CMPDSCSSN (NAME = KV_SND_CMPDSCSSN, STCLASS = SYMREF READONLY);
      187     8550        %KV$SND_CNC (NAME = KV_SND_CNC, STCLASS = SYMREF READONLY);
      188     8638        %KV$SND_MRK (NAME = KV_SND_MRK, STCLASS = SYMREF READONLY);
      189     8694        %KV$SND_PRM (NAME = KV_SND_PRM, STCLASS = SYMREF READONLY);
      190     8779        %KV$SND_RQSDAT_GNR (NAME = KV_SND_RQSDAT_GNR, STCLASS = SYMREF READONLY);
      191     8834
      192     8835        %INCLUDE KV$SP;
      193     8906        %KN_SP_ALL;
      194     8966    1   DCL 1 KV_SP_MSG(0:%KN_FCN_HI) REDEF KN_SP_MSG ALIGNED,
      195     8967        %KV$SP_MSG (LVL=2);
      196     8996        %KV$SP_MSG (NAME = KV$SP_MSG, STCLASS = "BASED(Y@SP_MSG$)");
      197     9025
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:120  
      198     9026 S      %INCLUDE KV$USR;
      199     9027        %KV$USR_DAT (NAME = KV_USR_DAT, STCLASS = SYMREF READONLY);
      200     9111        %KV$USR_DAT;
      201     9195        %KV$USR_EVT;
      202     9230        %KV$USR_EVT (NAME = KV_USR_EVT, STCLASS = SYMREF READONLY);
      203     9265        %KV$USR_PST (NAME = KV_USR_PST, STCLASS = SYMREF READONLY);
      204     9335        %KV$USR_RQSDAT (NAME = KV_USR_RQSDAT, STCLASS = SYMREF READONLY);
      205     9398    1   DCL KV_USR_SETATR UBIN SYMREF;
      206     9399        %KV$VDH_CNC (NAME = KV_VDH_CNC, STCLASS = SYMREF READONLY);
      207     9491        %KV$VDH_DAT (NAME = KV_VDH_DAT, STCLASS = SYMREF READONLY);
      208     9571        %KV$VDH_DAT (NAME = KV_VDH_DAT_TIMOUT, STCLASS = SYMREF READONLY);
      209     9651        %KV$VDH_DAT (NAME = KV_VDH_DAT_CLS, STCLASS = SYMREF READONLY);
      210     9731        %KV$VDH_DSC (NAME=KV_VDH_DSC, STCLASS=SYMREF);
      211     9767        %KV$VDH_GETPRM (NAME = KV_VDH_GETPRM, STCLASS = SYMREF READONLY);
      212     9829        %KV$VDH_PST (NAME = KV_VDH_PST_VRT, STCLASS = SYMREF READONLY);
      213     9903        %KV$VDH_PST (NAME = KV_VDH_PST_NEWLIN_VRT, STCLASS = SYMREF READONLY);
      214     9977
      215     9978 S      %INCLUDE KV$VDO;
      216     9979        %KV_VDO_ALL (NAME=KV_VDO%FNC, STCLASS="BASED(KV_RCVVDO$)", DAT=YES,
      217     9980         VLPSTCLASS="BASED(KV_RCVVDO.VDO%FNC%CHARTEXT('$'))");
      218    12123        %KV$VDOVLP_KEY (NAME = Y$VDOVLP_KEY, STCLASS = "BASED(KV_RCVVDO.VDOVLP_KEY$)",
      219    12124        LAST = ",");
      220    12174    1      2 KEY(0:1) UBIN BYTE CALIGNED;
      221    12175
      222    12176        %INCLUDE KV$VDP;
      223    12334        %KV$VDP_VDO (NAME="KV_VDP_VDO(0:0)", DCLARY=NO, STCLASS=SYMREF READONLY);
      224    12381        /*
      225    12382        Character string used for moving data from KV$VDOVLP_DATx to KV$FLD.TXT.
      226    12383        */
      227    12384    1   DCL Y$TXTCHR CHAR(Y@VFC) BASED(KV_RCVVDO.OTPLCL.BFR_.ADR$);
      228    12385        /*
      229    12386        KV$TRCBFR (VDH trace buffer) declaration.
      230    12387        */
      231    12388        %KV$TRCBFR (NAME = Y$TRCBFR, STCLASS = "BASED(Y@TRCBFR$)");
      232    12446
      233    12447        %KV$STT (CHKARYDCL = YES);              /* Must be after KV$VDO               */
      234    12841
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:121  
      235    12842        %KV$BOX(PAGE = YES, TITLE = "Static data contained within this PROCedure.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:122  
             12860    1   /***************************************************************************
             12861    1    *                                                                         *
             12862    1    *                Static data contained within this PROCedure.             *
             12863    1    *                                                                         *
             12864    1    ***************************************************************************/

      236    12869        /*
      237    12870        Static (and constant) data contained within this procedure.
      238    12871        */
      239    12872        %KH$EXP (FPTN=KH_EXP, STCLASS=STATIC);
      240    12935
      241    12936        %KH$CLK (FPTN=Y@CLK, STCLASS=STATIC, FNC=%KH#CLK_SETCLK, PRDUNT=KH#C_MIN,
      242    12937         VDH_CLK=YES, UVAL=%KV_CLKNMB_REDTIMOUT);
      243    13086
      244    13087        %FPT_WRSYSLOG (STCLASS=CONSTANT,FCG=KV, MID=M, MON='1'B, SEV=3,
      245    13088         FPTN=FPT_WRSYSLOG_VDOVLPBYNSIDU, ERR=%E$VDOVLPBYNSIDU);
      246    13183
      247    13184        %FPT_WRSYSLOG (STCLASS=CONSTANT,FCG=KV, MID=M, MON='1'B, SEV=3,
      248    13185         FPTN=FPT_WRSYSLOG_BADVDOVLPFNCCOD, ERR=%E$BADVDOVLPFNCCOD);
      249    13280
      250    13281        %FPT_WRSYSLOG (STCLASS=CONSTANT,FCG=KV, MID=M, MON='1'B, SEV=3,
      251    13282         FPTN=FPT_WRSYSLOG_BADVDOFNCCOD, ERR=%E$BADVDOFNCCOD);
      252    13377
      253    13378        /*
      254    13379        Pointer to the KV$SSN context for the session being processed.
      255    13380        */
      256    13381    1   DCL KV_RCVSSN$ PTR SYMREF;
      257    13382
      258    13383    1   DCL KV_RCVVDO$ PTR SYMREF;
      259    13384
      260    13385    1   DCL KV$RCVVDO$ PTR SYMREF;
      261    13386
      262    13387    1   DCL KV$RCVSSN$ PTR SYMREF;
      263    13388
      264    13389        %KV$RCVSSN (NAME=Y_RCVSSN, STCLASS=CONSTANT);
      265    13414        %KV$RCVVDO (NAME = Y_RCVVDO, STCLASS = CONSTANT);
      266    13555        %KV$SND_DAT (NAME=Y_SND_DAT, STCLASS=CONSTANT SYMDEF, VDOVLP_ERR$=Y_VDOVLP_ERR);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:123  
      267    13674        /*
      268    13675        Initialized copies of KV$TRCENT.
      269    13676        */
      270    13677       %KV$TRCENT (NAME = Y_TRCENT_RCVSSN, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_RCVSSN)
             13677            ;
      271    13706       %KV$TRCENT (NAME = Y_TRCENT_RCVVDO, STCLASS = CONSTANT, TYP = %KV#TRCENT_TYP_RCVVDO)
             13706            ;
      272    13735        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_ACK, STCLASS = STATIC,
      273    13736        TYP = %KV_MRKTYP_ACK,
      274    13737        MSTRTR = YES,
      275    13738        CMPOTP = YES);
      276    13800
      277    13801        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_MRK, STCLASS = STATIC,
      278    13802        TYP = %KV_MRKTYP_MRK,
      279    13803        MSTRTR = YES,
      280    13804        CMPOTP = YES);
      281    13866
      282    13867        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_SAVLSTRCRID, STCLASS = STATIC,
      283    13868        TYP = %KV_MRKTYP_SAVLSTRCRID,
      284    13869        MSTRTR = NO,
      285    13870        CMPOTP = NO);
      286    13932
      287    13933        %KV$USR_OTPMRK (NAME = Y_USR_OTPMRK_SNDLSTRCRID, STCLASS = STATIC,
      288    13934        TYP = %KV_MRKTYP_SNDLSTRCRID,
      289    13935        MSTRTR = YES,
      290    13936        CMPOTP = YES);
      291    13998
      292    13999        %KV$VDH_DSC (NAME=Y_VDH_DSC_TIMOUT, STCLASS=CONSTANT, RSN=%KV_DSCRSN_PTH,
      293    14000         ALLSSN=YES);
      294    14036
      295    14037        %KV$VDH_OTPLCL (NAME=Y_OTPLCL_RSTRGNSCR, TRN=YES, STCLASS=CONSTANT,
      296    14038         TEXT="%CONCAT(BINASC(27),'[r')");
      297    14111        %KV$VDH_SETPRM (NAME = Y_VDH_SETPRM, STCLASS = STATIC);
      298    14173
      299    14174        %KV$VDOVLP_ERR (NAME=Y_VDOVLP_ERR, STCLASS=STATIC, FCG=KV, SEV=4, MON='1'B);
      300    14271
      301    14272        %VLP_SCODE (FPTN=KVM_BADLDCT,STCLASS=CONSTANT,FCG=KV,MID=M,ERR#=%S$KV_BADLDCT);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:124  
      302    14333
      303    14334        %KV$VDOVLP_FLDID (NAME=Y_VDOVLP_FLDID, STCLASS=STATIC);
      304    14385
      305    14386        %KV$BOX(PAGE = YES, TITLE = "AUTO variables.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:125  
             14404    1   /***************************************************************************
             14405    1    *                                                                         *
             14406    1    *                              AUTO variables.                            *
             14407    1    *                                                                         *
             14408    1    ***************************************************************************/

      306    14413        /*
      307    14414        AUTO variables.
      308    14415        */
      309    14416        /*
      310    14417        Pointer to the KNH$MESS$ (SICI, beginning of SIDU) being processed.
      311    14418        */
      312    14419    1   DCL Y@SICI$ PTR AUTO;
      313    14420        /*
      314    14421        Session interface data unit (SIDU) word size.  Size of
      315    14422        KNH_MESS, FPT, and VDOs/VDOVLPs.
      316    14423        */
      317    14424    1   DCL Y@SIDU_WRDSIZ SBIN WORD AUTO;
      318    14425        /*
      319    14426        Next RPTR value (Y@MY_RPTR+(Y@SIDU_WRDSIZ+1)/2)
      320    14427        */
      321    14428    1   DCL Y@NXT_RPTR REDEF Y@SIDU_WRDSIZ UBIN WORD;
      322    14429        /*
      323    14430         !!! The interface to KV_CQ_HNDSBR$ needs Y@MY_RPTR right after Y@NXT_RPTR !!!
      324    14431         !!! Insert NOTHING here !!!
      325    14432        Current RPTR for VDH messages (may be after the CQ RPTR,
      326    14433        if a CQ_HNDID handler leaves messages in the queue).
      327    14434        */
      328    14435    1   DCL Y@MY_RPTR UBIN WORD AUTO;
      329    14436        /*
      330    14437        SIDU end pointer.  Points after the end of the SIDU being
      331    14438        worked on.
      332    14439        */
      333    14440    1   DCL Y@SIDU_END$ PTR AUTO;
      334    14441        /*
      335    14442        Pointer to the FPT being processed.
      336    14443        */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:126  
      337    14444    1   DCL Y@FPT$ PTR AUTO;
      338    14445        /*
      339    14446        Pointer to the session protocol sequencing definition array element
      340    14447        for this message type (KN_FCN_...).
      341    14448        */
      342    14449    1   DCL Y@SP_MSG$ PTR AUTO;
      343    14450        /*
      344    14451           Stuff to remember between session switches.
      345    14452        */
      346    14453        %KV$RCVSSN (NAME = KV_RCVSSN, STCLASS = AUTO);
      347    14478        /*
      348    14479           Stuff to remember between VDOs.
      349    14480        */
      350    14481        %KV$RCVVDO (NAME = KV_RCVVDO, STCLASS = AUTO);
      351    14622        /*
      352    14623        Pointer to the next VDOVLP to process (after the one currently
      353    14624        being processed) or to the next VDO to process.
      354    14625        */
      355    14626    1   DCL Y@NXTVDOVLP$ PTR AUTO;
      356    14627        /*
      357    14628        Saved VRTLINPHSLIN for block mode read DAT_IMD
      358    14629        */
      359    14630    1   DCL Y@PRVVRTLINPHSLIN UBIN WORD AUTO;
      360    14631        /*
      361    14632        Auto copy of a VDH trace entry.
      362    14633        */
      363    14634        %KV$TRCENT (NAME = Y@TRCENT, STCLASS = AUTO);
      364    14663        /*
      365    14664        Pointer to KV$TRCBFR.
      366    14665        */
      367    14666    1   DCL Y@TRCBFR$ PTR AUTO;
      368    14667        /*
      369    14668        VFC character being passed to the VFC processing routines.
      370    14669        */
      371    14670    1   DCL Y@VFC UBIN BYTE AUTO;
      372    14671        /*
      373    14672        VDH-user's inhibit level.  Used for setting up calls to KHI$DISABLE.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:127  
      374    14673        */
      375    14674    1   DCL Y@INHLVL UBIN WORD AUTO;
      376    14675        /*
      377    14676        Send maximum number of bytes (temp cell)
      378    14677        */
      379    14678    1   DCL Y@SNDMAXNMBBYT UBIN WORD AUTO;
      380    14679        /*
      381    14680        Send maximum number of records (temp cell)
      382    14681        */
      383    14682    1   DCL Y@SNDMAXNMBRCR UBIN WORD AUTO;
      384    14683        /*
      385    14684        Temporary word.
      386    14685        */
      387    14686    1   DCL Y@TMPWRD1 SBIN WORD AUTO;
      388    14687    1   DCL Y@TMPWRD1U REDEF Y@TMPWRD1 UBIN;
      389    14688        /*
      390    14689        Temporary word.
      391    14690        */
      392    14691    1   DCL Y@TMPWRD2 SBIN WORD AUTO;
      393    14692        /*
      394    14693        Temporary pointer.
      395    14694        */
      396    14695    1   DCL Y@TMP$ PTR AUTO;
      397    14696        /*
      398    14697        Number of words taken up by the field entry of a field being manipulated
      399    14698        */
      400    14699    1   DCL Y@FLDWRDSIZ SBIN;
      401    14700        /*
      402    14701        Number of words taken up by the field to the left of the
      403    14702           one we are building
      404    14703        */
      405    14704        /*
      406    14705          Handler subroutine entry point. Since you can't CALL EPTR_ARRAY(n).
      407    14706          (Is n an index, or an argument).
      408    14707        */
      409    14708    1   DCL Y@CQ_HNDSBR$ EPTR AUTO;
      410    14709    1   DCL Y@PRVSTRWRDSIZ UBIN;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:128  
      411    14710
      412    14711        %KV$MRD (NAME=KV@MRD, STCLASS=AUTO);
      413    14758
      414    14759        %KV$MVD (NAME=KV@MVD, STCLASS=AUTO);
      415    14803
      416    14804        %KV$PTR (NAME = KV@PTR, STCLASS = AUTO);
      417    14847
      418    14848        %KV$SND_CNC (NAME = KV@SND_CNC, STCLASS = AUTO);
      419    14936
      420    14937        %KV$SND_MRK (NAME = KV@SND_MRK, STCLASS = AUTO);
      421    14993
      422    14994        %KV$SND_PRM (NAME = KV@SND_PRM, STCLASS = AUTO);
      423    15079
      424    15080        %KV$SRD (NAME=KV@SRD, STCLASS=AUTO);
      425    15355
      426    15356        %KV$USR_DAT (NAME = KV@USR_DAT, STCLASS = AUTO);
      427    15440
      428    15441        %KV$USR_EVT (NAME = KV@USR_EVT, STCLASS = AUTO);
      429    15476
      430    15477        %KV$USR_RQSDAT (NAME = KV@USR_RQSDAT, STCLASS = AUTO);
      431    15540
      432    15541        %KV$VDH_CNC (NAME = KV@VDH_CNC, STCLASS = AUTO);
      433    15633
      434    15634        %KV$VDH_DAT (NAME = KV@VDH_DAT, STCLASS = AUTO);
      435    15714
      436    15715        %KV$VDH_GETPRM (NAME = KV@VDH_GETPRM, STCLASS = AUTO);
      437    15777
      438    15778        %KV$VDOVLP_MRK (NAME = KV@VDOVLP_MRK, STCLASS = AUTO);
      439    15831        %KV$BOX(PAGE = YES, TITLE = "Main loop; scan circular queue.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:129  
             15849    1   /***************************************************************************
             15850    1    *                                                                         *
             15851    1    *                      Main loop; scan circular queue.                    *
             15852    1    *                                                                         *
             15853    1    ***************************************************************************/

      440    15858        /*F*   NAME: KVM$RCV - CQ Message Receiver
      441    15859
      442    15860        This is the main scheduled-execution processing loop.
      443    15861        Its purpose is to process information received by the handler through
      444    15862        the receive circular queue (RCQ) or as a result of clock expirations.
      445    15863        There are no exits
      446    15864        or returns, although there is an M$WAIT monitor service request
      447    15865        to wait for something
      448    15866        to do.
      449    15867
      450    15868        The handler should call KVM$RCV as the last phase of initialization.
      451    15869
      452    15870        The information processed from the RCQ consists of items
      453    15871        known as session interface data units (KNH$MESS structure,
      454    15872        optionally followed by further session interface control information
      455    15873        (FPT_...), optionally followed by session interface data
      456    15874        (KV$VDO_...s and optionally KV$VDOVLP_...s)).
      457    15875
      458    15876        Any clocks that have expired are processed between these messages.
      459    15877
      460    15878        If a KNH$MESS destined for other then VDH is encountered, a call is
      461    15879        made to the KV_CQ_HNDSBR$ routine designated by KNH$MESS.UIDX.CQ_HNDID.
      462    15880        That routine then processes as many contiguous messages as there are in
      463    15881        the RCQ for it, updating the KNH_QHDR.RCQ.RPTR pointer as it goes.
      464    15882        When done, it returns here to continue the RCQ scan.
      465    15883        The KV_CQ_HNDSBR$ routine can be found in KV_GLB.:LIBRARY.
      466    15884        */
      467    15885    1      KV_RCVSSN$ = ADDR(NIL);

  15885   2 000005  EB80 0000 0000                       LAB,B6   0
          2 000008  EF80 0000 0000  xsym                 STB,B6   KV_RCVSSN$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:130  

      468    15886    1      KV$RCVVDO$ = ADDR(KV_RCVVDO);

  15886   2 00000B  DBC7 0014                            LAB,B5   KV_RCVVDO,AUTO
          2 00000D  DF80 0000 0000  xsym                 STB,B5   KV$RCVVDO$

      469    15887    1      KV$RCVSSN$ = ADDR(KV_RCVSSN);

  15887   2 000010  CBC7 000E                            LAB,B4   KV_RCVSSN,AUTO
          2 000012  CF80 0000 0000  xsym                 STB,B4   KV$RCVSSN$

      470    15888    1      KV_RCVSSN = Y_RCVSSN;

  15888   2 000015  AB80 0000 0000  01                   LAB,B2   FPT_WRSYSLOG_VDOVLPBYNSIDU
          2 000018  2C7E                                 LDV,R2   126
          2 000019  6C0C                                 LDV,R6   12
          2 00001A  BB87                                 LAB,B3   ,AUTO
          2 00001B  3C1C                                 LDV,R3   28
          2 00001C  0008                                 MMM

      471    15889    1      KV@MVD = KV_MVD;

  15889   2 00001D  AB80 0000 0000  xsym                 LAB,B2   KV_MVD
          2 000020  2C00                                 LDV,R2   0
          2 000021  6C40                                 LDV,R6   64
          2 000022  BBC7 0068                            LAB,B3   KV@MVD,AUTO
          2 000024  3C00                                 LDV,R3   0
          2 000025  0008                                 MMM

      472    15890    1      KV@MVD.SRD$ = ADDR(KV@SRD);

  15890   2 000026  EBC7 00EF                            LAB,B6   KV@SRD,AUTO
          2 000028  EFC7 0068                            STB,B6   KV@MVD,AUTO

      473    15891    1      KV@SRD = KV_SRD;

  15891   2 00002A  AB80 0000 0000  xsym                 LAB,B2   KV_SRD
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:131  
          2 00002D  2C00                                 LDV,R2   0
          2 00002E  6C3E                                 LDV,R6   62
          2 00002F  BBC7 00EF                            LAB,B3   KV@SRD,AUTO
          2 000031  3C00                                 LDV,R3   0
          2 000032  0008                                 MMM

      474    15892    1      KV@SRD.BTMRHT.LIN = 1;

  15892   2 000033  6C01                                 LDV,R6   1
          2 000034  EF47 00FA                            STR,R6   KV@SRD+11,AUTO

      475    15893    1      KV@SRD.LNG = 1;

  15893   2 000036  E7C7 00FD                            STH,R6   KV@SRD+14,AUTO

      476    15894
      477    15895    2      DO WHILE ('1'B);

      478    15896    2         Y@MY_RPTR = KNH_QHDR.RCQ.RPTR;

  15896   2 000038  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 00003B  E846 0001                            LDR,R6   1,B6
          2 00003D  EF47 0007                            STR,R6   Y@MY_RPTR,AUTO

      479    15897
      480    15898    3         DO WHILE '1'B;

      481    15899    4   CLOCK_LOOP:DO WHILE '1'B;

  15899   2                              CLOCK_LOOP      null
      482    15900    5               CALL KHC$DISPATCH (KH_EXP) WHENRETURN DO;

  15900   2 00003F  BB80 0000 0000  03   CLOCK_LOOP      LAB,B3   0
          2 000042  CBF0 0100                            LAB,B4   256,IMO
          2 000044  E380 0000 0000  xent                 LNJ,B6   KHC$DISPATCH
          2 000047       00BB                            DC       s:15964,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:132  
      483    15901    5                  IF KH_EXP.UID$~=KV_RCVSSN$ AND KV_RCVSSN$~=ADDR(NIL) THEN

  15901   2 000048  EC80 0000 0000  00                   LDB,B6   KH_EXP
          2 00004B  ED80 0000 0000  xsym                 CMB,B6   KV_RCVSSN$
          2 00004E  0901 0009                            BE       s:15904,PREL
          2 000050  8D80 0000 0000  xsym                 CMN      KV_RCVSSN$
          2 000053  0901 0004                            BE       s:15904,PREL

      484    15902    5                  CALL Y$CLNUP_SSN;

  15902   2 000055  E3C0 13C3                            LNJ,B6   s:0,PREL
          2 000057       0001                            DC       s:15904,PREL

      485    15903
      486    15904    5                  KV_RCVSSN$ = KH_EXP.UID$;

  15904   2 000058  EC80 0000 0000  00                   LDB,B6   KH_EXP
          2 00005B  EF80 0000 0000  xsym                 STB,B6   KV_RCVSSN$

      487    15905    5                  KV$PTR$ = KV_SSN.SNCPTR$;

  15905   2 00005E  DCC6 0008                            LDB,B5   8,B6
          2 000060  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

      488    15906        /*N* Set up DEV and DBG for debug purposes.  Save current time
      489    15907        for STATs. */
      490    15908    5                  %KV_VDI.BSY = '1'B;

  15908   2 000063  CC86                                 LDB,B4   ,B6
          2 000064  8944 0019                            LBT,'0080'X       25,B4
          2 000066       0080

      491    15909    5                  KV_RCVVDO.VDP_VDO = '0'B;

  15909   2 000067  8747 0031                            CL       KV_RCVVDO+29,AUTO
          2 000069  8747 0032                            CL       KV_RCVVDO+30,AUTO

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:133  
      492    15910    6                  IF KV$PTR$~=%KV_VDI.ASNINPPTR$ THEN DO;

  15910   2 00006B  CC86                                 LDB,B4   ,B6
          2 00006C  DDC4 0006                            CMB,B5   6,B4
          2 00006E  0901 0020                            BE       s:15922,PREL

      493    15911
      494    15912        /* We're in a different session than the device, fix it up. */
      495    15913
      496    15914    6                     KV_RCVVDO.VDP_VDO.SETSTR = '1'B;

  15914   2 000070  8947 0031                            LBT,'0080'X       KV_RCVVDO+29,AUTO
  15914   2 000072       0080

      497    15915    6                     KV_RCVVDO.VDP_VDO.PSTSTR = '1'B;

  15915   2 000073  8947 0031                            LBT,'0020'X       KV_RCVVDO+29,AUTO
  15915   2 000075       0020

      498    15916    6                     KV_RCVVDO.VDP_VDO.RSTSTR = '1'B;

  15916   2 000076  8947 0031                            LBT,'0040'X       KV_RCVVDO+29,AUTO
  15916   2 000078       0040

      499    15917    6                     KV_RCVVDO.PRVSTR$ = ADDR(NIL);

  15917   2 000079  CB80 0000 0000                       LAB,B4   0
          2 00007C  CFC7 0034                            STB,B4   KV_RCVVDO+32,AUTO

      500    15918    6                     KV_RCVVDO$ = ADDR(Y@TMPWRD1);

  15918   2 00007E  BBC7 0040                            LAB,B3   Y@TMPWRD1,AUTO
          2 000080  BF80 0000 0000  xsym                 STB,B3   KV_RCVVDO$

      501    15919    6                     KV_VDO.STR = %KV_STR.ID;

  15919   2 000083  ACC5 0004                            LDB,B2   4,B5
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:134  
          2 000085  E2C2 001C                            LLH,R6   28,B2
          2 000087  EA83                                 SRM,R6,'007F'X    ,B3
          2 000088       007F

      502    15920    6                     CALL KVS$SETSTR;

  15920   2 000089  CBF0 0000                            LAB,B4   0,IMO
          2 00008B  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 00008E       0001                            DC       s:15922,PREL

      503    15921    6                  END;

      504    15922    5                  KV_SSN.CLKSET(KH_EXP.UVAL) = '0'B;

  15922   2 00008F  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 000092  DBC6 0029                            LAB,B5   41,B6
          2 000094  B800 0000 0002  00                   LDR,R3   KH_EXP+2
          2 000097  3E08                                 ADV,R3   8
          2 000098  8835                                 LBF      ,B5,R3

      505    15923
      506    15924        /* What sort of clock is it? */
      507    15925
      508    15926    6                  DO CASE (KH_EXP.UVAL);

  15926   2 000099  B800 0000 0002  00                   LDR,R3   KH_EXP+2
          2 00009C  3D03                                 CMV,R3   3
          2 00009D  0281 004B                            BGE      s:15957,PREL
          2 00009F  A830 0000 00A5  02                   LDR,R2   s:15926+12,R3
          2 0000A2  83A0 0000 00A8  02                   JMP      s:15930,R2
          2 0000A5       0041                            DC       s:15957,PREL
          2 0000A6       0000                            DC       s:15930,PREL
          2 0000A7       002A                            DC       s:15952,PREL

      509    15927    6                  CASE (%KV_CLKNMB_REDTIMOUT);

      510    15928        /* System read-timeout.  Disconnect the guy. */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:135  
      511    15929
      512    15930    6                     Y@TMP$ = %KV_VDI.SSN$;

  15930   2 0000A8  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0000AB  DC86                                 LDB,B5   ,B6
          2 0000AC  CCC5 0004                            LDB,B4   4,B5
          2 0000AE  CFC7 0042                            STB,B4   Y@TMP$,AUTO

      513    15931
      514    15932        /* But only if this is the last clock and all SSNs are reading or blocked. */
      515    15933
      516    15934    7   CLK_LOOP:         DO WHILE '1'B;

  15934   2                              CLK_LOOP        null
      517    15935    7                        IF Y@TMP$->KV$SSN.CLKSET(%KV_CLKNMB_REDTIMOUT)

  15935   2 0000B0  ECC7 0042            CLK_LOOP        LDB,B6   Y@TMP$,AUTO
          2 0000B2  82C6 0029                            LB,'0040'X        41,B6
          2 0000B4       0040
          2 0000B5  0501 001A                            BBT      s:15948,PREL

      518    15936        /*N* It'd be nicer if this worked - but when ons of the "session"s
      519    15937             is the direct comgroup one for TP, it never times out.
      520    15938                               OR NOT Y@TMP$->KV$SSN.REDRQSPND
      521    15939                               AND NOT Y@TMP$->KV$SSN.OTPBLK
      522    15940        */
      523    15941    7                        THEN EXIT;
      524    15942    7                        Y@TMP$ = Y@TMP$->KV$SSN.LNK$;

  15942   2 0000B7  DCC6 0002                            LDB,B5   2,B6
          2 0000B9  DFC7 0042                            STB,B5   Y@TMP$,AUTO

      525    15943    8                        IF Y@TMP$ = ADDR(NIL) THEN DO;

  15943   2 0000BB  8DC7 0042                            CMN      Y@TMP$,AUTO
          2 0000BD  09F3                                 BNE      s:15934,SPREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:136  
      526    15944    8                           %KV_VDI.INTPHSDSC = '1'B;

  15944   2 0000BE  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0000C1  CC86                                 LDB,B4   ,B6
          2 0000C2  8944 001D                            LBT,'0800'X       29,B4
          2 0000C4       0800

      527    15945    8                           CALL KVC$DSC (Y_VDH_DSC_TIMOUT);

  15945   2 0000C5  BB80 0000 0002  03                   LAB,B3   +2
          2 0000C8  CBF0 0100                            LAB,B4   256,IMO
          2 0000CA  E380 0000 0000  xent                 LNJ,B6   KVC$DSC
          2 0000CD       0001                            DC       s:15946,PREL

      528    15946    8                           EXIT CLK_LOOP;

  15946   2 0000CE  0F81 0001                            B        s:15948,PREL

      529    15947    8                        END;
      530    15948    7                     END;

  15948   2 0000D0  0F81 002F                            B        s:15962,PREL

      531    15949    6                  CASE (%KV_CLKNMB_USRREDTIMOUT);

      532    15950        /* User read-timeout.  Abort the read. */
      533    15951
      534    15952    6                     KV@VDH_DAT = KV_VDH_DAT_TIMOUT;

  15952   2 0000D2  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT_TIMOUT
          2 0000D5  2C00                                 LDV,R2   0
          2 0000D6  6C10                                 LDV,R6   16
          2 0000D7  BBC7 0137                            LAB,B3   KV@VDH_DAT,AUTO
          2 0000D9  3C00                                 LDV,R3   0
          2 0000DA  0008                                 MMM

      535    15953    6                     CALL KVI$ACTRED (KV@VDH_DAT);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:137  

  15953   2 0000DB  EBC7 0137                            LAB,B6   KV@VDH_DAT,AUTO
          2 0000DD  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 0000DF  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0000E1  CBF0 0100                            LAB,B4   256,IMO
          2 0000E3  E380 0000 0000  xent                 LNJ,B6   KVI$ACTRED
          2 0000E6       0001                            DC       s:15953+12,PREL
          2 0000E7  0F81 0018                            B        s:15962,PREL

      536    15954    6                  CASE (ELSE);

      537    15955        /* Another one.  Call the RDH for processing. */
      538    15956
      539    15957    6                     KV@USR_EVT = KV_USR_EVT;

  15957   2 0000E9  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          2 0000EC  8D47 0116                            SDI      KV@USR_EVT,AUTO

      540    15958    6                     KV@USR_EVT.ID = %KV_USR_EVT_ID_CLKEXP;

  15958   2 0000EE  5C10                                 LDV,R5   16
          2 0000EF  DAC7 0116                            SRM,R5,'007F'X    KV@USR_EVT,AUTO
          2 0000F1       007F

      541    15959    6                     KV@USR_EVT.PRM = KH_EXP.UVAL;

  15959   2 0000F2  BF47 0117                            STR,R3   KV@USR_EVT+1,AUTO

      542    15960    6                     CALL KVV$CALUSR_EVT (KV@USR_EVT);

  15960   2 0000F4  EBC7 0116                            LAB,B6   KV@USR_EVT,AUTO
          2 0000F6  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 0000F8  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0000FA  CBF0 0100                            LAB,B4   256,IMO
          2 0000FC  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 0000FF       0001                            DC       s:15962,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:138  
      543    15961    6                  END;

      544    15962    5               END;                        /* WHENRETURN                         */

  15962   2 000100  0F81 0009                            B        s:15967,PREL

      545    15963    5               WHENALTRETURN DO;

      546    15964    5                  KH_EXP.CTBCTX$ = ADDR(NIL);

  15964   2 000102  EB80 0000 0000                       LAB,B6   0
          2 000105  EF80 0000 0003  00                   STB,B6   KH_EXP+3

      547    15965    5                  EXIT CLOCK_LOOP;

  15965   2 000108  0F81 0003                            B        s:15968,PREL

      548    15966    5               END;
      549    15967    4            END CLOCK_LOOP;

  15967   2 00010A  0F81 FF34                            B        s:15898,PREL

      550    15968    3            IF Y@MY_RPTR=KNH_QHDR.RCQ.IPTR THEN EXIT;

  15968   2 00010C  DC80 0000 0000  xsym                 LDB,B5   G$HAND_Q$
          2 00010F  E847 0007                            LDR,R6   Y@MY_RPTR,AUTO
          2 000111  E905                                 CMR,R6   ,B5
          2 000112  0901 0258                            BE       s:16452,PREL

      551    15969
      552    15970        /* Nothing left to do if there's no messages in the Q. */
      553    15971
      554    15972    3            Y@SICI$ = PINCRW(KV_RCVCQ$, Y@MY_RPTR*2);

  15972   2 000114  F856                                 LDR,R7   R6
          2 000115  6C00                                 LDV,R6   0
          2 000116  7081                                 DOL,R7   1
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:139  
          2 000117  8400 0000 0000  xsym                 AID      KV_RCVCQ$
          2 00011A  8D47 0004                            SDI      Y@SICI$,AUTO

      555    15973    4            IF KNH_MESS.UIDX.CQ_HNDID = 0 THEN DO;

  15973   2 00011C  CCC7 0004                            LDB,B4   Y@SICI$,AUTO
          2 00011E  D2C4 0002                            LLH,R5   2,B4
          2 000120  5981 01FD                            BNEZ,R5  s:16420,PREL

      556    15974        /*
      557    15975        This message is for VDH, as opposed to X.25, etc.
      558    15976        */
      559    15977    4               Y@SIDU_WRDSIZ = SIZEW(KNH_MESS) +

  15977   2 000122  C844 0006                            LDR,R4   6,B4
          2 000124  CA44 0007                            ADD,R4   7,B4
          2 000126  4E01                                 ADV,R4   1
          2 000127  4041                                 SOR,R4   1
          2 000128  4E08                                 ADV,R4   8
          2 000129  CF47 0006                            STR,R4   Y@SIDU_WRDSIZ,AUTO

      560    15978    4                 (((KNH_MESS.FPTSZ +
      561    15979    4                 KNH_MESS.MSGSZ) + 1) / 2);
      562    15980
      563    15981    4               Y@SIDU_END$ = PINCRW(Y@SICI$, Y@SIDU_WRDSIZ);

  15981   2 00012B  B854                                 LDR,R3   R4
          2 00012C  BBB4                                 LAB,B3   ,B4,R3
          2 00012D  BFC7 0008                            STB,B3   Y@SIDU_END$,AUTO

      564    15982
      565    15983    5               IF NOT KNH_MESS.FLAGS.FREE THEN DO;

  15983   2 00012F  8984                                 CMZ      ,B4
          2 000130  0801 0067                            BAL      s:16033,PREL

      566    15984        /*
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:140  
      567    15985        This message has not yet been processed.
      568    15986        Set up the pointer to the session protocol definition entry for
      569    15987        this KN_FCN_...
      570    15988        */
      571    15989    5                  Y@SP_MSG$ = ADDR(KV_SP_MSG(KNH_MESS.FUNCTION));

  15989   2 000132  A804                                 LDR,R2   ,B4
          2 000133  ABA0 0000 0000  xsym                 LAB,B2   KN_SP_MSG,R2
          2 000136  AFC7 000C                            STB,B2   Y@SP_MSG$,AUTO

      572    15990
      573    15991    5                  IF NOT KV$SP_MSG.SETUP_SSN THEN EXIT;

  15991   2 000138  8282                                 LB,'4000'X        ,B2
  15991   2 000139       4000
          2 00013A  0581 005D                            BBF      s:16033,PREL

      574    15992        /*
      575    15993        This session function refers to VDH session context that might
      576    15994        already be set up.
      577    15995        */
      578    15996    5                  IF KV_RCVSSN$~=ADDR(NIL)

  15996   2 00013C  8D80 0000 0000  xsym                 CMN      KV_RCVSSN$
          2 00013F  0901 0014                            BE       s:16004,PREL

      579    15997    5                  THEN IF KNH_MESS.UID$~=KV_RCVSSN$ OR %KV_VDI.DFR

  15997   2 000141  9CC4 0002                            LDB,B1   2,B4
          2 000143  9D80 0000 0000  xsym                 CMB,B1   KV_RCVSSN$
          2 000146  0981 000A                            BNE      s:16002,PREL
          2 000148  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00014B  DC86                                 LDB,B5   ,B6
          2 00014C  82C5 0018                            LB,'F800'X        24,B5
          2 00014E       F800
          2 00014F  0581 0004                            BBF      s:16004,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:141  
      580    15998        /*
      581    15999        We were processing (on the scheduled thread also) another
      582    16000        session.  Do it's clean-up now.
      583    16001        */
      584    16002    5                  THEN CALL Y$CLNUP_SSN;

  16002   2 000151  E3C0 12C7                            LNJ,B6   s:0,PREL
          2 000153       0001                            DC       s:16004,PREL

      585    16003
      586    16004    5                  KV_RCVSSN$ = KNH_MESS.UID$;

  16004   2 000154  ECC7 0004                            LDB,B6   Y@SICI$,AUTO
          2 000156  DCC6 0002                            LDB,B5   2,B6
          2 000158  DF80 0000 0000  xsym                 STB,B5   KV_RCVSSN$

      587    16005    5                  IF KNH_MESS.LDCTX ~= KV_SSN.SSNCNCID AND

  16005   2 00015B  E846 0001                            LDR,R6   1,B6
          2 00015D  E945 0024                            CMR,R6   36,B5
          2 00015F  0901 0016                            BE       s:16023,PREL
          2 000161  CCC7 000C                            LDB,B4   Y@SP_MSG$,AUTO
          2 000163  8984                                 CMZ      ,B4
          2 000164  0881 0011                            BAGE     s:16023,PREL

      588    16006    6                    KV$SP_MSG.CHKSSNCNCID THEN DO;

      589    16007    6                     IF Y@SIDU_WRDSIZ<=SIZEW(KNH_MESS) THEN GOTO LOOP_MSG;

  16007   2 000166  D847 0006                            LDR,R5   Y@SIDU_WRDSIZ,AUTO
          2 000168  5D08                                 CMV,R5   8
          2 000169  0A81 002E                            BALE     s:16033,PREL

      590    16008        /* (A LOOP message could very well be waiting in the RCQ when we got
      591    16009           and responded to a TERM message, so it shouldn't cause a crash.) */
      592    16010        /*
      593    16011        We're to check the session connection ID (against the LDCTX).
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:142  
      594    16012        The LDCTX (session identifier) being passed to us by session
      595    16013        doesn't match the identifier we have in our context for
      596    16014        (presumably) this session.  The context and/or code within
      597    16015        this node has problems.
      598    16016        */
      599    16017        /*S*  SCREECH_CODE: KVM-S$KV_BADLDCT
      600    16018              MESSAGE: LDCTXs in KNH$MESS and KV_SSN don't match.
      601    16019        */
      602    16020    6                     CALL KHD$SCREECH (KVM_BADLDCT);

  16020   2 00016B  BB80 0000 0004  03                   LAB,B3   +4
          2 00016E  CBF0 0100                            LAB,B4   256,IMO
          2 000170  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000173       0001                            DC       s:16021,PREL

      603    16021    6                     GOTO CLOCK_LOOP;      /* Don't trash the registers          */

  16021   2 000174  0F81 FECA                            B        s:15898,PREL

      604    16022    6                  END;
      605    16023    5                  KV$PTR$ = KV_SSN.SNCPTR$;

  16023   2 000176  CCC5 0008                            LDB,B4   8,B5
          2 000178  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

      606    16024        /*N* Set up DEV and DBG for debug purposes.  Save current time
      607    16025        for STATs. */
      608    16026        /*
      609    16027        We don't want to send any markers around - we're on the synchronous thread.
      610    16028        */
      611    16029    5                  KV_SSN.MRKRQSENB = '0'B;

  16029   2 00017B  8845 0028                            LBF,'8000'X       40,B5
  16029   2 00017D       8000

      612    16030    5                  %KV_VDI.BSY = '1'B;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:143  
  16030   2 00017E  BC85                                 LDB,B3   ,B5
          2 00017F  8943 0019                            LBT,'0080'X       25,B3
          2 000181       0080

      613    16031    5                  %KV_STT.RCV.SSNINTDATUNTCNT = %KV_STT.RCV.SSNINTDATUNTCNT + 1;

  16031   2 000182  BC84                                 LDB,B3   ,B4
          2 000183  ACC3 0008                            LDB,B2   8,B3
          2 000185  9CC2 0033                            LDB,B1   51,B2
          2 000187  8AC1 0021                            INC      33,B1
          2 000189  8EC1 0020                            CAD      32,B1

      614    16032    5                  %KV_STT.RCV.SSNINTDATUNTBYTCNT = %KV_STT.RCV.SSNINTDATUNTBYTCNT +
             16032                           Y@SIDU_WRDSIZ * 2;

  16032   2 00018B  BC84                                 LDB,B3   ,B4
          2 00018C  ACC3 0008                            LDB,B2   8,B3
          2 00018E  9CC2 0033                            LDB,B1   51,B2
          2 000190  E847 0006                            LDR,R6   Y@SIDU_WRDSIZ,AUTO
          2 000192  70F0                                 DAR,R7   16
          2 000193  7081                                 DOL,R7   1
          2 000194  8441 0022                            AID      34,B1
          2 000196  8D41 0022                            SDI      34,B1

      615    16033    5               END;                        /* END IF KV$SP_MSG.SETUP_SSN         */

      616    16034    4   LOOP_MSG:   Y@NXT_RPTR = Y@MY_RPTR+(Y@SIDU_WRDSIZ+1)/2;

  16034   2 000198  E847 0006            LOOP_MSG        LDR,R6   Y@SIDU_WRDSIZ,AUTO
          2 00019A  6E01                                 ADV,R6   1
          2 00019B  E370 0002                            DIV,R6   2,IMO
          2 00019D  EA47 0007                            ADD,R6   Y@MY_RPTR,AUTO
          2 00019F  EF47 0006                            STR,R6   Y@SIDU_WRDSIZ,AUTO

      617    16035
      618    16036    4               IF KNH_MESS.FPTSZ>0

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:144  
  16036   2 0001A1  ECC7 0004                            LDB,B6   Y@SICI$,AUTO
          2 0001A3  D846 0006                            LDR,R5   6,B6
          2 0001A5  5901 0007                            BEZ,R5   s:16038,PREL

      619    16037    4               THEN Y@FPT$ = PINCRW(ADDR(KNH_MESS), SIZEW(KNH_MESS));

  16037   2 0001A7  DBC6 0008                            LAB,B5   8,B6
          2 0001A9  DFC7 000A                            STB,B5   Y@FPT$,AUTO
          2 0001AB  0F81 0006                            B        s:16040,PREL

      620    16038    4               ELSE Y@FPT$ = ADDR(NIL);

  16038   2 0001AD  DB80 0000 0000                       LAB,B5   0
          2 0001B0  DFC7 000A                            STB,B5   Y@FPT$,AUTO

      621    16039
      622    16040    4               KV_RCVVDO$ = PINCRW(ADDR(KNH_MESS),

  16040   2 0001B2  5041                                 SOR,R5   1
          2 0001B3  F855                                 LDR,R7   R5
          2 0001B4  6C00                                 LDV,R6   0
          2 0001B5  8447 0004                            AID      Y@SICI$,AUTO
          2 0001B7  8470 0000 0008                       AID      8,IMO
          2 0001BA  8D00 0000 0000  xsym                 SDI      KV_RCVVDO$

      623    16041    4                 SIZEW(KNH_MESS) + KNH_MESS.FPTSZ/2);
      624    16042        %KV$BOX(PAGE = YES, TITLE = "Process session interface control information");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:145  
             16060    4   /***************************************************************************
             16061    4    *                                                                         *
             16062    4    *               Process session interface control information             *
             16063    4    *                                                                         *
             16064    4    ***************************************************************************/

      625    16069    5               DO CASE (KNH_MESS.FUNCTION);

  16069   2 0001BD  B806                                 LDR,R3   ,B6
          2 0001BE  3D07                                 CMV,R3   7
          2 0001BF  0281 015B                            BGE      s:16415,PREL
          2 0001C1  A830 0000 01C7  02                   LDR,R2   s:16069+10,R3
          2 0001C4  83A0 0000 01CE  02                   JMP      s:16101,R2
          2 0001C7       014D                            DC       s:16415,PREL
          2 0001C8       0007                            DC       s:16134,PREL
          2 0001C9       0034                            DC       s:16170,PREL
          2 0001CA       00AD                            DC       s:16320,PREL
          2 0001CB       0146                            DC       s:16412,PREL
          2 0001CC       0000                            DC       s:16101,PREL
          2 0001CD       00A9                            DC       s:16288,PREL

      626    16070        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_DATA");

             16088    5   /***************************************************************************
             16089    5    *                                                                         *
             16090    5    *                      Session/CQ message:  KN_FCN_DATA                   *
             16091    5    *                                                                         *
             16092    5    ***************************************************************************/

      627    16097    5               CASE %KN_FCN_DATA;

      628    16098        /*
      629    16099        Session data (presentation protocol) is being passed.
      630    16100        */
      631    16101    5                  KNH_MESS.FLAGS.FREE = '1'B;

  16101   2 0001CE  8906                                 LBT,'8000'X       ,B6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:146  
  16101   2 0001CF       8000

      632    16102    5                  CALL Y$RCVVDO;

  16102   2 0001D0  E3C0 01B3                            LNJ,B6   s:0,PREL
          2 0001D2       0001                            DC       s:16102+3,PREL
          2 0001D3  0F81 0176                            B        s:16441,PREL

      633    16103        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_INIT");

             16121    5   /***************************************************************************
             16122    5    *                                                                         *
             16123    5    *                      Session/CQ message:  KN_FCN_INIT                   *
             16124    5    *                                                                         *
             16125    5    ***************************************************************************/

      634    16130    5               CASE %KN_FCN_INIT;

      635    16131        /*
      636    16132        The distant end is initiating a connection to us.
      637    16133        */
      638    16134    5                  KNH_MESS.FLAGS.FREE = '1'B;

  16134   2 0001D5  8906                                 LBT,'8000'X       ,B6
  16134   2 0001D6       8000

      639    16135    5                  CALL Y$RCVVDO;

  16135   2 0001D7  E3C0 01AC                            LNJ,B6   s:0,PREL
          2 0001D9       0001                            DC       s:16136,PREL

      640    16136    5                  KV@VDH_CNC = KV_VDH_CNC;

  16136   2 0001DA  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_CNC
          2 0001DD  2C00                                 LDV,R2   0
          2 0001DE  6C32                                 LDV,R6   50
          2 0001DF  BBC7 011E                            LAB,B3   KV@VDH_CNC,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:147  
          2 0001E1  3C00                                 LDV,R3   0
          2 0001E2  0008                                 MMM

      641    16137    5                  KV@VDH_CNC.SSNCNCINT = '0'B;

  16137   2 0001E3  8847 0128                            LBF,'8000'X       KV@VDH_CNC+10,AUTO
  16137   2 0001E5       8000

      642    16138    5                  KV@VDH_CNC.DSTNTWADR.LDCTX = KNH_MESS.LDCTX;

  16138   2 0001E6  ECC7 0004                            LDB,B6   Y@SICI$,AUTO
          2 0001E8  E846 0001                            LDR,R6   1,B6
          2 0001EA  EF47 0132                            STR,R6   KV@VDH_CNC+20,AUTO

      643    16139    5                  CALL KVC$CNC(KV@VDH_CNC);

  16139   2 0001EC  DBC7 011E                            LAB,B5   KV@VDH_CNC,AUTO
          2 0001EE  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 0001F0  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0001F2  CBF0 0100                            LAB,B4   256,IMO
          2 0001F4  E380 0000 0000  xent                 LNJ,B6   KVC$CNC
          2 0001F7       0001                            DC       s:16141,PREL

      644    16140        /* Any failure was already cleaned up by KVC */
      645    16141    5                  KV$PTR$ = KV_SSN.SNCPTR$;

  16141   2 0001F8  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0001FB  DCC6 0008                            LDB,B5   8,B6
          2 0001FD  DF80 0000 0000  xsym                 STB,B5   KV$PTR$
          2 000200  0F81 0149                            B        s:16441,PREL

      646    16142        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_INIT_ACK");

             16160    5   /***************************************************************************
             16161    5    *                                                                         *
             16162    5    *                    Session/CQ message:  KN_FCN_INIT_ACK                 *
             16163    5    *                                                                         *
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:148  
             16164    5    ***************************************************************************/

      647    16169    5               CASE %KN_FCN_INIT_ACK;

      648    16170    5                  KNH_MESS.FLAGS.FREE = '1'B;

  16170   2 000202  8906                                 LBT,'8000'X       ,B6
  16170   2 000203       8000

      649    16171    6                  IF FPT_CONNECT_ACK.REASON ~= 0 THEN DO;

  16171   2 000204  E805                                 LDR,R6   ,B5
          2 000205  6901 003E                            BEZ,R6   s:16215,PREL

      650    16172        /*
      651    16173        The connection we initiated was rejected.
      652    16174        */
      653    16175        /*N* do reject */
      654    16176                          %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_LGNRJC,
      655    16177                          PRM = FPT_CONNECT_ACK.REASON);
             16189        /* !C! */
             16190    7           IF KV_SSN.VDI$->KV$VDI.USREVTENB (9) THEN DO;

  16190   2 000207  CC80 0000 0000  xsym                 LDB,B4   KV_RCVSSN$
          2 00020A  BC84                                 LDB,B3   ,B4
          2 00020B  82C3 001F                            LB,'4000'X        31,B3
          2 00020D       4000
          2 00020E  0581 0019                            BBF      s:16204,PREL

             16192    7              KV@USR_EVT = KV_USR_EVT;

  16192   2 000210  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          2 000213  8D47 0116                            SDI      KV@USR_EVT,AUTO

             16193    7              KV@USR_EVT.ID = 9;

  16193   2 000215  5C09                                 LDV,R5   9
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:149  
          2 000216  DAC7 0116                            SRM,R5,'007F'X    KV@USR_EVT,AUTO
          2 000218       007F

             16194    7              KV@USR_EVT.PRM = FPT_CONNECT_ACK.REASON;

  16194   2 000219  C805                                 LDR,R4   ,B5
          2 00021A  CF47 0117                            STR,R4   KV@USR_EVT+1,AUTO

             16195    7              CALL KVV$CALUSR_EVT (KV@USR_EVT);

  16195   2 00021C  BBC7 0116                            LAB,B3   KV@USR_EVT,AUTO
          2 00021E  BFC7 0154                            STB,B3   @ERRCOD+2,AUTO
          2 000220  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000222  CBF0 0100                            LAB,B4   256,IMO
          2 000224  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 000227       0001                            DC       s:16204,PREL

             16200    7              END;

             16202        /* ! ! */
      656    16204    6                     CALL Y$RCVVDO;

  16204   2 000228  E3C0 015B                            LNJ,B6   s:0,PREL
          2 00022A       0001                            DC       s:16208,PREL

      657    16205        /*
      658    16206           If we never got connected to anything, nuke the context.
      659    16207        */
      660    16208    6                     IF NOT KV_SSN.LGCDSC THEN CALL KVC$DSC (KV_VDH_DSC);

  16208   2 00022B  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00022E  82C6 0028                            LB,'0400'X        40,B6
          2 000230       0400
          2 000231  0501 000A                            BBT      s:16209,PREL

  16208   2 000233  BB80 0000 0006  03                   LAB,B3   +6
          2 000236  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:150  
          2 000238  E380 0000 0000  xent                 LNJ,B6   KVC$DSC
          2 00023B       0001                            DC       s:16209,PREL

      661    16209    6                     KV_SSN.RLSSSN = '1'B;

  16209   2 00023C  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00023F  8946 0028                            LBT,'0100'X       40,B6
          2 000241       0100

      662    16210    6                  END; ELSE DO;

  16210   2 000242  0F81 0107                            B        s:16441,PREL

      663    16211        /*
      664    16212        The connection we initiated was accepted.
      665    16213        */
      666    16214        /*N* do accept */
      667    16215    6                     KV_SSN.SSNCNCID = KNH_MESS.LDCTX;

  16215   2 000244  CC80 0000 0000  xsym                 LDB,B4   KV_RCVSSN$
          2 000247  D846 0001                            LDR,R5   1,B6
          2 000249  DF44 0024                            STR,R5   36,B4

      668    16216    7                     IF KV_SSN.LGCDSC THEN DO;

  16216   2 00024B  82C4 0028                            LB,'0400'X        40,B4
  16216   2 00024D       0400
          2 00024E  0581 000D                            BBF      s:16223,PREL

      669    16217        /*
      670    16218           We've sent a DSC_RQS, but the new endpoint didn't get it. Do it again.
      671    16219        */
      672    16220    7                        KV_SSN.LGCDSC = '0'B;

  16220   2 000250  8844 0028                            LBF,'0400'X       40,B4
  16220   2 000252       0400

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:151  
      673    16221    7                        CALL KVC$DSC (KV_VDH_DSC);

  16221   2 000253  BB80 0000 0006  03                   LAB,B3   +6
          2 000256  CBF0 0100                            LAB,B4   256,IMO
          2 000258  E380 0000 0000  xent                 LNJ,B6   KVC$DSC
          2 00025B       0001                            DC       s:16223,PREL

      674    16222    7                     END;

      675    16223    7                     IF NOT KV_SSN.LGN THEN DO;

  16223   2 00025C  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00025F  82C6 0027                            LB,'0001'X        39,B6
          2 000261       0001
          2 000262  0501 000F                            BBT      s:16253,PREL

      676    16224                             %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_LGNACP);
             16236        /* !C! */
             16237    8           IF KV_SSN.VDI$->KV$VDI.USREVTENB (8) THEN DO;

  16237   2 000264  DC86                                 LDB,B5   ,B6
          2 000265  89C5 001F                            CMZ      31,B5
          2 000267  0881 000A                            BAGE     s:16253,PREL

             16244    8              CALL KVV$CALUSR_EVT (8);

  16244   2 000269  BB80 0000 0009  03                   LAB,B3   +9
          2 00026C  CBF0 0100                            LAB,B4   256,IMO
          2 00026E  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 000271       0001                            DC       s:16253,PREL

             16247    8              END;

             16249        /* ! ! */
      677    16251    7                     END;

      678    16252        /*N* REWORK LGNACP */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:152  
      679    16253    6                     CALL Y$RCVVDO;

  16253   2 000272  E3C0 0111                            LNJ,B6   s:0,PREL
          2 000274       0001                            DC       s:16254,PREL

      680    16254    6                  END;

  16254   2 000275  0F81 00D4                            B        s:16441,PREL

      681    16255        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_NOP");

             16273    6   /***************************************************************************
             16274    6    *                                                                         *
             16275    6    *                      Session/CQ message:  KN_FCN_NOP                    *
             16276    6    *                                                                         *
             16277    6    ***************************************************************************/

      682    16282    5               CASE %KN_FCN_NOP;

      683    16283        /*
      684    16284        NOP (no-operation) function.  This signifies the current end
      685    16285        of the receive circular queue, and that we should wrap back
      686    16286        to the beginning of the queue to look for further data.
      687    16287        */
      688    16288    5                  Y@NXT_RPTR = 0;

  16288   2 000277  8747 0006                            CL       Y@SIDU_WRDSIZ,AUTO
          2 000279  0F81 00D0                            B        s:16441,PREL

      689    16289        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_TERM");

             16307    5   /***************************************************************************
             16308    5    *                                                                         *
             16309    5    *                      Session/CQ message:  KN_FCN_TERM                   *
             16310    5    *                                                                         *
             16311    5    ***************************************************************************/

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:153  
      690    16316    5               CASE %KN_FCN_TERM;

      691    16317        /*
      692    16318        The distant end is terminating the connection to us.
      693    16319        */
      694    16320    5                  KNH_MESS.FLAGS.FREE = '1'B;

  16320   2 00027B  8906                                 LBT,'8000'X       ,B6
  16320   2 00027C       8000

      695    16321    5                  CALL Y$RCVVDO;

  16321   2 00027D  E3C0 0106                            LNJ,B6   s:0,PREL
          2 00027F       0001                            DC       s:16322,PREL

      696    16322    5                  IF (FPT_TERM.REASON = 0)

  16322   2 000280  ECC7 000A                            LDB,B6   Y@FPT$,AUTO
          2 000282  E846 0002                            LDR,R6   2,B6
          2 000284  6981 0052                            BNEZ,R6  s:16341,PREL
          2 000286  DB80 0000 0000  03                   LAB,B5   0
          2 000289  5C01                                 LDV,R5   1
          2 00028A  0022                                 ACM      ;
          2 00028B       4406 0000                                ALPHANUM(0,B6,,4,FILL),;
          2 00028D       4005 000B                                ALPHANUM(11,B5,,R5,FILL)
          2 00028F  5381 0047                            CBE      s:16341,PREL

      697    16323    6                    AND (FPT_TERM.RLCID ~= '0'B) THEN DO;

      698    16324        /*
      699    16325        Complete the session disconnect, and start up a new session
      700    16326        to the ultimate network endpoint.
      701    16327        */
      702    16328    6                     CALL KVM$SND (KV_SND_CMPDSCSSN);

  16328   2 000291  BB80 0000 000C  03                   LAB,B3   +12
          2 000294  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:154  
          2 000296  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 000299       0001                            DC       s:16329,PREL

      703    16329    6                     KV_SSN.LGN = '0'B;

  16329   2 00029A  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00029D  8846 0027                            LBF,'0001'X       39,B6
          2 00029F       0001

      704    16330    6                     KV_SSN.STTRQSENB = '1'B;

  16330   2 0002A0  8946 0028                            LBT,'0020'X       40,B6
  16330   2 0002A2       0020

      705    16331    6                     KV_SSN.WATINPDLTMRK = '0'B;

  16331   2 0002A3  8846 0028                            LBF,'1000'X       40,B6
  16331   2 0002A5       1000

      706    16332    6                     KV_SSN.WATOTPDLTMRK = '0'B;

  16332   2 0002A6  8846 0028                            LBF,'2000'X       40,B6
  16332   2 0002A8       2000

      707    16333    6                     KV_SSN.RCVFLWCTRCRDINC = 0;

  16333   2 0002A9  8746 001E                            CL       30,B6

      708    16334    6                     KV@SND_CNC = KV_SND_CNC;

  16334   2 0002AB  AB80 0000 0000  xsym                 LAB,B2   KV_SND_CNC
          2 0002AE  2C00                                 LDV,R2   0
          2 0002AF  6C44                                 LDV,R6   68
          2 0002B0  BBC7 00A6                            LAB,B3   KV@SND_CNC,AUTO
          2 0002B2  3C00                                 LDV,R3   0
          2 0002B3  0008                                 MMM

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:155  
      709    16335    6                     KV@SND_CNC.SCNENDPNTID = '0'B;

  16335   2 0002B4  5C10                                 LDV,R5   16
          2 0002B5  0021                                 ALR      ;
          2 0002B6       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0002B8       4007 00BA                                ALPHANUM(KV@SND_CNC+20,AUTO,,R5,FILL)

      710    16336    6                     KV@SND_CNC.LINSPD = %KV_VDI.LINSPD;

  16336   2 0002BA  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0002BD  437F                                 CSYNC    s:16336+2,SPREL
          2 0002BE  DC86                                 LDB,B5   ,B6
          2 0002BF  E2C5 001E                            LLH,R6   30,B5
          2 0002C1  EAC7 00B9                            SRM,R6,'00FF'X    KV@SND_CNC+19,AUTO
          2 0002C3       00FF

      711    16337    6                     KV@SND_CNC.DSTNTWADR = FPT_TERM.RLCID;

  16337   2 0002C4  DCC7 000A                            LDB,B5   Y@FPT$,AUTO
          2 0002C6  8C85                                 LDI      ,B5
          2 0002C7  8D47 00C2                            SDI      KV@SND_CNC+28,AUTO

      712    16338    6                     CALL KVM$SND(KV@SND_CNC);

  16338   2 0002C9  CBC7 00A6                            LAB,B4   KV@SND_CNC,AUTO
          2 0002CB  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 0002CD  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0002CF  CBF0 0100                            LAB,B4   256,IMO
          2 0002D1  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 0002D4       0001                            DC       s:16339,PREL

      713    16339    6                  END;                     /* END IF FPT_TERM.REASON = 0         */

  16339   2 0002D5  0F81 0074                            B        s:16441,PREL

      714    16340    6                  ELSE DO;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:156  
      715    16341    7                     IF NOT KV_SSN.LGCDSC THEN DO;

  16341   2 0002D7  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 0002DA  82C5 0028                            LB,'0400'X        40,B5
          2 0002DC       0400
          2 0002DD  0501 002E                            BBT      s:16379,PREL

      716    16342        /*
      717    16343           We've received a KN_FCN_TERM with there being any KV$VDO_DSC activity.
      718    16344           Report the disconnect so the VDH-user sees something consistent.
      719    16345           During logon, report a logon_reject, too.
      720    16346        */
      721    16347    8                        IF KV_SSN.LGN THEN DO;

  16347   2 0002DF  82C5 0027                            LB,'0001'X        39,B5
  16347   2 0002E1       0001
          2 0002E2  0581 0020                            BBF      s:16377,PREL

      722    16348                                %KV$CALUSR_EVT (PRM=FPT_TERM.REASON,
      723    16349                                EVT_ID=%KV_USR_EVT_ID_LGNRJC);
             16361        /* !C! */
             16362    9           IF KV_SSN.VDI$->KV$VDI.USREVTENB (9) THEN DO;

  16362   2 0002E4  CC85                                 LDB,B4   ,B5
          2 0002E5  82C4 001F                            LB,'4000'X        31,B4
          2 0002E7       4000
          2 0002E8  0581 001A                            BBF      s:16377,PREL

             16364    9              KV@USR_EVT = KV_USR_EVT;

  16364   2 0002EA  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          2 0002ED  8D47 0116                            SDI      KV@USR_EVT,AUTO

             16365    9              KV@USR_EVT.ID = 9;

  16365   2 0002EF  5C09                                 LDV,R5   9
          2 0002F0  DAC7 0116                            SRM,R5,'007F'X    KV@USR_EVT,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:157  
          2 0002F2       007F

             16366    9              KV@USR_EVT.PRM = FPT_TERM.REASON;

  16366   2 0002F3  C846 0002                            LDR,R4   2,B6
          2 0002F5  CF47 0117                            STR,R4   KV@USR_EVT+1,AUTO

             16367    9              CALL KVV$CALUSR_EVT (KV@USR_EVT);

  16367   2 0002F7  CBC7 0116                            LAB,B4   KV@USR_EVT,AUTO
          2 0002F9  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 0002FB  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0002FD  CBF0 0100                            LAB,B4   256,IMO
          2 0002FF  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 000302       0001                            DC       s:16377,PREL

             16372    9              END;

             16374        /* ! ! */
      724    16376    8                        END;

      725    16377    7                        CALL KVC$DSC (KV_VDH_DSC);

  16377   2 000303  BB80 0000 0006  03                   LAB,B3   +6
          2 000306  CBF0 0100                            LAB,B4   256,IMO
          2 000308  E380 0000 0000  xent                 LNJ,B6   KVC$DSC
          2 00030B       0001                            DC       s:16379,PREL

      726    16378    7                     END;

      727    16379    6                     KV_SSN.RLSSSN = '1'B;

  16379   2 00030C  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00030F  8946 0028                            LBT,'0100'X       40,B6
          2 000311       0100

      728    16380    6                  END;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:158  

  16380   2 000312  0F81 0037                            B        s:16441,PREL

      729    16381        %KV$BOX(PAGE = NO, TITLE = "Session/CQ message:  KN_FCN_TERM_ACK");

             16399    6   /***************************************************************************
             16400    6    *                                                                         *
             16401    6    *                    Session/CQ message:  KN_FCN_TERM_ACK                 *
             16402    6    *                                                                         *
             16403    6    ***************************************************************************/

      730    16408    5               CASE %KN_FCN_TERM_ACK;

      731    16409        /*
      732    16410        The distant end is acknowledging the KN_FCN_TERM we sent.
      733    16411        */
      734    16412    5                  KNH_MESS.FLAGS.FREE = '1'B;

  16412   2 000314  8906                                 LBT,'8000'X       ,B6
  16412   2 000315       8000

      735    16413    5                  CALL Y$RCVVDO;

  16413   2 000316  E3C0 006D                            LNJ,B6   s:0,PREL
          2 000318       0001                            DC       s:16413+3,PREL
          2 000319  0F81 0030                            B        s:16441,PREL

      736    16414    5               CASE (ELSE);

      737    16415    5                  RETURN;

  16415   2 00031B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      738    16416    5               END;                        /* END CASE KNH$MESS.FUNCTION         */

      739    16417
      740    16418
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:159  
      741    16419    4            END;                           /* END IF KNH_MESS.UIDX.CQ_HNDID = 0  */
      742    16420    4            ELSE IF KNH_MESS.FUNCTION=%KN_FCN_NOP THEN DO;

  16420   2 00031E  C804                                 LDR,R4   ,B4
          2 00031F  4D06                                 CMV,R4   6
          2 000320  0981 0005                            BNE      s:16429,PREL

      743    16421        /*
      744    16422        The CQ needs to be wrapped.  The UID HND_ID is just junk.  Wrap it.
      745    16423        */
      746    16424    4               Y@NXT_RPTR = 0;

  16424   2 000322  8747 0006                            CL       Y@SIDU_WRDSIZ,AUTO

      747    16425    4            END; ELSE DO;             /* END IF KNH_MESS.FUNCTION = %KN_FCN_NOP  */

  16425   2 000324  0F81 0025                            B        s:16441,PREL

      748    16426        /*
      749    16427        This KNH_MESS isn't for VDH.  CALL the appropriate CQ handler.
      750    16428        */
      751    16429    4               Y@CQ_HNDSBR$ = KV_CQ_HNDSBR$(KNH_MESS.UIDX.CQ_HNDID);

  16429   2 000326  B855                                 LDR,R3   R5
          2 000327  BCB0 0000 0000  xsym                 LDB,B3   KV_CQ_HNDSBR$,R3
          2 00032A  BFC7 0045                            STB,B3   Y@CQ_HNDSBR$,AUTO

      752    16430    4               Y@NXT_RPTR = 65535;

  16430   2 00032C  8947 0006                            LBT,'FFFF'X       Y@SIDU_WRDSIZ,AUTO
  16430   2 00032E       FFFF

      753    16431        /*
      754    16432        Put a bad value in the parameter, so we can tell if it gets returned.
      755    16433        */
      756    16434    4               CALL Y@CQ_HNDSBR$(Y@NXT_RPTR);

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:160  
  16434   2 00032F  ABC7 0006                            LAB,B2   Y@SIDU_WRDSIZ,AUTO
          2 000331  AFC7 0154                            STB,B2   @ERRCOD+2,AUTO
          2 000333  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000335  9CC7 0045                            LDB,B1   Y@CQ_HNDSBR$,AUTO
          2 000337  CBF0 0100                            LAB,B4   256,IMO
          2 000339  E381                                 LNJ,B6   ,B1
          2 00033A       0001                            DC       s:16435,PREL

      757    16435    4               Y@MY_RPTR = Y@NXT_RPTR; /* any change to RCQ.RPTR will be a NOP   */

  16435   2 00033B  E847 0006                            LDR,R6   Y@SIDU_WRDSIZ,AUTO
          2 00033D  EF47 0007                            STR,R6   Y@MY_RPTR,AUTO

      758    16436    4               IF Y@MY_RPTR=65535 THEN Y@NXT_RPTR = KNH_QHDR.RCQ.RPTR;

  16436   2 00033F  E970 FFFF                            CMR,R6   -1,IMO
          2 000341  0981 0008                            BNE      s:16441,PREL

  16436   2 000343  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 000346  E846 0001                            LDR,R6   1,B6
          2 000348  EF47 0006                            STR,R6   Y@SIDU_WRDSIZ,AUTO

      759    16437        /*
      760    16438        If no RPTR was returned, then assume all messages were processed.
      761    16439        */
      762    16440    4            END;                      /* END ELSE KNH_MESS.UIDX.CQ_HNDID = 0     */

      763    16441    3            IF KNH_QHDR.RCQ.SZ-Y@NXT_RPTR<=(SIZEW(KNH_MESS)+1)/2

  16441   2 00034A  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 00034D  E846 0002                            LDR,R6   2,B6
          2 00034F  E247 0006                            SUB,R6   Y@SIDU_WRDSIZ,AUTO
          2 000351  6D04                                 CMV,R6   4
          2 000352  0A01 0008                            BAG      s:16448,PREL
          2 000354  E847 0006                            LDR,R6   Y@SIDU_WRDSIZ,AUTO
          2 000356  E906                                 CMR,R6   ,B6
          2 000357  0381 0003                            BLE      s:16448,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:161  

      764    16442    3              AND Y@NXT_RPTR>KNH_QHDR.RCQ.IPTR
      765    16443        /*
      766    16444        There isn't room in the CQ for a NOP message to wrap it, and
      767    16445        the insert pointer has been wrapped.  Wrap the remove pointer.
      768    16446        */
      769    16447    3            THEN Y@NXT_RPTR = 0;

  16447   2 000359  8747 0006                            CL       Y@SIDU_WRDSIZ,AUTO

      770    16448    3            IF Y@MY_RPTR=KNH_QHDR.RCQ.RPTR THEN KNH_QHDR.RCQ.RPTR = Y@NXT_RPTR;

  16448   2 00035B  E847 0007                            LDR,R6   Y@MY_RPTR,AUTO
          2 00035D  E946 0001                            CMR,R6   1,B6
          2 00035F  0981 0005                            BNE      s:16449,PREL

  16448   2 000361  D847 0006                            LDR,R5   Y@SIDU_WRDSIZ,AUTO
          2 000363  DF46 0001                            STR,R5   1,B6

      771    16449    3            Y@MY_RPTR = Y@NXT_RPTR;

  16449   2 000365  E847 0006                            LDR,R6   Y@SIDU_WRDSIZ,AUTO
          2 000367  EF47 0007                            STR,R6   Y@MY_RPTR,AUTO

      772    16450    3         END;                              /* END WHILE RPTR ~= IPTR             */

  16450   2 000369  0F81 FCD5                            B        s:15898,PREL

      773    16451        %EJECT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:162  
      774    16452    2         CALL Y$CLNUP_SSN;

  16452   2 00036B  E3C0 10AD                            LNJ,B6   s:0,PREL
          2 00036D       0001                            DC       s:16453,PREL

      775    16453    2         CALL KHC$WAIT;

  16453   2 00036E  CBF0 0000                            LAB,B4   0,IMO
          2 000370  E380 0000 0000  xent                 LNJ,B6   KHC$WAIT
          2 000373       0001                            DC       s:16454,PREL

      776    16454    2         IF KNH_QHDR.CTX.WU THEN CALL KVM$FLUSHCQ;

  16454   2 000374  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 000377  82C6 0009                            LB,'0001'X        9,B6
          2 000379       0001
          2 00037A  0581 FCBD                            BBF      s:15896,PREL

  16454   2 00037C  CBF0 0000                            LAB,B4   0,IMO
          2 00037E  E380 0000 0000  xent                 LNJ,B6   KVM$FLUSHCQ
          2 000381       0001                            DC       s:16455,PREL

      777    16455    2      END;                                 /* END WHILE ('1'B)                   */

  16455   2 000382  0F81 FCB5                            B        s:15896,PREL

      778    16456        %KV$BOX(PAGE = YES, TITLE = "High-level presentation message processing.");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:163  
             16474    2   /***************************************************************************
             16475    2    *                                                                         *
             16476    2    *                High-level presentation message processing.              *
             16477    2    *                                                                         *
             16478    2    ***************************************************************************/

      779    16483    1   Y$RCVVDO: PROC ALTRET;

  16483   2 000384  EFC7 014E            Y$RCVVDO        STB,B6   KV@VDOVLP_MRK+5,AUTO

      780    16484        /*
      781    16485        Receive VDOs.
      782    16486        If there is any presentation protocol (session data) present,
      783    16487        process it.
      784    16488        */
      785    16489    3      IF KV_SSN.TRCBFR$ ~= ADDR(NIL) THEN DO;

  16489   2 000386  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 000389  8DC5 0010                            CMN      16,B5
          2 00038B  0901 0013                            BE       s:16498,PREL

      786    16490        /*
      787    16491        The VDH trace buffer does exist.  Do VDH tracing.
      788    16492        */
      789    16493    3         Y@TRCBFR$ = KV_SSN.TRCBFR$;

  16493   2 00038D  CCC5 0010                            LDB,B4   16,B5
          2 00038F  CFC7 003A                            STB,B4   Y@TRCBFR$,AUTO

      790    16494    3         Y@TRCENT = Y_TRCENT_RCVSSN;

  16494   2 000391  E800 0000 007E  01                   LDR,R6   Y_TRCENT_RCVSSN
          2 000394  EF47 0039                            STR,R6   Y@TRCENT,AUTO

      791    16495    3         Y@TRCENT.FNC = KNH_MESS.FUNCTION;

  16495   2 000396  BCC7 0004                            LDB,B3   Y@SICI$,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:164  
          2 000398  D803                                 LDR,R5   ,B3
          2 000399  DAC7 0039                            SRM,R5,'00FF'X    Y@TRCENT,AUTO
          2 00039B       00FF

      792    16496    3         CALL Y$TRC;

  16496   2 00039C  E3C0 121A                            LNJ,B6   s:0,PREL
          2 00039E       0001                            DC       s:16498,PREL

      793    16497    3      END;                                 /* END IF TRCBFR$ ~= NIL              */

      794    16498    3      DO WHILE KV_RCVVDO$ < Y@SIDU_END$;

  16498   2 00039F  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 0003A2  EDC7 0008                            CMB,B6   Y@SIDU_END$,AUTO
          2 0003A4  0281 1053                            BGE      s:18972,PREL

      795    16499        /*
      796    16500        There is presentation protocol present.
      797    16501        This loop is iterated for each VDO.
      798    16502        */
      799    16503    3         KV_RCVVDO = Y_RCVVDO;

  16503   2 0003A6  AB80 0000 0045  01                   LAB,B2   Y_RCVVDO
          2 0003A9  2C00                                 LDV,R2   0
          2 0003AA  6C44                                 LDV,R6   68
          2 0003AB  BB87                                 LAB,B3   ,AUTO
          2 0003AC  3C28                                 LDV,R3   40
          2 0003AD  0008                                 MMM

      800    16504        /*
      801    16505        Set up the pointer to the presentation (virtual device)
      802    16506        protocol definition entry for
      803    16507        this KV$VDO_...
      804    16508        */
      805    16509    3         KV_RCVVDO.VDP_VDO = KV_VDP_VDO(KV_VDO.FNC);

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:165  
  16509   2 0003AE  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 0003B1  B286                                 LLH,R3   ,B6
          2 0003B2  8CB0 0000 0000  xsym                 LDI      KV_VDP_VDO,R3
          2 0003B5  8D47 0031                            SDI      KV_RCVVDO+29,AUTO

      806    16510    3         %KV_STT.RCV.VDOCNT = %KV_STT.RCV.VDOCNT + 1;

  16510   2 0003B7  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0003BA  CC85                                 LDB,B4   ,B5
          2 0003BB  ACC4 0008                            LDB,B2   8,B4
          2 0003BD  9CC2 0033                            LDB,B1   51,B2
          2 0003BF  8AC1 0017                            INC      23,B1
          2 0003C1  8EC1 0016                            CAD      22,B1

      807    16511    3         %KV_STT.RCVVDOFNCCNT(KV_VDO.FNC) = %KV_STT.RCVVDOFNCCNT(KV_VDO.FNC) + 1;

  16511   2 0003C3  CC85                                 LDB,B4   ,B5
          2 0003C4  ACC4 0008                            LDB,B2   8,B4
          2 0003C6  9CC2 0033                            LDB,B1   51,B2
          2 0003C8  B286                                 LLH,R3   ,B6
          2 0003C9  BF47 0154                            STR,R3   @ERRCOD+2,AUTO
          2 0003CB  3E23                                 ADV,R3   35
          2 0003CC  A847 0154                            LDR,R2   @ERRCOD+2,AUTO
          2 0003CE  2E23                                 ADV,R2   35
          2 0003CF  8CB1                                 LDI      ,B1,R3
          2 0003D0  8470 0000 0001                       AID      1,IMO
          2 0003D3  8D21                                 SDI      ,B1,R2

      808    16512
      809    16513    4         IF KV_SSN.TRCBFR$ ~= ADDR(NIL) THEN DO;

  16513   2 0003D4  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0003D7  8DC6 0010                            CMN      16,B6
          2 0003D9  0901 0010                            BE       s:16522,PREL

      810    16514        /*
      811    16515        The VDH trace buffer does exist.  Do VDH tracing.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:166  
      812    16516        */
      813    16517    4            Y@TRCENT = Y_TRCENT_RCVVDO;

  16517   2 0003DB  E800 0000 007F  01                   LDR,R6   Y_TRCENT_RCVVDO
          2 0003DE  EF47 0039                            STR,R6   Y@TRCENT,AUTO

      814    16518    4            Y@TRCENT.FNC = KV_VDO.FNC;

  16518   2 0003E0  DC80 0000 0000  xsym                 LDB,B5   KV_RCVVDO$
          2 0003E3  D285                                 LLH,R5   ,B5
          2 0003E4  DAC7 0039                            SRM,R5,'00FF'X    Y@TRCENT,AUTO
          2 0003E6       00FF

      815    16519    4            CALL Y$TRC;

  16519   2 0003E7  E3C0 11CF                            LNJ,B6   s:0,PREL
          2 0003E9       0001                            DC       s:16522,PREL

      816    16520    4         END;                              /* END IF TRCBFR$ ~= NIL              */

      817    16521
      818    16522    4         IF KV_VDO.STR~=%KV_STR.ID AND KV_RCVVDO.VDP_VDO.SETSTR THEN DO;

  16522   2 0003EA  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0003ED  DCC6 0004                            LDB,B5   4,B6
          2 0003EF  CC80 0000 0000  xsym                 LDB,B4   KV_RCVVDO$
          2 0003F2  E804                                 LDR,R6   ,B4
          2 0003F3  E570 007F                            AND,R6   127,IMO
          2 0003F5  D2C5 001C                            LLH,R5   28,B5
          2 0003F7  E955                                 CMR,R6   R5
          2 0003F8  0901 0015                            BE       s:16526,PREL
          2 0003FA  82C7 0031                            LB,'0080'X        KV_RCVVDO+29,AUTO
          2 0003FC       0080
          2 0003FD  0581 0010                            BBF      s:16526,PREL

      819    16523    4            IF %KV_STR.SNDMAXNMBRCR~=0 THEN KV_RCVVDO.VDP_VDO.RSTSTR = '1'B;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:167  
  16523   2 0003FF  C845 0019                            LDR,R4   25,B5
          2 000401  4901 0004                            BEZ,R4   s:16524,PREL

  16523   2 000403  8947 0031                            LBT,'0040'X       KV_RCVVDO+29,AUTO
  16523   2 000405       0040

      820    16524    4            CALL KVS$SETSTR;

  16524   2 000406  CBF0 0000                            LAB,B4   0,IMO
          2 000408  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 00040B       0001                            DC       s:16525,PREL

      821    16525    4         END;

  16525   2 00040C  0F81 0023                            B        s:16538,PREL

      822    16526    4         ELSE IF KV$PTR$~=%KV_VDI.ASNINPPTR$ THEN DO;

  16526   2 00040E  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000411  AC83                                 LDB,B2   ,B3
          2 000412  EDC2 0006                            CMB,B6   6,B2
          2 000414  0901 000C                            BE       s:16533,PREL

      823    16527
      824    16528        /* We need to set up the context properly. */
      825    16529
      826    16530    4            KV_RCVVDO.VDP_VDO.SETSTR = '1'B;

  16530   2 000416  8947 0031                            LBT,'0080'X       KV_RCVVDO+29,AUTO
  16530   2 000418       0080

      827    16531    4            CALL KVS$SETSTR;

  16531   2 000419  CBF0 0000                            LAB,B4   0,IMO
          2 00041B  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 00041E       0001                            DC       s:16532,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:168  
      828    16532    4         END;

  16532   2 00041F  0F81 0010                            B        s:16538,PREL

      829    16533    3         ELSE IF KV_RCVVDO.VDP_VDO.PSTSTR AND NOT KV_RCVVDO.VDP_VDO.RSTSTR

  16533   2 000421  82C7 0031                            LB,'0020'X        KV_RCVVDO+29,AUTO
  16533   2 000423       0020
          2 000424  0581 000B                            BBF      s:16538,PREL
          2 000426  82C7 0031                            LB,'0040'X        KV_RCVVDO+29,AUTO
          2 000428       0040
          2 000429  0501 0006                            BBT      s:16538,PREL

      830    16534        /*
      831    16535           We're to get there and stay there. Make sure we do.
      832    16536        */
      833    16537    3         THEN KV_RCVSSN.PRVSTR$ = ADDR(NIL);

  16537   2 00042B  9B80 0000 0000                       LAB,B1   0
          2 00042E  9FC7 0012                            STB,B1   KV_RCVSSN+4,AUTO

      834    16538    3         Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO$, KV_RCVVDO.VDP_VDO.WRDSIZ);

  16538   2 000430  B847 0032                            LDR,R3   KV_RCVVDO+30,AUTO
          2 000432  B570 00FF                            AND,R3   255,IMO
          2 000434  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 000437  DBB6                                 LAB,B5   ,B6,R3
          2 000438  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO

      835    16539
      836    16540    4         IF KV_VDO.VLP THEN DO;

  16540   2 00043A  8286                                 LB,'0080'X        ,B6
  16540   2 00043B       0080
          2 00043C  0581 00EB                            BBF      s:16944,PREL

      837    16541        /*
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:169  
      838    16542        There are VDOVLPs following this VDO.
      839    16543        */
      840    16544    5            DO UNTIL KV_VDOVLP.LST;

      841    16545        /*
      842    16546        This loop is iterated for each VDOVLP.
      843    16547        */
      844    16548    5               IF Y@NXTVDOVLP$ > Y@SIDU_END$ THEN EXIT;

  16548   2 00043E  ECC7 0036                            LDB,B6   Y@NXTVDOVLP$,AUTO
          2 000440  EDC7 0008                            CMB,B6   Y@SIDU_END$,AUTO
          2 000442  0301 00E5                            BG       s:16944,PREL

      845    16549        /*
      846    16550        This VDOVLP goes beyond the end of the SIDU.
      847    16551        Either the presentation message is screwed up, or
      848    16552        the session interface is.
      849    16553        */
      850    16554    5               KV_RCVVDO.VDOVLP$ = Y@NXTVDOVLP$;

  16554   2 000444  EFC7 0014                            STB,B6   KV_RCVVDO,AUTO

      851    16555    6               DO CASE (KV_VDOVLP.TYP);

  16555   2 000446  B806                                 LDR,R3   ,B6
          2 000447  3048                                 SOR,R3   8
          2 000448  B570 007F                            AND,R3   127,IMO
          2 00044A  3D0B                                 CMV,R3   11
          2 00044B  0281 00BF                            BGE      s:16939,PREL
          2 00044D  A830 0000 0453  02                   LDR,R2   s:16555+13,R3
          2 000450  83A0 0000 045E  02                   JMP      s:16587,R2
          2 000453       00AD                            DC       s:16939,PREL
          2 000454       0000                            DC       s:16587,PREL
          2 000455       000B                            DC       s:16621,PREL
          2 000456       0016                            DC       s:16655,PREL
          2 000457       0021                            DC       s:16689,PREL
          2 000458       003A                            DC       s:16724,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:170  
          2 000459       0061                            DC       s:16792,PREL
          2 00045A       0069                            DC       s:16825,PREL
          2 00045B       0083                            DC       s:16863,PREL
          2 00045C       00A5                            DC       s:16901,PREL
          2 00045D       0051                            DC       s:16759,PREL

      852    16556        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_CG_MSGID");

             16574    6   /***************************************************************************
             16575    6    *                                                                         *
             16576    6    *                Presentation parameter:  KV$VDOVLP_CG_MSGID              *
             16577    6    *                                                                         *
             16578    6    ***************************************************************************/

      853    16583        /*
      854    16584        Build a vector to the VLP for CG_MSGID (comgroup MSGID parameter).
      855    16585        */
      856    16586    6               CASE (%KV_VDOVLP_TYP_CG_MSGID);

      857    16587    6                  KV_RCVVDO.VDOVLP_CG_MSGID$ = KV_RCVVDO.VDOVLP$;

  16587   2 00045E  EFC7 0018                            STB,B6   KV_RCVVDO+4,AUTO

      858    16588    6                  KV_RCVVDO.VDP_VDO.RUTACK = '0'B; /* A marker needs it now.     */

  16588   2 000460  8847 0031                            LBF,'0010'X       KV_RCVVDO+29,AUTO
  16588   2 000462       0010

      859    16589    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_CG_MSGID));

  16589   2 000463  DBC6 0006                            LAB,B5   6,B6
          2 000465  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO
          2 000467  0F81 00BB                            B        s:16942,PREL

      860    16590        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_CG_MSGTYP");

             16608    6   /***************************************************************************
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:171  
             16609    6    *                                                                         *
             16610    6    *                Presentation parameter:  KV$VDOVLP_CG_MSGTYP             *
             16611    6    *                                                                         *
             16612    6    ***************************************************************************/

      861    16617        /*
      862    16618        Build a vector to the VLP for CG_MSGTYP (comgroup MSGTYP parameter).
      863    16619        */
      864    16620    6               CASE (%KV_VDOVLP_TYP_CG_MSGTYP);

      865    16621    6                  KV_RCVVDO.VDOVLP_CG_MSGTYP$ = KV_RCVVDO.VDOVLP$;

  16621   2 000469  EFC7 001A                            STB,B6   KV_RCVVDO+6,AUTO

      866    16622    6                  KV_RCVVDO.VDP_VDO.RUTACK = '0'B; /* A marker needs it now.     */

  16622   2 00046B  8847 0031                            LBF,'0010'X       KV_RCVVDO+29,AUTO
  16622   2 00046D       0010

      867    16623    6                 Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_CG_MSGTYP));

  16623   2 00046E  DBC6 0006                            LAB,B5   6,B6
          2 000470  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO
          2 000472  0F81 00B0                            B        s:16942,PREL

      868    16624        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_CG_STA");

             16642    6   /***************************************************************************
             16643    6    *                                                                         *
             16644    6    *                 Presentation parameter:  KV$VDOVLP_CG_STA               *
             16645    6    *                                                                         *
             16646    6    ***************************************************************************/

      869    16651        /*
      870    16652        Build a vector to the VLP for CG_STA (comgroup STA parameter).
      871    16653        */
      872    16654    6               CASE (%KV_VDOVLP_TYP_CG_STA);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:172  

      873    16655    6                  KV_RCVVDO.VDOVLP_CG_STA$ = KV_RCVVDO.VDOVLP$;

  16655   2 000474  EFC7 001C                            STB,B6   KV_RCVVDO+8,AUTO

      874    16656    6                  KV_RCVVDO.VDP_VDO.RUTACK = '0'B; /* A marker needs it now.     */

  16656   2 000476  8847 0031                            LBF,'0010'X       KV_RCVVDO+29,AUTO
  16656   2 000478       0010

      875    16657    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_CG_STA));

  16657   2 000479  DBC6 0006                            LAB,B5   6,B6
          2 00047B  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO
          2 00047D  0F81 00A5                            B        s:16942,PREL

      876    16658        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_DAT1");

             16676    6   /***************************************************************************
             16677    6    *                                                                         *
             16678    6    *                  Presentation parameter:  KV$VDOVLP_DAT1                *
             16679    6    *                                                                         *
             16680    6    ***************************************************************************/

      877    16685        /*
      878    16686        Build a vector to the VLP for DAT1 (data, 1 size byte).
      879    16687        */
      880    16688    6               CASE (%KV_VDOVLP_TYP_DAT1);

      881    16689    6                  KV_RCVVDO.VDOVLP_DAT1$ = KV_RCVVDO.VDOVLP$;

  16689   2 00047F  EFC7 001E                            STB,B6   KV_RCVVDO+10,AUTO

      882    16690    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_DAT1));

  16690   2 000481  E806                                 LDR,R6   ,B6
          2 000482  E570 00FF                            AND,R6   255,IMO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:173  
          2 000484  6003                                 SOL,R6   3
          2 000485  6E1F                                 ADV,R6   31
          2 000486  6044                                 SOR,R6   4
          2 000487  F856                                 LDR,R7   R6
          2 000488  6C00                                 LDV,R6   0
          2 000489  8447 0014                            AID      KV_RCVVDO,AUTO
          2 00048B  8D47 0036                            SDI      Y@NXTVDOVLP$,AUTO

      883    16691    6                  KV_RCVVDO.OTPLCL.BFR_.ADR$ = ADDR(KV_VDOVLP_DAT1.DAT);

  16691   2 00048D  DBC6 0001                            LAB,B5   1,B6
          2 00048F  DFC7 002D                            STB,B5   KV_RCVVDO+25,AUTO

      884    16692    6                  KV_RCVVDO.OTPLCL.BFR_.BYTSIZ = LENGTHC(KV_VDOVLP_DAT1.DAT);

  16692   2 000491  D806                                 LDR,R5   ,B6
          2 000492  D570 00FF                            AND,R5   255,IMO
          2 000494  DF47 0030                            STR,R5   KV_RCVVDO+28,AUTO
          2 000496  0F81 008C                            B        s:16942,PREL

      885    16693        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_DAT2");

             16711    6   /***************************************************************************
             16712    6    *                                                                         *
             16713    6    *                  Presentation parameter:  KV$VDOVLP_DAT2                *
             16714    6    *                                                                         *
             16715    6    ***************************************************************************/

      886    16720        /*
      887    16721        Build a vector to the VLP for DAT2 (data, 2 size bytes).
      888    16722        */
      889    16723    6               CASE (%KV_VDOVLP_TYP_DAT2);

      890    16724    6                  KV_RCVVDO.VDOVLP_DAT2$ = KV_RCVVDO.VDOVLP$;

  16724   2 000498  EFC7 0020                            STB,B6   KV_RCVVDO+12,AUTO

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:174  
      891    16725    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_DAT2));

  16725   2 00049A  E846 0001                            LDR,R6   1,B6
          2 00049C  6003                                 SOL,R6   3
          2 00049D  6E2F                                 ADV,R6   47
          2 00049E  6044                                 SOR,R6   4
          2 00049F  F856                                 LDR,R7   R6
          2 0004A0  6C00                                 LDV,R6   0
          2 0004A1  8447 0014                            AID      KV_RCVVDO,AUTO
          2 0004A3  8D47 0036                            SDI      Y@NXTVDOVLP$,AUTO

      892    16726    6                  KV_RCVVDO.OTPLCL.BFR_.ADR$ = ADDR(KV_VDOVLP_DAT2.DAT);

  16726   2 0004A5  DBC6 0002                            LAB,B5   2,B6
          2 0004A7  DFC7 002D                            STB,B5   KV_RCVVDO+25,AUTO

      893    16727    6                  KV_RCVVDO.OTPLCL.BFR_.BYTSIZ = LENGTHC(KV_VDOVLP_DAT2.DAT);

  16727   2 0004A9  D846 0001                            LDR,R5   1,B6
          2 0004AB  DF47 0030                            STR,R5   KV_RCVVDO+28,AUTO
          2 0004AD  0F81 0075                            B        s:16942,PREL

      894    16728        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_ENTSRD");

             16746    6   /***************************************************************************
             16747    6    *                                                                         *
             16748    6    *                 Presentation parameter:  KV$VDOVLP_ENTSRD               *
             16749    6    *                                                                         *
             16750    6    ***************************************************************************/

      895    16755        /*
      896    16756        Build a vector to the VLP for ENTSRD (enter-SRD device character string).
      897    16757        */
      898    16758    6               CASE (%KV_VDOVLP_TYP_ENTSRD);

      899    16759    6                  KV_RCVVDO.VDOVLP_ENTSRD$ = KV_RCVVDO.VDOVLP$;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:175  
  16759   2 0004AF  EFC7 0022                            STB,B6   KV_RCVVDO+14,AUTO

      900    16760    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_ENTSRD));

  16760   2 0004B1  E806                                 LDR,R6   ,B6
          2 0004B2  E570 00FF                            AND,R6   255,IMO
          2 0004B4  6003                                 SOL,R6   3
          2 0004B5  6E1F                                 ADV,R6   31
          2 0004B6  6044                                 SOR,R6   4
          2 0004B7  F856                                 LDR,R7   R6
          2 0004B8  6C00                                 LDV,R6   0
          2 0004B9  8447 0014                            AID      KV_RCVVDO,AUTO
          2 0004BB  8D47 0036                            SDI      Y@NXTVDOVLP$,AUTO
          2 0004BD  0F81 0065                            B        s:16942,PREL

      901    16761        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_ERR");

             16779    6   /***************************************************************************
             16780    6    *                                                                         *
             16781    6    *                   Presentation parameter:  KV$VDOVLP_ERR                *
             16782    6    *                                                                         *
             16783    6    ***************************************************************************/

      902    16788        /*
      903    16789        Build a vector to the VLP for ERR (ERR code).
      904    16790        */
      905    16791    6               CASE (%KV_VDOVLP_TYP_ERR);

      906    16792    6                  KV_RCVVDO.VDOVLP_ERR$ = KV_RCVVDO.VDOVLP$;

  16792   2 0004BF  EFC7 0024                            STB,B6   KV_RCVVDO+16,AUTO

      907    16793    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_ERR));

  16793   2 0004C1  DBC6 0003                            LAB,B5   3,B6
          2 0004C3  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO
          2 0004C5  0F81 005D                            B        s:16942,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:176  

      908    16794        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_FLDID");

             16812    6   /***************************************************************************
             16813    6    *                                                                         *
             16814    6    *                  Presentation parameter:  KV$VDOVLP_FLDID               *
             16815    6    *                                                                         *
             16816    6    ***************************************************************************/

      909    16821        /*
      910    16822        Build a vector to the VLP for FLDID (field ID).
      911    16823        */
      912    16824    6               CASE (%KV_VDOVLP_TYP_FLDID);

      913    16825    6                  KV_RCVVDO.VDOVLP_FLDID$ = KV_RCVVDO.VDOVLP$;

  16825   2 0004C7  EFC7 0026                            STB,B6   KV_RCVVDO+18,AUTO

      914    16826    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_FLDID));

  16826   2 0004C9  DBC6 0002                            LAB,B5   2,B6
          2 0004CB  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO

      915    16827    6                  IF %KV_MVD.ORG~=%KV#VD_ORG_FORM OR %KV_MVD.FRMSCNINH THEN EXIT;

  16827   2 0004CD  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0004D0  BCC4 0006                            LDB,B3   6,B4
          2 0004D2  E2C3 0015                            LLH,R6   21,B3
          2 0004D4  6D04                                 CMV,R6   4
          2 0004D5  0981 004D                            BNE      s:16942,PREL
          2 0004D7  82C3 0016                            LB,'0010'X        22,B3
          2 0004D9       0010
          2 0004DA  0501 0048                            BBT      s:16942,PREL

      916    16828        /*
      917    16829        Find the associated field on a FORM device.
      918    16830        */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:177  
      919    16831    6                  CALL Y$SLCFLD_FLDID;

  16831   2 0004DC  E3C0 119A                            LNJ,B6   s:0,PREL
          2 0004DE       0001                            DC       s:16831+3,PREL
          2 0004DF  0F81 0043                            B        s:16942,PREL

      920    16832        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_KEY");

             16850    6   /***************************************************************************
             16851    6    *                                                                         *
             16852    6    *                   Presentation parameter:  KV$VDOVLP_KEY                *
             16853    6    *                                                                         *
             16854    6    ***************************************************************************/

      921    16859        /*
      922    16860        Build a vector to the VLP for KEY.
      923    16861        */
      924    16862    6               CASE (%KV_VDOVLP_TYP_KEY);

      925    16863    6                  KV_RCVVDO.VDOVLP_KEY$ = KV_RCVVDO.VDOVLP$;

  16863   2 0004E1  EFC7 0028                            STB,B6   KV_RCVVDO+20,AUTO

      926    16864    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_KEY));

  16864   2 0004E3  E806                                 LDR,R6   ,B6
          2 0004E4  E570 00FF                            AND,R6   255,IMO
          2 0004E6  6003                                 SOL,R6   3
          2 0004E7  6E1F                                 ADV,R6   31
          2 0004E8  6044                                 SOR,R6   4
          2 0004E9  F856                                 LDR,R7   R6
          2 0004EA  6C00                                 LDV,R6   0
          2 0004EB  8447 0014                            AID      KV_RCVVDO,AUTO
          2 0004ED  8D47 0036                            SDI      Y@NXTVDOVLP$,AUTO

      927    16865    6                  IF %KV_MVD.ORG~=%KV#VD_ORG_FORM OR %KV_MVD.FRMSCNINH THEN EXIT;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:178  
  16865   2 0004EF  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0004F2  CCC5 0006                            LDB,B4   6,B5
          2 0004F4  D2C4 0015                            LLH,R5   21,B4
          2 0004F6  5D04                                 CMV,R5   4
          2 0004F7  0981 002B                            BNE      s:16942,PREL
          2 0004F9  82C4 0016                            LB,'0010'X        22,B4
          2 0004FB       0010
          2 0004FC  0501 0026                            BBT      s:16942,PREL

      928    16866        /*
      929    16867        This key is specifying line/column on a FORM virtual device.
      930    16868        */
      931    16869    6                  CALL Y$SLCFLD_KEY;

  16869   2 0004FE  E3C0 1159                            LNJ,B6   s:0,PREL
          2 000500       0001                            DC       s:16869+3,PREL
          2 000501  0F81 0021                            B        s:16942,PREL

      932    16870        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  KV$VDOVLP_MRK");

             16888    6   /***************************************************************************
             16889    6    *                                                                         *
             16890    6    *                   Presentation parameter:  KV$VDOVLP_MRK                *
             16891    6    *                                                                         *
             16892    6    ***************************************************************************/

      933    16897        /*
      934    16898        Build a vector to the VLP for MRK (marker ID).
      935    16899        */
      936    16900    6               CASE (%KV_VDOVLP_TYP_MRK);

      937    16901    6                  KV_RCVVDO.VDOVLP_MRK$ = KV_RCVVDO.VDOVLP$;

  16901   2 000503  EFC7 002A                            STB,B6   KV_RCVVDO+22,AUTO

      938    16902    6                  Y@NXTVDOVLP$ = PINCRW(KV_RCVVDO.VDOVLP$, SIZEW(KV_VDOVLP_MRK));

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:179  
  16902   2 000505  DBC6 0004                            LAB,B5   4,B6
          2 000507  DFC7 0036                            STB,B5   Y@NXTVDOVLP$,AUTO
          2 000509  0F81 0019                            B        s:16942,PREL

      939    16903        %KV$BOX(PAGE = NO, TITLE = "Presentation parameter:  Unrecognized");

             16921    6   /***************************************************************************
             16922    6    *                                                                         *
             16923    6    *                   Presentation parameter:  Unrecognized                 *
             16924    6    *                                                                         *
             16925    6    ***************************************************************************/

      940    16930    6               CASE (ELSE);

      941    16931        /*
      942    16932        We received a VDOVLP we don't have a case statement for.
      943    16933        */
      944    16934        /*E* ERROR:         KVM-E$BADVDOVLPFNCCOD-0
      945    16935        *    MESSAGE:       Bad function code on KV$VDOVLP
      946    16936        *    DESCRIPTION:   VDH received a message containing a KV$VDOVLP.FNC
      947    16937        *                   that is illegal
      948    16938        */
      949    16939    6                 CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_BADVDOVLPFNCCOD, %KH_CHN)
             16939                           ;

  16939   2 00050B  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00050E  CC85                                 LDB,B4   ,B5
          2 00050F  BC84                                 LDB,B3   ,B4
          2 000510  BFC7 0156                            STB,B3   @ERRCOD+4,AUTO
          2 000512  CB80 0000 0015  01                   LAB,B4   FPT_WRSYSLOG_BADVDOVLPFNCCOD
          2 000515  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 000517  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000519  CBF0 0200                            LAB,B4   512,IMO
          2 00051B  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 00051E       0001                            DC       s:16940,PREL

      950    16940    6                  ALTRETURN;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:180  

  16940   2 00051F  ECC7 014E                            LDB,B6   KV@VDOVLP_MRK+5,AUTO
          2 000521  B806                                 LDR,R3   ,B6
          2 000522  C3B6                                 LNJ,B4   ,B6,R3

      951    16941    6               END;                        /* END DO CASE KV_VDOVLP.TYP          */

      952    16942    5            END;                           /* END DO UNTIL KV_VDOVLP.LST         */

  16942   2 000523  ECC7 0014                            LDB,B6   KV_RCVVDO,AUTO
          2 000525  8986                                 CMZ      ,B6
          2 000526  0881 FF17                            BAGE     s:16548,PREL

      953    16943    4         END;                              /* END IF KV_VDO.VLP                  */

      954    16944    4         IF Y@NXTVDOVLP$ > Y@SIDU_END$ THEN DO;

  16944   2 000528  ECC7 0036                            LDB,B6   Y@NXTVDOVLP$,AUTO
          2 00052A  EDC7 0008                            CMB,B6   Y@SIDU_END$,AUTO
          2 00052C  0381 0019                            BLE      s:16959,PREL

      955    16945        /*
      956    16946        This VDOVLP goes beyond the end of the SIDU.
      957    16947        Either the presentation message is screwed up, or
      958    16948        the session interface is.
      959    16949        */
      960    16950        /*E* ERROR:         KVM-E$VDOVLPBYNSIDU-0
      961    16951        *    MESSAGE:       KV$VDOVLP goes beyond the end of the SIDU
      962    16952        *    DESCRIPTION:   VDH received a message containing a KV$VDOVLP
      963    16953        *                   that goes beyond the end of the Session Interface
      964    16954        *                   data unit (framed by the KNH_MESS structure).
      965    16955        */
      966    16956    4            CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_VDOVLPBYNSIDU, %KH_CHN);

  16956   2 00052E  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000531  CC85                                 LDB,B4   ,B5
          2 000532  BC84                                 LDB,B3   ,B4
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:181  
          2 000533  BFC7 0156                            STB,B3   @ERRCOD+4,AUTO
          2 000535  CB80 0000 0000  01                   LAB,B4   FPT_WRSYSLOG_VDOVLPBYNSIDU
          2 000538  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 00053A  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 00053C  CBF0 0200                            LAB,B4   512,IMO
          2 00053E  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 000541       0001                            DC       s:16957,PREL

      967    16957    4            ALTRETURN;

  16957   2 000542  ECC7 014E                            LDB,B6   KV@VDOVLP_MRK+5,AUTO
          2 000544  B806                                 LDR,R3   ,B6
          2 000545  C3B6                                 LNJ,B4   ,B6,R3

      968    16958    4         END;                              /* END IF Y@NXTVDOVLP$ > Y@SIDU_END$  */
      969    16959    3         %KV_STT.RCV.VDOBYTCNT = %KV_STT.RCV.VDOBYTCNT +

  16959   2 000546  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000549  CC85                                 LDB,B4   ,B5
          2 00054A  BCC4 0008                            LDB,B3   8,B4
          2 00054C  ACC3 0033                            LDB,B2   51,B3
          2 00054E  8CC7 0036                            LDI      Y@NXTVDOVLP$,AUTO
          2 000550  8480 0000 0000  xsym                 SID      KV_RCVVDO$
          2 000553  7081                                 DOL,R7   1
          2 000554  8442 0018                            AID      24,B2
          2 000556  8D42 0018                            SDI      24,B2

      970    16960    3           POFFW(Y@NXTVDOVLP$, KV_RCVVDO$)*2;
      971    16961    3   Y$DO_CASE_FNC:
      972    16962    4         DO CASE (KV_VDO.FNC);

  16962   2 000558  CC80 0000 0000  xsym Y$DO_CASE_FNC   LDB,B4   KV_RCVVDO$
          2 00055B  B284                                 LLH,R3   ,B4
          2 00055C  3D23                                 CMV,R3   35
          2 00055D  0281 0D5A                            BGE      s:18847,PREL
          2 00055F  A830 0000 0565  02                   LDR,R2   Y$DO_CASE_FNC+13,R3
          2 000562  83A0 0000 0588  02                   JMP      s:16995,R2
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:182  
          2 000565       0D30                            DC       s:18847,PREL
          2 000566       0D30                            DC       s:18847,PREL
          2 000567       0000                            DC       s:16995,PREL
          2 000568       007A                            DC       s:17050,PREL
          2 000569       0D30                            DC       s:18847,PREL
          2 00056A       0235                            DC       s:17241,PREL
          2 00056B       0235                            DC       s:17241,PREL
          2 00056C       0549                            DC       s:17540,PREL
          2 00056D       0818                            DC       s:17851,PREL
          2 00056E       08BA                            DC       s:17913,PREL
          2 00056F       0927                            DC       s:17965,PREL
          2 000570       093C                            DC       s:17998,PREL
          2 000571       0944                            DC       s:18027,PREL
          2 000572       0D30                            DC       s:18847,PREL
          2 000573       095B                            DC       s:18065,PREL
          2 000574       0D30                            DC       s:18847,PREL
          2 000575       0972                            DC       s:18150,PREL
          2 000576       0D30                            DC       s:18847,PREL
          2 000577       0D30                            DC       s:18847,PREL
          2 000578       09E7                            DC       s:18247,PREL
          2 000579       0A14                            DC       s:18283,PREL
          2 00057A       0D30                            DC       s:18847,PREL
          2 00057B       0A19                            DC       s:18316,PREL
          2 00057C       0BC2                            DC       s:18522,PREL
          2 00057D       0D30                            DC       s:18847,PREL
          2 00057E       0C69                            DC       s:18628,PREL
          2 00057F       0C7D                            DC       s:18665,PREL
          2 000580       0C82                            DC       s:18694,PREL
          2 000581       0D30                            DC       s:18847,PREL
          2 000582       0C87                            DC       s:18726,PREL
          2 000583       0D11                            DC       s:18807,PREL
          2 000584       0D45                            DC       s:18851,PREL
          2 000585       0D45                            DC       s:18851,PREL
          2 000586       099C                            DC       s:18200,PREL
          2 000587       012E                            DC       s:17160,PREL

      973    16963        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  BLKDAT (block-data)");
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:183  

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:184  
             16981    4   /***************************************************************************
             16982    4    *                                                                         *
             16983    4    *                 Presentation message:  BLKDAT (block-data)              *
             16984    4    *                                                                         *
             16985    4    ***************************************************************************/

      974    16990    4         CASE %KV_VDO_FNC_BLKDAT;

      975    16991        /*
      976    16992        Block data VDO.  The other end can no longer send us data
      977    16993        because it has run out of flow control credits.
      978    16994        */
      979    16995    4            KV_SSN.OTPBLK = '1'B;

  16995   2 000588  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 00058B  8943 0028                            LBT,'4000'X       40,B3
          2 00058D       4000

      980    16996    4            IF KV_VDO_BLKDAT.RCRBYTSIZ > %KV_VDI.RCVFLWCTRMAXCRD THEN

  16996   2 00058E  AC83                                 LDB,B2   ,B3
          2 00058F  E844 0001                            LDR,R6   1,B4
          2 000591  E942 0017                            CMR,R6   23,B2
          2 000593  0381 0003                            BLE      s:17006,PREL

      981    16997        /*
      982    16998        The number of bytes in the record the other end wants to send
      983    16999        is greater than the maximum flow control value.  Temorarily
      984    17000        increase the max so the record can be sent.
      985    17001        */
      986    17002    4            KV_SSN.RCVFLWCTRTMPMAXCRD = KV_VDO_BLKDAT.RCRBYTSIZ;

  17002   2 000595  EF43 001F                            STR,R6   31,B3

      987    17003        /*
      988    17004        Possibly ask the other end for more data.
      989    17005        */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:185  
      990    17006    4            IF KV_SSN.NO_WATREDTRG THEN CALL KVI$ENBNO_WATRED;

  17006   2 000597  82C3 0028                            LB,'0004'X        40,B3
  17006   2 000599       0004
          2 00059A  0581 0009                            BBF      s:17007,PREL

  17006   2 00059C  CBF0 0000                            LAB,B4   0,IMO
          2 00059E  E380 0000 0000  xent                 LNJ,B6   KVI$ENBNO_WATRED
          2 0005A1       0001                            DC       s:17006+11,PREL
          2 0005A2  0F81 0020                            B        s:17010,PREL

      991    17007    4            ELSE IF %KV_VDI.RQSOTP AND (NOT KV_SSN.REDRQSPND

  17007   2 0005A4  82C2 0019                            LB,'0008'X        25,B2
  17007   2 0005A6       0008
          2 0005A7  0581 001B                            BBF      s:17010,PREL
          2 0005A9  82C3 0028                            LB,'0002'X        40,B3
          2 0005AB       0002
          2 0005AC  0581 000D                            BBF      s:17009,PREL
          2 0005AE  89C5 001B                            CMZ      27,B5
          2 0005B0  0801 0009                            BAL      s:17009,PREL
          2 0005B2  E842 001D                            LDR,R6   29,B2
          2 0005B4  6045                                 SOR,R6   5
          2 0005B5  E570 0003                            AND,R6   3,IMO
          2 0005B7  6D02                                 CMV,R6   2
          2 0005B8  0981 000A                            BNE      s:17010,PREL

      992    17008    4              OR KV$PTR.INPCNDPND.TRN OR %KV_VDI.INPUNT=%KV_INPUNT_RCR)
      993    17009    4            THEN CALL KVM$SND (KV_SND_RQSDAT_GNR);

  17009   2 0005BA  BB80 0000 000E  03                   LAB,B3   +14
          2 0005BD  CBF0 0100                            LAB,B4   256,IMO
          2 0005BF  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 0005C2       0001                            DC       s:17010,PREL

      994    17010    4            IF KV_SSN.OTPBLK AND NOT KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT)

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:186  
  17010   2 0005C3  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0005C6  82C6 0028                            LB,'4000'X        40,B6
          2 0005C8       4000
          2 0005C9  0581 0D03                            BBF      s:18851,PREL
          2 0005CB  82C6 0029                            LB,'0040'X        41,B6
          2 0005CD       0040
          2 0005CE  0501 0CFE                            BBT      s:18851,PREL
          2 0005D0  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0005D3  CCC5 0008                            LDB,B4   8,B5
          2 0005D5  82C4 0016                            LB,'0010'X        22,B4
          2 0005D7       0010
          2 0005D8  0581 0CF4                            BBF      s:18851,PREL
          2 0005DA  BC85                                 LDB,B3   ,B5
          2 0005DB  AC83                                 LDB,B2   ,B3
          2 0005DC  82C2 0009                            LB,'00FF'X        9,B2
          2 0005DE       00FF
          2 0005DF  0581 0CED                            BBF      s:18851,PREL

      995    17011    5              AND %KV_MRD.INPUT AND %KH_CHN.REDTIMOUTPRD~=0 THEN DO;

      996    17012    5               Y@CLK.PRD = %KH_CHN.REDTIMOUTPRD;

  17012   2 0005E1  E842 0009                            LDR,R6   9,B2
          2 0005E3  E570 00FF                            AND,R6   255,IMO
          2 0005E5  EF00 0000 0010  00                   STR,R6   Y@CLK+10

      997    17013    5               Y@CLK.UID$ = KV_RCVSSN$;

  17013   2 0005E8  EF80 0000 0008  00                   STB,B6   Y@CLK+2

      998    17014    5               Y@CLK.CTBCTX$ = ADDR(NIL);

  17014   2 0005EB  CB80 0000 0000                       LAB,B4   0
          2 0005EE  CF80 0000 0006  00                   STB,B4   Y@CLK

      999    17015    6               CALL KHC$CLOCK (Y@CLK) WHENRETURN DO;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:187  
  17015   2 0005F1  BB80 0000 0010  03                   LAB,B3   +16
          2 0005F4  CBF0 0100                            LAB,B4   256,IMO
          2 0005F6  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          2 0005F9       0007                            DC       s:17018,PREL

     1000    17016    6                  KV_SSN.CLKSET(%KV_CLKNMB_REDTIMOUT) = '1'B;

  17016   2 0005FA  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0005FD  8946 0029                            LBT,'0040'X       41,B6
          2 0005FF       0040

     1001    17017    6               END;

     1002    17018    5            END;

  17018   2 000600  0F81 0CCC                            B        s:18851,PREL

     1003    17019        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  CLS (path close)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:188  
             17037    5   /***************************************************************************
             17038    5    *                                                                         *
             17039    5    *                  Presentation message:  CLS (path close)                *
             17040    5    *                                                                         *
             17041    5    ***************************************************************************/

     1004    17046    4         CASE %KV_VDO_FNC_CLSSSN_RQS;

     1005    17047        /*
     1006    17048        The path is being closed.
     1007    17049        */
     1008    17050    4            KV@VDH_DAT = KV_VDH_DAT_CLS;

  17050   2 000602  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_DAT_CLS
          2 000605  2C00                                 LDV,R2   0
          2 000606  6C10                                 LDV,R6   16
          2 000607  BBC7 0137                            LAB,B3   KV@VDH_DAT,AUTO
          2 000609  3C00                                 LDV,R3   0
          2 00060A  0008                                 MMM

     1009    17051    4            CALL KVI$ACTRED (KV@VDH_DAT);

  17051   2 00060B  EBC7 0137                            LAB,B6   KV@VDH_DAT,AUTO
          2 00060D  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 00060F  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000611  CBF0 0100                            LAB,B4   256,IMO
          2 000613  E380 0000 0000  xent                 LNJ,B6   KVI$ACTRED
          2 000616       0001                            DC       s:17052,PREL

     1010    17052    5            IF KV_SSN.LGN THEN DO;

  17052   2 000617  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00061A  82C6 0027                            LB,'0001'X        39,B6
          2 00061C       0001
          2 00061D  0581 0025                            BBF      s:17089,PREL

     1011    17053        /*
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:189  
     1012    17054           Report logon-reject if that is the case
     1013    17055        */
     1014    17056                    %KV$CALUSR_EVT (EVT_ID=%KV_USR_EVT_ID_LGNRJC,
     1015    17057                    PRM=KV_VDO_CLSSSN.RSN);
             17069        /* !C! */
             17070    6           IF KV_SSN.VDI$->KV$VDI.USREVTENB (9) THEN DO;

  17070   2 00061F  DC86                                 LDB,B5   ,B6
          2 000620  82C5 001F                            LB,'4000'X        31,B5
          2 000622       4000
          2 000623  0581 007B                            BBF      s:17101,PREL

             17072    6              KV@USR_EVT = KV_USR_EVT;

  17072   2 000625  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          2 000628  8D47 0116                            SDI      KV@USR_EVT,AUTO

             17073    6              KV@USR_EVT.ID = 9;

  17073   2 00062A  5C09                                 LDV,R5   9
          2 00062B  DAC7 0116                            SRM,R5,'007F'X    KV@USR_EVT,AUTO
          2 00062D       007F

             17074    6              KV@USR_EVT.PRM = KV_VDO_CLSSSN.RSN;

  17074   2 00062E  DC80 0000 0000  xsym                 LDB,B5   KV_RCVVDO$
          2 000631  C845 0001                            LDR,R4   1,B5
          2 000633  CF47 0117                            STR,R4   KV@USR_EVT+1,AUTO

             17075    6              CALL KVV$CALUSR_EVT (KV@USR_EVT);

  17075   2 000635  CBC7 0116                            LAB,B4   KV@USR_EVT,AUTO
          2 000637  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 000639  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 00063B  CBF0 0100                            LAB,B4   256,IMO
          2 00063D  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 000640       0001                            DC       s:17084,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:190  

             17080    6              END;

             17082        /* ! ! */
     1016    17084    5            END;

  17084   2 000641  0F81 005D                            B        s:17101,PREL

     1017    17085        /*
     1018    17086        Do a new-line if we're in the middle of a line,
     1019    17087        or a new-page if specified and we're in the middle of a page.
     1020    17088        */
     1021    17089    4            ELSE IF %KV_MRD.PRINTTYPE AND %KV_MRD.OUTPUT AND NOT %KV_VDI.PHSDSC

  17089   2 000643  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000646  CCC5 0008                            LDB,B4   8,B5
          2 000648  82C4 0017                            LB,'0010'X        23,B4
          2 00064A       0010
          2 00064B  0581 0053                            BBF      s:17101,PREL
          2 00064D  82C4 0016                            LB,'0008'X        22,B4
          2 00064F       0008
          2 000650  0581 004E                            BBF      s:17101,PREL
          2 000652  BC86                                 LDB,B3   ,B6
          2 000653  82C3 0019                            LB,'0040'X        25,B3
          2 000655       0040
          2 000656  0501 0048                            BBT      s:17101,PREL

     1022    17090    5            THEN IF %KV_MRD.FF_FLUSH THEN DO;

  17090   2 000658  82C4 0018                            LB,'0004'X        24,B4
  17090   2 00065A       0004
          2 00065B  0581 0032                            BBF      s:17099,PREL

     1023    17091    5               IF %KV_SRD.LNG<255 AND %KV_SRD.CRT_PST=%KV_SRD.TOPLFT_PST

  17091   2 00065D  ACC5 000A                            LDB,B2   10,B5
          2 00065F  E2C2 000E                            LLH,R6   14,B2
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:191  
          2 000661  E970 00FF                            CMR,R6   255,IMO
          2 000663  0881 0009                            BAGE     s:17093,PREL
          2 000665  8CC2 0015                            LDI      21,B2
          2 000667  84C2 0009                            SID      9,B2
          2 000669  6981 0003                            BNEZ,R6  s:17093,PREL
          2 00066B  7901 0020                            BEZ,R7   s:17098,PREL

     1024    17092    5               THEN EXIT;
     1025    17093    5               %KV_MVD.FRMSCNINH = '1'B;   /* No PAGBRK - stop at TOF            */

  17093   2 00066D  9CC5 0006                            LDB,B1   6,B5
          2 00066F  8941 0016                            LBT,'0010'X       22,B1
          2 000671       0010

     1026    17094    5               CALL KVO$SCRENDNO_HLT;

  17094   2 000672  CBF0 0000                            LAB,B4   0,IMO
          2 000674  E380 0000 0000  xent                 LNJ,B6   KVO$SCRENDNO_HLT
          2 000677       0001                            DC       s:17095,PREL

     1027    17095    5               %KV_MVD.PAGBRKPND = '1'B;   /* Ignore PAG VFCs                    */

  17095   2 000678  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00067B  DCC6 0006                            LDB,B5   6,B6
          2 00067D  8945 0016                            LBT,'0001'X       22,B5
          2 00067F       0001

     1028    17096    5               %KV_MVD.FRMSCNINH = '0'B;   /* And set up for continuing          */

  17096   2 000680  DCC6 0006                            LDB,B5   6,B6
          2 000682  8845 0016                            LBF,'0010'X       22,B5
          2 000684       0010

     1029    17097    5               %KV_VDI.DVCPGNENB = '0'B;   /* with the rest of the header        */

  17097   2 000685  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 000688  CC85                                 LDB,B4   ,B5
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:192  
          2 000689  8844 0019                            LBF,'0004'X       25,B4
          2 00068B       0004

     1030    17098    5            END;

  17098   2 00068C  0F81 0012                            B        s:17101,PREL

     1031    17099    4            ELSE IF %KV_SRD.CRT.LIN<=%KV_SRD.HI_NONBLN.LIN

  17099   2 00068E  ACC5 000A                            LDB,B2   10,B5
          2 000690  E842 0015                            LDR,R6   21,B2
          2 000692  E942 0017                            CMR,R6   23,B2
          2 000694  0A01 000A                            BAG      s:17101,PREL

     1032    17100    4            THEN CALL KVO$PST (KV_VDH_PST_NEWLIN_VRT);

  17100   2 000696  BB80 0000 0012  03                   LAB,B3   +18
          2 000699  CBF0 0100                            LAB,B4   256,IMO
          2 00069B  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          2 00069E       0001                            DC       s:17101,PREL

     1033    17101    4            KV_SSN.OPN = '0'B;

  17101   2 00069F  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0006A2  8846 0028                            LBF,'0040'X       40,B6
          2 0006A4       0040

     1034    17102                 %KV$CALUSR_EVT (EVT_ID=%KV_USR_EVT_ID_CLS);
             17114        /* !C! */
             17115    5           IF KV_SSN.VDI$->KV$VDI.USREVTENB (2) THEN DO;

  17115   2 0006A5  DC86                                 LDB,B5   ,B6
          2 0006A6  82C5 001E                            LB,'0020'X        30,B5
          2 0006A8       0020
          2 0006A9  0581 0C23                            BBF      s:18851,PREL

             17122    5              CALL KVV$CALUSR_EVT (2);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:193  

  17122   2 0006AB  BB80 0000 0015  03                   LAB,B3   +21
          2 0006AE  CBF0 0100                            LAB,B4   256,IMO
          2 0006B0  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 0006B3       0001                            DC       s:17125,PREL

             17125    5              END;

  17125   2 0006B4  0F81 0C18                            B        s:18851,PREL

             17127        /* ! ! */
     1035    17129        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  CLSSTR (close stream)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:194  
             17147    5   /***************************************************************************
             17148    5    *                                                                         *
             17149    5    *                Presentation message:  CLSSTR (close stream)             *
             17150    5    *                                                                         *
             17151    5    ***************************************************************************/

     1036    17156    4         CASE %KV_VDO_FNC_CLSSTR;

     1037    17157        /*
     1038    17158        Close stream VDO.  The options make it interesting.
     1039    17159        */
     1040    17160    4            %KV_STR.ERR = '0'B;

  17160   2 0006B6  BCC5 0004                            LDB,B3   4,B5
          2 0006B8  8743 0013                            CL       19,B3
          2 0006BA  8743 0014                            CL       20,B3

     1041    17161    5            IF %KV_MVD.ORG>=%KV#VD_ORG_X364 THEN DO;

  17161   2 0006BC  BCC5 0006                            LDB,B3   6,B5
          2 0006BE  E2C3 0015                            LLH,R6   21,B3
          2 0006C0  6D02                                 CMV,R6   2
          2 0006C1  0201 0063                            BL       s:17182,PREL

     1042    17162    5               %KV_STR.GRPRND = '0'B;

  17162   2 0006C3  ACC5 0004                            LDB,B2   4,B5
          2 0006C5  87C2 001F                            CLH      31,B2

     1043    17163    6               IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;

  17163   2 0006C7  BCC5 0006                            LDB,B3   6,B5
          2 0006C9  E2C3 0015                            LLH,R6   21,B3
          2 0006CB  6D02                                 CMV,R6   2
          2 0006CC  0981 0010                            BNE      s:17167+2,PREL

     1044    17164    6                  IF NOT %KV_STR.OPN THEN EXIT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:195  

  17164   2 0006CE  ACC5 0004                            LDB,B2   4,B5
          2 0006D0  82C2 001C                            LB,'0001'X        28,B2
          2 0006D2       0001
          2 0006D3  0581 0007                            BBF      s:17167,PREL

     1045    17165        /* Leave it X364 if not opened by this stream. */
     1046    17166    6                  CALL KVC$RLSFRM;

  17166   2 0006D5  CBF0 0000                            LAB,B4   0,IMO
          2 0006D7  E380 0000 0000  xent                 LNJ,B6   KVC$RLSFRM
          2 0006DA       0001                            DC       s:17167,PREL

     1047    17167    6               END; ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN DO;

  17167   2 0006DB  0F81 0049                            B        s:17182,PREL

  17167   2 0006DD  6D05                                 CMV,R6   5
          2 0006DE  0981 0015                            BNE      s:17172,PREL

     1048    17168    6                  CALL KVS$SETSTR;

  17168   2 0006E0  CBF0 0000                            LAB,B4   0,IMO
          2 0006E2  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 0006E5       0001                            DC       s:17169,PREL

     1049    17169    6                  CALL KVE$DLTALLRCR;

  17169   2 0006E6  CBF0 0000                            LAB,B4   0,IMO
          2 0006E8  E380 0000 0000  xent                 LNJ,B6   KVE$DLTALLRCR
          2 0006EB       0001                            DC       s:17170,PREL

     1050    17170    6                  CALL KVE$DSPUPD;

  17170   2 0006EC  CBF0 0000                            LAB,B4   0,IMO
          2 0006EE  E380 0000 0000  xent                 LNJ,B6   KVE$DSPUPD
          2 0006F1       0001                            DC       s:17171,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:196  

     1051    17171    6               END; ELSE DO;

  17171   2 0006F2  0F81 0032                            B        s:17182,PREL

     1052    17172    6                  %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ALL;

  17172   2 0006F4  ACC5 000E                            LDB,B2   14,B5
          2 0006F6  5C03                                 LDV,R5   3
          2 0006F7  D7C2 0005                            STH,R5   5,B2

     1053    17173    6                  CALL Y$FRMVDO;

  17173   2 0006F9  E3C0 1009                            LNJ,B6   s:0,PREL
          2 0006FB       0001                            DC       s:17174,PREL

     1054    17174    6                  %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;

  17174   2 0006FC  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0006FF  DCC6 000E                            LDB,B5   14,B6
          2 000701  87C5 0005                            CLH      5,B5

     1055    17175    7                  IF %KV_MVD.RETYPOVR AND %KV_LINLST.FRMDSP THEN DO;

  17175   2 000703  DCC6 0006                            LDB,B5   6,B6
          2 000705  82C5 0016                            LB,'0080'X        22,B5
          2 000707       0080
          2 000708  0581 001C                            BBF      s:17182,PREL
          2 00070A  CCC6 000E                            LDB,B4   14,B6
          2 00070C  82C4 0005                            LB,'0040'X        5,B4
          2 00070E       0040
          2 00070F  0581 0015                            BBF      s:17182,PREL

     1056    17176    7                     CALL KVS$SETSTR;

  17176   2 000711  CBF0 0000                            LAB,B4   0,IMO
          2 000713  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:197  
          2 000716       0001                            DC       s:17177,PREL

     1057    17177    7                     CALL KVF$UPDFRM_CRT;

  17177   2 000717  CBF0 0000                            LAB,B4   0,IMO
          2 000719  E380 0000 0000  xent                 LNJ,B6   KVF$UPDFRM_CRT
          2 00071C       0001                            DC       s:17178,PREL

     1058    17178    7                     %KV_LINLST.FRMDSP = '0'B;

  17178   2 00071D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000720  DCC6 000E                            LDB,B5   14,B6
          2 000722  8845 0005                            LBF,'0040'X       5,B5
          2 000724       0040

     1059    17179    7                  END;

     1060    17180    6               END;

     1061    17181    5            END;

     1062    17182    4            %KV_STR.OPN = '0'B;

  17182   2 000725  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000728  DCC6 0004                            LDB,B5   4,B6
          2 00072A  8845 001C                            LBF,'0001'X       28,B5
          2 00072C       0001

     1063    17183    4            IF KV_VDO.STR~=1               /* Never release stream 1             */

  17183   2 00072D  DC80 0000 0000  xsym                 LDB,B5   KV_RCVVDO$
          2 000730  E805                                 LDR,R6   ,B5
          2 000731  E570 007F                            AND,R6   127,IMO
          2 000733  6D01                                 CMV,R6   1
          2 000734  0901 0B98                            BE       s:18851,PREL

     1064    17184    5            THEN IF KV_VDO_CLSSTR.NEWSSN THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:198  

  17184   2 000736  82C5 0001                            LB,'4000'X        1,B5
  17184   2 000738       4000
          2 000739  0581 005A                            BBF      s:17201,PREL

     1065    17185        /* We want a new connection, using this stream - which is then disassociated
     1066    17186           from this one. */
     1067    17187
     1068    17188    5               CALL KVS$SETSTR;

  17188   2 00073B  CBF0 0000                            LAB,B4   0,IMO
          2 00073D  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 000740       0001                            DC       s:17189,PREL

     1069    17189    5               IF %KV_MVD.ORG~=%KV#VD_ORG_UR THEN CALL KVC$RLSFRM;

  17189   2 000741  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000744  DCC6 0006                            LDB,B5   6,B6
          2 000746  E2C5 0015                            LLH,R6   21,B5
          2 000748  6D01                                 CMV,R6   1
          2 000749  0901 0007                            BE       s:17190,PREL

  17189   2 00074B  CBF0 0000                            LAB,B4   0,IMO
          2 00074D  E380 0000 0000  xent                 LNJ,B6   KVC$RLSFRM
          2 000750       0001                            DC       s:17190,PREL

     1070    17190    5               KV@VDH_CNC = KV_VDH_CNC;

  17190   2 000751  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_CNC
          2 000754  2C00                                 LDV,R2   0
          2 000755  6C32                                 LDV,R6   50
          2 000756  BBC7 011E                            LAB,B3   KV@VDH_CNC,AUTO
          2 000758  3C00                                 LDV,R3   0
          2 000759  0008                                 MMM

     1071    17191    5               KV@VDH_CNC.NEWSSN = '1'B;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:199  
  17191   2 00075A  8947 0128                            LBT,'4000'X       KV@VDH_CNC+10,AUTO
  17191   2 00075C       4000

     1072    17192    5               KV@VDH_CNC.SSNCNCINT = '0'B;

  17192   2 00075D  8847 0128                            LBF,'8000'X       KV@VDH_CNC+10,AUTO
  17192   2 00075F       8000

     1073    17193    5               KV@VDH_CNC.LCLENDPNTID = %KH_CHN.TERMID;

  17193   2 000760  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000763  DC86                                 LDB,B5   ,B6
          2 000764  CC85                                 LDB,B4   ,B5
          2 000765  AB84                                 LAB,B2   ,B4
          2 000766  2C24                                 LDV,R2   36
          2 000767  6C10                                 LDV,R6   16
          2 000768  BBC7 0129                            LAB,B3   KV@VDH_CNC+11,AUTO
          2 00076A  3C00                                 LDV,R3   0
          2 00076B  0008                                 MMM

     1074    17194    6               CALL KVC$CNC (KV@VDH_CNC) WHENRETURN DO;

  17194   2 00076C  EBC7 011E                            LAB,B6   KV@VDH_CNC,AUTO
          2 00076E  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 000770  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000772  CBF0 0100                            LAB,B4   256,IMO
          2 000774  E380 0000 0000  xent                 LNJ,B6   KVC$CNC
          2 000777       001B                            DC       s:17200,PREL

     1075    17195    6                  IF KV_RCVSSN.PRVSTR$~=ADDR(NIL)

  17195   2 000778  8DC7 0012                            CMN      KV_RCVSSN+4,AUTO
          2 00077A  0901 000E                            BE       s:17198,PREL

     1076    17196    6                  THEN IF KV_RCVSSN.PRVSTR$->KV$STR.SSN$~=KV_RCVSSN$

  17196   2 00077C  ECC7 0012                            LDB,B6   KV_RCVSSN+4,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:200  
          2 00077E  DC86                                 LDB,B5   ,B6
          2 00077F  DD80 0000 0000  xsym                 CMB,B5   KV_RCVSSN$
          2 000782  0901 0006                            BE       s:17198,PREL

     1077    17197    6                  THEN KV_RCVSSN.PRVSTR$ = ADDR(NIL);

  17197   2 000784  CB80 0000 0000                       LAB,B4   0
          2 000787  CFC7 0012                            STB,B4   KV_RCVSSN+4,AUTO

     1078    17198    6                  CALL KVS$SETSTR(1);

  17198   2 000789  BB80 0000 0018  03                   LAB,B3   +24
          2 00078C  CBF0 0100                            LAB,B4   256,IMO
          2 00078E  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 000791       0001                            DC       s:17200,PREL

     1079    17199    6               END;

     1080    17200    5            END;

  17200   2 000792  0F81 0B3A                            B        s:18851,PREL

     1081    17201    5            ELSE IF KV_VDO_CLSSTR.DLT THEN DO;

  17201   2 000794  89C5 0001                            CMZ      1,B5
          2 000796  0881 0B36                            BAGE     s:18851,PREL

     1082    17202        /* The stream's context is to be released. */
     1083    17203
     1084    17204    5               CALL KVS$SETSTR;

  17204   2 000798  CBF0 0000                            LAB,B4   0,IMO
          2 00079A  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 00079D       0001                            DC       s:17205,PREL

     1085    17205    5               IF KV_RCVSSN.PRVSTR$=KV$PTR.STR$ THEN KV_RCVSSN.PRVSTR$ = ADDR(NIL);

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:201  
  17205   2 00079E  ECC7 0012                            LDB,B6   KV_RCVSSN+4,AUTO
          2 0007A0  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0007A3  EDC5 0004                            CMB,B6   4,B5
          2 0007A5  0981 0006                            BNE      s:17206,PREL

  17205   2 0007A7  CB80 0000 0000                       LAB,B4   0
          2 0007AA  CFC7 0012                            STB,B4   KV_RCVSSN+4,AUTO

     1086    17206    5               CALL KVC$RLSSTR;

  17206   2 0007AC  CBF0 0000                            LAB,B4   0,IMO
          2 0007AE  E380 0000 0000  xent                 LNJ,B6   KVC$RLSSTR
          2 0007B1       0001                            DC       s:17207,PREL

     1087    17207    5               CALL KVS$SETSTR(1);

  17207   2 0007B2  BB80 0000 0018  03                   LAB,B3   +24
          2 0007B5  CBF0 0100                            LAB,B4   256,IMO
          2 0007B7  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 0007BA       0001                            DC       s:17208,PREL

     1088    17208    5            END;

  17208   2 0007BB  0F81 0B11                            B        s:18851,PREL

     1089    17209        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  DAT (data)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:202  
             17227    5   /***************************************************************************
             17228    5    *                                                                         *
             17229    5    *                     Presentation message:  DAT (data)                   *
             17230    5    *                                                                         *
             17231    5    ***************************************************************************/

     1090    17236    4         CASE %KV_VDO_FNC_DAT,%KV_VDO_FNC_DAT_IMD;

     1091    17237        /*
     1092    17238        Data VDO.  The other end is sending us data (e.g., text).
     1093    17239        */
     1094    17240
     1095    17241    5            IF %KV_VDI.PHSDSC THEN DO;

  17241   2 0007BD  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 0007C0  AC83                                 LDB,B2   ,B3
          2 0007C1  82C2 0019                            LB,'0040'X        25,B2
          2 0007C3       0040
          2 0007C4  0581 000A                            BBF      s:17255,PREL

     1096    17242
     1097    17243        /* we had a physical disconnect (line dropped)                      */
     1098    17244
     1099    17245        /*E* ERROR:  KVM-E$DATDLT_DSC-C
     1100    17246        MESSAGE0:  Data was ignored because it was received after a disconnect
     1101    17247        MESSAGE1:  Data (probably written by a CP-6 or LCP-6 program) has been
     1102    17248        ignored because it was received after a disconnect was initiated
     1103    17249        (probably caused by the terminal's link dropping).
     1104    17250        */
     1105    17251    5               CALL Y$SETERRCOD (%E$DATDLT_DSC);

  17251   2 0007C6  9BF0 0582                            LAB,B1   1410,IMO
          2 0007C8  9FC7 0152                            STB,B1   KV@VDOVLP_MRK+9,AUTO
          2 0007CA  E3C0 0C31                            LNJ,B6   s:0,PREL
          2 0007CC       0001                            DC       s:17252,PREL

     1106    17252    5               EXIT Y$DO_CASE_FNC;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:203  

  17252   2 0007CD  0F81 0AFF                            B        s:18851,PREL

     1107    17253    5            END;                           /* END IF KV_VDI.PHSDSC               */
     1108    17254        /*N* TEMP CODE TO CHECK OUT IMP */
     1109    17255    4            IF KV_VDO_DAT.DATCTRCHRTYP=%KV_DATCTRCHRTYP_VFC

  17255   2 0007CF  E844 0001                            LDR,R6   1,B4
          2 0007D1  604A                                 SOR,R6   10
          2 0007D2  E570 0003                            AND,R6   3,IMO
          2 0007D4  6D02                                 CMV,R6   2
          2 0007D5  0981 0023                            BNE      s:17264,PREL
          2 0007D7  D844 0001                            LDR,R5   1,B4
          2 0007D9  D570 00FF                            AND,R5   255,IMO
          2 0007DB  5D19                                 CMV,R5   25
          2 0007DC  0981 001C                            BNE      s:17264,PREL

     1110    17256    5              AND ASCBIN(KV_VDO_DAT.DATCTRCHR)=BITBIN('19'X) THEN DO;

     1111    17257    5               KV_RCVVDO.VDP_VDO.RUTACK = '0'B;

  17257   2 0007DE  8847 0031                            LBF,'0010'X       KV_RCVVDO+29,AUTO
  17257   2 0007E0       0010

     1112    17258    5               Y_VDH_SETPRM.VAL_.BYTX = 0;

  17258   2 0007E1  8700 0000 0026  00                   CL       Y_VDH_SETPRM+5

     1113    17259    5               Y_VDH_SETPRM.VAL_.ADR$ = KV_RCVVDO.OTPLCL.BFR_.ADR$;

  17259   2 0007E4  ACC7 002D                            LDB,B2   KV_RCVVDO+25,AUTO
          2 0007E6  AF80 0000 0024  00                   STB,B2   Y_VDH_SETPRM+3

     1114    17260    5               Y_VDH_SETPRM.VAL_.BYTSIZ = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;

  17260   2 0007E9  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
          2 0007EB  EF00 0000 0027  00                   STR,R6   Y_VDH_SETPRM+6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:204  

     1115    17261    5               CALL KVM$UIFT (Y_VDH_SETPRM);

  17261   2 0007EE  BB80 0000 001A  03                   LAB,B3   +26
          2 0007F1  CBF0 0100                            LAB,B4   256,IMO
          2 0007F3  E380 0000 0000  xent                 LNJ,B6   KVM$UIFT
          2 0007F6       0001                            DC       s:17262,PREL

     1116    17262    5               EXIT Y$DO_CASE_FNC;

  17262   2 0007F7  0F81 0AD5                            B        s:18851,PREL

     1117    17263    5            END;
     1118    17264    4            IF KV_SSN.WATOTPDLTMRK OR KV_SSN.OUTPUTDISCARD

  17264   2 0007F9  82C3 0028                            LB,'2000'X        40,B3
  17264   2 0007FB       2000
          2 0007FC  0501 0012                            BBT      s:17280,PREL
          2 0007FE  82C3 0028                            LB,'0800'X        40,B3
          2 000800       0800
          2 000801  0501 000D                            BBT      s:17280,PREL
          2 000803  82C2 0019                            LB,'0002'X        25,B2
          2 000805       0002
          2 000806  0501 0008                            BBT      s:17280,PREL
          2 000808  9CC5 0008                            LDB,B1   8,B5
          2 00080A  82C1 0016                            LB,'0008'X        22,B1
          2 00080C       0008
          2 00080D  0501 000D                            BBT      s:17290,PREL

     1119    17265    5              OR %KV_VDI.HALFDUPLEXPAPERTAPE OR NOT %KV_MRD.OUTPUT THEN DO;

     1120    17266
     1121    17267        /* one of the following is true.                                    */
     1122    17268
     1123    17269        /* we are waiting for a marker, and are to ignore writes until
     1124    17270           it arrives (there was an output purge request).                  */
     1125    17271
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:205  
     1126    17272        /* we are in output-ignore mode.                                    */
     1127    17273
     1128    17274        /* we are in half-duplex paper tape mode.                           */
     1129    17275
     1130    17276
     1131    17277        /* we will still process DAT_IMD messages, as they aren't
     1132    17278           subject to the above conditions.                                 */
     1133    17279
     1134    17280    6               IF (KV_VDO.FNC = %KV_VDO_FNC_DAT) THEN DO;

  17280   2 00080F  3D05                                 CMV,R3   5
          2 000810  0981 000A                            BNE      s:17290,PREL

     1135    17281
     1136    17282        /* this is a data message (as opposed to a data immediate message).       */
     1137    17283
     1138    17284    6                  CALL Y$SETERRCOD (%E$DATDLT_DLT);

  17284   2 000812  9BF0 0581                            LAB,B1   1409,IMO
          2 000814  9FC7 0152                            STB,B1   KV@VDOVLP_MRK+9,AUTO
          2 000816  E3C0 0BE5                            LNJ,B6   s:0,PREL
          2 000818       0001                            DC       s:17287,PREL

     1139    17285        /*E* ERROR: KV-E$DATDLT_DLT-E
     1140    17286        MESSAGE0:Data ignored due to output-delete function. */
     1141    17287    6                  EXIT Y$DO_CASE_FNC;

  17287   2 000819  0F81 0AB3                            B        s:18851,PREL

     1142    17288    6               END;                        /* END IF KV_VDO.FNC = DAT            */
     1143    17289    5            END;                           /* END IF WATOTPDLTMRK ...            */
     1144    17290    4            KV_SSN.WRTRQSCNT = KV_SSN.WRTRQSCNT+1;

  17290   2 00081B  8AC3 0021                            INC      33,B3
          2 00081D  8EC3 0020                            CAD      32,B3

     1145    17291    4            %KV_STT.RCV.DATVDOCNT = %KV_STT.RCV.DATVDOCNT+1;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:206  

  17291   2 00081F  9C85                                 LDB,B1   ,B5
          2 000820  ECC1 0008                            LDB,B6   8,B1
          2 000822  DCC6 0033                            LDB,B5   51,B6
          2 000824  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000827  9C86                                 LDB,B1   ,B6
          2 000828  ECC1 0008                            LDB,B6   8,B1
          2 00082A  9CC6 0033                            LDB,B1   51,B6
          2 00082C  8CC1 001A                            LDI      26,B1
          2 00082E  8470 0000 0001                       AID      1,IMO
          2 000831  8D45 001A                            SDI      26,B5

     1146    17292    4            %KV_STT.RCV.DATVDOBYTCNT = %KV_STT.RCV.DATVDOBYTCNT +

  17292   2 000833  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000836  DC86                                 LDB,B5   ,B6
          2 000837  ACC5 0008                            LDB,B2   8,B5
          2 000839  9CC2 0033                            LDB,B1   51,B2
          2 00083B  8CC7 0036                            LDI      Y@NXTVDOVLP$,AUTO
          2 00083D  8480 0000 0000  xsym                 SID      KV_RCVVDO$
          2 000840  7081                                 DOL,R7   1
          2 000841  8441 001C                            AID      28,B1
          2 000843  8D41 001C                            SDI      28,B1

     1147    17293    4              POFFW(Y@NXTVDOVLP$, KV_RCVVDO$)*2;
     1148    17294    4            %KV_STT.RCV.DATVDODATBYTCNT = %KV_STT.RCV.DATVDODATBYTCNT +

  17294   2 000845  DC86                                 LDB,B5   ,B6
          2 000846  ACC5 0008                            LDB,B2   8,B5
          2 000848  9CC2 0033                            LDB,B1   51,B2
          2 00084A  F847 0030                            LDR,R7   KV_RCVVDO+28,AUTO
          2 00084C  6C00                                 LDV,R6   0
          2 00084D  8441 001E                            AID      30,B1
          2 00084F  8D41 001E                            SDI      30,B1

     1149    17295    4              KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1150    17296    4            IF KV_VDO.FNC = %KV_VDO_FNC_DAT
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:207  

  17296   2 000851  E284                                 LLH,R6   ,B4
          2 000852  6D05                                 CMV,R6   5
          2 000853  0981 0007                            BNE      s:17302,PREL

     1151    17297
     1152    17298        /* Note that the output has arrived since the last RQSDAT. */
     1153    17299
     1154    17300    4            THEN KV_SSN.RCVFLWCTRCRDINC = KV_SSN.RCVFLWCTRCRDINC +

  17300   2 000855  D843 001E                            LDR,R5   30,B3
          2 000857  DA47 0030                            ADD,R5   KV_RCVVDO+28,AUTO
          2 000859  DF43 001E                            STR,R5   30,B3

     1155    17301    4              KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;
     1156    17302    5            DO CASE (%KV_MVD.ORG);

  17302   2 00085B  DCC6 0006                            LDB,B5   6,B6
          2 00085D  B2C5 0015                            LLH,R3   21,B5
          2 00085F  3D06                                 CMV,R3   6
          2 000860  0281 0A6C                            BGE      s:18851,PREL
          2 000862  A830 0000 0868  02                   LDR,R2   s:17302+13,R3
          2 000865  83A0 0000 086E  02                   JMP      s:17304,R2
          2 000868       0261                            DC       s:17504,PREL
          2 000869       0000                            DC       s:17304,PREL
          2 00086A       0000                            DC       s:17304,PREL
          2 00086B       0261                            DC       s:17504,PREL
          2 00086C       022E                            DC       s:17485,PREL
          2 00086D       024A                            DC       s:17496,PREL

     1157    17303    5            CASE %KV#VD_ORG_UR, %KV#VD_ORG_X364;

     1158    17304    5               Y@VFC = ASCBIN(KV_VDO_DAT.DATCTRCHR);

  17304   2 00086E  E844 0001                            LDR,R6   1,B4
          2 000870  E570 00FF                            AND,R6   255,IMO
          2 000872  E7C7 003C                            STH,R6   Y@VFC,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:208  

     1159    17305    5               IF (KV_VDO_DAT.DATCTRCHRTYP ~= %KV_DATCTRCHRTYP_VFC) OR

  17305   2 000874  E844 0001                            LDR,R6   1,B4
          2 000876  604A                                 SOR,R6   10
          2 000877  E570 0003                            AND,R6   3,IMO
          2 000879  6D02                                 CMV,R6   2
          2 00087A  0981 000D                            BNE      s:17307,PREL
          2 00087C  D2C7 003C                            LLH,R5   Y@VFC,AUTO
          2 00087E  5D1A                                 CMV,R5   26
          2 00087F  0901 0008                            BE       s:17307,PREL
          2 000881  5D1D                                 CMV,R5   29
          2 000882  0201 0217                            BL       s:17482,PREL
          2 000884  D970 0080                            CMR,R5   128,IMO
          2 000886  0881 0213                            BAGE     s:17482,PREL

     1160    17306    6                 Y@VFC=26 OR Y@VFC>=29 AND Y@VFC<128 THEN DO;

     1161    17307    6                  IF KV_VDO_DAT.DATCTRCHRTYP~=%KV_DATCTRCHRTYP_VFC THEN Y@VFC=0;

  17307   2 000888  6D02                                 CMV,R6   2
          2 000889  0901 0005                            BE       s:17312,PREL

  17307   2 00088B  87C7 003C                            CLH      Y@VFC,AUTO
          2 00088D  0F81 000B                            B        s:17316,PREL

     1162    17308        /*
     1163    17309        Either there is no VFC being passed, or the VFC is
     1164    17310        legal (.1D <= VFC <= .7F  or  VFC = .1A).
     1165    17311        */
     1166    17312    6                  ELSE IF Y@VFC<30 THEN KV_RCVVDO.OTPLCL.BFR_.ADR$ = ADDR(NIL);

  17312   2 00088F  D2C7 003C                            LLH,R5   Y@VFC,AUTO
          2 000891  5D1E                                 CMV,R5   30
          2 000892  0281 0006                            BGE      s:17316,PREL

  17312   2 000894  DB80 0000 0000                       LAB,B5   0
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:209  
          2 000897  DFC7 002D                            STB,B5   KV_RCVVDO+25,AUTO

     1167    17313        /*
     1168    17314           Page VFC has no data.
     1169    17315        */
     1170    17316    6                  IF KV_VDO_DAT.DATMOD = %KV_DATMOD_TRN OR

  17316   2 000899  E844 0001                            LDR,R6   1,B4
          2 00089B  6048                                 SOR,R6   8
          2 00089C  E570 0003                            AND,R6   3,IMO
          2 00089E  6D01                                 CMV,R6   1
          2 00089F  0901 0004                            BE       s:17322,PREL
          2 0008A1  6D02                                 CMV,R6   2
          2 0008A2  0981 0034                            BNE      s:17355,PREL

     1171    17317    7                    KV_VDO_DAT.DATMOD = %KV_DATMOD_BNR THEN DO;

     1172    17318
     1173    17319        /* this is a transparent or binary data message */
     1174    17320        /* so no translation or formatting of any kind is to be done. */
     1175    17321
     1176    17322    7                     IF (%KV_VDI.USEOTPBFRTRN AND KV_VDO_DAT.DATMOD = %KV_DATMOD_TRN)
             17322                              OR

  17322   2 0008A4  DC83                                 LDB,B5   ,B3
          2 0008A5  82C5 001D                            LB,'0080'X        29,B5
          2 0008A7       0080
          2 0008A8  0581 0004                            BBF      s:17322+9,PREL
          2 0008AA  6D01                                 CMV,R6   1
          2 0008AB  0901 0009                            BE       s:17331,PREL
          2 0008AD  82C5 001D                            LB,'0100'X        29,B5
          2 0008AF       0100
          2 0008B0  0581 0021                            BBF      s:17348,PREL
          2 0008B2  6D02                                 CMV,R6   2
          2 0008B3  0981 001E                            BNE      s:17348,PREL

     1177    17323    8                       (%KV_VDI.USEOTPBFRBNR AND KV_VDO_DAT.DATMOD = %KV_DATMOD_BNR)
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:210  
             17323                                THEN DO;

     1178    17324
     1179    17325        /* We're to use the VDH output buffer mechanism (KV$VDI.OTPBFR_)
     1180    17326           for transparent output.                                          */
     1181    17327
     1182    17328        /* Frame the data in the message buffer and call the output
     1183    17329           buffering routine.                                               */
     1184    17330
     1185    17331    9                        IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;

  17331   2 0008B5  8DC7 002D                            CMN      KV_RCVVDO+25,AUTO
          2 0008B7  0901 013E                            BE       s:17437,PREL

     1186    17332        /*
     1187    17333        There was data passed in this message.
     1188    17334        */
     1189    17335    9                           IF %KV_VDI.INPUNT~=%KV_INPUNT_RCR

  17335   2 0008B9  D845 001D                            LDR,R5   29,B5
          2 0008BB  5045                                 SOR,R5   5
          2 0008BC  D570 0003                            AND,R5   3,IMO
          2 0008BE  5D02                                 CMV,R5   2
          2 0008BF  0901 0004                            BE       s:17340,PREL

     1190    17336        /*
     1191    17337           no positionless output to record mode devices - BISYNC gets lost.
     1192    17338        */
     1193    17339    9                           THEN KV_RCVVDO.OTPLCL.TRN = '1'B;

  17339   2 0008C1  8947 002C                            LBT,'0040'X       KV_RCVVDO+24,AUTO
  17339   2 0008C3       0040

     1194    17340    9                           CALL KVO$OTPLCL (KV_RCVVDO.OTPLCL);

  17340   2 0008C4  DBC7 002C                            LAB,B5   KV_RCVVDO+24,AUTO
          2 0008C6  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:211  
          2 0008C8  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0008CA  CBF0 0100                            LAB,B4   256,IMO
          2 0008CC  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          2 0008CF       0001                            DC       s:17342,PREL

     1195    17341    9                        END;               /* IF OTPLCL.BFR_.ADR$~=NIL           */

     1196    17342    8                     END;                  /* END IF USEOTPBFRTRN ...            */

  17342   2 0008D0  0F81 0125                            B        s:17437,PREL

     1197    17343    8                     ELSE DO;

     1198    17344
     1199    17345        /* This is a transparent or binary output request, and we're not to use
     1200    17346           the VDH output buffer mechanism.                                 */
     1201    17347
     1202    17348    8                        CALL Y$USR_DAT;

  17348   2 0008D2  E3C0 102E                            LNJ,B6   s:0,PREL
          2 0008D4       0001                            DC       s:17350,PREL

     1203    17349    8                     END;                  /* END ELSE IF USEOTPBFRTRN...        */

     1204    17350    7                  END;                     /* END IF TRN OR BNR                  */

  17350   2 0008D5  0F81 0120                            B        s:17437,PREL

     1205    17351    7                  ELSE DO;

     1206    17352
     1207    17353        /* this is a non-transparent, non-binary mode data message         */
     1208    17354
     1209    17355    7                     IF KV_VDO.FNC=%KV_VDO_FNC_DAT

  17355   2 0008D7  D284                                 LLH,R5   ,B4
          2 0008D8  5D05                                 CMV,R5   5
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:212  
          2 0008D9  0981 0009                            BNE      s:17357,PREL

     1210    17356    7                     THEN KV_SSN.HDNTYPIS_DCB = KV_VDO_DAT.DCBHDR;

  17356   2 0008DB  C844 0001                            LDR,R4   1,B4
          2 0008DD  4047                                 SOR,R4   7
          2 0008DE  CAC3 0027                            SRM,R4,'0040'X    39,B3
          2 0008E0       0040
          2 0008E1  0F81 001A                            B        s:17359,PREL

     1211    17357    7                     ELSE IF %KV_MRD.MSGLIN AND KV_SSN.MSGLIN THEN Y@VFC = 1;

  17357   2 0008E3  DCC6 0008                            LDB,B5   8,B6
          2 0008E5  82C5 0018                            LB,'0008'X        24,B5
          2 0008E7       0008
          2 0008E8  0581 000B                            BBF      s:17358,PREL
          2 0008EA  82C3 0037                            LB,'0020'X        55,B3
          2 0008EC       0020
          2 0008ED  0581 0006                            BBF      s:17358,PREL

  17357   2 0008EF  4C01                                 LDV,R4   1
          2 0008F0  C7C7 003C                            STH,R4   Y@VFC,AUTO
          2 0008F2  0F81 0009                            B        s:17359,PREL

     1212    17358    7                     ELSE IF KV_SSN.MSGHLT THEN KV_RCVVDO.OTPLCL.NO_WRAP = '1'B;

  17358   2 0008F4  82C3 0037                            LB,'0040'X        55,B3
  17358   2 0008F6       0040
          2 0008F7  0581 0004                            BBF      s:17359,PREL

  17358   2 0008F9  8947 002C                            LBT,'0010'X       KV_RCVVDO+24,AUTO
  17358   2 0008FB       0010

     1213    17359    8                     IF (%KV_SRD.LNG=0 OR %KV_SRD.WDT=0) AND Y@VFC~=1 THEN DO;

  17359   2 0008FC  DCC6 000A                            LDB,B5   10,B6
          2 0008FE  E2C5 000E                            LLH,R6   14,B5
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:213  
          2 000900  6901 0005                            BEZ,R6   s:17359+10,PREL
          2 000902  D845 000D                            LDR,R5   13,B5
          2 000904  5981 000F                            BNEZ,R5  s:17365,PREL
          2 000906  D2C7 003C                            LLH,R5   Y@VFC,AUTO
          2 000908  5D01                                 CMV,R5   1
          2 000909  0901 000A                            BE       s:17365,PREL

     1214    17360    8                        CALL Y$SETERRCOD (%E$DATDLT_OPTWND);

  17360   2 00090B  ABF0 05A8                            LAB,B2   1448,IMO
          2 00090D  AFC7 0152                            STB,B2   KV@VDOVLP_MRK+9,AUTO
          2 00090F  E3C0 0AEC                            LNJ,B6   s:0,PREL
          2 000911       0001                            DC       s:17363,PREL

     1215    17361        /*E* ERROR: KV-E$DATDLT_OPTWND-C
     1216    17362        MESSAGE0:Operation aborted due to empty window. */
     1217    17363    8                        EXIT Y$DO_CASE_FNC;

  17363   2 000912  0F81 09BA                            B        s:18851,PREL

     1218    17364    8                     END;
     1219    17365    7                     IF KV_VDO.FNC=%KV_VDO_FNC_DAT_IMD

  17365   2 000914  D284                                 LLH,R5   ,B4
          2 000915  5D06                                 CMV,R5   6
          2 000916  0981 0005                            BNE      s:17370,PREL

     1220    17366
     1221    17367        /* Save the input field location for DAT_IMD to a 3270. */
     1222    17368
     1223    17369    7                     THEN Y@PRVVRTLINPHSLIN = %KV_SRD.CRTVRTLINPHSLIN;

  17369   2 000918  C845 0013                            LDR,R4   19,B5
          2 00091A  CF47 0038                            STR,R4   Y@PRVVRTLINPHSLIN,AUTO

     1224    17370    8                     IF %KV_VDI.USEOTPBFR OR %KV_MVD.ORG=%KV#VD_ORG_X364 THEN DO;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:214  
  17370   2 00091C  AC83                                 LDB,B2   ,B3
          2 00091D  82C2 001D                            LB,'0200'X        29,B2
          2 00091F       0200
          2 000920  0501 0008                            BBT      s:17369,PREL
          2 000922  9CC6 0006                            LDB,B1   6,B6
          2 000924  C2C1 0015                            LLH,R4   21,B1
          2 000926  4D02                                 CMV,R4   2
          2 000927  0981 00CB                            BNE      s:17434,PREL

  17369   2                              NXT_MSG_LIN     null
     1225    17371
     1226    17372        /* We're to use the VDH output buffering mechanism (KV$VDI.OTPBFR_),
     1227    17373           or, KVO$X364 will take care of that choice. */
     1228    17374
     1229    17375    8   NXT_MSG_LIN:         ;
     1230    17376    9                        IF Y@VFC=1 THEN DO;

  17376   2 000929  E2C7 003C            NXT_MSG_LIN     LLH,R6   Y@VFC,AUTO
          2 00092B  6D01                                 CMV,R6   1
          2 00092C  0981 0046                            BNE      s:17396,PREL

     1231    17377    9                           CALL KVO$DVCCTR (%KV$ERD_MSGLIN_CHR#/8);

  17377   2 00092E  BB80 0000 001D  03                   LAB,B3   +29
          2 000931  CBF0 0100                            LAB,B4   256,IMO
          2 000933  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          2 000936       0001                            DC       s:17378,PREL

     1232    17378    9                           KV@MRD = %KV_MRD;

  17378   2 000937  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00093A  DCC6 0008                            LDB,B5   8,B6
          2 00093C  AB85                                 LAB,B2   ,B5
          2 00093D  2C00                                 LDV,R2   0
          2 00093E  6C40                                 LDV,R6   64
          2 00093F  BBC7 0048                            LAB,B3   KV@MRD,AUTO
          2 000941  3C00                                 LDV,R3   0
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:215  
          2 000942  0008                                 MMM

     1233    17379    9                           KV@MVD.TRNTBL$ = %KV_MVD.TRNTBL$;

  17379   2 000943  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000946  CCC6 0006                            LDB,B4   6,B6
          2 000948  BCC4 000E                            LDB,B3   14,B4
          2 00094A  BFC7 0076                            STB,B3   KV@MVD+14,AUTO

     1234    17380    9                           KV$PTR.MVD$ = ADDR(KV@MVD);

  17380   2 00094C  CBC7 0068                            LAB,B4   KV@MVD,AUTO
          2 00094E  CFC6 0006                            STB,B4   6,B6

     1235    17381    9                           KV$PTR.MRD$ = ADDR(KV@MRD);

  17381   2 000950  BBC7 0048                            LAB,B3   KV@MRD,AUTO
          2 000952  BFC6 0008                            STB,B3   8,B6

     1236    17382    9                           KV$PTR.SRD$ = ADDR(KV@SRD);

  17382   2 000954  9BC7 00EF                            LAB,B1   KV@SRD,AUTO
          2 000956  9FC6 000A                            STB,B1   10,B6

     1237    17383    9                           KV@SRD.MRD$ = ADDR(KV@MRD);

  17383   2 000958  EBC7 0048                            LAB,B6   KV@MRD,AUTO
          2 00095A  EFC7 00EF                            STB,B6   KV@SRD,AUTO

     1238    17384    9                           KV@MRD.DVCLIN = KV@SRD.CRT.LIN;

  17384   2 00095C  E847 0104                            LDR,R6   KV@SRD+21,AUTO
          2 00095E  EF47 0065                            STR,R6   KV@MRD+29,AUTO

     1239    17385    9                           KV@MRD.DVCCLM = 1;

  17385   2 000960  5C01                                 LDV,R5   1
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:216  
          2 000961  DF47 0066                            STR,R5   KV@MRD+30,AUTO

     1240    17386    9                           KV@MRD.MINSP_FORPST = 0;

  17386   2 000963  87C7 0054                            CLH      KV@MRD+12,AUTO

     1241    17387    9                           KV@SRD.CRT.CLM = 1;

  17387   2 000965  DF47 0105                            STR,R5   KV@SRD+22,AUTO

     1242    17388    9                           KV_RCVVDO.OTPLCL.NO_WRAP = '1'B;

  17388   2 000967  8947 002C                            LBT,'0010'X       KV_RCVVDO+24,AUTO
  17388   2 000969       0010

     1243    17389    9                           KV@SRD.BTMRHT.CLM = KV@MRD.WDT;

  17389   2 00096A  C847 0053                            LDR,R4   KV@MRD+11,AUTO
          2 00096C  CF47 00FB                            STR,R4   KV@SRD+12,AUTO

     1244    17390    9                           KV@SRD.VRTPSTOK = '1'B;

  17390   2 00096E  8947 00FD                            LBT,'0010'X       KV@SRD+14,AUTO
  17390   2 000970       0010

     1245    17391    9                           KV@MVD.VRTCLM = 1;

  17391   2 000971  DF47 0083                            STR,R5   KV@MVD+27,AUTO

     1246    17392    9                        END;

     1247    17393
     1248    17394        /* perform any 'before' VFC                                         */
     1249    17395
     1250    17396    8                        IF Y@VFC>1 AND NOT KV_VDO_DAT.CTN.PRV

  17396   2 000973  E2C7 003C                            LLH,R6   Y@VFC,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:217  
          2 000975  6D01                                 CMV,R6   1
          2 000976  0381 0015                            BLE      s:17402,PREL
          2 000978  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 00097B  82C6 0001                            LB,'4000'X        1,B6
          2 00097D       4000
          2 00097E  0501 000D                            BBT      s:17402,PREL

     1251    17397    8                        THEN CALL KVO$VFCBFRTXT(Y@VFC);

  17397   2 000980  DBC7 003C                            LAB,B5   Y@VFC,AUTO
          2 000982  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 000984  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000986  CBF0 0100                            LAB,B4   256,IMO
          2 000988  E380 0000 0000  xent                 LNJ,B6   KVO$VFCBFRTXT
          2 00098B       0001                            DC       s:17402,PREL

     1252    17398
     1253    17399        /* call vdh write to process the textual write                      */
     1254    17400
     1255    17401
     1256    17402    9                        IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;

  17402   2 00098C  8DC7 002D                            CMN      KV_RCVVDO+25,AUTO
          2 00098E  0901 0033                            BE       s:17416,PREL

     1257    17403        /*
     1258    17404        There was data passed in this message.
     1259    17405        */
     1260    17406        /*
     1261    17407           Find out whether a messageline message needs to be wrapped.
     1262    17408        */
     1263    17409    9                           Y@TMPWRD1 = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;

  17409   2 000990  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
          2 000992  EF47 0040                            STR,R6   Y@TMPWRD1,AUTO

     1264    17410    9                           IF %KV_MVD.ORG=%KV#VD_ORG_UR
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:218  

  17410   2 000994  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000997  DCC6 0006                            LDB,B5   6,B6
          2 000999  D2C5 0015                            LLH,R5   21,B5
          2 00099B  5D01                                 CMV,R5   1
          2 00099C  0981 000F                            BNE      s:17412,PREL

     1265    17411    9                           THEN CALL KVO$OTPLCL (KV_RCVVDO.OTPLCL);

  17411   2 00099E  CBC7 002C                            LAB,B4   KV_RCVVDO+24,AUTO
          2 0009A0  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 0009A2  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0009A4  CBF0 0100                            LAB,B4   256,IMO
          2 0009A6  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          2 0009A9       0001                            DC       s:17411+12,PREL
          2 0009AA  0F81 000D                            B        s:17413,PREL

     1266    17412    9                           ELSE CALL KVO$X364 (KV_RCVVDO.OTPLCL);

  17412   2 0009AC  CBC7 002C                            LAB,B4   KV_RCVVDO+24,AUTO
          2 0009AE  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 0009B0  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0009B2  CBF0 0100                            LAB,B4   256,IMO
          2 0009B4  E380 0000 0000  xent                 LNJ,B6   KVO$X364
          2 0009B7       0001                            DC       s:17413,PREL

     1267    17413    9                           IF Y@TMPWRD1=KV_RCVVDO.OTPLCL.BFR_.BYTSIZ

  17413   2 0009B8  E847 0040                            LDR,R6   Y@TMPWRD1,AUTO
          2 0009BA  6801 0007                            BLZ,R6   s:17416,PREL
          2 0009BC  E947 0030                            CMR,R6   KV_RCVVDO+28,AUTO
          2 0009BE  0981 0003                            BNE      s:17416,PREL

     1268    17414    9                           THEN KV_RCVVDO.OTPLCL.BFR_.BYTSIZ=0;

  17414   2 0009C0  8747 0030                            CL       KV_RCVVDO+28,AUTO

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:219  
     1269    17415    9                        END;               /* OTPLCL.BFR_.ADR$~=NIL              */

     1270    17416    9                        IF Y@VFC~=1 AND KV_RCVVDO.OTPLCL.NO_WRAP THEN DO;

  17416   2 0009C2  E2C7 003C                            LLH,R6   Y@VFC,AUTO
          2 0009C4  6D01                                 CMV,R6   1
          2 0009C5  0901 0013                            BE       s:17427,PREL
          2 0009C7  82C7 002C                            LB,'0010'X        KV_RCVVDO+24,AUTO
          2 0009C9       0010
          2 0009CA  0581 000E                            BBF      s:17427,PREL

     1271    17417
     1272    17418        /* Do the MSGHLT at the end of each line of the message */
     1273    17419    9                           CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_HLTOTP);

  17419   2 0009CC  BB80 0000 0020  03                   LAB,B3   +32
          2 0009CF  CBF0 0100                            LAB,B4   256,IMO
          2 0009D1  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 0009D4       0001                            DC       s:17420,PREL

     1274    17420    9                           IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ~=0

  17420   2 0009D5  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
          2 0009D7  6981 FF51                            BNEZ,R6  s:17369,PREL

     1275    17421    9                           THEN GOTO NXT_MSG_LIN;
     1276    17422    9                        END;

     1277    17423
     1278    17424
     1279    17425        /* perform any 'after' VFC                                          */
     1280    17426
     1281    17427    8                        IF Y@VFC>1 AND NOT KV_VDO_DAT.CTN.NXT

  17427   2 0009D9  E2C7 003C                            LLH,R6   Y@VFC,AUTO
          2 0009DB  6D01                                 CMV,R6   1
          2 0009DC  0381 0019                            BLE      s:17437,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:220  
          2 0009DE  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 0009E1  89C6 0001                            CMZ      1,B6
          2 0009E3  0801 0012                            BAL      s:17437,PREL

     1282    17428    8                        THEN CALL KVO$VFCAFTTXT(Y@VFC);

  17428   2 0009E5  DBC7 003C                            LAB,B5   Y@VFC,AUTO
          2 0009E7  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 0009E9  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0009EB  CBF0 0100                            LAB,B4   256,IMO
          2 0009ED  E380 0000 0000  xent                 LNJ,B6   KVO$VFCAFTTXT
          2 0009F0       0001                            DC       s:17429,PREL

     1283    17429    8                     END;                  /* END IF USEOTPBFR DO                */

  17429   2 0009F1  0F81 0004                            B        s:17437,PREL

     1284    17430    8                     ELSE DO;

     1285    17431
     1286    17432        /* We're to pass the data to the VDH-user via KV@VDH_DAT.           */
     1287    17433
     1288    17434    8                        CALL Y$USR_DAT;

  17434   2 0009F3  E3C0 0F0D                            LNJ,B6   s:0,PREL
          2 0009F5       0001                            DC       s:17437,PREL

     1289    17435    8                     END;                  /* END ELSE IF USEOTPBFR DO           */

     1290    17436    7                  END;                     /* END ELSE IF USEOTPBFRTRN ...       */

     1291    17437    7                  IF KV_VDO.FNC=%KV_VDO_FNC_DAT_IMD THEN DO;

  17437   2 0009F6  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 0009F9  E286                                 LLH,R6   ,B6
          2 0009FA  6D06                                 CMV,R6   6
          2 0009FB  0981 0090                            BNE      s:17475,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:221  

     1292    17438    8                     IF Y@VFC=1 THEN DO;

  17438   2 0009FD  D2C7 003C                            LLH,R5   Y@VFC,AUTO
          2 0009FF  5D01                                 CMV,R5   1
          2 000A00  0981 0030                            BNE      s:17448,PREL

     1293    17439    8                        CALL KVO$DVCCTR (%KV$ERD_ENDMSGLIN_CHR#/8);

  17439   2 000A02  BB80 0000 0023  03                   LAB,B3   +35
          2 000A05  CBF0 0100                            LAB,B4   256,IMO
          2 000A07  E380 0000 0000  xent                 LNJ,B6   KVO$DVCCTR
          2 000A0A       0001                            DC       s:17440,PREL

     1294    17440    8                        KV$PTR.MVD$ = %KV_STR.MVD$;

  17440   2 000A0B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000A0E  DCC6 0004                            LDB,B5   4,B6
          2 000A10  CCC5 0004                            LDB,B4   4,B5
          2 000A12  CFC6 0006                            STB,B4   6,B6

     1295    17441    8                        KV$PTR.SRD$ = %KV_MVD.SRD$;

  17441   2 000A14  BC84                                 LDB,B3   ,B4
          2 000A15  BFC6 000A                            STB,B3   10,B6

     1296    17442    8                        KV$PTR.MRD$ = %KV_SRD.MRD$;

  17442   2 000A17  AC83                                 LDB,B2   ,B3
          2 000A18  AFC6 0008                            STB,B2   8,B6

     1297    17443    8                        IF NOT KV_SSN.MSGHLT THEN EXIT;

  17443   2 000A1A  9C80 0000 0000  xsym                 LDB,B1   KV_RCVSSN$
          2 000A1D  82C1 0037                            LB,'0040'X        55,B1
          2 000A1F       0040
          2 000A20  0581 000E                            BBF      s:17447,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:222  

     1298    17444    8                        CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_HLTOTP);

  17444   2 000A22  BB80 0000 0020  03                   LAB,B3   +32
          2 000A25  CBF0 0100                            LAB,B4   256,IMO
          2 000A27  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 000A2A       0001                            DC       s:17445,PREL

     1299    17445    8                        IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ~=0

  17445   2 000A2B  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
          2 000A2D  6981 FEFB                            BNEZ,R6  s:17369,PREL

     1300    17446    8                        THEN GOTO NXT_MSG_LIN;
     1301    17447    8                     END;

  17447   2 000A2F  0F81 005C                            B        s:17475,PREL

     1302    17448    7                     ELSE IF %KV_MVD.REDSSNID~=0 AND

  17448   2 000A31  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000A34  CCC5 0006                            LDB,B4   6,B5
          2 000A36  C2C4 001F                            LLH,R4   31,B4
          2 000A38  4901 0053                            BEZ,R4   s:17475,PREL
          2 000A3A  89C5 001B                            CMZ      27,B5
          2 000A3C  0801 004F                            BAL      s:17475,PREL

     1303    17449    8                       NOT KV$PTR.INPCNDPND.TRN THEN DO;

     1304    17450
     1305    17451        /* this is a data-immediate request, there is a read
     1306    17452           enabled, and the read isn't in transparent mode. re-type the
     1307    17453           read message, if appropriate.                                    */
     1308    17454
     1309    17455    9                        IF %KV_VDI.INPUNT=%KV_INPUNT_BLK THEN DO;

  17455   2 000A3E  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:223  
          2 000A41  AC83                                 LDB,B2   ,B3
          2 000A42  B842 001D                            LDR,R3   29,B2
          2 000A44  3045                                 SOR,R3   5
          2 000A45  B570 0003                            AND,R3   3,IMO
          2 000A47  3D03                                 CMV,R3   3
          2 000A48  0981 0009                            BNE      s:17459,PREL

     1310    17456    9                           %KV_SRD.CRTVRTLINPHSLIN = Y@PRVVRTLINPHSLIN;

  17456   2 000A4A  9CC5 000A                            LDB,B1   10,B5
          2 000A4C  A847 0038                            LDR,R2   Y@PRVVRTLINPHSLIN,AUTO
          2 000A4E  AF41 0013                            STR,R2   19,B1

     1311    17457    9                           EXIT Y$DO_CASE_FNC;

  17457   2 000A50  0F81 087C                            B        s:18851,PREL

     1312    17458    9                        END;
     1313    17459    8                        IF %KV_MVD.REDSSNID=KV_SSN.SSNID

  17459   2 000A52  A2C3 0037                            LLH,R2   55,B3
          2 000A54  C952                                 CMR,R4   R2
          2 000A55  0981 0036                            BNE      s:17475,PREL
          2 000A57  9CC5 0004                            LDB,B1   4,B5
          2 000A59  92C3 0038                            LLH,R1   56,B3
          2 000A5B  E2C1 001C                            LLH,R6   28,B1
          2 000A5D  9956                                 CMR,R1   R6
          2 000A5E  0981 002D                            BNE      s:17475,PREL

     1314    17460    9                          AND KV_SSN.REDSTRID=%KV_STR.ID THEN DO;

     1315    17461    9                           %KV_SRD.CRTVRTLINPHSLIN = %KV_SRD.CRT.LIN;

  17461   2 000A60  ECC5 000A                            LDB,B6   10,B5
          2 000A62  E846 0015                            LDR,R6   21,B6
          2 000A64  EF46 0013                            STR,R6   19,B6

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:224  
     1316    17462    9                           %KV_SRD.PRMVRTCLM = MOD(%KV_SRD.PRMVRTCLM, %KV_SRD.WDT);

  17462   2 000A66  ECC5 000A                            LDB,B6   10,B5
          2 000A68  F846 0012                            LDR,R7   18,B6
          2 000A6A  6C00                                 LDV,R6   0
          2 000A6B  F346 000D                            DIV,R7   13,B6
          2 000A6D  EF46 0012                            STR,R6   18,B6

     1317    17463   10                           IF %KV_MVD.DISPINPUT OR %KV_MVD.RETYPOVR THEN DO;

  17463   2 000A6F  ECC5 0006                            LDB,B6   6,B5
          2 000A71  82C6 0015                            LB,'0080'X        21,B6
          2 000A73       0080
          2 000A74  0501 0006                            BBT      s:17468,PREL
          2 000A76  82C6 0016                            LB,'0080'X        22,B6
          2 000A78       0080
          2 000A79  0581 0012                            BBF      s:17475,PREL

     1318    17464        /*n* needs more work? logon?                                        */
     1319    17465
     1320    17466        /* we are echoing the input (somewhat, at least)                    */
     1321    17467
     1322    17468   10                              CALL KVI$ENBRED;

  17468   2 000A7B  CBF0 0000                            LAB,B4   0,IMO
          2 000A7D  E380 0000 0000  xent                 LNJ,B6   KVI$ENBRED
          2 000A80       0001                            DC       s:17469,PREL

     1323    17469   10                              CALL KVI$INTINPOPRX (%KV_INPOPRX_RE_TYP);

  17469   2 000A81  BB80 0000 0026  03                   LAB,B3   +38
          2 000A84  CBF0 0100                            LAB,B4   256,IMO
          2 000A86  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          2 000A89       0001                            DC       s:17470,PREL

     1324    17470   10                              EXIT Y$DO_CASE_FNC;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:225  
  17470   2 000A8A  0F81 0842                            B        s:18851,PREL

     1325    17471   10                           END;
     1326    17472    9                        END;
     1327    17473    8                     END;
     1328    17474    7                  END;                     /* END IF DAT_IMD AND RED ...         */
     1329    17475    6                  IF Y@VFC~=1 THEN %KV_MVD.REDSSNID = 0;

  17475   2 000A8C  E2C7 003C                            LLH,R6   Y@VFC,AUTO
          2 000A8E  6D01                                 CMV,R6   1
          2 000A8F  0901 083D                            BE       s:18851,PREL

  17475   2 000A91  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000A94  DCC6 0006                            LDB,B5   6,B6
          2 000A96  87C5 001F                            CLH      31,B5

     1330    17476    6               END;

  17476   2 000A98  0F81 0834                            B        s:18851,PREL

     1331    17477    6               ELSE DO;                    /* ELSE IF LEGAL VFC                  */

     1332    17478        /*
     1333    17479        The VFC passed is illegal.
     1334    17480        */
     1335    17481        /*N* Should we report bad vfc (optionally) back to host? */
     1336    17482    6               END;                        /* END IF LEGAL VFC                   */

  17482   2 000A9A  0F81 0832                            B        s:18851,PREL

     1337    17483    5            CASE %KV#VD_ORG_FORM;

     1338    17484
     1339    17485    5               IF KV_VDO_DAT.DATCTRCHRTYP=%KV_DATCTRCHRTYP_VFC

  17485   2 000A9C  E844 0001                            LDR,R6   1,B4
          2 000A9E  604A                                 SOR,R6   10
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:226  
          2 000A9F  E570 0003                            AND,R6   3,IMO
          2 000AA1  6D02                                 CMV,R6   2
          2 000AA2  0981 0010                            BNE      s:17493,PREL
          2 000AA4  D844 0001                            LDR,R5   1,B4
          2 000AA6  5008                                 SOL,R5   8
          2 000AA7  5068                                 SAR,R5   8
          2 000AA8  5D1A                                 CMV,R5   26
          2 000AA9  0981 0009                            BNE      s:17493,PREL

     1340    17486    6                 AND KV_VDO_DAT.DATCTRCHR=BITASC('1A'X) THEN DO;

     1341    17487
     1342    17488        /* this is a "print page" request. Do it. */
     1343    17489
     1344    17490    6                  CALL KVF$TOPPAG;

  17490   2 000AAB  CBF0 0000                            LAB,B4   0,IMO
          2 000AAD  E380 0000 0000  xent                 LNJ,B6   KVF$TOPPAG
          2 000AB0       0001                            DC       s:17491,PREL

     1345    17491    6                  EXIT Y$DO_CASE_FNC;

  17491   2 000AB1  0F81 081B                            B        s:18851,PREL

     1346    17492    6               END;
     1347    17493    5               CALL Y$FRMVDO;

  17493   2 000AB3  E3C0 0C4F                            LNJ,B6   s:0,PREL
          2 000AB5       0001                            DC       s:17493+3,PREL
          2 000AB6  0F81 0816                            B        s:18851,PREL

     1348    17494    5            CASE %KV#VD_ORG_SE;

     1349    17495
     1350    17496    5               IF KV_RCVVDO.VDOVLP_KEY$=ADDR(NIL)

  17496   2 000AB8  8DC7 0028                            CMN      KV_RCVVDO+20,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:227  
          2 000ABA  0981 000E                            BNE      s:17503,PREL

     1351    17497    6               THEN IF KV_RCVVDO.VDOVLP_ERR$=ADDR(NIL) THEN DO;

  17497   2 000ABC  8DC7 0024                            CMN      KV_RCVVDO+16,AUTO
          2 000ABE  0981 0003                            BNE      s:17502,PREL

  17496   2                              NO_SE_KEY       null
     1352    17498    6   NO_SE_KEY:     ;
     1353    17499        /*N*           %KV_STR.ERR.CODE = %E$KEYREQUIRED; */
     1354    17500    6                  EXIT Y$DO_CASE_FNC;

  17500   2 000AC0  0F81 080C            NO_SE_KEY       B        s:18851,PREL

     1355    17501    6               END;
     1356    17502    5               ELSE IF KV_VDOVLP_ERR.ERRCODE.ERR#~=%E$EOF THEN GOTO NO_SE_KEY;

  17502   2 000AC2  ACC7 0024                            LDB,B2   KV_RCVVDO+16,AUTO
          2 000AC4  E842 0002                            LDR,R6   2,B2
          2 000AC6  6043                                 SOR,R6   3
          2 000AC7  6D06                                 CMV,R6   6
          2 000AC8  09F8                                 BNE      s:17496,SPREL

     1357    17503    5               CALL KVE$INSREC;

  17503   2 000AC9  CBF0 0000                            LAB,B4   0,IMO
          2 000ACB  E380 0000 0000  xent                 LNJ,B6   KVE$INSREC
          2 000ACE       0001                            DC       s:17504,PREL

     1358    17504    5            END;                           /* END CASE KV$MVD.ORG                */

  17504   2 000ACF  0F81 07FD                            B        s:18851,PREL

     1359    17505        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  DCLFLD (declare field)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:228  
             17523    5   /***************************************************************************
             17524    5    *                                                                         *
             17525    5    *               Presentation message:  DCLFLD (declare field)             *
             17526    5    *                                                                         *
             17527    5    ***************************************************************************/

     1360    17532    4         CASE %KV_VDO_FNC_DCLFLD;

     1361    17533
     1362    17534        /* Setup KV$PTR with the row and column of the field we wish to
     1363    17535           create and call KVF$FNDFLD to determine if the coordinates given
     1364    17536           are legal for this mvd and whether or not a field already exists
     1365    17537           in this location                                                           */
     1366    17538
     1367    17539
     1368    17540    4            KV$PTR.VRTCLM = KV_VDO_DCLFLD.CLM;

  17540   2 000AD1  E844 0002                            LDR,R6   2,B4
          2 000AD3  EF45 001A                            STR,R6   26,B5

     1369    17541    4            KV$PTR.VRTLIN = KV_VDO_DCLFLD.LIN;

  17541   2 000AD5  D844 0001                            LDR,R5   1,B4
          2 000AD7  DF45 0019                            STR,R5   25,B5

     1370    17542    4            CALL KVF$FNDFLD;

  17542   2 000AD9  CBF0 0000                            LAB,B4   0,IMO
          2 000ADB  E380 0000 0000  xent                 LNJ,B6   KVF$FNDFLD
          2 000ADE       0001                            DC       s:17546,PREL

     1371    17543
     1372    17544        /* This function is not of the 'select' type                                  */
     1373    17545
     1374    17546    4            %KV_LINLST.LSTOPRSLC = '0'B;

  17546   2 000ADF  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:229  
          2 000AE2  DCC6 000E                            LDB,B5   14,B6
          2 000AE4  8845 0005                            LBF,'0080'X       5,B5
          2 000AE6       0080

     1375    17547    4            IF %KV_LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ONE

  17547   2 000AE7  DCC6 000E                            LDB,B5   14,B6
          2 000AE9  E2C5 0005                            LLH,R6   5,B5
          2 000AEB  6D01                                 CMV,R6   1
          2 000AEC  0981 0004                            BNE      s:17554,PREL

     1376    17548    4            THEN %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_UN_KNW;

  17548   2 000AEE  5C02                                 LDV,R5   2
          2 000AEF  D7C5 0005                            STH,R5   5,B5

     1377    17549         /* (The "one" field might move here, so be sure to search for it) */
     1378    17550
     1379    17551        /* If the given coordinates are not legal within the mvd, post an error
     1380    17552           and discontinue processing                                                 */
     1381    17553
     1382    17554    4            Y@TMPWRD1 = KV_VDO_DCLFLD.CLM+KV_VDO_DCLFLD.WDT-1;

  17554   2 000AF1  DC80 0000 0000  xsym                 LDB,B5   KV_RCVVDO$
          2 000AF4  E845 0002                            LDR,R6   2,B5
          2 000AF6  EA45 0003                            ADD,R6   3,B5
          2 000AF8  6EFF                                 ADV,R6   -1
          2 000AF9  EF47 0040                            STR,R6   Y@TMPWRD1,AUTO

     1383    17555    4            IF KV$PTR.STT=%KV_PTR_STT_ILGLIN

  17555   2 000AFB  D2C6 001D                            LLH,R5   29,B6
          2 000AFD  5D07                                 CMV,R5   7
          2 000AFE  0901 0010                            BE       s:17572,PREL
          2 000B00  5D06                                 CMV,R5   6
          2 000B01  0901 000D                            BE       s:17572,PREL
          2 000B03  C845 0003                            LDR,R4   3,B5
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:230  
          2 000B05  4A81 0009                            BLEZ,R4  s:17572,PREL
          2 000B07  CCC6 000A                            LDB,B4   10,B6
          2 000B09  B847 0040                            LDR,R3   Y@TMPWRD1,AUTO
          2 000B0B  B944 000D                            CMR,R3   13,B4
          2 000B0D  0381 0018                            BLE      s:17588,PREL

     1384    17556    4              OR KV$PTR.STT=%KV_PTR_STT_ILGCLM
     1385    17557    4              OR KV_VDO_DCLFLD.WDT<=0
     1386    17558    5              OR Y@TMPWRD1U>%KV_SRD.WDT THEN DO;

     1387    17559        /*E* ERROR:KV-E$ILGFLDPST-E
     1388    17560             MESSAGE:Start or end position of a field is off the device.
     1389    17561             MESSAGE1:A field declaration specified a position that does not fit
     1390    17562                      entirely on one line.  The offending field's FLDID is in the DCB.
     1391    17563        */
     1392    17564                    %KV_VDOERR (COD = %E$ILGFLDPST,
     1393    17565                    VDOFNC = %KV_VDO_FNC_DCLFLD,
     1394    17566                    FLDID = KV_VDO_DCLFLD.ID);

  17572   2 000B0F  CCC6 0004                            LDB,B4   4,B6
          2 000B11  C844 0013                            LDR,R4   19,B4
          2 000B13  4981 0010                            BNEZ,R4  s:17582,PREL

  17574   2 000B15  3C07                                 LDV,R3   7
          2 000B16  B7C4 0014                            STH,R3   20,B4

  17576   2 000B18  CCC6 0004                            LDB,B4   4,B6
          2 000B1A  E870 0579                            LDR,R6   1401,IMO
          2 000B1C  EF44 0013                            STR,R6   19,B4

  17578   2 000B1E  CCC6 000E                            LDB,B4   14,B6
          2 000B20  D845 0005                            LDR,R5   5,B5
          2 000B22  DF44 0007                            STR,R5   7,B4

     1395    17582    5               EXIT Y$DO_CASE_FNC;

  17582   2 000B24  0F81 07A8                            B        s:18851,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:231  

     1396    17583    5            END;                           /* IF                                 */
     1397    17584
     1398    17585        /* If this field will overlap another field, report an error and
     1399    17586           discontinue processing                                                     */
     1400    17587
     1401    17588    4            IF %KV_MRD.ATRRQRDSPPST

  17588   2 000B26  BCC6 0008                            LDB,B3   8,B6
          2 000B28  89C3 0018                            CMZ      24,B3
          2 000B2A  0881 0068                            BAGE     s:17608,PREL

     1402    17589    5            THEN IF %KV_VDI.INPUNT=%KV_INPUNT_BLK THEN DO;

  17589   2 000B2C  AC80 0000 0000  xsym                 LDB,B2   KV_RCVSSN$
          2 000B2F  9C82                                 LDB,B1   ,B2
          2 000B30  A841 001D                            LDR,R2   29,B1
          2 000B32  2045                                 SOR,R2   5
          2 000B33  A570 0003                            AND,R2   3,IMO
          2 000B35  2D03                                 CMV,R2   3
          2 000B36  0981 0046                            BNE      s:17605,PREL

     1403    17590        /*
     1404    17591           Blocked input needs disjoint attr bytes to get the input right.
     1405    17592        */
     1406    17593    5               Y@TMPWRD1 = Y@TMPWRD1+1;

  17593   2 000B38  8AC7 0040                            INC      Y@TMPWRD1,AUTO

     1407    17594    6               IF KV$PTR.FLDWRDX>SIZEW(KV$FLDLST) THEN DO;

  17594   2 000B3A  E846 0018                            LDR,R6   24,B6
          2 000B3C  6D03                                 CMV,R6   3
          2 000B3D  0A81 0023                            BALE     s:17601,PREL

     1408    17595    6                  IF KV$PTR.FLDWRDX<=%KV_FLDLST.LSTENTWRDX

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:232  
  17595   2 000B3F  CCC6 0012                            LDB,B4   18,B6
          2 000B41  E944 0001                            CMR,R6   1,B4
          2 000B43  0A01 000B                            BAG      s:17597,PREL

     1409    17596    6                  THEN Y@TMP$ = PINCRW(KV$PTR.FLD$,-%KV_FLD.PRVSTRWRDSIZ);

  17596   2 000B45  BCC6 0014                            LDB,B3   20,B6
          2 000B47  B0C3 0001                            LDH,R3   1,B3
          2 000B49  8253                                 NEG      R3
          2 000B4A  9BB3                                 LAB,B1   ,B3,R3
          2 000B4B  9FC7 0042                            STB,B1   Y@TMP$,AUTO
          2 000B4D  0F81 0006                            B        s:17598,PREL

     1410    17597    6                  ELSE Y@TMP$ = PINCRW(KV$PTR.FLDLST$,%KV_FLDLST.LSTENTWRDX);

  17597   2 000B4F  B844 0001                            LDR,R3   1,B4
          2 000B51  BBB4                                 LAB,B3   ,B4,R3
          2 000B52  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     1411    17598    6                  IF Y@TMP$->KV$FLD.VRTCLM+Y@TMP$->KV$FLD.WDT=KV$PTR.VRTCLM

  17598   2 000B54  BCC7 0042                            LDB,B3   Y@TMP$,AUTO
          2 000B56  D2C3 0002                            LLH,R5   2,B3
          2 000B58  C2C3 0004                            LLH,R4   4,B3
          2 000B5A  DA54                                 ADD,R5   R4
          2 000B5B  D946 001A                            CMR,R5   26,B6
          2 000B5D  0981 0003                            BNE      s:17601,PREL

     1412    17599    6                  THEN Y@TMPWRD1 = 0;      /* Indicate an error condition.       */

  17599   2 000B5F  8747 0040                            CL       Y@TMPWRD1,AUTO

     1413    17600    6               END;

     1414    17601    5               IF Y@TMPWRD1>%KV_SRD.WDT THEN IF KV_VDO_DCLFLD.WDT=1

  17601   2 000B61  CCC6 000A                            LDB,B4   10,B6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:233  
          2 000B63  E847 0040                            LDR,R6   Y@TMPWRD1,AUTO
          2 000B65  6801 002D                            BLZ,R6   s:17608,PREL
          2 000B67  E944 000D                            CMR,R6   13,B4
          2 000B69  0381 0029                            BLE      s:17608,PREL

  17601   2 000B6B  D845 0003                            LDR,R5   3,B5
          2 000B6D  5D01                                 CMV,R5   1
          2 000B6E  0901 000A                            BE       s:17603,PREL
          2 000B70  5D02                                 CMV,R5   2
          2 000B71  0981 0021                            BNE      s:17608,PREL
          2 000B73  C2C4 000E                            LLH,R4   14,B4
          2 000B75  C946 0019                            CMR,R4   25,B6
          2 000B77  0981 001B                            BNE      s:17608,PREL

     1415    17602    5                 OR KV_VDO_DCLFLD.WDT=2 AND KV$PTR.VRTLIN=%KV_SRD.LNG
     1416    17603    5               THEN Y@TMPWRD1 = 0;         /* Null fields are also disallowed.   */

  17603   2 000B79  8747 0040                            CL       Y@TMPWRD1,AUTO

     1417    17604    5            END;

  17604   2 000B7B  0F81 0017                            B        s:17608,PREL

     1418    17605    4            ELSE IF KV$PTR.VRTCLM=%KV_SRD.WDT

  17605   2 000B7D  9846 001A                            LDR,R1   26,B6
          2 000B7F  9944 000D                            CMR,R1   13,B4
          2 000B81  0981 0011                            BNE      s:17608,PREL
          2 000B83  E2C4 000E                            LLH,R6   14,B4
          2 000B85  E946 0019                            CMR,R6   25,B6
          2 000B87  0901 0009                            BE       s:17607,PREL
          2 000B89  E844 001B                            LDR,R6   27,B4
          2 000B8B  6801 0005                            BLZ,R6   s:17607,PREL
          2 000B8D  E943 000B                            CMR,R6   11,B3
          2 000B8F  0281 0003                            BGE      s:17608,PREL

     1419    17606    4              AND (KV$PTR.VRTLIN=%KV_SRD.LNG OR %KV_SRD.SRDEND.CLM<%KV_MRD.WDT)
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:234  
     1420    17607    4            THEN Y@TMPWRD1 = 0;       /* The last field needs at least 2 psts.   */

  17607   2 000B91  8747 0040                            CL       Y@TMPWRD1,AUTO

     1421    17608    4            IF (KV$PTR.STT = %KV_PTR_STT_IN_FLDCLMN)

  17608   2 000B93  E2C6 001D                            LLH,R6   29,B6
          2 000B95  6D01                                 CMV,R6   1
          2 000B96  0901 0014                            BE       s:17639,PREL
          2 000B98  D847 0040                            LDR,R5   Y@TMPWRD1,AUTO
          2 000B9A  5901 0010                            BEZ,R5   s:17639,PREL
          2 000B9C  6901 000E                            BEZ,R6   s:17639,PREL
          2 000B9E  6D02                                 CMV,R6   2
          2 000B9F  0901 0004                            BE       s:17608+17,PREL
          2 000BA1  6D03                                 CMV,R6   3
          2 000BA2  0981 0052                            BNE      s:17663,PREL
          2 000BA4  CCC6 0014                            LDB,B4   20,B6
          2 000BA6  C2C4 0002                            LLH,R4   2,B4
          2 000BA8  C955                                 CMR,R4   R5
          2 000BA9  0A01 004B                            BAG      s:17663,PREL

     1422    17609    4              OR Y@TMPWRD1=0
     1423    17610    4              OR (KV$PTR.STT = %KV_PTR_STT_IN_FLDCLM1)
     1424    17611
     1425    17612        /* We want to insure that this field will not run into the field
     1426    17613           which follows it on the line                                               */
     1427    17614
     1428    17615        /* If this field will be before the first field or between fields,
     1429    17616           KV$PTR points to the field that will follow the new one. Make
     1430    17617           sure that the column it starts in is greater than the last column
     1431    17618           of the new field.                                                          */
     1432    17619
     1433    17620    4              OR (KV$PTR.STT=%KV_PTR_STT_BFRFRSFLD
     1434    17621    4              OR KV$PTR.STT=%KV_PTR_STT_BTWFLD)
     1435    17622    5              AND Y@TMPWRD1>=%KV_FLD.VRTCLM THEN DO;

     1436    17623
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:235  
     1437    17624        /* Report an error and exit                                                   */
     1438    17625
     1439    17626        /*E*  ERROR: KV-E$OVRLAPFLD-E
     1440    17627              MESSAGE:Overlapping field declaration.
     1441    17628              MESSAGE1:Overlapping fields declared.  DCB.FLDID contains ID for second
     1442    17629                       field if deferred error report - the first for a direct one.
     1443    17630        */
     1444    17631                    %KV_VDOERR (COD = %E$OVRLAPFLD,
     1445    17632                    VDOFNC = %KV_VDO_FNC_DCLFLD,
     1446    17633                    FLDID = KV_VDO_DCLFLD.ID);

  17639   2 000BAB  CCC6 0004                            LDB,B4   4,B6
          2 000BAD  D844 0013                            LDR,R5   19,B4
          2 000BAF  5981 0010                            BNEZ,R5  s:17649,PREL

  17641   2 000BB1  4C07                                 LDV,R4   7
          2 000BB2  C7C4 0014                            STH,R4   20,B4

  17643   2 000BB4  CCC6 0004                            LDB,B4   4,B6
          2 000BB6  E870 057A                            LDR,R6   1402,IMO
          2 000BB8  EF44 0013                            STR,R6   19,B4

  17645   2 000BBA  CCC6 000E                            LDB,B4   14,B6
          2 000BBC  D845 0005                            LDR,R5   5,B5
          2 000BBE  DF44 0007                            STR,R5   7,B4

     1447    17649    5               IF Y@TMPWRD1=0

  17649   2 000BC0  E847 0040                            LDR,R6   Y@TMPWRD1,AUTO
          2 000BC2  6981 0018                            BNEZ,R6  s:17654,PREL

     1448    17650    6               THEN IF KV$PTR.VRTCLM>=%KV_SRD.WDT-1 THEN DO;

  17650   2 000BC4  CCC6 000A                            LDB,B4   10,B6
          2 000BC6  D844 000D                            LDR,R5   13,B4
          2 000BC8  5EFF                                 ADV,R5   -1
          2 000BC9  5801 0005                            BLZ,R5   s:17651,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:236  
          2 000BCB  D946 001A                            CMR,R5   26,B6
          2 000BCD  0301 0009                            BG       s:17653,PREL

     1449    17651    6                  %KV_STR.ERR.COD = %E$ILGFLDPST;

  17651   2 000BCF  BCC6 0004                            LDB,B3   4,B6
          2 000BD1  C870 0579                            LDR,R4   1401,IMO
          2 000BD3  CF43 0013                            STR,R4   19,B3

     1450    17652    6                  EXIT Y$DO_CASE_FNC;

  17652   2 000BD5  0F81 06F7                            B        s:18851,PREL

     1451    17653    5               END; ELSE KV$PTR.FLD$ = Y@TMP$;

  17653   2 000BD7  BCC7 0042                            LDB,B3   Y@TMP$,AUTO
          2 000BD9  BFC6 0014                            STB,B3   20,B6

     1452    17654    5               IF KV_RCVVDO.VDOVLP_MRK$~=ADDR(NIL)

  17654   2 000BDB  8DC7 002A                            CMN      KV_RCVVDO+22,AUTO
          2 000BDD  0901 0015                            BE       s:17658,PREL

     1453    17655    5               THEN IF KV_VDOVLP_MRK.MRKTYP=%KV_VDOMRKTYP_ENDACK

  17655   2 000BDF  CCC7 002A                            LDB,B4   KV_RCVVDO+22,AUTO
          2 000BE1  E844 0001                            LDR,R6   1,B4
          2 000BE3  E570 00FF                            AND,R6   255,IMO
          2 000BE5  6D01                                 CMV,R6   1
          2 000BE6  0981 000C                            BNE      s:17658,PREL
          2 000BE8  89C4 0001                            CMZ      1,B4
          2 000BEA  0801 0008                            BAL      s:17658,PREL

     1454    17656    5                 AND NOT KV_VDOVLP_MRK.RSP
     1455    17657    5               THEN %KV_LINLST.ERRFLDID = %KV_FLD.ID;

  17657   2 000BEC  BCC6 000E                            LDB,B3   14,B6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:237  
          2 000BEE  ACC6 0014                            LDB,B2   20,B6
          2 000BF0  D802                                 LDR,R5   ,B2
          2 000BF1  DF43 0007                            STR,R5   7,B3

     1456    17658    5               EXIT Y$DO_CASE_FNC;

  17658   2 000BF3  0F81 06D9                            B        s:18851,PREL

     1457    17659    5            END;                           /* IF                                 */
     1458    17660
     1459    17661        /* Determine how many words this field will occupy                            */
     1460    17662
     1461    17663    4            Y@FLDWRDSIZ = ((KV_VDO_DCLFLD.WDT + (LENGTHC(%KV_FLD) - 1) + 1) / 2);

  17663   2 000BF5  CCC6 0014                            LDB,B4   20,B6
          2 000BF7  C845 0003                            LDR,R4   3,B5
          2 000BF9  4E0D                                 ADV,R4   13
          2 000BFA  C370 0002                            DIV,R4   2,IMO
          2 000BFC  CF47 0044                            STR,R4   Y@FLDWRDSIZ,AUTO

     1462    17664
     1463    17665        /* Determine now what the Y@PRVSTRWRDSIZ field for the new entry will
     1464    17666           look like. If this is the first field on the line or the only
     1465    17667           field on the line, it will be 0. Otherwise, calculate it based
     1466    17668           on the current contents of KV$PTR                                          */
     1467    17669
     1468    17670    4            IF (KV$PTR.STT ~= %KV_PTR_STT_NO_FLD)

  17670   2 000BFE  6D05                                 CMV,R6   5
          2 000BFF  0901 0018                            BE       s:17678,PREL
          2 000C01  6D02                                 CMV,R6   2
          2 000C02  0901 0015                            BE       s:17678,PREL

     1469    17671    5              AND (KV$PTR.STT ~= %KV_PTR_STT_BFRFRSFLD) THEN DO;

     1470    17672    6               IF (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD) THEN DO;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:238  
  17672   2 000C04  6D04                                 CMV,R6   4
          2 000C05  0981 000C                            BNE      s:17675,PREL

     1471    17673    6                  Y@PRVSTRWRDSIZ = PINCRW(KV$PTR.FLDLST$, %KV_FLDLST.LSTENTWRDX)->
             17673                           KV$FLD.STRWRDSIZ;

  17673   2 000C07  BCC6 0012                            LDB,B3   18,B6
          2 000C09  B843 0001                            LDR,R3   1,B3
          2 000C0B  3001                                 SOL,R3   1
          2 000C0C  3E03                                 ADV,R3   3
          2 000C0D  A0B3                                 LDH,R2   ,B3,R3
          2 000C0E  AF47 0047                            STR,R2   Y@PRVSTRWRDSIZ,AUTO

     1472    17674    6               END; ELSE DO;

  17674   2 000C10  0F81 000A                            B        s:17686,PREL

     1473    17675    6                  Y@PRVSTRWRDSIZ = %KV_FLD.PRVSTRWRDSIZ;

  17675   2 000C12  B0C4 0001                            LDH,R3   1,B4
          2 000C14  BF47 0047                            STR,R3   Y@PRVSTRWRDSIZ,AUTO

     1474    17676    6               END;                        /* IF                                 */

     1475    17677    5            END; ELSE DO;

  17677   2 000C16  0F81 0004                            B        s:17686,PREL

     1476    17678    5               Y@PRVSTRWRDSIZ = SIZEW(KV$FLDLST);

  17678   2 000C18  3C03                                 LDV,R3   3
          2 000C19  BF47 0047                            STR,R3   Y@PRVSTRWRDSIZ,AUTO

     1477    17679    5            END;                           /* IF                                 */

     1478    17680
     1479    17681        /* If this field belongs at the end of the line and there is room at the
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:239  
     1480    17682           end of the field list buffer, just build a ptr to where the field will
     1481    17683           go and dont bother to call all the routines which aquire memory
     1482    17684           and shuffle data (this is the fast path)                                   */
     1483    17685
     1484    17686    4            Y@TMP$ = ADDR(NIL);

  17686   2 000C1B  BB80 0000 0000                       LAB,B3   0
          2 000C1E  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     1485    17687
     1486    17688    4            IF (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD)

  17688   2 000C20  6D04                                 CMV,R6   4
          2 000C21  0901 0004                            BE       s:17690,PREL
          2 000C23  6D05                                 CMV,R6   5
          2 000C24  0981 0024                            BNE      s:17707,PREL

     1487    17689    5              OR (KV$PTR.STT = %KV_PTR_STT_NO_FLD) THEN DO;

     1488    17690    6               IF (KV$PTR.STT = %KV_PTR_STT_AFTLSTFLD) THEN DO;

  17690   2 000C26  6D04                                 CMV,R6   4
          2 000C27  0981 000F                            BNE      s:17693,PREL

     1489    17691    6                 Y@TMPWRD1 = %KV_FLDLST.LSTENTWRDX + PINCRW(KV$PTR.FLDLST$, %KV_FLDLST
             17691                           .LSTENTWRDX)->KV$FLD.STRWRDSIZ;

  17691   2 000C29  ACC6 0012                            LDB,B2   18,B6
          2 000C2B  B842 0001                            LDR,R3   1,B2
          2 000C2D  3001                                 SOL,R3   1
          2 000C2E  3E03                                 ADV,R3   3
          2 000C2F  A0B2                                 LDH,R2   ,B2,R3
          2 000C30  AA42 0001                            ADD,R2   1,B2
          2 000C32  D852                                 LDR,R5   R2
          2 000C33  DF47 0040                            STR,R5   Y@TMPWRD1,AUTO

     1490    17692    6               END; ELSE DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:240  

  17692   2 000C35  0F81 0004                            B        s:17699,PREL

     1491    17693    6                  Y@TMPWRD1 = SIZEW(KV$FLDLST);

  17693   2 000C37  5C03                                 LDV,R5   3
          2 000C38  DF47 0040                            STR,R5   Y@TMPWRD1,AUTO

     1492    17694    6               END;                        /* IF                                 */

     1493    17695
     1494    17696        /* If the number of words available is greater than the amount
     1495    17697           we need, just do a fast update                                         */
     1496    17698
     1497    17699    5               IF KV$PTR.FLDLST$~=ADDR(NIL)

  17699   2 000C3A  8DC6 0012                            CMN      18,B6
          2 000C3C  0901 000C                            BE       s:17707,PREL

     1498    17700    6               THEN IF %KV_FLDLST.LSTCELWRDX-Y@TMPWRD1>Y@FLDWRDSIZ THEN DO;

  17700   2 000C3E  CCC6 0012                            LDB,B4   18,B6
          2 000C40  D204                                 SUB,R5   ,B4
          2 000C41  8255                                 NEG      R5
          2 000C42  D954                                 CMR,R5   R4
          2 000C43  0A81 0005                            BALE     s:17707,PREL

     1499    17701    6                  Y@TMP$ = KV$PTR.FLD$;

  17701   2 000C45  ACC6 0014                            LDB,B2   20,B6
          2 000C47  AFC7 0042                            STB,B2   Y@TMP$,AUTO

     1500    17702    6               END;                        /* IF                                 */

     1501    17703    5            END;                           /* IF                                 */

     1502    17704
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:241  
     1503    17705        /* If it fits, Y@TMP$ will contain the ptr to the field entry                    */
     1504    17706
     1505    17707    5            IF (Y@TMP$ ~= ADDR(NIL)) THEN DO;

  17707   2 000C49  8DC7 0042                            CMN      Y@TMP$,AUTO
          2 000C4B  0901 0009                            BE       s:17719,PREL

     1506    17708
     1507    17709        /* This field will fit right at the end of the buffer and thus becomes
     1508    17710           the new last entry. Update the field list header                           */
     1509    17711
     1510    17712    5               %KV_FLDLST.LSTENTWRDX = KV$PTR.FLDWRDX;

  17712   2 000C4D  CCC6 0012                            LDB,B4   18,B6
          2 000C4F  E846 0018                            LDR,R6   24,B6
          2 000C51  EF44 0001                            STR,R6   1,B4

     1511    17713
     1512    17714        /* Otherwise, this field will not fit at the end of the current field
     1513    17715           list buffer. Call a routine to make room for the new field and
     1514    17716           update the linkages we updated above.                                      */
     1515    17717
     1516    17718    5            END; ELSE DO;

  17718   2 000C53  0F81 0019                            B        s:17732,PREL

     1517    17719    5               KV_RCVSSN.FLDWRDSIZ = Y@FLDWRDSIZ;

  17719   2 000C55  CF47 000E                            STR,R4   KV_RCVSSN,AUTO

     1518    17720    6               CALL KVF$ADDFLD WHENALTRETURN DO;

  17720   2 000C57  CBF0 0000                            LAB,B4   0,IMO
          2 000C59  E380 0000 0000  xent                 LNJ,B6   KVF$ADDFLD
          2 000C5C       0003                            DC       s:17721,PREL
          2 000C5D  0F81 000F                            B        s:17732,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:242  
     1519    17721    6                  %KV_LINLST.ERRFLDID = KV_VDO_DCLFLD.ID;

  17721   2 000C5F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000C62  DCC6 000E                            LDB,B5   14,B6
          2 000C64  CC80 0000 0000  xsym                 LDB,B4   KV_RCVVDO$
          2 000C67  E844 0005                            LDR,R6   5,B4
          2 000C69  EF45 0007                            STR,R6   7,B5

     1520    17722    6                  EXIT Y$DO_CASE_FNC;

  17722   2 000C6B  0F81 0661                            B        s:18851,PREL

     1521    17723    6               END;
     1522    17724    5            END;                           /* IF                                 */

     1523    17725
     1524    17726        /* Move in the field definition from the function.
     1525    17727        */
     1526    17728
     1527    17729        /* Build the field structure in AUTO to get more efficient code generated.
     1528    17730        */
     1529    17731        %EQU Y@FLD=CHARTEXT('ADDR(KV@PTR)->KV$FLD');
     1530    17732    4            %Y@FLD = KV_FLD;

  17732   2 000C6D  AB80 0000 0000  xsym                 LAB,B2   KV_FLD
          2 000C70  2C00                                 LDV,R2   0
          2 000C71  6C0D                                 LDV,R6   13
          2 000C72  BBC7 0088                            LAB,B3   KV@PTR,AUTO
          2 000C74  3C00                                 LDV,R3   0
          2 000C75  0008                                 MMM

     1531    17733    4            %Y@FLD.ID = KV_VDO_DCLFLD.ID;

  17733   2 000C76  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 000C79  E846 0005                            LDR,R6   5,B6
          2 000C7B  EF47 0088                            STR,R6   KV@PTR,AUTO

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:243  
     1532    17734    4            %Y@FLD.STRWRDSIZ = Y@FLDWRDSIZ;

  17734   2 000C7D  D847 0044                            LDR,R5   Y@FLDWRDSIZ,AUTO
          2 000C7F  DAC7 0089                            SRM,R5,'00FF'X    KV@PTR+1,AUTO
          2 000C81       00FF

     1533    17735    4            %Y@FLD.PRVSTRWRDSIZ = Y@PRVSTRWRDSIZ;

  17735   2 000C82  C847 0047                            LDR,R4   Y@PRVSTRWRDSIZ,AUTO
          2 000C84  C7C7 0089                            STH,R4   KV@PTR+1,AUTO

     1534    17736    4            %Y@FLD.VRTCLM = KV_VDO_DCLFLD.CLM;

  17736   2 000C86  B846 0002                            LDR,R3   2,B6
          2 000C88  B7C7 008A                            STH,R3   KV@PTR+2,AUTO

     1535    17737    4            %Y@FLD.ATRCLM = KV_VDO_DCLFLD.CLM;

  17737   2 000C8A  B846 0002                            LDR,R3   2,B6
          2 000C8C  B7C7 008D                            STH,R3   KV@PTR+5,AUTO

     1536    17738    4            %Y@FLD.HI_NONBLNCLM = KV_VDO_DCLFLD.CLM-1;

  17738   2 000C8E  B846 0002                            LDR,R3   2,B6
          2 000C90  3EFF                                 ADV,R3   -1
          2 000C91  BAC7 008C                            SRM,R3,'00FF'X    KV@PTR+4,AUTO
          2 000C93       00FF

     1537    17739    4            %KV_LIN.UPDFLDCNT = 255;

  17739   2 000C94  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000C97  CCC5 0010                            LDB,B4   16,B5
          2 000C99  8944 0003                            LBT,'FF00'X       3,B4
          2 000C9B       FF00

     1538    17740    4            %Y@FLD.QLF = KV_VDO_DCLFLD.QLF;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:244  
  17740   2 000C9C  E2C6 0004                            LLH,R6   4,B6
          2 000C9E  6008                                 SOL,R6   8
          2 000C9F  6048                                 SOR,R6   8
          2 000CA0  E7C7 008B                            STH,R6   KV@PTR+3,AUTO

     1539    17741
     1540    17742        /* Set the INPut bit if this field is not protected, not guarded and
     1541    17743           not constant                                                               */
     1542    17744
     1543    17745    5            IF NOT %Y@FLD.QLF&%(G#QLF_PRT| G#QLF_PRTGRD| G#QLF_CNS) THEN DO;

  17745   2 000CA2  E2C7 008B                            LLH,R6   KV@PTR+3,AUTO
          2 000CA4  6008                                 SOL,R6   8
          2 000CA5  E570 4500                            AND,R6   17664,IMO
          2 000CA7  6981 0007                            BNEZ,R6  s:17755,PREL

     1544    17746    5               %Y@FLD.INP = '1'B;

  17746   2 000CA9  8947 008A                            LBT,'0010'X       KV@PTR+2,AUTO
  17746   2 000CAB       0010

     1545    17747
     1546    17748        /* Start out protected                                                        */
     1547    17749
     1548    17750    5               %Y@FLD.QLF.PRT = '1'B;

  17750   2 000CAC  8947 008B                            LBT,'0400'X       KV@PTR+3,AUTO
  17750   2 000CAE       0400

     1549    17751    5            END;

     1550    17752
     1551    17753        /* Setup graphic rendition. First check for abstracted rendition              */
     1552    17754
     1553    17755    5            IF KV_VDO_DCLFLD.GRPRND.ABS THEN DO;

  17755   2 000CAF  82C6 0004                            LB,'0080'X        4,B6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:245  
  17755   2 000CB1       0080
          2 000CB2  0581 0013                            BBF      s:17762,PREL

     1554    17756    5               %Y@FLD.GRPRND =

  17756   2 000CB4  E846 0004                            LDR,R6   4,B6
          2 000CB6  6008                                 SOL,R6   8
          2 000CB7  E570 0700                            AND,R6   1792,IMO
          2 000CB9  6048                                 SOR,R6   8
          2 000CBA  CCC5 0008                            LDB,B4   8,B5
          2 000CBC  B856                                 LDR,R3   R6
          2 000CBD  3E32                                 ADV,R3   50
          2 000CBE  E2B4                                 LLH,R6   ,B4,R3
          2 000CBF  6008                                 SOL,R6   8
          2 000CC0  6048                                 SOR,R6   8
          2 000CC1  EAC7 008B                            SRM,R6,'00FF'X    KV@PTR+3,AUTO
          2 000CC3       00FF

     1555    17757    5                 %KV_MRD.ABSGRPRND(BITBIN(KV_VDO_DCLFLD.GRPRND&'07'X));
     1556    17758
     1557    17759        /* Otherwise, just move in the bits specified in DCLFLD function
             17759        */
     1558    17760
     1559    17761    5            END; ELSE DO;

  17761   2 000CC4  0F81 0006                            B        s:17767,PREL

     1560    17762    5               %Y@FLD.GRPRND = KV_VDO_DCLFLD.GRPRND;

  17762   2 000CC6  E846 0004                            LDR,R6   4,B6
          2 000CC8  EAC7 008B                            SRM,R6,'00FF'X    KV@PTR+3,AUTO
          2 000CCA       00FF

     1561    17763    5            END;                           /* IF                                 */

     1562    17764
     1563    17765        /* The field entry itself always contains the actual bits                     */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:246  
     1564    17766
     1565    17767    4            %Y@FLD.WDT = KV_VDO_DCLFLD.WDT;

  17767   2 000CCB  E846 0003                            LDR,R6   3,B6
          2 000CCD  E7C7 008C                            STH,R6   KV@PTR+4,AUTO

     1566    17768
     1567    17769    4            Y@TMPWRD1 = %Y@FLD.VRTCLM+%Y@FLD.WDT;

  17769   2 000CCF  E2C7 008A                            LLH,R6   KV@PTR+2,AUTO
          2 000CD1  B2C7 008C                            LLH,R3   KV@PTR+4,AUTO
          2 000CD3  EA53                                 ADD,R6   R3
          2 000CD4  EF47 0040                            STR,R6   Y@TMPWRD1,AUTO

     1568    17770    5            IF %KV_MRD.ATRRQRDSPPST THEN DO;

  17770   2 000CD6  CCC5 0008                            LDB,B4   8,B5
          2 000CD8  89C4 0018                            CMZ      24,B4
          2 000CDA  0881 003D                            BAGE     s:17789,PREL

     1569    17771    5               %Y@FLD.HI_NONBLNCLM = %Y@FLD.VRTCLM;

  17771   2 000CDC  A2C7 008A                            LLH,R2   KV@PTR+2,AUTO
          2 000CDE  AAC7 008C                            SRM,R2,'00FF'X    KV@PTR+4,AUTO
          2 000CE0       00FF

     1570    17772    6               IF Y@TMPWRD1>%KV_SRD.WDT THEN DO;

  17772   2 000CE1  CCC5 000A                            LDB,B4   10,B5
          2 000CE3  6801 0009                            BLZ,R6   s:17778,PREL
          2 000CE5  E944 000D                            CMR,R6   13,B4
          2 000CE7  0381 0005                            BLE      s:17778,PREL

     1571    17773
     1572    17774        /* The field wont fit on the screen, truncate it                             */
     1573    17775
     1574    17776    6                  Y@TMPWRD1 = %KV_SRD.WDT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:247  

  17776   2 000CE9  E844 000D                            LDR,R6   13,B4
          2 000CEB  EF47 0040                            STR,R6   Y@TMPWRD1,AUTO

     1575    17777    6               END;                        /* IF                                 */

     1576    17778    5               IF Y@TMPWRD1=%KV_SRD.SRDEND.CLM-%KV_SRD.ORG.CLM

  17778   2 000CED  CCC5 000A                            LDB,B4   10,B5
          2 000CEF  9844 001B                            LDR,R1   27,B4
          2 000CF1  9244 0008                            SUB,R1   8,B4
          2 000CF3  9956                                 CMR,R1   R6
          2 000CF4  0981 001C                            BNE      s:17786,PREL
          2 000CF6  BCC5 0010                            LDB,B3   16,B5
          2 000CF8  92C4 000E                            LLH,R1   14,B4
          2 000CFA  9943 0002                            CMR,R1   2,B3
          2 000CFC  0301 0008                            BG       s:17778+24,PREL
          2 000CFE  ACC5 0008                            LDB,B2   8,B5
          2 000D00  82C2 0016                            LB,'0080'X        22,B2
          2 000D02       0080
          2 000D03  0501 000B                            BBT      s:17784,PREL
          2 000D05  ACC5 0008                            LDB,B2   8,B5
          2 000D07  E844 001B                            LDR,R6   27,B4
          2 000D09  6801 0005                            BLZ,R6   s:17784,PREL
          2 000D0B  E942 000B                            CMR,R6   11,B2
          2 000D0D  0281 0003                            BGE      s:17786,PREL

     1577    17779    5                 AND (%KV_LIN.VRTLIN>=%KV_SRD.LNG AND %KV_MRD.NO_FLDTRM
     1578    17780    6                 OR %KV_SRD.SRDEND.CLM<%KV_MRD.WDT) THEN DO;

     1579    17781
     1580    17782        /* We need the last position to restore attributes for the message line       */
     1581    17783
     1582    17784    6                  Y@TMPWRD1 = Y@TMPWRD1 - 1;

  17784   2 000D0F  88C7 0040                            DEC      Y@TMPWRD1,AUTO

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:248  
     1583    17785    6               END;                        /* IF                                 */

     1584    17786    5               %Y@FLD.WDT = Y@TMPWRD1-%Y@FLD.VRTCLM;

  17786   2 000D11  A247 0040                            SUB,R2   Y@TMPWRD1,AUTO
          2 000D13  8252                                 NEG      R2
          2 000D14  A7C7 008C                            STH,R2   KV@PTR+4,AUTO

     1585    17787    5               Y@TMPWRD1 = Y@TMPWRD1+1;    /* first avail text byte for nxtfld   */

  17787   2 000D16  8AC7 0040                            INC      Y@TMPWRD1,AUTO

     1586    17788    5            END;

     1587    17789    5            IF (KV$PTR.FLDWRDX > SIZEW(KV$FLDLST)) THEN DO;

  17789   2 000D18  E845 0018                            LDR,R6   24,B5
          2 000D1A  6D03                                 CMV,R6   3
          2 000D1B  0A81 0027                            BALE     s:17805,PREL

     1588    17790    5               Y@TMP$ = PINCRW(KV$PTR.FLD$, - %Y@FLD.PRVSTRWRDSIZ);

  17790   2 000D1D  CCC5 0014                            LDB,B4   20,B5
          2 000D1F  B0C7 0089                            LDH,R3   KV@PTR+1,AUTO
          2 000D21  8253                                 NEG      R3
          2 000D22  BBB4                                 LAB,B3   ,B4,R3
          2 000D23  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     1589    17791    5               Y@TMPWRD2 = Y@TMP$->KV$FLD.VRTCLM+Y@TMP$->KV$FLD.WDT;

  17791   2 000D25  A2C3 0002                            LLH,R2   2,B3
          2 000D27  92C3 0004                            LLH,R1   4,B3
          2 000D29  AA51                                 ADD,R2   R1
          2 000D2A  AF47 0041                            STR,R2   Y@TMPWRD2,AUTO

     1590    17792    5               IF %KV_MRD.ATRRQRDSPPST THEN Y@TMPWRD2 = Y@TMPWRD2+1;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:249  
  17792   2 000D2C  ACC5 0008                            LDB,B2   8,B5
          2 000D2E  89C2 0018                            CMZ      24,B2
          2 000D30  0881 0003                            BAGE     s:17793,PREL

  17792   2 000D32  8AC7 0041                            INC      Y@TMPWRD2,AUTO

     1591    17793    6               IF Y@TMPWRD2>=%Y@FLD.VRTCLM THEN DO;

  17793   2 000D34  A2C7 008A                            LLH,R2   KV@PTR+2,AUTO
          2 000D36  A947 0041                            CMR,R2   Y@TMPWRD2,AUTO
          2 000D38  0A01 000A                            BAG      s:17805,PREL

     1592    17794    6                  IF Y@TMPWRD2>%Y@FLD.VRTCLM /* Only possible if ATRRQRDSPPST    */

  17794   2 000D3A  0881 0005                            BAGE     s:17796,PREL

     1593    17795    6                  THEN %Y@FLD.ATRCLM = Y@TMP$->KV$FLD.ATRCLM;

  17795   2 000D3C  E2C3 0005                            LLH,R6   5,B3
          2 000D3E  E7C7 008D                            STH,R6   KV@PTR+5,AUTO

     1594    17796    6                  Y@TMP$->KV$FLD.TRMATRRQR = '0'B;

  17796   2 000D40  8843 0002                            LBF,'0001'X       2,B3
  17796   2 000D42       0001

     1595    17797
     1596    17798        /* The previous field abuts this one, put attrs in its attr byte              */
     1597    17799
     1598    17800    6               END;                        /* IF                                 */

     1599    17801    5            END;                           /* IF                                 */

     1600    17802
     1601    17803        /* Now check the following ones for the same situation                        */
     1602    17804
     1603    17805    4            IF Y@TMPWRD1<=%KV_MRD.WDT OR %KV_MRD.NO_FLDTRM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:250  

  17805   2 000D43  CCC5 0008                            LDB,B4   8,B5
          2 000D45  E847 0040                            LDR,R6   Y@TMPWRD1,AUTO
          2 000D47  6801 000A                            BLZ,R6   s:17806,PREL
          2 000D49  E944 000B                            CMR,R6   11,B4
          2 000D4B  0381 0006                            BLE      s:17806,PREL
          2 000D4D  82C4 0016                            LB,'0080'X        22,B4
          2 000D4F       0080
          2 000D50  0581 0004                            BBF      s:17807,PREL

     1604    17806    4            THEN %Y@FLD.TRMATRRQR = '1'B;

  17806   2 000D52  8947 008A                            LBT,'0001'X       KV@PTR+2,AUTO
  17806   2 000D54       0001

     1605    17807    4            Y@TMPWRD2 = KV$PTR.FLDWRDX + %Y@FLD.STRWRDSIZ;

  17807   2 000D55  B847 0089                            LDR,R3   KV@PTR+1,AUTO
          2 000D57  3008                                 SOL,R3   8
          2 000D58  3068                                 SAR,R3   8
          2 000D59  BA45 0018                            ADD,R3   24,B5
          2 000D5B  BF47 0041                            STR,R3   Y@TMPWRD2,AUTO

     1606    17808    4            Y@TMP$ = PINCRW(KV$PTR.FLDLST$, Y@TMPWRD2);

  17808   2 000D5D  CCC5 0012                            LDB,B4   18,B5
          2 000D5F  BBB4                                 LAB,B3   ,B4,R3
          2 000D60  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     1607    17809    5            DO WHILE Y@TMPWRD2<=%KV_FLDLST.LSTENTWRDX;

  17809   2 000D62  B944 0001                            CMR,R3   1,B4
          2 000D64  0A01 002A                            BAG      s:17817,PREL

     1608    17810    5               IF Y@TMPWRD1<Y@TMP$->KV$FLD.ATRCLM THEN EXIT;

  17810   2 000D66  ECC7 0042                            LDB,B6   Y@TMP$,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:251  
          2 000D68  E2C6 0005                            LLH,R6   5,B6
          2 000D6A  E947 0040                            CMR,R6   Y@TMPWRD1,AUTO
          2 000D6C  0A01 0022                            BAG      s:17817,PREL

     1609    17811    5               %Y@FLD.TRMATRRQR = '0'B;

  17811   2 000D6E  8847 008A                            LBF,'0001'X       KV@PTR+2,AUTO
  17811   2 000D70       0001

     1610    17812    5               IF Y@TMPWRD1=Y@TMP$->KV$FLD.ATRCLM THEN EXIT;

  17812   2 000D71  E2C6 0005                            LLH,R6   5,B6
          2 000D73  E947 0040                            CMR,R6   Y@TMPWRD1,AUTO
          2 000D75  0901 0019                            BE       s:17817,PREL

     1611    17813    5               Y@TMP$->KV$FLD.ATRCLM = %Y@FLD.ATRCLM;

  17813   2 000D77  D2C7 008D                            LLH,R5   KV@PTR+5,AUTO
          2 000D79  D7C6 0005                            STH,R5   5,B6

     1612    17814    5               Y@TMPWRD2 = Y@TMPWRD2 + Y@TMP$->KV$FLD.STRWRDSIZ;

  17814   2 000D7B  E846 0001                            LDR,R6   1,B6
          2 000D7D  6008                                 SOL,R6   8
          2 000D7E  6068                                 SAR,R6   8
          2 000D7F  EA47 0041                            ADD,R6   Y@TMPWRD2,AUTO
          2 000D81  EF47 0041                            STR,R6   Y@TMPWRD2,AUTO

     1613    17815    5               Y@TMP$ = PINCRW(KV$PTR.FLDLST$, Y@TMPWRD2);

  17815   2 000D83  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000D86  CCC5 0012                            LDB,B4   18,B5
          2 000D88  B856                                 LDR,R3   R6
          2 000D89  BBB4                                 LAB,B3   ,B4,R3
          2 000D8A  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     1614    17816    5            END;                           /* LOOP                               */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:252  

  17816   2 000D8C  B944 0001                            CMR,R3   1,B4
          2 000D8E  0AD8                                 BALE     s:17810,SPREL

     1615    17817    4            %KV_FLD = %Y@FLD;

  17817   2 000D8F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000D92  DCC6 0014                            LDB,B5   20,B6
          2 000D94  ABC7 0088                            LAB,B2   KV@PTR,AUTO
          2 000D96  2C00                                 LDV,R2   0
          2 000D97  6C0D                                 LDV,R6   13
          2 000D98  BB85                                 LAB,B3   ,B5
          2 000D99  3C00                                 LDV,R3   0
          2 000D9A  0008                                 MMM

     1616    17818    4            CALL Y$MOVDATTO_FLD;

  17818   2 000D9B  E3C0 0847                            LNJ,B6   s:0,PREL
          2 000D9D       0001                            DC       s:17818+3,PREL
          2 000D9E  0F81 052E                            B        s:18851,PREL

     1617    17819
     1618    17820        %KV$BOX (PAGE=YES, TITLE="Presentation message:  DCLSTR (new stream)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:253  
             17838    4   /***************************************************************************
             17839    4    *                                                                         *
             17840    4    *                 Presentation message:  DCLSTR (new stream)              *
             17841    4    *                                                                         *
             17842    4    ***************************************************************************/

     1619    17847    4         CASE %KV_VDO_FNC_DCLSTR;

     1620    17848        /*
     1621    17849           Create a new stream.
     1622    17850        */
     1623    17851    4            Y@TMPWRD1 = KV_VDO_DCLSTR.STRID;

  17851   2 000DA0  E2C4 0001                            LLH,R6   1,B4
          2 000DA2  EF47 0040                            STR,R6   Y@TMPWRD1,AUTO

     1624    17852
     1625    17853        /* First check to see if we already have one. */
     1626    17854
     1627    17855    4            Y@TMP$ = KV_SSN.STR$;

  17855   2 000DA4  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000DA7  ACC3 0004                            LDB,B2   4,B3
          2 000DA9  AFC7 0042                            STB,B2   Y@TMP$,AUTO

     1628    17856    5            DO WHILE Y@TMP$~=ADDR(NIL);

  17856   2 000DAB  0F81 007B                            B        s:17881,PREL

     1629    17857    6               IF Y@TMP$->KV$STR.ID=Y@TMPWRD1 THEN DO;

  17857   2 000DAD  ECC7 0042                            LDB,B6   Y@TMP$,AUTO
          2 000DAF  E2C6 001C                            LLH,R6   28,B6
          2 000DB1  E947 0040                            CMR,R6   Y@TMPWRD1,AUTO
          2 000DB3  0981 006F                            BNE      s:17880,PREL

     1630    17858    6                  IF KV$PTR.MVD$=Y@TMP$->KV$STR.MVD$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:254  

  17858   2 000DB5  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000DB8  CCC5 0006                            LDB,B4   6,B5
          2 000DBA  CDC6 0004                            CMB,B4   4,B6
          2 000DBC  0901 0510                            BE       s:18851,PREL
          2 000DBE  BC80 0000 0000  xsym                 LDB,B3   KV_RCVVDO$
          2 000DC1  82C3 0001                            LB,'0080'X        1,B3
          2 000DC3       0080
          2 000DC4  0581 0508                            BBF      s:18851,PREL

     1631    17859    6                    OR NOT KV_VDO_DCLSTR.RE_STR THEN EXIT Y$DO_CASE_FNC;
     1632    17860    6                  IF Y@TMP$->KV$STR.MVD$->KV$MVD.ORG~=%KV#VD_ORG_UR

  17860   2 000DC6  ACC6 0004                            LDB,B2   4,B6
          2 000DC8  D2C2 0015                            LLH,R5   21,B2
          2 000DCA  5D01                                 CMV,R5   1
          2 000DCB  0981 000D                            BNE      s:17862,PREL
          2 000DCD  C2C4 0015                            LLH,R4   21,B4
          2 000DCF  4D01                                 CMV,R4   1
          2 000DD0  0901 0011                            BE       s:17865,PREL
          2 000DD2  9CC5 0004                            LDB,B1   4,B5
          2 000DD4  82C1 001C                            LB,'0001'X        28,B1
          2 000DD6       0001
          2 000DD7  0581 000A                            BBF      s:17865,PREL

     1633    17861    7                    OR %KV_MVD.ORG~=%KV#VD_ORG_UR AND %KV_STR.OPN THEN DO;

     1634    17862    7                     CALL Y$SETERRCOD (%E$ORGNOTCOM);

  17862   2 000DD9  9BF0 030F                            LAB,B1   783,IMO
          2 000DDB  9FC7 0152                            STB,B1   KV@VDOVLP_MRK+9,AUTO
          2 000DDD  E3C0 061E                            LNJ,B6   s:0,PREL
          2 000DDF       0001                            DC       s:17863,PREL

     1635    17863    7                     EXIT Y$DO_CASE_FNC;

  17863   2 000DE0  0F81 04EC                            B        s:18851,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:255  

     1636    17864    7                  END;
     1637    17865    7                  IF %KV_MVD.USRCNT=1 THEN DO;

  17865   2 000DE2  B844 0012                            LDR,R3   18,B4
          2 000DE4  3D01                                 CMV,R3   1
          2 000DE5  0981 000F                            BNE      s:17869,PREL

     1638    17866    7                     CALL KVS$SETSTR;

  17866   2 000DE7  CBF0 0000                            LAB,B4   0,IMO
          2 000DE9  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 000DEC       0001                            DC       s:17867,PREL

     1639    17867    7                     CALL KVC$RLSMVD;

  17867   2 000DED  CBF0 0000                            LAB,B4   0,IMO
          2 000DEF  E380 0000 0000  xent                 LNJ,B6   KVC$RLSMVD
          2 000DF2       0001                            DC       s:17868,PREL

     1640    17868    7                  END;

  17868   2 000DF3  0F81 0003                            B        s:17870,PREL

     1641    17869    6                  ELSE %KV_MVD.USRCNT = %KV_MVD.USRCNT-1;

  17869   2 000DF5  88C4 0012                            DEC      18,B4

     1642    17870    6                  KV$PTR.MVD$ = Y@TMP$->KV$STR.MVD$;

  17870   2 000DF7  ECC7 0042                            LDB,B6   Y@TMP$,AUTO
          2 000DF9  DCC6 0004                            LDB,B5   4,B6
          2 000DFB  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 000DFE  DFC4 0006                            STB,B5   6,B4

     1643    17871    6                  %KV_STR.MVD$ = Y@TMP$->KV$STR.MVD$;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:256  
  17871   2 000E00  BCC4 0004                            LDB,B3   4,B4
          2 000E02  ACC6 0004                            LDB,B2   4,B6
          2 000E04  AFC3 0004                            STB,B2   4,B3

     1644    17872    6                  %KV_STR.ERR.COD = 0;

  17872   2 000E06  DCC4 0004                            LDB,B5   4,B4
          2 000E08  8745 0013                            CL       19,B5

     1645    17873    6                  %KV_MVD.USRCNT = %KV_MVD.USRCNT+1;

  17873   2 000E0A  DCC4 0006                            LDB,B5   6,B4
          2 000E0C  8AC5 0012                            INC      18,B5

     1646    17874    6                  KV$PTR.SRD$ = %KV_MVD.SRD$;

  17874   2 000E0E  DCC4 0006                            LDB,B5   6,B4
          2 000E10  BC85                                 LDB,B3   ,B5
          2 000E11  BFC4 000A                            STB,B3   10,B4

     1647    17875    6                  %KV_SRD.UNKRGN = '1'B;

  17875   2 000E13  8943 000F                            LBT,'0002'X       15,B3
  17875   2 000E15       0002

     1648    17876    6                  KV$PTR.MRD$ = %KV_SRD.MRD$;

  17876   2 000E16  DCC4 000A                            LDB,B5   10,B4
          2 000E18  BC85                                 LDB,B3   ,B5
          2 000E19  BFC4 0008                            STB,B3   8,B4

     1649    17877    6                  IF KV_RCVSSN.PRVSTR$=ADDR(NIL) THEN KV_RCVSSN.PRVSTR$ = Y@TMP$;

  17877   2 000E1B  8DC7 0012                            CMN      KV_RCVSSN+4,AUTO
          2 000E1D  0981 0003                            BNE      s:17878,PREL

  17877   2 000E1F  EFC7 0012                            STB,B6   KV_RCVSSN+4,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:257  

     1650    17878    6                  EXIT Y$DO_CASE_FNC;

  17878   2 000E21  0F81 04AB                            B        s:18851,PREL

     1651    17879    6               END;
     1652    17880    5               Y@TMP$ = Y@TMP$->KV$STR.LNK$;

  17880   2 000E23  DCC6 0002                            LDB,B5   2,B6
          2 000E25  DFC7 0042                            STB,B5   Y@TMP$,AUTO

     1653    17881    5            END;

  17881   2 000E27  8DC7 0042                            CMN      Y@TMP$,AUTO
          2 000E29  0981 FF83                            BNE      s:17857,PREL

     1654    17882    4            %KV_STR.ERR.COD = 0;

  17882   2 000E2B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000E2E  DCC6 0004                            LDB,B5   4,B6
          2 000E30  8745 0013                            CL       19,B5

     1655    17883    5            CALL KVC$DCLSTR (Y@TMPWRD1) WHENALTRETURN DO;

  17883   2 000E32  DBC7 0040                            LAB,B5   Y@TMPWRD1,AUTO
          2 000E34  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 000E36  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000E38  CBF0 0100                            LAB,B4   256,IMO
          2 000E3A  E380 0000 0000  xent                 LNJ,B6   KVC$DCLSTR
          2 000E3D       0003                            DC       s:17884,PREL
          2 000E3E  0F81 0001                            B        s:17884,PREL

     1656    17884    5            END;

  17884   2 000E40  0F81 048C                            B        s:18851,PREL

     1657    17885        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  DLT (delete)");
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:258  

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:259  
             17903    5   /***************************************************************************
             17904    5    *                                                                         *
             17905    5    *                    Presentation message:  DLT (delete)                  *
             17906    5    *                                                                         *
             17907    5    ***************************************************************************/

     1658    17912    4         CASE %KV_VDO_FNC_DLT;

     1659    17913    4            IF KV_VDO_DLT.CTLFLG.RSTBRKCNT THEN KV_SSN.BRKCNT = 0;

  17913   2 000E42  82C4 0001                            LB,'0400'X        1,B4
  17913   2 000E44       0400
          2 000E45  0581 0006                            BBF      s:17914,PREL

  17913   2 000E47  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000E4A  87C3 0025                            CLH      37,B3

     1660    17914    4            IF KV_VDO_DLT.CTLFLG.DLTINP

  17914   2 000E4C  82C4 0001                            LB,'0200'X        1,B4
  17914   2 000E4E       0200
          2 000E4F  0581 000A                            BBF      s:17916,PREL

     1661    17915    4            THEN CALL KVI$INTINPOPRX (%KV_INPOPRX_PRGINP);

  17915   2 000E51  BB80 0000 0015  03                   LAB,B3   +21
          2 000E54  CBF0 0100                            LAB,B4   256,IMO
          2 000E56  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          2 000E59       0001                            DC       s:17916,PREL

     1662    17916    4            IF KV_VDO_DLT.CTLFLG.DLTOTP

  17916   2 000E5A  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 000E5D  82C6 0001                            LB,'0100'X        1,B6
          2 000E5F       0100
          2 000E60  0581 000A                            BBF      s:17918,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:260  
     1663    17917    4            THEN CALL KVI$INTINPOPRX (%KV_INPOPRX_PRGOTP);

  17917   2 000E62  BB80 0000 0029  03                   LAB,B3   +41
          2 000E65  CBF0 0100                            LAB,B4   256,IMO
          2 000E67  E380 0000 0000  xent                 LNJ,B6   KVI$INTINPOPRX
          2 000E6A       0001                            DC       s:17918,PREL

     1664    17918    5            IF KV_VDO_DLT.CTLFLG.ABRRED THEN DO;

  17918   2 000E6B  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 000E6E  82C6 0001                            LB,'0800'X        1,B6
          2 000E70       0800
          2 000E71  0581 0028                            BBF      s:17929,PREL

     1665    17919    5               IF %KV_STR.SNDMAXNMBRCR=0 THEN EXIT;

  17919   2 000E73  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000E76  CCC5 0004                            LDB,B4   4,B5
          2 000E78  E844 0019                            LDR,R6   25,B4
          2 000E7A  6901 001F                            BEZ,R6   s:17929,PREL

     1666    17920    5               KV_SSN.REDRQSPND = '1'B;    /* Make like it started, even if not.*/

  17920   2 000E7C  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000E7F  8943 0028                            LBT,'0002'X       40,B3
          2 000E81       0002

  17920   2                              Y$CANCEL_READ   null
     1667    17921    5   Y$CANCEL_READ:;
     1668    17922    5               KV@VDH_DAT = KV_VDH_DAT_TIMOUT;

  17922   2 000E82  AB80 0000 0000  xsym Y$CANCEL_READ   LAB,B2   KV_VDH_DAT_TIMOUT
          2 000E85  2C00                                 LDV,R2   0
          2 000E86  6C10                                 LDV,R6   16
          2 000E87  BBC7 0137                            LAB,B3   KV@VDH_DAT,AUTO
          2 000E89  3C00                                 LDV,R3   0
          2 000E8A  0008                                 MMM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:261  

     1669    17923    5               KV@VDH_DAT.CMPCOD = %KV_CMPCOD_DLT;

  17923   2 000E8B  6C0C                                 LDV,R6   12
          2 000E8C  E7C7 013E                            STH,R6   KV@VDH_DAT+7,AUTO

     1670    17924        /*E* ERROR:KV-E$OPER-C
     1671    17925             MESSAGE:Nowait read aborted by M$TRMPRG.
     1672    17926        */
     1673    17927    5               CALL KVI$ACTRED (KV@VDH_DAT);

  17927   2 000E8E  EBC7 0137                            LAB,B6   KV@VDH_DAT,AUTO
          2 000E90  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 000E92  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 000E94  CBF0 0100                            LAB,B4   256,IMO
          2 000E96  E380 0000 0000  xent                 LNJ,B6   KVI$ACTRED
          2 000E99       0001                            DC       s:17929,PREL

     1674    17928    5            END;

     1675    17929    5            IF KV_VDO_DLT.CTLFLG.CRSHER THEN DO;

  17929   2 000E9A  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 000E9D  82C6 0001                            LB,'1000'X        1,B6
          2 000E9F       1000
          2 000EA0  0581 042C                            BBF      s:18851,PREL

     1676    17930    5               KV_RCVVDO.PRVSTR$ = ADDR(NIL);

  17930   2 000EA2  DB80 0000 0000                       LAB,B5   0
          2 000EA5  DFC7 0034                            STB,B5   KV_RCVVDO+32,AUTO

     1677    17931    5               KV_RCVSSN.PRVSTR$ = KV_RCVVDO.PRVSTR$;

  17931   2 000EA7  DFC7 0012                            STB,B5   KV_RCVSSN+4,AUTO

     1678    17932    5               IF KV_RCVSSN.PRVPTR$~=ADDR(NIL) THEN GOTO CHN_SSN;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:262  

  17932   2 000EA9  8DC7 0010                            CMN      KV_RCVSSN+2,AUTO
          2 000EAB  0981 023D                            BNE      s:18436,PREL

     1679    17933    5            END;

  17933   2 000EAD  0F81 041F                            B        s:18851,PREL

     1680    17934        %KV$BOX (PAGE=YES, TITLE="Presentation message:  DSC_RQS (disconnect request)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:263  
             17952    5   /***************************************************************************
             17953    5    *                                                                         *
             17954    5    *            Presentation message:  DSC_RQS (disconnect request)          *
             17955    5    *                                                                         *
             17956    5    ***************************************************************************/

     1681    17961    4         CASE %KV_VDO_FNC_DSC_RQS;

     1682    17962        /*
     1683    17963        Request for disconnect.
     1684    17964        */
     1685    17965    4            %KV_VDI.INTPHSDSC = KV_VDO_DSC.INTPHSDSC;

  17965   2 000EAF  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000EB2  AC83                                 LDB,B2   ,B3
          2 000EB3  E844 0001                            LDR,R6   1,B4
          2 000EB5  6044                                 SOR,R6   4
          2 000EB6  EAC2 001D                            SRM,R6,'0800'X    29,B2
          2 000EB8       0800

     1686    17966    4            CALL KVC$DSC (KV_VDH_DSC);

  17966   2 000EB9  BB80 0000 0006  03                   LAB,B3   +6
          2 000EBC  CBF0 0100                            LAB,B4   256,IMO
          2 000EBE  E380 0000 0000  xent                 LNJ,B6   KVC$DSC
          2 000EC1       0001                            DC       s:17966+9,PREL
          2 000EC2  0F81 040A                            B        s:18851,PREL

     1687    17967        %KV$BOX (PAGE=YES, TITLE="Presentation message:  DSC_RSP (disconnect response)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:264  
             17985    4   /***************************************************************************
             17986    4    *                                                                         *
             17987    4    *            Presentation message:  DSC_RSP (disconnect response)         *
             17988    4    *                                                                         *
             17989    4    ***************************************************************************/

     1688    17994    4         CASE %KV_VDO_FNC_DSC_RSP;

     1689    17995        /*
     1690    17996        Response for disconnect.
     1691    17997        */
     1692    17998    4            KV_SSN.DSCRSPRCV = '1'B;

  17998   2 000EC4  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000EC7  8943 0028                            LBT,'0080'X       40,B3
          2 000EC9       0080
          2 000ECA  0F81 0402                            B        s:18851,PREL

     1693    17999        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  ERS (erase)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:265  
             18017    4   /***************************************************************************
             18018    4    *                                                                         *
             18019    4    *                     Presentation message:  ERS (erase)                  *
             18020    4    *                                                                         *
             18021    4    ***************************************************************************/

     1694    18026    4         CASE %KV_VDO_FNC_ERS;

     1695    18027    4            IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN CALL Y$FRMVDO;

  18027   2 000ECC  BCC5 0006                            LDB,B3   6,B5
          2 000ECE  E2C3 0015                            LLH,R6   21,B3
          2 000ED0  6D04                                 CMV,R6   4
          2 000ED1  0981 0006                            BNE      s:18028,PREL

  18027   2 000ED3  E3C0 082F                            LNJ,B6   s:0,PREL
          2 000ED5       0001                            DC       s:18027+10,PREL
          2 000ED6  0F81 03F6                            B        s:18851,PREL

     1696    18028    4            ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN CALL KVE$DLTALLRCR;

  18028   2 000ED8  6D05                                 CMV,R6   5
          2 000ED9  0981 03F3                            BNE      s:18851,PREL

  18028   2 000EDB  CBF0 0000                            LAB,B4   0,IMO
          2 000EDD  E380 0000 0000  xent                 LNJ,B6   KVE$DLTALLRCR
          2 000EE0       0001                            DC       s:18028+9,PREL
          2 000EE1  0F81 03EB                            B        s:18851,PREL

     1697    18029        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  HVPS (H/V position)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:266  
             18047    4   /***************************************************************************
             18048    4    *                                                                         *
             18049    4    *                 Presentation message:  HVPS (H/V position)              *
             18050    4    *                                                                         *
             18051    4    ***************************************************************************/

     1698    18056    4         CASE %KV_VDO_FNC_HVPS;

     1699    18057        /*N* THIS IS JUST A TEMPORARY HOME FOR THIS CODE.  FIGURE OUT WHAT IT SHOULD DO */
     1700    18058        /*N* MAYBE TRIGGERED OFF OF VDOVLP_KEY/FLDID? */
     1701    18059
     1702    18060
     1703    18061        /* Setup KV$PTR for a call to KVF$FNDFLD to see if this field exists
     1704    18062           and whether or not the coordinates we are going to are legal for
     1705    18063           this VD                                                                    */
     1706    18064
     1707    18065    4            KV$PTR.VRTLIN = KV_VDO_HVPS.LIN;

  18065   2 000EE3  E2C4 0001                            LLH,R6   1,B4
          2 000EE5  EF45 0019                            STR,R6   25,B5

     1708    18066
     1709    18067    4            KV$PTR.VRTCLM = KV_VDO_HVPS.CLM;

  18067   2 000EE7  D844 0001                            LDR,R5   1,B4
          2 000EE9  D570 00FF                            AND,R5   255,IMO
          2 000EEB  DF45 001A                            STR,R5   26,B5

     1710    18068    5            CALL Y$SLCFLD_HVPS WHENRETURN DO;

  18068   2 000EED  E3C0 077F                            LNJ,B6   s:0,PREL
          2 000EEF       0009                            DC       s:18073,PREL

     1711    18069
     1712    18070        /* Note that the last function was of the 'select type'                       */
     1713    18071
     1714    18072    5               %KV_LINLST.LSTOPRSLC = '1'B;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:267  

  18072   2 000EF0  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000EF3  DCC6 000E                            LDB,B5   14,B6
          2 000EF5  8945 0005                            LBT,'0080'X       5,B5
          2 000EF7       0080

     1715    18073    5            END;

  18073   2 000EF8  0F81 03D4                            B        s:18851,PREL

     1716    18074        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  MRK (marker)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:268  
             18092    5   /***************************************************************************
             18093    5    *                                                                         *
             18094    5    *                    Presentation message:  MRK (marker)                  *
             18095    5    *                                                                         *
             18096    5    ***************************************************************************/

     1717    18101    4         CASE %KV_VDO_FNC_MRK;

     1718    18102        /*
     1719    18103        We don't do anything here; the common code for handling the receipt
     1720    18104        of markers at the bottom of this case statement will do the work.
     1721    18105        */
     1722    18106        %KV$BOX(PAGE = YES, TITLE =
             18106            "Presentation message:  OPNSSN_RQS (open-session request)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:269  
             18124    4   /***************************************************************************
             18125    4    *                                                                         *
             18126    4    *          Presentation message:  OPNSSN_RQS (open-session request)       *
             18127    4    *                                                                         *
             18128    4    ***************************************************************************/

     1723    18133    4         CASE %KV_VDO_FNC_OPNSSN_RQS;

     1724    18134        /*
     1725    18135        TEMP CODE FOR OPEN REQUEST
     1726    18136        */
     1727    18137                 %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_OPN);
             18149        /* !C! */
             18150    5           IF KV_SSN.VDI$->KV$VDI.USREVTENB (10) THEN DO;

  18150   2 000EFA  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000EFD  AC83                                 LDB,B2   ,B3
          2 000EFE  82C2 001F                            LB,'2000'X        31,B2
          2 000F00       2000
          2 000F01  0581 000A                            BBF      s:18164,PREL

             18157    5              CALL KVV$CALUSR_EVT (10);

  18157   2 000F03  BB80 0000 002C  03                   LAB,B3   +44
          2 000F06  CBF0 0100                            LAB,B4   256,IMO
          2 000F08  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 000F0B       0001                            DC       s:18164,PREL

             18160    5              END;

             18162        /* ! ! */
     1728    18164    4            KV_SSN.LSTOTPRCRID = '0'B;

  18164   2 000F0C  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 000F0F  8746 001C                            CL       28,B6
          2 000F11  8746 001D                            CL       29,B6

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:270  
     1729    18165    4            KV_SSN.OTPBLK = '1'B;          /* Force a "set" operation            */

  18165   2 000F13  8946 0028                            LBT,'4000'X       40,B6
  18165   2 000F15       4000

     1730    18166    4            KV_SSN.OPN = '1'B;

  18166   2 000F16  8946 0028                            LBT,'0040'X       40,B6
  18166   2 000F18       0040

     1731    18167    4            CALL KVM$SND (KV_SND_RQSDAT_GNR);

  18167   2 000F19  BB80 0000 000E  03                   LAB,B3   +14
          2 000F1C  CBF0 0100                            LAB,B4   256,IMO
          2 000F1E  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 000F21       0001                            DC       s:18167+9,PREL
          2 000F22  0F81 03AA                            B        s:18851,PREL

     1732    18168        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  OPNSTR (open stream)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:271  
             18186    4   /***************************************************************************
             18187    4    *                                                                         *
             18188    4    *                Presentation message:  OPNSTR (open stream)              *
             18189    4    *                                                                         *
             18190    4    ***************************************************************************/

     1733    18195    4         CASE %KV_VDO_FNC_OPNSTR;

     1734    18196        /*
     1735    18197           Open a stream.  The parameters contain (at least) ORG.
     1736    18198        */
     1737    18199        /*N*  IF %KV_STR.OPN THEN CALL SCREECH; */
     1738    18200    5            DO CASE KV_VDO_OPNSTR.ORG;

  18200   2 000F24  92C4 0001                            LLH,R1   1,B4
          2 000F26  1D06                                 CMV,R1   6
          2 000F27  0281 0026                            BGE      s:18210,PREL
          2 000F29  B810 0000 0F2F  02                   LDR,R3   s:18200+11,R1
          2 000F2C  83B0 0000 0F35  02                   JMP      s:18205,R3
          2 000F2F       0019                            DC       s:18210,PREL
          2 000F30       0019                            DC       s:18210,PREL
          2 000F31       0000                            DC       s:18205,PREL
          2 000F32       0019                            DC       s:18210,PREL
          2 000F33       0000                            DC       s:18205,PREL
          2 000F34       0000                            DC       s:18205,PREL

     1739    18201    5            CASE %KV#VD_ORG_FORM, %KV#VD_ORG_SE, %KV#VD_ORG_X364;

     1740    18202        /*
     1741    18203           For FORMS-type opens, we want to position there and stay.
     1742    18204        */
     1743    18205    5               %KV_STR.RE_REDCLM = 1;

  18205   2 000F35  BCC5 0004                            LDB,B3   4,B5
          2 000F37  6C01                                 LDV,R6   1
          2 000F38  EF43 0012                            STR,R6   18,B3

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:272  
     1744    18206    5               KV_RCVVDO.VDP_VDO.RSTSTR = '0'B;

  18206   2 000F3A  8847 0031                            LBF,'0040'X       KV_RCVVDO+29,AUTO
  18206   2 000F3C       0040

     1745    18207    5               CALL KVS$SETSTR;

  18207   2 000F3D  CBF0 0000                            LAB,B4   0,IMO
          2 000F3F  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 000F42       0001                            DC       s:18208,PREL

     1746    18208    5               CALL KVC$OPNFRM (KV_VDO);

  18208   2 000F43  BB80 0000 0000  xsym                 LAB,B3   KV_RCVVDO$
          2 000F46  CBF0 0100                            LAB,B4   256,IMO
          2 000F48  E380 0000 0000  xent                 LNJ,B6   KVC$OPNFRM
          2 000F4B       0001                            DC       s:18208+9,PREL
          2 000F4C  0F81 0018                            B        s:18214,PREL

     1747    18209    5            CASE ELSE;

     1748    18210    5               IF %KV_MVD.ORG=%KV#VD_ORG_X364 THEN EXIT Y$DO_CASE_FNC;

  18210   2 000F4E  BCC5 0006                            LDB,B3   6,B5
          2 000F50  E2C3 0015                            LLH,R6   21,B3
          2 000F52  6D02                                 CMV,R6   2
          2 000F53  0901 0379                            BE       s:18851,PREL

     1749    18211    5               IF %KV_MVD.ORG>%KV#VD_ORG_X364 THEN CALL KVC$RLSFRM;

  18211   2 000F55  0381 0007                            BLE      s:18212,PREL

  18211   2 000F57  CBF0 0000                            LAB,B4   0,IMO
          2 000F59  E380 0000 0000  xent                 LNJ,B6   KVC$RLSFRM
          2 000F5C       0001                            DC       s:18212,PREL

     1750    18212    5               %KV_MVD.ORG = %KV#VD_ORG_UR;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:273  

  18212   2 000F5D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000F60  DCC6 0006                            LDB,B5   6,B6
          2 000F62  6C01                                 LDV,R6   1
          2 000F63  E7C5 0015                            STH,R6   21,B5

     1751    18213    5            END;

     1752    18214    4            %KV_STR.OPN = '1'B;

  18214   2 000F65  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000F68  DCC6 0004                            LDB,B5   4,B6
          2 000F6A  8945 001C                            LBT,'0001'X       28,B5
          2 000F6C       0001
          2 000F6D  0F81 035F                            B        s:18851,PREL

     1753    18215        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  PRM_SET (parameter-set)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:274  
             18233    4   /***************************************************************************
             18234    4    *                                                                         *
             18235    4    *               Presentation message:  PRM_SET (parameter-set)            *
             18236    4    *                                                                         *
             18237    4    ***************************************************************************/

     1754    18242    4         CASE %KV_VDO_FNC_PRM_SET;

     1755    18243        /*
     1756    18244        Parameter-set VDO.  The other end wants us to set parameters
     1757    18245        in our context.
     1758    18246        */
     1759    18247    4            IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ<2 THEN EXIT;

  18247   2 000F6F  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
          2 000F71  6D02                                 CMV,R6   2
          2 000F72  0201 035A                            BL       s:18851,PREL

     1760    18248    4            Y_VDH_SETPRM.PRMID = %KV_PRMID_TYPLNG;

  18248   2 000F74  5C3F                                 LDV,R5   63
          2 000F75  DF00 0000 0022  00                   STR,R5   Y_VDH_SETPRM+1

     1761    18249    4            Y_VDH_SETPRM.VAL_.ADR$ = KV_RCVVDO.OTPLCL.BFR_.ADR$;

  18249   2 000F78  BCC7 002D                            LDB,B3   KV_RCVVDO+25,AUTO
          2 000F7A  BF80 0000 0024  00                   STB,B3   Y_VDH_SETPRM+3

     1762    18250    4            Y_VDH_SETPRM.VAL_.BYTSIZ = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;

  18250   2 000F7D  EF00 0000 0027  00                   STR,R6   Y_VDH_SETPRM+6

     1763    18251    4            Y_VDH_SETPRM.VAL_.BYTX = 0;

  18251   2 000F80  8700 0000 0026  00                   CL       Y_VDH_SETPRM+5

     1764    18252    4            IF KV_VDO.STR~=0 THEN Y_VDH_SETPRM.SCP = %KV_SCP_STR;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:275  

  18252   2 000F83  8284                                 LB,'007F'X        ,B4
  18252   2 000F84       007F
          2 000F85  0581 0007                            BBF      s:18253,PREL

  18252   2 000F87  4C03                                 LDV,R4   3
          2 000F88  C780 0000 0028  00                   STH,R4   Y_VDH_SETPRM+7
          2 000F8B  0F81 0005                            B        s:18254,PREL

     1765    18253    4            ELSE Y_VDH_SETPRM.SCP = %KV_SCP_SSN;

  18253   2 000F8D  4C02                                 LDV,R4   2
          2 000F8E  C780 0000 0028  00                   STH,R4   Y_VDH_SETPRM+7

     1766    18254    4            CALL KVP$SETPRM(Y_VDH_SETPRM);

  18254   2 000F91  BB80 0000 001A  03                   LAB,B3   +26
          2 000F94  CBF0 0100                            LAB,B4   256,IMO
          2 000F96  E380 0000 0000  xent                 LNJ,B6   KVP$SETPRM
          2 000F99       0001                            DC       s:18254+9,PREL
          2 000F9A  0F81 0332                            B        s:18851,PREL

     1767    18255        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RLSFLD (release field)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:276  
             18273    4   /***************************************************************************
             18274    4    *                                                                         *
             18275    4    *               Presentation message:  RLSFLD (release field)             *
             18276    4    *                                                                         *
             18277    4    ***************************************************************************/

     1768    18282    4         CASE %KV_VDO_FNC_RLSFLD;

     1769    18283    4            CALL Y$FRMVDO;

  18283   2 000F9C  E3C0 0766                            LNJ,B6   s:0,PREL
          2 000F9E       0001                            DC       s:18283+3,PREL
          2 000F9F  0F81 032D                            B        s:18851,PREL

     1770    18284        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RQSDAT (request data)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:277  
             18302    4   /***************************************************************************
             18303    4    *                                                                         *
             18304    4    *                Presentation message:  RQSDAT (request data)             *
             18305    4    *                                                                         *
             18306    4    ***************************************************************************/

     1771    18311    4         CASE %KV_VDO_FNC_RQSDAT;

     1772    18312        /*
     1773    18313        Request data VDO.  The other is requesting us to send data,
     1774    18314        allowing us to send data, or cancelling a previous request for data.
     1775    18315        */
     1776    18316    4            IF KV_VDO_RQSDAT.INCMAXNMBBYT THEN

  18316   2 000FA1  82C4 0004                            LB,'4000'X        4,B4
  18316   2 000FA3       4000
          2 000FA4  0581 000C                            BBF      s:18325,PREL

     1777    18317        /*
     1778    18318        The maximum number of bytes we can send is (may be) being incremented.
     1779    18319        */
     1780    18320    4            Y@SNDMAXNMBBYT = KV_SSN.SNDMAXNMBBYT + KV_VDO_RQSDAT.MAXNMBBYT;

  18320   2 000FA6  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 000FA9  E843 0014                            LDR,R6   20,B3
          2 000FAB  EA44 0003                            ADD,R6   3,B4
          2 000FAD  EF47 003E                            STR,R6   Y@SNDMAXNMBBYT,AUTO
          2 000FAF  0F81 0005                            B        s:18327,PREL

     1781    18321    4            ELSE
     1782    18322        /*
     1783    18323        The maximum number of bytes we can send is being set.
     1784    18324        */
     1785    18325    4            Y@SNDMAXNMBBYT = KV_VDO_RQSDAT.MAXNMBBYT;

  18325   2 000FB1  E844 0003                            LDR,R6   3,B4
          2 000FB3  EF47 003E                            STR,R6   Y@SNDMAXNMBBYT,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:278  

     1786    18326
     1787    18327    4            IF KV_VDO_RQSDAT.INCMAXNMBRCR THEN

  18327   2 000FB5  89C4 0004                            CMZ      4,B4
          2 000FB7  0881 000B                            BAGE     s:18336,PREL

     1788    18328        /*
     1789    18329        The maximum number of records we can send is (may be) being incremented.
     1790    18330        */
     1791    18331    4            Y@SNDMAXNMBRCR = %KV_STR.SNDMAXNMBRCR + KV_VDO_RQSDAT.MAXNMBRCR;

  18331   2 000FB9  BCC5 0004                            LDB,B3   4,B5
          2 000FBB  D843 0019                            LDR,R5   25,B3
          2 000FBD  DA44 0002                            ADD,R5   2,B4
          2 000FBF  DF47 003F                            STR,R5   Y@SNDMAXNMBRCR,AUTO
          2 000FC1  0F81 0005                            B        s:18338,PREL

     1792    18332    4            ELSE
     1793    18333        /*
     1794    18334        The maximum number of records we can send is being set.
     1795    18335        */
     1796    18336    4            Y@SNDMAXNMBRCR = KV_VDO_RQSDAT.MAXNMBRCR;

  18336   2 000FC3  D844 0002                            LDR,R5   2,B4
          2 000FC5  DF47 003F                            STR,R5   Y@SNDMAXNMBRCR,AUTO

     1797    18337
     1798    18338    4            IF (Y@SNDMAXNMBBYT = 0) OR

  18338   2 000FC7  6901 0003                            BEZ,R6   s:18344,PREL
          2 000FC9  5981 001E                            BNEZ,R5  s:18353,PREL

     1799    18339    5              (Y@SNDMAXNMBRCR = 0) THEN DO;

     1800    18340        /*
     1801    18341        Previous flow control information allowing us to send data
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:279  
     1802    18342        is being cancelled.
     1803    18343        */
     1804    18344    5               %KV_STR.SNDMAXNMBRCR = BITBIN(KV_SSN.REDRQSPND);

  18344   2 000FCB  BCC5 0004                            LDB,B3   4,B5
          2 000FCD  AC80 0000 0000  xsym                 LDB,B2   KV_RCVSSN$
          2 000FD0  C842 0028                            LDR,R4   40,B2
          2 000FD2  4041                                 SOR,R4   1
          2 000FD3  C570 0001                            AND,R4   1,IMO
          2 000FD5  CF43 0019                            STR,R4   25,B3

     1805    18345    5               IF KV_SSN.REDRQSPND AND KV_SSN.REDBFR__.DATBYTSIZ>0

  18345   2 000FD7  82C2 0028                            LB,'0002'X        40,B2
  18345   2 000FD9       0002
          2 000FDA  0581 0005                            BBF      s:18347,PREL
          2 000FDC  C842 0033                            LDR,R4   51,B2
          2 000FDE  4981 FEA3                            BNEZ,R4  s:17920,PREL

     1806    18346    5               THEN GOTO Y$CANCEL_READ;    /* in VDO_DLT                         */
     1807    18347    5               CALL KVI$ABRRED;

  18347   2 000FE0  CBF0 0000                            LAB,B4   0,IMO
          2 000FE2  E380 0000 0000  xent                 LNJ,B6   KVI$ABRRED
          2 000FE5       0001                            DC       s:18348,PREL

     1808    18348    5               EXIT Y$DO_CASE_FNC;

  18348   2 000FE6  0F81 02E6                            B        s:18851,PREL

     1809    18349    5            END;
     1810    18350        /*
     1811    18351        This VDO is requesting data.
     1812    18352        */
     1813    18353    4            IF KV_SSN.CLSPND THEN EXIT Y$DO_CASE_FNC;

  18353   2 000FE8  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:280  
          2 000FEB  82C3 0027                            LB,'0008'X        39,B3
          2 000FED       0008
          2 000FEE  0501 02DE                            BBT      s:18851,PREL

     1814    18354        /*
     1815    18355        A close request is pending.  Simply ignore this request.
     1816    18356        */
     1817    18357
     1818    18358    4            IF KV_VDO_RQSDAT.WAT AND KV_SSN.WATINPDLTMRK

  18358   2 000FF0  82C4 0004                            LB,'0200'X        4,B4
  18358   2 000FF2       0200
          2 000FF3  0581 0006                            BBF      s:18366,PREL
          2 000FF5  82C3 0028                            LB,'1000'X        40,B3
          2 000FF7       1000
          2 000FF8  0501 02D4                            BBT      s:18851,PREL

     1819    18359        /*
     1820    18360        The other end is waiting for a response to this request,
     1821    18361        but we're waiting for an input-delete marker to
     1822    18362        come back, so it's already got one.  Ignore this request.
     1823    18363        */
     1824    18364    4            THEN EXIT Y$DO_CASE_FNC;
     1825    18365
     1826    18366    5            IF NOT %KV_MRD.INPUT THEN DO;

  18366   2 000FFA  ACC5 0008                            LDB,B2   8,B5
          2 000FFC  82C2 0016                            LB,'0010'X        22,B2
          2 000FFE       0010
          2 000FFF  0501 000F                            BBT      s:18374,PREL

     1827    18367        /*
     1828    18368        The current MRD isn't declared as being capable of input.
     1829    18369        */
     1830    18370    5               CALL KVI$ABRRED;

  18370   2 001001  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:281  
          2 001003  E380 0000 0000  xent                 LNJ,B6   KVI$ABRRED
          2 001006       0001                            DC       s:18371,PREL

     1831    18371    5               Y_VDOVLP_ERR.ERRCODE.ERR# = %E$READ;

  18371   2 001007  E870 01C0                            LDR,R6   448,IMO
          2 001009  EA80 0000 002B  00                   SRM,R6,'FFF8'X    Y_VDOVLP_ERR+2
          2 00100C       FFF8

     1832    18372    5               GOTO Y@SND_ERR;

  18372   2 00100D  0F81 0011                            B        s:18375,PREL

     1833    18373    5            END;
     1834    18374    5            IF %KV_SRD.LNG=0 OR %KV_SRD.WDT=0 THEN DO;

  18374   2 00100F  9CC5 000A                            LDB,B1   10,B5
          2 001011  C2C1 000E                            LLH,R4   14,B1
          2 001013  4901 0005                            BEZ,R4   s:18375,PREL
          2 001015  9841 000D                            LDR,R1   13,B1
          2 001017  1981 0019                            BNEZ,R1  s:18382,PREL

     1835    18375    5               Y_VDOVLP_ERR.ERRCODE.ERR# = %E$DATDLT_OPTWND;

  18375   2 001019  9870 2D40                            LDR,R1   11584,IMO
          2 00101B  9A80 0000 002B  00                   SRM,R1,'FFF8'X    Y_VDOVLP_ERR+2
          2 00101E       FFF8

  18375   2                              Y@SND_ERR       null
     1836    18376    5   Y@SND_ERR:  ;
     1837    18377    5               %KV_STR.SNDMAXNMBRCR = %KV_STR.SNDMAXNMBRCR+1;

  18377   2 00101F  EC80 0000 0000  xsym Y@SND_ERR       LDB,B6   KV$PTR$
          2 001022  DCC6 0004                            LDB,B5   4,B6
          2 001024  8AC5 0019                            INC      25,B5

     1838    18378    5               CALL KVM$SND(Y_SND_DAT);
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:282  

  18378   2 001026  BB80 0000 002E  03                   LAB,B3   +46
          2 001029  CBF0 0100                            LAB,B4   256,IMO
          2 00102B  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 00102E       0001                            DC       s:18379,PREL

     1839    18379    5               EXIT Y$DO_CASE_FNC;

  18379   2 00102F  0F81 029D                            B        s:18851,PREL

     1840    18380    5            END;                           /* END IF NOT INPUT                   */
     1841    18381
     1842    18382    5            IF KV_VDO_RQSDAT.MAXRCRBYTSIZ = 0 THEN DO;

  18382   2 001031  E844 0001                            LDR,R6   1,B4
          2 001033  6981 0003                            BNEZ,R6  s:18392,PREL

     1843    18383        /*
     1844    18384        The maximum record size specified by the other end is 0.
     1845    18385        Error.
     1846    18386        */
     1847    18387        /*N* DO ERROR LOG */
     1848    18388        /*N* SEND SOME SORT OF ERROR INDICATION (CLOSE OR DISCONNECT?) */
     1849    18389    5               EXIT Y$DO_CASE_FNC;

  18389   2 001035  0F81 0297                            B        s:18851,PREL

     1850    18390    5            END;                           /* END IF MAXRCRBYTSIZ = 0            */
     1851    18391
     1852    18392    4            %KV_STR.WATRED = KV_VDO_RQSDAT.WAT;

  18392   2 001037  ECC5 0004                            LDB,B6   4,B5
          2 001039  E844 0004                            LDR,R6   4,B4
          2 00103B  6047                                 SOR,R6   7
          2 00103C  EAC6 001C                            SRM,R6,'0004'X    28,B6
          2 00103E       0004

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:283  
     1853    18393    4            KV_SSN.BP = KV_VDO_RQSDAT.BP;

  18393   2 00103F  E844 0004                            LDR,R6   4,B4
          2 001041  6044                                 SOR,R6   4
          2 001042  EAC3 0037                            SRM,R6,'0010'X    55,B3
          2 001044       0010

     1854    18394    4            KV_SSN.REDMLT = KV_VDO_RQSDAT.READMLT;

  18394   2 001045  E844 0004                            LDR,R6   4,B4
          2 001047  6044                                 SOR,R6   4
          2 001048  EAC3 0037                            SRM,R6,'0008'X    55,B3
          2 00104A       0008

     1855    18395    4            KV_SSN.SNDMAXNMBBYT = Y@SNDMAXNMBBYT;

  18395   2 00104B  E847 003E                            LDR,R6   Y@SNDMAXNMBBYT,AUTO
          2 00104D  EF43 0014                            STR,R6   20,B3

     1856    18396    4            %KV_STR.SNDMAXNMBRCR = Y@SNDMAXNMBRCR;

  18396   2 00104F  ECC5 0004                            LDB,B6   4,B5
          2 001051  DF46 0019                            STR,R5   25,B6

     1857    18397    4            KV@USR_RQSDAT = KV_USR_RQSDAT;

  18397   2 001053  AB80 0000 0000  xsym                 LAB,B2   KV_USR_RQSDAT
          2 001056  2C00                                 LDV,R2   0
          2 001057  6C0C                                 LDV,R6   12
          2 001058  BBC7 0118                            LAB,B3   KV@USR_RQSDAT,AUTO
          2 00105A  3C00                                 LDV,R3   0
          2 00105B  0008                                 MMM

     1858    18398    4            KV@USR_RQSDAT.MAXRCRBYTSIZ = KV_VDO_RQSDAT.MAXRCRBYTSIZ;

  18398   2 00105C  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 00105F  E846 0001                            LDR,R6   1,B6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:284  
          2 001061  EF47 011D                            STR,R6   KV@USR_RQSDAT+5,AUTO

     1859    18399    4            KV@USR_RQSDAT.DATMOD = KV_VDO_RQSDAT.DATMOD;

  18399   2 001063  D846 0004                            LDR,R5   4,B6
          2 001065  5046                                 SOR,R5   6
          2 001066  DAC7 0118                            SRM,R5,'0060'X    KV@USR_RQSDAT,AUTO
          2 001068       0060

     1860    18400    4            KV@USR_RQSDAT.RE_RED = KV_VDO_RQSDAT.RE_RED;

  18400   2 001069  D846 0004                            LDR,R5   4,B6
          2 00106B  5046                                 SOR,R5   6
          2 00106C  DAC7 0118                            SRM,R5,'0080'X    KV@USR_RQSDAT,AUTO
          2 00106E       0080

     1861    18401    4            KV@USR_RQSDAT.EOFNO_DAT = KV_VDO_RQSDAT.EOFNO_DAT;

  18401   2 00106F  D846 0004                            LDR,R5   4,B6
          2 001071  5046                                 SOR,R5   6
          2 001072  DAC7 0118                            SRM,R5,'0010'X    KV@USR_RQSDAT,AUTO
          2 001074       0010

     1862    18402
     1863    18403    5            IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN DO;

  18403   2 001075  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 001078  CCC5 0006                            LDB,B4   6,B5
          2 00107A  D2C4 0015                            LLH,R5   21,B4
          2 00107C  5D04                                 CMV,R5   4
          2 00107D  0981 001C                            BNE      s:18416+2,PREL

     1864    18404        /*
     1865    18405        This is a request of data from a FORM virtual device.
     1866    18406        */
     1867    18407    5               IF KV_RCVVDO.VDOVLP_FLDID$=ADDR(NIL)

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:285  
  18407   2 00107F  8DC7 0026                            CMN      KV_RCVVDO+18,AUTO
          2 001081  0981 000A                            BNE      s:18414,PREL
          2 001083  8DC7 0028                            CMN      KV_RCVVDO+20,AUTO
          2 001085  0981 0006                            BNE      s:18414,PREL

     1868    18408    5                 AND KV_RCVVDO.VDOVLP_KEY$=ADDR(NIL)
     1869    18409        /*
     1870    18410           If the actual M$READ specified a key (too) then start reading
     1871    18411           at that field.
     1872    18412        */
     1873    18413    5               THEN KV$PTR.FLD$ = ADDR(NIL);

  18413   2 001087  BB80 0000 0000                       LAB,B3   0
          2 00108A  BFC5 0014                            STB,B3   20,B5

     1874    18414    5               CALL KVF$RQSDAT(KV@USR_RQSDAT);

  18414   2 00108C  BBC7 0118                            LAB,B3   KV@USR_RQSDAT,AUTO
          2 00108E  BFC7 0154                            STB,B3   @ERRCOD+2,AUTO
          2 001090  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001092  CBF0 0100                            LAB,B4   256,IMO
          2 001094  E380 0000 0000  xent                 LNJ,B6   KVF$RQSDAT
          2 001097       0001                            DC       s:18416,PREL

     1875    18415
     1876    18416    4            END; ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE

  18416   2 001098  0F81 001E                            B        s:18429,PREL

  18416   2 00109A  5D05                                 CMV,R5   5
          2 00109B  0981 000F                            BNE      s:18424,PREL

     1877    18417        /*
     1878    18418           Screen editor also needs special treatment.
     1879    18419        */
     1880    18420    4            THEN CALL KVE$RQSDAT (KV@USR_RQSDAT);

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:286  
  18420   2 00109D  BBC7 0118                            LAB,B3   KV@USR_RQSDAT,AUTO
          2 00109F  BFC7 0154                            STB,B3   @ERRCOD+2,AUTO
          2 0010A1  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0010A3  CBF0 0100                            LAB,B4   256,IMO
          2 0010A5  E380 0000 0000  xent                 LNJ,B6   KVE$RQSDAT
          2 0010A8       0001                            DC       s:18420+12,PREL
          2 0010A9  0F81 000D                            B        s:18429,PREL

     1881    18421        /*
     1882    18422        This is a request of data from a TERMINAL or UR virtual device.
     1883    18423        */
     1884    18424    4            ELSE CALL KVI$RQSDAT(KV@USR_RQSDAT);

  18424   2 0010AB  BBC7 0118                            LAB,B3   KV@USR_RQSDAT,AUTO
          2 0010AD  BFC7 0154                            STB,B3   @ERRCOD+2,AUTO
          2 0010AF  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0010B1  CBF0 0100                            LAB,B4   256,IMO
          2 0010B3  E380 0000 0000  xent                 LNJ,B6   KVI$RQSDAT
          2 0010B6       0001                            DC       s:18429,PREL

     1885    18425
     1886    18426        /* Leave the cursor here if this read is still active and the selected
     1887    18427           session's isn't. */
     1888    18428
     1889    18429    4            IF %KV_VDI.AUTCRS AND %KV_STR.SNDMAXNMBRCR>0

  18429   2 0010B7  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0010BA  DC86                                 LDB,B5   ,B6
          2 0010BB  82C5 0019                            LB,'0001'X        25,B5
          2 0010BD       0001
          2 0010BE  0581 020E                            BBF      s:18851,PREL
          2 0010C0  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0010C3  BCC4 0004                            LDB,B3   4,B4
          2 0010C5  E843 0019                            LDR,R6   25,B3
          2 0010C7  6A81 0205                            BLEZ,R6  s:18851,PREL
          2 0010C9  8DC7 0010                            CMN      KV_RCVSSN+2,AUTO
          2 0010CB  0901 0201                            BE       s:18851,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:287  

     1890    18430    4              AND KV_RCVSSN.PRVPTR$~=ADDR(NIL)
     1891    18431    4            THEN IF NOT KV_RCVSSN.PRVPTR$->KV$PTR.SSN$->KV$SSN.REDRQSPND

  18431   2 0010CD  ACC7 0010                            LDB,B2   KV_RCVSSN+2,AUTO
          2 0010CF  9CC2 0002                            LDB,B1   2,B2
          2 0010D1  82C1 0028                            LB,'0002'X        40,B1
          2 0010D3       0002
          2 0010D4  0581 0014                            BBF      s:18436,PREL
          2 0010D6  ECC4 000A                            LDB,B6   10,B4
          2 0010D8  EDC2 000A                            CMB,B6   10,B2
          2 0010DA  0981 01F2                            BNE      s:18851,PREL
          2 0010DC  89C4 001B                            CMZ      27,B4
          2 0010DE  0801 01EE                            BAL      s:18851,PREL
          2 0010E0  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 0010E3  D841 0033                            LDR,R5   51,B1
          2 0010E5  D945 0033                            CMR,R5   51,B5
          2 0010E7  0301 01E5                            BG       s:18851,PREL

     1892    18432    4              OR KV$PTR.SRD$=KV_RCVSSN.PRVPTR$->KV$PTR.SRD$
     1893    18433    4              AND NOT KV$PTR.INPCNDPND.TRN
     1894    18434    4              AND KV_RCVSSN.PRVPTR$->KV$PTR.SSN$->KV$SSN.REDBFR__.DATBYTSIZ
     1895    18435    4              <=KV_SSN.REDBFR__.DATBYTSIZ
     1896    18436    5            THEN DO;

  18432   2                              CHN_SSN         null
     1897    18437    5   CHN_SSN:    ;
     1898    18438    6               IF %KV_VDI.KEPTYP THEN DO;

  18438   2 0010E9  EC80 0000 0000  xsym CHN_SSN         LDB,B6   KV_RCVSSN$
          2 0010EC  DC86                                 LDB,B5   ,B6
          2 0010ED  82C5 0018                            LB,'0040'X        24,B5
          2 0010EF       0040
          2 0010F0  0581 0052                            BBF      s:18460,PREL

     1899    18439        /* Move the typeahead here, and all that that entails. */
     1900    18440    6                  Y@TMP$ = KV_RCVSSN.PRVPTR$->KV$PTR.SSN$;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:288  

  18440   2 0010F2  CCC7 0010                            LDB,B4   KV_RCVSSN+2,AUTO
          2 0010F4  BCC4 0002                            LDB,B3   2,B4
          2 0010F6  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     1901    18441    6                  KV_SSN.TYPAHDBFRCNT = Y@TMP$->KV$SSN.TYPAHDBFRCNT;

  18441   2 0010F8  E2C3 0027                            LLH,R6   39,B3
          2 0010FA  E7C6 0027                            STH,R6   39,B6

     1902    18442    6                  KV_SSN.TYPAHDBFRINPFNC$ = Y@TMP$->KV$SSN.TYPAHDBFRINPFNC$;

  18442   2 0010FC  ACC3 000C                            LDB,B2   12,B3
          2 0010FE  AFC6 000C                            STB,B2   12,B6

     1903    18443    6                  KV_SSN.TYPAHDBFRINS$ = Y@TMP$->KV$SSN.TYPAHDBFRINS$;

  18443   2 001100  CCC3 000E                            LDB,B4   14,B3
          2 001102  CFC6 000E                            STB,B4   14,B6

     1904    18444    6                  KV_SSN.TYPAHDBFRINPFNCX = Y@TMP$->KV$SSN.TYPAHDBFRINPFNCX;

  18444   2 001104  E843 0026                            LDR,R6   38,B3
          2 001106  EAC6 0026                            SRM,R6,'00FF'X    38,B6
          2 001108       00FF

     1905    18445    6                  KV_SSN.TYPCND = Y@TMP$->KV$SSN.TYPCND;

  18445   2 001109  8CC3 0039                            LDI      57,B3
          2 00110B  8D46 0039                            SDI      57,B6

     1906    18446    6                  KV_SSN.TYPCND.TRN = KV$PTR.INPCNDPND.TRN;

  18446   2 00110D  9C80 0000 0000  xsym                 LDB,B1   KV$PTR$
          2 001110  D841 001B                            LDR,R5   27,B1
          2 001112  DAC6 0039                            SRM,R5,'8000'X    57,B6
          2 001114       8000
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:289  

     1907    18447    6                  Y@TMP$->KV$SSN.TYPCND.NOT_TRN = '0'B;

  18447   2 001115  8843 0039                            LBF,'7FFF'X       57,B3
  18447   2 001117       7FFF

     1908    18448    6                  Y@TMP$->KV$SSN.TYPAHDBFRINS$ = KV_SSN.TYPAHDBFRHED$;

  18448   2 001118  DCC6 000A                            LDB,B5   10,B6
          2 00111A  DFC3 000E                            STB,B5   14,B3

     1909    18449    6                  KV_SSN.TYPAHDBFRHED$ = Y@TMP$->KV$SSN.TYPAHDBFRHED$;

  18449   2 00111C  CCC3 000A                            LDB,B4   10,B3
          2 00111E  CFC6 000A                            STB,B4   10,B6

     1910    18450    6                  Y@TMP$->KV$SSN.TYPAHDBFRHED$ = Y@TMP$->KV$SSN.TYPAHDBFRINS$;

  18450   2 001120  DCC3 000E                            LDB,B5   14,B3
          2 001122  DFC3 000A                            STB,B5   10,B3

     1911    18451    6                  Y@TMP$->KV$SSN.TYPAHDBFRINPFNC$ = ADDR(NIL);

  18451   2 001124  CB80 0000 0000                       LAB,B4   0
          2 001127  CFC3 000C                            STB,B4   12,B3

     1912    18452    6                  Y@TMP$->KV$SSN.TYPAHDBFRCNT = 1;

  18452   2 001129  6C01                                 LDV,R6   1
          2 00112A  E7C3 0027                            STH,R6   39,B3

     1913    18453    6                  KV$PTR.INPCNDPND.OPRX =

  18453   2 00112C  ACC7 0010                            LDB,B2   KV_RCVSSN+2,AUTO
          2 00112E  D842 001C                            LDR,R5   28,B2
          2 001130  DF41 001C                            STR,R5   28,B1

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:290  
     1914    18454    6                    KV_RCVSSN.PRVPTR$->KV$PTR.INPCNDPND.OPRX;
     1915    18455    6                  KV$PTR.INPCNDPND_MSK.NOT_TRN =

  18455   2 001132  C842 001B                            LDR,R4   27,B2
          2 001134  CAC1 001B                            SRM,R4,'7FFF'X    27,B1
          2 001136       7FFF

     1916    18456    6                    KV_RCVSSN.PRVPTR$->KV$PTR.INPCNDPND_MSK.NOT_TRN;
     1917    18457    6                  KV_RCVSSN.PRVPTR$->KV$PTR.INPCNDPND_MSK.NOT_TRN = '0'B;

  18457   2 001137  8842 001B                            LBF,'7FFF'X       27,B2
  18457   2 001139       7FFF

     1918    18458    6                  CALL KVV$VDIINT (KV_VDH_DAT);

  18458   2 00113A  BB80 0000 0030  03                   LAB,B3   +48
          2 00113D  CBF0 0100                            LAB,B4   256,IMO
          2 00113F  E380 0000 0000  xent                 LNJ,B6   KVV$VDIINT
          2 001142       0001                            DC       s:18460,PREL

     1919    18459    6               END;

     1920    18460    5               KV_RCVSSN.PRVPTR$ = ADDR(NIL);

  18460   2 001143  EB80 0000 0000                       LAB,B6   0
          2 001146  EFC7 0010                            STB,B6   KV_RCVSSN+2,AUTO

     1921    18461    5            END;

  18461   2 001148  0F81 0184                            B        s:18851,PREL

     1922    18462        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RQSMRK (request marker)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:291  
             18480    5   /***************************************************************************
             18481    5    *                                                                         *
             18482    5    *               Presentation message:  RQSMRK (request marker)            *
             18483    5    *                                                                         *
             18484    5    ***************************************************************************/

     1923    18489    4         CASE %KV_VDO_FNC_RQSMRK;

     1924    18490        /*
     1925    18491        We don't do anything here; the common code for handling the receipt
     1926    18492        of a request for a  marker at the bottom of this case statement will do the work.
     1927    18493        */
     1928    18494        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  RQSPRM (request parameters)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:292  
             18512    4   /***************************************************************************
             18513    4    *                                                                         *
             18514    4    *             Presentation message:  RQSPRM (request parameters)          *
             18515    4    *                                                                         *
             18516    4    ***************************************************************************/

     1929    18521    4         CASE %KV_VDO_FNC_RQSPRM;

     1930    18522    4            IF KV_SSN.WATINPDLTMRK

  18522   2 00114A  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 00114D  82C3 0028                            LB,'1000'X        40,B3
          2 00114F       1000
          2 001150  0501 017C                            BBT      s:18851,PREL

     1931    18523        /*
     1932    18524        We're waiting for a marker to come back for deleting requests.
     1933    18525        Ignore this request.
     1934    18526        */
     1935    18527    4            THEN EXIT Y$DO_CASE_FNC;
     1936    18528        /*N* IF INPDLTMRK KILLS GETPRM, SENDING MRK SHOULD PURGE PRM BFR CHN. */
     1937    18529    5            IF KV_SSN.SNDPRMBFRHED$ = ADDR(NIL) THEN DO;

  18529   2 001152  8DC3 0022                            CMN      34,B3
          2 001154  0981 0031                            BNE      s:18543,PREL

     1938    18530        /*
     1939    18531        There are no parameter buffers waiting to be sent.
     1940    18532        */
     1941    18533    5               KV@VDH_GETPRM = KV_VDH_GETPRM;

  18533   2 001156  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_GETPRM
          2 001159  2C00                                 LDV,R2   0
          2 00115A  6C14                                 LDV,R6   20
          2 00115B  BBC7 013F                            LAB,B3   KV@VDH_GETPRM,AUTO
          2 00115D  3C00                                 LDV,R3   0
          2 00115E  0008                                 MMM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:293  

     1942    18534    5               KV@VDH_GETPRM.PRMID = KV_VDO_RQSPRM.PRMID;

  18534   2 00115F  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 001162  E2C6 0001                            LLH,R6   1,B6
          2 001164  EF47 0140                            STR,R6   KV@VDH_GETPRM+1,AUTO

     1943    18535    5               KV@VDH_GETPRM.MAXBYTSIZ = KV_VDO_RQSPRM.MAXNMBBYT;

  18535   2 001166  D846 0002                            LDR,R5   2,B6
          2 001168  DF47 0148                            STR,R5   KV@VDH_GETPRM+9,AUTO

     1944    18536    5               CALL KVP$GETPRM(KV@VDH_GETPRM);

  18536   2 00116A  DBC7 013F                            LAB,B5   KV@VDH_GETPRM,AUTO
          2 00116C  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 00116E  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001170  CBF0 0100                            LAB,B4   256,IMO
          2 001172  E380 0000 0000  xent                 LNJ,B6   KVP$GETPRM
          2 001175       0001                            DC       s:18537,PREL

     1945    18537    5               KV_SSN.SNDPRMBFRHED$ = KV@VDH_GETPRM.BFRHED$;

  18537   2 001176  ECC7 0146                            LDB,B6   KV@VDH_GETPRM+7,AUTO
          2 001178  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 00117B  EFC5 0022                            STB,B6   34,B5

     1946    18538    5               KV_RCVSSN.BFRLMTEXC = KV@VDH_GETPRM.BFRLMTEXC;

  18538   2 00117D  E847 013F                            LDR,R6   KV@VDH_GETPRM,AUTO
          2 00117F  6008                                 SOL,R6   8
          2 001180  E570 8000                            AND,R6   -32768,IMO
          2 001182  EF47 000F                            STR,R6   KV_RCVSSN+1,AUTO

     1947    18539    5            END; ELSE DO;                  /* ELSE IF SNDPRMBFRHED$ = NIL        */

  18539   2 001184  0F81 0003                            B        s:18545,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:294  

     1948    18540        /*
     1949    18541        We already have parameter buffers waiting to be sent.
     1950    18542        */
     1951    18543    5               KV_RCVSSN.BFRLMTEXC = '0'B;

  18543   2 001186  8747 000F                            CL       KV_RCVSSN+1,AUTO

     1952    18544    5            END;                           /* END IF SNDPRMBFRHED$ = NIL         */

     1953    18545    4            KV@SND_PRM = KV_SND_PRM;

  18545   2 001188  AB80 0000 0000  xsym                 LAB,B2   KV_SND_PRM
          2 00118B  2C00                                 LDV,R2   0
          2 00118C  6C2C                                 LDV,R6   44
          2 00118D  BBC7 00D9                            LAB,B3   KV@SND_PRM,AUTO
          2 00118F  3C00                                 LDV,R3   0
          2 001190  0008                                 MMM

     1954    18546    5            IF KV_SSN.SNDPRMBFRHED$ ~= ADDR(NIL) THEN DO;

  18546   2 001191  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 001194  8DC6 0022                            CMN      34,B6
          2 001196  0901 0022                            BE       s:18572,PREL

     1955    18547        /*
     1956    18548        There are parameter buffers waiting to be sent.
     1957    18549        */
     1958    18550    5               KV@SND_PRM.DAT__ = KV_SSN.SNDPRMBFRHED$->KV$GETPRM.DAT__;

  18550   2 001198  DCC6 0022                            LDB,B5   34,B6
          2 00119A  AB85                                 LAB,B2   ,B5
          2 00119B  2C04                                 LDV,R2   4
          2 00119C  6C0C                                 LDV,R6   12
          2 00119D  BBC7 00E8                            LAB,B3   KV@SND_PRM+15,AUTO
          2 00119F  3C00                                 LDV,R3   0
          2 0011A0  0008                                 MMM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:295  

     1959    18551    6               IF KV_RCVSSN.BFRLMTEXC THEN DO;

  18551   2 0011A1  89C7 000F                            CMZ      KV_RCVSSN+1,AUTO
          2 0011A3  0881 0004                            BAGE     s:18559,PREL

     1960    18552        /*
     1961    18553        We had a buffer limit exceeded on this buffer.
     1962    18554        The requested structure wouldn't
     1963    18555        fit into a bufer of the maximum size specified.
     1964    18556        */
     1965    18557    6                  KV@SND_PRM.CMPCOD = %KV_CMPCOD_BFRLMTEXC;

  18557   2 0011A5  6C07                                 LDV,R6   7
          2 0011A6  E7C7 00EE                            STH,R6   KV@SND_PRM+21,AUTO

     1966    18558    6               END;                        /* END IF BFRLMTEXC                   */

     1967    18559    5               KV_SSN.SNDPRMBFRHED$ = KV_SSN.SNDPRMBFRHED$->KV$GETPRM.LNK$;

  18559   2 0011A8  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0011AB  CCC6 0022                            LDB,B4   34,B6
          2 0011AD  BC84                                 LDB,B3   ,B4
          2 0011AE  BFC6 0022                            STB,B3   34,B6

     1968    18560    6               IF KV_SSN.SNDPRMBFRHED$ ~= ADDR(NIL) THEN DO;

  18560   2 0011B0  8DC6 0022                            CMN      34,B6
          2 0011B2  0901 0009                            BE       s:18574,PREL

     1969    18561        /*
     1970    18562        This isn't the last parameter buffer in the chain, so tell
     1971    18563        the other end we're continuing.
     1972    18564        */
     1973    18565    6                  KV@SND_PRM.CTN = '1'B;

  18565   2 0011B4  8947 00EE                            LBT,'0080'X       KV@SND_PRM+21,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:296  
  18565   2 0011B6       0080

     1974    18566    6               END;                        /* END IF SNDPRMBFRHED$ ~= NIL        */

     1975    18567    5            END; ELSE DO;                  /* ELSE IF SNDPRMBFRHED$ ~= NIL       */

  18567   2 0011B7  0F81 0004                            B        s:18574,PREL

     1976    18568        /*
     1977    18569        There are no parameter buffers waiting to be sent.
     1978    18570        Assume KVP$GETPRM couldn't get memory.
     1979    18571        */
     1980    18572    5               KV@SND_PRM.CMPCOD = %KV_CMPCOD_BFRLMTEXC;

  18572   2 0011B9  6C07                                 LDV,R6   7
          2 0011BA  E7C7 00EE                            STH,R6   KV@SND_PRM+21,AUTO

     1981    18573    5            END;                           /* END IF SNDPRMBFRHED$ ~= NIL        */

     1982    18574    5            IF KV_RCVVDO.VDOVLP_CG_MSGID$ ~= ADDR(NIL) THEN DO;

  18574   2 0011BC  8DC7 0018                            CMN      KV_RCVVDO+4,AUTO
          2 0011BE  0901 000A                            BE       s:18582,PREL

     1983    18575        /*
     1984    18576        Return the com-group MSGID VDOVLP, indicating that the
     1985    18577        VDOVLP is now a response.
     1986    18578        */
     1987    18579    5               KV_VDOVLP_CG_MSGID.RSP = '1'B;

  18579   2 0011C0  DCC7 0018                            LDB,B5   KV_RCVVDO+4,AUTO
          2 0011C2  8945 0001                            LBT,'8000'X       1,B5
          2 0011C4       8000

     1988    18580    5               KV@SND_PRM.VDOVLP.CG_MSGID$ = ADDR(KV_VDOVLP_CG_MSGID);

  18580   2 0011C5  ECC7 0018                            LDB,B6   KV_RCVVDO+4,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:297  
          2 0011C7  EFC7 00DA                            STB,B6   KV@SND_PRM+1,AUTO

     1989    18581    5            END;                           /* END IF VDOVLP_CG_MSGID$ ~= NIL     */

     1990    18582    5            IF KV_RCVVDO.VDOVLP_CG_MSGTYP$ ~= ADDR(NIL) THEN DO;

  18582   2 0011C9  8DC7 001A                            CMN      KV_RCVVDO+6,AUTO
          2 0011CB  0901 000A                            BE       s:18590,PREL

     1991    18583        /*
     1992    18584        Return the com-group MSGTYP VDOVLP, indicating that the
     1993    18585        VDOVLP is now a response.
     1994    18586        */
     1995    18587    5               KV_VDOVLP_CG_MSGTYP.RSP = '1'B;

  18587   2 0011CD  ECC7 001A                            LDB,B6   KV_RCVVDO+6,AUTO
          2 0011CF  8946 0001                            LBT,'8000'X       1,B6
          2 0011D1       8000

     1996    18588    5               KV@SND_PRM.VDOVLP.CG_MSGTYP$ = ADDR(KV_VDOVLP_CG_MSGTYP);

  18588   2 0011D2  ECC7 001A                            LDB,B6   KV_RCVVDO+6,AUTO
          2 0011D4  EFC7 00DC                            STB,B6   KV@SND_PRM+3,AUTO

     1997    18589    5            END;                           /* END IF VDOVLP_CG_MSGTYP$ ~= NIL    */

     1998    18590    5            IF KV_RCVVDO.VDOVLP_CG_STA$ ~= ADDR(NIL) THEN DO;

  18590   2 0011D6  8DC7 001C                            CMN      KV_RCVVDO+8,AUTO
          2 0011D8  0901 000A                            BE       s:18598,PREL

     1999    18591        /*
     2000    18592        Return the com-group STA VDOVLP, indicating that the
     2001    18593        VDOVLP is now a response.
     2002    18594        */
     2003    18595    5               KV_VDOVLP_CG_STA.RSP = '1'B;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:298  
  18595   2 0011DA  ECC7 001C                            LDB,B6   KV_RCVVDO+8,AUTO
          2 0011DC  8946 0001                            LBT,'8000'X       1,B6
          2 0011DE       8000

     2004    18596    5               KV@SND_PRM.VDOVLP.CG_STA$ = ADDR(KV_VDOVLP_CG_STA);

  18596   2 0011DF  ECC7 001C                            LDB,B6   KV_RCVVDO+8,AUTO
          2 0011E1  EFC7 00DE                            STB,B6   KV@SND_PRM+5,AUTO

     2005    18597    5            END;                           /* END IF VDOVLP_CG_STA$ ~= NIL       */

     2006    18598    4            CALL KVM$SND(KV@SND_PRM);

  18598   2 0011E3  EBC7 00D9                            LAB,B6   KV@SND_PRM,AUTO
          2 0011E5  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 0011E7  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0011E9  CBF0 0100                            LAB,B4   256,IMO
          2 0011EB  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 0011EE       0001                            DC       s:18598+12,PREL
          2 0011EF  0F81 00DD                            B        s:18851,PREL

     2007    18599        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  SLCFLD (select field)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:299  
             18617    4   /***************************************************************************
             18618    4    *                                                                         *
             18619    4    *                Presentation message:  SLCFLD (select field)             *
             18620    4    *                                                                         *
             18621    4    ***************************************************************************/

     2008    18626    4         CASE %KV_VDO_FNC_SLCFLD;

     2009    18627
     2010    18628    4            IF KV_RCVVDO.VDOVLP_KEY$=ADDR(NIL)

  18628   2 0011F1  8DC7 0028                            CMN      KV_RCVVDO+20,AUTO
          2 0011F3  0981 000A                            BNE      s:18636,PREL
          2 0011F5  8DC7 0026                            CMN      KV_RCVVDO+18,AUTO
          2 0011F7  0981 0006                            BNE      s:18636,PREL

     2011    18629    5              AND KV_RCVVDO.VDOVLP_FLDID$=ADDR(NIL) THEN DO;

     2012    18630    5               %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ALL;

  18630   2 0011F9  BCC5 000E                            LDB,B3   14,B5
          2 0011FB  6C03                                 LDV,R6   3
          2 0011FC  E7C3 0005                            STH,R6   5,B3

     2013    18631
     2014    18632        /* There is a null key on this SLCFLD function, so it is of the 'all'
     2015    18633           type.                                                                      */
     2016    18634
     2017    18635    5            END;

     2018    18636    4            %KV_LINLST.LSTOPRSLC = '1'B;

  18636   2 0011FE  BCC5 000E                            LDB,B3   14,B5
          2 001200  8943 0005                            LBT,'0080'X       5,B3
          2 001202       0080
          2 001203  0F81 00C9                            B        s:18851,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:300  
     2019    18637        %KV$BOX(PAGE = YES, TITLE =
             18637            "Presentation message:  SLCGRPRND (select graphic rendition)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:301  
             18655    4   /***************************************************************************
             18656    4    *                                                                         *
             18657    4    *        Presentation message:  SLCGRPRND (select graphic rendition)      *
             18658    4    *                                                                         *
             18659    4    ***************************************************************************/

     2020    18664    4         CASE %KV_VDO_FNC_SLCGRPRND;

     2021    18665    4            CALL Y$FRMVDO;

  18665   2 001205  E3C0 04FD                            LNJ,B6   s:0,PREL
          2 001207       0001                            DC       s:18665+3,PREL
          2 001208  0F81 00C4                            B        s:18851,PREL

     2022    18666        %KV$BOX(PAGE = YES, TITLE = "Presentation message: SLCQLF (select qualification)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:302  
             18684    4   /***************************************************************************
             18685    4    *                                                                         *
             18686    4    *            Presentation message:  SLCQLF (select qualification)         *
             18687    4    *                                                                         *
             18688    4    ***************************************************************************/

     2023    18693    4         CASE %KV_VDO_FNC_SLCQLF;

     2024    18694    4            CALL Y$FRMVDO;

  18694   2 00120A  E3C0 04F8                            LNJ,B6   s:0,PREL
          2 00120C       0001                            DC       s:18694+3,PREL
          2 00120D  0F81 00BF                            B        s:18851,PREL

     2025    18695        %KV$BOX(PAGE = YES, TITLE = "Presentation message:  STT (Status)");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:303  
             18713    4   /***************************************************************************
             18714    4    *                                                                         *
             18715    4    *                    Presentation message:  STT (Status)                  *
             18716    4    *                                                                         *
             18717    4    ***************************************************************************/

     2026    18722    4         CASE %KV_VDO_FNC_STT;

     2027    18723        /*
     2028    18724        Status.  We requested the other end's status (e.g., ESC-Q).
     2029    18725        */
     2030    18726    4            KV_SSN.STTRQSENB = '1'B;

  18726   2 00120F  BC80 0000 0000  xsym                 LDB,B3   KV_RCVSSN$
          2 001212  8943 0028                            LBT,'0020'X       40,B3
          2 001214       0020

     2031    18727    5            IF KV_RCVVDO.OTPLCL.BFR_.ADR$ ~= ADDR(NIL) THEN DO;

  18727   2 001215  8DC7 002D                            CMN      KV_RCVVDO+25,AUTO
          2 001217  0901 00B5                            BE       s:18851,PREL

     2032    18728        /*
     2033    18729        There was data passed in this message.
     2034    18730        */
     2035    18731    6               IF %KV_VDI.USEOTPBFR THEN DO;

  18731   2 001219  AC83                                 LDB,B2   ,B3
          2 00121A  82C2 001D                            LB,'0200'X        29,B2
          2 00121C       0200
          2 00121D  0581 0079                            BBF      s:18774,PREL

     2036    18732
     2037    18733        /* We're to use the VDH output buffering mechanism (KV$VDI.OTPBFR_). */
     2038    18734
     2039    18735    7                  IF %KV_MVD.ORG>=%KV#VD_ORG_X364 THEN DO;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:304  
  18735   2 00121F  9CC5 0006                            LDB,B1   6,B5
          2 001221  E2C1 0015                            LLH,R6   21,B1
          2 001223  6D02                                 CMV,R6   2
          2 001224  0201 0010                            BL       s:18741,PREL

     2040    18736    7                     KV_RCVVDO.VDP_VDO.SETSTR = '1'B;

  18736   2 001226  8947 0031                            LBT,'0080'X       KV_RCVVDO+29,AUTO
  18736   2 001228       0080

     2041    18737    7                     KV_RCVVDO.VDP_VDO.PSTSTR = '1'B;

  18737   2 001229  8947 0031                            LBT,'0020'X       KV_RCVVDO+29,AUTO
  18737   2 00122B       0020

     2042    18738    7                     KV_RCVVDO.VDP_VDO.RSTSTR = '1'B;

  18738   2 00122C  8947 0031                            LBT,'0040'X       KV_RCVVDO+29,AUTO
  18738   2 00122E       0040

     2043    18739    7                     CALL KVS$SETSTR;

  18739   2 00122F  CBF0 0000                            LAB,B4   0,IMO
          2 001231  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 001234       0001                            DC       s:18741,PREL

     2044    18740    7                  END;

     2045    18741    6                  IF (%KV_VDI.INPUNT = %KV_INPUNT_BLK)

  18741   2 001235  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 001238  DC86                                 LDB,B5   ,B6
          2 001239  E845 001D                            LDR,R6   29,B5
          2 00123B  6045                                 SOR,R6   5
          2 00123C  E570 0003                            AND,R6   3,IMO
          2 00123E  6D03                                 CMV,R6   3
          2 00123F  0981 000C                            BNE      s:18750,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:305  
          2 001241  82C5 001D                            LB,'0010'X        29,B5
          2 001243       0010
          2 001244  0581 0007                            BBF      s:18750,PREL

     2046    18742    7                    AND %KV_VDI.USRRQSDAT.RED THEN DO;

     2047    18743        /*
     2048    18744        This is a block-mode device with a read outstanding.  Position
     2049    18745        to just beyond the hi non-blank position before outputting
     2050    18746        the text.
     2051    18747        */
     2052    18748    7                     CALL KVO$PSTAFTHI_NONBLNPHSPST;

  18748   2 001246  CBF0 0000                            LAB,B4   0,IMO
          2 001248  E380 0000 0000  xent                 LNJ,B6   KVO$PSTAFTHI_NONBLNPHSPST
          2 00124B       0001                            DC       s:18750,PREL

     2053    18749    7                  END;                /* END IF INPUNT = BLK AND USRRQSDAT.RED   */

     2054    18750    6                  CALL KVO$OTP1_NONVRT(%ASCBIN('!'));

  18750   2 00124C  BB80 0000 0033  03                   LAB,B3   +51
          2 00124F  CBF0 0100                            LAB,B4   256,IMO
          2 001251  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          2 001254       0001                            DC       s:18754,PREL

     2055    18751
     2056    18752        /* Call VDH output-local to process the text                               */
     2057    18753
     2058    18754    6                  KV_RCVVDO.OTPLCL.NONVRT = '1'B;

  18754   2 001255  8947 002C                            LBT,'0080'X       KV_RCVVDO+24,AUTO
  18754   2 001257       0080

     2059    18755    6                  CALL KVO$OTPLCL (KV_RCVVDO.OTPLCL);

  18755   2 001258  EBC7 002C                            LAB,B6   KV_RCVVDO+24,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:306  
          2 00125A  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 00125C  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 00125E  CBF0 0100                            LAB,B4   256,IMO
          2 001260  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          2 001263       0001                            DC       s:18757,PREL

     2060    18756
     2061    18757    6                  CALL KVO$OTP1_NONVRT(%ASCBIN('!'));

  18757   2 001264  BB80 0000 0033  03                   LAB,B3   +51
          2 001267  CBF0 0100                            LAB,B4   256,IMO
          2 001269  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          2 00126C       0001                            DC       s:18758,PREL

     2062    18758    6                  IF (%KV_VDI.INPUNT = %KV_INPUNT_BLK)

  18758   2 00126D  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 001270  DC86                                 LDB,B5   ,B6
          2 001271  E845 001D                            LDR,R6   29,B5
          2 001273  6045                                 SOR,R6   5
          2 001274  E570 0003                            AND,R6   3,IMO
          2 001276  6D03                                 CMV,R6   3
          2 001277  0981 0055                            BNE      s:18851,PREL
          2 001279  82C5 001D                            LB,'0010'X        29,B5
          2 00127B       0010
          2 00127C  0581 0050                            BBF      s:18851,PREL
          2 00127E  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 001281  BCC4 000A                            LDB,B3   10,B4
          2 001283  8CC3 0010                            LDI      16,B3
          2 001285  84F0 0000 0000                       SID      0,IMO
          2 001288  6981 0003                            BNEZ,R6  s:18766,PREL
          2 00128A  7901 0042                            BEZ,R7   s:18851,PREL

     2063    18759    6                    AND %KV_VDI.USRRQSDAT.RED
     2064    18760    7                    AND (%KV_SRD.FLDEND_PST ~= 0) THEN DO;

     2065    18761        /*
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:307  
     2066    18762        This is a block-mode input device, there is a read pending,
     2067    18763        and there is an input field declared.
     2068    18764        Position the cursor to the virtual column it belongs in.
     2069    18765        */
     2070    18766    7                     CALL KVO$PST(KV_VDH_PST_VRT);

  18766   2 00128C  BB80 0000 0035  03                   LAB,B3   +53
          2 00128F  CBF0 0100                            LAB,B4   256,IMO
          2 001291  E380 0000 0000  xent                 LNJ,B6   KVO$PST
          2 001294       0001                            DC       s:18768,PREL

     2071    18767    7                  END;                     /* END IF INPUNT = BLK ...            */

     2072    18768    6               END;                        /* END IF USEOTPBFR DO                */

  18768   2 001295  0F81 0037                            B        s:18851,PREL

     2073    18769    6               ELSE DO;

     2074    18770
     2075    18771        /*N* STTRSP VDO , but can't user OTPLCL                             */
     2076    18772
     2077    18773    6               END;                        /* END ELSE IF USEOTPBFR DO           */

     2078    18774    5            END;                           /* END IF KV_RCVVDO.DAT_ ~= NIL       */

  18774   2 001297  0F81 0035                            B        s:18851,PREL

     2079    18775        %KV$BOX(PAGE = YES, TITLE = "Presentation message: UPDRELDVC (update real device)")
             18775            ;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:308  
             18793    5   /***************************************************************************
             18794    5    *                                                                         *
             18795    5    *           Presentation message:  UPDRELDVC (update real device)         *
             18796    5    *                                                                         *
             18797    5    ***************************************************************************/

     2080    18802    4         CASE %KV_VDO_FNC_UPDRELDVC;

     2081    18803        /*N* CHECK */
     2082    18804
     2083    18805        /* Put the stuff on the screen (but not on paper).                            */
     2084    18806
     2085    18807    5            IF %KV_MVD.RETYPOVR THEN DO;

  18807   2 001299  BCC5 0006                            LDB,B3   6,B5
          2 00129B  82C3 0016                            LB,'0080'X        22,B3
          2 00129D       0080
          2 00129E  0581 002E                            BBF      s:18851,PREL

     2086    18808    5               IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN CALL KVF$UPDFRM_CRT;

  18808   2 0012A0  E2C3 0015                            LLH,R6   21,B3
          2 0012A2  6D04                                 CMV,R6   4
          2 0012A3  0981 0009                            BNE      s:18809,PREL

  18808   2 0012A5  CBF0 0000                            LAB,B4   0,IMO
          2 0012A7  E380 0000 0000  xent                 LNJ,B6   KVF$UPDFRM_CRT
          2 0012AA       0001                            DC       s:18808+11,PREL
          2 0012AB  0F81 0021                            B        s:18851,PREL

     2087    18809    5               ELSE IF %KV_MVD.ORG=%KV#VD_ORG_SE THEN CALL KVE$DSPUPD;

  18809   2 0012AD  6D05                                 CMV,R6   5
          2 0012AE  0981 001E                            BNE      s:18851,PREL

  18809   2 0012B0  CBF0 0000                            LAB,B4   0,IMO
          2 0012B2  E380 0000 0000  xent                 LNJ,B6   KVE$DSPUPD
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:309  
          2 0012B5       0001                            DC       s:18810,PREL

     2088    18810    5            END;                           /* IF                                 */

  18810   2 0012B6  0F81 0016                            B        s:18851,PREL

     2089    18811        %KV$BOX(PAGE = YES, TITLE = "End of presentation message loop");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:310  
             18829    5   /***************************************************************************
             18830    5    *                                                                         *
             18831    5    *                      End of presentation message loop                   *
             18832    5    *                                                                         *
             18833    5    ***************************************************************************/

     2090    18838    4         CASE (ELSE);

     2091    18839        /*
     2092    18840        We received a VDO we don't have a case statement for.
     2093    18841        */
     2094    18842        /*E* ERROR:         KVM-E$BADVDOFNCCOD-0
     2095    18843        *    MESSAGE:       Bad function code on KV$VDO
     2096    18844        *    DESCRIPTION:   VDH received a message containing a KV$VDO.FNC
     2097    18845        *                   that is illegal
     2098    18846        */
     2099    18847    4            CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_BADVDOFNCCOD, %KH_CHN);

  18847   2 0012B8  BC85                                 LDB,B3   ,B5
          2 0012B9  AC83                                 LDB,B2   ,B3
          2 0012BA  AFC7 0156                            STB,B2   @ERRCOD+4,AUTO
          2 0012BC  BB80 0000 002A  01                   LAB,B3   FPT_WRSYSLOG_BADVDOFNCCOD
          2 0012BF  BFC7 0154                            STB,B3   @ERRCOD+2,AUTO
          2 0012C1  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 0012C3  CBF0 0200                            LAB,B4   512,IMO
          2 0012C5  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 0012C8       0001                            DC       s:18848,PREL

     2100    18848    4            ALTRETURN;

  18848   2 0012C9  ECC7 014E                            LDB,B6   KV@VDOVLP_MRK+5,AUTO
          2 0012CB  B806                                 LDR,R3   ,B6
          2 0012CC  C3B6                                 LNJ,B4   ,B6,R3

     2101    18849    4         END;                              /* END DO CASE KV_VDO.FNC             */

     2102    18850        %EJECT;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:311  
     2103    18851    4         IF KV_RCVVDO.VDOVLP_ENTSRD$ ~= ADDR(NIL) THEN DO;

  18851   2 0012CD  8DC7 0022                            CMN      KV_RCVVDO+14,AUTO
          2 0012CF  0901 0023                            BE       s:18863,PREL

     2104    18852        /*
     2105    18853        Process the enter-SRD string that was passed.
     2106    18854        */
     2107    18855    4            Y_VDH_SETPRM.SCP = %KV_SCP_SRD;

  18855   2 0012D1  6C06                                 LDV,R6   6
          2 0012D2  E780 0000 0028  00                   STH,R6   Y_VDH_SETPRM+7

     2108    18856    4            Y_VDH_SETPRM.PRMID = %KV_PRMID_ENTSRDCHR;

  18856   2 0012D5  D870 008C                            LDR,R5   140,IMO
          2 0012D7  DF00 0000 0022  00                   STR,R5   Y_VDH_SETPRM+1

     2109    18857    4            Y_VDH_SETPRM.VAL_.ADR$ = ADDR(KV_VDOVLP_ENTSRD);

  18857   2 0012DA  ECC7 0022                            LDB,B6   KV_RCVVDO+14,AUTO
          2 0012DC  EF80 0000 0024  00                   STB,B6   Y_VDH_SETPRM+3

     2110    18858    4            Y_VDH_SETPRM.VAL_.BYTX = LENGTHV(KV_VDOVLP);

  18858   2 0012DF  4C01                                 LDV,R4   1
          2 0012E0  CF00 0000 0026  00                   STR,R4   Y_VDH_SETPRM+5

     2111    18859    4            Y_VDH_SETPRM.VAL_.BYTSIZ = KV_VDOVLP_ENTSRD.BYTSIZ+1;

  18859   2 0012E3  B806                                 LDR,R3   ,B6
          2 0012E4  B570 00FF                            AND,R3   255,IMO
          2 0012E6  3E01                                 ADV,R3   1
          2 0012E7  BF00 0000 0027  00                   STR,R3   Y_VDH_SETPRM+6

     2112    18860    4            CALL KVP$SETPRM(Y_VDH_SETPRM);

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:312  
  18860   2 0012EA  BB80 0000 001A  03                   LAB,B3   +26
          2 0012ED  CBF0 0100                            LAB,B4   256,IMO
          2 0012EF  E380 0000 0000  xent                 LNJ,B6   KVP$SETPRM
          2 0012F2       0001                            DC       s:18863,PREL

     2113    18861    4         END;                         /* END IF KV_RCVVDO.VDOVLP_ENTSRD$ ~= NIL  */

     2114    18862
     2115    18863    4         IF KV_RCVVDO.VDOVLP_MRK$ ~= ADDR(NIL) THEN DO;

  18863   2 0012F3  8DC7 002A                            CMN      KV_RCVVDO+22,AUTO
          2 0012F5  0901 00EC                            BE       s:18963,PREL

     2116    18864        /*
     2117    18865        There was a KV$VDOVLP_MRK passed to us on this message.
     2118    18866        */
     2119    18867    5            IF KV_VDOVLP_MRK.RSP THEN DO;

  18867   2 0012F7  ECC7 002A                            LDB,B6   KV_RCVVDO+22,AUTO
          2 0012F9  89C6 0001                            CMZ      1,B6
          2 0012FB  0881 0021                            BAGE     s:18894,PREL

     2120    18868        /*
     2121    18869        This marker is in response to a marker we sent.
     2122    18870        */
     2123    18871    6               IF KV_VDOVLP_MRK.MRKTYP=%KV_VDOMRKTYP_MRK THEN DO;

  18871   2 0012FD  E846 0001                            LDR,R6   1,B6
          2 0012FF  E570 00FF                            AND,R6   255,IMO
          2 001301  6D03                                 CMV,R6   3
          2 001302  0981 00DF                            BNE      s:18963,PREL

     2124    18872        /*
     2125    18873        This marker is in response to a marker request that we sent
     2126    18874        to delete data or requests possibly being sent from the other end.
     2127    18875        */
     2128    18876    7                  IF KV_VDOVLP_MRK.ID.UBIN_DBLBYT = KV_SSN.OTPDLTMRKNMB THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:313  

  18876   2 001304  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 001307  D846 0002                            LDR,R5   2,B6
          2 001309  D945 0016                            CMR,R5   22,B5
          2 00130B  0981 0004                            BNE      s:18882,PREL

     2129    18877        /*
     2130    18878        We're to no longer delete data coming to us from the other end.
     2131    18879        */
     2132    18880    7                     KV_SSN.WATOTPDLTMRK = '0'B;

  18880   2 00130D  8845 0028                            LBF,'2000'X       40,B5
  18880   2 00130F       2000

     2133    18881    7                  END;                     /* END IF OTPDLTMRKNMB = ID           */

     2134    18882    7                  IF KV_VDOVLP_MRK.ID.UBIN_DBLBYT = KV_SSN.INPDLTMRKNMB THEN DO;

  18882   2 001310  ECC7 002A                            LDB,B6   KV_RCVVDO+22,AUTO
          2 001312  E846 0002                            LDR,R6   2,B6
          2 001314  E945 0017                            CMR,R6   23,B5
          2 001316  0981 00CB                            BNE      s:18963,PREL

     2135    18883        /*
     2136    18884        We're to no longer delete requests coming to us from the other end.
     2137    18885        */
     2138    18886    7                     KV_SSN.WATINPDLTMRK = '0'B;

  18886   2 001318  8845 0028                            LBF,'1000'X       40,B5
  18886   2 00131A       1000

     2139    18887    7                  END;                     /* END IF INPDLTMRKNMB = ID           */

     2140    18888    6               END;                        /* END CASE MRKTYP                    */

     2141    18889    5            END;                           /* END IF KV_VDOVLP_MRK.RSP           */

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:314  
  18889   2 00131B  0F81 00C6                            B        s:18963,PREL

     2142    18890    5            ELSE DO;

     2143    18891        /*
     2144    18892        The other end is requesting that we send back to it this marker.
     2145    18893        */
     2146    18894    6               DO CASE (KV_VDOVLP_MRK.MRKTYP);

  18894   2 00131D  B846 0001                            LDR,R3   1,B6
          2 00131F  B570 00FF                            AND,R3   255,IMO
          2 001321  3D05                                 CMV,R3   5
          2 001322  0281 00BF                            BGE      s:18963,PREL
          2 001324  A830 0000 132A  02                   LDR,R2   s:18894+13,R3
          2 001327  83A0 0000 132F  02                   JMP      s:18901,R2
          2 00132A       00B3                            DC       s:18963,PREL
          2 00132B       0000                            DC       s:18901,PREL
          2 00132C       008A                            DC       s:18942,PREL
          2 00132D       009A                            DC       s:18950,PREL
          2 00132E       00AA                            DC       s:18958,PREL

     2147    18895    6               CASE %KV_VDOMRKTYP_ENDACK;

     2148    18896
     2149    18897        /* This write has end-to-end ACK set on it. We are to acknowledge
     2150    18898           the successful processing and receipt of the associated
     2151    18899           data by the VDH-user's object, distant end, etc.                 */
     2152    18900
     2153    18901    6                  IF %KV_MVD.ORG>=%KV#VD_ORG_FORM OR

  18901   2 00132F  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 001332  CCC5 0006                            LDB,B4   6,B5
          2 001334  E2C4 0015                            LLH,R6   21,B4
          2 001336  6D04                                 CMV,R6   4
          2 001337  0281 000C                            BGE      s:18903,PREL
          2 001339  BCC5 0004                            LDB,B3   4,B5
          2 00133B  D843 0013                            LDR,R5   19,B3
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:315  
          2 00133D  5981 0006                            BNEZ,R5  s:18903,PREL
          2 00133F  82C7 0031                            LB,'0010'X        KV_RCVVDO+29,AUTO
          2 001341       0010
          2 001342  0501 0066                            BBT      s:18933,PREL

     2154    18902    6                    (%KV_STR.ERR.COD ~= 0) OR
     2155    18903    7                    NOT KV_RCVVDO.VDP_VDO.RUTACK THEN DO;

  18902   2                              SND_MRK         null
     2156    18904
     2157    18905        /* We're to respond immediately with any error status we have.      */
     2158    18906
     2159    18907    7   SND_MRK:          ;
     2160    18908    7                     KV@SND_MRK = KV_SND_MRK;

  18908   2 001344  AB80 0000 0000  xsym SND_MRK         LAB,B2   KV_SND_MRK
          2 001347  2C00                                 LDV,R2   0
          2 001348  6C22                                 LDV,R6   34
          2 001349  BBC7 00C8                            LAB,B3   KV@SND_MRK,AUTO
          2 00134B  3C00                                 LDV,R3   0
          2 00134C  0008                                 MMM

     2161    18909    7                     KV@SND_MRK.VDOVLP.MRK$ = ADDR(KV@VDOVLP_MRK);

  18909   2 00134D  EBC7 0149                            LAB,B6   KV@VDOVLP_MRK,AUTO
          2 00134F  EFC7 00D5                            STB,B6   KV@SND_MRK+13,AUTO

     2162    18910    7                     KV@VDOVLP_MRK = KV_VDOVLP_MRK;

  18910   2 001351  ACC7 002A                            LDB,B2   KV_RCVVDO+22,AUTO
          2 001353  2C00                                 LDV,R2   0
          2 001354  6C08                                 LDV,R6   8
          2 001355  BBC7 0149                            LAB,B3   KV@VDOVLP_MRK,AUTO
          2 001357  3C00                                 LDV,R3   0
          2 001358  0008                                 MMM

     2163    18911    7                     KV@VDOVLP_MRK.RSP = '1'B;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:316  

  18911   2 001359  8947 014A                            LBT,'8000'X       KV@VDOVLP_MRK+1,AUTO
  18911   2 00135B       8000

     2164    18912    8                     IF %KV_STR.ERR.COD~=0 THEN DO;

  18912   2 00135C  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00135F  DCC6 0004                            LDB,B5   4,B6
          2 001361  E845 0013                            LDR,R6   19,B5
          2 001363  6901 0022                            BEZ,R6   s:18921,PREL

     2165    18913    8                        KV@SND_MRK.VDOVLP.ERR$ = ADDR(Y_VDOVLP_ERR);

  18913   2 001365  CB80 0000 0029  00                   LAB,B4   Y_VDOVLP_ERR
          2 001368  CFC7 00CF                            STB,B4   KV@SND_MRK+7,AUTO

     2166    18914        /*N* MAKE  A TABLE   Y_VDOVLP_ERR.ERRCODE.MID = %KV_STR.ERR.VDOTYP; */
     2167    18915    8                        Y_VDOVLP_ERR.ERRCODE.ERR# = %KV_STR.ERR.COD;

  18915   2 00136A  DCC6 0004                            LDB,B5   4,B6
          2 00136C  E845 0013                            LDR,R6   19,B5
          2 00136E  6003                                 SOL,R6   3
          2 00136F  EA80 0000 002B  00                   SRM,R6,'FFF8'X    Y_VDOVLP_ERR+2
          2 001372       FFF8

     2168    18916    9                        IF %KV_MVD.ORG=%KV#VD_ORG_FORM THEN DO;

  18916   2 001373  DCC6 0006                            LDB,B5   6,B6
          2 001375  E2C5 0015                            LLH,R6   21,B5
          2 001377  6D04                                 CMV,R6   4
          2 001378  0981 000D                            BNE      s:18921,PREL

     2169    18917    9                           KV@SND_MRK.VDOVLP.FLDID$ = ADDR(Y_VDOVLP_FLDID);

  18917   2 00137A  BB80 0000 002C  00                   LAB,B3   Y_VDOVLP_FLDID
          2 00137D  BFC7 00D1                            STB,B3   KV@SND_MRK+9,AUTO

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:317  
     2170    18918    9                           Y_VDOVLP_FLDID.FLDID = %KV_LINLST.ERRFLDID;

  18918   2 00137F  DCC6 000E                            LDB,B5   14,B6
          2 001381  E845 0007                            LDR,R6   7,B5
          2 001383  EF00 0000 002D  00                   STR,R6   Y_VDOVLP_FLDID+1

     2171    18919    9                        END;

     2172    18920    8                     END;

     2173    18921    7                     KV@SND_MRK.VDOVLP.CG_MSGID$ = ADDR(KV_VDOVLP_CG_MSGID);

  18921   2 001386  DCC7 0018                            LDB,B5   KV_RCVVDO+4,AUTO
          2 001388  DFC7 00C9                            STB,B5   KV@SND_MRK+1,AUTO

     2174    18922    7                     KV@SND_MRK.VDOVLP.CG_MSGTYP$ = ADDR(KV_VDOVLP_CG_MSGTYP);

  18922   2 00138A  CCC7 001A                            LDB,B4   KV_RCVVDO+6,AUTO
          2 00138C  CFC7 00CB                            STB,B4   KV@SND_MRK+3,AUTO

     2175    18923    7                     KV@SND_MRK.VDOVLP.CG_STA$ = ADDR(KV_VDOVLP_CG_STA);

  18923   2 00138E  BCC7 001C                            LDB,B3   KV_RCVVDO+8,AUTO
          2 001390  BFC7 00CD                            STB,B3   KV@SND_MRK+5,AUTO

     2176    18924    7                     CALL KVM$SND(KV@SND_MRK);

  18924   2 001392  ABC7 00C8                            LAB,B2   KV@SND_MRK,AUTO
          2 001394  AFC7 0154                            STB,B2   @ERRCOD+2,AUTO
          2 001396  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001398  CBF0 0100                            LAB,B4   256,IMO
          2 00139A  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 00139D       0001                            DC       s:18925,PREL

     2177    18925    7                     %KV_STR.ERR = '0'B;

  18925   2 00139E  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:318  
          2 0013A1  DCC6 0004                            LDB,B5   4,B6
          2 0013A3  8745 0013                            CL       19,B5
          2 0013A5  8745 0014                            CL       20,B5

     2178    18926    7                  END;                     /* END IF ORG = FORM                  */

  18926   2 0013A7  0F81 003A                            B        s:18963,PREL

     2179    18927    7                  ELSE DO;

     2180    18928
     2181    18929        /* We're to pass an output marker thru the output data stream.
     2182    18930           Later, when the VDH user passes the output marker data back
     2183    18931           to us, we'll pass it on to the distant end.                      */
     2184    18932
     2185    18933    7                     Y_USR_OTPMRK_ACK.DAT.ID = KV_VDOVLP_MRK.ID;

  18933   2 0013A9  8CC6 0002                            LDI      2,B6
          2 0013AB  8D00 0000 0013  00                   SDI      Y_USR_OTPMRK_ACK+2

     2186    18934    7                     CALL KVV$CALUSR (Y_USR_OTPMRK_ACK) ALTRET(SND_MRK);

  18934   2 0013AE  BB80 0000 0037  03                   LAB,B3   +55
          2 0013B1  CBF0 0100                            LAB,B4   256,IMO
          2 0013B3  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          2 0013B6       FF8E                            DC       s:18903,PREL

     2187    18935    7                  END;                     /* END ELSE IF ORG = FORM...          */

  18935   2 0013B7  0F81 002A                            B        s:18963,PREL

     2188    18936    6               CASE %KV_VDOMRKTYP_LSTRCRID;

     2189    18937        /*
     2190    18938        We're to track this marker thru the VDH-user's output stream, and
     2191    18939        save the last of these markers that is successfully processed,
     2192    18940        e.g., the data preceeding it isn't deleted or lost.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:319  
     2193    18941        */
     2194    18942    6                  Y_USR_OTPMRK_SAVLSTRCRID.DAT.ID = KV_VDOVLP_MRK.ID;

  18942   2 0013B9  8CC6 0002                            LDI      2,B6
          2 0013BB  8D00 0000 001B  00                   SDI      Y_USR_OTPMRK_SAVLSTRCRID+2

     2195    18943    6                  CALL KVV$CALUSR (Y_USR_OTPMRK_SAVLSTRCRID);

  18943   2 0013BE  BB80 0000 0039  03                   LAB,B3   +57
          2 0013C1  CBF0 0100                            LAB,B4   256,IMO
          2 0013C3  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          2 0013C6       0001                            DC       s:18943+9,PREL
          2 0013C7  0F81 001A                            B        s:18963,PREL

     2196    18944    6               CASE %KV_VDOMRKTYP_MRK;

     2197    18945        /*
     2198    18946        We're to track this marker thru the VDH-user's output stream, and
     2199    18947        return the marker when either successfully processed or otherwise
     2200    18948        disposed of (e.g., the data preceeding it is deleted or lost).
     2201    18949        */
     2202    18950    6                  Y_USR_OTPMRK_MRK.DAT.ID = KV_VDOVLP_MRK.ID;

  18950   2 0013C9  8CC6 0002                            LDI      2,B6
          2 0013CB  8D00 0000 0017  00                   SDI      Y_USR_OTPMRK_MRK+2

     2203    18951    6                  CALL KVV$CALUSR (Y_USR_OTPMRK_MRK) ALTRET(SND_MRK);

  18951   2 0013CE  BB80 0000 003B  03                   LAB,B3   +59
          2 0013D1  CBF0 0100                            LAB,B4   256,IMO
          2 0013D3  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          2 0013D6       FF6E                            DC       s:18903,PREL
          2 0013D7  0F81 000A                            B        s:18963,PREL

     2204    18952    6               CASE %KV_VDOMRKTYP_SNDLSTRCRID;

     2205    18953        /*
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:320  
     2206    18954        We're to track this marker thru the VDH-user's output stream, and
     2207    18955        then (when it comes back to VDH) send the marker ID from the
     2208    18956        last OTPMRK returned that had a type of SAVLSTRCRID.
     2209    18957        */
     2210    18958    6                  CALL KVV$CALUSR (Y_USR_OTPMRK_SNDLSTRCRID) ALTRET(SND_MRK);

  18958   2 0013D9  BB80 0000 003D  03                   LAB,B3   +61
          2 0013DC  CBF0 0100                            LAB,B4   256,IMO
          2 0013DE  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          2 0013E1       FF63                            DC       s:18903,PREL

     2211    18959    6               END;                        /* END CASE MRKTYP                    */

     2212    18960    5            END;                           /* END ELSE IF KV_VDOVLP_MRK.RSP      */

     2213    18961    4         END;                              /* END IF KV_VDOVLP_MRK exists        */

     2214    18962
     2215    18963    4         IF KV_RCVVDO.PRVSTR$~=ADDR(NIL) THEN DO;

  18963   2 0013E2  8DC7 0034                            CMN      KV_RCVVDO+32,AUTO
          2 0013E4  0901 000A                            BE       s:18970,PREL

     2216    18964        /*
     2217    18965           We only changed the context to point here. Put it back.
     2218    18966        */
     2219    18967    4            KV_RCVVDO.VDP_VDO.SETSTR = '0'B;

  18967   2 0013E6  8847 0031                            LBF,'0080'X       KV_RCVVDO+29,AUTO
  18967   2 0013E8       0080

     2220    18968    4            CALL KVS$SETSTR;

  18968   2 0013E9  CBF0 0000                            LAB,B4   0,IMO
          2 0013EB  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 0013EE       0001                            DC       s:18970,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:321  
     2221    18969    4         END;

     2222    18970    3         KV_RCVVDO$ = Y@NXTVDOVLP$;

  18970   2 0013EF  ECC7 0036                            LDB,B6   Y@NXTVDOVLP$,AUTO
          2 0013F1  EF80 0000 0000  xsym                 STB,B6   KV_RCVVDO$

     2223    18971    3      END;                                 /* END IF KV_RCVVDO$ ~= Y@SIDU_END$   */

  18971   2 0013F4  EDC7 0008                            CMB,B6   Y@SIDU_END$,AUTO
          2 0013F6  0201 EFAF                            BL       s:16503,PREL

     2224    18972    2   END Y$RCVVDO;

  18972   2 0013F8  ECC7 014E                            LDB,B6   KV@VDOVLP_MRK+5,AUTO
          2 0013FA  C3C6 0001                            LNJ,B4   1,B6

     2225    18973        %KV$BOX(PAGE=YES, TITLE= "Set KV$STR.ERR if VDO wants an ACK");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:322  
             18991    2   /***************************************************************************
             18992    2    *                                                                         *
             18993    2    *                     Set KV$STR.ERR if VDO wants an ACK                  *
             18994    2    *                                                                         *
             18995    2    ***************************************************************************/

     2226    19000    1   Y$SETERRCOD: PROC(ERRCOD);

  19000   2 0013FC  EFC7 0150            Y$SETERRCOD     STB,B6   KV@VDOVLP_MRK+7,AUTO

     2227    19001
     2228    19002    2   DCL ERRCOD UBIN;
     2229    19003
     2230    19004    2      IF KV_RCVVDO.VDOVLP_MRK$~=ADDR(NIL)

  19004   2 0013FE  8DC7 002A                            CMN      KV_RCVVDO+22,AUTO
          2 001400  0901 0014                            BE       s:19007,PREL

     2231    19005    2      THEN IF KV_VDOVLP_MRK.MRKTYP=%KV_VDOMRKTYP_ENDACK

  19005   2 001402  DCC7 002A                            LDB,B5   KV_RCVVDO+22,AUTO
          2 001404  E845 0001                            LDR,R6   1,B5
          2 001406  E570 00FF                            AND,R6   255,IMO
          2 001408  6D01                                 CMV,R6   1
          2 001409  0981 000B                            BNE      s:19007,PREL

     2232    19006    2      THEN %KV_STR.ERR.COD = ERRCOD;

  19006   2 00140B  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 00140E  BCC4 0004                            LDB,B3   4,B4
          2 001410  ACC7 0152                            LDB,B2   @ERRCOD,AUTO
          2 001412  D802                                 LDR,R5   ,B2
          2 001413  DF43 0013                            STR,R5   19,B3

     2233    19007    2      RETURN;

  19007   2 001415  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:323  
          2 001417  C3C6 0001                            LNJ,B4   1,B6

     2234    19008    2   END Y$SETERRCOD;
     2235    19009        %KV$BOX(PAGE = YES, TITLE = "Clean up session");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:324  
             19027    2   /***************************************************************************
             19028    2    *                                                                         *
             19029    2    *                              Clean up session                           *
             19030    2    *                                                                         *
             19031    2    ***************************************************************************/

     2236    19036        /*
     2237    19037        Clean-up session.  We're done processing this session.
     2238    19038        */
     2239    19039    1   Y$CLNUP_SSN: PROC;

  19039   2 001419  EFC7 014E            Y$CLNUP_SSN     STB,B6   KV@VDOVLP_MRK+5,AUTO

     2240    19040    3      IF KV_RCVSSN$~=ADDR(NIL) THEN DO;

  19040   2 00141B  8D80 0000 0000  xsym                 CMN      KV_RCVSSN$
          2 00141E  0901 0194                            BE       s:19206,PREL

     2241    19041        /*
     2242    19042        There is a session to be cleaned up.
     2243    19043        */
     2244    19044    3         IF %KV_VDI.RQSOTP AND KV_SSN.SSNCNCID~=0

  19044   2 001420  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 001423  CC85                                 LDB,B4   ,B5
          2 001424  82C4 0019                            LB,'0008'X        25,B4
          2 001426       0008
          2 001427  0581 0014                            BBF      s:19052,PREL
          2 001429  E845 0024                            LDR,R6   36,B5
          2 00142B  6901 0010                            BEZ,R6   s:19052,PREL
          2 00142D  D845 001E                            LDR,R5   30,B5
          2 00142F  D944 001B                            CMR,R5   27,B4
          2 001431  0201 000A                            BL       s:19052,PREL

     2245    19045    4           AND KV_SSN.RCVFLWCTRCRDINC>=%KV_VDI.RCVFLWCTRMINCRDINC THEN DO;

     2246    19046
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:325  
     2247    19047        /* The user is requesting output. See if we should send flow        */
     2248    19048        /* control information to the other end.                            */
     2249    19049
     2250    19050    4            CALL KVM$SND (KV_SND_RQSDAT_GNR);

  19050   2 001433  BB80 0000 000E  03                   LAB,B3   +14
          2 001436  CBF0 0100                            LAB,B4   256,IMO
          2 001438  E380 0000 0000  xent                 LNJ,B6   KVM$SND
          2 00143B       0001                            DC       s:19052,PREL

     2251    19051    4         END;                              /* END IF RQSOTP                      */

     2252    19052    4         IF KV_RCVSSN.PRVSTR$~=ADDR(NIL) OR KV_RCVSSN.PRVPTR$~=ADDR(NIL) THEN DO;

  19052   2 00143C  8DC7 0012                            CMN      KV_RCVSSN+4,AUTO
          2 00143E  0981 0005                            BNE      s:19058,PREL
          2 001440  8DC7 0010                            CMN      KV_RCVSSN+2,AUTO
          2 001442  0901 000F                            BE       s:19062,PREL

     2253    19053
     2254    19054        /* We're to set the previous stream as the current stream, as the   */
     2255    19055        /* request we just processed is somewhat asynchronous, and we don't */
     2256    19056        /* want to disturb what was going on.                               */
     2257    19057
     2258    19058    4            KV_RCVVDO.VDP_VDO.SETSTR = '0'B;

  19058   2 001444  8847 0031                            LBF,'0080'X       KV_RCVVDO+29,AUTO
  19058   2 001446       0080

     2259    19059    4            KV_RCVVDO.PRVSTR$ = ADDR(NIL);

  19059   2 001447  EB80 0000 0000                       LAB,B6   0
          2 00144A  EFC7 0034                            STB,B6   KV_RCVVDO+32,AUTO

     2260    19060    4            CALL KVS$SETSTR;

  19060   2 00144C  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:326  
          2 00144E  E380 0000 0000  xent                 LNJ,B6   KVS$SETSTR
          2 001451       0001                            DC       s:19062,PREL

     2261    19061    4         END;                              /* END IF SETPRVSTR                   */

     2262    19062    3         KV$PTR$ = %KV_VDI.ASNINPPTR$;

  19062   2 001452  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 001455  DC86                                 LDB,B5   ,B6
          2 001456  CCC5 0006                            LDB,B4   6,B5
          2 001458  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

     2263    19063    3   Y$CHKFORDFR:
     2264    19064    4         DO WHILE ('1'B);                  /* LOOP START                         */

  19064   2                              Y$CHKFORDFR     null
     2265    19065
     2266    19066        /* This loop is re-iterated if we find a %KV_VDI.DFR bit on          */
     2267    19067        /* at the bottom when we're about to reset %KV_VDI.BSY.              */
     2268    19068        /* In that case, we have to process the defer bits again.           */
     2269    19069
     2270    19070    5            IF %KV_VDI.USREVTENB(%KV_USR_EVT_ID_SCH) AND %KV_VDI.DFR THEN DO;

  19070   2 00145B  EC80 0000 0000  xsym Y$CHKFORDFR     LDB,B6   KV_RCVSSN$
          2 00145E  DC86                                 LDB,B5   ,B6
          2 00145F  82C5 001F                            LB,'0800'X        31,B5
          2 001461       0800
          2 001462  0581 003F                            BBF      s:19109,PREL
          2 001464  82C5 0018                            LB,'F800'X        24,B5
          2 001466       F800
          2 001467  0581 003A                            BBF      s:19109,PREL

     2271    19071
     2272    19072        /* Do any necessary VDH-user scheduling (deferred execution, etc).  */
     2273    19073
     2274    19074    5               IF %KV_SSN.SSNCNCID=0 AND NOT %KV_SSN.RLSSSN THEN EXIT;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:327  
  19074   2 001469  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 00146C  BCC4 0002                            LDB,B3   2,B4
          2 00146E  E843 0024                            LDR,R6   36,B3
          2 001470  6981 0006                            BNEZ,R6  s:19075,PREL
          2 001472  82C3 0028                            LB,'0100'X        40,B3
          2 001474       0100
          2 001475  0581 002C                            BBF      s:19109,PREL

     2275    19075    5               KV@USR_EVT = KV_USR_EVT;

  19075   2 001477  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          2 00147A  8D47 0116                            SDI      KV@USR_EVT,AUTO

     2276    19076    5               KV@USR_EVT.ID = %KV_USR_EVT_ID_SCH;

  19076   2 00147C  5C0C                                 LDV,R5   12
          2 00147D  DAC7 0116                            SRM,R5,'007F'X    KV@USR_EVT,AUTO
          2 00147F       007F

     2277    19077
     2278    19078        /* This loop is traversed for each scheduling bit found set.        */
     2279    19079
     2280    19080    6               DO KV@USR_EVT.PRM = 0 TO 4;

  19080   2 001480  8747 0117                            CL       KV@USR_EVT+1,AUTO

     2281    19081
     2282    19082    7                  IF %KV_VDI.DFR.USR(KV@USR_EVT.PRM) THEN DO;

  19082   2 001482  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 001485  DC86                                 LDB,B5   ,B6
          2 001486  CBC5 0018                            LAB,B4   24,B5
          2 001488  B847 0117                            LDR,R3   KV@USR_EVT+1,AUTO
          2 00148A  82B4                                 LB       ,B4,R3
          2 00148B  0581 0010                            BBF      s:19089,PREL

     2283    19083
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:328  
     2284    19084        /* We found a set bit. Call the user with it.                       */
     2285    19085
     2286    19086    7                     %KV_VDI.DFR.USR(KV@USR_EVT.PRM) = '0'B;

  19086   2 00148D  CBC5 0018                            LAB,B4   24,B5
          2 00148F  8834                                 LBF      ,B4,R3

     2287    19087    7                     CALL KVV$CALUSR_EVT (KV@USR_EVT);

  19087   2 001490  EBC7 0116                            LAB,B6   KV@USR_EVT,AUTO
          2 001492  EFC7 0154                            STB,B6   @ERRCOD+2,AUTO
          2 001494  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001496  CBF0 0100                            LAB,B4   256,IMO
          2 001498  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 00149B       0001                            DC       s:19089,PREL

     2288    19088    7                  END;                     /* END IF DFR.USR(fPT.PRM)            */

     2289    19089    6               END;                        /* END PRM=0 TO 4                     */

  19089   2 00149C  8AC7 0117                            INC      KV@USR_EVT+1,AUTO
          2 00149E  E847 0117                            LDR,R6   KV@USR_EVT+1,AUTO
          2 0014A0  6D04                                 CMV,R6   4
          2 0014A1  0AE1                                 BALE     s:19082,SPREL

     2290    19090    5            END;                      /* END IF USREVTENB(EVT_ID_SCH) AND DFR    */

     2291    19091
     2292    19092        /* There is no message Q, so tell the VDH-user we're exiting.       */
     2293    19093        /* The user then does its cleanup, if any, and we all exit together. */
     2294    19094
     2295    19095        /*N* FLAG SHOULD INCLUDE MRD-Q'd MESSAGES                           */
     2296    19096                 %KV$CALUSR_EVT (EVT_ID = %KV_USR_EVT_ID_VDHEXT);
             19108        /* !C! */
             19109    5           IF KV_SSN.VDI$->KV$VDI.USREVTENB (14) THEN DO;

  19109   2 0014A2  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:329  
          2 0014A5  DC86                                 LDB,B5   ,B6
          2 0014A6  82C5 001F                            LB,'0200'X        31,B5
          2 0014A8       0200
          2 0014A9  0581 000A                            BBF      s:19123,PREL

             19116    5              CALL KVV$CALUSR_EVT (14);

  19116   2 0014AB  BB80 0000 0040  03                   LAB,B3   +64
          2 0014AE  CBF0 0100                            LAB,B4   256,IMO
          2 0014B0  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 0014B3       0001                            DC       s:19123,PREL

             19119    5              END;

             19121        /* ! ! */
     2297    19123    5            IF KV_SSN.RLSSSN THEN DO;

  19123   2 0014B4  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0014B7  82C6 0028                            LB,'0100'X        40,B6
          2 0014B9       0100
          2 0014BA  0581 009F                            BBF      s:19187,PREL

     2298    19124
     2299    19125        /* WE ARE TO RELEASE THIS SESSION ONCE QUIESCENCE IS ACHIEVED.      */
     2300    19126
     2301    19127    6               IF %KV_VDI.SSNCNT=1 THEN DO;

  19127   2 0014BC  DC86                                 LDB,B5   ,B6
          2 0014BD  E845 000E                            LDR,R6   14,B5
          2 0014BF  6D01                                 CMV,R6   1
          2 0014C0  0981 0084                            BNE      s:19176,PREL

     2302    19128        /*
     2303    19129
     2304    19130        This is the last session in this instance of VDI.
     2305    19131        */
     2306    19132
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:330  
     2307    19133    7                  IF NOT %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) THEN DO;

  19133   2 0014C2  82C5 001F                            LB,'0002'X        31,B5
  19133   2 0014C4       0002
          2 0014C5  0501 0094                            BBT      s:19187,PREL

     2308    19134
     2309    19135        /* We aren't waiting for the VDH-user to report %KV_VDH_EVT_ID_RLSVDI.       */
     2310    19136
     2311    19137        /*
     2312    19138           Turn the terminal on again, since the next read wont see this VDI.
     2313    19139        */
     2314    19140    7                     IF NOT %KV_VDI.PHSDSC AND NOT %KV_VDI.INTPHSDSC

  19140   2 0014C7  82C5 0019                            LB,'0040'X        25,B5
  19140   2 0014C9       0040
          2 0014CA  0501 001D                            BBT      s:19146,PREL
          2 0014CC  82C5 001D                            LB,'0800'X        29,B5
          2 0014CE       0800
          2 0014CF  0501 0018                            BBT      s:19146,PREL
          2 0014D1  82C5 0019                            LB,'0020'X        25,B5
          2 0014D3       0020
          2 0014D4  0581 0013                            BBF      s:19146,PREL

     2315    19141    8                       AND %KV_VDI.FULLDUPLEXPAPERTAPE THEN DO;

     2316    19142    8                        CALL KVO$OTP1_NONVRT (17);

  19142   2 0014D6  BB80 0000 0043  03                   LAB,B3   +67
          2 0014D9  CBF0 0100                            LAB,B4   256,IMO
          2 0014DB  E380 0000 0000  xent                 LNJ,B6   KVO$OTP1_NONVRT
          2 0014DE       0001                            DC       s:19143,PREL

     2317    19143    8                        %KV_VDI.FULLDUPLEXPAPERTAPE = '0'B;

  19143   2 0014DF  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 0014E2  DC86                                 LDB,B5   ,B6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:331  
          2 0014E3  8845 0019                            LBF,'0020'X       25,B5
          2 0014E5       0020

     2318    19144    8                        GOTO Y$CHKFORDFR;  /* Gotta VDHEXT again.                */

  19144   2 0014E6  0F81 FF74                            B        s:19064,PREL

     2319    19145    8                     END;
     2320    19146    7                     IF NOT %KV_MRD.CALUSR_PST AND NOT %KV_VDI.PHSDSC

  19146   2 0014E8  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0014EB  BCC4 0008                            LDB,B3   8,B4
          2 0014ED  82C3 000C                            LB,'0040'X        12,B3
          2 0014EF       0040
          2 0014F0  0501 002E                            BBT      s:19154,PREL
          2 0014F2  82C5 0019                            LB,'0040'X        25,B5
          2 0014F4       0040
          2 0014F5  0501 0029                            BBT      s:19154,PREL

     2321    19147    7                     THEN IF %KV_ERD.RGNSCR

  19147   2 0014F7  ACC3 0008                            LDB,B2   8,B3
          2 0014F9  82C2 0016                            LB,'0008'X        22,B2
          2 0014FB       0008
          2 0014FC  0581 0022                            BBF      s:19154,PREL

     2322    19148    8                     THEN IF %KV_MRD.USRCNT>1 OR %KV_SRD.BRDEXS THEN DO;

  19148   2 0014FE  D843 000A                            LDR,R5   10,B3
          2 001500  D570 00FF                            AND,R5   255,IMO
          2 001502  5D01                                 CMV,R5   1
          2 001503  0301 0008                            BG       s:19149,PREL
          2 001505  9CC4 000A                            LDB,B1   10,B4
          2 001507  82C1 000F                            LB,'0020'X        15,B1
          2 001509       0020
          2 00150A  0581 0014                            BBF      s:19154,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:332  
     2323    19149    8                        IF KV_SSN.LSTPRMID=1 THEN EXIT;

  19149   2 00150C  C2C6 003B                            LLH,R4   59,B6
          2 00150E  4D01                                 CMV,R4   1
          2 00150F  0901 000F                            BE       s:19154,PREL

     2324    19150    8                        KV_SSN.LSTPRMID = 1;

  19150   2 001511  3C01                                 LDV,R3   1
          2 001512  B7C6 003B                            STH,R3   59,B6

     2325    19151    8                        CALL KVO$OTPLCL (Y_OTPLCL_RSTRGNSCR);

  19151   2 001514  BB80 0000 0045  03                   LAB,B3   +69
          2 001517  CBF0 0100                            LAB,B4   256,IMO
          2 001519  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          2 00151C       0001                            DC       s:19152,PREL

     2326    19152    8                        GOTO Y$CHKFORDFR;  /* Gotta VDHEXT again.                */

  19152   2 00151D  0F81 FF3D                            B        s:19064,PREL

     2327    19153    8                     END;
     2328    19154    7                     CALL KVV$CALUSR_EVT (%KV_USR_EVT_ID_RLSVDI)

  19154   2 00151F  BB80 0000 0048  03                   LAB,B3   +72
          2 001522  CBF0 0100                            LAB,B4   256,IMO
          2 001524  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          2 001527       0015                            DC       s:19168,PREL

     2329    19155    8                     WHENRETURN DO;

     2330    19156
     2331    19157        /* The VDH-user is ready to complete the disconnect.                */
     2332    19158
     2333    19159    8                        KV_RCVSSN$ = ADDR(NIL);

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:333  
  19159   2 001528  EB80 0000 0000                       LAB,B6   0
          2 00152B  EF80 0000 0000  xsym                 STB,B6   KV_RCVSSN$

     2334    19160    8                        CALL KVC$RLSSSN;

  19160   2 00152E  CBF0 0000                            LAB,B4   0,IMO
          2 001530  E380 0000 0000  xent                 LNJ,B6   KVC$RLSSSN
          2 001533       0001                            DC       s:19161,PREL

     2335    19161    8                        CALL KVC$RLSVDI;

  19161   2 001534  CBF0 0000                            LAB,B4   0,IMO
          2 001536  E380 0000 0000  xent                 LNJ,B6   KVC$RLSVDI
          2 001539       0001                            DC       s:19162,PREL

     2336    19162    8                        EXIT Y$CHKFORDFR;

  19162   2 00153A  0F81 0070                            B        s:19204,PREL

     2337    19163    8                     END;
     2338    19164    8                     WHENALTRETURN DO;

     2339    19165
     2340    19166        /* The VDH-user isn't ready to complete the disconnect.             */
     2341    19167
     2342    19168    8                        %KV_VDI.VDHEVTENB(%KV_VDH_EVT_ID_RLSVDI) = '1'B;

  19168   2 00153C  EC80 0000 0000  xsym                 LDB,B6   KV_RCVSSN$
          2 00153F  DC86                                 LDB,B5   ,B6
          2 001540  8945 001F                            LBT,'0002'X       31,B5
          2 001542       0002

     2343    19169    8                     END;

     2344    19170    7                  END;                     /* END IF KV@VDH_EVT_ENB(RLSVDI)      */

     2345    19171    6               END;                        /* END IF KV$SSN.LNK$ = NIL           */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:334  

  19171   2 001543  0F81 0016                            B        s:19187,PREL

     2346    19172    6               ELSE DO;

     2347    19173
     2348    19174        /* This is not the last session for this instance of VDI.           */
     2349    19175
     2350    19176    6                  KV$PTR$ = KV_SSN.SNCPTR$;

  19176   2 001545  CCC6 0008                            LDB,B4   8,B6
          2 001547  CF80 0000 0000  xsym                 STB,B4   KV$PTR$

     2351    19177    6                  CALL KVC$RLSSSN;

  19177   2 00154A  CBF0 0000                            LAB,B4   0,IMO
          2 00154C  E380 0000 0000  xent                 LNJ,B6   KVC$RLSSSN
          2 00154F       0001                            DC       s:19182,PREL

     2352    19178        /*
     2353    19179           We just changed to a different session. Run through at least one more
     2354    19180           time in case there's some output needing to go.
     2355    19181        */
     2356    19182    6                  KV_RCVSSN$ = KV$PTR.SSN$;

  19182   2 001550  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 001553  DCC6 0002                            LDB,B5   2,B6
          2 001555  DF80 0000 0000  xsym                 STB,B5   KV_RCVSSN$

     2357    19183    6                  GOTO Y$CHKFORDFR;

  19183   2 001558  0F81 FF02                            B        s:19064,PREL

     2358    19184    6               END;                        /* END ELSE IF KV$SSN.LNK = NIL       */
     2359    19185    5            END;                           /* END IF RLSSSN                      */
     2360    19186
     2361    19187    4            Y@INHLVL = KH_INHLVL;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:335  

  19187   2 00155A  E800 0000 0000  xsym                 LDR,R6   KH_INHLVL
          2 00155D  EF47 003D                            STR,R6   Y@INHLVL,AUTO

     2362    19188    4            CALL KHI$DISABLE(Y@INHLVL);

  19188   2 00155F  DBC7 003D                            LAB,B5   Y@INHLVL,AUTO
          2 001561  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 001563  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001565  CBF0 0100                            LAB,B4   256,IMO
          2 001567  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00156A       0001                            DC       s:19189,PREL

     2363    19189    4            IF %KV_SSN.SSNCNCID=0 AND NOT %KV_SSN.RLSSSN OR NOT %KV_VDI.DFR

  19189   2 00156B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00156E  DCC6 0002                            LDB,B5   2,B6
          2 001570  E845 0024                            LDR,R6   36,B5
          2 001572  6981 0006                            BNEZ,R6  s:19189+14,PREL
          2 001574  82C5 0028                            LB,'0100'X        40,B5
          2 001576       0100
          2 001577  0581 000F                            BBF      s:19197,PREL
          2 001579  CC80 0000 0000  xsym                 LDB,B4   KV_RCVSSN$
          2 00157C  BC84                                 LDB,B3   ,B4
          2 00157D  82C3 0018                            LB,'F800'X        24,B3
          2 00157F       F800
          2 001580  0581 0006                            BBF      s:19197,PREL
          2 001582  82C3 001F                            LB,'0800'X        31,B3
          2 001584       0800
          2 001585  0501 001D                            BBT      s:19202,PREL

     2364    19190    5              OR NOT %KV_VDI.USREVTENB(%KV_USR_EVT_ID_SCH) THEN DO;

     2365    19191
     2366    19192        /* Either there is no deferred processing to do, or the user        */
     2367    19193        /* isn't currently allowing the reporting of deferred processing    */
     2368    19194        /* requests. No need to check for another request to do             */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:336  
     2369    19195        /* deferred processing since we last checked the defer bits above.  */
     2370    19196
     2371    19197    5               IF %KV_SSN.SSNCNCID~=0 OR %KV_SSN.RLSSSN THEN %KV_VDI.BSY = '0'B;

  19197   2 001587  6981 0006                            BNEZ,R6  s:19197+7,PREL
          2 001589  82C5 0028                            LB,'0100'X        40,B5
          2 00158B       0100
          2 00158C  0581 0008                            BBF      s:19198,PREL

  19197   2 00158E  CC80 0000 0000  xsym                 LDB,B4   KV_RCVSSN$
          2 001591  BC84                                 LDB,B3   ,B4
          2 001592  8843 0019                            LBF,'0080'X       25,B3
          2 001594       0080

     2372    19198    5               KV_RCVSSN$ = ADDR(NIL);

  19198   2 001595  DB80 0000 0000                       LAB,B5   0
          2 001598  DF80 0000 0000  xsym                 STB,B5   KV_RCVSSN$

     2373    19199    5               CALL KHI$ENABLE;

  19199   2 00159B  CBF0 0000                            LAB,B4   0,IMO
          2 00159D  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0015A0       0001                            DC       s:19200,PREL

     2374    19200    5               EXIT Y$CHKFORDFR;

  19200   2 0015A1  0F81 0009                            B        s:19204,PREL

     2375    19201    5            END;                           /* END IF KV$VDI.DFR ...              */
     2376    19202    4            CALL KHI$ENABLE;

  19202   2 0015A3  CBF0 0000                            LAB,B4   0,IMO
          2 0015A5  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0015A8       0001                            DC       s:19203,PREL

     2377    19203    4         END Y$CHKFORDFR;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:337  

  19203   2 0015A9  0F81 FEB1                            B        s:19064,PREL

     2378    19204    3         KV_RCVSSN = Y_RCVSSN;

  19204   2 0015AB  AB80 0000 0000  01                   LAB,B2   FPT_WRSYSLOG_VDOVLPBYNSIDU
          2 0015AE  2C7E                                 LDV,R2   126
          2 0015AF  6C0C                                 LDV,R6   12
          2 0015B0  BB87                                 LAB,B3   ,AUTO
          2 0015B1  3C1C                                 LDV,R3   28
          2 0015B2  0008                                 MMM

     2379    19205    3      END;                                 /* END IF KV_RCVSSN$~=NIL             */

     2380    19206    2   END Y$CLNUP_SSN;

  19206   2 0015B3  ECC7 014E                            LDB,B6   KV@VDOVLP_MRK+5,AUTO
          2 0015B5  C3C6 0001                            LNJ,B4   1,B6

     2381    19207        %KV$BOX(PAGE = YES, TITLE = "Do VDH tracing");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:338  
             19225    2   /***************************************************************************
             19226    2    *                                                                         *
             19227    2    *                               Do VDH tracing                            *
             19228    2    *                                                                         *
             19229    2    ***************************************************************************/

     2382    19234    1   Y$TRC: PROC;

  19234   2 0015B7  EFC7 0150            Y$TRC           STB,B6   KV@VDOVLP_MRK+7,AUTO

     2383    19235    3      IF Y@TRCENT = (Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) & %KV#TRCENT_MSK) THEN DO;

  19235   2 0015B9  DCC7 003A                            LDB,B5   Y@TRCBFR$,AUTO
          2 0015BB  B845 0001                            LDR,R3   1,B5
          2 0015BD  BF47 0154                            STR,R3   @ERRCOD+2,AUTO
          2 0015BF  3E02                                 ADV,R3   2
          2 0015C0  B847 0154                            LDR,R3   @ERRCOD+2,AUTO
          2 0015C2  3E02                                 ADV,R3   2
          2 0015C3  E835                                 LDR,R6   ,B5,R3
          2 0015C4  E570 7FFF                            AND,R6   32767,IMO
          2 0015C6  D847 0039                            LDR,R5   Y@TRCENT,AUTO
          2 0015C8  D956                                 CMR,R5   R6
          2 0015C9  0981 0008                            BNE      s:19248,PREL

     2384    19236        /*
     2385    19237        The last trace entry is identical to the entry we're about
     2386    19238        to put in, with the possible exception of the multiple
     2387    19239        entry bit.  Just set the multiple entry bit, and don't add
     2388    19240        another entry.
     2389    19241        */
     2390    19242    3         Y$TRCBFR.TRCENT.MLT(Y$TRCBFR.TRCENTX) = '1'B;

  19242   2 0015CB  A845 0001                            LDR,R2   1,B5
          2 0015CD  2004                                 SOL,R2   4
          2 0015CE  2E20                                 ADV,R2   32
          2 0015CF  8925                                 LBT      ,B5,R2

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:339  
     2391    19243    3      END; ELSE DO;

  19243   2 0015D0  0F81 000E                            B        s:19254,PREL

     2392    19244        /*
     2393    19245        The last entry isn't identical to the entry we're about to
     2394    19246        add.  Add another entry, possibly wrapping the index first.
     2395    19247        */
     2396    19248    3         Y$TRCBFR.TRCENTX = Y$TRCBFR.TRCENTX + 1;

  19248   2 0015D2  8AC5 0001                            INC      1,B5

     2397    19249    3         IF Y$TRCBFR.TRCENTX > Y$TRCBFR.MAXTRCENTX THEN

  19249   2 0015D4  E845 0001                            LDR,R6   1,B5
          2 0015D6  E905                                 CMR,R6   ,B5
          2 0015D7  0A81 0003                            BALE     s:19252,PREL

     2398    19250    3         Y$TRCBFR.TRCENTX = 0;

  19250   2 0015D9  8745 0001                            CL       1,B5

     2399    19251
     2400    19252    3         Y$TRCBFR.TRCENT(Y$TRCBFR.TRCENTX) = Y@TRCENT;

  19252   2 0015DB  A845 0001                            LDR,R2   1,B5
          2 0015DD  2E02                                 ADV,R2   2
          2 0015DE  DF25                                 STR,R5   ,B5,R2

     2401    19253    3      END;                                 /* END ELSE IF TRCENTX = MAXTRCENTX   */

     2402    19254    2   END Y$TRC;

  19254   2 0015DF  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 0015E1  C3C6 0001                            LNJ,B4   1,B6

     2403    19255        %KV$BOX(PAGE = YES, TITLE = "Move data to KV$FLD");
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:340  

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:341  
             19273    2   /***************************************************************************
             19274    2    *                                                                         *
             19275    2    *                            Move data to KV$FLD                          *
             19276    2    *                                                                         *
             19277    2    ***************************************************************************/

     2404    19282    1   Y$MOVDATTO_FLD: PROC;

  19282   2 0015E3  EFC7 0152            Y$MOVDATTO_FLD  STB,B6   @ERRCOD,AUTO

     2405    19283
     2406    19284    2      Y@VFC = 0;

  19284   2 0015E5  87C7 003C                            CLH      Y@VFC,AUTO

     2407    19285        /* If there is any text, move it in                                           */
     2408    19286
     2409    19287    3      IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;

  19287   2 0015E7  8DC7 002D                            CMN      KV_RCVVDO+25,AUTO
          2 0015E9  0901 0012                            BE       s:19292,PREL

     2410    19288    3         IF KV_RCVVDO.OTPLCL.BFR_.BYTSIZ>%KV_FLD.WDT

  19288   2 0015EB  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0015EE  CCC5 0014                            LDB,B4   20,B5
          2 0015F0  E2C4 0004                            LLH,R6   4,B4
          2 0015F2  E947 0030                            CMR,R6   KV_RCVVDO+28,AUTO
          2 0015F4  0281 0003                            BGE      s:19290,PREL

     2411    19289    3         THEN KV_RCVVDO.OTPLCL.BFR_.BYTSIZ = %KV_FLD.WDT;

  19289   2 0015F6  EF47 0030                            STR,R6   KV_RCVVDO+28,AUTO

     2412    19290    3         Y@VFC = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;

  19290   2 0015F8  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:342  
          2 0015FA  E7C7 003C                            STH,R6   Y@VFC,AUTO

     2413    19291    3      END;                                 /* IF                                 */

     2414    19292    3      IF %KV_FLD.TXTSIZ>0 OR Y@VFC>0 THEN DO;

  19292   2 0015FC  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0015FF  CCC5 0014                            LDB,B4   20,B5
          2 001601  82C4 0005                            LB,'00FF'X        5,B4
          2 001603       00FF
          2 001604  0501 0005                            BBT      s:19296,PREL
          2 001606  E2C7 003C                            LLH,R6   Y@VFC,AUTO
          2 001608  6901 0044                            BEZ,R6   s:19303,PREL

     2415    19293        /*
     2416    19294           Only redisplay the field if it really changed.
     2417    19295        */
     2418    19296    3         IF %KV_FLD.TXTSIZ>0 AND Y@VFC>0

  19296   2 00160A  0581 0014                            BBF      s:19298,PREL
          2 00160C  E2C7 003C                            LLH,R6   Y@VFC,AUTO
          2 00160E  6901 0010                            BEZ,R6   s:19298,PREL

     2419    19297    3         THEN IF ADDR(%KV_FLD)->Y$FLD_TXT.TXTCHR=Y$TXTCHR THEN EXIT;

  19297   2 001610  D2C4 0004                            LLH,R5   4,B4
          2 001612  C855                                 LDR,R4   R5
          2 001613  BCC7 002D                            LDB,B3   KV_RCVVDO+25,AUTO
          2 001615  D856                                 LDR,R5   R6
          2 001616  DA70 2000                            ADD,R5   8192,IMO
          2 001618  0022                                 ACM      ;
          2 001619       4004 0006                                ALPHANUM(6,B4,,R4,FILL),;
          2 00161B       4003 0000                                ALPHANUM(0,B3,,R5,FILL)
          2 00161D  5381 002F                            CBE      s:19303,PREL

     2420    19298    3         ADDR(%KV_FLD)->Y$FLD_TXT.TXTCHR = Y$TXTCHR;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:343  
  19298   2 00161F  E2C4 0004                            LLH,R6   4,B4
          2 001621  BCC7 002D                            LDB,B3   KV_RCVVDO+25,AUTO
          2 001623  C2C7 003C                            LLH,R4   Y@VFC,AUTO
          2 001625  D856                                 LDR,R5   R6
          2 001626  DA70 2000                            ADD,R5   8192,IMO
          2 001628  0021                                 ALR      ;
          2 001629       4003 0000                                ALPHANUM(0,B3,,R4),;
          2 00162B       4004 0006                                ALPHANUM(6,B4,,R5,FILL)

     2421    19299    3         IF %KV_FLD.GRPRND&%(G#GRPRND_RVRVID|G#GRPRND_UNDSCR)

  19299   2 00162D  437F                                 CSYNC    s:19298+13,SPREL
          2 00162E  ECC5 0014                            LDB,B6   20,B5
          2 001630  C846 0003                            LDR,R4   3,B6
          2 001632  4008                                 SOL,R4   8
          2 001633  C570 0900                            AND,R4   2304,IMO
          2 001635  4981 0014                            BNEZ,R4  s:19301,PREL
          2 001637  82C6 0005                            LB,'00FF'X        5,B6
          2 001639       00FF
          2 00163A  0501 000F                            BBT      s:19301,PREL
          2 00163C  CCC7 002D                            LDB,B4   KV_RCVVDO+25,AUTO
          2 00163E  C2C7 003C                            LLH,R4   Y@VFC,AUTO
          2 001640  BB80 0000 0000  03                   LAB,B3   0
          2 001643  0022                                 ACM      ;
          2 001644       4004 0000                                ALPHANUM(0,B4,,R4,FILL),;
          2 001646       4103 004A                                ALPHANUM(74,B3,,1,FILL)
          2 001648  5381 0004                            CBE      s:19303,PREL

     2422    19300    3           OR %KV_FLD.TXTSIZ>0 OR Y$TXTCHR~=' '
     2423    19301    3         THEN %KV_FLD.UPD.TXT = '1'B;

  19301   2 00164A  8946 0002                            LBT,'0040'X       2,B6
  19301   2 00164C       0040

     2424    19302    3      END;

     2425    19303    2      %KV_FLD.TXTSIZ = Y@VFC;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:344  

  19303   2 00164D  ECC5 0014                            LDB,B6   20,B5
          2 00164F  E2C7 003C                            LLH,R6   Y@VFC,AUTO
          2 001651  EAC6 0005                            SRM,R6,'00FF'X    5,B6
          2 001653       00FF

     2426    19304    2   END Y$MOVDATTO_FLD;

  19304   2 001654  ECC7 0152                            LDB,B6   @ERRCOD,AUTO
          2 001656  C3C6 0001                            LNJ,B4   1,B6

     2427    19305        %KV$BOX(PAGE = YES, TITLE = "Process KEY for FORMs virtual device");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:345  
             19323    2   /***************************************************************************
             19324    2    *                                                                         *
             19325    2    *                    Process KEY for FORMs virtual device                 *
             19326    2    *                                                                         *
             19327    2    ***************************************************************************/

     2428    19332    1   Y$SLCFLD_KEY: PROC ALTRET;

  19332   2 001658  EFC7 0150            Y$SLCFLD_KEY    STB,B6   KV@VDOVLP_MRK+7,AUTO

     2429    19333        /*
     2430    19334        Select the field specified by the KEY.
     2431    19335        If the last VDO was a SLCFLD, all currently selected fields remain
     2432    19336        selected, and the field specified by KEY is added to the list of
     2433    19337        selected fields.
     2434    19338        If the last VDO wasn't a SLCFLD, all fields are un-selected before
     2435    19339        the field specified by KEY is selected.
     2436    19340        */
     2437    19341    2      KV$PTR.VRTLIN = Y$VDOVLP_KEY.KEY(0);

  19341   2 00165A  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00165D  CCC7 0028                            LDB,B4   KV_RCVVDO+20,AUTO
          2 00165F  E2C4 0001                            LLH,R6   1,B4
          2 001661  EF45 0019                            STR,R6   25,B5

     2438    19342    2      KV$PTR.VRTCLM = Y$VDOVLP_KEY.KEY(1);

  19342   2 001663  ECC7 0028                            LDB,B6   KV_RCVVDO+20,AUTO
          2 001665  D846 0001                            LDR,R5   1,B6
          2 001667  D570 00FF                            AND,R5   255,IMO
          2 001669  DF45 001A                            STR,R5   26,B5
          2 00166B  0F81 0003                            B        s:19348,PREL

     2439    19343
     2440    19344    2   Y$SLCFLD_HVPS: ENTRY ALTRET;

  19344   2 00166D  EFC7 0150            Y$SLCFLD_HVPS   STB,B6   KV@VDOVLP_MRK+7,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:346  

     2441    19345        /*
     2442    19346        Entry for HVPS VDO, which contains line and column.
     2443    19347        */
     2444    19348    2      CALL KVF$FNDFLD;

  19348   2 00166F  CBF0 0000                            LAB,B4   0,IMO
          2 001671  E380 0000 0000  xent                 LNJ,B6   KVF$FNDFLD
          2 001674       0001                            DC       s:19349,PREL

     2445    19349    2      GOTO FLD_FND;

  19349   2 001675  0F81 0011                            B        s:19342,PREL

     2446    19350
     2447    19351    2   Y$SLCFLD_FLDID: ENTRY ALTRET;

  19351   2 001677  EFC7 0150            Y$SLCFLD_FLDID  STB,B6   KV@VDOVLP_MRK+7,AUTO

     2448    19352        /*
     2449    19353        Entry to select the field by FLDID.
     2450    19354        */
     2451    19355    2      CALL KVF$FNDFLDID (KV_VDOVLP_FLDID.FLDID);

  19355   2 001679  DCC7 0026                            LDB,B5   KV_RCVVDO+18,AUTO
          2 00167B  CBC5 0001                            LAB,B4   1,B5
          2 00167D  CFC7 0154                            STB,B4   @ERRCOD+2,AUTO
          2 00167F  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001681  CBF0 0100                            LAB,B4   256,IMO
          2 001683  E380 0000 0000  xent                 LNJ,B6   KVF$FNDFLDID
          2 001686       0001                            DC       s:19342,PREL

  19342   2                              FLD_FND         null
     2452    19356    2   FLD_FND:;
     2453    19357
     2454    19358        /* If the last function was not of the 'select' type, reset the selected
     2455    19359           status of all fields, before we begin.                                     */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:347  
     2456    19360
     2457    19361    3      IF NOT %KV_LINLST.LSTOPRSLC THEN DO;

  19361   2 001687  EC80 0000 0000  xsym FLD_FND         LDB,B6   KV$PTR$
          2 00168A  DCC6 000E                            LDB,B5   14,B6
          2 00168C  82C5 0005                            LB,'0080'X        5,B5
          2 00168E       0080
          2 00168F  0501 001F                            BBT      s:19383,PREL

     2458    19362
     2459    19363        /* If only one field is selected, zap it                                      */
     2460    19364
     2461    19365    4         IF (%KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ONE) THEN DO;

  19365   2 001691  E2C5 0005                            LLH,R6   5,B5
          2 001693  6D01                                 CMV,R6   1
          2 001694  0981 000B                            BNE      s:19374,PREL

     2462    19366    4            PINCRW(%KV_LINLST.ONEFLDLIN$->KV$LIN.FLDLST$,

  19366   2 001696  CCC5 0002                            LDB,B4   2,B5
          2 001698  B845 0004                            LDR,R3   4,B5
          2 00169A  BC84                                 LDB,B3   ,B4
          2 00169B  3004                                 SOL,R3   4
          2 00169C  3E2A                                 ADV,R3   42
          2 00169D  8833                                 LBF      ,B3,R3

     2463    19367    4              %KV_LINLST.ONEFLDWRDX)->KV$FLD.SLC = '0'B;
     2464    19368
     2465    19369        /* If all fields are selected or an unknown number of fields is selected
     2466    19370           we have to go through and reset the SLC bit of each selected field.
     2467    19371           this must be done to insure we dont leave any stray SLC bits set.          */
     2468    19372
     2469    19373    4         END;

  19373   2 00169E  0F81 0009                            B        s:19380,PREL

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:348  
     2470    19374    4         ELSE IF (%KV_LINLST.SLCFLDSTT ~= %KV_LINLST_SLCFLDSTT_NON) THEN DO;

  19374   2 0016A0  6901 0007                            BEZ,R6   s:19380,PREL

     2471    19375    4            CALL KVF$ALLFLD_RSTSLC;

  19375   2 0016A2  CBF0 0000                            LAB,B4   0,IMO
          2 0016A4  E380 0000 0000  xent                 LNJ,B6   KVF$ALLFLD_RSTSLC
          2 0016A7       0001                            DC       s:19380,PREL

     2472    19376    4         END;                              /* IF                                 */

     2473    19377
     2474    19378        /* Set selected status to none                                                */
     2475    19379
     2476    19380    3         %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;

  19380   2 0016A8  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0016AB  DCC6 000E                            LDB,B5   14,B6
          2 0016AD  87C5 0005                            CLH      5,B5

     2477    19381    3      END;                                 /* IF                                 */

     2478    19382
     2479    19383    3      IF KV$PTR.STT~=%KV_PTR_STT_IN_FLDCLM1 THEN DO;

  19383   2 0016AF  E2C6 001D                            LLH,R6   29,B6
          2 0016B1  6901 002B                            BEZ,R6   s:19429,PREL

     2480    19384    3         IF KV$PTR.STT=%KV_PTR_STT_ILGLIN

  19384   2 0016B3  6D07                                 CMV,R6   7
          2 0016B4  0901 0004                            BE       s:19393,PREL
          2 0016B6  6D06                                 CMV,R6   6
          2 0016B7  0981 0012                            BNE      s:19414,PREL

     2481    19385    4           OR KV$PTR.STT=%KV_PTR_STT_ILGCLM THEN DO;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:349  

     2482    19386                 %KV_VDOERR (COD = %E$ILGFLDPST,
     2483    19387                 VDOFNC = %KV_VDO_FNC_SLCFLD);

  19393   2 0016B9  DCC6 0004                            LDB,B5   4,B6
          2 0016BB  D845 0013                            LDR,R5   19,B5
          2 0016BD  5981 001B                            BNEZ,R5  s:19425,PREL

  19395   2 0016BF  4C19                                 LDV,R4   25
          2 0016C0  C7C5 0014                            STH,R4   20,B5

  19397   2 0016C2  DCC6 0004                            LDB,B5   4,B6
          2 0016C4  E870 0579                            LDR,R6   1401,IMO
          2 0016C6  EF45 0013                            STR,R6   19,B5

     2484    19403    4         END; ELSE DO;

  19403   2 0016C8  0F81 0010                            B        s:19425,PREL

     2485    19404        /*E* ERROR: KV-E$NO_FLD-E
     2486    19405             MESSAGE:Field has not been declared.
     2487    19406        */
     2488    19407                 %KV_VDOERR (COD = %E$NO_FLD,
     2489    19408                 VDOFNC = %KV_VDO_FNC_HVPS);

  19414   2 0016CA  DCC6 0004                            LDB,B5   4,B6
          2 0016CC  D845 0013                            LDR,R5   19,B5
          2 0016CE  5981 000A                            BNEZ,R5  s:19425,PREL

  19416   2 0016D0  4C0E                                 LDV,R4   14
          2 0016D1  C7C5 0014                            STH,R4   20,B5

  19418   2 0016D3  DCC6 0004                            LDB,B5   4,B6
          2 0016D5  E870 0578                            LDR,R6   1400,IMO
          2 0016D7  EF45 0013                            STR,R6   19,B5

     2490    19424    4         END;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:350  

     2491    19425    3         ALTRETURN;

  19425   2 0016D9  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 0016DB  B806                                 LDR,R3   ,B6
          2 0016DC  C3B6                                 LNJ,B4   ,B6,R3

     2492    19426    3      END;                                 /* IF                                 */
     2493    19427
     2494    19428        /* Setup new select status                                                    */
     2495    19429    2      %KV_FLD.SLC = '1'B;

  19429   2 0016DD  DCC6 0014                            LDB,B5   20,B6
          2 0016DF  8945 0002                            LBT,'0020'X       2,B5
          2 0016E1       0020

     2496    19430
     2497    19431        /* If no fields are selected, we now have one                                 */
     2498    19432
     2499    19433    3      IF (%KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON) THEN DO;

  19433   2 0016E2  DCC6 000E                            LDB,B5   14,B6
          2 0016E4  E2C5 0005                            LLH,R6   5,B5
          2 0016E6  6981 0012                            BNEZ,R6  s:19442,PREL

     2500    19434    3         %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ONE;

  19434   2 0016E8  5C01                                 LDV,R5   1
          2 0016E9  D7C5 0005                            STH,R5   5,B5

     2501    19435    3         %KV_LINLST.ONEFLDWRDX = KV$PTR.FLDWRDX;

  19435   2 0016EB  DCC6 000E                            LDB,B5   14,B6
          2 0016ED  E846 0018                            LDR,R6   24,B6
          2 0016EF  EF45 0004                            STR,R6   4,B5

     2502    19436    3         %KV_LINLST.ONEFLDLIN$ = KV$PTR.LIN$;
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:351  

  19436   2 0016F1  DCC6 000E                            LDB,B5   14,B6
          2 0016F3  CCC6 0010                            LDB,B4   16,B6
          2 0016F5  CFC5 0002                            STB,B4   2,B5

     2503    19437
     2504    19438        /* If one field was selected, it goes unknown (we cleared the one field
     2505    19439           select status above                                                        */
     2506    19440
     2507    19441    3      END;

  19441   2 0016F7  0F81 0007                            B        s:19449,PREL

     2508    19442    3      ELSE IF (%KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_ONE) THEN DO;

  19442   2 0016F9  6D01                                 CMV,R6   1
          2 0016FA  0981 0004                            BNE      s:19449,PREL

     2509    19443    3         %KV_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_UN_KNW;

  19443   2 0016FC  5C02                                 LDV,R5   2
          2 0016FD  D7C5 0005                            STH,R5   5,B5

     2510    19444
     2511    19445        /* Otherwise, if the old select status was unknown or all, it stays
     2512    19446           just that way                                                              */
     2513    19447
     2514    19448    3      END;                                 /* IF                                 */

     2515    19449    2   END Y$SLCFLD_KEY;

  19449   2 0016FF  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 001701  C3C6 0001                            LNJ,B4   1,B6

     2516    19450        %KV$BOX(PAGE = YES, TITLE = "ERS, RLSFLD, SLCQLF, SLCGRPRND for FORM VD");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:352  
             19468    2   /***************************************************************************
             19469    2    *                                                                         *
             19470    2    *                 ERS, RLSFLD, SLCQLF, SLCGRPRND for FORM VD              *
             19471    2    *                                                                         *
             19472    2    ***************************************************************************/

     2517    19477    1   Y$FRMVDO: PROC;

  19477   2 001703  EFC7 0150            Y$FRMVDO        STB,B6   KV@VDOVLP_MRK+7,AUTO

     2518    19478        /* If no fields are selected, report an error and exit                        */
     2519    19479
     2520    19480    2      KV@PTR.LINLST$ = KV$PTR.LINLST$;

  19480   2 001705  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 001708  CCC5 000E                            LDB,B4   14,B5
          2 00170A  CFC7 0096                            STB,B4   KV@PTR+14,AUTO

     2521    19481    2      KV@PTR.FLDWRDX = 0;

  19481   2 00170C  8747 00A0                            CL       KV@PTR+24,AUTO

     2522    19482        %EQU Y_LINLST=CHARTEXT('KV@PTR.LINLST$->KV$LINLST');
     2523    19483    3      IF (%Y_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON) THEN DO;

  19483   2 00170E  E2C4 0005                            LLH,R6   5,B4
          2 001710  6981 0017                            BNEZ,R6  s:19503,PREL

     2524    19484              %KV_VDOERR (COD = %E$NO_FLDSLC,
     2525    19485              VDOFNC = KV_VDO.FNC);

  19491   2 001712  BCC5 0004                            LDB,B3   4,B5
          2 001714  D843 0013                            LDR,R5   19,B3
          2 001716  5981 000D                            BNEZ,R5  s:19501,PREL

  19493   2 001718  AC80 0000 0000  xsym                 LDB,B2   KV_RCVVDO$
          2 00171B  C282                                 LLH,R4   ,B2
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:353  
          2 00171C  C7C3 0014                            STH,R4   20,B3

  19495   2 00171E  ECC5 0004                            LDB,B6   4,B5
          2 001720  E870 057B                            LDR,R6   1403,IMO
          2 001722  EF46 0013                            STR,R6   19,B6

     2526    19501    3         RETURN;

  19501   2 001724  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 001726  C3C6 0001                            LNJ,B4   1,B6

     2527    19502    3      END;                                 /* IF                                 */
     2528    19503    2      %Y_LINLST.LSTOPRSLC = '0'B;

  19503   2 001728  8844 0005                            LBF,'0080'X       5,B4
  19503   2 00172A       0080

     2529    19504
     2530    19505        /* Init KV@PTR.FLDWRDX to start the field scan
             19505              */
     2531    19506
     2532    19507    3      DO WHILE '1'B;

     2533    19508
     2534    19509    3         IF %Y_LINLST.SLCFLDSTT~=%KV_LINLST_SLCFLDSTT_ONE

  19509   2 00172B  ECC7 0096                            LDB,B6   KV@PTR+14,AUTO
          2 00172D  E2C6 0005                            LLH,R6   5,B6
          2 00172F  6D01                                 CMV,R6   1
          2 001730  0901 0019                            BE       s:19519,PREL

     2535    19510    3         THEN CALL KVF$NXTSLCFLD(KV@PTR)

  19510   2 001732  DBC7 0088                            LAB,B5   KV@PTR,AUTO
          2 001734  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 001736  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001738  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:354  
          2 00173A  E380 0000 0000  xent                 LNJ,B6   KVF$NXTSLCFLD
          2 00173D       0007                            DC       s:19514,PREL

     2536    19511    4         WHENRETURN DO;

     2537    19512    4            Y@TMP$ = KV@PTR.FLD$;

  19512   2 00173E  ECC7 009C                            LDB,B6   KV@PTR+20,AUTO
          2 001740  EFC7 0042                            STB,B6   Y@TMP$,AUTO

     2538    19513    4         END;

  19513   2 001742  0F81 0005                            B        s:19514+4,PREL

     2539    19514    4         WHENALTRETURN DO; RETURN; END;

  19514   2 001744  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 001746  C3C6 0001                            LNJ,B4   1,B6
          2 001748  0F81 0016                            B        s:19528,PREL

     2540    19515
     2541    19516        /* Otherwise this is a one time trip. Build a pointer to the single
     2542    19517         field in KV@PTR.FLD$
             19517         */
     2543    19518
     2544    19519    3         ELSE IF KV@PTR.FLDWRDX~=0 THEN RETURN;

  19519   2 00174A  D847 00A0                            LDR,R5   KV@PTR+24,AUTO
          2 00174C  5901 0005                            BEZ,R5   s:19521,PREL

  19519   2 00174E  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 001750  C3C6 0001                            LNJ,B4   1,B6

     2545    19520    4         ELSE DO;

     2546    19521    4            KV@PTR.FLDWRDX = %Y_LINLST.ONEFLDWRDX;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:355  
  19521   2 001752  D846 0004                            LDR,R5   4,B6
          2 001754  DF47 00A0                            STR,R5   KV@PTR+24,AUTO

     2547    19522    4            KV@PTR.LIN$ = %Y_LINLST.ONEFLDLIN$;

  19522   2 001756  DCC6 0002                            LDB,B5   2,B6
          2 001758  DFC7 0098                            STB,B5   KV@PTR+16,AUTO

     2548    19523    4            Y@TMP$ = PINCRW(KV@PTR.LIN$->KV$LIN.FLDLST$, KV@PTR.FLDWRDX);

  19523   2 00175A  CC85                                 LDB,B4   ,B5
          2 00175B  B855                                 LDR,R3   R5
          2 00175C  BBB4                                 LAB,B3   ,B4,R3
          2 00175D  BFC7 0042                            STB,B3   Y@TMP$,AUTO

     2549    19524    4         END;                              /* IF                                 */

     2550    19525
     2551    19526        /* Separate out the processing of the functions                         */
     2552    19527
     2553    19528    4         DO CASE( KV_VDO.FNC );

  19528   2 00175F  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 001762  B286                                 LLH,R3   ,B6
          2 001763  3EFB                                 ADV,R3   -5
          2 001764  3D1E                                 CMV,R3   30
          2 001765  02C6                                 BGE      s:19509,SPREL
          2 001766  A830 0000 176C  02                   LDR,R2   s:19528+13,R3
          2 001769  83A0 0000 178A  02                   JMP      s:19537,R2
          2 00176C       0130                            DC       s:19644,PREL
          2 00176D       0175                            DC       s:19683,PREL
          2 00176E       0175                            DC       s:19683,PREL
          2 00176F       0175                            DC       s:19683,PREL
          2 001770       0175                            DC       s:19683,PREL
          2 001771       0175                            DC       s:19683,PREL
          2 001772       0175                            DC       s:19683,PREL
          2 001773       0141                            DC       s:19659,PREL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:356  
          2 001774       0175                            DC       s:19683,PREL
          2 001775       0175                            DC       s:19683,PREL
          2 001776       0175                            DC       s:19683,PREL
          2 001777       0175                            DC       s:19683,PREL
          2 001778       0175                            DC       s:19683,PREL
          2 001779       0175                            DC       s:19683,PREL
          2 00177A       0175                            DC       s:19683,PREL
          2 00177B       0000                            DC       s:19537,PREL
          2 00177C       0175                            DC       s:19683,PREL
          2 00177D       0175                            DC       s:19683,PREL
          2 00177E       0175                            DC       s:19683,PREL
          2 00177F       0175                            DC       s:19683,PREL
          2 001780       0175                            DC       s:19683,PREL
          2 001781       00D7                            DC       s:19610,PREL
          2 001782       00BB                            DC       s:19589,PREL
          2 001783       0175                            DC       s:19683,PREL
          2 001784       0175                            DC       s:19683,PREL
          2 001785       0175                            DC       s:19683,PREL
          2 001786       0175                            DC       s:19683,PREL
          2 001787       0175                            DC       s:19683,PREL
          2 001788       0175                            DC       s:19683,PREL
          2 001789       0000                            DC       s:19537,PREL

     2554    19529
     2555    19530        /* RLSFLD function                                                            */
     2556    19531
     2557    19532    4         CASE %KV_VDO_FNC_RLSFLD, %KV_VDO_FNC_CLSSTR;

     2558    19533
     2559    19534        /* If all fields have been selected, deleting becomes a simple case
     2560    19535           of resetting LSTENTWRDX for all lines, since we dont give back             */
     2561    19536
     2562    19537    4            IF %Y_LINLST.SLCFLDSTT=%KV_LINLST_SLCFLDSTT_ALL

  19537   2 00178A  DCC7 0096                            LDB,B5   KV@PTR+14,AUTO
          2 00178C  E2C5 0005                            LLH,R6   5,B5
          2 00178E  6D03                                 CMV,R6   3
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:357  
          2 00178F  0981 008E                            BNE      s:19573,PREL
          2 001791  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 001794  BCC4 000A                            LDB,B3   10,B4
          2 001796  ACC4 0008                            LDB,B2   8,B4
          2 001798  D2C3 000E                            LLH,R5   14,B3
          2 00179A  5E05                                 ADV,R5   5
          2 00179B  C2C2 0015                            LLH,R4   21,B2
          2 00179D  D954                                 CMR,R5   R4
          2 00179E  0881 000B                            BAGE     s:19540,PREL
          2 0017A0  82C5 0005                            LB,'0040'X        5,B5
          2 0017A2       0040
          2 0017A3  0581 0006                            BBF      s:19540,PREL
          2 0017A5  82C2 0018                            LB,'0200'X        24,B2
          2 0017A7       0200
          2 0017A8  0581 0075                            BBF      s:19573,PREL

     2563    19538    4              AND (%KV_SRD.LNG+5>=%KV_MRD.LNG OR NOT %Y_LINLST.FRMDSP
     2564    19539    5   /*N* eh?   OR %KV_SRD.FSTDLTFLD */ OR %KV_MRD.DCLATRWHNOTP) THEN DO;

     2565    19540    5               Y@TMPWRD1 = SIZEW(KV$LINLST);

  19540   2 0017AA  1C08                                 LDV,R1   8
          2 0017AB  9F47 0040                            STR,R1   Y@TMPWRD1,AUTO

     2566    19541    6               DO UNTIL(Y@TMPWRD1 > %Y_LINLST.LSTENTWRDX);

     2567    19542    6                  Y@TMP$ = PINCRW(KV@PTR.LINLST$, Y@TMPWRD1);

  19542   2 0017AD  ECC7 0096                            LDB,B6   KV@PTR+14,AUTO
          2 0017AF  B847 0040                            LDR,R3   Y@TMPWRD1,AUTO
          2 0017B1  DBB6                                 LAB,B5   ,B6,R3
          2 0017B2  DFC7 0042                            STB,B5   Y@TMP$,AUTO

     2568    19543    6                  Y@TMP$->KV$LIN.FRMDSP = '0'B;

  19543   2 0017B4  8845 0003                            LBF,'0080'X       3,B5
  19543   2 0017B6       0080
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:358  

     2569    19544    6                  Y@TMP$->KV$LIN.UPDFLDCNT = 0;

  19544   2 0017B7  87C5 0003                            CLH      3,B5

     2570    19545    7                  IF (Y@TMP$->KV$LIN.FLDLST$ ~= ADDR(NIL)) THEN DO;

  19545   2 0017B9  8D85                                 CMN      ,B5
          2 0017BA  0901 0007                            BE       s:19549,PREL

     2571    19546    7                     Y@TMP$->KV$LIN.FLDLST$->KV$FLDLST.LSTENTWRDX = 0;

  19546   2 0017BC  EC85                                 LDB,B6   ,B5
          2 0017BD  8746 0001                            CL       1,B6

     2572    19547    7                     Y@TMP$->KV$LIN.FLDLST$->KV$FLDLST.ATRCNT = 0;

  19547   2 0017BF  EC85                                 LDB,B6   ,B5
          2 0017C0  8746 0002                            CL       2,B6

     2573    19548    7                  END;                     /* IF                                 */

     2574    19549    6                  Y@TMPWRD1 = Y@TMPWRD1 + SIZEW(KV$LIN);

  19549   2 0017C2  E847 0040                            LDR,R6   Y@TMPWRD1,AUTO
          2 0017C4  6E04                                 ADV,R6   4
          2 0017C5  EF47 0040                            STR,R6   Y@TMPWRD1,AUTO

     2575    19550    6               END;                        /* LOOP                               */

  19550   2 0017C7  ECC7 0096                            LDB,B6   KV@PTR+14,AUTO
          2 0017C9  E946 0001                            CMR,R6   1,B6
          2 0017CB  0AE2                                 BALE     s:19542,SPREL

     2576    19551
     2577    19552        /* Call the RDH to zap all the attributes on the given device.                */
     2578    19553        /*n* for now, the RDH will look at this bit and if set, it will
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:359  
     2579    19554             clear the entire screen and zap all the attributes. Eventually
     2580    19555             the RDH will only zap the attributes in the described area. This
     2581    19556             needs to work for multiple mvd's.                                        */
     2582    19557
     2583    19558    5               IF %KV_MRD.DCLATRWHNOTP AND %KV_MRD.DVCATR

  19558   2 0017CC  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0017CF  BCC4 0008                            LDB,B3   8,B4
          2 0017D1  82C3 0018                            LB,'0200'X        24,B3
          2 0017D3       0200
          2 0017D4  0581 000F                            BBF      s:19560,PREL
          2 0017D6  D2C3 001F                            LLH,R5   31,B3
          2 0017D8  5008                                 SOL,R5   8
          2 0017D9  5901 000A                            BEZ,R5   s:19560,PREL

     2584    19559    5               THEN CALL KVV$CALUSR (KV_USR_SETATR);

  19559   2 0017DB  BB80 0000 004B  03                   LAB,B3   +75
          2 0017DE  CBF0 0100                            LAB,B4   256,IMO
          2 0017E0  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          2 0017E3       0001                            DC       s:19560,PREL

     2585    19560    5               IF %Y_LINLST.FRMDSP

  19560   2 0017E4  ECC7 0096                            LDB,B6   KV@PTR+14,AUTO
          2 0017E6  82C6 0005                            LB,'0040'X        5,B6
          2 0017E8       0040
          2 0017E9  0581 001E                            BBF      s:19564,PREL

     2586    19561    5               THEN IF %KV_SRD.LNG+5>=%KV_MRD.LNG

  19561   2 0017EB  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0017EE  CCC5 000A                            LDB,B4   10,B5
          2 0017F0  BCC5 0008                            LDB,B3   8,B5
          2 0017F2  E2C4 000E                            LLH,R6   14,B4
          2 0017F4  6E05                                 ADV,R6   5
          2 0017F5  D2C3 0015                            LLH,R5   21,B3
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:360  
          2 0017F7  E955                                 CMR,R6   R5
          2 0017F8  0801 0009                            BAL      s:19563,PREL

     2587    19562    5               THEN CALL KVO$ERSMRD;

  19562   2 0017FA  CBF0 0000                            LAB,B4   0,IMO
          2 0017FC  E380 0000 0000  xent                 LNJ,B6   KVO$ERSMRD
          2 0017FF       0001                            DC       s:19562+6,PREL
          2 001800  0F81 0007                            B        s:19564,PREL

     2588    19563    5               ELSE CALL KVO$ERSSRD;

  19563   2 001802  CBF0 0000                            LAB,B4   0,IMO
          2 001804  E380 0000 0000  xent                 LNJ,B6   KVO$ERSSRD
          2 001807       0001                            DC       s:19564,PREL

     2589    19564    5               %Y_LINLST.FRMDSP = '0'B;

  19564   2 001808  ECC7 0096                            LDB,B6   KV@PTR+14,AUTO
          2 00180A  8846 0005                            LBF,'0040'X       5,B6
          2 00180C       0040

     2590    19565    5               %Y_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;

  19565   2 00180D  ECC7 0096                            LDB,B6   KV@PTR+14,AUTO
          2 00180F  87C6 0005                            CLH      5,B6

     2591    19566    5               %KV_SRD.NXTNONBLNLIN = 255;

  19566   2 001811  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 001814  DCC6 000A                            LDB,B5   10,B6
          2 001816  E870 00FF                            LDR,R6   255,IMO
          2 001818  EF45 0014                            STR,R6   20,B5

     2592    19567    5               RETURN;

  19567   2 00181A  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:361  
          2 00181C  C3C6 0001                            LNJ,B4   1,B6

     2593    19568
     2594    19569        /* Otherwise, we have a single field to zap, setup KV$PTR to point to
     2595    19570           it and call the delete routine                                             */
     2596    19571
     2597    19572    5            END; ELSE DO;

     2598    19573    5               Y@TMP$->KV$FLD.QLF = '0'B;

  19573   2 00181E  CCC7 0042                            LDB,B4   Y@TMP$,AUTO
          2 001820  87C4 0003                            CLH      3,B4

     2599    19574    5               Y@TMP$->KV$FLD.GRPRND = '0'B;

  19574   2 001822  8844 0003                            LBF,'00FF'X       3,B4
  19574   2 001824       00FF

     2600    19575    5               Y@TMP$->KV$FLD.NEW = '1'B;  /* Kina misnomer in this case.        */

  19575   2 001825  8944 0002                            LBT,'0002'X       2,B4
  19575   2 001827       0002

     2601    19576    5               Y@TMP$->KV$FLD.INP = '0'B;  /* Now marked for deletion            */

  19576   2 001828  8844 0002                            LBF,'0010'X       2,B4
  19576   2 00182A       0010

     2602    19577    5               Y@TMP$->KV$FLD.UPD = '11'B; /* Make sure it happens               */

  19577   2 00182B  8944 0002                            LBT,'00C0'X       2,B4
  19577   2 00182D       00C0

     2603    19578    5               Y@TMP$->KV$FLD.TXTSIZ = 0;

  19578   2 00182E  8844 0005                            LBF,'00FF'X       5,B4
  19578   2 001830       00FF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:362  

     2604    19579    5               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;

  19579   2 001831  DCC7 0098                            LDB,B5   KV@PTR+16,AUTO
          2 001833  8945 0003                            LBT,'FF00'X       3,B5
          2 001835       FF00

     2605    19580    5               IF %Y_LINLST.SLCFLDSTT~=%KV_LINLST_SLCFLDSTT_ONE THEN EXIT;

  19580   2 001836  DCC7 0096                            LDB,B5   KV@PTR+14,AUTO
          2 001838  E2C5 0005                            LLH,R6   5,B5
          2 00183A  6D01                                 CMV,R6   1
          2 00183B  0981 0007                            BNE      s:19582+4,PREL

     2606    19581    5               %Y_LINLST.SLCFLDSTT = %KV_LINLST_SLCFLDSTT_NON;

  19581   2 00183D  87C5 0005                            CLH      5,B5

     2607    19582    5               RETURN;                     /* All done if only one field.        */

  19582   2 00183F  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 001841  C3C6 0001                            LNJ,B4   1,B6
          2 001843  0F81 FEE7                            B        s:19509,PREL

     2608    19583    5            END;                           /* IF                                 */
     2609    19584
     2610    19585        /* SLCQLF function                                                            */
     2611    19586
     2612    19587    4         CASE %KV_VDO_FNC_SLCQLF;

     2613    19588
     2614    19589    4            Y@TMP$->KV$FLD.QLF = KV_VDO_SLCQLF.QLF;

  19589   2 001845  E2C6 0001                            LLH,R6   1,B6
          2 001847  6008                                 SOL,R6   8
          2 001848  6048                                 SOR,R6   8
          2 001849  DCC7 0042                            LDB,B5   Y@TMP$,AUTO
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:363  
          2 00184B  E7C5 0003                            STH,R6   3,B5

     2615    19590
     2616    19591        /* Recompute INPut-ness. */
     2617    19592
     2618    19593    4            IF Y@TMP$->KV$FLD.QLF&%(G#QLF_PRT| G#QLF_PRTGRD| G#QLF_CNS)

  19593   2 00184D  E2C5 0003                            LLH,R6   3,B5
          2 00184F  6008                                 SOL,R6   8
          2 001850  E570 4500                            AND,R6   17664,IMO
          2 001852  6901 0006                            BEZ,R6   s:19596,PREL

     2619    19594    4            THEN Y@TMP$->KV$FLD.INP = '0'B;

  19594   2 001854  8845 0002                            LBF,'0010'X       2,B5
  19594   2 001856       0010
          2 001857  0F81 0007                            B        s:19602,PREL

     2620    19595    5            ELSE DO;

     2621    19596    5               Y@TMP$->KV$FLD.INP = '1'B;

  19596   2 001859  8945 0002                            LBT,'0010'X       2,B5
  19596   2 00185B       0010

     2622    19597    5               Y@TMP$->KV$FLD.QLF.PRT = '1'B;

  19597   2 00185C  8945 0003                            LBT,'0400'X       3,B5
  19597   2 00185E       0400

     2623    19598    5            END;

     2624    19599
     2625    19600        /* Set attribute updated                                                      */
     2626    19601
     2627    19602    4            GOTO SET_ATR_UPD;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:364  
  19602   2 00185F  0F81 0025                            B        s:19621,PREL

     2628    19603
     2629    19604        /* SLCGRPRND function                                                         */
     2630    19605
     2631    19606    4         CASE %KV_VDO_FNC_SLCGRPRND;

     2632    19607
     2633    19608        /* Setup graphic rendition. First check for abstracted rendition              */
     2634    19609
     2635    19610    5            IF KV_VDO_SLCGRPRND.GRPRND.ABS THEN DO;

  19610   2 001861  89C6 0001                            CMZ      1,B6
          2 001863  0881 0018                            BAGE     s:19620,PREL

     2636    19611
     2637    19612        /* Move in the abstracted rendition, if its legal                             */
     2638    19613
     2639    19614    5               Y@TMP$->KV$FLD.GRPRND =

  19614   2 001865  E2C6 0001                            LLH,R6   1,B6
          2 001867  6008                                 SOL,R6   8
          2 001868  E570 0700                            AND,R6   1792,IMO
          2 00186A  6048                                 SOR,R6   8
          2 00186B  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00186E  CCC5 0008                            LDB,B4   8,B5
          2 001870  9856                                 LDR,R1   R6
          2 001871  1E32                                 ADV,R1   50
          2 001872  E294                                 LLH,R6   ,B4,R1
          2 001873  6008                                 SOL,R6   8
          2 001874  6048                                 SOR,R6   8
          2 001875  BCC7 0042                            LDB,B3   Y@TMP$,AUTO
          2 001877  EAC3 0003                            SRM,R6,'00FF'X    3,B3
          2 001879       00FF

     2640    19615    5                 %KV_MRD.ABSGRPRND(BITBIN(KV_VDO_SLCGRPRND.GRPRND&'07'X));
     2641    19616
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:365  
     2642    19617        /* Otherwise, just move in the bits specified in SLCGRPRND function
             19617        */
     2643    19618
     2644    19619    5            END; ELSE DO;

  19619   2 00187A  0F81 000A                            B        s:19621,PREL

     2645    19620    5               Y@TMP$->KV$FLD.GRPRND = KV_VDO_SLCGRPRND.GRPRND;

  19620   2 00187C  E2C6 0001                            LLH,R6   1,B6
          2 00187E  6008                                 SOL,R6   8
          2 00187F  6048                                 SOR,R6   8
          2 001880  DCC7 0042                            LDB,B5   Y@TMP$,AUTO
          2 001882  EAC5 0003                            SRM,R6,'00FF'X    3,B5
          2 001884       00FF

     2646    19621    5            END;                           /* IF                                 */

  19610   2                              SET_ATR_UPD     null
     2647    19622
     2648    19623        /* Set attribute updated                                                      */
     2649    19624
     2650    19625    4   SET_ATR_UPD:;
     2651    19626    5            IF %KV_MVD.RETYPOVR THEN DO;

  19626   2 001885  DC80 0000 0000  xsym SET_ATR_UPD     LDB,B5   KV$PTR$
          2 001888  CCC5 0006                            LDB,B4   6,B5
          2 00188A  82C4 0016                            LB,'0080'X        22,B4
          2 00188C       0080
          2 00188D  0581 001F                            BBF      s:19633,PREL

     2652    19627    5               Y@TMP$->KV$FLD.UPD.ATR = '1'B;

  19627   2 00188F  BCC7 0042                            LDB,B3   Y@TMP$,AUTO
          2 001891  8943 0002                            LBT,'0080'X       2,B3
          2 001893       0080

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:366  
     2653    19628    5               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;

  19628   2 001894  CCC7 0098                            LDB,B4   KV@PTR+16,AUTO
          2 001896  8944 0003                            LBT,'FF00'X       3,B4
          2 001898       FF00

     2654    19629    5               IF Y@TMP$->KV$FLD.TXTSIZ>0

  19629   2 001899  82C3 0005                            LB,'00FF'X        5,B3
  19629   2 00189B       00FF
          2 00189C  0581 0010                            BBF      s:19633,PREL
          2 00189E  CCC5 0008                            LDB,B4   8,B5
          2 0018A0  82C4 0018                            LB,'0200'X        24,B4
          2 0018A2       0200
          2 0018A3  0501 0006                            BBT      s:19631,PREL
          2 0018A5  82C4 0016                            LB,'0040'X        22,B4
          2 0018A7       0040
          2 0018A8  0581 0004                            BBF      s:19633,PREL

     2655    19630    5                 AND (%KV_MRD.DCLATRWHNOTP OR %KV_MRD.SMLHDNATR)
     2656    19631    5               THEN Y@TMP$->KV$FLD.UPD.TXT = '1'B;

  19631   2 0018AA  8943 0002                            LBT,'0040'X       2,B3
  19631   2 0018AC       0040

     2657    19632    5            END;                           /* IF                                 */

     2658    19633    5            IF KV_RCVVDO.OTPLCL.BFR_.ADR$~=ADDR(NIL) THEN DO;

  19633   2 0018AD  8DC7 002D                            CMN      KV_RCVVDO+25,AUTO
          2 0018AF  0901 FE7B                            BE       s:19509,PREL

     2659    19634    5               KV$PTR.FLD$ = Y@TMP$;

  19634   2 0018B1  CCC7 0042                            LDB,B4   Y@TMP$,AUTO
          2 0018B3  CFC5 0014                            STB,B4   20,B5

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:367  
     2660    19635    5               CALL Y$MOVDATTO_FLD;

  19635   2 0018B5  E3C0 FD2D                            LNJ,B6   s:0,PREL
          2 0018B7       0001                            DC       s:19636,PREL

     2661    19636    5            END;

  19636   2 0018B8  0F81 FE72                            B        s:19509,PREL

     2662    19637
     2663    19638        /* DAT function                                                               */
     2664    19639
     2665    19640    4         CASE %KV_VDO_FNC_DAT;

     2666    19641
     2667    19642        /* Update the selected fields with the data                                   */
     2668    19643
     2669    19644    4            KV$PTR.FLD$ = Y@TMP$;

  19644   2 0018BA  DCC7 0042                            LDB,B5   Y@TMP$,AUTO
          2 0018BC  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 0018BF  DFC4 0014                            STB,B5   20,B4

     2670    19645    4            CALL Y$MOVDATTO_FLD;

  19645   2 0018C1  E3C0 FD21                            LNJ,B6   s:0,PREL
          2 0018C3       0001                            DC       s:19646,PREL

     2671    19646    4            KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;

  19646   2 0018C4  ECC7 0098                            LDB,B6   KV@PTR+16,AUTO
          2 0018C6  8946 0003                            LBT,'FF00'X       3,B6
          2 0018C8       FF00
          2 0018C9  0F81 FE61                            B        s:19509,PREL

     2672    19647
     2673    19648        /* ERS function                                                               */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:368  
     2674    19649
     2675    19650    4         CASE %KV_VDO_FNC_ERS;

     2676    19651
     2677    19652        /* We know that this field has been selected. Lets make sure that
     2678    19653           it also falls within the catagory specified by the ERS function            */
     2679    19654
     2680    19655
     2681    19656        /* If the field is protected, make sure we are erasing protected
     2682    19657           fields                                                                     */
     2683    19658
     2684    19659    4            IF Y@TMP$->KV$FLD.QLF.PRT

  19659   2 0018CB  DCC7 0042                            LDB,B5   Y@TMP$,AUTO
          2 0018CD  82C5 0003                            LB,'0400'X        3,B5
          2 0018CF       0400
          2 0018D0  0581 000A                            BBF      s:19659+16,PREL
          2 0018D2  82C5 0002                            LB,'0010'X        2,B5
          2 0018D4       0010
          2 0018D5  0501 0005                            BBT      s:19659+16,PREL
          2 0018D7  89C6 0001                            CMZ      1,B6
          2 0018D9  0881 0025                            BAGE     s:19683,PREL
          2 0018DB  82C5 0003                            LB,'0100'X        3,B5
          2 0018DD       0100
          2 0018DE  0581 0006                            BBF      s:19671,PREL
          2 0018E0  82C6 0001                            LB,'4000'X        1,B6
          2 0018E2       4000
          2 0018E3  0581 001B                            BBF      s:19683,PREL

     2685    19660    4              AND NOT Y@TMP$->KV$FLD.INP
     2686    19661    4              AND NOT KV_VDO_ERS.PRT
     2687    19662
     2688    19663        /* If the field is constant, make sure we are erasing constant
     2689    19664           fields                                                                     */
     2690    19665
     2691    19666    4              OR Y@TMP$->KV$FLD.QLF.CNS
     2692    19667    4              AND NOT KV_VDO_ERS.CNS THEN EXIT; /* CASE                          */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:369  
     2693    19668
     2694    19669        /* Either the right bits are set, or the field is unprotected                 */
     2695    19670
     2696    19671    5            IF Y@TMP$->KV$FLD.TXTSIZ > 0 THEN DO;

  19671   2 0018E5  82C5 0005                            LB,'00FF'X        5,B5
  19671   2 0018E7       00FF
          2 0018E8  0581 0013                            BBF      s:19681,PREL

     2697    19672
     2698    19673        /* If there was something there
     2699    19674           kill any visible attributes too                                            */
     2700    19675
     2701    19676    5               IF Y@TMP$->KV$FLD.GRPRND&%(G#GRPRND_UNDSCR|G#GRPRND_RVRVID)

  19676   2 0018EA  E845 0003                            LDR,R6   3,B5
          2 0018EC  6008                                 SOL,R6   8
          2 0018ED  E570 0900                            AND,R6   2304,IMO
          2 0018EF  6901 0004                            BEZ,R6   s:19678,PREL

     2702    19677    5               THEN Y@TMP$->KV$FLD.UPD.ATR = '1'B;

  19677   2 0018F1  8945 0002                            LBT,'0080'X       2,B5
  19677   2 0018F3       0080

     2703    19678    5               KV@PTR.LIN$->KV$LIN.UPDFLDCNT = 255;

  19678   2 0018F4  CCC7 0098                            LDB,B4   KV@PTR+16,AUTO
          2 0018F6  8944 0003                            LBT,'FF00'X       3,B4
          2 0018F8       FF00

     2704    19679    5               Y@TMP$->KV$FLD.UPD.TXT = '1'B;

  19679   2 0018F9  8945 0002                            LBT,'0040'X       2,B5
  19679   2 0018FB       0040

     2705    19680    5            END;                           /* IF                                 */
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:370  

     2706    19681    4            Y@TMP$->KV$FLD.TXTSIZ = 0;

  19681   2 0018FC  8845 0005                            LBF,'00FF'X       5,B5
  19681   2 0018FE       00FF

     2707    19682    4         END;                              /* CASE                               */

     2708    19683    3      END;                                 /* WHILE '1'B                         */

  19683   2 0018FF  0F81 FE2B                            B        s:19509,PREL

     2709    19684    2   END Y$FRMVDO;
     2710    19685        %KV$BOX(PAGE = YES, TITLE = "Call VDH-user with KV$USR_DAT");

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:371  
             19703    2   /***************************************************************************
             19704    2    *                                                                         *
             19705    2    *                       Call VDH-user with KV$USR_DAT                     *
             19706    2    *                                                                         *
             19707    2    ***************************************************************************/

     2711    19712    1   Y$USR_DAT: PROC;

  19712   2 001901  EFC7 0150            Y$USR_DAT       STB,B6   KV@VDOVLP_MRK+7,AUTO

     2712    19713
     2713    19714        /* Call the VDH-user with KV@USR_DAT.                               */
     2714    19715
     2715    19716        %KV$CHNPHSPSTMOD;
             19729    3                 IF KV_SSN.VDI$->KV$VDI.OTPCNDPND.PST ~= 0 THEN DO;

  19729   2 001903  DC80 0000 0000  xsym                 LDB,B5   KV_RCVSSN$
          2 001906  CC85                                 LDB,B4   ,B5
          2 001907  E844 001A                            LDR,R6   26,B4
          2 001909  6901 0007                            BEZ,R6   s:19740,PREL

             19732    3                    CALL KVV$CALUSR_PST;

  19732   2 00190B  CBF0 0000                            LAB,B4   0,IMO
          2 00190D  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_PST
          2 001910       0001                            DC       s:19740,PREL

             19733    3                    END;

     2716    19740    2      KV@USR_DAT = KV_USR_DAT;

  19740   2 001911  AB80 0000 0000  xsym                 LAB,B2   KV_USR_DAT
          2 001914  2C00                                 LDV,R2   0
          2 001915  6C10                                 LDV,R6   16
          2 001916  BBC7 010E                            LAB,B3   KV@USR_DAT,AUTO
          2 001918  3C00                                 LDV,R3   0
          2 001919  0008                                 MMM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:372  

     2717    19741    3      IF KV_RCVVDO.OTPLCL.BFR_.ADR$ ~= ADDR(NIL) THEN DO;

  19741   2 00191A  8DC7 002D                            CMN      KV_RCVVDO+25,AUTO
          2 00191C  0901 0009                            BE       s:19745,PREL

     2718    19742    3         KV@USR_DAT.DAT__.ADR$ = KV_RCVVDO.OTPLCL.BFR_.ADR$;

  19742   2 00191E  ECC7 002D                            LDB,B6   KV_RCVVDO+25,AUTO
          2 001920  EFC7 010F                            STB,B6   KV@USR_DAT+1,AUTO

     2719    19743    3         KV@USR_DAT.DAT__.DATBYTSIZ = KV_RCVVDO.OTPLCL.BFR_.BYTSIZ;

  19743   2 001922  E847 0030                            LDR,R6   KV_RCVVDO+28,AUTO
          2 001924  EF47 0112                            STR,R6   KV@USR_DAT+4,AUTO

     2720    19744    3      END;                                 /* END DO DAT$ ~= NIL                 */

     2721    19745    2      IF KV_VDO_DAT.DATCTRCHRTYP = %KV_DATCTRCHRTYP_VFC THEN

  19745   2 001926  EC80 0000 0000  xsym                 LDB,B6   KV_RCVVDO$
          2 001929  E846 0001                            LDR,R6   1,B6
          2 00192B  604A                                 SOR,R6   10
          2 00192C  E570 0003                            AND,R6   3,IMO
          2 00192E  6D02                                 CMV,R6   2
          2 00192F  0981 0006                            BNE      s:19747,PREL

     2722    19746    2      KV@USR_DAT.DATCTRCHR = KV_VDO_DAT.DATCTRCHR;

  19746   2 001931  D846 0001                            LDR,R5   1,B6
          2 001933  DAC7 0115                            SRM,R5,'00FF'X    KV@USR_DAT+7,AUTO
          2 001935       00FF

     2723    19747    2      KV@USR_DAT.DATCTRCHRTYP = KV_VDO_DAT.DATCTRCHRTYP;

  19747   2 001936  E846 0001                            LDR,R6   1,B6
          2 001938  6046                                 SOR,R6   6
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:373  
          2 001939  EAC7 010E                            SRM,R6,'0030'X    KV@USR_DAT,AUTO
          2 00193B       0030

     2724    19748    2      KV@USR_DAT.DATMOD = KV_VDO_DAT.DATMOD;

  19748   2 00193C  E846 0001                            LDR,R6   1,B6
          2 00193E  6046                                 SOR,R6   6
          2 00193F  EAC7 010E                            SRM,R6,'000C'X    KV@USR_DAT,AUTO
          2 001941       000C

     2725    19749    2      CALL KVV$CALUSR(KV@USR_DAT);

  19749   2 001942  DBC7 010E                            LAB,B5   KV@USR_DAT,AUTO
          2 001944  DFC7 0154                            STB,B5   @ERRCOD+2,AUTO
          2 001946  BBC7 0154                            LAB,B3   @ERRCOD+2,AUTO
          2 001948  CBF0 0100                            LAB,B4   256,IMO
          2 00194A  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          2 00194D       0001                            DC       s:19750,PREL

     2726    19750    2   END Y$USR_DAT;

  19750   2 00194E  ECC7 0150                            LDB,B6   KV@VDOVLP_MRK+7,AUTO
          2 001950  C3C6 0001                            LNJ,B4   1,B6
     2727    19751    1   END KVM$RCV;

PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:374  
--  Include file information  --

   KV$VDP.:E05TOU  is referenced.
   KV$SP.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   KV_GLB.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   KV_SCODE_C.:E05TOU  is referenced.
   KV_ERRORS_C.:E05TOU  is referenced.
   KV_ERD_E.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KV_INT.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   K_CP6_M.:E05TOU  is referenced.
   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:375  
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KVM$RCV.
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:376  

 **** Variables and constants ****

  ****  Section 000  Data  KVM$RCV

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(96)    r     1 KH_EXP                     6-0-0/w STRC(176)   r     1 Y@CLK
    11-0-0/w STRC(64)    r     1 Y_USR_OTPMRK_ACK          15-0-0/w STRC(64)    r     1 Y_USR_OTPMRK_MRK
    19-0-0/w STRC(64)    r     1 Y_USR_OTPMRK_SAVLSTRCRID
    1D-0-0/w STRC(64)    r     1 Y_USR_OTPMRK_SNDLSTRCRID
    21-0-0/w STRC(128)   r     1 Y_VDH_SETPRM              29-0-0/w STRC(48)    r     1 Y_VDOVLP_ERR
    2C-0-0/w STRC(32)    r     1 Y_VDOVLP_FLDID

  ****  Section 001 RoData KVM$RCV

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    2A-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_BADVDOFNCCOD
    15-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_BADVDOVLPFNCCOD
     0-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_VDOVLPBYNSIDU
    89-0-0/w STRC(48)    r     1 KVM_BADLDCT               84-0-0/w STRC(80)    r     1 Y_OTPLCL_RSTRGNSCR
    82-0-0/c CHAR(3)     r     1 Y_OTPLCL_RSTRGNSCR_TEXT
    3F-0-0/w STRC(96)    r     1 Y_RCVSSN                  45-0-0/w STRC(544)   r     1 Y_RCVVDO
    67-0-0/w STRC(368)   r     1 Y_SND_DAT                 7E-0-0/w STRC(16)    r     1 Y_TRCENT_RCVSSN
    7F-0-0/w STRC(16)    r     1 Y_TRCENT_RCVVDO           80-0-0/w STRC(32)    r     1 Y_VDH_DSC_TIMOUT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

   152-0-0/w PTR         r     1 @ERRCOD                   *0-0-0/w UBIN(16)    r     1 ERRCOD
    48-0-0/w STRC(512)   r     1 KV@MRD                    68-0-0/w STRC(512)   r     1 KV@MVD
    88-0-0/w STRC(480)   r     1 KV@PTR                    A6-0-0/w STRC(544)   r     1 KV@SND_CNC
    C8-0-0/w STRC(272)   r     1 KV@SND_MRK                D9-0-0/w STRC(352)   r     1 KV@SND_PRM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:377  
    EF-0-0/w STRC(496)   r     1 KV@SRD                   10E-0-0/w STRC(128)   r     1 KV@USR_DAT
   116-0-0/w STRC(32)    r     1 KV@USR_EVT               118-0-0/w STRC(96)    r     1 KV@USR_RQSDAT
   11E-0-0/w STRC(400)   r     1 KV@VDH_CNC               137-0-0/w STRC(128)   r     1 KV@VDH_DAT
   13F-0-0/w STRC(160)   r     1 KV@VDH_GETPRM            149-0-0/w STRC(64)    r     1 KV@VDOVLP_MRK
     E-0-0/w STRC(96)    r     1 KV_RCVSSN                 14-0-0/w STRC(544)   r     1 KV_RCVVDO
    45-0-0/w EPTR        r     1 Y@CQ_HNDSBR$              44-0-0/w SBIN(16)    r     1 Y@FLDWRDSIZ
     A-0-0/w PTR         r     1 Y@FPT$                    3D-0-0/w UBIN(16)    r     1 Y@INHLVL
     7-0-0/w UBIN(16)    r     1 Y@MY_RPTR                 36-0-0/w PTR         r     1 Y@NXTVDOVLP$
     6-0-0/w UBIN(16)    r     1 Y@NXT_RPTR                47-0-0/w UBIN(16)    r     1 Y@PRVSTRWRDSIZ
    38-0-0/w UBIN(16)    r     1 Y@PRVVRTLINPHSLIN          4-0-0/w PTR         r     1 Y@SICI$
     8-0-0/w PTR         r     1 Y@SIDU_END$                6-0-0/w SBIN(16)    r     1 Y@SIDU_WRDSIZ
    3E-0-0/w UBIN(16)    r     1 Y@SNDMAXNMBBYT            3F-0-0/w UBIN(16)    r     1 Y@SNDMAXNMBRCR
     C-0-0/w PTR         r     1 Y@SP_MSG$                 42-0-0/w PTR         r     1 Y@TMP$
    40-0-0/w SBIN(16)    r     1 Y@TMPWRD1                 40-0-0/w UBIN(16)    r     1 Y@TMPWRD1U
    41-0-0/w SBIN(16)    r     1 Y@TMPWRD2                 3A-0-0/w PTR         r     1 Y@TRCBFR$
    39-0-0/w STRC(16)    r     1 Y@TRCENT                  3C-0-0/w UBIN(8)     r     1 Y@VFC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$HAND_Q$                  0-0-0/w UBIN(16)    r     1 KH_INHLVL
     0-0-0/w STRC(2)     r     1 KN_SP_MSG(0:7)
     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w PTR         r     1 KV$RCVSSN$
     0-0-0/w PTR         r     1 KV$RCVVDO$
     0-0-0/w EPTR        r     1 KV_CQ_HNDSBR$(0:2)
     0-0-0/w STRC(104)   r     1 KV_FLD                     0-0-0/w STRC(512)   r     1 KV_MVD
     0-0-0/w PTR         r     1 KV_RCVCQ$                  0-0-0/w PTR         r     1 KV_RCVSSN$
     0-0-0/w PTR         r     1 KV_RCVVDO$                 0-0-0/w STRC(240)   r     1 KV_SND_CMPDSCSSN
     0-0-0/w STRC(544)   r     1 KV_SND_CNC                 0-0-0/w STRC(272)   r     1 KV_SND_MRK
     0-0-0/w STRC(352)   r     1 KV_SND_PRM                 0-0-0/w STRC(240)   r     1 KV_SND_RQSDAT_GNR
     0-0-0/w STRC(2)     r     1 KV_SP_MSG(0:7)
     0-0-0/w STRC(496)   r     1 KV_SRD                     0-0-0/w STRC(128)   r     1 KV_USR_DAT
     0-0-0/w STRC(32)    r     1 KV_USR_EVT                 0-0-0/w STRC(96)    r     1 KV_USR_RQSDAT
     0-0-0/w UBIN(16)    r     1 KV_USR_SETATR              0-0-0/w STRC(400)   r     1 KV_VDH_CNC
     0-0-0/w STRC(128)   r     1 KV_VDH_DAT                 0-0-0/w STRC(128)   r     1 KV_VDH_DAT_CLS
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:378  
     0-0-0/w STRC(128)   r     1 KV_VDH_DAT_TIMOUT          0-0-0/w STRC(32)    r     1 KV_VDH_DSC
     0-0-0/w STRC(160)   r     1 KV_VDH_GETPRM
     0-0-0/w STRC(64)    r     1 KV_VDH_PST_NEWLIN_VRT
     0-0-0/w STRC(64)    r     1 KV_VDH_PST_VRT
     0-0-0/w STRC(32)    r     1 KV_VDP_VDO(0:0)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(96)    r     1 FPT_CONNECT_ACK            0-0-0/w STRC(64)    r     1 FPT_TERM
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/c STRC(128)   r     1 KNH_MESS
     0-0-0/w STRC(384)   r     1 KNH_QHDR                   0-0-0/w STRC(728)   r     1 KV$ERD
     0-0-0/w STRC(104)   r     1 KV$FLD                     0-0-0/w STRC(48)    r     1 KV$FLDLST
     0-0-0/w STRC(128)   r     1 KV$GETPRM                  0-0-0/w STRC(16)    r     1 KV$INPOPR
     0-0-0/w ACHR        r     1 KV$INPOPR_DUMMY            0-0-0/w ASTR(24)    r     1 KV$INPOPR_TXT
     0-0-0/w STRC(64)    r     1 KV$LIN                     0-0-0/w STRC(128)   r     1 KV$LINLST
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(2)     r     1 KV$SP_MSG
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(8960)  r     1 KV$STT
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(1024)  r     1 KV_SSN                     0-0-0/w STRC(16)    r     1 KV_VDO
     0-0-0/w STRC(16)    r     1 KV_VDOVLP                  0-0-0/w STRC(96)    r     1 KV_VDOVLP_CG_MSGID
     0-0-0/w STRC(96)    r     1 KV_VDOVLP_CG_MSGTYP        0-0-0/w STRC(96)    r     1 KV_VDOVLP_CG_STA
     0-0-0/w ASTR(16)    r     1 KV_VDOVLP_DAT1             0-0-0/w ASTR(32)    r     1 KV_VDOVLP_DAT2
     0-0-0/w ASTR(16)    r     1 KV_VDOVLP_ENTSRD           0-0-0/w STRC(48)    r     1 KV_VDOVLP_ERR
     0-0-0/w STRC(32)    r     1 KV_VDOVLP_FLDID            0-0-0/w ASTR(16)    r     1 KV_VDOVLP_KEY
     0-0-0/w STRC(64)    r     1 KV_VDOVLP_MRK              0-0-0/w STRC(48)    r     1 KV_VDO_BLKDAT
     0-0-0/w STRC(32)    r     1 KV_VDO_CLSSSN              0-0-0/w STRC(32)    r     1 KV_VDO_CLSSTR
     0-0-0/w STRC(32)    r     1 KV_VDO_DAT                 0-0-0/w STRC(96)    r     1 KV_VDO_DCLFLD
     0-0-0/w STRC(32)    r     1 KV_VDO_DCLSTR              0-0-0/w STRC(32)    r     1 KV_VDO_DLT
     0-0-0/w STRC(32)    r     1 KV_VDO_DSC                 0-0-0/w STRC(32)    r     1 KV_VDO_ERS
     0-0-0/w STRC(32)    r     1 KV_VDO_HVPS                0-0-0/w STRC(48)    r     1 KV_VDO_OPNSTR
     0-0-0/w STRC(80)    r     1 KV_VDO_RQSDAT              0-0-0/w STRC(48)    r     1 KV_VDO_RQSPRM
     0-0-0/w STRC(32)    r     1 KV_VDO_SLCGRPRND           0-0-0/w STRC(32)    r     1 KV_VDO_SLCQLF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:379  
     0-0-0/w ASTR(96)    r     1 Y$FLD_TXT                  0-0-0/w STRC(48)    r     1 Y$TRCBFR
     0-0-0/c ACHR        r     1 Y$TXTCHR                   0-0-0/w STRC(32)    r     1 Y$VDOVLP_KEY


   Procedure KVM$RCV requires 6482 words for executable code.
   Procedure KVM$RCV requires 344 words of local(AUTO) storage.

    No errors detected in file KVM$RCV.:E05TSI    .
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:380  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:381  
          MINI XREF LISTING

CHN_SSN IN PROCEDURE Y$RCVVDO
     18432**LABEL   17932--GOTO
CLK_LOOP
     15934**LABEL   15946--EXIT
CLOCK_LOOP
     15899**LABEL   15965--EXIT    16021--GOTO
ERRCOD IN PROCEDURE Y$SETERRCOD
     19002**DCL     19000--PROC    19006>>ASSIGN
FLD_FND IN PROCEDURE Y$SLCFLD_KEY
     19342**LABEL   19349--GOTO
FPT_CONNECT_ACK.REASON
      5235**DCL     16171>>IF      16194>>ASSIGN
FPT_CONNECT_ACK.UID.UID
      5261**DCL      5261--REDEF    5261--REDEF
FPT_TERM.REASON
      5285**DCL     16322>>IF      16366>>ASSIGN
FPT_TERM.RLCID
      5284**DCL     16322>>IF      16337>>ASSIGN
FPT_WRSYSLOG_BADVDOFNCCOD
     13295**DCL     18847<>CALL
FPT_WRSYSLOG_BADVDOFNCCOD.V
     13299**DCL     13297--DCLINIT
FPT_WRSYSLOG_BADVDOFNCCOD.V.TERMID.TERM
     13364**DCL     13373--REDEF
FPT_WRSYSLOG_BADVDOVLPFNCCOD
     13198**DCL     16939<>CALL
FPT_WRSYSLOG_BADVDOVLPFNCCOD.V
     13202**DCL     13200--DCLINIT
FPT_WRSYSLOG_BADVDOVLPFNCCOD.V.TERMID.TERM
     13267**DCL     13276--REDEF
FPT_WRSYSLOG_VDOVLPBYNSIDU
     13101**DCL     16956<>CALL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:382  
FPT_WRSYSLOG_VDOVLPBYNSIDU.V
     13105**DCL     13103--DCLINIT
FPT_WRSYSLOG_VDOVLPBYNSIDU.V.TERMID.TERM
     13170**DCL     13179--REDEF
G$HAND_Q$
       201**DCL      5338--IMP-PTR 15896>>ASSIGN  15968>>IF      16436>>ASSIGN  16441>>IF      16441>>IF
     16448>>IF      16448>>ASSIGN  16454>>IF
KH$CHN
       620**DCL     16939<>CALL    16956<>CALL    18847<>CALL
KH$CHN.REDTIMOUTPRD
       687**DCL     17010>>IF      17012>>ASSIGN
KH$CHN.TERMID
       714**DCL     17193>>ASSIGN
KH$CHN.TERMID.TERM
       716**DCL       725--REDEF
KHC$CLOCK
       205**DCL-ENT 17015--CALL
KHC$DISPATCH
       206**DCL-ENT 15900--CALL
KHC$WAIT
       207**DCL-ENT 16453--CALL
KHD$ERRLOG_SETTERMID_CHN
       219**DCL-ENT 16939--CALL    16956--CALL    18847--CALL
KHD$SCREECH
       220**DCL-ENT 16020--CALL
KHI$DISABLE
       208**DCL-ENT 19188--CALL
KHI$ENABLE
       209**DCL-ENT 19199--CALL    19202--CALL
KH_EXP
     12886**DCL     15900<>CALL
KH_EXP.CTBCTX$
     12901**DCL     15964<<ASSIGN
KH_EXP.UID
     12892**DCL     12893--REDEF
KH_EXP.UID$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:383  
     12893**DCL     15901>>IF      15904>>ASSIGN
KH_EXP.UVAL
     12897**DCL     15922>>ASSIGN  15926>>DOCASE  15959>>ASSIGN
KH_INHLVL
      1144**DCL     19187>>ASSIGN
KNH_MESS
      5301**DCL     15977--ASSIGN  16007--IF      16037--ASSIGN  16037--ASSIGN  16040--ASSIGN  16040--ASSIGN
     16441--IF
KNH_MESS.FLAGS.FREE
      5306**DCL     15983>>IF      16101<<ASSIGN  16134<<ASSIGN  16170<<ASSIGN  16320<<ASSIGN  16412<<ASSIGN
KNH_MESS.FPTSZ
      5334**DCL     15977>>ASSIGN  16036>>IF      16040>>ASSIGN
KNH_MESS.FUNCTION
      5301**DCL      5301--REDEF   15989>>ASSIGN  16069>>DOCASE  16420>>IF      16495>>ASSIGN
KNH_MESS.LDCTX
      5306**DCL     16005>>IF      16138>>ASSIGN  16215>>ASSIGN
KNH_MESS.MSGSZ
      5335**DCL     15977>>ASSIGN
KNH_MESS.UID
      5331**DCL      5331--REDEF    5331--REDEF
KNH_MESS.UID$
      5331**DCL     15997>>IF      16004>>ASSIGN
KNH_MESS.UIDX.CQ_HNDID
      5332**DCL     15973>>IF      16429>>ASSIGN
KNH_QHDR.CTX.WU
      5346**DCL     16454>>IF
KNH_QHDR.RCQ
      5338**DCL      5338--REDEF
KNH_QHDR.RCQ.IPTR
      5338**DCL     15968>>IF      16441>>IF
KNH_QHDR.RCQ.RPTR
      5338**DCL     15896>>ASSIGN  16436>>ASSIGN  16448>>IF      16448<<ASSIGN
KNH_QHDR.RCQ.SZ
      5338**DCL     16441>>IF
KN_SP_MSG
      8933**DCL      8966--REDEF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:384  
KV$ERD.EXTSRD_CHR
      8031**DCL      8031--REDEF    8032--REDEF
KV$ERD.RGNSCR
      8015**DCL     19147>>IF
KV$FLD
      8058**DCL     17663--ASSIGN  17732<<ASSIGN  17817<<ASSIGN  17817>>ASSIGN  19297--IF      19297--IF
     19298--ASSIGN  19298--ASSIGN
KV$FLD.ATRCLM
      8117**DCL     17737<<ASSIGN  17795<<ASSIGN  17795>>ASSIGN  17810>>IF      17812>>IF      17813<<ASSIGN
     17813>>ASSIGN
KV$FLD.GRPRND
      8111**DCL     17756<<ASSIGN  17762<<ASSIGN  19299>>IF      19574<<ASSIGN  19614<<ASSIGN  19620<<ASSIGN
     19676>>IF
KV$FLD.HI_NONBLNCLM
      8117**DCL     17738<<ASSIGN  17771<<ASSIGN
KV$FLD.ID
      8058**DCL     17657>>ASSIGN  17733<<ASSIGN
KV$FLD.INP
      8060**DCL     17746<<ASSIGN  19576<<ASSIGN  19594<<ASSIGN  19596<<ASSIGN  19659>>IF
KV$FLD.NEW
      8061**DCL     19575<<ASSIGN
KV$FLD.PRVSTRWRDSIZ
      8058**DCL     17596>>ASSIGN  17675>>ASSIGN  17735<<ASSIGN  17790>>ASSIGN
KV$FLD.QLF
      8083**DCL     17740<<ASSIGN  17745>>IF      19573<<ASSIGN  19589<<ASSIGN  19593>>IF
KV$FLD.QLF.CNS
      8087**DCL     19659>>IF
KV$FLD.QLF.PRT
      8086**DCL     17750<<ASSIGN  19597<<ASSIGN  19659>>IF
KV$FLD.SLC
      8060**DCL     19366<<ASSIGN  19429<<ASSIGN
KV$FLD.STRWRDSIZ
      8058**DCL     17673>>ASSIGN  17691>>ASSIGN  17734<<ASSIGN  17807>>ASSIGN  17814>>ASSIGN
KV$FLD.TRMATRRQR
      8061**DCL     17796<<ASSIGN  17806<<ASSIGN  17811<<ASSIGN
KV$FLD.TXTSIZ
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:385  
      8117**DCL     19292>>IF      19296>>IF      19299>>IF      19303<<ASSIGN  19578<<ASSIGN  19629>>IF
     19671>>IF      19681<<ASSIGN
KV$FLD.UPD
      8059**DCL     19577<<ASSIGN
KV$FLD.UPD.ATR
      8059**DCL     19627<<ASSIGN  19677<<ASSIGN
KV$FLD.UPD.TXT
      8059**DCL     19301<<ASSIGN  19631<<ASSIGN  19679<<ASSIGN
KV$FLD.VRTCLM
      8059**DCL     17598>>IF      17608>>IF      17736<<ASSIGN  17769>>ASSIGN  17771>>ASSIGN  17786>>ASSIGN
     17791>>ASSIGN  17793>>IF      17794>>IF
KV$FLD.WDT
      8117**DCL     17598>>IF      17767<<ASSIGN  17769>>ASSIGN  17786<<ASSIGN  17791>>ASSIGN  19288>>IF
     19289>>ASSIGN
KV$FLDLST
      8323**DCL     17594--IF      17678--ASSIGN  17693--ASSIGN  17789--IF
KV$FLDLST.ATRCNT
      8324**DCL     19547<<ASSIGN
KV$FLDLST.LSTCELWRDX
      8323**DCL     17700>>IF
KV$FLDLST.LSTENTWRDX
      8323**DCL     17595>>IF      17597>>ASSIGN  17673>>ASSIGN  17691>>ASSIGN  17691>>ASSIGN  17712<<ASSIGN
     17809>>DOWHILE 19546<<ASSIGN
KV$GETPRM.DAT__
      8361**DCL     18550>>ASSIGN
KV$GETPRM.LNK$
      8339**DCL     18559>>ASSIGN
KV$INPOPR.ID
      7856**DCL      7854--IMP-SIZ  7856--REDEF    7857--REDEF    7857--REDEF
KV$INPOPR_DUMMY
      7854**DCL      7854--REDEF    7857--REDEF    7860--REDEF    7868--REDEF
KV$INPOPR_PST.VDH_PST.PSTVAL
      7934**DCL      7939--REDEF
KV$INPOPR_TXT.L
      7865**DCL      7865--IMP-SIZ
KV$LIN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:386  
      8389**DCL     19549--ASSIGN
KV$LIN.FLDLST$
      8389**DCL     19366>>ASSIGN  19523>>ASSIGN  19545>>IF      19546>>ASSIGN  19547>>ASSIGN
KV$LIN.FRMDSP
      8390**DCL     19543<<ASSIGN
KV$LIN.UPDFLDCNT
      8390**DCL     17739<<ASSIGN  19544<<ASSIGN  19579<<ASSIGN  19628<<ASSIGN  19646<<ASSIGN  19678<<ASSIGN
KV$LIN.VRTLIN
      8389**DCL     17778>>IF
KV$LINLST
      8413**DCL     19540--ASSIGN
KV$LINLST.ERRFLDID
      8416**DCL     17578<<ASSIGN  17645<<ASSIGN  17657<<ASSIGN  17721<<ASSIGN  18918>>ASSIGN
KV$LINLST.FRMDSP
      8415**DCL     17175>>IF      17178<<ASSIGN  19537>>IF      19560>>IF      19564<<ASSIGN
KV$LINLST.LSTENTWRDX
      8413**DCL     19541>>DOUNTIL
KV$LINLST.LSTOPRSLC
      8415**DCL     17546<<ASSIGN  18072<<ASSIGN  18636<<ASSIGN  19361>>IF      19503<<ASSIGN
KV$LINLST.ONEFLDLIN$
      8414**DCL     19366>>ASSIGN  19436<<ASSIGN  19522>>ASSIGN
KV$LINLST.ONEFLDWRDX
      8414**DCL     19366>>ASSIGN  19435<<ASSIGN  19521>>ASSIGN
KV$LINLST.SLCFLDSTT
      8415**DCL     17172<<ASSIGN  17174<<ASSIGN  17547>>IF      17548<<ASSIGN  18630<<ASSIGN  19365>>IF
     19374>>IF      19380<<ASSIGN  19433>>IF      19434<<ASSIGN  19442>>IF      19443<<ASSIGN  19483>>IF
     19509>>IF      19537>>IF      19565<<ASSIGN  19580>>IF      19581<<ASSIGN
KV$MRD
      6087**DCL     17378>>ASSIGN
KV$MRD.ABSGRPRND
      6106**DCL     17756>>ASSIGN  19614>>ASSIGN
KV$MRD.ATRRQRDSPPST
      6100**DCL     17588>>IF      17770>>IF      17792>>IF
KV$MRD.CALUSR_PST
      6090**DCL     19146>>IF
KV$MRD.DCLATRWHNOTP
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:387  
      6101**DCL     19537>>IF      19558>>IF      19629>>IF
KV$MRD.DVCATR
      6110**DCL     19558>>IF
KV$MRD.ERD$
      6088**DCL     19147>>IF
KV$MRD.FF_FLUSH
      6103**DCL     17090>>IF
KV$MRD.INPUT
      6094**DCL     17010>>IF      18366>>IF
KV$MRD.LNG
      6092**DCL     19537>>IF      19561>>IF
KV$MRD.MSGLIN
      6103**DCL     17357>>IF
KV$MRD.NO_FLDTRM
      6093**DCL     17778>>IF      17805>>IF
KV$MRD.OUTPUT
      6094**DCL     17089>>IF      17264>>IF
KV$MRD.PRINTTYPE
      6098**DCL     17089>>IF
KV$MRD.SMLHDNATR
      6093**DCL     19629>>IF
KV$MRD.USRCNT
      6089**DCL     19148>>IF
KV$MRD.WDT
      6089**DCL     17605>>IF      17778>>IF      17805>>IF
KV$MVD.DISPINPUT
      6140**DCL     17463>>IF
KV$MVD.FRMSCNINH
      6144**DCL     16827>>IF      16865>>IF      17093<<ASSIGN  17096<<ASSIGN
KV$MVD.ORG
      6140**DCL     16827>>IF      16865>>IF      17161>>IF      17163>>IF      17167>>IF      17189>>IF
     17302>>DOCASE  17370>>IF      17410>>IF      17860>>IF      17860>>IF      18027>>IF      18028>>IF
     18210>>IF      18211>>IF      18212<<ASSIGN  18403>>IF      18416>>IF      18735>>IF      18808>>IF
     18809>>IF      18901>>IF      18916>>IF
KV$MVD.PAGBRKPND
      6145**DCL     17095<<ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:388  
KV$MVD.REDSSNID
      6154**DCL     17448>>IF      17459>>IF      17475<<ASSIGN
KV$MVD.RETYPOVR
      6143**DCL     17175>>IF      17463>>IF      18807>>IF      19626>>IF
KV$MVD.SRD$
      6135**DCL     17441>>ASSIGN  17874>>ASSIGN
KV$MVD.TRNTBL$
      6137**DCL     17379>>ASSIGN
KV$MVD.USRCNT
      6138**DCL     17865>>IF      17869<<ASSIGN  17869>>ASSIGN  17873<<ASSIGN  17873>>ASSIGN
KV$PTR.FLD$
      6182**DCL     17596>>ASSIGN  17596>>ASSIGN  17608>>IF      17653<<ASSIGN  17657>>ASSIGN  17663>>ASSIGN
     17675>>ASSIGN  17701>>ASSIGN  17790>>ASSIGN  17817>>ASSIGN  18413<<ASSIGN  19288>>IF      19289>>ASSIGN
     19292>>IF      19296>>IF      19297>>IF      19297>>IF      19298>>ASSIGN  19298>>ASSIGN  19299>>IF
     19299>>IF      19301>>ASSIGN  19303>>ASSIGN  19429>>ASSIGN  19634<<ASSIGN  19644<<ASSIGN
KV$PTR.FLDLST$
      6181**DCL     17595>>IF      17597>>ASSIGN  17597>>ASSIGN  17673>>ASSIGN  17673>>ASSIGN  17691>>ASSIGN
     17691>>ASSIGN  17691>>ASSIGN  17699>>IF      17700>>IF      17712>>ASSIGN  17808>>ASSIGN  17809>>DOWHILE
     17815>>ASSIGN
KV$PTR.FLDWRDX
      6182**DCL     17594>>IF      17595>>IF      17712>>ASSIGN  17789>>IF      17807>>ASSIGN  19435>>ASSIGN
KV$PTR.INPCNDPND
      6184**DCL      6193--REDEF    6197--REDEF
KV$PTR.INPCNDPND.OPRX
      6193**DCL     18453<<ASSIGN  18453>>ASSIGN
KV$PTR.INPCNDPND.TRN
      6188**DCL     17007>>IF      17448>>IF      18431>>IF      18446>>ASSIGN
KV$PTR.INPCNDPND_MSK.NOT_TRN
      6197**DCL     18455<<ASSIGN  18455>>ASSIGN  18457<<ASSIGN
KV$PTR.LIN$
      6181**DCL     17739>>ASSIGN  17778>>IF      19436>>ASSIGN
KV$PTR.LINLST$
      6180**DCL      6181--REDEF   17172>>ASSIGN  17174>>ASSIGN  17175>>IF      17178>>ASSIGN  17546>>ASSIGN
     17547>>IF      17548>>ASSIGN  17578>>ASSIGN  17645>>ASSIGN  17657>>ASSIGN  17721>>ASSIGN  18072>>ASSIGN
     18630>>ASSIGN  18636>>ASSIGN  18918>>ASSIGN  19361>>IF      19365>>IF      19366>>ASSIGN  19366>>ASSIGN
     19374>>IF      19380>>ASSIGN  19433>>IF      19434>>ASSIGN  19435>>ASSIGN  19436>>ASSIGN  19442>>IF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:389  
     19443>>ASSIGN  19480>>ASSIGN
KV$PTR.MRD$
      6179**DCL     17010>>IF      17089>>IF      17089>>IF      17090>>IF      17264>>IF      17357>>IF
     17378>>ASSIGN  17381<<ASSIGN  17442<<ASSIGN  17588>>IF      17605>>IF      17756>>ASSIGN  17770>>IF
     17778>>IF      17778>>IF      17792>>IF      17805>>IF      17805>>IF      17876<<ASSIGN  18366>>IF
     19146>>IF      19147>>IF      19148>>IF      19537>>IF      19537>>IF      19558>>IF      19558>>IF
     19561>>IF      19614>>ASSIGN  19629>>IF      19629>>IF
KV$PTR.MVD$
      6179**DCL     16827>>IF      16827>>IF      16865>>IF      16865>>IF      17093>>ASSIGN  17095>>ASSIGN
     17096>>ASSIGN  17161>>IF      17163>>IF      17167>>IF      17175>>IF      17189>>IF      17302>>DOCASE
     17370>>IF      17379>>ASSIGN  17380<<ASSIGN  17410>>IF      17440<<ASSIGN  17441>>ASSIGN  17448>>IF
     17459>>IF      17463>>IF      17463>>IF      17475>>ASSIGN  17858>>IF      17860>>IF      17865>>IF
     17869>>ASSIGN  17869>>ASSIGN  17870<<ASSIGN  17873>>ASSIGN  17873>>ASSIGN  17874>>ASSIGN  18027>>IF
     18028>>IF      18210>>IF      18211>>IF      18212>>ASSIGN  18403>>IF      18416>>IF      18735>>IF
     18807>>IF      18808>>IF      18809>>IF      18901>>IF      18916>>IF      19626>>IF
KV$PTR.SRD$
      6180**DCL     17091>>IF      17091>>IF      17091>>IF      17099>>IF      17099>>IF      17359>>IF
     17359>>IF      17369>>ASSIGN  17382<<ASSIGN  17441<<ASSIGN  17442>>ASSIGN  17456>>ASSIGN  17461>>ASSIGN
     17461>>ASSIGN  17462>>ASSIGN  17462>>ASSIGN  17462>>ASSIGN  17555>>IF      17601>>IF      17601>>IF
     17605>>IF      17605>>IF      17605>>IF      17650>>IF      17772>>IF      17776>>ASSIGN  17778>>IF
     17778>>IF      17778>>IF      17778>>IF      17874<<ASSIGN  17875>>ASSIGN  17876>>ASSIGN  18374>>IF
     18374>>IF      18431>>IF      18431>>IF      18758>>IF      19148>>IF      19537>>IF      19561>>IF
     19566>>ASSIGN
KV$PTR.SSN$
      6178**DCL     18431>>IF      18431>>IF      18440>>ASSIGN  19074>>IF      19074>>IF      19182>>ASSIGN
     19189>>IF      19189>>IF      19197>>IF      19197>>IF
KV$PTR.STR$
      6178**DCL     15919>>ASSIGN  16522>>IF      16523>>IF      17160>>ASSIGN  17162>>ASSIGN  17164>>IF
     17182>>ASSIGN  17205>>IF      17440>>ASSIGN  17459>>IF      17572>>IF      17574>>ASSIGN  17576>>ASSIGN
     17639>>IF      17641>>ASSIGN  17643>>ASSIGN  17651>>ASSIGN  17860>>IF      17871>>ASSIGN  17872>>ASSIGN
     17882>>ASSIGN  17919>>IF      18205>>ASSIGN  18214>>ASSIGN  18331>>ASSIGN  18344>>ASSIGN  18377>>ASSIGN
     18377>>ASSIGN  18392>>ASSIGN  18396>>ASSIGN  18429>>IF      18901>>IF      18912>>IF      18915>>ASSIGN
     18925>>ASSIGN  19006>>ASSIGN  19393>>IF      19395>>ASSIGN  19397>>ASSIGN  19414>>IF      19416>>ASSIGN
     19418>>ASSIGN  19491>>IF      19493>>ASSIGN  19495>>ASSIGN
KV$PTR.STT
      6198**DCL     17555>>IF      17555>>IF      17608>>IF      17608>>IF      17608>>IF      17608>>IF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:390  
     17670>>IF      17670>>IF      17672>>IF      17688>>IF      17688>>IF      17690>>IF      19383>>IF
     19384>>IF      19384>>IF
KV$PTR.VDI$
      6178**DCL     16031>>ASSIGN  16031>>ASSIGN  16032>>ASSIGN  16032>>ASSIGN  16510>>ASSIGN  16510>>ASSIGN
     16511>>ASSIGN  16511>>ASSIGN  16939>>CALL    16956>>CALL    16959>>ASSIGN  16959>>ASSIGN  17010>>IF
     17012>>ASSIGN  17193>>ASSIGN  17291>>ASSIGN  17291>>ASSIGN  17292>>ASSIGN  17292>>ASSIGN  17294>>ASSIGN
     17294>>ASSIGN  18847>>CALL
KV$PTR.VRTCLM
      6183**DCL     17540<<ASSIGN  17598>>IF      17605>>IF      17650>>IF      18067<<ASSIGN  19342<<ASSIGN
KV$PTR.VRTLIN
      6183**DCL     17541<<ASSIGN  17601>>IF      17605>>IF      18065<<ASSIGN  19341<<ASSIGN
KV$PTR$
      6172**DCL      6178--IMP-PTR 15905<<ASSIGN  15910>>IF      15919>>ASSIGN  16023<<ASSIGN  16031>>ASSIGN
     16031>>ASSIGN  16032>>ASSIGN  16032>>ASSIGN  16141<<ASSIGN  16510>>ASSIGN  16510>>ASSIGN  16511>>ASSIGN
     16511>>ASSIGN  16522>>IF      16523>>IF      16526>>IF      16827>>IF      16827>>IF      16865>>IF
     16865>>IF      16939>>CALL    16956>>CALL    16959>>ASSIGN  16959>>ASSIGN  17007>>IF      17010>>IF
     17010>>IF      17012>>ASSIGN  17089>>IF      17089>>IF      17090>>IF      17091>>IF      17091>>IF
     17091>>IF      17093>>ASSIGN  17095>>ASSIGN  17096>>ASSIGN  17099>>IF      17099>>IF      17160>>ASSIGN
     17161>>IF      17162>>ASSIGN  17163>>IF      17164>>IF      17167>>IF      17172>>ASSIGN  17174>>ASSIGN
     17175>>IF      17175>>IF      17178>>ASSIGN  17182>>ASSIGN  17189>>IF      17193>>ASSIGN  17205>>IF
     17264>>IF      17291>>ASSIGN  17291>>ASSIGN  17292>>ASSIGN  17292>>ASSIGN  17294>>ASSIGN  17294>>ASSIGN
     17302>>DOCASE  17357>>IF      17359>>IF      17359>>IF      17369>>ASSIGN  17370>>IF      17378>>ASSIGN
     17379>>ASSIGN  17380>>ASSIGN  17381>>ASSIGN  17382>>ASSIGN  17410>>IF      17440>>ASSIGN  17440>>ASSIGN
     17441>>ASSIGN  17441>>ASSIGN  17442>>ASSIGN  17442>>ASSIGN  17448>>IF      17448>>IF      17456>>ASSIGN
     17459>>IF      17459>>IF      17461>>ASSIGN  17461>>ASSIGN  17462>>ASSIGN  17462>>ASSIGN  17462>>ASSIGN
     17463>>IF      17463>>IF      17475>>ASSIGN  17540>>ASSIGN  17541>>ASSIGN  17546>>ASSIGN  17547>>IF
     17548>>ASSIGN  17555>>IF      17555>>IF      17555>>IF      17572>>IF      17574>>ASSIGN  17576>>ASSIGN
     17578>>ASSIGN  17588>>IF      17594>>IF      17595>>IF      17595>>IF      17596>>ASSIGN  17596>>ASSIGN
     17597>>ASSIGN  17597>>ASSIGN  17598>>IF      17601>>IF      17601>>IF      17601>>IF      17605>>IF
     17605>>IF      17605>>IF      17605>>IF      17605>>IF      17605>>IF      17608>>IF      17608>>IF
     17608>>IF      17608>>IF      17608>>IF      17639>>IF      17641>>ASSIGN  17643>>ASSIGN  17645>>ASSIGN
     17650>>IF      17650>>IF      17651>>ASSIGN  17653>>ASSIGN  17657>>ASSIGN  17657>>ASSIGN  17663>>ASSIGN
     17670>>IF      17670>>IF      17672>>IF      17673>>ASSIGN  17673>>ASSIGN  17675>>ASSIGN  17688>>IF
     17688>>IF      17690>>IF      17691>>ASSIGN  17691>>ASSIGN  17691>>ASSIGN  17699>>IF      17700>>IF
     17701>>ASSIGN  17712>>ASSIGN  17712>>ASSIGN  17721>>ASSIGN  17739>>ASSIGN  17756>>ASSIGN  17770>>IF
     17772>>IF      17776>>ASSIGN  17778>>IF      17778>>IF      17778>>IF      17778>>IF      17778>>IF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:391  
     17778>>IF      17778>>IF      17789>>IF      17790>>ASSIGN  17792>>IF      17805>>IF      17805>>IF
     17807>>ASSIGN  17808>>ASSIGN  17809>>DOWHILE 17815>>ASSIGN  17817>>ASSIGN  17858>>IF      17860>>IF
     17860>>IF      17865>>IF      17869>>ASSIGN  17869>>ASSIGN  17870>>ASSIGN  17871>>ASSIGN  17872>>ASSIGN
     17873>>ASSIGN  17873>>ASSIGN  17874>>ASSIGN  17874>>ASSIGN  17875>>ASSIGN  17876>>ASSIGN  17876>>ASSIGN
     17882>>ASSIGN  17919>>IF      18027>>IF      18028>>IF      18065>>ASSIGN  18067>>ASSIGN  18072>>ASSIGN
     18205>>ASSIGN  18210>>IF      18211>>IF      18212>>ASSIGN  18214>>ASSIGN  18331>>ASSIGN  18344>>ASSIGN
     18366>>IF      18374>>IF      18374>>IF      18377>>ASSIGN  18377>>ASSIGN  18392>>ASSIGN  18396>>ASSIGN
     18403>>IF      18413>>ASSIGN  18416>>IF      18429>>IF      18431>>IF      18431>>IF      18446>>ASSIGN
     18453>>ASSIGN  18455>>ASSIGN  18630>>ASSIGN  18636>>ASSIGN  18735>>IF      18758>>IF      18807>>IF
     18808>>IF      18809>>IF      18847>>CALL    18901>>IF      18901>>IF      18912>>IF      18915>>ASSIGN
     18916>>IF      18918>>ASSIGN  18925>>ASSIGN  19006>>ASSIGN  19062<<ASSIGN  19074>>IF      19074>>IF
     19146>>IF      19147>>IF      19148>>IF      19148>>IF      19176<<ASSIGN  19182>>ASSIGN  19189>>IF
     19189>>IF      19197>>IF      19197>>IF      19288>>IF      19289>>ASSIGN  19292>>IF      19296>>IF
     19297>>IF      19297>>IF      19298>>ASSIGN  19298>>ASSIGN  19299>>IF      19299>>IF      19301>>ASSIGN
     19303>>ASSIGN  19341>>ASSIGN  19342>>ASSIGN  19361>>IF      19365>>IF      19366>>ASSIGN  19366>>ASSIGN
     19374>>IF      19380>>ASSIGN  19383>>IF      19384>>IF      19384>>IF      19393>>IF      19395>>ASSIGN
     19397>>ASSIGN  19414>>IF      19416>>ASSIGN  19418>>ASSIGN  19429>>ASSIGN  19433>>IF      19434>>ASSIGN
     19435>>ASSIGN  19435>>ASSIGN  19436>>ASSIGN  19436>>ASSIGN  19442>>IF      19443>>ASSIGN  19480>>ASSIGN
     19491>>IF      19493>>ASSIGN  19495>>ASSIGN  19537>>IF      19537>>IF      19537>>IF      19558>>IF
     19558>>IF      19561>>IF      19561>>IF      19566>>ASSIGN  19614>>ASSIGN  19626>>IF      19629>>IF
     19629>>IF      19634>>ASSIGN  19644>>ASSIGN
KV$RCVSSN$
     13387**DCL     15887<<ASSIGN
KV$RCVVDO$
     13385**DCL     15886<<ASSIGN
KV$SP_MSG.CHKSSNCNCID
      9023**DCL     16005>>IF
KV$SP_MSG.SETUP_SSN
      9023**DCL     15991>>IF
KV$SRD.BRDEXS
      6328**DCL     19148>>IF
KV$SRD.BTMRHT
      6317**DCL      6322--REDEF
KV$SRD.CRT
      6393**DCL      6398--REDEF
KV$SRD.CRT.LIN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:392  
      6395**DCL     17099>>IF      17461>>ASSIGN
KV$SRD.CRTVRTLINPHSLIN
      6365**DCL     17369>>ASSIGN  17456<<ASSIGN  17461<<ASSIGN
KV$SRD.CRT_PST
      6398**DCL     17091>>IF
KV$SRD.FLDEND
      6357**DCL      6362--REDEF
KV$SRD.FLDEND_PST
      6362**DCL     18758>>IF
KV$SRD.HI_NONBLN
      6427**DCL      6432--REDEF
KV$SRD.HI_NONBLN.LIN
      6429**DCL     17099>>IF
KV$SRD.LNG
      6325**DCL     17091>>IF      17359>>IF      17601>>IF      17605>>IF      17778>>IF      18374>>IF
     19537>>IF      19561>>IF
KV$SRD.MRD$
      6221**DCL     17442>>ASSIGN  17876>>ASSIGN
KV$SRD.NXTNONBLNLIN
      6365**DCL     19566<<ASSIGN
KV$SRD.ORG
      6249**DCL      6254--REDEF
KV$SRD.ORG.CLM
      6251**DCL     17778>>IF
KV$SRD.PRMVRTCLM
      6365**DCL     17462<<ASSIGN  17462>>ASSIGN
KV$SRD.SRDEND
      6462**DCL      6467--REDEF
KV$SRD.SRDEND.CLM
      6464**DCL     17605>>IF      17778>>IF      17778>>IF
KV$SRD.TOPLFT
      6283**DCL      6288--REDEF
KV$SRD.TOPLFT_PST
      6288**DCL     17091>>IF
KV$SRD.UNKRGN
      6329**DCL     17875<<ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:393  
KV$SRD.WDT
      6325**DCL     17359>>IF      17462>>ASSIGN  17555>>IF      17601>>IF      17605>>IF      17650>>IF
     17772>>IF      17776>>ASSIGN  18374>>IF
KV$SSN.CLKSET
      6517**DCL     15935>>IF
KV$SSN.LNK$
      6498**DCL     15942>>ASSIGN
KV$SSN.REDBFR__.DATBYTSIZ
      6544**DCL     18431>>IF
KV$SSN.REDRQSPND
      6516**DCL     18431>>IF
KV$SSN.REDRSPCNT
      6504**DCL      6505--REDEF
KV$SSN.RLSSSN
      6514**DCL     19074>>IF      19189>>IF      19197>>IF
KV$SSN.SSNCNCID
      6507**DCL     19074>>IF      19189>>IF      19197>>IF
KV$SSN.TYPAHDBFRCNT
      6509**DCL     18441>>ASSIGN  18452<<ASSIGN
KV$SSN.TYPAHDBFRHED$
      6500**DCL     18449>>ASSIGN  18450<<ASSIGN
KV$SSN.TYPAHDBFRINPFNC$
      6500**DCL     18442>>ASSIGN  18451<<ASSIGN
KV$SSN.TYPAHDBFRINPFNCX
      6509**DCL     18444>>ASSIGN
KV$SSN.TYPAHDBFRINS$
      6501**DCL     18443>>ASSIGN  18448<<ASSIGN  18450>>ASSIGN
KV$SSN.TYPCND
      6550**DCL     18445>>ASSIGN
KV$SSN.TYPCND.NOT_TRN
      6551**DCL     18447<<ASSIGN
KV$STR.ERR
      6706**DCL     17160<<ASSIGN  18925<<ASSIGN
KV$STR.ERR.COD
      6708**DCL     17572>>IF      17576<<ASSIGN  17639>>IF      17643<<ASSIGN  17651<<ASSIGN  17872<<ASSIGN
     17882<<ASSIGN  18901>>IF      18912>>IF      18915>>ASSIGN  19006<<ASSIGN  19393>>IF      19397<<ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:394  
     19414>>IF      19418<<ASSIGN  19491>>IF      19495<<ASSIGN
KV$STR.ERR.VDOTYP
      6708**DCL     17574<<ASSIGN  17641<<ASSIGN  19395<<ASSIGN  19416<<ASSIGN  19493<<ASSIGN
KV$STR.GRPRND
      6718**DCL     17162<<ASSIGN
KV$STR.ID
      6714**DCL     15919>>ASSIGN  16522>>IF      17459>>IF      17857>>IF
KV$STR.LNK$
      6654**DCL     17880>>ASSIGN
KV$STR.MVD$
      6654**DCL     17440>>ASSIGN  17858>>IF      17860>>IF      17870>>ASSIGN  17871<<ASSIGN  17871>>ASSIGN
KV$STR.OPN
      6716**DCL     17164>>IF      17182<<ASSIGN  17860>>IF      18214<<ASSIGN
KV$STR.RE_REDCLM
      6684**DCL     18205<<ASSIGN
KV$STR.SNDMAXNMBRCR
      6712**DCL     16523>>IF      17919>>IF      18331>>ASSIGN  18344<<ASSIGN  18377<<ASSIGN  18377>>ASSIGN
     18396<<ASSIGN  18429>>IF
KV$STR.SSN$
      6654**DCL     17196>>IF
KV$STR.WATRED
      6715**DCL     18392<<ASSIGN
KV$STT.RCV.DATVDOBYTCNT
     12797**DCL     17292<<ASSIGN  17292>>ASSIGN
KV$STT.RCV.DATVDOCNT
     12797**DCL     17291<<ASSIGN  17291>>ASSIGN
KV$STT.RCV.DATVDODATBYTCNT
     12798**DCL     17294<<ASSIGN  17294>>ASSIGN
KV$STT.RCV.SSNINTDATUNTBYTCNT
     12799**DCL     16032<<ASSIGN  16032>>ASSIGN
KV$STT.RCV.SSNINTDATUNTCNT
     12798**DCL     16031<<ASSIGN  16031>>ASSIGN
KV$STT.RCV.VDOBYTCNT
     12796**DCL     16959<<ASSIGN  16959>>ASSIGN
KV$STT.RCV.VDOCNT
     12796**DCL     16510<<ASSIGN  16510>>ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:395  
KV$STT.RCVVDOFNCCNT
     12833**DCL     16511<<ASSIGN  16511>>ASSIGN
KV$STT.REQSTATS.DSPMSK
     12720**DCL     12726--REDEF
KV$STT.REQSTATS.SLCMSK
     12761**DCL     12768--REDEF
KV$TRNTBL.OTPESCCHR
      8470**DCL      8470--REDEF
KV$USRPRM.STT$
      7087**DCL     16031>>ASSIGN  16031>>ASSIGN  16032>>ASSIGN  16032>>ASSIGN  16510>>ASSIGN  16510>>ASSIGN
     16511>>ASSIGN  16511>>ASSIGN  16959>>ASSIGN  16959>>ASSIGN  17291>>ASSIGN  17291>>ASSIGN  17292>>ASSIGN
     17292>>ASSIGN  17294>>ASSIGN  17294>>ASSIGN
KV$VDI.ASNINPPTR$
      7112**DCL     15910>>IF      16526>>IF      19062>>ASSIGN
KV$VDI.AUTCRS
      7148**DCL     18429>>IF
KV$VDI.BSY
      7146**DCL     15908<<ASSIGN  16030<<ASSIGN  19197<<ASSIGN
KV$VDI.CHN$
      7111**DCL     16939>>CALL    16956>>CALL    17010>>IF      17012>>ASSIGN  17193>>ASSIGN  18847>>CALL
KV$VDI.DFR
      7143**DCL     15997>>IF      19070>>IF      19189>>IF
KV$VDI.DFR.USR
      7143**DCL     19082>>IF      19086<<ASSIGN
KV$VDI.DVCPGNENB
      7147**DCL     17097<<ASSIGN
KV$VDI.FULLDUPLEXPAPERTAPE
      7146**DCL     19140>>IF      19143<<ASSIGN
KV$VDI.HALFDUPLEXPAPERTAPE
      7147**DCL     17264>>IF
KV$VDI.INPUNT
      7152**DCL     17007>>IF      17335>>IF      17455>>IF      17589>>IF      18741>>IF      18758>>IF
KV$VDI.INTPHSDSC
      7150**DCL     15944<<ASSIGN  17965<<ASSIGN  19140>>IF
KV$VDI.KEPTYP
      7145**DCL     18438>>IF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:396  
KV$VDI.LINSPD
      7153**DCL     16336>>ASSIGN
KV$VDI.OTPCNDPND.PST
      7148**DCL     19729>>IF
KV$VDI.PHSDSC
      7146**DCL     17089>>IF      17241>>IF      19140>>IF      19146>>IF
KV$VDI.RCVFLWCTRMAXCRD
      7142**DCL     16996>>IF
KV$VDI.RCVFLWCTRMINCRDINC
      7148**DCL     19044>>IF
KV$VDI.RQSOTP
      7147**DCL     17007>>IF      19044>>IF
KV$VDI.SSN$
      7111**DCL     15930>>ASSIGN
KV$VDI.SSNCNT
      7140**DCL     19127>>IF
KV$VDI.USEOTPBFR
      7151**DCL     17370>>IF      18731>>IF
KV$VDI.USEOTPBFRBNR
      7151**DCL     17322>>IF
KV$VDI.USEOTPBFRTRN
      7152**DCL     17322>>IF
KV$VDI.USREVTENB
      7154**DCL     16190>>IF      16237>>IF      16362>>IF      17070>>IF      17115>>IF      18150>>IF
     19070>>IF      19109>>IF      19189>>IF
KV$VDI.USRPRM$
      7112**DCL     16031>>ASSIGN  16031>>ASSIGN  16032>>ASSIGN  16032>>ASSIGN  16510>>ASSIGN  16510>>ASSIGN
     16511>>ASSIGN  16511>>ASSIGN  16959>>ASSIGN  16959>>ASSIGN  17291>>ASSIGN  17291>>ASSIGN  17292>>ASSIGN
     17292>>ASSIGN  17294>>ASSIGN  17294>>ASSIGN
KV$VDI.USRRQSDAT.RED
      7152**DCL     18741>>IF      18758>>IF
KV$VDI.VDHEVTENB
      7159**DCL     19133>>IF      19168<<ASSIGN
KV@MRD
     14732**DCL     17378<<ASSIGN  17381--ASSIGN  17383--ASSIGN
KV@MRD.DVCCLM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:397  
     14755**DCL     17385<<ASSIGN
KV@MRD.DVCLIN
     14755**DCL     17384<<ASSIGN
KV@MRD.MINSP_FORPST
     14735**DCL     17386<<ASSIGN
KV@MRD.WDT
     14734**DCL     17389>>ASSIGN
KV@MVD
     14781**DCL     15889<<ASSIGN  17380--ASSIGN
KV@MVD.SRD$
     14781**DCL     15890<<ASSIGN
KV@MVD.TRNTBL$
     14783**DCL     17379<<ASSIGN
KV@MVD.VRTCLM
     14798**DCL     17391<<ASSIGN
KV@PTR
     14825**DCL     17732--ASSIGN  17733--ASSIGN  17734--ASSIGN  17735--ASSIGN  17736--ASSIGN  17737--ASSIGN
     17738--ASSIGN  17740--ASSIGN  17745--IF      17746--ASSIGN  17750--ASSIGN  17756--ASSIGN  17762--ASSIGN
     17767--ASSIGN  17769--ASSIGN  17769--ASSIGN  17771--ASSIGN  17771--ASSIGN  17786--ASSIGN  17786--ASSIGN
     17790--ASSIGN  17793--IF      17794--IF      17795--ASSIGN  17806--ASSIGN  17807--ASSIGN  17811--ASSIGN
     17813--ASSIGN  17817--ASSIGN  19510<>CALL
KV@PTR.FLD$
     14829**DCL     19512>>ASSIGN
KV@PTR.FLDWRDX
     14829**DCL     19481<<ASSIGN  19519>>IF      19521<<ASSIGN  19523>>ASSIGN
KV@PTR.INPCNDPND
     14831**DCL     14840--REDEF   14844--REDEF
KV@PTR.LIN$
     14828**DCL     19522<<ASSIGN  19523>>ASSIGN  19579>>ASSIGN  19628>>ASSIGN  19646>>ASSIGN  19678>>ASSIGN
KV@PTR.LINLST$
     14827**DCL     14828--REDEF   19480<<ASSIGN  19483>>IF      19503>>ASSIGN  19509>>IF      19521>>ASSIGN
     19522>>ASSIGN  19537>>IF      19537>>IF      19541>>DOUNTIL 19542>>ASSIGN  19560>>IF      19564>>ASSIGN
     19565>>ASSIGN  19580>>IF      19581>>ASSIGN
KV@SND_CNC
     14862**DCL     16334<<ASSIGN  16338<>CALL
KV@SND_CNC.DSTNTWADR
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:398  
     14933**DCL     16337<<ASSIGN
KV@SND_CNC.LINSPD
     14903**DCL     16336<<ASSIGN
KV@SND_CNC.SCNENDPNTID
     14920**DCL     16335<<ASSIGN
KV@SND_CNC.SCNENDPNTID.TERM
     14922**DCL     14931--REDEF
KV@SND_CNC.VDOVLP
     14896**DCL     14899--REDEF
KV@SND_MRK
     14951**DCL     18908<<ASSIGN  18924<>CALL
KV@SND_MRK.VDOVLP
     14985**DCL     14988--REDEF
KV@SND_MRK.VDOVLP.CG_MSGID$
     14985**DCL     18921<<ASSIGN
KV@SND_MRK.VDOVLP.CG_MSGTYP$
     14985**DCL     18922<<ASSIGN
KV@SND_MRK.VDOVLP.CG_STA$
     14986**DCL     18923<<ASSIGN
KV@SND_MRK.VDOVLP.ERR$
     14986**DCL     18913<<ASSIGN
KV@SND_MRK.VDOVLP.FLDID$
     14986**DCL     18917<<ASSIGN
KV@SND_MRK.VDOVLP.MRK$
     14987**DCL     18909<<ASSIGN
KV@SND_PRM
     15008**DCL     18545<<ASSIGN  18598<>CALL
KV@SND_PRM.CMPCOD
     15076**DCL     18557<<ASSIGN  18572<<ASSIGN
KV@SND_PRM.CTN
     15076**DCL     18565<<ASSIGN
KV@SND_PRM.DAT__
     15070**DCL     18550<<ASSIGN
KV@SND_PRM.VDOVLP
     15042**DCL     15045--REDEF
KV@SND_PRM.VDOVLP.CG_MSGID$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:399  
     15042**DCL     18580<<ASSIGN
KV@SND_PRM.VDOVLP.CG_MSGTYP$
     15042**DCL     18588<<ASSIGN
KV@SND_PRM.VDOVLP.CG_STA$
     15043**DCL     18596<<ASSIGN
KV@SRD
     15101**DCL     15890--ASSIGN  15891<<ASSIGN  17382--ASSIGN
KV@SRD.BTMRHT
     15197**DCL     15202--REDEF
KV@SRD.BTMRHT.CLM
     15199**DCL     17389<<ASSIGN
KV@SRD.BTMRHT.LIN
     15199**DCL     15892<<ASSIGN
KV@SRD.CRT
     15273**DCL     15278--REDEF
KV@SRD.CRT.CLM
     15275**DCL     17387<<ASSIGN
KV@SRD.CRT.LIN
     15275**DCL     17384>>ASSIGN
KV@SRD.FLDEND
     15237**DCL     15242--REDEF
KV@SRD.HI_NONBLN
     15307**DCL     15312--REDEF
KV@SRD.LNG
     15205**DCL     15893<<ASSIGN
KV@SRD.MRD$
     15101**DCL     17383<<ASSIGN
KV@SRD.ORG
     15129**DCL     15134--REDEF
KV@SRD.SRDEND
     15342**DCL     15347--REDEF
KV@SRD.TOPLFT
     15163**DCL     15168--REDEF
KV@SRD.VRTPSTOK
     15206**DCL     17390<<ASSIGN
KV@USR_DAT
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:400  
     15372**DCL     19740<<ASSIGN  19749<>CALL
KV@USR_DAT.DATCTRCHR
     15434**DCL     19746<<ASSIGN
KV@USR_DAT.DATCTRCHRTYP
     15399**DCL     19747<<ASSIGN
KV@USR_DAT.DATMOD
     15400**DCL     19748<<ASSIGN
KV@USR_DAT.DAT__.ADR$
     15428**DCL     19742<<ASSIGN
KV@USR_DAT.DAT__.DATBYTSIZ
     15428**DCL     19743<<ASSIGN
KV@USR_EVT
     15468**DCL     15957<<ASSIGN  15960<>CALL    16192<<ASSIGN  16195<>CALL    16364<<ASSIGN  16367<>CALL
     17072<<ASSIGN  17075<>CALL    19075<<ASSIGN  19087<>CALL
KV@USR_EVT.ID
     15474**DCL     15958<<ASSIGN  16193<<ASSIGN  16365<<ASSIGN  17073<<ASSIGN  19076<<ASSIGN
KV@USR_EVT.PRM
     15474**DCL     15959<<ASSIGN  16194<<ASSIGN  16366<<ASSIGN  17074<<ASSIGN  19080<<DOINDEX 19082>>IF
     19086>>ASSIGN
KV@USR_RQSDAT
     15504**DCL     18397<<ASSIGN  18414<>CALL    18420<>CALL    18424<>CALL
KV@USR_RQSDAT.DATMOD
     15510**DCL     18399<<ASSIGN
KV@USR_RQSDAT.EOFNO_DAT
     15510**DCL     18401<<ASSIGN
KV@USR_RQSDAT.MAXRCRBYTSIZ
     15538**DCL     18398<<ASSIGN
KV@USR_RQSDAT.RE_RED
     15510**DCL     18400<<ASSIGN
KV@VDH_CNC
     15568**DCL     16136<<ASSIGN  16139<>CALL    17190<<ASSIGN  17194<>CALL
KV@VDH_CNC.DSTNTWADR.LDCTX
     15631**DCL     16138<<ASSIGN
KV@VDH_CNC.LCLENDPNTID
     15618**DCL     17193<<ASSIGN
KV@VDH_CNC.LCLENDPNTID.TERM
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:401  
     15620**DCL     15629--REDEF
KV@VDH_CNC.NEWSSN
     15600**DCL     17191<<ASSIGN
KV@VDH_CNC.SSNCNCINT
     15600**DCL     16137<<ASSIGN  17192<<ASSIGN
KV@VDH_DAT
     15667**DCL     15952<<ASSIGN  15953<>CALL    17050<<ASSIGN  17051<>CALL    17922<<ASSIGN  17927<>CALL
KV@VDH_DAT.CMPCOD
     15707**DCL     17923<<ASSIGN
KV@VDH_GETPRM
     15742**DCL     18533<<ASSIGN  18536<>CALL
KV@VDH_GETPRM.BFRHED$
     15775**DCL     18537>>ASSIGN
KV@VDH_GETPRM.BFRLMTEXC
     15748**DCL     18538>>ASSIGN
KV@VDH_GETPRM.MAXBYTSIZ
     15775**DCL     15775--REDEF   18535<<ASSIGN
KV@VDH_GETPRM.PRMID
     15748**DCL     18534<<ASSIGN
KV@VDOVLP_MRK
     15813**DCL     18909--ASSIGN  18910<<ASSIGN
KV@VDOVLP_MRK.RSP
     15827**DCL     18911<<ASSIGN
KVC$CNC
       210**DCL-ENT 16139--CALL    17194--CALL
KVC$DCLSTR
       212**DCL-ENT 17883--CALL
KVC$DSC
       211**DCL-ENT 15945--CALL    16208--CALL    16221--CALL    16377--CALL    17966--CALL
KVC$OPNFRM
       213**DCL-ENT 18208--CALL
KVC$RLSFRM
       214**DCL-ENT 17166--CALL    17189--CALL    18211--CALL
KVC$RLSMVD
       215**DCL-ENT 17867--CALL
KVC$RLSSSN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:402  
       216**DCL-ENT 19160--CALL    19177--CALL
KVC$RLSSTR
       217**DCL-ENT 17206--CALL
KVC$RLSVDI
       218**DCL-ENT 19161--CALL
KVE$DLTALLRCR
       221**DCL-ENT 17169--CALL    18028--CALL
KVE$DSPUPD
       222**DCL-ENT 17170--CALL    18809--CALL
KVE$INSREC
       223**DCL-ENT 17503--CALL
KVE$RQSDAT
       224**DCL-ENT 18420--CALL
KVF$ADDFLD
       225**DCL-ENT 17720--CALL
KVF$ALLFLD_RSTSLC
       226**DCL-ENT 19375--CALL
KVF$FNDFLD
       227**DCL-ENT 17542--CALL    19348--CALL
KVF$FNDFLDID
       228**DCL-ENT 19355--CALL
KVF$NXTSLCFLD
       229**DCL-ENT 19510--CALL
KVF$RQSDAT
       230**DCL-ENT 18414--CALL
KVF$TOPPAG
       231**DCL-ENT 17490--CALL
KVF$UPDFRM_CRT
       232**DCL-ENT 17177--CALL    18808--CALL
KVI$ABRRED
       233**DCL-ENT 18347--CALL    18370--CALL
KVI$ACTRED
       234**DCL-ENT 15953--CALL    17051--CALL    17927--CALL
KVI$ENBNO_WATRED
       235**DCL-ENT 17006--CALL
KVI$ENBRED
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:403  
       236**DCL-ENT 17468--CALL
KVI$INTINPOPRX
       237**DCL-ENT 17469--CALL    17915--CALL    17917--CALL
KVI$RQSDAT
       238**DCL-ENT 18424--CALL
KVM$FLUSHCQ
       239**DCL-ENT 16454--CALL
KVM$SND
       240**DCL-ENT 16328--CALL    16338--CALL    17009--CALL    18167--CALL    18378--CALL    18598--CALL
     18924--CALL    19050--CALL
KVM$UIFT
       241**DCL-ENT 17261--CALL
KVM_BADLDCT
     14299**DCL     16020<>CALL
KVO$DVCCTR
       242**DCL-ENT 17377--CALL    17439--CALL
KVO$ERSMRD
       243**DCL-ENT 19562--CALL
KVO$ERSSRD
       244**DCL-ENT 19563--CALL
KVO$OTP1_NONVRT
       245**DCL-ENT 18750--CALL    18757--CALL    19142--CALL
KVO$OTPLCL
       246**DCL-ENT 17340--CALL    17411--CALL    18755--CALL    19151--CALL
KVO$PST
       247**DCL-ENT 17100--CALL    18766--CALL
KVO$PSTAFTHI_NONBLNPHSPST
       248**DCL-ENT 18748--CALL
KVO$SCRENDNO_HLT
       249**DCL-ENT 17094--CALL
KVO$VFCAFTTXT
       250**DCL-ENT 17428--CALL
KVO$VFCBFRTXT
       251**DCL-ENT 17397--CALL
KVO$X364
       252**DCL-ENT 17412--CALL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:404  
KVP$GETPRM
       253**DCL-ENT 18536--CALL
KVP$SETPRM
       254**DCL-ENT 18254--CALL    18860--CALL
KVS$SETSTR
       255**DCL-ENT 15920--CALL    16524--CALL    16531--CALL    17168--CALL    17176--CALL    17188--CALL
     17198--CALL    17204--CALL    17207--CALL    17866--CALL    18207--CALL    18739--CALL    18968--CALL
     19060--CALL
KVV$CALUSR
       256**DCL-ENT 18934--CALL    18943--CALL    18951--CALL    18958--CALL    19559--CALL    19749--CALL
KVV$CALUSR_EVT
       257**DCL-ENT 15960--CALL    16195--CALL    16244--CALL    16367--CALL    17075--CALL    17122--CALL
     17419--CALL    17444--CALL    18157--CALL    19087--CALL    19116--CALL    19154--CALL
KVV$CALUSR_PST
       258**DCL-ENT 19732--CALL
KVV$VDIINT
       259**DCL-ENT 18458--CALL
KV_CQ_HNDSBR$
      7199**DCL     16429>>ASSIGN
KV_FLD
      8235**DCL     17732>>ASSIGN
KV_MVD
      6742**DCL     15889>>ASSIGN
KV_RCVCQ$
      7199**DCL     15972>>ASSIGN
KV_RCVSSN
     14475**DCL     15887--ASSIGN  15888<<ASSIGN  19204<<ASSIGN
KV_RCVSSN.BFRLMTEXC
     14475**DCL     18538<<ASSIGN  18543<<ASSIGN  18551>>IF
KV_RCVSSN.FLDWRDSIZ
     14475**DCL     17719<<ASSIGN
KV_RCVSSN.PRVPTR$
     14476**DCL     17932>>IF      18429>>IF      18431>>IF      18431>>IF      18431>>IF      18440>>ASSIGN
     18453>>ASSIGN  18455>>ASSIGN  18457>>ASSIGN  18460<<ASSIGN  19052>>IF
KV_RCVSSN.PRVSTR$
     14476**DCL     16537<<ASSIGN  17195>>IF      17196>>IF      17197<<ASSIGN  17205>>IF      17205<<ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:405  
     17877>>IF      17877<<ASSIGN  17931<<ASSIGN  19052>>IF
KV_RCVSSN$
     13381**DCL      6577--IMP-PTR 15885<<ASSIGN  15901>>IF      15901>>IF      15904<<ASSIGN  15905>>ASSIGN
     15908>>ASSIGN  15910>>IF      15922>>ASSIGN  15930>>ASSIGN  15944>>ASSIGN  15996>>IF      15997>>IF
     15997>>IF      16004<<ASSIGN  16005>>IF      16023>>ASSIGN  16029>>ASSIGN  16030>>ASSIGN  16141>>ASSIGN
     16190>>IF      16208>>IF      16209>>ASSIGN  16215>>ASSIGN  16216>>IF      16220>>ASSIGN  16223>>IF
     16237>>IF      16329>>ASSIGN  16330>>ASSIGN  16331>>ASSIGN  16332>>ASSIGN  16333>>ASSIGN  16336>>ASSIGN
     16341>>IF      16347>>IF      16362>>IF      16379>>ASSIGN  16489>>IF      16493>>ASSIGN  16513>>IF
     16526>>IF      16995>>ASSIGN  16996>>IF      17002>>ASSIGN  17006>>IF      17007>>IF      17007>>IF
     17007>>IF      17010>>IF      17010>>IF      17013>>ASSIGN  17016>>ASSIGN  17052>>IF      17070>>IF
     17089>>IF      17097>>ASSIGN  17101>>ASSIGN  17115>>IF      17196>>IF      17241>>IF      17264>>IF
     17264>>IF      17264>>IF      17290>>ASSIGN  17290>>ASSIGN  17300>>ASSIGN  17300>>ASSIGN  17322>>IF
     17322>>IF      17335>>IF      17356>>ASSIGN  17357>>IF      17358>>IF      17370>>IF      17443>>IF
     17455>>IF      17459>>IF      17459>>IF      17589>>IF      17855>>ASSIGN  17913>>ASSIGN  17920>>ASSIGN
     17965>>ASSIGN  17998>>ASSIGN  18150>>IF      18164>>ASSIGN  18165>>ASSIGN  18166>>ASSIGN  18320>>ASSIGN
     18344>>ASSIGN  18345>>IF      18345>>IF      18353>>IF      18358>>IF      18393>>ASSIGN  18394>>ASSIGN
     18395>>ASSIGN  18429>>IF      18431>>IF      18438>>IF      18441>>ASSIGN  18442>>ASSIGN  18443>>ASSIGN
     18444>>ASSIGN  18445>>ASSIGN  18446>>ASSIGN  18448>>ASSIGN  18449>>ASSIGN  18522>>IF      18529>>IF
     18537>>ASSIGN  18546>>IF      18550>>ASSIGN  18559>>ASSIGN  18559>>ASSIGN  18560>>IF      18726>>ASSIGN
     18731>>IF      18741>>IF      18741>>IF      18758>>IF      18758>>IF      18876>>IF      18880>>ASSIGN
     18882>>IF      18886>>ASSIGN  19040>>IF      19044>>IF      19044>>IF      19044>>IF      19044>>IF
     19062>>ASSIGN  19070>>IF      19070>>IF      19082>>IF      19086>>ASSIGN  19109>>IF      19123>>IF
     19127>>IF      19133>>IF      19140>>IF      19140>>IF      19140>>IF      19143>>ASSIGN  19146>>IF
     19149>>IF      19150>>ASSIGN  19159<<ASSIGN  19168>>ASSIGN  19176>>ASSIGN  19182<<ASSIGN  19189>>IF
     19189>>IF      19197>>ASSIGN  19198<<ASSIGN  19729>>IF
KV_RCVVDO
     14494**DCL     15886--ASSIGN  16503<<ASSIGN
KV_RCVVDO.OTPLCL
     14537**DCL     17340<>CALL    17411<>CALL    17412<>CALL    18755<>CALL
KV_RCVVDO.OTPLCL.BFR_.ADR$
     14568**DCL     12384--IMP-PTR 16691<<ASSIGN  16726<<ASSIGN  17259>>ASSIGN  17312<<ASSIGN  17331>>IF
     17402>>IF      18249>>ASSIGN  18727>>IF      19287>>IF      19297>>IF      19298>>ASSIGN  19299>>IF
     19633>>IF      19741>>IF      19742>>ASSIGN
KV_RCVVDO.OTPLCL.BFR_.BYTSIZ
     14568**DCL     16692<<ASSIGN  16727<<ASSIGN  17260>>ASSIGN  17294>>ASSIGN  17300>>ASSIGN  17409>>ASSIGN
     17413>>IF      17414<<ASSIGN  17420>>IF      17445>>IF      18247>>IF      18250>>ASSIGN  19288>>IF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:406  
     19289<<ASSIGN  19290>>ASSIGN  19743>>ASSIGN
KV_RCVVDO.OTPLCL.NONVRT
     14541**DCL     18754<<ASSIGN
KV_RCVVDO.OTPLCL.NO_WRAP
     14542**DCL     17358<<ASSIGN  17388<<ASSIGN  17416>>IF
KV_RCVVDO.OTPLCL.TRN
     14541**DCL     17339<<ASSIGN
KV_RCVVDO.PRVSTR$
     14620**DCL     15917<<ASSIGN  17930<<ASSIGN  17931>>ASSIGN  18963>>IF      19059<<ASSIGN
KV_RCVVDO.VDOVLP$
     14494**DCL     11490--IMP-PTR 16544>>DOUNTIL 16554<<ASSIGN  16555>>DOCASE  16587>>ASSIGN  16589>>ASSIGN
     16621>>ASSIGN  16623>>ASSIGN  16655>>ASSIGN  16657>>ASSIGN  16689>>ASSIGN  16690>>ASSIGN  16724>>ASSIGN
     16725>>ASSIGN  16759>>ASSIGN  16760>>ASSIGN  16792>>ASSIGN  16793>>ASSIGN  16825>>ASSIGN  16826>>ASSIGN
     16863>>ASSIGN  16864>>ASSIGN  16901>>ASSIGN  16902>>ASSIGN
KV_RCVVDO.VDOVLP_ACTPOS$
     14494**DCL     11540--IMP-PTR
KV_RCVVDO.VDOVLP_CG_MSGID$
     14494**DCL     11592--IMP-PTR 16587<<ASSIGN  18574>>IF      18579>>ASSIGN  18580>>ASSIGN  18921>>ASSIGN
KV_RCVVDO.VDOVLP_CG_MSGTYP$
     14495**DCL     11645--IMP-PTR 16621<<ASSIGN  18582>>IF      18587>>ASSIGN  18588>>ASSIGN  18922>>ASSIGN
KV_RCVVDO.VDOVLP_CG_STA$
     14495**DCL     11698--IMP-PTR 16655<<ASSIGN  18590>>IF      18595>>ASSIGN  18596>>ASSIGN  18923>>ASSIGN
KV_RCVVDO.VDOVLP_DAT1$
     14496**DCL     11750--IMP-PTR 16689<<ASSIGN  16690>>ASSIGN  16690>>ASSIGN  16691>>ASSIGN  16692>>ASSIGN
     16692>>ASSIGN
KV_RCVVDO.VDOVLP_DAT2$
     14496**DCL     11801--IMP-PTR 16724<<ASSIGN  16725>>ASSIGN  16725>>ASSIGN  16726>>ASSIGN  16727>>ASSIGN
     16727>>ASSIGN
KV_RCVVDO.VDOVLP_ENTSRD$
     14496**DCL     11852--IMP-PTR 16759<<ASSIGN  16760>>ASSIGN  16760>>ASSIGN  18851>>IF      18857>>ASSIGN
     18859>>ASSIGN
KV_RCVVDO.VDOVLP_ERR$
     14497**DCL     11903--IMP-PTR 16792<<ASSIGN  17497>>IF      17502>>IF
KV_RCVVDO.VDOVLP_FLDID$
     14497**DCL     12001--IMP-PTR 16825<<ASSIGN  18407>>IF      18628>>IF      19355>>CALL
KV_RCVVDO.VDOVLP_KEY$
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:407  
     14498**DCL     12053--IMP-PTR 12159--IMP-PTR 16863<<ASSIGN  16864>>ASSIGN  16864>>ASSIGN  17496>>IF
     18407>>IF      18628>>IF      19341>>ASSIGN  19342>>ASSIGN
KV_RCVVDO.VDOVLP_MRK$
     14498**DCL     12104--IMP-PTR 16901<<ASSIGN  17654>>IF      17655>>IF      17655>>IF      18863>>IF
     18867>>IF      18871>>IF      18876>>IF      18882>>IF      18894>>DOCASE  18910>>ASSIGN  18933>>ASSIGN
     18942>>ASSIGN  18950>>ASSIGN  19004>>IF      19005>>IF
KV_RCVVDO.VDP_VDO
     14606**DCL     15909<<ASSIGN  16509<<ASSIGN
KV_RCVVDO.VDP_VDO.LGLVD_ORG_BIT
     14609**DCL     14611--REDEF
KV_RCVVDO.VDP_VDO.PSTSTR
     14615**DCL     15915<<ASSIGN  16533>>IF      18737<<ASSIGN
KV_RCVVDO.VDP_VDO.RSTSTR
     14614**DCL     15916<<ASSIGN  16523<<ASSIGN  16533>>IF      18206<<ASSIGN  18738<<ASSIGN
KV_RCVVDO.VDP_VDO.RUTACK
     14615**DCL     16588<<ASSIGN  16622<<ASSIGN  16656<<ASSIGN  17257<<ASSIGN  18901>>IF
KV_RCVVDO.VDP_VDO.SETSTR
     14614**DCL     15914<<ASSIGN  16522>>IF      16530<<ASSIGN  18736<<ASSIGN  18967<<ASSIGN  19058<<ASSIGN
KV_RCVVDO.VDP_VDO.WRDSIZ
     14616**DCL     16538>>ASSIGN
KV_RCVVDO$
     13383**DCL     10081--IMP-PTR 10122--IMP-PTR 10166--IMP-PTR 10209--IMP-PTR 10253--IMP-PTR 10299--IMP-PTR
     10426--IMP-PTR 10470--IMP-PTR 10516--IMP-PTR 10559--IMP-PTR 10603--IMP-PTR 10646--IMP-PTR 10689--IMP-PTR
     10731--IMP-PTR 10773--IMP-PTR 10816--IMP-PTR 10860--IMP-PTR 10902--IMP-PTR 10944--IMP-PTR 10986--IMP-PTR
     11035--IMP-PTR 11077--IMP-PTR 11121--IMP-PTR 11163--IMP-PTR 11205--IMP-PTR 11288--IMP-PTR 11374--IMP-PTR
     11417--IMP-PTR 11459--IMP-PTR 15918<<ASSIGN  15919>>ASSIGN  16040<<ASSIGN  16498>>DOWHILE 16509>>ASSIGN
     16511>>ASSIGN  16511>>ASSIGN  16518>>ASSIGN  16522>>IF      16538>>ASSIGN  16540>>IF      16959>>ASSIGN
     16962>>DOCASE  16996>>IF      17002>>ASSIGN  17074>>ASSIGN  17183>>IF      17184>>IF      17201>>IF
     17255>>IF      17255>>IF      17280>>IF      17292>>ASSIGN  17296>>IF      17304>>ASSIGN  17305>>IF
     17307>>IF      17316>>IF      17316>>IF      17322>>IF      17322>>IF      17355>>IF      17356>>ASSIGN
     17365>>IF      17396>>IF      17427>>IF      17437>>IF      17485>>IF      17485>>IF      17540>>ASSIGN
     17541>>ASSIGN  17554>>ASSIGN  17554>>ASSIGN  17555>>IF      17578>>ASSIGN  17601>>IF      17601>>IF
     17645>>ASSIGN  17663>>ASSIGN  17721>>ASSIGN  17733>>ASSIGN  17736>>ASSIGN  17737>>ASSIGN  17738>>ASSIGN
     17740>>ASSIGN  17755>>IF      17756>>ASSIGN  17762>>ASSIGN  17767>>ASSIGN  17851>>ASSIGN  17858>>IF
     17913>>IF      17914>>IF      17916>>IF      17918>>IF      17929>>IF      17965>>ASSIGN  18065>>ASSIGN
     18067>>ASSIGN  18200>>DOCASE  18208>>CALL    18252>>IF      18316>>IF      18320>>ASSIGN  18325>>ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:408  
     18327>>IF      18331>>ASSIGN  18336>>ASSIGN  18358>>IF      18382>>IF      18392>>ASSIGN  18393>>ASSIGN
     18394>>ASSIGN  18398>>ASSIGN  18399>>ASSIGN  18400>>ASSIGN  18401>>ASSIGN  18534>>ASSIGN  18535>>ASSIGN
     18970<<ASSIGN  19493>>ASSIGN  19528>>DOCASE  19589>>ASSIGN  19610>>IF      19614>>ASSIGN  19620>>ASSIGN
     19659>>IF      19659>>IF      19745>>IF      19746>>ASSIGN  19747>>ASSIGN  19748>>ASSIGN
KV_SND_CMPDSCSSN
      8509**DCL     16328<>CALL
KV_SND_CMPDSCSSN.VDOVLP
      8543**DCL      8546--REDEF
KV_SND_CNC
      8564**DCL     16334>>ASSIGN
KV_SND_CNC.SCNENDPNTID.TERM
      8624**DCL      8633--REDEF
KV_SND_CNC.VDOVLP
      8598**DCL      8601--REDEF
KV_SND_MRK
      8652**DCL     18908>>ASSIGN
KV_SND_MRK.VDOVLP
      8686**DCL      8689--REDEF
KV_SND_PRM
      8708**DCL     18545>>ASSIGN
KV_SND_PRM.VDOVLP
      8742**DCL      8745--REDEF
KV_SND_RQSDAT_GNR
      8793**DCL     17009<>CALL    18167<>CALL    19050<>CALL
KV_SND_RQSDAT_GNR.VDOVLP
      8827**DCL      8830--REDEF
KV_SP_MSG
      8966**DCL     15989--ASSIGN
KV_SRD
      6785**DCL     15891>>ASSIGN
KV_SRD.BTMRHT
      6881**DCL      6886--REDEF
KV_SRD.CRT
      6957**DCL      6962--REDEF
KV_SRD.FLDEND
      6921**DCL      6926--REDEF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:409  
KV_SRD.HI_NONBLN
      6991**DCL      6996--REDEF
KV_SRD.ORG
      6813**DCL      6818--REDEF
KV_SRD.SRDEND
      7026**DCL      7031--REDEF
KV_SRD.TOPLFT
      6847**DCL      6852--REDEF
KV_SSN.BP
      6628**DCL     18393<<ASSIGN
KV_SSN.BRKCNT
      6587**DCL     17913<<ASSIGN
KV_SSN.CLKSET
      6596**DCL     15922<<ASSIGN  17010>>IF      17016<<ASSIGN
KV_SSN.CLSPND
      6590**DCL     18353>>IF
KV_SSN.DSCRSPRCV
      6593**DCL     17998<<ASSIGN
KV_SSN.HDNTYPIS_DCB
      6589**DCL     17356<<ASSIGN
KV_SSN.INPDLTMRKNMB
      6582**DCL     18882>>IF
KV_SSN.LGCDSC
      6593**DCL     16208>>IF      16216>>IF      16220<<ASSIGN  16341>>IF
KV_SSN.LGN
      6591**DCL     16223>>IF      16329<<ASSIGN  16347>>IF      17052>>IF
KV_SSN.LSTOTPRCRID
      6584**DCL     18164<<ASSIGN
KV_SSN.LSTPRMID
      6630**DCL     19149>>IF      19150<<ASSIGN
KV_SSN.MRKRQSENB
      6591**DCL     16029<<ASSIGN
KV_SSN.MSGHLT
      6628**DCL     17358>>IF      17443>>IF
KV_SSN.MSGLIN
      6628**DCL     17357>>IF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:410  
KV_SSN.NO_WATREDTRG
      6595**DCL     17006>>IF
KV_SSN.OPN
      6594**DCL     17101<<ASSIGN  18166<<ASSIGN
KV_SSN.OTPBLK
      6591**DCL     16995<<ASSIGN  17010>>IF      18165<<ASSIGN
KV_SSN.OTPDLTMRKNMB
      6582**DCL     18876>>IF
KV_SSN.OUTPUTDISCARD
      6592**DCL     17264>>IF
KV_SSN.RCVFLWCTRCRDINC
      6585**DCL     16333<<ASSIGN  17300<<ASSIGN  17300>>ASSIGN  19044>>IF
KV_SSN.RCVFLWCTRTMPMAXCRD
      6585**DCL     17002<<ASSIGN
KV_SSN.REDBFR__.DATBYTSIZ
      6623**DCL     18345>>IF      18431>>IF
KV_SSN.REDMLT
      6628**DCL     18394<<ASSIGN
KV_SSN.REDRQSPND
      6595**DCL     17007>>IF      17920<<ASSIGN  18344>>ASSIGN  18345>>IF
KV_SSN.REDRSPCNT
      6583**DCL      6584--REDEF
KV_SSN.REDSTRID
      6629**DCL     17459>>IF
KV_SSN.RLSSSN
      6593**DCL     16209<<ASSIGN  16379<<ASSIGN  19123>>IF
KV_SSN.SNCPTR$
      6578**DCL     15905>>ASSIGN  16023>>ASSIGN  16141>>ASSIGN  19176>>ASSIGN
KV_SSN.SNDMAXNMBBYT
      6581**DCL     18320>>ASSIGN  18395<<ASSIGN
KV_SSN.SNDPRMBFRHED$
      6586**DCL     18529>>IF      18537<<ASSIGN  18546>>IF      18550>>ASSIGN  18559<<ASSIGN  18559>>ASSIGN
     18560>>IF
KV_SSN.SSNCNCID
      6586**DCL     16005>>IF      16215<<ASSIGN  19044>>IF
KV_SSN.SSNID
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:411  
      6627**DCL     17459>>IF
KV_SSN.STR$
      6577**DCL     17855>>ASSIGN
KV_SSN.STTRQSENB
      6594**DCL     16330<<ASSIGN  18726<<ASSIGN
KV_SSN.TRCBFR$
      6580**DCL     16489>>IF      16493>>ASSIGN  16513>>IF
KV_SSN.TYPAHDBFRCNT
      6588**DCL     18441<<ASSIGN
KV_SSN.TYPAHDBFRHED$
      6579**DCL     18448>>ASSIGN  18449<<ASSIGN
KV_SSN.TYPAHDBFRINPFNC$
      6579**DCL     18442<<ASSIGN
KV_SSN.TYPAHDBFRINPFNCX
      6588**DCL     18444<<ASSIGN
KV_SSN.TYPAHDBFRINS$
      6580**DCL     18443<<ASSIGN
KV_SSN.TYPCND
      6629**DCL     18445<<ASSIGN
KV_SSN.TYPCND.TRN
      6629**DCL     18446<<ASSIGN
KV_SSN.VDI$
      6577**DCL     15908>>ASSIGN  15910>>IF      15930>>ASSIGN  15944>>ASSIGN  15997>>IF      16030>>ASSIGN
     16190>>IF      16237>>IF      16336>>ASSIGN  16362>>IF      16526>>IF      16996>>IF      17007>>IF
     17007>>IF      17070>>IF      17089>>IF      17097>>ASSIGN  17115>>IF      17241>>IF      17264>>IF
     17322>>IF      17322>>IF      17335>>IF      17370>>IF      17455>>IF      17589>>IF      17965>>ASSIGN
     18150>>IF      18429>>IF      18438>>IF      18731>>IF      18741>>IF      18741>>IF      18758>>IF
     18758>>IF      19044>>IF      19044>>IF      19062>>ASSIGN  19070>>IF      19070>>IF      19082>>IF
     19086>>ASSIGN  19109>>IF      19127>>IF      19133>>IF      19140>>IF      19140>>IF      19140>>IF
     19143>>ASSIGN  19146>>IF      19168>>ASSIGN  19189>>IF      19189>>IF      19197>>ASSIGN  19729>>IF
KV_SSN.WATINPDLTMRK
      6592**DCL     16331<<ASSIGN  18358>>IF      18522>>IF      18886<<ASSIGN
KV_SSN.WATOTPDLTMRK
      6592**DCL     16332<<ASSIGN  17264>>IF      18880<<ASSIGN
KV_SSN.WRTRQSCNT
      6586**DCL     17290<<ASSIGN  17290>>ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:412  
KV_USR_DAT
      9043**DCL     19740>>ASSIGN
KV_USR_EVT
      9257**DCL     15957>>ASSIGN  16192>>ASSIGN  16364>>ASSIGN  17072>>ASSIGN  19075>>ASSIGN
KV_USR_PST.PHSPST
      9325**DCL      9330--REDEF
KV_USR_RQSDAT
      9362**DCL     18397>>ASSIGN
KV_USR_SETATR
      9398**DCL     19559<>CALL
KV_VDH_CNC
      9426**DCL     16136>>ASSIGN  17190>>ASSIGN
KV_VDH_CNC.LCLENDPNTID.TERM
      9478**DCL      9487--REDEF
KV_VDH_DAT
      9524**DCL     18458<>CALL
KV_VDH_DAT_CLS
      9684**DCL     17050>>ASSIGN
KV_VDH_DAT_TIMOUT
      9604**DCL     15952>>ASSIGN  17922>>ASSIGN
KV_VDH_DSC
      9758**DCL     16208<>CALL    16221<>CALL    16377<>CALL    17966<>CALL
KV_VDH_GETPRM
      9794**DCL     18533>>ASSIGN
KV_VDH_GETPRM.MAXBYTSIZ
      9827**DCL      9827--REDEF
KV_VDH_PST_NEWLIN_VRT
      9930**DCL     17100<>CALL
KV_VDH_PST_NEWLIN_VRT.PSTVAL
      9968**DCL      9973--REDEF
KV_VDH_PST_VRT
      9856**DCL     18766<>CALL
KV_VDH_PST_VRT.PSTVAL
      9894**DCL      9899--REDEF
KV_VDO
     10081**DCL     18208<>CALL
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:413  
KV_VDO.FNC
     10085**DCL     16509>>ASSIGN  16511>>ASSIGN  16511>>ASSIGN  16518>>ASSIGN  16962>>DOCASE  17280>>IF
     17296>>IF      17355>>IF      17365>>IF      17437>>IF      19493>>ASSIGN  19528>>DOCASE
KV_VDO.STR
     10085**DCL     15919<<ASSIGN  16522>>IF      17183>>IF      18252>>IF
KV_VDO.VLP
     10085**DCL     16540>>IF
KV_VDOVLP
     11490**DCL     18858--ASSIGN
KV_VDOVLP.LST
     11494**DCL     16544>>DOUNTIL
KV_VDOVLP.TYP
     11494**DCL     16555>>DOCASE
KV_VDOVLP_CG_MSGID
     11592**DCL     16589--ASSIGN  18580--ASSIGN  18921--ASSIGN
KV_VDOVLP_CG_MSGID.RSP
     11606**DCL     18579<<ASSIGN
KV_VDOVLP_CG_MSGTYP
     11645**DCL     16623--ASSIGN  18588--ASSIGN  18922--ASSIGN
KV_VDOVLP_CG_MSGTYP.RSP
     11659**DCL     18587<<ASSIGN
KV_VDOVLP_CG_STA
     11698**DCL     16657--ASSIGN  18596--ASSIGN  18923--ASSIGN
KV_VDOVLP_CG_STA.RSP
     11712**DCL     18595<<ASSIGN
KV_VDOVLP_DAT1
     11750**DCL     16690--ASSIGN
KV_VDOVLP_DAT1.BYTSIZ
     11756**DCL     11761--IMP-SIZ 16690>>ASSIGN  16692>>ASSIGN
KV_VDOVLP_DAT1.DAT
     11761**DCL     16691--ASSIGN  16692--ASSIGN
KV_VDOVLP_DAT2
     11801**DCL     16725--ASSIGN
KV_VDOVLP_DAT2.BYTSIZ
     11809**DCL     11812--IMP-SIZ 16725>>ASSIGN  16727>>ASSIGN
KV_VDOVLP_DAT2.DAT
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:414  
     11812**DCL     16726--ASSIGN  16727--ASSIGN
KV_VDOVLP_ENTSRD
     11852**DCL     16760--ASSIGN  18857--ASSIGN
KV_VDOVLP_ENTSRD.BYTSIZ
     11858**DCL     11863--IMP-SIZ 16760>>ASSIGN  18859>>ASSIGN
KV_VDOVLP_ERR
     11903**DCL     16793--ASSIGN
KV_VDOVLP_ERR.ERRCODE.ERR#
     11961**DCL     17502>>IF
KV_VDOVLP_FLDID
     12001**DCL     16826--ASSIGN
KV_VDOVLP_FLDID.FLDID
     12015**DCL     19355<>CALL
KV_VDOVLP_KEY
     12053**DCL     16864--ASSIGN
KV_VDOVLP_KEY.BYTSIZ
     12059**DCL     12064--IMP-SIZ 16864>>ASSIGN
KV_VDOVLP_MRK
     12104**DCL     16902--ASSIGN  18910>>ASSIGN
KV_VDOVLP_MRK.ID
     12119**DCL     18933>>ASSIGN  18942>>ASSIGN  18950>>ASSIGN
KV_VDOVLP_MRK.ID.UBIN_DBLBYT
     12119**DCL     18876>>IF      18882>>IF
KV_VDOVLP_MRK.MRKTYP
     12118**DCL     17655>>IF      18871>>IF      18894>>DOCASE  19005>>IF
KV_VDOVLP_MRK.RSP
     12118**DCL     17655>>IF      18867>>IF
KV_VDO_BLKDAT.RCRBYTSIZ
     10129**DCL     16996>>IF      17002>>ASSIGN
KV_VDO_CLSSSN.RSN
     10173**DCL     17074>>ASSIGN
KV_VDO_CLSSTR.DLT
     10216**DCL     17201>>IF
KV_VDO_CLSSTR.NEWSSN
     10216**DCL     17184>>IF
KV_VDO_DAT.CTN.NXT
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:415  
     10260**DCL     17427>>IF
KV_VDO_DAT.CTN.PRV
     10260**DCL     17396>>IF
KV_VDO_DAT.DATCTRCHR
     10262**DCL     17255>>IF      17304>>ASSIGN  17485>>IF      19746>>ASSIGN
KV_VDO_DAT.DATCTRCHRTYP
     10261**DCL     17255>>IF      17305>>IF      17307>>IF      17485>>IF      19745>>IF      19747>>ASSIGN
KV_VDO_DAT.DATMOD
     10262**DCL     17316>>IF      17316>>IF      17322>>IF      17322>>IF      19748>>ASSIGN
KV_VDO_DAT.DCBHDR
     10261**DCL     17356>>ASSIGN
KV_VDO_DCLFLD.CLM
     10306**DCL     17540>>ASSIGN  17554>>ASSIGN  17736>>ASSIGN  17737>>ASSIGN  17738>>ASSIGN
KV_VDO_DCLFLD.GRPRND
     10368**DCL     17756>>ASSIGN  17762>>ASSIGN
KV_VDO_DCLFLD.GRPRND.ABS
     10374**DCL     17755>>IF
KV_VDO_DCLFLD.ID
     10390**DCL     17578>>ASSIGN  17645>>ASSIGN  17721>>ASSIGN  17733>>ASSIGN
KV_VDO_DCLFLD.LIN
     10306**DCL     17541>>ASSIGN
KV_VDO_DCLFLD.QLF
     10325**DCL     17740>>ASSIGN
KV_VDO_DCLFLD.WDT
     10307**DCL     17554>>ASSIGN  17555>>IF      17601>>IF      17601>>IF      17663>>ASSIGN  17767>>ASSIGN
KV_VDO_DCLSTR.RE_STR
     10433**DCL     17858>>IF
KV_VDO_DCLSTR.STRID
     10433**DCL     17851>>ASSIGN
KV_VDO_DLT.CTLFLG.ABRRED
     10478**DCL     17918>>IF
KV_VDO_DLT.CTLFLG.CRSHER
     10477**DCL     17929>>IF
KV_VDO_DLT.CTLFLG.DLTINP
     10478**DCL     17914>>IF
KV_VDO_DLT.CTLFLG.DLTOTP
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:416  
     10479**DCL     17916>>IF
KV_VDO_DLT.CTLFLG.RSTBRKCNT
     10478**DCL     17913>>IF
KV_VDO_DSC.INTPHSDSC
     10523**DCL     17965>>ASSIGN
KV_VDO_ERS.CNS
     10566**DCL     19659>>IF
KV_VDO_ERS.PRT
     10566**DCL     19659>>IF
KV_VDO_HVPS.CLM
     10653**DCL     18067>>ASSIGN
KV_VDO_HVPS.LIN
     10653**DCL     18065>>ASSIGN
KV_VDO_OPNSTR.ORG
     10823**DCL     18200>>DOCASE
KV_VDO_RQSDAT.BP
     10997**DCL     18393>>ASSIGN
KV_VDO_RQSDAT.DATMOD
     10996**DCL     18399>>ASSIGN
KV_VDO_RQSDAT.EOFNO_DAT
     10997**DCL     18401>>ASSIGN
KV_VDO_RQSDAT.INCMAXNMBBYT
     10995**DCL     18316>>IF
KV_VDO_RQSDAT.INCMAXNMBRCR
     10995**DCL     18327>>IF
KV_VDO_RQSDAT.MAXNMBBYT
     10994**DCL     18320>>ASSIGN  18325>>ASSIGN
KV_VDO_RQSDAT.MAXNMBRCR
     10993**DCL     18331>>ASSIGN  18336>>ASSIGN
KV_VDO_RQSDAT.MAXRCRBYTSIZ
     10993**DCL     18382>>IF      18398>>ASSIGN
KV_VDO_RQSDAT.READMLT
     10998**DCL     18394>>ASSIGN
KV_VDO_RQSDAT.RE_RED
     10996**DCL     18400>>ASSIGN
KV_VDO_RQSDAT.WAT
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:417  
     10997**DCL     18358>>IF      18392>>ASSIGN
KV_VDO_RQSPRM.MAXNMBBYT
     11084**DCL     18535>>ASSIGN
KV_VDO_RQSPRM.PRMID
     11084**DCL     18534>>ASSIGN
KV_VDO_SLCGRPRND.GRPRND
     11230**DCL     19614>>ASSIGN  19620>>ASSIGN
KV_VDO_SLCGRPRND.GRPRND.ABS
     11236**DCL     19610>>IF
KV_VDO_SLCQLF.QLF
     11313**DCL     19589>>ASSIGN
KV_VDP_VDO
     12349**DCL     16509>>ASSIGN
LOOP_MSG
     16034**LABEL   16007--GOTO
NO_SE_KEY IN PROCEDURE Y$RCVVDO
     17496**LABEL   17502--GOTO
NXT_MSG_LIN IN PROCEDURE Y$RCVVDO
     17369**LABEL   17421--GOTO    17446--GOTO
SET_ATR_UPD IN PROCEDURE Y$FRMVDO
     19610**LABEL   19602--GOTO
SND_MRK IN PROCEDURE Y$RCVVDO
     18902**LABEL   18934--CALLALT 18951--CALLALT 18958--CALLALT
Y$CANCEL_READ IN PROCEDURE Y$RCVVDO
     17920**LABEL   18346--GOTO
Y$CHKFORDFR IN PROCEDURE Y$CLNUP_SSN
     19064**LABEL   19144--GOTO    19152--GOTO    19162--EXIT    19183--GOTO    19200--EXIT
Y$CLNUP_SSN
     19039**PROC    15902--CALL    16002--CALL    16452--CALL
Y$DO_CASE_FNC IN PROCEDURE Y$RCVVDO
     16962**LABEL   17252--EXIT    17262--EXIT    17287--EXIT    17363--EXIT    17457--EXIT    17470--EXIT
     17491--EXIT    17500--EXIT    17582--EXIT    17652--EXIT    17658--EXIT    17722--EXIT    17859--EXIT
     17863--EXIT    17878--EXIT    18210--EXIT    18348--EXIT    18353--EXIT    18364--EXIT    18379--EXIT
     18389--EXIT    18527--EXIT
Y$FLD_TXT.TXT
      8210**DCL      8213--REDEF
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:418  
Y$FLD_TXT.TXTCHR
      8213**DCL     19297>>IF      19298<<ASSIGN
Y$FLD_TXT.WDT
      8205**DCL      8213--IMP-SIZ 19297>>IF      19298>>ASSIGN
Y$FRMVDO
     19477**PROC    17173--CALL    17493--CALL    18027--CALL    18283--CALL    18665--CALL    18694--CALL
Y$MOVDATTO_FLD
     19282**PROC    17818--CALL    19635--CALL    19645--CALL
Y$RCVVDO
     16483**PROC    16102--CALL    16135--CALL    16204--CALL    16253--CALL    16321--CALL    16413--CALL
Y$SETERRCOD
     19000**PROC    17251--CALL    17284--CALL    17360--CALL    17862--CALL
Y$SLCFLD_FLDID IN PROCEDURE Y$SLCFLD_KEY
     19351**ENTRY   16831--CALL
Y$SLCFLD_HVPS IN PROCEDURE Y$SLCFLD_KEY
     19344**ENTRY   18068--CALL
Y$SLCFLD_KEY
     19332**PROC    16869--CALL
Y$TRC
     19234**PROC    16496--CALL    16519--CALL
Y$TRCBFR.MAXTRCENTX
     12413**DCL     19249>>IF
Y$TRCBFR.TRCENT
     12438**DCL     19235>>IF      19252<<ASSIGN
Y$TRCBFR.TRCENT.MLT
     12442**DCL     19242<<ASSIGN
Y$TRCBFR.TRCENTX
     12413**DCL     19235>>IF      19242>>ASSIGN  19248<<ASSIGN  19248>>ASSIGN  19249>>IF      19250<<ASSIGN
     19252>>ASSIGN
Y$TXTCHR
     12384**DCL     19297>>IF      19298>>ASSIGN  19299>>IF
Y$USR_DAT
     19712**PROC    17348--CALL    17434--CALL
Y$VDOVLP_KEY.KEY
     12174**DCL     19341>>ASSIGN  19342>>ASSIGN
Y@CLK
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:419  
     12951**DCL     17015<>CALL
Y@CLK.CTBCTX$
     12957**DCL     17014<<ASSIGN
Y@CLK.PRD
     13072**DCL     17012<<ASSIGN
Y@CLK.UID
     12967**DCL     12968--REDEF   12969--REDEF
Y@CLK.UID$
     12968**DCL     17013<<ASSIGN
Y@CQ_HNDSBR$
     14708**DCL     16429<<ASSIGN  16434>>CALL
Y@FLDWRDSIZ
     14699**DCL     17663<<ASSIGN  17700>>IF      17719>>ASSIGN  17734>>ASSIGN
Y@FPT$
     14444**DCL      5231--IMP-PTR  5280--IMP-PTR 16037<<ASSIGN  16038<<ASSIGN  16171>>IF      16194>>ASSIGN
     16322>>IF      16322>>IF      16337>>ASSIGN  16366>>ASSIGN
Y@INHLVL
     14674**DCL     19187<<ASSIGN  19188<>CALL
Y@MY_RPTR
     14435**DCL     15896<<ASSIGN  15968>>IF      15972>>ASSIGN  16034>>ASSIGN  16435<<ASSIGN  16436>>IF
     16448>>IF      16449<<ASSIGN
Y@NXTVDOVLP$
     14626**DCL     16538<<ASSIGN  16548>>IF      16554>>ASSIGN  16589<<ASSIGN  16623<<ASSIGN  16657<<ASSIGN
     16690<<ASSIGN  16725<<ASSIGN  16760<<ASSIGN  16793<<ASSIGN  16826<<ASSIGN  16864<<ASSIGN  16902<<ASSIGN
     16944>>IF      16959>>ASSIGN  17292>>ASSIGN  18970>>ASSIGN
Y@NXT_RPTR
     14428**DCL     16034<<ASSIGN  16288<<ASSIGN  16424<<ASSIGN  16430<<ASSIGN  16434<>CALL    16435>>ASSIGN
     16436<<ASSIGN  16441>>IF      16441>>IF      16447<<ASSIGN  16448>>ASSIGN  16449>>ASSIGN
Y@PRVSTRWRDSIZ
     14709**DCL     17673<<ASSIGN  17675<<ASSIGN  17678<<ASSIGN  17735>>ASSIGN
Y@PRVVRTLINPHSLIN
     14630**DCL     17369<<ASSIGN  17456>>ASSIGN
Y@SICI$
     14419**DCL      5301--IMP-PTR 15972<<ASSIGN  15973>>IF      15977>>ASSIGN  15977>>ASSIGN  15981>>ASSIGN
     15983>>IF      15989>>ASSIGN  15997>>IF      16004>>ASSIGN  16005>>IF      16036>>IF      16037>>ASSIGN
     16040>>ASSIGN  16040>>ASSIGN  16069>>DOCASE  16101>>ASSIGN  16134>>ASSIGN  16138>>ASSIGN  16170>>ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:420  
     16215>>ASSIGN  16320>>ASSIGN  16412>>ASSIGN  16420>>IF      16429>>ASSIGN  16495>>ASSIGN
Y@SIDU_END$
     14440**DCL     15981<<ASSIGN  16498>>DOWHILE 16548>>IF      16944>>IF
Y@SIDU_WRDSIZ
     14424**DCL     14428--REDEF   15977<<ASSIGN  15981>>ASSIGN  16007>>IF      16032>>ASSIGN  16034>>ASSIGN
Y@SNDMAXNMBBYT
     14678**DCL     18320<<ASSIGN  18325<<ASSIGN  18338>>IF      18395>>ASSIGN
Y@SNDMAXNMBRCR
     14682**DCL     18331<<ASSIGN  18336<<ASSIGN  18338>>IF      18396>>ASSIGN
Y@SND_ERR IN PROCEDURE Y$RCVVDO
     18375**LABEL   18372--GOTO
Y@SP_MSG$
     14449**DCL      9011--IMP-PTR 15989<<ASSIGN  15991>>IF      16005>>IF
Y@TMP$
     14695**DCL     15930<<ASSIGN  15935>>IF      15942<<ASSIGN  15942>>ASSIGN  15943>>IF      17596<<ASSIGN
     17597<<ASSIGN  17598>>IF      17598>>IF      17653>>ASSIGN  17686<<ASSIGN  17701<<ASSIGN  17707>>IF
     17790<<ASSIGN  17791>>ASSIGN  17791>>ASSIGN  17795>>ASSIGN  17796>>ASSIGN  17808<<ASSIGN  17810>>IF
     17812>>IF      17813>>ASSIGN  17814>>ASSIGN  17815<<ASSIGN  17855<<ASSIGN  17856>>DOWHILE 17857>>IF
     17858>>IF      17860>>IF      17870>>ASSIGN  17871>>ASSIGN  17877>>ASSIGN  17880<<ASSIGN  17880>>ASSIGN
     18440<<ASSIGN  18441>>ASSIGN  18442>>ASSIGN  18443>>ASSIGN  18444>>ASSIGN  18445>>ASSIGN  18447>>ASSIGN
     18448>>ASSIGN  18449>>ASSIGN  18450>>ASSIGN  18450>>ASSIGN  18451>>ASSIGN  18452>>ASSIGN  19512<<ASSIGN
     19523<<ASSIGN  19542<<ASSIGN  19543>>ASSIGN  19544>>ASSIGN  19545>>IF      19546>>ASSIGN  19547>>ASSIGN
     19573>>ASSIGN  19574>>ASSIGN  19575>>ASSIGN  19576>>ASSIGN  19577>>ASSIGN  19578>>ASSIGN  19589>>ASSIGN
     19593>>IF      19594>>ASSIGN  19596>>ASSIGN  19597>>ASSIGN  19614>>ASSIGN  19620>>ASSIGN  19627>>ASSIGN
     19629>>IF      19631>>ASSIGN  19634>>ASSIGN  19644>>ASSIGN  19659>>IF      19659>>IF      19659>>IF
     19671>>IF      19676>>IF      19677>>ASSIGN  19679>>ASSIGN  19681>>ASSIGN
Y@TMPWRD1
     14686**DCL     14687--REDEF   15918--ASSIGN  17409<<ASSIGN  17413>>IF      17554<<ASSIGN  17593<<ASSIGN
     17593>>ASSIGN  17599<<ASSIGN  17601>>IF      17603<<ASSIGN  17607<<ASSIGN  17608>>IF      17608>>IF
     17649>>IF      17691<<ASSIGN  17693<<ASSIGN  17700>>IF      17769<<ASSIGN  17772>>IF      17776<<ASSIGN
     17778>>IF      17784<<ASSIGN  17784>>ASSIGN  17786>>ASSIGN  17787<<ASSIGN  17787>>ASSIGN  17805>>IF
     17810>>IF      17812>>IF      17851<<ASSIGN  17857>>IF      17883<>CALL    19540<<ASSIGN  19541>>DOUNTIL
     19542>>ASSIGN  19549<<ASSIGN  19549>>ASSIGN
Y@TMPWRD1U
     14687**DCL     17555>>IF
Y@TMPWRD2
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:421  
     14691**DCL     17791<<ASSIGN  17792<<ASSIGN  17792>>ASSIGN  17793>>IF      17794>>IF      17807<<ASSIGN
     17808>>ASSIGN  17809>>DOWHILE 17814<<ASSIGN  17814>>ASSIGN  17815>>ASSIGN
Y@TRCBFR$
     14666**DCL     12407--IMP-PTR 16493<<ASSIGN  19235>>IF      19235>>IF      19242>>ASSIGN  19242>>ASSIGN
     19248>>ASSIGN  19248>>ASSIGN  19249>>IF      19249>>IF      19250>>ASSIGN  19252>>ASSIGN  19252>>ASSIGN
Y@TRCENT
     14653**DCL     16494<<ASSIGN  16517<<ASSIGN  19235>>IF      19252>>ASSIGN
Y@TRCENT.FNC
     14661**DCL     16495<<ASSIGN  16518<<ASSIGN
Y@VFC
     14670**DCL     12384--IMP-SIZ 17304<<ASSIGN  17305>>IF      17305>>IF      17305>>IF      17307<<ASSIGN
     17312>>IF      17357<<ASSIGN  17359>>IF      17376>>IF      17396>>IF      17397<>CALL    17416>>IF
     17427>>IF      17428<>CALL    17438>>IF      17475>>IF      19284<<ASSIGN  19290<<ASSIGN  19292>>IF
     19296>>IF      19297>>IF      19298>>ASSIGN  19299>>IF      19303>>ASSIGN
Y_OTPLCL_RSTRGNSCR
     14074**DCL     19151<>CALL
Y_OTPLCL_RSTRGNSCR_TEXT
     14056**DCL     14107--DCLINIT
Y_RCVSSN
     13411**DCL     15888>>ASSIGN  19204>>ASSIGN
Y_RCVVDO
     13427**DCL     16503>>ASSIGN
Y_RCVVDO.VDP_VDO.LGLVD_ORG_BIT
     13542**DCL     13544--REDEF
Y_SND_DAT
     13569**DCL     18378<>CALL
Y_SND_DAT.VDOVLP
     13637**DCL     13640--REDEF
Y_TRCENT_RCVSSN
     13696**DCL     16494>>ASSIGN
Y_TRCENT_RCVVDO
     13725**DCL     16517>>ASSIGN
Y_USR_OTPMRK_ACK
     13765**DCL     18934<>CALL
Y_USR_OTPMRK_ACK.DAT.ID
     13796**DCL     13796--REDEF   13797--REDEF   18933<<ASSIGN
PL6.E3A0      #001=KVM$RCV File=KVM$RCV.:E05TSI                                  WED 07/30/97 02:05 Page:422  
Y_USR_OTPMRK_MRK
     13831**DCL     18951<>CALL
Y_USR_OTPMRK_MRK.DAT.ID
     13862**DCL     13862--REDEF   13863--REDEF   18950<<ASSIGN
Y_USR_OTPMRK_SAVLSTRCRID
     13897**DCL     18943<>CALL
Y_USR_OTPMRK_SAVLSTRCRID.DAT.ID
     13928**DCL     13928--REDEF   13929--REDEF   18942<<ASSIGN
Y_USR_OTPMRK_SNDLSTRCRID
     13963**DCL     18958<>CALL
Y_USR_OTPMRK_SNDLSTRCRID.DAT.ID
     13994**DCL     13994--REDEF   13995--REDEF
Y_VDH_DSC_TIMOUT
     14027**DCL     15945<>CALL
Y_VDH_SETPRM
     14138**DCL     17261<>CALL    18254<>CALL    18860<>CALL
Y_VDH_SETPRM.PRMID
     14144**DCL     18248<<ASSIGN  18856<<ASSIGN
Y_VDH_SETPRM.SCP
     14171**DCL     18252<<ASSIGN  18253<<ASSIGN  18855<<ASSIGN
Y_VDH_SETPRM.VAL_.ADR$
     14168**DCL     17259<<ASSIGN  18249<<ASSIGN  18857<<ASSIGN
Y_VDH_SETPRM.VAL_.BYTSIZ
     14168**DCL     17260<<ASSIGN  18250<<ASSIGN  18859<<ASSIGN
Y_VDH_SETPRM.VAL_.BYTX
     14168**DCL     17258<<ASSIGN  18251<<ASSIGN  18858<<ASSIGN
Y_VDOVLP_ERR
     14209**DCL     13638--DCLINIT 18913--ASSIGN
Y_VDOVLP_ERR.ERRCODE.ERR#
     14267**DCL     18371<<ASSIGN  18375<<ASSIGN  18915<<ASSIGN
Y_VDOVLP_FLDID
     14369**DCL     18917--ASSIGN
Y_VDOVLP_FLDID.FLDID
     14383**DCL     18918<<ASSIGN
