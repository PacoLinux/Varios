

07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          1    
    1      /*M* DD_PERR_C Error code %EQUs for User DELTA */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DFC,CLM=10,DMR,CRT=1 */
    8      /**/
    9      %EQU E$DD_UNKNOWN=0 ; /* **** Unable to find error message text **** */
   10      %EQU E$DD_RANGE_SPEC=1 ; /* Invalid range specification */
   11      %EQU E$DD_ADDREXP=2 ; /* Address expression not allowed here */
   12      %EQU E$DD_SYM_NOTFOUND=3 ; /* Symbol not found */
   13      %EQU E$DD_INVLD_SPEC=4 ; /* Invalid use of special symbol */
   14      %EQU E$DD_SDEF=5 ; /* Invalid use of symdef */
   15      %EQU E$DD_SUBSCRIPT=6 ; /* wrong number of subscripts */
   16      %EQU E$DD_INVLD_PTR=7 ; /* is not a PTR */
   17      %EQU E$DD_NOROOM=8 ; /* No room for data descriptor */
   18      %EQU E$DD_VAR_REF=9 ; /* not BASED or parameter */
   19      %EQU E$DD_CANT_LET_SPSYM=10 ; /* Can't LET this special symbol */
   20      %EQU E$DD_UERR0=11 ; /* Eh@ */
   21      %EQU E$DD_UERR1=12 ; /* ID out of range or already in use */
   22      %EQU E$DD_UERR2=13 ; /* Attachments to an immediate directive specified */
   23      %EQU E$DD_UERR3=14 ; /* ID specified on immediate directive or on continued attachments */
   24      %EQU E$DD_UERR4=15 ; /* Insufficient space in dircom/varcom to build directive */
   25      %EQU E$DD_UERR5=16 ; /* Stored directive specified as an attachment */
   26      %EQU E$DD_UERR6=17 ; /* No free slots available in fixcom */
   27      %EQU E$DD_UERR7=18 ; /* User DELTA only directive in XDELTA */
   28      %EQU E$DD_UERR8=19 ; /* XDELTA only directive in user DELTA */
   29      %EQU E$DD_UERR9=20 ; /* Debug schema KILLed or not available */
   30      %EQU E$DD_UERR10=21 ; /* Can't find symbol */
   31      %EQU E$DD_UERR11=22 ; /* Your Run Unit's DEBUG SCHEMA is bad */
   32      %EQU E$DD_UERR12=23 ; /* Feature not yet available */
   33      %EQU E$DD_BAD_SUBREF=24 ; /* Bad subscript */
   34      %EQU E$DD_UERR25=25 ; /* Invalid IS address specified */
   35      %EQU E$DD_SUBST_REF=26 ; /* Invalid substatement reference */
   36      %EQU E$DD_OFFSET_REF=27 ; /* Invalid offset reference */
   37      %EQU E$DD_LBL_ARRAY_NOT=28 ; /* Labeled array reference not allowed */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          2    
   38      %EQU E$DD_LBL_ARRAY_FIND=29 ; /* Can't find specified labeled array reference */
   39      %EQU E$DD_LINE#=30 ; /* Can't find specified line number */
   40      %EQU E$DD_SUBST_OFF=31 ; /* Can't find specified substatement */
   41      %EQU E$DD_EDEF=32 ; /* Can't find specified entdef */
   42      %EQU E$DD_LABEL=33 ; /* Can't find specified label */
   43      %EQU E$DD_NOTYET=34 ; /* Feature not yet implemented */
   44      %EQU E$DD_DXG$PTREND=35 ; /* Error calling DXG$PTREND */
   45      %EQU E$DD_ADDRBAD=36 ; /* Addressing error */
   46      %EQU E$DD_EXPR2CMPLX=37 ; /* Expression is too complex */
   47      %EQU E$DD_USE_CONFLICT=38 ; /* 'USE' in conflict with request */
   48      %EQU E$DD_SUBRANGE=39 ; /* Invalid range specification */
   49      %EQU E$DD_ADDREXPG256K=40 ; /* Address expression > 256k */
   50      %EQU E$DD_NODISP=41 ; /* Item not able to be displayed */
   51      %EQU E$DD_NOMOD=42 ; /* Item not able to be modified */
   52      %EQU E$DD_NOEVAL=43 ; /* Item not able to be evaluated */
   53      %EQU E$DD_NOPOS=44 ; /* Position not appropriate for a breakpoint */
   54      %EQU E$DD_OPCODE=45 ; /* Invalid op code mnemonic */
   55      %EQU E$DD_TOOLARGE=46 ; /* Specified value too large */
   56      %EQU E$DD_NOTATT=47 ; /* Not attachable directive */
   57      %EQU E$DD_SYM2LONG=48 ; /* Symbol too long */
   58      %EQU E$DD_BAD_APT=49 ; /* Bad page table */
   59      %EQU E$DD_BAD_USERNO=50 ; /* Bad user # in USE */
   60      %EQU E$DD_NOSYMBHERE=51 ; /* Symbolic reference not allowed here */
   61      %EQU E$DD_INVLDQUAL=52 ; /* Qualification not allowed here */
   62      %EQU E$DD_SYNTAX=53 ; /* Eh? */
   63      %EQU E$DD_NOTMON=54 ; /* USE MON required for ON CALL directive */
   64      %EQU E$DD_USE=55 ; /* USE type not compatible with stored directive type */
   65      %EQU E$DD_NOTIFSPEC=56 ; /* Ifspec not allowed on this directive */
   66      %EQU E$DD_DUBREAK=57 ; /* Duplicate breakpoints are not allowed */
   67      %EQU E$DD_CANTEVAL=58 ; /* Address expression cannot be evaluated */
   68      %EQU E$DD_ULRANGE=59 ; /* Lower > upper subscript reference */
   69      %EQU E$DD_SEGIDERR=60 ; /* Segid out of descriptor segment bounds */
   70      %EQU E$DD_REDEF=61 ; /* Can't redefine symbol */
   71      %EQU E$DD_2MANYDEFS=62 ; /* Too many user defs */
   72      %EQU E$DD_FROM_TO=63 ; /* ID 'TO' greater than ID 'FROM' */
   73      %EQU E$DD_CONSTOOBIG=64 ; /* Constant too big */
   74      %EQU E$DD_BADDIG=65 ; /* Invalid bit/octal/hexadecimal digit */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          3    
   75      %EQU E$DD_INCMPDTYPES=66 ; /* Incompatible data types for 'LET' */
   76      %EQU E$DD_$LMISUSE=67 ; /* Misuse of $L special symbol */
   77      %EQU E$DD_OUTOFSEG=68 ; /* Access out of segment */
   78      %EQU E$DD_BADDESCTYPE=69 ; /* Bad descriptor type (not operand storage) */
   79      %EQU E$DD_SEGNOTPRES=70 ; /* Segment present bit reset in descriptor */
   80      %EQU E$DD_SEGEMPTY=71 ; /* Segment empty bit set in descriptor */
   81      %EQU E$DD_CANTWRITESEG=72 ; /* Descriptor does not allow write access */
   82      %EQU E$DD_CANTREADSEG=73 ; /* Descriptor does not allow read access */
   83      %EQU E$DD_BADPTDW=74 ; /* Bad page table directory word */
   84      %EQU E$DD_OUTOFMAP=75 ; /* Reference is beyond map */
   85      %EQU E$DD_NOPAGE=76 ; /* Reference starts on non-existent page */
   86      %EQU E$DD_NOPAGE2=77 ; /* Reference crosses page boundary to non-existent page */
   87      %EQU E$DD_ACCESS_FAULT=78 ; /* DELTA trapped during access */
   88      %EQU E$DD_IN_DEV_ERROR=79 ; /* Error reading input device */
   89      %EQU E$DD_SUBDSCALAR=80 ; /* Save your subscripts for array references */
   90      %EQU E$DD_2MANYSUBS=81 ; /* Too many subscripts specified */
   91      %EQU E$DD_OLDNOTOLD=82 ; /* Expected value not found */
   92      %EQU E$DD_BADADDR=83 ; /* Bad address */
   93      %EQU E$DD_CANTFINDSEG=84 ; /* Can't find self identifying segments */
   94      %EQU E$DD_CANTTAB=85 ; /* Can't do that indirection */
   95      %EQU E$DD_BADVALEXP=86 ; /* Bad expression value */
   96      %EQU E$DD_EXPNOTVALID=87 ; /* Expression not valid here */
   97      %EQU E$DD_BUFFULL=88 ; /* Output buffer full */
   98      %EQU E$DD_UNKFMT=89 ; /* Unknown format */
   99      %EQU E$DD_SIZE_TYPE=90 ; /* Data size - type mismatch (LET/IF) */
  100      %EQU E$DD_ONLY1=91; /* Only one type each of ON (ABORT, EXIT, CALLS, NODES) can be specified */
  101      %EQU E$DD_NO_CONTROL=92 ; /* You don't have a handler for that Exceptional Condition */
  102      %EQU E$DD_NO_BREAK=93 ; /* You don't have break control */
  103      %EQU E$DD_NODEFS1=94 ; /* Can't read HEAD record */
  104      %EQU E$DD_NODEFS2=95 ; /* Can't get memory for DEFs records */
  105      %EQU E$DD_NODEFS3=96 ; /* Can't read DEF NAMES record */
  106      %EQU E$DD_NODEFS4=97 ; /* Can't read ENTDEFs record */
  107      %EQU E$DD_NODEFS5=98 ; /* Can't read SYMDEFs record */
  108      %EQU E$DD_NOPTR=99 ; /* must have PTR */
  109      %EQU E$DD_NO_TRAP=100 ; /* DELTA entry was not caused by user trap */
  110      %EQU E$DD_NO_TCB=101 ; /* Your TCB is full or not there */
  111      %EQU E$DD_NO_TRAP_CONTROL=102 ; /* You specified TRAP, but don't have control for the */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          4    
  112      %EQU E$DD_PACCESS_FAULT=103 ; /* Bad parameter pointer */
  113      %EQU E$DD_BADPTR=104 ; /* Bad pointer */
  114      %EQU E$DD_HIST_EMPTY=105 ; /* History buffer is empty */
  115      %EQU E$DD_NO_MORE_HIST=106 ; /* No more history */
  116      %EQU E$DD_NOSL$=107 ; /* Can't find DELTA special location */
  117      %EQU E$DD_XCON_IN_PROGRESS=108; /* You specified TRAP, but exit control is already in progress */
  118      %EQU E$DD_CANT_XCON=109 ; /* Exit control already in progress, this would run you down */
  119      %EQU E$DD_CANT_BREAK=110 ; /* BREAK was reset by DELTA */
  120      %EQU E$DD_XDONLYSYM=111 ; /* XDELTA-only symbol, not allowed here */
  121      %EQU E$DD_NO_TRACE_INFO=112 ; /* Can't turn trace on, no trace parameters exist, use TC or TT */
  122      %EQU E$DD_UDONLYSYM=113 ; /* User DELTA-only symbol, not allowed here */
  123      %EQU E$DD_CANT_ANLZ=114 ; /* You don't have proper privilege for ANLZ/DELTA */
  124      %EQU E$DD_NOT_IN_PATCH=115 ; /* Not allowed in PATCH mode */
  125      %EQU E$DD_BADIFADR=116 ; /* Bad expression in IF */
  126      %EQU E$DD_NOT_OVERLAID=117 ; /* Program is not overlaid */
  127      %EQU E$DD_OVTABLES=118 ; /* Can't get memory for DELTA overlay control tables */
  128      %EQU E$DD_OVDEFS=119 ; /* Can't get memory for DELTA overlay DEFs records */
  129      %EQU E$DD_BADNODE=120 ; /* Can't find specified overlay node */
  130      %EQU E$DD_NOTROOT=121 ; /* Root node can't be M$OLAYed */
  131      %EQU E$DD_PATCHONLY=122 ; /* PATCH mode only directive */
  132      %EQU E$DD_BADRUMEXP=123 ; /* Expression invalid in RUM mode */
  133      %EQU E$DD_NOTRUM=124 ; /* You are not in RUM mode */
  134      %EQU E$DD_NOTDELTA=125 ; /* DELTA mode only directive */
  135      %EQU E$DD_NONAME=126 ; /* Can't RUM a fid without a name */
  136      %EQU E$DD_NOPNUPD=127 ; /* RUM fid open for input only */
  137      %EQU E$DD_IGLRFID=128 ; /* Specified RUM fid is not an RU */
  138      %EQU E$DD_NOMEM=129 ; /* Unable to allocate memory */
  139      %EQU E$DD_WARNROS=130 ; /* Can't modify DCBs, no read-only-segment */
  140      %EQU E$DD_NOTYOURS=131 ; /* Requested address is not within Run Unit */
  141      %EQU E$DD_NOPROGREC=132 ; /* Unable to access Run Unit program record */
  142      %EQU E$DD_NOROSREC=133 ; /* Unable to access Run Unit read-only-segment record */
  143      %EQU E$DD_NOHEADREC=134 ; /* Unable to access Run Unit HEAD record */
  144      %EQU E$DD_NULLCMD=135 ; /* Null directives don't make sense here */
  145      %EQU E$DD_SCAN1_CONT=136 ; /* Continued directives don't make sense here */
  146      %EQU E$DD_CANTDO=137 ; /* Can't DO - stored directive ID doesn't exist */
  147      %EQU E$DD_BADPS1=139 ; /* Fault while accessing CMD from M$ALIB */
  148      %EQU E$DD_BADPS2=140 ; /* Fault while accessing RESULTS from M$ALIB */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          5    
  149      %EQU E$DD_BADEDITKEY=141 ; /* That's no EDIT key */
  150      %EQU E$DD_ANLZ_NOBUFF=142 ; /* Can't find Recovery Buffer */
  151      %EQU E$DD_ANLZ_NODIR=143 ; /* Can't find User Directory */
  152      %EQU E$DD_ANLZ_NOHJIT=144 ; /* Can't find HJIT - during USE */
  153      %EQU E$DD_ANLZ_NOJIT=145 ; /* Can't find JIT - during USE */
  154      %EQU E$DD_ANLZ_NOUSER=146 ; /* No such user or user not dumped */
  155      %EQU E$DD_ANLZ_PAGENOTDUMPED=147 ; /* Address references page which was not dumped */
  156      %EQU E$DD_ANLZ_KILLED=148 ; /* ANLZ KILLED */
  157      %EQU E$DD_ANLZ_NOMEM=149 ; /* Can't get memory for ANLZ */
  158      %EQU E$DD_ANLZ_NOPAGE=150 ; /* Can't get a page from the dump file that should be there */
  159      %EQU E$DD_NO@=151 ; /* '@' patch space not defined in your program */
  160      %EQU E$DD_NO#=152 ; /* '#' patch space not defined in your program */
  161      %EQU E$DD_NOMORE@=153 ; /* No more '@' patch space left */
  162      %EQU E$DD_NOMORE#=154 ; /* No more '#' patch space left */
  163      %EQU E$DD_CANTPUTINANLZ=155 ; /* You may not store into a dump file */
  164      %EQU E$DD_NOTANLZ=156 ; /* You are not in ANLZ mode */
  165      %EQU E$DD_NOTATTM=157 ; /* Only the closed form of MODIFY is attachable */
  166      %EQU E$DD_CANTEXIT=158 ; /* Can't EXIT, entry was not via M$LINK */
  167      %EQU E$DD_BADAUTO=159 ; /* This auto stack is incorrectly structured */
  168      %EQU E$DD_AUTOBASE=160 ; /* That's no AUTO stack */
  169      %EQU E$DD_NOTEDIT=161 ; /* Your READ fid,key is not to an EDIT compatible file */
  170      %EQU E$DD_NOTFILE=162 ; /* Your READ fid,start is not to a file */
  171      %EQU E$DD_NOPNDO=163 ; /* Default open to M$DO failed - writing on 'ME' */
  172      %EQU E$DD_READ_BANG=164 ; /* DELTA says - Command stream exhausted, I quit. */
  173      %EQU E$DD_ANLZ_BADUSE=165 ; /* ANLZ can't do that USE yet */
  174      %EQU E$DD_NO_USE=166 ; /* Current USE environment is bad */
  175      %EQU E$DD_NO_ALTVAR=167 ; /* Can't establish specified ALTVAR schema */
  176      %EQU E$DD_BADDEC=168 ; /* Bad decimal number */
  177      %EQU E$DD_BAD_COBOL_CALL=169 ; /* Bad shared library call in COBOL modulle */
  178      %EQU E$DD_BAD_SHARED_CALL=170 ; /* Unknown format in call to shared library */
  179      %EQU E$DD_SHARED_NO_SCHEMA=171 ; /* Must have schema to decode call to shared library */
  180      %EQU E$DD_TC_XDPREFIX=172 ; /* XDELTA trace calls requires prefix */
  181      %EQU E$DD_HELP_XDELTA=173 ; /* HELP is not available in XDELTA */
  182      %EQU E$DD_NO_HELP=174 ; /* I can't figure out what you want me to help you with! */
  183      %EQU E$DD_NO_MORE_HELP=175 ; /* No further HELP available */
  184      %EQU E$DD_BADPS3=176 ; /* Fault while accessing V area from M$ALIB */
  185      %EQU E$DD_ZEROOPS=177 ; /* Inhibit, Tag, or PR modification not allowed with ZERO op code */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          6    
  186      %EQU E$DD_CANT_SAD=178 ; /* You don't have the proper PRIV for M$SAD */
  187      %EQU E$DD_BAD_SAD=179 ; /* Bad LS specified for SAD */
  188      %EQU E$DD_NOTDCB=180 ; /* Not a DCB name or number */
  189      %EQU E$DD_NOSAD=181 ; /* $SAD not valid if SAD command not issued */
  190      %EQU E$DD_NOTANLZ_FILE=182 ; /* That pointer/location valid only for ANLZ dump-file mode */
  191      %EQU E$DD_NODCB=183 ; /* No such DCB */
  192      %EQU E$DD_DCBNIL=184 ; /* That DCB slot is empty */
  193      %EQU E$DD_PROTECT=185 ; /* Can't store - PROTECT mode set */
  194      %EQU E$DD_NOTALIB=186 ; /* Entry to DELTA not via M$ALIB */
  195      %EQU E$DD_NOTIMPLARRAY=187 ; /* unimplemented array type */
  196      %EQU E$DD_WRONG#SUBS=188 ; /* wrong number of subscripts */
  197      %EQU E$DD_BAD_SUBREF_2BG=189 ; /* Bad subscript */
  198      %EQU E$DD_BAD_SUBREF_EXP=190 ; /* Bad subscript */
  199      %EQU E$DD_BAD_SUBREF_DST=191 ; /* bad subscript */
  200      %EQU E$DD_BAD_SUBREF_RNGE=192 ; /* Bad subscript */
  201      %EQU E$DD_NORBIRTH=193 ; /* Warning: RU has no BIRTH record */
  202      %EQU E$DD_NOWBIRTH=194 ; /* Unable to update Run Unit BIRTH record */
  203      %EQU E$DD_BAD_SUBREF_SCAL=195 ; /* Bad subscript */
  204      %EQU E$DD_CANT_STEP_SHARED=196 ; /* Can't STEP in shared library */
  205      %EQU E$DD_CANT_TRACE_SHARED=197 ; /* Can't TRACE in shared library */
  206      %EQU E$DD_COBOL_WARNING=198 ; /*  *** WARNING ***  Do not STEP or TRACE in COBOL run-units. */
  207      %EQU E$DD_FORTREAL=199 ; /* FORTRAN floating point constant out of range */
  208      %EQU E$DD_DB_EXIT=200 ; /* AT M$DRTN */
  209      %EQU E$DD_RUM_WHAT=201 ; /* RUM what? */
  210      %EQU E$DD_RUMONLY=202 ; /* RUM-mode only symbol */
  211      %EQU E$DD_NOWHEAD=203; /* Unable to update Run Unit HEAD record */
  212      %EQU E$DD_NOWROS=204; /* Unable to update Run Unit DCB (ROS record) */
  213      %EQU E$DD_UTSERR=205 ; /* RUM abnormally terminated - UTS violation */
  214      %EQU E$DD_CANTLETOVERP=206 ; /* Can't LET item with overpunched sign */
  215      %EQU E$DD_VAL2BIG=207 ; /* Value too big */
  216      %EQU E$DD_WHEN_NOTIS_OR_DS=208 ; /* WHEN variable must be in static memory or in a dynamic segment.*/
  217      %EQU E$DD_DCBOUND=209 ; /* Referenced item is out of DCB bounds */
  218      %EQU E$DD_CANTIFOVER=210 ; /* Can't test value of item with overpunched sign */
  219      %EQU E$DD_EXP_MODE_ERR=211 ; /* Expression too complex for RUM or ANLZ-file mode */
  220      %EQU E$DD_BADCMD_RUM=212 ; /* Command not valid in RUM mode */
  221      %EQU E$DD_NIHEAD=213 ; /* Referenced item is out of HEAD record bounds */
  222      %EQU E$DD_CANTAUTOMODE=214 ; /* Can't reference AUTO type variables in RUM or ANLZ mode */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          7    
  223      %EQU E$DD_BADSTACK=215 ; /* Can't reference AUTO type variables, your stack is mal-formed */
  224      %EQU E$DD_AUTONOTACTIVE=216 ; /* AUTO variable not active */
  225      %EQU E$DD_CANTGOALIB=217 ; /* Can't GO position when entry was via M$ALIB */
  226      %EQU E$DD_CANTSTEPALIB=218 ; /* Can't STEP, program not running under control of DELTA */
  227      %EQU E$DD_CANTKEEPASL=219 ; /* KEEP is not legal when M$ALIB was called from an ASL */
  228      %EQU E$DD_CANTTTSHARED=220 ; /* Can't TRACE TRANSFER from within a shared library, say TRACE OFF*/
  229      %EQU E$DD_CANTTTALIB=221 ; /* Can't TRACE TRANSFER out of here, say TRACE OFF*/
  230      %EQU E$DD_CANTSTEPSHARED=222 ; /* Can't STEP when entry was via M$ALIB from a non-user domain */
  231      %EQU E$DD_BADSHARESTACK=223 ; /* Can't get return address from AUTO stack, can't continue STEP or TRACE */
  232      %EQU E$DD_RUMSKIP=224 ; /* SKIPPED while RUMing system processors */
  233      %EQU E$DD_UTSFIELD=225 ; /* field of UTS is too big */
  234      %EQU E$DD_CANT_TR_ONCALLS=226 ; /* Can't TRACE and have ONCALLS set at the same time */
  235      %EQU E$DD_CANT_ONCALLS_TR=227 ; /* Can't ONCALLS and have TRACE set at the same time */
  236      %EQU E$DD_EXPRNOALLOW=228 ; /* Expression not allowed on array reference */
  237      %EQU E$DD_NOTINRUM=229 ; /* That directive isn't allowed in RUM mode. */
  238      %EQU E$DD_ODDBASE=230 ; /* AUTO stack must be on an even word boundary. */
  239      %EQU E$DD_CANTDO_SELF=231 ; /* Can't DO - stored directive ID is object of itself. */
  240      %EQU E$DD_NOSSRUM=232 ; /* That distinguished name not allowed in RUM mode */
  241      %EQU E$DD_IF_TRAP=233 ; /* Trap during IF processing. */
  242      %EQU E$DD_SUBNOTVALID=234 ; /* Subscript not valid decimal. */
  243      %EQU E$DD_RUMBUFS=235 ; /* invalid number of BUFFERs specified. */
  244      %EQU E$DD_NODEFS_NOTRACE=236; /* Can't TRACE - no ENTDEFS record */
  245      %EQU E$DD_CANTACCESS=237; /* DELTA can't access this location */
  246      %EQU E$DD_CANTALIB=238; /* Invalid ALIB command - entry to DELTA not via M$ALIB */
  247      %EQU E$DD_CANT_UPDATE_RU=239; /* Unable to update Run Unit record */
  248      %EQU E$DD_ITEM_TRUNCATED=240; /* Item truncated to 144 bits */
  249      %EQU E$DD_DBOOT_NOTALLOWED=241 ; /* DBOOT directive not allowed as multiple command */
  250      %EQU E$DD_MINI_NOTALLOWED=242 ; /* MINI directive not allowed as multiple command */
  251      %EQU E$DD_STEP_NOTALLOWED=243 ; /* STEP directive not allowed as multiple command */
  252      %EQU E$DD_TBOOT_NOTALLOWED=244 ; /* TBOOT directive not allowed as multiple command */
  253      %EQU E$DD_XEQ_NOTALLOWED=245 ; /* XEQ directive not allowed as multiple command */
  254      %EQU E$DD_CANTXEQALIB=246 ; /* Can't XEQ when entry was via M$ALIB */
  255      %EQU E$DD_NO_STORED_COMMANDS=247 ; /* No such stored commands */
  256      %EQU E$DD_NO_SUCH_BREAKPOINTS=248 ; /* No such breakpoints */
  257      %EQU E$DD_SIZE_NOT_WORD=249 ; /* Z format not allowed on non word size items */
  258      %EQU E$DD_NOTANLZMODE=250 ; /* Directive not allowed in ANLZ mode */
  259      %EQU E$DD_PACKDEC_TRUNCATED=251; /* Packed decimal truncated */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          8    
  260      %EQU E$DD_UNPACKDEC_TRUNCATED=252; /* Unpacked decimal truncated */
  261      %EQU E$DD_INVALID_SIZE=253; /* Invalid size for character string */
  262      %EQU E$DD_NOTBATCH=254; /* Command not allowed in batch */
  263      %EQU E$DD_ILLEGAL_ATT#=255; /* Invalid attachment number specified */
  264      %EQU E$DD_CANT_UPDATE=256; /* Can't UPDATE - stored directive doesn't exist - ID = */
  265      %EQU E$DD_ACT_IGNORED_LF=257; /* Invalid activation character ignored - line feed assumed */
  266      %EQU E$DD_ACT_IGNORED_CR=258; /* Invalid activation character ignored - carriage return assumed */
  267      %EQU E$DD_SCMD_GREATER256=259; /* Stored directive > 256 characters long - UPDATE will be done an attachment at a time */
  268      %EQU E$DD_NO_ATTACHMENT=260; /* Specified attachment doesn't exist */
  269      %EQU E$DD_SCMD_RESTORED=261; /* Stored directive restored to what is was before the error in UPDATEing occurred */
  270      %EQU E$DD_SCMD_ERRORED=262; /* Stored directive errored is: */
  271      %EQU E$DD_TRAP_ADJ_DIM=263; /* DELTA trapped processing adjustable dimensions */
  272      %EQU E$DD_TRAP_VIRTUAL=264; /* DELTA trapped processing virtual arrays */
  273      %EQU E$DD_CANTBRKALIB=265 ; /* Can't BREAK when entry was via M$ALIB */
  274      %EQU E$DD_CANTGOTRPALIB=266 ; /* Can't GOTRAP when entry was via M$ALIB */
  275      %EQU E$DD_CANTGOSTPALIB=267 ; /* Can't GOSTEP when entry was via M$ALIB */
  276      %EQU E$DD_CANTGOTSALIB=268 ; /* Can't GOTRAPSTEP when entry was via M$ALIB */
  277      %EQU E$DD_CANTXCONALIB=269 ; /* Can't XCON when entry was via M$ALIB */
  278      %EQU E$DD_CANTEXITALIB=270 ; /* Can't EXIT when entry was via M$ALIB */
  279      %EQU E$DD_NOTHOSTRU=271 ; /* Run unit is not a Host RU */
  280      %EQU E$DD_NOTFEPRU=272 ; /* Run unit is not a FEP RU */
  281      %EQU E$DD_BADHEADRECORD=273 ; /* Bad head record - use HEAD.X or recompile and relink */
  282      %EQU E$DD_SYMNOTANLZ=274 ; /* Symbol not allowed in ANLZ mode */
  283      %EQU E$DD_NOTCGFID=275 ; /* That is not a COMGROUP fid */
  284      %EQU E$DD_NODBGDCB=276 ; /* Can't get a DCB for debugging */
  285      %EQU E$DD_NOFPRGSWAIT=277 ; /* No FPRGs to WAIT for */
  286      %EQU E$DD_NOFPRG=278 ; /* That FPRG doesn't exist */
  287      %EQU E$DD_CANTGOTRAPFPRG=279 ; /* Can't GOTRAP all when there are FPRGs */
  288      %EQU E$DD_CANTGOSTEPFPRG=280 ; /* Can't GOSTEP all when there are FPRGs */
  289      %EQU E$DD_NOFPRGGO=281 ; /* No FPRG(s) to GO */
  290      %EQU E$DD_FPRGNOTSTOPPED=282 ; /* That FPRG is not stopped */
  291      %EQU E$DD_NODEFS6=283 ; /* Can't read alternate ENTDEFs record */
  292      %EQU E$DD_NODEFS7=284 ; /* Can't read alternate SYMDEFs record */
  293      %EQU E$DD_WRONG_SIZE=285; /* Sizes of new and expected values don't match */
  294      %EQU E$DD_NODEFS_NOONC=286; /* Can't do ON CALL - no ENTDEFs record */
  295      %EQU E$DD_NOROOMATS=287; /* Can't get memory for breakpoints  */
  296      %EQU E$DD_TOOMANYBKPNTS=288; /* Too many breakpnts set for a Front-end Program */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          9    
  297      %EQU E$DD_ERR_KILLFPRGAT=289; /* Error occured trying to KILL an FPRG breakpoint */
  298      %EQU E$DD_INVALID_HOSTSUBDIRECTIVE=290; /* invalid subdirective for HOST */
  299      %EQU E$DD_INVALID_FEPSUBDIRECTIVE=291; /* invalid subdirective for FEP */
  300      %EQU E$DD_BADBKPNTADDR=292; /* Invalid address specified for the breakpoint */
  301      %EQU E$DD_BAD_CONSTANT=293; /* Bad constant */
  302      %EQU E$DD_TOOMANY_DIGITS=294; /* Too many digits */
  303      %EQU E$DD_NO_INST=295; /* Instruction / register combination not found */
  304      %EQU E$DD_BAD_ADDR_MODE=296; /* Invalid addressing mode for the instruction */
  305      %EQU E$DD_BAD_VALUE=297; /* Instruction operand field exceeds range */
  306      %EQU E$DD_UN_IM_INST=298; /* Unimplemented instruction */
  307      %EQU E$DD_SHORT_PREL_ERROR=299; /* Displacement underflow / overflow */
  308      %EQU E$DD_BAD_REG=300; /* Illegal register in operand field */
  309      %EQU E$DD_NO_MASK=301; /* Expected mask not found */
  310      %EQU E$DD_BAD_MASK=302; /* Mask field not evaluatable */
  311      %EQU E$DD_MISSING_OPERAND=303; /* Operand in operand field missing */
  312      %EQU E$DD_SYMNOTHOST=304; /* Symbol not allowed in Host mode */
  313      %EQU E$DD_BAD_$O=305; /* $O can not be calculated */
  314      %EQU E$DD_FEPSYM_NOTANLZ=306; /* FEP symbol not allowed in ANLZ mode */
  315      %EQU E$DD_VREFTOOLONG=307; /* Variable reference is too long for DELTA to handle */
  316      %EQU E$DD_SYMNOTFEP=308; /* Symbol not allowed in FEP mode */
  317      %EQU E$DD_NOT_INTERPRETIVE=309; /* Command not allowed for interpretive program */
  318      %EQU E$DD_CANTFORMAT=310; /* Data item is too big to be formatted */
  319      %EQU E$DD_WRONFEPFMT=311; /* Invalid FEP format */
  320      %EQU E$DD_ANLZ_NONODEDIR=312 ; /* Can't find Node Directory */
  321      %EQU E$DD_SIZEMISFMT=313; /* Can't display item of this size in specified format */
  322      %EQU E$DD_NOFPRGS_SHOW=314; /* No FPRGS to SHOW */
  323      %EQU E$DD_NOTIMPFPRG=315; /* Command not implemented for FEP programs */
  324      %EQU E$DD_ADDR_CONFLICT=316; /* Instruction addressing mode conflict */
  325      %EQU E$DD_STEP_ERROR=317; /* Error occured while trying to STEP in an FEP program */
  326      %EQU E$DD_EVAL_ERROR=318; /* Error occured while trying to evaluate an address in FEP program */
  327      %EQU E$DD_NOFPRGUSE=319; /* No FPRG(s) to USE */
  328      %EQU E$DD_LARGEINST=320; /* Instruction too long to be evaluated */
  329      %EQU E$DD_RUMONLY_DIR=321; /* RUM mode only directive */
  330      %EQU E$DD_FMTCONFLICT=322; /* Conflict in format specified */
  331      %EQU E$DD_WRONHOSTFMT=323; /* Invalid HOST format */
  332      %EQU E$DD_ITEM_TRUNC_256=324; /* Item truncated to 256 bits */
  333      %EQU E$DD_CHARCALIGN=325; /* Character variables must be at least CALIGNED */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          10   
  334      %EQU E$DD_STATIONINUSE=326; /* That station is already in use */
  335      %EQU E$DD_NOSUCHSTATION=327; /* That station doesn't exist */
  336      %EQU E$DD_WHENCOHEN=328; /* Real Programmers don't use WHENs - you wimp!! */
  337      %EQU E$DD_NOTL6XDELTA=329 ; /* User DELTA only directive in FEP XDELTA */
  338      %EQU E$DD_BADMSG=330 ; /* Last message received by FD was bad */
  339      %EQU E$DD_CMDNOTSUPPORT=331 ; /* Command not supported for FPRGs. */
  340      %EQU E$DD_ITEM_TRUNC_312=332 ; /* Item truncated to 312 characters. */
  341      %EQU E$DD_SPREL_NOT_VALID=333 ; /* SPREL not allowed for this instruction */
  342      %EQU E$DD_BADXBREAK=334 ; /* Interpreter associated in the FEP issued and M$BREAK without a VLP_XBREAK */
  343      %EQU E$DD_FEPXDELTAONLY=335 ; /* Command only allowed for FEP XDELTA */
  344      %EQU E$DD_LINEDEAD=336 ; /* Specified line is dead */
  345      %EQU E$DD_CANTMODLCT=337 ; /* Couldn't modify the specified LCT */
  346      %EQU E$DD_TRAP_ELMNTSIZ=338 ; /* DELTA trapped processing indirect element size */
  347      %EQU E$DD_NOCHANSELECTED=339 ; /* No channel currently selected */
  348      %EQU E$DD_NOTAB=340 ; /* TAB (Indirect) doesn't make sense here */
  349      %EQU E$DD_NOCANBREAK=341 ; /* Can't say BREAK while proccessing user event */
  350      %EQU E$DD_MASKNOTALLOWED=342 ; /* Mask field not allowed */
  351      %EQU E$DD_NOT_DPS90=343 ; /* That symbol is not vaid on this cpu type */
  352      %EQU E$DD_FPRGRUNNING=344 ; /* Can't step - FPRG is running */
  353      %EQU E$DD_NOFPRGSSTOP=345; /* No FPRGs to STOP */
  354      %EQU E$DD_DIVIDE_CHECK=346; /* Divide Check */
  355      %EQU E$DD_CMD_ONLY_FPRG=347; /* Command only allowed for FPRGs */
  356      %EQU E$DD_CANTLET=348; /* LET of this type of variable unsupported */
  357      %EQU E$DD_ROBFULL=349; /* RUM LIST record truncated to 120 chars */
  358      /*D* INTERNAL ERROR CODES START AT 500 */
  359      %EQU E$DD_PARSERR=500 ; /* X$PARSE altret, PCB.ERROR.CODE= */
  360      %EQU E$DD_DERR1=501 ; /* X$PARSE returned unknown directive code */
  361      %EQU E$DD_DELBUG=502 ; /* DELTA BUG..I should not have gotten here */
  362      %EQU E$DD_NOTIMP=503 ; /* Unimplemented condition encountered */
  363      %EQU E$DD_CANTXEQ=504 ; /* Can't XEQ this instruction */
  364      %EQU E$DD_CANTSTEP=505 ; /* Can't STEP this instruction */
  365      %EQU E$DD_BADIC=506 ; /* IC for GO out of IS range */
  366      %EQU E$DD_BADFPRGAT=507; /* Can't find the FPRG for this breakpoint */
  367      %EQU E$DD_BAD_EWSQ=508 ; /* Unknown WSQ at fault time */
  368      %EQU E$DD_MUST_KILL_BRK=509 ; /* Breakpoint on special instruction - like PMME */
  369      %EQU E$DD_RISKY_BRK=510 ; /* Breakpoint has IC or indirect modification */
  370      %EQU E$DD_NOTDECIMAL=511 ; /* Node not 'DECIMALS' in DDS$DECIMAL */
07:05 JUL 29 '97 DD_PERR_C.:E05SI                                          11   
  371      %EQU E$DD_NO_B$USRT$=512 ; /* Can't find user table */
  372      %EQU E$DD_NOS_CNODE=513 ; /* Can't find S_CNODE */
  373      %EQU E$DD_LOST_TT=514 ; /* Trace Transfer lost */
  374      %EQU E$DD_RELRUM=515 ; /* Can't release RUM dcb */
  375      %EQU E$DD_RELS_D=516 ; /* Can't release static data memory area */
  376      %EQU E$DD_RELND=517 ; /* Can't release RUM/OVERLAY data segment */
  377      %EQU E$DD_CLSRUM=518 ; /* Can't close RUM dcb */
  378      %EQU E$DD_ACROS=519 ; /* Can't access RUM RU read-only-segment */
  379      %EQU E$DD_NOTIME=520 ; /* Can't get RUM UTS from M$TIME */
  380      %EQU E$DD_NO_LET_ARRAYS=521 ; /* LET of arrays not implemented */
  381      %EQU E$DD_CLSFPRG=522 ; /* Can't close the FPRG DCB */
  382      %EQU E$DD_RELFPRG=523 ; /* Can't release the FPRG DCB */
  383      %EQU E$DD_BADMESSAGE=524 ; /* Bad message received from FD */
  384      %EQU E$DD_BADEVENT=525 ; /* Bad event received for an FPRG */
  385      %EQU E$DD_BADBRKPNT=526 ; /* Unknown stored command in FIXCOM */
  386      %EQU E$DD_DDNOTFEP=527 ; /* Data Descriptor malformed or not FEP format */
  387      %EQU E$DD_BAD_PUT1=601 ; /* Can't put into descriptor storage */
  388      %EQU E$DD_BAD_PUT2=602 ; /* Can't store into missing page */
  389      %EQU E$DD_NOTOCTIL=603 ; /* Node not 'OCTIL' in DCS$OCTAL */
  390      %EQU E$DD_NOTHEX=604 ; /* Node not 'HEXIL' in DDS$HEX */
  391      %EQU E$DD_KILLCASE=606 ; /* Build kill case(else) */
  392      %EQU E$DD_SHOWCASE=607 ; /* Build show case(else) */
  393      %EQU E$DD_SSF=608 ; /* Safe store is less than 192 words */
  394      %EQU E$DD_DO_SCAN_FAULT=609 ; /* Fault in DELTA during do or scan phase */
  395      %EQU E$DD_HARD_FAULT=611 ; /* Hard fault in DELTA, go to MINI */
  396      %EQU E$DD_BAD_SOC_RET=612 ; /* bad return address for SOC */

