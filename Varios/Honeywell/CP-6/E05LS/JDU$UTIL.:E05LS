VERSION E05

PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:1    
        1        1        /*M* JDU$UTIL: Utility routines for program overlaying.            */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*   NAME:   JDU$MEMSET                                          */
        8        8        /*X* PLM=8,IND=5,ENU=0,ECU=0    */
        9        9
       10       10        /*F*   NAME:   JDU$MEMSET                                   */
       11       11        /*F*   PURPOSE: To allocate memory (data or procedure) up through  */
       12       12        /*,*           the last page required by an overlay.               */
       13       13        JDU$MEMSET: PROC(MEMTYPE,WADDR,WSIZE,FLAGS) ALTRET;
       14       14    1   DCL MEMTYPE UBIN;                  /* Whether to allocate data or procedure   */
       15       15    1   DCL WADDR UBIN;                         /* Word addr of start of overlay      */
       16       16    1   DCL WSIZE UBIN;                         /* Word size of overlay               */
       17       17    1   DCL FLAGS BIT(9)  ALIGNED;
       18       18        /**/
       19       19        /**/
       20       20        %INCLUDE JD_SUBS_C;
       21       32        %INCLUDE J_ERRORS_C;
       22      119        %INCLUDE J_ERRSET_C;
       23      139        %INCLUDE M$JIT_C;
       24      659        %INCLUDE MM_DATA_R;
       25     1179        %INCLUDE B$MAP;
       26     1278        /**/
       27     1279        /**/
       28     1280    1   DCL STARTPG SBIN;
       29     1281    1   DCL OVSTARTPG SBIN;
       30     1282    1   DCL ENDPG   SBIN;
       31     1283    1   DCL OVENDPG SBIN;
       32     1284    1   DCL OWN_1STPG SBIN;
       33     1285    1   DCL OWN_LSTPG SBIN;
       34     1286    1   DCL XPAGE SBIN;
       35     1287    1   DCL YPAGE SBIN;
       36     1288    1   DCL OVERLAP SBIN;
       37     1289    1   DCL PGNO SBIN;
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:2    
       38     1290    1   DCL ERR UBIN;
       39     1291    1   DCL ERR1 UBIN;
       40     1292    1   DCL ERR2 UBIN;
       41     1293        /**/
       42     1294    1   DCL B$JIT$ PTR SYMREF READONLY;
       43     1295    1   DCL B$UPT$ PTR SYMREF READONLY;
       44     1296        /**/
       45     1297    1   DCL MME$WFVP ENTRY(4) ALTRET;
       46     1298    1   DCL MME$WGVP ENTRY(4) ALTRET;
       47     1299        /**/
       48     1300        /**/
       49     1301        %ERRCODE (NAME=JERR,FCG#='1204'O,MID#='25'O,SEV#=4);
       50     1309        %SUB B$JIT = B$JIT$->B$JIT;
       51     1310        %SUB B$UPT = B$UPT$->B$MAP;
       52     1311        /**/
       53     1312        %EJECT;
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:3    
       54     1313        /**/
       55     1314        /* Select upper & lower limits of data or procedure and set up the */
       56     1315        /* appropriate error codes.                                        */
       57     1316    1           IF MEMTYPE = DATA_TYPE
       58     1317    2           THEN DO;
       59     1318    2                STARTPG = B$JIT.DLL;
       60     1319    2                ENDPG = B$JIT.DUL;
       61     1320    2                ERR1 = %E$OVDATASZ;
       62     1321    2                ERR2 = %E$OVDATALOC;
       63     1322    2                END;
       64     1323    2           ELSE DO;
       65     1324    2                STARTPG = B$JIT.PLL;
       66     1325    2                ENDPG = B$JIT.PUL;
       67     1326    2                ERR1 = %E$OVPROCSZ;
       68     1327    2                ERR2 = %E$OVPROCLOC;
       69     1328    2                END;
       70     1329        /* Get wsq-relative high & low pages for the overlay as a whole,   */
       71     1330        /* as well as for those pages totally contained in the overlay.    */
       72     1331    1           OVSTARTPG = %ISEGLO + (WADDR/1024);
       73     1332    1           OVERLAP = MOD(WADDR,1024);
       74     1333    1           IF OVERLAP ~= 0
       75     1334    1           THEN OWN_1STPG = OVSTARTPG + 1;
       76     1335    1           ELSE OWN_1STPG = OVSTARTPG;
       77     1336    1           OVENDPG = %ISEGLO + (WADDR + WSIZE - 1)/1024;
       78     1337    1           OVERLAP = MOD(WADDR+WSIZE,1024);
       79     1338    1           IF (OVERLAP ~= 0) AND (OVENDPG ~= ENDPG)
       80     1339    1           THEN OWN_LSTPG = OVENDPG - 1;
       81     1340    1           ELSE OWN_LSTPG = OVENDPG;
       82     1341    1           IF OVENDPG > ENDPG THEN
       83     1342    2           DO;
       84     1343        /*E*    ERROR:  JDU-E$OVDATASZ-A
       85     1344               MESSAGE: Data size in TREE table is too large.              */
       86     1345        /*E*    ERROR:  JDU-E$OVPROCSZ-A
       87     1346               MESSAGE: Procedure size in TREE table is too large.         */
       88     1347    2                B$JIT.ERR = JERR|BINBIT(ERR1,33);
       89     1348    2                ALTRETURN;
       90     1349    2                END;
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:4    
       91     1350    1           IF OVENDPG < STARTPG THEN
       92     1351    2           DO;
       93     1352        /*E*    ERROR:  JDU-E$OVDATALOC-A
       94     1353               MESSAGE: Bad data location in TREE table.                   */
       95     1354        /*E*    ERROR:  JDU-E$OVPROCLOC-A
       96     1355               MESSAGE: Bad procedure location in TREE table.              */
       97     1356    2                B$JIT.ERR = JERR|BINBIT(ERR2,33);
       98     1357    2                ALTRETURN;
       99     1358    2                END;
      100     1359        /* Make sure there are pages allocated for the entire data/proc.   */
      101     1360        /* area up through the last page of the current overlay.           */
      102     1361    1           IF NOT (FLAGS & JD_CANCEL) THEN
      103     1362    2           DO;
      104     1363        /* If this is a call, we won't allocate for the backward path.     */
      105     1364    2                IF (FLAGS & JD_NOPATH)
      106     1365    2                THEN XPAGE = OVSTARTPG;
      107     1366    2                ELSE XPAGE = STARTPG;
      108     1367    3                DO PGNO = XPAGE TO OVENDPG;
      109     1368    3                     IF B$UPT.SCTRL(PGNO) = %SCCVM THEN GOTO CVM_ERR;
      110     1369    3                     IF B$UPT.RPN(PGNO) = MM_FPMC.RPN
      111     1370    3                     THEN CALL MME$WGVP(%USERWSQ,PGNO,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),
      112     1371    3                            ERR) ALTRET(OOPS);
      113     1372    3                     END;
      114     1373    2                END;
      115     1374        /* Free any unallocated pages past the end of this overlay,        */
      116     1375        /* including the overlay itself if this is a 'CANCEL'.             */
      117     1376        /* NOTE: Free only those pages exclusively owned by the overlay if */
      118     1377        /* cancelling a 'NOPATH' overlay.                                  */
      119     1378    1           IF (FLAGS & JD_CANCEL)
      120     1379    2           THEN DO;
      121     1380    2                XPAGE = OWN_1STPG;
      122     1381    2                IF (FLAGS & JD_NOPATH)
      123     1382    2                THEN YPAGE = OWN_LSTPG;
      124     1383    2                ELSE YPAGE = ENDPG;
      125     1384    2                END;
      126     1385    2           ELSE DO;
      127     1386    2                XPAGE = OVENDPG + 1;
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:5    
      128     1387    2                IF (FLAGS & JD_NOPATH)
      129     1388    2                THEN YPAGE = XPAGE - 1;    /* Don't free anything                */
      130     1389    2                ELSE YPAGE = ENDPG;
      131     1390    2                END;
      132     1391    2           DO PGNO = XPAGE TO YPAGE;
      133     1392    2                IF B$UPT.SCTRL(PGNO) = %SCCVM THEN GOTO CVM_ERR;
      134     1393    2                IF B$UPT.RPN(PGNO) ~= MM_FPMC.RPN
      135     1394    2                THEN CALL MME$WFVP(%USERWSQ,PGNO,ERR,ERR) ALTRET(OOPS);
      136     1395    2                END;
      137     1396    1           RETURN;
      138     1397        /**/
      139     1398    1   OOPS:   ;
      140     1399    1           B$JIT.ERR = JERR|BINBIT(ERR,33);
      141     1400    1           ALTRETURN;
      142     1401    1   CVM_ERR:;
      143     1402        /*E*    ERROR:  JDU-E$OVRLYCVM-A
      144     1403               MESSAGE: Page obtained via M$CVM encountered.               */
      145     1404    1           B$JIT.ERR = JERR|BINBIT(%E$OVRLYCVM,33);
      146     1405    1           ALTRETURN;
      147     1406    1   END JDU$MEMSET;
      148     1407        /**/
      149     1408        %EOD;

PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:6    
--  Include file information  --

   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JD_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JDU$MEMSET.

   Procedure JDU$MEMSET requires 189 words for executable code.
   Procedure JDU$MEMSET requires 24 words of local(AUTO) storage.

PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:7    

 Object Unit name= JDU$MEMSET                                 File name= JDU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:22:07.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  JDU$MEMSET
    1   Proc  even  none   189    275  JDU$MEMSET
    2  RoData even  none     3      3  JDU$MEMSET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  JDU$MEMSET

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 MME$WGVP
 yes     yes           Std       4 MME$WFVP
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    MM_BYP$                               MM_FPMC                          r    B$JIT$
r    B$UPT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:9    


        1        1        /*M* JDU$UTIL: Utility routines for program overlaying.            */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*   NAME:   JDU$MEMSET                                          */
        8        8        /*X* PLM=8,IND=5,ENU=0,ECU=0    */
        9        9
       10       10        /*F*   NAME:   JDU$MEMSET                                   */
       11       11        /*F*   PURPOSE: To allocate memory (data or procedure) up through  */
       12       12        /*,*           the last page required by an overlay.               */
       13       13        JDU$MEMSET: PROC(MEMTYPE,WADDR,WSIZE,FLAGS) ALTRET;

     13  1 000000   000000 700200 xent  JDU$MEMSET   TSX0  ! X66_AUTO_4
         1 000001   000030 000004                    ZERO    24,4

       14       14    1   DCL MEMTYPE UBIN;                  /* Whether to allocate data or procedure   */
       15       15    1   DCL WADDR UBIN;                         /* Word addr of start of overlay      */
       16       16    1   DCL WSIZE UBIN;                         /* Word size of overlay               */
       17       17    1   DCL FLAGS BIT(9)  ALIGNED;
       18       18        /**/
       19       19        /**/
       20       20        %INCLUDE JD_SUBS_C;
       21       32        %INCLUDE J_ERRORS_C;
       22      119        %INCLUDE J_ERRSET_C;
       23      139        %INCLUDE M$JIT_C;
       24      659        %INCLUDE MM_DATA_R;
       25     1179        %INCLUDE B$MAP;
       26     1278        /**/
       27     1279        /**/
       28     1280    1   DCL STARTPG SBIN;
       29     1281    1   DCL OVSTARTPG SBIN;
       30     1282    1   DCL ENDPG   SBIN;
       31     1283    1   DCL OVENDPG SBIN;
       32     1284    1   DCL OWN_1STPG SBIN;
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:10   
       33     1285    1   DCL OWN_LSTPG SBIN;
       34     1286    1   DCL XPAGE SBIN;
       35     1287    1   DCL YPAGE SBIN;
       36     1288    1   DCL OVERLAP SBIN;
       37     1289    1   DCL PGNO SBIN;
       38     1290    1   DCL ERR UBIN;
       39     1291    1   DCL ERR1 UBIN;
       40     1292    1   DCL ERR2 UBIN;
       41     1293        /**/
       42     1294    1   DCL B$JIT$ PTR SYMREF READONLY;
       43     1295    1   DCL B$UPT$ PTR SYMREF READONLY;
       44     1296        /**/
       45     1297    1   DCL MME$WFVP ENTRY(4) ALTRET;
       46     1298    1   DCL MME$WGVP ENTRY(4) ALTRET;
       47     1299        /**/
       48     1300        /**/
       49     1301        %ERRCODE (NAME=JERR,FCG#='1204'O,MID#='25'O,SEV#=4);
       50     1309        %SUB B$JIT = B$JIT$->B$JIT;
       51     1310        %SUB B$UPT = B$UPT$->B$MAP;
       52     1311        /**/
       53     1312        %EJECT;
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:11   
       54     1313        /**/
       55     1314        /* Select upper & lower limits of data or procedure and set up the */
       56     1315        /* appropriate error codes.                                        */
       57     1316    1           IF MEMTYPE = DATA_TYPE

   1316  1 000002   200003 470500                    LDP0    @MEMTYPE,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000021 601000 1                  TNZ     s:1324

       58     1317    2           THEN DO;

       59     1318    2                STARTPG = B$JIT.DLL;

   1318  1 000005   000000 471400 xsym               LDP1    B$JIT$
         1 000006   100177 236100                    LDQ     127,,PR1
         1 000007   000022 772000                    QRL     18
         1 000010   200007 756100                    STQ     STARTPG,,AUTO

       60     1319    2                ENDPG = B$JIT.DUL;

   1319  1 000011   100177 236100                    LDQ     127,,PR1
         1 000012   777777 376007                    ANQ     -1,DL
         1 000013   200011 756100                    STQ     ENDPG,,AUTO

       61     1320    2                ERR1 = %E$OVDATASZ;

   1320  1 000014   000457 235007                    LDA     303,DL
         1 000015   200022 755100                    STA     ERR1,,AUTO

       62     1321    2                ERR2 = %E$OVDATALOC;

   1321  1 000016   000461 235007                    LDA     305,DL
         1 000017   200023 755100                    STA     ERR2,,AUTO

       63     1322    2                END;

   1322  1 000020   000034 710000 1                  TRA     s:1331
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:12   

       64     1323    2           ELSE DO;

       65     1324    2                STARTPG = B$JIT.PLL;

   1324  1 000021   000000 471400 xsym               LDP1    B$JIT$
         1 000022   100176 236100                    LDQ     126,,PR1
         1 000023   000022 772000                    QRL     18
         1 000024   200007 756100                    STQ     STARTPG,,AUTO

       66     1325    2                ENDPG = B$JIT.PUL;

   1325  1 000025   100176 236100                    LDQ     126,,PR1
         1 000026   777777 376007                    ANQ     -1,DL
         1 000027   200011 756100                    STQ     ENDPG,,AUTO

       67     1326    2                ERR1 = %E$OVPROCSZ;

   1326  1 000030   000460 235007                    LDA     304,DL
         1 000031   200022 755100                    STA     ERR1,,AUTO

       68     1327    2                ERR2 = %E$OVPROCLOC;

   1327  1 000032   000462 235007                    LDA     306,DL
         1 000033   200023 755100                    STA     ERR2,,AUTO

       69     1328    2                END;

       70     1329        /* Get wsq-relative high & low pages for the overlay as a whole,   */
       71     1330        /* as well as for those pages totally contained in the overlay.    */
       72     1331    1           OVSTARTPG = %ISEGLO + (WADDR/1024);

   1331  1 000034   200004 473500                    LDP3    @WADDR,,AUTO
         1 000035   300000 236100                    LDQ     0,,PR3
         1 000036   000012 772000                    QRL     10
         1 000037   000100 036007                    ADLQ    64,DL
         1 000040   200010 756100                    STQ     OVSTARTPG,,AUTO
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:13   

       73     1332    1           OVERLAP = MOD(WADDR,1024);

   1332  1 000041   300000 236100                    LDQ     0,,PR3
         1 000042   001777 376007                    ANQ     1023,DL
         1 000043   200017 756100                    STQ     OVERLAP,,AUTO

       74     1333    1           IF OVERLAP ~= 0

   1333  1 000044   000051 600000 1                  TZE     s:1335

       75     1334    1           THEN OWN_1STPG = OVSTARTPG + 1;

   1334  1 000045   200010 235100                    LDA     OVSTARTPG,,AUTO
         1 000046   000001 035007                    ADLA    1,DL
         1 000047   200013 755100                    STA     OWN_1STPG,,AUTO
         1 000050   000053 710000 1                  TRA     s:1336

       76     1335    1           ELSE OWN_1STPG = OVSTARTPG;

   1335  1 000051   200010 235100                    LDA     OVSTARTPG,,AUTO
         1 000052   200013 755100                    STA     OWN_1STPG,,AUTO

       77     1336    1           OVENDPG = %ISEGLO + (WADDR + WSIZE - 1)/1024;

   1336  1 000053   200005 474500                    LDP4    @WSIZE,,AUTO
         1 000054   300000 236100                    LDQ     0,,PR3
         1 000055   400000 036100                    ADLQ    0,,PR4
         1 000056   000001 136007                    SBLQ    1,DL
         1 000057   002000 506007                    DIV     1024,DL
         1 000060   000100 036007                    ADLQ    64,DL
         1 000061   200012 756100                    STQ     OVENDPG,,AUTO

       78     1337    1           OVERLAP = MOD(WADDR+WSIZE,1024);

   1337  1 000062   300000 236100                    LDQ     0,,PR3
         1 000063   400000 036100                    ADLQ    0,,PR4
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:14   
         1 000064   001777 376007                    ANQ     1023,DL
         1 000065   200017 756100                    STQ     OVERLAP,,AUTO

       79     1338    1           IF (OVERLAP ~= 0) AND (OVENDPG ~= ENDPG)

   1338  1 000066   000075 600000 1                  TZE     s:1340
         1 000067   200012 236100                    LDQ     OVENDPG,,AUTO
         1 000070   200011 116100                    CMPQ    ENDPG,,AUTO
         1 000071   000075 600000 1                  TZE     s:1340

       80     1339    1           THEN OWN_LSTPG = OVENDPG - 1;

   1339  1 000072   000001 136007                    SBLQ    1,DL
         1 000073   200014 756100                    STQ     OWN_LSTPG,,AUTO
         1 000074   000077 710000 1                  TRA     s:1341

       81     1340    1           ELSE OWN_LSTPG = OVENDPG;

   1340  1 000075   200012 235100                    LDA     OVENDPG,,AUTO
         1 000076   200014 755100                    STA     OWN_LSTPG,,AUTO

       82     1341    1           IF OVENDPG > ENDPG THEN

   1341  1 000077   200012 236100                    LDQ     OVENDPG,,AUTO
         1 000100   200011 116100                    CMPQ    ENDPG,,AUTO
         1 000101   000107 604400 1                  TMOZ    s:1350

       83     1342    2           DO;

       84     1343        /*E*    ERROR:  JDU-E$OVDATASZ-A
       85     1344               MESSAGE: Data size in TREE table is too large.              */
       86     1345        /*E*    ERROR:  JDU-E$OVPROCSZ-A
       87     1346               MESSAGE: Procedure size in TREE table is too large.         */
       88     1347    2                B$JIT.ERR = JERR|BINBIT(ERR1,33);

   1347  1 000102   200022 236100                    LDQ     ERR1,,AUTO
         1 000103   000003 736000                    QLS     3
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:15   
         1 000104   000000 276000 0                  ORQ     JERR
         1 000105   100012 756100                    STQ     10,,PR1

       89     1348    2                ALTRETURN;

   1348  1 000106   000000 702200 xent               TSX2  ! X66_AALT

       90     1349    2                END;
       91     1350    1           IF OVENDPG < STARTPG THEN

   1350  1 000107   200007 116100                    CMPQ    STARTPG,,AUTO
         1 000110   000116 605000 1                  TPL     s:1361

       92     1351    2           DO;

       93     1352        /*E*    ERROR:  JDU-E$OVDATALOC-A
       94     1353               MESSAGE: Bad data location in TREE table.                   */
       95     1354        /*E*    ERROR:  JDU-E$OVPROCLOC-A
       96     1355               MESSAGE: Bad procedure location in TREE table.              */
       97     1356    2                B$JIT.ERR = JERR|BINBIT(ERR2,33);

   1356  1 000111   200023 236100                    LDQ     ERR2,,AUTO
         1 000112   000003 736000                    QLS     3
         1 000113   000000 276000 0                  ORQ     JERR
         1 000114   100012 756100                    STQ     10,,PR1

       98     1357    2                ALTRETURN;

   1357  1 000115   000000 702200 xent               TSX2  ! X66_AALT

       99     1358    2                END;
      100     1359        /* Make sure there are pages allocated for the entire data/proc.   */
      101     1360        /* area up through the last page of the current overlay.           */
      102     1361    1           IF NOT (FLAGS & JD_CANCEL) THEN

   1361  1 000116   200006 475500                    LDP5    @FLAGS,,AUTO
         1 000117   500000 236100                    LDQ     0,,PR5
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:16   
         1 000120   777000 376003                    ANQ     -512,DU
         1 000121   001000 376003                    ANQ     512,DU
         1 000122   000167 601000 1                  TNZ     s:1378

      103     1362    2           DO;

      104     1363        /* If this is a call, we won't allocate for the backward path.     */
      105     1364    2                IF (FLAGS & JD_NOPATH)

   1364  1 000123   500000 236100                    LDQ     0,,PR5
         1 000124   777000 376003                    ANQ     -512,DU
         1 000125   004000 376003                    ANQ     2048,DU
         1 000126   000132 600000 1                  TZE     s:1366

      106     1365    2                THEN XPAGE = OVSTARTPG;

   1365  1 000127   200010 235100                    LDA     OVSTARTPG,,AUTO
         1 000130   200015 755100                    STA     XPAGE,,AUTO
         1 000131   000134 710000 1                  TRA     s:1367

      107     1366    2                ELSE XPAGE = STARTPG;

   1366  1 000132   200007 235100                    LDA     STARTPG,,AUTO
         1 000133   200015 755100                    STA     XPAGE,,AUTO

      108     1367    3                DO PGNO = XPAGE TO OVENDPG;

   1367  1 000134   200020 755100                    STA     PGNO,,AUTO
         1 000135   000164 710000 1                  TRA     s:1372+1

      109     1368    3                     IF B$UPT.SCTRL(PGNO) = %SCCVM THEN GOTO CVM_ERR;

   1368  1 000136   000000 470400 xsym               LDP0    B$UPT$
         1 000137   200020 720100                    LXL0    PGNO,,AUTO
         1 000140   000000 236110                    LDQ     0,X0,PR0
         1 000141   777400 376007                    ANQ     -256,DL
         1 000142   001000 116007                    CMPQ    512,DL
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:17   
         1 000143   000267 600000 1                  TZE     CVM_ERR

      110     1369    3                     IF B$UPT.RPN(PGNO) = MM_FPMC.RPN

   1369  1 000144   000000 221110                    LDX1    0,X0,PR0
         1 000145   000000 101000 xsym               CMPX1   MM_FPMC
         1 000146   000163 601000 1                  TNZ     s:1372

      111     1370    3                    THEN CALL MME$WGVP(%USERWSQ,PGNO,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),

   1370  1 000147   200021 631500                    EPPR1   ERR,,AUTO
         1 000150   200027 451500                    STP1    ERR2+4,,AUTO
         1 000151   000001 236000 2                  LDQ     1
         1 000152   200026 756100                    STQ     ERR2+3,,AUTO
         1 000153   200020 633500                    EPPR3   PGNO,,AUTO
         1 000154   200025 453500                    STP3    ERR2+2,,AUTO
         1 000155   000002 236000 2                  LDQ     2
         1 000156   200024 756100                    STQ     ERR2+1,,AUTO
         1 000157   200024 630500                    EPPR0   ERR2+1,,AUTO
         1 000160   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000161   000000 701000 xent               TSX1    MME$WGVP
         1 000162   000261 702000 1                  TSX2    OOPS

      112     1371    3                            ERR) ALTRET(OOPS);
      113     1372    3                     END;

   1372  1 000163   200020 054100                    AOS     PGNO,,AUTO
         1 000164   200020 236100                    LDQ     PGNO,,AUTO
         1 000165   200012 116100                    CMPQ    OVENDPG,,AUTO
         1 000166   000136 604400 1                  TMOZ    s:1368

      114     1373    2                END;

      115     1374        /* Free any unallocated pages past the end of this overlay,        */
      116     1375        /* including the overlay itself if this is a 'CANCEL'.             */
      117     1376        /* NOTE: Free only those pages exclusively owned by the overlay if */
      118     1377        /* cancelling a 'NOPATH' overlay.                                  */
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:18   
      119     1378    1           IF (FLAGS & JD_CANCEL)

   1378  1 000167   200006 470500                    LDP0    @FLAGS,,AUTO
         1 000170   000000 236100                    LDQ     0,,PR0
         1 000171   777000 376003                    ANQ     -512,DU
         1 000172   001000 376003                    ANQ     512,DU
         1 000173   000210 600000 1                  TZE     s:1386

      120     1379    2           THEN DO;

      121     1380    2                XPAGE = OWN_1STPG;

   1380  1 000174   200013 235100                    LDA     OWN_1STPG,,AUTO
         1 000175   200015 755100                    STA     XPAGE,,AUTO

      122     1381    2                IF (FLAGS & JD_NOPATH)

   1381  1 000176   000000 236100                    LDQ     0,,PR0
         1 000177   777000 376003                    ANQ     -512,DU
         1 000200   004000 376003                    ANQ     2048,DU
         1 000201   000205 600000 1                  TZE     s:1383

      123     1382    2                THEN YPAGE = OWN_LSTPG;

   1382  1 000202   200014 236100                    LDQ     OWN_LSTPG,,AUTO
         1 000203   200016 756100                    STQ     YPAGE,,AUTO
         1 000204   000224 710000 1                  TRA     s:1391

      124     1383    2                ELSE YPAGE = ENDPG;

   1383  1 000205   200011 236100                    LDQ     ENDPG,,AUTO
         1 000206   200016 756100                    STQ     YPAGE,,AUTO

      125     1384    2                END;

   1384  1 000207   000224 710000 1                  TRA     s:1391

PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:19   
      126     1385    2           ELSE DO;

      127     1386    2                XPAGE = OVENDPG + 1;

   1386  1 000210   200012 235100                    LDA     OVENDPG,,AUTO
         1 000211   000001 035007                    ADLA    1,DL
         1 000212   200015 755100                    STA     XPAGE,,AUTO

      128     1387    2                IF (FLAGS & JD_NOPATH)

   1387  1 000213   000000 236100                    LDQ     0,,PR0
         1 000214   777000 376003                    ANQ     -512,DU
         1 000215   004000 376003                    ANQ     2048,DU
         1 000216   000222 600000 1                  TZE     s:1389

      129     1388    2                THEN YPAGE = XPAGE - 1;    /* Don't free anything                */

   1388  1 000217   000001 135007                    SBLA    1,DL
         1 000220   200016 755100                    STA     YPAGE,,AUTO
         1 000221   000224 710000 1                  TRA     s:1391

      130     1389    2                ELSE YPAGE = ENDPG;

   1389  1 000222   200011 236100                    LDQ     ENDPG,,AUTO
         1 000223   200016 756100                    STQ     YPAGE,,AUTO

      131     1390    2                END;

      132     1391    2           DO PGNO = XPAGE TO YPAGE;

   1391  1 000224   200015 235100                    LDA     XPAGE,,AUTO
         1 000225   200020 755100                    STA     PGNO,,AUTO
         1 000226   000255 710000 1                  TRA     s:1395+1

      133     1392    2                IF B$UPT.SCTRL(PGNO) = %SCCVM THEN GOTO CVM_ERR;

   1392  1 000227   000000 470400 xsym               LDP0    B$UPT$
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:20   
         1 000230   200020 720100                    LXL0    PGNO,,AUTO
         1 000231   000000 236110                    LDQ     0,X0,PR0
         1 000232   777400 376007                    ANQ     -256,DL
         1 000233   001000 116007                    CMPQ    512,DL
         1 000234   000267 600000 1                  TZE     CVM_ERR

      134     1393    2                IF B$UPT.RPN(PGNO) ~= MM_FPMC.RPN

   1393  1 000235   000000 221110                    LDX1    0,X0,PR0
         1 000236   000000 101000 xsym               CMPX1   MM_FPMC
         1 000237   000254 600000 1                  TZE     s:1395

      135     1394    2                THEN CALL MME$WFVP(%USERWSQ,PGNO,ERR,ERR) ALTRET(OOPS);

   1394  1 000240   200021 631500                    EPPR1   ERR,,AUTO
         1 000241   200027 451500                    STP1    ERR2+4,,AUTO
         1 000242   200021 633500                    EPPR3   ERR,,AUTO
         1 000243   200026 453500                    STP3    ERR2+3,,AUTO
         1 000244   200020 634500                    EPPR4   PGNO,,AUTO
         1 000245   200025 454500                    STP4    ERR2+2,,AUTO
         1 000246   000002 236000 2                  LDQ     2
         1 000247   200024 756100                    STQ     ERR2+1,,AUTO
         1 000250   200024 630500                    EPPR0   ERR2+1,,AUTO
         1 000251   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000252   000000 701000 xent               TSX1    MME$WFVP
         1 000253   000261 702000 1                  TSX2    OOPS

      136     1395    2                END;

   1395  1 000254   200020 054100                    AOS     PGNO,,AUTO
         1 000255   200020 236100                    LDQ     PGNO,,AUTO
         1 000256   200016 116100                    CMPQ    YPAGE,,AUTO
         1 000257   000227 604400 1                  TMOZ    s:1392

      137     1396    1           RETURN;

   1396  1 000260   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:21   

   1395  1 000261                       OOPS         null
      138     1397        /**/
      139     1398    1   OOPS:   ;
      140     1399    1           B$JIT.ERR = JERR|BINBIT(ERR,33);

   1399  1 000261   200021 236100                    LDQ     ERR,,AUTO
         1 000262   000003 736000                    QLS     3
         1 000263   000000 276000 0                  ORQ     JERR
         1 000264   000000 470400 xsym               LDP0    B$JIT$
         1 000265   000012 756100                    STQ     10,,PR0

      141     1400    1           ALTRETURN;

   1400  1 000266   000000 702200 xent               TSX2  ! X66_AALT

   1399  1 000267                       CVM_ERR      null
      142     1401    1   CVM_ERR:;
      143     1402        /*E*    ERROR:  JDU-E$OVRLYCVM-A
      144     1403               MESSAGE: Page obtained via M$CVM encountered.               */
      145     1404    1           B$JIT.ERR = JERR|BINBIT(%E$OVRLYCVM,33);

   1404  1 000267   000463 236007                    LDQ     307,DL
         1 000270   000003 736000                    QLS     3
         1 000271   000000 276000 0                  ORQ     JERR
         1 000272   000000 471400 xsym               LDP1    B$JIT$
         1 000273   100012 756100                    STQ     10,,PR1

      146     1405    1           ALTRETURN;

   1405  1 000274   000000 702200 xent               TSX2  ! X66_AALT

JERR
 Sect OctLoc
   0     000   120425 400004                                                    P...

(unnamed)
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:22   
 Sect OctLoc
   2     000   000000 000064   000000 006000   000012 006000                    ...4........
      147     1406    1   END JDU$MEMSET;
      148     1407        /**/
      149     1408        %EOD;

PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:23   
--  Include file information  --

   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JD_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JDU$MEMSET.
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:24   

 **** Variables and constants ****

  ****  Section 000 RoData JDU$MEMSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 JERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @FLAGS                     3-0-0/w PTR         r     1 @MEMTYPE
     4-0-0/w PTR         r     1 @WADDR                     5-0-0/w PTR         r     1 @WSIZE
    11-0-0/w SBIN        r     1 ENDPG                     21-0-0/w UBIN        r     1 ERR
    22-0-0/w UBIN        r     1 ERR1                      23-0-0/w UBIN        r     1 ERR2
    *0-0-0/w BIT (9)     r     1 FLAGS                     *0-0-0/w UBIN        r     1 MEMTYPE
    12-0-0/w SBIN        r     1 OVENDPG                   17-0-0/w SBIN        r     1 OVERLAP
    10-0-0/w SBIN        r     1 OVSTARTPG                 13-0-0/w SBIN        r     1 OWN_1STPG
    14-0-0/w SBIN        r     1 OWN_LSTPG                 20-0-0/w SBIN        r     1 PGNO
     7-0-0/w SBIN        r     1 STARTPG                   *0-0-0/w UBIN        r     1 WADDR
    *0-0-0/w UBIN        r     1 WSIZE                     15-0-0/w SBIN        r     1 XPAGE
    16-0-0/w SBIN        r     1 YPAGE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:25   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)


   Procedure JDU$MEMSET requires 189 words for executable code.
   Procedure JDU$MEMSET requires 24 words of local(AUTO) storage.
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:26   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:27   
          MINI XREF LISTING

B$JIT.DLL
       553**DCL      1318>>ASSIGN
B$JIT.DUL
       553**DCL      1319>>ASSIGN
B$JIT.ERR
       466**DCL      1347<<ASSIGN   1356<<ASSIGN   1399<<ASSIGN   1404<<ASSIGN
B$JIT.ERR.MID
       467**DCL       467--REDEF
B$JIT.JRESPEAK
       557**DCL       558--REDEF
B$JIT.PLL
       553**DCL      1324>>ASSIGN
B$JIT.PUL
       553**DCL      1325>>ASSIGN
B$JIT$
      1294**DCL       461--IMP-PTR  1318>>ASSIGN   1319>>ASSIGN   1324>>ASSIGN   1325>>ASSIGN   1347>>ASSIGN
      1356>>ASSIGN   1399>>ASSIGN   1404>>ASSIGN
B$MAP.RPN
      1221**DCL      1369>>IF       1393>>IF
B$MAP.SCTRL
      1222**DCL      1223--REDEF    1368>>IF       1392>>IF
B$UPT$
      1295**DCL      1368>>IF       1369>>IF       1392>>IF       1393>>IF
CVM_ERR
      1399**LABEL    1368--GOTO     1392--GOTO
ENDPG
      1282**DCL      1319<<ASSIGN   1325<<ASSIGN   1338>>IF       1341>>IF       1383>>ASSIGN   1389>>ASSIGN
ERR
      1290**DCL      1370<>CALL     1394<>CALL     1394<>CALL     1399>>ASSIGN
ERR1
      1291**DCL      1320<<ASSIGN   1326<<ASSIGN   1347>>ASSIGN
ERR2
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:28   
      1292**DCL      1321<<ASSIGN   1327<<ASSIGN   1356>>ASSIGN
FLAGS
        17**DCL        13--PROC     1361>>IF       1364>>IF       1378>>IF       1381>>IF       1387>>IF
JERR
      1302**DCL      1347>>ASSIGN   1356>>ASSIGN   1399>>ASSIGN   1404>>ASSIGN
MEMTYPE
        14**DCL        13--PROC     1316>>IF
MM$DESC.BOUND
      1130**DCL      1131--REDEF
MM$DESC.FLGS
      1131**DCL      1131--REDEF
MM$PPUT.USER#
      1119**DCL      1119--REDEF
MME$WFVP
      1297**DCL-ENT  1394--CALL
MME$WGVP
      1298**DCL-ENT  1370--CALL
MM_BYP$
      1050**DCL      1050--IMP-PTR
MM_FPMC.RPN
      1056**DCL      1369>>IF       1393>>IF
OOPS
      1395**LABEL    1370--CALLALT  1394--CALLALT
OVENDPG
      1283**DCL      1336<<ASSIGN   1338>>IF       1339>>ASSIGN   1340>>ASSIGN   1341>>IF       1350>>IF
      1367>>DOINDEX  1386>>ASSIGN
OVERLAP
      1288**DCL      1332<<ASSIGN   1333>>IF       1337<<ASSIGN   1338>>IF
OVSTARTPG
      1281**DCL      1331<<ASSIGN   1334>>ASSIGN   1335>>ASSIGN   1365>>ASSIGN
OWN_1STPG
      1284**DCL      1334<<ASSIGN   1335<<ASSIGN   1380>>ASSIGN
OWN_LSTPG
      1285**DCL      1339<<ASSIGN   1340<<ASSIGN   1382>>ASSIGN
PGNO
      1289**DCL      1367<<DOINDEX  1368>>IF       1369>>IF       1370<>CALL     1391<<DOINDEX  1392>>IF
PL6.E3A0      #001=JDU$MEMSET File=JDU$UTIL.:E05TSI                              TUE 07/29/97 23:22 Page:29   
      1393>>IF       1394<>CALL
STARTPG
      1280**DCL      1318<<ASSIGN   1324<<ASSIGN   1350>>IF       1366>>ASSIGN
WADDR
        15**DCL        13--PROC     1331>>ASSIGN   1332>>ASSIGN   1336>>ASSIGN   1337>>ASSIGN
WSIZE
        16**DCL        13--PROC     1336>>ASSIGN   1337>>ASSIGN
XPAGE
      1286**DCL      1365<<ASSIGN   1366<<ASSIGN   1367>>DOINDEX  1380<<ASSIGN   1386<<ASSIGN   1388>>ASSIGN
      1391>>DOINDEX
YPAGE
      1287**DCL      1382<<ASSIGN   1383<<ASSIGN   1388<<ASSIGN   1389<<ASSIGN   1391>>DOINDEX

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:30   
      150        1        /*T***********************************************************/
      151        2        /*T*                                                         */
      152        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      153        4        /*T*                                                         */
      154        5        /*T***********************************************************/
      155        6        %EJECT;
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:31   
      156        7        /**/
      157        8        /*F*   NAME:   JDU$READ_OVRLY                                      */
      158        9        /*F*   PURPOSE: To read into the user's instruction segment the    */
      159       10        /*,*           data or procedure for a named overlay.              */
      160       11        JDU$READ_OVRLY: PROC(MEMTYPE,NODEINDEX,WADDR,WSIZE,MAXSIZE) ALTRET;
      161       12    1   DCL MEMTYPE UBIN;                  /* Whether to allocate data or procedure   */
      162       13    1   DCL NODEINDEX UBIN;                     /* Index of the desired overlay node  */
      163       14    1   DCL WADDR UBIN;                         /* Word addr of start of overlay      */
      164       15    1   DCL WSIZE UBIN;                         /* Word size of overlay               */
      165       16    1   DCL MAXSIZE UBIN;                       /* Maximum program record size        */
      166       17        /**/
      167       18        /**/
      168       19        %INCLUDE JD_SUBS_C;
      169       31        %INCLUDE J_ERRORS_C;
      170      118        %INCLUDE J_ERRSET_C;
      171      138        %INCLUDE M$JIT_C;
      172      658        %INCLUDE B_STRINGS_C;
      173      787        %INCLUDE M_INFO_C;
      174      927        %INCLUDE B$MAP;
      175     1026        %INCLUDE B$OBJECT_C;
      176     4456        /**/
      177     4457        /**/
      178     4458    1   DCL STARTPG SBIN;
      179     4459    1   DCL ENDPG SBIN;
      180     4460    1   DCL BUFPG UBIN;
      181     4461    1   DCL I SBIN;
      182     4462    1   DCL BUF$ PTR;
      183     4463    1   DCL ERR UBIN;
      184     4464        /**/
      185     4465    1   DCL B$JIT$ PTR SYMREF READONLY;
      186     4466    1   DCL B$UPT$ PTR SYMREF READONLY;
      187     4467    1   DCL B$USERIS$ PTR SYMREF READONLY;
      188     4468        /**/
      189     4469    1   DCL JSF$READ ENTRY(6) ALTRET;
      190     4470
      191     4471        %LIST;
      192     4472        %B$RECORDSUBS;                /* get values for record types from B$OBJECT_C  */
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:32   
              4473        %EQU TYPHEAD=0 ;
              4474        %EQU TYPDNAM=1 ;
              4475        %EQU TYPRNAM=2 ;
              4476        %EQU TYPSECT=3 ;
              4477        %EQU TYPEDEF=4 ;
              4478        %EQU TYPEREF=5 ;
              4479        %EQU TYPSDEF=6 ;
              4480        %EQU TYPSREF=7 ;
              4481        %EQU TYPSEGDEF=8 ;
              4482        %EQU TYPSEGREF=9 ;
              4483        %EQU TYPPROG=10 ;
              4484        %EQU SUBTYPPROG=0 ;
              4485        %EQU SUBTYPREL=1 ;
              4486        %EQU TYPLOGBLK=11 ;
              4487        %EQU TYPINTNTRY=12 ;
              4488        %EQU TYPEXST=13 ;
              4489        %EQU TYPVREBL=14 ;
              4490        %EQU TYPDBGNAM=15 ;
              4491        %EQU TYPLV1LB=16 ;
              4492        %EQU TYPLV1=17 ;
              4493        %EQU TYPDATASEG=18 ;
              4494        %EQU TYPRUM=20 ;
              4495        %EQU TYPBIRTH=21 ;
              4496        %EQU TYPPLOVER=22 ;
              4497        %EQU TYPCOMPID=23 ;
              4498        %EQU TYPROS=30 ;
      193     4500
      194     4501        %ERRCODE (NAME=JERR,FCG#='1204'O,MID#='25'O,SEV#=4);
              4502    1   DCL 1 NAME CONSTANT,
              4503    1         2 F BIT(12) UNAL INIT(FCG#),
              4504    1         2 M BIT(6) UNAL INIT(MID#),
              4505    1         2 * BIT(1) UNAL INIT('1'B),
              4506    1         2 C UBIN(14) UNAL INIT(COD#),
              4507    1         2 S UBIN(3) UNAL INIT(SEV#);
      195     4509        %SUB B$JIT = B$JIT$->B$JIT;
      196     4510        %SUB B$UPT = B$UPT$->B$MAP;
      197     4511        %PLIST;
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:33   
      198     4512        %EJECT;
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:34   
      199     4513        /**/
      200     4514    1           IF WSIZE = 0 THEN RETURN;
      201     4515        /* Select upper & lower limits of data or procedure and set up the */
      202     4516        /* appropriate error codes.                                        */
      203     4517    1           IF MEMTYPE = DATA_TYPE
      204     4518    2           THEN DO;
      205     4519    2                STARTPG = B$JIT.DLL;
      206     4520    2                ENDPG = B$JIT.DUL;
      207     4521    2                ERR = %E$OVDATALOC;
      208     4522    2                END;
      209     4523    2           ELSE DO;
      210     4524    2                STARTPG = B$JIT.PLL;
      211     4525    2                ENDPG = B$JIT.PUL;
      212     4526    2                ERR = %E$OVPROCLOC;
      213     4527    2                END;
      214     4528        /* Check low and high buffer pages for being in bounds.            */
      215     4529    1           BUFPG = %ISEGLO + WADDR/1024;
      216     4530    2           DO I = 1 TO 2;
      217     4531    2                IF (BUFPG < STARTPG) OR (BUFPG > ENDPG) THEN
      218     4532    3                DO;
      219     4533    3                     B$JIT.ERR = JERR|BINBIT(ERR,33);
      220     4534    3                     ALTRETURN;
      221     4535    3                     END;
      222     4536    2                BUFPG = %ISEGLO + (WADDR + WSIZE - 1)/1024;
      223     4537    2                END;
      224     4538        /* Build a buffer pointer and read in the overlay.                 */
      225     4539    1           BUF$ = PINCRW(B$USERIS$,WADDR);
      226     4540    1           CALL JSF$READ(%TYPPROG,MAXSIZE,WSIZE,BUF$,NODEINDEX,ERR) ALTRET(OOPS);
      227     4541    1           RETURN;
      228     4542        /**/
      229     4543    1   OOPS:   ;
      230     4544    1           B$JIT.ERR = JERR|BINBIT(ERR,33);
      231     4545    1           ALTRETURN;
      232     4546    1   END JDU$READ_OVRLY;

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:35   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JD_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JDU$READ_OVRLY.

   Procedure JDU$READ_OVRLY requires 87 words for executable code.
   Procedure JDU$READ_OVRLY requires 20 words of local(AUTO) storage.

    No errors detected in file JDU$UTIL.:E05TSI    .

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:36   

 Object Unit name= JDU$READ_OVRLY                             File name= JDU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:22:42.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  JDU$READ_OVRLY
    1   Proc  even  none    87    127  JDU$READ_OVRLY
    2  RoData even  none     1      1  JDU$READ_OVRLY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        5  JDU$READ_OVRLY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 JSF$READ
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    B$USERIS$                             B_VECTNIL
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:37   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:38   


      150        1        /*T***********************************************************/
      151        2        /*T*                                                         */
      152        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      153        4        /*T*                                                         */
      154        5        /*T***********************************************************/
      155        6        %EJECT;
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:39   
      156        7        /**/
      157        8        /*F*   NAME:   JDU$READ_OVRLY                                      */
      158        9        /*F*   PURPOSE: To read into the user's instruction segment the    */
      159       10        /*,*           data or procedure for a named overlay.              */
      160       11        JDU$READ_OVRLY: PROC(MEMTYPE,NODEINDEX,WADDR,WSIZE,MAXSIZE) ALTRET;

     11  1 000000   000000 700200 xent  JDU$READ_OV* TSX0  ! X66_AUTO_5
         1 000001   000024 000005                    ZERO    20,5

      161       12    1   DCL MEMTYPE UBIN;                  /* Whether to allocate data or procedure   */
      162       13    1   DCL NODEINDEX UBIN;                     /* Index of the desired overlay node  */
      163       14    1   DCL WADDR UBIN;                         /* Word addr of start of overlay      */
      164       15    1   DCL WSIZE UBIN;                         /* Word size of overlay               */
      165       16    1   DCL MAXSIZE UBIN;                       /* Maximum program record size        */
      166       17        /**/
      167       18        /**/
      168       19        %INCLUDE JD_SUBS_C;
      169       31        %INCLUDE J_ERRORS_C;
      170      118        %INCLUDE J_ERRSET_C;
      171      138        %INCLUDE M$JIT_C;
      172      658        %INCLUDE B_STRINGS_C;
      173      787        %INCLUDE M_INFO_C;
      174      927        %INCLUDE B$MAP;
      175     1026        %INCLUDE B$OBJECT_C;
      176     4456        /**/
      177     4457        /**/
      178     4458    1   DCL STARTPG SBIN;
      179     4459    1   DCL ENDPG SBIN;
      180     4460    1   DCL BUFPG UBIN;
      181     4461    1   DCL I SBIN;
      182     4462    1   DCL BUF$ PTR;
      183     4463    1   DCL ERR UBIN;
      184     4464        /**/
      185     4465    1   DCL B$JIT$ PTR SYMREF READONLY;
      186     4466    1   DCL B$UPT$ PTR SYMREF READONLY;
      187     4467    1   DCL B$USERIS$ PTR SYMREF READONLY;
      188     4468        /**/
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:40   
      189     4469    1   DCL JSF$READ ENTRY(6) ALTRET;
      190     4470
      191     4471        %LIST;
      192     4472        %B$RECORDSUBS;                /* get values for record types from B$OBJECT_C  */
              4473        %EQU TYPHEAD=0 ;
              4474        %EQU TYPDNAM=1 ;
              4475        %EQU TYPRNAM=2 ;
              4476        %EQU TYPSECT=3 ;
              4477        %EQU TYPEDEF=4 ;
              4478        %EQU TYPEREF=5 ;
              4479        %EQU TYPSDEF=6 ;
              4480        %EQU TYPSREF=7 ;
              4481        %EQU TYPSEGDEF=8 ;
              4482        %EQU TYPSEGREF=9 ;
              4483        %EQU TYPPROG=10 ;
              4484        %EQU SUBTYPPROG=0 ;
              4485        %EQU SUBTYPREL=1 ;
              4486        %EQU TYPLOGBLK=11 ;
              4487        %EQU TYPINTNTRY=12 ;
              4488        %EQU TYPEXST=13 ;
              4489        %EQU TYPVREBL=14 ;
              4490        %EQU TYPDBGNAM=15 ;
              4491        %EQU TYPLV1LB=16 ;
              4492        %EQU TYPLV1=17 ;
              4493        %EQU TYPDATASEG=18 ;
              4494        %EQU TYPRUM=20 ;
              4495        %EQU TYPBIRTH=21 ;
              4496        %EQU TYPPLOVER=22 ;
              4497        %EQU TYPCOMPID=23 ;
              4498        %EQU TYPROS=30 ;
      193     4500
      194     4501        %ERRCODE (NAME=JERR,FCG#='1204'O,MID#='25'O,SEV#=4);
              4502    1   DCL 1 NAME CONSTANT,
              4503    1         2 F BIT(12) UNAL INIT(FCG#),
              4504    1         2 M BIT(6) UNAL INIT(MID#),
              4505    1         2 * BIT(1) UNAL INIT('1'B),
              4506    1         2 C UBIN(14) UNAL INIT(COD#),
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:41   
              4507    1         2 S UBIN(3) UNAL INIT(SEV#);
      195     4509        %SUB B$JIT = B$JIT$->B$JIT;
      196     4510        %SUB B$UPT = B$UPT$->B$MAP;
      197     4511        %PLIST;
      198     4512        %EJECT;
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:42   
      199     4513        /**/
      200     4514    1           IF WSIZE = 0 THEN RETURN;

   4514  1 000002   200006 470500                    LDP0    @WSIZE,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000006 601000 1                  TNZ     s:4517

   4514  1 000005   000000 702200 xent               TSX2  ! X66_ARET

      201     4515        /* Select upper & lower limits of data or procedure and set up the */
      202     4516        /* appropriate error codes.                                        */
      203     4517    1           IF MEMTYPE = DATA_TYPE

   4517  1 000006   200003 471500                    LDP1    @MEMTYPE,,AUTO
         1 000007   100000 235100                    LDA     0,,PR1
         1 000010   000023 601000 1                  TNZ     s:4524

      204     4518    2           THEN DO;

      205     4519    2                STARTPG = B$JIT.DLL;

   4519  1 000011   000000 473400 xsym               LDP3    B$JIT$
         1 000012   300177 236100                    LDQ     127,,PR3
         1 000013   000022 772000                    QRL     18
         1 000014   200010 756100                    STQ     STARTPG,,AUTO

      206     4520    2                ENDPG = B$JIT.DUL;

   4520  1 000015   300177 236100                    LDQ     127,,PR3
         1 000016   777777 376007                    ANQ     -1,DL
         1 000017   200011 756100                    STQ     ENDPG,,AUTO

      207     4521    2                ERR = %E$OVDATALOC;

   4521  1 000020   000461 235007                    LDA     305,DL
         1 000021   200015 755100                    STA     ERR,,AUTO

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:43   
      208     4522    2                END;

   4522  1 000022   000034 710000 1                  TRA     s:4529

      209     4523    2           ELSE DO;

      210     4524    2                STARTPG = B$JIT.PLL;

   4524  1 000023   000000 473400 xsym               LDP3    B$JIT$
         1 000024   300176 236100                    LDQ     126,,PR3
         1 000025   000022 772000                    QRL     18
         1 000026   200010 756100                    STQ     STARTPG,,AUTO

      211     4525    2                ENDPG = B$JIT.PUL;

   4525  1 000027   300176 236100                    LDQ     126,,PR3
         1 000030   777777 376007                    ANQ     -1,DL
         1 000031   200011 756100                    STQ     ENDPG,,AUTO

      212     4526    2                ERR = %E$OVPROCLOC;

   4526  1 000032   000462 235007                    LDA     306,DL
         1 000033   200015 755100                    STA     ERR,,AUTO

      213     4527    2                END;

      214     4528        /* Check low and high buffer pages for being in bounds.            */
      215     4529    1           BUFPG = %ISEGLO + WADDR/1024;

   4529  1 000034   200005 474500                    LDP4    @WADDR,,AUTO
         1 000035   400000 236100                    LDQ     0,,PR4
         1 000036   000012 772000                    QRL     10
         1 000037   000100 036007                    ADLQ    64,DL
         1 000040   200012 756100                    STQ     BUFPG,,AUTO

      216     4530    2           DO I = 1 TO 2;

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:44   
   4530  1 000041   000001 235007                    LDA     1,DL
         1 000042   200013 755100                    STA     I,,AUTO

      217     4531    2                IF (BUFPG < STARTPG) OR (BUFPG > ENDPG) THEN

   4531  1 000043   200012 236100                    LDQ     BUFPG,,AUTO
         1 000044   000047 604000 1                  TMI     s:4531+4
         1 000045   200010 116100                    CMPQ    STARTPG,,AUTO
         1 000046   000053 604000 1                  TMI     s:4533
         1 000047   000000 116003                    CMPQ    0,DU
         1 000050   000053 604000 1                  TMI     s:4533
         1 000051   200011 116100                    CMPQ    ENDPG,,AUTO
         1 000052   000061 604400 1                  TMOZ    s:4536

      218     4532    3                DO;

      219     4533    3                     B$JIT.ERR = JERR|BINBIT(ERR,33);

   4533  1 000053   200015 236100                    LDQ     ERR,,AUTO
         1 000054   000003 736000                    QLS     3
         1 000055   000000 276000 0                  ORQ     JERR
         1 000056   000000 470400 xsym               LDP0    B$JIT$
         1 000057   000012 756100                    STQ     10,,PR0

      220     4534    3                     ALTRETURN;

   4534  1 000060   000000 702200 xent               TSX2  ! X66_AALT

      221     4535    3                     END;
      222     4536    2                BUFPG = %ISEGLO + (WADDR + WSIZE - 1)/1024;

   4536  1 000061   200005 470500                    LDP0    @WADDR,,AUTO
         1 000062   200006 471500                    LDP1    @WSIZE,,AUTO
         1 000063   000000 236100                    LDQ     0,,PR0
         1 000064   100000 036100                    ADLQ    0,,PR1
         1 000065   000001 136007                    SBLQ    1,DL
         1 000066   002000 506007                    DIV     1024,DL
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:45   
         1 000067   000100 036007                    ADLQ    64,DL
         1 000070   200012 756100                    STQ     BUFPG,,AUTO

      223     4537    2                END;

   4537  1 000071   200013 054100                    AOS     I,,AUTO
         1 000072   200013 235100                    LDA     I,,AUTO
         1 000073   000002 115007                    CMPA    2,DL
         1 000074   000043 604400 1                  TMOZ    s:4531

      224     4538        /* Build a buffer pointer and read in the overlay.                 */
      225     4539    1           BUF$ = PINCRW(B$USERIS$,WADDR);

   4539  1 000075   000000 720100                    LXL0    0,,PR0
         1 000076   000000 636010                    EAQ     0,X0
         1 000077   000000 036000 xsym               ADLQ    B$USERIS$
         1 000100   200014 756100                    STQ     BUF$,,AUTO

      226     4540    1           CALL JSF$READ(%TYPPROG,MAXSIZE,WSIZE,BUF$,NODEINDEX,ERR) ALTRET(OOPS);

   4540  1 000101   200015 633500                    EPPR3   ERR,,AUTO
         1 000102   200023 453500                    STP3    ERR+6,,AUTO
         1 000103   200004 236100                    LDQ     @NODEINDEX,,AUTO
         1 000104   200022 756100                    STQ     ERR+5,,AUTO
         1 000105   200014 634500                    EPPR4   BUF$,,AUTO
         1 000106   200021 454500                    STP4    ERR+4,,AUTO
         1 000107   200006 236100                    LDQ     @WSIZE,,AUTO
         1 000110   200020 756100                    STQ     ERR+3,,AUTO
         1 000111   200007 236100                    LDQ     @MAXSIZE,,AUTO
         1 000112   000000 235000 2                  LDA     0
         1 000113   200016 757100                    STAQ    ERR+1,,AUTO
         1 000114   200016 630500                    EPPR0   ERR+1,,AUTO
         1 000115   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000116   000000 701000 xent               TSX1    JSF$READ
         1 000117   000121 702000 1                  TSX2    OOPS

      227     4541    1           RETURN;
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:46   

   4541  1 000120   000000 702200 xent               TSX2  ! X66_ARET

   4539  1 000121                       OOPS         null
      228     4542        /**/
      229     4543    1   OOPS:   ;
      230     4544    1           B$JIT.ERR = JERR|BINBIT(ERR,33);

   4544  1 000121   200015 236100                    LDQ     ERR,,AUTO
         1 000122   000003 736000                    QLS     3
         1 000123   000000 276000 0                  ORQ     JERR
         1 000124   000000 470400 xsym               LDP0    B$JIT$
         1 000125   000012 756100                    STQ     10,,PR0

      231     4545    1           ALTRETURN;

   4545  1 000126   000000 702200 xent               TSX2  ! X66_AALT

JERR
 Sect OctLoc
   0     000   120425 400004                                                    P...

(unnamed)
 Sect OctLoc
   2     000   000014 006000                                                    ....
      232     4546    1   END JDU$READ_OVRLY;

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:47   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JD_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JDU$READ_OVRLY.
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:48   

 **** Variables and constants ****

  ****  Section 000 RoData JDU$READ_OVRLY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 JERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @MAXSIZE                   3-0-0/w PTR         r     1 @MEMTYPE
     4-0-0/w PTR         r     1 @NODEINDEX                 5-0-0/w PTR         r     1 @WADDR
     6-0-0/w PTR         r     1 @WSIZE                    14-0-0/w PTR         r     1 BUF$
    12-0-0/w UBIN        r     1 BUFPG                     11-0-0/w SBIN        r     1 ENDPG
    15-0-0/w UBIN        r     1 ERR                       13-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 MAXSIZE                   *0-0-0/w UBIN        r     1 MEMTYPE
    *0-0-0/w UBIN        r     1 NODEINDEX                 10-0-0/w SBIN        r     1 STARTPG
    *0-0-0/w UBIN        r     1 WADDR                     *0-0-0/w UBIN        r     1 WSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$USERIS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT

PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:49   

   Procedure JDU$READ_OVRLY requires 87 words for executable code.
   Procedure JDU$READ_OVRLY requires 20 words of local(AUTO) storage.

    No errors detected in file JDU$UTIL.:E05TSI    .
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:51   
          MINI XREF LISTING

B$JIT.DLL
       552**DCL      4519>>ASSIGN
B$JIT.DUL
       552**DCL      4520>>ASSIGN
B$JIT.ERR
       465**DCL      4533<<ASSIGN   4544<<ASSIGN
B$JIT.ERR.MID
       466**DCL       466--REDEF
B$JIT.JRESPEAK
       556**DCL       557--REDEF
B$JIT.PLL
       552**DCL      4524>>ASSIGN
B$JIT.PUL
       552**DCL      4525>>ASSIGN
B$JIT$
      4465**DCL       460--IMP-PTR  4519>>ASSIGN   4520>>ASSIGN   4524>>ASSIGN   4525>>ASSIGN   4533>>ASSIGN
      4544>>ASSIGN
B$MAP.SCTRL
       970**DCL       971--REDEF
B$USERIS$
      4467**DCL      4539>>ASSIGN
BUF$
      4462**DCL      4539<<ASSIGN   4540<>CALL
BUFPG
      4460**DCL      4529<<ASSIGN   4531>>IF       4531>>IF       4536<<ASSIGN
ENDPG
      4459**DCL      4520<<ASSIGN   4525<<ASSIGN   4531>>IF
ERR
      4463**DCL      4521<<ASSIGN   4526<<ASSIGN   4533>>ASSIGN   4540<>CALL     4544>>ASSIGN
I
      4461**DCL      4530<<DOINDEX
JERR
PL6.E3A0      #002=JDU$READ_OVRLY File=JDU$UTIL.:E05TSI                          TUE 07/29/97 23:22 Page:52   
      4502**DCL      4533>>ASSIGN   4544>>ASSIGN
JSF$READ
      4469**DCL-ENT  4540--CALL
MAXSIZE
        16**DCL        11--PROC     4540<>CALL
MEMTYPE
        12**DCL        11--PROC     4517>>IF
NODEINDEX
        13**DCL        11--PROC     4540<>CALL
OOPS
      4539**LABEL    4540--CALLALT
STARTPG
      4458**DCL      4519<<ASSIGN   4524<<ASSIGN   4531>>IF
WADDR
        14**DCL        11--PROC     4529>>ASSIGN   4536>>ASSIGN   4539>>ASSIGN
WSIZE
        15**DCL        11--PROC     4514>>IF       4536>>ASSIGN   4540<>CALL
