VERSION E05

PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /**/
        7        7        /*M*    VEX$CHECK_CUTOFF - CHECK TO SEE IF CUTOFF OCCURRED IN MERGE */
        8        8        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        9        9        VEX$CHECK_CUTOFF: PROC ALTRET ;
       10       10        /**/
       11       11        /*F*     NAME:     VEX$CHECK_CUTOFF
       12       12                 PURPOSE:  TO CHECK IF A CUTOFF OCCURRED IN A MERGE COMMAND
       13       13                                                                   */
       14       14        /**/
       15       15        /*D*     NAME:     VEX$CHECK_CUTOFF
       16       16                 PARAMETER: NONE
       17       17                 DESCRIPTION: A COMPARISON TO SEE IF THE INPUT RANGE OF A MERGE WAS
       18       18                           EXCEEDED WHILE STILL WITHIN THE OUTPUT RANGE.              */
       19       19        /**/
       20       20        /***********************************************************************/
       21       21        /*    ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   */
       22       22        /**********************************************************************/
       23       23        /**/
       24       24    1   DCL VEX$ERROR ENTRY(2) ALTRET ;
       25       25    1   DCL VEX$SEQNUM_TEXT ENTRY(2) ;
       26       26        /**/
       27       27        /*********************************************************/
       28       28        /*     INCLUDE FILES * INCLUDE FILES * INCLUDE FILES     */
       29       29        /*********************************************************/
       30       30        %INCLUDE VE_PERR_C ;
       31      247        %INCLUDE VE_SUBS_C;
       32      441        %INCLUDE CP_6_SUBS ;
       33      981        %INCLUDE F$DCB ;
       34     1030        /**/
       35     1031        /*****************************************************************/
       36     1032        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       37     1033        /*****************************************************************/
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:2    
       38     1034        /**/
       39     1035        %INCLUDE VE_FLAGS_R;
       40     1086        /**/
       41     1087    1   DCL CMD_CODE UBIN(36) SYMREF ;          /* CODE FOR CURRENT COMMAND           */
       42     1088    1   DCL EXEC_SEQNUM UBIN(36) SYMREF ;       /* CURRENT RECORD BEING USED          */
       43     1089    1   DCL HI_SEQNUM UBIN(36) SYMREF ;         /* HIGH LIMIT OF INPUT RANGE.         */
       44     1090    1   DCL INCR UBIN(36) SYMREF ;              /* INCREMENT                          */
       45     1091    1   DCL LIMIT_SEQNUM UBIN(36) SYMREF ;      /* TEMP FOR SEARCHING RANGES          */
       46     1092    1   DCL LAST_KEY UBIN(36) SYMREF ;          /* KEY OF LAST RECORD READ            */
       47     1093    1   DCL SAVE_KEY UBIN(36) SYMREF;           /* KEY USED FOR TEMP IN MERGE         */
       48     1094    1   DCL 1 SUB_BUF_1 SYMREF,
       49     1095    1          2 COUNT UBIN(9) UNAL,
       50     1096    1          2 TEXT CHAR(31) UNAL;
       51     1097    1   DCL 1 SUB_BUF_2 SYMREF,
       52     1098    1          2 COUNT UBIN(9) UNAL,
       53     1099    1          2 TEXT CHAR(31) UNAL;
       54     1100    1   DCL M$FILE2$ PTR SYMREF ;
       55     1101        /*****************************************************************/
       56     1102        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       57     1103        /*****************************************************************/
       58     1104        /**/
       59     1105    1   DCL INDX UBIN WORD ;
       60     1106    1   DCL SAVE_CONSEC_MODE_FLG BIT(1) ;
       61     1107    1   DCL SAVE_REL_MODE_FLG BIT(1) ;
       62     1108        /**/
       63     1109        %EJECT;
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:3    
       64     1110        /*****************************************************************************/
       65     1111        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       66     1112        /*****************************************************************************/
       67     1113        /**/
       68     1114    1        FLAGS.CUTOFF = '0'B ;
       69     1115        /**/
       70     1116    1        IF INCR = 0
       71     1117    1        THEN FLAGS.CUTOFF = '1'B ;
       72     1118    1        ELSE IF (CMD_CODE = MERGECMD) AND  /* EDIT TO EDIT */
       73     1119    1              (EXEC_SEQNUM >= HI_SEQNUM) AND (LAST_KEY <= LIMIT_SEQNUM)
       74     1120    1           THEN FLAGS.CUTOFF = '1'B ;
       75     1121        /**/
       76     1122    1        IF (FLAGS.CUTOFF = '0'B)
       77     1123    1        THEN RETURN ;
       78     1124        /**/
       79     1125    1        IF (CMD_CODE = MERGECMD) THEN      /* Do output range first. */
       80     1126        /**/
       81     1127    2        DO;
       82     1128    2           SAVE_CONSEC_MODE_FLG = FLAGS.CONSEC_MODE ;
       83     1129    2           SAVE_REL_MODE_FLG = FLAGS.REL_MODE ;
       84     1130    2           IF M$FILE2$ -> F$DCB.ORG = %KEYED#
       85     1131    2           THEN
       86     1132    3           DO ;
       87     1133    3              FLAGS.CONSEC_MODE = FALSE ;
       88     1134    3              FLAGS.REL_MODE = FALSE ;
       89     1135    3              END ;                        /* THEN DO */
       90     1136    2           ELSE
       91     1137    3           DO ;
       92     1138    3              FLAGS.CONSEC_MODE = TRUE ;
       93     1139    3              FLAGS.REL_MODE = TRUE ;
       94     1140    3              END ;                        /* ELSE DO */
       95     1141    2           EXEC_SEQNUM = EXEC_SEQNUM - INCR ;
       96     1142    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_1) ;
       97     1143    2           FLAGS.CONSEC_MODE = SAVE_CONSEC_MODE_FLG ;
       98     1144    2           FLAGS.REL_MODE = SAVE_REL_MODE_FLG ;
       99     1145    2           END ;                           /* DO CASE */
      100     1146        /**/
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:4    
      101     1147    1        IF (CMD_CODE = MERGECMD) THEN      /* Now for the input range. */
      102     1148        /**/
      103     1149    2        DO;
      104     1150    2           CALL VEX$SEQNUM_TEXT(SAVE_KEY, SUB_BUF_2) ;
      105     1151        /**/
      106     1152        /**/
      107     1153    2           END ;                           /* DO CASE */
      108     1154        /**/
      109     1155    1        CALL INDEX (INDX, ':', SUBSTR(SUB_BUF_1.TEXT,0,SUB_BUF_1.COUNT),0)
      110     1156    1           ALTRET(NO_COLON_1) ;
      111     1157    1        SUB_BUF_1.COUNT = SUB_BUF_1.COUNT - 1 ;
      112     1158        /**/
      113     1159    1   NO_COLON_1:
      114     1160    1        CALL INDEX (INDX, ':', SUBSTR(SUB_BUF_2.TEXT,0,SUB_BUF_2.COUNT),0)
      115     1161    1           ALTRET(NO_COLON_2) ;
      116     1162    1        SUB_BUF_2.COUNT = SUB_BUF_2.COUNT - 1 ;
      117     1163        /**/
      118     1164    1   NO_COLON_2:
      119     1165    1        CALL VEX$ERROR(E$E_CUTOFF,2) ;     /*  CUTOFF AT XX(YY)  */
      120     1166    1        ALTRETURN ;
      121     1167        /**/
      122     1168        /*E*     ERROR:    VEE-E$E_CUTOFF-0
      123     1169                 MESSAGE:  Cutoff at %U1 (%U2)
      124     1170                 MESSAGE1: There is insufficient room to move all of the
      125     1171                           specified records. The last record moved is
      126     1172                           %U1 (formerly record %U2).
      127     1173                 DESCRIPTION: The slot specified by the user is not big
      128     1174                           enough to hold all the records specified to be
      129     1175                           moved. The last record moved is now sequence
      130     1176                           number %U1 and was sequence number %U2.
      131     1177        */
      132     1178        /**/
      133     1179    1   END;                               /* END VEX$CHECK_CUTOFF                 */

PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:5    
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   VE_PERR_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$CHECK_CUTOFF.

   Procedure VEX$CHECK_CUTOFF requires 99 words for executable code.
   Procedure VEX$CHECK_CUTOFF requires 6 words of local(AUTO) storage.

    No errors detected in file VEX$CHECK_CUTOFF.:E05TSI    .

PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:6    

 Object Unit name= VEX$CHECK_CUTOFF                           File name= VEX$CHECK_CUTOFF.:E05TOU
 UTS= JUL 30 '97 07:10:56.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    99    143  VEX$CHECK_CUTOFF
    1  RoData even  none    10     12  VEX$CHECK_CUTOFF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VEX$CHECK_CUTOFF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 VEX$SEQNUM_TEXT
 yes     yes           Std       2 VEX$ERROR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     FLAGS                                 CMD_CODE                              EXEC_SEQNUM
     HI_SEQNUM                             INCR                                  LIMIT_SEQNUM
     LAST_KEY                              SAVE_KEY                              SUB_BUF_1
     SUB_BUF_2                             M$FILE2$                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:8    


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        /**/
        7        7        /*M*    VEX$CHECK_CUTOFF - CHECK TO SEE IF CUTOFF OCCURRED IN MERGE */
        8        8        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        9        9        VEX$CHECK_CUTOFF: PROC ALTRET ;

      9  0 000000   000000 700200 xent  VEX$CHECK_C* TSX0  ! X66_AUTO_0
         0 000001   000006 000000                    ZERO    6,0

       10       10        /**/
       11       11        /*F*     NAME:     VEX$CHECK_CUTOFF
       12       12                 PURPOSE:  TO CHECK IF A CUTOFF OCCURRED IN A MERGE COMMAND
       13       13                                                                   */
       14       14        /**/
       15       15        /*D*     NAME:     VEX$CHECK_CUTOFF
       16       16                 PARAMETER: NONE
       17       17                 DESCRIPTION: A COMPARISON TO SEE IF THE INPUT RANGE OF A MERGE WAS
       18       18                           EXCEEDED WHILE STILL WITHIN THE OUTPUT RANGE.              */
       19       19        /**/
       20       20        /***********************************************************************/
       21       21        /*    ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   */
       22       22        /**********************************************************************/
       23       23        /**/
       24       24    1   DCL VEX$ERROR ENTRY(2) ALTRET ;
       25       25    1   DCL VEX$SEQNUM_TEXT ENTRY(2) ;
       26       26        /**/
       27       27        /*********************************************************/
       28       28        /*     INCLUDE FILES * INCLUDE FILES * INCLUDE FILES     */
       29       29        /*********************************************************/
       30       30        %INCLUDE VE_PERR_C ;
       31      247        %INCLUDE VE_SUBS_C;
       32      441        %INCLUDE CP_6_SUBS ;
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:9    
       33      981        %INCLUDE F$DCB ;
       34     1030        /**/
       35     1031        /*****************************************************************/
       36     1032        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       37     1033        /*****************************************************************/
       38     1034        /**/
       39     1035        %INCLUDE VE_FLAGS_R;
       40     1086        /**/
       41     1087    1   DCL CMD_CODE UBIN(36) SYMREF ;          /* CODE FOR CURRENT COMMAND           */
       42     1088    1   DCL EXEC_SEQNUM UBIN(36) SYMREF ;       /* CURRENT RECORD BEING USED          */
       43     1089    1   DCL HI_SEQNUM UBIN(36) SYMREF ;         /* HIGH LIMIT OF INPUT RANGE.         */
       44     1090    1   DCL INCR UBIN(36) SYMREF ;              /* INCREMENT                          */
       45     1091    1   DCL LIMIT_SEQNUM UBIN(36) SYMREF ;      /* TEMP FOR SEARCHING RANGES          */
       46     1092    1   DCL LAST_KEY UBIN(36) SYMREF ;          /* KEY OF LAST RECORD READ            */
       47     1093    1   DCL SAVE_KEY UBIN(36) SYMREF;           /* KEY USED FOR TEMP IN MERGE         */
       48     1094    1   DCL 1 SUB_BUF_1 SYMREF,
       49     1095    1          2 COUNT UBIN(9) UNAL,
       50     1096    1          2 TEXT CHAR(31) UNAL;
       51     1097    1   DCL 1 SUB_BUF_2 SYMREF,
       52     1098    1          2 COUNT UBIN(9) UNAL,
       53     1099    1          2 TEXT CHAR(31) UNAL;
       54     1100    1   DCL M$FILE2$ PTR SYMREF ;
       55     1101        /*****************************************************************/
       56     1102        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       57     1103        /*****************************************************************/
       58     1104        /**/
       59     1105    1   DCL INDX UBIN WORD ;
       60     1106    1   DCL SAVE_CONSEC_MODE_FLG BIT(1) ;
       61     1107    1   DCL SAVE_REL_MODE_FLG BIT(1) ;
       62     1108        /**/
       63     1109        %EJECT;
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:10   
       64     1110        /*****************************************************************************/
       65     1111        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       66     1112        /*****************************************************************************/
       67     1113        /**/
       68     1114    1        FLAGS.CUTOFF = '0'B ;

   1114  0 000002   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000003   000001 356000 xsym               ANSQ    FLAGS+1

       69     1115        /**/
       70     1116    1        IF INCR = 0

   1116  0 000004   000000 235000 xsym               LDA     INCR
         0 000005   000011 601000 0                  TNZ     s:1118

       71     1117    1        THEN FLAGS.CUTOFF = '1'B ;

   1117  0 000006   400000 236003                    LDQ     -131072,DU
         0 000007   000001 256000 xsym               ORSQ    FLAGS+1
         0 000010   000024 710000 0                  TRA     s:1122

       72     1118    1        ELSE IF (CMD_CODE = MERGECMD) AND  /* EDIT TO EDIT */

   1118  0 000011   000000 235000 xsym               LDA     CMD_CODE
         0 000012   000032 115007                    CMPA    26,DL
         0 000013   000024 601000 0                  TNZ     s:1122
         0 000014   000000 236000 xsym               LDQ     EXEC_SEQNUM
         0 000015   000000 116000 xsym               CMPQ    HI_SEQNUM
         0 000016   000024 602000 0                  TNC     s:1122
         0 000017   000000 236000 xsym               LDQ     LIMIT_SEQNUM
         0 000020   000000 116000 xsym               CMPQ    LAST_KEY
         0 000021   000024 602000 0                  TNC     s:1122

       73     1119    1              (EXEC_SEQNUM >= HI_SEQNUM) AND (LAST_KEY <= LIMIT_SEQNUM)
       74     1120    1           THEN FLAGS.CUTOFF = '1'B ;

   1120  0 000022   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:11   
         0 000023   000001 256000 xsym               ORSQ    FLAGS+1

       75     1121        /**/
       76     1122    1        IF (FLAGS.CUTOFF = '0'B)

   1122  0 000024   000001 234000 xsym               SZN     FLAGS+1
         0 000025   000027 604000 0                  TMI     s:1125

       77     1123    1        THEN RETURN ;

   1123  0 000026   000000 702200 xent               TSX2  ! X66_ARET

       78     1124        /**/
       79     1125    1        IF (CMD_CODE = MERGECMD) THEN      /* Do output range first. */

   1125  0 000027   000000 235000 xsym               LDA     CMD_CODE
         0 000030   000032 115007                    CMPA    26,DL
         0 000031   000101 601000 0                  TNZ     s:1147

       80     1126        /**/
       81     1127    2        DO;

       82     1128    2           SAVE_CONSEC_MODE_FLG = FLAGS.CONSEC_MODE ;

   1128  0 000032   000000 236000 xsym               LDQ     FLAGS
         0 000033   000007 736000                    QLS     7
         0 000034   400000 376003                    ANQ     -131072,DU
         0 000035   200004 756100                    STQ     SAVE_CONSEC_MODE_FLG,,AUTO

       83     1129    2           SAVE_REL_MODE_FLG = FLAGS.REL_MODE ;

   1129  0 000036   000000 236000 xsym               LDQ     FLAGS
         0 000037   000022 736000                    QLS     18
         0 000040   400000 376003                    ANQ     -131072,DU
         0 000041   200005 756100                    STQ     SAVE_REL_MODE_FLG,,AUTO

       84     1130    2           IF M$FILE2$ -> F$DCB.ORG = %KEYED#
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:12   

   1130  0 000042   000000 470400 xsym               LDP0    M$FILE2$
         0 000043   000032 236100                    LDQ     26,,PR0
         0 000044   777000 376003                    ANQ     -512,DU
         0 000045   002000 116003                    CMPQ    1024,DU
         0 000046   000054 601000 0                  TNZ     s:1138

       85     1131    2           THEN
       86     1132    3           DO ;

       87     1133    3              FLAGS.CONSEC_MODE = FALSE ;

   1133  0 000047   000000 236000 1                  LDQ     0
         0 000050   000000 356000 xsym               ANSQ    FLAGS

       88     1134    3              FLAGS.REL_MODE = FALSE ;

   1134  0 000051   000001 236000 1                  LDQ     1
         0 000052   000000 356000 xsym               ANSQ    FLAGS

       89     1135    3              END ;                        /* THEN DO */

   1135  0 000053   000060 710000 0                  TRA     s:1141

       90     1136    2           ELSE
       91     1137    3           DO ;

       92     1138    3              FLAGS.CONSEC_MODE = TRUE ;

   1138  0 000054   002000 236003                    LDQ     1024,DU
         0 000055   000000 256000 xsym               ORSQ    FLAGS

       93     1139    3              FLAGS.REL_MODE = TRUE ;

   1139  0 000056   400000 236007                    LDQ     -131072,DL
         0 000057   000000 256000 xsym               ORSQ    FLAGS

PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:13   
       94     1140    3              END ;                        /* ELSE DO */

       95     1141    2           EXEC_SEQNUM = EXEC_SEQNUM - INCR ;

   1141  0 000060   000000 236000 xsym               LDQ     EXEC_SEQNUM
         0 000061   000000 136000 xsym               SBLQ    INCR
         0 000062   000000 756000 xsym               STQ     EXEC_SEQNUM

       96     1142    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_1) ;

   1142  0 000063   000002 630400 1                  EPPR0   2
         0 000064   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000065   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         0 000066   000000 011000                    NOP     0

       97     1143    2           FLAGS.CONSEC_MODE = SAVE_CONSEC_MODE_FLG ;

   1143  0 000067   200004 236100                    LDQ     SAVE_CONSEC_MODE_FLG,,AUTO
         0 000070   000007 772000                    QRL     7
         0 000071   000000 676000 xsym               ERQ     FLAGS
         0 000072   002000 376003                    ANQ     1024,DU
         0 000073   000000 656000 xsym               ERSQ    FLAGS

       98     1144    2           FLAGS.REL_MODE = SAVE_REL_MODE_FLG ;

   1144  0 000074   200005 236100                    LDQ     SAVE_REL_MODE_FLG,,AUTO
         0 000075   000022 772000                    QRL     18
         0 000076   000000 676000 xsym               ERQ     FLAGS
         0 000077   400000 376007                    ANQ     -131072,DL
         0 000100   000000 656000 xsym               ERSQ    FLAGS

       99     1145    2           END ;                           /* DO CASE */

      100     1146        /**/
      101     1147    1        IF (CMD_CODE = MERGECMD) THEN      /* Now for the input range. */

   1147  0 000101   000000 235000 xsym               LDA     CMD_CODE
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:14   
         0 000102   000032 115007                    CMPA    26,DL
         0 000103   000110 601000 0                  TNZ     s:1155

      102     1148        /**/
      103     1149    2        DO;

      104     1150    2           CALL VEX$SEQNUM_TEXT(SAVE_KEY, SUB_BUF_2) ;

   1150  0 000104   000004 630400 1                  EPPR0   4
         0 000105   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000106   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         0 000107   000000 011000                    NOP     0

      105     1151        /**/
      106     1152        /**/
      107     1153    2           END ;                           /* DO CASE */

      108     1154        /**/
      109     1155    1        CALL INDEX (INDX, ':', SUBSTR(SUB_BUF_1.TEXT,0,SUB_BUF_1.COUNT),0)

   1155  0 000110   000000 236000 xsym               LDQ     SUB_BUF_1
         0 000111   000033 772000                    QRL     27
         0 000112   000000 620006                    EAX0    0,QL
         0 000113   000000 124440                    SCM     mask='000'O
         0 000114   000000 200010 xsym               ADSC9   SUB_BUF_1                cn=1,n=*X0
         0 000115   000006 000001 1                  ADSC9   6                        cn=0,n=1
         0 000116   200003 000100                    ARG     INDX,,AUTO
         0 000117   000123 606400 0                  TTN     NO_COLON_1

      110     1156    1           ALTRET(NO_COLON_1) ;
      111     1157    1        SUB_BUF_1.COUNT = SUB_BUF_1.COUNT - 1 ;

   1157  0 000120   000000 236000 xsym               LDQ     SUB_BUF_1
         0 000121   777000 036003                    ADLQ    -512,DU
         0 000122   000000 552040 xsym               STBQ    SUB_BUF_1,'40'O

      112     1158        /**/
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:15   
      113     1159    1   NO_COLON_1:
      114     1160    1        CALL INDEX (INDX, ':', SUBSTR(SUB_BUF_2.TEXT,0,SUB_BUF_2.COUNT),0)

   1160  0 000123   000000 236000 xsym  NO_COLON_1   LDQ     SUB_BUF_2
         0 000124   000033 772000                    QRL     27
         0 000125   000000 620006                    EAX0    0,QL
         0 000126   000000 124440                    SCM     mask='000'O
         0 000127   000000 200010 xsym               ADSC9   SUB_BUF_2                cn=1,n=*X0
         0 000130   000006 000001 1                  ADSC9   6                        cn=0,n=1
         0 000131   200003 000100                    ARG     INDX,,AUTO
         0 000132   000136 606400 0                  TTN     NO_COLON_2

      115     1161    1           ALTRET(NO_COLON_2) ;
      116     1162    1        SUB_BUF_2.COUNT = SUB_BUF_2.COUNT - 1 ;

   1162  0 000133   000000 236000 xsym               LDQ     SUB_BUF_2
         0 000134   777000 036003                    ADLQ    -512,DU
         0 000135   000000 552040 xsym               STBQ    SUB_BUF_2,'40'O

      117     1163        /**/
      118     1164    1   NO_COLON_2:
      119     1165    1        CALL VEX$ERROR(E$E_CUTOFF,2) ;     /*  CUTOFF AT XX(YY)  */

   1165  0 000136   000010 630400 1     NO_COLON_2   EPPR0   8
         0 000137   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000140   000000 701000 xent               TSX1    VEX$ERROR
         0 000141   000000 011000                    NOP     0

      120     1166    1        ALTRETURN ;

   1166  0 000142   000000 702200 xent               TSX2  ! X66_AALT
      121     1167        /**/
      122     1168        /*E*     ERROR:    VEE-E$E_CUTOFF-0
      123     1169                 MESSAGE:  Cutoff at %U1 (%U2)
      124     1170                 MESSAGE1: There is insufficient room to move all of the
      125     1171                           specified records. The last record moved is
      126     1172                           %U1 (formerly record %U2).
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:16   
      127     1173                 DESCRIPTION: The slot specified by the user is not big
      128     1174                           enough to hold all the records specified to be
      129     1175                           moved. The last record moved is now sequence
      130     1176                           number %U1 and was sequence number %U2.
      131     1177        */
      132     1178        /**/
      133     1179    1   END;                               /* END VEX$CHECK_CUTOFF                 */

PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:17   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   VE_PERR_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$CHECK_CUTOFF.
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:18   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN        r     1 INDX                       4-0-0/b BIT         r     1 SAVE_CONSEC_MODE_FLG
     5-0-0/b BIT         r     1 SAVE_REL_MODE_FLG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 CMD_CODE                   0-0-0/w UBIN        r     1 EXEC_SEQNUM
     0-0-0/b STRC(72)    r     1 FLAGS                      0-0-0/w UBIN        r     1 HI_SEQNUM
     0-0-0/w UBIN        r     1 INCR                       0-0-0/w UBIN        r     1 LAST_KEY
     0-0-0/w UBIN        r     1 LIMIT_SEQNUM               0-0-0/w PTR         r     1 M$FILE2$
     0-0-0/w UBIN        r     1 SAVE_KEY                   0-0-0/c STRC(288)   r     1 SUB_BUF_1
     0-0-0/c STRC(288)   r     1 SUB_BUF_2

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure VEX$CHECK_CUTOFF requires 99 words for executable code.
   Procedure VEX$CHECK_CUTOFF requires 6 words of local(AUTO) storage.

    No errors detected in file VEX$CHECK_CUTOFF.:E05TSI    .
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:20   
          MINI XREF LISTING

CMD_CODE
      1087**DCL      1118>>IF       1125>>IF       1147>>IF
EXEC_SEQNUM
      1088**DCL      1118>>IF       1141<<ASSIGN   1141>>ASSIGN   1142<>CALL
F$DCB.ACTPOS
      1007**DCL      1007--REDEF
F$DCB.ARS
       982**DCL       982--REDEF
F$DCB.ATTR
      1000**DCL      1001--REDEF
F$DCB.BORROW
      1015**DCL      1015--REDEF    1015--REDEF    1015--REDEF
F$DCB.DCBNAME.L
      1029**DCL      1029--IMP-SIZ
F$DCB.EOMCHAR
       986**DCL       986--REDEF
F$DCB.FLDID
      1010**DCL      1010--REDEF
F$DCB.FORM$
      1004**DCL      1004--REDEF
F$DCB.FSECT
      1020**DCL      1020--REDEF
F$DCB.FSN
       997**DCL       997--REDEF     997--REDEF     998--REDEF
F$DCB.HEADER$
      1003**DCL      1003--REDEF
F$DCB.IXTNSIZE
      1001**DCL      1001--REDEF
F$DCB.LASTSTA$
       991**DCL       991--REDEF
F$DCB.LVL
      1016**DCL      1016--REDEF
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:21   
F$DCB.NAME.C
       991**DCL       991--REDEF
F$DCB.NOEOF
      1012**DCL      1012--REDEF
F$DCB.NRECS
      1002**DCL      1002--REDEF
F$DCB.NRECX
      1021**DCL      1021--REDEF
F$DCB.OHDR
      1013**DCL      1013--REDEF
F$DCB.ORG
       996**DCL       996--REDEF    1130>>IF
F$DCB.PRECNO
      1019**DCL      1019--REDEF
F$DCB.RCSZ
      1024**DCL      1024--REDEF
F$DCB.RES
       992**DCL       992--REDEF
F$DCB.SETX
      1004**DCL      1004--REDEF
F$DCB.TAB$
      1003**DCL      1004--REDEF
F$DCB.TDA
      1018**DCL      1018--REDEF
F$DCB.WSN
       993**DCL       993--REDEF
FLAGS.CONSEC_MODE
      1051**DCL      1128>>ASSIGN   1133<<ASSIGN   1138<<ASSIGN   1143<<ASSIGN
FLAGS.CUTOFF
      1080**DCL      1114<<ASSIGN   1117<<ASSIGN   1120<<ASSIGN   1122>>IF
FLAGS.REL_MODE
      1062**DCL      1129>>ASSIGN   1134<<ASSIGN   1139<<ASSIGN   1144<<ASSIGN
HI_SEQNUM
      1089**DCL      1118>>IF
INCR
      1090**DCL      1116>>IF       1141>>ASSIGN
PL6.E3A0      #001=VEX$CHECK_CUTOFF File=VEX$CHECK_CUTOFF.:E05TSI                WED 07/30/97 07:10 Page:22   
INDX
      1105**DCL      1155<<CALLBLT  1160<<CALLBLT
LAST_KEY
      1092**DCL      1118>>IF
LIMIT_SEQNUM
      1091**DCL      1118>>IF
M$FILE2$
      1100**DCL      1130>>IF
NO_COLON_1
      1160**LABEL    1155--CALLALT
NO_COLON_2
      1165**LABEL    1160--CALLALT
SAVE_CONSEC_MODE_FLG
      1106**DCL      1128<<ASSIGN   1143>>ASSIGN
SAVE_KEY
      1093**DCL      1150<>CALL
SAVE_REL_MODE_FLG
      1107**DCL      1129<<ASSIGN   1144>>ASSIGN
SUB_BUF_1
      1094**DCL      1142<>CALL
SUB_BUF_1.COUNT
      1095**DCL      1155>>CALLBLT  1157<<ASSIGN   1157>>ASSIGN
SUB_BUF_1.TEXT
      1096**DCL      1155>>CALLBLT
SUB_BUF_2
      1097**DCL      1150<>CALL
SUB_BUF_2.COUNT
      1098**DCL      1160>>CALLBLT  1162<<ASSIGN   1162>>ASSIGN
SUB_BUF_2.TEXT
      1099**DCL      1160>>CALLBLT
VEX$ERROR
        24**DCL-ENT  1165--CALL
VEX$SEQNUM_TEXT
        25**DCL-ENT  1142--CALL     1150--CALL
