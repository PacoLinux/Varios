VERSION E05

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:1    
        1        1        /*M*     KFB$BLD_TBL - BUILD ENTRY IN USER TABLE  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCE CRM 70 IND 5 ECU 10 THI 0 DCI 10 CSU 5 ENU 5 */
        8        8        /*F*     NAME:     KFB$BLD_TBL
        9        9                 PRUPOSE:  Build an entry in the user table.
       10       10                 DESCRIPTION:  Some one opened tothe fecg comgroup
       11       11                      and as adiministrative user of the comgroup, frog
       12       12                      get an event of the open.  This routine builds a
       13       13                      user table entry for that someone so that frog can
       14       14                      can handle subsequent requests.
       15       15                 REFERENCE: KC$LPAR describes the block of info passed
       16       16                      to BLD_TBL.
       17       17        */
       18       18        /*D*     NAME:     KFB$BLD_TBL
       19       19                 CALL:     Call KFB$BLD_TBL(P$STA,P$TDTYP,P$LFLGS);
       20       20                 INTERFACE:  KFE$ERRTEXT - if user table overflows.
       21       21                 INPUT:    P$STA - 8 char station name of user that opened.
       22       22                           P$TDTYP - ubin word oftype of user - term(fep) or dcb(host)
       23       23                           P$FLGS - ubinword - some flags from the info word of cgaurd.
       24       24                           P$UID - ubin word - returned index into user table of this user.
       25       25                 OUTPUT: none.
       26       26                 DESCRIPTION:  The following items will be moved from
       27       27                      the structure passed into the user table entry.
       28       28                      station name - the station name of the user -
       29       29                           used to write to the user andto determine
       30       30                           who we just read from.
       31       31                      type - the type of user that just opened
       32       32                           to the FECG: Trm - indicates a fep program -
       33       33                           dcb - indicates a host program.  These
       34       34                           %subs are in KC$LPAR.
       35       35                      If the type is trm, the last 4 chars of the station
       36       36                      name will be converted to binary and used to
       37       37                      determine the node number of that fep.  This
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:2    
       38       38                      number is put in fex.
       39       39                           The first 4 chars of the station name are used
       40       40                      to determine the type of program that opened to the fecg.
       41       41                      This information is put in the user talbe as frgtyp.
       42       42                           All other information in the user table entry will
       43       43                      be zeroed.
       44       44        */
       45       45        KFB$BLD_TBL: PROC(P$STA,P$TDTYP,P$LFLGS,P$UID);
       46       46        /**/
       47       47        /* */
       48       48        /*   INSERT ALL INCLUDE FILES HERE  */
       49       49        /**/
       50       50        %INCLUDE CP_6;
       51      131        %INCLUDE KF$SUBS;
       52      198        %INCLUDE KF$MSG_C;
       53      265        %INCLUDE KF_DAT_R;
       54      284        /**/
       55      285        %EQU_CG;
       56      333        /**/
       57      334        /*        INSERT ALL LOCAL VARIABLES HERE         */
       58      335        /**/
       59      336    1   DCL DISC_TBL (0:%KF_HI_FTYP#)  UBIN HALF UNAL STATIC INIT(%KF_FTYP_NONE#,
       60      337    1        %KF_FTYP_ANLZ#,%KF_FTYP_COLT#,%KF_FTYP_FEPCON#,%KF_FTYP_6FED#,%KF_FTYP_6CLT#,
       61      338    1        %KF_FTYP_MULE#,%KF_FTYP_6FEM#,%KF_FTYP_6FOX#,%KF_FTYP_FOX#,%KF_FTYP_6FEC#,%
               338                 KF_FTYP_NONE#);
       62      339    1   DCL P$STA CHAR(8);
       63      340    1   DCL P$TDTYP UBIN WORD;
       64      341    1   DCL P$UID UBIN WORD;
       65      342    1   DCL P$LFLGS UBIN WORD;
       66      343        %FPT_ACTIVATE (FPTN=DEAC_FPT,DCB=M$FE,STATION=Y_DEAC_STA,DISCONNECT=YES);
       67      366        /**/
       68      367    1   DCL Y$STA CHAR(8);
       69      368    1   DCL Y$STATE UBIN WORD;
       70      369    1   DCL Y$UID UBIN WORD;
       71      370    1   DCL Y$INDEX UBIN(9);
       72      371    1   DCL SRCH_FLAG UBIN(9);
       73      372    1   DCL TMPID CHAR(4);
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:3    
       74      373    1   DCL TMPTYP UBIN(9);
       75      374    1   DCL TMPWORD UBIN WORD;
       76      375    1   DCL Y_DEAC_STA CHAR(8) STATIC;
       77      376        /**/
       78      377    1   DCL KFE$ERRTXT ENTRY(1);
       79      378    1   DCL KFB$FIFS ENTRY(3);
       80      379        /**/
       81      380    1           Y$STA = P$STA;
       82      381    1           CALL KFB$FIFS(Y$STA,%KF_UTBLST_ACTIVE#,Y$UID);
       83      382    1           IF Y$UID = 0 THEN
       84      383    2           DO;
       85      384    2                CALL KFB$FIFS(Y$STA,%KF_UTBLST_WAIT4OPN#,Y$UID);
       86      385    2           END;
       87      386        /**/
       88      387        /*
       89      388                                     if uid is zero now,this user does
       90      389                                     not now reside in the utbl.
       91      390        */
       92      391    1           IF Y$UID = 0 THEN
       93      392    2           DO;
       94      393    2                Y$STA = ' ';
       95      394    2                CALL KFB$FIFS(Y$STA,%KF_UTBLST_DELTD#,Y$UID);
       96      395    2                IF Y$UID = 0 THEN /* NO ROOM IN TABLE - DEACTIVATE USER*/
       97      396    3                DO;
       98      397    3                     Y_DEAC_STA = P$STA;
       99      398    3                     CALL M$DEACTIVATE(DEAC_FPT);
      100      399    3                     RETURN;
      101      400    3                END;
      102      401    2                KF_UTBL.STATE(Y$UID) = %KF_UTBLST_ACTIVE#;
      103      402    2                KF_UTBL.STATION(Y$UID) = P$STA;
      104      403    2                IF P$TDTYP = %CG_DOPN#
      105      404    2                THEN TMPID = SUBSTR(P$STA,0,2);
      106      405    2                ELSE TMPID = SUBSTR(P$STA,0,4);
      107      406    2                IF TMPID = 'AN' THEN TMPTYP = %KF_FTYP_ANLZ#;
      108      407    2                ELSE
      109      408    2                     KF_UTBL.DISC(Y$UID) = DISC_TBL(TMPTYP);
      110      409    2                KF_UTBL.FRGTYP(Y$UID) = TMPTYP;
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:4    
      111      410    2                KF_UTBL.FLAGS.FEPCONSTART(Y$UID) = '0'B;
      112      411    2                KF_UTBL.TDTYP(Y$UID) = P$TDTYP;
      113      412        /*
      114      413                       Compute the node index from the last 4
      115      414                       characters of the station name.  Thisshould
      116      415                       be the node id in decimal
      117      416        */
      118      417    2                TMPWORD = 0;
      119      418    2                IF KF_UTBL.TDTYP(Y$UID) = %CG_TCON# THEN
      120      419    2                     CALL CHARBIN(TMPWORD,KF_UTBL.STA.NODID(Y$UID));
      121      420    2                KF_UTBL.FEX(Y$UID) = MOD(TMPWORD,16);
      122      421        /**/
      123      422    2                KF_UTBL.LFLAGS(Y$UID) = P$LFLGS;
      124      423    2                P$UID = Y$UID;
      125      424    2                RETURN;
      126      425    2           END;
      127      426    1           ELSE
      128      427    2           DO;                             /*Y$UID IS NON ZERO -*/
      129      428        /*
      130      429                                We may have been hit with a close before open.
      131      430                                If so, perform the close now.
      132      431        */
      133      432    2                IF KF_UTBL.STATE(Y$UID) = %KF_UTBLST_WAIT4OPN# THEN
      134      433    3                DO;
      135      434    3                     KF_UTBL.STATION(Y$UID) = ' ';
      136      435    3                     KF_UTBL.STATE(Y$UID) = %KF_UTBLST_DELTD#;
      137      436    3                     KF_USER_COUNT = KF_USER_COUNT -1 ;
      138      437    3                END;
      139      438    2           END;
      140      439    1           RETURN;
      141      440    1   END KFB$BLD_TBL;
      142      441        %EOD;

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:5    
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFB$BLD_TBL.

   Procedure KFB$BLD_TBL requires 140 words for executable code.
   Procedure KFB$BLD_TBL requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:6    

 Object Unit name= KFB$BLD_TBL                                File name= KFB$BLD_TBL.:E05TOU
 UTS= JUL 30 '97 00:19:46.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Data  even  none    24     30  KFB$BLD_TBL
    7  RoData even  UTS      1      1  KFB$BLD_TBL
    8   Proc  even  none   140    214  KFB$BLD_TBL
    9  RoData even  none     4      4  KFB$BLD_TBL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        4  KFB$BLD_TBL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 KFB$FIFS
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KF_USER_COUNT                         M$FE
     M$CS                                  M$HLPF                                M$PROF
     M$NETCON                              KF_UTBL                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:8    


        1        1        /*M*     KFB$BLD_TBL - BUILD ENTRY IN USER TABLE  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CCE CRM 70 IND 5 ECU 10 THI 0 DCI 10 CSU 5 ENU 5 */
        8        8        /*F*     NAME:     KFB$BLD_TBL
        9        9                 PRUPOSE:  Build an entry in the user table.
       10       10                 DESCRIPTION:  Some one opened tothe fecg comgroup
       11       11                      and as adiministrative user of the comgroup, frog
       12       12                      get an event of the open.  This routine builds a
       13       13                      user table entry for that someone so that frog can
       14       14                      can handle subsequent requests.
       15       15                 REFERENCE: KC$LPAR describes the block of info passed
       16       16                      to BLD_TBL.
       17       17        */
       18       18        /*D*     NAME:     KFB$BLD_TBL
       19       19                 CALL:     Call KFB$BLD_TBL(P$STA,P$TDTYP,P$LFLGS);
       20       20                 INTERFACE:  KFE$ERRTEXT - if user table overflows.
       21       21                 INPUT:    P$STA - 8 char station name of user that opened.
       22       22                           P$TDTYP - ubin word oftype of user - term(fep) or dcb(host)
       23       23                           P$FLGS - ubinword - some flags from the info word of cgaurd.
       24       24                           P$UID - ubin word - returned index into user table of this user.
       25       25                 OUTPUT: none.
       26       26                 DESCRIPTION:  The following items will be moved from
       27       27                      the structure passed into the user table entry.
       28       28                      station name - the station name of the user -
       29       29                           used to write to the user andto determine
       30       30                           who we just read from.
       31       31                      type - the type of user that just opened
       32       32                           to the FECG: Trm - indicates a fep program -
       33       33                           dcb - indicates a host program.  These
       34       34                           %subs are in KC$LPAR.
       35       35                      If the type is trm, the last 4 chars of the station
       36       36                      name will be converted to binary and used to
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:9    
       37       37                      determine the node number of that fep.  This
       38       38                      number is put in fex.
       39       39                           The first 4 chars of the station name are used
       40       40                      to determine the type of program that opened to the fecg.
       41       41                      This information is put in the user talbe as frgtyp.
       42       42                           All other information in the user table entry will
       43       43                      be zeroed.
       44       44        */
       45       45        KFB$BLD_TBL: PROC(P$STA,P$TDTYP,P$LFLGS,P$UID);

     45  8 000000   000000 700200 xent  KFB$BLD_TBL  TSX0  ! X66_AUTO_4
         8 000001   000024 000004                    ZERO    20,4

       46       46        /**/
       47       47        /* */
       48       48        /*   INSERT ALL INCLUDE FILES HERE  */
       49       49        /**/
       50       50        %INCLUDE CP_6;
       51      131        %INCLUDE KF$SUBS;
       52      198        %INCLUDE KF$MSG_C;
       53      265        %INCLUDE KF_DAT_R;
       54      284        /**/
       55      285        %EQU_CG;
       56      333        /**/
       57      334        /*        INSERT ALL LOCAL VARIABLES HERE         */
       58      335        /**/
       59      336    1   DCL DISC_TBL (0:%KF_HI_FTYP#)  UBIN HALF UNAL STATIC INIT(%KF_FTYP_NONE#,
       60      337    1        %KF_FTYP_ANLZ#,%KF_FTYP_COLT#,%KF_FTYP_FEPCON#,%KF_FTYP_6FED#,%KF_FTYP_6CLT#,
       61      338    1        %KF_FTYP_MULE#,%KF_FTYP_6FEM#,%KF_FTYP_6FOX#,%KF_FTYP_FOX#,%KF_FTYP_6FEC#,%
               338                 KF_FTYP_NONE#);
       62      339    1   DCL P$STA CHAR(8);
       63      340    1   DCL P$TDTYP UBIN WORD;
       64      341    1   DCL P$UID UBIN WORD;
       65      342    1   DCL P$LFLGS UBIN WORD;
       66      343        %FPT_ACTIVATE (FPTN=DEAC_FPT,DCB=M$FE,STATION=Y_DEAC_STA,DISCONNECT=YES);
       67      366        /**/
       68      367    1   DCL Y$STA CHAR(8);
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:10   
       69      368    1   DCL Y$STATE UBIN WORD;
       70      369    1   DCL Y$UID UBIN WORD;
       71      370    1   DCL Y$INDEX UBIN(9);
       72      371    1   DCL SRCH_FLAG UBIN(9);
       73      372    1   DCL TMPID CHAR(4);
       74      373    1   DCL TMPTYP UBIN(9);
       75      374    1   DCL TMPWORD UBIN WORD;
       76      375    1   DCL Y_DEAC_STA CHAR(8) STATIC;
       77      376        /**/
       78      377    1   DCL KFE$ERRTXT ENTRY(1);
       79      378    1   DCL KFB$FIFS ENTRY(3);
       80      379        /**/
       81      380    1           Y$STA = P$STA;

    380  8 000002   200003 470500                    LDP0    @P$STA,,AUTO
         8 000003   040100 100500                    MLR     fill='040'O
         8 000004   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         8 000005   200007 000010                    ADSC9   Y$STA,,AUTO              cn=0,n=8

       82      381    1           CALL KFB$FIFS(Y$STA,%KF_UTBLST_ACTIVE#,Y$UID);

    381  8 000006   200012 631500                    EPPR1   Y$UID,,AUTO
         8 000007   200022 451500                    STP1    TMPWORD+3,,AUTO
         8 000010   000000 236000 9                  LDQ     0
         8 000011   200021 756100                    STQ     TMPWORD+2,,AUTO
         8 000012   200007 633500                    EPPR3   Y$STA,,AUTO
         8 000013   200020 453500                    STP3    TMPWORD+1,,AUTO
         8 000014   200020 630500                    EPPR0   TMPWORD+1,,AUTO
         8 000015   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000016   000000 701000 xent               TSX1    KFB$FIFS
         8 000017   000000 011000                    NOP     0

       83      382    1           IF Y$UID = 0 THEN

    382  8 000020   200012 235100                    LDA     Y$UID,,AUTO
         8 000021   000034 601000 8                  TNZ     s:391

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:11   
       84      383    2           DO;

       85      384    2                CALL KFB$FIFS(Y$STA,%KF_UTBLST_WAIT4OPN#,Y$UID);

    384  8 000022   200012 630500                    EPPR0   Y$UID,,AUTO
         8 000023   200022 450500                    STP0    TMPWORD+3,,AUTO
         8 000024   000001 236000 9                  LDQ     1
         8 000025   200021 756100                    STQ     TMPWORD+2,,AUTO
         8 000026   200007 631500                    EPPR1   Y$STA,,AUTO
         8 000027   200020 451500                    STP1    TMPWORD+1,,AUTO
         8 000030   200020 630500                    EPPR0   TMPWORD+1,,AUTO
         8 000031   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000032   000000 701000 xent               TSX1    KFB$FIFS
         8 000033   000000 011000                    NOP     0

       86      385    2           END;

       87      386        /**/
       88      387        /*
       89      388                                     if uid is zero now,this user does
       90      389                                     not now reside in the utbl.
       91      390        */
       92      391    1           IF Y$UID = 0 THEN

    391  8 000034   200012 235100                    LDA     Y$UID,,AUTO
         8 000035   000173 601000 8                  TNZ     s:432

       93      392    2           DO;

       94      393    2                Y$STA = ' ';

    393  8 000036   000035 235000 xsym               LDA     B_VECTNIL+29
         8 000037   000035 236000 xsym               LDQ     B_VECTNIL+29
         8 000040   200007 755100                    STA     Y$STA,,AUTO
         8 000041   200010 756100                    STQ     Y$STA+1,,AUTO

       95      394    2                CALL KFB$FIFS(Y$STA,%KF_UTBLST_DELTD#,Y$UID);
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:12   

    394  8 000042   200012 630500                    EPPR0   Y$UID,,AUTO
         8 000043   200022 450500                    STP0    TMPWORD+3,,AUTO
         8 000044   000002 236000 9                  LDQ     2
         8 000045   200021 756100                    STQ     TMPWORD+2,,AUTO
         8 000046   200007 631500                    EPPR1   Y$STA,,AUTO
         8 000047   200020 451500                    STP1    TMPWORD+1,,AUTO
         8 000050   200020 630500                    EPPR0   TMPWORD+1,,AUTO
         8 000051   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000052   000000 701000 xent               TSX1    KFB$FIFS
         8 000053   000000 011000                    NOP     0

       96      395    2                IF Y$UID = 0 THEN /* NO ROOM IN TABLE - DEACTIVATE USER*/

    395  8 000054   200012 235100                    LDA     Y$UID,,AUTO
         8 000055   000066 601000 8                  TNZ     s:401

       97      396    3                DO;

       98      397    3                     Y_DEAC_STA = P$STA;

    397  8 000056   200003 470500                    LDP0    @P$STA,,AUTO
         8 000057   040000 100500                    MLR     fill='040'O
         8 000060   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         8 000061   000026 000010 6                  ADSC9   Y_DEAC_STA               cn=0,n=8

       99      398    3                     CALL M$DEACTIVATE(DEAC_FPT);

    398  8 000062   000006 630400 6                  EPPR0   DEAC_FPT
         8 000063   100001 713400                    CLIMB   32769
         8 000064   401400 401760                    pmme    nvectors=4

      100      399    3                     RETURN;

    399  8 000065   000000 702200 xent               TSX2  ! X66_ARET

      101      400    3                END;
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:13   
      102      401    2                KF_UTBL.STATE(Y$UID) = %KF_UTBLST_ACTIVE#;

    401  8 000066   200012 236100                    LDQ     Y$UID,,AUTO
         8 000067   000011 402007                    MPY     9,DL
         8 000070   000001 220003                    LDX0    1,DU
         8 000071   000002 740006 xsym               STX0    KF_UTBL+2,QL

      103      402    2                KF_UTBL.STATION(Y$UID) = P$STA;

    402  8 000072   000002 736000                    QLS     2
         8 000073   200003 470500                    LDP0    @P$STA,,AUTO
         8 000074   040006 100500                    MLR     fill='040'O
         8 000075   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         8 000076   000000 000010 xsym               ADSC9   KF_UTBL,Q                cn=0,n=8

      104      403    2                IF P$TDTYP = %CG_DOPN#

    403  8 000077   200004 471500                    LDP1    @P$TDTYP,,AUTO
         8 000100   100000 235100                    LDA     0,,PR1
         8 000101   000106 601000 8                  TNZ     s:405

      105      404    2                THEN TMPID = SUBSTR(P$STA,0,2);

    404  8 000102   040100 100500                    MLR     fill='040'O
         8 000103   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         8 000104   200015 000004                    ADSC9   TMPID,,AUTO              cn=0,n=4
         8 000105   000111 710000 8                  TRA     s:406

      106      405    2                ELSE TMPID = SUBSTR(P$STA,0,4);

    405  8 000106   040100 100500                    MLR     fill='040'O
         8 000107   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         8 000110   200015 000004                    ADSC9   TMPID,,AUTO              cn=0,n=4

      107      406    2                IF TMPID = 'AN' THEN TMPTYP = %KF_FTYP_ANLZ#;

    406  8 000111   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:14   
         8 000112   200015 000004                    ADSC9   TMPID,,AUTO              cn=0,n=4
         8 000113   000000 000002 7                  ADSC9   0                        cn=0,n=2
         8 000114   000120 601000 8                  TNZ     s:408

    406  8 000115   004000 236003                    LDQ     2048,DU
         8 000116   200016 756100                    STQ     TMPTYP,,AUTO
         8 000117   000133 710000 8                  TRA     s:409

      108      407    2                ELSE
      109      408    2                     KF_UTBL.DISC(Y$UID) = DISC_TBL(TMPTYP);

    408  8 000120   200012 236100                    LDQ     Y$UID,,AUTO
         8 000121   000011 402007                    MPY     9,DL
         8 000122   000000 621006                    EAX1    0,QL
         8 000123   200016 236100                    LDQ     TMPTYP,,AUTO
         8 000124   000033 772000                    QRL     27
         8 000125   000001 736000                    QLS     1
         8 000126   000000 635011                    EAA     0,X1
         8 000127   000020 771000                    ARL     16
         8 000130   000005 100406                    MLR     fill='000'O
         8 000131   000000 000002 6                  ADSC9   DISC_TBL,Q               cn=0,n=2
         8 000132   000006 000002 xsym               ADSC9   KF_UTBL+6,A              cn=0,n=2

      110      409    2                KF_UTBL.FRGTYP(Y$UID) = TMPTYP;

    409  8 000133   200012 236100                    LDQ     Y$UID,,AUTO
         8 000134   000011 402007                    MPY     9,DL
         8 000135   000000 621006                    EAX1    0,QL
         8 000136   200016 236100                    LDQ     TMPTYP,,AUTO
         8 000137   000033 772000                    QRL     27
         8 000140   000000 622006                    EAX2    0,QL
         8 000141   000005 442011 xsym               SXL2    KF_UTBL+5,X1

      111      410    2                KF_UTBL.FLAGS.FEPCONSTART(Y$UID) = '0'B;

    410  8 000142   000003 236000 9                  LDQ     3
         8 000143   000002 356011 xsym               ANSQ    KF_UTBL+2,X1
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:15   

      112      411    2                KF_UTBL.TDTYP(Y$UID) = P$TDTYP;

    411  8 000144   100000 723100                    LXL3    0,,PR1
         8 000145   000004 743011 xsym               STX3    KF_UTBL+4,X1

      113      412        /*
      114      413                       Compute the node index from the last 4
      115      414                       characters of the station name.  Thisshould
      116      415                       be the node id in decimal
      117      416        */
      118      417    2                TMPWORD = 0;

    417  8 000146   200017 450100                    STZ     TMPWORD,,AUTO

      119      418    2                IF KF_UTBL.TDTYP(Y$UID) = %CG_TCON# THEN

    418  8 000147   000002 103003                    CMPX3   2,DU
         8 000150   000160 601000 8                  TNZ     s:420

      120      419    2                     CALL CHARBIN(TMPWORD,KF_UTBL.STA.NODID(Y$UID));

    419  8 000151   200012 236100                    LDQ     Y$UID,,AUTO
         8 000152   000044 402007                    MPY     36,DL
         8 000153   000100 305406                    DTB
         8 000154   000001 030004 xsym               NDSC9   KF_UTBL+1,Q              cn=0,s=nosgn,sf=0,n=4
         8 000155   200020 000010                    NDSC9   TMPWORD+1,,AUTO          cn=0,s=lsgnf,sf=0,n=8
         8 000156   200021 235100                    LDA     TMPWORD+2,,AUTO
         8 000157   200017 755100                    STA     TMPWORD,,AUTO

      121      420    2                KF_UTBL.FEX(Y$UID) = MOD(TMPWORD,16);

    420  8 000160   200017 236100                    LDQ     TMPWORD,,AUTO
         8 000161   000017 376007                    ANQ     15,DL
         8 000162   000000 624006                    EAX4    0,QL
         8 000163   000004 444011 xsym               SXL4    KF_UTBL+4,X1

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:16   
      122      421        /**/
      123      422    2                KF_UTBL.LFLAGS(Y$UID) = P$LFLGS;

    422  8 000164   200005 473500                    LDP3    @P$LFLGS,,AUTO
         8 000165   300000 235100                    LDA     0,,PR3
         8 000166   000003 755011 xsym               STA     KF_UTBL+3,X1

      124      423    2                P$UID = Y$UID;

    423  8 000167   200006 474500                    LDP4    @P$UID,,AUTO
         8 000170   200012 236100                    LDQ     Y$UID,,AUTO
         8 000171   400000 756100                    STQ     0,,PR4

      125      424    2                RETURN;

    424  8 000172   000000 702200 xent               TSX2  ! X66_ARET

      126      425    2           END;
      127      426    1           ELSE
      128      427    2           DO;                             /*Y$UID IS NON ZERO -*/

      129      428        /*
      130      429                                We may have been hit with a close before open.
      131      430                                If so, perform the close now.
      132      431        */
      133      432    2                IF KF_UTBL.STATE(Y$UID) = %KF_UTBLST_WAIT4OPN# THEN

    432  8 000173   200012 236100                    LDQ     Y$UID,,AUTO
         8 000174   000011 402007                    MPY     9,DL
         8 000175   000002 220006 xsym               LDX0    KF_UTBL+2,QL
         8 000176   000003 100003                    CMPX0   3,DU
         8 000177   000213 601000 8                  TNZ     s:439

      134      433    3                DO;

      135      434    3                     KF_UTBL.STATION(Y$UID) = ' ';

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:17   
    434  8 000200   000000 621006                    EAX1    0,QL
         8 000201   000000 622006                    EAX2    0,QL
         8 000202   000035 235000 xsym               LDA     B_VECTNIL+29
         8 000203   000035 236000 xsym               LDQ     B_VECTNIL+29
         8 000204   000000 755011 xsym               STA     KF_UTBL,X1
         8 000205   000001 756012 xsym               STQ     KF_UTBL+1,X2

      136      435    3                     KF_UTBL.STATE(Y$UID) = %KF_UTBLST_DELTD#;

    435  8 000206   000002 220003                    LDX0    2,DU
         8 000207   000002 740011 xsym               STX0    KF_UTBL+2,X1

      137      436    3                     KF_USER_COUNT = KF_USER_COUNT -1 ;

    436  8 000210   000000 235000 xsym               LDA     KF_USER_COUNT
         8 000211   000001 135007                    SBLA    1,DL
         8 000212   000000 755000 xsym               STA     KF_USER_COUNT

      138      437    3                END;

      139      438    2           END;

      140      439    1           RETURN;

    439  8 000213   000000 702200 xent               TSX2  ! X66_ARET
      141      440    1   END KFB$BLD_TBL;
      142      441        %EOD;

PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:18   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFB$BLD_TBL.
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:19   

 **** Variables and constants ****

  ****  Section 006  Data  KFB$BLD_TBL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/d STRC(576)   r     1 DEAC_FPT
     0-0-0/b UBIN(18)    r     1 DISC_TBL(0:11)
    26-0-0/c CHAR(8)     r     1 Y_DEAC_STA

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @P$LFLGS                   3-0-0/w PTR         r     1 @P$STA
     4-0-0/w PTR         r     1 @P$TDTYP                   6-0-0/w PTR         r     1 @P$UID
    *0-0-0/w UBIN        r     1 P$LFLGS                   *0-0-0/c CHAR(8)     r     1 P$STA
    *0-0-0/w UBIN        r     1 P$TDTYP                   *0-0-0/w UBIN        r     1 P$UID
    15-0-0/c CHAR(4)     r     1 TMPID                     16-0-0/w UBIN(9)     r     1 TMPTYP
    17-0-0/w UBIN        r     1 TMPWORD                    7-0-0/c CHAR(8)     r     1 Y$STA
    12-0-0/w UBIN        r     1 Y$UID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KF_USER_COUNT              0-0-0/w STRC(306)   r     1 KF_UTBL(0:20)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$FE
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:20   


   Procedure KFB$BLD_TBL requires 140 words for executable code.
   Procedure KFB$BLD_TBL requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:22   
          MINI XREF LISTING

DEAC_FPT
       354**DCL       398<>CALL
DEAC_FPT.V
       355**DCL       354--DCLINIT
DEAC_FPT.V.DVBYTE.REREAD#
       357**DCL       357--REDEF
DISC_TBL
       336**DCL       408>>ASSIGN
KFB$FIFS
       378**DCL-ENT   381--CALL      384--CALL      394--CALL
KF_USER_COUNT
       276**DCL       436<<ASSIGN    436>>ASSIGN
KF_UTBL.DISC
       280**DCL       408<<ASSIGN
KF_UTBL.FEX
       279**DCL       420<<ASSIGN
KF_UTBL.FLAGS.FEPCONSTART
       278**DCL       410<<ASSIGN
KF_UTBL.FRGTYP
       280**DCL       409<<ASSIGN
KF_UTBL.LFLAGS
       279**DCL       422<<ASSIGN
KF_UTBL.STA.NODID
       278**DCL       419>>CALLBLT
KF_UTBL.STATE
       278**DCL       401<<ASSIGN    432>>IF        435<<ASSIGN
KF_UTBL.STATION
       278**DCL       278--REDEF     402<<ASSIGN    434<<ASSIGN
KF_UTBL.TDTYP
       279**DCL       411<<ASSIGN    418>>IF
M$DEACTIVATE
        79**DCL-ENT   398--CALL
PL6.E3A0      #001=KFB$BLD_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:19 Page:23   
P$LFLGS
       342**DCL        45--PROC      422>>ASSIGN
P$STA
       339**DCL        45--PROC      380>>ASSIGN    397>>ASSIGN    402>>ASSIGN    404>>ASSIGN    405>>ASSIGN
P$TDTYP
       340**DCL        45--PROC      403>>IF        411>>ASSIGN
P$UID
       341**DCL        45--PROC      423<<ASSIGN
TMPID
       372**DCL       404<<ASSIGN    405<<ASSIGN    406>>IF
TMPTYP
       373**DCL       406<<ASSIGN    408>>ASSIGN    409>>ASSIGN
TMPWORD
       374**DCL       417<<ASSIGN    419<<CALLBLT   420>>ASSIGN
Y$STA
       367**DCL       380<<ASSIGN    381<>CALL      384<>CALL      393<<ASSIGN    394<>CALL
Y$UID
       369**DCL       381<>CALL      382>>IF        384<>CALL      391>>IF        394<>CALL      395>>IF
       401>>ASSIGN    402>>ASSIGN    408>>ASSIGN    409>>ASSIGN    410>>ASSIGN    411>>ASSIGN    418>>IF
       419>>CALLBLT   420>>ASSIGN    422>>ASSIGN    423>>ASSIGN    432>>IF        434>>ASSIGN    435>>ASSIGN
Y_DEAC_STA
       375**DCL       354--DCLINIT   397<<ASSIGN

PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:24   
      143        1        /*M*      KFB$FIFS - find id from station         */
      144        2        /*T***********************************************************/
      145        3        /*T*                                                         */
      146        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      147        5        /*T*                                                         */
      148        6        /*T***********************************************************/
      149        7        /*X*     CCE CRM 70 IND 5 ECU 10 THI 0 DCI 10 CSU 5 ENU 5 */
      150        8        /*F*     NAME:     KFB$FIFS
      151        9                 PURPOSE:  Find the frog utbl index from a station name.
      152       10                 DESCRIPTION:  Given a station name and state, search the user
      153       11                      table for a match.  Return the index into the user
      154       12                      table of the matching entry.  If no match, return
      155       13                      a zero.
      156       14        */
      157       15        /*D*     NAME:     KFB$FIFS
      158       16                 CALL:     Call KFB$FIFS(P$STA,P$STATE,P$ID)
      159       17                 INTERFACE:  none.
      160       18                 INPUT:    P$STA - 8 char station anme.
      161       19                 OUTPUT:   P$ID - index into the user table of
      162       20                      the entry that matched the station name given.
      163       21                 DESCRIPTION: Set the index to 0 and search the
      164       22                      user table, comparing the given char string
      165       23                 and state with the station name and state in the
      166       24                 in the user table.  When a match is found, return the index
      167       25                 into the table in P$UID.
      168       26        */
      169       27        KFB$FIFS: PROC(P$STA,P$STATE,P$UID);
      170       28        /**/
      171       29        /*        Insert all include files here
      172       30        */
      173       31        %INCLUDE CP_6;
      174      112        %INCLUDE KF$SUBS;
      175      179        %INCLUDE KF$MSG_C;
      176      246        %INCLUDE KF_DAT_R;
      177      265        /**/
      178      266        /**/
      179      267        /*       INSERT ALL LOCAL DCLS HERE              */
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:25   
      180      268        /**/
      181      269    1   DCL P$STA CHAR(8);
      182      270    1   DCL P$STATE UBIN WORD;
      183      271    1   DCL P$UID UBIN WORD;
      184      272        /**/
      185      273    1   DCL Y$INDEX UBIN WORD;
      186      274    1   DCL Y$SRCHFLG UBIN WORD;
      187      275        /**/
      188      276        %EJECT;
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:26   
      189      277    1           Y$INDEX = 1;
      190      278    1           Y$SRCHFLG = 1;
      191      279    2   SRCHTBL: DO WHILE (Y$SRCHFLG = 1);
      192      280    2                IF P$STA = KF_UTBL.STATION(Y$INDEX) AND
      193      281    2                  P$STATE = KF_UTBL.STATE(Y$INDEX) THEN
      194      282    3                DO;
      195      283    3                     P$UID = Y$INDEX;
      196      284    3                     RETURN;
      197      285    3                END;
      198      286    2                Y$INDEX = Y$INDEX + 1;
      199      287    2                IF Y$INDEX = %KF_UTBL_MAX## THEN Y$SRCHFLG = 0;
      200      288    2           END SRCHTBL;
      201      289    1           P$UID = 0;
      202      290    1           RETURN;
      203      291    1   END KFB$FIFS;
      204      292        %EOD;

PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:27   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFB$FIFS.

   Procedure KFB$FIFS requires 37 words for executable code.
   Procedure KFB$FIFS requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:28   

 Object Unit name= KFB$FIFS                                   File name= KFB$BLD_TBL.:E05TOU
 UTS= JUL 30 '97 00:19:54.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Proc  even  none    37     45  KFB$FIFS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        3  KFB$FIFS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:29   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$FE                                  M$CS
     M$HLPF                                M$PROF                                M$NETCON
     KF_UTBL
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:30   


      143        1        /*M*      KFB$FIFS - find id from station         */
      144        2        /*T***********************************************************/
      145        3        /*T*                                                         */
      146        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      147        5        /*T*                                                         */
      148        6        /*T***********************************************************/
      149        7        /*X*     CCE CRM 70 IND 5 ECU 10 THI 0 DCI 10 CSU 5 ENU 5 */
      150        8        /*F*     NAME:     KFB$FIFS
      151        9                 PURPOSE:  Find the frog utbl index from a station name.
      152       10                 DESCRIPTION:  Given a station name and state, search the user
      153       11                      table for a match.  Return the index into the user
      154       12                      table of the matching entry.  If no match, return
      155       13                      a zero.
      156       14        */
      157       15        /*D*     NAME:     KFB$FIFS
      158       16                 CALL:     Call KFB$FIFS(P$STA,P$STATE,P$ID)
      159       17                 INTERFACE:  none.
      160       18                 INPUT:    P$STA - 8 char station anme.
      161       19                 OUTPUT:   P$ID - index into the user table of
      162       20                      the entry that matched the station name given.
      163       21                 DESCRIPTION: Set the index to 0 and search the
      164       22                      user table, comparing the given char string
      165       23                 and state with the station name and state in the
      166       24                 in the user table.  When a match is found, return the index
      167       25                 into the table in P$UID.
      168       26        */
      169       27        KFB$FIFS: PROC(P$STA,P$STATE,P$UID);

     27  6 000000   000000 700200 xent  KFB$FIFS     TSX0  ! X66_AUTO_3
         6 000001   000010 000003                    ZERO    8,3

      170       28        /**/
      171       29        /*        Insert all include files here
      172       30        */
      173       31        %INCLUDE CP_6;
      174      112        %INCLUDE KF$SUBS;
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:31   
      175      179        %INCLUDE KF$MSG_C;
      176      246        %INCLUDE KF_DAT_R;
      177      265        /**/
      178      266        /**/
      179      267        /*       INSERT ALL LOCAL DCLS HERE              */
      180      268        /**/
      181      269    1   DCL P$STA CHAR(8);
      182      270    1   DCL P$STATE UBIN WORD;
      183      271    1   DCL P$UID UBIN WORD;
      184      272        /**/
      185      273    1   DCL Y$INDEX UBIN WORD;
      186      274    1   DCL Y$SRCHFLG UBIN WORD;
      187      275        /**/
      188      276        %EJECT;
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:32   
      189      277    1           Y$INDEX = 1;

    277  6 000002   000001 235007                    LDA     1,DL
         6 000003   200006 755100                    STA     Y$INDEX,,AUTO

      190      278    1           Y$SRCHFLG = 1;

    278  6 000004   200007 755100                    STA     Y$SRCHFLG,,AUTO

      191      279    2   SRCHTBL: DO WHILE (Y$SRCHFLG = 1);

    279  6 000005   000001 115007       SRCHTBL      CMPA    1,DL
         6 000006   000042 601000 6                  TNZ     s:289

      192      280    2                IF P$STA = KF_UTBL.STATION(Y$INDEX) AND

    280  6 000007   200006 236100                    LDQ     Y$INDEX,,AUTO
         6 000010   000044 402007                    MPY     36,DL
         6 000011   200003 470500                    LDP0    @P$STA,,AUTO
         6 000012   040006 106500                    CMPC    fill='040'O
         6 000013   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         6 000014   000000 000010 xsym               ADSC9   KF_UTBL,Q                cn=0,n=8
         6 000015   000031 601000 6                  TNZ     s:286
         6 000016   200004 471500                    LDP1    @P$STATE,,AUTO
         6 000017   200006 236100                    LDQ     Y$INDEX,,AUTO
         6 000020   000011 402007                    MPY     9,DL
         6 000021   000002 236006 xsym               LDQ     KF_UTBL+2,QL
         6 000022   000022 772000                    QRL     18
         6 000023   100000 116100                    CMPQ    0,,PR1
         6 000024   000031 601000 6                  TNZ     s:286

      193      281    2                  P$STATE = KF_UTBL.STATE(Y$INDEX) THEN
      194      282    3                DO;

      195      283    3                     P$UID = Y$INDEX;

    283  6 000025   200005 473500                    LDP3    @P$UID,,AUTO
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:33   
         6 000026   200006 235100                    LDA     Y$INDEX,,AUTO
         6 000027   300000 755100                    STA     0,,PR3

      196      284    3                     RETURN;

    284  6 000030   000000 702200 xent               TSX2  ! X66_ARET

      197      285    3                END;
      198      286    2                Y$INDEX = Y$INDEX + 1;

    286  6 000031   200006 235100                    LDA     Y$INDEX,,AUTO
         6 000032   000001 035007                    ADLA    1,DL
         6 000033   200006 755100                    STA     Y$INDEX,,AUTO

      199      287    2                IF Y$INDEX = %KF_UTBL_MAX## THEN Y$SRCHFLG = 0;

    287  6 000034   000024 115007                    CMPA    20,DL
         6 000035   000037 601000 6                  TNZ     s:288

    287  6 000036   200007 450100                    STZ     Y$SRCHFLG,,AUTO

      200      288    2           END SRCHTBL;

    288  6 000037   200007 236100                    LDQ     Y$SRCHFLG,,AUTO
         6 000040   000001 116007                    CMPQ    1,DL
         6 000041   000007 600000 6                  TZE     s:280

      201      289    1           P$UID = 0;

    289  6 000042   200005 470500                    LDP0    @P$UID,,AUTO
         6 000043   000000 450100                    STZ     0,,PR0

      202      290    1           RETURN;

    290  6 000044   000000 702200 xent               TSX2  ! X66_ARET
      203      291    1   END KFB$FIFS;
      204      292        %EOD;
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:34   

PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:35   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFB$FIFS.
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:36   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P$STA                     4-0-0/w PTR         r     1 @P$STATE
     5-0-0/w PTR         r     1 @P$UID                    *0-0-0/c CHAR(8)     r     1 P$STA
    *0-0-0/w UBIN        r     1 P$STATE                   *0-0-0/w UBIN        r     1 P$UID
     6-0-0/w UBIN        r     1 Y$INDEX                    7-0-0/w UBIN        r     1 Y$SRCHFLG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(306)   r     1 KF_UTBL(0:20)


   Procedure KFB$FIFS requires 37 words for executable code.
   Procedure KFB$FIFS requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KFB$FIFS File=KFB$BLD_TBL.:E05TSI                             WED 07/30/97 00:19 Page:38   
          MINI XREF LISTING

KF_UTBL.STATE
       259**DCL       280>>IF
KF_UTBL.STATION
       259**DCL       259--REDEF     280>>IF
P$STA
       269**DCL        27--PROC      280>>IF
P$STATE
       270**DCL        27--PROC      280>>IF
P$UID
       271**DCL        27--PROC      283<<ASSIGN    289<<ASSIGN
Y$INDEX
       273**DCL       277<<ASSIGN    280>>IF        280>>IF        283>>ASSIGN    286<<ASSIGN    286>>ASSIGN
       287>>IF
Y$SRCHFLG
       274**DCL       278<<ASSIGN    279>>DOWHILE   287<<ASSIGN

PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:39   
      205        1        /*M*           KFB$DEL_TBL - delete user table entry   */
      206        2        /*T***********************************************************/
      207        3        /*T*                                                         */
      208        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      209        5        /*T*                                                         */
      210        6        /*T***********************************************************/
      211        7        KFB$DEL_TBL: PROC(P$STA);
      212        8        /*F*      NAME:     KFB$DEL_TBL
      213        9                  PURPOSE:  Delete a user table entry
      214       10                  DESCRIPTION:  Entry is with a station name.
      215       11                            We search the user table until we find the
      216       12                 matching station name and then set the state to deleted.
      217       13                 If we dont find a name,find an empty slot and build
      218       14                 an entry with the sate = wait for open.
      219       15        */
      220       16        /*D*     NAME:     KFB$DEL_TBL
      221       17                 CALL:     Call KFB$DEL_TBL(P$STA)
      222       18                 INTERFACE:  KFH$KILMSGBUF - to stop msgbufring for this
      223       19                      user.
      224       20                 INPUT:    P$STA - 8 char station name
      225       21                 OUTPUT:   None
      226       22                 DESCRIPTION:  Given the station name, we search the
      227       23                      user table for a match.  When the match is found,
      228       24                      we call kilmsgbuf just in case this user was
      229       25                      engaged in msg buffering.  We then clear the active
      230       26                      flag and decremtn the user count.  If we cant find the station name,
      231       27                 build an entry with the stae = wait 4 open.
      232       28        */
      233       29        %INCLUDE CP_6;
      234      110        %INCLUDE KF$SUBS;
      235      177        %INCLUDE KF$MSG_C;
      236      244        %INCLUDE KF_DAT_R;
      237      263        /**/
      238      264        /**/
      239      265        /*        INSERT ALL LOCAL VARIABLES HERE         */
      240      266        /**/
      241      267    1   DCL P$STA CHAR(8);
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:40   
      242      268    1   DCL Y$INDEX UBIN WORD;
      243      269    1   DCL Y$STA CHAR(8);
      244      270    1   DCL Y$UID UBIN WORD;
      245      271    1   DCL SRCH_FLAG UBIN(36);
      246      272        /**/
      247      273        /*             Insert all entry dcls here         */
      248      274        /**/
      249      275    1   DCL KFB$FIFS ENTRY(3);
      250      276        %EJECT;
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:41   
      251      277    1           Y$STA = P$STA;
      252      278    1           CALL KFB$FIFS(Y$STA,%KF_UTBLST_ACTIVE#,Y$UID);
      253      279    1           IF Y$UID = 0 THEN
      254      280    2           DO;
      255      281        /*
      256      282                 WE GOT A CLOSE BEFORE AN OPEN - FIND AN EMPTY SLOT
      257      283                 AND BUILD A DUMY UTBL ENTRY.
      258      284        */
      259      285    2                Y$STA = ' ';
      260      286    2                CALL KFB$FIFS(Y$STA,%KF_UTBLST_DELTD#,Y$UID);
      261      287    2                IF Y$UID = 0 THEN
      262      288    3                DO; /*CLOSE ON A USR WE CANT FIND AND NO ROM IN TABLE*/
      263      289    3                     RETURN;
      264      290    3                END;
      265      291    2                ELSE
      266      292    3                DO;
      267      293    3                     KF_UTBL.STATION(Y$UID) = P$STA;
      268      294    3                     KF_UTBL.STATE(Y$UID) = %KF_UTBLST_WAIT4OPN#;
      269      295    3                     KF_USER_COUNT = KF_USER_COUNT+1;
      270      296    3                END;
      271      297    2           END;
      272      298    1           ELSE
      273      299    2           DO;                             /* FIFS FOUND ACTIVE USER*/
      274      300        /*
      275      301                 NORMAL CLOSE - SET STATE TO DELETED
      276      302        */
      277      303    2                KF_UTBL(Y$UID) = '0'B;
      278      304    2                KF_UTBL.STATE(Y$UID) = %KF_UTBLST_DELTD#;
      279      305    2                KF_UTBL.STATION(Y$UID) = ' ';
      280      306    2                KF_USER_COUNT = KF_USER_COUNT - 1;
      281      307    2           END;
      282      308    1           RETURN;
      283      309    1   END KFB$DEL_TBL;

PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:42   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFB$DEL_TBL.

   Procedure KFB$DEL_TBL requires 69 words for executable code.
   Procedure KFB$DEL_TBL requires 14 words of local(AUTO) storage.

    No errors detected in file KFB$BLD_TBL.:E05TSI    .

PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:43   

 Object Unit name= KFB$DEL_TBL                                File name= KFB$BLD_TBL.:E05TOU
 UTS= JUL 30 '97 00:20:00.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$FE
    2   DCB   even  none     0      0  M$CS
    3   DCB   even  none     0      0  M$HLPF
    4   DCB   even  none     0      0  M$PROF
    5   DCB   even  none     0      0  M$NETCON
    6   Proc  even  none    69    105  KFB$DEL_TBL
    7  RoData even  none     2      2  KFB$DEL_TBL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        1  KFB$DEL_TBL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 KFB$FIFS
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:44   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  KF_USER_COUNT                         M$FE
     M$CS                                  M$HLPF                                M$PROF
     M$NETCON                              KF_UTBL                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:45   


      205        1        /*M*           KFB$DEL_TBL - delete user table entry   */
      206        2        /*T***********************************************************/
      207        3        /*T*                                                         */
      208        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      209        5        /*T*                                                         */
      210        6        /*T***********************************************************/
      211        7        KFB$DEL_TBL: PROC(P$STA);

      7  6 000000   000000 700200 xent  KFB$DEL_TBL  TSX0  ! X66_AUTO_1
         6 000001   000016 000001                    ZERO    14,1

      212        8        /*F*      NAME:     KFB$DEL_TBL
      213        9                  PURPOSE:  Delete a user table entry
      214       10                  DESCRIPTION:  Entry is with a station name.
      215       11                            We search the user table until we find the
      216       12                 matching station name and then set the state to deleted.
      217       13                 If we dont find a name,find an empty slot and build
      218       14                 an entry with the sate = wait for open.
      219       15        */
      220       16        /*D*     NAME:     KFB$DEL_TBL
      221       17                 CALL:     Call KFB$DEL_TBL(P$STA)
      222       18                 INTERFACE:  KFH$KILMSGBUF - to stop msgbufring for this
      223       19                      user.
      224       20                 INPUT:    P$STA - 8 char station name
      225       21                 OUTPUT:   None
      226       22                 DESCRIPTION:  Given the station name, we search the
      227       23                      user table for a match.  When the match is found,
      228       24                      we call kilmsgbuf just in case this user was
      229       25                      engaged in msg buffering.  We then clear the active
      230       26                      flag and decremtn the user count.  If we cant find the station name,
      231       27                 build an entry with the stae = wait 4 open.
      232       28        */
      233       29        %INCLUDE CP_6;
      234      110        %INCLUDE KF$SUBS;
      235      177        %INCLUDE KF$MSG_C;
      236      244        %INCLUDE KF_DAT_R;
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:46   
      237      263        /**/
      238      264        /**/
      239      265        /*        INSERT ALL LOCAL VARIABLES HERE         */
      240      266        /**/
      241      267    1   DCL P$STA CHAR(8);
      242      268    1   DCL Y$INDEX UBIN WORD;
      243      269    1   DCL Y$STA CHAR(8);
      244      270    1   DCL Y$UID UBIN WORD;
      245      271    1   DCL SRCH_FLAG UBIN(36);
      246      272        /**/
      247      273        /*             Insert all entry dcls here         */
      248      274        /**/
      249      275    1   DCL KFB$FIFS ENTRY(3);
      250      276        %EJECT;
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:47   
      251      277    1           Y$STA = P$STA;

    277  6 000002   200003 470500                    LDP0    @P$STA,,AUTO
         6 000003   040100 100500                    MLR     fill='040'O
         6 000004   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         6 000005   200005 000010                    ADSC9   Y$STA,,AUTO              cn=0,n=8

      252      278    1           CALL KFB$FIFS(Y$STA,%KF_UTBLST_ACTIVE#,Y$UID);

    278  6 000006   200007 631500                    EPPR1   Y$UID,,AUTO
         6 000007   200014 451500                    STP1    Y$UID+5,,AUTO
         6 000010   000000 236000 7                  LDQ     0
         6 000011   200013 756100                    STQ     Y$UID+4,,AUTO
         6 000012   200005 633500                    EPPR3   Y$STA,,AUTO
         6 000013   200012 453500                    STP3    Y$UID+3,,AUTO
         6 000014   200012 630500                    EPPR0   Y$UID+3,,AUTO
         6 000015   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000016   000000 701000 xent               TSX1    KFB$FIFS
         6 000017   000000 011000                    NOP     0

      253      279    1           IF Y$UID = 0 THEN

    279  6 000020   200007 235100                    LDA     Y$UID,,AUTO
         6 000021   000062 601000 6                  TNZ     s:303

      254      280    2           DO;

      255      281        /*
      256      282                 WE GOT A CLOSE BEFORE AN OPEN - FIND AN EMPTY SLOT
      257      283                 AND BUILD A DUMY UTBL ENTRY.
      258      284        */
      259      285    2                Y$STA = ' ';

    285  6 000022   000035 235000 xsym               LDA     B_VECTNIL+29
         6 000023   000035 236000 xsym               LDQ     B_VECTNIL+29
         6 000024   200005 755100                    STA     Y$STA,,AUTO
         6 000025   200006 756100                    STQ     Y$STA+1,,AUTO
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:48   

      260      286    2                CALL KFB$FIFS(Y$STA,%KF_UTBLST_DELTD#,Y$UID);

    286  6 000026   200007 630500                    EPPR0   Y$UID,,AUTO
         6 000027   200014 450500                    STP0    Y$UID+5,,AUTO
         6 000030   000001 236000 7                  LDQ     1
         6 000031   200013 756100                    STQ     Y$UID+4,,AUTO
         6 000032   200005 631500                    EPPR1   Y$STA,,AUTO
         6 000033   200012 451500                    STP1    Y$UID+3,,AUTO
         6 000034   200012 630500                    EPPR0   Y$UID+3,,AUTO
         6 000035   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000036   000000 701000 xent               TSX1    KFB$FIFS
         6 000037   000000 011000                    NOP     0

      261      287    2                IF Y$UID = 0 THEN

    287  6 000040   200007 235100                    LDA     Y$UID,,AUTO
         6 000041   000043 601000 6                  TNZ     s:293

      262      288    3                DO; /*CLOSE ON A USR WE CANT FIND AND NO ROM IN TABLE*/

      263      289    3                     RETURN;

    289  6 000042   000000 702200 xent               TSX2  ! X66_ARET

      264      290    3                END;
      265      291    2                ELSE
      266      292    3                DO;

      267      293    3                     KF_UTBL.STATION(Y$UID) = P$STA;

    293  6 000043   200007 236100                    LDQ     Y$UID,,AUTO
         6 000044   000011 402007                    MPY     9,DL
         6 000045   000002 736000                    QLS     2
         6 000046   200003 470500                    LDP0    @P$STA,,AUTO
         6 000047   040006 100500                    MLR     fill='040'O
         6 000050   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:49   
         6 000051   000000 000010 xsym               ADSC9   KF_UTBL,Q                cn=0,n=8

      268      294    3                     KF_UTBL.STATE(Y$UID) = %KF_UTBLST_WAIT4OPN#;

    294  6 000052   200007 236100                    LDQ     Y$UID,,AUTO
         6 000053   000011 402007                    MPY     9,DL
         6 000054   000003 220003                    LDX0    3,DU
         6 000055   000002 740006 xsym               STX0    KF_UTBL+2,QL

      269      295    3                     KF_USER_COUNT = KF_USER_COUNT+1;

    295  6 000056   000000 235000 xsym               LDA     KF_USER_COUNT
         6 000057   000001 035007                    ADLA    1,DL
         6 000060   000000 755000 xsym               STA     KF_USER_COUNT

      270      296    3                END;

      271      297    2           END;

    297  6 000061   000104 710000 6                  TRA     s:308

      272      298    1           ELSE
      273      299    2           DO;                             /* FIFS FOUND ACTIVE USER*/

      274      300        /*
      275      301                 NORMAL CLOSE - SET STATE TO DELETED
      276      302        */
      277      303    2                KF_UTBL(Y$UID) = '0'B;

    303  6 000062   200007 236100                    LDQ     Y$UID,,AUTO
         6 000063   000044 402007                    MPY     36,DL
         6 000064   000006 100400                    MLR     fill='000'O
         6 000065   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000066   000000 000042 xsym               ADSC9   KF_UTBL,Q                cn=0,n=34

      278      304    2                KF_UTBL.STATE(Y$UID) = %KF_UTBLST_DELTD#;

PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:50   
    304  6 000067   200007 236100                    LDQ     Y$UID,,AUTO
         6 000070   000011 402007                    MPY     9,DL
         6 000071   000002 220003                    LDX0    2,DU
         6 000072   000002 740006 xsym               STX0    KF_UTBL+2,QL

      279      305    2                KF_UTBL.STATION(Y$UID) = ' ';

    305  6 000073   000000 621006                    EAX1    0,QL
         6 000074   000000 622006                    EAX2    0,QL
         6 000075   000035 235000 xsym               LDA     B_VECTNIL+29
         6 000076   000035 236000 xsym               LDQ     B_VECTNIL+29
         6 000077   000000 755011 xsym               STA     KF_UTBL,X1
         6 000100   000001 756012 xsym               STQ     KF_UTBL+1,X2

      280      306    2                KF_USER_COUNT = KF_USER_COUNT - 1;

    306  6 000101   000000 235000 xsym               LDA     KF_USER_COUNT
         6 000102   000001 135007                    SBLA    1,DL
         6 000103   000000 755000 xsym               STA     KF_USER_COUNT

      281      307    2           END;

      282      308    1           RETURN;

    308  6 000104   000000 702200 xent               TSX2  ! X66_ARET
      283      309    1   END KFB$DEL_TBL;

PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:51   
--  Include file information  --

   KF_DAT_R.:E05TOU  cannot be made into a system file and is referenced.
   KF$MSG_C.:E05TOU  is referenced.
   KF$SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KFB$DEL_TBL.
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:52   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P$STA                    *0-0-0/c CHAR(8)     r     1 P$STA
     5-0-0/c CHAR(8)     r     1 Y$STA                      7-0-0/w UBIN        r     1 Y$UID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KF_USER_COUNT              0-0-0/w STRC(306)   r     1 KF_UTBL(0:20)


   Procedure KFB$DEL_TBL requires 69 words for executable code.
   Procedure KFB$DEL_TBL requires 14 words of local(AUTO) storage.

    No errors detected in file KFB$BLD_TBL.:E05TSI    .
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:53   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KFB$DEL_TBL File=KFB$BLD_TBL.:E05TSI                          WED 07/30/97 00:20 Page:54   
          MINI XREF LISTING

KFB$FIFS
       275**DCL-ENT   278--CALL      286--CALL
KF_USER_COUNT
       255**DCL       295<<ASSIGN    295>>ASSIGN    306<<ASSIGN    306>>ASSIGN
KF_UTBL
       256**DCL       303<<ASSIGN
KF_UTBL.STATE
       257**DCL       294<<ASSIGN    304<<ASSIGN
KF_UTBL.STATION
       257**DCL       257--REDEF     293<<ASSIGN    305<<ASSIGN
P$STA
       267**DCL         7--PROC      277>>ASSIGN    293>>ASSIGN
Y$STA
       269**DCL       277<<ASSIGN    278<>CALL      285<<ASSIGN    286<>CALL
Y$UID
       270**DCL       278<>CALL      279>>IF        286<>CALL      287>>IF        293>>ASSIGN    294>>ASSIGN
       303>>ASSIGN    304>>ASSIGN    305>>ASSIGN
