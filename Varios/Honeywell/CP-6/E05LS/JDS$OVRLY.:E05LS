VERSION E05

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:1    
        1        1        /*M* JDS$OVRLY:  Unshared program overlaying routines.             */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8
        9        9        JDS$OVRLY: PROC(NODE,ENTRY_ADDR,FLAGS) ALTRET;
       10       10
       11       11    1   DCL NODE UBIN;
       12       12    1   DCL ENTRY_ADDR UBIN;
       13       13
       14       14        /* Include FILES:    */
       15       15        %INCLUDE B$OBJECT_C;
       16     3445        %INCLUDE B$ROSEG;
       17     3508        %INCLUDE JD_SUBS_C;
       18     3520        %INCLUDE J_ERRORS_C;
       19     3607        %INCLUDE J_ERRSET_C;
       20     3627        %INCLUDE B_MACROS_C;
       21     3738        %INCLUDE M$JIT_C;
       22     4258        %INCLUDE MM_DATA_R;
       23     4778        %INCLUDE B$MAP;
       24     4877        %INCLUDE JS$CP6V_C;
       25     4940        %INCLUDE B$USER;
       26     5156
       27     5157        %FPT$OLAY_V;
       28     5160    1   DCL FLAGS BIT(36) ALIGNED;
       29     5161
       30     5162    1   DCL IS_IN BIT(1);
       31     5163    1   DCL NX SBIN;
       32     5164    1   DCL T1 SBIN;
       33     5165    1   DCL T2 SBIN;
       34     5166    1   DCL T3 SBIN;
       35     5167    1   DCL TARGETX SBIN;
       36     5168    1   DCL NODES SBIN;
       37     5169    1   DCL I SBIN;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:2    
       38     5170    1   DCL TNODE$ PTR;
       39     5171    1   DCL NODES$ PTR;
       40     5172    1   DCL TREEHDR$ PTR;
       41     5173    1   DCL TARGET$ PTR;
       42     5174    1   DCL OVENT$ EPTR;
       43     5175    1   DCL 1 OVENT REDEF OVENT$,
       44     5176    1         2 ADDRESS UBIN(18) UNAL,
       45     5177    1         2 * UBIN(18) UNAL;
       46     5178        /**/
       47     5179    1   DCL B$JIT$ PTR SYMREF READONLY;
       48     5180    1   DCL B$PS0$ PTR SYMREF READONLY;
       49     5181    1   DCL B$PS1$ PTR SYMREF READONLY;
       50     5182    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       51     5183    1   DCL B$UPT$ PTR SYMREF READONLY;
       52     5184    1   DCL S$CU$ PTR SYMREF;
       53     5185        %INCLUDE HF_DATA_R;
       54     5228        /**/
       55     5229    1   DCL JDU$MEMSET ENTRY(4) ALTRET;
       56     5230    1   DCL JDU$READ_OVRLY ENTRY(5) ALTRET;
       57     5231    1   DCL HFC$ASSOCCLR ENTRY (3);
       58     5232
       59     5233        %INCLUDE UD_SEV_C;
       60     5247        %SUB FCG#='1204'O;
       61     5248        %SUB MID#='23'O;
       62     5249        %ERRCODE (NAME=ECIRCTREE,COD#=%E$CIRCTREE);
       63     5257        %ERRCODE (NAME=EBADTREE,COD#=%E$BADTREE);
       64     5265        %ERRCODE (NAME=ENOOVRLY,COD#=%E$NOOVRLY);
       65     5273
       66     5274        %TEXTC;
       67     5279        %B$TREE_TABLE(HDR_NAME=B$TREEHDR,
       68     5280                      NODE_NAME=B$NODE);
       69     5338        /**/
       70     5339        %SUB   B$ROSEG = B$ROSEG$->B$ROSEG;
       71     5340        %SUB   B$TREEHDR = TREEHDR$->B$TREEHDR;
       72     5341        %SUB   B$NODE = TNODE$->B$NODE;
       73     5342        %SUB   B$JIT = B$JIT$->B$JIT;
       74     5343        %SUB   B$UPT=B$UPT$->B$MAP;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:3    
       75     5344        /**/
       76     5345        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:4    
       77     5346        /*F*   NAME:   JDS$OVRLY                                          */
       78     5347        /*F*   PURPOSE: To bring in a requested overlay and (except in the */
       79     5348        /*,*           case of a COBOL 'CALL') its entire backward path.   */
       80     5349
       81     5350        /* Establish pointers to the tree header and to the list of nodes. */
       82     5351    1      TREEHDR$ = B$ROSEG.TREE$;
       83     5352    1      NODES$ = PINCRW(TREEHDR$,SIZEW(B$TREEHDR));
       84     5353    1      TNODE$ = NODES$;
       85     5354
       86     5355        /* If this is a cancel issued on an overlay, handle that separately. */
       87     5356    1      IF (FLAGS & JD_CANCEL)
       88     5357    2      THEN DO;
       89     5358        /* Search the TREE for a match on overlay name */
       90     5359    3           DO I = 0 TO B$TREEHDR.NODES - 1;
       91     5360    3                IF B$NODE.NAME$->TEXTC.TEXT = B$PS0$->TEXTC.TEXT
       92     5361    3                THEN GOTO GOT_NODE;
       93     5362    3                TNODE$ = PINCRW(TNODE$,SIZEW(B$NODE));
       94     5363    3                END;
       95     5364    2           B$JIT.ERR=ENOOVRLY;
       96     5365    2   CANCEL_ERR:
       97     5366    2           ALTRETURN;
       98     5367
       99     5368    2   GOT_NODE:
      100     5369        /* Pass back node # for delta  */
      101     5370    2           NODE = I;
      102     5371
      103     5372        /* If the overlay is currently not in memory, just return.         */
      104     5373    2           IF NOT B$NODE.FLGS.NOW_IN THEN RETURN;
      105     5374
      106     5375        /* Update aflgs to show how this overlay is being used.            */
      107     5376    2           B$NODE.AFLGS = B$NODE.AFLGS | FLAGS;
      108     5377
      109     5378        /* Mark the node as no longer in memory, and free its memory.      */
      110     5379    2           B$NODE.FLGS.NOW_IN = %FALSE;
      111     5380    2           B$NODE.FLGS.WAS_IN = %TRUE;
      112     5381    2           CALL MSET ALTRET (CANCEL_ERR);
      113     5382    2           B$NODE.AFLGS = '0'B;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:5    
      114     5383    2           RETURN;
      115     5384    2           END;                            /*   END IF CANCEL                    */
      116     5385
      117     5386        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:6    
      118     5387
      119     5388        /* Plow through the tree, marking all segments which are currently */
      120     5389        /* in memory 'was in memory', and look for the segment we want to  */
      121     5390        /* bring in next.                                                  */
      122     5391    1      TARGET$ = ADDR(NIL);
      123     5392    2      DO I = 0 TO B$TREEHDR.NODES - 1;
      124     5393    2           IF B$NODE.FLGS.NOW_IN
      125     5394    3           THEN DO;
      126     5395    3                B$NODE.FLGS.NOW_IN = %FALSE;
      127     5396    3                B$NODE.FLGS.WAS_IN = %TRUE;
      128     5397    3                END;
      129     5398    3           ELSE DO;
      130     5399    3                B$NODE.FLGS.WAS_IN = %FALSE;
      131     5400    3                B$NODE.AFLGS = '0'B;
      132     5401    3                END;
      133     5402    2           IF B$NODE.NAME$->TEXTC.TEXT = B$PS0$->TEXTC.TEXT
      134     5403    3           THEN DO;
      135     5404    3                TARGET$ = TNODE$;          /* Remember ptr to target node        */
      136     5405    3                TARGETX = I;               /* And remember its node number       */
      137     5406    3                END;
      138     5407    2           TNODE$ = PINCRW(TNODE$,SIZEW(B$NODE));
      139     5408    2           END;
      140     5409
      141     5410        /* Return an error if the named segment isn't in the tree          */
      142     5411    1      IF TARGET$ = ADDR(NIL)
      143     5412    2      THEN DO;
      144     5413    2           B$JIT.ERR=ENOOVRLY;
      145     5414    2           ALTRETURN;
      146     5415    2           END;
      147     5416        /*E*   ERROR:  JDS-E$NOOVRLY-4
      148     5417               MESSAGE: The named overlay does not exist in the TREE.      */
      149     5418
      150     5419        /* Set node to the node number of the requested overlay now, in    */
      151     5420        /* case CHK_INMEM decides to change targetx based upon what's      */
      152     5421        /* already in memory.                                              */
      153     5422    1      NODE = TARGETX;
      154     5423    1      TNODE$ = TARGET$;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:7    
      155     5424
      156     5425        /* Update aflgs to show how this overlay is being used.            */
      157     5426    1      B$NODE.AFLGS = B$NODE.AFLGS | FLAGS;
      158     5427
      159     5428        /* By the time we return from CHK_INMEM, TNODE$ will point to the  */
      160     5429        /* target node -- the highest one in the tree that we want to get. */
      161     5430        /* See if the target node is marked 'was in'. If so, we're doing   */
      162     5431        /* the 'no-op' case where we segld-ed backwards onto our current   */
      163     5432        /* path. Just re-mark the segments as currently in memory.         */
      164     5433    1      CALL CHK_INMEM(IS_IN) ALTRET(SEGLD_ERR);
      165     5434
      166     5435        /* Allocate memory: make sure that pages are present from data     */
      167     5436        /* and procedure lower limits through the top of data and procedure*/
      168     5437        /* for this overlay.                                               */
      169     5438    1      IF NOT IS_IN
      170     5439    2      THEN DO;                             /* We need to allocate memory         */
      171     5440    2           CALL MSET ALTRET (SEGLD_ERR);
      172     5441    2           END;
      173     5442
      174     5443        /* If there are DBRK pages, open them and set B$U.DBRK             */
      175     5444    1      T3 = B$JIT.DLL + B$JIT.PCD - 1;
      176     5445    2      DO I = B$JIT.DLL TO T3;
      177     5446    3           IF (B$UPT.SCTRL(I) & %SCDBRK) THEN DO;
      178     5447                     %SAC ( VPNO = I , AC = "%PGINMEM|%PGIOM|%PGWRITE");
      179     5450    3                S$CU$ -> B$U.FLG.DBRK = '1'B;
      180     5451    3                END;
      181     5452    2           END;
      182     5453        /* Temporarily give procedure pages write access...                */
      183     5454    1      T3 = B$JIT.PLL + B$JIT.PCP - 1;
      184     5455    2      DO I = B$JIT.PLL TO T3;
      185     5456    2           IF (B$UPT.SCTRL(I) & %SCUSER) THEN
      186     5457                     %SAC ( VPNO = I , AC = "%PGINMEM|%PGIOM|%PGWRITE");
      187     5460    2           END;
      188     5461    1      CALL HFC$ASSOCCLR(%USERWSQ,%ISEGLO,T3);
      189     5462
      190     5463        /* Mark the target node and its backward path as in memory. If any */
      191     5464        /* segment was previously in, do nothing. Otherwise read in its    */
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:8    
      192     5465        /* data and procedure.                                             */
      193     5466    1      NODES = 0;                           /* Counter for circularity test       */
      194     5467    2      DO WHILE(TARGETX >= 0);
      195     5468    2           B$NODE.FLGS.NOW_IN = %TRUE;
      196     5469
      197     5470        /* If nopath was specified, then only bring in the target node and */
      198     5471        /* restore any overlay on the backward path which was already in.  */
      199     5472    2           IF NOT B$NODE.FLGS.WAS_IN
      200     5473    2           THEN IF ((FLAGS & JD_NOPATH) AND (B$NODE.AFLGS & JD_NOPATH))
      201     5474    2                  OR NOT (FLAGS & JD_NOPATH)
      202     5475    3                THEN DO;
      203     5476    3                     T1 = B$NODE.DADDR;
      204     5477    3                     T2 = B$NODE.DSIZE;
      205     5478    3                     NX = B$TREEHDR.PRECSIZE;
      206     5479    3                     CALL JDU$READ_OVRLY (DATA_TYPE , TARGETX , T1 ,
      207     5480    3                       T2 , NX) ALTRET (SEGLD_ERR);
      208     5481    3                     T1 = B$NODE.PADDR;
      209     5482    3                     T2 = B$NODE.PSIZE;
      210     5483    3                     CALL JDU$READ_OVRLY (PROC_TYPE , TARGETX , T1 ,
      211     5484    3                       T2 , NX) ALTRET (SEGLD_ERR);
      212     5485    3                     END;
      213     5486    2           NODES = NODES + 1;
      214     5487    2           IF NODES > B$TREEHDR.NODES
      215     5488    3           THEN DO;
      216     5489    3                B$JIT.ERR=ECIRCTREE;
      217     5490    3                ALTRETURN;
      218     5491    3                END;
      219     5492
      220     5493        /* Follow the backward links to the root...                        */
      221     5494    2           TARGETX = B$NODE.BACK#;
      222     5495    2           TNODE$ = PINCRW(NODES$,TARGETX*SIZEW(B$NODE));
      223     5496    2           END;
      224     5497
      225     5498        /* Return procedure to read-only access.                           */
      226     5499    2      DO I = B$JIT.PLL TO T3;
      227     5500    2           IF (B$UPT.SCTRL(I) & %SCUSER) THEN
      228     5501                     %SAC ( VPNO = I , AC = "%PGINMEM|%PGIOM");
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:9    
      229     5504    2           END;
      230     5505    1      CALL HFC$ASSOCCLR(%USERWSQ,%ISEGLO,T3);
      231     5506
      232     5507        /* Return ENTRY$ for in the event the ENTER option was specified */
      233     5508    1      TNODE$ = TARGET$;                    /* Point to original target node      */
      234     5509    1      OVENT$ = B$NODE.ENTRY$;
      235     5510    1      ENTRY_ADDR = OVENT.ADDRESS;
      236     5511    1      RETURN;
      237     5512        /**/
      238     5513    1   SEGLD_ERR:
      239     5514    1      ALTRETURN;
      240     5515        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:10   
      241     5516        /*************************************************************
      242     5517         *                                                           *
      243     5518         *                      CHK_INMEM                            *
      244     5519         *                                                           *
      245     5520         *************************************************************/
      246     5521
      247     5522        /* This procedure checks to see if we're segld-ing back to a node  */
      248     5523        /* on the current backward path (i.e. now marked 'was in'). If we  */
      249     5524        /* are, then the node and all of its forward path is marked as     */
      250     5525        /* being currently in memory.                                      */
      251     5526
      252     5527    1   CHK_INMEM: PROC(IN_FLG) ALTRET;
      253     5528    2   DCL IN_FLG BIT(1) ALIGNED;
      254     5529
      255     5530    2      IF B$NODE.FLGS.WAS_IN
      256     5531    3      THEN DO;
      257     5532    3           IN_FLG = %TRUE;
      258     5533    3           NODES = 0;                      /* Counter to check for circular tree */
      259     5534    3   MARK_IN:
      260     5535    3           B$NODE.FLGS.NOW_IN = %TRUE;
      261     5536    3           NODES = NODES + 1;
      262     5537
      263     5538    3           IF NODES > B$TREEHDR.NODES
      264     5539    4           THEN DO;
      265     5540    4                B$JIT.ERR=ECIRCTREE;
      266     5541    4                ALTRETURN;
      267     5542    4                END;
      268     5543        /*E*    ERROR:  JDS-E$CIRCTREE-A
      269     5544               MESSAGE: The TREE table is circularly linked.               */
      270     5545
      271     5546    3           NX = B$NODE.FORWARD#;
      272     5547    3           IF NX < 0 THEN RETURN;          /* Hit end of path                    */
      273     5548    3   LINK_CHK:
      274     5549    3           IF NX > B$TREEHDR.NODES
      275     5550    4           THEN DO;
      276     5551    4                B$JIT.ERR=EBADTREE;
      277     5552    4                ALTRETURN;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:11   
      278     5553    4                END;
      279     5554        /*E*   ERROR: JDS-E$BADTREE-4
      280     5555               MESSAGE: The TREE table is improperly linked.               */
      281     5556
      282     5557    3           TNODE$ = PINCRW(NODES$,NX*SIZEW(B$NODE));
      283     5558        /* If the forward link gets us to a node which also is in, go back */
      284     5559        /* and mark it in, otherwise check the overlay links at this level */
      285     5560    3           IF B$NODE.FLGS.WAS_IN THEN GOTO MARK_IN;
      286     5561    3           NX = B$NODE.OVERLAY#;
      287     5562    3           IF NX > 0 THEN GOTO LINK_CHK;
      288     5563
      289     5564        /* If no overlays were in memory, then this is as far as the       */
      290     5565        /* brought-in segments went. Reset the target node to the last     */
      291     5566        /* one we know was in and return.                                  */
      292     5567    3           TARGETX = B$NODE.BACK#;
      293     5568    3           TNODE$ = PINCRW(NODES$,TARGETX*SIZEW(B$NODE));
      294     5569    3           END;
      295     5570    2      IN_FLG = %FALSE;
      296     5571    2      RETURN;
      297     5572    2   END CHK_INMEM;
      298     5573        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:12   
      299     5574    1   MSET: PROC ALTRET;
      300     5575
      301     5576    2      T1 = B$NODE.DADDR;
      302     5577    2      T2 = B$NODE.DSIZE;
      303     5578    2      CALL JDU$MEMSET (DATA_TYPE , T1 , T2 , FLAGS) ALTRET (ALT);
      304     5579    2      T1 = B$NODE.PADDR;
      305     5580    2      T2 = B$NODE.PSIZE;
      306     5581    2      CALL JDU$MEMSET (PROC_TYPE , T1 , T2 , FLAGS) ALTRET (ALT);
      307     5582    2      RETURN;
      308     5583    2   ALT: ALTRETURN;
      309     5584    2   END MSET;
      310     5585    1   END JDS$OVRLY;

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:13   
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   JS$CP6V_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JD_SUBS_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JDS$OVRLY.

   Procedure JDS$OVRLY requires 433 words for executable code.
   Procedure JDS$OVRLY requires 28 words of local(AUTO) storage.

    No errors detected in file JDS$OVRLY.:E05TSI    .

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:14   

 Object Unit name= JDS$OVRLY                                  File name= JDS$OVRLY.:E05TOU
 UTS= JUL 29 '97 23:21:50.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  JDS$OVRLY
    1   Proc  even  none   433    661  JDS$OVRLY
    2  RoData even  none     7      7  JDS$OVRLY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  JDS$OVRLY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 HFC$ASSOCCLR
 yes     yes           Std       5 JDU$READ_OVRLY
 yes     yes           Std       4 JDU$MEMSET
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:15   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    MM_BYP$                          r    B$JIT$                           r    B$PS0$
r    B$ROSEG$                         r    B$UPT$                                S$CU$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:16   


        1        1        /*M* JDS$OVRLY:  Unshared program overlaying routines.             */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8
        9        9        JDS$OVRLY: PROC(NODE,ENTRY_ADDR,FLAGS) ALTRET;

      9  1 000000   000000 700200 xent  JDS$OVRLY    TSX0  ! X66_AUTO_3
         1 000001   000034 000003                    ZERO    28,3

       10       10
       11       11    1   DCL NODE UBIN;
       12       12    1   DCL ENTRY_ADDR UBIN;
       13       13
       14       14        /* Include FILES:    */
       15       15        %INCLUDE B$OBJECT_C;
       16     3445        %INCLUDE B$ROSEG;
       17     3508        %INCLUDE JD_SUBS_C;
       18     3520        %INCLUDE J_ERRORS_C;
       19     3607        %INCLUDE J_ERRSET_C;
       20     3627        %INCLUDE B_MACROS_C;
       21     3738        %INCLUDE M$JIT_C;
       22     4258        %INCLUDE MM_DATA_R;
       23     4778        %INCLUDE B$MAP;
       24     4877        %INCLUDE JS$CP6V_C;
       25     4940        %INCLUDE B$USER;
       26     5156
       27     5157        %FPT$OLAY_V;
       28     5160    1   DCL FLAGS BIT(36) ALIGNED;
       29     5161
       30     5162    1   DCL IS_IN BIT(1);
       31     5163    1   DCL NX SBIN;
       32     5164    1   DCL T1 SBIN;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:17   
       33     5165    1   DCL T2 SBIN;
       34     5166    1   DCL T3 SBIN;
       35     5167    1   DCL TARGETX SBIN;
       36     5168    1   DCL NODES SBIN;
       37     5169    1   DCL I SBIN;
       38     5170    1   DCL TNODE$ PTR;
       39     5171    1   DCL NODES$ PTR;
       40     5172    1   DCL TREEHDR$ PTR;
       41     5173    1   DCL TARGET$ PTR;
       42     5174    1   DCL OVENT$ EPTR;
       43     5175    1   DCL 1 OVENT REDEF OVENT$,
       44     5176    1         2 ADDRESS UBIN(18) UNAL,
       45     5177    1         2 * UBIN(18) UNAL;
       46     5178        /**/
       47     5179    1   DCL B$JIT$ PTR SYMREF READONLY;
       48     5180    1   DCL B$PS0$ PTR SYMREF READONLY;
       49     5181    1   DCL B$PS1$ PTR SYMREF READONLY;
       50     5182    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       51     5183    1   DCL B$UPT$ PTR SYMREF READONLY;
       52     5184    1   DCL S$CU$ PTR SYMREF;
       53     5185        %INCLUDE HF_DATA_R;
       54     5228        /**/
       55     5229    1   DCL JDU$MEMSET ENTRY(4) ALTRET;
       56     5230    1   DCL JDU$READ_OVRLY ENTRY(5) ALTRET;
       57     5231    1   DCL HFC$ASSOCCLR ENTRY (3);
       58     5232
       59     5233        %INCLUDE UD_SEV_C;
       60     5247        %SUB FCG#='1204'O;
       61     5248        %SUB MID#='23'O;
       62     5249        %ERRCODE (NAME=ECIRCTREE,COD#=%E$CIRCTREE);
       63     5257        %ERRCODE (NAME=EBADTREE,COD#=%E$BADTREE);
       64     5265        %ERRCODE (NAME=ENOOVRLY,COD#=%E$NOOVRLY);
       65     5273
       66     5274        %TEXTC;
       67     5279        %B$TREE_TABLE(HDR_NAME=B$TREEHDR,
       68     5280                      NODE_NAME=B$NODE);
       69     5338        /**/
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:18   
       70     5339        %SUB   B$ROSEG = B$ROSEG$->B$ROSEG;
       71     5340        %SUB   B$TREEHDR = TREEHDR$->B$TREEHDR;
       72     5341        %SUB   B$NODE = TNODE$->B$NODE;
       73     5342        %SUB   B$JIT = B$JIT$->B$JIT;
       74     5343        %SUB   B$UPT=B$UPT$->B$MAP;
       75     5344        /**/
       76     5345        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:19   
       77     5346        /*F*   NAME:   JDS$OVRLY                                          */
       78     5347        /*F*   PURPOSE: To bring in a requested overlay and (except in the */
       79     5348        /*,*           case of a COBOL 'CALL') its entire backward path.   */
       80     5349
       81     5350        /* Establish pointers to the tree header and to the list of nodes. */
       82     5351    1      TREEHDR$ = B$ROSEG.TREE$;

   5351  1 000002   000000 470400 xsym               LDP0    B$ROSEG$
         1 000003   000001 236100                    LDQ     1,,PR0
         1 000004   200020 756100                    STQ     TREEHDR$,,AUTO

       83     5352    1      NODES$ = PINCRW(TREEHDR$,SIZEW(B$TREEHDR));

   5352  1 000005   000003 036003                    ADLQ    3,DU
         1 000006   200017 756100                    STQ     NODES$,,AUTO

       84     5353    1      TNODE$ = NODES$;

   5353  1 000007   200016 756100                    STQ     TNODE$,,AUTO

       85     5354
       86     5355        /* If this is a cancel issued on an overlay, handle that separately. */
       87     5356    1      IF (FLAGS & JD_CANCEL)

   5356  1 000010   200005 471500                    LDP1    @FLAGS,,AUTO
         1 000011   100000 236100                    LDQ     0,,PR1
         1 000012   001000 376003                    ANQ     512,DU
         1 000013   000101 600000 1                  TZE     s:5391

       88     5357    2      THEN DO;

       89     5358        /* Search the TREE for a match on overlay name */
       90     5359    3           DO I = 0 TO B$TREEHDR.NODES - 1;

   5359  1 000014   200015 450100                    STZ     I,,AUTO
         1 000015   000041 710000 1                  TRA     s:5363+1

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:20   
       91     5360    3                IF B$NODE.NAME$->TEXTC.TEXT = B$PS0$->TEXTC.TEXT

   5360  1 000016   200016 470500                    LDP0    TNODE$,,AUTO
         1 000017   000000 471500                    LDP1    0,,PR0
         1 000020   000100 101500                    MRL     fill='000'O
         1 000021   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000022   200026 000002                    ADSC9   @IN_FLG+1,,AUTO          cn=0,n=2
         1 000023   200026 220100                    LDX0    @IN_FLG+1,,AUTO
         1 000024   000000 473400 xsym               LDP3    B$PS0$
         1 000025   000100 101500                    MRL     fill='000'O
         1 000026   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000027   200027 000002                    ADSC9   @IN_FLG+2,,AUTO          cn=0,n=2
         1 000030   200027 221100                    LDX1    @IN_FLG+2,,AUTO
         1 000031   040140 106540                    CMPC    fill='040'O
         1 000032   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000033   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         1 000034   000052 600000 1                  TZE     GOT_NODE

       92     5361    3                THEN GOTO GOT_NODE;
       93     5362    3                TNODE$ = PINCRW(TNODE$,SIZEW(B$NODE));

   5362  1 000035   200016 236100                    LDQ     TNODE$,,AUTO
         1 000036   000006 036003                    ADLQ    6,DU
         1 000037   200016 756100                    STQ     TNODE$,,AUTO

       94     5363    3                END;

   5363  1 000040   200015 054100                    AOS     I,,AUTO
         1 000041   200020 470500                    LDP0    TREEHDR$,,AUTO
         1 000042   000000 236100                    LDQ     0,,PR0
         1 000043   000022 772000                    QRL     18
         1 000044   200015 116100                    CMPQ    I,,AUTO
         1 000045   000016 605400 1                  TPNZ    s:5360

       95     5364    2           B$JIT.ERR=ENOOVRLY;

   5364  1 000046   000002 236000 0                  LDQ     ENOOVRLY
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:21   
         1 000047   000000 471400 xsym               LDP1    B$JIT$
         1 000050   100012 756100                    STQ     10,,PR1

       96     5365    2   CANCEL_ERR:
       97     5366    2           ALTRETURN;

   5366  1 000051   000000 702200 xent  CANCEL_ERR   TSX2  ! X66_AALT

       98     5367
       99     5368    2   GOT_NODE:
      100     5369        /* Pass back node # for delta  */
      101     5370    2           NODE = I;

   5370  1 000052   200015 235100       GOT_NODE     LDA     I,,AUTO
         1 000053   200003 471500                    LDP1    @NODE,,AUTO
         1 000054   100000 755100                    STA     0,,PR1

      102     5371
      103     5372        /* If the overlay is currently not in memory, just return.         */
      104     5373    2           IF NOT B$NODE.FLGS.NOW_IN THEN RETURN;

   5373  1 000055   000001 234100                    SZN     1,,PR0
         1 000056   000060 604000 1                  TMI     s:5376

   5373  1 000057   000000 702200 xent               TSX2  ! X66_ARET

      105     5374
      106     5375        /* Update aflgs to show how this overlay is being used.            */
      107     5376    2           B$NODE.AFLGS = B$NODE.AFLGS | FLAGS;

   5376  1 000060   200005 474500                    LDP4    @FLAGS,,AUTO
         1 000061   000001 236100                    LDQ     1,,PR0
         1 000062   000011 736000                    QLS     9
         1 000063   777000 376003                    ANQ     -512,DU
         1 000064   400000 276100                    ORQ     0,,PR4
         1 000065   000011 772000                    QRL     9
         1 000066   000001 552120                    STBQ    1,'20'O,PR0
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:22   

      108     5377
      109     5378        /* Mark the node as no longer in memory, and free its memory.      */
      110     5379    2           B$NODE.FLGS.NOW_IN = %FALSE;

   5379  1 000067   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000070   000001 356100                    ANSQ    1,,PR0

      111     5380    2           B$NODE.FLGS.WAS_IN = %TRUE;

   5380  1 000071   200000 236003                    LDQ     65536,DU
         1 000072   000001 256100                    ORSQ    1,,PR0

      112     5381    2           CALL MSET ALTRET (CANCEL_ERR);

   5381  1 000073   000606 701000 1                  TSX1    MSET
         1 000074   000051 702000 1                  TSX2    CANCEL_ERR

      113     5382    2           B$NODE.AFLGS = '0'B;

   5382  1 000075   200016 470500                    LDP0    TNODE$,,AUTO
         1 000076   000000 236003                    LDQ     0,DU
         1 000077   000001 552120                    STBQ    1,'20'O,PR0

      114     5383    2           RETURN;

   5383  1 000100   000000 702200 xent               TSX2  ! X66_ARET

      115     5384    2           END;                            /*   END IF CANCEL                    */
      116     5385
      117     5386        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:23   
      118     5387
      119     5388        /* Plow through the tree, marking all segments which are currently */
      120     5389        /* in memory 'was in memory', and look for the segment we want to  */
      121     5390        /* bring in next.                                                  */
      122     5391    1      TARGET$ = ADDR(NIL);

   5391  1 000101   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000102   200021 756100                    STQ     TARGET$,,AUTO

      123     5392    2      DO I = 0 TO B$TREEHDR.NODES - 1;

   5392  1 000103   200015 450100                    STZ     I,,AUTO
         1 000104   000147 710000 1                  TRA     s:5408+1

      124     5393    2           IF B$NODE.FLGS.NOW_IN

   5393  1 000105   200016 470500                    LDP0    TNODE$,,AUTO
         1 000106   000001 234100                    SZN     1,,PR0
         1 000107   000115 605000 1                  TPL     s:5399

      125     5394    3           THEN DO;

      126     5395    3                B$NODE.FLGS.NOW_IN = %FALSE;

   5395  1 000110   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000111   000001 356100                    ANSQ    1,,PR0

      127     5396    3                B$NODE.FLGS.WAS_IN = %TRUE;

   5396  1 000112   200000 236003                    LDQ     65536,DU
         1 000113   000001 256100                    ORSQ    1,,PR0

      128     5397    3                END;

   5397  1 000114   000121 710000 1                  TRA     s:5402

      129     5398    3           ELSE DO;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:24   

      130     5399    3                B$NODE.FLGS.WAS_IN = %FALSE;

   5399  1 000115   000000 236000 2                  LDQ     0
         1 000116   000001 356100                    ANSQ    1,,PR0

      131     5400    3                B$NODE.AFLGS = '0'B;

   5400  1 000117   000000 236003                    LDQ     0,DU
         1 000120   000001 552120                    STBQ    1,'20'O,PR0

      132     5401    3                END;

      133     5402    2           IF B$NODE.NAME$->TEXTC.TEXT = B$PS0$->TEXTC.TEXT

   5402  1 000121   000000 471500                    LDP1    0,,PR0
         1 000122   000100 101500                    MRL     fill='000'O
         1 000123   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000124   200026 000002                    ADSC9   @IN_FLG+1,,AUTO          cn=0,n=2
         1 000125   200026 220100                    LDX0    @IN_FLG+1,,AUTO
         1 000126   000000 473400 xsym               LDP3    B$PS0$
         1 000127   000100 101500                    MRL     fill='000'O
         1 000130   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         1 000131   200027 000002                    ADSC9   @IN_FLG+2,,AUTO          cn=0,n=2
         1 000132   200027 221100                    LDX1    @IN_FLG+2,,AUTO
         1 000133   040140 106540                    CMPC    fill='040'O
         1 000134   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000135   300000 200011                    ADSC9   0,,PR3                   cn=1,n=*X1
         1 000136   000143 601000 1                  TNZ     s:5407

      134     5403    3           THEN DO;

      135     5404    3                TARGET$ = TNODE$;          /* Remember ptr to target node        */

   5404  1 000137   200016 236100                    LDQ     TNODE$,,AUTO
         1 000140   200021 756100                    STQ     TARGET$,,AUTO

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:25   
      136     5405    3                TARGETX = I;               /* And remember its node number       */

   5405  1 000141   200015 235100                    LDA     I,,AUTO
         1 000142   200013 755100                    STA     TARGETX,,AUTO

      137     5406    3                END;

      138     5407    2           TNODE$ = PINCRW(TNODE$,SIZEW(B$NODE));

   5407  1 000143   200016 236100                    LDQ     TNODE$,,AUTO
         1 000144   000006 036003                    ADLQ    6,DU
         1 000145   200016 756100                    STQ     TNODE$,,AUTO

      139     5408    2           END;

   5408  1 000146   200015 054100                    AOS     I,,AUTO
         1 000147   200020 470500                    LDP0    TREEHDR$,,AUTO
         1 000150   000000 236100                    LDQ     0,,PR0
         1 000151   000022 772000                    QRL     18
         1 000152   200015 116100                    CMPQ    I,,AUTO
         1 000153   000105 605400 1                  TPNZ    s:5393

      140     5409
      141     5410        /* Return an error if the named segment isn't in the tree          */
      142     5411    1      IF TARGET$ = ADDR(NIL)

   5411  1 000154   200021 236100                    LDQ     TARGET$,,AUTO
         1 000155   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000156   000163 601000 1                  TNZ     s:5422

      143     5412    2      THEN DO;

      144     5413    2           B$JIT.ERR=ENOOVRLY;

   5413  1 000157   000002 236000 0                  LDQ     ENOOVRLY
         1 000160   000000 471400 xsym               LDP1    B$JIT$
         1 000161   100012 756100                    STQ     10,,PR1
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:26   

      145     5414    2           ALTRETURN;

   5414  1 000162   000000 702200 xent               TSX2  ! X66_AALT

      146     5415    2           END;
      147     5416        /*E*   ERROR:  JDS-E$NOOVRLY-4
      148     5417               MESSAGE: The named overlay does not exist in the TREE.      */
      149     5418
      150     5419        /* Set node to the node number of the requested overlay now, in    */
      151     5420        /* case CHK_INMEM decides to change targetx based upon what's      */
      152     5421        /* already in memory.                                              */
      153     5422    1      NODE = TARGETX;

   5422  1 000163   200013 235100                    LDA     TARGETX,,AUTO
         1 000164   200003 471500                    LDP1    @NODE,,AUTO
         1 000165   100000 755100                    STA     0,,PR1

      154     5423    1      TNODE$ = TARGET$;

   5423  1 000166   200016 756100                    STQ     TNODE$,,AUTO

      155     5424
      156     5425        /* Update aflgs to show how this overlay is being used.            */
      157     5426    1      B$NODE.AFLGS = B$NODE.AFLGS | FLAGS;

   5426  1 000167   200005 473500                    LDP3    @FLAGS,,AUTO
         1 000170   200016 474500                    LDP4    TNODE$,,AUTO
         1 000171   400001 236100                    LDQ     1,,PR4
         1 000172   000011 736000                    QLS     9
         1 000173   777000 376003                    ANQ     -512,DU
         1 000174   300000 276100                    ORQ     0,,PR3
         1 000175   000011 772000                    QRL     9
         1 000176   400001 552120                    STBQ    1,'20'O,PR4

      158     5427
      159     5428        /* By the time we return from CHK_INMEM, TNODE$ will point to the  */
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:27   
      160     5429        /* target node -- the highest one in the tree that we want to get. */
      161     5430        /* See if the target node is marked 'was in'. If so, we're doing   */
      162     5431        /* the 'no-op' case where we segld-ed backwards onto our current   */
      163     5432        /* path. Just re-mark the segments as currently in memory.         */
      164     5433    1      CALL CHK_INMEM(IS_IN) ALTRET(SEGLD_ERR);

   5433  1 000177   200006 635500                    EPPR5   IS_IN,,AUTO
         1 000200   200025 455500                    STP5    OVENT$+3,,AUTO
         1 000201   000507 701000 1                  TSX1    CHK_INMEM
         1 000202   000506 702000 1                  TSX2    SEGLD_ERR

      165     5434
      166     5435        /* Allocate memory: make sure that pages are present from data     */
      167     5436        /* and procedure lower limits through the top of data and procedure*/
      168     5437        /* for this overlay.                                               */
      169     5438    1      IF NOT IS_IN

   5438  1 000203   200006 234100                    SZN     IS_IN,,AUTO
         1 000204   000207 604000 1                  TMI     s:5444

      170     5439    2      THEN DO;                             /* We need to allocate memory         */

      171     5440    2           CALL MSET ALTRET (SEGLD_ERR);

   5440  1 000205   000606 701000 1                  TSX1    MSET
         1 000206   000506 702000 1                  TSX2    SEGLD_ERR

      172     5441    2           END;

      173     5442
      174     5443        /* If there are DBRK pages, open them and set B$U.DBRK             */
      175     5444    1      T3 = B$JIT.DLL + B$JIT.PCD - 1;

   5444  1 000207   000000 470400 xsym               LDP0    B$JIT$
         1 000210   000201 236100                    LDQ     129,,PR0
         1 000211   777777 376007                    ANQ     -1,DL
         1 000212   200026 756100                    STQ     @IN_FLG+1,,AUTO
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:28   
         1 000213   000177 236100                    LDQ     127,,PR0
         1 000214   000022 772000                    QRL     18
         1 000215   200026 036100                    ADLQ    @IN_FLG+1,,AUTO
         1 000216   000001 136007                    SBLQ    1,DL
         1 000217   200012 756100                    STQ     T3,,AUTO

      176     5445    2      DO I = B$JIT.DLL TO T3;

   5445  1 000220   000177 236100                    LDQ     127,,PR0
         1 000221   000022 772000                    QRL     18
         1 000222   200015 756100                    STQ     I,,AUTO
         1 000223   000243 710000 1                  TRA     s:5452+1

      177     5446    3           IF (B$UPT.SCTRL(I) & %SCDBRK) THEN DO;

   5446  1 000224   000000 470400 xsym               LDP0    B$UPT$
         1 000225   200015 720100                    LXL0    I,,AUTO
         1 000226   000000 236110                    LDQ     0,X0,PR0
         1 000227   000022 736000                    QLS     18
         1 000230   777400 376003                    ANQ     -256,DU
         1 000231   400000 376003                    ANQ     -131072,DU
         1 000232   000242 600000 1                  TZE     s:5452

      178     5447                     %SAC ( VPNO = I , AC = "%PGINMEM|%PGIOM|%PGWRITE");

   5448  1 000233   000000 236110                    LDQ     0,X0,PR0
         1 000234   000001 376000 2                  ANQ     1
         1 000235   000064 276007                    ORQ     52,DL
         1 000236   000000 756110                    STQ     0,X0,PR0

      179     5450    3                S$CU$ -> B$U.FLG.DBRK = '1'B;

   5450  1 000237   000000 471400 xsym               LDP1    S$CU$
         1 000240   010000 236007                    LDQ     4096,DL
         1 000241   100000 256100                    ORSQ    0,,PR1

      180     5451    3                END;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:29   

      181     5452    2           END;

   5452  1 000242   200015 054100                    AOS     I,,AUTO
         1 000243   200015 236100                    LDQ     I,,AUTO
         1 000244   200012 116100                    CMPQ    T3,,AUTO
         1 000245   000224 604400 1                  TMOZ    s:5446

      182     5453        /* Temporarily give procedure pages write access...                */
      183     5454    1      T3 = B$JIT.PLL + B$JIT.PCP - 1;

   5454  1 000246   000000 470400 xsym               LDP0    B$JIT$
         1 000247   000201 236100                    LDQ     129,,PR0
         1 000250   000022 772000                    QRL     18
         1 000251   200026 756100                    STQ     @IN_FLG+1,,AUTO
         1 000252   000176 236100                    LDQ     126,,PR0
         1 000253   000022 772000                    QRL     18
         1 000254   200026 036100                    ADLQ    @IN_FLG+1,,AUTO
         1 000255   000001 136007                    SBLQ    1,DL
         1 000256   200012 756100                    STQ     T3,,AUTO

      184     5455    2      DO I = B$JIT.PLL TO T3;

   5455  1 000257   000176 236100                    LDQ     126,,PR0
         1 000260   000022 772000                    QRL     18
         1 000261   200015 756100                    STQ     I,,AUTO
         1 000262   000277 710000 1                  TRA     s:5460+1

      185     5456    2           IF (B$UPT.SCTRL(I) & %SCUSER) THEN

   5456  1 000263   000000 470400 xsym               LDP0    B$UPT$
         1 000264   200015 720100                    LXL0    I,,AUTO
         1 000265   000000 236110                    LDQ     0,X0,PR0
         1 000266   000022 736000                    QLS     18
         1 000267   777400 376003                    ANQ     -256,DU
         1 000270   000400 376003                    ANQ     256,DU
         1 000271   000276 600000 1                  TZE     s:5460
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:30   

      186     5457                     %SAC ( VPNO = I , AC = "%PGINMEM|%PGIOM|%PGWRITE");

   5458  1 000272   000000 236110                    LDQ     0,X0,PR0
         1 000273   000001 376000 2                  ANQ     1
         1 000274   000064 276007                    ORQ     52,DL
         1 000275   000000 756110                    STQ     0,X0,PR0

      187     5460    2           END;

   5460  1 000276   200015 054100                    AOS     I,,AUTO
         1 000277   200015 236100                    LDQ     I,,AUTO
         1 000300   200012 116100                    CMPQ    T3,,AUTO
         1 000301   000263 604400 1                  TMOZ    s:5456

      188     5461    1      CALL HFC$ASSOCCLR(%USERWSQ,%ISEGLO,T3);

   5461  1 000302   200012 630500                    EPPR0   T3,,AUTO
         1 000303   200030 450500                    STP0    @IN_FLG+3,,AUTO
         1 000304   000004 237000 2                  LDAQ    4
         1 000305   200026 757100                    STAQ    @IN_FLG+1,,AUTO
         1 000306   200026 630500                    EPPR0   @IN_FLG+1,,AUTO
         1 000307   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000310   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000311   000000 011000                    NOP     0

      189     5462
      190     5463        /* Mark the target node and its backward path as in memory. If any */
      191     5464        /* segment was previously in, do nothing. Otherwise read in its    */
      192     5465        /* data and procedure.                                             */
      193     5466    1      NODES = 0;                           /* Counter for circularity test       */

   5466  1 000312   200014 450100                    STZ     NODES,,AUTO

      194     5467    2      DO WHILE(TARGETX >= 0);

   5467  1 000313   200013 235100                    LDA     TARGETX,,AUTO
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:31   
         1 000314   000440 604000 1                  TMI     s:5499

      195     5468    2           B$NODE.FLGS.NOW_IN = %TRUE;

   5468  1 000315   200016 470500                    LDP0    TNODE$,,AUTO
         1 000316   400000 236003                    LDQ     -131072,DU
         1 000317   000001 256100                    ORSQ    1,,PR0

      196     5469
      197     5470        /* If nopath was specified, then only bring in the target node and */
      198     5471        /* restore any overlay on the backward path which was already in.  */
      199     5472    2           IF NOT B$NODE.FLGS.WAS_IN

   5472  1 000320   000001 236100                    LDQ     1,,PR0
         1 000321   200000 316003                    CANQ    65536,DU
         1 000322   000414 601000 1                  TNZ     s:5486

      200     5473    2           THEN IF ((FLAGS & JD_NOPATH) AND (B$NODE.AFLGS & JD_NOPATH))

   5473  1 000323   200005 471500                    LDP1    @FLAGS,,AUTO
         1 000324   100000 236100                    LDQ     0,,PR1
         1 000325   004000 376003                    ANQ     2048,DU
         1 000326   000334 600000 1                  TZE     s:5473+9
         1 000327   000001 236100                    LDQ     1,,PR0
         1 000330   000011 736000                    QLS     9
         1 000331   777000 376003                    ANQ     -512,DU
         1 000332   004000 376003                    ANQ     2048,DU
         1 000333   000337 601000 1                  TNZ     s:5476
         1 000334   100000 236100                    LDQ     0,,PR1
         1 000335   004000 376003                    ANQ     2048,DU
         1 000336   000414 601000 1                  TNZ     s:5486

      201     5474    2                  OR NOT (FLAGS & JD_NOPATH)
      202     5475    3                THEN DO;

      203     5476    3                     T1 = B$NODE.DADDR;

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:32   
   5476  1 000337   000004 236100                    LDQ     4,,PR0
         1 000340   000022 772000                    QRL     18
         1 000341   200010 756100                    STQ     T1,,AUTO

      204     5477    3                     T2 = B$NODE.DSIZE;

   5477  1 000342   000004 236100                    LDQ     4,,PR0
         1 000343   777777 376007                    ANQ     -1,DL
         1 000344   200011 756100                    STQ     T2,,AUTO

      205     5478    3                     NX = B$TREEHDR.PRECSIZE;

   5478  1 000345   200020 473500                    LDP3    TREEHDR$,,AUTO
         1 000346   300002 236100                    LDQ     2,,PR3
         1 000347   000022 772000                    QRL     18
         1 000350   200007 756100                    STQ     NX,,AUTO

      206     5479    3                     CALL JDU$READ_OVRLY (DATA_TYPE , TARGETX , T1 ,

   5479  1 000351   200007 634500                    EPPR4   NX,,AUTO
         1 000352   200032 454500                    STP4    @IN_FLG+5,,AUTO
         1 000353   200011 635500                    EPPR5   T2,,AUTO
         1 000354   200031 455500                    STP5    @IN_FLG+4,,AUTO
         1 000355   200010 636500                    EPPR6   T1,,AUTO
         1 000356   200030 456500                    STP6    @IN_FLG+3,,AUTO
         1 000357   200013 637500                    EPPR7   TARGETX,,AUTO
         1 000360   200027 457500                    STP7    @IN_FLG+2,,AUTO
         1 000361   000003 236000 2                  LDQ     3
         1 000362   200026 756100                    STQ     @IN_FLG+1,,AUTO
         1 000363   200026 630500                    EPPR0   @IN_FLG+1,,AUTO
         1 000364   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000365   000000 701000 xent               TSX1    JDU$READ_OVRLY
         1 000366   000506 702000 1                  TSX2    SEGLD_ERR

      207     5480    3                       T2 , NX) ALTRET (SEGLD_ERR);
      208     5481    3                     T1 = B$NODE.PADDR;

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:33   
   5481  1 000367   200016 470500                    LDP0    TNODE$,,AUTO
         1 000370   000003 236100                    LDQ     3,,PR0
         1 000371   000022 772000                    QRL     18
         1 000372   200010 756100                    STQ     T1,,AUTO

      209     5482    3                     T2 = B$NODE.PSIZE;

   5482  1 000373   000003 236100                    LDQ     3,,PR0
         1 000374   777777 376007                    ANQ     -1,DL
         1 000375   200011 756100                    STQ     T2,,AUTO

      210     5483    3                     CALL JDU$READ_OVRLY (PROC_TYPE , TARGETX , T1 ,

   5483  1 000376   200007 631500                    EPPR1   NX,,AUTO
         1 000377   200032 451500                    STP1    @IN_FLG+5,,AUTO
         1 000400   200011 633500                    EPPR3   T2,,AUTO
         1 000401   200031 453500                    STP3    @IN_FLG+4,,AUTO
         1 000402   200010 634500                    EPPR4   T1,,AUTO
         1 000403   200030 454500                    STP4    @IN_FLG+3,,AUTO
         1 000404   200013 635500                    EPPR5   TARGETX,,AUTO
         1 000405   200027 455500                    STP5    @IN_FLG+2,,AUTO
         1 000406   000006 236000 2                  LDQ     6
         1 000407   200026 756100                    STQ     @IN_FLG+1,,AUTO
         1 000410   200026 630500                    EPPR0   @IN_FLG+1,,AUTO
         1 000411   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 000412   000000 701000 xent               TSX1    JDU$READ_OVRLY
         1 000413   000506 702000 1                  TSX2    SEGLD_ERR

      211     5484    3                       T2 , NX) ALTRET (SEGLD_ERR);
      212     5485    3                     END;

      213     5486    2           NODES = NODES + 1;

   5486  1 000414   200014 054100                    AOS     NODES,,AUTO

      214     5487    2           IF NODES > B$TREEHDR.NODES

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:34   
   5487  1 000415   200020 470500                    LDP0    TREEHDR$,,AUTO
         1 000416   000000 236100                    LDQ     0,,PR0
         1 000417   000022 772000                    QRL     18
         1 000420   200014 116100                    CMPQ    NODES,,AUTO
         1 000421   000426 605000 1                  TPL     s:5494

      215     5488    3           THEN DO;

      216     5489    3                B$JIT.ERR=ECIRCTREE;

   5489  1 000422   000000 236000 0                  LDQ     ECIRCTREE
         1 000423   000000 471400 xsym               LDP1    B$JIT$
         1 000424   100012 756100                    STQ     10,,PR1

      217     5490    3                ALTRETURN;

   5490  1 000425   000000 702200 xent               TSX2  ! X66_AALT

      218     5491    3                END;
      219     5492
      220     5493        /* Follow the backward links to the root...                        */
      221     5494    2           TARGETX = B$NODE.BACK#;

   5494  1 000426   200016 471500                    LDP1    TNODE$,,AUTO
         1 000427   100001 236100                    LDQ     1,,PR1
         1 000430   000022 736000                    QLS     18
         1 000431   000022 732000                    QRS     18
         1 000432   200013 756100                    STQ     TARGETX,,AUTO

      222     5495    2           TNODE$ = PINCRW(NODES$,TARGETX*SIZEW(B$NODE));

   5495  1 000433   000006 402003                    MPY     6,DU
         1 000434   200017 036100                    ADLQ    NODES$,,AUTO
         1 000435   200016 756100                    STQ     TNODE$,,AUTO

      223     5496    2           END;

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:35   
   5496  1 000436   200013 235100                    LDA     TARGETX,,AUTO
         1 000437   000315 605000 1                  TPL     s:5468

      224     5497
      225     5498        /* Return procedure to read-only access.                           */
      226     5499    2      DO I = B$JIT.PLL TO T3;

   5499  1 000440   000000 470400 xsym               LDP0    B$JIT$
         1 000441   000176 236100                    LDQ     126,,PR0
         1 000442   000022 772000                    QRL     18
         1 000443   200015 756100                    STQ     I,,AUTO
         1 000444   000461 710000 1                  TRA     s:5504+1

      227     5500    2           IF (B$UPT.SCTRL(I) & %SCUSER) THEN

   5500  1 000445   000000 470400 xsym               LDP0    B$UPT$
         1 000446   200015 720100                    LXL0    I,,AUTO
         1 000447   000000 236110                    LDQ     0,X0,PR0
         1 000450   000022 736000                    QLS     18
         1 000451   777400 376003                    ANQ     -256,DU
         1 000452   000400 376003                    ANQ     256,DU
         1 000453   000460 600000 1                  TZE     s:5504

      228     5501                     %SAC ( VPNO = I , AC = "%PGINMEM|%PGIOM");

   5502  1 000454   000000 236110                    LDQ     0,X0,PR0
         1 000455   000001 376000 2                  ANQ     1
         1 000456   000044 276007                    ORQ     36,DL
         1 000457   000000 756110                    STQ     0,X0,PR0

      229     5504    2           END;

   5504  1 000460   200015 054100                    AOS     I,,AUTO
         1 000461   200015 236100                    LDQ     I,,AUTO
         1 000462   200012 116100                    CMPQ    T3,,AUTO
         1 000463   000445 604400 1                  TMOZ    s:5500

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:36   
      230     5505    1      CALL HFC$ASSOCCLR(%USERWSQ,%ISEGLO,T3);

   5505  1 000464   200012 630500                    EPPR0   T3,,AUTO
         1 000465   200030 450500                    STP0    @IN_FLG+3,,AUTO
         1 000466   000004 237000 2                  LDAQ    4
         1 000467   200026 757100                    STAQ    @IN_FLG+1,,AUTO
         1 000470   200026 630500                    EPPR0   @IN_FLG+1,,AUTO
         1 000471   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000472   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000473   000000 011000                    NOP     0

      231     5506
      232     5507        /* Return ENTRY$ for in the event the ENTER option was specified */
      233     5508    1      TNODE$ = TARGET$;                    /* Point to original target node      */

   5508  1 000474   200021 236100                    LDQ     TARGET$,,AUTO
         1 000475   200016 756100                    STQ     TNODE$,,AUTO

      234     5509    1      OVENT$ = B$NODE.ENTRY$;

   5509  1 000476   200016 470500                    LDP0    TNODE$,,AUTO
         1 000477   000005 236100                    LDQ     5,,PR0
         1 000500   200022 756100                    STQ     OVENT$,,AUTO

      235     5510    1      ENTRY_ADDR = OVENT.ADDRESS;

   5510  1 000501   200022 235100                    LDA     OVENT$,,AUTO
         1 000502   000022 771000                    ARL     18
         1 000503   200004 471500                    LDP1    @ENTRY_ADDR,,AUTO
         1 000504   100000 755100                    STA     0,,PR1

      236     5511    1      RETURN;

   5511  1 000505   000000 702200 xent               TSX2  ! X66_ARET

      237     5512        /**/
      238     5513    1   SEGLD_ERR:
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:37   
      239     5514    1      ALTRETURN;

   5514  1 000506   000000 702200 xent  SEGLD_ERR    TSX2  ! X66_AALT

      240     5515        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:38   
      241     5516        /*************************************************************
      242     5517         *                                                           *
      243     5518         *                      CHK_INMEM                            *
      244     5519         *                                                           *
      245     5520         *************************************************************/
      246     5521
      247     5522        /* This procedure checks to see if we're segld-ing back to a node  */
      248     5523        /* on the current backward path (i.e. now marked 'was in'). If we  */
      249     5524        /* are, then the node and all of its forward path is marked as     */
      250     5525        /* being currently in memory.                                      */
      251     5526
      252     5527    1   CHK_INMEM: PROC(IN_FLG) ALTRET;

   5527  1 000507   200024 741300       CHK_INMEM    STX1  ! OVENT$+2,,AUTO

      253     5528    2   DCL IN_FLG BIT(1) ALIGNED;
      254     5529
      255     5530    2      IF B$NODE.FLGS.WAS_IN

   5530  1 000510   200016 470500                    LDP0    TNODE$,,AUTO
         1 000511   000001 236100                    LDQ     1,,PR0
         1 000512   200000 316003                    CANQ    65536,DU
         1 000513   000602 600000 1                  TZE     s:5570

      256     5531    3      THEN DO;

      257     5532    3           IN_FLG = %TRUE;

   5532  1 000514   400000 236003                    LDQ     -131072,DU
         1 000515   200025 471500                    LDP1    @IN_FLG,,AUTO
         1 000516   100000 756100                    STQ     0,,PR1

      258     5533    3           NODES = 0;                      /* Counter to check for circular tree */

   5533  1 000517   200014 450100                    STZ     NODES,,AUTO

      259     5534    3   MARK_IN:
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:39   
      260     5535    3           B$NODE.FLGS.NOW_IN = %TRUE;

   5535  1 000520   200016 470500       MARK_IN      LDP0    TNODE$,,AUTO
         1 000521   400000 236003                    LDQ     -131072,DU
         1 000522   000001 256100                    ORSQ    1,,PR0

      261     5536    3           NODES = NODES + 1;

   5536  1 000523   200014 054100                    AOS     NODES,,AUTO

      262     5537
      263     5538    3           IF NODES > B$TREEHDR.NODES

   5538  1 000524   200020 471500                    LDP1    TREEHDR$,,AUTO
         1 000525   100000 236100                    LDQ     0,,PR1
         1 000526   000022 772000                    QRL     18
         1 000527   200014 116100                    CMPQ    NODES,,AUTO
         1 000530   000536 605000 1                  TPL     s:5546

      264     5539    4           THEN DO;

      265     5540    4                B$JIT.ERR=ECIRCTREE;

   5540  1 000531   000000 236000 0                  LDQ     ECIRCTREE
         1 000532   000000 473400 xsym               LDP3    B$JIT$
         1 000533   300012 756100                    STQ     10,,PR3

      266     5541    4                ALTRETURN;

   5541  1 000534   200024 221300                    LDX1  ! OVENT$+2,,AUTO
         1 000535   000000 702211                    TSX2  ! 0,X1

      267     5542    4                END;
      268     5543        /*E*    ERROR:  JDS-E$CIRCTREE-A
      269     5544               MESSAGE: The TREE table is circularly linked.               */
      270     5545
      271     5546    3           NX = B$NODE.FORWARD#;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:40   

   5546  1 000536   000002 236100                    LDQ     2,,PR0
         1 000537   000022 732000                    QRS     18
         1 000540   200007 756100                    STQ     NX,,AUTO

      272     5547    3           IF NX < 0 THEN RETURN;          /* Hit end of path                    */

   5547  1 000541   000544 605000 1                  TPL     LINK_CHK

   5547  1 000542   200024 221300                    LDX1  ! OVENT$+2,,AUTO
         1 000543   000001 702211                    TSX2  ! 1,X1

      273     5548    3   LINK_CHK:
      274     5549    3           IF NX > B$TREEHDR.NODES

   5549  1 000544   200020 470500       LINK_CHK     LDP0    TREEHDR$,,AUTO
         1 000545   000000 236100                    LDQ     0,,PR0
         1 000546   000022 772000                    QRL     18
         1 000547   200007 116100                    CMPQ    NX,,AUTO
         1 000550   000556 605000 1                  TPL     s:5557

      275     5550    4           THEN DO;

      276     5551    4                B$JIT.ERR=EBADTREE;

   5551  1 000551   000001 236000 0                  LDQ     EBADTREE
         1 000552   000000 471400 xsym               LDP1    B$JIT$
         1 000553   100012 756100                    STQ     10,,PR1

      277     5552    4                ALTRETURN;

   5552  1 000554   200024 221300                    LDX1  ! OVENT$+2,,AUTO
         1 000555   000000 702211                    TSX2  ! 0,X1

      278     5553    4                END;
      279     5554        /*E*   ERROR: JDS-E$BADTREE-4
      280     5555               MESSAGE: The TREE table is improperly linked.               */
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:41   
      281     5556
      282     5557    3           TNODE$ = PINCRW(NODES$,NX*SIZEW(B$NODE));

   5557  1 000556   200007 236100                    LDQ     NX,,AUTO
         1 000557   000006 402003                    MPY     6,DU
         1 000560   200017 036100                    ADLQ    NODES$,,AUTO
         1 000561   200016 756100                    STQ     TNODE$,,AUTO

      283     5558        /* If the forward link gets us to a node which also is in, go back */
      284     5559        /* and mark it in, otherwise check the overlay links at this level */
      285     5560    3           IF B$NODE.FLGS.WAS_IN THEN GOTO MARK_IN;

   5560  1 000562   200016 471500                    LDP1    TNODE$,,AUTO
         1 000563   100001 236100                    LDQ     1,,PR1
         1 000564   200000 316003                    CANQ    65536,DU
         1 000565   000520 601000 1                  TNZ     MARK_IN

      286     5561    3           NX = B$NODE.OVERLAY#;

   5561  1 000566   100002 236100                    LDQ     2,,PR1
         1 000567   000022 736000                    QLS     18
         1 000570   000022 732000                    QRS     18
         1 000571   200007 756100                    STQ     NX,,AUTO

      287     5562    3           IF NX > 0 THEN GOTO LINK_CHK;

   5562  1 000572   000544 605400 1                  TPNZ    LINK_CHK

      288     5563
      289     5564        /* If no overlays were in memory, then this is as far as the       */
      290     5565        /* brought-in segments went. Reset the target node to the last     */
      291     5566        /* one we know was in and return.                                  */
      292     5567    3           TARGETX = B$NODE.BACK#;

   5567  1 000573   100001 236100                    LDQ     1,,PR1
         1 000574   000022 736000                    QLS     18
         1 000575   000022 732000                    QRS     18
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:42   
         1 000576   200013 756100                    STQ     TARGETX,,AUTO

      293     5568    3           TNODE$ = PINCRW(NODES$,TARGETX*SIZEW(B$NODE));

   5568  1 000577   000006 402003                    MPY     6,DU
         1 000600   200017 036100                    ADLQ    NODES$,,AUTO
         1 000601   200016 756100                    STQ     TNODE$,,AUTO

      294     5569    3           END;

      295     5570    2      IN_FLG = %FALSE;

   5570  1 000602   200025 470500                    LDP0    @IN_FLG,,AUTO
         1 000603   000000 450100                    STZ     0,,PR0

      296     5571    2      RETURN;

   5571  1 000604   200024 221300                    LDX1  ! OVENT$+2,,AUTO
         1 000605   000001 702211                    TSX2  ! 1,X1

      297     5572    2   END CHK_INMEM;
      298     5573        %EJECT;
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:43   
      299     5574    1   MSET: PROC ALTRET;

   5574  1 000606   200024 741300       MSET         STX1  ! OVENT$+2,,AUTO

      300     5575
      301     5576    2      T1 = B$NODE.DADDR;

   5576  1 000607   200016 470500                    LDP0    TNODE$,,AUTO
         1 000610   000004 236100                    LDQ     4,,PR0
         1 000611   000022 772000                    QRL     18
         1 000612   200010 756100                    STQ     T1,,AUTO

      302     5577    2      T2 = B$NODE.DSIZE;

   5577  1 000613   000004 236100                    LDQ     4,,PR0
         1 000614   777777 376007                    ANQ     -1,DL
         1 000615   200011 756100                    STQ     T2,,AUTO

      303     5578    2      CALL JDU$MEMSET (DATA_TYPE , T1 , T2 , FLAGS) ALTRET (ALT);

   5578  1 000616   200005 236100                    LDQ     @FLAGS,,AUTO
         1 000617   200031 756100                    STQ     @IN_FLG+4,,AUTO
         1 000620   200011 631500                    EPPR1   T2,,AUTO
         1 000621   200030 451500                    STP1    @IN_FLG+3,,AUTO
         1 000622   200010 633500                    EPPR3   T1,,AUTO
         1 000623   200027 453500                    STP3    @IN_FLG+2,,AUTO
         1 000624   000003 236000 2                  LDQ     3
         1 000625   200026 756100                    STQ     @IN_FLG+1,,AUTO
         1 000626   200026 630500                    EPPR0   @IN_FLG+1,,AUTO
         1 000627   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000630   000000 701000 xent               TSX1    JDU$MEMSET
         1 000631   000657 702000 1                  TSX2    ALT

      304     5579    2      T1 = B$NODE.PADDR;

   5579  1 000632   200016 470500                    LDP0    TNODE$,,AUTO
         1 000633   000003 236100                    LDQ     3,,PR0
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:44   
         1 000634   000022 772000                    QRL     18
         1 000635   200010 756100                    STQ     T1,,AUTO

      305     5580    2      T2 = B$NODE.PSIZE;

   5580  1 000636   000003 236100                    LDQ     3,,PR0
         1 000637   777777 376007                    ANQ     -1,DL
         1 000640   200011 756100                    STQ     T2,,AUTO

      306     5581    2      CALL JDU$MEMSET (PROC_TYPE , T1 , T2 , FLAGS) ALTRET (ALT);

   5581  1 000641   200005 236100                    LDQ     @FLAGS,,AUTO
         1 000642   200031 756100                    STQ     @IN_FLG+4,,AUTO
         1 000643   200011 631500                    EPPR1   T2,,AUTO
         1 000644   200030 451500                    STP1    @IN_FLG+3,,AUTO
         1 000645   200010 633500                    EPPR3   T1,,AUTO
         1 000646   200027 453500                    STP3    @IN_FLG+2,,AUTO
         1 000647   000006 236000 2                  LDQ     6
         1 000650   200026 756100                    STQ     @IN_FLG+1,,AUTO
         1 000651   200026 630500                    EPPR0   @IN_FLG+1,,AUTO
         1 000652   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000653   000000 701000 xent               TSX1    JDU$MEMSET
         1 000654   000657 702000 1                  TSX2    ALT

      307     5582    2      RETURN;

   5582  1 000655   200024 221300                    LDX1  ! OVENT$+2,,AUTO
         1 000656   000001 702211                    TSX2  ! 1,X1

      308     5583    2   ALT: ALTRETURN;

   5583  1 000657   200024 221300       ALT          LDX1  ! OVENT$+2,,AUTO
         1 000660   000000 702211                    TSX2  ! 0,X1

ECIRCTREE
 Sect OctLoc
   0     000   120423 404564                                                    P...
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:45   

EBADTREE
 Sect OctLoc
   0     001   120423 404554                                                    P...

ENOOVRLY
 Sect OctLoc
   0     002   120423 404544                                                    P...

(unnamed)
 Sect OctLoc
   2     000   577777 777777   777777 777700   000000 000100   000002 006000    ...........@....
   2     004   000012 006000   000002 006000   000003 006000                    ............
      309     5584    2   END MSET;
      310     5585    1   END JDS$OVRLY;

PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:46   
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   JS$CP6V_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   JD_SUBS_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JDS$OVRLY.
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:47   

 **** Variables and constants ****

  ****  Section 000 RoData JDS$OVRLY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/b STRC        r     1 EBADTREE                   0-0-0/b STRC        r     1 ECIRCTREE
     2-0-0/b STRC        r     1 ENOOVRLY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ENTRY_ADDR                5-0-0/w PTR         r     1 @FLAGS
    25-0-0/w PTR         r     1 @IN_FLG                    3-0-0/w PTR         r     1 @NODE
    *0-0-0/w UBIN        r     1 ENTRY_ADDR                *0-0-0/w BIT         r     1 FLAGS
    15-0-0/w SBIN        r     1 I                         *0-0-0/w BIT         r     1 IN_FLG
     6-0-0/b BIT         r     1 IS_IN                     *0-0-0/w UBIN        r     1 NODE
    14-0-0/w SBIN        r     1 NODES                     17-0-0/w PTR         r     1 NODES$
     7-0-0/w SBIN        r     1 NX                        22-0-0/w STRC        r     1 OVENT
    22-0-0/w EPTR        r     1 OVENT$                    10-0-0/w SBIN        r     1 T1
    11-0-0/w SBIN        r     1 T2                        12-0-0/w SBIN        r     1 T3
    21-0-0/w PTR         r     1 TARGET$                   13-0-0/w SBIN        r     1 TARGETX
    16-0-0/w PTR         r     1 TNODE$                    20-0-0/w PTR         r     1 TREEHDR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$PS0$
     0-0-0/w PTR         r     1 B$ROSEG$                   0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:48   

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/w STRC(216)   r     1 B$NODE                     0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/w STRC(108)   r     1 B$TREEHDR                  0-0-0/d STRC(576)   r     1 B$U
     0-0-0/c ASTR(9)     r     1 TEXTC


   Procedure JDS$OVRLY requires 433 words for executable code.
   Procedure JDS$OVRLY requires 28 words of local(AUTO) storage.

    No errors detected in file JDS$OVRLY.:E05TSI    .
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:49   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:50   
          MINI XREF LISTING

ALT IN PROCEDURE MSET
      5583**LABEL    5578--CALLALT  5581--CALLALT
B$DO.ECCINFO
      5091**DCL      5092--REDEF
B$JIT.DLL
      4152**DCL      5444>>ASSIGN   5445>>DOINDEX
B$JIT.ERR
      4065**DCL      5364<<ASSIGN   5413<<ASSIGN   5489<<ASSIGN   5540<<ASSIGN   5551<<ASSIGN
B$JIT.ERR.MID
      4066**DCL      4066--REDEF
B$JIT.JRESPEAK
      4156**DCL      4157--REDEF
B$JIT.PCD
      4153**DCL      5444>>ASSIGN
B$JIT.PCP
      4153**DCL      5454>>ASSIGN
B$JIT.PLL
      4152**DCL      5454>>ASSIGN   5455>>DOINDEX  5499>>DOINDEX
B$JIT$
      5179**DCL      4060--IMP-PTR  5364>>ASSIGN   5413>>ASSIGN   5444>>ASSIGN   5444>>ASSIGN   5445>>DOINDEX
      5454>>ASSIGN   5454>>ASSIGN   5455>>DOINDEX  5489>>ASSIGN   5499>>DOINDEX  5540>>ASSIGN   5551>>ASSIGN
B$MAP.CTRL
      4824**DCL      5448<<ASSIGN   5458<<ASSIGN   5502<<ASSIGN
B$MAP.SCTRL
      4821**DCL      4822--REDEF    5446>>IF       5456>>IF       5500>>IF
B$NODE
      5297**DCL      5362--ASSIGN   5407--ASSIGN   5495--ASSIGN   5557--ASSIGN   5568--ASSIGN
B$NODE.AFLGS
      5309**DCL      5376<<ASSIGN   5376>>ASSIGN   5382<<ASSIGN   5400<<ASSIGN   5426<<ASSIGN   5426>>ASSIGN
      5473>>IF
B$NODE.BACK#
      5321**DCL      5494>>ASSIGN   5567>>ASSIGN
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:51   
B$NODE.DADDR
      5331**DCL      5476>>ASSIGN   5576>>ASSIGN
B$NODE.DSIZE
      5333**DCL      5477>>ASSIGN   5577>>ASSIGN
B$NODE.ENTRY$
      5335**DCL      5509>>ASSIGN
B$NODE.FLGS.NOW_IN
      5303**DCL      5373>>IF       5379<<ASSIGN   5393>>IF       5395<<ASSIGN   5468<<ASSIGN   5535<<ASSIGN
B$NODE.FLGS.WAS_IN
      5305**DCL      5380<<ASSIGN   5396<<ASSIGN   5399<<ASSIGN   5472>>IF       5530>>IF       5560>>IF
B$NODE.FORWARD#
      5323**DCL      5546>>ASSIGN
B$NODE.NAME$
      5299**DCL      5360>>IF       5360>>IF       5402>>IF       5402>>IF
B$NODE.OVERLAY#
      5325**DCL      5561>>ASSIGN
B$NODE.PADDR
      5327**DCL      5481>>ASSIGN   5579>>ASSIGN
B$NODE.PSIZE
      5329**DCL      5482>>ASSIGN   5580>>ASSIGN
B$PS0$
      5180**DCL      5360>>IF       5360>>IF       5402>>IF       5402>>IF
B$ROSEG.TREE$
      3457**DCL      5351>>ASSIGN
B$ROSEG$
      5182**DCL      5351>>ASSIGN
B$TREEHDR
      5281**DCL      5352--ASSIGN
B$TREEHDR.NODES
      5283**DCL      5359>>DOINDEX  5392>>DOINDEX  5487>>IF       5538>>IF       5549>>IF
B$TREEHDR.PRECSIZE
      5291**DCL      5478>>ASSIGN
B$U.FLG.DBRK
      4988**DCL      5450<<ASSIGN
B$U.MISC
      5070**DCL      5071--REDEF
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:52   
B$UPT$
      5183**DCL      5446>>IF       5448>>ASSIGN   5456>>IF       5458>>ASSIGN   5500>>IF       5502>>ASSIGN
B$USER.MISC
      5146**DCL      5147--REDEF
CANCEL_ERR
      5366**LABEL    5381--CALLALT
CHK_INMEM
      5527**PROC     5433--CALL
EBADTREE
      5258**DCL      5551>>ASSIGN
ECIRCTREE
      5250**DCL      5489>>ASSIGN   5540>>ASSIGN
ENOOVRLY
      5266**DCL      5364>>ASSIGN   5413>>ASSIGN
ENTRY_ADDR
        12**DCL         9--PROC     5510<<ASSIGN
FLAGS
      5160**DCL         9--PROC     5356>>IF       5376>>ASSIGN   5426>>ASSIGN   5473>>IF       5473>>IF
      5578<>CALL     5581<>CALL
GOT_NODE
      5370**LABEL    5361--GOTO
HFC$ASSOCCLR
      5231**DCL-ENT  5461--CALL     5505--CALL
I
      5169**DCL      5359<<DOINDEX  5370>>ASSIGN   5392<<DOINDEX  5405>>ASSIGN   5445<<DOINDEX  5446>>IF
      5448>>ASSIGN   5455<<DOINDEX  5456>>IF       5458>>ASSIGN   5499<<DOINDEX  5500>>IF       5502>>ASSIGN
IN_FLG IN PROCEDURE CHK_INMEM
      5528**DCL      5527--PROC     5532<<ASSIGN   5570<<ASSIGN
IS_IN
      5162**DCL      5433<>CALL     5438>>IF
JDU$MEMSET
      5229**DCL-ENT  5578--CALL     5581--CALL
JDU$READ_OVRLY
      5230**DCL-ENT  5479--CALL     5483--CALL
LINK_CHK IN PROCEDURE CHK_INMEM
      5549**LABEL    5562--GOTO
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:53   
MARK_IN IN PROCEDURE CHK_INMEM
      5535**LABEL    5560--GOTO
MM$DESC.BOUND
      4729**DCL      4730--REDEF
MM$DESC.FLGS
      4730**DCL      4730--REDEF
MM$PPUT.USER#
      4718**DCL      4718--REDEF
MM_BYP$
      4649**DCL      4649--IMP-PTR
MSET
      5574**PROC     5381--CALL     5440--CALL
NODE
        11**DCL         9--PROC     5370<<ASSIGN   5422<<ASSIGN
NODES
      5168**DCL      5466<<ASSIGN   5486<<ASSIGN   5486>>ASSIGN   5487>>IF       5533<<ASSIGN   5536<<ASSIGN
      5536>>ASSIGN   5538>>IF
NODES$
      5171**DCL      5352<<ASSIGN   5353>>ASSIGN   5495>>ASSIGN   5557>>ASSIGN   5568>>ASSIGN
NX
      5163**DCL      5478<<ASSIGN   5479<>CALL     5483<>CALL     5546<<ASSIGN   5547>>IF       5549>>IF
      5557>>ASSIGN   5561<<ASSIGN   5562>>IF
OVENT.ADDRESS
      5176**DCL      5510>>ASSIGN
OVENT$
      5174**DCL      5175--REDEF    5509<<ASSIGN
S$CU$
      5184**DCL      5450>>ASSIGN
SEGLD_ERR
      5514**LABEL    5433--CALLALT  5440--CALLALT  5479--CALLALT  5483--CALLALT
T1
      5164**DCL      5476<<ASSIGN   5479<>CALL     5481<<ASSIGN   5483<>CALL     5576<<ASSIGN   5578<>CALL
      5579<<ASSIGN   5581<>CALL
T2
      5165**DCL      5477<<ASSIGN   5479<>CALL     5482<<ASSIGN   5483<>CALL     5577<<ASSIGN   5578<>CALL
      5580<<ASSIGN   5581<>CALL
PL6.E3A0      #001=JDS$OVRLY File=JDS$OVRLY.:E05TSI                              TUE 07/29/97 23:21 Page:54   
T3
      5166**DCL      5444<<ASSIGN   5445>>DOINDEX  5454<<ASSIGN   5455>>DOINDEX  5461<>CALL     5499>>DOINDEX
      5505<>CALL
TARGET$
      5173**DCL      5391<<ASSIGN   5404<<ASSIGN   5411>>IF       5423>>ASSIGN   5508>>ASSIGN
TARGETX
      5167**DCL      5405<<ASSIGN   5422>>ASSIGN   5467>>DOWHILE  5479<>CALL     5483<>CALL     5494<<ASSIGN
      5495>>ASSIGN   5567<<ASSIGN   5568>>ASSIGN
TEXTC.SIZ
      5276**DCL      5277--IMP-SIZ  5360>>IF       5360>>IF       5402>>IF       5402>>IF
TEXTC.TEXT
      5277**DCL      5360>>IF       5360>>IF       5402>>IF       5402>>IF
TNODE$
      5170**DCL      5353<<ASSIGN   5360>>IF       5360>>IF       5362<<ASSIGN   5362>>ASSIGN   5362>>ASSIGN
      5373>>IF       5376>>ASSIGN   5376>>ASSIGN   5379>>ASSIGN   5380>>ASSIGN   5382>>ASSIGN   5393>>IF
      5395>>ASSIGN   5396>>ASSIGN   5399>>ASSIGN   5400>>ASSIGN   5402>>IF       5402>>IF       5404>>ASSIGN
      5407<<ASSIGN   5407>>ASSIGN   5407>>ASSIGN   5423<<ASSIGN   5426>>ASSIGN   5426>>ASSIGN   5468>>ASSIGN
      5472>>IF       5473>>IF       5476>>ASSIGN   5477>>ASSIGN   5481>>ASSIGN   5482>>ASSIGN   5494>>ASSIGN
      5495<<ASSIGN   5495>>ASSIGN   5508<<ASSIGN   5509>>ASSIGN   5530>>IF       5535>>ASSIGN   5546>>ASSIGN
      5557<<ASSIGN   5557>>ASSIGN   5560>>IF       5561>>ASSIGN   5567>>ASSIGN   5568<<ASSIGN   5568>>ASSIGN
      5576>>ASSIGN   5577>>ASSIGN   5579>>ASSIGN   5580>>ASSIGN
TREEHDR$
      5172**DCL      5351<<ASSIGN   5352>>ASSIGN   5352>>ASSIGN   5359>>DOINDEX  5392>>DOINDEX  5478>>ASSIGN
      5487>>IF       5538>>IF       5549>>IF
