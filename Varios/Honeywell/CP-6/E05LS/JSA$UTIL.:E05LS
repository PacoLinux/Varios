VERSION E05

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:1    
        1        1        /*M*   JSA$UTIL  Subroutines for associating/disassociating sp shared processors */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8        JSA$CLIB: PROC(PNUM) ALTRET;
        9        9    1   DCL PNUM SBIN;
       10       10                                                /*  AUTO                              */
       11       11    1   DCL SPNUM SBIN;
       12       12    1   DCL CHECK_IT SBIN;
       13       13    1   DCL I SBIN;
       14       14    1   DCL TEMP1 SBIN;
       15       15    1   DCL TPTR$ PTR;
       16       16    1   DCL PPNO UBIN;
       17       17    1   DCL SIZE UBIN;
       18       18    1   DCL SIZELEFT UBIN;
       19       19    1   DCL B_PAGE CHAR(SIZE) BASED;
       20       20    1   DCL ERR UBIN;
       21       21        /**/
       22       22    1   DCL JSA$GETTCB ENTRY(1) ALTRET;
       23       23    1   DCL JSA$MAP_DATASEGS ENTRY(2) ALTRET;
       24       24    1   DCL MME$CVM ENTRY(4) ALTRET;
       25       25        /**/
       26       26        %INCLUDE J_ERRORS_C;
       27      113        %INCLUDE M_ERRORS_C;
       28      177        %INCLUDE B$ROSEG;
       29      240        %INCLUDE B$OBJECT_C;
       30     3670        %INCLUDE HF_LOCK_C;
       31     3684        %INCLUDE MM_DATA_R;
       32     4204        %INCLUDE B$P;
       33     4288        %INCLUDE B$MAP;
       34     4387    1   DCL B$USERLS$ PTR SYMREF READONLY;
       35     4388    1   DCL B$SDS0$ PTR SYMREF READONLY;
       36     4389    1   DCL B$JIT$ PTR SYMREF READONLY;
       37     4390    1   DCL B$ROSEG$ PTR SYMREF READONLY;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:2    
       38     4391    1   DCL B$PPUT$ PTR SYMREF READONLY;
       39     4392    1   DCL B$UPT$ PTR SYMREF READONLY;
       40     4393    1   DCL B$SBUF2$ PTR SYMREF READONLY;
       41     4394    1   DCL B$USERIS$ PTR SYMREF READONLY;
       42     4395    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
       43     4396        %INCLUDE B_UHJMAC_C;
       44     4725        %B_USDS (FPTN=B$SDS,STCLASS=BASED);
       45     4777        %INCLUDE B$JIT_C;
       46     5091        %B$JIT0;
       47     5180        %U$JIT1;
       48     5254        %M$JIT2;
       49     5264        %F$JIT3X;
       50     5267        %S$JIT4X;
       51     5270        %J$JIT5;
       52     5358        %A$JIT6X;
       53     5361        %INCLUDE B$USER;
       54     5577        %B$USERREFS;
       55     5581        %INCLUDE B_ULSMAC_C;
       56     6690        %B_USRULS (FPTN=B$ULNK,STCLASS=BASED);
       57     6889        %B$TREE_TABLE;
       58     6947        /**/
       59     6948                                                /* TO SET JIT.ERR                     */
       60     6949        %INCLUDE UD_SEV_C;
       61     6963        %INCLUDE J_ERRSET_C;
       62     6983        %SUB FCG#='1223'O;
       63     6984        %SUB MID#='01'O;
       64     6985        %ERRCODE (NAME=ENOVIRTUAL,COD#=%E$NOVIRTUAL);
       65     6993        %ERRCODE (NAME=ENOPHYSICAL,COD#=%E$NOPHYSICAL);
       66     7001        %ERRCODE (NAME=EDEBUGSP,COD#=%E$DEBUGSP);
       67     7009        %ERRCODE (NAME=EDEBUGXONLY,COD#=%E$DEBUGXONLY);
       68     7017        %ERRCODE (NAME=EBADSSP,COD#=%E$BADSSP);
       69     7025        %ERRCODE (NAME=EBADDBNAME,COD#=%E$BADDBUGR);
       70     7033        %ERRCODE (NAME=EDLIBREQ,COD#=%E$DLIBREQ);
       71     7041        %ERRCODE (NAME=EMEMLIMIT,COD#=%E$MEMLIMIT);
       72     7049             %ERRCODE (NAME=ELIBSIZE,COD#=%E$LIBSIZE);
       73     7057                                                /*  SUBS                              */
       74     7058        %SUB B$SDS=B$SDS0$->B$SDS;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:3    
       75     7059        %SUB B$JIT=B$JIT$->B$JIT;
       76     7060        %SUB B_P=B$P$->B$P;
       77     7061        %SUB B$ROSEG=B$ROSEG$->B$ROSEG;
       78     7062        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
       79     7063        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:4    
       80     7064    1      IF B$JIT.EUP=%ISEGHI
       81     7065    2      THEN DO;
       82     7066    2           B$JIT.ERR=ENOVIRTUAL;
       83     7067        /*E*   ERROR:  JSA-E$NOVIRTUAL-E
       84     7068               MESSAGE: Virtual memory not available for shared library.
       85     7069               MESSAGE1: Virtual pages 224 - 255 must be unallocated
       86     7070                         to associate a shared library.
       87     7071        */
       88     7072    2           ALTRETURN;
       89     7073    2           END;
       90     7074        /* CHECK TO SEE IF THE SIZE OF THE LIBRARY IS CORRECT */
       91     7075
       92     7076    1      IF B_P.DSZ(PNUM) > B$ROSEG.TREE$->B$TREE_HEADER.MAX_LIB_DATA
       93     7077    2      THEN DO;
       94     7078    2           B$JIT.ERR = ELIBSIZE;
       95     7079    2           ALTRETURN;
       96     7080    2           END;
       97     7081        /*E* ERROR: JSA-E$LIBSIZE-E
       98     7082             MESSAGE: Library data size larger than reserved size in run unit.
       99     7083             MESSAGE1: The run unit was linked with a library with less data
      100     7084                        than the one currently be associated.
      101     7085         */
      102     7086    1      S$CU$->B$U.ASP=PNUM;
      103     7087    1      TPTR$ = PINCRW(B$USERIS$,(B_P.DVA(PNUM)-%ISEGLO)*1024);
      104     7088    1      SIZELEFT = B_P.DSZ(PNUM) * 4;        /* NUMBER OF BYTES TO TRANSFER        */
      105     7089
      106     7090    1      PPNO = ADDR(B_P.DSDATA (PNUM)) -> B$PROCDS.DSPH(0);
      107     7091
      108     7092    2      DO UNTIL (SIZELEFT = 0);
      109     7093    2           IF SIZELEFT > 4096
      110     7094    2           THEN SIZE = 4096;
      111     7095    2           ELSE SIZE = SIZELEFT;
      112     7096    2           CALL MME$CVM(%USERWSQ,%SBUF2PG,PPNO,ERR) ;
      113     7097    2           TPTR$->B_PAGE = B$SBUF2$->B_PAGE; /* MOVE DATA                        */
      114     7098    2           TPTR$ = PINCRW(TPTR$,1024);
      115     7099    2           PPNO = MM$PPUT.PPNO(PPNO);
      116     7100    2           SIZELEFT = SIZELEFT - SIZE;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:5    
      117     7101    2           END;
      118     7102
      119     7103    1      CALL MME$CVM(%USERWSQ,%SBUF2PG,-1,ERR);
      120     7104    1      GOTO GOT_IT;
      121     7105        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:6    
      122     7106    1   JSA$ASL: ENTRY(PNUM) ALTRET;
      123     7107    1      CALL SSP_COMMON(%ASLWSQ)
      124     7108    2      WHENALTRETURN DO;
      125     7109    2           ALTRETURN;
      126     7110    2           END;
      127     7111
      128     7112    1      S$CU$->B$U.ASL=PNUM;
      129     7113    1      B$USERLS$->B$ULNK.ASLENT.ENTLOC=B_P.SA(PNUM);
      130     7114    1      B$USERLS$->B$ULNK.ASLENT.TYP=11;
      131     7115    1      GOTO GOT_IT;
      132     7116        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:7    
      133     7117    1   JSA$DBCHK: ENTRY(PNUM) ALTRET;
      134     7118    1      CHECK_IT=1;
      135     7119    1      GOTO JSA$DB1;
      136     7120                                                /*                                    */
      137     7121    1   JSA$ALIBDB: ENTRY(PNUM) ALTRET;
      138     7122    1      CHECK_IT=0;
      139     7123    1      GOTO ALIB_DB;
      140     7124
      141     7125    1   JSA$DB: ENTRY(PNUM) ALTRET;
      142     7126    1      CHECK_IT=0;
      143     7127    1   JSA$DB1: ;
      144     7128    1      IF NOT (B_P.FLGS(PNUM) & %P_DB)
      145     7129    2      THEN DO;
      146     7130    2           B$JIT.ERR=EBADDBNAME;
      147     7131        /*E*   ERROR:   JSA-E$BADDBUGR-E
      148     7132               MESSAGE: Invalid Debugger name.
      149     7133        */
      150     7134    2           ALTRETURN;
      151     7135    2           END;
      152     7136    1      IF (B$JIT.JUNK & %JJ_EXONLY#)
      153     7137    2      THEN DO;
      154     7138    2           IF B$JIT.PRIV.ACTIVE.FMSEC THEN
      155     7139    2                GOTO ALIB_DB;
      156     7140    2           B$JIT.ERR=EDEBUGXONLY;
      157     7141        /*E*   ERROR:   JSA-E$DEBUGXONLY-E
      158     7142               MESSAGE: You cannot debug an execute-only run unit.
      159     7143        */
      160     7144    2           ALTRETURN;
      161     7145    2           END;
      162     7146
      163     7147    1   ALIB_DB: ;
      164     7148    1      IF B_P.PPC(PNUM)=0
      165     7149    2      THEN DO;
      166     7150    2           B$JIT.ERR=EBADSSP;
      167     7151        /*E*   ERROR:   JSA-E$BADSSP-E
      168     7152               MESSAGE:  That Special Shared Processor is not initialized
      169     7153        */
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:8    
      170     7154    2           ALTRETURN;
      171     7155    2           END;
      172     7156    1      SPNUM=S$CU$->B$U.DB;
      173     7157    1      IF SPNUM ~= 0
      174     7158    1      THEN IF SPNUM ~= PNUM
      175     7159    2           THEN DO;
      176     7160    2                B$JIT.ERR = EDLIBREQ;
      177     7161    2                ALTRETURN;
      178     7162    2                END;
      179     7163    1           ELSE RETURN;
      180     7164        /*E*   ERROR: JSA-E$DLIBREQ-E
      181     7165               MESSAGE: Another debugger is already associated.
      182     7166        */
      183     7167
      184     7168
      185     7169    1      CALL SSP_COMMON(%DBWSQ)
      186     7170    2      WHENRETURN DO;
      187     7171    2           IF CHECK_IT = 1 THEN RETURN;
      188     7172    2           END;
      189     7173
      190     7174    2      WHENALTRETURN DO;
      191     7175    2           ALTRETURN;
      192     7176    2           END;
      193     7177
      194     7178    1      S$CU$->B$U.DB=PNUM;
      195     7179    1      B$SDS.DBENT.ENTLOC=B_P.SA(PNUM);
      196     7180    1      S$CU$->B$U.FLG = (S$CU$->B$U.FLG | (%U_DIC | %U_DELA));
      197     7181    1   GOT_IT: ;
      198     7182           %LOCK (G=J_PLOCK);
      199     7185    1      B_P.UC(PNUM)=B_P.UC(PNUM)+1;
      200     7186    1      B_P.FRQ(PNUM) = B_P.FRQ(PNUM) + 1;
      201     7187           %UNLOCK (G=J_PLOCK);
      202     7190    1      RETURN;
      203     7191        /*
      204     7192        */
      205     7193        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:9    
      206     7194    1   SSP_COMMON: PROC(PROCWSQ) ALTRET;
      207     7195    2   DCL PROCWSQ SBIN;
      208     7196
      209     7197        /* Make sure there will be enough memory for the TCB and initialized
      210     7198           data segments, if any.
      211     7199        */
      212     7200    2      SIZE = (B_P.TCBSZ(PNUM) + 1023) / 1024;
      213     7201
      214     7202    2      TPTR$ = ADDR(B_P.DSDATA(PNUM));
      215     7203    3      DO I=0 TO 5;
      216     7204    3           SIZE = SIZE + ( (TPTR$->B$PROCDS.DSSIZE(I) +1023) /1024);
      217     7205    3           END;
      218     7206
      219     7207    2      IF B$JIT.CURRCORE + SIZE > B$JIT.MAXCORE
      220     7208    2        AND NOT (B$JIT.PRIV.ACTIVE & %PR_MAXMEM#)
      221     7209    3      THEN DO;
      222     7210    3           B$JIT.ERR = EMEMLIMIT;
      223     7211    3           ALTRETURN;
      224     7212    3           END;
      225     7213
      226     7214    2      IF CHECK_IT = 1 THEN RETURN;
      227     7215
      228     7216        /* Get the TCB for the special shared processor.
      229     7217        */
      230     7218    2      CALL JSA$GETTCB(PNUM)
      231     7219    3      WHENALTRETURN DO;
      232     7220    3           ALTRETURN;
      233     7221    3           END;
      234     7222
      235     7223        /* Map in any initialized data segments.
      236     7224        */
      237     7225    2      CALL JSA$MAP_DATASEGS(PROCWSQ,PNUM)
      238     7226    3      WHENALTRETURN DO;
      239     7227    3           ALTRETURN;
      240     7228    3           END;
      241     7229
      242     7230        /* Set up the ISR in the appropriate Linkage Segment.
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:10   
      243     7231        */
      244     7232    2      TPTR$ = MM_LSPTRS$(PROCWSQ);
      245     7233    2      TPTR$->B$ULNK.IS.BOUND=(B_P.HVA(PNUM)-B_P.PVA(PNUM))*4096 -1;
      246     7234    2      TPTR$->B$ULNK.IS.BASE=B_P.PVA(PNUM) * 4096;
      247     7235    2      RETURN;
      248     7236    2   END SSP_COMMON;
      249     7237    1   END JSA$CLIB;
      250     7238        %EOD;

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:11   
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_UHJMAC_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSA$CLIB.

   Procedure JSA$CLIB requires 343 words for executable code.
   Procedure JSA$CLIB requires 20 words of local(AUTO) storage.

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:12   

 Object Unit name= JSA$CLIB                                   File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:42:04.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     11     13  JSA$CLIB
    1   Proc  even  none   343    527  JSA$CLIB
    2  RoData even  none    10     12  JSA$CLIB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  JSA$CLIB
     1    141          yes     yes      Std        1  JSA$ASL
     1    171          yes     yes      Std        1  JSA$DBCHK
     1    176          yes     yes      Std        1  JSA$ALIBDB
     1    202          yes     yes      Std        1  JSA$DB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 MME$CVM
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 HFC$LOCK
 yes     yes           Std       1 JSA$GETTCB
 yes     yes           Std       2 JSA$MAP_DATASEGS
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:13   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    MM_BYP$                          r    MM_LSPTRS$                            B$P$
r    B$USERLS$                        r    B$SDS0$                          r    B$JIT$
r    B$ROSEG$                         r    B$PPUT$                          r    B$SBUF2$
r    B$USERIS$                             J_PLOCK                               S$CU$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:14   


        1        1        /*M*   JSA$UTIL  Subroutines for associating/disassociating sp shared processors */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0    */
        8        8        JSA$CLIB: PROC(PNUM) ALTRET;

      8  1 000000   000000 700200 xent  JSA$CLIB     TSX0  ! X66_AUTO_1
         1 000001   000024 000001                    ZERO    20,1

        9        9    1   DCL PNUM SBIN;
       10       10                                                /*  AUTO                              */
       11       11    1   DCL SPNUM SBIN;
       12       12    1   DCL CHECK_IT SBIN;
       13       13    1   DCL I SBIN;
       14       14    1   DCL TEMP1 SBIN;
       15       15    1   DCL TPTR$ PTR;
       16       16    1   DCL PPNO UBIN;
       17       17    1   DCL SIZE UBIN;
       18       18    1   DCL SIZELEFT UBIN;
       19       19    1   DCL B_PAGE CHAR(SIZE) BASED;
       20       20    1   DCL ERR UBIN;
       21       21        /**/
       22       22    1   DCL JSA$GETTCB ENTRY(1) ALTRET;
       23       23    1   DCL JSA$MAP_DATASEGS ENTRY(2) ALTRET;
       24       24    1   DCL MME$CVM ENTRY(4) ALTRET;
       25       25        /**/
       26       26        %INCLUDE J_ERRORS_C;
       27      113        %INCLUDE M_ERRORS_C;
       28      177        %INCLUDE B$ROSEG;
       29      240        %INCLUDE B$OBJECT_C;
       30     3670        %INCLUDE HF_LOCK_C;
       31     3684        %INCLUDE MM_DATA_R;
       32     4204        %INCLUDE B$P;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:15   
       33     4288        %INCLUDE B$MAP;
       34     4387    1   DCL B$USERLS$ PTR SYMREF READONLY;
       35     4388    1   DCL B$SDS0$ PTR SYMREF READONLY;
       36     4389    1   DCL B$JIT$ PTR SYMREF READONLY;
       37     4390    1   DCL B$ROSEG$ PTR SYMREF READONLY;
       38     4391    1   DCL B$PPUT$ PTR SYMREF READONLY;
       39     4392    1   DCL B$UPT$ PTR SYMREF READONLY;
       40     4393    1   DCL B$SBUF2$ PTR SYMREF READONLY;
       41     4394    1   DCL B$USERIS$ PTR SYMREF READONLY;
       42     4395    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
       43     4396        %INCLUDE B_UHJMAC_C;
       44     4725        %B_USDS (FPTN=B$SDS,STCLASS=BASED);
       45     4777        %INCLUDE B$JIT_C;
       46     5091        %B$JIT0;
       47     5180        %U$JIT1;
       48     5254        %M$JIT2;
       49     5264        %F$JIT3X;
       50     5267        %S$JIT4X;
       51     5270        %J$JIT5;
       52     5358        %A$JIT6X;
       53     5361        %INCLUDE B$USER;
       54     5577        %B$USERREFS;
       55     5581        %INCLUDE B_ULSMAC_C;
       56     6690        %B_USRULS (FPTN=B$ULNK,STCLASS=BASED);
       57     6889        %B$TREE_TABLE;
       58     6947        /**/
       59     6948                                                /* TO SET JIT.ERR                     */
       60     6949        %INCLUDE UD_SEV_C;
       61     6963        %INCLUDE J_ERRSET_C;
       62     6983        %SUB FCG#='1223'O;
       63     6984        %SUB MID#='01'O;
       64     6985        %ERRCODE (NAME=ENOVIRTUAL,COD#=%E$NOVIRTUAL);
       65     6993        %ERRCODE (NAME=ENOPHYSICAL,COD#=%E$NOPHYSICAL);
       66     7001        %ERRCODE (NAME=EDEBUGSP,COD#=%E$DEBUGSP);
       67     7009        %ERRCODE (NAME=EDEBUGXONLY,COD#=%E$DEBUGXONLY);
       68     7017        %ERRCODE (NAME=EBADSSP,COD#=%E$BADSSP);
       69     7025        %ERRCODE (NAME=EBADDBNAME,COD#=%E$BADDBUGR);
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:16   
       70     7033        %ERRCODE (NAME=EDLIBREQ,COD#=%E$DLIBREQ);
       71     7041        %ERRCODE (NAME=EMEMLIMIT,COD#=%E$MEMLIMIT);
       72     7049             %ERRCODE (NAME=ELIBSIZE,COD#=%E$LIBSIZE);
       73     7057                                                /*  SUBS                              */
       74     7058        %SUB B$SDS=B$SDS0$->B$SDS;
       75     7059        %SUB B$JIT=B$JIT$->B$JIT;
       76     7060        %SUB B_P=B$P$->B$P;
       77     7061        %SUB B$ROSEG=B$ROSEG$->B$ROSEG;
       78     7062        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
       79     7063        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:17   
       80     7064    1      IF B$JIT.EUP=%ISEGHI

   7064  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000204 720100                    LXL0    132,,PR0
         1 000004   000477 100003                    CMPX0   319,DU
         1 000005   000011 601000 1                  TNZ     s:7076

       81     7065    2      THEN DO;

       82     7066    2           B$JIT.ERR=ENOVIRTUAL;

   7066  1 000006   000000 236000 0                  LDQ     ENOVIRTUAL
         1 000007   000012 756100                    STQ     10,,PR0

       83     7067        /*E*   ERROR:  JSA-E$NOVIRTUAL-E
       84     7068               MESSAGE: Virtual memory not available for shared library.
       85     7069               MESSAGE1: Virtual pages 224 - 255 must be unallocated
       86     7070                         to associate a shared library.
       87     7071        */
       88     7072    2           ALTRETURN;

   7072  1 000010   000000 702200 xent               TSX2  ! X66_AALT

       89     7073    2           END;
       90     7074        /* CHECK TO SEE IF THE SIZE OF THE LIBRARY IS CORRECT */
       91     7075
       92     7076    1      IF B_P.DSZ(PNUM) > B$ROSEG.TREE$->B$TREE_HEADER.MAX_LIB_DATA

   7076  1 000011   200003 471500                    LDP1    @PNUM,,AUTO
         1 000012   100000 236100                    LDQ     0,,PR1
         1 000013   000021 402007                    MPY     17,DL
         1 000014   000000 473400 xsym               LDP3    B$ROSEG$
         1 000015   300001 474500                    LDP4    1,,PR3
         1 000016   000001 736000                    QLS     1
         1 000017   000000 475400 xsym               LDP5    B$P$
         1 000020   500024 236106                    LDQ     20,QL,PR5
         1 000021   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:18   
         1 000022   200020 756100                    STQ     @PROCWSQ+1,,AUTO
         1 000023   400002 236100                    LDQ     2,,PR4
         1 000024   777777 376007                    ANQ     -1,DL
         1 000025   200020 116100                    CMPQ    @PROCWSQ+1,,AUTO
         1 000026   000032 605000 1                  TPL     s:7086

       93     7077    2      THEN DO;

       94     7078    2           B$JIT.ERR = ELIBSIZE;

   7078  1 000027   000010 236000 0                  LDQ     ELIBSIZE
         1 000030   000012 756100                    STQ     10,,PR0

       95     7079    2           ALTRETURN;

   7079  1 000031   000000 702200 xent               TSX2  ! X66_AALT

       96     7080    2           END;
       97     7081        /*E* ERROR: JSA-E$LIBSIZE-E
       98     7082             MESSAGE: Library data size larger than reserved size in run unit.
       99     7083             MESSAGE1: The run unit was linked with a library with less data
      100     7084                        than the one currently be associated.
      101     7085         */
      102     7086    1      S$CU$->B$U.ASP=PNUM;

   7086  1 000032   000000 474400 xsym               LDP4    S$CU$
         1 000033   100000 236100                    LDQ     0,,PR1
         1 000034   000006 736000                    QLS     6
         1 000035   400007 752102                    STCQ    7,'02'O,PR4

      103     7087    1      TPTR$ = PINCRW(B$USERIS$,(B_P.DVA(PNUM)-%ISEGLO)*1024);

   7087  1 000036   100000 236100                    LDQ     0,,PR1
         1 000037   000021 402007                    MPY     17,DL
         1 000040   000001 736000                    QLS     1
         1 000041   500025 720106                    LXL0    21,QL,PR5
         1 000042   777700 636010                    EAQ     -64,X0
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:19   
         1 000043   000012 736000                    QLS     10
         1 000044   000000 036000 xsym               ADLQ    B$USERIS$
         1 000045   200010 756100                    STQ     TPTR$,,AUTO

      104     7088    1      SIZELEFT = B_P.DSZ(PNUM) * 4;        /* NUMBER OF BYTES TO TRANSFER        */

   7088  1 000046   100000 236100                    LDQ     0,,PR1
         1 000047   000021 402007                    MPY     17,DL
         1 000050   000001 736000                    QLS     1
         1 000051   500024 236106                    LDQ     20,QL,PR5
         1 000052   000002 736000                    QLS     2
         1 000053   000000 376000 2                  ANQ     0
         1 000054   200013 756100                    STQ     SIZELEFT,,AUTO

      105     7089
      106     7090    1      PPNO = ADDR(B_P.DSDATA (PNUM)) -> B$PROCDS.DSPH(0);

   7090  1 000055   100000 236100                    LDQ     0,,PR1
         1 000056   000021 402007                    MPY     17,DL
         1 000057   000001 736000                    QLS     1
         1 000060   500011 236106                    LDQ     9,QL,PR5
         1 000061   000022 772000                    QRL     18
         1 000062   200011 756100                    STQ     PPNO,,AUTO

      107     7091
      108     7092    2      DO UNTIL (SIZELEFT = 0);

      109     7093    2           IF SIZELEFT > 4096

   7093  1 000063   200013 235100                    LDA     SIZELEFT,,AUTO
         1 000064   010001 115007                    CMPA    4097,DL
         1 000065   000071 602000 1                  TNC     s:7095

      110     7094    2           THEN SIZE = 4096;

   7094  1 000066   010000 236007                    LDQ     4096,DL
         1 000067   200012 756100                    STQ     SIZE,,AUTO
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:20   
         1 000070   000072 710000 1                  TRA     s:7096

      111     7095    2           ELSE SIZE = SIZELEFT;

   7095  1 000071   200012 755100                    STA     SIZE,,AUTO

      112     7096    2           CALL MME$CVM(%USERWSQ,%SBUF2PG,PPNO,ERR) ;

   7096  1 000072   200014 630500                    EPPR0   ERR,,AUTO
         1 000073   200023 450500                    STP0    @PROCWSQ+4,,AUTO
         1 000074   200011 631500                    EPPR1   PPNO,,AUTO
         1 000075   200022 451500                    STP1    @PROCWSQ+3,,AUTO
         1 000076   000002 237000 2                  LDAQ    2
         1 000077   200020 757100                    STAQ    @PROCWSQ+1,,AUTO
         1 000100   200020 630500                    EPPR0   @PROCWSQ+1,,AUTO
         1 000101   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000102   000000 701000 xent               TSX1    MME$CVM
         1 000103   000000 011000                    NOP     0

      113     7097    2           TPTR$->B_PAGE = B$SBUF2$->B_PAGE; /* MOVE DATA                        */

   7097  1 000104   000000 470400 xsym               LDP0    B$SBUF2$
         1 000105   200012 720100                    LXL0    SIZE,,AUTO
         1 000106   200010 471500                    LDP1    TPTR$,,AUTO
         1 000107   040140 100540                    MLR     fill='040'O
         1 000110   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000111   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      114     7098    2           TPTR$ = PINCRW(TPTR$,1024);

   7098  1 000112   200010 236100                    LDQ     TPTR$,,AUTO
         1 000113   002000 036003                    ADLQ    1024,DU
         1 000114   200010 756100                    STQ     TPTR$,,AUTO

      115     7099    2           PPNO = MM$PPUT.PPNO(PPNO);

   7099  1 000115   000000 471400 xsym               LDP1    B$PPUT$
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:21   
         1 000116   200011 721100                    LXL1    PPNO,,AUTO
         1 000117   100000 236111                    LDQ     0,X1,PR1
         1 000120   777777 376007                    ANQ     -1,DL
         1 000121   200011 756100                    STQ     PPNO,,AUTO

      116     7100    2           SIZELEFT = SIZELEFT - SIZE;

   7100  1 000122   200013 236100                    LDQ     SIZELEFT,,AUTO
         1 000123   200012 136100                    SBLQ    SIZE,,AUTO
         1 000124   200013 756100                    STQ     SIZELEFT,,AUTO

      117     7101    2           END;

   7101  1 000125   000063 601000 1                  TNZ     s:7093

      118     7102
      119     7103    1      CALL MME$CVM(%USERWSQ,%SBUF2PG,-1,ERR);

   7103  1 000126   200014 633500                    EPPR3   ERR,,AUTO
         1 000127   200023 453500                    STP3    @PROCWSQ+4,,AUTO
         1 000130   000004 236000 2                  LDQ     4
         1 000131   200022 756100                    STQ     @PROCWSQ+3,,AUTO
         1 000132   000002 237000 2                  LDAQ    2
         1 000133   200020 757100                    STAQ    @PROCWSQ+1,,AUTO
         1 000134   200020 630500                    EPPR0   @PROCWSQ+1,,AUTO
         1 000135   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000136   000000 701000 xent               TSX1    MME$CVM
         1 000137   000000 011000                    NOP     0

      120     7104    1      GOTO GOT_IT;

   7104  1 000140   000315 710000 1                  TRA     GOT_IT

      121     7105        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:22   
      122     7106    1   JSA$ASL: ENTRY(PNUM) ALTRET;

   7106  1 000141   000000 700200 xent  JSA$ASL      TSX0  ! X66_AUTO_1
         1 000142   000024 000001                    ZERO    20,1

      123     7107    1      CALL SSP_COMMON(%ASLWSQ)

   7107  1 000143   000005 236000 2                  LDQ     5
         1 000144   200017 756100                    STQ     ERR+3,,AUTO
         1 000145   000355 701000 1                  TSX1    SSP_COMMON
         1 000146   000150 702000 1                  TSX2    s:7109
         1 000147   000151 710000 1                  TRA     s:7112

      124     7108    2      WHENALTRETURN DO;

      125     7109    2           ALTRETURN;

   7109  1 000150   000000 702200 xent               TSX2  ! X66_AALT

      126     7110    2           END;
      127     7111
      128     7112    1      S$CU$->B$U.ASL=PNUM;

   7112  1 000151   000000 470400 xsym               LDP0    S$CU$
         1 000152   200003 471500                    LDP1    @PNUM,,AUTO
         1 000153   100000 236100                    LDQ     0,,PR1
         1 000154   000006 552104                    STBQ    6,'04'O,PR0

      129     7113    1      B$USERLS$->B$ULNK.ASLENT.ENTLOC=B_P.SA(PNUM);

   7113  1 000155   100000 236100                    LDQ     0,,PR1
         1 000156   000021 402007                    MPY     17,DL
         1 000157   000001 736000                    QLS     1
         1 000160   000000 473400 xsym               LDP3    B$P$
         1 000161   300026 720106                    LXL0    22,QL,PR3
         1 000162   000000 474400 xsym               LDP4    B$USERLS$
         1 000163   400052 740100                    STX0    42,,PR4
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:23   

      130     7114    1      B$USERLS$->B$ULNK.ASLENT.TYP=11;

   7114  1 000164   400052 236100                    LDQ     42,,PR4
         1 000165   000006 376000 2                  ANQ     6
         1 000166   000013 276007                    ORQ     11,DL
         1 000167   400052 756100                    STQ     42,,PR4

      131     7115    1      GOTO GOT_IT;

   7115  1 000170   000315 710000 1                  TRA     GOT_IT

      132     7116        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:24   
      133     7117    1   JSA$DBCHK: ENTRY(PNUM) ALTRET;

   7117  1 000171   000000 700200 xent  JSA$DBCHK    TSX0  ! X66_AUTO_1
         1 000172   000024 000001                    ZERO    20,1

      134     7118    1      CHECK_IT=1;

   7118  1 000173   000001 235007                    LDA     1,DL
         1 000174   200005 755100                    STA     CHECK_IT,,AUTO

      135     7119    1      GOTO JSA$DB1;

   7119  1 000175   000205 710000 1                  TRA     JSA$DB1

      136     7120                                                /*                                    */
      137     7121    1   JSA$ALIBDB: ENTRY(PNUM) ALTRET;

   7121  1 000176   000000 700200 xent  JSA$ALIBDB   TSX0  ! X66_AUTO_1
         1 000177   000024 000001                    ZERO    20,1

      138     7122    1      CHECK_IT=0;

   7122  1 000200   200005 450100                    STZ     CHECK_IT,,AUTO

      139     7123    1      GOTO ALIB_DB;

   7123  1 000201   000233 710000 1                  TRA     ALIB_DB

      140     7124
      141     7125    1   JSA$DB: ENTRY(PNUM) ALTRET;

   7125  1 000202   000000 700200 xent  JSA$DB       TSX0  ! X66_AUTO_1
         1 000203   000024 000001                    ZERO    20,1

      142     7126    1      CHECK_IT=0;

   7126  1 000204   200005 450100                    STZ     CHECK_IT,,AUTO
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:25   

   7126  1 000205                       JSA$DB1      null
      143     7127    1   JSA$DB1: ;
      144     7128    1      IF NOT (B_P.FLGS(PNUM) & %P_DB)

   7128  1 000205   200003 470500                    LDP0    @PNUM,,AUTO
         1 000206   000000 236100                    LDQ     0,,PR0
         1 000207   000021 402007                    MPY     17,DL
         1 000210   000001 736000                    QLS     1
         1 000211   000000 471400 xsym               LDP1    B$P$
         1 000212   100027 220106                    LDX0    23,QL,PR1
         1 000213   020000 360003                    ANX0    8192,DU
         1 000214   000221 601000 1                  TNZ     s:7136

      145     7129    2      THEN DO;

      146     7130    2           B$JIT.ERR=EBADDBNAME;

   7130  1 000215   000005 236000 0                  LDQ     EBADDBNAME
         1 000216   000000 473400 xsym               LDP3    B$JIT$
         1 000217   300012 756100                    STQ     10,,PR3

      147     7131        /*E*   ERROR:   JSA-E$BADDBUGR-E
      148     7132               MESSAGE: Invalid Debugger name.
      149     7133        */
      150     7134    2           ALTRETURN;

   7134  1 000220   000000 702200 xent               TSX2  ! X66_AALT

      151     7135    2           END;
      152     7136    1      IF (B$JIT.JUNK & %JJ_EXONLY#)

   7136  1 000221   000000 473400 xsym               LDP3    B$JIT$
         1 000222   300315 220100                    LDX0    205,,PR3
         1 000223   000010 360003                    ANX0    8,DU
         1 000224   000233 600000 1                  TZE     ALIB_DB

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:26   
      153     7137    2      THEN DO;

      154     7138    2           IF B$JIT.PRIV.ACTIVE.FMSEC THEN

   7138  1 000225   300013 236100                    LDQ     11,,PR3
         1 000226   100000 316003                    CANQ    32768,DU
         1 000227   000233 601000 1                  TNZ     ALIB_DB

      155     7139    2                GOTO ALIB_DB;
      156     7140    2           B$JIT.ERR=EDEBUGXONLY;

   7140  1 000230   000003 236000 0                  LDQ     EDEBUGXONLY
         1 000231   300012 756100                    STQ     10,,PR3

      157     7141        /*E*   ERROR:   JSA-E$DEBUGXONLY-E
      158     7142               MESSAGE: You cannot debug an execute-only run unit.
      159     7143        */
      160     7144    2           ALTRETURN;

   7144  1 000232   000000 702200 xent               TSX2  ! X66_AALT

   7136  1 000233                       ALIB_DB      null
      161     7145    2           END;
      162     7146
      163     7147    1   ALIB_DB: ;
      164     7148    1      IF B_P.PPC(PNUM)=0

   7148  1 000233   200003 470500                    LDP0    @PNUM,,AUTO
         1 000234   000000 236100                    LDQ     0,,PR0
         1 000235   000021 402007                    MPY     17,DL
         1 000236   000001 736000                    QLS     1
         1 000237   000000 471400 xsym               LDP1    B$P$
         1 000240   100003 235106                    LDA     3,QL,PR1
         1 000241   000246 601000 1                  TNZ     s:7156

      165     7149    2      THEN DO;

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:27   
      166     7150    2           B$JIT.ERR=EBADSSP;

   7150  1 000242   000004 236000 0                  LDQ     EBADSSP
         1 000243   000000 473400 xsym               LDP3    B$JIT$
         1 000244   300012 756100                    STQ     10,,PR3

      167     7151        /*E*   ERROR:   JSA-E$BADSSP-E
      168     7152               MESSAGE:  That Special Shared Processor is not initialized
      169     7153        */
      170     7154    2           ALTRETURN;

   7154  1 000245   000000 702200 xent               TSX2  ! X66_AALT

      171     7155    2           END;
      172     7156    1      SPNUM=S$CU$->B$U.DB;

   7156  1 000246   000000 473400 xsym               LDP3    S$CU$
         1 000247   300006 236100                    LDQ     6,,PR3
         1 000250   000011 772000                    QRL     9
         1 000251   000777 376007                    ANQ     511,DL
         1 000252   200004 756100                    STQ     SPNUM,,AUTO

      173     7157    1      IF SPNUM ~= 0

   7157  1 000253   000263 600000 1                  TZE     s:7169

      174     7158    1      THEN IF SPNUM ~= PNUM

   7158  1 000254   000000 116100                    CMPQ    0,,PR0
         1 000255   000262 600000 1                  TZE     s:7163

      175     7159    2           THEN DO;

      176     7160    2                B$JIT.ERR = EDLIBREQ;

   7160  1 000256   000006 236000 0                  LDQ     EDLIBREQ
         1 000257   000000 474400 xsym               LDP4    B$JIT$
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:28   
         1 000260   400012 756100                    STQ     10,,PR4

      177     7161    2                ALTRETURN;

   7161  1 000261   000000 702200 xent               TSX2  ! X66_AALT

      178     7162    2                END;
      179     7163    1           ELSE RETURN;

   7163  1 000262   000000 702200 xent               TSX2  ! X66_ARET

      180     7164        /*E*   ERROR: JSA-E$DLIBREQ-E
      181     7165               MESSAGE: Another debugger is already associated.
      182     7166        */
      183     7167
      184     7168
      185     7169    1      CALL SSP_COMMON(%DBWSQ)

   7169  1 000263   000007 236000 2                  LDQ     7
         1 000264   200017 756100                    STQ     ERR+3,,AUTO
         1 000265   000355 701000 1                  TSX1    SSP_COMMON
         1 000266   000274 702000 1                  TSX2    s:7175

      186     7170    2      WHENRETURN DO;

      187     7171    2           IF CHECK_IT = 1 THEN RETURN;

   7171  1 000267   200005 235100                    LDA     CHECK_IT,,AUTO
         1 000270   000001 115007                    CMPA    1,DL
         1 000271   000273 601000 1                  TNZ     s:7171+4

   7171  1 000272   000000 702200 xent               TSX2  ! X66_ARET
         1 000273   000275 710000 1                  TRA     s:7178

      188     7172    2           END;
      189     7173
      190     7174    2      WHENALTRETURN DO;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:29   

      191     7175    2           ALTRETURN;

   7175  1 000274   000000 702200 xent               TSX2  ! X66_AALT

      192     7176    2           END;
      193     7177
      194     7178    1      S$CU$->B$U.DB=PNUM;

   7178  1 000275   000000 470400 xsym               LDP0    S$CU$
         1 000276   200003 471500                    LDP1    @PNUM,,AUTO
         1 000277   100000 236100                    LDQ     0,,PR1
         1 000300   000011 736000                    QLS     9
         1 000301   000006 552110                    STBQ    6,'10'O,PR0

      195     7179    1      B$SDS.DBENT.ENTLOC=B_P.SA(PNUM);

   7179  1 000302   100000 236100                    LDQ     0,,PR1
         1 000303   000021 402007                    MPY     17,DL
         1 000304   000001 736000                    QLS     1
         1 000305   000000 473400 xsym               LDP3    B$P$
         1 000306   300026 720106                    LXL0    22,QL,PR3
         1 000307   000000 474400 xsym               LDP4    B$SDS0$
         1 000310   400004 740100                    STX0    4,,PR4

      196     7180    1      S$CU$->B$U.FLG = (S$CU$->B$U.FLG | (%U_DIC | %U_DELA));

   7180  1 000311   000011 236000 0                  LDQ     ELIBSIZE+1
         1 000312   000012 276000 0                  ORQ     ELIBSIZE+2
         1 000313   000000 276100                    ORQ     0,,PR0
         1 000314   000000 756100                    STQ     0,,PR0

   7180  1 000315                       GOT_IT       null
      197     7181    1   GOT_IT: ;
      198     7182           %LOCK (G=J_PLOCK);

   7183  1 000315   000010 630400 2                  EPPR0   8
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:30   
         1 000316   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000317   000000 701000 xent               TSX1    HFC$LOCK
         1 000320   000000 011000                    NOP     0

      199     7185    1      B_P.UC(PNUM)=B_P.UC(PNUM)+1;

   7185  1 000321   200003 470500                    LDP0    @PNUM,,AUTO
         1 000322   000000 236100                    LDQ     0,,PR0
         1 000323   000021 402007                    MPY     17,DL
         1 000324   000001 736000                    QLS     1
         1 000325   000000 620006                    EAX0    0,QL
         1 000326   000000 236100                    LDQ     0,,PR0
         1 000327   000021 402007                    MPY     17,DL
         1 000330   000001 736000                    QLS     1
         1 000331   000000 471400 xsym               LDP1    B$P$
         1 000332   100000 235106                    LDA     0,QL,PR1
         1 000333   000001 035007                    ADLA    1,DL
         1 000334   100000 755110                    STA     0,X0,PR1

      200     7186    1      B_P.FRQ(PNUM) = B_P.FRQ(PNUM) + 1;

   7186  1 000335   000000 236100                    LDQ     0,,PR0
         1 000336   000021 402007                    MPY     17,DL
         1 000337   000001 736000                    QLS     1
         1 000340   000000 620006                    EAX0    0,QL
         1 000341   000000 236100                    LDQ     0,,PR0
         1 000342   000021 402007                    MPY     17,DL
         1 000343   000001 736000                    QLS     1
         1 000344   000000 471400 xsym               LDP1    B$P$
         1 000345   100001 235106                    LDA     1,QL,PR1
         1 000346   000001 035007                    ADLA    1,DL
         1 000347   100001 755110                    STA     1,X0,PR1

      201     7187           %UNLOCK (G=J_PLOCK);

   7188  1 000350   000010 630400 2                  EPPR0   8
         1 000351   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:31   
         1 000352   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000353   000000 011000                    NOP     0

      202     7190    1      RETURN;

   7190  1 000354   000000 702200 xent               TSX2  ! X66_ARET

      203     7191        /*
      204     7192        */
      205     7193        %EJECT;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:32   
      206     7194    1   SSP_COMMON: PROC(PROCWSQ) ALTRET;

   7194  1 000355   200016 741300       SSP_COMMON   STX1  ! ERR+2,,AUTO

      207     7195    2   DCL PROCWSQ SBIN;
      208     7196
      209     7197        /* Make sure there will be enough memory for the TCB and initialized
      210     7198           data segments, if any.
      211     7199        */
      212     7200    2      SIZE = (B_P.TCBSZ(PNUM) + 1023) / 1024;

   7200  1 000356   200003 470500                    LDP0    @PNUM,,AUTO
         1 000357   000000 236100                    LDQ     0,,PR0
         1 000360   000021 402007                    MPY     17,DL
         1 000361   000001 736000                    QLS     1
         1 000362   000000 471400 xsym               LDP1    B$P$
         1 000363   100027 236106                    LDQ     23,QL,PR1
         1 000364   777777 376007                    ANQ     -1,DL
         1 000365   001777 036007                    ADLQ    1023,DL
         1 000366   000012 772000                    QRL     10
         1 000367   200012 756100                    STQ     SIZE,,AUTO

      213     7201
      214     7202    2      TPTR$ = ADDR(B_P.DSDATA(PNUM));

   7202  1 000370   000000 236100                    LDQ     0,,PR0
         1 000371   000021 402007                    MPY     17,DL
         1 000372   000023 736000                    QLS     19
         1 000373   000011 036003                    ADLQ    9,DU
         1 000374   000000 036000 xsym               ADLQ    B$P$
         1 000375   200010 756100                    STQ     TPTR$,,AUTO

      215     7203    3      DO I=0 TO 5;

   7203  1 000376   200006 450100                    STZ     I,,AUTO

      216     7204    3           SIZE = SIZE + ( (TPTR$->B$PROCDS.DSSIZE(I) +1023) /1024);
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:33   

   7204  1 000377   200006 235100                    LDA     I,,AUTO
         1 000400   000001 735000                    ALS     1
         1 000401   200010 470500                    LDP0    TPTR$,,AUTO
         1 000402   000100 101505                    MRL     fill='000'O
         1 000403   000003 000002                    ADSC9   3,A,PR0                  cn=0,n=2
         1 000404   200020 000004                    ADSC9   @PROCWSQ+1,,AUTO         cn=0,n=4
         1 000405   200020 236100                    LDQ     @PROCWSQ+1,,AUTO
         1 000406   001777 036007                    ADLQ    1023,DL
         1 000407   000012 772000                    QRL     10
         1 000410   200012 036100                    ADLQ    SIZE,,AUTO
         1 000411   200012 756100                    STQ     SIZE,,AUTO

      217     7205    3           END;

   7205  1 000412   200006 054100                    AOS     I,,AUTO
         1 000413   200006 235100                    LDA     I,,AUTO
         1 000414   000005 115007                    CMPA    5,DL
         1 000415   000377 604400 1                  TMOZ    s:7204

      218     7206
      219     7207    2      IF B$JIT.CURRCORE + SIZE > B$JIT.MAXCORE

   7207  1 000416   000000 471400 xsym               LDP1    B$JIT$
         1 000417   100210 236100                    LDQ     136,,PR1
         1 000420   777777 376007                    ANQ     -1,DL
         1 000421   200012 036100                    ADLQ    SIZE,,AUTO
         1 000422   200020 756100                    STQ     @PROCWSQ+1,,AUTO
         1 000423   100210 236100                    LDQ     136,,PR1
         1 000424   000022 772000                    QRL     18
         1 000425   200020 116100                    CMPQ    @PROCWSQ+1,,AUTO
         1 000426   000436 603000 1                  TRC     s:7214
         1 000427   100013 236100                    LDQ     11,,PR1
         1 000430   000006 376000 xsym               ANQ     B_VECTNIL+6
         1 000431   000436 601000 1                  TNZ     s:7214

      220     7208    2        AND NOT (B$JIT.PRIV.ACTIVE & %PR_MAXMEM#)
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:34   
      221     7209    3      THEN DO;

      222     7210    3           B$JIT.ERR = EMEMLIMIT;

   7210  1 000432   000007 236000 0                  LDQ     EMEMLIMIT
         1 000433   100012 756100                    STQ     10,,PR1

      223     7211    3           ALTRETURN;

   7211  1 000434   200016 221300                    LDX1  ! ERR+2,,AUTO
         1 000435   000000 702211                    TSX2  ! 0,X1

      224     7212    3           END;
      225     7213
      226     7214    2      IF CHECK_IT = 1 THEN RETURN;

   7214  1 000436   200005 236100                    LDQ     CHECK_IT,,AUTO
         1 000437   000001 116007                    CMPQ    1,DL
         1 000440   000443 601000 1                  TNZ     s:7218

   7214  1 000441   200016 221300                    LDX1  ! ERR+2,,AUTO
         1 000442   000001 702211                    TSX2  ! 1,X1

      227     7215
      228     7216        /* Get the TCB for the special shared processor.
      229     7217        */
      230     7218    2      CALL JSA$GETTCB(PNUM)

   7218  1 000443   200003 630500                    EPPR0   @PNUM,,AUTO
         1 000444   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000445   000000 701000 xent               TSX1    JSA$GETTCB
         1 000446   000450 702000 1                  TSX2    s:7220
         1 000447   000452 710000 1                  TRA     s:7225

      231     7219    3      WHENALTRETURN DO;

      232     7220    3           ALTRETURN;
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:35   

   7220  1 000450   200016 221300                    LDX1  ! ERR+2,,AUTO
         1 000451   000000 702211                    TSX2  ! 0,X1

      233     7221    3           END;
      234     7222
      235     7223        /* Map in any initialized data segments.
      236     7224        */
      237     7225    2      CALL JSA$MAP_DATASEGS(PROCWSQ,PNUM)

   7225  1 000452   200003 236100                    LDQ     @PNUM,,AUTO
         1 000453   200017 235100                    LDA     @PROCWSQ,,AUTO
         1 000454   200020 757100                    STAQ    @PROCWSQ+1,,AUTO
         1 000455   200020 630500                    EPPR0   @PROCWSQ+1,,AUTO
         1 000456   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000457   000000 701000 xent               TSX1    JSA$MAP_DATASEGS
         1 000460   000462 702000 1                  TSX2    s:7227
         1 000461   000464 710000 1                  TRA     s:7232

      238     7226    3      WHENALTRETURN DO;

      239     7227    3           ALTRETURN;

   7227  1 000462   200016 221300                    LDX1  ! ERR+2,,AUTO
         1 000463   000000 702211                    TSX2  ! 0,X1

      240     7228    3           END;
      241     7229
      242     7230        /* Set up the ISR in the appropriate Linkage Segment.
      243     7231        */
      244     7232    2      TPTR$ = MM_LSPTRS$(PROCWSQ);

   7232  1 000464   200017 470500                    LDP0    @PROCWSQ,,AUTO
         1 000465   000000 720100                    LXL0    0,,PR0
         1 000466   000000 236010 xsym               LDQ     MM_LSPTRS$,X0
         1 000467   200010 756100                    STQ     TPTR$,,AUTO

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:36   
      245     7233    2      TPTR$->B$ULNK.IS.BOUND=(B_P.HVA(PNUM)-B_P.PVA(PNUM))*4096 -1;

   7233  1 000470   200003 471500                    LDP1    @PNUM,,AUTO
         1 000471   100000 236100                    LDQ     0,,PR1
         1 000472   000021 402007                    MPY     17,DL
         1 000473   200020 756100                    STQ     @PROCWSQ+1,,AUTO
         1 000474   000001 736000                    QLS     1
         1 000475   000000 473400 xsym               LDP3    B$P$
         1 000476   300025 236106                    LDQ     21,QL,PR3
         1 000477   000022 772000                    QRL     18
         1 000500   200021 756100                    STQ     @PROCWSQ+2,,AUTO
         1 000501   200020 235100                    LDA     @PROCWSQ+1,,AUTO
         1 000502   000001 735000                    ALS     1
         1 000503   300026 236105                    LDQ     22,AL,PR3
         1 000504   000022 772000                    QRL     18
         1 000505   200021 136100                    SBLQ    @PROCWSQ+2,,AUTO
         1 000506   200010 474500                    LDP4    TPTR$,,AUTO
         1 000507   000014 736000                    QLS     12
         1 000510   000001 136007                    SBLQ    1,DL
         1 000511   000020 736000                    QLS     16
         1 000512   400000 676100                    ERQ     0,,PR4
         1 000513   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000514   400000 656100                    ERSQ    0,,PR4

      246     7234    2      TPTR$->B$ULNK.IS.BASE=B_P.PVA(PNUM) * 4096;

   7234  1 000515   100000 236100                    LDQ     0,,PR1
         1 000516   000021 402007                    MPY     17,DL
         1 000517   000001 736000                    QLS     1
         1 000520   000000 473400 xsym               LDP3    B$P$
         1 000521   300025 236106                    LDQ     21,QL,PR3
         1 000522   000006 772000                    QRL     6
         1 000523   000011 376000 2                  ANQ     9
         1 000524   400001 756100                    STQ     1,,PR4

      247     7235    2      RETURN;

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:37   
   7235  1 000525   200016 221300                    LDX1  ! ERR+2,,AUTO
         1 000526   000001 702211                    TSX2  ! 1,X1

ENOVIRTUAL
 Sect OctLoc
   0     000   122301 403204                                                    R...

(unnamed)
 Sect OctLoc
   0     001   122301 403214   122301 403114                                    R...R..L

EDEBUGXONLY
 Sect OctLoc
   0     003   122301 403124                                                    R..T

EBADSSP
 Sect OctLoc
   0     004   122301 403514                                                    R...

EBADDBNAME
 Sect OctLoc
   0     005   122301 403104                                                    R..D

EDLIBREQ
 Sect OctLoc
   0     006   122301 404174                                                    R..|

EMEMLIMIT
 Sect OctLoc
   0     007   122301 411354                                                    R...

ELIBSIZE
 Sect OctLoc
   0     010   122301 403574                                                    R...

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:38   
   0     011   100000 000000   040000 000000                                    @... ...

(unnamed)
 Sect OctLoc
   2     000   000003 777774   000000 000500   000012 006000   000001 006000    ................
   2     004   000027 006000   000010 006000   777777 777760   000007 006000    ................
   2     010   000000 006000   007777 770000                                    ........
      248     7236    2   END SSP_COMMON;
      249     7237    1   END JSA$CLIB;
      250     7238        %EOD;

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:39   
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B_UHJMAC_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSA$CLIB.
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:40   

 **** Variables and constants ****

  ****  Section 000 RoData JSA$CLIB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/b STRC        r     1 EBADDBNAME                 4-0-0/b STRC        r     1 EBADSSP
     3-0-0/b STRC        r     1 EDEBUGXONLY                6-0-0/b STRC        r     1 EDLIBREQ
    10-0-0/b STRC        r     1 ELIBSIZE                   7-0-0/b STRC        r     1 EMEMLIMIT
     0-0-0/b STRC        r     1 ENOVIRTUAL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PNUM                     17-0-0/w PTR         r     1 @PROCWSQ
     5-0-0/w SBIN        r     1 CHECK_IT                  14-0-0/w UBIN        r     1 ERR
     6-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 PNUM
    11-0-0/w UBIN        r     1 PPNO                      *0-0-0/w SBIN        r     1 PROCWSQ
    12-0-0/w UBIN        r     1 SIZE                      13-0-0/w UBIN        r     1 SIZELEFT
     4-0-0/w SBIN        r     1 SPNUM                     10-0-0/w PTR         r     1 TPTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 B$SBUF2$                   0-0-0/w PTR         r     1 B$SDS0$
     0-0-0/w PTR         r     1 B$USERIS$                  0-0-0/w PTR         r     1 B$USERLS$
     0-0-0/d BIT (72)    r     1 J_PLOCK                    0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 MM_LSPTRS$(0:8)
     0-0-0/w PTR         r     1 S$CU$

PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:41   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/w STRC(270)   r     1 B$PROCDS                   0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/d STRC(576)   r     1 B$SDS                      0-0-0/w STRC(108)   r     1 B$TREE_HEADER
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/d STRC(2592)  r     1 B$ULNK
     0-0-0/c ACHR        r     1 B_PAGE
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure JSA$CLIB requires 343 words for executable code.
   Procedure JSA$CLIB requires 20 words of local(AUTO) storage.
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:42   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:43   
          MINI XREF LISTING

ALIB_DB
      7136**LABEL    7123--GOTO     7139--GOTO
B$DO.ECCINFO
      5512**DCL      5513--REDEF
B$JIT.CPFLAGS1.SLEAZE
      5191**DCL      5191--REDEF
B$JIT.CURRCORE
      5259**DCL      7207>>IF
B$JIT.ERR
      5097**DCL      7066<<ASSIGN   7078<<ASSIGN   7130<<ASSIGN   7140<<ASSIGN   7150<<ASSIGN   7160<<ASSIGN
      7210<<ASSIGN
B$JIT.ERR.MID
      5098**DCL      5098--REDEF
B$JIT.EUP
      5257**DCL      7064>>IF
B$JIT.JRESPEAK
      5259**DCL      5260--REDEF
B$JIT.JUNK
      5292**DCL      7136>>IF
B$JIT.MAXCORE
      5258**DCL      7207>>IF
B$JIT.PRIV.ACTIVE
      5098**DCL      7207>>IF
B$JIT.PRIV.ACTIVE.FMSEC
      5099**DCL      7138>>IF
B$JIT$
      4389**DCL      5092--IMP-PTR  7064>>IF       7066>>ASSIGN   7078>>ASSIGN   7130>>ASSIGN   7136>>IF
      7138>>IF       7140>>ASSIGN   7150>>ASSIGN   7160>>ASSIGN   7207>>IF       7207>>IF       7207>>IF
      7210>>ASSIGN
B$MAP.SCTRL
      4331**DCL      4332--REDEF
B$P.DSDATA
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:44   
      4222**DCL      7090--ASSIGN   7202--ASSIGN
B$P.DSZ
      4228**DCL      7076>>IF       7088>>ASSIGN
B$P.DVA
      4230**DCL      7087>>ASSIGN
B$P.FLGS
      4233**DCL      7128>>IF
B$P.FRQ
      4214**DCL      7186<<ASSIGN   7186>>ASSIGN
B$P.HVA
      4231**DCL      7233>>ASSIGN
B$P.PPC
      4216**DCL      7148>>IF
B$P.PVA
      4229**DCL      7233>>ASSIGN   7234>>ASSIGN
B$P.SA
      4232**DCL      7113>>ASSIGN   7179>>ASSIGN
B$P.TCBSZ
      4234**DCL      7200>>ASSIGN
B$P.UC
      4213**DCL      7185<<ASSIGN   7185>>ASSIGN
B$P$
      4266**DCL      7076>>IF       7087>>ASSIGN   7088>>ASSIGN   7090>>ASSIGN   7113>>ASSIGN   7128>>IF
      7148>>IF       7179>>ASSIGN   7185>>ASSIGN   7185>>ASSIGN   7186>>ASSIGN   7186>>ASSIGN   7200>>ASSIGN
      7202>>ASSIGN   7233>>ASSIGN   7233>>ASSIGN   7234>>ASSIGN
B$PPUT$
      4391**DCL      7099>>ASSIGN
B$PROCDS.DSPH
      4253**DCL      7090>>ASSIGN
B$PROCDS.DSSIZE
      4254**DCL      7204>>ASSIGN
B$ROSEG.TREE$
       189**DCL      7076>>IF
B$ROSEG$
      4390**DCL      7076>>IF
B$SBUF2$
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:45   
      4393**DCL      7097>>ASSIGN
B$SDS.DBENT.ENTLOC
      4760**DCL      7179<<ASSIGN
B$SDS0$
      4388**DCL      7179>>ASSIGN
B$TREE_HEADER.MAX_LIB_DATA
      6903**DCL      7076>>IF
B$U.ASL
      5470**DCL      7112<<ASSIGN
B$U.ASP
      5473**DCL      7086<<ASSIGN
B$U.DB
      5469**DCL      7156>>ASSIGN   7178<<ASSIGN
B$U.FLG
      5378**DCL      7180<<ASSIGN   7180>>ASSIGN
B$U.MISC
      5491**DCL      5492--REDEF
B$ULNK.ASLENT.ENTLOC
      6835**DCL      7113<<ASSIGN
B$ULNK.ASLENT.TYP
      6839**DCL      7114<<ASSIGN
B$ULNK.IS.BASE
      6713**DCL      7234<<ASSIGN
B$ULNK.IS.BOUND
      6709**DCL      7233<<ASSIGN
B$USER.MISC
      5567**DCL      5568--REDEF
B$USERIS$
      4394**DCL      7087>>ASSIGN
B$USERLS$
      4387**DCL      7113>>ASSIGN   7114>>ASSIGN
B_PAGE
        19**DCL      7097<<ASSIGN   7097>>ASSIGN
CHECK_IT
        12**DCL      7118<<ASSIGN   7122<<ASSIGN   7126<<ASSIGN   7171>>IF       7214>>IF
EBADDBNAME
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:46   
      7026**DCL      7130>>ASSIGN
EBADSSP
      7018**DCL      7150>>ASSIGN
EDEBUGXONLY
      7010**DCL      7140>>ASSIGN
EDLIBREQ
      7034**DCL      7160>>ASSIGN
ELIBSIZE
      7050**DCL      7078>>ASSIGN
EMEMLIMIT
      7042**DCL      7210>>ASSIGN
ENOVIRTUAL
      6986**DCL      7066>>ASSIGN
ERR
        20**DCL      7096<>CALL     7103<>CALL
GOT_IT
      7180**LABEL    7104--GOTO     7115--GOTO
HFC$LOCK
      3683**DCL-ENT  7183--CALL
HFC$UNLOCK
      3683**DCL-ENT  7188--CALL
I
        13**DCL      7203<<DOINDEX  7204>>ASSIGN
JSA$DB1
      7126**LABEL    7119--GOTO
JSA$GETTCB
        22**DCL-ENT  7218--CALL
JSA$MAP_DATASEGS
        23**DCL-ENT  7225--CALL
J_PLOCK
      4395**DCL      7183<>CALL     7188<>CALL
MM$DESC.BOUND
      4155**DCL      4156--REDEF
MM$DESC.FLGS
      4156**DCL      4156--REDEF
MM$PPUT.PPNO
PL6.E3A0      #001=JSA$CLIB File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:42 Page:47   
      4144**DCL      7099>>ASSIGN
MM$PPUT.USER#
      4144**DCL      4144--REDEF
MME$CVM
        24**DCL-ENT  7096--CALL     7103--CALL
MM_BYP$
      4075**DCL      4075--IMP-PTR
MM_LSPTRS$
      4155**DCL      7232>>ASSIGN
PNUM
         9**DCL         8--PROC     7076>>IF       7086>>ASSIGN   7087>>ASSIGN   7088>>ASSIGN   7090>>ASSIGN
      7106--ENTRY    7112>>ASSIGN   7113>>ASSIGN   7117--ENTRY    7121--ENTRY    7125--ENTRY    7128>>IF
      7148>>IF       7158>>IF       7178>>ASSIGN   7179>>ASSIGN   7185>>ASSIGN   7185>>ASSIGN   7186>>ASSIGN
      7186>>ASSIGN   7200>>ASSIGN   7202>>ASSIGN   7218<>CALL     7225<>CALL     7233>>ASSIGN   7233>>ASSIGN
      7234>>ASSIGN
PPNO
        16**DCL      7090<<ASSIGN   7096<>CALL     7099<<ASSIGN   7099>>ASSIGN
PROCWSQ IN PROCEDURE SSP_COMMON
      7195**DCL      7194--PROC     7225<>CALL     7232>>ASSIGN
S$CU$
      5578**DCL      7086>>ASSIGN   7112>>ASSIGN   7156>>ASSIGN   7178>>ASSIGN   7180>>ASSIGN   7180>>ASSIGN
SIZE
        17**DCL        19--IMP-SIZ  7094<<ASSIGN   7095<<ASSIGN   7097>>ASSIGN   7097>>ASSIGN   7100>>ASSIGN
      7200<<ASSIGN   7204<<ASSIGN   7204>>ASSIGN   7207>>IF
SIZELEFT
        18**DCL      7088<<ASSIGN   7092>>DOUNTIL  7093>>IF       7095>>ASSIGN   7100<<ASSIGN   7100>>ASSIGN
SPNUM
        11**DCL      7156<<ASSIGN   7157>>IF       7158>>IF
SSP_COMMON
      7194**PROC     7107--CALL     7169--CALL
TPTR$
        15**DCL      7087<<ASSIGN   7097>>ASSIGN   7098<<ASSIGN   7098>>ASSIGN   7202<<ASSIGN   7204>>ASSIGN
      7232<<ASSIGN   7233>>ASSIGN   7234>>ASSIGN

PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:48   
      251        1        /*M*   JSA$GETTCB   Get TCB for Special Shared Processors  */
      252        2        /*T***********************************************************/
      253        3        /*T*                                                         */
      254        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      255        5        /*T*                                                         */
      256        6        /*T***********************************************************/
      257        7        JSA$GETTCB: PROC(PNUM) ALTRET;
      258        8    1   DCL PNUM SBIN;
      259        9    1   DCL TEMP1 SBIN;
      260       10    1   DCL TEMP2 SBIN;
      261       11    1   DCL ERR SBIN;
      262       12    1   DCL SEGID SBIN;
      263       13    1   DCL TPTR$ PTR;
      264       14    1   DCL MMH$GDS ENTRY(5) ALTRET;
      265       15    1   DCL SC_CPTCB ENTRY CONV(2,0);
      266       16        %INCLUDE MM_DATA_R;
      267      536        %INCLUDE M_ERRORS_C;
      268      600        %INCLUDE B_SEGIDS_C;
      269     1139        %INCLUDE J_ERRORS_C;                    /* EXECUTION CONTROL ERROR MNEMONICS  */
      270     1226    1   DCL B$JIT$ PTR SYMREF READONLY;
      271     1227    1   DCL B$MISC2$ PTR SYMREF READONLY;
      272     1228    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      273     1229    1   DCL B$LS$ PTR SYMREF READONLY;
      274     1230        %INCLUDE B$P;
      275     1314        %INCLUDE B$JIT_C;
      276     1628               %B$JIT0;
      277     1717              %U$JIT1;
      278     1791               %M$JIT2X;
      279     1794               %F$JIT3X;
      280     1797               %S$JIT4X;
      281     1800               %J$JIT5X;
      282     1803               %A$JIT6X;
      283     1806        %INCLUDE B$ROSEG;                       /* READ-ONLY SEGMENT DEFINITIONS      */
      284     1869        %INCLUDE B_ULSMAC_C;
      285     2978        %INCLUDE B_MLSMAC_C;
      286     3920        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      287     4119        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:49   
      288     4934    1   DCL 1 B$TCB DALIGNED BASED,
      289     4935    1         2 ALT$,                           /* ALTRET FRAME POINTER               */
      290     4936    1           3 OFFSET UBIN(18) UNAL,
      291     4937    1           3 * UBIN(6) UNAL,
      292     4938    1           3 SID BIT(12) UNAL,
      293     4939    1         2 STK$,                           /* TCB FRAME POINTER                  */
      294     4940    1           3 OFFSET UBIN(18) UNAL,
      295     4941    1           3 * UBIN(6) UNAL,
      296     4942    1           3 SID BIT(12) UNAL,
      297     4943    1         2 TCBAVSZ UBIN(18) UNAL,          /* AVAIL TCB SPACE                    */
      298     4944    1         2 CURSZ UBIN(18) UNAL,            /* CURRENT TCB FRAME SIZE             */
      299     4945    1         2 * UBIN(36),                     /* FILLER TO KEEP FRAMES DALIGNED     */
      300     4946    1         2 ALTFRM,                         /* ALTRET FRAME SPACE                 */
      301     4947    1           3 UNUSED SBIN HALF UNAL,
      302     4948    1           3 CODE SBIN HALF UNAL,
      303     4949    1           3 WORDS(0:66) UBIN(36);
      304     4950                                                /* TO SET JIT.ERR                     */
      305     4951        %INCLUDE UD_SEV_C;
      306     4965        %INCLUDE J_ERRSET_C;
      307     4985        %SUB FCG#='1223'O;
      308     4986        %SUB MID#='01'O;
      309     4987        %ERRCODE (NAME=ETCBSZBAD,COD#=%E$TCBSZBAD);
      310     4995        %ERRCODE (NAME=ENOVIRTUAL,COD#=%E$NOVIRTUAL);
      311     5003        %SUB   B$ROSEG=B$ROSEG$->B$ROSEG;
      312     5004        %SUB B$JIT=B$JIT$->B$JIT;
      313     5005        %SUB B_P=B$P$->B$P;
      314     5006        %EJECT;
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:50   
      315     5007                                                /**/
      316     5008        /* THIS PROCEDURE ALLOCATES THE TCB SPACE FOR SPECIAL SHARED PRO-  */
      317     5009        /* CESSORS FROM THE VIRTUAL AREA RESERVED FOR THEIR 1ST DATA SEG-  */
      318     5010        /* MENT. THE BASE OF THE 1ST DATA SEGMENT DESCRIPTOR (AND ALL      */
      319     5011        /* OTHER DATA SEGMENT DESCRIPTORS) IS UPDATED ACCORDINGLY. IT IS   */
      320     5012        /* ASSUMED THAT NO DATA SEGMENTS HAVE BEEN PREVIOUSLY ALLOCATED    */
      321     5013        /* IF THE TCB DOES NOT CURRENTLY EXIST.                            */
      322     5014    1      IF B_P.FLGS(PNUM) & %P_CP
      323     5015    1      THEN TEMP1 = %CPWSQ;
      324     5016    1      ELSE IF B_P.FLGS(PNUM) & %P_DB
      325     5017    1           THEN TEMP1 = %DBWSQ;
      326     5018    1           ELSE TEMP1 = %ASLWSQ;
      327     5019    1      TPTR$ = MM_LSPTRS$(TEMP1);
      328     5020    1      IF TPTR$->MM$DESC.FLGS1.NOTEMPTY(BITBIN(%TCBSID & '1777'O))
      329     5021    1      THEN RETURN;                         /* YES- ALREADY HAVE ONE              */
      330     5022    1      SEGID = BITBIN(%AUTOSID);
      331     5023    1      TEMP2 = ((B_P.TCBSZ(PNUM) +1)/2)*2;  /* GET EVEN # OF WORDS                */
      332     5024    1      IF TEMP2 < SIZEW(B$ROSEG$->B$TCB)
      333     5025    2      THEN DO;
      334     5026        /*E*   ERROR:  JSA-E$TCBSZBAD-E                                       */
      335     5027        /*E*   MESSAGE: TCB size is less than minimum required.            */
      336     5028    2           B$JIT.ERR=ETCBSZBAD;
      337     5029    2           ALTRETURN;
      338     5030    2           END;
      339     5031    1   TRY_AGAIN: ;
      340     5032    1      CALL MMH$GDS(TEMP1,SEGID,TEMP2,ERR) ALTRET(TCBERR);
      341     5033        /* NOW ADJUST THE TCB AND AUTO (DATA SEG 1) DESCRIPTORS TO MAKE SENSE */
      342     5034    1      TPTR$->B$ULS.TCB = TPTR$->B$ULS.DS1;
      343     5035    1      TPTR$->B$ULS.DS1 = TPTR$->B$ULS.DS2; /* DS2 SHOULD BE NULL                 */
      344     5036    1      TPTR$->B$ULS.DS1.BASE = TPTR$->B$ULS.TCB.BASE +
      345     5037    1        TPTR$->B$ULS.TCB.BOUND + 1;
      346     5038        /* COPY TCB DESCRIPTOR INTO MON LSEG SO WE CAN USE IT:             */
      347     5039    1      B$LS$->B$MLS.MISC2 = TPTR$->B$ULS.TCB;
      348     5040        /* NOW, INITIALIZE THE FIRST COUPLE OF WORDS OF TCB.               */
      349     5041    1      B$MISC2$->B$TCB = '0'B;
      350     5042    1      B$MISC2$->B$TCB.ALT$.OFFSET = 4;
      351     5043    1      B$MISC2$->B$TCB.ALT$.SID = %TCBSID;
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:51   
      352     5044    1      B$MISC2$->B$TCB.STK$.OFFSET = 72;
      353     5045    1      B$MISC2$->B$TCB.STK$.SID = %TCBSID;
      354     5046    1      B$MISC2$->B$TCB.TCBAVSZ = B_P.TCBSZ(PNUM) - SIZEW(B$MISC2$->B$TCB);
      355     5047    1      B$MISC2$->B$TCB.ALTFRM.UNUSED = -1;  /* MARK TCB UNUSED                    */
      356     5048           %RSETFLG (LS$ = TPTR$ , SEGID = %TCBSID , FLG = %DSWRITE);
      357     5051    1      RETURN;
      358     5052    1   TCBERR:;
      359     5053    1      IF TEMP1 = %CPWSQ
      360     5054        /*S*     SCREECH_CODE:  JSA-S$CPTCB                 */
      361     5055        /*S*   TYPE:   SUA                                                 */
      362     5056        /*S*   MESSAGE: Unable to get TCB space for command processor.     */
      363     5057    1      THEN IF ERR = %E$BRKCTY              /* USE HIT CONTROL Y                  */
      364     5058    1           THEN GOTO TRY_AGAIN;
      365     5059    1           ELSE CALL SC_CPTCB;
      366     5060    2      ELSE DO;
      367     5061    2           B$JIT.ERR=ENOVIRTUAL;           /* any skelton                        */
      368     5062    2           B$JIT.ERR.CODE=ERR;
      369     5063    2           ALTRETURN;
      370     5064    2           END;
      371     5065    1   END JSA$GETTCB;
      372     5066        %EOD;

PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:52   
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$GETTCB.

   Procedure JSA$GETTCB requires 122 words for executable code.
   Procedure JSA$GETTCB requires 14 words of local(AUTO) storage.

PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:53   

 Object Unit name= JSA$GETTCB                                 File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:42:54.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  JSA$GETTCB
    1   Proc  even  none   122    172  JSA$GETTCB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  JSA$GETTCB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 MMH$GDS
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_CPTCB                         r    MM_BYP$                          r    MM_LSPTRS$
r    B$JIT$                           r    B$MISC2$                         r    B$ROSEG$
r    B$LS$                                 B$P$                                  B_VECTNIL
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:54   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:55   


      251        1        /*M*   JSA$GETTCB   Get TCB for Special Shared Processors  */
      252        2        /*T***********************************************************/
      253        3        /*T*                                                         */
      254        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      255        5        /*T*                                                         */
      256        6        /*T***********************************************************/
      257        7        JSA$GETTCB: PROC(PNUM) ALTRET;

      7  1 000000   000000 700200 xent  JSA$GETTCB   TSX0  ! X66_AUTO_1
         1 000001   000016 000001                    ZERO    14,1

      258        8    1   DCL PNUM SBIN;
      259        9    1   DCL TEMP1 SBIN;
      260       10    1   DCL TEMP2 SBIN;
      261       11    1   DCL ERR SBIN;
      262       12    1   DCL SEGID SBIN;
      263       13    1   DCL TPTR$ PTR;
      264       14    1   DCL MMH$GDS ENTRY(5) ALTRET;
      265       15    1   DCL SC_CPTCB ENTRY CONV(2,0);
      266       16        %INCLUDE MM_DATA_R;
      267      536        %INCLUDE M_ERRORS_C;
      268      600        %INCLUDE B_SEGIDS_C;
      269     1139        %INCLUDE J_ERRORS_C;                    /* EXECUTION CONTROL ERROR MNEMONICS  */
      270     1226    1   DCL B$JIT$ PTR SYMREF READONLY;
      271     1227    1   DCL B$MISC2$ PTR SYMREF READONLY;
      272     1228    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      273     1229    1   DCL B$LS$ PTR SYMREF READONLY;
      274     1230        %INCLUDE B$P;
      275     1314        %INCLUDE B$JIT_C;
      276     1628               %B$JIT0;
      277     1717              %U$JIT1;
      278     1791               %M$JIT2X;
      279     1794               %F$JIT3X;
      280     1797               %S$JIT4X;
      281     1800               %J$JIT5X;
      282     1803               %A$JIT6X;
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:56   
      283     1806        %INCLUDE B$ROSEG;                       /* READ-ONLY SEGMENT DEFINITIONS      */
      284     1869        %INCLUDE B_ULSMAC_C;
      285     2978        %INCLUDE B_MLSMAC_C;
      286     3920        %B_USRULS (FPTN=B$ULS,STCLASS=BASED);
      287     4119        %B_MLS (FPTN=B$MLS,STCLASS=BASED);
      288     4934    1   DCL 1 B$TCB DALIGNED BASED,
      289     4935    1         2 ALT$,                           /* ALTRET FRAME POINTER               */
      290     4936    1           3 OFFSET UBIN(18) UNAL,
      291     4937    1           3 * UBIN(6) UNAL,
      292     4938    1           3 SID BIT(12) UNAL,
      293     4939    1         2 STK$,                           /* TCB FRAME POINTER                  */
      294     4940    1           3 OFFSET UBIN(18) UNAL,
      295     4941    1           3 * UBIN(6) UNAL,
      296     4942    1           3 SID BIT(12) UNAL,
      297     4943    1         2 TCBAVSZ UBIN(18) UNAL,          /* AVAIL TCB SPACE                    */
      298     4944    1         2 CURSZ UBIN(18) UNAL,            /* CURRENT TCB FRAME SIZE             */
      299     4945    1         2 * UBIN(36),                     /* FILLER TO KEEP FRAMES DALIGNED     */
      300     4946    1         2 ALTFRM,                         /* ALTRET FRAME SPACE                 */
      301     4947    1           3 UNUSED SBIN HALF UNAL,
      302     4948    1           3 CODE SBIN HALF UNAL,
      303     4949    1           3 WORDS(0:66) UBIN(36);
      304     4950                                                /* TO SET JIT.ERR                     */
      305     4951        %INCLUDE UD_SEV_C;
      306     4965        %INCLUDE J_ERRSET_C;
      307     4985        %SUB FCG#='1223'O;
      308     4986        %SUB MID#='01'O;
      309     4987        %ERRCODE (NAME=ETCBSZBAD,COD#=%E$TCBSZBAD);
      310     4995        %ERRCODE (NAME=ENOVIRTUAL,COD#=%E$NOVIRTUAL);
      311     5003        %SUB   B$ROSEG=B$ROSEG$->B$ROSEG;
      312     5004        %SUB B$JIT=B$JIT$->B$JIT;
      313     5005        %SUB B_P=B$P$->B$P;
      314     5006        %EJECT;
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:57   
      315     5007                                                /**/
      316     5008        /* THIS PROCEDURE ALLOCATES THE TCB SPACE FOR SPECIAL SHARED PRO-  */
      317     5009        /* CESSORS FROM THE VIRTUAL AREA RESERVED FOR THEIR 1ST DATA SEG-  */
      318     5010        /* MENT. THE BASE OF THE 1ST DATA SEGMENT DESCRIPTOR (AND ALL      */
      319     5011        /* OTHER DATA SEGMENT DESCRIPTORS) IS UPDATED ACCORDINGLY. IT IS   */
      320     5012        /* ASSUMED THAT NO DATA SEGMENTS HAVE BEEN PREVIOUSLY ALLOCATED    */
      321     5013        /* IF THE TCB DOES NOT CURRENTLY EXIST.                            */
      322     5014    1      IF B_P.FLGS(PNUM) & %P_CP

   5014  1 000002   200003 470500                    LDP0    @PNUM,,AUTO
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   000021 402007                    MPY     17,DL
         1 000005   000001 736000                    QLS     1
         1 000006   000000 471400 xsym               LDP1    B$P$
         1 000007   100027 220106                    LDX0    23,QL,PR1
         1 000010   400000 360003                    ANX0    -131072,DU
         1 000011   000015 600000 1                  TZE     s:5016

      323     5015    1      THEN TEMP1 = %CPWSQ;

   5015  1 000012   000004 235007                    LDA     4,DL
         1 000013   200004 755100                    STA     TEMP1,,AUTO
         1 000014   000030 710000 1                  TRA     s:5019

      324     5016    1      ELSE IF B_P.FLGS(PNUM) & %P_DB

   5016  1 000015   000000 236100                    LDQ     0,,PR0
         1 000016   000021 402007                    MPY     17,DL
         1 000017   000001 736000                    QLS     1
         1 000020   100027 220106                    LDX0    23,QL,PR1
         1 000021   020000 360003                    ANX0    8192,DU
         1 000022   000026 600000 1                  TZE     s:5018

      325     5017    1           THEN TEMP1 = %DBWSQ;

   5017  1 000023   000005 235007                    LDA     5,DL
         1 000024   200004 755100                    STA     TEMP1,,AUTO
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:58   
         1 000025   000030 710000 1                  TRA     s:5019

      326     5018    1           ELSE TEMP1 = %ASLWSQ;

   5018  1 000026   000006 235007                    LDA     6,DL
         1 000027   200004 755100                    STA     TEMP1,,AUTO

      327     5019    1      TPTR$ = MM_LSPTRS$(TEMP1);

   5019  1 000030   000000 236005 xsym               LDQ     MM_LSPTRS$,AL
         1 000031   200010 756100                    STQ     TPTR$,,AUTO

      328     5020    1      IF TPTR$->MM$DESC.FLGS1.NOTEMPTY(BITBIN(%TCBSID & '1777'O))

   5020  1 000032   200010 473500                    LDP3    TPTR$,,AUTO
         1 000033   300036 236100                    LDQ     30,,PR3
         1 000034   000400 316007                    CANQ    256,DL
         1 000035   000037 600000 1                  TZE     s:5022

      329     5021    1      THEN RETURN;                         /* YES- ALREADY HAVE ONE              */

   5021  1 000036   000000 702200 xent               TSX2  ! X66_ARET

      330     5022    1      SEGID = BITBIN(%AUTOSID);

   5022  1 000037   006004 235007                    LDA     3076,DL
         1 000040   200007 755100                    STA     SEGID,,AUTO

      331     5023    1      TEMP2 = ((B_P.TCBSZ(PNUM) +1)/2)*2;  /* GET EVEN # OF WORDS                */

   5023  1 000041   000000 236100                    LDQ     0,,PR0
         1 000042   000021 402007                    MPY     17,DL
         1 000043   000001 736000                    QLS     1
         1 000044   100027 236106                    LDQ     23,QL,PR1
         1 000045   777777 376007                    ANQ     -1,DL
         1 000046   000001 036007                    ADLQ    1,DL
         1 000047   000001 772000                    QRL     1
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:59   
         1 000050   000001 736000                    QLS     1
         1 000051   200005 756100                    STQ     TEMP2,,AUTO

      332     5024    1      IF TEMP2 < SIZEW(B$ROSEG$->B$TCB)

   5024  1 000052   000110 116007                    CMPQ    72,DL
         1 000053   000060 605000 1                  TPL     TRY_AGAIN

      333     5025    2      THEN DO;

      334     5026        /*E*   ERROR:  JSA-E$TCBSZBAD-E                                       */
      335     5027        /*E*   MESSAGE: TCB size is less than minimum required.            */
      336     5028    2           B$JIT.ERR=ETCBSZBAD;

   5028  1 000054   000000 236000 0                  LDQ     ETCBSZBAD
         1 000055   000000 474400 xsym               LDP4    B$JIT$
         1 000056   400012 756100                    STQ     10,,PR4

      337     5029    2           ALTRETURN;

   5029  1 000057   000000 702200 xent               TSX2  ! X66_AALT

   5024  1 000060                       TRY_AGAIN    null
      338     5030    2           END;
      339     5031    1   TRY_AGAIN: ;
      340     5032    1      CALL MMH$GDS(TEMP1,SEGID,TEMP2,ERR) ALTRET(TCBERR);

   5032  1 000060   200006 630500                    EPPR0   ERR,,AUTO
         1 000061   200015 450500                    STP0    TPTR$+5,,AUTO
         1 000062   200005 631500                    EPPR1   TEMP2,,AUTO
         1 000063   200014 451500                    STP1    TPTR$+4,,AUTO
         1 000064   200007 633500                    EPPR3   SEGID,,AUTO
         1 000065   200013 453500                    STP3    TPTR$+3,,AUTO
         1 000066   200004 634500                    EPPR4   TEMP1,,AUTO
         1 000067   200012 454500                    STP4    TPTR$+2,,AUTO
         1 000070   200012 630500                    EPPR0   TPTR$+2,,AUTO
         1 000071   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:60   
         1 000072   000000 701000 xent               TSX1    MMH$GDS
         1 000073   000147 702000 1                  TSX2    TCBERR

      341     5033        /* NOW ADJUST THE TCB AND AUTO (DATA SEG 1) DESCRIPTORS TO MAKE SENSE */
      342     5034    1      TPTR$->B$ULS.TCB = TPTR$->B$ULS.DS1;

   5034  1 000074   200010 470500                    LDP0    TPTR$,,AUTO
         1 000075   000010 237100                    LDAQ    8,,PR0
         1 000076   000036 757100                    STAQ    30,,PR0

      343     5035    1      TPTR$->B$ULS.DS1 = TPTR$->B$ULS.DS2; /* DS2 SHOULD BE NULL                 */

   5035  1 000077   000012 237100                    LDAQ    10,,PR0
         1 000100   000010 757100                    STAQ    8,,PR0

      344     5036    1      TPTR$->B$ULS.DS1.BASE = TPTR$->B$ULS.TCB.BASE +

   5036  1 000101   000036 236100                    LDQ     30,,PR0
         1 000102   000020 772000                    QRL     16
         1 000103   000037 036100                    ADLQ    31,,PR0
         1 000104   000001 036007                    ADLQ    1,DL
         1 000105   000011 756100                    STQ     9,,PR0

      345     5037    1        TPTR$->B$ULS.TCB.BOUND + 1;
      346     5038        /* COPY TCB DESCRIPTOR INTO MON LSEG SO WE CAN USE IT:             */
      347     5039    1      B$LS$->B$MLS.MISC2 = TPTR$->B$ULS.TCB;

   5039  1 000106   000036 237100                    LDAQ    30,,PR0
         1 000107   000000 471400 xsym               LDP1    B$LS$
         1 000110   100260 757100                    STAQ    176,,PR1

      348     5040        /* NOW, INITIALIZE THE FIRST COUPLE OF WORDS OF TCB.               */
      349     5041    1      B$MISC2$->B$TCB = '0'B;

   5041  1 000111   000000 473400 xsym               LDP3    B$MISC2$
         1 000112   000100 100400                    MLR     fill='000'O
         1 000113   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:61   
         1 000114   300000 000440                    ADSC9   0,,PR3                   cn=0,n=288

      350     5042    1      B$MISC2$->B$TCB.ALT$.OFFSET = 4;

   5042  1 000115   000004 220003                    LDX0    4,DU
         1 000116   300000 740100                    STX0    0,,PR3

      351     5043    1      B$MISC2$->B$TCB.ALT$.SID = %TCBSID;

   5043  1 000117   006017 236007                    LDQ     3087,DL
         1 000120   300000 752103                    STCQ    0,'03'O,PR3

      352     5044    1      B$MISC2$->B$TCB.STK$.OFFSET = 72;

   5044  1 000121   000110 221003                    LDX1    72,DU
         1 000122   300001 741100                    STX1    1,,PR3

      353     5045    1      B$MISC2$->B$TCB.STK$.SID = %TCBSID;

   5045  1 000123   300001 752103                    STCQ    1,'03'O,PR3

      354     5046    1      B$MISC2$->B$TCB.TCBAVSZ = B_P.TCBSZ(PNUM) - SIZEW(B$MISC2$->B$TCB);

   5046  1 000124   200003 474500                    LDP4    @PNUM,,AUTO
         1 000125   400000 236100                    LDQ     0,,PR4
         1 000126   000021 402007                    MPY     17,DL
         1 000127   000001 736000                    QLS     1
         1 000130   000000 475400 xsym               LDP5    B$P$
         1 000131   500027 722106                    LXL2    23,QL,PR5
         1 000132   777670 623012                    EAX3    -72,X2
         1 000133   300002 743100                    STX3    2,,PR3

      355     5047    1      B$MISC2$->B$TCB.ALTFRM.UNUSED = -1;  /* MARK TCB UNUSED                    */

   5047  1 000134   777777 222003                    LDX2    -1,DU
         1 000135   300004 742100                    STX2    4,,PR3

PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:62   
      356     5048           %RSETFLG (LS$ = TPTR$ , SEGID = %TCBSID , FLG = %DSWRITE);

   5049  1 000136   000036 236100                    LDQ     30,,PR0
         1 000137   000024 736000                    QLS     20
         1 000140   777000 376003                    ANQ     -512,DU
         1 000141   577000 376003                    ANQ     -66048,DU
         1 000142   000024 772000                    QRL     20
         1 000143   000036 676100                    ERQ     30,,PR0
         1 000144   177600 376007                    ANQ     65408,DL
         1 000145   000036 656100                    ERSQ    30,,PR0

      357     5051    1      RETURN;

   5051  1 000146   000000 702200 xent               TSX2  ! X66_ARET

   5049  1 000147                       TCBERR       null
      358     5052    1   TCBERR:;
      359     5053    1      IF TEMP1 = %CPWSQ

   5053  1 000147   200004 235100                    LDA     TEMP1,,AUTO
         1 000150   000004 115007                    CMPA    4,DL
         1 000151   000160 601000 1                  TNZ     s:5061

      360     5054        /*S*     SCREECH_CODE:  JSA-S$CPTCB                 */
      361     5055        /*S*   TYPE:   SUA                                                 */
      362     5056        /*S*   MESSAGE: Unable to get TCB space for command processor.     */
      363     5057    1      THEN IF ERR = %E$BRKCTY              /* USE HIT CONTROL Y                  */

   5057  1 000152   200006 236100                    LDQ     ERR,,AUTO
         1 000153   001207 116007                    CMPQ    647,DL
         1 000154   000060 600000 1                  TZE     TRY_AGAIN

      364     5058    1           THEN GOTO TRY_AGAIN;
      365     5059    1           ELSE CALL SC_CPTCB;

   5059  1 000155   000000 713400 xsym               CLIMB   SC_CPTCB
         1 000156   000000 600000 xsid               climb   nvectors=         0
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:63   
         1 000157   000171 710000 1                  TRA     s:5065

      366     5060    2      ELSE DO;

      367     5061    2           B$JIT.ERR=ENOVIRTUAL;           /* any skelton                        */

   5061  1 000160   000001 236000 0                  LDQ     ENOVIRTUAL
         1 000161   000000 470400 xsym               LDP0    B$JIT$
         1 000162   000012 756100                    STQ     10,,PR0

      368     5062    2           B$JIT.ERR.CODE=ERR;

   5062  1 000163   200006 236100                    LDQ     ERR,,AUTO
         1 000164   000003 736000                    QLS     3
         1 000165   000012 676100                    ERQ     10,,PR0
         1 000166   377770 376007                    ANQ     131064,DL
         1 000167   000012 656100                    ERSQ    10,,PR0

      369     5063    2           ALTRETURN;

   5063  1 000170   000000 702200 xent               TSX2  ! X66_AALT

      370     5064    2           END;
      371     5065    1   END JSA$GETTCB;

   5065  1 000171   000000 702200 xent               TSX2  ! X66_ARET

ETCBSZBAD
 Sect OctLoc
   0     000   122301 403324                                                    R...

ENOVIRTUAL
 Sect OctLoc
   0     001   122301 403204                                                    R...
      372     5066        %EOD;

PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:64   
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$GETTCB.
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:65   

 **** Variables and constants ****

  ****  Section 000 RoData JSA$GETTCB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/b STRC        r     1 ENOVIRTUAL                 0-0-0/b STRC        r     1 ETCBSZBAD

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PNUM                      6-0-0/w SBIN        r     1 ERR
    *0-0-0/w SBIN        r     1 PNUM                       7-0-0/w SBIN        r     1 SEGID
     4-0-0/w SBIN        r     1 TEMP1                      5-0-0/w SBIN        r     1 TEMP2
    10-0-0/w PTR         r     1 TPTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$LS$
     0-0-0/w PTR         r     1 B$MISC2$                   0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$ROSEG$                   0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 MM_LSPTRS$(0:8)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(10368) r     1 B$MLS
     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/d STRC(2592)  r     1 B$TCB
     0-0-0/d STRC(2592)  r     1 B$ULS
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:66   
     0-0-0/d STRC(72)    r     1 MM$DESC(0:0)


   Procedure JSA$GETTCB requires 122 words for executable code.
   Procedure JSA$GETTCB requires 14 words of local(AUTO) storage.
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:68   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      1728**DCL      1728--REDEF
B$JIT.ERR
      1634**DCL      5028<<ASSIGN   5061<<ASSIGN
B$JIT.ERR.CODE
      1635**DCL      5062<<ASSIGN
B$JIT.ERR.MID
      1635**DCL      1635--REDEF
B$JIT$
      1226**DCL      1629--IMP-PTR  5028>>ASSIGN   5061>>ASSIGN   5062>>ASSIGN
B$LS$
      1229**DCL      5039>>ASSIGN
B$MISC2$
      1227**DCL      5041>>ASSIGN   5042>>ASSIGN   5043>>ASSIGN   5044>>ASSIGN   5045>>ASSIGN   5046>>ASSIGN
      5046>>ASSIGN   5047>>ASSIGN
B$MLS.MISC2
      4699**DCL      5039<<ASSIGN
B$P.FLGS
      1259**DCL      5014>>IF       5016>>IF
B$P.TCBSZ
      1260**DCL      5023>>ASSIGN   5046>>ASSIGN
B$P$
      1292**DCL      5014>>IF       5016>>IF       5023>>ASSIGN   5046>>ASSIGN
B$ROSEG$
      1228**DCL      5024>>IF
B$TCB
      4934**DCL      5024--IF       5041<<ASSIGN   5046--ASSIGN
B$TCB.ALT$.OFFSET
      4936**DCL      5042<<ASSIGN
B$TCB.ALT$.SID
      4938**DCL      5043<<ASSIGN
B$TCB.ALTFRM.UNUSED
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:69   
      4947**DCL      5047<<ASSIGN
B$TCB.STK$.OFFSET
      4940**DCL      5044<<ASSIGN
B$TCB.STK$.SID
      4942**DCL      5045<<ASSIGN
B$TCB.TCBAVSZ
      4943**DCL      5046<<ASSIGN
B$ULS.DS1
      3962**DCL      5034>>ASSIGN   5035<<ASSIGN
B$ULS.DS1.BASE
      3967**DCL      5036<<ASSIGN
B$ULS.DS2
      3968**DCL      5035>>ASSIGN
B$ULS.TCB
      4028**DCL      5034<<ASSIGN   5039>>ASSIGN
B$ULS.TCB.BASE
      4033**DCL      5036>>ASSIGN
B$ULS.TCB.BOUND
      4029**DCL      5036>>ASSIGN
ENOVIRTUAL
      4996**DCL      5061>>ASSIGN
ERR
        11**DCL      5032<>CALL     5057>>IF       5062>>ASSIGN
ETCBSZBAD
      4988**DCL      5028>>ASSIGN
MM$DESC.BOUND
       487**DCL       488--REDEF
MM$DESC.FLGS
       488**DCL       488--REDEF    5049<<ASSIGN   5049>>ASSIGN
MM$DESC.FLGS1.NOTEMPTY
       488**DCL      5020>>IF
MM$PPUT.USER#
       476**DCL       476--REDEF
MMH$GDS
        14**DCL-ENT  5032--CALL
MM_BYP$
PL6.E3A0      #002=JSA$GETTCB File=JSA$UTIL.:E05TSI                              TUE 07/29/97 23:42 Page:70   
       407**DCL       407--IMP-PTR
MM_LSPTRS$
       487**DCL      5019>>ASSIGN
PNUM
         8**DCL         7--PROC     5014>>IF       5016>>IF       5023>>ASSIGN   5046>>ASSIGN
SC_CPTCB
        15**DCL-ENT  5059--CALL
SEGID
        12**DCL      5022<<ASSIGN   5032<>CALL
TCBERR
      5049**LABEL    5032--CALLALT
TEMP1
         9**DCL      5015<<ASSIGN   5017<<ASSIGN   5018<<ASSIGN   5019>>ASSIGN   5032<>CALL     5053>>IF
TEMP2
        10**DCL      5023<<ASSIGN   5024>>IF       5032<>CALL
TPTR$
        13**DCL      5019<<ASSIGN   5020>>IF       5034>>ASSIGN   5034>>ASSIGN   5035>>ASSIGN   5035>>ASSIGN
      5036>>ASSIGN   5036>>ASSIGN   5036>>ASSIGN   5039>>ASSIGN   5049>>ASSIGN   5049>>ASSIGN
TRY_AGAIN
      5024**LABEL    5058--GOTO

PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:71   
      373        1        /*T***********************************************************/
      374        2        /*T*                                                         */
      375        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      376        4        /*T*                                                         */
      377        5        /*T***********************************************************/
      378        6        /*F*    NAME:  JSA$RUNDSPC
      379        7                PURPOSE:  To disassociate a Special Shared Processor
      380        8        */
      381        9        JSA$RUNDSPC: PROC(WSQ,CPFLG);
      382       10    1   DCL WSQ UBIN(36);                  /* WSQ OF SP SHARED  PROC TO DISASSOCIATE  */
      383       11    1   DCL CPFLG UBIN(36);                     /* IF ~= 0 THEN FREE CP DATA SEGMENTS */
      384       12        /**/
      385       13    1   DCL TPTR$ PTR;                          /* TO CONTAIN PTR TO PROCESSORS L SEG */
      386       14    1   DCL TCBSIZ SBIN;
      387       15    1   DCL PNUM SBIN;
      388       16    1   DCL I SBIN;
      389       17    1   DCL JSU$FDSEG ENTRY(1);                 /* ROUTINE TO FREE DATA SEGMENTS      */
      390       18    1   DCL SC_RNDSPC ENTRY CONV(2,0);
      391       19        /**/
      392       20    1   DCL B$USERLS$ PTR SYMREF READONLY;
      393       21    1   DCL B$ASLLS$ PTR SYMREF READONLY;
      394       22    1   DCL B$DBLS$ PTR SYMREF READONLY;
      395       23    1   DCL B$CPLS$ PTR SYMREF READONLY;
      396       24    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      397       25    1   DCL B$JIT$ PTR SYMREF READONLY;
      398       26    1   DCL J_PLOCK BIT(72) DALIGNED SYMREF;
      399       27        %INCLUDE B$P;
      400      111        %INCLUDE B_ULSMAC_C;
      401     1220        %B_USRULS (FPTN=B$ULNK,STCLASS=BASED);
      402     1419        %INCLUDE B$USER;
      403     1635        %B$USERREFS;
      404     1639        %INCLUDE B$ROSEG;
      405     1702        %INCLUDE B$JIT_C;
      406     2016        %B$JIT0;
      407     2105        %U$JIT1X;
      408     2108        %M$JIT2X;
      409     2111        %F$JIT3X;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:72   
      410     2114        %S$JIT4X;
      411     2117        %J$JIT5;
      412     2205        %A$JIT6X;
      413     2208        %SUB B$JIT=B$JIT$->B$JIT;
      414     2209        %INCLUDE MM_DATA_R;
      415     2729        %INCLUDE HF_LOCK_C;
      416     2743        %INCLUDE B_SEGIDS_C;
      417     3282        %SUB B_P=B$P$->B$P;
      418     3283        %EJECT;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:73   
      419     3284    1      PNUM = 0;
      420     3285    2      DO CASE(WSQ);
      421     3286        /**/
      422     3287    2       CASE(%ASLWSQ);
      423     3288    2         TPTR$=B$ASLLS$;
      424     3289    2         I=1;
      425     3290    2         PNUM=S$CU$->B$U.ASL;
      426     3291    2         S$CU$->B$U.ASL =0;
      427     3292    2         B$ASLLS$->B$ULNK.IS.BOUND = 0;
      428     3293    2         B$ASLLS$->B$ULNK.IS.BASE =0;
      429     3294    2         B$USERLS$->B$ULNK.ASLENT.ENTLOC = BITBIN('777777'O);
      430     3295        /**/
      431     3296    2       CASE(%DBWSQ);
      432     3297    2         TPTR$=B$DBLS$;
      433     3298    2         IF (S$CU$->B$U.FLG & %U_DIC)
      434     3299    3         THEN DO;
      435     3300    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_DIC);
      436     3301    3              END;
      437     3302    2         IF CPFLG = 0 THEN RETURN;         /*DONT DISASSOCIATE*/
      438     3303    2         I=2;
      439     3304
      440     3305    2         PNUM=S$CU$->B$U.DB;
      441     3306
      442     3307    2         IF NOT (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#) )
      443     3308    3         THEN DO;
      444     3309    3              S$CU$->B$U.DB =0;
      445     3310    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_DELA);
      446     3311    3              B$DBLS$->B$ULNK.IS.BOUND =0;
      447     3312    3              B$DBLS$->B$ULNK.IS.BASE =0;
      448     3313    3              B$USERLS$->B$ULNK.ECCB.FLGS = (B$USERLS$->B$ULNK.ECCB.FLGS &~ %DSXXX);
      449     3314    3              B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_UDELTA#);
      450     3315    3              END;
      451     3316        /**/
      452     3317    2       CASE(%CPWSQ);
      453     3318    2         TPTR$=B$CPLS$;
      454     3319    2         IF (S$CU$->B$U.FLG & %U_CPIC)
      455     3320    3         THEN DO;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:74   
      456     3321    3              PNUM = S$CU$->B$U.ACP;
      457     3322    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_CPIC);
      458     3323    3              IF B$JIT.RUNFLAGS = '0'B THEN B$JIT.RUNFLAGS = %RUN_MON#;
      459     3324    3              END;
      460     3325    2         IF CPFLG = 0 THEN RETURN;         /*DONT RELEASE CP DATA SEGS           */
      461     3326    2         I=3;
      462     3327        /**/
      463     3328    2       CASE(ELSE);
      464     3329    2         CALL SC_RNDSPC;
      465     3330        /*S*    SCREECH_CODE:  JSA-S$RUNDSPC
      466     3331                TYPE:  SUA
      467     3332                MESSAGE:  JSA$RUNDSPC was called with a bad WSR
      468     3333        */
      469     3334    2         END;                              /* DO CASE(WSQ)                       */
      470     3335           %LOCK (G=J_PLOCK);
      471     3338    1      B_P.UC (PNUM) = B_P.UC (PNUM) - 1;
      472     3339           %UNLOCK (G=J_PLOCK);
      473     3342        %EJECT;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:75   
      474     3343        /*
      475     3344               IN CASE THE PROCESSOR HAS ALLOCATED A TCB FROM THE BEGINNING OF DATA
      476     3345               SEGMENT #1, SET ITS TCB DESCRIPTOR NULL, ADD THE SPACE BACK TO
      477     3346               DATA SEGMENT #1, AND THEN FREE ALL PROCESSOR DATA SEGMENTS. THIS IN-
      478     3347               SURES THAT ALL PAGES OWNED BY THE PROCESSOR WILL BE GIVEN BACK.
      479     3348        */
      480     3349    1      B$ROSEG$->B$ROSEG.ECCB(I) = '0'B;
      481     3350    1      IF TPTR$->MM$DESC.FLGS1.NOTEMPTY(BITBIN(%TCBSID & '1777'O))
      482     3351    2      THEN DO;
      483     3352                %GETDBOUND (LS$ = TPTR$ , SEGID = %TCBSID , DBOUND = TCBSIZ);
      484     3355    2           TCBSIZ = TCBSIZ + 1;
      485     3356                %GETDBASE (DBASE = I , LS$ = TPTR$ , SEGID = %DS1SID);
      486     3359                %SETDBASE (DBASE = "I - TCBSIZ" , LS$ = TPTR$, SEGID = %DS1SID);
      487     3362                %GETDBOUND (DBOUND = I , LS$ = TPTR$ , SEGID = %DS1SID);
      488     3365                %SETDBOUND (DBOUND = "I + TCBSIZ" , LS$ = TPTR$ , SEGID = %DS1SID);
      489     3368                %SETNULL (LS$ = TPTR$ , SEGID = %TCBSID);
      490     3371                %SETNOTNULL (LS$ = TPTR$ , SEGID = %DS1SID);
      491     3374    2           END;
      492     3375    1      CALL JSU$FDSEG(WSQ);                 /* FREE PROCESSORS DATA SEGMENTS      */
      493     3376    1      RETURN;
      494     3377    1   END JSA$RUNDSPC;
      495     3378        %EOD;

PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:76   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$RUNDSPC.

   Procedure JSA$RUNDSPC requires 159 words for executable code.
   Procedure JSA$RUNDSPC requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:77   

 Object Unit name= JSA$RUNDSPC                                File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:43:37.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  JSA$RUNDSPC
    1   Proc  even  none   159    237  JSA$RUNDSPC
    2  RoData even  none     2      2  JSA$RUNDSPC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  JSA$RUNDSPC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$UNLOCK
         yes           Std       1 HFC$LOCK
         yes           Std       1 JSU$FDSEG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:78   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_RNDSPC                        r    B$USERLS$                        r    B$ASLLS$
r    B$DBLS$                          r    B$CPLS$                          r    B$ROSEG$
r    B$JIT$                                J_PLOCK                               B$P$
     S$CU$                            r    MM_BYP$                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:79   


      373        1        /*T***********************************************************/
      374        2        /*T*                                                         */
      375        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      376        4        /*T*                                                         */
      377        5        /*T***********************************************************/
      378        6        /*F*    NAME:  JSA$RUNDSPC
      379        7                PURPOSE:  To disassociate a Special Shared Processor
      380        8        */
      381        9        JSA$RUNDSPC: PROC(WSQ,CPFLG);

      9  1 000000   000000 700200 xent  JSA$RUNDSPC  TSX0  ! X66_AUTO_2
         1 000001   000012 000002                    ZERO    10,2

      382       10    1   DCL WSQ UBIN(36);                  /* WSQ OF SP SHARED  PROC TO DISASSOCIATE  */
      383       11    1   DCL CPFLG UBIN(36);                     /* IF ~= 0 THEN FREE CP DATA SEGMENTS */
      384       12        /**/
      385       13    1   DCL TPTR$ PTR;                          /* TO CONTAIN PTR TO PROCESSORS L SEG */
      386       14    1   DCL TCBSIZ SBIN;
      387       15    1   DCL PNUM SBIN;
      388       16    1   DCL I SBIN;
      389       17    1   DCL JSU$FDSEG ENTRY(1);                 /* ROUTINE TO FREE DATA SEGMENTS      */
      390       18    1   DCL SC_RNDSPC ENTRY CONV(2,0);
      391       19        /**/
      392       20    1   DCL B$USERLS$ PTR SYMREF READONLY;
      393       21    1   DCL B$ASLLS$ PTR SYMREF READONLY;
      394       22    1   DCL B$DBLS$ PTR SYMREF READONLY;
      395       23    1   DCL B$CPLS$ PTR SYMREF READONLY;
      396       24    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      397       25    1   DCL B$JIT$ PTR SYMREF READONLY;
      398       26    1   DCL J_PLOCK BIT(72) DALIGNED SYMREF;
      399       27        %INCLUDE B$P;
      400      111        %INCLUDE B_ULSMAC_C;
      401     1220        %B_USRULS (FPTN=B$ULNK,STCLASS=BASED);
      402     1419        %INCLUDE B$USER;
      403     1635        %B$USERREFS;
      404     1639        %INCLUDE B$ROSEG;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:80   
      405     1702        %INCLUDE B$JIT_C;
      406     2016        %B$JIT0;
      407     2105        %U$JIT1X;
      408     2108        %M$JIT2X;
      409     2111        %F$JIT3X;
      410     2114        %S$JIT4X;
      411     2117        %J$JIT5;
      412     2205        %A$JIT6X;
      413     2208        %SUB B$JIT=B$JIT$->B$JIT;
      414     2209        %INCLUDE MM_DATA_R;
      415     2729        %INCLUDE HF_LOCK_C;
      416     2743        %INCLUDE B_SEGIDS_C;
      417     3282        %SUB B_P=B$P$->B$P;
      418     3283        %EJECT;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:81   
      419     3284    1      PNUM = 0;

   3284  1 000002   200007 450100                    STZ     PNUM,,AUTO

      420     3285    2      DO CASE(WSQ);

   3285  1 000003   200003 470500                    LDP0    @WSQ,,AUTO
         1 000004   000000 235100                    LDA     0,,PR0
         1 000005   000004 135007                    SBLA    4,DL
         1 000006   000003 115007                    CMPA    3,DL
         1 000007   000011 602005 1                  TNC     s:3285+6,AL
         1 000010   000151 710000 1                  TRA     s:3329
         1 000011   000116 710000 1                  TRA     s:3318
         1 000012   000036 710000 1                  TRA     s:3297
         1 000013   000014 710000 1                  TRA     s:3288

      421     3286        /**/
      422     3287    2       CASE(%ASLWSQ);

      423     3288    2         TPTR$=B$ASLLS$;

   3288  1 000014   000000 236000 xsym               LDQ     B$ASLLS$
         1 000015   200005 756100                    STQ     TPTR$,,AUTO

      424     3289    2         I=1;

   3289  1 000016   000001 235007                    LDA     1,DL
         1 000017   200010 755100                    STA     I,,AUTO

      425     3290    2         PNUM=S$CU$->B$U.ASL;

   3290  1 000020   000000 471400 xsym               LDP1    S$CU$
         1 000021   100006 236100                    LDQ     6,,PR1
         1 000022   000777 376007                    ANQ     511,DL
         1 000023   200007 756100                    STQ     PNUM,,AUTO

      426     3291    2         S$CU$->B$U.ASL =0;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:82   

   3291  1 000024   000000 236003                    LDQ     0,DU
         1 000025   100006 552104                    STBQ    6,'04'O,PR1

      427     3292    2         B$ASLLS$->B$ULNK.IS.BOUND = 0;

   3292  1 000026   000000 473400 xsym               LDP3    B$ASLLS$
         1 000027   177777 236007                    LDQ     65535,DL
         1 000030   300000 356100                    ANSQ    0,,PR3

      428     3293    2         B$ASLLS$->B$ULNK.IS.BASE =0;

   3293  1 000031   300001 450100                    STZ     1,,PR3

      429     3294    2         B$USERLS$->B$ULNK.ASLENT.ENTLOC = BITBIN('777777'O);

   3294  1 000032   777777 220003                    LDX0    -1,DU
         1 000033   000000 471400 xsym               LDP1    B$USERLS$
         1 000034   100052 740100                    STX0    42,,PR1
         1 000035   000153 710000 1                  TRA     s:3336

      430     3295        /**/
      431     3296    2       CASE(%DBWSQ);

      432     3297    2         TPTR$=B$DBLS$;

   3297  1 000036   000000 236000 xsym               LDQ     B$DBLS$
         1 000037   200005 756100                    STQ     TPTR$,,AUTO

      433     3298    2         IF (S$CU$->B$U.FLG & %U_DIC)

   3298  1 000040   000000 471400 xsym               LDP1    S$CU$
         1 000041   100000 236100                    LDQ     0,,PR1
         1 000042   000000 376000 0                  ANQ     0
         1 000043   000050 600000 1                  TZE     s:3302

      434     3299    3         THEN DO;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:83   

      435     3300    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_DIC);

   3300  1 000044   000000 236000 0                  LDQ     0
         1 000045   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000046   100000 376100                    ANQ     0,,PR1
         1 000047   100000 756100                    STQ     0,,PR1

      436     3301    3              END;

      437     3302    2         IF CPFLG = 0 THEN RETURN;         /*DONT DISASSOCIATE*/

   3302  1 000050   200004 471500                    LDP1    @CPFLG,,AUTO
         1 000051   100000 235100                    LDA     0,,PR1
         1 000052   000054 601000 1                  TNZ     s:3303

   3302  1 000053   000000 702200 xent               TSX2  ! X66_ARET

      438     3303    2         I=2;

   3303  1 000054   000002 236007                    LDQ     2,DL
         1 000055   200010 756100                    STQ     I,,AUTO

      439     3304
      440     3305    2         PNUM=S$CU$->B$U.DB;

   3305  1 000056   000000 473400 xsym               LDP3    S$CU$
         1 000057   300006 236100                    LDQ     6,,PR3
         1 000060   000011 772000                    QRL     9
         1 000061   000777 376007                    ANQ     511,DL
         1 000062   200007 756100                    STQ     PNUM,,AUTO

      441     3306
      442     3307    2         IF NOT (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#) )

   3307  1 000063   000000 474400 xsym               LDP4    B$JIT$
         1 000064   400315 220100                    LDX0    205,,PR4
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:84   
         1 000065   000003 360003                    ANX0    3,DU
         1 000066   000153 601000 1                  TNZ     s:3336

      443     3308    3         THEN DO;

      444     3309    3              S$CU$->B$U.DB =0;

   3309  1 000067   000000 236003                    LDQ     0,DU
         1 000070   300006 552110                    STBQ    6,'10'O,PR3

      445     3310    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_DELA);

   3310  1 000071   000001 236000 0                  LDQ     1
         1 000072   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000073   300000 376100                    ANQ     0,,PR3
         1 000074   300000 756100                    STQ     0,,PR3

      446     3311    3              B$DBLS$->B$ULNK.IS.BOUND =0;

   3311  1 000075   000000 473400 xsym               LDP3    B$DBLS$
         1 000076   177777 236007                    LDQ     65535,DL
         1 000077   300000 356100                    ANSQ    0,,PR3

      447     3312    3              B$DBLS$->B$ULNK.IS.BASE =0;

   3312  1 000100   300001 450100                    STZ     1,,PR3

      448     3313    3              B$USERLS$->B$ULNK.ECCB.FLGS = (B$USERLS$->B$ULNK.ECCB.FLGS &~ %DSXXX);

   3313  1 000101   000000 475400 xsym               LDP5    B$USERLS$
         1 000102   500034 236100                    LDQ     28,,PR5
         1 000103   000024 736000                    QLS     20
         1 000104   777000 376003                    ANQ     -512,DU
         1 000105   757000 376003                    ANQ     -8704,DU
         1 000106   000024 772000                    QRL     20
         1 000107   500034 676100                    ERQ     28,,PR5
         1 000110   177600 376007                    ANQ     65408,DL
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:85   
         1 000111   500034 656100                    ERSQ    28,,PR5

      449     3314    3              B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_UDELTA#);

   3314  1 000112   400315 220100                    LDX0    205,,PR4
         1 000113   577777 360003                    ANX0    -65537,DU
         1 000114   400315 740100                    STX0    205,,PR4

      450     3315    3              END;

   3315  1 000115   000153 710000 1                  TRA     s:3336

      451     3316        /**/
      452     3317    2       CASE(%CPWSQ);

      453     3318    2         TPTR$=B$CPLS$;

   3318  1 000116   000000 236000 xsym               LDQ     B$CPLS$
         1 000117   200005 756100                    STQ     TPTR$,,AUTO

      454     3319    2         IF (S$CU$->B$U.FLG & %U_CPIC)

   3319  1 000120   000000 471400 xsym               LDP1    S$CU$
         1 000121   100000 236100                    LDQ     0,,PR1
         1 000122   000002 376000 0                  ANQ     2
         1 000123   000142 600000 1                  TZE     s:3325

      455     3320    3         THEN DO;

      456     3321    3              PNUM = S$CU$->B$U.ACP;

   3321  1 000124   100006 236100                    LDQ     6,,PR1
         1 000125   000022 772000                    QRL     18
         1 000126   000777 376007                    ANQ     511,DL
         1 000127   200007 756100                    STQ     PNUM,,AUTO

      457     3322    3              S$CU$->B$U.FLG = (S$CU$->B$U.FLG &~ %U_CPIC);
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:86   

   3322  1 000130   000002 236000 0                  LDQ     2
         1 000131   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000132   100000 376100                    ANQ     0,,PR1
         1 000133   100000 756100                    STQ     0,,PR1

      458     3323    3              IF B$JIT.RUNFLAGS = '0'B THEN B$JIT.RUNFLAGS = %RUN_MON#;

   3323  1 000134   000000 471400 xsym               LDP1    B$JIT$
         1 000135   100314 236100                    LDQ     204,,PR1
         1 000136   777000 316007                    CANQ    -512,DL
         1 000137   000142 601000 1                  TNZ     s:3325

   3323  1 000140   001000 236007                    LDQ     512,DL
         1 000141   100314 552110                    STBQ    204,'10'O,PR1

      459     3324    3              END;

      460     3325    2         IF CPFLG = 0 THEN RETURN;         /*DONT RELEASE CP DATA SEGS           */

   3325  1 000142   200004 471500                    LDP1    @CPFLG,,AUTO
         1 000143   100000 235100                    LDA     0,,PR1
         1 000144   000146 601000 1                  TNZ     s:3326

   3325  1 000145   000000 702200 xent               TSX2  ! X66_ARET

      461     3326    2         I=3;

   3326  1 000146   000003 236007                    LDQ     3,DL
         1 000147   200010 756100                    STQ     I,,AUTO
         1 000150   000153 710000 1                  TRA     s:3336

      462     3327        /**/
      463     3328    2       CASE(ELSE);

      464     3329    2         CALL SC_RNDSPC;

PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:87   
   3329  1 000151   000000 713400 xsym               CLIMB   SC_RNDSPC
         1 000152   000000 600000 xsid               climb   nvectors=         0

      465     3330        /*S*    SCREECH_CODE:  JSA-S$RUNDSPC
      466     3331                TYPE:  SUA
      467     3332                MESSAGE:  JSA$RUNDSPC was called with a bad WSR
      468     3333        */
      469     3334    2         END;                              /* DO CASE(WSQ)                       */

      470     3335           %LOCK (G=J_PLOCK);

   3336  1 000153   000000 630400 2                  EPPR0   0
         1 000154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000155   000000 701000 xent               TSX1    HFC$LOCK
         1 000156   000000 011000                    NOP     0

      471     3338    1      B_P.UC (PNUM) = B_P.UC (PNUM) - 1;

   3338  1 000157   200007 236100                    LDQ     PNUM,,AUTO
         1 000160   000042 402007                    MPY     34,DL
         1 000161   000000 470400 xsym               LDP0    B$P$
         1 000162   000000 620006                    EAX0    0,QL
         1 000163   000001 336007                    LCQ     1,DL
         1 000164   000000 056110                    ASQ     0,X0,PR0

      472     3339           %UNLOCK (G=J_PLOCK);

   3340  1 000165   000000 630400 2                  EPPR0   0
         1 000166   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000167   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000170   000000 011000                    NOP     0

      473     3342        %EJECT;
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:88   
      474     3343        /*
      475     3344               IN CASE THE PROCESSOR HAS ALLOCATED A TCB FROM THE BEGINNING OF DATA
      476     3345               SEGMENT #1, SET ITS TCB DESCRIPTOR NULL, ADD THE SPACE BACK TO
      477     3346               DATA SEGMENT #1, AND THEN FREE ALL PROCESSOR DATA SEGMENTS. THIS IN-
      478     3347               SURES THAT ALL PAGES OWNED BY THE PROCESSOR WILL BE GIVEN BACK.
      479     3348        */
      480     3349    1      B$ROSEG$->B$ROSEG.ECCB(I) = '0'B;

   3349  1 000171   200010 236100                    LDQ     I,,AUTO
         1 000172   000030 402007                    MPY     24,DL
         1 000173   000000 470400 xsym               LDP0    B$ROSEG$
         1 000174   000106 100400                    MLR     fill='000'O
         1 000175   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000176   000024 000030                    ADSC9   20,Q,PR0                 cn=0,n=24

      481     3350    1      IF TPTR$->MM$DESC.FLGS1.NOTEMPTY(BITBIN(%TCBSID & '1777'O))

   3350  1 000177   200005 471500                    LDP1    TPTR$,,AUTO
         1 000200   100036 236100                    LDQ     30,,PR1
         1 000201   000400 316007                    CANQ    256,DL
         1 000202   000232 600000 1                  TZE     s:3375

      482     3351    2      THEN DO;

      483     3352                %GETDBOUND (LS$ = TPTR$ , SEGID = %TCBSID , DBOUND = TCBSIZ);

   3353  1 000203   100036 236100                    LDQ     30,,PR1
         1 000204   000020 772000                    QRL     16
         1 000205   200006 756100                    STQ     TCBSIZ,,AUTO

      484     3355    2           TCBSIZ = TCBSIZ + 1;

   3355  1 000206   200006 054100                    AOS     TCBSIZ,,AUTO

      485     3356                %GETDBASE (DBASE = I , LS$ = TPTR$ , SEGID = %DS1SID);

   3357  1 000207   100011 235100                    LDA     9,,PR1
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:89   
         1 000210   200010 755100                    STA     I,,AUTO

      486     3359                %SETDBASE (DBASE = "I - TCBSIZ" , LS$ = TPTR$, SEGID = %DS1SID);

   3360  1 000211   200010 236100                    LDQ     I,,AUTO
         1 000212   200006 136100                    SBLQ    TCBSIZ,,AUTO
         1 000213   100011 756100                    STQ     9,,PR1

      487     3362                %GETDBOUND (DBOUND = I , LS$ = TPTR$ , SEGID = %DS1SID);

   3363  1 000214   100010 236100                    LDQ     8,,PR1
         1 000215   000020 772000                    QRL     16
         1 000216   200010 756100                    STQ     I,,AUTO

      488     3365                %SETDBOUND (DBOUND = "I + TCBSIZ" , LS$ = TPTR$ , SEGID = %DS1SID);

   3366  1 000217   200006 036100                    ADLQ    TCBSIZ,,AUTO
         1 000220   000020 736000                    QLS     16
         1 000221   100010 676100                    ERQ     8,,PR1
         1 000222   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000223   100010 656100                    ERSQ    8,,PR1

      489     3368                %SETNULL (LS$ = TPTR$ , SEGID = %TCBSID);

   3369  1 000224   000001 236000 2                  LDQ     1
         1 000225   100036 356100                    ANSQ    30,,PR1

   3369  1 000226   177777 236007                    LDQ     65535,DL
         1 000227   100036 356100                    ANSQ    30,,PR1

      490     3371                %SETNOTNULL (LS$ = TPTR$ , SEGID = %DS1SID);

   3372  1 000230   000400 236007                    LDQ     256,DL
         1 000231   100010 256100                    ORSQ    8,,PR1

      491     3374    2           END;

PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:90   
      492     3375    1      CALL JSU$FDSEG(WSQ);                 /* FREE PROCESSORS DATA SEGMENTS      */

   3375  1 000232   200003 630500                    EPPR0   @WSQ,,AUTO
         1 000233   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000234   000000 701000 xent               TSX1    JSU$FDSEG
         1 000235   000000 011000                    NOP     0

      493     3376    1      RETURN;

   3376  1 000236   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   100000 000000   040000 000000   020000 000000                    @... .......

(unnamed)
 Sect OctLoc
   2     000   000000 006000   777777 777377                                    ........
      494     3377    1   END JSA$RUNDSPC;
      495     3378        %EOD;

PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:91   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$RUNDSPC.
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:92   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CPFLG                     3-0-0/w PTR         r     1 @WSQ
    *0-0-0/w UBIN        r     1 CPFLG                     10-0-0/w SBIN        r     1 I
     7-0-0/w SBIN        r     1 PNUM                       6-0-0/w SBIN        r     1 TCBSIZ
     5-0-0/w PTR         r     1 TPTR$                     *0-0-0/w UBIN        r     1 WSQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$ASLLS$                   0-0-0/w PTR         r     1 B$CPLS$
     0-0-0/w PTR         r     1 B$DBLS$                    0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$P$                       0-0-0/w PTR         r     1 B$ROSEG$
     0-0-0/w PTR         r     1 B$USERLS$                  0-0-0/d BIT (72)    r     1 J_PLOCK
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/d STRC(3024)  r     1 B$ROSEG                    0-0-0/d STRC(576)   r     1 B$U
     0-0-0/d STRC(2592)  r     1 B$ULNK
     0-0-0/d STRC(72)    r     1 MM$DESC(0:0)


   Procedure JSA$RUNDSPC requires 159 words for executable code.
   Procedure JSA$RUNDSPC requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:93   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:94   
          MINI XREF LISTING

B$ASLLS$
        21**DCL      3288>>ASSIGN   3292>>ASSIGN   3293>>ASSIGN
B$CPLS$
        23**DCL      3318>>ASSIGN
B$DBLS$
        22**DCL      3297>>ASSIGN   3311>>ASSIGN   3312>>ASSIGN
B$DO.ECCINFO
      1570**DCL      1571--REDEF
B$JIT.ERR.MID
      2023**DCL      2023--REDEF
B$JIT.JUNK
      2139**DCL      3307>>IF       3314<<ASSIGN   3314>>ASSIGN
B$JIT.RUNFLAGS
      2135**DCL      3323>>IF       3323<<ASSIGN
B$JIT$
        25**DCL      2017--IMP-PTR  3307>>IF       3314>>ASSIGN   3314>>ASSIGN   3323>>IF       3323>>ASSIGN
B$P.UC
        36**DCL      3338<<ASSIGN   3338>>ASSIGN
B$P$
        89**DCL      3338>>ASSIGN   3338>>ASSIGN
B$ROSEG.ECCB
      1656**DCL      3349<<ASSIGN
B$ROSEG$
        24**DCL      3349>>ASSIGN
B$U.ACP
      1526**DCL      3321>>ASSIGN
B$U.ASL
      1528**DCL      3290>>ASSIGN   3291<<ASSIGN
B$U.DB
      1527**DCL      3305>>ASSIGN   3309<<ASSIGN
B$U.FLG
      1436**DCL      3298>>IF       3300<<ASSIGN   3300>>ASSIGN   3310<<ASSIGN   3310>>ASSIGN   3319>>IF
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:95   
      3322<<ASSIGN   3322>>ASSIGN
B$U.MISC
      1549**DCL      1550--REDEF
B$ULNK.ASLENT.ENTLOC
      1365**DCL      3294<<ASSIGN
B$ULNK.ECCB.FLGS
      1324**DCL      3313<<ASSIGN   3313>>ASSIGN
B$ULNK.IS.BASE
      1243**DCL      3293<<ASSIGN   3312<<ASSIGN
B$ULNK.IS.BOUND
      1239**DCL      3292<<ASSIGN   3311<<ASSIGN
B$USER.MISC
      1625**DCL      1626--REDEF
B$USERLS$
        20**DCL      3294>>ASSIGN   3313>>ASSIGN   3313>>ASSIGN
CPFLG
        11**DCL         9--PROC     3302>>IF       3325>>IF
HFC$LOCK
      2742**DCL-ENT  3336--CALL
HFC$UNLOCK
      2742**DCL-ENT  3340--CALL
I
        16**DCL      3289<<ASSIGN   3303<<ASSIGN   3326<<ASSIGN   3349>>ASSIGN   3357<<ASSIGN   3360>>ASSIGN
      3363<<ASSIGN   3366>>ASSIGN
JSU$FDSEG
        17**DCL-ENT  3375--CALL
J_PLOCK
        26**DCL      3336<>CALL     3340<>CALL
MM$DESC.BASE
      2682**DCL      3357>>ASSIGN   3360<<ASSIGN
MM$DESC.BOUND
      2680**DCL      2681--REDEF    3353>>ASSIGN   3363>>ASSIGN   3366<<ASSIGN   3369<<ASSIGN
MM$DESC.FLGS
      2681**DCL      2681--REDEF
MM$DESC.FLGS1.NOTEMPTY
      2681**DCL      3350>>IF       3369<<ASSIGN   3372<<ASSIGN
PL6.E3A0      #003=JSA$RUNDSPC File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:43 Page:96   
MM$PPUT.USER#
      2669**DCL      2669--REDEF
MM_BYP$
      2600**DCL      2600--IMP-PTR
PNUM
        15**DCL      3284<<ASSIGN   3290<<ASSIGN   3305<<ASSIGN   3321<<ASSIGN   3338>>ASSIGN   3338>>ASSIGN
S$CU$
      1636**DCL      3290>>ASSIGN   3291>>ASSIGN   3298>>IF       3300>>ASSIGN   3300>>ASSIGN   3305>>ASSIGN
      3309>>ASSIGN   3310>>ASSIGN   3310>>ASSIGN   3319>>IF       3321>>ASSIGN   3322>>ASSIGN   3322>>ASSIGN
SC_RNDSPC
        18**DCL-ENT  3329--CALL
TCBSIZ
        14**DCL      3353<<ASSIGN   3355<<ASSIGN   3355>>ASSIGN   3360>>ASSIGN   3366>>ASSIGN
TPTR$
        13**DCL      3288<<ASSIGN   3297<<ASSIGN   3318<<ASSIGN   3350>>IF       3353>>ASSIGN   3357>>ASSIGN
      3360>>ASSIGN   3363>>ASSIGN   3366>>ASSIGN   3369>>ASSIGN   3369>>ASSIGN   3372>>ASSIGN
WSQ
        10**DCL         9--PROC     3285>>DOCASE   3375<>CALL

PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:97   
      496        1        /*T***********************************************************/
      497        2        /*T*                                                         */
      498        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      499        4        /*T*                                                         */
      500        5        /*T***********************************************************/
      501        6        /*
      502        7        */
      503        8        /*F*   NAME: JSA$QUIT
      504        9               PURPOSE:  To do !q from DELTA or IBEX
      505       10        */
      506       11        JSA$QUIT: PROC;
      507       12        /* EXTERNAL DATA */
      508       13    1   DCL B$JIT$ PTR SYMREF READONLY;
      509       14        %INCLUDE B_MAGIC_C;
      510      132        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      511      225        /* BASED STRUCTURES */
      512      226        %INCLUDE B_MACROS_C;
      513      337        %T01DESCR (NAME=B$$DESCR);
      514      345        %INCLUDE B_ULSMAC_C;
      515     1454        %B_USRULS (FPTN=B$ULNK,STCLASS=BASED);
      516     1653        %INCLUDE UE_CP6;
      517     2344        %B$ECCBI;
      518     2347        %INCLUDE B$JIT_C;
      519     2661        %B$JIT0;
      520     2750        %U$JIT1;
      521     2824        %M$JIT2X;
      522     2827        %F$JIT3X;
      523     2830        %S$JIT4X;
      524     2833        %J$JIT5;
      525     2921        %A$JIT6X;
      526     2924        /*
      527     2925        */
      528     2926        %INCLUDE B$SS;
      529     3105        /**/
      530     3106        /* EXTERNAL PROCEDURES */
      531     3107    1   DCL JSS$BACKSS ENTRY;
      532     3108    1   DCL UDN$MAGIC ENTRY;
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:98   
      533     3109    1   DCL UDN$MAGICLS ENTRY;
      534     3110        /**/
      535     3111        /* STRING SUBSTITUTIONS */
      536     3112        %SUB M$XCON=3;
      537     3113        %SUB B$JIT=B$JIT$->B$JIT;
      538     3114        %SUB B$SS=B_MPT.SS$->B$SS;
      539     3115        %SUB B$ULNK=B_MPT.LS$->B$ULNK;
      540     3116        %SUB B$ECCBI=B_MPT.ECCB$->B$ECCBI;
      541     3117        %INCLUDE B_STRINGS_C;
      542     3246        %INCLUDE J_ERRORS_C;
      543     3333                                                /* TO SET JIT.ERR                     */
      544     3334        %INCLUDE UD_SEV_C;
      545     3348        %INCLUDE J_ERRSET_C;
      546     3368        %SUB FCG#='1223'O;
      547     3369        %SUB MID#='01'O;
      548     3370        %ERRCODE (NAME=EEKEY,COD#=%E$EKEY);
      549     3378        %EJECT;
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:99   
      550     3379        /*  CALLED FROM UEP$PMME ON QUIT FROM DELTA
      551     3380            CALLED FROM JSP$PMME ON YC-QUIT TO CP
      552     3381        */
      553     3382    1      CALL UDN$MAGIC;
      554     3383    2      DO WHILE (B$SS.ISR.WSR ~= %USERWSR);
      555     3384    2           CALL JSS$BACKSS;
      556     3385    2           END;
      557     3386    1      B_MPT.LSDESC$->B$$DESCR=B$SS.LSR;
      558     3387    1      CALL UDN$MAGICLS;
      559     3388
      560     3389    1      IF (B$ULNK.ECCB.FLGS & %DSXXX)
      561     3390    2      THEN DO;
      562     3391    2           B$ECCBI.FLAGS(M$XCON) = '0'B;
      563     3392    2           B$ECCBI.ECIC(M$XCON) = 0;
      564     3393    2           B$ULNK.ECCB.FLGS = (B$ULNK.ECCB.FLGS &~ %DSXXX);
      565     3394    2           B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_UDELTA#);
      566     3395    2           B$JIT.JUNK = (B$JIT.JUNK | %JJ_SCCSET#);
      567     3396    2           END;
      568     3397                                                /*                                    */
      569     3398        /* CALLED FROM JSP$PMME ON M$YC QUIT
      570     3399        */
      571     3400    1   JSA$CPQUIT: ENTRY;
      572     3401    1      B$JIT.XCONF = (B$JIT.XCONF | %XC_QUIT#);
      573     3402    1      B$JIT.ERR=EEKEY;
      574     3403    1      B$JIT.RNST = (B$JIT.RNST | %RS_EKEY#);
      575     3404    1      B$JIT.SVLDTF='000'O;
      576     3405        /*E*  ERROR: JSA-E$EKEY-E
      577     3406              MESSAGE: Job errored by the user. (!QUIT)
      578     3407        */
      579     3408    1      RETURN;
      580     3409    1   END JSA$QUIT;
      581     3410        %EOD;

PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:100  
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSA$QUIT.

   Procedure JSA$QUIT requires 69 words for executable code.
   Procedure JSA$QUIT requires 4 words of local(AUTO) storage.

PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:101  

 Object Unit name= JSA$QUIT                                   File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:43:59.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  JSA$QUIT
    1   Proc  even  none    69    105  JSA$QUIT
    2  RoData even  none     1      1  JSA$QUIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  JSA$QUIT
     1     65                  yes      Std        0  JSA$CPQUIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 UDN$MAGIC
         yes           Std       0 JSS$BACKSS
         yes           Std       0 UDN$MAGICLS
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:102  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                B_MPT                                 B_VECTNIL
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:103  


      496        1        /*T***********************************************************/
      497        2        /*T*                                                         */
      498        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      499        4        /*T*                                                         */
      500        5        /*T***********************************************************/
      501        6        /*
      502        7        */
      503        8        /*F*   NAME: JSA$QUIT
      504        9               PURPOSE:  To do !q from DELTA or IBEX
      505       10        */
      506       11        JSA$QUIT: PROC;

     11  1 000000   000000 700200 xent  JSA$QUIT     TSX0  ! X66_AUTO_0
         1 000001   000004 000000                    ZERO    4,0

      507       12        /* EXTERNAL DATA */
      508       13    1   DCL B$JIT$ PTR SYMREF READONLY;
      509       14        %INCLUDE B_MAGIC_C;
      510      132        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
      511      225        /* BASED STRUCTURES */
      512      226        %INCLUDE B_MACROS_C;
      513      337        %T01DESCR (NAME=B$$DESCR);
      514      345        %INCLUDE B_ULSMAC_C;
      515     1454        %B_USRULS (FPTN=B$ULNK,STCLASS=BASED);
      516     1653        %INCLUDE UE_CP6;
      517     2344        %B$ECCBI;
      518     2347        %INCLUDE B$JIT_C;
      519     2661        %B$JIT0;
      520     2750        %U$JIT1;
      521     2824        %M$JIT2X;
      522     2827        %F$JIT3X;
      523     2830        %S$JIT4X;
      524     2833        %J$JIT5;
      525     2921        %A$JIT6X;
      526     2924        /*
      527     2925        */
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:104  
      528     2926        %INCLUDE B$SS;
      529     3105        /**/
      530     3106        /* EXTERNAL PROCEDURES */
      531     3107    1   DCL JSS$BACKSS ENTRY;
      532     3108    1   DCL UDN$MAGIC ENTRY;
      533     3109    1   DCL UDN$MAGICLS ENTRY;
      534     3110        /**/
      535     3111        /* STRING SUBSTITUTIONS */
      536     3112        %SUB M$XCON=3;
      537     3113        %SUB B$JIT=B$JIT$->B$JIT;
      538     3114        %SUB B$SS=B_MPT.SS$->B$SS;
      539     3115        %SUB B$ULNK=B_MPT.LS$->B$ULNK;
      540     3116        %SUB B$ECCBI=B_MPT.ECCB$->B$ECCBI;
      541     3117        %INCLUDE B_STRINGS_C;
      542     3246        %INCLUDE J_ERRORS_C;
      543     3333                                                /* TO SET JIT.ERR                     */
      544     3334        %INCLUDE UD_SEV_C;
      545     3348        %INCLUDE J_ERRSET_C;
      546     3368        %SUB FCG#='1223'O;
      547     3369        %SUB MID#='01'O;
      548     3370        %ERRCODE (NAME=EEKEY,COD#=%E$EKEY);
      549     3378        %EJECT;
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:105  
      550     3379        /*  CALLED FROM UEP$PMME ON QUIT FROM DELTA
      551     3380            CALLED FROM JSP$PMME ON YC-QUIT TO CP
      552     3381        */
      553     3382    1      CALL UDN$MAGIC;

   3382  1 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000003   000000 701000 xent               TSX1    UDN$MAGIC
         1 000004   000000 011000                    NOP     0

      554     3383    2      DO WHILE (B$SS.ISR.WSR ~= %USERWSR);

   3383  1 000005   000000 470400 xsym               LDP0    B_MPT
         1 000006   000010 236100                    LDQ     8,,PR0
         1 000007   000160 376007                    ANQ     112,DL
         1 000010   000160 116007                    CMPQ    112,DL
         1 000011   000022 600000 1                  TZE     s:3386

      555     3384    2           CALL JSS$BACKSS;

   3384  1 000012   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000013   000000 701000 xent               TSX1    JSS$BACKSS
         1 000014   000000 011000                    NOP     0

      556     3385    2           END;

   3385  1 000015   000000 470400 xsym               LDP0    B_MPT
         1 000016   000010 236100                    LDQ     8,,PR0
         1 000017   000160 376007                    ANQ     112,DL
         1 000020   000160 116007                    CMPQ    112,DL
         1 000021   000012 601000 1                  TNZ     s:3384

      557     3386    1      B_MPT.LSDESC$->B$$DESCR=B$SS.LSR;

   3386  1 000022   000007 471400 xsym               LDP1    B_MPT+7
         1 000023   000014 237100                    LDAQ    12,,PR0
         1 000024   100000 755100                    STA     0,,PR1
         1 000025   100001 756100                    STQ     1,,PR1
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:106  

      558     3387    1      CALL UDN$MAGICLS;

   3387  1 000026   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000027   000000 701000 xent               TSX1    UDN$MAGICLS
         1 000030   000000 011000                    NOP     0

      559     3388
      560     3389    1      IF (B$ULNK.ECCB.FLGS & %DSXXX)

   3389  1 000031   000001 470400 xsym               LDP0    B_MPT+1
         1 000032   000034 236100                    LDQ     28,,PR0
         1 000033   000024 736000                    QLS     20
         1 000034   777000 376003                    ANQ     -512,DU
         1 000035   020000 376003                    ANQ     8192,DU
         1 000036   000064 600000 1                  TZE     s:3396

      561     3390    2      THEN DO;

      562     3391    2           B$ECCBI.FLAGS(M$XCON) = '0'B;

   3391  1 000037   000005 471400 xsym               LDP1    B_MPT+5
         1 000040   000000 236000 2                  LDQ     0
         1 000041   100004 356100                    ANSQ    4,,PR1

      563     3392    2           B$ECCBI.ECIC(M$XCON) = 0;

   3392  1 000042   000000 220003                    LDX0    0,DU
         1 000043   000005 471400 xsym               LDP1    B_MPT+5
         1 000044   100001 440100                    SXL0    1,,PR1

      564     3393    2           B$ULNK.ECCB.FLGS = (B$ULNK.ECCB.FLGS &~ %DSXXX);

   3393  1 000045   000001 470400 xsym               LDP0    B_MPT+1
         1 000046   000034 236100                    LDQ     28,,PR0
         1 000047   000024 736000                    QLS     20
         1 000050   777000 376003                    ANQ     -512,DU
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:107  
         1 000051   757000 376003                    ANQ     -8704,DU
         1 000052   000024 772000                    QRL     20
         1 000053   000034 676100                    ERQ     28,,PR0
         1 000054   177600 376007                    ANQ     65408,DL
         1 000055   000034 656100                    ERSQ    28,,PR0

      565     3394    2           B$JIT.JUNK=(B$JIT.JUNK &~ %JJ_UDELTA#);

   3394  1 000056   000000 471400 xsym               LDP1    B$JIT$
         1 000057   100315 221100                    LDX1    205,,PR1
         1 000060   577777 361003                    ANX1    -65537,DU
         1 000061   100315 741100                    STX1    205,,PR1

      566     3395    2           B$JIT.JUNK = (B$JIT.JUNK | %JJ_SCCSET#);

   3395  1 000062   000040 261003                    ORX1    32,DU
         1 000063   100315 741100                    STX1    205,,PR1

      567     3396    2           END;

   3396  1 000064   000067 710000 1                  TRA     s:3401

      568     3397                                                /*                                    */
      569     3398        /* CALLED FROM JSP$PMME ON M$YC QUIT
      570     3399        */
      571     3400    1   JSA$CPQUIT: ENTRY;

   3400  1 000065   000000 700200 xent  JSA$CPQUIT   TSX0  ! X66_AUTO_0
         1 000066   000004 000000                    ZERO    4,0

      572     3401    1      B$JIT.XCONF = (B$JIT.XCONF | %XC_QUIT#);

   3401  1 000067   000000 470400 xsym               LDP0    B$JIT$
         1 000070   000316 236100                    LDQ     206,,PR0
         1 000071   777000 376003                    ANQ     -512,DU
         1 000072   001000 276003                    ORQ     512,DU
         1 000073   000316 552140                    STBQ    206,'40'O,PR0
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:108  

      573     3402    1      B$JIT.ERR=EEKEY;

   3402  1 000074   000000 236000 0                  LDQ     EEKEY
         1 000075   000012 756100                    STQ     10,,PR0

      574     3403    1      B$JIT.RNST = (B$JIT.RNST | %RS_EKEY#);

   3403  1 000076   000314 236100                    LDQ     204,,PR0
         1 000077   777000 376003                    ANQ     -512,DU
         1 000100   020000 276003                    ORQ     8192,DU
         1 000101   000314 552140                    STBQ    204,'40'O,PR0

      575     3404    1      B$JIT.SVLDTF='000'O;

   3404  1 000102   000000 236003                    LDQ     0,DU
         1 000103   000316 552104                    STBQ    206,'04'O,PR0

      576     3405        /*E*  ERROR: JSA-E$EKEY-E
      577     3406              MESSAGE: Job errored by the user. (!QUIT)
      578     3407        */
      579     3408    1      RETURN;

   3408  1 000104   000000 702200 xent               TSX2  ! X66_ARET

EEKEY
 Sect OctLoc
   0     000   122301 403744                                                    R...

(unnamed)
 Sect OctLoc
   2     000   737777 777777                                                    ....
      580     3409    1   END JSA$QUIT;
      581     3410        %EOD;

PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:109  
--  Include file information  --

   J_ERRSET_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   UE_CP6.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSA$QUIT.
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:110  

 **** Variables and constants ****

  ****  Section 000 RoData JSA$QUIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 EEKEY

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(432)   r     1 B_MPT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(72)    r     1 B$$DESCR                   0-0-0/w STRC(180)   r     1 B$ECCBI
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d STRC(2592)  r     1 B$ULNK


   Procedure JSA$QUIT requires 69 words for executable code.
   Procedure JSA$QUIT requires 4 words of local(AUTO) storage.
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:111  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:112  
          MINI XREF LISTING

B$$DESCR
       338**DCL      3386<<ASSIGN
B$ECCBI.ECIC
      2345**DCL      3392<<ASSIGN
B$ECCBI.FLAGS
      2345**DCL      3391<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      2761**DCL      2761--REDEF
B$JIT.ERR
      2667**DCL      3402<<ASSIGN
B$JIT.ERR.MID
      2668**DCL      2668--REDEF
B$JIT.JUNK
      2855**DCL      3394<<ASSIGN   3394>>ASSIGN   3395<<ASSIGN   3395>>ASSIGN
B$JIT.RNST
      2834**DCL      3403<<ASSIGN   3403>>ASSIGN
B$JIT.SVLDTF
      2896**DCL      3404<<ASSIGN
B$JIT.XCONF
      2876**DCL      3401<<ASSIGN   3401>>ASSIGN
B$JIT$
        13**DCL      2662--IMP-PTR  3394>>ASSIGN   3394>>ASSIGN   3395>>ASSIGN   3395>>ASSIGN   3401>>ASSIGN
      3401>>ASSIGN   3402>>ASSIGN   3403>>ASSIGN   3403>>ASSIGN   3404>>ASSIGN
B$SS.ISR.WSR
      2983**DCL      3383>>DOWHILE
B$SS.LSR
      2992**DCL      3386>>ASSIGN
B$SS.RVA
      2978**DCL      2979--REDEF
B$ULNK.ECCB.FLGS
      1558**DCL      3389>>IF       3393<<ASSIGN   3393>>ASSIGN
B_MPT.AS
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:113  
       168**DCL       171--REDEF
B_MPT.ASDESC
       200**DCL       204--REDEF
B_MPT.ECCB
       183**DCL       186--REDEF
B_MPT.ECCB$
       186**DCL      3391>>ASSIGN   3392>>ASSIGN
B_MPT.ECCBDESC
       218**DCL       222--REDEF
B_MPT.LS
       163**DCL       166--REDEF
B_MPT.LS$
       166**DCL      3389>>IF       3393>>ASSIGN   3393>>ASSIGN
B_MPT.LSDESC
       194**DCL       198--REDEF
B_MPT.LSDESC$
       198**DCL      3386>>ASSIGN
B_MPT.PS
       173**DCL       176--REDEF
B_MPT.PSDESC
       206**DCL       210--REDEF
B_MPT.SS
       158**DCL       161--REDEF
B_MPT.SS$
       161**DCL      3383>>DOWHILE  3386>>ASSIGN
B_MPT.SSDESC
       188**DCL       192--REDEF
B_MPT.TCB
       178**DCL       181--REDEF
B_MPT.TCBDESC
       212**DCL       216--REDEF
EEKEY
      3371**DCL      3402>>ASSIGN
JSS$BACKSS
      3107**DCL-ENT  3384--CALL
UDN$MAGIC
PL6.E3A0      #004=JSA$QUIT File=JSA$UTIL.:E05TSI                                TUE 07/29/97 23:43 Page:114  
      3108**DCL-ENT  3382--CALL
UDN$MAGICLS
      3109**DCL-ENT  3387--CALL

PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:115  
      582        1        /*T***********************************************************/
      583        2        /*T*                                                         */
      584        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      585        4        /*T*                                                         */
      586        5        /*T***********************************************************/
      587        6
      588        7        /*F*   NAME:   JSA$FINDSSP                                        */
      589        8        /*F*   PURPOSE: To find a processor in the processor tables,       */
      590        9        /*,*           verify its type, and return its processor number.   */
      591       10        /*
      592       11           The following procedure will search for a processor with the
      593       12           desired NAME and ACCOUNT, and will return its index into the
      594       13           processor tables, if present.  Optionally, it will also verify and/or
      595       14           return the processor type.  The ALTRETURN will be taken and PNUM will be set
      596       15           to zero if the processor is not present or is not of the desired
      597       16           type.
      598       17        FINDSSP has no effect on J_PLOCK. FINDAUTO locks it and leaves it
      599       18        locked when it leaves. INSERTPROC is entered locked and unlocks before
      600       19        leaving.
      601       20        */
      602       21
      603       22        JSA$FINDSSP: PROC(PNAME$,PACCT$,PROC_NUM,PTYPE,ERR) ALTRET;
      604       23    1   DCL PNAME$ PTR;
      605       24    1   DCL PACCT$ PTR;
      606       25    1   DCL PTYPE BIT(18)  ALIGNED;             /* Corresponds to flags in B$P.FLGS   */
      607       26    1   DCL PROC_NUM UBIN;
      608       27    1   DCL ERR BIT(36) ALIGNED;
      609       28
      610       29    1   DCL SAVE_TYPE BIT(18);
      611       30    1   DCL I SBIN;
      612       31    1   DCL MID SBIN;
      613       32    1   DCL LAST SBIN;
      614       33    1   DCL N SBIN;
      615       34    1   DCL ENTRY_TYPE BIT(1);
      616       35    1   DCL RELATION BIT(1);
      617       36    1   DCL PN CHAR(31);
      618       37    1   DCL P$ PTR;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:116  
      619       38
      620       39    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      621       40    1   DCL S$CU$ SYMREF PTR;
      622       41
      623       42    1   DCL 1 B$TEXTC BASED,
      624       43    1         2 SIZ UBIN(9) UNAL,
      625       44    1         2 TEXT CHAR(B$TEXTC.SIZ);
      626       45
      627       46    1   DCL B$DWTXT CHAR(8) BASED ALIGNED;
      628       47        %INCLUDE B$P;
      629      131
      630      132        %SUB B$LOOKUP=B$LOOKUP$->B$LOOKUP;
      631      133
      632      134    1   DCL FMR$SLIDE ENTRY(3);
      633      135
      634      136                                                /* TO SET JIT.ERR                     */
      635      137        %INCLUDE UD_SEV_C;
      636      151        %INCLUDE J_ERRORS_C;
      637      238        %INCLUDE J_ERRSET_C;
      638      258        %INCLUDE HF_LOCK_C;
      639      272        %INCLUDE B$USER;
      640      488        %SUB FCG#='1223'O;
      641      489        %SUB MID#='01'O;
      642      490        %ERRCODE (NAME=ENOPROC,COD#=%E$NOPROC);
      643      498
      644      499        %EQU FIND = '0'B;
      645      500        %EQU INSERT = '1'B;
      646      501        %EQU LESS = '0'B;
      647      502        %EQU GREATER='1'B;
      648      503        %EJECT;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:117  
      649      504
      650      505    1      IF PNAME$->B$TEXTC.SIZ=0
      651      506    2      THEN DO;
      652      507    2   SETE:   ERR = ENOPROC;
      653      508    2           ALTRETURN;
      654      509    2           END;
      655      510    1      PN = PNAME$ -> B$TEXTC.TEXT;
      656      511        /* Look in the special shared
      657      512           area of the shared program tables.                              */
      658      513    1      P$ = ADDR(B$P$->B$P(1));
      659      514    2      DO N = 1 TO P_NPROCS;
      660      515    2           IF PN = P$->B$P.NAME.TEXT(0) AND
      661      516    2             (NOT (P$->B$P.FLGS(0) & %P_OLDPROC) OR N=S$CU$->B$U.ACP)
      662      517    3           THEN DO;
      663      518    3                IF NOT PTYPE
      664      519    4                THEN DO;
      665      520    4   SETP:             PTYPE = P$ -> B$P.FLGS(0) &(%P_CP|%P_ASL|%P_LIB|%P_DB);
      666      521    4                     PROC_NUM = N;
      667      522    4                     RETURN;
      668      523    4                     END;
      669      524    3                ELSE IF PTYPE & P$ -> B$P.FLGS(0)
      670      525    3                     THEN GOTO SETP;
      671      526    3                     ELSE GOTO SETE;
      672      527    3                END;
      673      528    2           P$ = PINCRW ( P$ , SIZEW(B$P(0)));
      674      529    2           END;
      675      530    1      GOTO SETE;
      676      531
      677      532        %EJECT;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:118  
      678      533    1   JSA$FINDAUTO: ENTRY (PNAME$ , PACCT$ , PROC_NUM , PTYPE,ERR) ALTRET;
      679      534    1      ENTRY_TYPE = %FIND;
      680      535           %LOCK (G = J_PLOCK);
      681      538    1      GOTO COMMON;
      682      539    1   JSA$INSERTPROC: ENTRY(PNAME$,PACCT$,PROC_NUM,PTYPE,ERR) ALTRET;
      683      540    1      ENTRY_TYPE = %INSERT;
      684      541
      685      542    1   COMMON: PN = PNAME$ -> B$TEXTC.TEXT;
      686      543        /* First, perform the binary search, but remember the nature of the
      687      544           final relationship if it is not "equals".                       */
      688      545    1   BINSCH:
      689      546    1      I = P_AUTO_START;
      690      547    1      MID = I;
      691      548    1      RELATION = %LESS;
      692      549    1      LAST = I + B$LOOKUP (1) -1;
      693      550    2      DO WHILE (LAST >= I);
      694      551    2           MID = (I + LAST)/2;
      695      552    2           N = B$LOOKUP(MID);
      696      553    2           P$ = ADDR (B$P$->B$P(N));
      697      554    2           IF P$ -> B$P.NAME.TEXT(0) = PN
      698      555    2           THEN IF P$ -> B$P.ACCT(0) = PACCT$->B$DWTXT
      699      556    2                THEN GOTO FOUND_PROC;
      700      557    2                ELSE IF P$ -> B$P.ACCT(0) < PACCT$->B$DWTXT
      701      558    3                     THEN DO;              /* Target is greater                  */
      702      559    3                          RELATION = %GREATER;
      703      560    3                          I = MID + 1;
      704      561    3                          END;
      705      562    3                     ELSE DO;              /* Target is less                     */
      706      563    3                          RELATION = %LESS;
      707      564    3                          LAST = MID - 1;
      708      565    3                          END;
      709      566    2           ELSE IF P$ -> B$P.NAME.TEXT(0) < PN
      710      567    3                THEN DO;                   /* Target is greater                  */
      711      568    3                     RELATION = %GREATER;
      712      569    3                     I = MID + 1;
      713      570    3                     END;
      714      571    3                ELSE DO;                   /* Target is less                     */
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:119  
      715      572    3                     RELATION = %LESS;
      716      573    3                     LAST = MID - 1;
      717      574    3                     END;
      718      575    2           END;
      719      576    1      IF ENTRY_TYPE = %FIND
      720      577    2      THEN DO;
      721      578    2   PROC_NOT_FOUND: ;
      722      579    2           ALTRETURN;
      723      580    2           END;
      724      581        /*E*   ERROR:   JSA-E$NOPROC-E
      725      582               MESSAGE:  That Special Shared Processor doesn't exist.
      726      583        */
      727      584    2      ELSE DO;                   /* Insert the new entry by moving other stuff   */
      728      585    2           IF RELATION = %GREATER
      729      586    2           THEN MID = MID + 1;             /* Make sure we move the right stuff  */
      730      587    2           I = B$LOOKUP (1) + P_AUTO_START - MID;
      731      588    2           IF I > 0 THEN CALL FMR$SLIDE(ADDR(B$LOOKUP(MID)),1,I);
      732      589    2           B$LOOKUP (1) = B$LOOKUP (1) + 1;
      733      590    2           P_MAX_LOOKUP = B$LOOKUP (1);
      734      591                 /* N.B.: B$LOOKUP(1) is used as the actual working copy
      735      592                          of P_MAX_LOOKUP because of bypass cache.
      736      593                          P_MAX_LOOKUP is also maintained for looking only.*/
      737      594    2           GOTO SETX;
      738      595    2           END;
      739      596
      740      597
      741      598    1   FOUND_PROC: ;
      742      599    1      IF ENTRY_TYPE = %INSERT
      743      600    2      THEN DO;
      744      601    2   SETX:   B$LOOKUP (MID) = PROC_NUM;
      745      602                            /* If there was an old one there, hookup the real one.*/
      746      603                %UNLOCK (G = J_PLOCK);
      747      606    2           RETURN;
      748      607    2           END;
      749      608    1      PROC_NUM = N;
      750      609
      751      610    1      RETURN;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:120  
      752      611    1   END JSA$FINDSSP;
      753      612        %EOD;

PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:121  
--  Include file information  --

   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$FINDSSP.

   Procedure JSA$FINDSSP requires 193 words for executable code.
   Procedure JSA$FINDSSP requires 28 words of local(AUTO) storage.

PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:122  

 Object Unit name= JSA$FINDSSP                                File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:44:21.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  JSA$FINDSSP
    1   Proc  even  none   193    301  JSA$FINDSSP
    2  RoData even  none     2      2  JSA$FINDSSP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        5  JSA$FINDSSP
     1    102          yes     yes      Std        5  JSA$FINDAUTO
     1    112          yes     yes      Std        5  JSA$INSERTPROC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       3 FMR$SLIDE
         yes           Std       1 HFC$UNLOCK
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:123  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     J_PLOCK                               S$CU$                                 P_NPROCS
     P_AUTO_START                          P_MAX_LOOKUP                          B$P$
     B$LOOKUP$                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:124  


      582        1        /*T***********************************************************/
      583        2        /*T*                                                         */
      584        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      585        4        /*T*                                                         */
      586        5        /*T***********************************************************/
      587        6
      588        7        /*F*   NAME:   JSA$FINDSSP                                        */
      589        8        /*F*   PURPOSE: To find a processor in the processor tables,       */
      590        9        /*,*           verify its type, and return its processor number.   */
      591       10        /*
      592       11           The following procedure will search for a processor with the
      593       12           desired NAME and ACCOUNT, and will return its index into the
      594       13           processor tables, if present.  Optionally, it will also verify and/or
      595       14           return the processor type.  The ALTRETURN will be taken and PNUM will be set
      596       15           to zero if the processor is not present or is not of the desired
      597       16           type.
      598       17        FINDSSP has no effect on J_PLOCK. FINDAUTO locks it and leaves it
      599       18        locked when it leaves. INSERTPROC is entered locked and unlocks before
      600       19        leaving.
      601       20        */
      602       21
      603       22        JSA$FINDSSP: PROC(PNAME$,PACCT$,PROC_NUM,PTYPE,ERR) ALTRET;

     22  1 000000   000000 700200 xent  JSA$FINDSSP  TSX0  ! X66_AUTO_5
         1 000001   000034 000005                    ZERO    28,5

      604       23    1   DCL PNAME$ PTR;
      605       24    1   DCL PACCT$ PTR;
      606       25    1   DCL PTYPE BIT(18)  ALIGNED;             /* Corresponds to flags in B$P.FLGS   */
      607       26    1   DCL PROC_NUM UBIN;
      608       27    1   DCL ERR BIT(36) ALIGNED;
      609       28
      610       29    1   DCL SAVE_TYPE BIT(18);
      611       30    1   DCL I SBIN;
      612       31    1   DCL MID SBIN;
      613       32    1   DCL LAST SBIN;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:125  
      614       33    1   DCL N SBIN;
      615       34    1   DCL ENTRY_TYPE BIT(1);
      616       35    1   DCL RELATION BIT(1);
      617       36    1   DCL PN CHAR(31);
      618       37    1   DCL P$ PTR;
      619       38
      620       39    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      621       40    1   DCL S$CU$ SYMREF PTR;
      622       41
      623       42    1   DCL 1 B$TEXTC BASED,
      624       43    1         2 SIZ UBIN(9) UNAL,
      625       44    1         2 TEXT CHAR(B$TEXTC.SIZ);
      626       45
      627       46    1   DCL B$DWTXT CHAR(8) BASED ALIGNED;
      628       47        %INCLUDE B$P;
      629      131
      630      132        %SUB B$LOOKUP=B$LOOKUP$->B$LOOKUP;
      631      133
      632      134    1   DCL FMR$SLIDE ENTRY(3);
      633      135
      634      136                                                /* TO SET JIT.ERR                     */
      635      137        %INCLUDE UD_SEV_C;
      636      151        %INCLUDE J_ERRORS_C;
      637      238        %INCLUDE J_ERRSET_C;
      638      258        %INCLUDE HF_LOCK_C;
      639      272        %INCLUDE B$USER;
      640      488        %SUB FCG#='1223'O;
      641      489        %SUB MID#='01'O;
      642      490        %ERRCODE (NAME=ENOPROC,COD#=%E$NOPROC);
      643      498
      644      499        %EQU FIND = '0'B;
      645      500        %EQU INSERT = '1'B;
      646      501        %EQU LESS = '0'B;
      647      502        %EQU GREATER='1'B;
      648      503        %EJECT;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:126  
      649      504
      650      505    1      IF PNAME$->B$TEXTC.SIZ=0

    505  1 000002   200003 470500                    LDP0    @PNAME$,,AUTO
         1 000003   000000 471500                    LDP1    0,,PR0
         1 000004   000100 101500                    MRL     fill='000'O
         1 000005   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000006   200030 000004                    ADSC9   P$+1,,AUTO               cn=0,n=4
         1 000007   200030 236100                    LDQ     P$+1,,AUTO
         1 000010   000000 116003                    CMPQ    0,DU
         1 000011   000016 601000 1                  TNZ     s:510

      651      506    2      THEN DO;

      652      507    2   SETE:   ERR = ENOPROC;

    507  1 000012   000000 236000 0     SETE         LDQ     ENOPROC
         1 000013   200007 470500                    LDP0    @ERR,,AUTO
         1 000014   000000 756100                    STQ     0,,PR0

      653      508    2           ALTRETURN;

    508  1 000015   000000 702200 xent               TSX2  ! X66_AALT

      654      509    2           END;
      655      510    1      PN = PNAME$ -> B$TEXTC.TEXT;

    510  1 000016   000000 471500                    LDP1    0,,PR0
         1 000017   000100 101500                    MRL     fill='000'O
         1 000020   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000021   200030 000002                    ADSC9   P$+1,,AUTO               cn=0,n=2
         1 000022   200030 220100                    LDX0    P$+1,,AUTO
         1 000023   040100 100540                    MLR     fill='040'O
         1 000024   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000025   200017 000037                    ADSC9   PN,,AUTO                 cn=0,n=31

      656      511        /* Look in the special shared
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:127  
      657      512           area of the shared program tables.                              */
      658      513    1      P$ = ADDR(B$P$->B$P(1));

    513  1 000026   000000 236000 xsym               LDQ     B$P$
         1 000027   000042 036003                    ADLQ    34,DU
         1 000030   200027 756100                    STQ     P$,,AUTO

      659      514    2      DO N = 1 TO P_NPROCS;

    514  1 000031   000001 235007                    LDA     1,DL
         1 000032   200014 755100                    STA     N,,AUTO
         1 000033   000075 710000 1                  TRA     s:529+1

      660      515    2           IF PN = P$->B$P.NAME.TEXT(0) AND

    515  1 000034   200027 470500                    LDP0    P$,,AUTO
         1 000035   040100 106500                    CMPC    fill='040'O
         1 000036   200017 000037                    ADSC9   PN,,AUTO                 cn=0,n=31
         1 000037   000032 200037                    ADSC9   26,,PR0                  cn=1,n=31
         1 000040   000071 601000 1                  TNZ     s:528
         1 000041   000027 220100                    LDX0    23,,PR0
         1 000042   001000 360003                    ANX0    512,DU
         1 000043   000052 600000 1                  TZE     s:518
         1 000044   000000 471400 xsym               LDP1    S$CU$
         1 000045   100006 236100                    LDQ     6,,PR1
         1 000046   000022 772000                    QRL     18
         1 000047   000777 376007                    ANQ     511,DL
         1 000050   200014 116100                    CMPQ    N,,AUTO
         1 000051   000071 601000 1                  TNZ     s:528

      661      516    2             (NOT (P$->B$P.FLGS(0) & %P_OLDPROC) OR N=S$CU$->B$U.ACP)
      662      517    3           THEN DO;

      663      518    3                IF NOT PTYPE

    518  1 000052   200006 471500                    LDP1    @PTYPE,,AUTO
         1 000053   100000 220100                    LDX0    0,,PR1
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:128  
         1 000054   000066 601000 1                  TNZ     s:524

      664      519    4                THEN DO;

      665      520    4   SETP:             PTYPE = P$ -> B$P.FLGS(0) &(%P_CP|%P_ASL|%P_LIB|%P_DB);

    520  1 000055   200027 470500       SETP         LDP0    P$,,AUTO
         1 000056   000027 220100                    LDX0    23,,PR0
         1 000057   720000 360003                    ANX0    -24576,DU
         1 000060   200006 471500                    LDP1    @PTYPE,,AUTO
         1 000061   100000 740100                    STX0    0,,PR1

      666      521    4                     PROC_NUM = N;

    521  1 000062   200014 235100                    LDA     N,,AUTO
         1 000063   200005 473500                    LDP3    @PROC_NUM,,AUTO
         1 000064   300000 755100                    STA     0,,PR3

      667      522    4                     RETURN;

    522  1 000065   000000 702200 xent               TSX2  ! X66_ARET

      668      523    4                     END;
      669      524    3                ELSE IF PTYPE & P$ -> B$P.FLGS(0)

    524  1 000066   000027 360100                    ANX0    23,,PR0
         1 000067   000055 601000 1                  TNZ     SETP

      670      525    3                     THEN GOTO SETP;
      671      526    3                     ELSE GOTO SETE;

    526  1 000070   000012 710000 1                  TRA     SETE

      672      527    3                END;
      673      528    2           P$ = PINCRW ( P$ , SIZEW(B$P(0)));

    528  1 000071   200027 236100                    LDQ     P$,,AUTO
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:129  
         1 000072   000042 036003                    ADLQ    34,DU
         1 000073   200027 756100                    STQ     P$,,AUTO

      674      529    2           END;

    529  1 000074   200014 054100                    AOS     N,,AUTO
         1 000075   000000 236000 xsym               LDQ     P_NPROCS
         1 000076   000034 604000 1                  TMI     s:515
         1 000077   200014 116100                    CMPQ    N,,AUTO
         1 000100   000034 605000 1                  TPL     s:515

      675      530    1      GOTO SETE;

    530  1 000101   000012 710000 1                  TRA     SETE

      676      531
      677      532        %EJECT;
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:130  
      678      533    1   JSA$FINDAUTO: ENTRY (PNAME$ , PACCT$ , PROC_NUM , PTYPE,ERR) ALTRET;

    533  1 000102   000000 700200 xent  JSA$FINDAUTO TSX0  ! X66_AUTO_5
         1 000103   000034 000005                    ZERO    28,5

      679      534    1      ENTRY_TYPE = %FIND;

    534  1 000104   200015 450100                    STZ     ENTRY_TYPE,,AUTO

      680      535           %LOCK (G = J_PLOCK);

    536  1 000105   000000 630400 2                  EPPR0   0
         1 000106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000107   000000 701000 xent               TSX1    HFC$LOCK
         1 000110   000000 011000                    NOP     0

      681      538    1      GOTO COMMON;

    538  1 000111   000116 710000 1                  TRA     COMMON

      682      539    1   JSA$INSERTPROC: ENTRY(PNAME$,PACCT$,PROC_NUM,PTYPE,ERR) ALTRET;

    539  1 000112   000000 700200 xent  JSA$INSERTP* TSX0  ! X66_AUTO_5
         1 000113   000034 000005                    ZERO    28,5

      683      540    1      ENTRY_TYPE = %INSERT;

    540  1 000114   400000 236003                    LDQ     -131072,DU
         1 000115   200015 756100                    STQ     ENTRY_TYPE,,AUTO

      684      541
      685      542    1   COMMON: PN = PNAME$ -> B$TEXTC.TEXT;

    542  1 000116   200003 470500       COMMON       LDP0    @PNAME$,,AUTO
         1 000117   000000 471500                    LDP1    0,,PR0
         1 000120   000100 101500                    MRL     fill='000'O
         1 000121   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:131  
         1 000122   200030 000002                    ADSC9   P$+1,,AUTO               cn=0,n=2
         1 000123   200030 220100                    LDX0    P$+1,,AUTO
         1 000124   040100 100540                    MLR     fill='040'O
         1 000125   100000 200010                    ADSC9   0,,PR1                   cn=1,n=*X0
         1 000126   200017 000037                    ADSC9   PN,,AUTO                 cn=0,n=31

      686      543        /* First, perform the binary search, but remember the nature of the
      687      544           final relationship if it is not "equals".                       */
      688      545    1   BINSCH:
      689      546    1      I = P_AUTO_START;

    546  1 000127   000000 235000 xsym  BINSCH       LDA     P_AUTO_START
         1 000130   200011 755100                    STA     I,,AUTO

      690      547    1      MID = I;

    547  1 000131   200012 755100                    STA     MID,,AUTO

      691      548    1      RELATION = %LESS;

    548  1 000132   200016 450100                    STZ     RELATION,,AUTO

      692      549    1      LAST = I + B$LOOKUP (1) -1;

    549  1 000133   000000 471400 xsym               LDP1    B$LOOKUP$
         1 000134   200011 236100                    LDQ     I,,AUTO
         1 000135   100001 036100                    ADLQ    1,,PR1
         1 000136   000001 136007                    SBLQ    1,DL
         1 000137   200013 756100                    STQ     LAST,,AUTO

      693      550    2      DO WHILE (LAST >= I);

    550  1 000140   200011 116100                    CMPQ    I,,AUTO
         1 000141   000222 604000 1                  TMI     s:576

      694      551    2           MID = (I + LAST)/2;

PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:132  
    551  1 000142   200011 236100                    LDQ     I,,AUTO
         1 000143   200013 036100                    ADLQ    LAST,,AUTO
         1 000144   000002 506007                    DIV     2,DL
         1 000145   200012 756100                    STQ     MID,,AUTO

      695      552    2           N = B$LOOKUP(MID);

    552  1 000146   000000 470400 xsym               LDP0    B$LOOKUP$
         1 000147   000000 235106                    LDA     0,QL,PR0
         1 000150   200014 755100                    STA     N,,AUTO

      696      553    2           P$ = ADDR (B$P$->B$P(N));

    553  1 000151   200014 236100                    LDQ     N,,AUTO
         1 000152   000042 402003                    MPY     34,DU
         1 000153   000000 036000 xsym               ADLQ    B$P$
         1 000154   200027 756100                    STQ     P$,,AUTO

      697      554    2           IF P$ -> B$P.NAME.TEXT(0) = PN

    554  1 000155   200027 471500                    LDP1    P$,,AUTO
         1 000156   040100 106500                    CMPC    fill='040'O
         1 000157   100032 200037                    ADSC9   26,,PR1                  cn=1,n=31
         1 000160   200017 000037                    ADSC9   PN,,AUTO                 cn=0,n=31
         1 000161   000204 601000 1                  TNZ     s:566

      698      555    2           THEN IF P$ -> B$P.ACCT(0) = PACCT$->B$DWTXT

    555  1 000162   200004 473500                    LDP3    @PACCT$,,AUTO
         1 000163   300000 474500                    LDP4    0,,PR3
         1 000164   040100 106500                    CMPC    fill='040'O
         1 000165   100030 000010                    ADSC9   24,,PR1                  cn=0,n=8
         1 000166   400000 000010                    ADSC9   0,,PR4                   cn=0,n=8
         1 000167   000262 600000 1                  TZE     FOUND_PROC

      699      556    2                THEN GOTO FOUND_PROC;
      700      557    2                ELSE IF P$ -> B$P.ACCT(0) < PACCT$->B$DWTXT
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:133  

    557  1 000170   000177 603000 1                  TRC     s:563

      701      558    3                     THEN DO;              /* Target is greater                  */

      702      559    3                          RELATION = %GREATER;

    559  1 000171   400000 236003                    LDQ     -131072,DU
         1 000172   200016 756100                    STQ     RELATION,,AUTO

      703      560    3                          I = MID + 1;

    560  1 000173   200012 235100                    LDA     MID,,AUTO
         1 000174   000001 035007                    ADLA    1,DL
         1 000175   200011 755100                    STA     I,,AUTO

      704      561    3                          END;

    561  1 000176   000217 710000 1                  TRA     s:575

      705      562    3                     ELSE DO;              /* Target is less                     */

      706      563    3                          RELATION = %LESS;

    563  1 000177   200016 450100                    STZ     RELATION,,AUTO

      707      564    3                          LAST = MID - 1;

    564  1 000200   200012 235100                    LDA     MID,,AUTO
         1 000201   000001 135007                    SBLA    1,DL
         1 000202   200013 755100                    STA     LAST,,AUTO

      708      565    3                          END;

    565  1 000203   000217 710000 1                  TRA     s:575

      709      566    2           ELSE IF P$ -> B$P.NAME.TEXT(0) < PN
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:134  

    566  1 000204   000213 603000 1                  TRC     s:572

      710      567    3                THEN DO;                   /* Target is greater                  */

      711      568    3                     RELATION = %GREATER;

    568  1 000205   400000 236003                    LDQ     -131072,DU
         1 000206   200016 756100                    STQ     RELATION,,AUTO

      712      569    3                     I = MID + 1;

    569  1 000207   200012 235100                    LDA     MID,,AUTO
         1 000210   000001 035007                    ADLA    1,DL
         1 000211   200011 755100                    STA     I,,AUTO

      713      570    3                     END;

    570  1 000212   000217 710000 1                  TRA     s:575

      714      571    3                ELSE DO;                   /* Target is less                     */

      715      572    3                     RELATION = %LESS;

    572  1 000213   200016 450100                    STZ     RELATION,,AUTO

      716      573    3                     LAST = MID - 1;

    573  1 000214   200012 235100                    LDA     MID,,AUTO
         1 000215   000001 135007                    SBLA    1,DL
         1 000216   200013 755100                    STA     LAST,,AUTO

      717      574    3                     END;

      718      575    2           END;

    575  1 000217   200013 236100                    LDQ     LAST,,AUTO
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:135  
         1 000220   200011 116100                    CMPQ    I,,AUTO
         1 000221   000142 605000 1                  TPL     s:551

      719      576    1      IF ENTRY_TYPE = %FIND

    576  1 000222   200015 234100                    SZN     ENTRY_TYPE,,AUTO
         1 000223   000225 604000 1                  TMI     s:585

      720      577    2      THEN DO;

    573  1 000224                       PROC_NOT_FO* null
      721      578    2   PROC_NOT_FOUND: ;
      722      579    2           ALTRETURN;

    579  1 000224   000000 702200 xent               TSX2  ! X66_AALT

      723      580    2           END;
      724      581        /*E*   ERROR:   JSA-E$NOPROC-E
      725      582               MESSAGE:  That Special Shared Processor doesn't exist.
      726      583        */
      727      584    2      ELSE DO;                   /* Insert the new entry by moving other stuff   */

      728      585    2           IF RELATION = %GREATER

    585  1 000225   200016 234100                    SZN     RELATION,,AUTO
         1 000226   000230 605000 1                  TPL     s:587

      729      586    2           THEN MID = MID + 1;             /* Make sure we move the right stuff  */

    586  1 000227   200012 054100                    AOS     MID,,AUTO

      730      587    2           I = B$LOOKUP (1) + P_AUTO_START - MID;

    587  1 000230   000000 470400 xsym               LDP0    B$LOOKUP$
         1 000231   000001 236100                    LDQ     1,,PR0
         1 000232   000000 036000 xsym               ADLQ    P_AUTO_START
         1 000233   200012 136100                    SBLQ    MID,,AUTO
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:136  
         1 000234   200011 756100                    STQ     I,,AUTO

      731      588    2           IF I > 0 THEN CALL FMR$SLIDE(ADDR(B$LOOKUP(MID)),1,I);

    588  1 000235   000254 604400 1                  TMOZ    s:589

    588  1 000236   200012 236100                    LDQ     MID,,AUTO
         1 000237   000022 736000                    QLS     18
         1 000240   000000 036000 xsym               ADLQ    B$LOOKUP$
         1 000241   200030 756100                    STQ     P$+1,,AUTO
         1 000242   200011 631500                    EPPR1   I,,AUTO
         1 000243   200033 451500                    STP1    P$+4,,AUTO
         1 000244   000001 236000 2                  LDQ     1
         1 000245   200032 756100                    STQ     P$+3,,AUTO
         1 000246   200030 633500                    EPPR3   P$+1,,AUTO
         1 000247   200031 453500                    STP3    P$+2,,AUTO
         1 000250   200031 630500                    EPPR0   P$+2,,AUTO
         1 000251   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000252   000000 701000 xent               TSX1    FMR$SLIDE
         1 000253   000000 011000                    NOP     0

      732      589    2           B$LOOKUP (1) = B$LOOKUP (1) + 1;

    589  1 000254   000000 470400 xsym               LDP0    B$LOOKUP$
         1 000255   000001 235100                    LDA     1,,PR0
         1 000256   000001 035007                    ADLA    1,DL
         1 000257   000001 755100                    STA     1,,PR0

      733      590    2           P_MAX_LOOKUP = B$LOOKUP (1);

    590  1 000260   000000 755000 xsym               STA     P_MAX_LOOKUP

      734      591                 /* N.B.: B$LOOKUP(1) is used as the actual working copy
      735      592                          of P_MAX_LOOKUP because of bypass cache.
      736      593                          P_MAX_LOOKUP is also maintained for looking only.*/
      737      594    2           GOTO SETX;

PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:137  
    594  1 000261   000264 710000 1                  TRA     SETX

    588  1 000262                       FOUND_PROC   null
      738      595    2           END;
      739      596
      740      597
      741      598    1   FOUND_PROC: ;
      742      599    1      IF ENTRY_TYPE = %INSERT

    599  1 000262   200015 234100                    SZN     ENTRY_TYPE,,AUTO
         1 000263   000275 605000 1                  TPL     s:608

      743      600    2      THEN DO;

      744      601    2   SETX:   B$LOOKUP (MID) = PROC_NUM;

    601  1 000264   200005 471500       SETX         LDP1    @PROC_NUM,,AUTO
         1 000265   200012 720100                    LXL0    MID,,AUTO
         1 000266   100000 235100                    LDA     0,,PR1
         1 000267   000000 755110                    STA     0,X0,PR0

      745      602                            /* If there was an old one there, hookup the real one.*/
      746      603                %UNLOCK (G = J_PLOCK);

    604  1 000270   000000 630400 2                  EPPR0   0
         1 000271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000272   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000273   000000 011000                    NOP     0

      747      606    2           RETURN;

    606  1 000274   000000 702200 xent               TSX2  ! X66_ARET

      748      607    2           END;
      749      608    1      PROC_NUM = N;

    608  1 000275   200014 235100                    LDA     N,,AUTO
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:138  
         1 000276   200005 475500                    LDP5    @PROC_NUM,,AUTO
         1 000277   500000 755100                    STA     0,,PR5

      750      609
      751      610    1      RETURN;

    610  1 000300   000000 702200 xent               TSX2  ! X66_ARET

ENOPROC
 Sect OctLoc
   0     000   122301 403524                                                    R...

(unnamed)
 Sect OctLoc
   2     000   000000 006000   000003 006000                                    ........
      752      611    1   END JSA$FINDSSP;
      753      612        %EOD;

PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:139  
--  Include file information  --

   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   J_ERRSET_C.:E05TOU  is referenced.
   J_ERRORS_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$FINDSSP.
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:140  

 **** Variables and constants ****

  ****  Section 000 RoData JSA$FINDSSP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b STRC        r     1 ENOPROC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @ERR                       4-0-0/w PTR         r     1 @PACCT$
     3-0-0/w PTR         r     1 @PNAME$                    5-0-0/w PTR         r     1 @PROC_NUM
     6-0-0/w PTR         r     1 @PTYPE                    15-0-0/b BIT         r     1 ENTRY_TYPE
    *0-0-0/w BIT         r     1 ERR                       11-0-0/w SBIN        r     1 I
    13-0-0/w SBIN        r     1 LAST                      12-0-0/w SBIN        r     1 MID
    14-0-0/w SBIN        r     1 N                         27-0-0/w PTR         r     1 P$
    *0-0-0/w PTR         r     1 PACCT$                    17-0-0/c CHAR(31)    r     1 PN
    *0-0-0/w PTR         r     1 PNAME$                    *0-0-0/w UBIN        r     1 PROC_NUM
    *0-0-0/w BIT (18)    r     1 PTYPE                     16-0-0/b BIT         r     1 RELATION

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LOOKUP$                  0-0-0/w PTR         r     1 B$P$
     0-0-0/d BIT (72)    r     1 J_PLOCK                    0-0-0/w UBIN        r     1 P_AUTO_START
     0-0-0/w UBIN        r     1 P_MAX_LOOKUP               0-0-0/w UBIN        r     1 P_NPROCS
     0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:141  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(8)     r     1 B$DWTXT
     0-0-0/w UBIN        r     1 B$LOOKUP(0:0)
     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/c ASTR(9)     r     1 B$TEXTC
     0-0-0/d STRC(576)   r     1 B$U


   Procedure JSA$FINDSSP requires 193 words for executable code.
   Procedure JSA$FINDSSP requires 28 words of local(AUTO) storage.
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:142  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:143  
          MINI XREF LISTING

B$DO.ECCINFO
       423**DCL       424--REDEF
B$DWTXT
        46**DCL       555>>IF        557>>IF
B$LOOKUP
        88**DCL       549>>ASSIGN    552>>ASSIGN    587>>ASSIGN    588--CALL      589<<ASSIGN    589>>ASSIGN
       590>>ASSIGN    601<<ASSIGN
B$LOOKUP$
       110**DCL       549>>ASSIGN    552>>ASSIGN    587>>ASSIGN    588>>CALL      589>>ASSIGN    589>>ASSIGN
       590>>ASSIGN    601>>ASSIGN
B$P
        55**DCL       513--ASSIGN    528--ASSIGN    553--ASSIGN
B$P.ACCT
        78**DCL       555>>IF        557>>IF
B$P.FLGS
        76**DCL       515>>IF        520>>ASSIGN    524>>IF
B$P.NAME.TEXT
        81**DCL       515>>IF        554>>IF        566>>IF
B$P$
       109**DCL       513>>ASSIGN    553>>ASSIGN
B$TEXTC.SIZ
        43**DCL        44--IMP-SIZ   505>>IF        510>>ASSIGN    542>>ASSIGN
B$TEXTC.TEXT
        44**DCL       510>>ASSIGN    542>>ASSIGN
B$U.ACP
       379**DCL       515>>IF
B$U.MISC
       402**DCL       403--REDEF
B$USER.MISC
       478**DCL       479--REDEF
COMMON
       542**LABEL     538--GOTO
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:144  
ENOPROC
       491**DCL       507>>ASSIGN
ENTRY_TYPE
        34**DCL       534<<ASSIGN    540<<ASSIGN    576>>IF        599>>IF
ERR
        27**DCL        22--PROC      507<<ASSIGN    533--ENTRY     539--ENTRY
FMR$SLIDE
       134**DCL-ENT   588--CALL
FOUND_PROC
       588**LABEL     556--GOTO
HFC$LOCK
       271**DCL-ENT   536--CALL
HFC$UNLOCK
       271**DCL-ENT   604--CALL
I
        30**DCL       546<<ASSIGN    547>>ASSIGN    549>>ASSIGN    550>>DOWHILE   551>>ASSIGN    560<<ASSIGN
       569<<ASSIGN    587<<ASSIGN    588>>IF        588<>CALL
J_PLOCK
        39**DCL       536<>CALL      604<>CALL
LAST
        32**DCL       549<<ASSIGN    550>>DOWHILE   551>>ASSIGN    564<<ASSIGN    573<<ASSIGN
MID
        31**DCL       547<<ASSIGN    551<<ASSIGN    552>>ASSIGN    560>>ASSIGN    564>>ASSIGN    569>>ASSIGN
       573>>ASSIGN    586<<ASSIGN    586>>ASSIGN    587>>ASSIGN    588>>CALL      601>>ASSIGN
N
        33**DCL       514<<DOINDEX   515>>IF        521>>ASSIGN    552<<ASSIGN    553>>ASSIGN    608>>ASSIGN
P$
        37**DCL       513<<ASSIGN    515>>IF        515>>IF        520>>ASSIGN    524>>IF        528<<ASSIGN
       528>>ASSIGN    553<<ASSIGN    554>>IF        555>>IF        557>>IF        566>>IF
PACCT$
        24**DCL        22--PROC      533--ENTRY     539--ENTRY     555>>IF        557>>IF
PN
        36**DCL       510<<ASSIGN    515>>IF        542<<ASSIGN    554>>IF        566>>IF
PNAME$
        23**DCL        22--PROC      505>>IF        510>>ASSIGN    510>>ASSIGN    533--ENTRY     539--ENTRY
       542>>ASSIGN    542>>ASSIGN
PL6.E3A0      #005=JSA$FINDSSP File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:145  
PROC_NUM
        26**DCL        22--PROC      521<<ASSIGN    533--ENTRY     539--ENTRY     601>>ASSIGN    608<<ASSIGN
PTYPE
        25**DCL        22--PROC      518>>IF        520<<ASSIGN    524>>IF        533--ENTRY     539--ENTRY
P_AUTO_START
       104**DCL       546>>ASSIGN    587>>ASSIGN
P_MAX_LOOKUP
       108**DCL       590<<ASSIGN
P_NPROCS
       102**DCL       514>>DOINDEX
RELATION
        35**DCL       548<<ASSIGN    559<<ASSIGN    563<<ASSIGN    568<<ASSIGN    572<<ASSIGN    585>>IF
S$CU$
        40**DCL       515>>IF
SETE
       507**LABEL     526--GOTO      530--GOTO
SETP
       520**LABEL     525--GOTO
SETX
       601**LABEL     594--GOTO

PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:146  
      754        1        /*T***********************************************************/
      755        2        /*T*                                                         */
      756        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      757        4        /*T*                                                         */
      758        5        /*T***********************************************************/
      759        6        /*F*    NAME:   JSA$MAP_DATASEGS
      760        7                PURPOSE: To copy any initialized data segments for a processor
      761        8                        into a user's WSQ, getting space as required.      */
      762        9        JSA$MAP_DATASEGS: PROC(EWSQ,PNUM) ALTRET;
      763       10
      764       11    1   DCL EWSQ UBIN;
      765       12    1   DCL PNUM UBIN;
      766       13
      767       14    1   DCL ERR UBIN;
      768       15    1   DCL PROC$ PTR;
      769       16    1   DCL I SBIN;
      770       17    1   DCL SEGID UBIN;
      771       18    1   DCL PROT UBIN;
      772       19    1   DCL SEGSIZE UBIN;
      773       20    1   DCL HEADPG UBIN;
      774       21    1   DCL TAILPG UBIN;
      775       22    1   DCL COUNT UBIN;
      776       23
      777       24    1   DCL B$JIT$ PTR SYMREF READONLY;
      778       25    1   DCL B$PPUT$ PTR SYMREF READONLY;
      779       26
      780       27    1   DCL MMH$INIT_DS ENTRY(8) ALTRET;
      781       28
      782       29        %INCLUDE B$P;
      783      113        %INCLUDE B_SEGIDS_C;
      784      652        %INCLUDE MM_DATA_R;
      785     1172        %INCLUDE B$JIT;
      786     1775        %INCLUDE UD_SEV_C;
      787     1789        %INCLUDE UM_CP6;
      788     2641
      789     2642        %VLP_ERRCODE (FPTN=EJSA,FCG=JS,MID=A,MON='1'B,SEV=SEV_ERROR#);
      790     2687
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:147  
      791     2688        %EJECT;
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:148  
      792     2689    1      SEGID = BITBIN(%DS3SID);
      793     2690    1      PROC$ = ADDR(B$P$->B$P.DSDATA(PNUM));
      794     2691    1      IF PROC$ -> B$PROCDS.DSSIZE
      795     2692    2      THEN DO I = 0 TO 5;
      796     2693    2           SEGSIZE = PROC$->B$PROCDS.DSSIZE(I);
      797     2694    2           IF SEGSIZE > 0
      798     2695    3           THEN DO;
      799     2696    3                PROT = PROC$->B$PROCDS.DSPROT(I);
      800     2697    3                HEADPG = PROC$->B$PROCDS.DSPH(I);
      801     2698    3                COUNT = HEADPG;
      802     2699    4                DO UNTIL (COUNT = 0);
      803     2700    4                     TAILPG = COUNT;
      804     2701    4                     COUNT = B$PPUT$ -> MM$PPUT.PPNO (TAILPG);
      805     2702    4                     END;
      806     2703    3                COUNT = (SEGSIZE+1023)/1024;
      807     2704    3                CALL MMH$INIT_DS(EWSQ,SEGID,SEGSIZE,ERR,PROT,HEADPG,TAILPG,COUNT)
      808     2705    4                WHENALTRETURN DO;
      809     2706    4                     B$JIT.ERR = EJSA;     /* any skeleton                       */
      810     2707    4                     B$JIT.ERR.CODE = ERR;
      811     2708
      812     2709    4                     ALTRETURN;
      813     2710    4                     END;
      814     2711    3                END;
      815     2712    2           SEGID = SEGID + 1;
      816     2713    2           END;
      817     2714    1      RETURN;
      818     2715    1   END JSA$MAP_DATASEGS;
      819     2716        /**/
      820     2717        %EOD;

PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:149  
--  Include file information  --

   UM_CP6.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$MAP_DATASEGS.

   Procedure JSA$MAP_DATASEGS requires 84 words for executable code.
   Procedure JSA$MAP_DATASEGS requires 22 words of local(AUTO) storage.

PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:150  

 Object Unit name= JSA$MAP_DATASEGS                           File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:44:35.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  JSA$MAP_DATASEGS
    1   Proc  even  none    84    124  JSA$MAP_DATASEGS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  JSA$MAP_DATASEGS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       8 MMH$INIT_DS
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    B$PPUT$                               B$P$
r    MM_BYP$                               B_VECTNIL
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:151  


      754        1        /*T***********************************************************/
      755        2        /*T*                                                         */
      756        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      757        4        /*T*                                                         */
      758        5        /*T***********************************************************/
      759        6        /*F*    NAME:   JSA$MAP_DATASEGS
      760        7                PURPOSE: To copy any initialized data segments for a processor
      761        8                        into a user's WSQ, getting space as required.      */
      762        9        JSA$MAP_DATASEGS: PROC(EWSQ,PNUM) ALTRET;

      9  1 000000   000000 700200 xent  JSA$MAP_DAT* TSX0  ! X66_AUTO_2
         1 000001   000026 000002                    ZERO    22,2

      763       10
      764       11    1   DCL EWSQ UBIN;
      765       12    1   DCL PNUM UBIN;
      766       13
      767       14    1   DCL ERR UBIN;
      768       15    1   DCL PROC$ PTR;
      769       16    1   DCL I SBIN;
      770       17    1   DCL SEGID UBIN;
      771       18    1   DCL PROT UBIN;
      772       19    1   DCL SEGSIZE UBIN;
      773       20    1   DCL HEADPG UBIN;
      774       21    1   DCL TAILPG UBIN;
      775       22    1   DCL COUNT UBIN;
      776       23
      777       24    1   DCL B$JIT$ PTR SYMREF READONLY;
      778       25    1   DCL B$PPUT$ PTR SYMREF READONLY;
      779       26
      780       27    1   DCL MMH$INIT_DS ENTRY(8) ALTRET;
      781       28
      782       29        %INCLUDE B$P;
      783      113        %INCLUDE B_SEGIDS_C;
      784      652        %INCLUDE MM_DATA_R;
      785     1172        %INCLUDE B$JIT;
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:152  
      786     1775        %INCLUDE UD_SEV_C;
      787     1789        %INCLUDE UM_CP6;
      788     2641
      789     2642        %VLP_ERRCODE (FPTN=EJSA,FCG=JS,MID=A,MON='1'B,SEV=SEV_ERROR#);
      790     2687
      791     2688        %EJECT;
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:153  
      792     2689    1      SEGID = BITBIN(%DS3SID);

   2689  1 000002   006006 235007                    LDA     3078,DL
         1 000003   200010 755100                    STA     SEGID,,AUTO

      793     2690    1      PROC$ = ADDR(B$P$->B$P.DSDATA(PNUM));

   2690  1 000004   200004 470500                    LDP0    @PNUM,,AUTO
         1 000005   000000 236100                    LDQ     0,,PR0
         1 000006   000021 402007                    MPY     17,DL
         1 000007   000023 736000                    QLS     19
         1 000010   000011 036003                    ADLQ    9,DU
         1 000011   000000 036000 xsym               ADLQ    B$P$
         1 000012   200006 756100                    STQ     PROC$,,AUTO

      794     2691    1      IF PROC$ -> B$PROCDS.DSSIZE

   2691  1 000013   200006 471500                    LDP1    PROC$,,AUTO
         1 000014   000000 106500                    CMPC    fill='000'O
         1 000015   100003 000014                    ADSC9   3,,PR1                   cn=0,n=12
         1 000016   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         1 000017   000123 600000 1                  TZE     s:2714

      795     2692    2      THEN DO I = 0 TO 5;

   2692  1 000020   200007 450100                    STZ     I,,AUTO

      796     2693    2           SEGSIZE = PROC$->B$PROCDS.DSSIZE(I);

   2693  1 000021   200007 235100                    LDA     I,,AUTO
         1 000022   000001 735000                    ALS     1
         1 000023   200006 470500                    LDP0    PROC$,,AUTO
         1 000024   000100 101505                    MRL     fill='000'O
         1 000025   000003 000002                    ADSC9   3,A,PR0                  cn=0,n=2
         1 000026   200012 000004                    ADSC9   SEGSIZE,,AUTO            cn=0,n=4

      797     2694    2           IF SEGSIZE > 0
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:154  

   2694  1 000027   200012 236100                    LDQ     SEGSIZE,,AUTO
         1 000030   000114 600000 1                  TZE     s:2712

      798     2695    3           THEN DO;

      799     2696    3                PROT = PROC$->B$PROCDS.DSPROT(I);

   2696  1 000031   200007 235100                    LDA     I,,AUTO
         1 000032   000100 101505                    MRL     fill='000'O
         1 000033   000006 000001                    ADSC9   6,A,PR0                  cn=0,n=1
         1 000034   200011 000004                    ADSC9   PROT,,AUTO               cn=0,n=4

      800     2697    3                HEADPG = PROC$->B$PROCDS.DSPH(I);

   2697  1 000035   000001 735000                    ALS     1
         1 000036   000100 101505                    MRL     fill='000'O
         1 000037   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
         1 000040   200013 000004                    ADSC9   HEADPG,,AUTO             cn=0,n=4

      801     2698    3                COUNT = HEADPG;

   2698  1 000041   200013 235100                    LDA     HEADPG,,AUTO
         1 000042   200015 755100                    STA     COUNT,,AUTO

      802     2699    4                DO UNTIL (COUNT = 0);

      803     2700    4                     TAILPG = COUNT;

   2700  1 000043   200015 235100                    LDA     COUNT,,AUTO
         1 000044   200014 755100                    STA     TAILPG,,AUTO

      804     2701    4                     COUNT = B$PPUT$ -> MM$PPUT.PPNO (TAILPG);

   2701  1 000045   000000 470400 xsym               LDP0    B$PPUT$
         1 000046   000000 236105                    LDQ     0,AL,PR0
         1 000047   777777 376007                    ANQ     -1,DL
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:155  
         1 000050   200015 756100                    STQ     COUNT,,AUTO

      805     2702    4                     END;

   2702  1 000051   000043 601000 1                  TNZ     s:2700

      806     2703    3                COUNT = (SEGSIZE+1023)/1024;

   2703  1 000052   200012 236100                    LDQ     SEGSIZE,,AUTO
         1 000053   001777 036007                    ADLQ    1023,DL
         1 000054   000012 772000                    QRL     10
         1 000055   200015 756100                    STQ     COUNT,,AUTO

      807     2704    3                CALL MMH$INIT_DS(EWSQ,SEGID,SEGSIZE,ERR,PROT,HEADPG,TAILPG,COUNT)

   2704  1 000056   200015 631500                    EPPR1   COUNT,,AUTO
         1 000057   200025 451500                    STP1    COUNT+8,,AUTO
         1 000060   200014 633500                    EPPR3   TAILPG,,AUTO
         1 000061   200024 453500                    STP3    COUNT+7,,AUTO
         1 000062   200013 634500                    EPPR4   HEADPG,,AUTO
         1 000063   200023 454500                    STP4    COUNT+6,,AUTO
         1 000064   200011 635500                    EPPR5   PROT,,AUTO
         1 000065   200022 455500                    STP5    COUNT+5,,AUTO
         1 000066   200005 636500                    EPPR6   ERR,,AUTO
         1 000067   200021 456500                    STP6    COUNT+4,,AUTO
         1 000070   200012 637500                    EPPR7   SEGSIZE,,AUTO
         1 000071   200020 457500                    STP7    COUNT+3,,AUTO
         1 000072   200010 630500                    EPPR0   SEGID,,AUTO
         1 000073   200017 450500                    STP0    COUNT+2,,AUTO
         1 000074   200003 236100                    LDQ     @EWSQ,,AUTO
         1 000075   200016 756100                    STQ     COUNT+1,,AUTO
         1 000076   200016 630500                    EPPR0   COUNT+1,,AUTO
         1 000077   000026 631400 xsym               EPPR1   B_VECTNIL+22
         1 000100   000000 701000 xent               TSX1    MMH$INIT_DS
         1 000101   000103 702000 1                  TSX2    s:2706
         1 000102   000114 710000 1                  TRA     s:2712

PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:156  
      808     2705    4                WHENALTRETURN DO;

      809     2706    4                     B$JIT.ERR = EJSA;     /* any skeleton                       */

   2706  1 000103   000000 236000 0                  LDQ     EJSA
         1 000104   000000 470400 xsym               LDP0    B$JIT$
         1 000105   000012 756100                    STQ     10,,PR0

      810     2707    4                     B$JIT.ERR.CODE = ERR;

   2707  1 000106   200005 236100                    LDQ     ERR,,AUTO
         1 000107   000003 736000                    QLS     3
         1 000110   000012 676100                    ERQ     10,,PR0
         1 000111   377770 376007                    ANQ     131064,DL
         1 000112   000012 656100                    ERSQ    10,,PR0

      811     2708
      812     2709    4                     ALTRETURN;

   2709  1 000113   000000 702200 xent               TSX2  ! X66_AALT

      813     2710    4                     END;
      814     2711    3                END;

      815     2712    2           SEGID = SEGID + 1;

   2712  1 000114   200010 235100                    LDA     SEGID,,AUTO
         1 000115   000001 035007                    ADLA    1,DL
         1 000116   200010 755100                    STA     SEGID,,AUTO

      816     2713    2           END;

   2713  1 000117   200007 054100                    AOS     I,,AUTO
         1 000120   200007 236100                    LDQ     I,,AUTO
         1 000121   000005 116007                    CMPQ    5,DL
         1 000122   000021 604400 1                  TMOZ    s:2693

PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:157  
      817     2714    1      RETURN;

   2714  1 000123   000000 702200 xent               TSX2  ! X66_ARET

EJSA
 Sect OctLoc
   0     000   122301 400004                                                    R...
      818     2715    1   END JSA$MAP_DATASEGS;
      819     2716        /**/
      820     2717        %EOD;

PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:158  
--  Include file information  --

   UM_CP6.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSA$MAP_DATASEGS.
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:159  

 **** Variables and constants ****

  ****  Section 000  Data  JSA$MAP_DATASEGS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 EJSA

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EWSQ                      4-0-0/w PTR         r     1 @PNUM
    15-0-0/w UBIN        r     1 COUNT                      5-0-0/w UBIN        r     1 ERR
    *0-0-0/w UBIN        r     1 EWSQ                      13-0-0/w UBIN        r     1 HEADPG
     7-0-0/w SBIN        r     1 I                         *0-0-0/w UBIN        r     1 PNUM
     6-0-0/w PTR         r     1 PROC$                     11-0-0/w UBIN        r     1 PROT
    10-0-0/w UBIN        r     1 SEGID                     12-0-0/w UBIN        r     1 SEGSIZE
    14-0-0/w UBIN        r     1 TAILPG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 MM_BYP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/w STRC(270)   r     1 B$PROCDS
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:160  
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure JSA$MAP_DATASEGS requires 84 words for executable code.
   Procedure JSA$MAP_DATASEGS requires 22 words of local(AUTO) storage.
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:161  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:162  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      1593**DCL      1593--REDEF
B$JIT.ERR
      1499**DCL      2706<<ASSIGN
B$JIT.ERR.CODE
      1500**DCL      2707<<ASSIGN
B$JIT.ERR.MID
      1500**DCL      1500--REDEF
B$JIT.JRESPEAK
      1661**DCL      1662--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1770**DCL      1770--REDEF    1771--REDEF
B$JIT.PNR
      1674**DCL      1674--REDEF
B$JIT.TSLINE
      1768**DCL      1769--REDEF
B$JIT$
        24**DCL      1494--IMP-PTR  2706>>ASSIGN   2707>>ASSIGN
B$P.DSDATA
        47**DCL      2690--ASSIGN
B$P$
        91**DCL      2690>>ASSIGN
B$PPUT$
        25**DCL      2701>>ASSIGN
B$PROCDS.DSPH
        78**DCL      2697>>ASSIGN
B$PROCDS.DSPROT
        80**DCL      2696>>ASSIGN
B$PROCDS.DSSIZE
        79**DCL      2691>>IF       2693>>ASSIGN
COUNT
        22**DCL      2698<<ASSIGN   2699>>DOUNTIL  2700>>ASSIGN   2701<<ASSIGN   2703<<ASSIGN   2704<>CALL
PL6.E3A0      #006=JSA$MAP_DATASEGS File=JSA$UTIL.:E05TSI                        TUE 07/29/97 23:44 Page:163  
EJSA
      2654**DCL      2706>>ASSIGN
ERR
        14**DCL      2704<>CALL     2707>>ASSIGN
EWSQ
        11**DCL         9--PROC     2704<>CALL
HEADPG
        20**DCL      2697<<ASSIGN   2698>>ASSIGN   2704<>CALL
I
        16**DCL      2692<<DOINDEX  2693>>ASSIGN   2696>>ASSIGN   2697>>ASSIGN
MM$DESC.BOUND
      1123**DCL      1124--REDEF
MM$DESC.FLGS
      1124**DCL      1124--REDEF
MM$PPUT.PPNO
      1112**DCL      2701>>ASSIGN
MM$PPUT.USER#
      1112**DCL      1112--REDEF
MMH$INIT_DS
        27**DCL-ENT  2704--CALL
MM_BYP$
      1043**DCL      1043--IMP-PTR
PNUM
        12**DCL         9--PROC     2690>>ASSIGN
PROC$
        15**DCL      2690<<ASSIGN   2691>>IF       2693>>ASSIGN   2696>>ASSIGN   2697>>ASSIGN
PROT
        18**DCL      2696<<ASSIGN   2704<>CALL
SEGID
        17**DCL      2689<<ASSIGN   2704<>CALL     2712<<ASSIGN   2712>>ASSIGN
SEGSIZE
        19**DCL      2693<<ASSIGN   2694>>IF       2703>>ASSIGN   2704<>CALL
TAILPG
        21**DCL      2700<<ASSIGN   2701>>ASSIGN   2704<>CALL

PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:164  
      821        1        /*T***********************************************************/
      822        2        /*T*                                                         */
      823        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      824        4        /*T*                                                         */
      825        5        /*T***********************************************************/
      826        6        /*F*      NAME: JSA$UNSHARE
      827        7                  PURPOSE: This routine will give the user a copy of the
      828        8                           procedure of a shared program and or library.
      829        9                         */
      830       10
      831       11        JSA$UNSHARE: PROC(PNUM,ONUM) ALTRET;
      832       12
      833       13    1   DCL ONUM UBIN WORD;
      834       14    1   DCL PNUM UBIN WORD;
      835       15
      836       16    1   DCL PPNO UBIN WORD;                     /* PHYSICAL PAGE                      */
      837       17    1   DCL ERR UBIN;
      838       18    1   DCL HIVA UBIN;                          /* HIGHEST VIRTUAL ADDRESS            */
      839       19    1   DCL VPNO UBIN;
      840       20    1   DCL PROC$ PTR;
      841       21    1   DCL MAXCORE UBIN HALF;
      842       22    1   DCL TEMP UBIN;
      843       23
      844       24        %INCLUDE UM_CP6;
      845      876        %INCLUDE HF_LOCK_C;
      846      890        %INCLUDE HF_DATA_R;
      847      933        %INCLUDE B$MAP;
      848     1032        %INCLUDE B$P;
      849     1116        %INCLUDE MM_DATA_R;
      850     1636        %INCLUDE SS_SCHED_C;
      851     1869        %INCLUDE B$JIT;
      852     2472        %INCLUDE B$USER;
      853     2688        %INCLUDE UD_SEV_C;
      854     2702
      855     2703    1   DCL HFC$ASSOCCLR ENTRY;
      856     2704    1   DCL MME$WGVP ENTRY(4) ALTRET;
      857     2705    1   DCL MME$WFVP ENTRY(4) ALTRET;
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:165  
      858     2706    1   DCL SSR$REG ENTRY(3) ALTRET;
      859     2707    1   DCL MME$CVM ENTRY(4) ALTRET;
      860     2708
      861     2709    1   DCL B$UPT$ PTR SYMREF READONLY;
      862     2710    1   DCL B$USERIS$ PTR SYMREF READONLY;
      863     2711    1   DCL B$SBUF2$ PTR SYMREF READONLY;
      864     2712    1   DCL B$JIT$ PTR SYMREF READONLY;
      865     2713    1   DCL B$PPUT$ PTR SYMREF READONLY;
      866     2714    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
      867     2715
      868     2716    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      869     2717        %B$USERREFS;
      870     2721
      871     2722        %VLP_ERRCODE (FPTN=J_ERR,STCLASS=CONSTANT,FCG=JS,MID=A,SEV=SEV_ERROR#,MON='1'B);
      872     2767        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
      873     2768        %SUB B$UPT=B$UPT$->B$MAP;
      874     2769
      875     2770        %EJECT;
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:166  
      876     2771
      877     2772        /* Remember the users max core value and set max core high enough
      878     2773           to prevent the inability to unshare.
      879     2774        */
      880     2775    1      MAXCORE = B$JIT.MAXCORE;
      881     2776    1      B$JIT.MAXCORE = 1024;
      882     2777    1      CALL HFC$ASSOCCLR;                   /*General clear for sbuf also         */
      883     2778    1      HIVA = B$P$ -> B$P.HVA(PNUM) - 1;
      884     2779
      885     2780    2      DO VPNO = B$P$ -> B$P.PVA(PNUM) TO HIVA;
      886     2781    2           IF B$UPT.RPN(VPNO) ~= MM_FPMC.RPN
      887     2782    3           THEN DO;
      888     2783    3                IF HW_WSQ0PT THEN
      889     2784    3                     PPNO=B$IPHYMAP$->MM$IPHY_MAP(B$UPT.RPN(VPNO));
      890     2785    3                ELSE
      891     2786    3                     PPNO = B$UPT.RPN(VPNO); /* SAVE REAL PAGE                   */
      892     2787    3                B$UPT(VPNO) = MM_FPMC;
      893     2788
      894     2789        /* Decrement the page count of procedure as MME$WGVP will
      895     2790           increment it again.
      896     2791        */
      897     2792    3                IF VPNO <= B$JIT$->B$JIT.PUL
      898     2793    3                THEN B$JIT$->B$JIT.PCP = B$JIT$->B$JIT.PCP - 1;
      899     2794
      900     2795    3                CALL MME$WGVP(%USERWSQ,VPNO,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),
      901     2796    3                  ERR) ALTRET(NO_MORE);
      902     2797
      903     2798        /* Copy the page.
      904     2799        */
      905     2800    3                CALL MME$CVM(%USERWSQ,%SBUF2PG,PPNO,ERR) ALTRET(NO_MORE);
      906     2801    3                PROC$ = PINCRW(B$USERIS$,(VPNO-%ISEGLO)*1024);
      907     2802    3                PROC$ -> B$PAGE = B$SBUF2$ -> B$PAGE;
      908     2803
      909     2804        /* Reset the write access control bit if DELTA is not in control.
      910     2805        */
      911     2806    3                IF NOT(S$CU$->B$U.FLG & %U_DIC)
      912     2807    3                THEN B$UPT$->B$MAP.CTRL(VPNO) = (%PGINMEM | %PGIOM);
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:167  
      913     2808    3                END;
      914     2809    2           END;
      915     2810
      916     2811        /* Set that the procedure is not protected if DELTA is in control.
      917     2812           Write access will eventually be reset when DELTA does the M$DRTN.
      918     2813        */
      919     2814    1      IF S$CU$->B$U.FLG & %U_DIC
      920     2815    1      THEN B$JIT.JUNK2 = B$JIT.JUNK2 | %JJ2_PACCESS#;
      921     2816
      922     2817    1      CALL MME$CVM(%USERWSQ,%SBUF2PG,-1,ERR) ALTRET(NO_MORE);
      923     2818           %LOCK (G=J_PLOCK);                   /* LOCK PROCESSOR TABLE               */
      924     2821    1      CALL DECUC (PNUM);
      925     2822    1      CALL DECUC (ONUM);
      926     2823
      927     2824    1      PNUM = 0;                            /* SET PROCESSOR TO 0                 */
      928     2825           %UNLOCK (G=J_PLOCK);
      929     2828
      930     2829        /* Reset max core to the user's real max value and return.
      931     2830        */
      932     2831    1      B$JIT.MAXCORE = MAXCORE;
      933     2832    1      RETURN;
      934     2833
      935     2834
      936     2835        /* If an error occurs, any pages acquired must be returned and the
      937     2836           processor must be reassociated.
      938     2837        */
      939     2838    1   NO_MORE:;
      940     2839    1      B$JIT.ERR = J_ERR|BINBIT(ERR,33);
      941     2840    1      B$JIT.MAXCORE = MAXCORE;
      942     2841    1      CALL MME$CVM(%USERWSQ,%SBUF2PG,-1,ERR); /* Clear out CVMed area            */
      943     2842    2      DO VPNO = B$P$ -> B$P.PVA(PNUM) TO HIVA;
      944     2843    2           IF B$UPT.SCTRL(VPNO) = %SCUSER
      945     2844    3           THEN DO;
      946     2845    3                CALL MME$WFVP(%USERWSQ,VPNO,ERR,ERR) ALTRET(OOPS);
      947     2846    3                IF VPNO<=B$JIT$->B$JIT.PUL
      948     2847    3                THEN B$JIT$->B$JIT.PCP = B$JIT$->B$JIT.PCP + 1;
      949     2848    3                END;
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:168  
      950     2849    2           END;
      951     2850
      952     2851    1      CALL SSR$REG(%SS_AP);
      953     2852    1   OOPS:;
      954     2853    1      ALTRETURN;
      955     2854
      956     2855    1   DECUC: PROC (P);
      957     2856    2   DCL P UBIN;
      958     2857    2      PROC$ = ADDR (B$P$->B$P(P));
      959     2858    2      PROC$ -> B$P.UC(0) = PROC$ -> B$P.UC(0) - 1;
      960     2859    2      IF P >= P_AUTO_START
      961     2860    3      THEN DO;
      962     2861    3           IF PROC$ -> B$P.UC(0) = 0
      963     2862    4           THEN DO;
      964     2863    4                MM$BYP.AUTOINUSE = MM$BYP.AUTOINUSE - PROC$ -> B$P.PPC(0);
      965     2864    4                MM$BYP.AUTOP = MM$BYP.AUTOP + PROC$ -> B$P.PPC(0);
      966     2865    4                END;
      967     2866    3           END;
      968     2867    2   END DECUC;
      969     2868    1   END JSA$UNSHARE;

PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:169  
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   UM_CP6.:E05TOU  is referenced.
      No diagnostics issued in procedure JSA$UNSHARE.

   Procedure JSA$UNSHARE requires 230 words for executable code.
   Procedure JSA$UNSHARE requires 18 words of local(AUTO) storage.

    No errors detected in file JSA$UTIL.:E05TSI    .

PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:170  

 Object Unit name= JSA$UNSHARE                                File name= JSA$UTIL.:E05TOU
 UTS= JUL 29 '97 23:44:54.56 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  JSA$UNSHARE
    1   Proc  even  none   230    346  JSA$UNSHARE
    2  RoData even  none    11     13  JSA$UNSHARE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  JSA$UNSHARE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 HFC$ASSOCCLR
 yes     yes           Std       4 MME$WFVP
 yes     yes           Std       3 SSR$REG
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       4 MME$WGVP
 yes     yes           Std       4 MME$CVM
         yes           Std       1 HFC$LOCK
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:171  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_WSQ0PT                             P_AUTO_START                          B$P$
r    MM_BYP$                               MM_FPMC                          r    B$UPT$
r    B$USERIS$                        r    B$SBUF2$                         r    B$JIT$
r    B$IPHYMAP$                            J_PLOCK                               S$CU$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:172  


      821        1        /*T***********************************************************/
      822        2        /*T*                                                         */
      823        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      824        4        /*T*                                                         */
      825        5        /*T***********************************************************/
      826        6        /*F*      NAME: JSA$UNSHARE
      827        7                  PURPOSE: This routine will give the user a copy of the
      828        8                           procedure of a shared program and or library.
      829        9                         */
      830       10
      831       11        JSA$UNSHARE: PROC(PNUM,ONUM) ALTRET;

     11  1 000000   000000 700200 xent  JSA$UNSHARE  TSX0  ! X66_AUTO_2
         1 000001   000022 000002                    ZERO    18,2

      832       12
      833       13    1   DCL ONUM UBIN WORD;
      834       14    1   DCL PNUM UBIN WORD;
      835       15
      836       16    1   DCL PPNO UBIN WORD;                     /* PHYSICAL PAGE                      */
      837       17    1   DCL ERR UBIN;
      838       18    1   DCL HIVA UBIN;                          /* HIGHEST VIRTUAL ADDRESS            */
      839       19    1   DCL VPNO UBIN;
      840       20    1   DCL PROC$ PTR;
      841       21    1   DCL MAXCORE UBIN HALF;
      842       22    1   DCL TEMP UBIN;
      843       23
      844       24        %INCLUDE UM_CP6;
      845      876        %INCLUDE HF_LOCK_C;
      846      890        %INCLUDE HF_DATA_R;
      847      933        %INCLUDE B$MAP;
      848     1032        %INCLUDE B$P;
      849     1116        %INCLUDE MM_DATA_R;
      850     1636        %INCLUDE SS_SCHED_C;
      851     1869        %INCLUDE B$JIT;
      852     2472        %INCLUDE B$USER;
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:173  
      853     2688        %INCLUDE UD_SEV_C;
      854     2702
      855     2703    1   DCL HFC$ASSOCCLR ENTRY;
      856     2704    1   DCL MME$WGVP ENTRY(4) ALTRET;
      857     2705    1   DCL MME$WFVP ENTRY(4) ALTRET;
      858     2706    1   DCL SSR$REG ENTRY(3) ALTRET;
      859     2707    1   DCL MME$CVM ENTRY(4) ALTRET;
      860     2708
      861     2709    1   DCL B$UPT$ PTR SYMREF READONLY;
      862     2710    1   DCL B$USERIS$ PTR SYMREF READONLY;
      863     2711    1   DCL B$SBUF2$ PTR SYMREF READONLY;
      864     2712    1   DCL B$JIT$ PTR SYMREF READONLY;
      865     2713    1   DCL B$PPUT$ PTR SYMREF READONLY;
      866     2714    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
      867     2715
      868     2716    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      869     2717        %B$USERREFS;
      870     2721
      871     2722        %VLP_ERRCODE (FPTN=J_ERR,STCLASS=CONSTANT,FCG=JS,MID=A,SEV=SEV_ERROR#,MON='1'B);
      872     2767        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
      873     2768        %SUB B$UPT=B$UPT$->B$MAP;
      874     2769
      875     2770        %EJECT;
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:174  
      876     2771
      877     2772        /* Remember the users max core value and set max core high enough
      878     2773           to prevent the inability to unshare.
      879     2774        */
      880     2775    1      MAXCORE = B$JIT.MAXCORE;

   2775  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000210 220100                    LDX0    136,,PR0
         1 000004   200012 740100                    STX0    MAXCORE,,AUTO

      881     2776    1      B$JIT.MAXCORE = 1024;

   2776  1 000005   002000 221003                    LDX1    1024,DU
         1 000006   000210 741100                    STX1    136,,PR0

      882     2777    1      CALL HFC$ASSOCCLR;                   /*General clear for sbuf also         */

   2777  1 000007   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000010   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000011   000000 011000                    NOP     0

      883     2778    1      HIVA = B$P$ -> B$P.HVA(PNUM) - 1;

   2778  1 000012   200003 470500                    LDP0    @PNUM,,AUTO
         1 000013   000000 236100                    LDQ     0,,PR0
         1 000014   000021 402007                    MPY     17,DL
         1 000015   000001 736000                    QLS     1
         1 000016   000000 471400 xsym               LDP1    B$P$
         1 000017   100026 236106                    LDQ     22,QL,PR1
         1 000020   000022 772000                    QRL     18
         1 000021   000001 136007                    SBLQ    1,DL
         1 000022   200007 756100                    STQ     HIVA,,AUTO

      884     2779
      885     2780    2      DO VPNO = B$P$ -> B$P.PVA(PNUM) TO HIVA;

   2780  1 000023   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:175  
         1 000024   000021 402007                    MPY     17,DL
         1 000025   000001 736000                    QLS     1
         1 000026   100025 236106                    LDQ     21,QL,PR1
         1 000027   000022 772000                    QRL     18
         1 000030   200010 756100                    STQ     VPNO,,AUTO
         1 000031   000144 710000 1                  TRA     s:2809+3

      886     2781    2           IF B$UPT.RPN(VPNO) ~= MM_FPMC.RPN

   2781  1 000032   000000 470400 xsym               LDP0    B$UPT$
         1 000033   200010 720100                    LXL0    VPNO,,AUTO
         1 000034   000000 221110                    LDX1    0,X0,PR0
         1 000035   000000 101000 xsym               CMPX1   MM_FPMC
         1 000036   000141 600000 1                  TZE     s:2809

      887     2782    3           THEN DO;

      888     2783    3                IF HW_WSQ0PT THEN

   2783  1 000037   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000040   000051 605000 1                  TPL     s:2786

      889     2784    3                     PPNO=B$IPHYMAP$->MM$IPHY_MAP(B$UPT.RPN(VPNO));

   2784  1 000041   000000 236110                    LDQ     0,X0,PR0
         1 000042   000022 772000                    QRL     18
         1 000043   000001 736000                    QLS     1
         1 000044   000000 471400 xsym               LDP1    B$IPHYMAP$
         1 000045   000100 101506                    MRL     fill='000'O
         1 000046   100000 000002                    ADSC9   0,Q,PR1                  cn=0,n=2
         1 000047   200005 000004                    ADSC9   PPNO,,AUTO               cn=0,n=4
         1 000050   000054 710000 1                  TRA     s:2787

      890     2785    3                ELSE
      891     2786    3                     PPNO = B$UPT.RPN(VPNO); /* SAVE REAL PAGE                   */

   2786  1 000051   000000 236110                    LDQ     0,X0,PR0
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:176  
         1 000052   000022 772000                    QRL     18
         1 000053   200005 756100                    STQ     PPNO,,AUTO

      892     2787    3                B$UPT(VPNO) = MM_FPMC;

   2787  1 000054   000000 236000 xsym               LDQ     MM_FPMC
         1 000055   000000 756110                    STQ     0,X0,PR0

      893     2788
      894     2789        /* Decrement the page count of procedure as MME$WGVP will
      895     2790           increment it again.
      896     2791        */
      897     2792    3                IF VPNO <= B$JIT$->B$JIT.PUL

   2792  1 000056   000000 471400 xsym               LDP1    B$JIT$
         1 000057   100176 236100                    LDQ     126,,PR1
         1 000060   777777 376007                    ANQ     -1,DL
         1 000061   200010 116100                    CMPQ    VPNO,,AUTO
         1 000062   000066 602000 1                  TNC     s:2795

      898     2793    3                THEN B$JIT$->B$JIT.PCP = B$JIT$->B$JIT.PCP - 1;

   2793  1 000063   100201 220100                    LDX0    129,,PR1
         1 000064   777777 621010                    EAX1    -1,X0
         1 000065   100201 741100                    STX1    129,,PR1

      899     2794
      900     2795    3                CALL MME$WGVP(%USERWSQ,VPNO,BITBIN(%PGINMEM|%PGIOM|%PGWRITE),

   2795  1 000066   200006 633500                    EPPR3   ERR,,AUTO
         1 000067   200021 453500                    STP3    @P+4,,AUTO
         1 000070   000001 236000 2                  LDQ     1
         1 000071   200020 756100                    STQ     @P+3,,AUTO
         1 000072   200010 634500                    EPPR4   VPNO,,AUTO
         1 000073   200017 454500                    STP4    @P+2,,AUTO
         1 000074   000002 236000 2                  LDQ     2
         1 000075   200016 756100                    STQ     @P+1,,AUTO
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:177  
         1 000076   200016 630500                    EPPR0   @P+1,,AUTO
         1 000077   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000100   000000 701000 xent               TSX1    MME$WGVP
         1 000101   000217 702000 1                  TSX2    NO_MORE

      901     2796    3                  ERR) ALTRET(NO_MORE);
      902     2797
      903     2798        /* Copy the page.
      904     2799        */
      905     2800    3                CALL MME$CVM(%USERWSQ,%SBUF2PG,PPNO,ERR) ALTRET(NO_MORE);

   2800  1 000102   200006 630500                    EPPR0   ERR,,AUTO
         1 000103   200021 450500                    STP0    @P+4,,AUTO
         1 000104   200005 631500                    EPPR1   PPNO,,AUTO
         1 000105   200020 451500                    STP1    @P+3,,AUTO
         1 000106   000004 237000 2                  LDAQ    4
         1 000107   200016 757100                    STAQ    @P+1,,AUTO
         1 000110   200016 630500                    EPPR0   @P+1,,AUTO
         1 000111   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000112   000000 701000 xent               TSX1    MME$CVM
         1 000113   000217 702000 1                  TSX2    NO_MORE

      906     2801    3                PROC$ = PINCRW(B$USERIS$,(VPNO-%ISEGLO)*1024);

   2801  1 000114   200010 236100                    LDQ     VPNO,,AUTO
         1 000115   000034 736000                    QLS     28
         1 000116   200000 136003                    SBLQ    65536,DU
         1 000117   000000 036000 xsym               ADLQ    B$USERIS$
         1 000120   200011 756100                    STQ     PROC$,,AUTO

      907     2802    3                PROC$ -> B$PAGE = B$SBUF2$ -> B$PAGE;

   2802  1 000121   000000 470400 xsym               LDP0    B$SBUF2$
         1 000122   010000 220003                    LDX0    4096,DU
         1 000123   200011 471500                    LDP1    PROC$,,AUTO
         1 000124   000140 100540                    MLR     fill='000'O
         1 000125   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:178  
         1 000126   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      908     2803
      909     2804        /* Reset the write access control bit if DELTA is not in control.
      910     2805        */
      911     2806    3                IF NOT(S$CU$->B$U.FLG & %U_DIC)

   2806  1 000127   000000 473400 xsym               LDP3    S$CU$
         1 000130   300000 236100                    LDQ     0,,PR3
         1 000131   000001 376000 0                  ANQ     J_ERR+1
         1 000132   000141 601000 1                  TNZ     s:2809

      912     2807    3                THEN B$UPT$->B$MAP.CTRL(VPNO) = (%PGINMEM | %PGIOM);

   2807  1 000133   000000 474400 xsym               LDP4    B$UPT$
         1 000134   200010 721100                    LXL1    VPNO,,AUTO
         1 000135   400000 236111                    LDQ     0,X1,PR4
         1 000136   000006 376000 2                  ANQ     6
         1 000137   000044 276007                    ORQ     36,DL
         1 000140   400000 756111                    STQ     0,X1,PR4

      913     2808    3                END;

      914     2809    2           END;

   2809  1 000141   200010 235100                    LDA     VPNO,,AUTO
         1 000142   000001 035007                    ADLA    1,DL
         1 000143   200010 755100                    STA     VPNO,,AUTO
         1 000144   200007 236100                    LDQ     HIVA,,AUTO
         1 000145   200010 116100                    CMPQ    VPNO,,AUTO
         1 000146   000032 603000 1                  TRC     s:2781

      915     2810
      916     2811        /* Set that the procedure is not protected if DELTA is in control.
      917     2812           Write access will eventually be reset when DELTA does the M$DRTN.
      918     2813        */
      919     2814    1      IF S$CU$->B$U.FLG & %U_DIC
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:179  

   2814  1 000147   000000 470400 xsym               LDP0    S$CU$
         1 000150   000000 236100                    LDQ     0,,PR0
         1 000151   000001 376000 0                  ANQ     J_ERR+1
         1 000152   000157 600000 1                  TZE     s:2817

      920     2815    1      THEN B$JIT.JUNK2 = B$JIT.JUNK2 | %JJ2_PACCESS#;

   2815  1 000153   000000 471400 xsym               LDP1    B$JIT$
         1 000154   100321 220100                    LDX0    209,,PR1
         1 000155   000002 260003                    ORX0    2,DU
         1 000156   100321 740100                    STX0    209,,PR1

      921     2816
      922     2817    1      CALL MME$CVM(%USERWSQ,%SBUF2PG,-1,ERR) ALTRET(NO_MORE);

   2817  1 000157   200006 631500                    EPPR1   ERR,,AUTO
         1 000160   200021 451500                    STP1    @P+4,,AUTO
         1 000161   000007 236000 2                  LDQ     7
         1 000162   200020 756100                    STQ     @P+3,,AUTO
         1 000163   000004 237000 2                  LDAQ    4
         1 000164   200016 757100                    STAQ    @P+1,,AUTO
         1 000165   200016 630500                    EPPR0   @P+1,,AUTO
         1 000166   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000167   000000 701000 xent               TSX1    MME$CVM
         1 000170   000217 702000 1                  TSX2    NO_MORE

      923     2818           %LOCK (G=J_PLOCK);                   /* LOCK PROCESSOR TABLE               */

   2819  1 000171   000010 630400 2                  EPPR0   8
         1 000172   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000173   000000 701000 xent               TSX1    HFC$LOCK
         1 000174   000000 011000                    NOP     0

      924     2821    1      CALL DECUC (PNUM);

   2821  1 000175   200003 236100                    LDQ     @PNUM,,AUTO
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:180  
         1 000176   200015 756100                    STQ     MAXCORE+3,,AUTO
         1 000177   000316 701000 1                  TSX1    DECUC
         1 000200   000000 011000                    NOP     0

      925     2822    1      CALL DECUC (ONUM);

   2822  1 000201   200004 236100                    LDQ     @ONUM,,AUTO
         1 000202   200015 756100                    STQ     MAXCORE+3,,AUTO
         1 000203   000316 701000 1                  TSX1    DECUC
         1 000204   000000 011000                    NOP     0

      926     2823
      927     2824    1      PNUM = 0;                            /* SET PROCESSOR TO 0                 */

   2824  1 000205   200003 470500                    LDP0    @PNUM,,AUTO
         1 000206   000000 450100                    STZ     0,,PR0

      928     2825           %UNLOCK (G=J_PLOCK);

   2826  1 000207   000010 630400 2                  EPPR0   8
         1 000210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000211   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000212   000000 011000                    NOP     0

      929     2828
      930     2829        /* Reset max core to the user's real max value and return.
      931     2830        */
      932     2831    1      B$JIT.MAXCORE = MAXCORE;

   2831  1 000213   200012 220100                    LDX0    MAXCORE,,AUTO
         1 000214   000000 470400 xsym               LDP0    B$JIT$
         1 000215   000210 740100                    STX0    136,,PR0

      933     2832    1      RETURN;

   2832  1 000216   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:181  
   2831  1 000217                       NO_MORE      null
      934     2833
      935     2834
      936     2835        /* If an error occurs, any pages acquired must be returned and the
      937     2836           processor must be reassociated.
      938     2837        */
      939     2838    1   NO_MORE:;
      940     2839    1      B$JIT.ERR = J_ERR|BINBIT(ERR,33);

   2839  1 000217   200006 236100                    LDQ     ERR,,AUTO
         1 000220   000003 736000                    QLS     3
         1 000221   000000 276000 0                  ORQ     J_ERR
         1 000222   000000 470400 xsym               LDP0    B$JIT$
         1 000223   000012 756100                    STQ     10,,PR0

      941     2840    1      B$JIT.MAXCORE = MAXCORE;

   2840  1 000224   200012 220100                    LDX0    MAXCORE,,AUTO
         1 000225   000210 740100                    STX0    136,,PR0

      942     2841    1      CALL MME$CVM(%USERWSQ,%SBUF2PG,-1,ERR); /* Clear out CVMed area            */

   2841  1 000226   200006 631500                    EPPR1   ERR,,AUTO
         1 000227   200021 451500                    STP1    @P+4,,AUTO
         1 000230   000007 236000 2                  LDQ     7
         1 000231   200020 756100                    STQ     @P+3,,AUTO
         1 000232   000004 237000 2                  LDAQ    4
         1 000233   200016 757100                    STAQ    @P+1,,AUTO
         1 000234   200016 630500                    EPPR0   @P+1,,AUTO
         1 000235   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000236   000000 701000 xent               TSX1    MME$CVM
         1 000237   000000 011000                    NOP     0

      943     2842    2      DO VPNO = B$P$ -> B$P.PVA(PNUM) TO HIVA;

   2842  1 000240   200003 470500                    LDP0    @PNUM,,AUTO
         1 000241   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:182  
         1 000242   000021 402007                    MPY     17,DL
         1 000243   000001 736000                    QLS     1
         1 000244   000000 471400 xsym               LDP1    B$P$
         1 000245   100025 236106                    LDQ     21,QL,PR1
         1 000246   000022 772000                    QRL     18
         1 000247   200010 756100                    STQ     VPNO,,AUTO
         1 000250   000306 710000 1                  TRA     s:2849+3

      944     2843    2           IF B$UPT.SCTRL(VPNO) = %SCUSER

   2843  1 000251   000000 470400 xsym               LDP0    B$UPT$
         1 000252   200010 720100                    LXL0    VPNO,,AUTO
         1 000253   000000 236110                    LDQ     0,X0,PR0
         1 000254   777400 376007                    ANQ     -256,DL
         1 000255   000400 116007                    CMPQ    256,DL
         1 000256   000303 601000 1                  TNZ     s:2849

      945     2844    3           THEN DO;

      946     2845    3                CALL MME$WFVP(%USERWSQ,VPNO,ERR,ERR) ALTRET(OOPS);

   2845  1 000257   200006 631500                    EPPR1   ERR,,AUTO
         1 000260   200021 451500                    STP1    @P+4,,AUTO
         1 000261   200006 633500                    EPPR3   ERR,,AUTO
         1 000262   200020 453500                    STP3    @P+3,,AUTO
         1 000263   200010 634500                    EPPR4   VPNO,,AUTO
         1 000264   200017 454500                    STP4    @P+2,,AUTO
         1 000265   000002 236000 2                  LDQ     2
         1 000266   200016 756100                    STQ     @P+1,,AUTO
         1 000267   200016 630500                    EPPR0   @P+1,,AUTO
         1 000270   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000271   000000 701000 xent               TSX1    MME$WFVP
         1 000272   000315 702000 1                  TSX2    OOPS

      947     2846    3                IF VPNO<=B$JIT$->B$JIT.PUL

   2846  1 000273   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:183  
         1 000274   000176 236100                    LDQ     126,,PR0
         1 000275   777777 376007                    ANQ     -1,DL
         1 000276   200010 116100                    CMPQ    VPNO,,AUTO
         1 000277   000303 602000 1                  TNC     s:2849

      948     2847    3                THEN B$JIT$->B$JIT.PCP = B$JIT$->B$JIT.PCP + 1;

   2847  1 000300   000201 220100                    LDX0    129,,PR0
         1 000301   000001 621010                    EAX1    1,X0
         1 000302   000201 741100                    STX1    129,,PR0

      949     2848    3                END;

      950     2849    2           END;

   2849  1 000303   200010 235100                    LDA     VPNO,,AUTO
         1 000304   000001 035007                    ADLA    1,DL
         1 000305   200010 755100                    STA     VPNO,,AUTO
         1 000306   200007 236100                    LDQ     HIVA,,AUTO
         1 000307   200010 116100                    CMPQ    VPNO,,AUTO
         1 000310   000251 603000 1                  TRC     s:2843

      951     2850
      952     2851    1      CALL SSR$REG(%SS_AP);

   2851  1 000311   000012 630400 2                  EPPR0   10
         1 000312   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000313   000000 701000 xent               TSX1    SSR$REG
         1 000314   000000 011000                    NOP     0

   2847  1 000315                       OOPS         null
      953     2852    1   OOPS:;
      954     2853    1      ALTRETURN;

   2853  1 000315   000000 702200 xent               TSX2  ! X66_AALT

      955     2854
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:184  
      956     2855    1   DECUC: PROC (P);

   2855  1 000316   200014 741300       DECUC        STX1  ! MAXCORE+2,,AUTO

      957     2856    2   DCL P UBIN;
      958     2857    2      PROC$ = ADDR (B$P$->B$P(P));

   2857  1 000317   200015 470500                    LDP0    @P,,AUTO
         1 000320   000000 236100                    LDQ     0,,PR0
         1 000321   000021 402007                    MPY     17,DL
         1 000322   000023 736000                    QLS     19
         1 000323   000000 036000 xsym               ADLQ    B$P$
         1 000324   200011 756100                    STQ     PROC$,,AUTO

      959     2858    2      PROC$ -> B$P.UC(0) = PROC$ -> B$P.UC(0) - 1;

   2858  1 000325   200011 471500                    LDP1    PROC$,,AUTO
         1 000326   000001 336007                    LCQ     1,DL
         1 000327   100000 056100                    ASQ     0,,PR1

      960     2859    2      IF P >= P_AUTO_START

   2859  1 000330   000000 236100                    LDQ     0,,PR0
         1 000331   000000 116000 xsym               CMPQ    P_AUTO_START
         1 000332   000344 602000 1                  TNC     s:2867

      961     2860    3      THEN DO;

      962     2861    3           IF PROC$ -> B$P.UC(0) = 0

   2861  1 000333   100000 235100                    LDA     0,,PR1
         1 000334   000344 601000 1                  TNZ     s:2867

      963     2862    4           THEN DO;

      964     2863    4                MM$BYP.AUTOINUSE = MM$BYP.AUTOINUSE - PROC$ -> B$P.PPC(0);

PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:185  
   2863  1 000335   000000 473400 xsym               LDP3    MM_BYP$
         1 000336   300015 236100                    LDQ     13,,PR3
         1 000337   100003 136100                    SBLQ    3,,PR1
         1 000340   300015 756100                    STQ     13,,PR3

      965     2864    4                MM$BYP.AUTOP = MM$BYP.AUTOP + PROC$ -> B$P.PPC(0);

   2864  1 000341   300014 236100                    LDQ     12,,PR3
         1 000342   100003 036100                    ADLQ    3,,PR1
         1 000343   300014 756100                    STQ     12,,PR3

      966     2865    4                END;

      967     2866    3           END;

      968     2867    2   END DECUC;

   2867  1 000344   200014 221300                    LDX1  ! MAXCORE+2,,AUTO
         1 000345   000001 702211                    TSX2  ! 1,X1

J_ERR
 Sect OctLoc
   0     000   122301 400004                                                    R...

(unnamed)
 Sect OctLoc
   0     001   100000 000000                                                    @...

(unnamed)
 Sect OctLoc
   2     000   000000 000064   000000 006000   000012 006000   000000 000500    ...4............
   2     004   000012 006000   000003 006000   777777 777700   000027 006000    ................
   2     010   000000 006000   000000 000043   000011 006000                    .......#....
      969     2868    1   END JSA$UNSHARE;

PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:186  
--  Include file information  --

   UD_SEV_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   UM_CP6.:E05TOU  is referenced.
      No diagnostics issued in procedure JSA$UNSHARE.
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:187  

 **** Variables and constants ****

  ****  Section 000 RoData JSA$UNSHARE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 J_ERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ONUM                     15-0-0/w PTR         r     1 @P
     3-0-0/w PTR         r     1 @PNUM                      6-0-0/w UBIN        r     1 ERR
     7-0-0/w UBIN        r     1 HIVA                      12-0-0/w UBIN(18)    r     1 MAXCORE
    *0-0-0/w UBIN        r     1 ONUM                      *0-0-0/w UBIN        r     1 P
    *0-0-0/w UBIN        r     1 PNUM                       5-0-0/w UBIN        r     1 PPNO
    11-0-0/w PTR         r     1 PROC$                     10-0-0/w UBIN        r     1 VPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$P$                       0-0-0/w PTR         r     1 B$SBUF2$
     0-0-0/w PTR         r     1 B$UPT$                     0-0-0/w PTR         r     1 B$USERIS$
     0-0-0/w BIT         r     1 HW_WSQ0PT                  0-0-0/d BIT (72)    r     1 J_PLOCK
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC
     0-0-0/w UBIN        r     1 P_AUTO_START               0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:188  

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/w STRC(36864) r     1 B$PAGE
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/w STRC(576)   r     1 MM$BYP
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)


   Procedure JSA$UNSHARE requires 230 words for executable code.
   Procedure JSA$UNSHARE requires 18 words of local(AUTO) storage.

    No errors detected in file JSA$UTIL.:E05TSI    .
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:189  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:190  
          MINI XREF LISTING

B$DO.ECCINFO
      2623**DCL      2624--REDEF
B$IPHYMAP$
      2714**DCL      2784>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      2290**DCL      2290--REDEF
B$JIT.ERR
      2196**DCL      2839<<ASSIGN
B$JIT.ERR.MID
      2197**DCL      2197--REDEF
B$JIT.JRESPEAK
      2358**DCL      2359--REDEF
B$JIT.JUNK2
      2450**DCL      2815<<ASSIGN   2815>>ASSIGN
B$JIT.MAXCORE
      2357**DCL      2775>>ASSIGN   2776<<ASSIGN   2831<<ASSIGN   2840<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      2467**DCL      2467--REDEF    2468--REDEF
B$JIT.PCP
      2355**DCL      2793<<ASSIGN   2793>>ASSIGN   2847<<ASSIGN   2847>>ASSIGN
B$JIT.PNR
      2371**DCL      2371--REDEF
B$JIT.PUL
      2354**DCL      2792>>IF       2846>>IF
B$JIT.TSLINE
      2465**DCL      2466--REDEF
B$JIT$
      2712**DCL      2191--IMP-PTR  2775>>ASSIGN   2776>>ASSIGN   2792>>IF       2793>>ASSIGN   2793>>ASSIGN
      2815>>ASSIGN   2815>>ASSIGN   2831>>ASSIGN   2839>>ASSIGN   2840>>ASSIGN   2846>>IF       2847>>ASSIGN
      2847>>ASSIGN
B$MAP
       974**DCL      2787<<ASSIGN
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:191  
B$MAP.CTRL
       979**DCL      2807<<ASSIGN
B$MAP.RPN
       975**DCL      2781>>IF       2784>>ASSIGN   2786>>ASSIGN
B$MAP.SCTRL
       976**DCL       977--REDEF    2843>>IF
B$P
      1040**DCL      2857--ASSIGN
B$P.HVA
      1059**DCL      2778>>ASSIGN
B$P.PPC
      1044**DCL      2863>>ASSIGN   2864>>ASSIGN
B$P.PVA
      1057**DCL      2780>>DOINDEX  2842>>DOINDEX
B$P.UC
      1041**DCL      2858<<ASSIGN   2858>>ASSIGN   2861>>IF
B$P$
      1094**DCL      2778>>ASSIGN   2780>>DOINDEX  2842>>DOINDEX  2857>>ASSIGN
B$PAGE
      1025**DCL      2802<<ASSIGN   2802>>ASSIGN
B$SBUF2$
      2711**DCL      2802>>ASSIGN
B$U.FLG
      2489**DCL      2806>>IF       2814>>IF
B$U.MISC
      2602**DCL      2603--REDEF
B$UPT$
      2709**DCL      2781>>IF       2784>>ASSIGN   2786>>ASSIGN   2787>>ASSIGN   2807>>ASSIGN   2843>>IF
B$USER.MISC
      2678**DCL      2679--REDEF
B$USERIS$
      2710**DCL      2801>>ASSIGN
DECUC
      2855**PROC     2821--CALL     2822--CALL
ERR
        17**DCL      2795<>CALL     2800<>CALL     2817<>CALL     2839>>ASSIGN   2841<>CALL     2845<>CALL
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:192  
      2845<>CALL
HFC$ASSOCCLR
      2703**DCL-ENT  2777--CALL
HFC$LOCK
       889**DCL-ENT  2819--CALL
HFC$UNLOCK
       889**DCL-ENT  2826--CALL
HIVA
        18**DCL      2778<<ASSIGN   2780>>DOINDEX  2842>>DOINDEX
HW_WSQ0PT
       928**DCL      2783>>IF
J_ERR
      2734**DCL      2839>>ASSIGN
J_PLOCK
      2716**DCL      2819<>CALL     2826<>CALL
MAXCORE
        21**DCL      2775<<ASSIGN   2831>>ASSIGN   2840>>ASSIGN
MM$BYP.AUTOINUSE
      1509**DCL      2863<<ASSIGN   2863>>ASSIGN
MM$BYP.AUTOP
      1509**DCL      2864<<ASSIGN   2864>>ASSIGN
MM$DESC.BOUND
      1587**DCL      1588--REDEF
MM$DESC.FLGS
      1588**DCL      1588--REDEF
MM$IPHY_MAP
      1030**DCL      2784>>ASSIGN
MM$PPUT.USER#
      1576**DCL      1576--REDEF
MME$CVM
      2707**DCL-ENT  2800--CALL     2817--CALL     2841--CALL
MME$WFVP
      2705**DCL-ENT  2845--CALL
MME$WGVP
      2704**DCL-ENT  2795--CALL
MM_BYP$
PL6.E3A0      #007=JSA$UNSHARE File=JSA$UTIL.:E05TSI                             TUE 07/29/97 23:44 Page:193  
      1507**DCL      1507--IMP-PTR  2863>>ASSIGN   2863>>ASSIGN   2864>>ASSIGN   2864>>ASSIGN
MM_FPMC
      1513**DCL      2787>>ASSIGN
MM_FPMC.RPN
      1513**DCL      2781>>IF
NO_MORE
      2831**LABEL    2795--CALLALT  2800--CALLALT  2817--CALLALT
ONUM
        13**DCL        11--PROC     2822<>CALL
OOPS
      2847**LABEL    2845--CALLALT
P IN PROCEDURE DECUC
      2856**DCL      2855--PROC     2857>>ASSIGN   2859>>IF
PNUM
        14**DCL        11--PROC     2778>>ASSIGN   2780>>DOINDEX  2821<>CALL     2824<<ASSIGN   2842>>DOINDEX
PPNO
        16**DCL      2784<<ASSIGN   2786<<ASSIGN   2800<>CALL
PROC$
        20**DCL      2801<<ASSIGN   2802>>ASSIGN   2857<<ASSIGN   2858>>ASSIGN   2858>>ASSIGN   2861>>IF
      2863>>ASSIGN   2864>>ASSIGN
P_AUTO_START
      1089**DCL      2859>>IF
S$CU$
      2718**DCL      2806>>IF       2814>>IF
SSR$REG
      2706**DCL-ENT  2851--CALL
VPNO
        19**DCL      2780<<DOINDEX  2781>>IF       2784>>ASSIGN   2786>>ASSIGN   2787>>ASSIGN   2792>>IF
      2795<>CALL     2801>>ASSIGN   2807>>ASSIGN   2842<<DOINDEX  2843>>IF       2845<>CALL     2846>>IF
