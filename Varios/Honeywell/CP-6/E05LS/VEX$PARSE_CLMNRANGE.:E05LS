VERSION E05

PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:1    
        1        1        /*M*    VEX$PARSE_CLMNRANGE - TURN PARSE INPUT INTO A RANGE OF COLUMNS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$PARSE_CLMNRANGE: PROC(LO_CLMN,HI_CLMN,P$) ALTRET;
        9        9        /**/
       10       10        /*F*     NAME:     VEX$PARSE_CLMNRANGE
       11       11                 PURPOSE:  TO CONVERT THE PARSE BLOCKS FROM M$PARSE INTO COLUMN
       12       12                           NUMBER VALUES.                         */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$PARSE_CLMNRANGE
       15       15                 PARAMETERS: LO_CLMN - VALUE OF FIRST COLUMN NUMBER INPUT
       16       16                           HI_CLMN - VALUE OF SECOND COLUMN NUMBER INPUT
       17       17                           P$ - POINTER TO FIRST PARSE BLOCK DESCRIBING THE COLUMN
       18       18                                RANGE.
       19       19                 DESCRIPTION: P$ POINTS TO A PARSE BLOCK THAT HAS EITHER ONE OR
       20       20                           TWO SUB-POINTERS. THESE POINTERS POINT TO PARSE BLOCKS
       21       21                           WHICH POINT TO THE TEXT INPUT. CHARBIN IS CALLED TO
       22       22                           CONVERT THE TEXT TO BINARY. IF THE VALUE INPUT IS
       23       23                           GRATER THAN MAX_CLMN OR LESS THAN ONE THEN THE USER IS
       24       24                           INFORMED OF THE ERROR AND VEX$PARSE_CLMNRANGE ALTRETURNS.
       25       25                           IF A SECOND COLUMN NUMBER IS GIVEN THEN IT ALSO IS
       26       26                           CONVERTED BY CHARBIN AND A CHECK IS MADE TO INSURE THAT
       27       27                           IT TOO IS A LEGAL COLUMN NUMBER AND GREATER THAN LO_CLMN,
       28       28                           IF THESE CONDITIONS ARE NOT MET THEN AN ERROR MESSAGE
       29       29                           IS OUTPUT AND AN ALTRETURN IS PERFORMED. IF NO SECOND
       30       30                           COLUMN NUMBER WAS INPUT THEN HI_CLMN IS SET EQUAL TO
       31       31                           LO_CLMN.
       32       32                 NOTE:     EDIT NUMBERS COLUMNS STARTING WITH ONE (1) AND THE
       33       33                           STRING FUNCTIONS START WITH ZERO (0). THUS EDIT
       34       34                           DECREMENTS ALL INPUT COLUMN NUMBERS BY ONE.  */
       35       35        /**/
       36       36        /**********************************************************************/
       37       37        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:2    
       38       38        /**********************************************************************/
       39       39    1   DCL LO_CLMN UBIN(36);
       40       40    1   DCL HI_CLMN UBIN(36);
       41       41    1   DCL P$ PTR;
       42       42        /**/
       43       43        /*****************************************************************/
       44       44        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       45       45        /*****************************************************************/
       46       46        %INCLUDE VE_SUBS_C;
       47      240        %INCLUDE VE_PERR_C;
       48      457    1   DCL 1 STR_BUF SYMREF,
       49      458    1          2 COUNT UBIN HALF HALIGNED,
       50      459    1          2 TEXT CHAR(PC_RECSIZE#) CALIGNED;
       51      460    1   DCL MAX_CLMN UBIN(36) SYMREF;
       52      461    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       53      462        /**********************************************************************/
       54      463        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       55      464        /**********************************************************************/
       56      465        /**/
       57      466    1   DCL 1 STR$BUF BASED ALIGNED,
       58      467    1          2 COUNT UBIN(9) UNAL,
       59      468    1          2 TEXT CHAR(255) UNAL;
       60      469        %PLIST;
       61      470        %INCLUDE XU_MACRO_C;
       62     3576        %PARSE$OUT (STCLASS = BASED);
       63     3621        /**/
       64     3622        %EJECT;
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:3    
       65     3623        /*****************************************************************************/
       66     3624        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       67     3625        /*****************************************************************************/
       68     3626    1        STR_BUF.COUNT = P$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.SUBLK$(0) -> STR$BUF.COUNT;
       69     3627    1        STR_BUF.TEXT = P$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.SUBLK$(0) -> STR$BUF.TEXT;
       70     3628    1        CALL CHARBIN (LO_CLMN,SUBSTR(STR_BUF.TEXT,0,STR_BUF.COUNT));
       71     3629    2        IF (LO_CLMN > MAX_CLMN)OR(LO_CLMN < 1) THEN DO;
       72     3630    2   BAD_CLMN:
       73     3631    2           CALL VEX$ERROR(E$E_BADCLMN,3);
       74     3632    2           ALTRETURN;
       75     3633    2           END;
       76     3634        /**/
       77     3635        /*E*     ERROR:    VEE-E$E_BADCLMN-0
       78     3636                 MESSAGE:  Illegal column number
       79     3637                 MESSAGE1: Column number must be in range 1 - 1024
       80     3638                 DESCRIPTION: A column number not in the range 1-1024 has
       81     3639                           been input.
       82     3640        */
       83     3641    1        LO_CLMN = LO_CLMN-1;               /* CONVERT FOR INTERNAL USE           */
       84     3642        /**/
       85     3643    2        IF (P$ -> OUT$BLK.NSUBLKS = 1) THEN DO;
       86     3644    2           HI_CLMN = MAX_CLMN - 1;
       87     3645    2           RETURN;
       88     3646    2           END;
       89     3647        /**/
       90     3648    1        STR_BUF.COUNT = P$ -> OUT$BLK.SUBLK$(1) -> OUT$BLK.SUBLK$(0) -> STR$BUF.COUNT;
       91     3649    1        STR_BUF.TEXT = P$ -> OUT$BLK.SUBLK$(1) -> OUT$BLK.SUBLK$(0) -> STR$BUF.TEXT;
       92     3650    1        CALL CHARBIN (HI_CLMN,SUBSTR(STR_BUF.TEXT,0,STR_BUF.COUNT));
       93     3651    1        IF (HI_CLMN > MAX_CLMN)OR(HI_CLMN < 1) THEN GOTO BAD_CLMN;
       94     3652    1        HI_CLMN = HI_CLMN - 1;             /* CONVERT FOR STRING FUNCTIONS       */
       95     3653        /**/
       96     3654    2        IF (HI_CLMN < LO_CLMN) THEN DO;
       97     3655    2           HI_CLMN = LO_CLMN;
       98     3656    2           CALL VEX$ERROR(E$E_CLMNRNGE,3);
       99     3657    2           ALTRETURN;
      100     3658    2           END;
      101     3659        /**/
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:4    
      102     3660        /*E*     ERROR:    VEE-E$E_CLMNRNGE-0
      103     3661                 MESSAGE:  Illegal column number range - LO > HI
      104     3662                 DESCRIPTION: A column range with the upper limit smaller
      105     3663                           than the lower limit has been input.
      106     3664        */
      107     3665    1        RETURN;
      108     3666    1   END;

PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:5    
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$PARSE_CLMNRANGE.

   Procedure VEX$PARSE_CLMNRANGE requires 79 words for executable code.
   Procedure VEX$PARSE_CLMNRANGE requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$PARSE_CLMNRANGE.:E05TSI    .

PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:6    

 Object Unit name= VEX$PARSE_CLMNRANGE                        File name= VEX$PARSE_CLMNRANGE.:E05TOU
 UTS= JUL 30 '97 07:13:58.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    79    117  VEX$PARSE_CLMNRANGE
    1  RoData even  none     6      6  VEX$PARSE_CLMNRANGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  VEX$PARSE_CLMNRANGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VEX$ERROR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     STR_BUF                               MAX_CLMN                              B_VECTNIL
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:8    


        1        1        /*M*    VEX$PARSE_CLMNRANGE - TURN PARSE INPUT INTO A RANGE OF COLUMNS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$PARSE_CLMNRANGE: PROC(LO_CLMN,HI_CLMN,P$) ALTRET;

      8  0 000000   000000 700200 xent  VEX$PARSE_C* TSX0  ! X66_AUTO_3
         0 000001   000010 000003                    ZERO    8,3

        9        9        /**/
       10       10        /*F*     NAME:     VEX$PARSE_CLMNRANGE
       11       11                 PURPOSE:  TO CONVERT THE PARSE BLOCKS FROM M$PARSE INTO COLUMN
       12       12                           NUMBER VALUES.                         */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$PARSE_CLMNRANGE
       15       15                 PARAMETERS: LO_CLMN - VALUE OF FIRST COLUMN NUMBER INPUT
       16       16                           HI_CLMN - VALUE OF SECOND COLUMN NUMBER INPUT
       17       17                           P$ - POINTER TO FIRST PARSE BLOCK DESCRIBING THE COLUMN
       18       18                                RANGE.
       19       19                 DESCRIPTION: P$ POINTS TO A PARSE BLOCK THAT HAS EITHER ONE OR
       20       20                           TWO SUB-POINTERS. THESE POINTERS POINT TO PARSE BLOCKS
       21       21                           WHICH POINT TO THE TEXT INPUT. CHARBIN IS CALLED TO
       22       22                           CONVERT THE TEXT TO BINARY. IF THE VALUE INPUT IS
       23       23                           GRATER THAN MAX_CLMN OR LESS THAN ONE THEN THE USER IS
       24       24                           INFORMED OF THE ERROR AND VEX$PARSE_CLMNRANGE ALTRETURNS.
       25       25                           IF A SECOND COLUMN NUMBER IS GIVEN THEN IT ALSO IS
       26       26                           CONVERTED BY CHARBIN AND A CHECK IS MADE TO INSURE THAT
       27       27                           IT TOO IS A LEGAL COLUMN NUMBER AND GREATER THAN LO_CLMN,
       28       28                           IF THESE CONDITIONS ARE NOT MET THEN AN ERROR MESSAGE
       29       29                           IS OUTPUT AND AN ALTRETURN IS PERFORMED. IF NO SECOND
       30       30                           COLUMN NUMBER WAS INPUT THEN HI_CLMN IS SET EQUAL TO
       31       31                           LO_CLMN.
       32       32                 NOTE:     EDIT NUMBERS COLUMNS STARTING WITH ONE (1) AND THE
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:9    
       33       33                           STRING FUNCTIONS START WITH ZERO (0). THUS EDIT
       34       34                           DECREMENTS ALL INPUT COLUMN NUMBERS BY ONE.  */
       35       35        /**/
       36       36        /**********************************************************************/
       37       37        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       38       38        /**********************************************************************/
       39       39    1   DCL LO_CLMN UBIN(36);
       40       40    1   DCL HI_CLMN UBIN(36);
       41       41    1   DCL P$ PTR;
       42       42        /**/
       43       43        /*****************************************************************/
       44       44        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       45       45        /*****************************************************************/
       46       46        %INCLUDE VE_SUBS_C;
       47      240        %INCLUDE VE_PERR_C;
       48      457    1   DCL 1 STR_BUF SYMREF,
       49      458    1          2 COUNT UBIN HALF HALIGNED,
       50      459    1          2 TEXT CHAR(PC_RECSIZE#) CALIGNED;
       51      460    1   DCL MAX_CLMN UBIN(36) SYMREF;
       52      461    1   DCL VEX$ERROR ENTRY(2) ALTRET;
       53      462        /**********************************************************************/
       54      463        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       55      464        /**********************************************************************/
       56      465        /**/
       57      466    1   DCL 1 STR$BUF BASED ALIGNED,
       58      467    1          2 COUNT UBIN(9) UNAL,
       59      468    1          2 TEXT CHAR(255) UNAL;
       60      469        %PLIST;
       61      470        %INCLUDE XU_MACRO_C;
       62     3576        %PARSE$OUT (STCLASS = BASED);
       63     3621        /**/
       64     3622        %EJECT;
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:10   
       65     3623        /*****************************************************************************/
       66     3624        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       67     3625        /*****************************************************************************/
       68     3626    1        STR_BUF.COUNT = P$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.SUBLK$(0) -> STR$BUF.COUNT;

   3626  0 000002   200005 470500                    LDP0    @P$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   100003 473500                    LDP3    3,,PR1
         0 000005   300003 474500                    LDP4    3,,PR3
         0 000006   400000 236100                    LDQ     0,,PR4
         0 000007   000033 772000                    QRL     27
         0 000010   000000 620006                    EAX0    0,QL
         0 000011   000000 740000 xsym               STX0    STR_BUF

       69     3627    1        STR_BUF.TEXT = P$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.SUBLK$(0) -> STR$BUF.TEXT;

   3627  0 000012   000000 471500                    LDP1    0,,PR0
         0 000013   100003 473500                    LDP3    3,,PR1
         0 000014   300003 474500                    LDP4    3,,PR3
         0 000015   040000 100500                    MLR     fill='040'O
         0 000016   400000 200377                    ADSC9   0,,PR4                   cn=1,n=255
         0 000017   000000 402000 xsym               ADSC9   STR_BUF                  cn=2,n=1024

       70     3628    1        CALL CHARBIN (LO_CLMN,SUBSTR(STR_BUF.TEXT,0,STR_BUF.COUNT));

   3628  0 000020   000100 305440                    DTB
         0 000021   000000 430010 xsym               NDSC9   STR_BUF                  cn=2,s=nosgn,sf=0,n=*X0
         0 000022   200006 000010                    NDSC9   @P$+1,,AUTO              cn=0,s=lsgnf,sf=0,n=8
         0 000023   200003 471500                    LDP1    @LO_CLMN,,AUTO
         0 000024   200007 235100                    LDA     @P$+2,,AUTO
         0 000025   100000 755100                    STA     0,,PR1

       71     3629    2        IF (LO_CLMN > MAX_CLMN)OR(LO_CLMN < 1) THEN DO;

   3629  0 000026   000000 236000 xsym               LDQ     MAX_CLMN
         0 000027   100000 116100                    CMPQ    0,,PR1
         0 000030   000033 602000 0                  TNC     BAD_CLMN
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:11   
         0 000031   000000 115003                    CMPA    0,DU
         0 000032   000040 601000 0                  TNZ     s:3641

       72     3630    2   BAD_CLMN:
       73     3631    2           CALL VEX$ERROR(E$E_BADCLMN,3);

   3631  0 000033   000001 630400 1     BAD_CLMN     EPPR0   1
         0 000034   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000035   000000 701000 xent               TSX1    VEX$ERROR
         0 000036   000000 011000                    NOP     0

       74     3632    2           ALTRETURN;

   3632  0 000037   000000 702200 xent               TSX2  ! X66_AALT

       75     3633    2           END;
       76     3634        /**/
       77     3635        /*E*     ERROR:    VEE-E$E_BADCLMN-0
       78     3636                 MESSAGE:  Illegal column number
       79     3637                 MESSAGE1: Column number must be in range 1 - 1024
       80     3638                 DESCRIPTION: A column number not in the range 1-1024 has
       81     3639                           been input.
       82     3640        */
       83     3641    1        LO_CLMN = LO_CLMN-1;               /* CONVERT FOR INTERNAL USE           */

   3641  0 000040   000001 135007                    SBLA    1,DL
         0 000041   100000 755100                    STA     0,,PR1

       84     3642        /**/
       85     3643    2        IF (P$ -> OUT$BLK.NSUBLKS = 1) THEN DO;

   3643  0 000042   000000 473500                    LDP3    0,,PR0
         0 000043   300001 220100                    LDX0    1,,PR3
         0 000044   000001 100003                    CMPX0   1,DU
         0 000045   000053 601000 0                  TNZ     s:3648

       86     3644    2           HI_CLMN = MAX_CLMN - 1;
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:12   

   3644  0 000046   200004 474500                    LDP4    @HI_CLMN,,AUTO
         0 000047   000000 236000 xsym               LDQ     MAX_CLMN
         0 000050   000001 136007                    SBLQ    1,DL
         0 000051   400000 756100                    STQ     0,,PR4

       87     3645    2           RETURN;

   3645  0 000052   000000 702200 xent               TSX2  ! X66_ARET

       88     3646    2           END;
       89     3647        /**/
       90     3648    1        STR_BUF.COUNT = P$ -> OUT$BLK.SUBLK$(1) -> OUT$BLK.SUBLK$(0) -> STR$BUF.COUNT;

   3648  0 000053   300004 474500                    LDP4    4,,PR3
         0 000054   400003 475500                    LDP5    3,,PR4
         0 000055   500000 236100                    LDQ     0,,PR5
         0 000056   000033 772000                    QRL     27
         0 000057   000000 621006                    EAX1    0,QL
         0 000060   000000 741000 xsym               STX1    STR_BUF

       91     3649    1        STR_BUF.TEXT = P$ -> OUT$BLK.SUBLK$(1) -> OUT$BLK.SUBLK$(0) -> STR$BUF.TEXT;

   3649  0 000061   000000 473500                    LDP3    0,,PR0
         0 000062   300004 474500                    LDP4    4,,PR3
         0 000063   400003 475500                    LDP5    3,,PR4
         0 000064   040000 100500                    MLR     fill='040'O
         0 000065   500000 200377                    ADSC9   0,,PR5                   cn=1,n=255
         0 000066   000000 402000 xsym               ADSC9   STR_BUF                  cn=2,n=1024

       92     3650    1        CALL CHARBIN (HI_CLMN,SUBSTR(STR_BUF.TEXT,0,STR_BUF.COUNT));

   3650  0 000067   000100 305440                    DTB
         0 000070   000000 430011 xsym               NDSC9   STR_BUF                  cn=2,s=nosgn,sf=0,n=*X1
         0 000071   200006 000010                    NDSC9   @P$+1,,AUTO              cn=0,s=lsgnf,sf=0,n=8
         0 000072   200004 473500                    LDP3    @HI_CLMN,,AUTO
         0 000073   200007 235100                    LDA     @P$+2,,AUTO
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:13   
         0 000074   300000 755100                    STA     0,,PR3

       93     3651    1        IF (HI_CLMN > MAX_CLMN)OR(HI_CLMN < 1) THEN GOTO BAD_CLMN;

   3651  0 000075   000000 236000 xsym               LDQ     MAX_CLMN
         0 000076   300000 116100                    CMPQ    0,,PR3
         0 000077   000033 602000 0                  TNC     BAD_CLMN
         0 000100   000000 115003                    CMPA    0,DU
         0 000101   000033 600000 0                  TZE     BAD_CLMN

       94     3652    1        HI_CLMN = HI_CLMN - 1;             /* CONVERT FOR STRING FUNCTIONS       */

   3652  0 000102   000001 135007                    SBLA    1,DL
         0 000103   300000 755100                    STA     0,,PR3

       95     3653        /**/
       96     3654    2        IF (HI_CLMN < LO_CLMN) THEN DO;

   3654  0 000104   300000 236100                    LDQ     0,,PR3
         0 000105   100000 116100                    CMPQ    0,,PR1
         0 000106   000116 603000 0                  TRC     s:3665

       97     3655    2           HI_CLMN = LO_CLMN;

   3655  0 000107   100000 235100                    LDA     0,,PR1
         0 000110   300000 755100                    STA     0,,PR3

       98     3656    2           CALL VEX$ERROR(E$E_CLMNRNGE,3);

   3656  0 000111   000004 630400 1                  EPPR0   4
         0 000112   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000113   000000 701000 xent               TSX1    VEX$ERROR
         0 000114   000000 011000                    NOP     0

       99     3657    2           ALTRETURN;

   3657  0 000115   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:14   

      100     3658    2           END;
      101     3659        /**/
      102     3660        /*E*     ERROR:    VEE-E$E_CLMNRNGE-0
      103     3661                 MESSAGE:  Illegal column number range - LO > HI
      104     3662                 DESCRIPTION: A column range with the upper limit smaller
      105     3663                           than the lower limit has been input.
      106     3664        */
      107     3665    1        RETURN;

   3665  0 000116   000000 702200 xent               TSX2  ! X66_ARET
      108     3666    1   END;

PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:15   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$PARSE_CLMNRANGE.
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:16   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @HI_CLMN                   3-0-0/w PTR         r     1 @LO_CLMN
     5-0-0/w PTR         r     1 @P$                       *0-0-0/w UBIN        r     1 HI_CLMN
    *0-0-0/w UBIN        r     1 LO_CLMN                   *0-0-0/w PTR         r     1 P$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 MAX_CLMN                   0-0-0/h STRC(9234)  r     1 STR_BUF

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w STRC(2304)  r     1 STR$BUF


   Procedure VEX$PARSE_CLMNRANGE requires 79 words for executable code.
   Procedure VEX$PARSE_CLMNRANGE requires 8 words of local(AUTO) storage.

    No errors detected in file VEX$PARSE_CLMNRANGE.:E05TSI    .
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$PARSE_CLMNRANGE File=VEX$PARSE_CLMNRANGE.:E05TSI          WED 07/30/97 07:13 Page:18   
          MINI XREF LISTING

BAD_CLMN
      3631**LABEL    3651--GOTO
HI_CLMN
        40**DCL         8--PROC     3644<<ASSIGN   3650<<CALLBLT  3651>>IF       3651>>IF       3652<<ASSIGN
      3652>>ASSIGN   3654>>IF       3655<<ASSIGN
LO_CLMN
        39**DCL         8--PROC     3628<<CALLBLT  3629>>IF       3629>>IF       3641<<ASSIGN   3641>>ASSIGN
      3654>>IF       3655>>ASSIGN
MAX_CLMN
       460**DCL      3629>>IF       3644>>ASSIGN   3651>>IF
OUT$BLK.NSUBLKS
      3594**DCL      3643>>IF
OUT$BLK.SUBLK$
      3615**DCL      3626>>ASSIGN   3626>>ASSIGN   3627>>ASSIGN   3627>>ASSIGN   3648>>ASSIGN   3648>>ASSIGN
      3649>>ASSIGN   3649>>ASSIGN
P$
        41**DCL         8--PROC     3626>>ASSIGN   3627>>ASSIGN   3643>>IF       3648>>ASSIGN   3649>>ASSIGN
STR$BUF.COUNT
       467**DCL      3626>>ASSIGN   3648>>ASSIGN
STR$BUF.TEXT
       468**DCL      3627>>ASSIGN   3649>>ASSIGN
STR_BUF.COUNT
       458**DCL      3626<<ASSIGN   3628>>CALLBLT  3648<<ASSIGN   3650>>CALLBLT
STR_BUF.TEXT
       459**DCL      3627<<ASSIGN   3628>>CALLBLT  3649<<ASSIGN   3650>>CALLBLT
VEX$ERROR
       461**DCL-ENT  3631--CALL     3656--CALL
