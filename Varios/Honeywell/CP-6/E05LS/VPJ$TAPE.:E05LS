VERSION E05

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:1    
        1        1        /*M* VPJ$TAPE  Contains modules for processing commands which are intended
        2        2                    mainly for tape processing.
        3        3        */
        4        4        /*T***********************************************************/
        5        5        /*T*                                                         */
        6        6        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        7        7        /*T*                                                         */
        8        8        /*T***********************************************************/
        9        9        /*X* DTI=1,THI=1 */
       10       10        /* Next available error code = 190 (by 10's)                                  */
       11       11        VPJ$MOUNT: PROC(FCN);
       12       12        /*D* NAME: VPJ$MOUNT
       13       13             CALL: CALL VPJ$MOUNT(FCN);
       14       14                    where FCN = 0 - MOUNT
       15       15                                1 - REWIND
       16       16                                2 - REMOVE
       17       17                                3 - RELEASE
       18       18             DESCRIPTION: VPJ$MOUNT either:
       19       19                            1) MOUNTs the first reel of the specified tape set with
       20       20                               a ring if RING was specified and writes a message
       21       21                               to the operator's console specifying a corresponding
       22       22                               reel if REEL was specified.
       23       23                            2) REWINDs any of the specified serial numbered reels
       24       24                            3) REMOVEs any of the specified serial numbered reels
       25       25                            4) RELEASEs any resource any of the specified reels were
       26       26                               found on (and removes those reels)
       27       27                          NOTE:  This routine is complicated by the relationship
       28       28                                 between PCL and his tapesets.  If PCL knows about
       29       29                                 (remembers in a CMDVAR) a tape set, a command
       30       30                                 such as 'REW LT#A#B' means 'get me to the
       31       31                                 beginning of the first reel.'  This entails a
       32       32                                 REW of the first volume and a REM of all others.
       33       33                                 If all of these fail, it means the user has used
       34       34                                 some other process to remove the tapes out from
       35       35                                 under PCL's memory.  On the other hand, some
       36       36                                 folks mount tapes in other processors and expect
       37       37                                 PCL to REMove them.  If PCL doesn't recognize
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:2    
       38       38                                 the set, he gripes about every one that won't
       39       39                                 respond to orders.
       40       40                                 The whole CMDVAR scheme of remembering things
       41       41                                 is a horrible kluge but forced to provide the
       42       42                                 desired user behaviour without information from
       43       43                                 resource management.
       44       44        */
       45       45    1   DCL FCN SBIN;
       46       46        %INCLUDE VP_DATA_R;
       47     7033        %INCLUDE B_ERRORS_C;
       48     8160        %INCLUDE F$DCB;
       49     8209        %SUB SYS_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE;
       50     8210        %B$TCB;
       51     8213        %B$ALT;
       52     8221        %FPT_REM(FPTN = FPT_REM,STCLASS = STATIC);
       53     8235        %PARSE$SYM(NAME = OUT$SYM,STCLASS = BASED);
       54     8273        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
       55     8318        %FPT_KEYIN(FPTN = FPT_KEYIN,
       56     8319                    MESS=OUT_BUF,
       57     8320                    RESULTS = GARBAGE,
       58     8321                OCTYPE = TAPE,
       59     8322                STCLASS = STATIC);
       60     8341    1   DCL GARBAGE(0:1) UBIN STATIC;
       61     8342    1   DCL TDENS CHAR(5);
       62     8343    1   DCL CURRENT_VOL UBIN WORD;
       63     8344    1   DCL 1 OUT_BUF STATIC,
       64     8345    1         2 * CHAR(3) INIT('MT#'),
       65     8346    1         2 SN CHAR(6),
       66     8347    1         2 * CHAR(0) INIT(' is reel '),
       67     8348    1         2 REEL CHAR(54);
       68     8349    1   DCL 1 SN_TEXTC STATIC,
       69     8350    1         2 L UBIN BYTE UNAL INIT(6),
       70     8351    1         2 C CHAR(6);
       71     8352    1   DCL I SBIN;
       72     8353    1   DCL N SBIN;
       73     8354    1   DCL 1 DE$SC BASED,
       74     8355    1         2 BOUND UBIN(20) UNAL,
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:3    
       75     8356    1         2 * BIT(16),
       76     8357    1         2 PTR$ PTR;
       77     8358    1   DCL CHAR$1 CHAR(1) BASED;
       78     8359    1   DCL CHAR$2 CHAR(2) BASED;
       79     8360    1   DCL PTR$ PTR;
       80     8361    1   DCL 1 TEXT$C BASED,
       81     8362    1         2 LEN UBIN BYTE UNAL,
       82     8363    1         2 STRING CHAR(TEXT$C.LEN);
       83     8364        /**/
       84     8365        /*  STATIC DATA  */
       85     8366        /**/
       86     8367    1   DCL ERR_COUNT SBIN WORD STATIC;
       87     8368    1   DCL DESIRED_VOL SBIN WORD STATIC;
       88     8369        /**/
       89     8370        /*  CONSTANTS  */
       90     8371        /**/
       91     8372    1   DCL DISP_ARY(0:2) UBIN BYTE UNAL CONSTANT INIT(%PTV#,%REM#,%REL#);
       92     8373        /**/
       93     8374        /*  ENTRY DCLS  */
       94     8375        /**/
       95     8376        %VP_ENTRIES (OMIT=VPJ$MOUNT);
       96     8584    1           FPT_FID_IN.TEXTFID_ = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
       97     8585    1           PTR$ = ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.PTR$;
       98     8586    1           IF FCN~=0 AND PTR$->CHAR$1='#'
       99     8587    2            THEN DO;                       /* Allow [MT]#serial for non-mounts   */
      100     8588    2               PTR$ = PINCRC(PTR$,-2);
      101     8589    2               ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.PTR$ = PTR$;
      102     8590    2               ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.BOUND =
      103     8591    2                 ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.BOUND + 2;
      104     8592    2               PTR$->CHAR$2 = 'MT';
      105     8593    2               END;
      106     8594    1           CALL VPD$FID(FPT_FID_IN);
      107     8595    1           IF IN_ASN ~= %TAPE# AND (IN_ASN = %FILE# AND IN_RES1.OP ~= 'OD')
      108     8596    1            THEN                           /* It isn't a tape or optical disk    */
      109     8597    1              CALL VPL$ERR_PROC(3,130,'12'O);
      110     8598        /*E* ERROR:   VPJ-00130
      111     8599         MESSAGE: MOUNT, REWIND, REMOVE or RELEASE available for tapes and optical disk only
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:4    
      112     8600        */
      113     8601    1           IF NOT RESULTS_FID_IN.SN
      114     8602    1            THEN
      115     8603    1              CALL VPL$ERR_PROC(3,140,'12'O);
      116     8604        /*E* ERROR:   VPJ-00140
      117     8605             MESSAGE: MOUNT, REWIND, REMOVE, or RELEASE require a serial number
      118     8606        */
      119     8607    1           CALL VPD$CHECK_VOL(IN_SN,3,,CURRENT_VOL,0); /* Find out what's hanging*/
      120     8608    1           ERR_COUNT = 0;
      121     8609    2           DO CASE(FCN);
      122     8610        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:5    
      123     8611    2            CASE(0);                       /* MOUNT                              */
      124     8612    2              DESIRED_VOL = 1;             /* ASSUME                             */
      125     8613    2              FPT_OPEN_EI = FPT_OPEN_EI_SAVE;
      126     8614    2              FPT_OPEN_EI.V.ASN# = IN_ASN;
      127     8615    2              FPT_OPEN_EI.V.ORG# = %FREE#;
      128     8616    2              FPT_OPEN_EI.V.RES# = IN_RES;
      129     8617    2              FPT_OPEN_EI.V.VOL# = DESIRED_VOL;
      130     8618    2              FPT_OPEN_EI.V.OPER.MNTONLY# = %YES#;
      131     8619    2              FPT_OPEN_EI.V.INITZ.SCRUB# = %YES#;
      132     8620    2              FPT_OPEN_EI.SN_ = VECTOR(IN_SN);
      133     8621    3              DO I=1 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;
      134     8622    4                 DO CASE(PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.CODE);
      135     8623    4                  CASE(1);                 /* REEL = string                      */
      136     8624    5                    DO N=1 TO IN_SN.COUNT; /*  Allow for Multiple Reels          */
      137     8625    5                       OUT_BUF.SN = IN_SN.SN(N-1);
      138     8626    5                       OUT_BUF.REEL = PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.SUBLK$(N-1)
              8626                                ->OUT$SYM.TEXT;
      139     8627    5                       FPT_KEYIN.MESS_.BOUND = PCB.OUT$->OUT$BLK.SUBLK$(I)
      140     8628    5                         ->OUT$BLK.SUBLK$(N-1)->OUT$SYM.COUNT + 17;
      141     8629    5                       CALL M$KEYIN(FPT_KEYIN) ALTRET(MONERR);
      142     8630    5                       END;                /*  end REEL DO                       */
      143     8631    4                  CASE(2); /* RING */;
      144     8632    4                    FPT_OPEN_EI.V.FUN# = %CREATE#;
      145     8633    4                  CASE(3);                 /* NORING                             */
      146     8634    4                    FPT_OPEN_EI.V.FUN# = %IN#;
      147     8635    4                  CASE(4);                 /* DENSITY                            */
      148     8636    4                    TDENS = SUBSTR(PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.SUBLK$(0)->
              8636                             OUT$SYM.TEXT,
      149     8637    4                      0,PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.SUBLK$(0)->OUT$SYM.COUNT);
      150     8638    5                    DO SELECT(TDENS);
      151     8639    5                       SELECT('800');
      152     8640    5                       FPT_OPEN_EI.V.DENSITY# = %D800#;
      153     8641    5                       SELECT('1600');
      154     8642    5                       FPT_OPEN_EI.V.DENSITY# = %D1600#;
      155     8643    5                       SELECT('6250');
      156     8644    5                       FPT_OPEN_EI.V.DENSITY# = %D6250#;
      157     8645    5                       SELECT('38000');
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:6    
      158     8646    5                       FPT_OPEN_EI.V.DENSITY# = %D38000#;
      159     8647    5                       SELECT(ELSE);
      160     8648    5                    FPT_OPEN_EI.V.DENSITY# = %D_UNKNOWN#;
      161     8649    5                    CALL VPL$ERR_PROC(1,170,'12'O); /* Warn user                 */
      162     8650        /*E* ERROR: VPJ-00170
      163     8651             MESSAGE: Unknown DENSITY specified.  Default used instead.
      164     8652            MESSAGE1: Known densities are: 800, 1600, 6250, and 38000.
      165     8653        */
      166     8654    5                       END;
      167     8655    4                  END;                     /* END CASE                           */
      168     8656    3                 END;
      169     8657        /**/
      170     8658    2              IF FPT_OPEN_EI.V.FUN# ~= %CREATE#
      171     8659    2                AND FPT_OPEN_EI.V.DENSITY# ~= %D_UNKNOWN# THEN
      172     8660    2                 CALL VPL$ERR_PROC(1,180,'12'O);
      173     8661        /*E*  ERROR: VPJ-00180
      174     8662            MESSAGE: DENSITY allowed only with RING.  DENSITY ignored.
      175     8663        */
      176     8664    2              IF CURRENT_VOL ~= 0 AND CURRENT_VOL ~= DESIRED_VOL
      177     8665    2               THEN                        /* Must remove old volume             */
      178     8666    3               DO;
      179     8667    3                  FPT_REM.V.DISP# = %REM#;
      180     8668    3                  FPT_REM.V.PSN# = IN_SN.SN(CURRENT_VOL -1);
      181     8669    3                  CALL REM ALTRET(REM_ALT1);
      182     8670    3   REM_ALT1:      ;
      183     8671    3                  END;
      184     8672        /**/
      185     8673    2              CALL M$OPEN(FPT_OPEN_EI) ALTRET(MONERR);
      186     8674    2              CALL INFORM_USER;
      187     8675    2              CALL VPD$CHECK_VOL(IN_SN,2,,DESIRED_VOL,0); /* Force desired VOL   */
      188     8676        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:7    
      189     8677    2            CASE(1);                       /* REWIND                             */
      190     8678    2              FPT_REM.V.DISP# = %PTV#;     /* REW                                */
      191     8679    2              FPT_REM.V.PSN# = IN_SN.SN(0); /* First volume in the set           */
      192     8680    2              CALL REM ALTRET(REW_ALT);
      193     8681    3              DO WHILE('0'B);
      194     8682    3   REW_ALT:      IF CURRENT_VOL = 0
      195     8683    3                  THEN                     /* Tape set unknown to PCL            */
      196     8684    4                  DO;
      197     8685    4                     SN_TEXTC.C = FPT_REM.V.PSN#;
      198     8686    4                     CALL VPL$ERR_PROC(1,150,'12'O,,VECTOR(SN_TEXTC));
      199     8687    4                     END;
      200     8688    3                 END;
      201     8689    2              IF IN_SN.COUNT > 1
      202     8690    2               THEN                        /* Other reels exist                  */
      203     8691    3               DO;
      204     8692    3                  FPT_REM.V.DISP# = %REM#; /* Remove excess volumes              */
      205     8693    4                  DO I = 1 TO IN_SN.COUNT -1;
      206     8694    4                     FPT_REM.V.PSN# = IN_SN.SN(I);
      207     8695    4                     CALL REM ALTRET(EXCESS_ALT);
      208     8696    5                     DO WHILE('0'B);
      209     8697    5   EXCESS_ALT:          IF CURRENT_VOL = 0
      210     8698    5                         THEN              /* Set unknown to PCL                 */
      211     8699    6                         DO;
      212     8700    6                            SN_TEXTC.C = FPT_REM.V.PSN#;
      213     8701    6                            CALL VPL$ERR_PROC(1,150,'12'O,,VECTOR(SN_TEXTC));
      214     8702    6                            END;
      215     8703    5                        END;
      216     8704    4                     END;
      217     8705    3                  END;
      218     8706    2              CALL VPD$CHECK_VOL(IN_SN,2,,1,0); /* Force VOL = 1                 */
      219     8707        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:8    
      220     8708    2            CASE(2,3);                     /* REMOVE, RELEASE                    */
      221     8709        /*E* ERROR:  VPJ-00150
      222     8710             MESSAGE: MT#%U1 not mounted
      223     8711        */
      224     8712    2              FPT_REM.V.DISP# = DISP_ARY(FCN-1);
      225     8713    3              DO I=0 TO IN_SN.COUNT-1;
      226     8714    3                 FPT_REM.V.PSN# = IN_SN.SN(I);
      227     8715    3                 CALL REM ALTRET(REM_ALT);
      228     8716    4                 DO WHILE('0'B);
      229     8717    4   REM_ALT:         IF CURRENT_VOL = 0
      230     8718    4                     THEN                  /* Tape set unknown to PCL            */
      231     8719    5                     DO;
      232     8720    5                        SN_TEXTC.C = FPT_REM.V.PSN#;
      233     8721    5                        CALL VPL$ERR_PROC(1,150,'12'O,,VECTOR(SN_TEXTC));
      234     8722    5                        END;
      235     8723    4                    END;
      236     8724    3                 END;
      237     8725    2              CALL VPD$CHECK_VOL(IN_SN,1,,,0); /* Forget this tape set           */
      238     8726    2            END;                           /* END CASE                           */
      239     8727    1           IF CURRENT_VOL ~= 0             /* PCL tapeset                        */
      240     8728    1             AND ERR_COUNT = IN_SN.COUNT   /* AND failure on every reel          */
      241     8729    1            THEN
      242     8730    1              CALL VPL$ERR_PROC(1,160,'12'O);
      243     8731        /*E* ERROR:  VPJ-00160
      244     8732             MESSAGE: Tape set not mounted
      245     8733        */
      246     8734    1           RETURN;
      247     8735    1   MONERR:
      248     8736    1           IF SYS_ERR = %E$MNTBRK
      249     8737    1             AND BREAKS=0
      250     8738    1            THEN                           /* CTRL-Y, GO  (he didnt mean to stop */
      251     8739    2            DO;
      252     8740    2               CALL M$RETRY;
      253     8741    2               CALL INFORM_USER;
      254     8742    2               END;
      255     8743    1            ELSE                           /* Unexpected error                   */
      256     8744    1              CALL VPL$ERR_PROC(3,0);      /* Abort command                      */
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:9    
      257     8745        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:10   
      258     8746    1   REM:    PROC ALTRET;
      259     8747        /* This routine just calls M$REM.  On the event of an ALTRET, the error code  */
      260     8748        /* is examined.  The altret is taken IFF the error code was %E$NOTUR          */
      261     8749    2           CALL M$REM(FPT_REM) ALTRET(REM_ALT);
      262     8750    2           RETURN;
      263     8751        /**/
      264     8752    2   REM_ALT:;
      265     8753    2           IF SYS_ERR = %E$MNTBRK          /* BREAK or CTRL-Y                    */
      266     8754    2             AND BREAKS = 0                /* AND not BREAK                      */
      267     8755    2            THEN                           /* Must have been CTRL-Y, GO          */
      268     8756    2              CALL M$RETRY;                /* He didn't mean to stop             */
      269     8757        /**/                                    /* 'REAL' error                       */
      270     8758    2           ERR_COUNT = ERR_COUNT+1;
      271     8759    2           IF SYS_ERR = %E$NOTUR
      272     8760    2            THEN
      273     8761    2              ALTRETURN;
      274     8762    2           CALL VPL$ERR_PROC(3,0);         /* UNEXPECTED ERROR                   */
      275     8763    2   END REM;
      276     8764        /**/
      277     8765        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:11   
      278     8766    1   INFORM_USER: PROC;
      279     8767        /*I* NAME: INFORM_USER
      280     8768             PURPOSE: To display some of the information in the DCB after a MOUNT.
      281     8769             CALL: CALL INFORM_USER;
      282     8770             DESCRIPTION: This routine simply looks in M$EI and reports the
      283     8771                          information that may be of interest to the user.
      284     8772        */
      285     8773    2   DCL BUF CHAR(80) STATIC;
      286     8774    2   DCL LABEL_BUF CHAR(21);
      287     8775    2   DCL NAME_BUF CHAR(9);
      288     8776    2   DCL INSERT_IDX UBIN;
      289     8777    2   DCL TBUF CHAR(4);
      290     8778    2   DCL FSN_BUF CHAR(35);
      291     8779    2   DCL DENS_TBL(0:5) CHAR(5) CONSTANT INIT('BUG!','BUG1','  800',' 1600',' 6250',
              8779            '38000');
      292     8780    2   DCL P$ PTR;
      293     8781    2   DCL BLANK_FLAG BIT(1);
      294     8782    2   DCL I UBIN;
      295     8783    2           BUF = ' ';
      296     8784    3           DO CASE(M$EI$->F$DCB.ASN);
      297     8785    3            CASE(%DEVICE#);
      298     8786    3              BUF='No labels present on ';
      299     8787    3              INSERT_IDX=21;
      300     8788    3            CASE(%TAPE#);
      301     8789    3              BUF='Labels present on ';
      302     8790    3              CALL INSERT(BUF,18,,DENS_TBL(M$EI$->F$DCB.DENSITY),' BPI ');
      303     8791    3              INSERT_IDX = 28;
      304     8792    3            CASE(ELSE);
      305     8793    3              RETURN;
      306     8794    3            END;
      307     8795    2           CALL INSERT(BUF,INSERT_IDX,,SUBSTR(IN_RES,0,2),'#',IN_SN.SN(0));
      308     8796    2           INSERT_IDX = INSERT_IDX + 9;
      309     8797
      310     8798    2           IF M$EI$->F$DCB.ASN = %TAPE#
      311     8799    2             AND (M$EI$->F$DCB.FSN ~= 1
      312     8800    2             OR M$EI$->F$DCB.FSECT ~= 1)
      313     8801    2            THEN
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:12   
      314     8802    3            DO;
      315     8803    3               CALL INSERT(BUF,INSERT_IDX,,'MOUNTed at section ');
      316     8804    3               INSERT_IDX = INSERT_IDX + 19;
      317     8805    3               I=4;
      318     8806    3               CALL BINCHAR(TBUF,M$EI$->F$DCB.FSECT);
      319     8807    4               DO WHILE SUBSTR(TBUF,0,1)='0';
      320     8808    4                  TBUF=SUBSTR(TBUF,1);
      321     8809    4                  I=I-1;
      322     8810    4                  END;
      323     8811    3               CALL INSERT(BUF,INSERT_IDX,,SUBSTR(TBUF,0,I),' of FSN');
      324     8812    3               INSERT_IDX = INSERT_IDX + 8 + I;
      325     8813    3               I=4;
      326     8814    3               CALL BINCHAR(TBUF,M$EI$->F$DCB.FSN);
      327     8815    4               DO WHILE SUBSTR(TBUF,0,1)='0';
      328     8816    4                  TBUF = SUBSTR(TBUF,1);
      329     8817    4                  I=I-1;
      330     8818    4                  END;
      331     8819    3               CALL INSERT(BUF,INSERT_IDX,,SUBSTR(TBUF,0,I));
      332     8820    3               INSERT_IDX = INSERT_IDX + I;
      333     8821    3               END;
      334     8822    2           CALL INSERT(BUF,INSERT_IDX,,'.');
      335     8823    2           FPT_WRITE_UC.BUF_ = VECTOR(SUBSTR(BUF,0,INSERT_IDX+1));
      336     8824    2           CALL M$WRITE(FPT_WRITE_UC);
      337     8825    2           RETURN;
      338     8826    2   END INFORM_USER;
      339     8827    1   END VPJ$MOUNT;
      340     8828        %EOD;

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:13   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$MOUNT.

   Procedure VPJ$MOUNT requires 607 words for executable code.
   Procedure VPJ$MOUNT requires 40 words of local(AUTO) storage.

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:14   

 Object Unit name= VPJ$MOUNT                                  File name= VPJ$TAPE.:E05TOU
 UTS= JUL 30 '97 07:46:33.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Data  even  none    62     76  VPJ$MOUNT
   11  RoData even  UTS     36     44  VPJ$MOUNT
   12   Proc  even  none   607   1137  VPJ$MOUNT
   13  RoData even  none    46     56  VPJ$MOUNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        1  VPJ$MOUNT
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:15   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VPD$FID
         yes           Std       8 VPL$ERR_PROC
         yes           Std       5 VPD$CHECK_VOL
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   BREAK_LOC
     BREAKS                                BREAK_MESSAGE_REPORTER                SPEC_BUF
     IN_RES                                IN_SN                                 IN_ASN
     M$EI                                  M$EI$                                 M$EO
     M$EO1                                 M$ME                                  M$SI
     M$READFILE                            M$DO                                  M$STD1
     M$SORT1                               B$TCB$                                FPT_FID_IN
     RESULTS_FID_IN                        FPT_OPEN_EI                           FPT_OPEN_EI_SAVE
     FPT_WRITE_UC                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:16   


        1        1        /*M* VPJ$TAPE  Contains modules for processing commands which are intended
        2        2                    mainly for tape processing.
        3        3        */
        4        4        /*T***********************************************************/
        5        5        /*T*                                                         */
        6        6        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        7        7        /*T*                                                         */
        8        8        /*T***********************************************************/
        9        9        /*X* DTI=1,THI=1 */
       10       10        /* Next available error code = 190 (by 10's)                                  */
       11       11        VPJ$MOUNT: PROC(FCN);

     11 12 000000   000000 700200 xent  VPJ$MOUNT    TSX0  ! X66_AUTO_1
        12 000001   000050 000001                    ZERO    40,1

       12       12        /*D* NAME: VPJ$MOUNT
       13       13             CALL: CALL VPJ$MOUNT(FCN);
       14       14                    where FCN = 0 - MOUNT
       15       15                                1 - REWIND
       16       16                                2 - REMOVE
       17       17                                3 - RELEASE
       18       18             DESCRIPTION: VPJ$MOUNT either:
       19       19                            1) MOUNTs the first reel of the specified tape set with
       20       20                               a ring if RING was specified and writes a message
       21       21                               to the operator's console specifying a corresponding
       22       22                               reel if REEL was specified.
       23       23                            2) REWINDs any of the specified serial numbered reels
       24       24                            3) REMOVEs any of the specified serial numbered reels
       25       25                            4) RELEASEs any resource any of the specified reels were
       26       26                               found on (and removes those reels)
       27       27                          NOTE:  This routine is complicated by the relationship
       28       28                                 between PCL and his tapesets.  If PCL knows about
       29       29                                 (remembers in a CMDVAR) a tape set, a command
       30       30                                 such as 'REW LT#A#B' means 'get me to the
       31       31                                 beginning of the first reel.'  This entails a
       32       32                                 REW of the first volume and a REM of all others.
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:17   
       33       33                                 If all of these fail, it means the user has used
       34       34                                 some other process to remove the tapes out from
       35       35                                 under PCL's memory.  On the other hand, some
       36       36                                 folks mount tapes in other processors and expect
       37       37                                 PCL to REMove them.  If PCL doesn't recognize
       38       38                                 the set, he gripes about every one that won't
       39       39                                 respond to orders.
       40       40                                 The whole CMDVAR scheme of remembering things
       41       41                                 is a horrible kluge but forced to provide the
       42       42                                 desired user behaviour without information from
       43       43                                 resource management.
       44       44        */
       45       45    1   DCL FCN SBIN;
       46       46        %INCLUDE VP_DATA_R;
       47     7033        %INCLUDE B_ERRORS_C;
       48     8160        %INCLUDE F$DCB;
       49     8209        %SUB SYS_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE;
       50     8210        %B$TCB;
       51     8213        %B$ALT;
       52     8221        %FPT_REM(FPTN = FPT_REM,STCLASS = STATIC);
       53     8235        %PARSE$SYM(NAME = OUT$SYM,STCLASS = BASED);
       54     8273        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
       55     8318        %FPT_KEYIN(FPTN = FPT_KEYIN,
       56     8319                    MESS=OUT_BUF,
       57     8320                    RESULTS = GARBAGE,
       58     8321                OCTYPE = TAPE,
       59     8322                STCLASS = STATIC);
       60     8341    1   DCL GARBAGE(0:1) UBIN STATIC;
       61     8342    1   DCL TDENS CHAR(5);
       62     8343    1   DCL CURRENT_VOL UBIN WORD;
       63     8344    1   DCL 1 OUT_BUF STATIC,
       64     8345    1         2 * CHAR(3) INIT('MT#'),
       65     8346    1         2 SN CHAR(6),
       66     8347    1         2 * CHAR(0) INIT(' is reel '),
       67     8348    1         2 REEL CHAR(54);
       68     8349    1   DCL 1 SN_TEXTC STATIC,
       69     8350    1         2 L UBIN BYTE UNAL INIT(6),
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:18   
       70     8351    1         2 C CHAR(6);
       71     8352    1   DCL I SBIN;
       72     8353    1   DCL N SBIN;
       73     8354    1   DCL 1 DE$SC BASED,
       74     8355    1         2 BOUND UBIN(20) UNAL,
       75     8356    1         2 * BIT(16),
       76     8357    1         2 PTR$ PTR;
       77     8358    1   DCL CHAR$1 CHAR(1) BASED;
       78     8359    1   DCL CHAR$2 CHAR(2) BASED;
       79     8360    1   DCL PTR$ PTR;
       80     8361    1   DCL 1 TEXT$C BASED,
       81     8362    1         2 LEN UBIN BYTE UNAL,
       82     8363    1         2 STRING CHAR(TEXT$C.LEN);
       83     8364        /**/
       84     8365        /*  STATIC DATA  */
       85     8366        /**/
       86     8367    1   DCL ERR_COUNT SBIN WORD STATIC;
       87     8368    1   DCL DESIRED_VOL SBIN WORD STATIC;
       88     8369        /**/
       89     8370        /*  CONSTANTS  */
       90     8371        /**/
       91     8372    1   DCL DISP_ARY(0:2) UBIN BYTE UNAL CONSTANT INIT(%PTV#,%REM#,%REL#);
       92     8373        /**/
       93     8374        /*  ENTRY DCLS  */
       94     8375        /**/
       95     8376        %VP_ENTRIES (OMIT=VPJ$MOUNT);
       96     8584    1           FPT_FID_IN.TEXTFID_ = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   8584 12 000002   000003 470400 xsym               LDP0    PCB+3
        12 000003   000003 471500                    LDP1    3,,PR0
        12 000004   100004 236100                    LDQ     4,,PR1
        12 000005   000033 772000                    QRL     27
        12 000006   000064 737000                    LLS     52
        12 000007   000140 135007                    SBLA    96,DL
        12 000010   200042 451500                    STP1    I+1,,AUTO
        12 000011   200042 236100                    LDQ     I+1,,AUTO
        12 000012   000000 036000 13                 ADLQ    0
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:19   
        12 000013   000002 757000 xsym               STAQ    FPT_FID_IN+2

       97     8585    1           PTR$ = ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.PTR$;

   8585 12 000014   000003 236000 xsym               LDQ     FPT_FID_IN+3
        12 000015   200011 756100                    STQ     PTR$,,AUTO

       98     8586    1           IF FCN~=0 AND PTR$->CHAR$1='#'

   8586 12 000016   200003 471500                    LDP1    @FCN,,AUTO
        12 000017   100000 235100                    LDA     0,,PR1
        12 000020   000044 600000 12                 TZE     s:8594
        12 000021   200011 473500                    LDP3    PTR$,,AUTO
        12 000022   040000 106500                    CMPC    fill='040'O
        12 000023   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
        12 000024   000001 000001 13                 ADSC9   1                        cn=0,n=1
        12 000025   000044 601000 12                 TNZ     s:8594

       99     8587    2            THEN DO;                       /* Allow [MT]#serial for non-mounts   */

      100     8588    2               PTR$ = PINCRC(PTR$,-2);

   8588 12 000026   000002 036000 13                 ADLQ    2
        12 000027   200011 756100                    STQ     PTR$,,AUTO

      101     8589    2               ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.PTR$ = PTR$;

   8589 12 000030   000003 756000 xsym               STQ     FPT_FID_IN+3

      102     8590    2               ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.BOUND =

   8590 12 000031   000002 236000 xsym               LDQ     FPT_FID_IN+2
        12 000032   000020 772000                    QRL     16
        12 000033   000002 036007                    ADLQ    2,DL
        12 000034   000020 736000                    QLS     16
        12 000035   000002 676000 xsym               ERQ     FPT_FID_IN+2
        12 000036   000034 376000 xsym               ANQ     B_VECTNIL+28
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:20   
        12 000037   000002 656000 xsym               ERSQ    FPT_FID_IN+2

      103     8591    2                 ADDR(FPT_FID_IN.TEXTFID_)->DE$SC.BOUND + 2;
      104     8592    2               PTR$->CHAR$2 = 'MT';

   8592 12 000040   200011 473500                    LDP3    PTR$,,AUTO
        12 000041   040100 100400                    MLR     fill='040'O
        12 000042   000011 000002 11                 ADSC9   DENS_TBL+8               cn=0,n=2
        12 000043   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

      105     8593    2               END;

      106     8594    1           CALL VPD$FID(FPT_FID_IN);

   8594 12 000044   000003 630400 13                 EPPR0   3
        12 000045   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000046   000000 701000 xent               TSX1    VPD$FID
        12 000047   000000 011000                    NOP     0

      107     8595    1           IF IN_ASN ~= %TAPE# AND (IN_ASN = %FILE# AND IN_RES1.OP ~= 'OD')

   8595 12 000050   000000 236000 xsym               LDQ     IN_ASN
        12 000051   777000 376003                    ANQ     -512,DU
        12 000052   002000 116003                    CMPQ    1024,DU
        12 000053   000065 600000 12                 TZE     s:8601
        12 000054   001000 116003                    CMPQ    512,DU
        12 000055   000065 601000 12                 TNZ     s:8601
        12 000056   000000 220000 xsym               LDX0    IN_RES
        12 000057   000012 100000 11                 CMPX0   DENS_TBL+9
        12 000060   000065 600000 12                 TZE     s:8601

      108     8596    1            THEN                           /* It isn't a tape or optical disk    */
      109     8597    1              CALL VPL$ERR_PROC(3,130,'12'O);

   8597 12 000061   000006 630400 13                 EPPR0   6
        12 000062   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000063   000000 701000 xent               TSX1    VPL$ERR_PROC
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:21   
        12 000064   000000 011000                    NOP     0

      110     8598        /*E* ERROR:   VPJ-00130
      111     8599        MESSAGE: MOUNT, REWIND, REMOVE or RELEASE available for tapes and optical disk only
      112     8600        */
      113     8601    1           IF NOT RESULTS_FID_IN.SN

   8601 12 000065   000000 236000 xsym               LDQ     RESULTS_FID_IN
        12 000066   040000 316003                    CANQ    16384,DU
        12 000067   000074 601000 12                 TNZ     s:8607

      114     8602    1            THEN
      115     8603    1              CALL VPL$ERR_PROC(3,140,'12'O);

   8603 12 000070   000012 630400 13                 EPPR0   10
        12 000071   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000072   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000073   000000 011000                    NOP     0

      116     8604        /*E* ERROR:   VPJ-00140
      117     8605             MESSAGE: MOUNT, REWIND, REMOVE, or RELEASE require a serial number
      118     8606        */
      119     8607    1           CALL VPD$CHECK_VOL(IN_SN,3,,CURRENT_VOL,0); /* Find out what's hanging*/

   8607 12 000074   000015 236000 13                 LDQ     13
        12 000075   200046 756100                    STQ     I+5,,AUTO
        12 000076   200006 630500                    EPPR0   CURRENT_VOL,,AUTO
        12 000077   200045 450500                    STP0    I+4,,AUTO
        12 000100   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000101   200044 756100                    STQ     I+3,,AUTO
        12 000102   000016 237000 13                 LDAQ    14
        12 000103   200042 757100                    STAQ    I+1,,AUTO
        12 000104   200042 630500                    EPPR0   I+1,,AUTO
        12 000105   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000106   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000107   000000 011000                    NOP     0

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:22   
      120     8608    1           ERR_COUNT = 0;

   8608 12 000110   000050 450000 10                 STZ     ERR_COUNT

      121     8609    2           DO CASE(FCN);

   8609 12 000111   200003 470500                    LDP0    @FCN,,AUTO
        12 000112   000000 235100                    LDA     0,,PR0
        12 000113   000004 115007                    CMPA    4,DL
        12 000114   000116 602005 12                 TNC     s:8609+5,AL
        12 000115   000564 710000 12                 TRA     s:8727
        12 000116   000122 710000 12                 TRA     s:8612
        12 000117   000400 710000 12                 TRA     s:8678
        12 000120   000510 710000 12                 TRA     s:8712
        12 000121   000510 710000 12                 TRA     s:8712

      122     8610        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:23   
      123     8611    2            CASE(0);                       /* MOUNT                              */

      124     8612    2              DESIRED_VOL = 1;             /* ASSUME                             */

   8612 12 000122   000001 236007                    LDQ     1,DL
        12 000123   000051 756000 10                 STQ     DESIRED_VOL

      125     8613    2              FPT_OPEN_EI = FPT_OPEN_EI_SAVE;

   8613 12 000124   000000 100400                    MLR     fill='000'O
        12 000125   000000 000350 xsym               ADSC9   FPT_OPEN_EI_SAVE         cn=0,n=232
        12 000126   000000 000350 xsym               ADSC9   FPT_OPEN_EI              cn=0,n=232

      126     8614    2              FPT_OPEN_EI.V.ASN# = IN_ASN;

   8614 12 000127   000000 236000 xsym               LDQ     IN_ASN
        12 000130   000033 772000                    QRL     27
        12 000131   000045 552004 xsym               STBQ    FPT_OPEN_EI+37,'04'O

      127     8615    2              FPT_OPEN_EI.V.ORG# = %FREE#;

   8615 12 000132   023000 236007                    LDQ     9728,DL
        12 000133   000046 552010 xsym               STBQ    FPT_OPEN_EI+38,'10'O

      128     8616    2              FPT_OPEN_EI.V.RES# = IN_RES;

   8616 12 000134   000000 236000 xsym               LDQ     IN_RES
        12 000135   000050 756000 xsym               STQ     FPT_OPEN_EI+40

      129     8617    2              FPT_OPEN_EI.V.VOL# = DESIRED_VOL;

   8617 12 000136   000051 236000 10                 LDQ     DESIRED_VOL
        12 000137   000033 736000                    QLS     27
        12 000140   000061 552040 xsym               STBQ    FPT_OPEN_EI+49,'40'O

      130     8618    2              FPT_OPEN_EI.V.OPER.MNTONLY# = %YES#;

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:24   
   8618 12 000141   001000 236007                    LDQ     512,DL
        12 000142   000044 256000 xsym               ORSQ    FPT_OPEN_EI+36

      131     8619    2              FPT_OPEN_EI.V.INITZ.SCRUB# = %YES#;

   8619 12 000143   400000 236007                    LDQ     -131072,DL
        12 000144   000044 256000 xsym               ORSQ    FPT_OPEN_EI+36

      132     8620    2              FPT_OPEN_EI.SN_ = VECTOR(IN_SN);

   8620 12 000145   000020 237000 13                 LDAQ    16
        12 000146   000002 757000 xsym               STAQ    FPT_OPEN_EI+2

      133     8621    3              DO I=1 TO PCB.OUT$->OUT$BLK.NSUBLKS-1;

   8621 12 000147   000001 235007                    LDA     1,DL
        12 000150   200007 755100                    STA     I,,AUTO
        12 000151   000317 710000 12                 TRA     s:8656+1

      134     8622    4                 DO CASE(PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.CODE);

   8622 12 000152   000003 470400 xsym               LDP0    PCB+3
        12 000153   200007 720100                    LXL0    I,,AUTO
        12 000154   000003 471510                    LDP1    3,X0,PR0
        12 000155   100000 721100                    LXL1    0,,PR1
        12 000156   000005 101003                    CMPX1   5,DU
        12 000157   000161 602011 12                 TNC     s:8622+7,X1
        12 000160   000316 710000 12                 TRA     s:8656
        12 000161   000316 710000 12                 TRA     s:8656
        12 000162   000166 710000 12                 TRA     s:8624
        12 000163   000233 710000 12                 TRA     s:8632
        12 000164   000236 710000 12                 TRA     s:8634
        12 000165   000241 710000 12                 TRA     s:8636

      135     8623    4                  CASE(1);                 /* REEL = string                      */

      136     8624    5                    DO N=1 TO IN_SN.COUNT; /*  Allow for Multiple Reels          */
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:25   

   8624 12 000166   000001 235007                    LDA     1,DL
        12 000167   200010 755100                    STA     N,,AUTO
        12 000170   000227 710000 12                 TRA     s:8630+1

      137     8625    5                       OUT_BUF.SN = IN_SN.SN(N-1);

   8625 12 000171   200010 236100                    LDQ     N,,AUTO
        12 000172   000006 402007                    MPY     6,DL
        12 000173   040000 100406                    MLR     fill='040'O
        12 000174   777777 400006 xsym               ADSC9   IN_SN-1,Q                cn=2,n=6
        12 000175   000024 600006 10                 ADSC9   OUT_BUF                  cn=3,n=6

      138     8626    5                       OUT_BUF.REEL = PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.SUBLK$(N-1)
              8626                                ->OUT$SYM.TEXT;

   8626 12 000176   000003 470400 xsym               LDP0    PCB+3
        12 000177   200007 720100                    LXL0    I,,AUTO
        12 000200   000003 471510                    LDP1    3,X0,PR0
        12 000201   200010 721100                    LXL1    N,,AUTO
        12 000202   100002 473511                    LDP3    2,X1,PR1
        12 000203   300004 236100                    LDQ     4,,PR3
        12 000204   000033 772000                    QRL     27
        12 000205   000000 622006                    EAX2    0,QL
        12 000206   040000 100540                    MLR     fill='040'O
        12 000207   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
        12 000210   000030 400066 10                 ADSC9   OUT_BUF+4                cn=2,n=54

      139     8627    5                       FPT_KEYIN.MESS_.BOUND = PCB.OUT$->OUT$BLK.SUBLK$(I)

   8627 12 000211   000003 471510                    LDP1    3,X0,PR0
        12 000212   100002 473511                    LDP3    2,X1,PR1
        12 000213   300004 236100                    LDQ     4,,PR3
        12 000214   000033 772000                    QRL     27
        12 000215   000021 036007                    ADLQ    17,DL
        12 000216   000020 736000                    QLS     16
        12 000217   000006 676000 10                 ERQ     FPT_KEYIN+2
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:26   
        12 000220   000034 376000 xsym               ANQ     B_VECTNIL+28
        12 000221   000006 656000 10                 ERSQ    FPT_KEYIN+2

      140     8628    5                         ->OUT$BLK.SUBLK$(N-1)->OUT$SYM.COUNT + 17;
      141     8629    5                       CALL M$KEYIN(FPT_KEYIN) ALTRET(MONERR);

   8629 12 000222   000004 630400 10                 EPPR0   FPT_KEYIN
        12 000223   520000 713400                    CLIMB   alt,+40960
        12 000224   401400 401760                    pmme    nvectors=4
        12 000225   000576 702000 12                 TSX2    MONERR

      142     8630    5                       END;                /*  end REEL DO                       */

   8630 12 000226   200010 054100                    AOS     N,,AUTO
        12 000227   200010 236100                    LDQ     N,,AUTO
        12 000230   000000 116000 xsym               CMPQ    IN_SN
        12 000231   000171 604400 12                 TMOZ    s:8625
        12 000232   000316 710000 12                 TRA     s:8656

      143     8631    4                  CASE(2); /* RING */;

      144     8632    4                    FPT_OPEN_EI.V.FUN# = %CREATE#;

   8632 12 000233   003000 236007                    LDQ     1536,DL
        12 000234   000045 552010 xsym               STBQ    FPT_OPEN_EI+37,'10'O
        12 000235   000316 710000 12                 TRA     s:8656

      145     8633    4                  CASE(3);                 /* NORING                             */

      146     8634    4                    FPT_OPEN_EI.V.FUN# = %IN#;

   8634 12 000236   002000 236007                    LDQ     1024,DL
        12 000237   000045 552010 xsym               STBQ    FPT_OPEN_EI+37,'10'O
        12 000240   000316 710000 12                 TRA     s:8656

      147     8635    4                  CASE(4);                 /* DENSITY                            */

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:27   
      148     8636    4                    TDENS = SUBSTR(PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.SUBLK$(0)->
              8636                             OUT$SYM.TEXT,

   8636 12 000241   100003 473500                    LDP3    3,,PR1
        12 000242   300004 236100                    LDQ     4,,PR3
        12 000243   000033 772000                    QRL     27
        12 000244   000000 622006                    EAX2    0,QL
        12 000245   040100 100540                    MLR     fill='040'O
        12 000246   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
        12 000247   200004 000005                    ADSC9   TDENS,,AUTO              cn=0,n=5

      149     8637    4                     0,PCB.OUT$->OUT$BLK.SUBLK$(I)->OUT$BLK.SUBLK$(0)->OUT$SYM.COUNT);
      150     8638    5                    DO SELECT(TDENS);

   8638 12 000250   040000 106500                    CMPC    fill='040'O
        12 000251   200004 000005                    ADSC9   TDENS,,AUTO              cn=0,n=5
        12 000252   000013 000004 11                 ADSC9   DENS_TBL+10              cn=0,n=4
        12 000253   000262 602000 12                 TNC     s:8638+10
        12 000254   000302 600000 12                 TZE     s:8644
        12 000255   040000 106500                    CMPC    fill='040'O
        12 000256   200004 000005                    ADSC9   TDENS,,AUTO              cn=0,n=5
        12 000257   000014 000003 11                 ADSC9   DENS_TBL+11              cn=0,n=3
        12 000260   000310 601000 12                 TNZ     s:8648
        12 000261   000274 710000 12                 TRA     s:8640
        12 000262   040000 106500                    CMPC    fill='040'O
        12 000263   200004 000005                    ADSC9   TDENS,,AUTO              cn=0,n=5
        12 000264   000015 000004 11                 ADSC9   DENS_TBL+12              cn=0,n=4
        12 000265   000310 602000 12                 TNC     s:8648
        12 000266   000277 600000 12                 TZE     s:8642
        12 000267   040000 106500                    CMPC    fill='040'O
        12 000270   200004 000005                    ADSC9   TDENS,,AUTO              cn=0,n=5
        12 000271   000016 000005 11                 ADSC9   DENS_TBL+13              cn=0,n=5
        12 000272   000310 601000 12                 TNZ     s:8648
        12 000273   000305 710000 12                 TRA     s:8646

      151     8639    5                       SELECT('800');

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:28   
      152     8640    5                       FPT_OPEN_EI.V.DENSITY# = %D800#;

   8640 12 000274   000002 236007                    LDQ     2,DL
        12 000275   000066 552004 xsym               STBQ    FPT_OPEN_EI+54,'04'O
        12 000276   000316 710000 12                 TRA     s:8656

      153     8641    5                       SELECT('1600');

      154     8642    5                       FPT_OPEN_EI.V.DENSITY# = %D1600#;

   8642 12 000277   000003 236007                    LDQ     3,DL
        12 000300   000066 552004 xsym               STBQ    FPT_OPEN_EI+54,'04'O
        12 000301   000316 710000 12                 TRA     s:8656

      155     8643    5                       SELECT('6250');

      156     8644    5                       FPT_OPEN_EI.V.DENSITY# = %D6250#;

   8644 12 000302   000004 236007                    LDQ     4,DL
        12 000303   000066 552004 xsym               STBQ    FPT_OPEN_EI+54,'04'O
        12 000304   000316 710000 12                 TRA     s:8656

      157     8645    5                       SELECT('38000');

      158     8646    5                       FPT_OPEN_EI.V.DENSITY# = %D38000#;

   8646 12 000305   000005 236007                    LDQ     5,DL
        12 000306   000066 552004 xsym               STBQ    FPT_OPEN_EI+54,'04'O
        12 000307   000316 710000 12                 TRA     s:8656

      159     8647    5                       SELECT(ELSE);

      160     8648    5                    FPT_OPEN_EI.V.DENSITY# = %D_UNKNOWN#;

   8648 12 000310   000000 236003                    LDQ     0,DU
        12 000311   000066 552004 xsym               STBQ    FPT_OPEN_EI+54,'04'O

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:29   
      161     8649    5                    CALL VPL$ERR_PROC(1,170,'12'O); /* Warn user                 */

   8649 12 000312   000023 630400 13                 EPPR0   19
        12 000313   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000314   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000315   000000 011000                    NOP     0

      162     8650        /*E* ERROR: VPJ-00170
      163     8651             MESSAGE: Unknown DENSITY specified.  Default used instead.
      164     8652            MESSAGE1: Known densities are: 800, 1600, 6250, and 38000.
      165     8653        */
      166     8654    5                       END;

      167     8655    4                  END;                     /* END CASE                           */

      168     8656    3                 END;

   8656 12 000316   200007 054100                    AOS     I,,AUTO
        12 000317   000003 470400 xsym               LDP0    PCB+3
        12 000320   000001 236100                    LDQ     1,,PR0
        12 000321   000022 772000                    QRL     18
        12 000322   200007 116100                    CMPQ    I,,AUTO
        12 000323   000152 605400 12                 TPNZ    s:8622

      169     8657        /**/
      170     8658    2              IF FPT_OPEN_EI.V.FUN# ~= %CREATE#

   8658 12 000324   000045 236000 xsym               LDQ     FPT_OPEN_EI+37
        12 000325   777000 376007                    ANQ     -512,DL
        12 000326   003000 116007                    CMPQ    1536,DL
        12 000327   000337 600000 12                 TZE     s:8664
        12 000330   000066 236000 xsym               LDQ     FPT_OPEN_EI+54
        12 000331   000777 316007                    CANQ    511,DL
        12 000332   000337 600000 12                 TZE     s:8664

      171     8659    2                AND FPT_OPEN_EI.V.DENSITY# ~= %D_UNKNOWN# THEN
      172     8660    2                 CALL VPL$ERR_PROC(1,180,'12'O);
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:30   

   8660 12 000333   000027 630400 13                 EPPR0   23
        12 000334   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000335   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000336   000000 011000                    NOP     0

      173     8661        /*E*  ERROR: VPJ-00180
      174     8662            MESSAGE: DENSITY allowed only with RING.  DENSITY ignored.
      175     8663        */
      176     8664    2              IF CURRENT_VOL ~= 0 AND CURRENT_VOL ~= DESIRED_VOL

   8664 12 000337   200006 235100                    LDA     CURRENT_VOL,,AUTO
        12 000340   000356 600000 12                 TZE     REM_ALT1
        12 000341   200006 236100                    LDQ     CURRENT_VOL,,AUTO
        12 000342   000345 604000 12                 TMI     s:8667
        12 000343   000051 116000 10                 CMPQ    DESIRED_VOL
        12 000344   000356 600000 12                 TZE     REM_ALT1

      177     8665    2               THEN                        /* Must remove old volume             */
      178     8666    3               DO;

      179     8667    3                  FPT_REM.V.DISP# = %REM#;

   8667 12 000345   002000 236003                    LDQ     1024,DU
        12 000346   000002 552040 10                 STBQ    FPT_REM+2,'40'O

      180     8668    3                  FPT_REM.V.PSN# = IN_SN.SN(CURRENT_VOL -1);

   8668 12 000347   200006 236100                    LDQ     CURRENT_VOL,,AUTO
        12 000350   000006 402007                    MPY     6,DL
        12 000351   040000 100406                    MLR     fill='040'O
        12 000352   777777 400006 xsym               ADSC9   IN_SN-1,Q                cn=2,n=6
        12 000353   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6

      181     8669    3                  CALL REM ALTRET(REM_ALT1);

   8669 12 000354   000620 701000 12                 TSX1    REM
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:31   
        12 000355   000356 702000 12                 TSX2    REM_ALT1

   8668 12 000356                       REM_ALT1     null
      182     8670    3   REM_ALT1:      ;
      183     8671    3                  END;

      184     8672        /**/
      185     8673    2              CALL M$OPEN(FPT_OPEN_EI) ALTRET(MONERR);

   8673 12 000356   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000357   450000 713400                    CLIMB   alt,open
        12 000360   410400 401760                    pmme    nvectors=18
        12 000361   000576 702000 12                 TSX2    MONERR

      186     8674    2              CALL INFORM_USER;

   8674 12 000362   000660 701000 12                 TSX1    INFORM_USER
        12 000363   000000 011000                    NOP     0

      187     8675    2              CALL VPD$CHECK_VOL(IN_SN,2,,DESIRED_VOL,0); /* Force desired VOL   */

   8675 12 000364   000015 236000 13                 LDQ     13
        12 000365   200046 756100                    STQ     I+5,,AUTO
        12 000366   000032 236000 13                 LDQ     26
        12 000367   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000370   200044 757100                    STAQ    I+3,,AUTO
        12 000371   000034 237000 13                 LDAQ    28
        12 000372   200042 757100                    STAQ    I+1,,AUTO
        12 000373   200042 630500                    EPPR0   I+1,,AUTO
        12 000374   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000375   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000376   000000 011000                    NOP     0
        12 000377   000564 710000 12                 TRA     s:8727

      188     8676        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:32   
      189     8677    2            CASE(1);                       /* REWIND                             */

      190     8678    2              FPT_REM.V.DISP# = %PTV#;     /* REW                                */

   8678 12 000400   004000 236003                    LDQ     2048,DU
        12 000401   000002 552040 10                 STBQ    FPT_REM+2,'40'O

      191     8679    2              FPT_REM.V.PSN# = IN_SN.SN(0); /* First volume in the set           */

   8679 12 000402   040000 100400                    MLR     fill='040'O
        12 000403   000001 000006 xsym               ADSC9   IN_SN+1                  cn=0,n=6
        12 000404   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6

      192     8680    2              CALL REM ALTRET(REW_ALT);

   8680 12 000405   000620 701000 12                 TSX1    REM
        12 000406   000410 702000 12                 TSX2    REW_ALT

      193     8681    3              DO WHILE('0'B);

   8681 12 000407   000430 710000 12                 TRA     s:8689

      194     8682    3   REW_ALT:      IF CURRENT_VOL = 0

   8682 12 000410   200006 235100       REW_ALT      LDA     CURRENT_VOL,,AUTO
        12 000411   000430 601000 12                 TNZ     s:8689

      195     8683    3                  THEN                     /* Tape set unknown to PCL            */
      196     8684    4                  DO;

      197     8685    4                     SN_TEXTC.C = FPT_REM.V.PSN#;

   8685 12 000412   040000 100400                    MLR     fill='040'O
        12 000413   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6
        12 000414   000046 200006 10                 ADSC9   SN_TEXTC                 cn=1,n=6

      198     8686    4                     CALL VPL$ERR_PROC(1,150,'12'O,,VECTOR(SN_TEXTC));
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:33   

   8686 12 000415   000041 236000 13                 LDQ     33
        12 000416   200046 756100                    STQ     I+5,,AUTO
        12 000417   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000420   000010 235000 13                 LDA     8
        12 000421   200044 757100                    STAQ    I+3,,AUTO
        12 000422   000042 237000 13                 LDAQ    34
        12 000423   200042 757100                    STAQ    I+1,,AUTO
        12 000424   200042 630500                    EPPR0   I+1,,AUTO
        12 000425   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000426   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000427   000000 011000                    NOP     0

      199     8687    4                     END;

      200     8688    3                 END;

      201     8689    2              IF IN_SN.COUNT > 1

   8689 12 000430   000000 235000 xsym               LDA     IN_SN
        12 000431   000001 115007                    CMPA    1,DL
        12 000432   000474 604400 12                 TMOZ    s:8706

      202     8690    2               THEN                        /* Other reels exist                  */
      203     8691    3               DO;

      204     8692    3                  FPT_REM.V.DISP# = %REM#; /* Remove excess volumes              */

   8692 12 000433   002000 236003                    LDQ     1024,DU
        12 000434   000002 552040 10                 STBQ    FPT_REM+2,'40'O

      205     8693    4                  DO I = 1 TO IN_SN.COUNT -1;

   8693 12 000435   000001 235007                    LDA     1,DL
        12 000436   200007 755100                    STA     I,,AUTO
        12 000437   000471 710000 12                 TRA     s:8704+1

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:34   
      206     8694    4                     FPT_REM.V.PSN# = IN_SN.SN(I);

   8694 12 000440   200007 236100                    LDQ     I,,AUTO
        12 000441   000006 402007                    MPY     6,DL
        12 000442   040000 100406                    MLR     fill='040'O
        12 000443   000001 000006 xsym               ADSC9   IN_SN+1,Q                cn=0,n=6
        12 000444   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6

      207     8695    4                     CALL REM ALTRET(EXCESS_ALT);

   8695 12 000445   000620 701000 12                 TSX1    REM
        12 000446   000450 702000 12                 TSX2    EXCESS_ALT

      208     8696    5                     DO WHILE('0'B);

   8696 12 000447   000470 710000 12                 TRA     s:8704

      209     8697    5   EXCESS_ALT:          IF CURRENT_VOL = 0

   8697 12 000450   200006 235100       EXCESS_ALT   LDA     CURRENT_VOL,,AUTO
        12 000451   000470 601000 12                 TNZ     s:8704

      210     8698    5                         THEN              /* Set unknown to PCL                 */
      211     8699    6                         DO;

      212     8700    6                            SN_TEXTC.C = FPT_REM.V.PSN#;

   8700 12 000452   040000 100400                    MLR     fill='040'O
        12 000453   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6
        12 000454   000046 200006 10                 ADSC9   SN_TEXTC                 cn=1,n=6

      213     8701    6                            CALL VPL$ERR_PROC(1,150,'12'O,,VECTOR(SN_TEXTC));

   8701 12 000455   000041 236000 13                 LDQ     33
        12 000456   200046 756100                    STQ     I+5,,AUTO
        12 000457   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000460   000010 235000 13                 LDA     8
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:35   
        12 000461   200044 757100                    STAQ    I+3,,AUTO
        12 000462   000042 237000 13                 LDAQ    34
        12 000463   200042 757100                    STAQ    I+1,,AUTO
        12 000464   200042 630500                    EPPR0   I+1,,AUTO
        12 000465   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000466   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000467   000000 011000                    NOP     0

      214     8702    6                            END;

      215     8703    5                        END;

      216     8704    4                     END;

   8704 12 000470   200007 054100                    AOS     I,,AUTO
        12 000471   200007 236100                    LDQ     I,,AUTO
        12 000472   000000 116000 xsym               CMPQ    IN_SN
        12 000473   000440 604000 12                 TMI     s:8694

      217     8705    3                  END;

      218     8706    2              CALL VPD$CHECK_VOL(IN_SN,2,,1,0); /* Force VOL = 1                 */

   8706 12 000474   000015 236000 13                 LDQ     13
        12 000475   200046 756100                    STQ     I+5,,AUTO
        12 000476   000023 236000 13                 LDQ     19
        12 000477   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000500   200044 757100                    STAQ    I+3,,AUTO
        12 000501   000034 237000 13                 LDAQ    28
        12 000502   200042 757100                    STAQ    I+1,,AUTO
        12 000503   200042 630500                    EPPR0   I+1,,AUTO
        12 000504   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000505   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000506   000000 011000                    NOP     0
        12 000507   000564 710000 12                 TRA     s:8727

      219     8707        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:36   
      220     8708    2            CASE(2,3);                     /* REMOVE, RELEASE                    */

      221     8709        /*E* ERROR:  VPJ-00150
      222     8710             MESSAGE: MT#%U1 not mounted
      223     8711        */
      224     8712    2              FPT_REM.V.DISP# = DISP_ARY(FCN-1);

   8712 12 000510   000000 100405                    MLR     fill='000'O
        12 000511   777777 600001 11                 ADSC9   DENS_TBL-2,A             cn=3,n=1
        12 000512   000002 000001 10                 ADSC9   FPT_REM+2                cn=0,n=1

      225     8713    3              DO I=0 TO IN_SN.COUNT-1;

   8713 12 000513   200007 450100                    STZ     I,,AUTO
        12 000514   000546 710000 12                 TRA     s:8724+1

      226     8714    3                 FPT_REM.V.PSN# = IN_SN.SN(I);

   8714 12 000515   200007 236100                    LDQ     I,,AUTO
        12 000516   000006 402007                    MPY     6,DL
        12 000517   040000 100406                    MLR     fill='040'O
        12 000520   000001 000006 xsym               ADSC9   IN_SN+1,Q                cn=0,n=6
        12 000521   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6

      227     8715    3                 CALL REM ALTRET(REM_ALT);

   8715 12 000522   000620 701000 12                 TSX1    REM
        12 000523   000525 702000 12                 TSX2    REM_ALT

      228     8716    4                 DO WHILE('0'B);

   8716 12 000524   000545 710000 12                 TRA     s:8724

      229     8717    4   REM_ALT:         IF CURRENT_VOL = 0

   8717 12 000525   200006 235100       REM_ALT      LDA     CURRENT_VOL,,AUTO
        12 000526   000545 601000 12                 TNZ     s:8724
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:37   

      230     8718    4                     THEN                  /* Tape set unknown to PCL            */
      231     8719    5                     DO;

      232     8720    5                        SN_TEXTC.C = FPT_REM.V.PSN#;

   8720 12 000527   040000 100400                    MLR     fill='040'O
        12 000530   000002 400006 10                 ADSC9   FPT_REM+2                cn=2,n=6
        12 000531   000046 200006 10                 ADSC9   SN_TEXTC                 cn=1,n=6

      233     8721    5                        CALL VPL$ERR_PROC(1,150,'12'O,,VECTOR(SN_TEXTC));

   8721 12 000532   000041 236000 13                 LDQ     33
        12 000533   200046 756100                    STQ     I+5,,AUTO
        12 000534   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000535   000010 235000 13                 LDA     8
        12 000536   200044 757100                    STAQ    I+3,,AUTO
        12 000537   000042 237000 13                 LDAQ    34
        12 000540   200042 757100                    STAQ    I+1,,AUTO
        12 000541   200042 630500                    EPPR0   I+1,,AUTO
        12 000542   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000543   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000544   000000 011000                    NOP     0

      234     8722    5                        END;

      235     8723    4                    END;

      236     8724    3                 END;

   8724 12 000545   200007 054100                    AOS     I,,AUTO
        12 000546   200007 236100                    LDQ     I,,AUTO
        12 000547   000000 116000 xsym               CMPQ    IN_SN
        12 000550   000515 604000 12                 TMI     s:8714

      237     8725    2              CALL VPD$CHECK_VOL(IN_SN,1,,,0); /* Forget this tape set           */

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:38   
   8725 12 000551   000015 236000 13                 LDQ     13
        12 000552   200046 756100                    STQ     I+5,,AUTO
        12 000553   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000554   000001 235000 xsym               LDA     B_VECTNIL+1
        12 000555   200044 757100                    STAQ    I+3,,AUTO
        12 000556   000044 237000 13                 LDAQ    36
        12 000557   200042 757100                    STAQ    I+1,,AUTO
        12 000560   200042 630500                    EPPR0   I+1,,AUTO
        12 000561   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000562   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000563   000000 011000                    NOP     0

      238     8726    2            END;                           /* END CASE                           */

      239     8727    1           IF CURRENT_VOL ~= 0             /* PCL tapeset                        */

   8727 12 000564   200006 235100                    LDA     CURRENT_VOL,,AUTO
        12 000565   000575 600000 12                 TZE     s:8734
        12 000566   000050 236000 10                 LDQ     ERR_COUNT
        12 000567   000000 116000 xsym               CMPQ    IN_SN
        12 000570   000575 601000 12                 TNZ     s:8734

      240     8728    1             AND ERR_COUNT = IN_SN.COUNT   /* AND failure on every reel          */
      241     8729    1            THEN
      242     8730    1              CALL VPL$ERR_PROC(1,160,'12'O);

   8730 12 000571   000047 630400 13                 EPPR0   39
        12 000572   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000573   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000574   000000 011000                    NOP     0

      243     8731        /*E* ERROR:  VPJ-00160
      244     8732             MESSAGE: Tape set not mounted
      245     8733        */
      246     8734    1           RETURN;

   8734 12 000575   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:39   

      247     8735    1   MONERR:
      248     8736    1           IF SYS_ERR = %E$MNTBRK

   8736 12 000576   000000 470400 xsym  MONERR       LDP0    B$TCB$
        12 000577   000000 471500                    LDP1    0,,PR0
        12 000600   100102 236100                    LDQ     66,,PR1
        12 000601   377770 376007                    ANQ     131064,DL
        12 000602   012200 116007                    CMPQ    5248,DL
        12 000603   000613 601000 12                 TNZ     s:8744
        12 000604   000000 235000 xsym               LDA     BREAKS
        12 000605   000613 601000 12                 TNZ     s:8744

      249     8737    1             AND BREAKS=0
      250     8738    1            THEN                           /* CTRL-Y, GO  (he didnt mean to stop */
      251     8739    2            DO;

      252     8740    2               CALL M$RETRY;

   8740 12 000606   010010 713400                    CLIMB   4104
        12 000607   000000 401760                    pmme    nvectors=0

      253     8741    2               CALL INFORM_USER;

   8741 12 000610   000660 701000 12                 TSX1    INFORM_USER
        12 000611   000000 011000                    NOP     0

      254     8742    2               END;

   8742 12 000612   000617 710000 12                 TRA     s:8744+4

      255     8743    1            ELSE                           /* Unexpected error                   */
      256     8744    1              CALL VPL$ERR_PROC(3,0);      /* Abort command                      */

   8744 12 000613   000052 630400 13                 EPPR0   42
        12 000614   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000615   000000 701000 xent               TSX1    VPL$ERR_PROC
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:40   
        12 000616   000000 011000                    NOP     0
        12 000617   001136 710000 12                 TRA     s:8827

      257     8745        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:41   
      258     8746    1   REM:    PROC ALTRET;

   8746 12 000620   200012 741300       REM          STX1  ! PTR$+1,,AUTO

      259     8747        /* This routine just calls M$REM.  On the event of an ALTRET, the error code  */
      260     8748        /* is examined.  The altret is taken IFF the error code was %E$NOTUR          */
      261     8749    2           CALL M$REM(FPT_REM) ALTRET(REM_ALT);

   8749 12 000621   000000 630400 10                 EPPR0   FPT_REM
        12 000622   460006 713400                    CLIMB   alt,+24582
        12 000623   400000 401760                    pmme    nvectors=1
        12 000624   000627 702000 12                 TSX2    REM_ALT

      262     8750    2           RETURN;

   8750 12 000625   200012 221300                    LDX1  ! PTR$+1,,AUTO
        12 000626   000001 702211                    TSX2  ! 1,X1

   8749 12 000627                       REM_ALT      null
      263     8751        /**/
      264     8752    2   REM_ALT:;
      265     8753    2           IF SYS_ERR = %E$MNTBRK          /* BREAK or CTRL-Y                    */

   8753 12 000627   000000 470400 xsym               LDP0    B$TCB$
        12 000630   000000 471500                    LDP1    0,,PR0
        12 000631   100102 236100                    LDQ     66,,PR1
        12 000632   377770 376007                    ANQ     131064,DL
        12 000633   012200 116007                    CMPQ    5248,DL
        12 000634   000641 601000 12                 TNZ     s:8758
        12 000635   000000 235000 xsym               LDA     BREAKS
        12 000636   000641 601000 12                 TNZ     s:8758

      266     8754    2             AND BREAKS = 0                /* AND not BREAK                      */
      267     8755    2            THEN                           /* Must have been CTRL-Y, GO          */
      268     8756    2              CALL M$RETRY;                /* He didn't mean to stop             */

   8756 12 000637   010010 713400                    CLIMB   4104
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:42   
        12 000640   000000 401760                    pmme    nvectors=0

      269     8757        /**/                                    /* 'REAL' error                       */
      270     8758    2           ERR_COUNT = ERR_COUNT+1;

   8758 12 000641   000050 054000 10                 AOS     ERR_COUNT

      271     8759    2           IF SYS_ERR = %E$NOTUR

   8759 12 000642   000000 470400 xsym               LDP0    B$TCB$
        12 000643   000000 471500                    LDP1    0,,PR0
        12 000644   100102 236100                    LDQ     66,,PR1
        12 000645   377770 376007                    ANQ     131064,DL
        12 000646   012220 116007                    CMPQ    5264,DL
        12 000647   000652 601000 12                 TNZ     s:8762

      272     8760    2            THEN
      273     8761    2              ALTRETURN;

   8761 12 000650   200012 221300                    LDX1  ! PTR$+1,,AUTO
        12 000651   000000 702211                    TSX2  ! 0,X1

      274     8762    2           CALL VPL$ERR_PROC(3,0);         /* UNEXPECTED ERROR                   */

   8762 12 000652   000052 630400 13                 EPPR0   42
        12 000653   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000654   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000655   000000 011000                    NOP     0

      275     8763    2   END REM;

   8763 12 000656   200012 221300                    LDX1  ! PTR$+1,,AUTO
        12 000657   000001 702211                    TSX2  ! 1,X1

      276     8764        /**/
      277     8765        %EJECT;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:43   
      278     8766    1   INFORM_USER: PROC;

   8766 12 000660   200012 741300       INFORM_USER  STX1  ! PTR$+1,,AUTO

      279     8767        /*I* NAME: INFORM_USER
      280     8768             PURPOSE: To display some of the information in the DCB after a MOUNT.
      281     8769             CALL: CALL INFORM_USER;
      282     8770             DESCRIPTION: This routine simply looks in M$EI and reports the
      283     8771                          information that may be of interest to the user.
      284     8772        */
      285     8773    2   DCL BUF CHAR(80) STATIC;
      286     8774    2   DCL LABEL_BUF CHAR(21);
      287     8775    2   DCL NAME_BUF CHAR(9);
      288     8776    2   DCL INSERT_IDX UBIN;
      289     8777    2   DCL TBUF CHAR(4);
      290     8778    2   DCL FSN_BUF CHAR(35);
      291     8779    2   DCL DENS_TBL(0:5) CHAR(5) CONSTANT INIT('BUG!','BUG1','  800',' 1600',' 6250',
              8779            '38000');
      292     8780    2   DCL P$ PTR;
      293     8781    2   DCL BLANK_FLAG BIT(1);
      294     8782    2   DCL I UBIN;
      295     8783    2           BUF = ' ';

   8783 12 000661   040000 100400                    MLR     fill='040'O
        12 000662   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 000663   000052 000120 10                 ADSC9   BUF                      cn=0,n=80

      296     8784    3           DO CASE(M$EI$->F$DCB.ASN);

   8784 12 000664   000000 470400 xsym               LDP0    M$EI$
        12 000665   000032 236100                    LDQ     26,,PR0
        12 000666   000011 772000                    QRL     9
        12 000667   000777 376007                    ANQ     511,DL
        12 000670   000004 116007                    CMPQ    4,DL
        12 000671   000673 602006 12                 TNC     s:8784+7,QL
        12 000672   000724 710000 12                 TRA     s:8793
        12 000673   000724 710000 12                 TRA     s:8793
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:44   
        12 000674   000724 710000 12                 TRA     s:8793
        12 000675   000705 710000 12                 TRA     s:8789
        12 000676   000677 710000 12                 TRA     s:8786

      297     8785    3            CASE(%DEVICE#);

      298     8786    3              BUF='No labels present on ';

   8786 12 000677   040000 100400                    MLR     fill='040'O
        12 000700   000020 000025 11                 ADSC9   DENS_TBL+15              cn=0,n=21
        12 000701   000052 000120 10                 ADSC9   BUF                      cn=0,n=80

      299     8787    3              INSERT_IDX=21;

   8787 12 000702   000025 235007                    LDA     21,DL
        12 000703   200024 755100                    STA     INSERT_IDX,,AUTO
        12 000704   000725 710000 12                 TRA     s:8795

      300     8788    3            CASE(%TAPE#);

      301     8789    3              BUF='Labels present on ';

   8789 12 000705   040000 100400                    MLR     fill='040'O
        12 000706   000026 000022 11                 ADSC9   DENS_TBL+21              cn=0,n=18
        12 000707   000052 000120 10                 ADSC9   BUF                      cn=0,n=80

      302     8790    3              CALL INSERT(BUF,18,,DENS_TBL(M$EI$->F$DCB.DENSITY),' BPI ');

   8790 12 000710   000043 236100                    LDQ     35,,PR0
        12 000711   000777 376007                    ANQ     511,DL
        12 000712   000005 402007                    MPY     5,DL
        12 000713   040000 100406                    MLR     fill='040'O
        12 000714   000001 000005 11                 ADSC9   DENS_TBL,Q               cn=0,n=5
        12 000715   000056 400005 10                 ADSC9   BUF+4                    cn=2,n=5
        12 000716   040000 100400                    MLR     fill='040'O
        12 000717   000033 000005 11                 ADSC9   DENS_TBL+26              cn=0,n=5
        12 000720   000057 600071 10                 ADSC9   BUF+5                    cn=3,n=57
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:45   

      303     8791    3              INSERT_IDX = 28;

   8791 12 000721   000034 235007                    LDA     28,DL
        12 000722   200024 755100                    STA     INSERT_IDX,,AUTO
        12 000723   000725 710000 12                 TRA     s:8795

      304     8792    3            CASE(ELSE);

      305     8793    3              RETURN;

   8793 12 000724   000001 702211                    TSX2  ! 1,X1

      306     8794    3            END;

      307     8795    2           CALL INSERT(BUF,INSERT_IDX,,SUBSTR(IN_RES,0,2),'#',IN_SN.SN(0));

   8795 12 000725   777657 620005                    EAX0    -81,AL
        12 000726   777777 660003                    ERX0    -1,DU
        12 000727   040045 100400                    MLR     fill='040'O
        12 000730   000000 000002 xsym               ADSC9   IN_RES                   cn=0,n=2
        12 000731   000052 000010 10                 ADSC9   BUF,A                    cn=0,n=*X0
        12 000732   200024 236100                    LDQ     INSERT_IDX,,AUTO
        12 000733   000116 116007                    CMPQ    78,DL
        12 000734   000751 603000 12                 TRC     s:8796
        12 000735   777661 621006                    EAX1    -79,QL
        12 000736   777777 661003                    ERX1    -1,DU
        12 000737   040046 100400                    MLR     fill='040'O
        12 000740   000001 000001 13                 ADSC9   1                        cn=0,n=1
        12 000741   000052 400011 10                 ADSC9   BUF,Q                    cn=2,n=*X1
        12 000742   000115 116007                    CMPQ    77,DL
        12 000743   000751 603000 12                 TRC     s:8796
        12 000744   777662 622006                    EAX2    -78,QL
        12 000745   777777 662003                    ERX2    -1,DU
        12 000746   040046 100400                    MLR     fill='040'O
        12 000747   000001 000006 xsym               ADSC9   IN_SN+1                  cn=0,n=6
        12 000750   000052 600012 10                 ADSC9   BUF,Q                    cn=3,n=*X2
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:46   

      308     8796    2           INSERT_IDX = INSERT_IDX + 9;

   8796 12 000751   000011 036007                    ADLQ    9,DL
        12 000752   200024 756100                    STQ     INSERT_IDX,,AUTO

      309     8797
      310     8798    2           IF M$EI$->F$DCB.ASN = %TAPE#

   8798 12 000753   000000 470400 xsym               LDP0    M$EI$
        12 000754   000032 236100                    LDQ     26,,PR0
        12 000755   777000 376007                    ANQ     -512,DL
        12 000756   002000 116007                    CMPQ    1024,DL
        12 000757   001116 601000 12                 TNZ     s:8822
        12 000760   000034 220100                    LDX0    28,,PR0
        12 000761   000001 100003                    CMPX0   1,DU
        12 000762   000766 601000 12                 TNZ     s:8803
        12 000763   000077 221100                    LDX1    63,,PR0
        12 000764   000001 101003                    CMPX1   1,DU
        12 000765   001116 600000 12                 TZE     s:8822

      311     8799    2             AND (M$EI$->F$DCB.FSN ~= 1
      312     8800    2             OR M$EI$->F$DCB.FSECT ~= 1)
      313     8801    2            THEN
      314     8802    3            DO;

      315     8803    3               CALL INSERT(BUF,INSERT_IDX,,'MOUNTed at section ');

   8803 12 000766   200024 721100                    LXL1    INSERT_IDX,,AUTO
        12 000767   777657 621011                    EAX1    -81,X1
        12 000770   777777 661003                    ERX1    -1,DU
        12 000771   200024 235100                    LDA     INSERT_IDX,,AUTO
        12 000772   040045 100400                    MLR     fill='040'O
        12 000773   000035 000023 11                 ADSC9   DENS_TBL+28              cn=0,n=19
        12 000774   000052 000011 10                 ADSC9   BUF,A                    cn=0,n=*X1

      316     8804    3               INSERT_IDX = INSERT_IDX + 19;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:47   

   8804 12 000775   000023 035007                    ADLA    19,DL
        12 000776   200024 755100                    STA     INSERT_IDX,,AUTO

      317     8805    3               I=4;

   8805 12 000777   000004 236007                    LDQ     4,DL
        12 001000   200041 756100                    STQ     I,,AUTO

      318     8806    3               CALL BINCHAR(TBUF,M$EI$->F$DCB.FSECT);

   8806 12 001001   000077 236100                    LDQ     63,,PR0
        12 001002   000022 772000                    QRL     18
        12 001003   000000 235003                    LDA     0,DU
        12 001004   200042 757100                    STAQ    I+1,,AUTO
        12 001005   000100 301500                    BTD
        12 001006   200042 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        12 001007   200025 030004                    NDSC9   TBUF,,AUTO               cn=0,s=nosgn,sf=0,n=4

      319     8807    4               DO WHILE SUBSTR(TBUF,0,1)='0';

   8807 12 001010   001020 710000 12                 TRA     s:8810

      320     8808    4                  TBUF=SUBSTR(TBUF,1);

   8808 12 001011   200025 236100                    LDQ     TBUF,,AUTO
        12 001012   000011 736000                    QLS     9
        12 001013   000040 276007                    ORQ     32,DL
        12 001014   200025 756100                    STQ     TBUF,,AUTO

      321     8809    4                  I=I-1;

   8809 12 001015   200041 235100                    LDA     I,,AUTO
        12 001016   000001 135007                    SBLA    1,DL
        12 001017   200041 755100                    STA     I,,AUTO

      322     8810    4                  END;
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:48   

   8810 12 001020   200025 236100                    LDQ     TBUF,,AUTO
        12 001021   777000 376003                    ANQ     -512,DU
        12 001022   060000 116003                    CMPQ    24576,DU
        12 001023   001011 600000 12                 TZE     s:8808

      323     8811    3               CALL INSERT(BUF,INSERT_IDX,,SUBSTR(TBUF,0,I),' of FSN');

   8811 12 001024   200024 720100                    LXL0    INSERT_IDX,,AUTO
        12 001025   777657 620010                    EAX0    -81,X0
        12 001026   777777 660003                    ERX0    -1,DU
        12 001027   200041 721100                    LXL1    I,,AUTO
        12 001030   200024 235100                    LDA     INSERT_IDX,,AUTO
        12 001031   040045 100540                    MLR     fill='040'O
        12 001032   200025 000011                    ADSC9   TBUF,,AUTO               cn=0,n=*X1
        12 001033   000052 000010 10                 ADSC9   BUF,A                    cn=0,n=*X0
        12 001034   200024 236100                    LDQ     INSERT_IDX,,AUTO
        12 001035   200041 036100                    ADLQ    I,,AUTO
        12 001036   000120 116007                    CMPQ    80,DL
        12 001037   001051 603000 12                 TRC     s:8812
        12 001040   200042 756100                    STQ     I+1,,AUTO
        12 001041   200024 236100                    LDQ     INSERT_IDX,,AUTO
        12 001042   200041 036100                    ADLQ    I,,AUTO
        12 001043   200042 722100                    LXL2    I+1,,AUTO
        12 001044   777657 622012                    EAX2    -81,X2
        12 001045   777777 662003                    ERX2    -1,DU
        12 001046   040046 100400                    MLR     fill='040'O
        12 001047   000042 000007 11                 ADSC9   DENS_TBL+33              cn=0,n=7
        12 001050   000052 000012 10                 ADSC9   BUF,Q                    cn=0,n=*X2

      324     8812    3               INSERT_IDX = INSERT_IDX + 8 + I;

   8812 12 001051   200024 236100                    LDQ     INSERT_IDX,,AUTO
        12 001052   200041 036100                    ADLQ    I,,AUTO
        12 001053   000010 036007                    ADLQ    8,DL
        12 001054   200024 756100                    STQ     INSERT_IDX,,AUTO

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:49   
      325     8813    3               I=4;

   8813 12 001055   000004 235007                    LDA     4,DL
        12 001056   200041 755100                    STA     I,,AUTO

      326     8814    3               CALL BINCHAR(TBUF,M$EI$->F$DCB.FSN);

   8814 12 001057   000000 470400 xsym               LDP0    M$EI$
        12 001060   000034 236100                    LDQ     28,,PR0
        12 001061   000022 772000                    QRL     18
        12 001062   000000 235003                    LDA     0,DU
        12 001063   200042 757100                    STAQ    I+1,,AUTO
        12 001064   000100 301500                    BTD
        12 001065   200042 000010                    NDSC9   I+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
        12 001066   200025 030004                    NDSC9   TBUF,,AUTO               cn=0,s=nosgn,sf=0,n=4

      327     8815    4               DO WHILE SUBSTR(TBUF,0,1)='0';

   8815 12 001067   001077 710000 12                 TRA     s:8818

      328     8816    4                  TBUF = SUBSTR(TBUF,1);

   8816 12 001070   200025 236100                    LDQ     TBUF,,AUTO
        12 001071   000011 736000                    QLS     9
        12 001072   000040 276007                    ORQ     32,DL
        12 001073   200025 756100                    STQ     TBUF,,AUTO

      329     8817    4                  I=I-1;

   8817 12 001074   200041 235100                    LDA     I,,AUTO
        12 001075   000001 135007                    SBLA    1,DL
        12 001076   200041 755100                    STA     I,,AUTO

      330     8818    4                  END;

   8818 12 001077   200025 236100                    LDQ     TBUF,,AUTO
        12 001100   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:50   
        12 001101   060000 116003                    CMPQ    24576,DU
        12 001102   001070 600000 12                 TZE     s:8816

      331     8819    3               CALL INSERT(BUF,INSERT_IDX,,SUBSTR(TBUF,0,I));

   8819 12 001103   200024 720100                    LXL0    INSERT_IDX,,AUTO
        12 001104   777657 620010                    EAX0    -81,X0
        12 001105   777777 660003                    ERX0    -1,DU
        12 001106   200041 721100                    LXL1    I,,AUTO
        12 001107   200024 235100                    LDA     INSERT_IDX,,AUTO
        12 001110   040045 100540                    MLR     fill='040'O
        12 001111   200025 000011                    ADSC9   TBUF,,AUTO               cn=0,n=*X1
        12 001112   000052 000010 10                 ADSC9   BUF,A                    cn=0,n=*X0

      332     8820    3               INSERT_IDX = INSERT_IDX + I;

   8820 12 001113   200024 236100                    LDQ     INSERT_IDX,,AUTO
        12 001114   200041 036100                    ADLQ    I,,AUTO
        12 001115   200024 756100                    STQ     INSERT_IDX,,AUTO

      333     8821    3               END;

      334     8822    2           CALL INSERT(BUF,INSERT_IDX,,'.');

   8822 12 001116   200024 720100                    LXL0    INSERT_IDX,,AUTO
        12 001117   777657 620010                    EAX0    -81,X0
        12 001120   777777 660003                    ERX0    -1,DU
        12 001121   200024 235100                    LDA     INSERT_IDX,,AUTO
        12 001122   040045 100400                    MLR     fill='040'O
        12 001123   000054 000001 13                 ADSC9   44                       cn=0,n=1
        12 001124   000052 000010 10                 ADSC9   BUF,A                    cn=0,n=*X0

      335     8823    2           FPT_WRITE_UC.BUF_ = VECTOR(SUBSTR(BUF,0,INSERT_IDX+1));

   8823 12 001125   000020 735000                    ALS     16
        12 001126   177640 035007                    ADLA    65440,DL
        12 001127   000055 236000 13                 LDQ     45
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:51   
        12 001130   000004 757000 xsym               STAQ    FPT_WRITE_UC+4

      336     8824    2           CALL M$WRITE(FPT_WRITE_UC);

   8824 12 001131   000000 630400 xsym               EPPR0   FPT_WRITE_UC
        12 001132   040001 713400                    CLIMB   write
        12 001133   401400 401760                    pmme    nvectors=4

      337     8825    2           RETURN;

   8825 12 001134   200012 221300                    LDX1  ! PTR$+1,,AUTO
        12 001135   000001 702211                    TSX2  ! 1,X1

      338     8826    2   END INFORM_USER;
      339     8827    1   END VPJ$MOUNT;

   8827 12 001136   000000 702200 xent               TSX2  ! X66_ARET
      340     8828        %EOD;

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:52   
--  Include file information  --

   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$MOUNT.
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:53   

 **** Variables and constants ****

  ****  Section 010  Data  VPJ$MOUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    52-0-0/c CHAR(80)    r     1 BUF                       51-0-0/w SBIN        r     1 DESIRED_VOL
    50-0-0/w SBIN        r     1 ERR_COUNT                  4-0-0/d STRC(504)   r     1 FPT_KEYIN
     0-0-0/d STRC(144)   r     1 FPT_REM
    22-0-0/w UBIN        r     1 GARBAGE(0:1)
    24-0-0/c STRC(648)   r     1 OUT_BUF                   46-0-0/c STRC(63)    r     1 SN_TEXTC

  ****  Section 011 RoData VPJ$MOUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c CHAR(5)     r     1 DENS_TBL(0:5)
     0-0-0/b UBIN(9)     r     1 DISP_ARY(0:2)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FCN                       6-0-0/w UBIN        r     1 CURRENT_VOL
    *0-0-0/w SBIN        r     1 FCN                        7-0-0/w SBIN        r     1 I
    41-0-0/w UBIN        r     1 I                         24-0-0/w UBIN        r     1 INSERT_IDX
    10-0-0/w SBIN        r     1 N                         11-0-0/w PTR         r     1 PTR$
    25-0-0/c CHAR(4)     r     1 TBUF                       4-0-0/c CHAR(5)     r     1 TDENS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:54   
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w SBIN        r     1 BREAKS
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/d STRC(864)   r     1 FPT_FID_IN                 0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI
     0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI_SAVE           0-0-0/d STRC(432)   r     1 FPT_WRITE_UC
     0-0-0/b UBIN(9)     r     1 IN_ASN                     0-0-0/c CHAR(4)     r     1 IN_RES
     0-0-0/c STRC        r     1 IN_RES1                    0-0-0/w STRC(1116)  r     1 IN_SN
     0-0-0/w PTR         r     1 M$EI$                      0-0-0/w STRC(504)   r     1 PCB
     0-0-0/d STRC(324)   r     1 RESULTS_FID_IN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c CHAR        r     1 CHAR$1                     0-0-0/c CHAR(2)     r     1 CHAR$2
     0-0-0/w STRC(72)    r     1 DE$SC                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/c ASTR(9)     r     1 TEXT$C


   Procedure VPJ$MOUNT requires 607 words for executable code.
   Procedure VPJ$MOUNT requires 40 words of local(AUTO) storage.
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:55   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:56   
          MINI XREF LISTING

B$ALT.CODE
      8215**DCL      8215--REDEF    8216--REDEF    8216--REDEF
B$ALT.ERR.CODE
      8217**DCL      8736>>IF       8753>>IF       8759>>IF
B$ALT.ERR.ERR#
      8217**DCL      8217--REDEF
B$ALT.EVID
      8216**DCL      8216--REDEF    8216--REDEF
B$TCB.ALT$
      8211**DCL      8736>>IF       8753>>IF       8759>>IF
B$TCB$
      6018**DCL      8736>>IF       8753>>IF       8759>>IF
BREAKS
      5253**DCL      8736>>IF       8753>>IF
BREAK_LOC
      5253**DCL      5253--REDEF
BUF IN PROCEDURE INFORM_USER
      8773**DCL      8783<<ASSIGN   8786<<ASSIGN   8789<<ASSIGN   8790<<CALLBLT  8795<<CALLBLT  8803<<CALLBLT
      8811<<CALLBLT  8819<<CALLBLT  8822<<CALLBLT  8823--ASSIGN
CHAR$1
      8358**DCL      8586>>IF
CHAR$2
      8359**DCL      8592<<ASSIGN
CURRENT_VOL
      8343**DCL      8607<>CALL     8664>>IF       8664>>IF       8668>>ASSIGN   8682>>IF       8697>>IF
      8717>>IF       8727>>IF
DE$SC.BOUND
      8355**DCL      8590<<ASSIGN   8590>>ASSIGN
DE$SC.PTR$
      8357**DCL      8585>>ASSIGN   8589<<ASSIGN
DEF_ICB.FID.STRING
      5851**DCL      5852--REDEF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:57   
DENS_TBL IN PROCEDURE INFORM_USER
      8779**DCL      8790>>CALLBLT
DESIRED_VOL
      8368**DCL      8612<<ASSIGN   8617>>ASSIGN   8664>>IF       8675<>CALL
DEV_ICB.FID.STRING
      5737**DCL      5738--REDEF
DISP_ARY
      8372**DCL      8712>>ASSIGN
EI_KEY.KEY
      5949**DCL      5949--REDEF    5949--REDEF    5949--REDEF
EO_OCB.TYPE
      5449**DCL      5450--REDEF
ERR_COUNT
      8367**DCL      8608<<ASSIGN   8727>>IF       8758<<ASSIGN   8758>>ASSIGN
EXCESS_ALT
      8697**LABEL    8695--CALLALT
F$DCB.ACTPOS
      8186**DCL      8186--REDEF
F$DCB.ARS
      8161**DCL      8161--REDEF
F$DCB.ASN
      8176**DCL      8784>>DOCASE   8798>>IF
F$DCB.ATTR
      8179**DCL      8180--REDEF
F$DCB.BORROW
      8194**DCL      8194--REDEF    8194--REDEF    8194--REDEF
F$DCB.DCBNAME.L
      8208**DCL      8208--IMP-SIZ
F$DCB.DENSITY
      8181**DCL      8790>>CALLBLT
F$DCB.EOMCHAR
      8165**DCL      8165--REDEF
F$DCB.FLDID
      8189**DCL      8189--REDEF
F$DCB.FORM$
      8183**DCL      8183--REDEF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:58   
F$DCB.FSECT
      8199**DCL      8199--REDEF    8798>>IF       8806>>CALLBLT
F$DCB.FSN
      8176**DCL      8176--REDEF    8176--REDEF    8177--REDEF    8798>>IF       8814>>CALLBLT
F$DCB.HEADER$
      8182**DCL      8182--REDEF
F$DCB.IXTNSIZE
      8180**DCL      8180--REDEF
F$DCB.LASTSTA$
      8170**DCL      8170--REDEF
F$DCB.LVL
      8195**DCL      8195--REDEF
F$DCB.NAME.C
      8170**DCL      8170--REDEF
F$DCB.NOEOF
      8191**DCL      8191--REDEF
F$DCB.NRECS
      8181**DCL      8181--REDEF
F$DCB.NRECX
      8200**DCL      8200--REDEF
F$DCB.OHDR
      8192**DCL      8192--REDEF
F$DCB.ORG
      8175**DCL      8175--REDEF
F$DCB.PRECNO
      8198**DCL      8198--REDEF
F$DCB.RCSZ
      8203**DCL      8203--REDEF
F$DCB.RES
      8171**DCL      8171--REDEF
F$DCB.SETX
      8183**DCL      8183--REDEF
F$DCB.TAB$
      8182**DCL      8183--REDEF
F$DCB.TDA
      8197**DCL      8197--REDEF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:59   
F$DCB.WSN
      8172**DCL      8172--REDEF
FCN
        45**DCL        11--PROC     8586>>IF       8609>>DOCASE   8712>>ASSIGN
FPT_CLOSE_EI.SN_
      6790**DCL      6790--REDEF
FPT_CLOSE_EI.UTL_
      6791**DCL      6791--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6805**DCL      6805--REDEF
FPT_CLOSE_EI.V.TYPE#
      6803**DCL      6803--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6800**DCL      6800--REDEF    6802--REDEF
FPT_CLOSE_PTL.SN_
      6916**DCL      6916--REDEF
FPT_CLOSE_PTL.UTL_
      6917**DCL      6917--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6931**DCL      6931--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6929**DCL      6929--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6926**DCL      6926--REDEF    6928--REDEF
FPT_CLOSE_READ.SN_
      6832**DCL      6832--REDEF
FPT_CLOSE_READ.UTL_
      6833**DCL      6833--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6847**DCL      6847--REDEF
FPT_CLOSE_READ.V.TYPE#
      6845**DCL      6845--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6842**DCL      6842--REDEF    6844--REDEF
FPT_CLOSE_SI.SN_
      7000**DCL      7000--REDEF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:60   
FPT_CLOSE_SI.UTL_
      7001**DCL      7001--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      7015**DCL      7015--REDEF
FPT_CLOSE_SI.V.TYPE#
      7013**DCL      7013--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      7010**DCL      7010--REDEF    7012--REDEF
FPT_CLOSE_STD.SN_
      6958**DCL      6958--REDEF
FPT_CLOSE_STD.UTL_
      6959**DCL      6959--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6973**DCL      6973--REDEF
FPT_CLOSE_STD.V.TYPE#
      6971**DCL      6971--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6968**DCL      6968--REDEF    6970--REDEF
FPT_CLSEI_FT.SN_
      6874**DCL      6874--REDEF
FPT_CLSEI_FT.UTL_
      6875**DCL      6875--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6889**DCL      6889--REDEF
FPT_CLSEI_FT.V.TYPE#
      6887**DCL      6887--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6884**DCL      6884--REDEF    6886--REDEF
FPT_FID_IN
      6032**DCL      8594<>CALL
FPT_FID_IN.TEXTFID_
      6032**DCL      8584<<ASSIGN   8585--ASSIGN   8589--ASSIGN   8590--ASSIGN   8590--ASSIGN
FPT_KEYIN
      8333**DCL      8629<>CALL
FPT_KEYIN.MESS_.BOUND
      8333**DCL      8627<<ASSIGN
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:61   
FPT_KEYIN.V
      8336**DCL      8333--DCLINIT
FPT_OPEN_EI
      6443**DCL      8613<<ASSIGN   8673<>CALL
FPT_OPEN_EI.ACSVEH_
      6445**DCL      6446--REDEF
FPT_OPEN_EI.ALTKEYS_
      6451**DCL      6452--REDEF    6452--REDEF
FPT_OPEN_EI.HDR_
      6450**DCL      6451--REDEF
FPT_OPEN_EI.SN_
      6443**DCL      8620<<ASSIGN
FPT_OPEN_EI.TAB_
      6449**DCL      6450--REDEF
FPT_OPEN_EI.UHL_
      6443**DCL      6444--REDEF    6444--REDEF
FPT_OPEN_EI.V.ASN#
      6462**DCL      8614<<ASSIGN
FPT_OPEN_EI.V.DENSITY#
      6484**DCL      8640<<ASSIGN   8642<<ASSIGN   8644<<ASSIGN   8646<<ASSIGN   8648<<ASSIGN   8658>>IF
FPT_OPEN_EI.V.FSN#
      6483**DCL      6483--REDEF    6483--REDEF
FPT_OPEN_EI.V.FUN#
      6462**DCL      8632<<ASSIGN   8634<<ASSIGN   8658>>IF
FPT_OPEN_EI.V.INITZ.SCRUB#
      6453**DCL      8619<<ASSIGN
FPT_OPEN_EI.V.OPER.MNTONLY#
      6456**DCL      8618<<ASSIGN
FPT_OPEN_EI.V.ORG#
      6463**DCL      8615<<ASSIGN
FPT_OPEN_EI.V.RES#
      6467**DCL      8616<<ASSIGN
FPT_OPEN_EI.V.VOL#
      6477**DCL      8617<<ASSIGN
FPT_OPEN_EI.WSN_
      6449**DCL      6449--REDEF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:62   
FPT_OPEN_EI_SAVE
      6552**DCL      8613>>ASSIGN
FPT_OPEN_EI_SAVE.ACSVEH_
      6554**DCL      6555--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6560**DCL      6561--REDEF    6561--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6559**DCL      6560--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6558**DCL      6559--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6552**DCL      6553--REDEF    6553--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6592**DCL      6592--REDEF    6592--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6558**DCL      6558--REDEF
FPT_OPEN_OUT.ACSVEH_
      6336**DCL      6337--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6342**DCL      6343--REDEF    6343--REDEF
FPT_OPEN_OUT.HDR_
      6341**DCL      6342--REDEF
FPT_OPEN_OUT.TAB_
      6340**DCL      6341--REDEF
FPT_OPEN_OUT.UHL_
      6334**DCL      6335--REDEF    6335--REDEF
FPT_OPEN_OUT.V.FSN#
      6374**DCL      6374--REDEF    6374--REDEF
FPT_OPEN_OUT.WSN_
      6340**DCL      6340--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6227**DCL      6228--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6233**DCL      6234--REDEF    6234--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6232**DCL      6233--REDEF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:63   
FPT_OPEN_OUT_SAVE.TAB_
      6231**DCL      6232--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6225**DCL      6226--REDEF    6226--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6265**DCL      6265--REDEF    6265--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6231**DCL      6231--REDEF
FPT_READ_STD.STATION_
      6655**DCL      6656--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6667**DCL      6667--REDEF
FPT_READ_STD.V.INDX#
      6665**DCL      6665--REDEF
FPT_READ_UC.STATION_
      6616**DCL      6617--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6628**DCL      6628--REDEF
FPT_READ_UC.V.INDX#
      6626**DCL      6626--REDEF
FPT_REM
      8232**DCL      8749<>CALL
FPT_REM.V
      8232**DCL      8232--DCLINIT
FPT_REM.V.DISP#
      8232**DCL      8667<<ASSIGN   8678<<ASSIGN   8692<<ASSIGN   8712<<ASSIGN
FPT_REM.V.PSN#
      8233**DCL      8668<<ASSIGN   8679<<ASSIGN   8685>>ASSIGN   8694<<ASSIGN   8700>>ASSIGN   8714<<ASSIGN
      8720>>ASSIGN
FPT_WRITE_ME.STATION_
      6724**DCL      6724--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6731**DCL      6731--REDEF
FPT_WRITE_OUT.STATION_
      6755**DCL      6755--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:64   
      6762**DCL      6762--REDEF
FPT_WRITE_UC
      6691**DCL      8824<>CALL
FPT_WRITE_UC.BUF_
      6691**DCL      8823<<ASSIGN
FPT_WRITE_UC.STATION_
      6693**DCL      6693--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6700**DCL      6700--REDEF
FROM_SN.SN
      5599**DCL      5600--REDEF
GARBAGE
      8341**DCL      8336--DCLINIT
GETCMD.OUT$
      4806**DCL      4812--REDEF
I
      8352**DCL      8621<<DOINDEX  8622>>DOCASE   8626>>ASSIGN   8626>>ASSIGN   8627>>ASSIGN   8636>>ASSIGN
      8636>>ASSIGN   8636>>ASSIGN   8693<<DOINDEX  8694>>ASSIGN   8713<<DOINDEX  8714>>ASSIGN
I IN PROCEDURE INFORM_USER
      8782**DCL      8805<<ASSIGN   8809<<ASSIGN   8809>>ASSIGN   8811>>CALLBLT  8812>>ASSIGN   8813<<ASSIGN
      8817<<ASSIGN   8817>>ASSIGN   8819>>CALLBLT  8820>>ASSIGN
ICB.FID.STRING
      5623**DCL      5624--REDEF
IFSFA_PARAM.EOMCHAR#
      5978**DCL      5979--REDEF
IFSFA_PARAM.SIG1
      5972**DCL      5972--REDEF
IFSFA_PARAM.SIG2
      5972**DCL      5973--REDEF
INFORM_USER
      8766**PROC     8674--CALL     8741--CALL
INSERT_IDX IN PROCEDURE INFORM_USER
      8776**DCL      8787<<ASSIGN   8791<<ASSIGN   8795>>CALLBLT  8796<<ASSIGN   8796>>ASSIGN   8803>>CALLBLT
      8804<<ASSIGN   8804>>ASSIGN   8811>>CALLBLT  8812<<ASSIGN   8812>>ASSIGN   8819>>CALLBLT  8820<<ASSIGN
      8820>>ASSIGN   8822>>CALLBLT  8823>>ASSIGN
IN_ASN
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:65   
      5582**DCL      8595>>IF       8595>>IF       8614>>ASSIGN
IN_RES
      5545**DCL      5545--REDEF    8616>>ASSIGN   8795>>CALLBLT
IN_RES1.OP
      5545**DCL      8595>>IF
IN_SN
      5556**DCL      8607<>CALL     8620--ASSIGN   8675<>CALL     8706<>CALL     8725<>CALL
IN_SN.COUNT
      5560**DCL      8624>>DOINDEX  8689>>IF       8693>>DOINDEX  8713>>DOINDEX  8727>>IF
IN_SN.SN
      5561**DCL      5562--REDEF    8625>>ASSIGN   8668>>ASSIGN   8679>>ASSIGN   8694>>ASSIGN   8714>>ASSIGN
      8795>>CALLBLT
M$EI$
      6014**DCL      8784>>DOCASE   8790>>CALLBLT  8798>>IF       8798>>IF       8798>>IF       8806>>CALLBLT
      8814>>CALLBLT
M$KEYIN
        68**DCL-ENT  8629--CALL
M$OPEN
        63**DCL-ENT  8673--CALL
M$REM
        72**DCL-ENT  8749--CALL
M$RETRY
       120**DCL-ENT  8740--CALL     8756--CALL
M$WRITE
        64**DCL-ENT  8824--CALL
MONERR
      8736**LABEL    8629--CALLALT  8673--CALLALT
N
      8353**DCL      8624<<DOINDEX  8625>>ASSIGN   8626>>ASSIGN   8626>>ASSIGN   8627>>ASSIGN
OCB.TYPE
      5307**DCL      5308--REDEF
OFSFA_PARAM.EOMCHAR#
      6008**DCL      6009--REDEF
OFSFA_PARAM.SIG1
      6002**DCL      6002--REDEF
OFSFA_PARAM.SIG2
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:66   
      6002**DCL      6003--REDEF
OUT$BLK.CODE
      8287**DCL      8622>>DOCASE
OUT$BLK.NSUBLKS
      8291**DCL      8621>>DOINDEX
OUT$BLK.SUBLK$
      8312**DCL      8584>>ASSIGN   8584>>ASSIGN   8622>>DOCASE   8626>>ASSIGN   8626>>ASSIGN   8626>>ASSIGN
      8626>>ASSIGN   8627>>ASSIGN   8627>>ASSIGN   8636>>ASSIGN   8636>>ASSIGN   8636>>ASSIGN   8636>>ASSIGN
      8636>>ASSIGN   8636>>ASSIGN
OUT$SYM.COUNT
      8265**DCL      8268--IMP-SIZ  8584>>ASSIGN   8626>>ASSIGN   8627>>ASSIGN   8636>>ASSIGN   8636>>ASSIGN
OUT$SYM.TEXT
      8268**DCL      8584--ASSIGN   8626>>ASSIGN   8636>>ASSIGN
OUT_BUF
      8344**DCL      8333--DCLINIT  8334--DCLINIT
OUT_BUF.REEL
      8348**DCL      8626<<ASSIGN
OUT_BUF.SN
      8346**DCL      8625<<ASSIGN
OUT_SN.SN
      5579**DCL      5580--REDEF
PCB.OUT$
      4620**DCL      8584>>ASSIGN   8584>>ASSIGN   8621>>DOINDEX  8622>>DOCASE   8626>>ASSIGN   8626>>ASSIGN
      8627>>ASSIGN   8636>>ASSIGN   8636>>ASSIGN   8636>>ASSIGN
PTR$
      8360**DCL      8585<<ASSIGN   8586>>IF       8588<<ASSIGN   8588>>ASSIGN   8589>>ASSIGN   8592>>ASSIGN
REM
      8746**PROC     8669--CALL     8680--CALL     8695--CALL     8715--CALL
REM_ALT
      8717**LABEL    8715--CALLALT
REM_ALT IN PROCEDURE REM
      8749**LABEL    8749--CALLALT
REM_ALT1
      8668**LABEL    8669--CALLALT
RESULTS_FID_IN.SN
      6055**DCL      8601>>IF
PL6.E3A0      #001=VPJ$MOUNT File=VPJ$TAPE.:E05TSI                               WED 07/30/97 07:46 Page:67   
REW_ALT
      8682**LABEL    8680--CALLALT
SN_TEXTC
      8349**DCL      8686--CALL     8701--CALL     8721--CALL
SN_TEXTC.C
      8351**DCL      8685<<ASSIGN   8700<<ASSIGN   8720<<ASSIGN
SPEC_BUF
      5257**DCL      5257--REDEF
TBUF IN PROCEDURE INFORM_USER
      8777**DCL      8806<<CALLBLT  8807>>DOWHILE  8808<<ASSIGN   8808>>ASSIGN   8811>>CALLBLT  8814<<CALLBLT
      8815>>DOWHILE  8816<<ASSIGN   8816>>ASSIGN   8819>>CALLBLT
TDENS
      8342**DCL      8636<<ASSIGN   8638>>DOSELCT
TEXT$C.LEN
      8362**DCL      8363--IMP-SIZ
VPD$CHECK_VOL
      8398**DCL-ENT  8607--CALL     8675--CALL     8706--CALL     8725--CALL
VPD$FID
      8416**DCL-ENT  8594--CALL
VPL$ERR_PROC
      8558**DCL-ENT  8597--CALL     8603--CALL     8649--CALL     8660--CALL     8686--CALL     8701--CALL
      8721--CALL     8730--CALL     8744--CALL     8762--CALL

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:68   
      341        1        /*T***********************************************************/
      342        2        /*T*                                                         */
      343        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      344        4        /*T*                                                         */
      345        5        /*T***********************************************************/
      346        6        VPJ$SCAN: PROC;
      347        7        /*D* NAME: VPJ$SCAN
      348        8             CALL: CALL VPJ$SCAN;
      349        9             DESCRIPTION: SCAN <fid> - Causes the free tape <fid> to be scanned
      350       10                          from current position to next double EOD. Each file on
      351       11                          the tape is reported to the user as file number, number
      352       12                          of records, and size of largest record.
      353       13        */
      354       14        %INCLUDE VP_DATA_R;
      355     7001        %INCLUDE F$DCB;
      356     7050        %INCLUDE B_ERRORS_C;
      357     8177        /**/
      358     8178        /*  BASED DATA  */
      359     8179        /**/
      360     8180    1   DCL CHAR$44 CHAR(44) BASED;
      361     8181    1   DCL CHAR$32 CHAR(32) BASED;
      362     8182        %B$TCB;
      363     8185        %B$ALT;
      364     8193                %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      365     8238                %PARSE$SYM(NAME = OUT$SYM,STCLASS = BASED);
      366     8276        /**/
      367     8277        /*  CONSTANTS  */
      368     8278        /**/
      369     8279    1   DCL MOP_7_DIGITS(0:1) BIT(9) UNAL CONSTANT INIT(%MVZB6,%MVC1);
      370     8280        %FPT_PRECORD(DCB = M$EI,N=-1,STCLASS = CONSTANT);
      371     8301        %FPT_CVOL(DCB = M$EI,STCLASS = CONSTANT);
      372     8316        /**/
      373     8317        /*  AUTO DATA  */
      374     8318        /**/
      375     8319    1   DCL OUTSPEC$ PTR;
      376     8320        %FPT_READ(DCB = M$EI);
      377     8359    1   DCL EODS SBIN WORD;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:69   
      378     8360    1   DCL FILES SBIN WORD;
      379     8361    1   DCL RECS SBIN WORD;
      380     8362    1   DCL REC_SIZE SBIN WORD;
      381     8363    1   DCL OLD_RECS SBIN WORD;
      382     8364    1   DCL OLD_REC_SIZE SBIN WORD;
      383     8365    1   DCL VOL SBIN WORD;
      384     8366        /**/
      385     8367        /*  STATIC DATA  */
      386     8368        /**/
      387     8369    1   DCL 1 SCAN_HDR STATIC,
      388     8370    1         2 * CHAR(0) INIT('FT#'),
      389     8371    1         2 SN CHAR(6),
      390     8372    1         2 * CHAR(0) INIT('   File    Recs  Maxlen    '),
      391     8373    1         2 DENS CHAR(5),
      392     8374    1         2 * CHAR(0) INIT(' BPI');
      393     8375    1   DCL SCAN_HDR_C REDEF SCAN_HDR CHAR(45);
      394     8376    1   DCL 1 DATA_REC STATIC,
      395     8377    1         2 * CHAR(9) INIT(' '),
      396     8378    1         2 FILE CHAR(7),
      397     8379    1         2 * CHAR(1) INIT(' '),
      398     8380    1         2 RECS CHAR(7),
      399     8381    1         2 * CHAR(1) INIT(' '),
      400     8382    1         2 LONGEST CHAR(7);
      401     8383    1   DCL DATA_REC_C REDEF DATA_REC CHAR(32);
      402     8384        %FPT_PFIL(FPTN = FPT_PFIL,
      403     8385                   DCB  = M$EI,
      404     8386                   STCLASS = STATIC);
      405     8401        %FPT_CLOSE(FPTN = FPT_CLOSEI,
      406     8402                    DCB = M$EI,
      407     8403                    NOMARKS = YES,
      408     8404                    STCLASS = STATIC);
      409     8446        /**/
      410     8447        /*  ENTRY DCLS  */
      411     8448        /**/
      412     8449        %VP_ENTRIES (OMIT=VPJ$SCAN);
      413     8657        /**/
      414     8658    1           OLD_RECS = 0;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:70   
      415     8659    1           REMEMBER NEVER_STARTED IN ABORT_CMD;
      416     8660    1           REMEMBER NEVER_STARTED IN ABORT_STEP;
      417     8661        /**/
      418     8662    1           FPT_FID_IN.TEXTFID_ = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);
      419     8663    1           CALL VPD$FID(FPT_FID_IN);
      420     8664    1           CALL VPD$GET_IN_DEV_MASK(ICB);
      421     8665    1           IF ICB.DEV_MASK~='040'O
      422     8666    1            THEN
      423     8667    1              CALL VPL$ERR_PROC(3,120,'12'O);
      424     8668        /*E*   ERROR: VPJ-00120
      425     8669             MESSAGE: SCAN allows only free tape input
      426     8670        */
      427     8671        /**/
      428     8672    1           IF PCB.OUT$ -> OUT$BLK.NSUBLKS = 2
      429     8673    1            THEN                           /* OUTSPEC present                    */
      430     8674    1              OUTSPEC$ = PCB.OUT$ -> OUT$BLK.SUBLK$(1);
      431     8675    1            ELSE                           /* No OUTSPEC specified               */
      432     8676    1              OUTSPEC$ = ADDR(NIL);
      433     8677    1           CALL VPC$SETOUT(OUTSPEC$);      /* Set up and open output file        */
      434     8678    1           CALL VPG$SET_UP_WRITE;
      435     8679    1           REMEMBER ABORT_SCAN IN ABORT_CMD;
      436     8680    1           REMEMBER ABORT_SCAN IN ABORT_STEP;
      437     8681    1           EI_KEY.LEN = 0;
      438     8682    1           EI_KEY.LEN = EI_KEY.LEN -1;     /* Insure error on uninitialized WRITE*/
      439     8683        /**/
      440     8684    1           FPT_OPEN_EI = FPT_OPEN_EI_SAVE;
      441     8685    1           CALL VPD$CHECK_VOL(IN_SN,3,,VOL,0); /* Find out what's hanging        */
      442     8686    1           FPT_OPEN_EI.V.VOL# = VOL;
      443     8687    1           FPT_OPEN_EI.V.ASN# = IN_ASN;
      444     8688    1           FPT_OPEN_EI.V.ORG# = %FREE#;
      445     8689    1           FPT_OPEN_EI.V.CVOL# = %YES#;    /* Our own CVOL control               */
      446     8690    1           FPT_OPEN_EI.V.RES# = IN_RES;
      447     8691    1           FPT_OPEN_EI.SN_ = VECTOR(IN_SN);
      448     8692    1           FPT_READ.BUF_ = IN_BUF_VECTOR;
      449     8693    1           FPT_OPEN_EI.V.INITZ.SCRUB# = %YES#; /* Destroy any old density        */
      450     8694    1           CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR); /*  Test open to check      */
      451     8695    1           CALL M$CLOSE(FPT_CLSEI_FT) ALTRET(MON_ERR); /*  density dont repostn  */
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:71   
      452     8696    2           DO CASE(M$EI$->F$DCB.DENSITY);
      453     8697    2            CASE(%D800#);
      454     8698    2              SCAN_HDR.DENS = ' 800';
      455     8699    2            CASE(%D1600#);
      456     8700    2              SCAN_HDR.DENS = '1600';
      457     8701    2            CASE(%D6250#);
      458     8702    2              SCAN_HDR.DENS = '6250';
      459     8703    2            CASE(%D38000#);
      460     8704    2              SCAN_HDR.DENS = '38000';
      461     8705    2            END;                           /* END CASE                           */
      462     8706    1           SCAN_HDR.SN = M$EI$->F$DCB.PSN;
      463     8707    1           IN_BUF_VECTOR.PTR$ -> CHAR$44 = SCAN_HDR_C;
      464     8708    1           CALL VPG$WRITE_OUT(44,0);
      465     8709    1           CALL M$OPEN (FPT_OPEN_EI) ALTRET (MON_ERR); /* HONEST OPEN            */
      466     8710    1           EODS = 0;
      467     8711    1           FILES = 0;
      468     8712    1           RECS = 0;
      469     8713    1           REC_SIZE = 0;
      470     8714    2           DO WHILE(EODS<2 AND BREAKS=0);  /* SCAN until DEOD or Break           */
      471     8715    2              CALL M$READ(FPT_READ) ALTRET(READ_ALT);
      472     8716    2              IF M$EI$->F$DCB.ARS=FPT_READ.BUF_.BOUND+1
      473     8717    2               THEN
      474     8718    2                 GOTO LD;
      475     8719    2               ELSE
      476     8720    3               DO;
      477     8721    3                  EODS = 0;
      478     8722    3                  RECS = RECS+1;
      479     8723    3                  IF REC_SIZE<M$EI$->F$DCB.ARS
      480     8724    3                   THEN
      481     8725    3                     REC_SIZE = M$EI$->F$DCB.ARS;
      482     8726    3                  END;
      483     8727    3              DO WHILE('0'B);
      484     8728    3   READ_ALT:
      485     8729    3                 IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
      486     8730    3                  THEN
      487     8731    4                  DO;
      488     8732    4                     EODS = EODS+1;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:72   
      489     8733    4                     IF EODS=1
      490     8734    4                      THEN                 /* One EOD (or first of two)          */
      491     8735    5                      DO;
      492     8736    5                         CALL OUT_FILE_DATA;
      493     8737    5                         END;
      494     8738    4                      ELSE                 /* Two or more EODs                   */
      495     8739    4                        IF M$EI$ -> F$DCB.VOL ~= IN_SN.COUNT
      496     8740    4                         THEN              /* VOL transition!                    */
      497     8741    5                         DO;
      498     8742    5                            RECS = OLD_RECS; /* Ignore last EOD                  */
      499     8743    5                            REC_SIZE = OLD_REC_SIZE;
      500     8744    5                            OLD_RECS = 0;
      501     8745    5                            CALL M$CVOL (FPT_CVOL) ALTRET(MON_ERR);
      502     8746    5                            CALL VPD$CHECK_VOL(IN_SN,0,M$EI#,,0);
      503     8747    5                            EODS = 0;
      504     8748    5                            END;
      505     8749    4                         ELSE              /* End of the tape!                   */
      506     8750    5                         DO;               /* Reposition tape to in between      */
      507     8751    5                            FPT_PFIL.V.BOF# = %YES#; /* tape marks               */
      508     8752    5                            CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      509     8753    5                            END;
      510     8754    4                     END;
      511     8755    3                  ELSE
      512     8756    3                    IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
      513     8757    3                     THEN
      514     8758    4   LD:               DO;
      515     8759    4                        CALL M$PRECORD(FPT_PRECORD) ALTRET(MON_ERR);
      516     8760    4                        CALL VPD$ENLARGE_BUF(0); /* DOUBLE BUFFER SIZE           */
      517     8761    4                        FPT_READ.BUF_ = IN_BUF_VECTOR;
      518     8762    4                        END;
      519     8763    3                     ELSE
      520     8764    3   MON_ERR:            CALL VPL$ERR_PROC(3,0); /* UNKNOWN ERROR                  */
      521     8765    3                 END;                      /* END DO WHILE('0'B)                 */
      522     8766    2              END;                         /* END WHILE                          */
      523     8767    1   END_IT: ;
      524     8768    1   ABORT_SCAN: ;
      525     8769    1           CALL OUT_FILE_DATA;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:73   
      526     8770    1           CALL VPD$MINIMIZE_BUF;
      527     8771    1           CALL VPD$CHECK_VOL(IN_SN,0,M$EI#,,0); /* Check VOL transition         */
      528     8772    1           IF M$EI$->F$DCB.FCD
      529     8773    1            THEN
      530     8774    1              CALL M$CLOSE(FPT_CLOSEI) ALTRET(MON_ERR);
      531     8775    1           CALL VPD$CLOSE_OUT(BITBIN(ERR_FLG)); /* CLOSE w/SAVE if no errors     */
      532     8776    1   NEVER_STARTED: ;
      533     8777    1           RETURN;
      534     8778        %EJECT;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:74   
      535     8779    1   OUT_FILE_DATA: PROC;
      536     8780    2           IF OLD_RECS = 0
      537     8781    2            THEN
      538     8782    2              GOTO OUT_DONE;
      539     8783    2           FILES = FILES +1;
      540     8784    2           CALL BINCHAR(DATA_REC.FILE,FILES);
      541     8785    2           CALL BINCHAR(DATA_REC.RECS,OLD_RECS);
      542     8786    2           CALL BINCHAR(DATA_REC.LONGEST,OLD_REC_SIZE);
      543     8787    2           CALL EDITCHAR(DATA_REC.RECS,
      544     8788    2             0,
      545     8789    2             7,
      546     8790    2             MOP_7_DIGITS,
      547     8791    2             DATA_REC.RECS);
      548     8792    2           CALL EDITCHAR(DATA_REC.FILE,
      549     8793    2             0,
      550     8794    2             7,
      551     8795    2             MOP_7_DIGITS,
      552     8796    2             DATA_REC.FILE);
      553     8797    2           CALL EDITCHAR(DATA_REC.LONGEST,
      554     8798    2             0,
      555     8799    2             7,
      556     8800    2             MOP_7_DIGITS,
      557     8801    2             DATA_REC.LONGEST);
      558     8802    2           IN_BUF_VECTOR.PTR$ -> CHAR$32 = DATA_REC_C;
      559     8803    2           CALL VPG$WRITE_OUT(32,0);
      560     8804    2   OUT_DONE: ;
      561     8805    2           OLD_RECS = RECS;
      562     8806    2           OLD_REC_SIZE = REC_SIZE;
      563     8807    2           RECS = 0;
      564     8808    2           REC_SIZE = 0;
      565     8809    2           RETURN;
      566     8810    2   END OUT_FILE_DATA;
      567     8811    1   END VPJ$SCAN;
      568     8812        %EOD;

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:75   
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$SCAN.

   Procedure VPJ$SCAN requires 316 words for executable code.
   Procedure VPJ$SCAN requires 20 words of local(AUTO) storage.

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:76   

 Object Unit name= VPJ$SCAN                                   File name= VPJ$TAPE.:E05TOU
 UTS= JUL 30 '97 07:49:05.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10  RoData even  UTS     25     31  VPJ$SCAN
   11   Data  even  none    68    104  VPJ$SCAN
   12   Proc  even  none   316    474  VPJ$SCAN
   13  RoData even  none    27     33  VPJ$SCAN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        0  VPJ$SCAN
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:77   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VPD$FID
         yes           Std       8 VPL$ERR_PROC
         yes           Std       1 VPC$SETOUT
         yes           Std       1 VPD$CLOSE_OUT
         yes           Std       5 VPD$CHECK_VOL
         yes           Std       1 VPD$ENLARGE_BUF
         yes           Std       1 VPD$GET_IN_DEV_MASK
         yes           Std       0 VPG$SET_UP_WRITE
         yes           Std       0 VPD$MINIMIZE_BUF
         yes           Std       2 VPG$WRITE_OUT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   ERR_FLG
     ABORT_STEP                            ABORT_CMD                             BREAK_LOC
     BREAKS                                BREAK_MESSAGE_REPORTER                SPEC_BUF
     IN_RES                                IN_SN                                 IN_ASN
     ICB                                   IN_BUF_VECTOR                         EI_KEY
     M$EI                                  M$EI$                                 M$EI#
     M$EO                                  M$EO1                                 M$ME
     M$SI                                  M$READFILE                            M$DO
     M$STD1                                M$SORT1                               B$TCB$
     FPT_FID_IN                            FPT_OPEN_EI                           FPT_OPEN_EI_SAVE
     FPT_CLSEI_FT                          B_VECTNIL
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:78   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:79   


      341        1        /*T***********************************************************/
      342        2        /*T*                                                         */
      343        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      344        4        /*T*                                                         */
      345        5        /*T***********************************************************/
      346        6        VPJ$SCAN: PROC;

      6 12 000000   000000 700200 xent  VPJ$SCAN     TSX0  ! X66_AUTO_0
        12 000001   000024 000000                    ZERO    20,0

      347        7        /*D* NAME: VPJ$SCAN
      348        8             CALL: CALL VPJ$SCAN;
      349        9             DESCRIPTION: SCAN <fid> - Causes the free tape <fid> to be scanned
      350       10                          from current position to next double EOD. Each file on
      351       11                          the tape is reported to the user as file number, number
      352       12                          of records, and size of largest record.
      353       13        */
      354       14        %INCLUDE VP_DATA_R;
      355     7001        %INCLUDE F$DCB;
      356     7050        %INCLUDE B_ERRORS_C;
      357     8177        /**/
      358     8178        /*  BASED DATA  */
      359     8179        /**/
      360     8180    1   DCL CHAR$44 CHAR(44) BASED;
      361     8181    1   DCL CHAR$32 CHAR(32) BASED;
      362     8182        %B$TCB;
      363     8185        %B$ALT;
      364     8193                %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      365     8238                %PARSE$SYM(NAME = OUT$SYM,STCLASS = BASED);
      366     8276        /**/
      367     8277        /*  CONSTANTS  */
      368     8278        /**/
      369     8279    1   DCL MOP_7_DIGITS(0:1) BIT(9) UNAL CONSTANT INIT(%MVZB6,%MVC1);
      370     8280        %FPT_PRECORD(DCB = M$EI,N=-1,STCLASS = CONSTANT);
      371     8301        %FPT_CVOL(DCB = M$EI,STCLASS = CONSTANT);
      372     8316        /**/
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:80   
      373     8317        /*  AUTO DATA  */
      374     8318        /**/
      375     8319    1   DCL OUTSPEC$ PTR;
      376     8320        %FPT_READ(DCB = M$EI);
      377     8359    1   DCL EODS SBIN WORD;
      378     8360    1   DCL FILES SBIN WORD;
      379     8361    1   DCL RECS SBIN WORD;
      380     8362    1   DCL REC_SIZE SBIN WORD;
      381     8363    1   DCL OLD_RECS SBIN WORD;
      382     8364    1   DCL OLD_REC_SIZE SBIN WORD;
      383     8365    1   DCL VOL SBIN WORD;
      384     8366        /**/
      385     8367        /*  STATIC DATA  */
      386     8368        /**/
      387     8369    1   DCL 1 SCAN_HDR STATIC,
      388     8370    1         2 * CHAR(0) INIT('FT#'),
      389     8371    1         2 SN CHAR(6),
      390     8372    1         2 * CHAR(0) INIT('   File    Recs  Maxlen    '),
      391     8373    1         2 DENS CHAR(5),
      392     8374    1         2 * CHAR(0) INIT(' BPI');
      393     8375    1   DCL SCAN_HDR_C REDEF SCAN_HDR CHAR(45);
      394     8376    1   DCL 1 DATA_REC STATIC,
      395     8377    1         2 * CHAR(9) INIT(' '),
      396     8378    1         2 FILE CHAR(7),
      397     8379    1         2 * CHAR(1) INIT(' '),
      398     8380    1         2 RECS CHAR(7),
      399     8381    1         2 * CHAR(1) INIT(' '),
      400     8382    1         2 LONGEST CHAR(7);
      401     8383    1   DCL DATA_REC_C REDEF DATA_REC CHAR(32);
      402     8384        %FPT_PFIL(FPTN = FPT_PFIL,
      403     8385                   DCB  = M$EI,
      404     8386                   STCLASS = STATIC);
      405     8401        %FPT_CLOSE(FPTN = FPT_CLOSEI,
      406     8402                    DCB = M$EI,
      407     8403                    NOMARKS = YES,
      408     8404                    STCLASS = STATIC);
      409     8446        /**/
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:81   
      410     8447        /*  ENTRY DCLS  */
      411     8448        /**/
      412     8449        %VP_ENTRIES (OMIT=VPJ$SCAN);
      413     8657        /**/
      414     8658    1           OLD_RECS = 0;

   8658 12 000002   200010 450100                    STZ     OLD_RECS,,AUTO

      415     8659    1           REMEMBER NEVER_STARTED IN ABORT_CMD;

   8659 12 000003   000422 635000 12                 EAA     NEVER_STARTED
        12 000004   000000 452400 xsym               STP2    ABORT_CMD
        12 000005   000001 755000 xsym               STA     ABORT_CMD+1

      416     8660    1           REMEMBER NEVER_STARTED IN ABORT_STEP;

   8660 12 000006   000422 635000 12                 EAA     NEVER_STARTED
        12 000007   000000 452400 xsym               STP2    ABORT_STEP
        12 000010   000001 755000 xsym               STA     ABORT_STEP+1

      417     8661        /**/
      418     8662    1           FPT_FID_IN.TEXTFID_ = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->OUT$SYM.TEXT);

   8662 12 000011   000003 470400 xsym               LDP0    PCB+3
        12 000012   000003 471500                    LDP1    3,,PR0
        12 000013   100004 236100                    LDQ     4,,PR1
        12 000014   000033 772000                    QRL     27
        12 000015   000064 737000                    LLS     52
        12 000016   000140 135007                    SBLA    96,DL
        12 000017   200016 451500                    STP1    VOL+4,,AUTO
        12 000020   200016 236100                    LDQ     VOL+4,,AUTO
        12 000021   000000 036000 13                 ADLQ    0
        12 000022   000002 757000 xsym               STAQ    FPT_FID_IN+2

      419     8663    1           CALL VPD$FID(FPT_FID_IN);

   8663 12 000023   000001 630400 13                 EPPR0   1
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:82   
        12 000024   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000025   000000 701000 xent               TSX1    VPD$FID
        12 000026   000000 011000                    NOP     0

      420     8664    1           CALL VPD$GET_IN_DEV_MASK(ICB);

   8664 12 000027   000002 630400 13                 EPPR0   2
        12 000030   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000031   000000 701000 xent               TSX1    VPD$GET_IN_DEV_MASK
        12 000032   000000 011000                    NOP     0

      421     8665    1           IF ICB.DEV_MASK~='040'O

   8665 12 000033   000171 236000 xsym               LDQ     ICB+121
        12 000034   777000 376003                    ANQ     -512,DU
        12 000035   040000 116003                    CMPQ    16384,DU
        12 000036   000043 600000 12                 TZE     s:8672

      422     8666    1            THEN
      423     8667    1              CALL VPL$ERR_PROC(3,120,'12'O);

   8667 12 000037   000005 630400 13                 EPPR0   5
        12 000040   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000041   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000042   000000 011000                    NOP     0

      424     8668        /*E*   ERROR: VPJ-00120
      425     8669             MESSAGE: SCAN allows only free tape input
      426     8670        */
      427     8671        /**/
      428     8672    1           IF PCB.OUT$ -> OUT$BLK.NSUBLKS = 2

   8672 12 000043   000003 470400 xsym               LDP0    PCB+3
        12 000044   000001 220100                    LDX0    1,,PR0
        12 000045   000002 100003                    CMPX0   2,DU
        12 000046   000052 601000 12                 TNZ     s:8676

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:83   
      429     8673    1            THEN                           /* OUTSPEC present                    */
      430     8674    1              OUTSPEC$ = PCB.OUT$ -> OUT$BLK.SUBLK$(1);

   8674 12 000047   000004 236100                    LDQ     4,,PR0
        12 000050   200003 756100                    STQ     OUTSPEC$,,AUTO
        12 000051   000054 710000 12                 TRA     s:8677

      431     8675    1            ELSE                           /* No OUTSPEC specified               */
      432     8676    1              OUTSPEC$ = ADDR(NIL);

   8676 12 000052   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000053   200003 756100                    STQ     OUTSPEC$,,AUTO

      433     8677    1           CALL VPC$SETOUT(OUTSPEC$);      /* Set up and open output file        */

   8677 12 000054   200003 631500                    EPPR1   OUTSPEC$,,AUTO
        12 000055   200016 451500                    STP1    VOL+4,,AUTO
        12 000056   200016 630500                    EPPR0   VOL+4,,AUTO
        12 000057   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000060   000000 701000 xent               TSX1    VPC$SETOUT
        12 000061   000000 011000                    NOP     0

      434     8678    1           CALL VPG$SET_UP_WRITE;

   8678 12 000062   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000063   000000 701000 xent               TSX1    VPG$SET_UP_WRITE
        12 000064   000000 011000                    NOP     0

      435     8679    1           REMEMBER ABORT_SCAN IN ABORT_CMD;

   8679 12 000065   000361 635000 12                 EAA     END_IT
        12 000066   000000 452400 xsym               STP2    ABORT_CMD
        12 000067   000001 755000 xsym               STA     ABORT_CMD+1

      436     8680    1           REMEMBER ABORT_SCAN IN ABORT_STEP;

   8680 12 000070   000361 635000 12                 EAA     END_IT
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:84   
        12 000071   000000 452400 xsym               STP2    ABORT_STEP
        12 000072   000001 755000 xsym               STA     ABORT_STEP+1

      437     8681    1           EI_KEY.LEN = 0;

   8681 12 000073   000000 236003                    LDQ     0,DU
        12 000074   000000 552040 xsym               STBQ    EI_KEY,'40'O

      438     8682    1           EI_KEY.LEN = EI_KEY.LEN -1;     /* Insure error on uninitialized WRITE*/

   8682 12 000075   000000 236000 xsym               LDQ     EI_KEY
        12 000076   777000 036003                    ADLQ    -512,DU
        12 000077   000000 552040 xsym               STBQ    EI_KEY,'40'O

      439     8683        /**/
      440     8684    1           FPT_OPEN_EI = FPT_OPEN_EI_SAVE;

   8684 12 000100   000000 100400                    MLR     fill='000'O
        12 000101   000000 000350 xsym               ADSC9   FPT_OPEN_EI_SAVE         cn=0,n=232
        12 000102   000000 000350 xsym               ADSC9   FPT_OPEN_EI              cn=0,n=232

      441     8685    1           CALL VPD$CHECK_VOL(IN_SN,3,,VOL,0); /* Find out what's hanging        */

   8685 12 000103   000010 236000 13                 LDQ     8
        12 000104   200022 756100                    STQ     VOL+8,,AUTO
        12 000105   200012 630500                    EPPR0   VOL,,AUTO
        12 000106   200021 450500                    STP0    VOL+7,,AUTO
        12 000107   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000110   200020 756100                    STQ     VOL+6,,AUTO
        12 000111   000012 237000 13                 LDAQ    10
        12 000112   200016 757100                    STAQ    VOL+4,,AUTO
        12 000113   200016 630500                    EPPR0   VOL+4,,AUTO
        12 000114   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000115   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000116   000000 011000                    NOP     0

      442     8686    1           FPT_OPEN_EI.V.VOL# = VOL;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:85   

   8686 12 000117   200012 236100                    LDQ     VOL,,AUTO
        12 000120   000033 736000                    QLS     27
        12 000121   000061 552040 xsym               STBQ    FPT_OPEN_EI+49,'40'O

      443     8687    1           FPT_OPEN_EI.V.ASN# = IN_ASN;

   8687 12 000122   000000 236000 xsym               LDQ     IN_ASN
        12 000123   000033 772000                    QRL     27
        12 000124   000045 552004 xsym               STBQ    FPT_OPEN_EI+37,'04'O

      444     8688    1           FPT_OPEN_EI.V.ORG# = %FREE#;

   8688 12 000125   023000 236007                    LDQ     9728,DL
        12 000126   000046 552010 xsym               STBQ    FPT_OPEN_EI+38,'10'O

      445     8689    1           FPT_OPEN_EI.V.CVOL# = %YES#;    /* Our own CVOL control               */

   8689 12 000127   000044 236000 xsym               LDQ     FPT_OPEN_EI+36
        12 000130   000014 376000 13                 ANQ     12
        12 000131   000004 276007                    ORQ     4,DL
        12 000132   000044 756000 xsym               STQ     FPT_OPEN_EI+36

      446     8690    1           FPT_OPEN_EI.V.RES# = IN_RES;

   8690 12 000133   000000 236000 xsym               LDQ     IN_RES
        12 000134   000050 756000 xsym               STQ     FPT_OPEN_EI+40

      447     8691    1           FPT_OPEN_EI.SN_ = VECTOR(IN_SN);

   8691 12 000135   000016 237000 13                 LDAQ    14
        12 000136   000002 757000 xsym               STAQ    FPT_OPEN_EI+2

      448     8692    1           FPT_READ.BUF_ = IN_BUF_VECTOR;

   8692 12 000137   000000 237000 xsym               LDAQ    IN_BUF_VECTOR
        12 000140   000004 757000 11                 STAQ    FPT_READ+4
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:86   

      449     8693    1           FPT_OPEN_EI.V.INITZ.SCRUB# = %YES#; /* Destroy any old density        */

   8693 12 000141   400000 236007                    LDQ     -131072,DL
        12 000142   000044 256000 xsym               ORSQ    FPT_OPEN_EI+36

      450     8694    1           CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR); /*  Test open to check      */

   8694 12 000143   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000144   450000 713400                    CLIMB   alt,open
        12 000145   410400 401760                    pmme    nvectors=18
        12 000146   000350 702000 12                 TSX2    MON_ERR

      451     8695    1           CALL M$CLOSE(FPT_CLSEI_FT) ALTRET(MON_ERR); /*  density dont repostn  */

   8695 12 000147   000000 630400 xsym               EPPR0   FPT_CLSEI_FT
        12 000150   450001 713400                    CLIMB   alt,close
        12 000151   406000 401760                    pmme    nvectors=13
        12 000152   000350 702000 12                 TSX2    MON_ERR

      452     8696    2           DO CASE(M$EI$->F$DCB.DENSITY);

   8696 12 000153   000000 470400 xsym               LDP0    M$EI$
        12 000154   000043 720100                    LXL0    35,,PR0
        12 000155   000777 360003                    ANX0    511,DU
        12 000156   000006 100003                    CMPX0   6,DU
        12 000157   000161 602010 12                 TNC     s:8696+6,X0
        12 000160   000206 710000 12                 TRA     s:8706
        12 000161   000206 710000 12                 TRA     s:8706
        12 000162   000206 710000 12                 TRA     s:8706
        12 000163   000167 710000 12                 TRA     s:8698
        12 000164   000173 710000 12                 TRA     s:8700
        12 000165   000177 710000 12                 TRA     s:8702
        12 000166   000203 710000 12                 TRA     s:8704

      453     8697    2            CASE(%D800#);

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:87   
      454     8698    2              SCAN_HDR.DENS = ' 800';

   8698 12 000167   040000 100400                    MLR     fill='040'O
        12 000170   000024 000004 10                 ADSC9   FPT_CVOL+8               cn=0,n=4
        12 000171   000027 000005 11                 ADSC9   SCAN_HDR+9               cn=0,n=5
        12 000172   000206 710000 12                 TRA     s:8706

      455     8699    2            CASE(%D1600#);

      456     8700    2              SCAN_HDR.DENS = '1600';

   8700 12 000173   040000 100400                    MLR     fill='040'O
        12 000174   000025 000004 10                 ADSC9   FPT_CVOL+9               cn=0,n=4
        12 000175   000027 000005 11                 ADSC9   SCAN_HDR+9               cn=0,n=5
        12 000176   000206 710000 12                 TRA     s:8706

      457     8701    2            CASE(%D6250#);

      458     8702    2              SCAN_HDR.DENS = '6250';

   8702 12 000177   040000 100400                    MLR     fill='040'O
        12 000200   000026 000004 10                 ADSC9   FPT_CVOL+10              cn=0,n=4
        12 000201   000027 000005 11                 ADSC9   SCAN_HDR+9               cn=0,n=5
        12 000202   000206 710000 12                 TRA     s:8706

      459     8703    2            CASE(%D38000#);

      460     8704    2              SCAN_HDR.DENS = '38000';

   8704 12 000203   040000 100400                    MLR     fill='040'O
        12 000204   000027 000005 10                 ADSC9   FPT_CVOL+11              cn=0,n=5
        12 000205   000027 000005 11                 ADSC9   SCAN_HDR+9               cn=0,n=5

      461     8705    2            END;                           /* END CASE                           */

      462     8706    1           SCAN_HDR.SN = M$EI$->F$DCB.PSN;

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:88   
   8706 12 000206   040000 100500                    MLR     fill='040'O
        12 000207   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
        12 000210   000016 600006 11                 ADSC9   SCAN_HDR                 cn=3,n=6

      463     8707    1           IN_BUF_VECTOR.PTR$ -> CHAR$44 = SCAN_HDR_C;

   8707 12 000211   000001 471400 xsym               LDP1    IN_BUF_VECTOR+1
        12 000212   040100 100400                    MLR     fill='040'O
        12 000213   000016 000054 11                 ADSC9   SCAN_HDR                 cn=0,n=44
        12 000214   100000 000054                    ADSC9   0,,PR1                   cn=0,n=44

      464     8708    1           CALL VPG$WRITE_OUT(44,0);

   8708 12 000215   000020 630400 13                 EPPR0   16
        12 000216   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000217   000000 701000 xent               TSX1    VPG$WRITE_OUT
        12 000220   000000 011000                    NOP     0

      465     8709    1           CALL M$OPEN (FPT_OPEN_EI) ALTRET (MON_ERR); /* HONEST OPEN            */

   8709 12 000221   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000222   450000 713400                    CLIMB   alt,open
        12 000223   410400 401760                    pmme    nvectors=18
        12 000224   000350 702000 12                 TSX2    MON_ERR

      466     8710    1           EODS = 0;

   8710 12 000225   200004 450100                    STZ     EODS,,AUTO

      467     8711    1           FILES = 0;

   8711 12 000226   200005 450100                    STZ     FILES,,AUTO

      468     8712    1           RECS = 0;

   8712 12 000227   200006 450100                    STZ     RECS,,AUTO

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:89   
      469     8713    1           REC_SIZE = 0;

   8713 12 000230   200007 450100                    STZ     REC_SIZE,,AUTO

      470     8714    2           DO WHILE(EODS<2 AND BREAKS=0);  /* SCAN until DEOD or Break           */

   8714 12 000231   000354 710000 12                 TRA     s:8766

      471     8715    2              CALL M$READ(FPT_READ) ALTRET(READ_ALT);

   8715 12 000232   000000 630400 11                 EPPR0   FPT_READ
        12 000233   440000 713400                    CLIMB   alt,read
        12 000234   401400 401760                    pmme    nvectors=4
        12 000235   000254 702000 12                 TSX2    READ_ALT

      472     8716    2              IF M$EI$->F$DCB.ARS=FPT_READ.BUF_.BOUND+1

   8716 12 000236   000000 470400 xsym               LDP0    M$EI$
        12 000237   000004 236000 11                 LDQ     FPT_READ+4
        12 000240   000020 772000                    QRL     16
        12 000241   000001 036007                    ADLQ    1,DL
        12 000242   000000 116100                    CMPQ    0,,PR0
        12 000243   000335 600000 12                 TZE     LD

      473     8717    2               THEN
      474     8718    2                 GOTO LD;
      475     8719    2               ELSE
      476     8720    3               DO;

      477     8721    3                  EODS = 0;

   8721 12 000244   200004 450100                    STZ     EODS,,AUTO

      478     8722    3                  RECS = RECS+1;

   8722 12 000245   200006 054100                    AOS     RECS,,AUTO

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:90   
      479     8723    3                  IF REC_SIZE<M$EI$->F$DCB.ARS

   8723 12 000246   200007 236100                    LDQ     REC_SIZE,,AUTO
        12 000247   000000 116100                    CMPQ    0,,PR0
        12 000250   000253 605000 12                 TPL     s:8727

      480     8724    3                   THEN
      481     8725    3                     REC_SIZE = M$EI$->F$DCB.ARS;

   8725 12 000251   000000 235100                    LDA     0,,PR0
        12 000252   200007 755100                    STA     REC_SIZE,,AUTO

      482     8726    3                  END;

      483     8727    3              DO WHILE('0'B);

   8727 12 000253   000354 710000 12                 TRA     s:8766

      484     8728    3   READ_ALT:
      485     8729    3                 IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF

   8729 12 000254   000000 470400 xsym  READ_ALT     LDP0    B$TCB$
        12 000255   000000 471500                    LDP1    0,,PR0
        12 000256   100102 236100                    LDQ     66,,PR1
        12 000257   377770 376007                    ANQ     131064,DL
        12 000260   000060 116007                    CMPQ    48,DL
        12 000261   000333 601000 12                 TNZ     s:8756

      486     8730    3                  THEN
      487     8731    4                  DO;

      488     8732    4                     EODS = EODS+1;

   8732 12 000262   200004 054100                    AOS     EODS,,AUTO

      489     8733    4                     IF EODS=1

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:91   
   8733 12 000263   200004 235100                    LDA     EODS,,AUTO
        12 000264   000001 115007                    CMPA    1,DL
        12 000265   000271 601000 12                 TNZ     s:8739

      490     8734    4                      THEN                 /* One EOD (or first of two)          */
      491     8735    5                      DO;

      492     8736    5                         CALL OUT_FILE_DATA;

   8736 12 000266   000423 701000 12                 TSX1    OUT_FILE_DATA
        12 000267   000000 011000                    NOP     0

      493     8737    5                         END;

   8737 12 000270   000354 710000 12                 TRA     s:8766

      494     8738    4                      ELSE                 /* Two or more EODs                   */
      495     8739    4                        IF M$EI$ -> F$DCB.VOL ~= IN_SN.COUNT

   8739 12 000271   000000 473400 xsym               LDP3    M$EI$
        12 000272   300043 236100                    LDQ     35,,PR3
        12 000273   000033 772000                    QRL     27
        12 000274   000000 116000 xsym               CMPQ    IN_SN
        12 000275   000324 600000 12                 TZE     s:8751

      496     8740    4                         THEN              /* VOL transition!                    */
      497     8741    5                         DO;

      498     8742    5                            RECS = OLD_RECS; /* Ignore last EOD                  */

   8742 12 000276   200010 235100                    LDA     OLD_RECS,,AUTO
        12 000277   200006 755100                    STA     RECS,,AUTO

      499     8743    5                            REC_SIZE = OLD_REC_SIZE;

   8743 12 000300   200011 235100                    LDA     OLD_REC_SIZE,,AUTO
        12 000301   200007 755100                    STA     REC_SIZE,,AUTO
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:92   

      500     8744    5                            OLD_RECS = 0;

   8744 12 000302   200010 450100                    STZ     OLD_RECS,,AUTO

      501     8745    5                            CALL M$CVOL (FPT_CVOL) ALTRET(MON_ERR);

   8745 12 000303   000014 630400 10                 EPPR0   FPT_CVOL
        12 000304   450004 713400                    CLIMB   alt,+20484
        12 000305   401000 401760                    pmme    nvectors=3
        12 000306   000350 702000 12                 TSX2    MON_ERR

      502     8746    5                            CALL VPD$CHECK_VOL(IN_SN,0,M$EI#,,0);

   8746 12 000307   000010 236000 13                 LDQ     8
        12 000310   200022 756100                    STQ     VOL+8,,AUTO
        12 000311   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000312   000022 235000 13                 LDA     18
        12 000313   200020 757100                    STAQ    VOL+6,,AUTO
        12 000314   000024 237000 13                 LDAQ    20
        12 000315   200016 757100                    STAQ    VOL+4,,AUTO
        12 000316   200016 630500                    EPPR0   VOL+4,,AUTO
        12 000317   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000320   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000321   000000 011000                    NOP     0

      503     8747    5                            EODS = 0;

   8747 12 000322   200004 450100                    STZ     EODS,,AUTO

      504     8748    5                            END;

   8748 12 000323   000354 710000 12                 TRA     s:8766

      505     8749    4                         ELSE              /* End of the tape!                   */
      506     8750    5                         DO;               /* Reposition tape to in between      */

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:93   
      507     8751    5                            FPT_PFIL.V.BOF# = %YES#; /* tape marks               */

   8751 12 000324   400000 236007                    LDQ     -131072,DL
        12 000325   000044 256000 11                 ORSQ    FPT_PFIL+2

      508     8752    5                            CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);

   8752 12 000326   000042 630400 11                 EPPR0   FPT_PFIL
        12 000327   440004 713400                    CLIMB   alt,+16388
        12 000330   400000 401760                    pmme    nvectors=1
        12 000331   000350 702000 12                 TSX2    MON_ERR

      509     8753    5                            END;

      510     8754    4                     END;

   8754 12 000332   000354 710000 12                 TRA     s:8766

      511     8755    3                  ELSE
      512     8756    3                    IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD

   8756 12 000333   000070 116007                    CMPQ    56,DL
        12 000334   000350 601000 12                 TNZ     MON_ERR

      513     8757    3                     THEN
      514     8758    4   LD:               DO;

   8758 12 000335                       LD           null
      515     8759    4                        CALL M$PRECORD(FPT_PRECORD) ALTRET(MON_ERR);

   8759 12 000335   000002 630400 10                 EPPR0   FPT_PRECORD
        12 000336   440003 713400                    CLIMB   alt,+16387
        12 000337   401000 401760                    pmme    nvectors=3
        12 000340   000350 702000 12                 TSX2    MON_ERR

      516     8760    4                        CALL VPD$ENLARGE_BUF(0); /* DOUBLE BUFFER SIZE           */

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:94   
   8760 12 000341   000010 630400 13                 EPPR0   8
        12 000342   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000343   000000 701000 xent               TSX1    VPD$ENLARGE_BUF
        12 000344   000000 011000                    NOP     0

      517     8761    4                        FPT_READ.BUF_ = IN_BUF_VECTOR;

   8761 12 000345   000000 237000 xsym               LDAQ    IN_BUF_VECTOR
        12 000346   000004 757000 11                 STAQ    FPT_READ+4

      518     8762    4                        END;

   8762 12 000347   000354 710000 12                 TRA     s:8766

      519     8763    3                     ELSE
      520     8764    3   MON_ERR:            CALL VPL$ERR_PROC(3,0); /* UNKNOWN ERROR                  */

   8764 12 000350   000026 630400 13    MON_ERR      EPPR0   22
        12 000351   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000352   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000353   000000 011000                    NOP     0

      521     8765    3                 END;                      /* END DO WHILE('0'B)                 */

      522     8766    2              END;                         /* END WHILE                          */

   8766 12 000354   200004 235100                    LDA     EODS,,AUTO
        12 000355   000002 115007                    CMPA    2,DL
        12 000356   000361 605000 12                 TPL     END_IT
        12 000357   000000 236000 xsym               LDQ     BREAKS
        12 000360   000232 600000 12                 TZE     s:8715

   8759 12 000361                       END_IT       null
   8759 12 000361                       ABORT_SCAN   null
      523     8767    1   END_IT: ;
      524     8768    1   ABORT_SCAN: ;
      525     8769    1           CALL OUT_FILE_DATA;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:95   

   8769 12 000361   000423 701000 12                 TSX1    OUT_FILE_DATA
        12 000362   000000 011000                    NOP     0

      526     8770    1           CALL VPD$MINIMIZE_BUF;

   8770 12 000363   000002 631400 xsym               EPPR1   B_VECTNIL+2
        12 000364   000000 701000 xent               TSX1    VPD$MINIMIZE_BUF
        12 000365   000000 011000                    NOP     0

      527     8771    1           CALL VPD$CHECK_VOL(IN_SN,0,M$EI#,,0); /* Check VOL transition         */

   8771 12 000366   000010 236000 13                 LDQ     8
        12 000367   200022 756100                    STQ     VOL+8,,AUTO
        12 000370   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000371   000022 235000 13                 LDA     18
        12 000372   200020 757100                    STAQ    VOL+6,,AUTO
        12 000373   000024 237000 13                 LDAQ    20
        12 000374   200016 757100                    STAQ    VOL+4,,AUTO
        12 000375   200016 630500                    EPPR0   VOL+4,,AUTO
        12 000376   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000377   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000400   000000 011000                    NOP     0

      528     8772    1           IF M$EI$->F$DCB.FCD

   8772 12 000401   000000 470400 xsym               LDP0    M$EI$
        12 000402   000031 236100                    LDQ     25,,PR0
        12 000403   020000 316007                    CANQ    8192,DL
        12 000404   000411 600000 12                 TZE     s:8775

      529     8773    1            THEN
      530     8774    1              CALL M$CLOSE(FPT_CLOSEI) ALTRET(MON_ERR);

   8774 12 000405   000046 630400 11                 EPPR0   FPT_CLOSEI
        12 000406   450001 713400                    CLIMB   alt,close
        12 000407   406000 401760                    pmme    nvectors=13
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:96   
        12 000410   000350 702000 12                 TSX2    MON_ERR

      531     8775    1           CALL VPD$CLOSE_OUT(BITBIN(ERR_FLG)); /* CLOSE w/SAVE if no errors     */

   8775 12 000411   000000 236000 xsym               LDQ     ERR_FLG
        12 000412   000043 772000                    QRL     35
        12 000413   200016 756100                    STQ     VOL+4,,AUTO
        12 000414   200016 630500                    EPPR0   VOL+4,,AUTO
        12 000415   200017 450500                    STP0    VOL+5,,AUTO
        12 000416   200017 630500                    EPPR0   VOL+5,,AUTO
        12 000417   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000420   000000 701000 xent               TSX1    VPD$CLOSE_OUT
        12 000421   000000 011000                    NOP     0

   8772 12 000422                       NEVER_START* null
      532     8776    1   NEVER_STARTED: ;
      533     8777    1           RETURN;

   8777 12 000422   000000 702200 xent               TSX2  ! X66_ARET

      534     8778        %EJECT;
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:97   
      535     8779    1   OUT_FILE_DATA: PROC;

   8779 12 000423   200014 741300       OUT_FILE_DA* STX1  ! VOL+2,,AUTO

      536     8780    2           IF OLD_RECS = 0

   8780 12 000424   200010 235100                    LDA     OLD_RECS,,AUTO
        12 000425   000464 600000 12                 TZE     OUT_DONE

      537     8781    2            THEN
      538     8782    2              GOTO OUT_DONE;
      539     8783    2           FILES = FILES +1;

   8783 12 000426   200005 054100                    AOS     FILES,,AUTO

      540     8784    2           CALL BINCHAR(DATA_REC.FILE,FILES);

   8784 12 000427   000000 301500                    BTD
        12 000430   200005 000004                    NDSC9   FILES,,AUTO              cn=0,s=lsgnf,sf=0,n=4
        12 000431   000034 230007 11                 NDSC9   DATA_REC+2               cn=1,s=nosgn,sf=0,n=7

      541     8785    2           CALL BINCHAR(DATA_REC.RECS,OLD_RECS);

   8785 12 000432   000000 301500                    BTD
        12 000433   200010 000004                    NDSC9   OLD_RECS,,AUTO           cn=0,s=lsgnf,sf=0,n=4
        12 000434   000036 230007 11                 NDSC9   DATA_REC+4               cn=1,s=nosgn,sf=0,n=7

      542     8786    2           CALL BINCHAR(DATA_REC.LONGEST,OLD_REC_SIZE);

   8786 12 000435   000000 301500                    BTD
        12 000436   200011 000004                    NDSC9   OLD_REC_SIZE,,AUTO       cn=0,s=lsgnf,sf=0,n=4
        12 000437   000040 230007 11                 NDSC9   DATA_REC+6               cn=1,s=nosgn,sf=0,n=7

      543     8787    2           CALL EDITCHAR(DATA_REC.RECS,

   8787 12 000440   000000 024400                    MVNE
        12 000441   000036 230007 11                 NDSC9   DATA_REC+4               cn=1,s=nosgn,sf=0,n=7
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:98   
        12 000442   000000 000002 10                 ADSC9   MOP_7_DIGITS             cn=0,n=2
        12 000443   000036 200007 11                 ADSC9   DATA_REC+4               cn=1,n=7

      544     8788    2             0,
      545     8789    2             7,
      546     8790    2             MOP_7_DIGITS,
      547     8791    2             DATA_REC.RECS);
      548     8792    2           CALL EDITCHAR(DATA_REC.FILE,

   8792 12 000444   000000 024400                    MVNE
        12 000445   000034 230007 11                 NDSC9   DATA_REC+2               cn=1,s=nosgn,sf=0,n=7
        12 000446   000000 000002 10                 ADSC9   MOP_7_DIGITS             cn=0,n=2
        12 000447   000034 200007 11                 ADSC9   DATA_REC+2               cn=1,n=7

      549     8793    2             0,
      550     8794    2             7,
      551     8795    2             MOP_7_DIGITS,
      552     8796    2             DATA_REC.FILE);
      553     8797    2           CALL EDITCHAR(DATA_REC.LONGEST,

   8797 12 000450   000000 024400                    MVNE
        12 000451   000040 230007 11                 NDSC9   DATA_REC+6               cn=1,s=nosgn,sf=0,n=7
        12 000452   000000 000002 10                 ADSC9   MOP_7_DIGITS             cn=0,n=2
        12 000453   000040 200007 11                 ADSC9   DATA_REC+6               cn=1,n=7

      554     8798    2             0,
      555     8799    2             7,
      556     8800    2             MOP_7_DIGITS,
      557     8801    2             DATA_REC.LONGEST);
      558     8802    2           IN_BUF_VECTOR.PTR$ -> CHAR$32 = DATA_REC_C;

   8802 12 000454   000001 470400 xsym               LDP0    IN_BUF_VECTOR+1
        12 000455   040100 100400                    MLR     fill='040'O
        12 000456   000032 000040 11                 ADSC9   DATA_REC                 cn=0,n=32
        12 000457   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32

      559     8803    2           CALL VPG$WRITE_OUT(32,0);
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:99   

   8803 12 000460   000031 630400 13                 EPPR0   25
        12 000461   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000462   000000 701000 xent               TSX1    VPG$WRITE_OUT
        12 000463   000000 011000                    NOP     0

   8802 12 000464                       OUT_DONE     null
      560     8804    2   OUT_DONE: ;
      561     8805    2           OLD_RECS = RECS;

   8805 12 000464   200006 235100                    LDA     RECS,,AUTO
        12 000465   200010 755100                    STA     OLD_RECS,,AUTO

      562     8806    2           OLD_REC_SIZE = REC_SIZE;

   8806 12 000466   200007 236100                    LDQ     REC_SIZE,,AUTO
        12 000467   200011 756100                    STQ     OLD_REC_SIZE,,AUTO

      563     8807    2           RECS = 0;

   8807 12 000470   200006 450100                    STZ     RECS,,AUTO

      564     8808    2           REC_SIZE = 0;

   8808 12 000471   200007 450100                    STZ     REC_SIZE,,AUTO

      565     8809    2           RETURN;

   8809 12 000472   200014 221300                    LDX1  ! VOL+2,,AUTO
        12 000473   000001 702211                    TSX2  ! 1,X1
      566     8810    2   END OUT_FILE_DATA;
      567     8811    1   END VPJ$SCAN;
      568     8812        %EOD;

PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:100  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$SCAN.
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:101  

 **** Variables and constants ****

  ****  Section 010 RoData VPJ$SCAN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(288)   r     1 FPT_CVOL                   2-0-0/d STRC(360)   r     1 FPT_PRECORD
     0-0-0/b BIT (9)     r     1 MOP_7_DIGITS(0:1)

  ****  Section 011  Data  VPJ$SCAN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    32-0-0/c STRC(288)   r     1 DATA_REC                  32-0-0/c CHAR(32)    r     1 DATA_REC_C
    46-0-0/d STRC(1080)  r     1 FPT_CLOSEI                42-0-0/d STRC(144)   r     1 FPT_PFIL
     0-0-0/d STRC(504)   r     1 FPT_READ                  16-0-0/c STRC(405)   r     1 SCAN_HDR
    16-0-0/c CHAR(45)    r     1 SCAN_HDR_C

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w SBIN        r     1 EODS                       5-0-0/w SBIN        r     1 FILES
    10-0-0/w SBIN        r     1 OLD_RECS                  11-0-0/w SBIN        r     1 OLD_REC_SIZE
     3-0-0/w PTR         r     1 OUTSPEC$                   6-0-0/w SBIN        r     1 RECS
     7-0-0/w SBIN        r     1 REC_SIZE                  12-0-0/w SBIN        r     1 VOL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 ABORT_CMD                  0-0-0/d REMB        r     1 ABORT_STEP
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w SBIN        r     1 BREAKS
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:102  
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/c STRC(4608)  r     1 EI_KEY                     0-0-0/w BIT         r     1 ERR_FLG
     0-0-0/d STRC(1080)  r     1 FPT_CLSEI_FT               0-0-0/d STRC(864)   r     1 FPT_FID_IN
     0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI                0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI_SAVE
     0-0-0/d STRC(5868)  r     1 ICB                        0-0-0/b UBIN(9)     r     1 IN_ASN
     0-0-0/d STRC(72)    r     1 IN_BUF_VECTOR              0-0-0/c CHAR(4)     r     1 IN_RES
     0-0-0/w STRC(1116)  r     1 IN_SN                      0-0-0/w SBIN        r     1 M$EI#
     0-0-0/w PTR         r     1 M$EI$                      0-0-0/w STRC(504)   r     1 PCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c CHAR(32)    r     1 CHAR$32                    0-0-0/c CHAR(44)    r     1 CHAR$44
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$EI
     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure VPJ$SCAN requires 316 words for executable code.
   Procedure VPJ$SCAN requires 20 words of local(AUTO) storage.
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:103  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:104  
          MINI XREF LISTING

ABORT_CMD
      5186**DCL      8659<<REMEMBR  8679<<REMEMBR
ABORT_SCAN
      8759**LABEL    8679--REMEMBR  8680--REMEMBR
ABORT_STEP
      5185**DCL      8660<<REMEMBR  8680<<REMEMBR
B$ALT.CODE
      8187**DCL      8187--REDEF    8188--REDEF    8188--REDEF
B$ALT.ERR.CODE
      8189**DCL      8729>>IF       8756>>IF
B$ALT.ERR.ERR#
      8189**DCL      8189--REDEF
B$ALT.EVID
      8188**DCL      8188--REDEF    8188--REDEF
B$TCB.ALT$
      8183**DCL      8729>>IF       8756>>IF
B$TCB$
      5986**DCL      8729>>IF       8756>>IF
BREAKS
      5221**DCL      8714>>DOWHILE
BREAK_LOC
      5221**DCL      5221--REDEF
CHAR$32
      8181**DCL      8802<<ASSIGN
CHAR$44
      8180**DCL      8707<<ASSIGN
DATA_REC
      8376**DCL      8383--REDEF
DATA_REC.FILE
      8378**DCL      8784<<CALLBLT  8792<<CALLBLT  8792>>CALLBLT
DATA_REC.LONGEST
      8382**DCL      8786<<CALLBLT  8797<<CALLBLT  8797>>CALLBLT
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:105  
DATA_REC.RECS
      8380**DCL      8785<<CALLBLT  8787<<CALLBLT  8787>>CALLBLT
DATA_REC_C
      8383**DCL      8802>>ASSIGN
DEF_ICB.FID.STRING
      5819**DCL      5820--REDEF
DEV_ICB.FID.STRING
      5705**DCL      5706--REDEF
EI_KEY.KEY
      5917**DCL      5917--REDEF    5917--REDEF    5917--REDEF
EI_KEY.LEN
      5917**DCL      8681<<ASSIGN   8682<<ASSIGN   8682>>ASSIGN
EODS
      8359**DCL      8710<<ASSIGN   8714>>DOWHILE  8721<<ASSIGN   8732<<ASSIGN   8732>>ASSIGN   8733>>IF
      8747<<ASSIGN
EO_OCB.TYPE
      5417**DCL      5418--REDEF
ERR_FLG
      5184**DCL      8775<>CALL
F$DCB.ACTPOS
      7027**DCL      7027--REDEF
F$DCB.ARS
      7002**DCL      7002--REDEF    8716>>IF       8723>>IF       8725>>ASSIGN
F$DCB.ATTR
      7020**DCL      7021--REDEF
F$DCB.BORROW
      7035**DCL      7035--REDEF    7035--REDEF    7035--REDEF
F$DCB.DCBNAME.L
      7049**DCL      7049--IMP-SIZ
F$DCB.DENSITY
      7022**DCL      8696>>DOCASE
F$DCB.EOMCHAR
      7006**DCL      7006--REDEF
F$DCB.FCD
      7015**DCL      8772>>IF
F$DCB.FLDID
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:106  
      7030**DCL      7030--REDEF
F$DCB.FORM$
      7024**DCL      7024--REDEF
F$DCB.FSECT
      7040**DCL      7040--REDEF
F$DCB.FSN
      7017**DCL      7017--REDEF    7017--REDEF    7018--REDEF
F$DCB.HEADER$
      7023**DCL      7023--REDEF
F$DCB.IXTNSIZE
      7021**DCL      7021--REDEF
F$DCB.LASTSTA$
      7011**DCL      7011--REDEF
F$DCB.LVL
      7036**DCL      7036--REDEF
F$DCB.NAME.C
      7011**DCL      7011--REDEF
F$DCB.NOEOF
      7032**DCL      7032--REDEF
F$DCB.NRECS
      7022**DCL      7022--REDEF
F$DCB.NRECX
      7041**DCL      7041--REDEF
F$DCB.OHDR
      7033**DCL      7033--REDEF
F$DCB.ORG
      7016**DCL      7016--REDEF
F$DCB.PRECNO
      7039**DCL      7039--REDEF
F$DCB.PSN
      7012**DCL      8706>>ASSIGN
F$DCB.RCSZ
      7044**DCL      7044--REDEF
F$DCB.RES
      7012**DCL      7012--REDEF
F$DCB.SETX
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:107  
      7024**DCL      7024--REDEF
F$DCB.TAB$
      7023**DCL      7024--REDEF
F$DCB.TDA
      7038**DCL      7038--REDEF
F$DCB.VOL
      7022**DCL      8739>>IF
F$DCB.WSN
      7013**DCL      7013--REDEF
FILES
      8360**DCL      8711<<ASSIGN   8783<<ASSIGN   8783>>ASSIGN   8784>>CALLBLT
FPT_CLOSEI
      8427**DCL      8774<>CALL
FPT_CLOSEI.SN_
      8427**DCL      8427--REDEF
FPT_CLOSEI.UTL_
      8428**DCL      8428--REDEF
FPT_CLOSEI.V
      8432**DCL      8427--DCLINIT
FPT_CLOSEI.V.EXPIRE#
      8442**DCL      8442--REDEF
FPT_CLOSEI.V.TYPE#
      8440**DCL      8440--REDEF
FPT_CLOSEI.V.XTNSIZE#
      8437**DCL      8437--REDEF    8439--REDEF
FPT_CLOSE_EI.SN_
      6758**DCL      6758--REDEF
FPT_CLOSE_EI.UTL_
      6759**DCL      6759--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6773**DCL      6773--REDEF
FPT_CLOSE_EI.V.TYPE#
      6771**DCL      6771--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6768**DCL      6768--REDEF    6770--REDEF
FPT_CLOSE_PTL.SN_
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:108  
      6884**DCL      6884--REDEF
FPT_CLOSE_PTL.UTL_
      6885**DCL      6885--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6899**DCL      6899--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6897**DCL      6897--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6894**DCL      6894--REDEF    6896--REDEF
FPT_CLOSE_READ.SN_
      6800**DCL      6800--REDEF
FPT_CLOSE_READ.UTL_
      6801**DCL      6801--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6815**DCL      6815--REDEF
FPT_CLOSE_READ.V.TYPE#
      6813**DCL      6813--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6810**DCL      6810--REDEF    6812--REDEF
FPT_CLOSE_SI.SN_
      6968**DCL      6968--REDEF
FPT_CLOSE_SI.UTL_
      6969**DCL      6969--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6983**DCL      6983--REDEF
FPT_CLOSE_SI.V.TYPE#
      6981**DCL      6981--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6978**DCL      6978--REDEF    6980--REDEF
FPT_CLOSE_STD.SN_
      6926**DCL      6926--REDEF
FPT_CLOSE_STD.UTL_
      6927**DCL      6927--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6941**DCL      6941--REDEF
FPT_CLOSE_STD.V.TYPE#
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:109  
      6939**DCL      6939--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6936**DCL      6936--REDEF    6938--REDEF
FPT_CLSEI_FT
      6842**DCL      8695<>CALL
FPT_CLSEI_FT.SN_
      6842**DCL      6842--REDEF
FPT_CLSEI_FT.UTL_
      6843**DCL      6843--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6857**DCL      6857--REDEF
FPT_CLSEI_FT.V.TYPE#
      6855**DCL      6855--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6852**DCL      6852--REDEF    6854--REDEF
FPT_CVOL
      8312**DCL      8745<>CALL
FPT_CVOL.V
      8313**DCL      8312--DCLINIT
FPT_FID_IN
      6000**DCL      8663<>CALL
FPT_FID_IN.TEXTFID_
      6000**DCL      8662<<ASSIGN
FPT_OPEN_EI
      6411**DCL      8684<<ASSIGN   8694<>CALL     8709<>CALL
FPT_OPEN_EI.ACSVEH_
      6413**DCL      6414--REDEF
FPT_OPEN_EI.ALTKEYS_
      6419**DCL      6420--REDEF    6420--REDEF
FPT_OPEN_EI.HDR_
      6418**DCL      6419--REDEF
FPT_OPEN_EI.SN_
      6411**DCL      8691<<ASSIGN
FPT_OPEN_EI.TAB_
      6417**DCL      6418--REDEF
FPT_OPEN_EI.UHL_
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:110  
      6411**DCL      6412--REDEF    6412--REDEF
FPT_OPEN_EI.V.ASN#
      6430**DCL      8687<<ASSIGN
FPT_OPEN_EI.V.CVOL#
      6425**DCL      8689<<ASSIGN
FPT_OPEN_EI.V.FSN#
      6451**DCL      6451--REDEF    6451--REDEF
FPT_OPEN_EI.V.INITZ.SCRUB#
      6421**DCL      8693<<ASSIGN
FPT_OPEN_EI.V.ORG#
      6431**DCL      8688<<ASSIGN
FPT_OPEN_EI.V.RES#
      6435**DCL      8690<<ASSIGN
FPT_OPEN_EI.V.VOL#
      6445**DCL      8686<<ASSIGN
FPT_OPEN_EI.WSN_
      6417**DCL      6417--REDEF
FPT_OPEN_EI_SAVE
      6520**DCL      8684>>ASSIGN
FPT_OPEN_EI_SAVE.ACSVEH_
      6522**DCL      6523--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6528**DCL      6529--REDEF    6529--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6527**DCL      6528--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6526**DCL      6527--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6520**DCL      6521--REDEF    6521--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6560**DCL      6560--REDEF    6560--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6526**DCL      6526--REDEF
FPT_OPEN_OUT.ACSVEH_
      6304**DCL      6305--REDEF
FPT_OPEN_OUT.ALTKEYS_
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:111  
      6310**DCL      6311--REDEF    6311--REDEF
FPT_OPEN_OUT.HDR_
      6309**DCL      6310--REDEF
FPT_OPEN_OUT.TAB_
      6308**DCL      6309--REDEF
FPT_OPEN_OUT.UHL_
      6302**DCL      6303--REDEF    6303--REDEF
FPT_OPEN_OUT.V.FSN#
      6342**DCL      6342--REDEF    6342--REDEF
FPT_OPEN_OUT.WSN_
      6308**DCL      6308--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6195**DCL      6196--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6201**DCL      6202--REDEF    6202--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6200**DCL      6201--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6199**DCL      6200--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6193**DCL      6194--REDEF    6194--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6233**DCL      6233--REDEF    6233--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6199**DCL      6199--REDEF
FPT_PFIL
      8397**DCL      8752<>CALL
FPT_PFIL.V
      8397**DCL      8397--DCLINIT
FPT_PFIL.V.BOF#
      8398**DCL      8751<<ASSIGN
FPT_PRECORD
      8291**DCL      8759<>CALL
FPT_PRECORD.V
      8293**DCL      8291--DCLINIT
FPT_READ
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:112  
      8337**DCL      8715<>CALL
FPT_READ.BUF_
      8339**DCL      8692<<ASSIGN   8761<<ASSIGN
FPT_READ.BUF_.BOUND
      8339**DCL      8716>>IF
FPT_READ.STATION_
      8340**DCL      8341--REDEF
FPT_READ.V
      8341**DCL      8337--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      8352**DCL      8352--REDEF
FPT_READ.V.INDX#
      8350**DCL      8350--REDEF
FPT_READ_STD.STATION_
      6623**DCL      6624--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6635**DCL      6635--REDEF
FPT_READ_STD.V.INDX#
      6633**DCL      6633--REDEF
FPT_READ_UC.STATION_
      6584**DCL      6585--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6596**DCL      6596--REDEF
FPT_READ_UC.V.INDX#
      6594**DCL      6594--REDEF
FPT_WRITE_ME.STATION_
      6692**DCL      6692--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6699**DCL      6699--REDEF
FPT_WRITE_OUT.STATION_
      6723**DCL      6723--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6730**DCL      6730--REDEF
FPT_WRITE_UC.STATION_
      6661**DCL      6661--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:113  
      6668**DCL      6668--REDEF
FROM_SN.SN
      5567**DCL      5568--REDEF
GETCMD.OUT$
      4774**DCL      4780--REDEF
ICB
      5572**DCL      8664<>CALL
ICB.DEV_MASK
      5641**DCL      8665>>IF
ICB.FID.STRING
      5591**DCL      5592--REDEF
IFSFA_PARAM.EOMCHAR#
      5946**DCL      5947--REDEF
IFSFA_PARAM.SIG1
      5940**DCL      5940--REDEF
IFSFA_PARAM.SIG2
      5940**DCL      5941--REDEF
IN_ASN
      5550**DCL      8687>>ASSIGN
IN_BUF_VECTOR
      5915**DCL      8692>>ASSIGN   8761>>ASSIGN
IN_BUF_VECTOR.PTR$
      5916**DCL      8707>>ASSIGN   8802>>ASSIGN
IN_RES
      5513**DCL      5513--REDEF    8690>>ASSIGN
IN_SN
      5524**DCL      8685<>CALL     8691--ASSIGN   8746<>CALL     8771<>CALL
IN_SN.COUNT
      5528**DCL      8739>>IF
IN_SN.SN
      5529**DCL      5530--REDEF
LD
      8758**LABEL    8718--GOTO
M$CLOSE
        31**DCL-ENT  8695--CALL     8774--CALL
M$CVOL
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:114  
        34**DCL-ENT  8745--CALL
M$EI#
      5982**DCL      8746<>CALL     8771<>CALL
M$EI$
      5982**DCL      8696>>DOCASE   8706>>ASSIGN   8716>>IF       8723>>IF       8725>>ASSIGN   8739>>IF
      8772>>IF
M$OPEN
        31**DCL-ENT  8694--CALL     8709--CALL
M$PFIL
        33**DCL-ENT  8752--CALL
M$PRECORD
        35**DCL-ENT  8759--CALL
M$READ
        32**DCL-ENT  8715--CALL
MON_ERR
      8764**LABEL    8694--CALLALT  8695--CALLALT  8709--CALLALT  8745--CALLALT  8752--CALLALT  8759--CALLALT
      8774--CALLALT
MOP_7_DIGITS
      8279**DCL      8787>>CALLBLT  8792>>CALLBLT  8797>>CALLBLT
NEVER_STARTED
      8772**LABEL    8659--REMEMBR  8660--REMEMBR
OCB.TYPE
      5275**DCL      5276--REDEF
OFSFA_PARAM.EOMCHAR#
      5976**DCL      5977--REDEF
OFSFA_PARAM.SIG1
      5970**DCL      5970--REDEF
OFSFA_PARAM.SIG2
      5970**DCL      5971--REDEF
OLD_RECS
      8363**DCL      8658<<ASSIGN   8742>>ASSIGN   8744<<ASSIGN   8780>>IF       8785>>CALLBLT  8805<<ASSIGN
OLD_REC_SIZE
      8364**DCL      8743>>ASSIGN   8786>>CALLBLT  8806<<ASSIGN
OUT$BLK.NSUBLKS
      8211**DCL      8672>>IF
OUT$BLK.SUBLK$
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:115  
      8232**DCL      8662>>ASSIGN   8662>>ASSIGN   8674>>ASSIGN
OUT$SYM.COUNT
      8268**DCL      8271--IMP-SIZ  8662>>ASSIGN
OUT$SYM.TEXT
      8271**DCL      8662--ASSIGN
OUTSPEC$
      8319**DCL      8674<<ASSIGN   8676<<ASSIGN   8677<>CALL
OUT_DONE IN PROCEDURE OUT_FILE_DATA
      8802**LABEL    8782--GOTO
OUT_FILE_DATA
      8779**PROC     8736--CALL     8769--CALL
OUT_SN.SN
      5547**DCL      5548--REDEF
PCB.OUT$
      4588**DCL      8662>>ASSIGN   8662>>ASSIGN   8672>>IF       8674>>ASSIGN
READ_ALT
      8729**LABEL    8715--CALLALT
RECS
      8361**DCL      8712<<ASSIGN   8722<<ASSIGN   8722>>ASSIGN   8742<<ASSIGN   8805>>ASSIGN   8807<<ASSIGN
REC_SIZE
      8362**DCL      8713<<ASSIGN   8723>>IF       8725<<ASSIGN   8743<<ASSIGN   8806>>ASSIGN   8808<<ASSIGN
SCAN_HDR
      8369**DCL      8375--REDEF
SCAN_HDR.DENS
      8373**DCL      8698<<ASSIGN   8700<<ASSIGN   8702<<ASSIGN   8704<<ASSIGN
SCAN_HDR.SN
      8371**DCL      8706<<ASSIGN
SCAN_HDR_C
      8375**DCL      8707>>ASSIGN
SPEC_BUF
      5225**DCL      5225--REDEF
VOL
      8365**DCL      8685<>CALL     8686>>ASSIGN
VPC$SETOUT
      8459**DCL-ENT  8677--CALL
VPD$CHECK_VOL
PL6.E3A0      #002=VPJ$SCAN File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:49 Page:116  
      8471**DCL-ENT  8685--CALL     8746--CALL     8771--CALL
VPD$CLOSE_OUT
      8474**DCL-ENT  8775--CALL
VPD$ENLARGE_BUF
      8484**DCL-ENT  8760--CALL
VPD$FID
      8489**DCL-ENT  8663--CALL
VPD$GET_IN_DEV_MASK
      8503**DCL-ENT  8664--CALL
VPD$MINIMIZE_BUF
      8486**DCL-ENT  8770--CALL
VPG$SET_UP_WRITE
      8572**DCL-ENT  8678--CALL
VPG$WRITE_OUT
      8575**DCL-ENT  8708--CALL     8803--CALL
VPL$ERR_PROC
      8631**DCL-ENT  8667--CALL     8764--CALL

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:117  
      569        1        /*T***********************************************************/
      570        2        /*T*                                                         */
      571        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      572        4        /*T*                                                         */
      573        5        /*T***********************************************************/
      574        6        VPJ$SPE: PROC;
      575        7        /*D* NAME: VPJ$SPE
      576        8             CALL: CALL VPJ$SPE;
      577        9           DESCRIPTION: VPJ$SPE (which also has as entry points VPJ$SPF and VPJ$SPR) is used
      578       10                          for tape positioning. VPJ$SPE spaces to the end of a labeled
      579       11                          tape or between the next set of consecutive file marks
      580       12                          on free tape. VPJ$SPF spaces forward or backward n files
      581       13                          starting at either the current tape position on free tape
      582       14                          or labeled tape if a filename was not specified; or starting
      583       15                          at the specified file on labeled tape. n defaults to 0.
      584       16                          VPJ$SPR spaces forward n records within
      585       17                          the current file only. If n causes a tape mark to be
      586       18                          encountered, an error will result and the tape will be
      587       19                          repositioned inside that tape mark.
      588       20                          VPJ$SPR is valid for device tape only.
      589       21        */
      590       22        /**/
      591       23        /*  INCLUDE FILES  */
      592       24        /**/
      593       25        %INCLUDE VP_DATA_R;
      594     7012        %INCLUDE F$DCB;
      595     7061        %INCLUDE B_ERRORS_C;
      596     8188        /**/
      597     8189        /*  BASED DATA  */
      598     8190        /**/
      599     8191        %B$TCB;
      600     8194        %B$ALT;
      601     8202        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      602     8247        %PARSE$SYM(NAME = OUT$SYM,STCLASS = BASED);
      603     8285        /**/
      604     8286        /*  LOCAL AUTO  */
      605     8287        /**/
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:118  
      606     8288    1   DCL NUM SBIN WORD;
      607     8289    1   DCL FSN SBIN WORD;
      608     8290    1   DCL I SBIN;
      609     8291    1   DCL KEEP_GOING BIT(1) ALIGNED;
      610     8292        /**/
      611     8293        /*  CONSTANTS  */
      612     8294        /**/
      613     8295        %FPT_READ(FPTN = FPT_READ,DCB = M$EI,BUF = READ_BUF,STCLASS = CONSTANT);
      614     8334        /**/
      615     8335        /*  LOCAL STATIC  */
      616     8336        /**/
      617     8337    1   DCL READ_BUF CHAR(80) STATIC;
      618     8338        %FPT_PFIL(FPTN = FPT_PFIL,DCB = M$EI,STCLASS = STATIC);
      619     8353        %FPT_PRECORD(FPTN = FPT_PRECORD,DCB = M$EI,STCLASS = STATIC);
      620     8374        %FPT_CLOSE(FPTN = FPT_CLOSEI,
      621     8375                   DCB  = M$EI,
      622     8376                   NOMARKS = YES,
      623     8377                   STCLASS = STATIC);
      624     8419        /**/
      625     8420        /*  ENTRY DCLS  */
      626     8421        /**/
      627     8422        %VP_ENTRIES (OMIT=VPJ$SPE);
      628     8630        /**/
      629     8631        /**/
      630     8632    1   VPJ$SPF: ENTRY;
      631     8633    1   VPJ$SPR: ENTRY;
      632     8634    1           REMEMBER NEVER_STARTED IN ABORT_CMD;
      633     8635    1           REMEMBER NEVER_STARTED IN ABORT_STEP;
      634     8636    1           FPT_CLOSEI.V.POS# = 0;          /* DON'T REPOSITION ON CLOSE          */
      635     8637    1           FPT_FID_IN.TEXTFID_   = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->
      636     8638    1             OUT$SYM.TEXT);
      637     8639    1           CALL VPD$FID(FPT_FID_IN);
      638     8640    1           CALL VPD$GET_IN_DEV_MASK(ICB);
      639     8641    1           IF CMD_MASK(15) AND NOT (ICB.DEV_MASK.DEV_TAPE)
      640     8642    1            THEN
      641     8643    1              CALL VPL$ERR_PROC(3,50,'12'O);
      642     8644        /*E* ERROR:   VPJ-00050
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:119  
      643     8645             MESSAGE: SPR legal for device tape only
      644     8646        */
      645     8647    1            ELSE
      646     8648    1              IF NOT (ICB.DEV_MASK & '140'O)
      647     8649    1               THEN
      648     8650    1                 CALL VPL$ERR_PROC(3,60,'12'O);
      649     8651        /*E* ERROR:   VPJ-00060
      650     8652             MESSAGE: SPE and SPF valid for labeled or device tape only
      651     8653        */
      652     8654    1           FPT_OPEN_EI = FPT_OPEN_EI_SAVE;
      653     8655    1           FPT_OPEN_EI.V.INITZ.SCRUB# = %YES#;
      654     8656    1           FPT_OPEN_EI.V.ASN# = IN_ASN;
      655     8657    1           FPT_OPEN_EI.V.ORG# = %FREE#;
      656     8658    1           FPT_OPEN_EI.V.CVOL# = %YES#;    /*   Notify if END-OF-FILE            */
      657     8659    1           FPT_OPEN_EI.V.FINDPOS# = %YES#;
      658     8660    1           FPT_OPEN_EI.V.RES# = IN_RES;
      659     8661    1           IF RESULTS_FID_IN.NAME AND IN_NAME.LEN>0
      660     8662    1            THEN
      661     8663    1              FPT_OPEN_EI.NAME_ = VECTOR(IN_NAME);
      662     8664    1           IF RESULTS_FID_IN.ACCT
      663     8665    1            THEN
      664     8666    1              FPT_OPEN_EI.ACCT_ = VECTOR(IN_ACCT);
      665     8667    1           IF RESULTS_FID_IN.PASS
      666     8668    1            THEN
      667     8669    1              FPT_OPEN_EI.PASS_ = VECTOR(IN_PASS);
      668     8670    1           IF RESULTS_FID_IN.SN
      669     8671    1            THEN
      670     8672    1              FPT_OPEN_EI.SN_ = VECTOR(IN_SN);
      671     8673    1           IF RESULTS_FID_IN.WSN
      672     8674    1            THEN
      673     8675    1              FPT_OPEN_EI.WSN_ = VECTOR(IN_WSN);
      674     8676    1           REMEMBER SP_ABORT IN ABORT_CMD;
      675     8677    1           REMEMBER SP_ABORT IN ABORT_STEP;
      676     8678    1           CALL VPD$CHECK_VOL(IN_SN,3,,I,0); /* Get last VOL                     */
      677     8679    1           FPT_OPEN_EI.V.VOL# = I;
      678     8680    1           IF CMD_MASK(16)                 /* VPJ$SPE                            */
      679     8681    1            THEN
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:120  
      680     8682    1              IF ICB.DEV_MASK.MAN_TAPE     /* MANAGED TAPE                       */
      681     8683    1               THEN
      682     8684    2               DO;
      683     8685    2                  FPT_OPEN_EI.NAME_ = VECTOR(NIL);
      684     8686    2                  FPT_OPEN_EI.V.FSN# = 9999;
      685     8687    2                  CALL M$OPEN(FPT_OPEN_EI) ALTRET(LT_OPEN_SPE_ALT);
      686     8688    2                  CALL VPL$ERR_PROC(3,70,'12'O);
      687     8689        /*E* ERROR:   VPJ-00070
      688     8690             MESSAGE: Didn't find end of LT...positioned at start of FSN 9999.
      689     8691        */
      690     8692    3                  DO WHILE('0'B);
      691     8693    3   LT_OPEN_SPE_ALT:
      692     8694    3                     IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE~=%E$EOSET
      693     8695    3                      THEN
      694     8696    3                        GOTO MON_ERR;
      695     8697    3                     END;
      696     8698    2                  END;
      697     8699    1               ELSE                        /*   FREE TAPE                        */
      698     8700    2               DO;
      699     8701    2                  CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);
      700     8702    2                  FPT_PFIL.V.BOF# = %NO#;
      701     8703    2                  KEEP_GOING = %YES#;
      702     8704    3                  DO WHILE(KEEP_GOING);
      703     8705    3                     CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR); /*  check for two    */
      704     8706    3                     CALL M$READ(FPT_READ) ALTRET(READ_ALT); /*  tape marks      */
      705     8707    4                     DO WHILE('0'B);
      706     8708    4   READ_ALT:            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
      707     8709    4                         THEN
      708     8710    5                         DO;
      709     8711    5                            FPT_PFIL.V.BOF# = %YES#;
      710     8712    5                            CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      711     8713    5                            KEEP_GOING = %NO#;
      712     8714    5                            END;
      713     8715    4                         ELSE
      714     8716    4                           IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE~=%E$LD
      715     8717    4                            THEN
      716     8718    4                              GOTO MON_ERR;
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:121  
      717     8719    4                        END;
      718     8720    3                     END;
      719     8721    2                  END;
      720     8722    1            ELSE
      721     8723    2            DO;                            /* SPF AND SPR                        */
      722     8724    2               IF PCB.OUT$->OUT$BLK.NSUBLKS=2
      723     8725    2                THEN
      724     8726    3                DO;
      725     8727    3                   CALL VPD$TEXTC_CHARBIN(NUM,
      726     8728    3                     PCB.OUT$->OUT$BLK.SUBLK$(1)->
      727     8729    3                     OUT$SYM.TEXTC$,
      728     8730    3                     BITBIN('377777777777'O))
      729     8731    4                    WHENALTRETURN DO;
      730     8732    4                       CALL VPL$ERR_PROC(3,100,'12'O);
      731     8733        /*E* ERROR:   VPJ-00100
      732     8734             MESSAGE: Number too large
      733     8735        */
      734     8736    4                       END;
      735     8737    3                   IF PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.CODE=101
      736     8738    3                    THEN
      737     8739    3                      NUM = -NUM;
      738     8740    3                   END;                    /*   END  ALTRETURN                   */
      739     8741    2                ELSE
      740     8742    2                  IF CMD_MASK(15)          /* SPR                                */
      741     8743    2                   THEN
      742     8744    2                     NUM = 1;
      743     8745    2                   ELSE
      744     8746    2                     NUM = 0;
      745     8747    2               IF CMD_MASK(15)             /* VPJ$SPR                            */
      746     8748    2                THEN
      747     8749    3                DO;
      748     8750    3                   CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);
      749     8751    3                   FPT_PRECORD.V.N# = NUM;
      750     8752    3                   CALL M$PRECORD(FPT_PRECORD)
      751     8753    4                    WHENALTRETURN DO;
      752     8754    4                       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
      753     8755    4                        THEN
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:122  
      754     8756    5                        DO;
      755     8757    5                           FPT_PRECORD.V.N# = -1;
      756     8758    5                           CALL M$PRECORD(FPT_PRECORD) ALTRET(EXPECTED_ALT_2);
      757     8759    5   EXPECTED_ALT_2:
      758     8760    5                           CALL VPL$ERR_PROC(3,90,'12'O);
      759     8761        /*E* ERROR:   VPJ-00090
      760     8762             MESSAGE: Too many records---positioned at EOF
      761     8763        */
      762     8764    5                           END;
      763     8765    4                        ELSE
      764     8766    4                          GOTO MON_ERR;
      765     8767    4                       END;                /*  END ALTRETURN                     */
      766     8768    3                   END;
      767     8769    2                ELSE
      768     8770    3                DO;                        /* MUST BE VPJ$SPF                    */
      769     8771    3                   IF ICB.DEV_MASK.MAN_TAPE /* IF LABELED TAPE                   */
      770     8772    3                    THEN
      771     8773    4                    DO;
      772     8774    4                       FPT_CLOSEI.V.POS#    = %PTL#;
      773     8775    4                       IF FPT_OPEN_EI.NAME_=VECTOR(NIL)
      774     8776    4                        THEN
      775     8777    4                          FPT_OPEN_EI.V.OPER.NXTF# = %YES#;
      776     8778    4                       CALL M$OPEN(FPT_OPEN_EI)
      777     8779    5                        WHENRETURN DO;
      778     8780    5                           IF M$EI$ -> F$DCB.FCD
      779     8781    5                            THEN           /* File is OPEN                       */
      780     8782    5                              CALL M$CLOSE(FPT_CLOSEI) ALTRET(MON_ERR);
      781     8783    5                           FSN = M$EI$ -> F$DCB.FSN;
      782     8784    5                           END;            /*  END  normal RETURN                */
      783     8785    5                        WHENALTRETURN DO;
      784     8786    5                           IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= %E$EOSET
      785     8787    5                            THEN
      786     8788    5                              GOTO MON_ERR;
      787     8789    5                           FSN = M$EI$ -> F$DCB.FSN +1; /* Make FSN of next file */
      788     8790    5                           END;            /*   END   ALTRETURN                  */
      789     8791    4                       IF NUM~=0
      790     8792    4                        THEN               /* There is movement to do            */
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:123  
      791     8793    5                        DO;
      792     8794    5                           FPT_OPEN_EI.V.OPER.NXTF# = %NO#;
      793     8795    5                           FPT_OPEN_EI.NAME_ = VECTOR(NIL);
      794     8796    5                           FPT_OPEN_EI.V.FSN# = FSN + NUM;
      795     8797    5                           CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);
      796     8798    5                           END;
      797     8799    4                       END;
      798     8800    3                    ELSE                   /* NOT a labled tape                  */
      799     8801    4                    DO;
      800     8802    4                       CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);
      801     8803    4                       IF NUM<0
      802     8804    4                        THEN               /* Space tape backwards               */
      803     8805    5                        DO;
      804     8806    5                           NUM = -NUM;
      805     8807    5                           FPT_PFIL.V.BOF# = %YES#;
      806     8808    6                           DO I=1 TO NUM;
      807     8809    6                              CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      808     8810    6                              END;
      809     8811    5                           CALL M$PFIL(FPT_PFIL)
      810     8812    6                            WHENALTRETURN DO;
      811     8813    6                               IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$BOT
      812     8814    6                                THEN GOTO SP_ABORT; /* Beginning of tape         */
      813     8815    6                                ELSE GOTO MON_ERR; /*  other error               */
      814     8816    6                               END;        /*  END  ALTRETURN                    */
      815     8817    5                           FPT_PFIL.V.BOF# = %NO#; /*  forward to 1st recd       */
      816     8818    5                           CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      817     8819    5                           END;            /*  end space backwards               */
      818     8820    4                        ELSE               /* Space forewards                    */
      819     8821    5                        DO;
      820     8822    5                           FPT_PFIL.V.BOF# = %NO#;
      821     8823    6                           DO I=1 TO NUM;
      822     8824    6                              CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      823     8825    6                              END;
      824     8826    5                           END;
      825     8827    4                       END;
      826     8828    3                   END;
      827     8829    2               END;
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:124  
      828     8830    1   SP_ABORT: ;
      829     8831    1           IF M$EI$->F$DCB.FCD
      830     8832    1            THEN
      831     8833    1              CALL M$CLOSE(FPT_CLOSEI);
      832     8834    1           CALL VPD$CHECK_VOL(IN_SN,0,M$EI#,,0); /* Check VOL transition         */
      833     8835    1   NEVER_STARTED: ;
      834     8836    1           RETURN;
      835     8837    1   MON_ERR: CALL VPL$ERR_PROC(3,0);
      836     8838    1   END VPJ$SPE;
      837     8839        %EOD;

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:125  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$SPE.

   Procedure VPJ$SPE requires 379 words for executable code.
   Procedure VPJ$SPE requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:126  

 Object Unit name= VPJ$SPE                                    File name= VPJ$TAPE.:E05TOU
 UTS= JUL 30 '97 07:51:21.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10  RoData even  UTS     14     16  VPJ$SPE
   11   Data  even  none    64    100  VPJ$SPE
   12   Proc  even  none   379    573  VPJ$SPE
   13  RoData even  none    48     60  VPJ$SPE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        0  VPJ$SPE
    12      3                  yes      Std        0  VPJ$SPF
    12      6                  yes      Std        0  VPJ$SPR
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:127  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VPD$FID
         yes           Std       8 VPL$ERR_PROC
         yes           Std       5 VPD$CHECK_VOL
 yes     yes           Std       4 VPD$TEXTC_CHARBIN
         yes           Std       1 VPD$GET_IN_DEV_MASK
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   ABORT_STEP
     ABORT_CMD                             BREAK_LOC                             BREAK_MESSAGE_REPORTER
     CMD_MASK                              SPEC_BUF                              IN_NAME
     IN_ACCT                               IN_PASS                               IN_RES
     IN_SN                                 IN_WSN                                IN_ASN
     ICB                                   M$EI                                  M$EI$
     M$EI#                                 M$EO                                  M$EO1
     M$ME                                  M$SI                                  M$READFILE
     M$DO                                  M$STD1                                M$SORT1
     B$TCB$                                FPT_FID_IN                            RESULTS_FID_IN
     FPT_OPEN_EI                           FPT_OPEN_EI_SAVE                      B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:128  


      569        1        /*T***********************************************************/
      570        2        /*T*                                                         */
      571        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      572        4        /*T*                                                         */
      573        5        /*T***********************************************************/
      574        6        VPJ$SPE: PROC;

      6 12 000000   000000 700200 xent  VPJ$SPE      TSX0  ! X66_AUTO_0
        12 000001   000016 000000                    ZERO    14,0
        12 000002   000005 710000 12                 TRA     s:8632+2

      575        7        /*D* NAME: VPJ$SPE
      576        8             CALL: CALL VPJ$SPE;
      577        9          DESCRIPTION: VPJ$SPE (which also has as entry points VPJ$SPF and VPJ$SPR) is used
      578       10                          for tape positioning. VPJ$SPE spaces to the end of a labeled
      579       11                          tape or between the next set of consecutive file marks
      580       12                          on free tape. VPJ$SPF spaces forward or backward n files
      581       13                          starting at either the current tape position on free tape
      582       14                          or labeled tape if a filename was not specified; or starting
      583       15                          at the specified file on labeled tape. n defaults to 0.
      584       16                          VPJ$SPR spaces forward n records within
      585       17                          the current file only. If n causes a tape mark to be
      586       18                          encountered, an error will result and the tape will be
      587       19                          repositioned inside that tape mark.
      588       20                          VPJ$SPR is valid for device tape only.
      589       21        */
      590       22        /**/
      591       23        /*  INCLUDE FILES  */
      592       24        /**/
      593       25        %INCLUDE VP_DATA_R;
      594     7012        %INCLUDE F$DCB;
      595     7061        %INCLUDE B_ERRORS_C;
      596     8188        /**/
      597     8189        /*  BASED DATA  */
      598     8190        /**/
      599     8191        %B$TCB;
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:129  
      600     8194        %B$ALT;
      601     8202        %PARSE$OUT(NAME = OUT$BLK,STCLASS = BASED);
      602     8247        %PARSE$SYM(NAME = OUT$SYM,STCLASS = BASED);
      603     8285        /**/
      604     8286        /*  LOCAL AUTO  */
      605     8287        /**/
      606     8288    1   DCL NUM SBIN WORD;
      607     8289    1   DCL FSN SBIN WORD;
      608     8290    1   DCL I SBIN;
      609     8291    1   DCL KEEP_GOING BIT(1) ALIGNED;
      610     8292        /**/
      611     8293        /*  CONSTANTS  */
      612     8294        /**/
      613     8295        %FPT_READ(FPTN = FPT_READ,DCB = M$EI,BUF = READ_BUF,STCLASS = CONSTANT);
      614     8334        /**/
      615     8335        /*  LOCAL STATIC  */
      616     8336        /**/
      617     8337    1   DCL READ_BUF CHAR(80) STATIC;
      618     8338        %FPT_PFIL(FPTN = FPT_PFIL,DCB = M$EI,STCLASS = STATIC);
      619     8353        %FPT_PRECORD(FPTN = FPT_PRECORD,DCB = M$EI,STCLASS = STATIC);
      620     8374        %FPT_CLOSE(FPTN = FPT_CLOSEI,
      621     8375                   DCB  = M$EI,
      622     8376                   NOMARKS = YES,
      623     8377                   STCLASS = STATIC);
      624     8419        /**/
      625     8420        /*  ENTRY DCLS  */
      626     8421        /**/
      627     8422        %VP_ENTRIES (OMIT=VPJ$SPE);
      628     8630        /**/
      629     8631        /**/
      630     8632    1   VPJ$SPF: ENTRY;

   8632 12 000003   000000 700200 xent  VPJ$SPF      TSX0  ! X66_AUTO_0
        12 000004   000016 000000                    ZERO    14,0
        12 000005   000010 710000 12                 TRA     s:8634

      631     8633    1   VPJ$SPR: ENTRY;
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:130  

   8633 12 000006   000000 700200 xent  VPJ$SPR      TSX0  ! X66_AUTO_0
        12 000007   000016 000000                    ZERO    14,0

      632     8634    1           REMEMBER NEVER_STARTED IN ABORT_CMD;

   8634 12 000010   000565 635000 12                 EAA     NEVER_STARTED
        12 000011   000000 452400 xsym               STP2    ABORT_CMD
        12 000012   000001 755000 xsym               STA     ABORT_CMD+1

      633     8635    1           REMEMBER NEVER_STARTED IN ABORT_STEP;

   8635 12 000013   000565 635000 12                 EAA     NEVER_STARTED
        12 000014   000000 452400 xsym               STP2    ABORT_STEP
        12 000015   000001 755000 xsym               STA     ABORT_STEP+1

      634     8636    1           FPT_CLOSEI.V.POS# = 0;          /* DON'T REPOSITION ON CLOSE          */

   8636 12 000016   000000 236003                    LDQ     0,DU
        12 000017   000076 552040 11                 STBQ    FPT_CLOSEI+28,'40'O

      635     8637    1           FPT_FID_IN.TEXTFID_   = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->

   8637 12 000020   000003 470400 xsym               LDP0    PCB+3
        12 000021   000003 471500                    LDP1    3,,PR0
        12 000022   100004 236100                    LDQ     4,,PR1
        12 000023   000033 772000                    QRL     27
        12 000024   000064 737000                    LLS     52
        12 000025   000140 135007                    SBLA    96,DL
        12 000026   200010 451500                    STP1    KEEP_GOING+2,,AUTO
        12 000027   200010 236100                    LDQ     KEEP_GOING+2,,AUTO
        12 000030   000000 036000 13                 ADLQ    0
        12 000031   000002 757000 xsym               STAQ    FPT_FID_IN+2

      636     8638    1             OUT$SYM.TEXT);
      637     8639    1           CALL VPD$FID(FPT_FID_IN);

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:131  
   8639 12 000032   000001 630400 13                 EPPR0   1
        12 000033   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000034   000000 701000 xent               TSX1    VPD$FID
        12 000035   000000 011000                    NOP     0

      638     8640    1           CALL VPD$GET_IN_DEV_MASK(ICB);

   8640 12 000036   000002 630400 13                 EPPR0   2
        12 000037   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000040   000000 701000 xent               TSX1    VPD$GET_IN_DEV_MASK
        12 000041   000000 011000                    NOP     0

      639     8641    1           IF CMD_MASK(15) AND NOT (ICB.DEV_MASK.DEV_TAPE)

   8641 12 000042   000000 236000 xsym               LDQ     CMD_MASK
        12 000043   000004 316003                    CANQ    4,DU
        12 000044   000055 600000 12                 TZE     s:8648
        12 000045   000171 236000 xsym               LDQ     ICB+121
        12 000046   040000 316003                    CANQ    16384,DU
        12 000047   000055 601000 12                 TNZ     s:8648

      640     8642    1            THEN
      641     8643    1              CALL VPL$ERR_PROC(3,50,'12'O);

   8643 12 000050   000005 630400 13                 EPPR0   5
        12 000051   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000052   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000053   000000 011000                    NOP     0
        12 000054   000065 710000 12                 TRA     s:8654

      642     8644        /*E* ERROR:   VPJ-00050
      643     8645             MESSAGE: SPR legal for device tape only
      644     8646        */
      645     8647    1            ELSE
      646     8648    1              IF NOT (ICB.DEV_MASK & '140'O)

   8648 12 000055   000171 236000 xsym               LDQ     ICB+121
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:132  
        12 000056   777000 376003                    ANQ     -512,DU
        12 000057   140000 376003                    ANQ     49152,DU
        12 000060   000065 601000 12                 TNZ     s:8654

      647     8649    1               THEN
      648     8650    1                 CALL VPL$ERR_PROC(3,60,'12'O);

   8650 12 000061   000011 630400 13                 EPPR0   9
        12 000062   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000063   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000064   000000 011000                    NOP     0

      649     8651        /*E* ERROR:   VPJ-00060
      650     8652             MESSAGE: SPE and SPF valid for labeled or device tape only
      651     8653        */
      652     8654    1           FPT_OPEN_EI = FPT_OPEN_EI_SAVE;

   8654 12 000065   000000 100400                    MLR     fill='000'O
        12 000066   000000 000350 xsym               ADSC9   FPT_OPEN_EI_SAVE         cn=0,n=232
        12 000067   000000 000350 xsym               ADSC9   FPT_OPEN_EI              cn=0,n=232

      653     8655    1           FPT_OPEN_EI.V.INITZ.SCRUB# = %YES#;

   8655 12 000070   400000 236007                    LDQ     -131072,DL
        12 000071   000044 256000 xsym               ORSQ    FPT_OPEN_EI+36

      654     8656    1           FPT_OPEN_EI.V.ASN# = IN_ASN;

   8656 12 000072   000000 236000 xsym               LDQ     IN_ASN
        12 000073   000033 772000                    QRL     27
        12 000074   000045 552004 xsym               STBQ    FPT_OPEN_EI+37,'04'O

      655     8657    1           FPT_OPEN_EI.V.ORG# = %FREE#;

   8657 12 000075   023000 236007                    LDQ     9728,DL
        12 000076   000046 552010 xsym               STBQ    FPT_OPEN_EI+38,'10'O

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:133  
      656     8658    1           FPT_OPEN_EI.V.CVOL# = %YES#;    /*   Notify if END-OF-FILE            */

   8658 12 000077   000044 236000 xsym               LDQ     FPT_OPEN_EI+36
        12 000100   000014 376000 13                 ANQ     12
        12 000101   000004 276007                    ORQ     4,DL
        12 000102   000044 756000 xsym               STQ     FPT_OPEN_EI+36

      657     8659    1           FPT_OPEN_EI.V.FINDPOS# = %YES#;

   8659 12 000103   000001 236007                    LDQ     1,DL
        12 000104   000044 256000 xsym               ORSQ    FPT_OPEN_EI+36

      658     8660    1           FPT_OPEN_EI.V.RES# = IN_RES;

   8660 12 000105   000000 236000 xsym               LDQ     IN_RES
        12 000106   000050 756000 xsym               STQ     FPT_OPEN_EI+40

      659     8661    1           IF RESULTS_FID_IN.NAME AND IN_NAME.LEN>0

   8661 12 000107   000000 234000 xsym               SZN     RESULTS_FID_IN
        12 000110   000116 605000 12                 TPL     s:8664
        12 000111   000000 236000 xsym               LDQ     IN_NAME
        12 000112   777000 316003                    CANQ    -512,DU
        12 000113   000116 600000 12                 TZE     s:8664

      660     8662    1            THEN
      661     8663    1              FPT_OPEN_EI.NAME_ = VECTOR(IN_NAME);

   8663 12 000114   000016 237000 13                 LDAQ    14
        12 000115   000006 757000 xsym               STAQ    FPT_OPEN_EI+6

      662     8664    1           IF RESULTS_FID_IN.ACCT

   8664 12 000116   000000 236000 xsym               LDQ     RESULTS_FID_IN
        12 000117   200000 316003                    CANQ    65536,DU
        12 000120   000123 600000 12                 TZE     s:8667

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:134  
      663     8665    1            THEN
      664     8666    1              FPT_OPEN_EI.ACCT_ = VECTOR(IN_ACCT);

   8666 12 000121   000020 237000 13                 LDAQ    16
        12 000122   000024 757000 xsym               STAQ    FPT_OPEN_EI+20

      665     8667    1           IF RESULTS_FID_IN.PASS

   8667 12 000123   000000 236000 xsym               LDQ     RESULTS_FID_IN
        12 000124   100000 316003                    CANQ    32768,DU
        12 000125   000130 600000 12                 TZE     s:8670

      666     8668    1            THEN
      667     8669    1              FPT_OPEN_EI.PASS_ = VECTOR(IN_PASS);

   8669 12 000126   000022 237000 13                 LDAQ    18
        12 000127   000010 757000 xsym               STAQ    FPT_OPEN_EI+8

      668     8670    1           IF RESULTS_FID_IN.SN

   8670 12 000130   000000 236000 xsym               LDQ     RESULTS_FID_IN
        12 000131   040000 316003                    CANQ    16384,DU
        12 000132   000135 600000 12                 TZE     s:8673

      669     8671    1            THEN
      670     8672    1              FPT_OPEN_EI.SN_ = VECTOR(IN_SN);

   8672 12 000133   000024 237000 13                 LDAQ    20
        12 000134   000002 757000 xsym               STAQ    FPT_OPEN_EI+2

      671     8673    1           IF RESULTS_FID_IN.WSN

   8673 12 000135   000000 236000 xsym               LDQ     RESULTS_FID_IN
        12 000136   020000 316003                    CANQ    8192,DU
        12 000137   000142 600000 12                 TZE     s:8676

      672     8674    1            THEN
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:135  
      673     8675    1              FPT_OPEN_EI.WSN_ = VECTOR(IN_WSN);

   8675 12 000140   000026 237000 13                 LDAQ    22
        12 000141   000032 757000 xsym               STAQ    FPT_OPEN_EI+26

      674     8676    1           REMEMBER SP_ABORT IN ABORT_CMD;

   8676 12 000142   000543 635000 12                 EAA     SP_ABORT
        12 000143   000000 452400 xsym               STP2    ABORT_CMD
        12 000144   000001 755000 xsym               STA     ABORT_CMD+1

      675     8677    1           REMEMBER SP_ABORT IN ABORT_STEP;

   8677 12 000145   000543 635000 12                 EAA     SP_ABORT
        12 000146   000000 452400 xsym               STP2    ABORT_STEP
        12 000147   000001 755000 xsym               STA     ABORT_STEP+1

      676     8678    1           CALL VPD$CHECK_VOL(IN_SN,3,,I,0); /* Get last VOL                     */

   8678 12 000150   000015 236000 13                 LDQ     13
        12 000151   200014 756100                    STQ     KEEP_GOING+6,,AUTO
        12 000152   200005 630500                    EPPR0   I,,AUTO
        12 000153   200013 450500                    STP0    KEEP_GOING+5,,AUTO
        12 000154   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000155   200012 756100                    STQ     KEEP_GOING+4,,AUTO
        12 000156   000030 237000 13                 LDAQ    24
        12 000157   200010 757100                    STAQ    KEEP_GOING+2,,AUTO
        12 000160   200010 630500                    EPPR0   KEEP_GOING+2,,AUTO
        12 000161   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000162   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000163   000000 011000                    NOP     0

      677     8679    1           FPT_OPEN_EI.V.VOL# = I;

   8679 12 000164   200005 236100                    LDQ     I,,AUTO
        12 000165   000033 736000                    QLS     27
        12 000166   000061 552040 xsym               STBQ    FPT_OPEN_EI+49,'40'O
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:136  

      678     8680    1           IF CMD_MASK(16)                 /* VPJ$SPE                            */

   8680 12 000167   000000 236000 xsym               LDQ     CMD_MASK
        12 000170   000002 316003                    CANQ    2,DU
        12 000171   000267 600000 12                 TZE     s:8724

      679     8681    1            THEN
      680     8682    1              IF ICB.DEV_MASK.MAN_TAPE     /* MANAGED TAPE                       */

   8682 12 000172   000171 236000 xsym               LDQ     ICB+121
        12 000173   100000 316003                    CANQ    32768,DU
        12 000174   000221 600000 12                 TZE     s:8701

      681     8683    1               THEN
      682     8684    2               DO;

      683     8685    2                  FPT_OPEN_EI.NAME_ = VECTOR(NIL);

   8685 12 000175   000032 237000 13                 LDAQ    26
        12 000176   000006 757000 xsym               STAQ    FPT_OPEN_EI+6

      684     8686    2                  FPT_OPEN_EI.V.FSN# = 9999;

   8686 12 000177   023417 220003                    LDX0    9999,DU
        12 000200   000066 740000 xsym               STX0    FPT_OPEN_EI+54

      685     8687    2                  CALL M$OPEN(FPT_OPEN_EI) ALTRET(LT_OPEN_SPE_ALT);

   8687 12 000201   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000202   450000 713400                    CLIMB   alt,open
        12 000203   410400 401760                    pmme    nvectors=18
        12 000204   000212 702000 12                 TSX2    LT_OPEN_SPE_ALT

      686     8688    2                  CALL VPL$ERR_PROC(3,70,'12'O);

   8688 12 000205   000035 630400 13                 EPPR0   29
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:137  
        12 000206   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000207   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000210   000000 011000                    NOP     0

      687     8689        /*E* ERROR:   VPJ-00070
      688     8690             MESSAGE: Didn't find end of LT...positioned at start of FSN 9999.
      689     8691        */
      690     8692    3                  DO WHILE('0'B);

   8692 12 000211   000543 710000 12                 TRA     SP_ABORT

      691     8693    3   LT_OPEN_SPE_ALT:
      692     8694    3                     IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE~=%E$EOSET

   8694 12 000212   000000 470400 xsym  LT_OPEN_SPE* LDP0    B$TCB$
        12 000213   000000 471500                    LDP1    0,,PR0
        12 000214   100102 236100                    LDQ     66,,PR1
        12 000215   377770 376007                    ANQ     131064,DL
        12 000216   013140 116007                    CMPQ    5728,DL
        12 000217   000566 601000 12                 TNZ     MON_ERR

      693     8695    3                      THEN
      694     8696    3                        GOTO MON_ERR;
      695     8697    3                     END;

      696     8698    2                  END;

   8698 12 000220   000543 710000 12                 TRA     SP_ABORT

      697     8699    1               ELSE                        /*   FREE TAPE                        */
      698     8700    2               DO;

      699     8701    2                  CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);

   8701 12 000221   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000222   450000 713400                    CLIMB   alt,open
        12 000223   410400 401760                    pmme    nvectors=18
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:138  
        12 000224   000566 702000 12                 TSX2    MON_ERR

      700     8702    2                  FPT_PFIL.V.BOF# = %NO#;

   8702 12 000225   000040 236000 13                 LDQ     32
        12 000226   000026 356000 11                 ANSQ    FPT_PFIL+2

      701     8703    2                  KEEP_GOING = %YES#;

   8703 12 000227   400000 236003                    LDQ     -131072,DU
        12 000230   200006 756100                    STQ     KEEP_GOING,,AUTO

      702     8704    3                  DO WHILE(KEEP_GOING);

   8704 12 000231   200006 234100                    SZN     KEEP_GOING,,AUTO
        12 000232   000543 605000 12                 TPL     SP_ABORT

      703     8705    3                     CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR); /*  check for two    */

   8705 12 000233   000024 630400 11                 EPPR0   FPT_PFIL
        12 000234   440004 713400                    CLIMB   alt,+16388
        12 000235   400000 401760                    pmme    nvectors=1
        12 000236   000566 702000 12                 TSX2    MON_ERR

      704     8706    3                     CALL M$READ(FPT_READ) ALTRET(READ_ALT); /*  tape marks      */

   8706 12 000237   000000 630400 10                 EPPR0   FPT_READ
        12 000240   440000 713400                    CLIMB   alt,read
        12 000241   401400 401760                    pmme    nvectors=4
        12 000242   000244 702000 12                 TSX2    READ_ALT

      705     8707    4                     DO WHILE('0'B);

   8707 12 000243   000264 710000 12                 TRA     s:8720

      706     8708    4   READ_ALT:            IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:139  
   8708 12 000244   000000 470400 xsym  READ_ALT     LDP0    B$TCB$
        12 000245   000000 471500                    LDP1    0,,PR0
        12 000246   100102 236100                    LDQ     66,,PR1
        12 000247   377770 376007                    ANQ     131064,DL
        12 000250   000060 116007                    CMPQ    48,DL
        12 000251   000262 601000 12                 TNZ     s:8716

      707     8709    4                         THEN
      708     8710    5                         DO;

      709     8711    5                            FPT_PFIL.V.BOF# = %YES#;

   8711 12 000252   400000 236007                    LDQ     -131072,DL
        12 000253   000026 256000 11                 ORSQ    FPT_PFIL+2

      710     8712    5                            CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);

   8712 12 000254   000024 630400 11                 EPPR0   FPT_PFIL
        12 000255   440004 713400                    CLIMB   alt,+16388
        12 000256   400000 401760                    pmme    nvectors=1
        12 000257   000566 702000 12                 TSX2    MON_ERR

      711     8713    5                            KEEP_GOING = %NO#;

   8713 12 000260   200006 450100                    STZ     KEEP_GOING,,AUTO

      712     8714    5                            END;

   8714 12 000261   000264 710000 12                 TRA     s:8720

      713     8715    4                         ELSE
      714     8716    4                           IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE~=%E$LD

   8716 12 000262   000070 116007                    CMPQ    56,DL
        12 000263   000566 601000 12                 TNZ     MON_ERR

      715     8717    4                            THEN
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:140  
      716     8718    4                              GOTO MON_ERR;
      717     8719    4                        END;

      718     8720    3                     END;

   8720 12 000264   200006 234100                    SZN     KEEP_GOING,,AUTO
        12 000265   000233 604000 12                 TMI     s:8705

      719     8721    2                  END;

   8721 12 000266   000543 710000 12                 TRA     SP_ABORT

      720     8722    1            ELSE
      721     8723    2            DO;                            /* SPF AND SPR                        */

      722     8724    2               IF PCB.OUT$->OUT$BLK.NSUBLKS=2

   8724 12 000267   000003 470400 xsym               LDP0    PCB+3
        12 000270   000001 220100                    LDX0    1,,PR0
        12 000271   000002 100003                    CMPX0   2,DU
        12 000272   000323 601000 12                 TNZ     s:8742

      723     8725    2                THEN
      724     8726    3                DO;

      725     8727    3                   CALL VPD$TEXTC_CHARBIN(NUM,

   8727 12 000273   000004 471500                    LDP1    4,,PR0
        12 000274   000041 236000 13                 LDQ     33
        12 000275   200012 756100                    STQ     KEEP_GOING+4,,AUTO
        12 000276   100003 633500                    EPPR3   3,,PR1
        12 000277   200011 453500                    STP3    KEEP_GOING+3,,AUTO
        12 000300   200003 631500                    EPPR1   NUM,,AUTO
        12 000301   200010 451500                    STP1    KEEP_GOING+2,,AUTO
        12 000302   200010 630500                    EPPR0   KEEP_GOING+2,,AUTO
        12 000303   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000304   000000 701000 xent               TSX1    VPD$TEXTC_CHARBIN
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:141  
        12 000305   000307 702000 12                 TSX2    s:8732
        12 000306   000313 710000 12                 TRA     s:8737

      726     8728    3                     PCB.OUT$->OUT$BLK.SUBLK$(1)->
      727     8729    3                     OUT$SYM.TEXTC$,
      728     8730    3                     BITBIN('377777777777'O))
      729     8731    4                    WHENALTRETURN DO;

      730     8732    4                       CALL VPL$ERR_PROC(3,100,'12'O);

   8732 12 000307   000043 630400 13                 EPPR0   35
        12 000310   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000311   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000312   000000 011000                    NOP     0

      731     8733        /*E* ERROR:   VPJ-00100
      732     8734             MESSAGE: Number too large
      733     8735        */
      734     8736    4                       END;

      735     8737    3                   IF PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.CODE=101

   8737 12 000313   000003 470400 xsym               LDP0    PCB+3
        12 000314   000004 471500                    LDP1    4,,PR0
        12 000315   100000 720100                    LXL0    0,,PR1
        12 000316   000145 100003                    CMPX0   101,DU
        12 000317   000331 601000 12                 TNZ     s:8747

      736     8738    3                    THEN
      737     8739    3                      NUM = -NUM;

   8739 12 000320   200003 335100                    LCA     NUM,,AUTO
        12 000321   200003 755100                    STA     NUM,,AUTO

      738     8740    3                   END;                    /*   END  ALTRETURN                   */

   8740 12 000322   000331 710000 12                 TRA     s:8747
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:142  

      739     8741    2                ELSE
      740     8742    2                  IF CMD_MASK(15)          /* SPR                                */

   8742 12 000323   000004 316003                    CANQ    4,DU
        12 000324   000330 600000 12                 TZE     s:8746

      741     8743    2                   THEN
      742     8744    2                     NUM = 1;

   8744 12 000325   000001 235007                    LDA     1,DL
        12 000326   200003 755100                    STA     NUM,,AUTO
        12 000327   000331 710000 12                 TRA     s:8747

      743     8745    2                   ELSE
      744     8746    2                     NUM = 0;

   8746 12 000330   200003 450100                    STZ     NUM,,AUTO

      745     8747    2               IF CMD_MASK(15)             /* VPJ$SPR                            */

   8747 12 000331   000000 236000 xsym               LDQ     CMD_MASK
        12 000332   000004 316003                    CANQ    4,DU
        12 000333   000371 600000 12                 TZE     s:8771

      746     8748    2                THEN
      747     8749    3                DO;

      748     8750    3                   CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);

   8750 12 000334   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000335   450000 713400                    CLIMB   alt,open
        12 000336   410400 401760                    pmme    nvectors=18
        12 000337   000566 702000 12                 TSX2    MON_ERR

      749     8751    3                   FPT_PRECORD.V.N# = NUM;

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:143  
   8751 12 000340   200003 235100                    LDA     NUM,,AUTO
        12 000341   000037 755000 11                 STA     FPT_PRECORD+7

      750     8752    3                   CALL M$PRECORD(FPT_PRECORD)

   8752 12 000342   000030 630400 11                 EPPR0   FPT_PRECORD
        12 000343   440003 713400                    CLIMB   alt,+16387
        12 000344   401000 401760                    pmme    nvectors=3
        12 000345   000347 702000 12                 TSX2    s:8754
        12 000346   000370 710000 12                 TRA     s:8768

      751     8753    4                    WHENALTRETURN DO;

      752     8754    4                       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF

   8754 12 000347   000000 470400 xsym               LDP0    B$TCB$
        12 000350   000000 471500                    LDP1    0,,PR0
        12 000351   100102 236100                    LDQ     66,,PR1
        12 000352   377770 376007                    ANQ     131064,DL
        12 000353   000060 116007                    CMPQ    48,DL
        12 000354   000566 601000 12                 TNZ     MON_ERR

      753     8755    4                        THEN
      754     8756    5                        DO;

      755     8757    5                           FPT_PRECORD.V.N# = -1;

   8757 12 000355   000001 335007                    LCA     1,DL
        12 000356   000037 755000 11                 STA     FPT_PRECORD+7

      756     8758    5                           CALL M$PRECORD(FPT_PRECORD) ALTRET(EXPECTED_ALT_2);

   8758 12 000357   000030 630400 11                 EPPR0   FPT_PRECORD
        12 000360   440003 713400                    CLIMB   alt,+16387
        12 000361   401000 401760                    pmme    nvectors=3
        12 000362   000363 702000 12                 TSX2    EXPECTED_ALT_2

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:144  
      757     8759    5   EXPECTED_ALT_2:
      758     8760    5                           CALL VPL$ERR_PROC(3,90,'12'O);

   8760 12 000363   000047 630400 13    EXPECTED_AL* EPPR0   39
        12 000364   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000365   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000366   000000 011000                    NOP     0

      759     8761        /*E* ERROR:   VPJ-00090
      760     8762             MESSAGE: Too many records---positioned at EOF
      761     8763        */
      762     8764    5                           END;

   8764 12 000367   000370 710000 12                 TRA     s:8768

      763     8765    4                        ELSE
      764     8766    4                          GOTO MON_ERR;
      765     8767    4                       END;                /*  END ALTRETURN                     */
      766     8768    3                   END;

   8768 12 000370   000543 710000 12                 TRA     SP_ABORT

      767     8769    2                ELSE
      768     8770    3                DO;                        /* MUST BE VPJ$SPF                    */

      769     8771    3                   IF ICB.DEV_MASK.MAN_TAPE /* IF LABELED TAPE                   */

   8771 12 000371   000171 236000 xsym               LDQ     ICB+121
        12 000372   100000 316003                    CANQ    32768,DU
        12 000373   000456 600000 12                 TZE     s:8802

      770     8772    3                    THEN
      771     8773    4                    DO;

      772     8774    4                       FPT_CLOSEI.V.POS#    = %PTL#;

   8774 12 000374   001000 236003                    LDQ     512,DU
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:145  
        12 000375   000076 552040 11                 STBQ    FPT_CLOSEI+28,'40'O

      773     8775    4                       IF FPT_OPEN_EI.NAME_=VECTOR(NIL)

   8775 12 000376   000006 237000 xsym               LDAQ    FPT_OPEN_EI+6
        12 000377   000032 117000 13                 CMPAQ   26
        12 000400   000403 601000 12                 TNZ     s:8778

      774     8776    4                        THEN
      775     8777    4                          FPT_OPEN_EI.V.OPER.NXTF# = %YES#;

   8777 12 000401   004000 236007                    LDQ     2048,DL
        12 000402   000044 256000 xsym               ORSQ    FPT_OPEN_EI+36

      776     8778    4                       CALL M$OPEN(FPT_OPEN_EI)

   8778 12 000403   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000404   450000 713400                    CLIMB   alt,open
        12 000405   410400 401760                    pmme    nvectors=18
        12 000406   000424 702000 12                 TSX2    s:8786

      777     8779    5                        WHENRETURN DO;

      778     8780    5                           IF M$EI$ -> F$DCB.FCD

   8780 12 000407   000000 470400 xsym               LDP0    M$EI$
        12 000410   000031 236100                    LDQ     25,,PR0
        12 000411   020000 316007                    CANQ    8192,DL
        12 000412   000417 600000 12                 TZE     s:8783

      779     8781    5                            THEN           /* File is OPEN                       */
      780     8782    5                              CALL M$CLOSE(FPT_CLOSEI) ALTRET(MON_ERR);

   8782 12 000413   000042 630400 11                 EPPR0   FPT_CLOSEI
        12 000414   450001 713400                    CLIMB   alt,close
        12 000415   406000 401760                    pmme    nvectors=13
        12 000416   000566 702000 12                 TSX2    MON_ERR
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:146  

      781     8783    5                           FSN = M$EI$ -> F$DCB.FSN;

   8783 12 000417   000000 470400 xsym               LDP0    M$EI$
        12 000420   000034 236100                    LDQ     28,,PR0
        12 000421   000022 772000                    QRL     18
        12 000422   200004 756100                    STQ     FSN,,AUTO

      782     8784    5                           END;            /*  END  normal RETURN                */

   8784 12 000423   000437 710000 12                 TRA     s:8791

      783     8785    5                        WHENALTRETURN DO;

      784     8786    5                           IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= %E$EOSET

   8786 12 000424   000000 470400 xsym               LDP0    B$TCB$
        12 000425   000000 471500                    LDP1    0,,PR0
        12 000426   100102 236100                    LDQ     66,,PR1
        12 000427   377770 376007                    ANQ     131064,DL
        12 000430   013140 116007                    CMPQ    5728,DL
        12 000431   000566 601000 12                 TNZ     MON_ERR

      785     8787    5                            THEN
      786     8788    5                              GOTO MON_ERR;
      787     8789    5                           FSN = M$EI$ -> F$DCB.FSN +1; /* Make FSN of next file */

   8789 12 000432   000000 473400 xsym               LDP3    M$EI$
        12 000433   300034 236100                    LDQ     28,,PR3
        12 000434   000022 772000                    QRL     18
        12 000435   000001 036007                    ADLQ    1,DL
        12 000436   200004 756100                    STQ     FSN,,AUTO

      788     8790    5                           END;            /*   END   ALTRETURN                  */

      789     8791    4                       IF NUM~=0

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:147  
   8791 12 000437   200003 235100                    LDA     NUM,,AUTO
        12 000440   000543 600000 12                 TZE     SP_ABORT

      790     8792    4                        THEN               /* There is movement to do            */
      791     8793    5                        DO;

      792     8794    5                           FPT_OPEN_EI.V.OPER.NXTF# = %NO#;

   8794 12 000441   000052 236000 13                 LDQ     42
        12 000442   000044 356000 xsym               ANSQ    FPT_OPEN_EI+36

      793     8795    5                           FPT_OPEN_EI.NAME_ = VECTOR(NIL);

   8795 12 000443   000032 237000 13                 LDAQ    26
        12 000444   000006 757000 xsym               STAQ    FPT_OPEN_EI+6

      794     8796    5                           FPT_OPEN_EI.V.FSN# = FSN + NUM;

   8796 12 000445   200004 236100                    LDQ     FSN,,AUTO
        12 000446   200003 036100                    ADLQ    NUM,,AUTO
        12 000447   000000 620006                    EAX0    0,QL
        12 000450   000066 740000 xsym               STX0    FPT_OPEN_EI+54

      795     8797    5                           CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);

   8797 12 000451   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000452   450000 713400                    CLIMB   alt,open
        12 000453   410400 401760                    pmme    nvectors=18
        12 000454   000566 702000 12                 TSX2    MON_ERR

      796     8798    5                           END;

      797     8799    4                       END;

   8799 12 000455   000543 710000 12                 TRA     SP_ABORT

      798     8800    3                    ELSE                   /* NOT a labled tape                  */
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:148  
      799     8801    4                    DO;

      800     8802    4                       CALL M$OPEN(FPT_OPEN_EI) ALTRET(MON_ERR);

   8802 12 000456   000000 630400 xsym               EPPR0   FPT_OPEN_EI
        12 000457   450000 713400                    CLIMB   alt,open
        12 000460   410400 401760                    pmme    nvectors=18
        12 000461   000566 702000 12                 TSX2    MON_ERR

      801     8803    4                       IF NUM<0

   8803 12 000462   200003 235100                    LDA     NUM,,AUTO
        12 000463   000526 605000 12                 TPL     s:8822

      802     8804    4                        THEN               /* Space tape backwards               */
      803     8805    5                        DO;

      804     8806    5                           NUM = -NUM;

   8806 12 000464   000000 531000                    NEG     0
        12 000465   200003 755100                    STA     NUM,,AUTO

      805     8807    5                           FPT_PFIL.V.BOF# = %YES#;

   8807 12 000466   400000 236007                    LDQ     -131072,DL
        12 000467   000026 256000 11                 ORSQ    FPT_PFIL+2

      806     8808    6                           DO I=1 TO NUM;

   8808 12 000470   000001 235007                    LDA     1,DL
        12 000471   200005 755100                    STA     I,,AUTO
        12 000472   000500 710000 12                 TRA     s:8810+1

      807     8809    6                              CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);

   8809 12 000473   000024 630400 11                 EPPR0   FPT_PFIL
        12 000474   440004 713400                    CLIMB   alt,+16388
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:149  
        12 000475   400000 401760                    pmme    nvectors=1
        12 000476   000566 702000 12                 TSX2    MON_ERR

      808     8810    6                              END;

   8810 12 000477   200005 054100                    AOS     I,,AUTO
        12 000500   200005 236100                    LDQ     I,,AUTO
        12 000501   200003 116100                    CMPQ    NUM,,AUTO
        12 000502   000473 604400 12                 TMOZ    s:8809

      809     8811    5                           CALL M$PFIL(FPT_PFIL)

   8811 12 000503   000024 630400 11                 EPPR0   FPT_PFIL
        12 000504   440004 713400                    CLIMB   alt,+16388
        12 000505   400000 401760                    pmme    nvectors=1
        12 000506   000510 702000 12                 TSX2    s:8813
        12 000507   000517 710000 12                 TRA     s:8817

      810     8812    6                            WHENALTRETURN DO;

      811     8813    6                               IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$BOT

   8813 12 000510   000000 470400 xsym               LDP0    B$TCB$
        12 000511   000000 471500                    LDP1    0,,PR0
        12 000512   100102 236100                    LDQ     66,,PR1
        12 000513   377770 376007                    ANQ     131064,DL
        12 000514   000030 116007                    CMPQ    24,DL
        12 000515   000543 600000 12                 TZE     SP_ABORT

      812     8814    6                                THEN GOTO SP_ABORT; /* Beginning of tape         */
      813     8815    6                                ELSE GOTO MON_ERR; /*  other error               */

   8815 12 000516   000566 710000 12                 TRA     MON_ERR

      814     8816    6                               END;        /*  END  ALTRETURN                    */
      815     8817    5                           FPT_PFIL.V.BOF# = %NO#; /*  forward to 1st recd       */

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:150  
   8817 12 000517   000040 236000 13                 LDQ     32
        12 000520   000026 356000 11                 ANSQ    FPT_PFIL+2

      816     8818    5                           CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);

   8818 12 000521   000024 630400 11                 EPPR0   FPT_PFIL
        12 000522   440004 713400                    CLIMB   alt,+16388
        12 000523   400000 401760                    pmme    nvectors=1
        12 000524   000566 702000 12                 TSX2    MON_ERR

      817     8819    5                           END;            /*  end space backwards               */

   8819 12 000525   000543 710000 12                 TRA     SP_ABORT

      818     8820    4                        ELSE               /* Space forewards                    */
      819     8821    5                        DO;

      820     8822    5                           FPT_PFIL.V.BOF# = %NO#;

   8822 12 000526   000040 236000 13                 LDQ     32
        12 000527   000026 356000 11                 ANSQ    FPT_PFIL+2

      821     8823    6                           DO I=1 TO NUM;

   8823 12 000530   000001 235007                    LDA     1,DL
        12 000531   200005 755100                    STA     I,,AUTO
        12 000532   000540 710000 12                 TRA     s:8825+1

      822     8824    6                              CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);

   8824 12 000533   000024 630400 11                 EPPR0   FPT_PFIL
        12 000534   440004 713400                    CLIMB   alt,+16388
        12 000535   400000 401760                    pmme    nvectors=1
        12 000536   000566 702000 12                 TSX2    MON_ERR

      823     8825    6                              END;

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:151  
   8825 12 000537   200005 054100                    AOS     I,,AUTO
        12 000540   200005 236100                    LDQ     I,,AUTO
        12 000541   200003 116100                    CMPQ    NUM,,AUTO
        12 000542   000533 604400 12                 TMOZ    s:8824

      824     8826    5                           END;

      825     8827    4                       END;

      826     8828    3                   END;

      827     8829    2               END;

   8822 12 000543                       SP_ABORT     null
      828     8830    1   SP_ABORT: ;
      829     8831    1           IF M$EI$->F$DCB.FCD

   8831 12 000543   000000 470400 xsym               LDP0    M$EI$
        12 000544   000031 236100                    LDQ     25,,PR0
        12 000545   020000 316007                    CANQ    8192,DL
        12 000546   000552 600000 12                 TZE     s:8834

      830     8832    1            THEN
      831     8833    1              CALL M$CLOSE(FPT_CLOSEI);

   8833 12 000547   000042 630400 11                 EPPR0   FPT_CLOSEI
        12 000550   050001 713400                    CLIMB   close
        12 000551   406000 401760                    pmme    nvectors=13

      832     8834    1           CALL VPD$CHECK_VOL(IN_SN,0,M$EI#,,0); /* Check VOL transition         */

   8834 12 000552   000015 236000 13                 LDQ     13
        12 000553   200014 756100                    STQ     KEEP_GOING+6,,AUTO
        12 000554   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 000555   000053 235000 13                 LDA     43
        12 000556   200012 757100                    STAQ    KEEP_GOING+4,,AUTO
        12 000557   000054 237000 13                 LDAQ    44
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:152  
        12 000560   200010 757100                    STAQ    KEEP_GOING+2,,AUTO
        12 000561   200010 630500                    EPPR0   KEEP_GOING+2,,AUTO
        12 000562   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000563   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 000564   000000 011000                    NOP     0

   8831 12 000565                       NEVER_START* null
      833     8835    1   NEVER_STARTED: ;
      834     8836    1           RETURN;

   8836 12 000565   000000 702200 xent               TSX2  ! X66_ARET

      835     8837    1   MON_ERR: CALL VPL$ERR_PROC(3,0);

   8837 12 000566   000056 630400 13    MON_ERR      EPPR0   46
        12 000567   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000570   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 000571   000000 011000                    NOP     0

      836     8838    1   END VPJ$SPE;

   8838 12 000572   000000 702200 xent               TSX2  ! X66_ARET
      837     8839        %EOD;

PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:153  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$SPE.
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:154  

 **** Variables and constants ****

  ****  Section 010 RoData VPJ$SPE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 FPT_READ

  ****  Section 011  Data  VPJ$SPE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    42-0-0/d STRC(1080)  r     1 FPT_CLOSEI                24-0-0/d STRC(144)   r     1 FPT_PFIL
    30-0-0/d STRC(360)   r     1 FPT_PRECORD                0-0-0/c CHAR(80)    r     1 READ_BUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w SBIN        r     1 FSN                        5-0-0/w SBIN        r     1 I
     6-0-0/w BIT         r     1 KEEP_GOING                 3-0-0/w SBIN        r     1 NUM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d REMB        r     1 ABORT_CMD                  0-0-0/d REMB        r     1 ABORT_STEP
     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/b BIT         r     1 CMD_MASK(0:71)
     0-0-0/d STRC(864)   r     1 FPT_FID_IN                 0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI
     0-0-0/d STRC(2088)  r     1 FPT_OPEN_EI_SAVE           0-0-0/d STRC(5868)  r     1 ICB
     0-0-0/c CHAR(8)     r     1 IN_ACCT                    0-0-0/b UBIN(9)     r     1 IN_ASN
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:155  
     0-0-0/c STRC(288)   r     1 IN_NAME                    0-0-0/c CHAR(8)     r     1 IN_PASS
     0-0-0/c CHAR(4)     r     1 IN_RES                     0-0-0/w STRC(1116)  r     1 IN_SN
     0-0-0/c CHAR(8)     r     1 IN_WSN                     0-0-0/w SBIN        r     1 M$EI#
     0-0-0/w PTR         r     1 M$EI$                      0-0-0/w STRC(504)   r     1 PCB
     0-0-0/d STRC(324)   r     1 RESULTS_FID_IN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$EI
     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w ASTR(153)   r     1 OUT$SYM


   Procedure VPJ$SPE requires 379 words for executable code.
   Procedure VPJ$SPE requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:156  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:157  
          MINI XREF LISTING

ABORT_CMD
      5197**DCL      8634<<REMEMBR  8676<<REMEMBR
ABORT_STEP
      5196**DCL      8635<<REMEMBR  8677<<REMEMBR
B$ALT.CODE
      8196**DCL      8196--REDEF    8197--REDEF    8197--REDEF
B$ALT.ERR.CODE
      8198**DCL      8694>>IF       8708>>IF       8716>>IF       8754>>IF       8786>>IF       8813>>IF
B$ALT.ERR.ERR#
      8198**DCL      8198--REDEF
B$ALT.EVID
      8197**DCL      8197--REDEF    8197--REDEF
B$TCB.ALT$
      8192**DCL      8694>>IF       8708>>IF       8716>>IF       8754>>IF       8786>>IF       8813>>IF
B$TCB$
      5997**DCL      8694>>IF       8708>>IF       8716>>IF       8754>>IF       8786>>IF       8813>>IF
BREAK_LOC
      5232**DCL      5232--REDEF
CMD_MASK
      5234**DCL      8641>>IF       8680>>IF       8742>>IF       8747>>IF
DEF_ICB.FID.STRING
      5830**DCL      5831--REDEF
DEV_ICB.FID.STRING
      5716**DCL      5717--REDEF
EI_KEY.KEY
      5928**DCL      5928--REDEF    5928--REDEF    5928--REDEF
EO_OCB.TYPE
      5428**DCL      5429--REDEF
EXPECTED_ALT_2
      8760**LABEL    8758--CALLALT
F$DCB.ACTPOS
      7038**DCL      7038--REDEF
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:158  
F$DCB.ARS
      7013**DCL      7013--REDEF
F$DCB.ATTR
      7031**DCL      7032--REDEF
F$DCB.BORROW
      7046**DCL      7046--REDEF    7046--REDEF    7046--REDEF
F$DCB.DCBNAME.L
      7060**DCL      7060--IMP-SIZ
F$DCB.EOMCHAR
      7017**DCL      7017--REDEF
F$DCB.FCD
      7026**DCL      8780>>IF       8831>>IF
F$DCB.FLDID
      7041**DCL      7041--REDEF
F$DCB.FORM$
      7035**DCL      7035--REDEF
F$DCB.FSECT
      7051**DCL      7051--REDEF
F$DCB.FSN
      7028**DCL      7028--REDEF    7028--REDEF    7029--REDEF    8783>>ASSIGN   8789>>ASSIGN
F$DCB.HEADER$
      7034**DCL      7034--REDEF
F$DCB.IXTNSIZE
      7032**DCL      7032--REDEF
F$DCB.LASTSTA$
      7022**DCL      7022--REDEF
F$DCB.LVL
      7047**DCL      7047--REDEF
F$DCB.NAME.C
      7022**DCL      7022--REDEF
F$DCB.NOEOF
      7043**DCL      7043--REDEF
F$DCB.NRECS
      7033**DCL      7033--REDEF
F$DCB.NRECX
      7052**DCL      7052--REDEF
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:159  
F$DCB.OHDR
      7044**DCL      7044--REDEF
F$DCB.ORG
      7027**DCL      7027--REDEF
F$DCB.PRECNO
      7050**DCL      7050--REDEF
F$DCB.RCSZ
      7055**DCL      7055--REDEF
F$DCB.RES
      7023**DCL      7023--REDEF
F$DCB.SETX
      7035**DCL      7035--REDEF
F$DCB.TAB$
      7034**DCL      7035--REDEF
F$DCB.TDA
      7049**DCL      7049--REDEF
F$DCB.WSN
      7024**DCL      7024--REDEF
FPT_CLOSEI
      8400**DCL      8782<>CALL     8833<>CALL
FPT_CLOSEI.SN_
      8400**DCL      8400--REDEF
FPT_CLOSEI.UTL_
      8401**DCL      8401--REDEF
FPT_CLOSEI.V
      8405**DCL      8400--DCLINIT
FPT_CLOSEI.V.EXPIRE#
      8415**DCL      8415--REDEF
FPT_CLOSEI.V.POS#
      8413**DCL      8636<<ASSIGN   8774<<ASSIGN
FPT_CLOSEI.V.TYPE#
      8413**DCL      8413--REDEF
FPT_CLOSEI.V.XTNSIZE#
      8410**DCL      8410--REDEF    8412--REDEF
FPT_CLOSE_EI.SN_
      6769**DCL      6769--REDEF
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:160  
FPT_CLOSE_EI.UTL_
      6770**DCL      6770--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6784**DCL      6784--REDEF
FPT_CLOSE_EI.V.TYPE#
      6782**DCL      6782--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6779**DCL      6779--REDEF    6781--REDEF
FPT_CLOSE_PTL.SN_
      6895**DCL      6895--REDEF
FPT_CLOSE_PTL.UTL_
      6896**DCL      6896--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6910**DCL      6910--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6908**DCL      6908--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6905**DCL      6905--REDEF    6907--REDEF
FPT_CLOSE_READ.SN_
      6811**DCL      6811--REDEF
FPT_CLOSE_READ.UTL_
      6812**DCL      6812--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6826**DCL      6826--REDEF
FPT_CLOSE_READ.V.TYPE#
      6824**DCL      6824--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6821**DCL      6821--REDEF    6823--REDEF
FPT_CLOSE_SI.SN_
      6979**DCL      6979--REDEF
FPT_CLOSE_SI.UTL_
      6980**DCL      6980--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6994**DCL      6994--REDEF
FPT_CLOSE_SI.V.TYPE#
      6992**DCL      6992--REDEF
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:161  
FPT_CLOSE_SI.V.XTNSIZE#
      6989**DCL      6989--REDEF    6991--REDEF
FPT_CLOSE_STD.SN_
      6937**DCL      6937--REDEF
FPT_CLOSE_STD.UTL_
      6938**DCL      6938--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6952**DCL      6952--REDEF
FPT_CLOSE_STD.V.TYPE#
      6950**DCL      6950--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6947**DCL      6947--REDEF    6949--REDEF
FPT_CLSEI_FT.SN_
      6853**DCL      6853--REDEF
FPT_CLSEI_FT.UTL_
      6854**DCL      6854--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6868**DCL      6868--REDEF
FPT_CLSEI_FT.V.TYPE#
      6866**DCL      6866--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6863**DCL      6863--REDEF    6865--REDEF
FPT_FID_IN
      6011**DCL      8639<>CALL
FPT_FID_IN.TEXTFID_
      6011**DCL      8637<<ASSIGN
FPT_OPEN_EI
      6422**DCL      8654<<ASSIGN   8687<>CALL     8701<>CALL     8750<>CALL     8778<>CALL     8797<>CALL
      8802<>CALL
FPT_OPEN_EI.ACCT_
      6426**DCL      8666<<ASSIGN
FPT_OPEN_EI.ACSVEH_
      6424**DCL      6425--REDEF
FPT_OPEN_EI.ALTKEYS_
      6430**DCL      6431--REDEF    6431--REDEF
FPT_OPEN_EI.HDR_
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:162  
      6429**DCL      6430--REDEF
FPT_OPEN_EI.NAME_
      6423**DCL      8663<<ASSIGN   8685<<ASSIGN   8775>>IF       8795<<ASSIGN
FPT_OPEN_EI.PASS_
      6424**DCL      8669<<ASSIGN
FPT_OPEN_EI.SN_
      6422**DCL      8672<<ASSIGN
FPT_OPEN_EI.TAB_
      6428**DCL      6429--REDEF
FPT_OPEN_EI.UHL_
      6422**DCL      6423--REDEF    6423--REDEF
FPT_OPEN_EI.V.ASN#
      6441**DCL      8656<<ASSIGN
FPT_OPEN_EI.V.CVOL#
      6436**DCL      8658<<ASSIGN
FPT_OPEN_EI.V.FINDPOS#
      6437**DCL      8659<<ASSIGN
FPT_OPEN_EI.V.FSN#
      6462**DCL      6462--REDEF    6462--REDEF    8686<<ASSIGN   8796<<ASSIGN
FPT_OPEN_EI.V.INITZ.SCRUB#
      6432**DCL      8655<<ASSIGN
FPT_OPEN_EI.V.OPER.NXTF#
      6434**DCL      8777<<ASSIGN   8794<<ASSIGN
FPT_OPEN_EI.V.ORG#
      6442**DCL      8657<<ASSIGN
FPT_OPEN_EI.V.RES#
      6446**DCL      8660<<ASSIGN
FPT_OPEN_EI.V.VOL#
      6456**DCL      8679<<ASSIGN
FPT_OPEN_EI.WSN_
      6428**DCL      6428--REDEF    8675<<ASSIGN
FPT_OPEN_EI_SAVE
      6531**DCL      8654>>ASSIGN
FPT_OPEN_EI_SAVE.ACSVEH_
      6533**DCL      6534--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:163  
      6539**DCL      6540--REDEF    6540--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6538**DCL      6539--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6537**DCL      6538--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6531**DCL      6532--REDEF    6532--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6571**DCL      6571--REDEF    6571--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6537**DCL      6537--REDEF
FPT_OPEN_OUT.ACSVEH_
      6315**DCL      6316--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6321**DCL      6322--REDEF    6322--REDEF
FPT_OPEN_OUT.HDR_
      6320**DCL      6321--REDEF
FPT_OPEN_OUT.TAB_
      6319**DCL      6320--REDEF
FPT_OPEN_OUT.UHL_
      6313**DCL      6314--REDEF    6314--REDEF
FPT_OPEN_OUT.V.FSN#
      6353**DCL      6353--REDEF    6353--REDEF
FPT_OPEN_OUT.WSN_
      6319**DCL      6319--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6206**DCL      6207--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6212**DCL      6213--REDEF    6213--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6211**DCL      6212--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6210**DCL      6211--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6204**DCL      6205--REDEF    6205--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:164  
      6244**DCL      6244--REDEF    6244--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6210**DCL      6210--REDEF
FPT_PFIL
      8349**DCL      8705<>CALL     8712<>CALL     8809<>CALL     8811<>CALL     8818<>CALL     8824<>CALL
FPT_PFIL.V
      8349**DCL      8349--DCLINIT
FPT_PFIL.V.BOF#
      8350**DCL      8702<<ASSIGN   8711<<ASSIGN   8807<<ASSIGN   8817<<ASSIGN   8822<<ASSIGN
FPT_PRECORD
      8364**DCL      8752<>CALL     8758<>CALL
FPT_PRECORD.V
      8366**DCL      8364--DCLINIT
FPT_PRECORD.V.N#
      8370**DCL      8751<<ASSIGN   8757<<ASSIGN
FPT_READ
      8312**DCL      8706<>CALL
FPT_READ.STATION_
      8315**DCL      8316--REDEF
FPT_READ.V
      8316**DCL      8312--DCLINIT
FPT_READ.V.DVBYTE.REREAD#
      8327**DCL      8327--REDEF
FPT_READ.V.INDX#
      8325**DCL      8325--REDEF
FPT_READ_STD.STATION_
      6634**DCL      6635--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6646**DCL      6646--REDEF
FPT_READ_STD.V.INDX#
      6644**DCL      6644--REDEF
FPT_READ_UC.STATION_
      6595**DCL      6596--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6607**DCL      6607--REDEF
FPT_READ_UC.V.INDX#
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:165  
      6605**DCL      6605--REDEF
FPT_WRITE_ME.STATION_
      6703**DCL      6703--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6710**DCL      6710--REDEF
FPT_WRITE_OUT.STATION_
      6734**DCL      6734--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6741**DCL      6741--REDEF
FPT_WRITE_UC.STATION_
      6672**DCL      6672--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6679**DCL      6679--REDEF
FROM_SN.SN
      5578**DCL      5579--REDEF
FSN
      8289**DCL      8783<<ASSIGN   8789<<ASSIGN   8796>>ASSIGN
GETCMD.OUT$
      4785**DCL      4791--REDEF
I
      8290**DCL      8678<>CALL     8679>>ASSIGN   8808<<DOINDEX  8823<<DOINDEX
ICB
      5583**DCL      8640<>CALL
ICB.DEV_MASK
      5652**DCL      8648>>IF
ICB.DEV_MASK.DEV_TAPE
      5656**DCL      8641>>IF
ICB.DEV_MASK.MAN_TAPE
      5655**DCL      8682>>IF       8771>>IF
ICB.FID.STRING
      5602**DCL      5603--REDEF
IFSFA_PARAM.EOMCHAR#
      5957**DCL      5958--REDEF
IFSFA_PARAM.SIG1
      5951**DCL      5951--REDEF
IFSFA_PARAM.SIG2
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:166  
      5951**DCL      5952--REDEF
IN_ACCT
      5523**DCL      8666--ASSIGN
IN_ASN
      5561**DCL      8656>>ASSIGN
IN_NAME
      5523**DCL      8663--ASSIGN
IN_NAME.LEN
      5523**DCL      8661>>IF
IN_PASS
      5524**DCL      8669--ASSIGN
IN_RES
      5524**DCL      5524--REDEF    8660>>ASSIGN
IN_SN
      5535**DCL      8672--ASSIGN   8678<>CALL     8834<>CALL
IN_SN.SN
      5540**DCL      5541--REDEF
IN_WSN
      5561**DCL      8675--ASSIGN
KEEP_GOING
      8291**DCL      8703<<ASSIGN   8704>>DOWHILE  8713<<ASSIGN
LT_OPEN_SPE_ALT
      8694**LABEL    8687--CALLALT
M$CLOSE
        42**DCL-ENT  8782--CALL     8833--CALL
M$EI#
      5993**DCL      8834<>CALL
M$EI$
      5993**DCL      8780>>IF       8783>>ASSIGN   8789>>ASSIGN   8831>>IF
M$OPEN
        42**DCL-ENT  8687--CALL     8701--CALL     8750--CALL     8778--CALL     8797--CALL     8802--CALL
M$PFIL
        44**DCL-ENT  8705--CALL     8712--CALL     8809--CALL     8811--CALL     8818--CALL     8824--CALL
M$PRECORD
        46**DCL-ENT  8752--CALL     8758--CALL
M$READ
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:167  
        43**DCL-ENT  8706--CALL
MON_ERR
      8837**LABEL    8696--GOTO     8701--CALLALT  8705--CALLALT  8712--CALLALT  8718--GOTO     8750--CALLALT
      8766--GOTO     8782--CALLALT  8788--GOTO     8797--CALLALT  8802--CALLALT  8809--CALLALT  8815--GOTO
      8818--CALLALT  8824--CALLALT
NEVER_STARTED
      8831**LABEL    8634--REMEMBR  8635--REMEMBR
NUM
      8288**DCL      8727<>CALL     8739<<ASSIGN   8739>>ASSIGN   8744<<ASSIGN   8746<<ASSIGN   8751>>ASSIGN
      8791>>IF       8796>>ASSIGN   8803>>IF       8806<<ASSIGN   8806>>ASSIGN   8808>>DOINDEX  8823>>DOINDEX
OCB.TYPE
      5286**DCL      5287--REDEF
OFSFA_PARAM.EOMCHAR#
      5987**DCL      5988--REDEF
OFSFA_PARAM.SIG1
      5981**DCL      5981--REDEF
OFSFA_PARAM.SIG2
      5981**DCL      5982--REDEF
OUT$BLK.NSUBLKS
      8220**DCL      8724>>IF
OUT$BLK.SUBLK$
      8241**DCL      8637>>ASSIGN   8637>>ASSIGN   8727>>CALL     8737>>IF
OUT$SYM.CODE
      8260**DCL      8737>>IF
OUT$SYM.COUNT
      8277**DCL      8280--IMP-SIZ  8637>>ASSIGN
OUT$SYM.TEXT
      8280**DCL      8637--ASSIGN
OUT$SYM.TEXTC$
      8272**DCL      8727<>CALL
OUT_SN.SN
      5558**DCL      5559--REDEF
PCB.OUT$
      4599**DCL      8637>>ASSIGN   8637>>ASSIGN   8724>>IF       8727>>CALL     8737>>IF
READ_ALT
      8708**LABEL    8706--CALLALT
PL6.E3A0      #003=VPJ$SPE File=VPJ$TAPE.:E05TSI                                 WED 07/30/97 07:51 Page:168  
READ_BUF
      8337**DCL      8314--DCLINIT  8315--DCLINIT
RESULTS_FID_IN.ACCT
      6034**DCL      8664>>IF
RESULTS_FID_IN.NAME
      6034**DCL      8661>>IF
RESULTS_FID_IN.PASS
      6034**DCL      8667>>IF
RESULTS_FID_IN.SN
      6034**DCL      8670>>IF
RESULTS_FID_IN.WSN
      6034**DCL      8673>>IF
SPEC_BUF
      5236**DCL      5236--REDEF
SP_ABORT
      8822**LABEL    8676--REMEMBR  8677--REMEMBR  8814--GOTO
VPD$CHECK_VOL
      8444**DCL-ENT  8678--CALL     8834--CALL
VPD$FID
      8462**DCL-ENT  8639--CALL
VPD$GET_IN_DEV_MASK
      8476**DCL-ENT  8640--CALL
VPD$TEXTC_CHARBIN
      8504**DCL-ENT  8727--CALL
VPL$ERR_PROC
      8604**DCL-ENT  8643--CALL     8650--CALL     8688--CALL     8732--CALL     8760--CALL     8837--CALL

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:169  
      838        1        /*T***********************************************************/
      839        2        /*T*                                                         */
      840        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      841        4        /*T*                                                         */
      842        5        /*T***********************************************************/
      843        6        VPJ$WEOF: PROC;
      844        7        /*D* NAME: VPJ$WEOF
      845        8             CALL: CALL VPJ$WEOF;
      846        9             DESCRIPTION: VPJ$WEOF accepts a fid and if that fid specifies a device,
      847       10                          issues an M$WEOF to that device. If it is not a device,
      848       11                          an error is returned.
      849       12        */
      850       13        /**/
      851       14        /*  INCLUDE FILES  */
      852       15        /**/
      853       16        %INCLUDE VP_DATA_R;
      854     7003        /**/
      855     7004        /*  BASED DATA  */
      856     7005        /**/
      857     7006        %PARSE$OUT(STCLASS = BASED);
      858     7051        %PARSE$SYM(STCLASS = BASED);
      859     7089        /**/
      860     7090        /*  CONSTANTS  */
      861     7091        /**/
      862     7092        %FPT_WEOF(FPTN = FPT_WEOF_LOCAL,DCB = M$EO1,STCLASS = CONSTANT);
      863     7106        %FPT_CLOSE(FPTN = FPT_CLOSE,DCB = M$EO1,STCLASS = CONSTANT);
      864     7148        /**/
      865     7149        /*  ENTRY DCLS  */
      866     7150        /**/
      867     7151        %VP_ENTRIES (OMIT=VPJ$WEOF);
      868     7359        /**/
      869     7360        /*  AUTO DATA  */
      870     7361        /**/
      871     7362    1   DCL TAPE_INVOLVED BIT(1);
      872     7363    1   DCL VOL SBIN WORD;
      873     7364        /**/
      874     7365    1           FPT_FID_IN.TEXTFID_   = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:170  
      875     7366    1             OUT$SYM.TEXT);
      876     7367    1           CALL VPD$FID(FPT_FID_IN);
      877     7368    1           IF IN_ASN~=%DEVICE#
      878     7369    1            THEN
      879     7370    1              CALL VPL$ERR_PROC(3,110,'12'O);
      880     7371        /*E* ERROR:   VPJ-00110
      881     7372             MESSAGE: WEOF allowed to devices only
      882     7373        */
      883     7374    1           FPT_OPEN_OUT = FPT_OPEN_OUT_SAVE;
      884     7375    1           FPT_OPEN_OUT.V.DCB# = DCBNUM(M$EO1);
      885     7376    1           FPT_OPEN_OUT.V.ASN# = %DEVICE#;
      886     7377    1           FPT_OPEN_OUT.V.ORG# = %FREE#;
      887     7378    1           FPT_OPEN_OUT.V.RES# = IN_RES;
      888     7379    1           IF SUBSTR(IN_RES,0,2) = 'MT'
      889     7380    1             OR SUBSTR(IN_RES,0,2) = 'FT'
      890     7381    1            THEN
      891     7382    1              TAPE_INVOLVED = '1'B;
      892     7383    1            ELSE
      893     7384    1              TAPE_INVOLVED = '0'B;
      894     7385    1           IF TAPE_INVOLVED
      895     7386    1            THEN
      896     7387    2            DO;
      897     7388    2               CALL VPD$CHECK_VOL(IN_SN,3,,VOL,0); /* What's hanging             */
      898     7389    2               FPT_OPEN_OUT.V.VOL# = VOL;
      899     7390    2               END;
      900     7391    1           IF RESULTS_FID_IN.SN
      901     7392    1            THEN
      902     7393    1              FPT_OPEN_OUT.SN_ = VECTOR(IN_SN);
      903     7394    1           IF RESULTS_FID_IN.WSN
      904     7395    1            THEN
      905     7396    1              FPT_OPEN_OUT.WSN_ = VECTOR(IN_WSN);
      906     7397    1           FPT_OPEN_OUT.V.INITZ.SCRUB# = %YES#;
      907     7398    1           FPT_OPEN_OUT.V.FUN# = %UPDATE#;
      908     7399    1           FPT_OPEN_OUT.V.FUN# = %UPDATE#;
      909     7400    1           IF TAPE_INVOLVED
      910     7401    1            THEN
      911     7402    1              FPT_OPEN_OUT.V.FUN# = %CREATE#;
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:171  
      912     7403    1           CALL M$OPEN(FPT_OPEN_OUT) ALTRET(MON_ERR);
      913     7404    1           CALL M$WEOF(FPT_WEOF_LOCAL) ALTRET(WEOF_ALT);
      914     7405    2           DO WHILE('0'B);
      915     7406    2   WEOF_ALT:  CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);
      916     7407    2              GOTO MON_ERR;
      917     7408    2   DUMMY:     END;
      918     7409    1           IF TAPE_INVOLVED
      919     7410    1            THEN
      920     7411    1              CALL VPD$CHECK_VOL(IN_SN,0,M$EO1#,,0); /* Check for VOL transition */
      921     7412    1           CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);
      922     7413    1           RETURN;
      923     7414        /**/
      924     7415    1   MON_ERR: ;
      925     7416    1           CALL VPL$ERR_PROC(3,0,,,,,,0);
      926     7417    1           IF TAPE_INVOLVED
      927     7418    1            THEN
      928     7419    1              CALL VPD$CHECK_VOL(IN_SN,0,M$EO1#,,0); /* Check for VOL transition */
      929     7420    1           CALL VPL$ERR_SEV_HANDLER(3);
      930     7421    1   END VPJ$WEOF;

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:172  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$WEOF.

   Procedure VPJ$WEOF requires 146 words for executable code.
   Procedure VPJ$WEOF requires 14 words of local(AUTO) storage.

    No errors detected in file VPJ$TAPE.:E05TSI    .

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:173  

 Object Unit name= VPJ$WEOF                                   File name= VPJ$TAPE.:E05TOU
 UTS= JUL 30 '97 07:53:47.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10  RoData even  UTS     36     44  VPJ$WEOF
   11   Proc  even  none   146    222  VPJ$WEOF
   12  RoData even  none    20     24  VPJ$WEOF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes            yes      Std        0  VPJ$WEOF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:174  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VPD$FID
         yes           Std       8 VPL$ERR_PROC
         yes           Std       5 VPD$CHECK_VOL
         yes           Std       8 VPL$ERR_SEV_HANDLER
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  PCB                                   BREAK_LOC
     BREAK_MESSAGE_REPORTER                SPEC_BUF                              IN_RES
     IN_SN                                 IN_WSN                                IN_ASN
     M$EI                                  M$EO                                  M$EO1
     M$EO1#                                M$ME                                  M$SI
     M$READFILE                            M$DO                                  M$STD1
     M$SORT1                               FPT_FID_IN                            RESULTS_FID_IN
     FPT_OPEN_OUT_SAVE                     FPT_OPEN_OUT                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:175  


      838        1        /*T***********************************************************/
      839        2        /*T*                                                         */
      840        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      841        4        /*T*                                                         */
      842        5        /*T***********************************************************/
      843        6        VPJ$WEOF: PROC;

      6 11 000000   000000 700200 xent  VPJ$WEOF     TSX0  ! X66_AUTO_0
        11 000001   000016 000000                    ZERO    14,0

      844        7        /*D* NAME: VPJ$WEOF
      845        8             CALL: CALL VPJ$WEOF;
      846        9             DESCRIPTION: VPJ$WEOF accepts a fid and if that fid specifies a device,
      847       10                          issues an M$WEOF to that device. If it is not a device,
      848       11                          an error is returned.
      849       12        */
      850       13        /**/
      851       14        /*  INCLUDE FILES  */
      852       15        /**/
      853       16        %INCLUDE VP_DATA_R;
      854     7003        /**/
      855     7004        /*  BASED DATA  */
      856     7005        /**/
      857     7006        %PARSE$OUT(STCLASS = BASED);
      858     7051        %PARSE$SYM(STCLASS = BASED);
      859     7089        /**/
      860     7090        /*  CONSTANTS  */
      861     7091        /**/
      862     7092        %FPT_WEOF(FPTN = FPT_WEOF_LOCAL,DCB = M$EO1,STCLASS = CONSTANT);
      863     7106        %FPT_CLOSE(FPTN = FPT_CLOSE,DCB = M$EO1,STCLASS = CONSTANT);
      864     7148        /**/
      865     7149        /*  ENTRY DCLS  */
      866     7150        /**/
      867     7151        %VP_ENTRIES (OMIT=VPJ$WEOF);
      868     7359        /**/
      869     7360        /*  AUTO DATA  */
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:176  
      870     7361        /**/
      871     7362    1   DCL TAPE_INVOLVED BIT(1);
      872     7363    1   DCL VOL SBIN WORD;
      873     7364        /**/
      874     7365    1           FPT_FID_IN.TEXTFID_   = VECTOR(PCB.OUT$->OUT$BLK.SUBLK$(0)->

   7365 11 000002   000003 470400 xsym               LDP0    PCB+3
        11 000003   000003 471500                    LDP1    3,,PR0
        11 000004   100004 236100                    LDQ     4,,PR1
        11 000005   000033 772000                    QRL     27
        11 000006   000064 737000                    LLS     52
        11 000007   000140 135007                    SBLA    96,DL
        11 000010   200006 451500                    STP1    VOL+2,,AUTO
        11 000011   200006 236100                    LDQ     VOL+2,,AUTO
        11 000012   000000 036000 12                 ADLQ    0
        11 000013   000002 757000 xsym               STAQ    FPT_FID_IN+2

      875     7366    1             OUT$SYM.TEXT);
      876     7367    1           CALL VPD$FID(FPT_FID_IN);

   7367 11 000014   000001 630400 12                 EPPR0   1
        11 000015   000017 631400 xsym               EPPR1   B_VECTNIL+15
        11 000016   000000 701000 xent               TSX1    VPD$FID
        11 000017   000000 011000                    NOP     0

      877     7368    1           IF IN_ASN~=%DEVICE#

   7368 11 000020   000000 236000 xsym               LDQ     IN_ASN
        11 000021   777000 376003                    ANQ     -512,DU
        11 000022   003000 116003                    CMPQ    1536,DU
        11 000023   000030 600000 11                 TZE     s:7374

      878     7369    1            THEN
      879     7370    1              CALL VPL$ERR_PROC(3,110,'12'O);

   7370 11 000024   000004 630400 12                 EPPR0   4
        11 000025   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:177  
        11 000026   000000 701000 xent               TSX1    VPL$ERR_PROC
        11 000027   000000 011000                    NOP     0

      880     7371        /*E* ERROR:   VPJ-00110
      881     7372             MESSAGE: WEOF allowed to devices only
      882     7373        */
      883     7374    1           FPT_OPEN_OUT = FPT_OPEN_OUT_SAVE;

   7374 11 000030   000000 100400                    MLR     fill='000'O
        11 000031   000000 000350 xsym               ADSC9   FPT_OPEN_OUT_SAVE        cn=0,n=232
        11 000032   000000 000350 xsym               ADSC9   FPT_OPEN_OUT             cn=0,n=232

      884     7375    1           FPT_OPEN_OUT.V.DCB# = DCBNUM(M$EO1);

   7375 11 000033   000000 236007 xsym               LDQ     M$EO1,DL
        11 000034   000000 620006                    EAX0    0,QL
        11 000035   000044 740000 xsym               STX0    FPT_OPEN_OUT+36

      885     7376    1           FPT_OPEN_OUT.V.ASN# = %DEVICE#;

   7376 11 000036   000003 236007                    LDQ     3,DL
        11 000037   000045 552004 xsym               STBQ    FPT_OPEN_OUT+37,'04'O

      886     7377    1           FPT_OPEN_OUT.V.ORG# = %FREE#;

   7377 11 000040   023000 236007                    LDQ     9728,DL
        11 000041   000046 552010 xsym               STBQ    FPT_OPEN_OUT+38,'10'O

      887     7378    1           FPT_OPEN_OUT.V.RES# = IN_RES;

   7378 11 000042   000000 236000 xsym               LDQ     IN_RES
        11 000043   000050 756000 xsym               STQ     FPT_OPEN_OUT+40

      888     7379    1           IF SUBSTR(IN_RES,0,2) = 'MT'

   7379 11 000044   000000 221000 xsym               LDX1    IN_RES
        11 000045   000042 101000 10                 CMPX1   FPT_CLOSE+30
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:178  
        11 000046   000051 600000 11                 TZE     s:7382
        11 000047   000043 101000 10                 CMPX1   FPT_CLOSE+31
        11 000050   000054 601000 11                 TNZ     s:7384

      889     7380    1             OR SUBSTR(IN_RES,0,2) = 'FT'
      890     7381    1            THEN
      891     7382    1              TAPE_INVOLVED = '1'B;

   7382 11 000051   400000 236003                    LDQ     -131072,DU
        11 000052   200003 756100                    STQ     TAPE_INVOLVED,,AUTO
        11 000053   000055 710000 11                 TRA     s:7385

      892     7383    1            ELSE
      893     7384    1              TAPE_INVOLVED = '0'B;

   7384 11 000054   200003 450100                    STZ     TAPE_INVOLVED,,AUTO

      894     7385    1           IF TAPE_INVOLVED

   7385 11 000055   200003 234100                    SZN     TAPE_INVOLVED,,AUTO
        11 000056   000076 605000 11                 TPL     s:7391

      895     7386    1            THEN
      896     7387    2            DO;

      897     7388    2               CALL VPD$CHECK_VOL(IN_SN,3,,VOL,0); /* What's hanging             */

   7388 11 000057   000007 236000 12                 LDQ     7
        11 000060   200012 756100                    STQ     VOL+6,,AUTO
        11 000061   200004 630500                    EPPR0   VOL,,AUTO
        11 000062   200011 450500                    STP0    VOL+5,,AUTO
        11 000063   000001 236000 xsym               LDQ     B_VECTNIL+1
        11 000064   200010 756100                    STQ     VOL+4,,AUTO
        11 000065   000010 237000 12                 LDAQ    8
        11 000066   200006 757100                    STAQ    VOL+2,,AUTO
        11 000067   200006 630500                    EPPR0   VOL+2,,AUTO
        11 000070   000023 631400 xsym               EPPR1   B_VECTNIL+19
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:179  
        11 000071   000000 701000 xent               TSX1    VPD$CHECK_VOL
        11 000072   000000 011000                    NOP     0

      898     7389    2               FPT_OPEN_OUT.V.VOL# = VOL;

   7389 11 000073   200004 236100                    LDQ     VOL,,AUTO
        11 000074   000033 736000                    QLS     27
        11 000075   000061 552040 xsym               STBQ    FPT_OPEN_OUT+49,'40'O

      899     7390    2               END;

      900     7391    1           IF RESULTS_FID_IN.SN

   7391 11 000076   000000 236000 xsym               LDQ     RESULTS_FID_IN
        11 000077   040000 316003                    CANQ    16384,DU
        11 000100   000103 600000 11                 TZE     s:7394

      901     7392    1            THEN
      902     7393    1              FPT_OPEN_OUT.SN_ = VECTOR(IN_SN);

   7393 11 000101   000012 237000 12                 LDAQ    10
        11 000102   000002 757000 xsym               STAQ    FPT_OPEN_OUT+2

      903     7394    1           IF RESULTS_FID_IN.WSN

   7394 11 000103   000000 236000 xsym               LDQ     RESULTS_FID_IN
        11 000104   020000 316003                    CANQ    8192,DU
        11 000105   000110 600000 11                 TZE     s:7397

      904     7395    1            THEN
      905     7396    1              FPT_OPEN_OUT.WSN_ = VECTOR(IN_WSN);

   7396 11 000106   000014 237000 12                 LDAQ    12
        11 000107   000032 757000 xsym               STAQ    FPT_OPEN_OUT+26

      906     7397    1           FPT_OPEN_OUT.V.INITZ.SCRUB# = %YES#;

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:180  
   7397 11 000110   400000 236007                    LDQ     -131072,DL
        11 000111   000044 256000 xsym               ORSQ    FPT_OPEN_OUT+36

      907     7398    1           FPT_OPEN_OUT.V.FUN# = %UPDATE#;

   7398 11 000112   001000 236007                    LDQ     512,DL
        11 000113   000045 552010 xsym               STBQ    FPT_OPEN_OUT+37,'10'O

      908     7399    1           FPT_OPEN_OUT.V.FUN# = %UPDATE#;

   7399 11 000114   000045 552010 xsym               STBQ    FPT_OPEN_OUT+37,'10'O

      909     7400    1           IF TAPE_INVOLVED

   7400 11 000115   200003 234100                    SZN     TAPE_INVOLVED,,AUTO
        11 000116   000121 605000 11                 TPL     s:7403

      910     7401    1            THEN
      911     7402    1              FPT_OPEN_OUT.V.FUN# = %CREATE#;

   7402 11 000117   003000 236007                    LDQ     1536,DL
        11 000120   000045 552010 xsym               STBQ    FPT_OPEN_OUT+37,'10'O

      912     7403    1           CALL M$OPEN(FPT_OPEN_OUT) ALTRET(MON_ERR);

   7403 11 000121   000000 630400 xsym               EPPR0   FPT_OPEN_OUT
        11 000122   450000 713400                    CLIMB   alt,open
        11 000123   410400 401760                    pmme    nvectors=18
        11 000124   000161 702000 11                 TSX2    MON_ERR

      913     7404    1           CALL M$WEOF(FPT_WEOF_LOCAL) ALTRET(WEOF_ALT);

   7404 11 000125   000000 630400 10                 EPPR0   FPT_WEOF_LOCAL
        11 000126   440007 713400                    CLIMB   alt,+16391
        11 000127   400000 401760                    pmme    nvectors=1
        11 000130   000132 702000 11                 TSX2    WEOF_ALT

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:181  
      914     7405    2           DO WHILE('0'B);

   7405 11 000131   000137 710000 11                 TRA     DUMMY

      915     7406    2   WEOF_ALT:  CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);

   7406 11 000132   000004 630400 10    WEOF_ALT     EPPR0   FPT_CLOSE
        11 000133   450001 713400                    CLIMB   alt,close
        11 000134   406000 401760                    pmme    nvectors=13
        11 000135   000161 702000 11                 TSX2    MON_ERR

      916     7407    2              GOTO MON_ERR;

   7407 11 000136   000161 710000 11                 TRA     MON_ERR

      917     7408    2   DUMMY:     END;

   7408 11 000137                       DUMMY        null
      918     7409    1           IF TAPE_INVOLVED

   7409 11 000137   200003 234100                    SZN     TAPE_INVOLVED,,AUTO
        11 000140   000154 605000 11                 TPL     s:7412

      919     7410    1            THEN
      920     7411    1              CALL VPD$CHECK_VOL(IN_SN,0,M$EO1#,,0); /* Check for VOL transition */

   7411 11 000141   000007 236000 12                 LDQ     7
        11 000142   200012 756100                    STQ     VOL+6,,AUTO
        11 000143   000001 236000 xsym               LDQ     B_VECTNIL+1
        11 000144   000016 235000 12                 LDA     14
        11 000145   200010 757100                    STAQ    VOL+4,,AUTO
        11 000146   000020 237000 12                 LDAQ    16
        11 000147   200006 757100                    STAQ    VOL+2,,AUTO
        11 000150   200006 630500                    EPPR0   VOL+2,,AUTO
        11 000151   000023 631400 xsym               EPPR1   B_VECTNIL+19
        11 000152   000000 701000 xent               TSX1    VPD$CHECK_VOL
        11 000153   000000 011000                    NOP     0
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:182  

      921     7412    1           CALL M$CLOSE(FPT_CLOSE) ALTRET(MON_ERR);

   7412 11 000154   000004 630400 10                 EPPR0   FPT_CLOSE
        11 000155   450001 713400                    CLIMB   alt,close
        11 000156   406000 401760                    pmme    nvectors=13
        11 000157   000161 702000 11                 TSX2    MON_ERR

      922     7413    1           RETURN;

   7413 11 000160   000000 702200 xent               TSX2  ! X66_ARET

   7409 11 000161                       MON_ERR      null
      923     7414        /**/
      924     7415    1   MON_ERR: ;
      925     7416    1           CALL VPL$ERR_PROC(3,0,,,,,,0);

   7416 11 000161   000007 236000 12                 LDQ     7
        11 000162   000001 235000 xsym               LDA     B_VECTNIL+1
        11 000163   200014 757100                    STAQ    VOL+8,,AUTO
        11 000164   000001 236000 xsym               LDQ     B_VECTNIL+1
        11 000165   000001 235000 xsym               LDA     B_VECTNIL+1
        11 000166   200012 757100                    STAQ    VOL+6,,AUTO
        11 000167   000001 236000 xsym               LDQ     B_VECTNIL+1
        11 000170   000001 235000 xsym               LDA     B_VECTNIL+1
        11 000171   200010 757100                    STAQ    VOL+4,,AUTO
        11 000172   000022 237000 12                 LDAQ    18
        11 000173   200006 757100                    STAQ    VOL+2,,AUTO
        11 000174   200006 630500                    EPPR0   VOL+2,,AUTO
        11 000175   000026 631400 xsym               EPPR1   B_VECTNIL+22
        11 000176   000000 701000 xent               TSX1    VPL$ERR_PROC
        11 000177   000000 011000                    NOP     0

      926     7417    1           IF TAPE_INVOLVED

   7417 11 000200   200003 234100                    SZN     TAPE_INVOLVED,,AUTO
        11 000201   000215 605000 11                 TPL     s:7420
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:183  

      927     7418    1            THEN
      928     7419    1              CALL VPD$CHECK_VOL(IN_SN,0,M$EO1#,,0); /* Check for VOL transition */

   7419 11 000202   000007 236000 12                 LDQ     7
        11 000203   200012 756100                    STQ     VOL+6,,AUTO
        11 000204   000001 236000 xsym               LDQ     B_VECTNIL+1
        11 000205   000016 235000 12                 LDA     14
        11 000206   200010 757100                    STAQ    VOL+4,,AUTO
        11 000207   000020 237000 12                 LDAQ    16
        11 000210   200006 757100                    STAQ    VOL+2,,AUTO
        11 000211   200006 630500                    EPPR0   VOL+2,,AUTO
        11 000212   000023 631400 xsym               EPPR1   B_VECTNIL+19
        11 000213   000000 701000 xent               TSX1    VPD$CHECK_VOL
        11 000214   000000 011000                    NOP     0

      929     7420    1           CALL VPL$ERR_SEV_HANDLER(3);

   7420 11 000215   000004 630400 12                 EPPR0   4
        11 000216   000017 631400 xsym               EPPR1   B_VECTNIL+15
        11 000217   000000 701000 xent               TSX1    VPL$ERR_SEV_HANDLER
        11 000220   000000 011000                    NOP     0

      930     7421    1   END VPJ$WEOF;

   7421 11 000221   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:184  
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPJ$WEOF.
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:185  

 **** Variables and constants ****

  ****  Section 010 RoData VPJ$WEOF

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(1080)  r     1 FPT_CLOSE                  0-0-0/d STRC(144)   r     1 FPT_WEOF_LOCAL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/b BIT         r     1 TAPE_INVOLVED              4-0-0/w SBIN        r     1 VOL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/d STRC(864)   r     1 FPT_FID_IN                 0-0-0/d STRC(2088)  r     1 FPT_OPEN_OUT
     0-0-0/d STRC(2088)  r     1 FPT_OPEN_OUT_SAVE          0-0-0/b UBIN(9)     r     1 IN_ASN
     0-0-0/c CHAR(4)     r     1 IN_RES                     0-0-0/w STRC(1116)  r     1 IN_SN
     0-0-0/c CHAR(8)     r     1 IN_WSN                     0-0-0/w SBIN        r     1 M$EO1#
     0-0-0/w STRC(504)   r     1 PCB                        0-0-0/d STRC(324)   r     1 RESULTS_FID_IN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$EO1                      0-0-0/w STRC(144)   r     1 OUT$BLK
     0-0-0/w ASTR(153)   r     1 OUT$SYM

PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:186  

   Procedure VPJ$WEOF requires 146 words for executable code.
   Procedure VPJ$WEOF requires 14 words of local(AUTO) storage.

    No errors detected in file VPJ$TAPE.:E05TSI    .
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:187  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:188  
          MINI XREF LISTING

BREAK_LOC
      5223**DCL      5223--REDEF
DEF_ICB.FID.STRING
      5821**DCL      5822--REDEF
DEV_ICB.FID.STRING
      5707**DCL      5708--REDEF
EI_KEY.KEY
      5919**DCL      5919--REDEF    5919--REDEF    5919--REDEF
EO_OCB.TYPE
      5419**DCL      5420--REDEF
FPT_CLOSE
      7129**DCL      7406<>CALL     7412<>CALL
FPT_CLOSE.SN_
      7129**DCL      7129--REDEF
FPT_CLOSE.UTL_
      7130**DCL      7130--REDEF
FPT_CLOSE.V
      7134**DCL      7129--DCLINIT
FPT_CLOSE.V.EXPIRE#
      7144**DCL      7144--REDEF
FPT_CLOSE.V.TYPE#
      7142**DCL      7142--REDEF
FPT_CLOSE.V.XTNSIZE#
      7139**DCL      7139--REDEF    7141--REDEF
FPT_CLOSE_EI.SN_
      6760**DCL      6760--REDEF
FPT_CLOSE_EI.UTL_
      6761**DCL      6761--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6775**DCL      6775--REDEF
FPT_CLOSE_EI.V.TYPE#
      6773**DCL      6773--REDEF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:189  
FPT_CLOSE_EI.V.XTNSIZE#
      6770**DCL      6770--REDEF    6772--REDEF
FPT_CLOSE_PTL.SN_
      6886**DCL      6886--REDEF
FPT_CLOSE_PTL.UTL_
      6887**DCL      6887--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6901**DCL      6901--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6899**DCL      6899--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6896**DCL      6896--REDEF    6898--REDEF
FPT_CLOSE_READ.SN_
      6802**DCL      6802--REDEF
FPT_CLOSE_READ.UTL_
      6803**DCL      6803--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6817**DCL      6817--REDEF
FPT_CLOSE_READ.V.TYPE#
      6815**DCL      6815--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6812**DCL      6812--REDEF    6814--REDEF
FPT_CLOSE_SI.SN_
      6970**DCL      6970--REDEF
FPT_CLOSE_SI.UTL_
      6971**DCL      6971--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6985**DCL      6985--REDEF
FPT_CLOSE_SI.V.TYPE#
      6983**DCL      6983--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6980**DCL      6980--REDEF    6982--REDEF
FPT_CLOSE_STD.SN_
      6928**DCL      6928--REDEF
FPT_CLOSE_STD.UTL_
      6929**DCL      6929--REDEF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:190  
FPT_CLOSE_STD.V.EXPIRE#
      6943**DCL      6943--REDEF
FPT_CLOSE_STD.V.TYPE#
      6941**DCL      6941--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6938**DCL      6938--REDEF    6940--REDEF
FPT_CLSEI_FT.SN_
      6844**DCL      6844--REDEF
FPT_CLSEI_FT.UTL_
      6845**DCL      6845--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6859**DCL      6859--REDEF
FPT_CLSEI_FT.V.TYPE#
      6857**DCL      6857--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6854**DCL      6854--REDEF    6856--REDEF
FPT_FID_IN
      6002**DCL      7367<>CALL
FPT_FID_IN.TEXTFID_
      6002**DCL      7365<<ASSIGN
FPT_OPEN_EI.ACSVEH_
      6415**DCL      6416--REDEF
FPT_OPEN_EI.ALTKEYS_
      6421**DCL      6422--REDEF    6422--REDEF
FPT_OPEN_EI.HDR_
      6420**DCL      6421--REDEF
FPT_OPEN_EI.TAB_
      6419**DCL      6420--REDEF
FPT_OPEN_EI.UHL_
      6413**DCL      6414--REDEF    6414--REDEF
FPT_OPEN_EI.V.FSN#
      6453**DCL      6453--REDEF    6453--REDEF
FPT_OPEN_EI.WSN_
      6419**DCL      6419--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6524**DCL      6525--REDEF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:191  
FPT_OPEN_EI_SAVE.ALTKEYS_
      6530**DCL      6531--REDEF    6531--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6529**DCL      6530--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6528**DCL      6529--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6522**DCL      6523--REDEF    6523--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6562**DCL      6562--REDEF    6562--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6528**DCL      6528--REDEF
FPT_OPEN_OUT
      6304**DCL      7374<<ASSIGN   7403<>CALL
FPT_OPEN_OUT.ACSVEH_
      6306**DCL      6307--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6312**DCL      6313--REDEF    6313--REDEF
FPT_OPEN_OUT.HDR_
      6311**DCL      6312--REDEF
FPT_OPEN_OUT.SN_
      6304**DCL      7393<<ASSIGN
FPT_OPEN_OUT.TAB_
      6310**DCL      6311--REDEF
FPT_OPEN_OUT.UHL_
      6304**DCL      6305--REDEF    6305--REDEF
FPT_OPEN_OUT.V.ASN#
      6323**DCL      7376<<ASSIGN
FPT_OPEN_OUT.V.DCB#
      6313**DCL      7375<<ASSIGN
FPT_OPEN_OUT.V.FSN#
      6344**DCL      6344--REDEF    6344--REDEF
FPT_OPEN_OUT.V.FUN#
      6323**DCL      7398<<ASSIGN   7399<<ASSIGN   7402<<ASSIGN
FPT_OPEN_OUT.V.INITZ.SCRUB#
      6314**DCL      7397<<ASSIGN
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:192  
FPT_OPEN_OUT.V.ORG#
      6324**DCL      7377<<ASSIGN
FPT_OPEN_OUT.V.RES#
      6328**DCL      7378<<ASSIGN
FPT_OPEN_OUT.V.VOL#
      6338**DCL      7389<<ASSIGN
FPT_OPEN_OUT.WSN_
      6310**DCL      6310--REDEF    7396<<ASSIGN
FPT_OPEN_OUT_SAVE
      6195**DCL      7374>>ASSIGN
FPT_OPEN_OUT_SAVE.ACSVEH_
      6197**DCL      6198--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6203**DCL      6204--REDEF    6204--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6202**DCL      6203--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6201**DCL      6202--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6195**DCL      6196--REDEF    6196--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6235**DCL      6235--REDEF    6235--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6201**DCL      6201--REDEF
FPT_READ_STD.STATION_
      6625**DCL      6626--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6637**DCL      6637--REDEF
FPT_READ_STD.V.INDX#
      6635**DCL      6635--REDEF
FPT_READ_UC.STATION_
      6586**DCL      6587--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6598**DCL      6598--REDEF
FPT_READ_UC.V.INDX#
      6596**DCL      6596--REDEF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:193  
FPT_WEOF_LOCAL
      7103**DCL      7404<>CALL
FPT_WEOF_LOCAL.V
      7103**DCL      7103--DCLINIT
FPT_WRITE_ME.STATION_
      6694**DCL      6694--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6701**DCL      6701--REDEF
FPT_WRITE_OUT.STATION_
      6725**DCL      6725--REDEF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6732**DCL      6732--REDEF
FPT_WRITE_UC.STATION_
      6663**DCL      6663--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6670**DCL      6670--REDEF
FROM_SN.SN
      5569**DCL      5570--REDEF
GETCMD.OUT$
      4776**DCL      4782--REDEF
ICB.FID.STRING
      5593**DCL      5594--REDEF
IFSFA_PARAM.EOMCHAR#
      5948**DCL      5949--REDEF
IFSFA_PARAM.SIG1
      5942**DCL      5942--REDEF
IFSFA_PARAM.SIG2
      5942**DCL      5943--REDEF
IN_ASN
      5552**DCL      7368>>IF
IN_RES
      5515**DCL      5515--REDEF    7378>>ASSIGN   7379>>IF       7379>>IF
IN_SN
      5526**DCL      7388<>CALL     7393--ASSIGN   7411<>CALL     7419<>CALL
IN_SN.SN
      5531**DCL      5532--REDEF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:194  
IN_WSN
      5552**DCL      7396--ASSIGN
M$CLOSE
        33**DCL-ENT  7406--CALL     7412--CALL
M$EO1
      5984**DCL      7375>>ASSIGN
M$EO1#
      5985**DCL      7411<>CALL     7419<>CALL
M$OPEN
        33**DCL-ENT  7403--CALL
M$WEOF
        36**DCL-ENT  7404--CALL
MON_ERR
      7409**LABEL    7403--CALLALT  7406--CALLALT  7407--GOTO     7412--CALLALT
OCB.TYPE
      5277**DCL      5278--REDEF
OFSFA_PARAM.EOMCHAR#
      5978**DCL      5979--REDEF
OFSFA_PARAM.SIG1
      5972**DCL      5972--REDEF
OFSFA_PARAM.SIG2
      5972**DCL      5973--REDEF
OUT$BLK.SUBLK$
      7045**DCL      7365>>ASSIGN   7365>>ASSIGN
OUT$SYM.COUNT
      7081**DCL      7084--IMP-SIZ  7365>>ASSIGN
OUT$SYM.TEXT
      7084**DCL      7365--ASSIGN
OUT_SN.SN
      5549**DCL      5550--REDEF
PCB.OUT$
      4590**DCL      7365>>ASSIGN   7365>>ASSIGN
RESULTS_FID_IN.SN
      6025**DCL      7391>>IF
RESULTS_FID_IN.WSN
      6025**DCL      7394>>IF
PL6.E3A0      #004=VPJ$WEOF File=VPJ$TAPE.:E05TSI                                WED 07/30/97 07:53 Page:195  
SPEC_BUF
      5227**DCL      5227--REDEF
TAPE_INVOLVED
      7362**DCL      7382<<ASSIGN   7384<<ASSIGN   7385>>IF       7400>>IF       7409>>IF       7417>>IF
VOL
      7363**DCL      7388<>CALL     7389>>ASSIGN
VPD$CHECK_VOL
      7173**DCL-ENT  7388--CALL     7411--CALL     7419--CALL
VPD$FID
      7191**DCL-ENT  7367--CALL
VPL$ERR_PROC
      7333**DCL-ENT  7370--CALL     7416--CALL
VPL$ERR_SEV_HANDLER
      7334**DCL-ENT  7420--CALL
WEOF_ALT
      7406**LABEL    7404--CALLALT
