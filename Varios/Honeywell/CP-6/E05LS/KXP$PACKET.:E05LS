VERSION E05

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:1    
        1        1        /*M* KXP$PACKET  -  X.25 Handler Packet Level Subroutine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 8         */
        9        9        /*P* NAME: KXP$PACKET */
       10       10        /*P* PURPOSE: This module contains the X.25 packet level */
       11       11        /*P* subroutine and state machine. */
       12       12
       13       13        KXP$PACKET: PROC ( FPT_X25 ) ALTRET;
       14       14
       15       15        /*F* NAME: KXP$PACKET */
       16       16        /*F* PURPOSE: This subroutine does the normal state */
       17       17        /*F* transitions for the X.25 packet level. */
       18       18
       19       19        /*D* NAME: KXP$PACKET */
       20       20        /*D* PURPOSE: This subroutine does the normal state */
       21       21        /*D* transitions for the X.25 packet level. */
       22       22        /*D* CALL: CALL KXP$PACKET (FPT_X25) ALTRET ( label );  */
       23       23        /*D* INPUT: FPT_X25 - generic FPT for reporting events to X.25  */
       24       24        /*D* OUTPUT: none */
       25       25
       26       26        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:2    
       27       27        /*****************************************************************
       28       28        *                                                                *
       29       29        *                           Local macros                         *
       30       30        *                                                                *
       31       31        *****************************************************************/
       32       32
       33       33        %MACRO UNOCTET ( VAR = SOMETHING );
       34       34
       35       35            VAR = BYTE_ARRAY ( BYTE_INDEX );
       36       36            BYTE_INDEX = BYTE_INDEX + 1;
       37       37
       38       38        %MEND;
       39       39        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:3    
       40       40
       41       41        /*****************************************************************
       42       42        *                                                                *
       43       43        *                           Include files                        *
       44       44        *                                                                *
       45       45        *****************************************************************/
       46       46
       47       47        %INCLUDE K_ID_E;
       48       97            %K#ENTID_E;
       49      116            %K#LYRID_E;
       50      123        %INCLUDE KL_MACRO_C;
       51     3475        %INCLUDE KL_AFCN_C;
       52     3576        %INCLUDE LCP_6;
       53     7855        %INCLUDE CP_6_SUBS;
       54     8395        %INCLUDE G_JIT_M;
       55     8660
       56     8661        %INCLUDE KH$CHN;
       57     8783        %INCLUDE KHA_FNC_E;
       58     8883        %INCLUDE KH_MACRO_C;
       59     9626        %INCLUDE KL_SUPER_C;
       60    12528
       61    12529        %INCLUDE KX_EQUS_E;
       62    12968        %INCLUDE KX_PERR_C;
       63    13097        %INCLUDE KX_SCODE_C;
       64    13163        %INCLUDE KX_DATA_C;
       65    13231        %INCLUDE KX_MACROS_M;
       66    14002        %INCLUDE KV_GLBCNS_E;
       67    14343        %INCLUDE K_ADDRESS_M;
       68    14846        %INCLUDE KNH_MACRO_C;
       69    15129        %INCLUDE KV$VDH;
       70    15560        %INCLUDE KV$GLB;
       71    15979        %INCLUDE KV$GLBCTX;
       72    16424        %INCLUDE KV_GLB_M;
       73    16546            %KV#CQ_HNDID_E;
       74    16551            %KV_SCHRSN_E;
       75    16558        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:4    
       76    16559        /*****************************************************************
       77    16560        *                                                                *
       78    16561        *                           Refs (inside X.25)                   *
       79    16562        *                                                                *
       80    16563        *****************************************************************/
       81    16564
       82    16565    1   DCL KXC$CNCMNG ENTRY (1) ALTRET;
       83    16566    1   DCL KXF$FRAME ENTRY (1) ALTRET;
       84    16567    1   DCL KXS$GETBFR ENTRY (3) ALTRET;
       85    16568    1   DCL KXV$VCNTW ENTRY(1);
       86    16569    1   DCL KVM$SNDCQ ENTRY(1) ALTRET;
       87    16570    1   DCL KXS$GETL3 ENTRY(3) ALTRET;
       88    16571    1   DCL KXS$RLSBFR ENTRY (1);
       89    16572    1   DCL KXS$RLSL3 ENTRY (1);
       90    16573    1   DCL KXS$RLSL3_MAYBE ENTRY (1);
       91    16574    1   DCL KXS$SYSLOG ENTRY(7);
       92    16575    1   DCL KXS$Q_SYSLOG ENTRY (1);
       93    16576    1   DCL KXX$X29 ENTRY (1);
       94    16577        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:5    
       95    16578        /*****************************************************************
       96    16579        *                                                                *
       97    16580        *                           Refs (outside X.25)                  *
       98    16581        *                                                                *
       99    16582        *****************************************************************/
      100    16583
      101    16584    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      102    16585    1   DCL KVB$GET2NSYS ENTRY (2) ALTRET;
      103    16586    1   DCL KVV$VDI ENTRY (1) ALTRET;
      104    16587    1   DCL KXX$INTCNC ENTRY (2) ALTRET;
      105    16588    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
      106    16589    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
      107    16590    1   DCL KHD$SCREECH ENTRY (1);
      108    16591    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      109    16592    1   DCL KHA$GET_CTX_PTR ENTRY (2) ALTRET;
      110    16593        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:6    
      111    16594        /*****************************************************************
      112    16595        *                                                                *
      113    16596        *                           Local equates                        *
      114    16597        *                                                                *
      115    16598        *****************************************************************/
      116    16599        /*****************************************************************
      117    16600        *                                                                *
      118    16601        *                           Action types                         *
      119    16602        *                                                                *
      120    16603        *****************************************************************/
      121    16604
      122    16605
      123    16606        %EQU Y_ACT_NULL#       =  0;
      124    16607        %EQU Y_ACT_SCREECH#    =  1;
      125    16608        %EQU Y_ACT_DWN#        =  2;
      126    16609        %EQU Y_ACT_CLR_P3#     =  3;
      127    16610        %EQU Y_ACT_DCL#        =  4;
      128    16611        %EQU Y_ACT_DLY#        =  5;
      129    16612        %EQU Y_ACT_RMTDCL#     =  6;
      130    16613        %EQU Y_ACT_CLR_TO#     =  7;
      131    16614        %EQU Y_ACT_CLRRCV#     =  8;
      132    16615        /*N*   %EQU Y_ACT_CLR_CC#     =  9;   not used any more   */
      133    16616        %EQU Y_ACT_RST_PRS#    = 10;
      134    16617        %EQU Y_ACT_CLR_RSTTO#  = 11;
      135    16618        %EQU Y_ACT_CLR_UP#     = 12;
      136    16619        %EQU Y_ACT_RLS#        = 13;
      137    16620        %EQU Y_ACT_VCUP#       = 14;
      138    16621        %EQU Y_ACT_VCDWN#      = 15;
      139    16622        %EQU Y_ACT_RSTCMP#     = 16;
      140    16623        %EQU Y_ACT_VCLST#      = 17;
      141    16624        %EQU Y_ACT_CLR_P2#     = 18;
      142    16625        %EQU Y_ACT_CLR_CALTO#  = 19;
      143    16626        %EQU Y_ACT_RST_D1#     = 20;
      144    16627        %EQU Y_ACT_STOP#       = 21;
      145    16628        %EQU Y_ACT_CLR_P4#     = 22;
      146    16629        %EQU Y_ACT_RSTRCV#     = 23;
      147    16630        %EQU Y_ACT_RESTART#    = 24;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:7    
      148    16631        %EQU Y_ACT_CLR_DISC#   = 25;
      149    16632        %EQU Y_ACT_ACK#        = 26;
      150    16633        %EQU Y_ACT_INTC#       = 27;
      151    16634        %EQU Y_ACT_INT#        = 28;
      152    16635        %EQU Y_ACT_DSB#        = 29;
      153    16636        %EQU Y_ACT_CALEST#     = 30;
      154    16637        /*N* This is equivalent to call.   %EQU Y_ACT_NEWCALL#    = 31; */
      155    16638        %EQU Y_ACT_VCLST_NCLR# = 32;
      156    16639        %EQU Y_ACT_FLOW#       = 33;
      157    16640        %EQU Y_ACT_DATIN#      = 34;
      158    16641        %EQU Y_ACT_DATOUT#     = 35;
      159    16642        %EQU Y_ACT_INTOUT#     = 36;
      160    16643        %EQU Y_ACT_VCRST#      = 37;
      161    16644        %EQU Y_ACT_CALL#       = 38;
      162    16645        %EQU Y_ACT_STOP_KD#    = 39;
      163    16646        %EQU Y_ACT_VCDWN_NCLR# = 40;
      164    16647        %EQU Y_ACT_CLR_CALL#   = 41;
      165    16648        %EQU Y_ACT_PVCDWN#     = 42;
      166    16649        %EQU Y_ACT_PVCUP#      = 43;
      167    16650        %EQU Y_ACT_RPVCDWN#    = 44;  /* this case is actually handled in RSTRCV# */
      168    16651        %EQU Y_ACT_RPVCUP#     = 45;  /* this case is actually handled in RSTRCV# */
      169    16652        %EQU Y_ACT_CLRC#       = 46;
      170    16653        %EQU Y_ACT_SP1#        = 47;
      171    16654        %EQU Y_ACT_SP2#        = 48;
      172    16655        %EQU Y_ACT_SP3#        = 49;
      173    16656        %EQU Y_ACT_MAX#        = 49;
      174    16657
      175    16658        %EQU L0 = 5+KX_EXT; /* Packet length for TYPE only. */
      176    16659        %EQU L1 = 6+KX_EXT; /* Packet length for TYPE and CAUSE. */
      177    16660        %EQU L2 = 7+KX_EXT; /* Packet length for TYPE, CAUSE, and DIAG. */
      178    16661        %EQU LD = 5+2*KX_EXT; /* Packet header length for data, or size for RR/RNR */
      179    16662        %EQU MODULUS = 8+120*KX_EXT; /* Packet id modulus */
      180    16663        %EQU GFI = 1; /* GFI */
      181    16664        %EQU GFI_EXT = 2;  /* Extended format */
      182    16665        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:8    
      183    16666        /*****************************************************************
      184    16667        *                                                                *
      185    16668        *                           Event types                          *
      186    16669        *                                                                *
      187    16670        *****************************************************************/
      188    16671
      189    16672        %EQU Y_EV_START#       =  0;
      190    16673        %EQU Y_EV_STOP#        =  1;
      191    16674        %EQU Y_EV_DIED#        =  2;
      192    16675        %EQU Y_EV_ENABLE#      =  3;
      193    16676        %EQU Y_EV_DISCONNECT#  =  4;
      194    16677        %EQU Y_EV_DISABLE#     =  5;
      195    16678        %EQU Y_EV_VCUP#        =  6;
      196    16679        %EQU Y_EV_VCRST#       =  7;
      197    16680        %EQU Y_EV_VCDWN#       =  8;
      198    16681        %EQU Y_EV_VCLST#       =  9;
      199    16682        %EQU Y_EV_CALL#        = 10;
      200    16683        %EQU Y_EV_RPVCUP#      = 10;
      201    16684        %EQU Y_EV_CALL_C#      = 11;
      202    16685        %EQU Y_EV_CLEAR#       = 12;
      203    16686        %EQU Y_EV_RPVCDWN#     = 12;
      204    16687        %EQU Y_EV_CLEAR_C#     = 13;
      205    16688        %EQU Y_EV_DATA_IN#     = 14;
      206    16689        %EQU Y_EV_RR#          = 15;
      207    16690        %EQU Y_EV_RNR#         = 16;
      208    16691        %EQU Y_EV_INT#         = 17;
      209    16692        %EQU Y_EV_INT_C#       = 18;
      210    16693        %EQU Y_EV_RESET#       = 19;
      211    16694        %EQU Y_EV_RESET_C#     = 20;
      212    16695        %EQU Y_EV_UNK_TYPE#    = 21;
      213    16696        %EQU Y_EV_SHORT_GFI#   = 22;
      214    16697        %EQU Y_EV_BAD_PRS#     = 23;
      215    16698        %EQU Y_EV_BAD_CALL#    = 24;
      216    16699        %EQU Y_EV_TO#          = 25;
      217    16700        %EQU Y_EV_SHR_PKT#     = 26;
      218    16701        %EQU Y_EV_SP1#         = 27;
      219    16702        %EQU Y_EV_SP2#         = 28;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:9    
      220    16703        %EQU Y_EV_SP3#         = 29;
      221    16704        %EQU Y_EV_MAX#         = 29;
      222    16705
      223    16706        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:10   
      224    16707        /*****************************************************************
      225    16708        *                                                                *
      226    16709        *                           Packet types                         *
      227    16710        *                                                                *
      228    16711        *****************************************************************/
      229    16712
      230    16713        %EQU Y_ID_MIN# = BITBIN('01'X);
      231    16714        %EQU Y_ID_RR# = BITBIN('01'X);
      232    16715        %EQU Y_ID_RNR# = BITBIN('05'X);
      233    16716        %EQU Y_ID_REJ# = BITBIN('09'X);
      234    16717        %EQU Y_ID_CALL# = BITBIN('0B'X);
      235    16718        %EQU Y_ID_CALL_C# = BITBIN('0F'X);
      236    16719        %EQU Y_ID_CLEAR# = BITBIN('13'X);
      237    16720        %EQU Y_ID_CLEAR_C# = BITBIN('17'X);
      238    16721        %EQU Y_ID_RESET# = BITBIN('1B'X);
      239    16722        %EQU Y_ID_RESET_C# = BITBIN('1F'X);
      240    16723        %EQU Y_ID_INT# = BITBIN('23'X);
      241    16724        %EQU Y_ID_INT_C# = BITBIN('27'X);
      242    16725        %EQU Y_ID_DIAG# = BITBIN('F1'X);
      243    16726        %EQU Y_ID_RESTART# = BITBIN('FB'X);
      244    16727        %EQU Y_ID_RESTART_C# = BITBIN('FF'X);
      245    16728        %EQU Y_ID_MAX# = BITBIN('FF'X);
      246    16729
      247    16730        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:11   
      248    16731        /*****************************************************************
      249    16732        *                                                                *
      250    16733        *                           Packet sub types                     *
      251    16734        *                                                                *
      252    16735        *****************************************************************/
      253    16736
      254    16737        %EQU Y_PS_MIN# = 0;
      255    16738        %EQU Y_PS_RR# = 0;
      256    16739        %EQU Y_PS_RNR# = 2;
      257    16740        %EQU Y_PS_REJ# = 4;
      258    16741        %EQU Y_PS_MAX# = 4;
      259    16742
      260    16743        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:12   
      261    16744        /*****************************************************************
      262    16745        *                                                                *
      263    16746        *                           States                               *
      264    16747        *                                                                *
      265    16748        *****************************************************************/
      266    16749
      267    16750        %EQU Y_ST_ENB_STOP#    =  0;
      268    16751        %EQU Y_ST_CLR_RLS#     =  1;
      269    16752        %EQU Y_ST_DSB_START#   =  2;
      270    16753        %EQU Y_ST_DSB_STOP#    =  3;
      271    16754        %EQU Y_ST_CALL_RQS#    =  4;
      272    16755        %EQU Y_ST_DOWN#        =  5;
      273    16756        %EQU Y_ST_VCDOWN#      =  6;
      274    16757        %EQU Y_ST_CALL_DELAY#  =  7;
      275    16758        %EQU Y_ST_CALL#        =  8;
      276    16759        %EQU Y_ST_DATA#        =  9;
      277    16760        %EQU Y_ST_RESET#       = 10;
      278    16761        %EQU Y_ST_CLEAR#       = 11;
      279    16762        %EQU Y_ST_SP1#         = 12;
      280    16763        %EQU Y_ST_SP2#         = 13;
      281    16764        %EQU Y_ST_SP3#         = 14;
      282    16765        %EQU Y_ST_MAX#         = 14;
      283    16766
      284    16767        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:13   
      285    16768        /*****************************************************************
      286    16769        *                                                                *
      287    16770        *                           Constant data                        *
      288    16771        *                                                                *
      289    16772        *****************************************************************/
      290    16773
      291    16774        /*****************************************************************
      292    16775        *                                                                *
      293    16776        *                           Level 3 state table                  *
      294    16777        *                                                                *
      295    16778        *****************************************************************/
      296    16779
      297    16780    1   DCL 1 STATE_TABLE UNAL CONSTANT,
      298    16781    1         2 NEXT_STATE (0:%(%(%Y_EV_MAX#+1) * %(%Y_ST_MAX#+1)-1)) UBIN BYTE
      299    16782    1             CALIGNED INIT(
      300    16783        /*
      301    16784            ENB_STOP    The VC is ENABLEd, but the Packet level restart
      302    16785                        process has not been completed.  This is also
      303    16786                        the initial state for incoming calls.
      304    16787        */
      305    16788    1   %Y_ST_DOWN#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      306    16789    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_DSB_STOP#,
      307    16790    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      308    16791    1   %Y_ST_CALL_RQS#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      309    16792    1   %Y_ST_ENB_STOP#,
      310    16793    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      311    16794    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      312    16795    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      313    16796    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      314    16797    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      315    16798        /*
      316    16799            CLR_RLS     This state is only reached for non-SUPERed VCs.
      317    16800                        A Clear packet has been sent.  When the response
      318    16801                        is received, the context is released.
      319    16802        */
      320    16803    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      321    16804    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:14   
      322    16805    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      323    16806    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_DSB_START#,
      324    16807    1   %Y_ST_CLR_RLS#,
      325    16808    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      326    16809    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      327    16810    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      328    16811    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      329    16812    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      330    16813        /*
      331    16814            DSB_START   START has been reported from the Packet level, but
      332    16815                        the VC is DISABLEd.
      333    16816        */
      334    16817    1   %Y_ST_DSB_START#,%Y_ST_DSB_STOP#,%Y_ST_DSB_START#,
      335    16818    1   %Y_ST_DOWN#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      336    16819    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      337    16820    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      338    16821    1   %Y_ST_DSB_START#,
      339    16822    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      340    16823    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      341    16824    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,
      342    16825    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,
      343    16826    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      344    16827        /*
      345    16828            DSB_STOP    Waiting to hear both ENABLE and START before
      346    16829                        using the VC.
      347    16830        */
      348    16831    1   %Y_ST_DSB_START#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      349    16832    1   %Y_ST_ENB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      350    16833    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      351    16834    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      352    16835    1   %Y_ST_DSB_STOP#,
      353    16836    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      354    16837    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      355    16838    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      356    16839    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      357    16840    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      358    16841        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:15   
      359    16842            CALL_RQS    This state is only for non-SUPERed VCs.  A Call
      360    16843                        packet has been received, and the VC has been
      361    16844                        RMTDCLed to the Connection Manager.  Waiting
      362    16845                        for VCUP, VCDWN, or VCLST from CM.
      363    16846        */
      364    16847    1   %Y_ST_CALL_RQS#,%Y_ST_ENB_STOP#,%Y_ST_CALL_RQS#,
      365    16848    1   %Y_ST_CALL_RQS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      366    16849    1   %Y_ST_DATA#,%Y_ST_CALL_RQS#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      367    16850    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_RQS#,%Y_ST_CLEAR#,
      368    16851    1   %Y_ST_CLEAR#,
      369    16852    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      370    16853    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_RQS#,
      371    16854    1   %Y_ST_CALL_RQS#,%Y_ST_CLEAR#,
      372    16855    1   %Y_ST_CALL_RQS#,%Y_ST_CLEAR#,
      373    16856    1   %Y_ST_CALL_RQS#,%Y_ST_CALL_RQS#,%Y_ST_CALL_RQS#,
      374    16857        /*
      375    16858            DOWN        This state is only for SUPERed VCs.  The VC has
      376    16859                        received both ENABLE and START, and CM knows
      377    16860                        about the VC via a DCL.  Now waiting for CM to
      378    16861                        say to start using the VC via VCUP.
      379    16862        */
      380    16863    1   %Y_ST_DOWN#,%Y_ST_ENB_STOP#,%Y_ST_DOWN#,
      381    16864    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      382    16865    1   %Y_ST_CALL#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      383    16866    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      384    16867    1   %Y_ST_DOWN#,
      385    16868    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      386    16869    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      387    16870    1   %Y_ST_DOWN#,%Y_ST_DOWN#,
      388    16871    1   %Y_ST_DOWN#,%Y_ST_DOWN#,
      389    16872    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      390    16873        /*
      391    16874            VCDOWN      CM has told us to stop using a VC via VCDWN.  A
      392    16875                        Clear packet has been sent.  When a response is
      393    16876                        received, either transition to DOWN (for SUPERed
      394    16877                        VCs) or release the context (non-SUPERed VCs).
      395    16878        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:16   
      396    16879    1   %Y_ST_VCDOWN#,%Y_ST_ENB_STOP#,%Y_ST_VCDOWN#,
      397    16880    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      398    16881    1   %Y_ST_CLEAR#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      399    16882    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      400    16883    1   %Y_ST_VCDOWN#,
      401    16884    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      402    16885    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      403    16886    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      404    16887    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      405    16888    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      406    16889        /*
      407    16890            CALL_DELAY  A VC has just completed a clear procedure, and
      408    16891                        is sitting here as a simpe delay before sending
      409    16892                        another Call packet.  Only SUPERed VCs can reach
      410    16893                        this state.
      411    16894        */
      412    16895    1   %Y_ST_CALL_DELAY#,%Y_ST_ENB_STOP#,%Y_ST_CALL_DELAY#,
      413    16896    1   %Y_ST_CALL_DELAY#,%Y_ST_DOWN#,%Y_ST_DSB_START#,
      414    16897    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_DOWN#,%Y_ST_CLR_RLS#,
      415    16898    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      416    16899    1   %Y_ST_CALL_DELAY#,
      417    16900    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      418    16901    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      419    16902    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      420    16903    1   %Y_ST_DOWN#,%Y_ST_CALL_DELAY#,
      421    16904    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      422    16905        /*
      423    16906            CALL        A Call packet has been sent.  Waiting for a
      424    16907                        response.
      425    16908        */
      426    16909    1   %Y_ST_CALL#,%Y_ST_ENB_STOP#,%Y_ST_CALL#,
      427    16910    1   %Y_ST_CALL#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      428    16911    1   %Y_ST_CALL#,%Y_ST_CALL#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      429    16912    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_CALL_DELAY#,%Y_ST_CLEAR#,
      430    16913    1   %Y_ST_CLEAR#,
      431    16914    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      432    16915    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:17   
      433    16916    1   %Y_ST_CALL#,%Y_ST_CLEAR#,
      434    16917    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,
      435    16918    1   %Y_ST_CALL#,%Y_ST_CALL#,%Y_ST_CALL#,
      436    16919        /*
      437    16920            DATA        Call set-up procedures have been completed, and
      438    16921                        the VC is in normal data transfer state.
      439    16922        */
      440    16923    1   %Y_ST_DATA#,%Y_ST_ENB_STOP#,%Y_ST_DATA#,
      441    16924    1   %Y_ST_DATA#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      442    16925    1   %Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      443    16926    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_DELAY#,%Y_ST_CLEAR#,
      444    16927    1   %Y_ST_DATA#,
      445    16928    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_DATA#,
      446    16929    1   %Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_DATA#,
      447    16930    1   %Y_ST_RESET#,%Y_ST_CLEAR#,
      448    16931    1   %Y_ST_DATA#,%Y_ST_RESET#,
      449    16932    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_DATA#,
      450    16933        /*
      451    16934            RESET       A Reset packet has been sent to start a reset
      452    16935                        procedure.
      453    16936        */
      454    16937    1   %Y_ST_RESET#,%Y_ST_ENB_STOP#,%Y_ST_RESET#,
      455    16938    1   %Y_ST_RESET#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      456    16939    1   %Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      457    16940    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_DELAY#,%Y_ST_CLEAR#,
      458    16941    1   %Y_ST_RESET#,
      459    16942    1   %Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_RESET#,
      460    16943    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_RESET#,
      461    16944    1   %Y_ST_RESET#,%Y_ST_CLEAR#,
      462    16945    1   %Y_ST_CLEAR#,%Y_ST_RESET#,
      463    16946    1   %Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_RESET#,
      464    16947        /*
      465    16948            CLEAR       A Clear packet has been sent to start a clear
      466    16949                        procedure.  When completed, SUPERed VCs will
      467    16950                        go to CALL_DELAY, and non-SUPERed VCs will be
      468    16951                        released.
      469    16952        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:18   
      470    16953    1   %Y_ST_CLEAR#,%Y_ST_ENB_STOP#,%Y_ST_CLEAR#,
      471    16954    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      472    16955    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      473    16956    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      474    16957    1   %Y_ST_CLEAR#,
      475    16958    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      476    16959    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      477    16960    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,
      478    16961    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,
      479    16962    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      480    16963        /*
      481    16964            SP1         Spare state #1.
      482    16965        */
      483    16966    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      484    16967    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      485    16968    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      486    16969    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      487    16970    1   %Y_ST_SP1#,
      488    16971    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      489    16972    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      490    16973    1   %Y_ST_SP1#,%Y_ST_SP1#,
      491    16974    1   %Y_ST_SP1#,%Y_ST_SP1#,
      492    16975    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      493    16976        /*
      494    16977            SP2         Spare state #2.
      495    16978        */
      496    16979    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      497    16980    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      498    16981    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      499    16982    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      500    16983    1   %Y_ST_SP2#,
      501    16984    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      502    16985    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      503    16986    1   %Y_ST_SP2#,%Y_ST_SP2#,
      504    16987    1   %Y_ST_SP2#,%Y_ST_SP2#,
      505    16988    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      506    16989        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:19   
      507    16990            SP3         Spare state #3.
      508    16991        */
      509    16992    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      510    16993    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      511    16994    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      512    16995    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      513    16996    1   %Y_ST_SP3#,
      514    16997    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      515    16998    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      516    16999    1   %Y_ST_SP3#,%Y_ST_SP3#,
      517    17000    1   %Y_ST_SP3#,%Y_ST_SP3#,
      518    17001    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#       ),
      519    17002
      520    17003        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:20   
      521    17004    1         2 ACTION (0:%(%(%Y_EV_MAX# + 1) * %(%Y_ST_MAX# + 1)-1)) UBIN BYTE
      522    17005    1             CALIGNED INIT(
      523    17006        /*
      524    17007
      525    17008            Actions for state ENB_STOP.
      526    17009
      527    17010        */
      528    17011    1   %Y_ACT_DCL#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      529    17012    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      530    17013    1   %Y_ACT_NULL#,%Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      531    17014    1   %Y_ACT_RMTDCL#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      532    17015    1   %Y_ACT_SCREECH#,
      533    17016    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      534    17017    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      535    17018    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_CALL#,
      536    17019    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      537    17020    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      538    17021        /*
      539    17022
      540    17023            Actions for state CLR_RLS.
      541    17024
      542    17025        */
      543    17026    1   %Y_ACT_NULL#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      544    17027    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      545    17028    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      546    17029    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      547    17030    1   %Y_ACT_NULL#,
      548    17031    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      549    17032    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      550    17033    1   %Y_ACT_NULL#,%Y_ACT_NULL#,
      551    17034    1   %Y_ACT_CLR_TO#,%Y_ACT_NULL#,
      552    17035    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      553    17036        /*
      554    17037
      555    17038            Actions for state DSB_START.
      556    17039
      557    17040        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:21   
      558    17041    1   %Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_RLS#,
      559    17042    1   %Y_ACT_DCL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      560    17043    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      561    17044    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      562    17045    1   %Y_ACT_SCREECH#,
      563    17046    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      564    17047    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      565    17048    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      566    17049    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      567    17050    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      568    17051        /*
      569    17052
      570    17053            Actions for state DSB_STOP.
      571    17054
      572    17055        */
      573    17056    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_RLS#,
      574    17057    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      575    17058    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      576    17059    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      577    17060    1   %Y_ACT_SCREECH#,
      578    17061    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      579    17062    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      580    17063    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      581    17064    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      582    17065    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      583    17066        /*
      584    17067
      585    17068            Actions for state CALL_RQS.
      586    17069
      587    17070        */
      588    17071    1   %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,
      589    17072    1   %Y_ACT_NULL#,%Y_ACT_VCLST#,%Y_ACT_VCLST#,
      590    17073    1   %Y_ACT_VCUP#,%Y_ACT_SCREECH#,%Y_ACT_VCDWN#,%Y_ACT_VCLST#,
      591    17074    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P2#,
      592    17075    1   %Y_ACT_CLR_P2#,
      593    17076    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,
      594    17077    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_UP#,%Y_ACT_NULL#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:22   
      595    17078    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_P2#,
      596    17079    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_UP#,
      597    17080    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      598    17081        /*
      599    17082
      600    17083            Actions for state DOWN.
      601    17084
      602    17085        */
      603    17086    1   %Y_ACT_SCREECH#,%Y_ACT_STOP#,%Y_ACT_RLS#,
      604    17087    1   %Y_ACT_NULL#,%Y_ACT_DCL#,%Y_ACT_NULL#,
      605    17088    1   %Y_ACT_CALL#,%Y_ACT_SCREECH#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      606    17089    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      607    17090    1   %Y_ACT_SCREECH#,
      608    17091    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      609    17092    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      610    17093    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      611    17094    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      612    17095    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      613    17096        /*
      614    17097
      615    17098            Actions for state VCDOWN.
      616    17099
      617    17100        */
      618    17101    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      619    17102    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      620    17103    1   %Y_ACT_NULL#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_VCLST_NCLR#,
      621    17104    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_DWN#,%Y_ACT_DWN#,
      622    17105    1   %Y_ACT_NULL#,
      623    17106    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      624    17107    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      625    17108    1   %Y_ACT_NULL#,%Y_ACT_NULL#,
      626    17109    1   %Y_ACT_CLR_TO#,%Y_ACT_NULL#,
      627    17110    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      628    17111        /*
      629    17112
      630    17113            Actions for state CALL_DELAY.
      631    17114
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:23   
      632    17115        */
      633    17116    1   %Y_ACT_SCREECH#,%Y_ACT_STOP#,%Y_ACT_RLS#,
      634    17117    1   %Y_ACT_NULL#,%Y_ACT_DCL#,%Y_ACT_STOP_KD#,
      635    17118    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_VCDWN_NCLR#,%Y_ACT_RLS#,
      636    17119    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      637    17120    1   %Y_ACT_NULL#,
      638    17121    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      639    17122    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      640    17123    1   %Y_ACT_NULL#,%Y_ACT_NULL#,
      641    17124    1   %Y_ACT_DCL#,%Y_ACT_NULL#,
      642    17125    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      643    17126        /*
      644    17127
      645    17128            Actions for state CALL.
      646    17129
      647    17130        */
      648    17131    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      649    17132    1   %Y_ACT_NULL#,%Y_ACT_CLR_DISC#,%Y_ACT_CLR_DISC#,
      650    17133    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_VCDWN#,%Y_ACT_VCDWN#,
      651    17134    1   %Y_ACT_VCUP#,%Y_ACT_CALEST#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P2#,
      652    17135    1   %Y_ACT_CLR_P2#,
      653    17136    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,
      654    17137    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_UP#,%Y_ACT_NULL#,
      655    17138    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_CALL#,
      656    17139    1   %Y_ACT_CLR_CALTO#,%Y_ACT_CLR_UP#,
      657    17140    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      658    17141        /*
      659    17142
      660    17143            Actions for state DATA.
      661    17144
      662    17145        */
      663    17146    1   %Y_ACT_NULL#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      664    17147    1   %Y_ACT_NULL#,%Y_ACT_CLR_DISC#,%Y_ACT_CLR_DISC#,
      665    17148    1   %Y_ACT_SCREECH#,%Y_ACT_VCRST#,%Y_ACT_VCDWN#,%Y_ACT_VCLST#,
      666    17149    1   %Y_ACT_CLR_P4#,%Y_ACT_CLR_P4#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P4#,
      667    17150    1   %Y_ACT_DATIN#,
      668    17151    1   %Y_ACT_FLOW#,%Y_ACT_FLOW#,%Y_ACT_INT#,%Y_ACT_INTC#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:24   
      669    17152    1   %Y_ACT_RSTRCV#,%Y_ACT_RST_D1#,%Y_ACT_RST_D1#,%Y_ACT_NULL#,
      670    17153    1   %Y_ACT_RST_PRS#,%Y_ACT_CLR_P4#,
      671    17154    1   %Y_ACT_ACK#,%Y_ACT_RST_D1#,
      672    17155    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      673    17156        /*
      674    17157
      675    17158            Actions for state RESET.
      676    17159
      677    17160        */
      678    17161    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      679    17162    1   %Y_ACT_NULL#,%Y_ACT_CLR_DISC#,%Y_ACT_CLR_DISC#,
      680    17163    1   %Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_VCDWN#,%Y_ACT_VCLST#,
      681    17164    1   %Y_ACT_CLR_P4#,%Y_ACT_CLR_P4#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P4#,
      682    17165    1   %Y_ACT_NULL#,
      683    17166    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      684    17167    1   %Y_ACT_RSTCMP#,%Y_ACT_RSTCMP#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      685    17168    1   %Y_ACT_NULL#,%Y_ACT_CLR_P4#,
      686    17169    1   %Y_ACT_CLR_RSTTO#,%Y_ACT_NULL#,
      687    17170    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      688    17171        /*
      689    17172
      690    17173            Actions for state CLEAR.
      691    17174
      692    17175        */
      693    17176    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      694    17177    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      695    17178    1   %Y_ACT_NULL#,%Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_VCLST_NCLR#,
      696    17179    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_DLY#,%Y_ACT_DLY#,
      697    17180    1   %Y_ACT_NULL#,
      698    17181    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      699    17182    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      700    17183    1   %Y_ACT_NULL#,%Y_ACT_CLR_P4#,
      701    17184    1   %Y_ACT_CLR_TO#,%Y_ACT_CLR_P4#,
      702    17185    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      703    17186        /*
      704    17187
      705    17188            Actions for state SP1.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:25   
      706    17189
      707    17190        */
      708    17191    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      709    17192    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      710    17193    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      711    17194    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      712    17195    1   %Y_ACT_SCREECH#,
      713    17196    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      714    17197    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      715    17198    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      716    17199    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      717    17200    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      718    17201        /*
      719    17202
      720    17203            Actions for state SP2.
      721    17204
      722    17205        */
      723    17206    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      724    17207    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      725    17208    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      726    17209    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      727    17210    1   %Y_ACT_SCREECH#,
      728    17211    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      729    17212    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      730    17213    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      731    17214    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      732    17215    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      733    17216        /*
      734    17217
      735    17218            Actions for state SP3.
      736    17219
      737    17220        */
      738    17221    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      739    17222    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      740    17223    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      741    17224    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      742    17225    1   %Y_ACT_SCREECH#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:26   
      743    17226    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      744    17227    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      745    17228    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      746    17229    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      747    17230    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#     );
      748    17231
      749    17232        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:27   
      750    17233        /*****************************************************************
      751    17234        *                                                                *
      752    17235        *                           Level 3 state table for PVC          *
      753    17236        *                                                                *
      754    17237        *****************************************************************/
      755    17238
      756    17239    1   DCL 1 PVC_STATE_TABLE UNAL CONSTANT,
      757    17240    1         2 NEXT_STATE (0:%(%(%Y_EV_MAX#+1) * %(%Y_ST_MAX#+1)-1)) UBIN BYTE
      758    17241    1             CALIGNED INIT(
      759    17242    1   /*  0 */  %Y_ST_DOWN#,%Y_ST_ENB_STOP#*29,
      760    17243    1   /*  1 */  %Y_ST_CLR_RLS#*30,
      761    17244    1   /*  2 */  %Y_ST_DSB_START#*30,
      762    17245    1   /*  3 */  %Y_ST_DSB_STOP#*30,
      763    17246    1   /*  4 */  %Y_ST_CALL_RQS#*30,
      764    17247    1   /*  5 */  %Y_ST_DOWN#,%Y_ST_ENB_STOP#,%Y_ST_DOWN#*4,%Y_ST_DATA#,%Y_ST_DOWN#,
      765    17248    1                %Y_ST_VCDOWN#,%Y_ST_DOWN#*11,%Y_ST_DATA#,%Y_ST_DOWN#*9,
      766    17249    1   /*  6 */  %Y_ST_VCDOWN#,%Y_ST_ENB_STOP#,%Y_ST_VCDOWN#*4,%Y_ST_RESET#,
      767    17250    1                %Y_ST_VCDOWN#*3,%Y_ST_DOWN#,%Y_ST_VCDOWN#*19,
      768    17251    1   /*  7 */  %Y_ST_CALL_DELAY#*30,
      769    17252    1   /*  8 */  %Y_ST_CALL#*30,
      770    17253    1   /*  9 */  %Y_ST_DATA#,%Y_ST_ENB_STOP#,%Y_ST_DATA#*5,%Y_ST_RESET#,
      771    17254    1                %Y_ST_VCDOWN#,%Y_ST_DATA#*2,%Y_ST_RESET#,%Y_ST_ENB_STOP#,
      772    17255    1                %Y_ST_RESET#,%Y_ST_DATA#*6,%Y_ST_RESET#*2,%Y_ST_DATA#,
      773    17256    1                %Y_ST_RESET#*2,%Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_DATA#*3,
      774    17257    1   /* 10 */  %Y_ST_RESET#,%Y_ST_ENB_STOP#,%Y_ST_RESET#*6,%Y_ST_VCDOWN#,
      775    17258    1                %Y_ST_RESET#,%Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_ENB_STOP#,
      776    17259    1                %Y_ST_RESET#*6,%Y_ST_DATA#*2,%Y_ST_RESET#*9,
      777    17260    1   /* 11 */  %Y_ST_CLEAR#*30,
      778    17261    1   /* 12 */  %Y_ST_SP1#*30,
      779    17262    1   /* 13 */  %Y_ST_SP2#*30,
      780    17263    1   /* 14 */  %Y_ST_SP3#*30 ),
      781    17264    1         2 ACTION (0:%(%(%Y_EV_MAX#+1) * %(%Y_ST_MAX#+1)-1)) UBIN BYTE
      782    17265    1             CALIGNED INIT(
      783    17266    1   /*  0 */  %Y_ACT_DCL#,%Y_ACT_NULL#,%Y_ACT_RLS#,%Y_ACT_NULL#*5,%Y_ACT_SP1#*2,
      784    17267    1                %Y_ACT_NULL#*20,
      785    17268    1   /*  1 */  %Y_ACT_NULL#*30,
      786    17269    1   /*  2 */  %Y_ACT_NULL#*30,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:28   
      787    17270    1   /*  3 */  %Y_ACT_NULL#*30,
      788    17271    1   /*  4 */  %Y_ACT_NULL#*30,
      789    17272    1   /*  5 */  %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,%Y_ACT_NULL#*3,
      790    17273    1                %Y_ACT_VCUP#,%Y_ACT_NULL#,%Y_ACT_PVCDWN#,%Y_ACT_SP1#,
      791    17274    1                %Y_ACT_NULL#*4,%Y_ACT_DATIN#,%Y_ACT_NULL#*5,
      792    17275    1                %Y_ACT_VCUP#,%Y_ACT_NULL#*9,
      793    17276    1   /*  6 */  %Y_ACT_NULL#*2,%Y_ACT_RLS#,%Y_ACT_NULL#*3,%Y_ACT_PVCUP#,
      794    17277    1                %Y_ACT_NULL#*3,%Y_ACT_RSTRCV#,%Y_ACT_NULL#*9,%Y_ACT_RSTCMP#,
      795    17278    1                %Y_ACT_NULL#*4,%Y_ACT_RESTART#,%Y_ACT_NULL#*4,
      796    17279    1   /*  7 */  %Y_ACT_NULL#*30,
      797    17280    1   /*  8 */  %Y_ACT_NULL#*30,
      798    17281    1   /*  9 */  %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,%Y_ACT_NULL#*4,
      799    17282    1                %Y_ACT_VCRST#,%Y_ACT_PVCDWN#,%Y_ACT_SP1#,%Y_ACT_RSTRCV#,
      800    17283    1                %Y_ACT_RST_D1#,%Y_ACT_RSTRCV#,%Y_ACT_RST_D1#,
      801    17284    1                %Y_ACT_DATIN#,%Y_ACT_FLOW#*2,%Y_ACT_INT#,
      802    17285    1                %Y_ACT_INTC#,%Y_ACT_RSTRCV#,%Y_ACT_RST_D1#*2,%Y_ACT_NULL#,
      803    17286    1                %Y_ACT_RST_PRS#,%Y_ACT_RST_D1#,%Y_ACT_ACK#,%Y_ACT_RST_D1#,
      804    17287    1                %Y_ACT_NULL#*3,
      805    17288    1   /* 10 */  %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,%Y_ACT_NULL#*5,%Y_ACT_PVCDWN#,
      806    17289    1                %Y_ACT_SP1#,%Y_ACT_RSTCMP#,%Y_ACT_NULL#,%Y_ACT_RSTRCV#,
      807    17290    1                %Y_ACT_NULL#*6,%Y_ACT_RSTCMP#*2,%Y_ACT_NULL#*4,%Y_ACT_RESTART#,
      808    17291    1                %Y_ACT_NULL#*4,
      809    17292    1   /* 11 */  %Y_ACT_NULL#*30,
      810    17293    1   /* 12 */  %Y_ACT_NULL#*30,
      811    17294    1   /* 13 */  %Y_ACT_NULL#*30,
      812    17295    1   /* 14 */  %Y_ACT_NULL#*30 );
      813    17296        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:29   
      814    17297        /*****************************************************************
      815    17298        *                                                                *
      816    17299        *                           VLP_ERRCODEs                         *
      817    17300        *                                                                *
      818    17301        *****************************************************************/
      819    17302
      820    17303        /*
      821    17304                                             Informational logs
      822    17305        */
      823    17306
      824    17307        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      825    17308                           FPTN = RESTART,
      826    17309                           ERR# = %E_KXP_RESTART# );
      827    17355        /*E*   ERROR:      KXP-E_KXP_RESTART#-0
      828    17356               MESSAGE:    Restart packet received; Completed restart procedure.
      829    17357                           If VAL0 is greater than 5, VAL1 is the cause field
      830    17358                           and VAL2 is the diagnostic field.
      831    17359        */
      832    17360        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      833    17361                           FPTN = CLRRCV,
      834    17362                           ERR# = %E_KXP_CLRRCV# );
      835    17408        /*E*   ERROR:      KXP-E_KXP_CLRRCV#-0
      836    17409               MESSAGE:    A Clear packet was received.
      837    17410                           If VAL0 is greater than 5,
      838    17411                           VAL1 is the cause field and VAL2 is the
      839    17412                           diagnostic field.
      840    17413        */
      841    17414        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      842    17415                           FPTN = HC_DSC,
      843    17416                           ERR# = %E_KXP_HC_DSC# );
      844    17462        /*E*   ERROR:      KXP-E_KXP_HC_DSC#-0
      845    17463               MESSAGE:    Disconnect request received from handler common.
      846    17464        */
      847    17465        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      848    17466                           FPTN = DCL_EVENT,
      849    17467                           ERR# = %E_KXP_DCL# );
      850    17513        /*E*   ERROR:      KXP-E_KXP_DCL#-0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:30   
      851    17514               MESSAGE:    Reporting DCL event to Connection Manager.
      852    17515        */
      853    17516        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      854    17517                           FPTN = DSB,
      855    17518                           ERR# = %E_KXP_DSB# );
      856    17564        /*E*   ERROR:      KXP-E_KXP_DSB#-0
      857    17565               MESSAGE:    Disable command received from handler common.
      858    17566        */
      859    17567        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      860    17568                           FPTN = RLSACT,
      861    17569                           ERR# = %E_KXP_RLSACT# );
      862    17615        /*E*   ERROR:      KXP-E_KXP_RLSACT#-0
      863    17616               MESSAGE:    Releasing packet level context block.
      864    17617        */
      865    17618        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      866    17619                           FPTN = RMTDCL,
      867    17620                           ERR# = %E_KXP_RMTDCL# );
      868    17666        /*E*   ERROR:      KXP-E_KXP_RMTDCL#-0
      869    17667               MESSAGE:    Reporting RMTDCL event to Connection Manager.
      870    17668        */
      871    17669        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      872    17670                           FPTN = RSTCMP,
      873    17671                           ERR# = %E_KXP_RSTCMP# );
      874    17717        /*E*   ERROR:      KXP-E_KXP_RSTCMP#-0
      875    17718               MESSAGE:    Packet level reset procedure completed.
      876    17719                           If VAL0 is greater than 5, VAL1 is the cause field,
      877    17720                           and VAL2 is the diagnostic field.
      878    17721        */
      879    17722        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      880    17723                           FPTN = STOP,
      881    17724                           ERR# = %E_KXP_STOP# );
      882    17770        /*E*   ERROR:      KXP-E_KXP_STOP#-0
      883    17771               MESSAGE:    Received Stop event from packet restart/frame level.
      884    17772        */
      885    17773        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      886    17774                           FPTN = VCDWN,
      887    17775                           ERR# = %E_KXP_VCDWN# );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:31   
      888    17821        /*E*   ERROR:      KXP-E_KXP_VCDWN#-0
      889    17822               MESSAGE:    Received VCDWN event from Connection Manager.
      890    17823        */
      891    17824        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      892    17825                           FPTN = VCLST,
      893    17826                           ERR# = %E_KXP_VCLST# );
      894    17872        /*E*   ERROR:      KXP-E_KXP_VCLST#-0
      895    17873               MESSAGE:    Received VCLST event from Connection Manager.
      896    17874        */
      897    17875        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      898    17876                           FPTN = VCRST,
      899    17877                           ERR# = %E_KXP_VCRST# );
      900    17923        /*E*   ERROR:      KXP-E_KXP_VCRST#-0
      901    17924               MESSAGE:    Received VCRST event from Connection Manager.
      902    17925        */
      903    17926        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      904    17927                           FPTN = VCUP,
      905    17928                           ERR# = %E_KXP_VCUP# );
      906    17974        /*E*   ERROR:      KXP-E_KXP_VCUP#-0
      907    17975               MESSAGE:    Received VCUP event from Connection Manager.
      908    17976        */
      909    17977        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      910    17978                           FPTN = REDIRECTED_CALL,
      911    17979                           ERR# = %E_KXP_RED# );
      912    18025        /*E*   ERROR:      KXP-E_KXP_RED#-0
      913    18026               MESSAGE:    Received redirected call from network.
      914    18027        */
      915    18028        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      916    18029                           FPTN = ADDRESS_MODIFIED,
      917    18030                           ERR# = %E_KXP_ADR_MOD# );
      918    18076        /*E*   ERROR:      KXP-E_KXP_ADR_MOD#-0
      919    18077               MESSAGE:    Called line address has been modified.
      920    18078        */
      921    18079        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      922    18080                           FPTN = BAD_CLR_RQS,
      923    18081                           ERR# = %E_KXP_BADCLR# );
      924    18127        /*E*   ERROR:      KXP-E_KXP_BADCLR#-0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:32   
      925    18128               MESSAGE:    Received invalid clear request packet.
      926    18129        */
      927    18130        %VLP_ERRCODE (STCLASS="CONSTANT SYMDEF",FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      928    18131                           FPTN = DEVLGNFAL,
      929    18132                           ERR# = %E_KXP_DEVLGNFAL# );
      930    18178        /*E*   ERROR:      KXP-E_KXP_DEVLGNFAL#-0
      931    18179               MESSAGE:    Failed to log on a LINKDEV.
      932    18180        */
      933    18181        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      934    18182                           FPTN = CALL_OUT,
      935    18183                           ERR# = %E_KXP_CALL_OUT# );
      936    18229        /*E*   ERROR:      KXP-E_KXP_CALL_OUT#-0
      937    18230               MESSAGE:    Call packet has been sent.
      938    18231        */
      939    18232
      940    18233        /*
      941    18234                                             Software logs
      942    18235        */
      943    18236
      944    18237        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      945    18238                           FPTN = SHORT_PACKET,
      946    18239                           ERR# = %E_KXP_SHORT_PACKET# );
      947    18285        /*E*   ERROR:      KXP-E_KXP_SHORT_PACKET#-3
      948    18286               MESSAGE:    Discarded over-length packet or packet < 5 bytes.
      949    18287        */
      950    18288        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      951    18289                           FPTN = BAD_GFI,
      952    18290                           ERR# = %E_KXP_BAD_GFI# );
      953    18336        /*E*   ERROR:      KXP-E_KXP_BAD_GFI#-3
      954    18337               MESSAGE:    Discarded packet with invalid GFI.
      955    18338        */
      956    18339        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      957    18340                           FPTN = BAD_LCN0_GFI,
      958    18341                           ERR# = %E_KXP_BAD_LCN0_GFI# );
      959    18387        /*E*   ERROR:      KXP-E_KXP_BAD_LCN0_GFI#-3
      960    18388               MESSAGE:    Discarded packet for channel 0; bad GFI.
      961    18389        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:33   
      962    18390        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      963    18391                           FPTN = INV_LCN0,
      964    18392                           ERR# = %E_KXP_INV_LCN0# );
      965    18438        /*E*   ERROR:      KXP-E_KXP_INV_LCN0#-3
      966    18439               MESSAGE:    Invalid packet for logical channel 0.
      967    18440        */
      968    18441        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      969    18442                           FPTN = RESTART_LNG,
      970    18443                           ERR# = %E_KXP_RESTART_LNG# );
      971    18489        /*E*   ERROR:      KXP-E_KXP_RESTART_LNG#-3
      972    18490               MESSAGE:    Discarded restart(confirm); invalid length.
      973    18491        */
      974    18492        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      975    18493                           FPTN = NO_L3CTX,
      976    18494                           ERR# = %E_KXP_NO_L3CTX# );
      977    18540        /*E*   ERROR:      KXP-E_KXP_NO_L3CTX#-3
      978    18541               MESSAGE:    No more memory for new L3 context.
      979    18542        */
      980    18543
      981    18544        /*
      982    18545                                             Nonfatal protocol errors
      983    18546        */
      984    18547
      985    18548        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
      986    18549                           FPTN = RSTRCV,
      987    18550                           ERR# = %E_KXP_RSTRCV# );
      988    18596        /*E*   ERROR:      KXP-E_KXP_RSTRCV#-5
      989    18597               MESSAGE:    Reset packet received to cause a reset procedure.
      990    18598        */
      991    18599        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
      992    18600                           FPTN = RST_D1,
      993    18601                           ERR# = %E_KXP_RST_D1# );
      994    18647        /*E*   ERROR:      KXP-E_KXP_RST_D1#-5
      995    18648               MESSAGE:    Invalid packet for data xfer state caused reset.
      996    18649        */
      997    18650        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
      998    18651                           FPTN = BAD_PR,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:34   
      999    18652                           ERR# = %E_KXP_BAD_PR# );
     1000    18698        /*E*   ERROR:      KXP-E_KXP_BAD_PR#-5
     1001    18699               MESSAGE:    Ack with invalid seq# caused reset procedure.
     1002    18700        */
     1003    18701        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
     1004    18702                           FPTN = BAD_PS,
     1005    18703                           ERR# = %E_KXP_BAD_PS# );
     1006    18749        /*E*   ERROR:      KXP-E_KXP_BAD_PS#-5
     1007    18750               MESSAGE:    Data packet with invalid seq# caused reset procedure.
     1008    18751        */
     1009    18752        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
     1010    18753                           FPTN = INV_INTC,
     1011    18754                           ERR# = %E_KXP_INV_INTC# );
     1012    18800        /*E*   ERROR:      KXP-E_KXP_INV_INTC#-5
     1013    18801               MESSAGE:    Unexpected Interrupt Confirmation caused reset procedure.
     1014    18802        */
     1015    18803        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
     1016    18804                           FPTN = XTR_INT,
     1017    18805                           ERR# = %E_KXP_XTRINT# );
     1018    18851        /*E*   ERROR:      KXP-E_KXP_XTRINT#-5
     1019    18852               MESSAGE:    Extra interrupt requests before confirmation.
     1020    18853        */
     1021    18854
     1022    18855        /*
     1023    18856                                             Fatal protocol errors
     1024    18857        */
     1025    18858
     1026    18859        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1027    18860                           FPTN = NEW_RESTART,
     1028    18861                           ERR# = %E_KXP_NEW_RESTART# );
     1029    18907        /*E*   ERROR:      KXP-E_KXP_NEW_RESTART#-4
     1030    18908               MESSAGE:    Unexpected Restart; all virtual circuits lost.
     1031    18909        */
     1032    18910        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1033    18911                           FPTN = INV_RESTART_C,
     1034    18912                           ERR# = %E_KXP_INV_RESTART_C# );
     1035    18958        /*E*   ERROR:      KXP-E_KXP_INV_RESTART_C#-4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:35   
     1036    18959               MESSAGE:    Unexpected Restart Confirmation received.
     1037    18960        */
     1038    18961        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1039    18962                           FPTN = NO_LCN,
     1040    18963                           ERR# = %E_KXP_NO_LCN# );
     1041    19009        /*E*   ERROR:      KXP-E_KXP_NO_LCN#-4
     1042    19010               MESSAGE:    No more logical channels for outgoing call.
     1043    19011        */
     1044    19012        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1045    19013                           FPTN = FTLCLR,
     1046    19014                           ERR# = %E_KXP_FTLCLR# );
     1047    19060        /*E*   ERROR:      KXP-E_KXP_FTLCLR#-4
     1048    19061               MESSAGE:    Clear packet received for active virtual circuit.
     1049    19062        */
     1050    19063        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1051    19064                           FPTN = CALRTREXH,
     1052    19065                           ERR# = %E_KXP_CALRTREXH# );
     1053    19111        /*E*   ERROR:      KXP-E_KXP_CALRTREXH#-4
     1054    19112               MESSAGE:    Call retries exhausted. Virtual circuit killed.
     1055    19113
     1056    19114        */
     1057    19115        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1058    19116                           FPTN = INVCALPRM,
     1059    19117                           ERR# = %E_KXP_INVCALPRM# );
     1060    19163        /*E*   ERROR:      KXP-E_KXP_INVCALPRM#-4
     1061    19164               MESSAGE:    Invalid call parameter. Circuit cleared.
     1062    19165        */
     1063    19166        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1064    19167                           FPTN = CALTIMOUT,
     1065    19168                           ERR# = %E_KXP_CALTIMOUT# );
     1066    19214        /*E*   ERROR:      KXP-E_KXP_CALTIMOUT#-4
     1067    19215               MESSAGE:    Call packet timed-out. Circuit cleared.
     1068    19216        */
     1069    19217        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1070    19218                           FPTN = CALCLS,
     1071    19219                           ERR# = %E_KXP_CALCLS# );
     1072    19265        /*E*   ERROR:      KXP-E_KXP_CALCLS#-4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:36   
     1073    19266               MESSAGE:    Call collision occurred.
     1074    19267        */
     1075    19268        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1076    19269                           FPTN = CLR_P2,
     1077    19270                           ERR# = %E_KXP_CLR_P2# );
     1078    19316        /*E*   ERROR:      KXP-E_KXP_CLR_P2#-4
     1079    19317               MESSAGE:    Invalid packet for state P2. Circuit cleared.
     1080    19318        */
     1081    19319        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1082    19320                           FPTN = CLR_P3,
     1083    19321                           ERR# = %E_KXP_CLR_P3# );
     1084    19367        /*E*   ERROR:      KXP-E_KXP_CLR_P3#-4
     1085    19368               MESSAGE:    Invalid packet for state P3. Circuit cleared.
     1086    19369        */
     1087    19370        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1088    19371                           FPTN = CLR_P4,
     1089    19372                           ERR# = %E_KXP_CLR_P4# );
     1090    19418        /*E*   ERROR:      KXP-E_KXP_CLR_P4#-4
     1091    19419               MESSAGE:    Invalid packet for state P4. Circuit cleared.
     1092    19420        */
     1093    19421        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1094    19422                           FPTN = RSTTIMOUT,
     1095    19423                           ERR# = %E_KXP_RSTTIMOUT# );
     1096    19469        /*E*   ERROR:      KXP-E_KXP_RSTTIMOUT#-4
     1097    19470               MESSAGE:    Reset packet timed-out.
     1098    19471        */
     1099    19472        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1100    19473                           FPTN = UNKLCN,
     1101    19474                           ERR# = %E_KXP_UNKLCN# );
     1102    19520        /*E*   ERROR:      KXP-E_KXP_UNKLCN#-4
     1103    19521               MESSAGE:    Discarded packet for unassigned channel.
     1104    19522        */
     1105    19523        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1106    19524                           FPTN = UNKPCK,
     1107    19525                           ERR# = %E_KXP_UNKPCK# );
     1108    19571        /*E*   ERROR:      KXP-E_KXP_UNKPCK#-4
     1109    19572               MESSAGE:    Unknown packet type received; circuit cleared.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:37   
     1110    19573        */
     1111    19574        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1112    19575                           FPTN = CLRTIMOUT,
     1113    19576                           ERR# = %E_KXP_CLRTIMOUT# );
     1114    19622        /*E*   ERROR:      KXP-E_KXP_CLRTIMOUT#-4
     1115    19623               MESSAGE:    Clear retries exhausted. Confirmation presumed.
     1116    19624        */
     1117    19625
     1118    19626        %VLP_SCODE (FPTN=Y_NO_CHNMEM,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_NO_CHNMEM#);
     1119    19687        %VLP_SCODE (FPTN=Y_BADCTXPTR,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_BADCTXPTR#);
     1120    19748        %VLP_SCODE (FPTN=Y_UNKEVT,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_PCK_UNKEVT#);
     1121    19809        %VLP_SCODE (FPTN=Y_UNKACT,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_PCK_UNKACT#);
     1122    19870        %VLP_SCODE (FPTN=Y_ACTSCR,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_PCK_ACTSCR#);
     1123    19931        %VLP_SCODE (FPTN=Y_VCLST_LCL,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_VCLST_LCL#);
     1124    19992
     1125    19993    1   DCL LOG_TO_CP6 (0:12) UBIN CONSTANT INIT (0,0,0,0,0,0,0,0,1,2,3,4,5);
     1126    19994        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:38   
     1127    19995        /*****************************************************************
     1128    19996        *                                                                *
     1129    19997        *                           Auto                                 *
     1130    19998        *                                                                *
     1131    19999        *****************************************************************/
     1132    20000
     1133    20001    1   DCL DAT$ PTR;
     1134    20002    1   DCL L3$ PTR;
     1135    20003    1   DCL CM$ PTR;
     1136    20004    1   DCL L2$ PTR;
     1137    20005    1   DCL CHN$ PTR;
     1138    20006    1   DCL STR$ PTR;
     1139    20007
     1140    20008        %FPT_X25 ( STCLASS = );
     1141    20052        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
     1142    20096        %VLP_ERRCODE (STCLASS=AUTO,FPTN=ERCOD) ;
     1143    20142    1   DCL S_TRMID$ PTR AUTO ;
     1144    20143    1   DCL S_VAL0 UBIN ALIGNED AUTO ;
     1145    20144    1   DCL S_VAL1 UBIN ALIGNED AUTO ;
     1146    20145    1   DCL LCN UBIN ALIGNED AUTO ; /* for erloguing purposes mostly */
     1147    20146    1   DCL CODE UBIN AUTO;
     1148    20147    1   DCL TEMP0 UBIN ;
     1149    20148    1   DCL TEMP1 UBIN AUTO ;
     1150    20149
     1151    20150    1   DCL PEVENT UBIN WORD;
     1152    20151    1   DCL PSTATE UBIN WORD;
     1153    20152    1   DCL ID UBIN WORD;
     1154    20153    1   DCL DIAG UBIN WORD;
     1155    20154    1   DCL INV_PRM UBIN;
     1156    20155    1   DCL PRM_VAL UBIN;
     1157    20156    1   DCL BYTE_INDEX UBIN;
     1158    20157    1   DCL SIZ UBIN;
     1159    20158    1   DCL ACTION UBIN;
     1160    20159    1   DCL KHA_ERROR UBIN(32);
     1161    20160    1   DCL SENDING_CALL BIT(1);
     1162    20161    1   DCL RVS BIT(1);
     1163    20162    1   DCL Y@DFRINP BIT(1);
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:39   
     1164    20163    1   DCL CHR_$$$_X UBIN;            /* byte indices to find the charging info */
     1165    20164    1   DCL CHR_SEG_X UBIN;
     1166    20165    1   DCL CHR_DUR_X UBIN;
     1167    20166    1   DCL L2EXT UBIN;
     1168    20167    1   DCL L3EXT UBIN;
     1169    20168    1   DCL DATACNT UBIN;
     1170    20169    1   DCL IN_PR UBIN;
     1171    20170    1   DCL MBIT BIT(1);
     1172    20171
     1173    20172    1   DCL TEMP2$ PTR;
     1174    20173    1   DCL TEMP2 UBIN WORD;
     1175    20174
     1176    20175    1   DCL PS UBIN ALIGNED;
     1177    20176        %B$TERMINAL_ID ( FPTN = TERMID, STCLASS = AUTO );
     1178    20205        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:40   
     1179    20206        /*****************************************************************
     1180    20207        *                                                                *
     1181    20208        *                           Based                                *
     1182    20209        *                                                                *
     1183    20210        *****************************************************************/
     1184    20211
     1185    20212        %KH$CHN;
     1186    20336        %KH$ADMIN_FPT ( FPTN = ADMIN_FPT, STCLASS = "BASED ( FPT_X25.PRM1$ )" );
     1187    20547
     1188    20548        %KX$L1 ( STCLASS ="BASED ( L2$ )");
     1189    20588        %KX$L2 ( STCLASS ="BASED ( L2$ )");
     1190    20955        %KX$L3 ( STCLASS ="BASED ( L3$ )");
     1191    21358
     1192    21359        %KX$DATA ( STCLASS ="BASED ( DAT$ )");
     1193    21379        %KX$FRAME ( STCLASS ="BASED ( DAT$ )");
     1194    21411        %KX$XFRAME ( STCLASS = "BASED ( DAT$ )" );
     1195    21445        %KX$PACKET ( STCLASS ="BASED ( DAT$ )");
     1196    21511        %KX$XPACKET ( STCLASS ="BASED ( DAT$ )");
     1197    21579
     1198    21580        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
     1199    21600        %KX$L3 ( FPTN = KX$TL3, STCLASS = BASED );
     1200    22003        %KX$PACKET ( FPTN = KX$TPACKET, STCLASS = BASED );
     1201    22069        %KX$TMRBLK ( FPTN = KX$BTMRBLK, STCLASS = BASED );
     1202    22101
     1203    22102    1   DCL INSTR CHAR(100) BASED( STR$ );
     1204    22103    1   DCL OUTSTR CHAR(100) BASED( STR$ );
     1205    22104    1   DCL DATSTR CHAR(100) BASED( DAT$ );
     1206    22105        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
     1207    22519    1   DCL STRT CHAR(8) BASED;
     1208    22520    1   DCL STRT0 CHAR(TEMP0) BASED CALIGNED;
     1209    22521    1   DCL STRT1 CHAR(TEMP1) BASED CALIGNED;
     1210    22522    1   DCL BYTE_ARRAY (0:256) UBIN BYTE CALIGNED BASED(DAT$);
     1211    22523    1   DCL PKTHDR CHAR(3) BASED CALIGNED;  /* 3 byte pkt header with just the type */
     1212    22524    1   DCL EXTPKTHDR CHAR(4) BASED CALIGNED;  /* 4 byte pkt header; extended format */
     1213    22525    1   DCL XPKTHDR CHAR(5) BASED CALIGNED; /* pkt header with type, cause and diag bytes */
     1214    22526    1   DCL Y@CNCMNG EPTR BASED(CM$);
     1215    22527    1   DCL 1 ADR1 BASED CALIGNED,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:41   
     1216    22528    1         2 SIZ UBIN BYTE CALIGNED,
     1217    22529    1         2 ADR,
     1218    22530    1           3 B32 BIT(32) UNAL,
     1219    22531    1           3 B24 BIT(24) UNAL;
     1220    22532    1   DCL 1 ADR2 BASED CALIGNED,
     1221    22533    1         2 B4 BIT(4) UNAL,
     1222    22534    1         2 ADR,
     1223    22535    1           3 B32 BIT(32) UNAL,
     1224    22536    1           3 B24 BIT(24) UNAL;
     1225    22537    1   DCL KVB_SIZ UBIN BASED ALIGNED;
     1226    22538        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:42   
     1227    22539        /*****************************************************************
     1228    22540        *                                                                *
     1229    22541        *                           Static                               *
     1230    22542        *                                                                *
     1231    22543        *****************************************************************/
     1232    22544
     1233    22545        %KX_DATA;
     1234    23235    1   DCL G$JIT$ PTR SYMREF;
     1235    23236    1   DCL 1 IN_PKTHDR STATIC,
     1236    23237        %KX$PACKET_INNARDS ( LAST = "," );
     1237    23271    1         2 TYPE_EXT REDEF TYPE,
     1238    23272    1           3 PS UBIN(7) UNAL,
     1239    23273    1           3 * BIT(1) UNAL,
     1240    23274    1         2 CAUSE UBIN BYTE CALIGNED,
     1241    23275    1         2 PR_EXT REDEF CAUSE,
     1242    23276    1           3 PR UBIN(7) UNAL,
     1243    23277    1           3 M BIT(1) UNAL,
     1244    23278    1         2 DIAG UBIN BYTE CALIGNED;
     1245    23279    1   DCL IN_PKTHDR_CHR REDEF IN_PKTHDR CHAR(5);
     1246    23280
     1247    23281    1   DCL 1 OUT_PKTHDR STATIC,
     1248    23282        %KX$PACKET_INNARDS ( LAST = "," );
     1249    23316    1         2 TYPE_EXT REDEF TYPE,
     1250    23317    1           3 PS UBIN(7) UNAL,
     1251    23318    1           3 * BIT(1) UNAL,
     1252    23319    1         2 CAUSE UBIN BYTE CALIGNED,
     1253    23320    1         2 PR_EXT REDEF CAUSE,
     1254    23321    1           3 PR UBIN(7) UNAL,
     1255    23322    1           3 M BIT(1) UNAL,
     1256    23323    1         2 DIAG UBIN BYTE CALIGNED;
     1257    23324    1   DCL OUT_PKTHDR_CHR REDEF OUT_PKTHDR CHAR(5);
     1258    23325
     1259    23326        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:43   
     1260    23327        /*****************************************************************
     1261    23328        *                                                                *
     1262    23329        *                           Procedure                            *
     1263    23330        *                                                                *
     1264    23331        *****************************************************************/
     1265    23332
     1266    23333        /* Set up everything from the parameters */
     1267    23334
     1268    23335    1       L3$ = FPT_X25.RCV$;
     1269    23336    1       IF L3$ ~= ADDR(NIL)
     1270    23337    1          THEN
     1271    23338    2             DO;
     1272    23339    2                L3EXT = BITBIN(KX$L3.EXTSEQ);
     1273    23340    2                L2$ = KX$L3.L2$;
     1274    23341    2                CM$ = KX$L3.CM$;
     1275    23342    2                LCN = KX$L3.LCN#;
     1276    23343    2             END;
     1277    23344    1          ELSE
     1278    23345    2             DO;
     1279    23346    2                L2$ = FPT_X25.CAL$;
     1280    23347    2                CM$ = ADDR(NIL);
     1281    23348    2                LCN = 0;
     1282    23349    2             END;
     1283    23350    1       CALL_FPT = '0'B;
     1284    23351    1       CHR_$$$_X = 0;
     1285    23352    1       CHR_SEG_X = 0;
     1286    23353    1       CHR_DUR_X = 0;   /* byte index from the byte after packet type */
     1287    23354    1       IF L2$ ~= ADDR(NIL)
     1288    23355    1          THEN
     1289    23356    2             DO;
     1290    23357    2                S_TRMID$ = KX$L1.CHN$ ;
     1291    23358    2                L2EXT = BITBIN (KX$L2.FLG.EXTSEQ);
     1292    23359    2             END;
     1293    23360    1       OUT_PKTHDR = '0'B;
     1294    23361    1       PEVENT = FPT_X25.EVN;
     1295    23362        /*
     1296    23363                                             The events have different setup
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:44   
     1297    23364                                             duties to perform.  DOCASE on
     1298    23365                                             each event to convert external
     1299    23366                                             event names into internal names.
     1300    23367        */
     1301    23368    2       DO CASE ( PEVENT );
     1302    23369
     1303    23370    2          CASE ( %KX_P_EV_INIT# );
     1304    23371        /*
     1305    23372                                             INIT means that the Frame level
     1306    23373                                             just finished set-up procedures
     1307    23374                                             at its level.  Always start off
     1308    23375                                             by sending a Restart packet.
     1309    23376        */
     1310    23377    2             CALL Y$RESTART;
     1311    23378        /*
     1312    23379                                             Return now, since this is not a
     1313    23380                                             per-LCN event.
     1314    23381        */
     1315    23382    2             RETURN;
     1316    23383
     1317    23384    2          CASE ( %KX_P_EV_DATIN# );
     1318    23385        /*
     1319    23386                                             The Frame level has received a
     1320    23387                                             packet and is passing it along to
     1321    23388                                             this level to interpret.
     1322    23389        */
     1323    23390
     1324    23391    2             DAT$ = FPT_X25.PRM1$;
     1325    23392    2             IN_PKTHDR_CHR = ADDR(BYTE_ARRAY(LENGTHC(KX$FRAME)+L2EXT))->XPKTHDR;
     1326    23393    2             DATACNT = KX$DATA.CNT - L2EXT;
     1327    23394    2             IF DATACNT < %L0 - 1
     1328    23395    2                THEN           /*  Short packets are always ignored  */
     1329    23396    3                   DO;
     1330    23397    3                      ERCOD = SHORT_PACKET;
     1331    23398    3                      GOTO LER1 ;
     1332    23399
     1333    23400    3                   END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:45   
     1334    23401
     1335    23402    2             IF ( IN_PKTHDR.GFI = %GFI AND KX$L2.DFLVCPRF.EXTSEQ# ) OR
     1336    23403    2                ( IN_PKTHDR.GFI = %GFI_EXT AND NOT KX$L2.DFLVCPRF.EXTSEQ# ) OR
     1337    23404    2                ( IN_PKTHDR.GFI ~= %GFI AND IN_PKTHDR.GFI ~= %GFI_EXT )
     1338    23405    2                THEN  /*                Bad GFI is always ignored  */
     1339    23406    3                   DO;
     1340    23407    3                      ERCOD = BAD_GFI ;
     1341    23408    3                      GOTO LER1 ;
     1342    23409
     1343    23410    3                   END;
     1344    23411
     1345    23412    2             IF IN_PKTHDR.TYPE = %Y_ID_DIAG#
     1346    23413    2                THEN
     1347    23414    2                   RETURN;
     1348    23415        /*
     1349    23416                                             LCN 0 is reserved for Restart
     1350    23417                                             procedures.  Any packet with that
     1351    23418                                             LCN gets special handling, and
     1352    23419                                             does not go thru the state table.
     1353    23420        */
     1354    23421
     1355    23422    2             LCN = IN_PKTHDR.LCN#;
     1356    23423    2             IF LCN = 0
     1357    23424    2                THEN  /*                Check for restart stuff  */
     1358    23425    3                   DO;
     1359    23426
     1360    23427    3                      IF IN_PKTHDR.D_BIT OR IN_PKTHDR.Q_BIT
     1361    23428    3                         THEN  /*       Bad GFI for LCN 0  */
     1362    23429    4                            DO;
     1363    23430    4                               ERCOD = BAD_LCN0_GFI ;
     1364    23431    4   LER1:
     1365    23432    4                               CALL Y$ER2 ;
     1366    23433
     1367    23434    4                               RETURN;
     1368    23435    4                            END;
     1369    23436
     1370    23437    3                      IF (IN_PKTHDR.TYPE ~= %Y_ID_RESTART#)
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:46   
     1371    23438    3                         AND (IN_PKTHDR.TYPE ~= %Y_ID_RESTART_C#)
     1372    23439    3                         THEN  /*       Not valid on LCN 0  */
     1373    23440    4                            DO;
     1374    23441    4                               CALL Y$ER00 ;
     1375    23442
     1376    23443    4                               RETURN;
     1377    23444    4                            END;
     1378    23445
     1379    23446    3                      IF NOT(IN_PKTHDR.TYPE = %Y_ID_RESTART# AND (DATACNT = %L1
     1380    23447    3                         OR DATACNT = %L2))
     1381    23448    3                         AND NOT(IN_PKTHDR.TYPE = %Y_ID_RESTART_C# AND DATACNT = %L0)
     1382    23449    3                         THEN  /*       Invalid length for restarts  */
     1383    23450    4                            DO;
     1384    23451    4                               ERCOD = RESTART_LNG ;
     1385    23452    4                               S_VAL0 = IN_PKTHDR.TYPE ;
     1386    23453    4                               S_VAL1 = KX$DATA.CNT ;
     1387    23454    4                               CALL Y$ER1 ;
     1388    23455
     1389    23456    4                               RETURN;
     1390    23457    4                            END;
     1391    23458
     1392    23459        /*
     1393    23460                                             It is a valid restart message.
     1394    23461                                             If we are already in a restart
     1395    23462                                             process, it is now done.  If we
     1396    23463                                             aren't, we get to do one.
     1397    23464        */
     1398    23465                           %STOP_TIMER ( FPTN = KX$L2.T20TMR );
     1399    23474    3                      IF KX$L2.FLG.RESTART
     1400    23475    3                         THEN  /*       Already in restart  */
     1401    23476    4                            DO;
     1402    23477    4                               KX$L2.FLG.RESTART = '0'B;
     1403    23478    4                               IF IN_PKTHDR.TYPE = %Y_ID_RESTART#
     1404    23479    4                                  THEN  /*  Log it  */
     1405    23480    5                                     DO;
     1406    23481    5                                        ERCOD = RESTART ;
     1407    23482    5                                        CALL Y$ER2 ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:47   
     1408    23483    5                                        KX_STATS_X25.RESTART_IN = KX_STATS_X25.
             23483                                                 RESTART_IN + 1;
     1409    23484    5                                     END;
     1410    23485    4                               CALL Y$START_L3S;
     1411    23486    4                            END;
     1412    23487    3                         ELSE  /*       New restart procedure  */
     1413    23488    4                            DO;
     1414    23489    4                               CALL Y$STOP_L3S;
     1415    23490    4                               IF IN_PKTHDR.TYPE = %Y_ID_RESTART#
     1416    23491    4                                  THEN
     1417    23492    5                                     DO;
     1418    23493    5                                        ERCOD = NEW_RESTART ;
     1419    23494    5                                        CALL Y$ER2 ;
     1420    23495    5                                        KX_STATS_X25.RESTART_IN = KX_STATS_X25.
             23495                                                 RESTART_IN + 1;
     1421    23496    5                                        IF NOT KX$L2.FLG.OK
     1422    23497    5                                           THEN
     1423    23498    5                                              KX$L2.FLG.RESTART_PEND = '1'B;
     1424    23499    5                                           ELSE
     1425    23500    6                                              DO;
     1426    23501    6                                                 CALL Y$RESTART_C;
     1427    23502
     1428    23503    6                                                 CALL Y$START_L3S;
     1429    23504    6                                              END;
     1430    23505    5                                     END;
     1431    23506    4                                  ELSE  /*  Invalid RESTART_C  */
     1432    23507    5                                     DO;
     1433    23508    5                                        ERCOD = INV_RESTART_C ;
     1434    23509    5                                        CALL Y$ER ;
     1435    23510
     1436    23511    5                                        OUT_PKTHDR.DIAG = %KX_RES_DIAG_R1#;
     1437    23512    5                                        CALL Y$RESTART;
     1438    23513    5                                     END;
     1439    23514    4                            END;  /*  IF on RESTART flag  */
     1440    23515
     1441    23516        /*
     1442    23517                                             However we ended up here, we
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:48   
     1443    23518                                             are done processing this call.
     1444    23519        */
     1445    23520    3                      RETURN;
     1446    23521    3                   END;  /*  IF on LCN 0  */
     1447    23522        /*
     1448    23523                                             If the restart flag is set, then
     1449    23524                                             all incoming packets are ignored
     1450    23525                                             (until the restart is done).
     1451    23526        */
     1452    23527
     1453    23528    2             IF KX$L2.FLG.RESTART OR KX$L2.FLG.RESTART_PEND THEN RETURN;
     1454    23529
     1455    23530        /*
     1456    23531                                             Find the L3 context block for
     1457    23532                                             this LCN.  If there isn't one, it
     1458    23533                                             is an error for anything but a
     1459    23534                                             Call packet.  In any case, just
     1460    23535                                             get a context block and let the
     1461    23536                                             state table take care of it.
     1462    23537        */
     1463    23538
     1464    23539    2             L3$ = KX$L2.L3_HEAD$;
     1465    23540    3   GET_L3:   DO WHILE ( L3$ ~= ADDR(NIL) );
     1466    23541
     1467    23542    3                IF ( KX$L3.LCN# = LCN )
     1468    23543    3                   THEN EXIT GET_L3;  /*  Found a match  */
     1469    23544    3                L3$ = KX$L3.NEXT$;
     1470    23545
     1471    23546    3             END GET_L3;
     1472    23547
     1473    23548    2             IF L3$ = ADDR(NIL)
     1474    23549    2                THEN  /*             New LCN - get a context block  */
     1475    23550    3                   DO;
     1476    23551    3                      IF IN_PKTHDR.TYPE ~= %Y_ID_CALL#
     1477    23552    3                         THEN
     1478    23553    4                            DO;
     1479    23554    4                               ERCOD = UNKLCN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:49   
     1480    23555    4                               GOTO LER1;
     1481    23556    4                            END;
     1482    23557    3                      CALL_FPT.CAL$ = L2$;
     1483    23558    3                      CALL KXS$GETL3 ( CALL_FPT.CAL$, TEMP2$ )
     1484    23559    3                         WHENALTRETURN
     1485    23560    4                            DO;
     1486    23561    4   L_NO_MEM:                   ERCOD = NO_L3CTX;
     1487    23562    4                               CALL Y$ER;
     1488    23563    4                               RETURN;
     1489    23564    4                            END;
     1490    23565    3                      L3$ = TEMP2$;
     1491    23566    3                      KX$L3.LCN# = IN_PKTHDR.LCN#;
     1492    23567    3                      TERMID = KX$L1.CHN$ -> KH$CHN.TERMID;
     1493    23568    3                      TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN#;
     1494    23569    3                      TERMID.TERM.SUBDEVICE = 0;
     1495    23570    3                      TERMID.TERM.SUBSUBDEVICE = KX$L3.LCN#;
     1496    23571    3                      TERMID.TTYP = %KLTY_VIRCIR#;
     1497    23572    3                      KX$L3.TYP = %KX_VC_TYP_RMT#;
     1498    23573    3                   END;
     1499    23574    2                ELSE
     1500    23575    2                   CM$ = KX$L3.CM$;
     1501    23576        /*
     1502    23577                                             Have WHAT_TYPE figure out the
     1503    23578                                             packet type, as well as doing
     1504    23579                                             all the necessary validation.
     1505    23580        */
     1506    23581
     1507    23582    2             L3EXT = BITBIN(KX$L3.EXTSEQ);
     1508    23583    2             IF DATACNT-%L0-L3EXT > KX_BUF.SIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ )
     1509    23584    2                THEN
     1510    23585    2                   PEVENT = %Y_EV_UNK_TYPE#;
     1511    23586    2                ELSE
     1512    23587    2                   IF DATACNT < %L0
     1513    23588    2                      THEN
     1514    23589    2                         PEVENT = %Y_EV_SHR_PKT#;
     1515    23590    2                      ELSE
     1516    23591    2                         CALL Y$WHAT_TYPE WHENALTRETURN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:50   
     1517    23592    3                               DO;
     1518    23593    3                                  RETURN;
     1519    23594    3                               END;
     1520    23595    2             IF KX$L3.CHN$ = ADDR(NIL)
     1521    23596    2                THEN
     1522    23597    3                   DO;
     1523    23598        /*
     1524    23599          TERMID has been setup either above or in Y$WHAT_TYPE
     1525    23600        */
     1526    23601    3                      CALL KHA$GET_CTX_PTR ( TERMID, KX$L3.CHN$ )
     1527    23602    3                         WHENRETURN
     1528    23603    4                            DO;
     1529    23604    4                               KX$L3.RLSCHN = '0'B;
     1530    23605    4                            END;
     1531    23606    3                         WHENALTRETURN
     1532    23607    4                            DO;
     1533    23608    4                               CALL KVB$GETSYS ( SIZEW ( KH$CHN ), KX$L3.CHN$ )
     1534    23609    4                                  WHENALTRETURN
     1535    23610    5                                     DO;
     1536    23611    5                                        L3$->KVB_SIZ = SIZEW(KX$L3);
     1537    23612    5                                        CALL KVB$RLSSYS ( KX$L3 );
     1538    23613    5                                        GOTO L_NO_MEM;
     1539    23614    5                                     END;
     1540    23615    4                               KX$L3.RLSCHN = '1'B;
     1541    23616    4                               KX$L3.CHN$ -> KH$CHN = KX$L1.CHN$ -> KH$CHN;
     1542    23617    4                               KX$L3.CHN$ -> KH$CHN.TERMID = TERMID;
     1543    23618    4                               KX$L3.CHN$ -> KH$CHN.SUB$ = ADDR(NIL);
     1544    23619    4                            END;
     1545    23620    3                      KX$L3.CHN$ -> KH$CHN.CTX$ = L3$;
     1546    23621        /*
     1547    23622           send enable and connect to KHA to put channel table in right state
     1548    23623        */
     1549    23624    3                      IF NOT KX$L3.RLSCHN
     1550    23625    3                         THEN
     1551    23626    4                            DO;
     1552    23627    4                               CODE = %KHA_FNC_ENABLE;
     1553    23628    4                               CALL Y$DVCADM;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:51   
     1554    23629    4                               CODE = %KHA_FNC_CONNECT;
     1555    23630    4                               CALL Y$DVCADM;
     1556    23631    4                            END;
     1557    23632    3                   END;
     1558    23633
     1559    23634    2          CASE ( %KX_P_EV_TO# );
     1560    23635        /*
     1561    23636                                             Clock time-out.
     1562    23637        */
     1563    23638    2             PEVENT = %Y_EV_TO#;
     1564    23639
     1565    23640    2          CASE ( %KX_P_EV_DATTMR# );
     1566    23641        /*
     1567    23642           A data packet timer expired. If we are in data state, the appropriate
     1568    23643           action to take is in KX$L3.TOACT
     1569    23644        */
     1570    23645    2             IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND NOT KX$L3.RNR
     1571    23646    2                THEN
     1572    23647    2                   RETURN;
     1573    23648    3             DO CASE ( KX$L3.TOACT );
     1574    23649    3                CASE ( %KX_L3_TOACT_NULL# );
     1575    23650    3                CASE ( %KX_L3_TOACT_CALLCM# );
     1576    23651    3                   IF CM$ ~= ADDR(NIL)
     1577    23652    3                      THEN
     1578    23653    4                         DO;
     1579    23654    4                            CALL_FPT.EVN = %KX_CM_EV_DATA_TO#;
     1580    23655    4                            CALL Y$CNCMNG;
     1581    23656    4                         END;
     1582    23657    3                CASE ( %KX_L3_TOACT_RST#,%KX_L3_TOACT_RSTRTR#,%KX_L3_TOACT_CLR# );
     1583    23658    3                   CALL_FPT.CAL$ = CM$;
     1584    23659    3                   CALL_FPT.RCV$ = L3$;
     1585    23660    3                   IF PEVENT = %KX_L3_TOACT_CLR#
     1586    23661    3                      THEN
     1587    23662    3                         CALL_FPT.EVN = %KX_P_EV_VCLST#;
     1588    23663    3                      ELSE
     1589    23664    3                         CALL_FPT.EVN = %KX_P_EV_VCRST#;
     1590    23665    3                   CALL KXP$PACKET ( CALL_FPT );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:52   
     1591    23666    3             END;
     1592    23667    2          CASE ( %KX_P_EV_START# );
     1593    23668        /*
     1594    23669                                             START means that a restart
     1595    23670                                             procedure has been completed.
     1596    23671        */
     1597    23672    2             PEVENT = %Y_EV_START#;
     1598    23673
     1599    23674    2          CASE ( %KX_P_EV_STOP# );
     1600    23675        /*
     1601    23676                                             STOP means that either a restart
     1602    23677                                             procedure is starting, or the
     1603    23678                                             Frame level needs to go thru
     1604    23679                                             set-up procedures again.
     1605    23680        */
     1606    23681    2             PEVENT = %Y_EV_STOP#;
     1607    23682
     1608    23683    2          CASE ( %KX_P_EV_DIED# );
     1609    23684        /*
     1610    23685                                             DIED means go away - the Frame
     1611    23686                                             level is also going away.
     1612    23687        */
     1613    23688    2             PEVENT = %Y_EV_DIED#;
     1614    23689
     1615    23690    2          CASE ( %KX_P_EV_ENB# );
     1616    23691        /*
     1617    23692                                             ENABLE from handler common.
     1618    23693                                             The VC can be used.
     1619    23694        */
     1620    23695    2             PEVENT = %Y_EV_ENABLE#;
     1621    23696    2   L_CHKL3:  IF L3$ = ADDR(NIL)
     1622    23697    2                THEN
     1623    23698    2                   RETURN;
     1624    23699
     1625    23700    2          CASE ( %KX_P_EV_DSC# );
     1626    23701        /*
     1627    23702                                             Disconnect from handler common.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:53   
     1628    23703                                             Force the VC thru a clear
     1629    23704                                             procedure.
     1630    23705        */
     1631    23706    2             PEVENT = %Y_EV_DISCONNECT#;
     1632    23707    2             GOTO L_CHKL3;
     1633    23708
     1634    23709    2          CASE ( %KX_P_EV_DSB# );
     1635    23710        /*
     1636    23711                                             DISABLE from handler common.
     1637    23712                                             Stop using a VC.
     1638    23713        */
     1639    23714    2             PEVENT = %Y_EV_DISABLE#;
     1640    23715    2             GOTO L_CHKL3;
     1641    23716
     1642    23717    2          CASE ( %KX_P_EV_KLL# );
     1643    23718        /*
     1644    23719                                             KILL from handler common.  Since
     1645    23720                                             VC disconnection is immediate,
     1646    23721                                             tell handler common the VC has
     1647    23722                                             disconnected, and the resulting
     1648    23723                                             DISABLE call will do the work.
     1649    23724        */
     1650    23725    2             CODE = %KHA_FNC_DISCONNECT_EVT ;
     1651    23726    2             CALL Y$DVCADM;
     1652    23727    2             RETURN;
     1653    23728
     1654    23729    2          CASE ( %KX_P_EV_VCUP# );
     1655    23730    2             IF KX$L3.FSTSLC = %KX_FSTSLC_RST# AND KX$L3.STATE.CURRENT = %
             23730                      Y_ST_CALL_RQS#
     1656    23731    2                THEN
     1657    23732        /*
     1658    23733           It's a fast select VC with restriction on response. Have to clear it.
     1659    23734        */
     1660    23735    2                   PEVENT = %Y_EV_VCLST#;
     1661    23736    2                ELSE
     1662    23737    2                   PEVENT = %Y_EV_VCUP#;
     1663    23738        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:54   
     1664    23739                                             VCUP from CM.  This might be on
     1665    23740                                             the same thread as the initial
     1666    23741                                             call to CM for this VC, so check
     1667    23742                                             before validating CM$.
     1668    23743        */
     1669    23744    2   L_CHKCM$: IF L3$ = KX_CALLING_CM$
     1670    23745    2                THEN  /*                It is on the same thread  */
     1671    23746    3                   DO;
     1672    23747    3                      KX$L3.CM$ = FPT_X25.CAL$;
     1673    23748    3                      CM$ = FPT_X25.CAL$;
     1674    23749    3                   END;
     1675    23750    2                ELSE  /*                Validate the CM$  */
     1676    23751    2                   IF CM$ ~= FPT_X25.CAL$
     1677    23752    2                      THEN  /*          Invalid - SCREECH  */
     1678    23753    3                         DO;
     1679    23754        /*S* SCREECH_CODE: KXP-S$KX_BADCTXPTR#
     1680    23755             MESSAGE: L3's pointer to MLC does not match MLC's pointer to L3.
     1681    23756        */
     1682    23757    3                            CALL KHD$SCREECH (Y_BADCTXPTR);
     1683    23758    3                         END;
     1684    23759
     1685    23760    2          CASE ( %KX_P_EV_VCDWN# );
     1686    23761        /*
     1687    23762                                             VCDWN from CM. VCDWN does not make sense
     1688    23763                                             for a remote VC so change to VCLST.
     1689    23764                                             Again, check for the same thread before
     1690    23765                                             doing the validation.
     1691    23766        */
     1692    23767    2             IF KX$L3.CHN$->KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#
     1693    23768    2                THEN
     1694    23769    2                   PEVENT = %Y_EV_VCDWN#;
     1695    23770    2                ELSE
     1696    23771    2                   PEVENT = %Y_EV_VCLST#;
     1697    23772    2             GOTO L_CHKCM$;
     1698    23773
     1699    23774    2          CASE ( %KX_P_EV_VCLST# );
     1700    23775        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:55   
     1701    23776                                             VCLST from CM.  Again, check for
     1702    23777                                             the same thread before doing the
     1703    23778                                             validation.
     1704    23779        */
     1705    23780    2             PEVENT = %Y_EV_VCLST#;
     1706    23781    2             GOTO L_CHKCM$;
     1707    23782
     1708    23783    2          CASE ( %KX_P_EV_VCRST# );
     1709    23784        /*
     1710    23785                                             VCRST from CM.  Again, check for
     1711    23786                                             the same thread before doing the
     1712    23787                                             validation.
     1713    23788        */
     1714    23789    2             PEVENT = %Y_EV_VCRST#;
     1715    23790    2             GOTO L_CHKCM$;
     1716    23791
     1717    23792    2          CASE ( %KX_P_EV_DATAVL# );
     1718    23793        /*
     1719    23794                                             DATA from CM.  Mark the L3
     1720    23795                                             context, and check to see if
     1721    23796                                             a call to generate output is
     1722    23797                                             needed.
     1723    23798        */
     1724    23799    2             KX$L3.DATA = '1'B;
     1725    23800    2             IF L3$ = KX_CALLING_CM$
     1726    23801    2                THEN  /*                It is on the same thread  */
     1727    23802    3                   DO;
     1728    23803    3                      KX$L3.CM$ = FPT_X25.CAL$;
     1729    23804    3                      CM$ = FPT_X25.CAL$;
     1730    23805    3                   END;
     1731    23806    2                ELSE  /*                Validate the CM$  */
     1732    23807    2                   IF CM$ ~= FPT_X25.CAL$
     1733    23808    2                      THEN  /*          Invalid - SCREECH  */
     1734    23809    3                         DO;
     1735    23810    3                            CALL KHD$SCREECH (Y_BADCTXPTR);
     1736    23811    3                         END;
     1737    23812
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:56   
     1738    23813
     1739    23814    2             IF KX$L2.FLG.OK AND NOT KX$L2.FLG.BLK
     1740    23815    2                THEN
     1741    23816    2                   CALL Y$GETDAT;
     1742    23817    2                ELSE
     1743    23818    2                   KX$L2.FLG.DATAVL = '1'B;
     1744    23819    2             RETURN;
     1745    23820
     1746    23821    2          CASE ( %KX_P_EV_BLDCTX# );
     1747    23822        /*
     1748    23823                                             BLDCTX from handler common.
     1749    23824        */
     1750    23825    2             CALL_FPT.CAL$ = L2$;
     1751    23826    2             CALL KXS$GETL3 ( CALL_FPT.CAL$, TEMP2$, ADMIN_FPT ) ALTRET (L_NO_MEM);
     1752    23827    2             L3$ = TEMP2$;
     1753    23828    2             KX$L3.CHN$ = ADMIN_FPT.CHN$;
     1754    23829    2             KX$L3.RLSCHN = '0'B;
     1755    23830    2             ADMIN_FPT.CHN$ -> KH$CHN.TERMID.TTYP = %KLTY_VIRCIR#;
     1756    23831    2             ADMIN_FPT.CHN$ -> KH$CHN.CTX$ = L3$;
     1757    23832    2             IF KX$L3.PVC
     1758    23833    2                THEN
     1759    23834    2                   KX$L3.STATE.CURRENT = %Y_ST_ENB_STOP#;
     1760    23835    2                ELSE
     1761    23836    2                   KX$L3.STATE.CURRENT = %Y_ST_DSB_STOP#;
     1762    23837
     1763    23838    2             RETURN;
     1764    23839
     1765    23840    2          CASE ( %KX_P_EV_GETDAT# );
     1766    23841        /*
     1767    23842                                             Request for data from the Frame
     1768    23843                                             level.  Supply some output if
     1769    23844                                             possible.
     1770    23845        */
     1771    23846    2             CALL Y$GETDAT;
     1772    23847    2             RETURN;
     1773    23848
     1774    23849    2          CASE ( %KX_P_EV_SNDINT# );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:57   
     1775    23850        /*
     1776    23851                                             CM asks L3 to send an Interrupt packet.
     1777    23852        */
     1778    23853    2             IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND KX$L3.STATE.CURRENT ~= %
             23853                      Y_ST_RESET# OR
     1779    23854    2                ( FPT_X25.V_.BYTSIZ > 1 AND NOT KX$L3.EXTSEQ )
     1780    23855    2                THEN
     1781    23856    3                   DO;
     1782    23857    3                      FPT_X25.PRM1$ = ADDR(Y_ACTSCR);
     1783    23858    3                      ALTRETURN;
     1784    23859    3                   END;
     1785    23860    2             IF KX$L3.INTPND    /* already have one outstanding */
     1786    23861    2                THEN
     1787    23862    3                   DO;
     1788    23863    3                      ERCOD = XTR_INT;
     1789    23864    3                      CALL Y$ER;
     1790    23865    3                   END;
     1791    23866        /*
     1792    23867               INTOUT - Send an Interrupt packet
     1793    23868                  Set the Interrupt pending flag
     1794    23869                  Send the Interrupt packet
     1795    23870        */
     1796    23871
     1797    23872    2                ELSE
     1798    23873    3                   DO;
     1799    23874    3                      KX$L3.INTPND = '1'B;
     1800    23875    3                      TEMP0 = FPT_X25.V_.BYTSIZ;
     1801    23876    3                      CALL KXS$GETBFR ( TEMP0, TEMP2$ );
     1802    23877    3                      DAT$ = TEMP2$;
     1803    23878    3                      KX$DATA.RLS.L3 = '1'B;
     1804    23879    3                      KX$DATA.CNT = %L0 + L2EXT + MAXIMUM ( 1, TEMP0 );
     1805    23880    3                      OUT_PKTHDR.TYPE = %Y_ID_INT#;
     1806    23881    3                      SUBSTR(DAT$->STRT0,LENGTHC(KX$PACKET)+L2EXT,TEMP0)
     1807    23882    3                         = SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0);
     1808    23883    3                      CALL Y$PACKET_OUT;
     1809    23884                           %START_TIMER ( FPTN = KX$L3.INTTMRBLK, PRD = KX$L3.T26 );
     1810    23904    3                   END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:58   
     1811    23905    2             RETURN;
     1812    23906
     1813    23907    2          CASE ( %KX_P_EV_UPDCHN# );
     1814    23908        /*
     1815    23909           Let's use the real channel table.
     1816    23910        */
     1817    23911    2             IF ( L3$ = ADDR(NIL)         /* well somebody screwed up */
     1818    23912    2                OR NOT KX$L3.RLSCHN     /* already using a real one */
     1819    23913    2                OR FPT_X25.PRM1$ = ADDR(NIL)
     1820    23914    2                OR FPT_X25.PRM1$ = KX$L3.CHN$   /* what a joke */
     1821    23915    2                )
     1822    23916    2                THEN RETURN;
     1823    23917    2             CALL KVB$RLSSYS ( SIZEW ( KH$CHN ), KX$L3.CHN$ );
     1824    23918    2             KX$L3.RLSCHN = '0'B;
     1825    23919    2             KX$L3.CHN$ = FPT_X25.PRM1$;
     1826    23920    2             KX$L3.CHN$->KH$CHN.CTX$ = L3$;
     1827    23921        /*
     1828    23922           The channel table usually needs an ENABLE and a CONNECT to get
     1829    23923           the correct state, BUSY.
     1830    23924        */
     1831    23925    2             CODE = %KHA_FNC_ENABLE;
     1832    23926    2             CALL Y$DVCADM;
     1833    23927    2             CODE = %KHA_FNC_CONNECT;
     1834    23928    2             CALL Y$DVCADM;
     1835    23929    2             RETURN;
     1836    23930
     1837    23931    2          CASE ( %KX_P_EV_REDRQS# );
     1838    23932        /*
     1839    23933           CM wants/is accepting input data packets.
     1840    23934        */
     1841    23935    2             IF NOT KX$L3.INPBLK THEN RETURN;
     1842    23936    2             KX$L3.INPBLK = '0'B;
     1843    23937    2             IF KX$L3.IN_.ADR$ ~= ADDR(NIL)
     1844    23938    2                THEN
     1845    23939    3                   DO;
     1846    23940    3                      CALL_FPT.EVN = %KX_CM_EV_DATIN#;
     1847    23941    3                      CALL_FPT.V_ = KX$L3.IN_;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:59   
     1848    23942    3                      CALL_FPT.PRS.PRM1 = KX$L3.IN_QBIT;
     1849    23943    3                      CALL_FPT.PRS.PRM2 = KX$L3.IN_MBIT;
     1850    23944    3                      CALL Y$CNCMNG WHENALTRETURN
     1851    23945    4                            DO;
     1852    23946    4                               KX$L3.INPBLK = '1'B;
     1853    23947    4                               RETURN;
     1854    23948    4                            END;
     1855    23949    3                      IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# THEN RETURN;
     1856    23950    3                      IF KX$L3.IN_.BFRSIZ = 0
     1857    23951    3                         THEN
     1858    23952    3                            CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );
     1859    23953    3                         ELSE
     1860    23954    3                            CALL KVB$RLSSYS((KX$L3.IN_.BYTSIZ/2),KX$L3.IN_.ADR$);
     1861    23955    3                      KX$L3.IN_ = '0'B;
     1862    23956    3                      KX$L3.IN_QBIT = '0'B;
     1863    23957    3                      KX$L3.IN_MBIT = '0'B;
     1864    23958    3                   END;
     1865    23959    2             CALL_FPT.EVN = %KX_P_EV_DATIN#;
     1866    23960    2             CALL_FPT.RCV$ = ADDR(NIL);
     1867    23961    2             CALL_FPT.CAL$ = L2$;
     1868    23962    3             DO WHILE ( KX$L3.INP_HEAD$ ~= ADDR(NIL) );
     1869    23963    3                DAT$ = KX$L3.INP_HEAD$;
     1870    23964    3                KX$L3.INP_HEAD$ = KX$DATA.L3_LIST$;
     1871    23965    3                CALL_FPT.PRM1$ = DAT$;
     1872    23966    3                CALL KXP$PACKET (CALL_FPT);
     1873    23967    3                IF KX$L3.INPBLK THEN RETURN;
     1874    23968    3             END;
     1875    23969    2             KX$L3.INP_TAIL$ = ADDR(NIL);
     1876    23970    2             ID = %Y_ID_RR#;
     1877    23971    2             CALL Y$SEND_PACKET;
     1878    23972    2             RETURN;
     1879    23973
     1880    23974    2          CASE ( %KX_P_EV_INTTMR# );
     1881    23975        /*
     1882    23976           Interrupt packet timed out. If we're in data state, do a reset.
     1883    23977        */
     1884    23978    2             IF KX$L3.STATE.CURRENT = %Y_ST_DATA#
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:60   
     1885    23979    2                THEN
     1886    23980    3                   DO;
     1887    23981    3                      CALL_FPT.EVN = %KX_P_EV_VCRST#;
     1888    23982    3                      CALL_FPT.CAL$ = CM$;
     1889    23983    3                      CALL_FPT.RCV$ = L3$;
     1890    23984    3                      CALL_FPT.PRS.PRM1 = '1'B;
     1891    23985    3                      CALL_FPT.PRM1 = %KX_RST_DIAG_INTEXP#;
     1892    23986    3                      CALL KXP$PACKET ( CALL_FPT );
     1893    23987    3                   END;
     1894    23988    2             RETURN;
     1895    23989    2          CASE ( %KX_P_EV_IDLCLK# );
     1896    23990        /*
     1897    23991           Clear switched circuits that have been idling more than IDLPRD.
     1898    23992        */
     1899    23993    2             L2$ = KX_CNTX.HD$;
     1900    23994    3             DO WHILE ( L2$ ~= ADDR(NIL) );
     1901    23995    3                L3$ = KX$L2.L3_HEAD$;
     1902    23996    4                DO WHILE ( L3$ ~= ADDR(NIL) );
     1903    23997    4                   IF KX$L3.STATE.CURRENT = %Y_ST_DATA# AND NOT KX$L3.PVC
     1904    23998    4                      AND KX$L3.IDLPRD ~= 0
     1905    23999    4                      THEN
     1906    24000    5                         DO;
     1907    24001    5                            KX$L3.IDLCLK = KX$L3.IDLCLK - 1;
     1908    24002    5                            IF KX$L3.IDLCLK = 0
     1909    24003    5                               THEN
     1910    24004    6                                  DO;
     1911    24005    6                                     CALL_FPT.CAL$ = KX$L3.CM$;
     1912    24006    6                                     CALL_FPT.RCV$ = L3$;
     1913    24007    6                                     CALL_FPT.EVN = %KX_P_EV_VCLST#;
     1914    24008    6                                     CALL KXP$PACKET ( CALL_FPT );
     1915    24009    6                                  END;
     1916    24010    5                         END;
     1917    24011    4                   L3$ = KX$L3.NEXT$;
     1918    24012    4                END;
     1919    24013    3                L2$ = KX$L2.NEXT$;
     1920    24014    3             END;
     1921    24015    2             RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:61   
     1922    24016
     1923    24017    2          CASE ( %KX_P_EV_STOP_ALL# );
     1924    24018    2             CALL Y$STOP_L3S;
     1925    24019    2             RETURN;
     1926    24020    2          CASE ( %KX_P_EV_DIED_ALL# );
     1927    24021    2             CALL Y$DIED_L3S;
     1928    24022    2             RETURN;
     1929    24023    2          CASE ( %KX_P_EV_SP1# );
     1930    24024        /*
     1931    24025                                             Spare event #1.
     1932    24026        */
     1933    24027    2             PEVENT = %Y_EV_SP1#;
     1934    24028
     1935    24029    2          CASE ( %KX_P_EV_SP2# );
     1936    24030        /*
     1937    24031                                             Spare event #2.
     1938    24032        */
     1939    24033    2             PEVENT = %Y_EV_SP2#;
     1940    24034
     1941    24035    2          CASE ( %KX_P_EV_SP3# );
     1942    24036        /*
     1943    24037                                             Spare event #3.
     1944    24038        */
     1945    24039    2             PEVENT = %Y_EV_SP3#;
     1946    24040
     1947    24041    2          CASE ( ELSE );
     1948    24042        /*S* SCREECH_CODE: KXP-S$KX_PCK_UNKEVT#
     1949    24043             MESSAGE: KXP$PACKET received a call with an unknown event type.
     1950    24044        */
     1951    24045    2             CALL KHD$SCREECH (Y_UNKEVT);
     1952    24046
     1953    24047    2       END;  /*  CASE on external event  */
     1954    24048
     1955    24049        /*
     1956    24050                                             Do what the state table says to
     1957    24051                                             for this state/event combination.
     1958    24052        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:62   
     1959    24053
     1960    24054    1       IF KX$L3.CHN$ ~= ADDR(NIL) THEN S_TRMID$ = KX$L3.CHN$ ;
     1961    24055    1       PSTATE = KX$L3.STATE.CURRENT;
     1962    24056    1       S_VAL0 = PSTATE;
     1963    24057
     1964    24058    1       TEMP2 = PSTATE * ( %Y_EV_MAX# + 1 ) + PEVENT;
     1965    24059    1       IF NOT KX$L3.PVC
     1966    24060    1          THEN
     1967    24061    2             DO;
     1968    24062    2                PSTATE = STATE_TABLE.NEXT_STATE ( TEMP2 );
     1969    24063    2                ACTION = STATE_TABLE.ACTION ( TEMP2 );
     1970    24064    2             END;
     1971    24065    1          ELSE
     1972    24066    2             DO;
     1973    24067    2                PSTATE = PVC_STATE_TABLE.NEXT_STATE ( TEMP2 );
     1974    24068    2                ACTION = PVC_STATE_TABLE.ACTION ( TEMP2 );
     1975    24069    2             END;
     1976    24070        /*
     1977    24071           Rseet IDLCLK because there is some activity on this L3.
     1978    24072        */
     1979    24073    1       KX$L3.IDLCLK = KX$L3.IDLPRD;
     1980    24074
     1981    24075    1       KX$L3.STATE.LAST = KX$L3.STATE.CURRENT;
     1982    24076    1       KX$L3.STATE.CURRENT = PSTATE;
     1983    24077
     1984    24078
     1985    24079    1       KX$L3.HIST.STT ( KX$L3.HIST.X ) = PSTATE;
     1986    24080    1       KX$L3.HIST.EVT ( KX$L3.HIST.X ) = PEVENT;
     1987    24081    1       KX$L3.HIST.ACT ( KX$L3.HIST.X ) = ACTION;
     1988    24082    1       KX$L3.HIST.X = KX$L3.HIST.X + 1;
     1989    24083    1       IF KX$L3.HIST.X > 7
     1990    24084    1          THEN
     1991    24085    1             KX$L3.HIST.X = 0;
     1992    24086
     1993    24087    2       DO CASE ( ACTION );
     1994    24088        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:63   
     1995    24089        /*
     1996    24090               ACK - send a data acknowledgement to the other end
     1997    24091                  Send an RR packet
     1998    24092        */
     1999    24093    2          CASE ( %Y_ACT_ACK# );
     2000    24094
     2001    24095    2             IF KX$L3.DCNTP > 0
     2002    24096    2                THEN
     2003    24097    2                   GOTO L_SEND_RR;  /* in case datin */
     2004    24098        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:64   
     2005    24099        /*
     2006    24100               CALEST - a call confirm packet has completed call set-up
     2007    24101                  Stop the timer
     2008    24102                  Set the DATA flag
     2009    24103                  Reset the retry count
     2010    24104                  Report VCUP to CM
     2011    24105        */
     2012    24106    2          CASE ( %Y_ACT_CALEST# );
     2013    24107
     2014    24108    2             CALL Y$STOP_TMR ;
     2015    24109
     2016    24110
     2017    24111    2             KX$L3.DATA = '1'B;
     2018    24112    2             KX$L3.RTRCNT = 0;
     2019    24113    2             KX_STATS_X25.CIRCUITS = KX_STATS_X25.CIRCUITS + 1;
     2020    24114    2             CALL_FPT.EVN = %KX_CM_EV_VCUP#;
     2021    24115    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.CALL_OPTS );
     2022    24116    2             CALL_FPT.V_.ADR$ = DAT$;
     2023    24117    2             CALL_FPT.V_.BYTX = BYTE_INDEX;
     2024    24118    2             CALL_FPT.V_.BYTSIZ = KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX;
     2025    24119    2             CALL Y$CNCMNG;
     2026    24120        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:65   
     2027    24121        /*
     2028    24122               CALL - Send a Call packet
     2029    24123                  Send a Call packet
     2030    24124                  Start the timer
     2031    24125                  Report a connection to handler common
     2032    24126        */
     2033    24127    2          CASE ( %Y_ACT_CALL# );
     2034    24128
     2035    24129    2             CALL Y$CALL
     2036    24130    2                WHENALTRETURN
     2037    24131    3                   DO;
     2038    24132        /*
     2039    24133                                             Unable to get a LCN for this VC.
     2040    24134                                             Log the problem and KILL the VC.
     2041    24135        */
     2042    24136    3                      ERCOD = NO_LCN ;
     2043    24137    3                      CALL Y$ER ;
     2044    24138
     2045    24139    3                      CODE = %KHA_FNC_KILL ;
     2046    24140    3                      CALL Y$DVCADM;
     2047    24141
     2048    24142    3                      RETURN;
     2049    24143    3                   END;
     2050    24144    2             CALL Y$START_TIMER ( KX$L3.T21 );
     2051    24145    2             CODE = %KHA_FNC_CONNECT ;
     2052    24146    2             CALL Y$DVCADM;
     2053    24147
     2054    24148        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:66   
     2055    24149        /*
     2056    24150               CLRRCV - a Clear packet has been received
     2057    24151               It goes roughly like this:
     2058    24152                  Stop the timer
     2059    24153                  Log the Clear packet if necessary
     2060    24154                  If SUPER-defined,
     2061    24155                     Report a disconnect to handler common
     2062    24156                     If the retry count is exhausted,
     2063    24157                        Log the retries exhausted event
     2064    24158                     Otherwise
     2065    24159                        Report VCDWN to CM
     2066    24160                        If still in the same state,
     2067    24161                           If the call delay timer is 0,
     2068    24162                              Report a time-out to the packet level
     2069    24163                              Return
     2070    24164                           Otherwise,
     2071    24165                              Start the timer
     2072    24166                  Otherwise
     2073    24167                     Clear the LCN
     2074    24168                     Report VCLST to CM
     2075    24169                     Release (maybe) the context
     2076    24170               DLY is the same except that there should be no errlog or CLR_C
     2077    24171               CLRC causes L3 to tx the pending clear_c and either release context
     2078    24172               or initiate a new call.
     2079    24173        */
     2080    24174    2          CASE ( %Y_ACT_CLRRCV#, %Y_ACT_DLY#, %Y_ACT_CLRC# );
     2081    24175
     2082    24176    2             ID = %Y_ID_CLEAR_C#;   /* prepare to call Y$PACKET_OUT */
     2083    24177    2             IF ACTION = %Y_ACT_CLRC#
     2084    24178    2                THEN
     2085    24179    3                   DO;
     2086    24180    3                      IF KX$L3.CHN$->KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#
     2087    24181    3                         THEN
     2088    24182    3                            CALL_FPT.EVN = %KX_CM_EV_VCDWN#;
     2089    24183    3                         ELSE
     2090    24184    3                            CALL_FPT.EVN = %KX_CM_EV_VCLST#;
     2091    24185    3                      GOTO L_CLRC;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:67   
     2092    24186    3                   END;
     2093    24187    2             CALL Y$STOP_TMR ;
     2094    24188
     2095    24189    2             IF ACTION = %Y_ACT_CLRRCV#
     2096    24190    2                THEN
     2097    24191    3                   DO;
     2098    24192    3                      KX$L3.CLRCPND = '1'B;    /* need to send clr_c eventually */
     2099    24193    3                      CALL_FPT.PRS.V = '1'B;   /* clear packet info is relevent */
     2100    24194    3                      IF DATACNT > %L0 AND IN_PKTHDR.CAUSE ~= 0
     2101    24195    3                         THEN
     2102    24196    3                            ERCOD = FTLCLR ;
     2103    24197    3                         ELSE
     2104    24198    3                            IF KX$L3.STATE.LAST = %Y_ST_CALL# AND KX$L3.RTRCNT > 0
     2105    24199    3                               THEN
     2106    24200    3                                  EXIT; /* Only log the first clear */
     2107    24201    3                               ELSE
     2108    24202    3                                  ERCOD = CLRRCV ;
     2109    24203    3                      CALL Y$ER2 ;
     2110    24204    3                   END;
     2111    24205    2             CALL_FPT.V_.ADR$ = DAT$;
     2112    24206    2             CALL_FPT.V_.BYTX = BYTE_INDEX;
     2113    24207    2             CALL_FPT.V_.BYTSIZ = KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX;
     2114    24208    2             CALL_FPT.PRM3N4.PRM3 = CHR_$$$_X;
     2115    24209    2             CALL_FPT.PRM3N4.PRM4 = CHR_SEG_X;
     2116    24210    2             CALL_FPT.PRM5N6.PRM5 = CHR_DUR_X;
     2117    24211    2             IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0
     2118    24212    2                THEN
     2119    24213    3                   DO;
     2120    24214    3                      CALL_FPT.PRS.PRM1 = '1'B;
     2121    24215    3                      CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;
     2122    24216    3                      IF DATACNT > %L1
     2123    24217    3                         THEN
     2124    24218    4                            DO;
     2125    24219    4                               CALL_FPT.PRS.PRM2 = '1'B;
     2126    24220    4                               CALL_FPT.PRM2 = IN_PKTHDR.DIAG;
     2127    24221    4                            END;
     2128    24222    3                   END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:68   
     2129    24223    2             CALL Y$RESET_L3CNTX;
     2130    24224    2             CALL_FPT.EVN = %KX_CM_EV_VCLST#;
     2131    24225    2             IF KX$L3.CHN$ -> KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#
     2132    24226    2                THEN
     2133    24227    3                   DO;
     2134    24228    3                      CODE = %KHA_FNC_DISCONNECT_EVT ;
     2135    24229    3                      CALL Y$DVCADM;
     2136    24230
     2137    24231    3                      IF PSTATE ~= KX$L3.STATE.CURRENT
     2138    24232    3                         THEN
     2139    24233    4                            DO;
     2140    24234    4                               CALL Y$SEND_PACKET;
     2141    24235    4                               RETURN;
     2142    24236    4                            END;
     2143    24237    3                      IF KX$L3.STATE.LAST = %Y_ST_CALL#
     2144    24238    3                         THEN
     2145    24239    4                            DO;
     2146    24240    4                               KX$L3.RTRCNT = KX$L3.RTRCNT + 1;
     2147    24241    4                               IF ( KX$L3.R21 ~= 0 OR
     2148    24242    4                                  KX$L3.TYP ~= %KX_VC_TYP_PRM# ) AND
     2149    24243    4                                  ( KX$L3.RTRCNT > KX$L3.R21 OR
     2150    24244        /*
     2151    24245           Look at clearing cause to see if there is any point for retrying
     2152    24246           the call packet.
     2153    24247        */
     2154    24248    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_BSY# OR
     2155    24249    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_NTWCGS# OR
     2156    24250    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_LNKDWN# OR
     2157    24251    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_PTH# OR
     2158    24252    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_RMT# )
     2159    24253    4                                  THEN
     2160    24254    5                                     DO;
     2161    24255    5                                        ERCOD = CALRTREXH ;
     2162    24256    5                                        CALL Y$ER ;
     2163    24257    5                                        CALL_FPT.EVN = %KX_CM_EV_VCLST_PRM#;
     2164    24258    5                                     END;
     2165    24259    4                                  ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:69   
     2166    24260    4                                     CALL_FPT.EVN = %KX_CM_EV_VCDWN#;
     2167    24261    4                            END;  /* if last state was call */
     2168    24262    3                         ELSE
     2169    24263    3                            IF KX$L3.TYP = %KX_VC_TYP_PRM#
     2170    24264    3                               THEN
     2171    24265    3                                  CALL_FPT.EVN = %KX_CM_EV_VCDWN#;
     2172    24266    3                   END;  /* if subchan; CALL_FPT.EVN is now set up */
     2173    24267    2             IF CM$ ~= ADDR(NIL)
     2174    24268    2                THEN
     2175    24269    2                   CALL Y$CNCMNG WHENALTRETURN
     2176    24270    3                         DO;
     2177    24271    3                            IF ACTION = %Y_ACT_CLRRCV#
     2178    24272    3                               THEN
     2179    24273    3                                  RETURN;
     2180    24274    3                         END;
     2181    24275    2   L_CLRC:   ;
     2182    24276    2             IF KX$L3.CLRCPND
     2183    24277    2                THEN
     2184    24278    3                   DO;
     2185    24279    3                      KX$L3.CLRCPND = '0'B;
     2186    24280    3                      CALL Y$SEND_PACKET;
     2187    24281    3                   END;
     2188    24282    2             KX$L3.LCN# = 0;
     2189    24283
     2190    24284        /* Figure out what to do depending what we had just told CM */
     2191    24285
     2192    24286    3             DO CASE ( CALL_FPT.EVN );
     2193    24287
     2194    24288    3                CASE ( %KX_CM_EV_VCLST# );
     2195    24289
     2196    24290    3   L_RLSL3:        IF NOT KX$L3.RLSCHN
     2197    24291    3                      THEN
     2198    24292    4                         DO;
     2199    24293    4                            KX$L3.CHN$->KH$CHN.CTX$ = ADDR(NIL);
     2200    24294    4                            KX$L3.CHN$ = ADDR(NIL);
     2201    24295    4                         END;
     2202    24296    3                   TEMP2$ = L3$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:70   
     2203    24297    3                   CALL KXS$RLSL3_MAYBE ( TEMP2$ );
     2204    24298
     2205    24299    3                CASE ( %KX_CM_EV_VCDWN# );
     2206    24300
     2207    24301    3                   IF PSTATE = KX$L3.STATE.CURRENT
     2208    24302    3                      THEN
     2209    24303    3                         IF KX$L3.CALDLY = 0
     2210    24304    3                            THEN  /* Simulate a time-out  */
     2211    24305    4                               DO;
     2212    24306    4                                  CALL_FPT = '0'B;
     2213    24307    4                                  CALL_FPT.EVN = %KX_P_EV_TO#;
     2214    24308    4                                  CALL_FPT.RCV$ = L3$;
     2215    24309    4                                  CALL KXP$PACKET ( CALL_FPT );
     2216    24310    4                               END;
     2217    24311    3                            ELSE
     2218    24312    3                               IF NOT KX$L3.TMRBLK.ON
     2219    24313    3                                  THEN
     2220    24314    4                                     DO;
     2221    24315    4                                        CALL Y$START_TIMER ( KX$L3.CALDLY );
     2222    24316    4                                     END;
     2223    24317    3                CASE ( %KX_CM_EV_VCLST_PRM# );
     2224    24318    3                   IF KX$L3.TYP ~= %KX_VC_TYP_PRM#
     2225    24319    3                      THEN
     2226    24320    3                         GOTO L_RLSL3;
     2227    24321    3             END;  /* do case ( .evn ) */
     2228    24322        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:71   
     2229    24323        /*
     2230    24324               CLR_CALL - Send a Clear packet beacuse of invalid call set-up
     2231    24325                  Log the event
     2232    24326                  Send a Clear packet
     2233    24327                  Start the timer
     2234    24328                  Reset the context block
     2235    24329                  If connected to CM
     2236    24330                     Report VCDWN
     2237    24331        */
     2238    24332    2          CASE ( %Y_ACT_CLR_CALL# );
     2239    24333
     2240    24334    2             ERCOD = INVCALPRM;
     2241    24335    2             CALL Y$ER2;
     2242    24336        /*
     2243    24337                                             Since all of the CLR_? cases
     2244    24338                                             have identical actions other
     2245    24339                                             than the diagnostic code, all of
     2246    24340                                             them come here.
     2247    24341        */
     2248    24342    2   CLR_COMMON: ;
     2249    24343
     2250    24344    2             CALL Y$RESET_L3CNTX;
     2251    24345    2             CALL KXS$GETBFR ( 2, TEMP2$ );
     2252    24346    2             DAT$ = TEMP2$;
     2253    24347    2             KX$DATA.RLS.L3 = '1'B;
     2254    24348    2             KX$DATA.CNT = %L2 + L2EXT;
     2255    24349    2             OUT_PKTHDR.TYPE = %Y_ID_CLEAR#;
     2256    24350    2             OUT_PKTHDR.CAUSE = %KX_CAUSE_DTE#;
     2257    24351    2             OUT_PKTHDR.DIAG = DIAG;
     2258    24352    2             CALL Y$PACKET_OUT;
     2259    24353    2             KX_STATS_X25.CLEARS_OUT = KX_STATS_X25.CLEARS_OUT + 1;
     2260    24354
     2261    24355    2             KX$L3.RTRCNT = 0;
     2262    24356    2             CALL Y$START_TIMER ( KX$L3.T23 );
     2263    24357    2             IF CM$ ~= ADDR(NIL)
     2264    24358    2                THEN
     2265    24359    3                   DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:72   
     2266    24360    3                      CALL_FPT.EVN = %KX_CM_EV_VCLST#;
     2267    24361    3                      IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0
     2268    24362    3                         THEN
     2269    24363    4                            DO;
     2270    24364    4                               CALL_FPT.PRS.PRM1 = '1'B;
     2271    24365    4                               CALL_FPT.PRM1 = OUT_PKTHDR.CAUSE;
     2272    24366    4                               IF DATACNT > %L1
     2273    24367    4                                  THEN
     2274    24368    5                                     DO;
     2275    24369    5                                        CALL_FPT.PRS.PRM2 = '1'B;
     2276    24370    5                                        CALL_FPT.PRM2 = OUT_PKTHDR.DIAG;
     2277    24371    5                                     END;
     2278    24372    4                            END;
     2279    24373    3                      CALL Y$CNCMNG;
     2280    24374    3                   END;
     2281    24375        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:73   
     2282    24376        /*
     2283    24377               CLR_CALTO - Send a Clear packet because of call time-out
     2284    24378                  Log the event
     2285    24379                  If out of call retries,
     2286    24380                     Log the event
     2287    24381                     Report a kill to handler common
     2288    24382                     Return
     2289    24383                  Send a Clear packet
     2290    24384                  Start the timer
     2291    24385                  Reset the context block
     2292    24386                  If connected to CM,
     2293    24387                     Report VCDWN
     2294    24388        */
     2295    24389    2          CASE ( %Y_ACT_CLR_CALTO# );
     2296    24390
     2297    24391    2             ERCOD = CALTIMOUT ;
     2298    24392    2             IF ( KX$L3.RTRCNT = 0 ) THEN CALL Y$ER ;
     2299    24393
     2300    24394
     2301    24395    2             KX$L3.RTRCNT = KX$L3.RTRCNT + 1;
     2302    24396    2             IF KX$L3.RTRCNT > KX$L3.R21 AND
     2303    24397    2                ( KX$L3.R21 ~= 0 OR KX$L3.TYP ~= %KX_VC_TYP_PRM# )
     2304    24398    2                THEN
     2305    24399    3                   DO;
     2306    24400    3                      ERCOD = CALRTREXH ;
     2307    24401    3                      CALL Y$ER ;
     2308    24402
     2309    24403    3                      CODE = %KHA_FNC_KILL ;
     2310    24404    3                      CALL Y$DVCADM;
     2311    24405
     2312    24406    3                      RETURN;
     2313    24407    3                   END;
     2314    24408
     2315    24409    2             DIAG = %KX_DIAG_TO_CAL#;
     2316    24410    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2317    24411        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:74   
     2318    24412        /*
     2319    24413               CLR_DISC - send a Clear packet due to a disconnect from HC
     2320    24414                  Log the event
     2321    24415                  Clear the retry count
     2322    24416                  Send a Clear packet
     2323    24417                  Start the timer
     2324    24418                  If connected to CM,
     2325    24419                     Report VCDWN
     2326    24420        */
     2327    24421    2          CASE ( %Y_ACT_CLR_DISC# );
     2328    24422
     2329    24423    2             ERCOD = HC_DSC ;
     2330    24424    2             CALL Y$ER ;
     2331    24425
     2332    24426    2             KX$L3.RTRCNT = 0;
     2333    24427    2             DIAG = %KX_DIAG_DSC#;
     2334    24428    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2335    24429        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:75   
     2336    24430        /*
     2337    24431               CLR_P2 - Send a Clear - invalid packet for state P2
     2338    24432                  Log the event
     2339    24433                  Send a Clear packet
     2340    24434                  Start the timer
     2341    24435                  If connected to CM,
     2342    24436                     Report VCDWN
     2343    24437        */
     2344    24438    2          CASE ( %Y_ACT_CLR_P2# );
     2345    24439
     2346    24440    2             ERCOD = CLR_P2 ;
     2347    24441    2             CALL Y$ER000 ;
     2348    24442
     2349    24443    2             IF KX$L3.CALL_COLLISION
     2350    24444    2                THEN
     2351    24445    2                   DIAG = %KX_DIAG_P5#;
     2352    24446    2                ELSE
     2353    24447    2                   DIAG = %KX_DIAG_P2#;
     2354    24448    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2355    24449        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:76   
     2356    24450        /*
     2357    24451               CLR_P3 - Send a Clear - invalid packet for state P3
     2358    24452                  Log the event
     2359    24453                  Send a Clear packet
     2360    24454                  Start the timer
     2361    24455                  If connected to CM,
     2362    24456                     Report VCDWN
     2363    24457        */
     2364    24458    2          CASE ( %Y_ACT_CLR_P3# );
     2365    24459
     2366    24460    2             ERCOD = CLR_P3 ;
     2367    24461    2             CALL Y$ER000 ;
     2368    24462
     2369    24463    2             DIAG = %KX_DIAG_P3#;
     2370    24464    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2371    24465        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:77   
     2372    24466        /*
     2373    24467               CLR_P4 - Send a Clear - invalid packet for state P4
     2374    24468                  This action is borrowed to send clear pkts w/ other diags.
     2375    24469                  Log the event
     2376    24470                  Send a Clear packet
     2377    24471                  Start the timer
     2378    24472                  If connected to CM,
     2379    24473                     Report VCDWN
     2380    24474        */
     2381    24475    2          CASE ( %Y_ACT_CLR_P4# );
     2382    24476
     2383    24477    2             IF PEVENT ~= %Y_EV_BAD_CALL#
     2384    24478    2                THEN
     2385    24479    3                   DO;
     2386    24480    3                      IF PEVENT = %Y_EV_SHR_PKT#
     2387    24481    3                         THEN
     2388    24482    4                            DO;
     2389    24483    4                               DIAG = %KX_DIAG_SHR#;
     2390    24484    4                            END;
     2391    24485    3                         ELSE
     2392    24486    4                            DO;
     2393    24487    4                               ERCOD = CLR_P4 ;
     2394    24488    4                               CALL Y$ER000 ;
     2395    24489    4                               DIAG = %KX_DIAG_P4#;
     2396    24490    4                            END;
     2397    24491    3                   END;
     2398    24492    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2399    24493        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:78   
     2400    24494        /*
     2401    24495               CLR_RSTTO - Send a Clear - reset time-out
     2402    24496                  Log the event
     2403    24497                  Send a Clear packet
     2404    24498                  Start the timer
     2405    24499                  If connected to CM,
     2406    24500                     Report VCDWN
     2407    24501        */
     2408    24502    2          CASE ( %Y_ACT_CLR_RSTTO# );
     2409    24503
     2410    24504    2             ERCOD = RSTTIMOUT ;
     2411    24505    2             CALL Y$ER ;
     2412    24506
     2413    24507    2             DIAG = %KX_RST_DIAG_RSTEXP#;
     2414    24508    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2415    24509        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:79   
     2416    24510        /*
     2417    24511               CLR_TO - Sent a Clear - timed out before confirmation.
     2418    24512                  Log the event if retries exhausted
     2419    24513                  Retry the Clear packet if not exhausted - else stop.
     2420    24514                  Start the timer
     2421    24515        */
     2422    24516    2          CASE ( %Y_ACT_CLR_TO# );
     2423    24517
     2424    24518    2             KX$L3.RTRCNT = KX$L3.RTRCNT + 1;
     2425    24519    2             IF ( KX$L3.RTRCNT < KX$L3.R23 AND NOT KX$L3.PVC )
     2426    24520    2                THEN
     2427    24521    3                   DO;
     2428    24522    3                      FPT_X25.PRS.PRM1 = '1'B;
     2429    24523    3                      FPT_X25.PRM1 = %KX_DIAG_TO_CLR#;
     2430    24524    3                      GOTO VCLST_ENTRY;   /*  in CASE ( %Y_ACT_VCDWN# ) */
     2431    24525    3                   END;
     2432    24526    2             ERCOD = CLRTIMOUT;
     2433    24527    2             CALL Y$ER;
     2434    24528    2             KX$L3.STATE.CURRENT = %Y_ST_ENB_STOP#;
     2435    24529    2             GOTO L_STOP;  /*       In case STOP  */
     2436    24530        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:80   
     2437    24531        /*
     2438    24532               CLR_UP - Send a Clear - unknown packet received
     2439    24533                  Log the event
     2440    24534                  Send a Clear packet
     2441    24535                  Start the timer
     2442    24536                  If connected to CM,
     2443    24537                     Report VCDWN
     2444    24538        */
     2445    24539    2          CASE ( %Y_ACT_CLR_UP# );
     2446    24540
     2447    24541    2             ERCOD = UNKPCK ;
     2448    24542    2             CALL Y$ER2 ;
     2449    24543
     2450    24544    2             IF IN_PKTHDR.TYPE = %Y_ID_RESTART# OR
     2451    24545    2                IN_PKTHDR.TYPE = %Y_ID_RESTART_C#
     2452    24546    2                THEN
     2453    24547    2                   DIAG = %KX_DIAG_INVRST#;
     2454    24548    2                ELSE
     2455    24549    2                   IF DATACNT-%L0-L3EXT > KX_BUF.SIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ )
     2456    24550    2                      THEN
     2457    24551    2                         DIAG = %KX_DIAG_LNG#;
     2458    24552    2                      ELSE
     2459    24553    2                         DIAG = %KX_DIAG_UNKPCK#;
     2460    24554    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */
     2461    24555        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:81   
     2462    24556        /*
     2463    24557               DATIN - Receipt of data from the other end
     2464    24558                  If complete,
     2465    24559                     Deliver it to CM
     2466    24560                  Otherwise,
     2467    24561                     Save it until the rest arrives
     2468    24562                  Report any pending data acknowledgements to CM
     2469    24563                  If a response should be generated,
     2470    24564                     Start the timer
     2471    24565        */
     2472    24566    2          CASE ( %Y_ACT_DATIN# );
     2473    24567
     2474    24568    2             Y@DFRINP = KX$DATA.RLS.L3;  /* are we processing deferred input? */
     2475    24569    2             IF KX$L3.INPBLK AND NOT Y@DFRINP
     2476    24570    2                THEN
     2477    24571    3                   DO;
     2478    24572    3                      IF KX$L3.INP_HEAD$ = ADDR(NIL)
     2479    24573    3                         THEN
     2480    24574    3                            KX$L3.INP_HEAD$ = DAT$;
     2481    24575    3                         ELSE
     2482    24576    3                            KX$L3.INP_TAIL$->KX$DATA.L3_LIST$ = DAT$;
     2483    24577    3                      KX$L3.INP_TAIL$ = DAT$;
     2484    24578    3                      KX$DATA.L3_LIST$ = ADDR(NIL);
     2485    24579    3                      KX$DATA.RLS.L3 = '1'B;  /* mark this as deferred input */
     2486    24580    3                      GOTO KEEP_BFR;
     2487    24581    3                   END;
     2488    24582    2             KX_STATS_X25.D_PACKETS_IN = KX_STATS_X25.D_PACKETS_IN + 1;
     2489    24583    2             TEMP0 = DATACNT - %LD - L3EXT;
     2490    24584    2             KX_STATS_X25.D_BYTES_IN = KX_STATS_X25.D_BYTES_IN + TEMP0;
     2491    24585    2             CALL_FPT.PRS = '0'B;
     2492    24586
     2493    24587    2             IF KX$L3.IN_.ADR$ = ADDR(NIL)
     2494    24588    2                THEN
     2495    24589    3                   DO;
     2496    24590    3                      KX$L3.IN_.ADR$ = DAT$;
     2497    24591    3                      KX$L3.IN_.BYTX = LENGTHC(KX$PACKET) + L2EXT + L3EXT;
     2498    24592    3                      KX$L3.IN_.BYTSIZ = DATACNT - %LD - L3EXT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:82   
     2499    24593    3                      KX$L3.IN_.BFRSIZ = 0;
     2500    24594    3                      KX$L3.IN_QBIT = IN_PKTHDR.Q_BIT;
     2501    24595    3                      KX$L3.IN_MBIT = MBIT;
     2502    24596    3                   END;
     2503    24597    2                ELSE
     2504    24598    3                   DO;
     2505    24599    3                      IF KX$L3.IN_.BFRSIZ = 0 OR ( KX$L3.IN_.BFRSIZ - KX$L3.IN_.BYTX
     2506    24600    3                         - KX$L3.IN_.BYTSIZ < TEMP0 )
     2507    24601    3                         THEN
     2508    24602    4                            DO;
     2509    24603    4                               SIZ = KX$L3.IN_.BYTSIZ + TEMP0;
     2510    24604    4                               IF MBIT
     2511    24605    4                                  THEN
     2512    24606    4                                     SIZ = SIZ + KX_BUF.SIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ
             24606                                              );
     2513    24607    4                               SIZ = (SIZ + 1) / 2;
     2514    24608    5                               CALL KVB$GET2NSYS ( SIZ, TEMP2$ ) WHENALTRETURN DO;
     2515    24609    5                                        IF KX$L3.VR > 0
     2516    24610    5                                           THEN
     2517    24611    5                                              KX$L3.VR = KX$L3.VR - 1;
     2518    24612    5                                           ELSE
     2519    24613    5                                              KX$L3.VR = 7+120*L3EXT;
     2520    24614    5                                        GOTO EXIT_CASE;
     2521    24615    5                                     END;
     2522    24616    4                               STR$ = KX$L3.IN_.ADR$;
     2523    24617    4                               SUBSTR (TEMP2$->DATSTR,0,KX$L3.IN_.BYTSIZ) =
     2524    24618    4                                  SUBSTR (INSTR,KX$L3.IN_.BYTX,KX$L3.IN_.BYTSIZ);
     2525    24619    4                               IF KX$L3.IN_.BFRSIZ = 0
     2526    24620    4                                  THEN
     2527    24621    5                                     DO;
     2528    24622    5                                        CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );
     2529    24623    5                                     END;
     2530    24624    4                                  ELSE
     2531    24625    5                                     DO;
     2532    24626    5                                        CALL KVB$RLSSYS ( (KX$L3.IN_.BFRSIZ/2), KX$L3.
             24626                                                 IN_.ADR$ );
     2533    24627    5                                     END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:83   
     2534    24628    4                               KX$L3.IN_.ADR$ = TEMP2$;
     2535    24629    4                               KX$L3.IN_.BFRSIZ = SIZ * 2;
     2536    24630    4                               KX$L3.IN_.BYTX = 0;
     2537    24631    4                            END;
     2538    24632    3                      IF ( (KX$L3.IN_.BYTSIZ+TEMP0) > 32768 )
     2539    24633    3                         THEN
     2540    24634    4                            DO;
     2541    24635    4                               KX$L3.STATE.CURRENT = %Y_ST_RESET#;
     2542    24636    4                               DATACNT = 9999;
     2543    24637    4                               GOTO L_RST_D1;
     2544    24638    4                            END;
     2545    24639    3                      STR$ = KX$L3.IN_.ADR$;
     2546    24640    3                      SUBSTR (INSTR,(KX$L3.IN_.BYTSIZ+KX$L3.IN_.BYTX),TEMP0) =
     2547    24641    3                         SUBSTR (DATSTR,LENGTHC(KX$PACKET)+L2EXT+BITBIN(KX$L3.EXTSEQ),
             24641                                  TEMP0);
     2548    24642    3                      KX$L3.IN_.BYTSIZ = KX$L3.IN_.BYTSIZ + TEMP0;
     2549    24643    3                   END;
     2550    24644
     2551    24645    2             IF NOT MBIT OR KX$L3.NOREASM
     2552    24646    2                THEN
     2553    24647    3                   DO;
     2554    24648    3                      KX_STATS_X25.D_CMPPACKETS_IN = KX_STATS_X25.D_CMPPACKETS_IN + 1;
     2555    24649    3                      CALL_FPT.EVN = %KX_CM_EV_DATIN#;
     2556    24650    3                      CALL_FPT.V_ = KX$L3.IN_;
     2557    24651    3                      CALL_FPT.PRS.PRM1 = KX$L3.IN_QBIT;
     2558    24652    3                      CALL_FPT.PRS.PRM2 = KX$L3.IN_MBIT;
     2559    24653    3                      CALL_FPT.PRS.PRM2 = MBIT;
     2560    24654    3                      CALL Y$CNCMNG
     2561    24655    3                         WHENALTRETURN
     2562    24656    4                            DO;
     2563    24657    4                               KX$L3.INPBLK = '1'B;
     2564    24658    4                               GOTO KEEP_BFR;
     2565    24659    4                            END;
     2566    24660    3                      KX$L3.INPBLK = '0'B;
     2567    24661    3                      IF PSTATE ~= KX$L3.STATE.CURRENT
     2568    24662    3                         THEN
     2569    24663    4                            DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:84   
     2570    24664    4                               FPT_X25.PRM1$ = ADDR(NIL);
     2571    24665    4                               RETURN;
     2572    24666    4                            END;
     2573    24667        /*    Incoming data has been passed on to higher layers.
     2574    24668              Release the buffer if KXH will not be re-using it.
     2575    24669        */
     2576    24670    3                      IF KX$L3.IN_.ADR$ ~= FPT_X25.PRM1$ OR Y@DFRINP
     2577    24671    3                         THEN
     2578    24672    4                            DO;
     2579    24673    4                               IF KX$L3.IN_.BFRSIZ = 0
     2580    24674    4                                  THEN
     2581    24675    5                                     DO;
     2582    24676    5                                        CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );
     2583    24677    5                                     END;
     2584    24678    4                                  ELSE
     2585    24679    5                                     DO;
     2586    24680    5                                        CALL KVB$RLSSYS ( (KX$L3.IN_.BFRSIZ/2), KX$L3.
             24680                                                 IN_.ADR$ );
     2587    24681    5                                     END;
     2588    24682    4                            END;
     2589    24683    3                      KX$L3.IN_.ADR$ = ADDR(NIL);
     2590    24684    3                   END;
     2591    24685
     2592    24686    2             IF FPT_X25.PRM1$ = KX$L3.IN_.ADR$
     2593    24687    2                THEN
     2594    24688        /*
     2595    24689           This is the first part of a multi-packet message.
     2596    24690           Reassembly is in progress. Hold on to this buffer.
     2597    24691        */
     2598    24692    2   KEEP_BFR:       FPT_X25.PRM1$ = ADDR(NIL);
     2599    24693
     2600    24694    2             IF PSTATE ~= KX$L3.STATE.CURRENT OR Y@DFRINP THEN RETURN;
     2601    24695
     2602    24696
     2603    24697    2             KX$L3.DCNTP = KX$L3.DCNTP + 1;
     2604    24698    2             IF (((KX$L3.DCNTP >= KX$L3.RSPDLY) OR
     2605    24699    2                KX$L3.RSPTOCMP AND NOT MBIT )
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:85   
     2606    24700    2                AND ((KX$L3.OUT_.ADR$ = ADDR(NIL)) AND
     2607    24701    2                (KX$L3.RTR$ = ADDR(NIL)) OR KX$L3.BLK))
     2608    24702    2                THEN
     2609    24703    2                   IF KX$L3.RSPTMR = 0 OR KX$L3.DCNTP = KX$L3.CALL_OPTS.RCVWND
     2610    24704    2                      THEN
     2611    24705    3                         DO;
     2612    24706    3   L_SEND_RR:               ID = %Y_ID_RR#;
     2613    24707    3                            CALL Y$SEND_PACKET;
     2614    24708    3                         END;
     2615    24709    2                      ELSE
     2616    24710    3                         DO;
     2617    24711    3                            IF NOT KX$L3.TMRBLK.ON
     2618    24712    3                               THEN
     2619    24713    3                                  CALL Y$START_TIMER ( KX$L3.RSPTMR );
     2620    24714    3                         END;
     2621    24715    2   EXIT_CASE: ;
     2622    24716        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:86   
     2623    24717        /*
     2624    24718               DATOUT - send a Data packet
     2625    24719                  Send a Data packet
     2626    24720                  If it didn't all fit,
     2627    24721                     Save information for future packets
     2628    24722                     Set the DATA flag
     2629    24723                  Set the BLK flag if the window is exhausted
     2630    24724        */
     2631    24725    2          CASE ( %Y_ACT_DATOUT# );
     2632    24726
     2633    24727    2             CALL Y$DATOUT;
     2634    24728        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:87   
     2635    24729        /*
     2636    24730               DCL - Inform CM about a SUPER-defined VC
     2637    24731                  Log the event
     2638    24732                  Report DCL
     2639    24733        */
     2640    24734    2          CASE ( %Y_ACT_DCL# );
     2641    24735
     2642    24736    2             ERCOD = DCL_EVENT ;
     2643    24737    2             IF PEVENT ~= %Y_EV_TO#
     2644    24738    2                THEN
     2645    24739    3                   DO; /* Only log the first of a series of retried calls */
     2646    24740    3                      KX$L3.RTRCNT = 0;
     2647    24741    3                      CALL Y$ER ;
     2648    24742    3                   END;
     2649    24743
     2650    24744    2             CALL Y$STOP_TMR;
     2651    24745
     2652    24746
     2653    24747    2             CALL_FPT.EVN = %KX_CM_EV_DCL#;
     2654    24748    2             CALL_FPT.PRM1 = KX$L3.NOD;
     2655    24749    2             CALL_FPT.PRM2 = KX$L3.TYP;
     2656    24750    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.DFL_OPTS );
     2657    24751    2             CALL_FPT.PRM2$ = KX$L3.CHN$;
     2658    24752    2             KX_CALLING_CM$ = L3$;
     2659    24753    2             CALL Y$CNCMNG;
     2660    24754    2             KX_CALLING_CM$ = ADDR(NIL);
     2661    24755    2             KX$L3.CM$ = CALL_FPT.RCV$;
     2662    24756    2             KX$L3.NOREASM = CALL_FPT.PRS.PRM1;
     2663    24757    2             IF KX$L3.T25 = 0
     2664    24758    2                THEN
     2665    24759    2                   KX$L3.TOACT = %KX_L3_TOACT_NULL#;
     2666    24760    2                ELSE
     2667    24761    2                   KX$L3.TOACT = CALL_FPT.PRM1;
     2668    24762        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:88   
     2669    24763        /*
     2670    24764               DSB - move the VCs into a disabled state
     2671    24765                  Log the event
     2672    24766                  Stop the timer
     2673    24767                  Set the LCN to 0
     2674    24768                  Reset the retry count
     2675    24769                  Reset the context
     2676    24770                  Report VCLST to CM
     2677    24771        */
     2678    24772    2          CASE ( %Y_ACT_DSB# );
     2679    24773
     2680    24774    2             ERCOD = DSB ;
     2681    24775    2             CALL Y$ER ;
     2682    24776
     2683    24777    2             CALL Y$STOP_TMR ;
     2684    24778
     2685    24779    2             KX$L3.LCN# = 0;
     2686    24780    2             KX$L3.RTRCNT = 0;
     2687    24781    2             CALL Y$RESET_L3CNTX;
     2688    24782    2             CALL_FPT.EVN = %KX_CM_EV_VCLST#;
     2689    24783    2             CALL Y$CNCMNG;
     2690    24784        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:89   
     2691    24785        /*
     2692    24786               DWN - move the VC into the DOWN state
     2693    24787                  If the Clear packet has a non-zero cause,
     2694    24788                     Log the Clear packet
     2695    24789                  Stop the timer
     2696    24790                  If not SUPER-defined,
     2697    24791                     Report VCLST
     2698    24792                     Release the context
     2699    24793                  Otherwise,
     2700    24794                     Report a disconnect to HC
     2701    24795                     If still in the same state,
     2702    24796                     Report VCDWN to CM
     2703    24797        */
     2704    24798    2          CASE ( %Y_ACT_DWN# );
     2705    24799
     2706    24800    2             IF DATACNT > %L0 AND IN_PKTHDR.TYPE = %Y_ID_CLEAR#
     2707    24801    2                AND IN_PKTHDR.CAUSE ~=  0
     2708    24802    2                THEN
     2709    24803    3                   DO;
     2710    24804    3                      ERCOD = FTLCLR ;
     2711    24805    3                      CALL Y$ER2 ;
     2712    24806    3                   END;
     2713    24807    2             CALL Y$STOP_TMR ;
     2714    24808
     2715    24809    2             KX$L3.LCN# = 0;
     2716    24810    2             CODE = %KHA_FNC_DISCONNECT_EVT ;
     2717    24811    2             CALL Y$DVCADM;
     2718    24812    2             IF PSTATE = KX$L3.STATE.CURRENT
     2719    24813    2                THEN
     2720    24814    3                   DO;
     2721    24815    3                      CALL_FPT.EVN = %KX_CM_EV_VCDWN#;
     2722    24816    3                      IF IN_PKTHDR.TYPE = %Y_ID_CLEAR#
     2723    24817    3                         THEN
     2724    24818    4                            DO;
     2725    24819    4                               CALL_FPT.PRS.V = '1'B;
     2726    24820    4                               IF DATACNT > %L0
     2727    24821    4                                  THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:90   
     2728    24822    5                                     DO;
     2729    24823    5                                        CALL_FPT.PRS.PRM1 = '1'B;
     2730    24824    5                                        CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;
     2731    24825    5                                        IF DATACNT > %L1
     2732    24826    5                                           THEN
     2733    24827    6                                              DO;
     2734    24828    6                                                 CALL_FPT.PRS.PRM2 = '1'B;
     2735    24829    6                                                 CALL_FPT.PRM2 = IN_PKTHDR.DIAG;
     2736    24830    6                                              END;
     2737    24831    5                                     END;
     2738    24832    4                            END;
     2739    24833    3                      CALL Y$CNCMNG;
     2740    24834    3                   END;
     2741    24835        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:91   
     2742    24836        /*
     2743    24837               FLOW - Process information from an RR or RNR packet
     2744    24838                  Deliver any pending data acknowledgements to CM
     2745    24839        */
     2746    24840    2          CASE ( %Y_ACT_FLOW# );
     2747    24841
     2748    24842    2             KX_STATS_X25.P_FLOW_IN = KX_STATS_X25.P_FLOW_IN + 1;
     2749    24843        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:92   
     2750    24844        /*
     2751    24845               INT - Deliver an Interrupt packet to CM
     2752    24846                  Report INT to CM
     2753    24847                  If still in the same state,
     2754    24848                     Send an Interrupt_C packet
     2755    24849        */
     2756    24850    2          CASE ( %Y_ACT_INT# );
     2757    24851
     2758    24852    2             CALL_FPT.EVN = %KX_CM_EV_INT#;
     2759    24853    2             CALL_FPT.V_.ADR$ = DAT$;
     2760    24854    2             CALL_FPT.V_.BYTX = LENGTHC(KX$PACKET) + L2EXT;
     2761    24855    2             CALL_FPT.V_.BYTSIZ = DATACNT - %L0;
     2762    24856    2             CALL Y$CNCMNG;
     2763    24857
     2764    24858    2             IF PSTATE = KX$L3.STATE.CURRENT
     2765    24859    2                THEN
     2766    24860    3                   DO;
     2767    24861    3                      ID = %Y_ID_INT_C#;
     2768    24862    3                      CALL Y$SEND_PACKET;
     2769    24863    3                   END;
     2770    24864        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:93   
     2771    24865        /*
     2772    24866               INTC - Process expected Interupt_C packet
     2773    24867                  Clear the Interrupt pending flag
     2774    24868                  Report INTACK to CM
     2775    24869        */
     2776    24870    2          CASE ( %Y_ACT_INTC# );
     2777    24871
     2778    24872    2             KX$L3.INTPND = '0'B;
     2779    24873    2             CALL_FPT.EVN = %KX_CM_EV_INTACK#;
     2780    24874    2             CALL Y$CNCMNG;
     2781    24875    2             CALL Y$STOP_INTTMR;
     2782    24876        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:94   
     2783    24877        /*
     2784    24878               NULL - do nothing
     2785    24879        */
     2786    24880    2          CASE ( %Y_ACT_NULL# );
     2787    24881
     2788    24882        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:95   
     2789    24883        /*
     2790    24884               RESTART - start a restart procedure
     2791    24885                  Log the event
     2792    24886                  Stop all the VCs
     2793    24887                  Send a Restart packet
     2794    24888        */
     2795    24889    2          CASE ( %Y_ACT_RESTART# );
     2796    24890
     2797    24891    2             CALL Y$STOP_L3S;
     2798    24892    2             CALL Y$RESTART;
     2799    24893        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:96   
     2800    24894        /*
     2801    24895               RLS - Release level 3 context
     2802    24896                  If the Clear packet has a non-zero cause,
     2803    24897                     Log the event
     2804    24898                  Otherwise,
     2805    24899                     Log the release action
     2806    24900                  Stop the timer
     2807    24901                  If connected to CM,
     2808    24902                     Report VCLST
     2809    24903                  Release the context
     2810    24904        */
     2811    24905    2          CASE ( %Y_ACT_RLS# );
     2812    24906
     2813    24907    2             IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0
     2814    24908    2                AND IN_PKTHDR.CAUSE ~= 0
     2815    24909    2                THEN
     2816    24910    3                   DO;
     2817    24911    3                      ERCOD = FTLCLR ;
     2818    24912    3                      CALL Y$ER2 ;
     2819    24913    3                   END;
     2820    24914    2                ELSE
     2821    24915    3                   DO;
     2822    24916    3                      ERCOD = RLSACT ;
     2823    24917    3                      CALL Y$ER0000 ;
     2824    24918
     2825    24919    3                   END;
     2826    24920
     2827    24921    2             CALL Y$RESET_L3CNTX;
     2828    24922    2             IF CM$ ~= ADDR(NIL)
     2829    24923    2                THEN
     2830    24924    3                   DO;
     2831    24925    3                      CALL_FPT.EVN = %KX_CM_EV_VCLST#;
     2832    24926    3                      IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0
     2833    24927    3                         THEN
     2834    24928    4                            DO;
     2835    24929    4                               CALL_FPT.PRS.PRM1 = '1'B;
     2836    24930    4                               CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:97   
     2837    24931    4                               IF DATACNT > %L1
     2838    24932    4                                  THEN
     2839    24933    5                                     DO;
     2840    24934    5                                        CALL_FPT.PRS.PRM2 = '1'B;
     2841    24935    5                                        CALL_FPT.PRM2 = IN_PKTHDR.DIAG;
     2842    24936    5                                     END;
     2843    24937    4                            END;
     2844    24938    3                      CALL Y$CNCMNG;
     2845    24939    3                   END;
     2846    24940    2             TEMP2$ = L3$;
     2847    24941    2             CALL KXS$RLSL3 ( TEMP2$ );
     2848    24942        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:98   
     2849    24943        /*
     2850    24944               RMTDCL - declare a non-SUPER-defined VC to CM
     2851    24945                  Log the event
     2852    24946                  Report RMTDCL to CM
     2853    24947        */
     2854    24948    2          CASE ( %Y_ACT_RMTDCL# );
     2855    24949
     2856    24950    2             ERCOD = RMTDCL ;
     2857    24951    2             CALL Y$ER2;
     2858    24952
     2859    24953
     2860    24954    2             CALL_FPT.EVN = %KX_CM_EV_RMTDCL#;
     2861    24955    2             CALL_FPT.PRM1 = KX$L3.NOD;
     2862    24956    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.DFL_OPTS );
     2863    24957    2             CALL_FPT.PRM2$ = KX$L3.CHN$;
     2864    24958    2             CALL_FPT.V_.ADR$ = DAT$;
     2865    24959    2             CALL_FPT.V_.BYTX = BYTE_INDEX;
     2866    24960    2             CALL_FPT.V_.BYTSIZ = KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX;
     2867    24961
     2868    24962    2             KX_CALLING_CM$ = L3$;
     2869    24963    2             CALL Y$CNCMNG;
     2870    24964    2             KX_CALLING_CM$ = ADDR(NIL);
     2871    24965    2             KX$L3.CM$ = CALL_FPT.RCV$;
     2872    24966    2             KX$L3.NOREASM = CALL_FPT.PRS.PRM1;
     2873    24967    2             IF KX$L3.T25 = 0
     2874    24968    2                THEN
     2875    24969    2                   KX$L3.TOACT = %KX_L3_TOACT_NULL#;
     2876    24970    2                ELSE
     2877    24971    2                   KX$L3.TOACT = CALL_FPT.PRM1;
     2878    24972        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:99   
     2879    24973        /*
     2880    24974               RSTCMP - a reset procedure has been completed
     2881    24975                  Log the event
     2882    24976                  Stop timer
     2883    24977                  Set the data available flag
     2884    24978                  Report VCRST to CM
     2885    24979        */
     2886    24980    2          CASE ( %Y_ACT_RSTCMP# );
     2887    24981
     2888    24982    2             CALL Y$STOP_TMR ;
     2889    24983    2             IF ( KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND
     2890    24984    2                KX$L3.STATE.CURRENT ~= %Y_ST_RESET# )
     2891    24985    2                THEN
     2892    24986    2                   RETURN;
     2893    24987
     2894    24988    2             IF PEVENT = %Y_EV_RESET#
     2895    24989    2                THEN
     2896    24990    3                   DO;
     2897    24991    3                      ERCOD = RSTRCV ;
     2898    24992    3                      CALL Y$ER2 ;
     2899    24993    3                      CALL_FPT.EVN = %KX_CM_EV_RSTIND#;
     2900    24994    3                   END;
     2901    24995    2                ELSE
     2902    24996    3                   DO;
     2903    24997    3                      ERCOD = RSTCMP ;
     2904    24998    3                      CALL Y$ER ;
     2905    24999    3                      CALL_FPT.EVN = %KX_CM_EV_VCRST#;
     2906    25000
     2907    25001    3                   END;
     2908    25002    2             KX$L3.DATA = '1'B;
     2909    25003    2             IF PEVENT = %Y_EV_RESET# AND DATACNT > %L0
     2910    25004    2                THEN
     2911    25005    3                   DO;
     2912    25006    3                      CALL_FPT.PRS.PRM1 = '1'B;
     2913    25007    3                      CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;
     2914    25008    3                      IF DATACNT > %L1
     2915    25009    3                         THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:100  
     2916    25010    4                            DO;
     2917    25011    4                               CALL_FPT.PRS.PRM2 = '1'B;
     2918    25012    4                               CALL_FPT.PRM2 = IN_PKTHDR.DIAG;
     2919    25013    4                            END;
     2920    25014    3                   END;
     2921    25015    2             CALL Y$CNCMNG;
     2922    25016        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:101  
     2923    25017        /*
     2924    25018               RSTRCV - complete a reset procedure
     2925    25019                  Log the event
     2926    25020                  Reset the context block
     2927    25021                  Report VCRST to CM
     2928    25022                  If still in the same state,
     2929    25023                     Send a Reset_C packet
     2930    25024                     Start the timer
     2931    25025        */
     2932    25026    2          CASE ( %Y_ACT_RSTRCV# );
     2933    25027
     2934    25028    2             ERCOD = RSTRCV ;
     2935    25029    2             CALL Y$ER2 ;
     2936    25030    2             CALL Y$RESET_L3CNTX;
     2937    25031    2             KX$L3.DATA = '1'B;
     2938    25032
     2939    25033    2             CALL_FPT.EVN = %KX_CM_EV_RSTIND#;
     2940    25034    2             IF DATACNT > %L0
     2941    25035    2                THEN
     2942    25036    3                   DO;
     2943    25037    3                      CALL_FPT.PRS.PRM1 = '1'B;
     2944    25038    3                      CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;
     2945    25039    3                      IF KX$L3.PVC
     2946    25040    3                         THEN
     2947    25041    4                            DO;
     2948    25042    4                               IF CALL_FPT.PRM1 = %KX_RST_CAUSE_OOO#
     2949    25043    4                                  THEN
     2950    25044    4                                     CALL_FPT.EVN = %KX_CM_EV_VCDWN#;
     2951    25045    4                                  ELSE
     2952    25046    4                                     IF CALL_FPT.PRM1 = %KX_RST_CAUSE_RDO#
     2953    25047    4                                        THEN
     2954    25048    4                                           CALL_FPT.EVN = %KX_CM_EV_VCUP#;
     2955    25049    4                            END;
     2956    25050    3                      IF DATACNT > %L1
     2957    25051    3                         THEN
     2958    25052    4                            DO;
     2959    25053    4                               CALL_FPT.PRS.PRM2 = '1'B;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:102  
     2960    25054    4                               CALL_FPT.PRM2 = IN_PKTHDR.DIAG;
     2961    25055    4                            END;
     2962    25056    3                   END;
     2963    25057    2             CALL Y$CNCMNG;
     2964    25058
     2965    25059    2             IF PSTATE = KX$L3.STATE.CURRENT
     2966    25060    2                THEN
     2967    25061    3                   DO;
     2968    25062    3                      ID = %Y_ID_RESET_C#;
     2969    25063    3                      CALL Y$SEND_PACKET;
     2970    25064    3                   END;
     2971    25065        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:103  
     2972    25066        /*
     2973    25067               RST_D1 - start a reset procedure
     2974    25068                  Log the event
     2975    25069                  Send a reset packet
     2976    25070                  Start the timer
     2977    25071                  Reset the context block
     2978    25072                  Report VCRST to CM
     2979    25073        */
     2980    25074    2          CASE ( %Y_ACT_RST_D1# );
     2981    25075
     2982    25076    2   L_RST_D1: ERCOD = RST_D1 ;
     2983    25077    2             CALL Y$ER2 ;
     2984    25078
     2985    25079    2             IF DATACNT > %LD + L3EXT + KX_BUF.SIZ(KX$L3.CALL_OPTS.RCVPCKSIZ)
     2986    25080    2                THEN
     2987    25081    2                   DIAG = %KX_RST_DIAG_LNG#;
     2988    25082    2                ELSE
     2989    25083    2                   IF DATACNT < %LD + L3EXT
     2990    25084    2                      THEN
     2991    25085    2                         DIAG = %KX_RST_DIAG_SHR#;
     2992    25086    2                      ELSE
     2993    25087    2                         IF PEVENT = %Y_EV_UNK_TYPE#
     2994    25088    2                            THEN
     2995    25089    2                               IF IN_PKTHDR.TYPE= %Y_ID_RESTART# OR
     2996    25090    2                                  IN_PKTHDR.TYPE= %Y_ID_RESTART_C#
     2997    25091    2                                  THEN
     2998    25092    2                                     DIAG = %KX_RST_DIAG_LCN0#;
     2999    25093    2                                  ELSE
     3000    25094    2                                     IF DATACNT-%L0-L3EXT > KX_BUF.SIZ ( KX$L3.
             25094                                              CALL_OPTS.RCVPCKSIZ )
     3001    25095    2                                        THEN
     3002    25096    2                                           DIAG = %KX_RST_DIAG_LNG#;
     3003    25097    2                                        ELSE
     3004    25098    2                                           DIAG = %KX_RST_DIAG_UNID#;
     3005    25099    2                            ELSE
     3006    25100    2                               IF PEVENT = %Y_EV_SHR_PKT#
     3007    25101    2                                  THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:104  
     3008    25102    2                                     DIAG = %KX_RST_DIAG_SHR#;
     3009    25103    2                                  ELSE
     3010    25104    2                                     DIAG = %KX_RST_DIAG_D1#;
     3011    25105    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;
     3012    25106
     3013    25107    2   RST_PRS_ENTRY: ;  /*                 From case RST_PRS  */
     3014    25108
     3015    25109    2             CALL Y$RESET_L3CNTX;
     3016    25110    2             CALL KXS$GETBFR ( 2, TEMP2$ );
     3017    25111    2             DAT$ = TEMP2$;
     3018    25112    2             KX$DATA.RLS.L3 = '1'B;
     3019    25113    2             KX$DATA.CNT = %L2 + L2EXT;
     3020    25114    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;
     3021    25115    2             OUT_PKTHDR.DIAG = DIAG;
     3022    25116    2             CALL Y$PACKET_OUT;
     3023    25117
     3024    25118    2             CALL Y$START_TIMER ( KX$L3.T22 );
     3025    25119
     3026    25120    2             CALL_FPT.EVN = %KX_CM_EV_VCRST#;
     3027    25121    2             CALL Y$CNCMNG;
     3028    25122        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:105  
     3029    25123        /*
     3030    25124               RST_PRS - start a reset procedure
     3031    25125                  Send a Reset packet
     3032    25126                  Start the timer
     3033    25127                  Reset the context block
     3034    25128                  Report VCRST to CM
     3035    25129        */
     3036    25130    2          CASE ( %Y_ACT_RST_PRS# );
     3037    25131
     3038    25132    2             GOTO RST_PRS_ENTRY;  /*    In case RST_D1  */
     3039    25133        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:106  
     3040    25134        /*S* SCREECH_CODE: KXP-S$KX_PCK_ACTSCR#
     3041    25135             MESSAGE: KXP$PACKET received a call with an illegal event type
     3042    25136                      for the current state.
     3043    25137        */
     3044    25138    2          CASE ( %Y_ACT_SCREECH# );
     3045    25139
     3046    25140    2             FPT_X25.PRM1$ = ADDR(Y_ACTSCR);
     3047    25141    2             ALTRETURN;
     3048    25142        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:107  
     3049    25143        /*
     3050    25144               STOP - move a VC to a stopped state
     3051    25145               STOP_KD - move a VC to a stopped state
     3052    25146                  Log the event
     3053    25147                  Stop the timer
     3054    25148                  Report VCLST to CM
     3055    25149                  If non-SUPER-defined,
     3056    25150                     Release the context
     3057    25151                  Otherwise,
     3058    25152                     Clear the LCN
     3059    25153                     Clear the retry counter
     3060    25154                     Reset the context block
     3061    25155                     If STOP_KD, report disconnect to HC
     3062    25156        */
     3063    25157    2          CASE ( %Y_ACT_STOP#, %Y_ACT_STOP_KD# );
     3064    25158
     3065    25159    2             CALL Y$ER0 ;
     3066    25160
     3067    25161
     3068    25162    2   L_STOP:   ;
     3069    25163    2             CALL Y$STOP_TMR ;
     3070    25164
     3071    25165    2             CALL Y$RESET_L3CNTX;
     3072    25166
     3073    25167    2             CALL_FPT.EVN = %KX_CM_EV_VCLST#;
     3074    25168    2             CALL Y$CNCMNG;
     3075    25169
     3076    25170    2             IF KX$L3.TYP ~= %KX_VC_TYP_PRM#
     3077    25171    2                THEN
     3078    25172    3                   DO;
     3079    25173    3                      TEMP2$ = L3$;
     3080    25174    3                      CALL KXS$RLSL3 ( TEMP2$ );
     3081    25175    3                   END;
     3082    25176    2                ELSE
     3083    25177    3                   DO;
     3084    25178    3                      IF NOT KX$L3.PVC
     3085    25179    3                         THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:108  
     3086    25180    3                            KX$L3.LCN# = 0;
     3087    25181    3                      KX$L3.RTRCNT = 0;
     3088    25182    3                      IF ACTION = %Y_ACT_STOP#
     3089    25183    3                         THEN
     3090    25184    3                            EXIT;
     3091    25185    3                      CODE = %KHA_FNC_DISCONNECT_EVT ;
     3092    25186    3                      CALL Y$DVCADM;
     3093    25187    3                   END;
     3094    25188        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:109  
     3095    25189        /*
     3096    25190               VCDWN,VCLST - start a clear procedure
     3097    25191                  Log the event
     3098    25192                  Send a Clear packet
     3099    25193                  Start the timer
     3100    25194                  Reset the context block
     3101    25195                  Reset the retry counter
     3102    25196        */
     3103    25197    2          CASE ( %Y_ACT_VCDWN#, %Y_ACT_VCLST# );
     3104    25198
     3105    25199    2             IF ACTION = %Y_ACT_VCDWN#
     3106    25200    2                THEN
     3107    25201    2                   ERCOD = VCDWN ;
     3108    25202    2                ELSE
     3109    25203    2                   ERCOD = VCLST ;
     3110    25204    2             CALL Y$ER ;
     3111    25205
     3112    25206    2             KX$L3.RTRCNT = 0;
     3113    25207    2   VCLST_ENTRY: ;  /*                   Entry for case RESTART */
     3114    25208
     3115    25209    2             CALL Y$RESET_L3CNTX;
     3116    25210    2             TEMP0 = FPT_X25.V_.BYTSIZ;
     3117    25211    2             TEMP1 = TEMP0 + %L2 + L2EXT;
     3118    25212    2             CALL KXS$GETBFR ( TEMP1, TEMP2$ );
     3119    25213    2             DAT$ = TEMP2$;
     3120    25214    2             KX$DATA.RLS.L3 = '1'B;
     3121    25215    2             KX$DATA.CNT = TEMP1;
     3122    25216    2             OUT_PKTHDR.TYPE = %Y_ID_CLEAR#;
     3123    25217    2             OUT_PKTHDR.CAUSE = %KX_CAUSE_DTE#;
     3124    25218    2             IF FPT_X25.PRS.PRM1 = '1'B
     3125    25219    2                THEN
     3126    25220    2                   OUT_PKTHDR.DIAG = FPT_X25.PRM1;
     3127    25221    2                ELSE
     3128    25222    2                   OUT_PKTHDR.DIAG = %KX_DIAG_NON#;
     3129    25223    2             IF TEMP0 ~= 0 AND TEMP0 <= 128 AND KX$L3.FSTSLC ~= 0
     3130    25224    2                THEN
     3131    25225    3                   DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:110  
     3132    25226        /*
     3133    25227          Send clear user data on a fast select circuit.
     3134    25228        */
     3135    25229    3                      SUBSTR(DAT$->STRT0,LENGTHC(KX$PACKET)+%L2+L2EXT,TEMP0) =
     3136    25230    3                         SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0);
     3137    25231    3                   END;
     3138    25232    2             CALL Y$PACKET_OUT;
     3139    25233
     3140    25234    2             CALL Y$START_TIMER ( KX$L3.T23 );
     3141    25235        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:111  
     3142    25236        /*
     3143    25237               VCDWN_NCLR - move a VC into the DOWN state
     3144    25238                  Log the event
     3145    25239                  Stop the timer
     3146    25240                  Reset the retry counter
     3147    25241                  Report VCDWN to CM
     3148    25242        */
     3149    25243    2          CASE ( %Y_ACT_VCDWN_NCLR# );
     3150    25244
     3151    25245    2             ERCOD = VCDWN ;
     3152    25246    2             CALL Y$ER ;
     3153    25247
     3154    25248    2             CALL Y$STOP_TMR ;
     3155    25249
     3156    25250    2             KX$L3.RTRCNT = 0;
     3157    25251        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:112  
     3158    25252        /*
     3159    25253               VCLST_NCLR - disassociate a VC from CM
     3160    25254                  Log the event
     3161    25255                  Clear KX$L3.CM$
     3162    25256        */
     3163    25257    2          CASE ( %Y_ACT_VCLST_NCLR# );
     3164    25258
     3165    25259
     3166    25260    2             ERCOD = VCLST ;
     3167    25261    2             CALL Y$ER ;
     3168    25262
     3169    25263
     3170    25264    2             KX$L3.CM$ = ADDR(NIL);
     3171    25265        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:113  
     3172    25266        /*
     3173    25267               VCRST - start a reset procedure
     3174    25268                  Log the event
     3175    25269                  Send a Reset packet
     3176    25270                  Start the timer
     3177    25271                  Reset the context block
     3178    25272        */
     3179    25273    2          CASE ( %Y_ACT_VCRST# );
     3180    25274
     3181    25275    2             ERCOD = VCRST ;
     3182    25276    2             CALL Y$ER ;
     3183    25277
     3184    25278
     3185    25279    2             CALL Y$RESET_L3CNTX;
     3186    25280    2             CALL KXS$GETBFR ( 2, TEMP2$ );
     3187    25281    2             DAT$ = TEMP2$;
     3188    25282    2             KX$DATA.RLS.L3 = '1'B;
     3189    25283    2             KX$DATA.CNT = %L2 + L2EXT;
     3190    25284    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;
     3191    25285    2             OUT_PKTHDR.CAUSE = %KX_RST_CAUSE_DTE#;
     3192    25286    2             IF FPT_X25.PRS.PRM1
     3193    25287    2                THEN
     3194    25288    2                   OUT_PKTHDR.DIAG = FPT_X25.PRM1;
     3195    25289    2                ELSE
     3196    25290    2                   OUT_PKTHDR.DIAG = %KX_DIAG_NON#;
     3197    25291    2             CALL Y$PACKET_OUT;
     3198    25292    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;
     3199    25293
     3200    25294    2             CALL Y$START_TIMER ( KX$L3.T22 );
     3201    25295        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:114  
     3202    25296        /*
     3203    25297               VCUP - complete call set-up
     3204    25298                  Log the event
     3205    25299                  Stop timer
     3206    25300                  Send a Call_C packet
     3207    25301                  Set the data available flag
     3208    25302                  reset retry count
     3209    25303                  Report VCUP to CM
     3210    25304        */
     3211    25305    2          CASE ( %Y_ACT_VCUP# );
     3212    25306
     3213    25307    2             ERCOD = VCUP ;
     3214    25308    2             CALL Y$ER ;
     3215    25309
     3216    25310
     3217    25311    2             CALL Y$STOP_TMR ;
     3218    25312
     3219    25313
     3220    25314        /*
     3221    25315                                             Send a Call Confirmation packet
     3222    25316        */
     3223    25317    2             IF NOT KX$L3.PVC
     3224    25318    2                THEN
     3225    25319    3                   DO;
     3226    25320    3                      CALL KXS$GETBFR ( 256, TEMP2$ );
     3227    25321    3                      DAT$ = TEMP2$;
     3228    25322    3                      KX$DATA.RLS.L3 = '1'B;
     3229    25323    3                      SENDING_CALL = '0'B;
     3230    25324    3                      OUT_PKTHDR.TYPE = %Y_ID_CALL_C#;
     3231    25325    3                      BYTE_INDEX = LENGTHC(KX$PACKET)+L2EXT;
     3232    25326    3                      BYTE_ARRAY ( BYTE_INDEX ) = 0;     /* address lengths = 0 */
     3233    25327    3                      BYTE_INDEX = BYTE_INDEX + 1;
     3234    25328    3                      CALL Y$STUFF_FACILITIES;
     3235    25329    3                      KX$DATA.CNT = BYTE_INDEX - LENGTHC(KX$DATA);
     3236    25330    3                      TEMP0 = FPT_X25.V_.BYTSIZ;
     3237    25331    3                      IF TEMP0 ~= 0 AND TEMP0 <= 128 AND KX$L3.FSTSLC = %KX_FSTSLC_UNR#
     3238    25332    3                         THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:115  
     3239    25333    4                            DO;
     3240    25334    4                               SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0) =
     3241    25335    4                                  SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0);
     3242    25336    4                               KX$DATA.CNT = KX$DATA.CNT + TEMP0;
     3243    25337    4                            END;
     3244    25338    3                      CALL Y$PACKET_OUT;
     3245    25339    3                   END;
     3246    25340    2             KX_STATS_X25.CIRCUITS = KX_STATS_X25.CIRCUITS + 1;
     3247    25341
     3248    25342
     3249    25343    2             KX$L3.DATA = '1'B;
     3250    25344    2             KX$L3.RTRCNT = 0;
     3251    25345    2             CALL_FPT = '0'B;
     3252    25346    2             CALL_FPT.EVN = %KX_CM_EV_VCUP#;
     3253    25347    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.CALL_OPTS );
     3254    25348    2             CALL Y$CNCMNG;
     3255    25349        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:116  
     3256    25350        /*
     3257    25351                PVCDWN  -  CM is not ready to start this permanent VC
     3258    25352                           send RESET with cause 01 (Out Of Order),
     3259    25353                           call CM to say VCDOWN
     3260    25354        */
     3261    25355    2          CASE ( %Y_ACT_PVCDWN# );
     3262    25356    2             CALL Y$RESET_L3CNTX;
     3263    25357    2             CALL KXS$GETBFR ( 2, DAT$ );
     3264    25358    2             KX$DATA.RLS.L3 = '1'B;
     3265    25359    2             KX$DATA.CNT = %L1 + L2EXT;
     3266    25360    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;
     3267    25361    2             OUT_PKTHDR.CAUSE = %KX_RST_CAUSE_OOO#;
     3268    25362    2             CALL Y$PACKET_OUT;
     3269    25363    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;
     3270    25364    2             CALL Y$START_TIMER ( KX$L3.T22 );
     3271    25365    2             CALL_FPT.EVN = %KX_CM_EV_VCDWN#;
     3272    25366    2             CALL Y$CNCMNG;
     3273    25367        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:117  
     3274    25368        /*
     3275    25369                PVCUP  -  send reset packet with cause = remote DTE operational
     3276    25370        */
     3277    25371    2          CASE ( %Y_ACT_PVCUP# );
     3278    25372    2             CALL KXS$GETBFR ( 2, DAT$ );
     3279    25373    2             KX$DATA.RLS.L3 = '1'B;
     3280    25374    2             KX$DATA.CNT = %L1 + L2EXT;
     3281    25375    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;
     3282    25376    2             OUT_PKTHDR.CAUSE = %KX_RST_CAUSE_RDO#;
     3283    25377    2             CALL Y$PACKET_OUT;
     3284    25378    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;
     3285    25379    2             CALL Y$START_TIMER ( KX$L3.T22 );
     3286    25380        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:118  
     3287    25381        /*
     3288    25382               Everything else should screech
     3289    25383        */
     3290    25384    2          CASE ( ELSE );
     3291    25385
     3292    25386        /*S* SCREECH_CODE: KXP-S$KX_PCK_UNKACT#
     3293    25387             MESSAGE: Unknown action type for KXP$PACKET
     3294    25388        */
     3295    25389    2             CALL KHD$SCREECH (Y_UNKACT);
     3296    25390
     3297    25391    2       END;  /*  CASE on ACTION  */
     3298    25392    1       RETURN;
     3299    25393
     3300    25394        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:119  
     3301    25395    1   Y$CNCMNG: PROC ALTRET;
     3302    25396
     3303    25397        /*I* NAME: Y$CNCMNG */
     3304    25398        /*I* PURPOSE: Calls the connection manager */
     3305    25399        /*I* CALL: CALL Y$CNCMNG [ALTRET] */
     3306    25400        /*I* INPUT: CM$ = copy of KX$L3.CM$ */
     3307    25401        /*I*        L3$ = KX$L3 pointer */
     3308    25402        /*I*        CALL_FPT = parameter fpt for the call */
     3309    25403
     3310    25404    2       CALL_FPT.CAL$ = L3$;
     3311    25405    2       CALL_FPT.RCV$ = CM$;
     3312    25406    2       IF CM$ = ADDR(NIL)
     3313    25407    2          THEN
     3314    25408    2             CALL KXC$CNCMNG (CALL_FPT) ALTRET (RETALT);
     3315    25409    2          ELSE
     3316    25410    2             CALL Y@CNCMNG (CALL_FPT) ALTRET (RETALT);
     3317    25411    2       RETURN;
     3318    25412    2   RETALT: ;
     3319    25413    2       ALTRETURN;
     3320    25414    2   END Y$CNCMNG;
     3321    25415        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:120  
     3322    25416    1   Y$PACKET_OUT: PROC;
     3323    25417
     3324    25418        /*I* NAME: Y$PACKET_OUT */
     3325    25419        /*I* PURPOSE: This subroutine will forward the data/control packet or */
     3326    25420        /*I* queue it if the frame level is not ready. */
     3327    25421        /*I* CALL: CALL Y$PACKET_OUT */
     3328    25422        /*I* INPUT: L2$  =  line context block pointer */
     3329    25423        /*I* L3$  =  L3 context block pointer */
     3330    25424        /*I* DAT$  =  data pointer */
     3331    25425        /*I* OUTPUT: none */
     3332    25426
     3333    25427        %FPT_X25 ( FPTN = FPT_DATA_OUT, STCLASS = STATIC, EVN = %KX_F_EV_DATA_OUT# );
     3334    25471
     3335    25472    2       OUT_PKTHDR.LCN# = KX$L3.LCN#;
     3336    25473    2       OUT_PKTHDR.GFI = %GFI + L3EXT;
     3337    25474
     3338    25475    2       FPT_DATA_OUT.RCV$ = L2$;
     3339    25476    2       FPT_DATA_OUT.PRM1$ = DAT$;
     3340    25477    2       IF NOT OUT_PKTHDR.TYPE_BITS.DP
     3341    25478    2          THEN
     3342    25479    3             DO;
     3343    25480        /*
     3344    25481           Insert P(R) and P(S). The M-bit is already taken care of.
     3345    25482        */
     3346    25483    3                IF L3EXT = 0
     3347    25484    3                   THEN
     3348    25485    4                      DO;
     3349    25486    4                         OUT_PKTHDR.PR_BITS.PR = KX$L3.VR;
     3350    25487    4                         OUT_PKTHDR.TYPE_BITS.PS = KX$L3.VS;
     3351    25488    4                         KX$L3.VS = MOD ( KX$L3.VS + 1, 8);
     3352    25489    4                      END;
     3353    25490    3                   ELSE
     3354    25491    4                      DO;
     3355    25492    4                         OUT_PKTHDR.PR_EXT.PR = KX$L3.VR;
     3356    25493    4                         OUT_PKTHDR.TYPE_EXT.PS = KX$L3.VS;
     3357    25494    4                         KX$L3.VS = MOD ( KX$L3.VS + 1, 128);
     3358    25495    4                      END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:121  
     3359    25496    3                KX$L3.DCNTP = 0;
     3360    25497    3                KX$L3.DCNT = KX$L3.DCNT + 1;
     3361    25498    3                IF KX$L3.DCNT >= KX$L3.CALL_OPTS.SNDWND
     3362    25499    3                   THEN
     3363    25500    4                      DO;
     3364    25501    4                         KX_STATS_X25.P_BLK = KX_STATS_X25.P_BLK + 1;
     3365    25502    4                         KX$L3.BLK = '1'B;
     3366    25503    4                      END;
     3367    25504    3                IF NOT KX$L3.TMRBLK.ON
     3368    25505    3                   THEN
     3369    25506    3                      CALL Y$START_DATTMR;
     3370    25507    3             END;
     3371    25508    2       IF OUT_PKTHDR.TYPE = %Y_ID_CLEAR# OR OUT_PKTHDR.TYPE = %Y_ID_RESET#
     3372    25509    2          THEN   /* 5 byte packet header */
     3373    25510    2             TEMP0 = 5;
     3374    25511    2          ELSE
     3375    25512    2             IF (NOT OUT_PKTHDR.TYPE_BITS.DP OR MOD(OUT_PKTHDR.TYPE,4) = 1)
     3376    25513    2                AND L3EXT ~= 0
     3377    25514    2                THEN   /* 4 byte packet header */
     3378    25515    2                   TEMP0 = 4;
     3379    25516    2                ELSE   /* 3 byte packet header */
     3380    25517    2                   TEMP0 = 3;
     3381    25518    2       SUBSTR(DAT$->STRT0,LENGTHC(KX$FRAME)+L2EXT,TEMP0) = ADDR(OUT_PKTHDR)->STRT0;
     3382    25519    2       IF KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK
     3383    25520    2          THEN
     3384    25521    3             DO;
     3385    25522        /*
     3386    25523           We have to queue the packet for later transmission.
     3387    25524           We know it is a control packet because this check is done before
     3388    25525           attempting to transmit the data packet.
     3389    25526        */
     3390    25527    3                KX$L2.FLG.DATAVL = '1'B;
     3391    25528    3                IF ( KX$L3.CTL_Q_HEAD$ = ADDR(NIL) )
     3392    25529    3                   THEN
     3393    25530    3                      KX$L3.CTL_Q_HEAD$ = DAT$;
     3394    25531    3                   ELSE
     3395    25532    3                      KX$L3.CTL_Q_TAIL$ -> KX$TDATA.L3_LIST$ = DAT$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:122  
     3396    25533    3                KX$L3.CTL_Q_TAIL$ = DAT$;
     3397    25534        /* Clear the forward link */
     3398    25535
     3399    25536    3                KX$DATA.L3_LIST$ = ADDR(NIL);
     3400    25537    3                KX_STATS_X25.F_BLK = KX_STATS_X25.F_BLK + 1;
     3401    25538    3             END;
     3402    25539    2          ELSE
     3403    25540    2             CALL KXF$FRAME ( FPT_DATA_OUT );
     3404    25541    2       RETURN;
     3405    25542    2   END /* SUBROUTINE */;
     3406    25543
     3407    25544        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:123  
     3408    25545
     3409    25546    1   Y$PR: PROC ALTRET;
     3410    25547
     3411    25548        /*I* NAME: Y$PR */
     3412    25549        /*I* PURPOSE: This subroutine checks for a good P ( R ) */
     3413    25550        /*I* and updates P' ( R ) . */
     3414    25551        /*I* CALL: CALL Y$PR */
     3415    25552        /*I* INPUT: L3$  =  L3 context block pointer */
     3416    25553        /*I* DAT$  =  data pointer */
     3417    25554        /*I* PEVENT  =  event type */
     3418    25555        /*I* OUTPUT: PEVENT  =  event type */
     3419    25556
     3420    25557    2   DCL T$ PTR;
     3421    25558    2   DCL PPR UBIN;
     3422    25559    2   DCL PR UBIN;
     3423    25560    2   DCL VS UBIN;
     3424    25561    2   DCL DCOUNT UBIN;
     3425    25562
     3426    25563        /*
     3427    25564                                             P(R) is only checked if the VC
     3428    25565                                             is in state DATA.  Otherwise,
     3429    25566                                             data acknowledgements are not
     3430    25567                                             meaningful.
     3431    25568        */
     3432    25569
     3433    25570    2       IF ( KX$L3.STATE.CURRENT ~= %Y_ST_DATA# ) THEN RETURN;
     3434    25571
     3435    25572    2       PR = IN_PR;
     3436    25573    2       PPR = KX$L3.PPR;
     3437    25574    2       VS = KX$L3.VS;
     3438    25575
     3439    25576        /*
     3440    25577                                             Before releasing any buffers,
     3441    25578                                             the values are checked.  If P(R)
     3442    25579                                             is invalid, the error is flagged
     3443    25580                                             and no more processing is done.
     3444    25581                                             As buffers are released, keep
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:124  
     3445    25582                                             track of how many CM ACKs are to
     3446    25583                                             be delivered.
     3447    25584        */
     3448    25585
     3449    25586    2       IF VS < PPR
     3450    25587    2          THEN  /*                      Wrap around the modulus  */
     3451    25588    3             IF L3EXT = 0 THEN DO;
     3452    25589    3                      IF PR <= VS THEN PR = PR + 8;
     3453    25590    3                      VS = VS + 8;
     3454    25591    3                   END; ELSE DO;
     3455    25592    3                      IF PR <= VS THEN PR = PR + 128;
     3456    25593    3                      VS = VS + 128;
     3457    25594    3                   END;
     3458    25595
     3459    25596    2       IF ( PR < PPR ) OR ( PR > VS ) OR ( PR - PPR > KX$L3.DCNT )
     3460    25597    2          THEN  /*                      Bad P(R)  */
     3461    25598    3             DO;
     3462    25599                     %WRSYSLOG ( ERRCOD = BAD_PR,
     3463    25600                     TRMID = "KX$L3.CHN$ -> KH$CHN.TERMID",
     3464    25601                     BFR = KX$PACKET,
     3465    25602                     VAL0 = KX$L3.DCNT,  /*  and .PPR  */
     3466    25603                     VAL1 = KX$L3.VS );  /*  and .VR  */
     3467    25621    3                PEVENT = %Y_EV_BAD_PRS#;
     3468    25622    3                DIAG = %KX_RST_DIAG_PR#;
     3469    25623    3                ALTRETURN;
     3470    25624    3             END;
     3471    25625
     3472    25626    2       DCOUNT = PR -PPR;
     3473    25627
     3474    25628    2       KX$L3.DCNT = KX$L3.DCNT - DCOUNT;
     3475    25629
     3476    25630    3       DO WHILE ( PPR < PR AND KX$L3.D_LIST_HEAD$ ~= ADDR(NIL) );
     3477    25631
     3478    25632    3          T$ = KX$L3.D_LIST_HEAD$;
     3479    25633    3          KX$L3.D_LIST_HEAD$ = T$ -> KX$TDATA.L3_LIST$;
     3480    25634    3          IF KX$L3.D_LIST_HEAD$ = ADDR(NIL)
     3481    25635    3             THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:125  
     3482    25636    3                KX$L3.D_LIST_TAIL$ = ADDR(NIL);
     3483    25637    3          T$ -> KX$TDATA.RLS.L3 = '1'B;
     3484    25638    3          IF ( T$ -> KX$TDATA.RLS_STAT = %KX_BFR_RLS_OK# )
     3485    25639    3             THEN
     3486    25640    3                CALL KXS$RLSBFR ( T$ );
     3487    25641
     3488    25642    3          PPR = PPR + 1;
     3489    25643
     3490    25644    3       END;
     3491    25645    2       IF KX$L3.BLK AND KX$L3.DCNT < KX$L3.CALL_OPTS.SNDWND
     3492    25646    2          THEN
     3493    25647    3             DO;
     3494    25648    3                KX$L3.BLK = '0'B;
     3495    25649    3                KX$L2.FLG.DATAVL = '1'B;
     3496    25650    3             END;
     3497    25651
     3498    25652        /* Return P' ( R )  to the context block */
     3499    25653
     3500    25654    2       IF ( (KX$L3.PPR ~= IN_PR AND PEVENT = %Y_EV_DATA_IN#)
     3501    25655    2          OR (PEVENT = %Y_EV_RR#) ) AND KX$L3.RNR
     3502    25656    2          THEN
     3503    25657    3             DO;
     3504    25658    3                KX$L2.FLG.DATAVL = '1'B;
     3505    25659    3                KX$L3.RNR = '0'B;
     3506    25660    3             END;
     3507    25661    2       KX$L3.PPR = IN_PR;
     3508    25662
     3509    25663        /*
     3510    25664           Should we start a new data packet clock?
     3511    25665        */
     3512    25666    2       IF KX$L3.D_LIST_HEAD$ = KX$L3.RTR$
     3513    25667    2          THEN
     3514    25668    3             DO;
     3515    25669    3                CALL Y$STOP_DATTMR;
     3516    25670    3             END;
     3517    25671    2          ELSE
     3518    25672    2             IF DCOUNT > 0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:126  
     3519    25673    2                THEN
     3520    25674    2                   CALL Y$START_DATTMR;
     3521    25675    2   END /* SUBROUTINE */;
     3522    25676        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:127  
     3523    25677    1   Y$SEND_PACKET: PROC ALTRET;
     3524    25678
     3525    25679        /*I* NAME: Y$SEND_PACKET */
     3526    25680        /*I* PURPOSE: This subroutine will send the requested control packet. */
     3527    25681        /*I* CALL: CALL Y$SEND_PACKET */
     3528    25682        /*I* INPUT: ID  =  packet to be sent */
     3529    25683        /*I* L2$  =  line context block pointer*/
     3530    25684        /*I* L3$  =  L3 context block pointer */
     3531    25685        /*I* OUTPUT: none */
     3532    25686
     3533    25687        /* Get a buffer */
     3534    25688
     3535    25689    2       CALL KXS$GETBFR ( 0, TEMP2$ );
     3536    25690    2       DAT$ = TEMP2$;
     3537    25691
     3538    25692        /* Set the L3 buffer release bit */
     3539    25693
     3540    25694    2       KX$DATA.RLS.L3 = '1'B;
     3541    25695
     3542    25696        /* Put in a data size of 4 */
     3543    25697
     3544    25698    2       KX$DATA.CNT = %L0 + L2EXT;
     3545    25699
     3546    25700        /*
     3547    25701           This is a convenient way to determine if we actually meant to send
     3548    25702           an RNR instead of an RR, without going back to check everywhere we
     3549    25703           request to send an RR.
     3550    25704        */
     3551    25705    2       IF ( ID = %Y_ID_RR# AND KX$L3.INPBLK )
     3552    25706    2          THEN
     3553    25707    2             ID = %Y_ID_RNR#;
     3554    25708
     3555    25709
     3556    25710        /* Put in the packet type id*/
     3557    25711
     3558    25712    2       OUT_PKTHDR = '0'B;
     3559    25713    2       OUT_PKTHDR.TYPE = ID;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:128  
     3560    25714
     3561    25715        /* For RR,  RNR,  and REJ,  stuff in V ( R ) */
     3562    25716
     3563    25717    2       IF ( ID = %Y_ID_RR# ) OR ( ID = %Y_ID_RNR# )
     3564    25718    2          THEN
     3565    25719    3             DO;
     3566    25720    3                IF NOT KX$L3.EXTSEQ
     3567    25721    3                   THEN
     3568    25722    3                      OUT_PKTHDR.PR_BITS.PR = KX$L3.VR;
     3569    25723    3                   ELSE
     3570    25724    4                      DO;
     3571    25725    4                         OUT_PKTHDR.PR_EXT.PR = KX$L3.VR;
     3572    25726    4                         KX$DATA.CNT = KX$DATA.CNT + 1;
     3573    25727    4                      END;
     3574    25728    3                KX$L3.DCNTP = 0;
     3575    25729    3                KX_STATS_X25.P_FLOW_OUT = KX_STATS_X25.P_FLOW_OUT + 1;
     3576    25730    3             END;
     3577    25731
     3578    25732    2       CALL Y$PACKET_OUT;
     3579    25733
     3580    25734    2   END /* SUBROUTINE */;
     3581    25735        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:129  
     3582    25736    1   Y$WHAT_TYPE: PROC ALTRET;
     3583    25737
     3584    25738        /*I* NAME: Y$WHAT_TYPE */
     3585    25739        /*I* PURPOSE: This subroutine turns the external event into an */
     3586    25740        /*I* event that makes sense internally. */
     3587    25741        /*I* CALL: CALL Y$WHAT_TYPE */
     3588    25742        /*I* INPUT: PEVENT  =  packet event type*/
     3589    25743        /*I* L2$  =  line context block pointer*/
     3590    25744        /*I* L3$  =  L3 context block pointer */
     3591    25745        /*I* DAT$  =  data pointer */
     3592    25746        /*I* OUTPUT: PEVENT  =  packet event type */
     3593    25747
     3594    25748    2   DCL 1 ADRLNGS CALIGNED,
     3595    25749    2         2 * UBIN(8) UNAL,
     3596    25750    2         2 LFT UBIN(4) UNAL,
     3597    25751    2         2 RGH UBIN(4) UNAL;
     3598    25752    2   DCL ADRLNG REDEF ADRLNGS UBIN;
     3599    25753    2   DCL 1 ADREXT CALIGNED,
     3600    25754    2         2 FMT UBIN(2) UNAL,
     3601    25755    2         2 LNG UBIN(6) UNAL;
     3602    25756    2   DCL ADREXTBYT REDEF ADREXT UBIN BYTE CALIGNED;
     3603    25757    2   DCL I UBIN;
     3604    25758    2   DCL J UBIN;
     3605    25759    2   DCL FCLLNG UBIN;
     3606    25760    2   DCL FCLID UBIN;
     3607    25761    2   DCL TEMP UBIN;
     3608    25762    2   DCL TL3$ PTR;
     3609    25763        /*
     3610    25764           Define these to detect duplicate facility request
     3611    25765        */
     3612    25766        %EQU FCLX_CUG1# = 0;
     3613    25767        %EQU FCLX_CUG2# = 1;
     3614    25768        %EQU FCLX_RVS# = 3;
     3615    25769        %EQU FCLX_PCKSIZ# = 4;
     3616    25770        %EQU FCLX_WNDSIZ# = 5;
     3617    25771        %EQU FCLX_THRCLS# = 6;
     3618    25772        %EQU FCLX_CHR_RQS# = 7;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:130  
     3619    25773        %EQU FCLX_DLY# = 8;
     3620    25774        %EQU FCLX_RED# = 9;
     3621    25775        %EQU FCLX_NUID# = 10;
     3622    25776        %EQU FCLX_ADR_MOD# = 11;
     3623    25777        %EQU FCLX_CLGADREXT# = 12;
     3624    25778        %EQU FCLX_CLDADREXT# = 13;
     3625    25779        %EQU FCLX_HI# = 13;
     3626    25780    2   DCL FCL_PRESENT (0:%FCLX_HI#) BIT(1) UNAL AUTO;
     3627    25781    2   DCL FCL_PRESENT_BITS REDEF FCL_PRESENT BIT(%(%FCLX_HI#+1)) UNAL;
     3628    25782
     3629    25783        /*
     3630    25784                                             Find out what type of packet
     3631    25785                                             this is.  The fast path is set
     3632    25786                                             up for data, then flow control.
     3633    25787        */
     3634    25788
     3635    25789    2       IF L3EXT ~= 0
     3636    25790    2          THEN
     3637    25791    3             DO;
     3638    25792    3                MBIT = IN_PKTHDR.PR_EXT.M;
     3639    25793    3                IN_PR = IN_PKTHDR.PR_EXT.PR;
     3640    25794    3                PS = IN_PKTHDR.TYPE_EXT.PS;
     3641    25795    3             END;
     3642    25796    2          ELSE
     3643    25797    3             DO;
     3644    25798    3                MBIT = IN_PKTHDR.PR_BITS.M;
     3645    25799    3                IN_PR = IN_PKTHDR.PR_BITS.PR;
     3646    25800    3                PS = IN_PKTHDR.TYPE_BITS.PS;
     3647    25801    3             END;
     3648    25802    2       IF NOT IN_PKTHDR.TYPE_BITS.DP
     3649    25803    2          THEN
     3650    25804    3             DO;
     3651    25805    3                PEVENT = %Y_EV_DATA_IN#;
     3652    25806    3                IF DATACNT < %LD + L3EXT OR
     3653    25807    3                   DATACNT > %LD + L3EXT + KX_BUF.SIZ(KX$L3.CALL_OPTS.RCVPCKSIZ)
     3654    25808    3                   THEN
     3655    25809    4                      DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:131  
     3656    25810    4                         PEVENT = %Y_EV_SHR_PKT#;
     3657    25811    4                         RETURN;
     3658    25812    4                      END;
     3659    25813    3                IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND NOT KX$L3.PVC
     3660    25814    3                   THEN
     3661    25815    3                      RETURN;
     3662    25816    3                IF MBIT AND DATACNT ~= KX_BUF.SIZ(KX$L3.CALL_OPTS.RCVPCKSIZ)+%L0+L3EXT
             25816                         AND NOT KX$L3.NOREASM
     3663    25817    3                   THEN
     3664    25818    3                      MBIT = '0'B;
     3665    25819    3                IF PS ~= KX$L3.VR AND NOT KX$PACKET.RLS.L3
     3666    25820    3                   THEN  /*             Out-of-order data packet  */
     3667    25821    4                      DO;
     3668    25822    4                         ERCOD = BAD_PS ;
     3669    25823    4                         S_VAL0 = KX$L3.VR ;
     3670    25824    4                         S_VAL1 = PS ;
     3671    25825    4                         CALL Y$ER1 ;
     3672    25826
     3673    25827    4                         PEVENT = %Y_EV_BAD_PRS#;
     3674    25828    4                         DIAG = %KX_RST_DIAG_PS#;
     3675    25829    4                      END;
     3676    25830    3                   ELSE
     3677    25831    4                      DO;
     3678    25832    4                         IF NOT KX$PACKET.RLS.L3 THEN   /* deferred pkt? */
     3679    25833    5                               CALL Y$PR WHENRETURN DO;
     3680    25834    5                                        KX$L3.VR = MOD ( KX$L3.VR + 1, 8 + 120*L3EXT );
     3681    25835    5                                     END;
     3682    25836    4                      END;
     3683    25837    3                RETURN;
     3684    25838    3             END;
     3685    25839
     3686    25840        /*
     3687    25841                                             No packets other than data can
     3688    25842                                             have the Q bit set.
     3689    25843        */
     3690    25844
     3691    25845    2       IF IN_PKTHDR.Q_BIT
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:132  
     3692    25846    2          THEN
     3693    25847    3             DO;
     3694    25848    3                GOTO L_LL ;
     3695    25849
     3696    25850
     3697    25851    3             END;
     3698    25852
     3699    25853        /*
     3700    25854                                             Only Call and Call_C packets
     3701    25855                                             can have the D bit set.
     3702    25856        */
     3703    25857    2       IF IN_PKTHDR.D_BIT AND ( IN_PKTHDR.TYPE ~= %Y_ID_CALL# )
     3704    25858    2          AND ( IN_PKTHDR.TYPE ~= %Y_ID_CALL_C# )
     3705    25859    2          THEN
     3706    25860    3             DO;
     3707    25861    3   L_LL:
     3708    25862    3                ERCOD = BAD_GFI;
     3709    25863    3                CALL Y$ER2;
     3710    25864    3                PEVENT = %Y_EV_SHORT_GFI#;
     3711    25865
     3712    25866    3                RETURN;
     3713    25867
     3714    25868    3             END /* IF */;
     3715    25869
     3716    25870        /*
     3717    25871                                             The GFI for all the remaining
     3718    25872                                             packet types has been checked.
     3719    25873                                             Now figure out what it is,
     3720    25874                                             starting with flow control.
     3721    25875        */
     3722    25876
     3723    25877    2       IF NOT IN_PKTHDR.TYPE_BITS.PS_BITS.FC
     3724    25878    2          THEN
     3725    25879    3             DO;
     3726    25880        /*
     3727    25881                                             Flow control packets must be 5
     3728    25882                                             bytes long, and the M bit can
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:133  
     3729    25883                                             not be set.
     3730    25884        */
     3731    25885    3                IF ( DATACNT ~= %LD+L3EXT ) OR MBIT
     3732    25886    3                   THEN
     3733    25887    3                      PEVENT = %Y_EV_UNK_TYPE#;
     3734    25888    3                   ELSE
     3735    25889    4                      DO CASE ( IN_PKTHDR.TYPE_BITS.PS_BITS.FT );
     3736    25890    4                         CASE ( 0  /* RR */ );
     3737    25891    4                            PEVENT = %Y_EV_RR#;
     3738    25892    4                            CALL Y$PR;
     3739    25893
     3740    25894    4                         CASE ( 1  /* RNR */ );
     3741    25895    4                            PEVENT = %Y_EV_RNR#;
     3742    25896    4                            KX$L3.RNR = '1'B;
     3743    25897    4                            CALL Y$PR;
     3744    25898
     3745    25899    4                         CASE ( ELSE );
     3746    25900    4                            PEVENT = %Y_EV_UNK_TYPE#;
     3747    25901
     3748    25902    4                      END;
     3749    25903
     3750    25904    3                RETURN;
     3751    25905    3             END;
     3752    25906
     3753    25907        /*
     3754    25908                                             Now figure out any remaining
     3755    25909                                             packets.  This is off the fast
     3756    25910                                             path, so just use a SELECT.
     3757    25911        */
     3758    25912
     3759    25913    3       DO SELECT ( IN_PKTHDR.TYPE );
     3760    25914    3          SELECT ( %Y_ID_CALL# );
     3761    25915        /*
     3762    25916                                             Assume it is a valid Call packet
     3763    25917                                             for starters.  If the state is
     3764    25918                                             not END_STOP, then this is an
     3765    25919                                             unexpected Call packet and there
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:134  
     3766    25920                                             is no sense parsing it.
     3767    25921        */
     3768    25922    3          KX_STATS_X25.CALLS_IN = KX_STATS_X25.CALLS_IN + 1;
     3769    25923    3          IF KX$L3.PVC
     3770    25924    3             THEN
     3771    25925    4                DO;
     3772    25926    4                   PEVENT = %Y_EV_CALL_C#;
     3773    25927        /*  EV_CALL has special meaning for PVCs */
     3774    25928    4                   RETURN;
     3775    25929    4                END;
     3776    25930    3          IF IN_PKTHDR.GFI = %GFI_EXT
     3777    25931    4             THEN DO;
     3778    25932    4                   L3EXT = 1;
     3779    25933    4                   KX$L3.EXTSEQ = '1'B;
     3780    25934    4                END; ELSE DO;
     3781    25935    4                   L3EXT = 0;
     3782    25936    4                   KX$L3.EXTSEQ = '0'B;
     3783    25937    4                END;
     3784    25938    3          DIAG = 0;
     3785    25939    3          PEVENT = %Y_EV_BAD_CALL#;
     3786    25940
     3787    25941    3          IF KX$L3.STATE.CURRENT ~= %Y_ST_ENB_STOP#
     3788    25942    3             AND KX$L3.STATE.CURRENT ~= %Y_ST_CALL#
     3789    25943    3             THEN
     3790    25944    4                DO;
     3791    25945    4                   PEVENT = %Y_EV_CALL#;
     3792    25946    4                   RETURN;
     3793    25947    4                END;
     3794    25948
     3795    25949        /*
     3796    25950          Make sure the LCN is in range
     3797    25951        */
     3798    25952    3          IF ( KX$L2.FLG.DCE AND ( KX$L3.LCN# < KX$L2.LOC OR KX$L3.LCN# > KX$L2.HOC ) )
     3799    25953    3             OR ( NOT KX$L2.FLG.DCE AND ( KX$L3.LCN# < KX$L2.LIC OR KX$L3.LCN# > KX$L2.
             25953                      HIC ) )
     3800    25954    3             THEN
     3801    25955    4                DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:135  
     3802    25956    4                   DIAG = %KX_DIAG_ONEWAY#;
     3803    25957    4                   RETURN;
     3804    25958    4                END;
     3805    25959    3          BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT;
     3806    25960        /*
     3807    25961                                             Validate and save the addresses.
     3808    25962        */
     3809    25963               %UNOCTET ( VAR = ADRLNG );
     3810    25967    3          IF ADRLNGS.LFT > 14
     3811    25968    3             THEN
     3812    25969    4                DO;
     3813    25970    4                   DIAG = %KX_DIAG_LNGCLNADR#;
     3814    25971    4                   RETURN;
     3815    25972    4                END;
     3816    25973    3          IF ADRLNGS.RGH > 14
     3817    25974    3             THEN
     3818    25975    4                DO;
     3819    25976    4                   DIAG = %KX_DIAG_LNGCLDADR#;
     3820    25977    4                   RETURN;
     3821    25978    4                END;
     3822    25979
     3823    25980    3          KX$L3.CALL_OPTS.RCVADR.SIZ = ADRLNGS.LFT;
     3824    25981
     3825    25982
     3826    25983        /*
     3827    25984            Check the CALLED address against our address in KX$L2.
     3828    25985        */
     3829    25986    3          TEMP0 = KX$L2.NTWADR.LNG / 2 ;
     3830    25987    3          IF ADRLNGS.RGH ~= KX$L2.NTWADR.LNG
     3831    25988    3             AND ADRLNGS.RGH ~= KX$L2.NTWADR.LNG+2
     3832    25989    3             OR SUBSTR(KX$L2.NTWADR.ADR_STRING,0,TEMP0) ~=
     3833    25990    3             SUBSTR(DAT$->STRT,BYTE_INDEX,TEMP0)
     3834    25991    3             THEN
     3835    25992    4                DO;
     3836    25993    4   L_INVCLDADR:    DIAG = %KX_DIAG_INVCLDADR#;
     3837    25994        /* I will tolerate this if NSAP extension facilities are used in this call */
     3838    25995    4                   TEMP0 = ( ADRLNGS.RGH + 1 ) / 2;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:136  
     3839    25996    4                   GOTO FOUND_SUBSUBCHN;
     3840    25997    4                END;
     3841    25998    3          IF MOD(ADRLNGS.RGH,2) = 1
     3842    25999    3             THEN
     3843    26000    4                DO;
     3844    26001    4                   TEMP = BITBIN(BINBIT(BYTE_ARRAY(BYTE_INDEX+TEMP0),8) & 'F0'X);
     3845    26002    4                   IF (TEMP ~= KX$L2.NTWADR.ADR_PAIR(TEMP0))
     3846    26003    4                      THEN
     3847    26004    4                         GOTO L_INVCLDADR;
     3848    26005    4                   TEMP0 = TEMP0 + 1;
     3849    26006    4                END;
     3850    26007    3          IF ADRLNGS.RGH = KX$L2.NTWADR.LNG + 2
     3851    26008    3             THEN
     3852    26009    4                DO;
     3853    26010    4                   TEMP0 = TEMP0 + 1;
     3854    26011        /*
     3855    26012           Subaddressed call. Figure out the correct termid.
     3856    26013        */
     3857    26014    4                   TERMID = KX$L2.CHN$->KH$CHN.TERMID;
     3858    26015    4                   IF MOD(ADRLNGS.RGH,2) = 1  /* odd # of BCDs */
     3859    26016    4                      THEN
     3860    26017    5                         DO;
     3861    26018    5                            TERMID.TERM.SUBDEVICE = MOD(BYTE_ARRAY(BYTE_INDEX+ADRLNGS.
             26018                                     RGH/2-1),16)*10 +
     3862    26019    5                               BYTE_ARRAY(BYTE_INDEX+(ADRLNGS.RGH-1)/2)/16;
     3863    26020    5                         END;
     3864    26021    4                      ELSE
     3865    26022    5                         DO;
     3866    26023    5                            TERMID.TERM.SUBDEVICE = (BYTE_ARRAY(BYTE_INDEX+ADRLNGS.RGH/
             26023                                     2-1)/16)*10 +
     3867    26024    5                               MOD(BYTE_ARRAY(BYTE_INDEX+(ADRLNGS.RGH-1)/2),16);
     3868    26025    5                         END;
     3869    26026    4                   TERMID.TERM.SUBSUBDEVICE = 0;
     3870    26027    4                   TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN#;
     3871    26028    4                   TERMID.TTYP = %KLTY_VIRCIR#;
     3872    26029    4                   CALL KHA$GET_CTX_PTR ( TERMID, CHN$ )
     3873    26030    4                      WHENALTRETURN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:137  
     3874    26031    5                         DO;
     3875    26032    5                            CHN$ = ADDR(NIL);
     3876    26033    5                         END;
     3877    26034        /*
     3878    26035           Have we exceeded the number of circuits on the subaddress ?
     3879    26036        */
     3880    26037    4                   TERMID.TERM.SUBSUBDEVICE = 1;
     3881    26038    5                   DO WHILE ( CHN$ = ADDR(NIL) OR
     3882    26039    5                      TERMID.TERM.SUBSUBDEVICE <= CHN$->KH$CHN.INPBFRBYTSIZ
     3883    26040    5                      OR CHN$->KH$CHN.INPBFRBYTSIZ = 0 );
     3884    26041    5                      TL3$ = KX$L2.L3_HEAD$;
     3885    26042    6                      DO WHILE ( TL3$ ~= L3$  /* L3$ is currently L3_TAIL$ */
     3886    26043    6                         AND TL3$->KX$TL3.CHN$->KH$CHN.TERMID.TERM ~= TERMID.TERM );
     3887    26044    6                         TL3$ = TL3$->KX$TL3.NEXT$;
     3888    26045    6                      END;
     3889    26046    5                      IF TL3$ = L3$  /* We have found a subsubchan to use */
     3890    26047    5                         THEN
     3891    26048    5                            GOTO FOUND_SUBSUBCHN;
     3892    26049    5                         ELSE
     3893    26050    5                            TERMID.TERM.SUBSUBDEVICE = TERMID.TERM.SUBSUBDEVICE + 1;
     3894    26051    5                   END;
     3895    26052        /*
     3896    26053           If we come down here, there is no more room for this circuit.
     3897    26054        */
     3898    26055    4                   DIAG = %KX_DIAG_CALPRB#;
     3899    26056    4                   RETURN;
     3900    26057    4                END;  /* of subaddressed call */
     3901    26058    3   FOUND_SUBSUBCHN: ;
     3902    26059    3          KX$L3.LCLADR.SIZ = ADRLNGS.RGH;
     3903    26060    3          ADDR(KX$L3.LCLADR.ADR_PAIR(0))->STRT0 = SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0);
     3904    26061    3          IF MOD(ADRLNGS.RGH,2) = 1
     3905    26062    3             THEN
     3906    26063    3                ADDR(KX$L3.CALL_OPTS.RCVADR)->ADR1.ADR =
     3907    26064    3                   PINCRC(DAT$,BYTE_INDEX+ADRLNGS.RGH/2)->ADR2.ADR;
     3908    26065    3             ELSE
     3909    26066    3                ADDR(KX$L3.CALL_OPTS.RCVADR)->ADR1.ADR =
     3910    26067    3                   PINCRC(DAT$,BYTE_INDEX-1+ADRLNGS.RGH/2)->ADR1.ADR;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:138  
     3911    26068    3          KX$L3.CALL_OPTS.RCVADR.SIZ = ADRLNGS.LFT;
     3912    26069    3          IF MOD(ADRLNGS.LFT,2) = 1
     3913    26070    3             THEN
     3914    26071    3                KX$L3.CALL_OPTS.RCVADR.ADR_PAIR((ADRLNGS.LFT+1)/2) =
     3915    26072    3                   BITBIN(BINBIT(KX$L3.CALL_OPTS.RCVADR.ADR_PAIR((ADRLNGS.LFT+1)/2),8)&
             26072                            'F0'X);
     3916    26073    3          BYTE_INDEX = BYTE_INDEX + (ADRLNGS.LFT+ADRLNGS.RGH+1)/2;
     3917    26074        /*
     3918    26075                                             Now parse the facilities.
     3919    26076        */
     3920    26077               %UNOCTET ( VAR = FCLLNG );
     3921    26081    3          IF FCLLNG > 109
     3922    26082    3             THEN
     3923    26083    4                DO;
     3924    26084    4                   DIAG = %KX_DIAG_LRGFCLCNT#;
     3925    26085    4                   RETURN;
     3926    26086    4                END;
     3927    26087    3          IF KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX < FCLLNG
     3928    26088    3             THEN
     3929    26089    4                DO;
     3930    26090    4                   DIAG = %KX_DIAG_UNBFCLCNT#;
     3931    26091    4                   RETURN;
     3932    26092    4                END;
     3933    26093    3          FCL_PRESENT_BITS = '0'B;
     3934    26094
     3935    26095    4          DO I = 1 TO FCLLNG;
     3936    26096                  %UNOCTET ( VAR = FCLID );
     3937    26100    5             DO SELECT ( FCLID );
     3938    26101    5                SELECT ( %KX_FCL_CUG#, %KX_FCL_CUG_OUT# );
     3939    26102        /*
     3940    26103                                             Just save the CUG information
     3941    26104        */
     3942    26105    5                IF FCL_PRESENT(%FCLX_CUG1#)
     3943    26106    5                   THEN
     3944    26107    6                      DO;
     3945    26108    6   L_DUPFCL:             DIAG = %KX_DIAG_DUPFCL#;
     3946    26109    6                         RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:139  
     3947    26110    6                      END;
     3948    26111    5                FCL_PRESENT(%FCLX_CUG1#) = '1'B;
     3949    26112                     %UNOCTET ( VAR = KX$L3.CUG_BCD.BCDPAIR2 );
     3950    26116    5                KX$L3.CUGLNG = 1;      /* LNG is in unit of bytes */
     3951    26117    5                I = I + 1;
     3952    26118
     3953    26119    5                SELECT ( %KX_FCL_CUG_EXT#, %KX_FCL_CUG_OUT_EXT#, %KX_FCL_CUG_BIL# );
     3954    26120        /*
     3955    26121                                             Just save the CUG information
     3956    26122        */
     3957    26123    5                IF FCL_PRESENT(%FCLX_CUG2#)
     3958    26124    5                   THEN
     3959    26125    5                      GOTO L_DUPFCL;
     3960    26126    5                IF L3EXT = 0
     3961    26127    5                   THEN
     3962    26128    5                      GOTO L_INVFCLCOD;
     3963    26129    5                FCL_PRESENT(%FCLX_CUG2#) = '1'B;
     3964    26130                     %UNOCTET ( VAR = KX$L3.CUG_BCD.BCDPAIR1 );
     3965    26134                     %UNOCTET ( VAR = KX$L3.CUG_BCD.BCDPAIR2 );
     3966    26138    5                KX$L3.CUGLNG = 2;
     3967    26139    5                I = I + 2;
     3968    26140
     3969    26141    5                SELECT ( %KX_FCL_RVS# );
     3970    26142        /*
     3971    26143                                             Make sure reverse charging is ok
     3972    26144                                             and check for fast select.
     3973    26145        */
     3974    26146    5                IF FCL_PRESENT(%FCLX_RVS#)
     3975    26147    5                   THEN
     3976    26148    5                      GOTO L_DUPFCL;
     3977    26149    5                FCL_PRESENT(%FCLX_RVS#) = '1'B;
     3978    26150                     %UNOCTET ( VAR = TEMP );
     3979    26154    5                IF (  MOD ( TEMP, 2 ) = 1 AND NOT KX$L2.FLG.REV_CH )
     3980    26155    5                   THEN
     3981    26156    6                      DO;
     3982    26157    6   INVFCLPRM:            DIAG = %KX_DIAG_INVFCLPRM#;
     3983    26158    6                         RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:140  
     3984    26159    6                      END;
     3985    26160    5                KX$L3.RVS = BINBIT (TEMP ,1);
     3986    26161    5                KX$L3.FSTSLC = TEMP/64;  /* pick up top 2 bits */
     3987    26162    5                IF KX$L3.FSTSLC ~= 0 AND NOT KX$L2.FLG.FSTSLCACP
     3988    26163    5                   THEN
     3989    26164    5                      GOTO INVFCLPRM;
     3990    26165    5                I = I + 1;
     3991    26166
     3992    26167    5                SELECT ( %KX_FCL_PCKSIZ# );
     3993    26168        /*
     3994    26169                                             The packet size must be at least
     3995    26170                                             128.  If it is more than what is
     3996    26171                                             allowed, then reduce it.
     3997    26172        */
     3998    26173    5                IF FCL_PRESENT(%FCLX_PCKSIZ#)
     3999    26174    5                   THEN
     4000    26175    5                      GOTO L_DUPFCL;
     4001    26176    5                FCL_PRESENT(%FCLX_PCKSIZ#) = '1'B;
     4002    26177    5                KX$L3.PCKNGT = '1'B;
     4003    26178                     %UNOCTET ( VAR = TEMP );
     4004    26182    5                IF TEMP > KX_BUF.LOGSIZ ( %KX_S_BUF_MAX# )
     4005    26183    5                   OR TEMP < KX_BUF.LOGSIZ ( 0 )
     4006    26184    5                   THEN
     4007    26185    5                      GOTO INVFCLPRM;
     4008    26186    5                TEMP = LOG_TO_CP6 ( TEMP );
     4009    26187    5                IF TEMP <= KX$L2.BUF_SIZE
     4010    26188    5                   THEN
     4011    26189    5                      KX$L3.CALL_OPTS.SNDPCKSIZ = TEMP;
     4012    26190
     4013    26191                     %UNOCTET ( VAR = TEMP );
     4014    26195    5                IF TEMP > KX_BUF.LOGSIZ ( %KX_S_BUF_MAX# )
     4015    26196    5                   OR TEMP < KX_BUF.LOGSIZ ( 0 )
     4016    26197    5                   THEN
     4017    26198    5                      GOTO INVFCLPRM;
     4018    26199    5                TEMP = LOG_TO_CP6 ( TEMP );
     4019    26200    5                IF TEMP <= KX$L2.BUF_SIZE
     4020    26201    5                   THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:141  
     4021    26202    5                      KX$L3.CALL_OPTS.RCVPCKSIZ = TEMP;
     4022    26203    5                I = I + 2;
     4023    26204
     4024    26205    5                SELECT ( %KX_FCL_WNDSIZ# );
     4025    26206        /*
     4026    26207                                             If window is more than what is
     4027    26208                                             allowed, reduce it.
     4028    26209        */
     4029    26210    5                IF FCL_PRESENT(%FCLX_WNDSIZ#)
     4030    26211    5                   THEN
     4031    26212    5                      GOTO L_DUPFCL;
     4032    26213    5                FCL_PRESENT(%FCLX_WNDSIZ#) = '1'B;
     4033    26214                     %UNOCTET ( VAR = TEMP );
     4034    26218    5                IF TEMP < 1 OR TEMP > 7+120*L3EXT
     4035    26219    5                   THEN
     4036    26220    5                      GOTO INVFCLPRM;
     4037    26221    5                IF TEMP <= KX$L2.MAXWND
     4038    26222    5                   THEN
     4039    26223    5                      KX$L3.CALL_OPTS.SNDWND = TEMP;
     4040    26224
     4041    26225                     %UNOCTET ( VAR = TEMP );
     4042    26229    5                IF TEMP < 1 OR TEMP > 7+120*L3EXT
     4043    26230    5                   THEN
     4044    26231    5                      GOTO INVFCLPRM;
     4045    26232    5                IF TEMP <= KX$L2.MAXWND
     4046    26233    5                   THEN
     4047    26234    6                      DO;
     4048    26235    6                         KX$L3.CALL_OPTS.RCVWND = TEMP;
     4049    26236    6                         KX$L3.RSPDLY = MAXIMUM(KX$L3.CALL_OPTS.RCVWND/2,1);
     4050    26237    6                      END;
     4051    26238    5                I = I + 2;
     4052    26239    5                KX$L3.WNDNGT = '1'B;
     4053    26240
     4054    26241    5                SELECT ( %KX_FCL_THRCLS# );
     4055    26242        /*
     4056    26243                                             Just save the information.
     4057    26244        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:142  
     4058    26245                     %UNOCTET ( VAR = TEMP );
     4059    26249    5                KX$L3.CALL_OPTS.SNDTHR = TEMP / 16;
     4060    26250    5                KX$L3.CALL_OPTS.RCVTHR = MOD ( TEMP, 16 );
     4061    26251    5                I = I + 1;
     4062    26252
     4063    26253    5                SELECT ( %KX_FCL_MRK# );
     4064    26254        /*
     4065    26255                                             Facility marker.
     4066    26256        */
     4067    26257                     %UNOCTET ( VAR = TEMP );
     4068    26261    6                DO SELECT ( TEMP );
     4069    26262    6                   SELECT ( %KX_FCL_MRK_CLGDTE#, %KX_FCL_MRK_CLDDTE# );
     4070    26263    6                   BYTE_INDEX = BYTE_INDEX + FCLLNG - I;
     4071    26264    6                   I = FCLLNG;
     4072    26265    6                   SELECT ( %KX_FCL_MRK_CCITT# );
     4073    26266    6                   I = I + 1;
     4074    26267    7                   DO WHILE ( I < FCLLNG );
     4075    26268                           %UNOCTET ( VAR = FCLID );
     4076    26272    7                      I = I + 1;
     4077    26273    8                      DO SELECT ( FCLID );
     4078    26274    8                         SELECT ( %KX_FCL_CLGADREXT# );
     4079    26275    8                         IF FCL_PRESENT(%FCLX_CLGADREXT#)
     4080    26276    8                            THEN
     4081    26277    8                               GOTO L_DUPFCL;
     4082    26278    8                         FCL_PRESENT(%FCLX_CLGADREXT#) = '1'B;
     4083    26279                              %UNOCTET ( VAR = ADREXTBYT );
     4084    26283    8                         IF ADREXT.LNG > 20
     4085    26284    8                            THEN
     4086    26285    8                               GOTO INVFCLPRM;
     4087    26286    8                         SUBSTR(KX$L3.RMTNSAP_REDEF.NSAP,0,ADREXT.LNG) = SUBSTR(DAT$->
             26286                                  STRT0,BYTE_INDEX,ADREXT.LNG);
     4088    26287    8                         DIAG = 0;
     4089    26288    8                         BYTE_INDEX = BYTE_INDEX + ADREXT.LNG;
     4090    26289    8                         I = I + ADREXT.LNG + 1;
     4091    26290    8                         SELECT ( %KX_FCL_CLDADREXT# );
     4092    26291    8                         IF FCL_PRESENT(%FCLX_CLDADREXT#)
     4093    26292    8                            THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:143  
     4094    26293    8                               GOTO L_DUPFCL;
     4095    26294    8                         FCL_PRESENT(%FCLX_CLDADREXT#) = '1'B;
     4096    26295                              %UNOCTET ( VAR = ADREXTBYT );
     4097    26299    8                         IF ADREXT.LNG > 20
     4098    26300    8                            THEN
     4099    26301    8                               GOTO INVFCLPRM;
     4100    26302    8                         SUBSTR(KX$L3.LCLNSAP_REDEF.NSAP,0,ADREXT.LNG) = SUBSTR(DAT$->
             26302                                  STRT0,BYTE_INDEX,ADREXT.LNG);
     4101    26303    8                         DIAG = 0;
     4102    26304    8                         BYTE_INDEX = BYTE_INDEX + ADREXT.LNG;
     4103    26305    8                         I = I + ADREXT.LNG+1;
     4104    26306    8                         SELECT ( ELSE );
     4105    26307    8                      GOTO INVFCLPRM;
     4106    26308    8                      END; /* do select ( ccitt-fcl-code ) */
     4107    26309    7                   END;  /* do while */
     4108    26310    6                   SELECT ( ELSE );
     4109    26311    6                GOTO L_INVFCLCOD;
     4110    26312    6                END;  /* do select ( fcl-mrk-byte ) */
     4111    26313    5             SELECT ( %KX_FCL_CHR_RQS# );
     4112    26314    5             IF FCL_PRESENT(%FCLX_CHR_RQS#)
     4113    26315    5                THEN
     4114    26316    5                   GOTO L_DUPFCL;
     4115    26317    5             IF L3EXT = 0
     4116    26318    5                THEN
     4117    26319    5                   GOTO L_INVFCLCOD;
     4118    26320    5             FCL_PRESENT(%FCLX_CHR_RQS#) = '1'B;
     4119    26321    5             I = I + 1;    /* not supposed to get this. Skip over. */
     4120    26322    5             BYTE_INDEX = BYTE_INDEX + 1;
     4121    26323    5             SELECT ( %KX_FCL_DLY# );
     4122    26324    5             IF FCL_PRESENT(%FCLX_DLY#)
     4123    26325    5                THEN
     4124    26326    5                   GOTO L_DUPFCL;
     4125    26327    5             IF L3EXT = 0
     4126    26328    5                THEN
     4127    26329    5                   GOTO L_INVFCLCOD;
     4128    26330    5             FCL_PRESENT(%FCLX_DLY#) = '1'B;
     4129    26331    5             I = I + 2;    /* not supposed to get this. Skip over. */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:144  
     4130    26332    5             BYTE_INDEX = BYTE_INDEX + 2;
     4131    26333    5             SELECT ( %KX_FCL_RED# );
     4132    26334        /*
     4133    26335           Redirected call. Error-log the originally called address.
     4134    26336        */
     4135    26337    5             IF FCL_PRESENT(%FCLX_RED#)
     4136    26338    5                THEN
     4137    26339    5                   GOTO L_DUPFCL;
     4138    26340    5             IF L3EXT = 0
     4139    26341    5                THEN
     4140    26342    5                   GOTO L_INVFCLCOD;
     4141    26343    5             FCL_PRESENT(%FCLX_RED#) = '1'B;
     4142    26344    5             ERCOD = REDIRECTED_CALL;
     4143    26345    5             CALL Y$ER2;
     4144    26346                  %UNOCTET ( VAR = TEMP );
     4145    26350    5             I = I + TEMP + 1;
     4146    26351    5             BYTE_INDEX = BYTE_INDEX + TEMP;
     4147    26352    5             SELECT ( ELSE );
     4148    26353        /*
     4149    26354                                             Unknown facility
     4150    26355        */
     4151    26356    6             DO;
     4152    26357    6   L_INVFCLCOD: DIAG = %KX_DIAG_INVFCLCOD#;
     4153    26358    6                RETURN;
     4154    26359    6             END;
     4155    26360
     4156    26361    5             END;  /*  SELECT  */
     4157    26362    4          END;  /*  DO LOOP  */
     4158    26363
     4159    26364        /*
     4160    26365           Check for inconsistencies in facility requests. Only case known now
     4161    26366           is fast select (restricted response) with window/packet-size negotiation.
     4162    26367        */
     4163    26368    3          IF KX$L3.FSTSLC = %KX_FSTSLC_RST# AND ( FCL_PRESENT(%FCLX_WNDSIZ#) OR
     4164    26369    3             FCL_PRESENT(%FCLX_PCKSIZ#) )
     4165    26370    3             THEN
     4166    26371    3                GOTO L_INVFCLCOD;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:145  
     4167    26372    3          KX$L3.DFL_OPTS = KX$L3.CALL_OPTS;
     4168    26373    3          KX$L3.CM_OPTS = KX$L3.CALL_OPTS;
     4169    26374
     4170    26375    3          IF ( KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX > 128 )
     4171    26376    3             THEN
     4172    26377    4                DO;
     4173    26378    4                   DIAG = %KX_DIAG_LRGUSRDAT#;
     4174    26379    4                   RETURN;
     4175    26380    4                END;
     4176    26381    3          IF ( KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX > 0 )
     4177    26382    3             THEN IF BYTE_ARRAY ( BYTE_INDEX ) = %KX_PRTID_X29#
     4178    26383    4                   THEN DO;
     4179    26384    4                         IF NOT KX$L2.FLG.ACPX29
     4180    26385    5                            THEN DO;
     4181    26386    5                                  DIAG = %KX_DIAG_NOX29#;
     4182    26387    5                                  RETURN;
     4183    26388    5                               END;
     4184    26389    4                      END;
     4185    26390    4                   ELSE DO;
     4186    26391    4   L_CHKX25:             IF NOT KX$L2.FLG.ACPX25
     4187    26392    5                            THEN DO;
     4188    26393    5                                  DIAG = %KX_DIAG_NOX25#;
     4189    26394    5                                  RETURN;
     4190    26395    5                               END;
     4191    26396    4                      END;
     4192    26397    3             ELSE GOTO L_CHKX25;
     4193    26398
     4194    26399    3          IF DIAG = 0
     4195    26400    3             THEN
     4196    26401    3                PEVENT = %Y_EV_CALL#;
     4197    26402    3          IF KX$L3.STATE.CURRENT = %Y_ST_CALL#
     4198    26403    4             THEN DO;
     4199    26404    4                   IF KX$L3.CALL_COLLISION
     4200    26405    5                      THEN DO;
     4201    26406    5                            PEVENT = %Y_EV_BAD_CALL#;
     4202    26407    5                            DIAG = %KX_DIAG_P5#;
     4203    26408    5                         END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:146  
     4204    26409    5                      ELSE DO;
     4205    26410    5                            KX$L3.CALL_COLLISION = '1'B;
     4206    26411    5                            IF NOT KX$L2.FLG.DCE
     4207    26412    5                               THEN ALTRETURN;
     4208    26413    5                         END;
     4209    26414    4                END;
     4210    26415
     4211    26416        /*  If called subaddress is 99, assume OSI Connection Oriented transport.
     4212    26417            NSAP's are identical to x.121 addresses if not in address extensions.
     4213    26418        */
     4214    26419    3          IF (TERMID.TERM.SUBDEVICE = 99)
     4215    26420    3             OR ( (KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX>0)
     4216    26421    3             AND ( BYTE_ARRAY ( BYTE_INDEX ) = %KX_PRTID_OSI#) )
     4217    26422    4             THEN DO;
     4218    26423    4                   IF NOT (FCL_PRESENT(%FCLX_CLDADREXT#))
     4219    26424    4                      THEN ADDR(KX$L3.LCLNSAP)->STRT = ADDR(KX$L3.LCLADR)->STRT;
     4220    26425    4                   IF NOT (FCL_PRESENT(%FCLX_CLGADREXT#))
     4221    26426    4                      THEN ADDR(KX$L3.RMTNSAP)->STRT = ADDR(KX$L3.CALL_OPTS.RCVADR)->
             26426                               STRT;
     4222    26427    4                END;
     4223    26428
     4224    26429    3          SELECT ( %Y_ID_CALL_C# );
     4225    26430        /*
     4226    26431                                             If the state is not CALL, then
     4227    26432                                             it is an unexpected Call Confirm,
     4228    26433                                             and there is no reason to parse
     4229    26434                                             the data.
     4230    26435        */
     4231    26436    3          IF KX$L3.STATE.CURRENT = %Y_ST_CLEAR#
     4232    26437    3             THEN
     4233    26438    3                PEVENT = %Y_EV_CALL_C#;
     4234    26439    3             ELSE
     4235    26440    3                PEVENT = %Y_EV_BAD_CALL#;
     4236    26441    3          DIAG = 0;
     4237    26442    3          IF KX$L3.STATE.CURRENT ~= %Y_ST_CALL# OR KX$L3.FSTSLC = %KX_FSTSLC_RST#
     4238    26443    3             THEN
     4239    26444    3                RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:147  
     4240    26445
     4241    26446    3          BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT;
     4242    26447    3          IF DATACNT = %L0
     4243    26448    3             THEN
     4244    26449    4                DO;
     4245    26450    4                   PEVENT = %Y_EV_CALL_C#;
     4246    26451    4                   RETURN;
     4247    26452    4                END;
     4248    26453    3          FCL_PRESENT_BITS = '0'B;
     4249    26454
     4250    26455               %UNOCTET ( VAR = ADRLNG );
     4251    26459    3          IF ADRLNGS.LFT > 14
     4252    26460    3             THEN
     4253    26461    4                DO;
     4254    26462    4                   DIAG = %KX_DIAG_LNGCLNADR#;
     4255    26463    4                   RETURN;
     4256    26464    4                END;
     4257    26465    3          IF ADRLNGS.RGH > 14
     4258    26466    3             THEN
     4259    26467    4                DO;
     4260    26468    4                   DIAG = %KX_DIAG_LNGCLDADR#;
     4261    26469    4                   RETURN;
     4262    26470    4                END;
     4263    26471
     4264    26472    3          BYTE_INDEX = BYTE_INDEX + (ADRLNGS.RGH+ADRLNGS.LFT+1)/2;
     4265    26473        /*
     4266    26474                                             Now parse the facilities.
     4267    26475        */
     4268    26476    3          IF KX$DATA.CNT+LENGTHC(KX$DATA) <=  BYTE_INDEX
     4269    26477    3             THEN
     4270    26478    3                RETURN;
     4271    26479
     4272    26480               %UNOCTET ( VAR = FCLLNG );
     4273    26484    3          IF FCLLNG > 109
     4274    26485    3             THEN
     4275    26486    4                DO;
     4276    26487    4                   DIAG = %KX_DIAG_LRGFCLCNT#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:148  
     4277    26488    4                   RETURN;
     4278    26489    4                END;
     4279    26490    3          IF KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX < FCLLNG
     4280    26491    3             THEN
     4281    26492    4                DO;
     4282    26493    4                   DIAG = %KX_DIAG_UNBFCLCNT#;
     4283    26494    4                   RETURN;
     4284    26495    4                END;
     4285    26496
     4286    26497    4          DO I = 1 TO FCLLNG;
     4287    26498                  %UNOCTET ( VAR = FCLID );
     4288    26502    5             DO SELECT ( FCLID );
     4289    26503    5                SELECT ( %KX_FCL_CUG#, %KX_FCL_CUG_OUT# );
     4290    26504        /*
     4291    26505                                             Should not be in a call_c. Skip over.
     4292    26506        */
     4293    26507    5                IF FCL_PRESENT(%FCLX_CUG1#)
     4294    26508    5                   THEN
     4295    26509    5                      GOTO L_DUPFCL;
     4296    26510    5                FCL_PRESENT(%FCLX_CUG1#) = '1'B;
     4297    26511    5                BYTE_INDEX = BYTE_INDEX + 1;
     4298    26512    5                I = I + 1;
     4299    26513
     4300    26514    5                SELECT ( %KX_FCL_RVS# );
     4301    26515        /*
     4302    26516                                             Should not be in a call_c. Skip over.
     4303    26517        */
     4304    26518    5                IF FCL_PRESENT(%FCLX_RVS#)
     4305    26519    5                   THEN
     4306    26520    5                      GOTO L_DUPFCL;
     4307    26521    5                FCL_PRESENT(%FCLX_RVS#) = '1'B;
     4308    26522    5                BYTE_INDEX = BYTE_INDEX + 1;
     4309    26523    5                I = I + 1;
     4310    26524
     4311    26525    5                SELECT ( %KX_FCL_CUG_EXT#, %KX_FCL_CUG_OUT_EXT#, %KX_FCL_CUG_BIL# );
     4312    26526        /*
     4313    26527                                             Should not be in a call_c. Skip over.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:149  
     4314    26528        */
     4315    26529    5                IF FCL_PRESENT(%FCLX_CUG2#)
     4316    26530    5                   THEN
     4317    26531    5                      GOTO L_DUPFCL;
     4318    26532    5                FCL_PRESENT(%FCLX_CUG2#) = '1'B;
     4319    26533    5                BYTE_INDEX = BYTE_INDEX + 2;
     4320    26534    5                I = I + 2;
     4321    26535
     4322    26536
     4323    26537    5                SELECT ( %KX_FCL_PCKSIZ# );
     4324    26538        /*
     4325    26539                                             The packet size must be at least
     4326    26540                                             128.  If it is more than what is
     4327    26541                                             allowed, then the call is cleared.
     4328    26542        */
     4329    26543    5                IF FCL_PRESENT(%FCLX_PCKSIZ#)
     4330    26544    5                   THEN
     4331    26545    5                      GOTO L_DUPFCL;
     4332    26546    5                FCL_PRESENT(%FCLX_PCKSIZ#) = '1'B;
     4333    26547                     %UNOCTET ( VAR = TEMP );
     4334    26551    5                IF TEMP < KX_BUF.LOGSIZ ( 0 ) OR
     4335    26552    5                   TEMP > KX_BUF.LOGSIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ )
     4336    26553    5                   THEN
     4337    26554    5                      GOTO INVFCLPRM;
     4338    26555    5                TEMP = LOG_TO_CP6 ( TEMP );
     4339    26556    5                KX$L3.CALL_OPTS.RCVPCKSIZ = TEMP;
     4340    26557
     4341    26558                     %UNOCTET ( VAR = TEMP );
     4342    26562    5                IF TEMP < KX_BUF.LOGSIZ ( 0 ) OR
     4343    26563    5                   TEMP > KX_BUF.LOGSIZ ( KX$L3.CALL_OPTS.SNDPCKSIZ )
     4344    26564    5                   THEN
     4345    26565    5                      GOTO INVFCLPRM;
     4346    26566    5                TEMP = LOG_TO_CP6 ( TEMP );
     4347    26567    5                KX$L3.CALL_OPTS.SNDPCKSIZ = TEMP;
     4348    26568    5                I = I + 2;
     4349    26569
     4350    26570    5                SELECT ( %KX_FCL_WNDSIZ# );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:150  
     4351    26571        /*
     4352    26572                                             Window negotiation.
     4353    26573        */
     4354    26574    5                IF FCL_PRESENT(%FCLX_WNDSIZ#)
     4355    26575    5                   THEN
     4356    26576    5                      GOTO L_DUPFCL;
     4357    26577    5                FCL_PRESENT(%FCLX_WNDSIZ#) = '1'B;
     4358    26578                     %UNOCTET ( VAR = TEMP );
     4359    26582    5                IF (TEMP = 0 OR TEMP > KX$L3.CALL_OPTS.RCVWND) AND TEMP ~= 2
     4360    26583    5                   THEN
     4361    26584    5                      GOTO INVFCLPRM;
     4362    26585    5                KX$L3.CALL_OPTS.RCVWND = TEMP;
     4363    26586    5                IF KX$L3.RSPDLY > KX$L3.CALL_OPTS.RCVWND
     4364    26587    5                   THEN
     4365    26588    5                      KX$L3.RSPDLY = KX$L3.CALL_OPTS.RCVWND/2;
     4366    26589
     4367    26590                     %UNOCTET ( VAR = TEMP );
     4368    26594    5                IF (TEMP = 0 OR TEMP > KX$L3.CALL_OPTS.SNDWND) AND TEMP ~= 2
     4369    26595    5                   THEN
     4370    26596    5                      GOTO INVFCLPRM;
     4371    26597    5                KX$L3.CALL_OPTS.SNDWND = TEMP;
     4372    26598    5                I = I + 2;
     4373    26599
     4374    26600    5                SELECT ( %KX_FCL_THRCLS# );
     4375    26601        /*
     4376    26602                                             Just save the information.
     4377    26603        */
     4378    26604    5                IF FCL_PRESENT(%FCLX_THRCLS#)
     4379    26605    5                   THEN
     4380    26606    5                      GOTO L_DUPFCL;
     4381    26607    5                FCL_PRESENT(%FCLX_THRCLS#) = '1'B;
     4382    26608                     %UNOCTET ( VAR = TEMP );
     4383    26612    5                KX$L3.CALL_OPTS.RCVTHR = TEMP / 16;
     4384    26613    5                KX$L3.CALL_OPTS.SNDTHR = MOD ( TEMP, 16 );
     4385    26614    5                I = I + 1;
     4386    26615
     4387    26616    5                SELECT ( %KX_FCL_NUID# );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:151  
     4388    26617        /*
     4389    26618           Network user ID. Just skip over.
     4390    26619        */
     4391    26620    5                IF FCL_PRESENT(%FCLX_NUID#)
     4392    26621    5                   THEN
     4393    26622    5                      GOTO L_DUPFCL;
     4394    26623    5                FCL_PRESENT(%FCLX_NUID#) = '1'B;
     4395    26624                     %UNOCTET ( VAR = TEMP );
     4396    26628    5                BYTE_INDEX = BYTE_INDEX + TEMP;
     4397    26629    5                I = I + 1 + TEMP;
     4398    26630
     4399    26631    5                SELECT ( %KX_FCL_CHR_RQS# );
     4400    26632        /*
     4401    26633           Charging information request. Just skip over.
     4402    26634        */
     4403    26635    5                IF FCL_PRESENT(%FCLX_CHR_RQS#)
     4404    26636    5                   THEN
     4405    26637    5                      GOTO L_DUPFCL;
     4406    26638    5                FCL_PRESENT(%FCLX_CHR_RQS#) = '1'B;
     4407    26639    5                BYTE_INDEX = BYTE_INDEX + 1;
     4408    26640    5                I = I + 1;
     4409    26641
     4410    26642    5                SELECT ( %KX_FCL_DLY# );
     4411    26643        /*
     4412    26644           Transit delay indication. Save the value.
     4413    26645        */
     4414    26646    5                IF FCL_PRESENT(%FCLX_DLY#)
     4415    26647    5                   THEN
     4416    26648    5                      GOTO L_DUPFCL;
     4417    26649    5                FCL_PRESENT(%FCLX_DLY#) = '1'B;
     4418    26650                     %UNOCTET ( VAR = KX$L3.TRNDLYINDBYT.LFT );
     4419    26654                     %UNOCTET ( VAR = KX$L3.TRNDLYINDBYT.RGH );
     4420    26658    5                I = I + 2;
     4421    26659
     4422    26660    5                SELECT ( %KX_FCL_ADR_MOD# );
     4423    26661        /*
     4424    26662           Called line address modified notification. Error log the info.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:152  
     4425    26663        */
     4426    26664    5                IF FCL_PRESENT(%FCLX_ADR_MOD#)
     4427    26665    5                   THEN
     4428    26666    5                      GOTO L_DUPFCL;
     4429    26667    5                FCL_PRESENT(%FCLX_ADR_MOD#) = '1'B;
     4430    26668    5                ERCOD = ADDRESS_MODIFIED;
     4431    26669    5                I = I + 1;
     4432    26670    5                BYTE_INDEX = BYTE_INDEX + 1;
     4433    26671
     4434    26672    5                SELECT ( %KX_FCL_MRK# );
     4435    26673        /*
     4436    26674                                             Facility marker.
     4437    26675        */
     4438    26676    5                BYTE_INDEX = BYTE_INDEX + FCLLNG - I;
     4439    26677    5                I = FCLLNG;
     4440    26678    5                SELECT ( ELSE );
     4441    26679        /*
     4442    26680                                             Unknown facility
     4443    26681        */
     4444    26682    6             DO;
     4445    26683    6                DIAG = %KX_DIAG_INVFCLCOD#;
     4446    26684    6                RETURN;
     4447    26685    6             END;
     4448    26686
     4449    26687    5             END;  /*  SELECT  */
     4450    26688    4          END;  /*  DO LOOP  */
     4451    26689
     4452    26690    3          IF KX$DATA.CNT + LENGTHC(KX$DATA) ~= BYTE_INDEX AND
     4453    26691    3             KX$L3.FSTSLC ~= %KX_FSTSLC_UNR#
     4454    26692        /*
     4455    26693           User data field in call_c allowed only on fast select calls with
     4456    26694           no restriction on response.
     4457    26695        */
     4458    26696    3             THEN
     4459    26697    3                RETURN;
     4460    26698
     4461    26699    3          PEVENT = %Y_EV_CALL_C#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:153  
     4462    26700
     4463    26701    3          SELECT ( %Y_ID_CLEAR# );
     4464    26702
     4465    26703    3          IF KX$L3.PVC
     4466    26704    3             THEN
     4467    26705    3                PEVENT = %Y_EV_CLEAR_C#;
     4468    26706        /*   EV_CLEAR has special meaning for PVCs     */
     4469    26707    3             ELSE
     4470    26708    3                PEVENT = %Y_EV_CLEAR#;
     4471    26709    3          KX_STATS_X25.CLEARS_IN = KX_STATS_X25.CLEARS_IN + 1;
     4472    26710    3          TEMP0 = 2;
     4473    26711    3          IF DATACNT < %L1
     4474    26712    3             THEN
     4475    26713    4                DO;
     4476    26714    4                   PEVENT = %Y_EV_SHR_PKT#;
     4477    26715    4                   RETURN;
     4478    26716    4                END;
     4479    26717    3   DECODE_CLR: ;
     4480    26718    3          BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT + TEMP0;
     4481    26719    3          IF DATACNT <= %L0+TEMP0
     4482    26720    3             THEN
     4483    26721    3                RETURN;
     4484    26722    3          IF IN_PKTHDR.GFI ~= %GFI_EXT AND KX$L3.FSTSLC = 0
     4485    26723    3             THEN
     4486    26724    4                DO;
     4487    26725    4                   DIAG = %KX_DIAG_LNG#;
     4488    26726    4                   PEVENT = %Y_EV_BAD_CALL#;  /* borrow this event */
     4489    26727    4                   RETURN;
     4490    26728    4                END;
     4491    26729               %UNOCTET ( VAR = ADRLNG );
     4492    26733    3          BYTE_INDEX = BYTE_INDEX + (ADRLNGS.RGH+1)/2 + (ADRLNGS.LFT+1)/2 + 1;
     4493    26734    3          IF DATACNT <= %L0 + BYTE_INDEX   /* are we at the end? */
     4494    26735    3             THEN
     4495    26736    3                RETURN;
     4496    26737               %UNOCTET ( VAR = FCLLNG );
     4497    26741    3          IF FCLLNG > 109
     4498    26742    3             THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:154  
     4499    26743    4                DO;
     4500    26744    4                   ERCOD = BAD_CLR_RQS;
     4501    26745    4                   CALL Y$ER2;
     4502    26746    4                   RETURN;
     4503    26747    4                END;
     4504    26748    4          DO I = 1 TO FCLLNG;
     4505    26749                  %UNOCTET ( VAR = FCLID );
     4506    26753    5             DO SELECT ( FCLID );
     4507    26754    5                SELECT ( %KX_FCL_CHR_$$$# );
     4508    26755        /*
     4509    26756           Charging information indicating monetary unit.
     4510    26757        */
     4511    26758    5                CHR_$$$_X = BYTE_INDEX - 1;
     4512    26759    5   CHARGING_INFO: ;
     4513    26760                     %UNOCTET ( VAR = TEMP );
     4514    26764    5                BYTE_INDEX = BYTE_INDEX + TEMP;
     4515    26765    5                I = I + TEMP + 1;
     4516    26766
     4517    26767    5                SELECT ( %KX_FCL_CHR_DUR# );
     4518    26768        /*
     4519    26769           Charging information indicating call duration.
     4520    26770        */
     4521    26771    5                CHR_DUR_X = BYTE_INDEX - 1;
     4522    26772    5                GOTO CHARGING_INFO;
     4523    26773
     4524    26774    5                SELECT ( %KX_FCL_CHR_SEG# );
     4525    26775        /*
     4526    26776           Charging information indicating segment count.
     4527    26777        */
     4528    26778    5                CHR_SEG_X = BYTE_INDEX - 1;
     4529    26779    5                GOTO CHARGING_INFO;
     4530    26780
     4531    26781    5                SELECT ( %KX_FCL_ADR_MOD# );
     4532    26782        /*
     4533    26783           Called line address modified notification. Error log it.
     4534    26784        */
     4535    26785    5                ERCOD = ADDRESS_MODIFIED;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:155  
     4536    26786    5                CALL Y$ER2;
     4537    26787    5                BYTE_INDEX = BYTE_INDEX + 1;
     4538    26788    5                I = I + 1;
     4539    26789
     4540    26790    5                SELECT ( ELSE );
     4541    26791        /*
     4542    26792           Invalid facility. Set byte_index to end of packet.
     4543    26793        */
     4544    26794    5             BYTE_INDEX = KX$DATA.CNT + LENGTHC(KX$DATA);
     4545    26795    5             I = FCLLNG;
     4546    26796    5             END;   /* of select */
     4547    26797    4          END;    /* do loop */
     4548    26798
     4549    26799    3          SELECT ( %Y_ID_CLEAR_C# );
     4550    26800
     4551    26801    3          PEVENT = %Y_EV_CLEAR_C#;
     4552    26802    3          TEMP0 = 0;
     4553    26803    3          GOTO DECODE_CLR;
     4554    26804
     4555    26805    3          SELECT ( %Y_ID_INT# );
     4556    26806
     4557    26807        /* Check the length */
     4558    26808
     4559    26809    3          IF ( IN_PKTHDR.GFI ~= %GFI_EXT AND DATACNT ~= %L1 AND DATACNT ~= %L0 )
     4560    26810    3             THEN
     4561    26811    3                PEVENT = %Y_EV_UNK_TYPE#;
     4562    26812    3             ELSE
     4563    26813    3                PEVENT = %Y_EV_INT#;
     4564    26814
     4565    26815    3          SELECT ( %Y_ID_INT_C# );
     4566    26816
     4567    26817    3          IF KX$DATA.CNT ~= %L0
     4568    26818    3             THEN
     4569    26819    3                PEVENT = %Y_EV_UNK_TYPE#;
     4570    26820    3             ELSE
     4571    26821    3                IF KX$L3.STATE.CURRENT = %Y_ST_DATA# AND NOT KX$L3.INTPND
     4572    26822    3                   THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:156  
     4573    26823    4                      DO;
     4574    26824    4                         ERCOD = INV_INTC ;
     4575    26825    4                         CALL Y$ER ;
     4576    26826
     4577    26827    4                         DIAG = %KX_RST_DIAG_UIC#;
     4578    26828    4                         PEVENT = %Y_EV_BAD_PRS#;
     4579    26829    4                      END;
     4580    26830    3                   ELSE
     4581    26831    3                      PEVENT = %Y_EV_INT_C#;
     4582    26832
     4583    26833    3          SELECT ( %Y_ID_RESET# );
     4584    26834
     4585    26835    3          IF DATACNT < %L1
     4586    26836    3             THEN
     4587    26837    4                DO;
     4588    26838    4                   PEVENT = %Y_EV_SHR_PKT#;
     4589    26839    4                   RETURN;
     4590    26840    4                END;
     4591    26841    3             ELSE
     4592    26842    3                PEVENT = %Y_EV_RESET#;
     4593    26843    3          KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;
     4594    26844    3          IF ( KX$L3.PVC AND DATACNT > %L0 )
     4595    26845        /*
     4596    26846           For PVCs, we need special case handling of reset packets with cause equal to
     4597    26847           out-of-order or remote-DTE-operational.
     4598    26848        */
     4599    26849    3             THEN
     4600    26850    4                DO;
     4601    26851    4                   IF IN_PKTHDR.CAUSE = %KX_RST_CAUSE_OOO#
     4602    26852    4                      THEN
     4603    26853    4                         PEVENT = %Y_EV_RPVCDWN#; /* remote PVC out-of-order */
     4604    26854    4                      ELSE
     4605    26855    4                         IF IN_PKTHDR.CAUSE = %KX_RST_CAUSE_RDO#
     4606    26856    4                            THEN
     4607    26857    4                               PEVENT = %Y_EV_RPVCUP#;  /* remote PVC up */
     4608    26858    4                END;
     4609    26859
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:157  
     4610    26860    3          SELECT ( %Y_ID_RESET_C# );
     4611    26861
     4612    26862    3          PEVENT = %Y_EV_RESET_C#;
     4613    26863
     4614    26864    3          SELECT ( ELSE );
     4615    26865    3       PEVENT = %Y_EV_UNK_TYPE#;
     4616    26866
     4617    26867    3       END /* SELECT */;
     4618    26868    2   END /* SUBROUTINE */;
     4619    26869
     4620    26870        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:158  
     4621    26871        /*I* NAME: Y$START_L3S,  Y$STOP_L3S */
     4622    26872        /*I* PURPOSE: Report START or STOP to all the level 3s */
     4623    26873        /*I* CALL: CALL Y$? */
     4624    26874        /*I* INPUT: L2$  ->  line context block*/
     4625    26875        /*I* OUTPUT: None */
     4626    26876
     4627    26877    1   Y$START_L3S: PROC;
     4628    26878
     4629    26879    2   DCL T$ PTR;
     4630    26880        %KX$LINKDEV ( STCLASS = "BASED(T$)" );
     4631    26907        %FPT_X25 ( FPTN = FPT_L3, STCLASS = );
     4632    26951    2   DCL EVENT UBIN;
     4633    26952        %KNH$MESS ( FPTN = KNH_MESS, STCLASS = );
     4634    27001    2   DCL 1 KV@SNDCQ ALIGNED,
     4635    27002    2         2 MSG_ (0:5),
     4636    27003    2           3 ADR$ PTR,
     4637    27004    2           3 BYTX UBIN WORD,
     4638    27005    2           3 BYTSIZ UBIN WORD;
     4639    27006        %FPT_CONNECT ( FPTN = FPT@CONNECT, ADRTYP = NET, STCLASS = );
     4640    27177        %FPT_TERM ( FPTN = FPT@TERM, STCLASS = );
     4641    27199    2   DCL TRY_SNDCQ BIT(1);
     4642    27200        %FPT_CONNECT ( FPTN = FPT_CONNECT_C, STCLASS = SYMREF );
     4643    27269        %FPT_TERM ( FPTN = FPT_TERM_C, STCLASS = SYMREF );
     4644    27291        %KV$VDH_DSC ( NAME = KV@VDH_DSC, STCLASS = AUTO );
     4645    27327        %KV$VDH_DSC ( NAME = KXX_VDH_DSC, STCLASS = SYMREF );
     4646    27363        %KV@USRENT;
     4647    27383        %KV$VDI ( STCLASS = BASED );
     4648    27454        %KV$USRPRM;
     4649    27505        %KV$STT;
     4650    27899        %KV$PTR;
     4651    27942
     4652    27943        /* Report START */
     4653    27944
     4654    27945    2       EVENT = %KX_P_EV_START#;
     4655    27946    2       IF KX$L2.DSTSNPA.LNG ~= 0
     4656    27947    2          THEN
     4657    27948    3             DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:159  
     4658    27949    3                IF KX$L2.TERM_ALTRET
     4659    27950    3                   THEN
     4660    27951    4                      DO;
     4661    27952    4                         KX$L2.TERM_ALTRET = '0'B;
     4662    27953    4                         TRY_SNDCQ = '0'B;
     4663    27954    4                      END;
     4664    27955    3                   ELSE
     4665    27956    4                      DO;
     4666    27957    4                         FPT@CONNECT = FPT_CONNECT_C;
     4667    27958    4                         FPT@CONNECT.RLCID.FLAGS.VIRCIR = '0'B;
     4668    27959    4                         FPT@CONNECT.RLCID.NODE = %K_CNC_LINK#;
     4669    27960    4                         FPT@CONNECT.DSTSNPA = KX$L2.DSTSNPA;
     4670    27961    4                         FPT@CONNECT.SERVICE = KX$L2.QOS;
     4671    27962    4                         FPT@CONNECT.TERMINAL_ID = KX$L2.CHN$->KH$CHN.TERMID;
     4672    27963    4                         TRY_SNDCQ = '1'B;
     4673    27964    4                      END;
     4674    27965    3             END;
     4675    27966    2          ELSE
     4676    27967    2             TRY_SNDCQ = '0'B;
     4677    27968        /*
     4678    27969           Try to log on all LINKDEVs
     4679    27970        */
     4680    27971    2       T$ = KX$L2.DVC_HEAD$;
     4681    27972    3       DO WHILE ( T$ ~= ADDR(NIL) );
     4682    27973    3          IF KX$LINKDEV.VDI$ = ADDR(NIL)
     4683    27974    3             THEN
     4684    27975    4                DO;
     4685    27976    4                   CALL KXX$INTCNC ( KX$LINKDEV ) WHENALTRETURN
     4686    27977    5                         DO;
     4687    27978    5                            ERCOD = DEVLGNFAL;
     4688    27979    5                            CALL Y$ER;
     4689    27980    5                         END;
     4690    27981    4                END;
     4691    27982    3             ELSE
     4692    27983    3                KX$LINKDEV.RECNC = '1'B; /* assume it's doing disconnect */
     4693    27984    3          T$ = KX$LINKDEV.FLNK$;
     4694    27985    3       END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:160  
     4695    27986
     4696    27987    2       GOTO SUBCOMMON;
     4697    27988
     4698    27989
     4699    27990    2   Y$DIED_L3S: ENTRY;
     4700    27991
     4701    27992    2       EVENT = %KX_P_EV_DIED#;
     4702    27993    2       GOTO L_DIED;
     4703    27994
     4704    27995    2   Y$STOP_L3S: ENTRY;
     4705    27996
     4706    27997        /* Report STOP */
     4707    27998
     4708    27999    2       EVENT = %KX_P_EV_STOP#;
     4709    28000    2   L_DIED:
     4710    28001    2       IF KX$L2.LDCTX ~= 0
     4711    28002    2          THEN
     4712    28003    3             DO;
     4713    28004    3                IF KX$L2.INIT_ALTRET
     4714    28005    3                   THEN
     4715    28006    4                      DO;
     4716    28007    4                         KX$L2.INIT_ALTRET = '0'B;
     4717    28008    4                         TRY_SNDCQ = '0'B;
     4718    28009    4                      END;
     4719    28010    3                   ELSE
     4720    28011    4                      DO;
     4721    28012    4                         FPT@TERM = FPT_TERM_C;
     4722    28013    4                         FPT@TERM.RLCID.LDCTX = KX$L2.LDCTX;
     4723    28014    4                         TRY_SNDCQ = '1'B;
     4724    28015    4                      END;
     4725    28016    3             END;
     4726    28017    2          ELSE
     4727    28018    2             TRY_SNDCQ = '0'B;
     4728    28019        /*
     4729    28020           Log off all LINKDEVs
     4730    28021        */
     4731    28022    2       T$ = KX$L2.DVC_HEAD$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:161  
     4732    28023    2       KV@VDH_DSC = KXX_VDH_DSC;
     4733    28024    3       DO WHILE ( T$ ~= ADDR(NIL) );
     4734    28025    3          IF KX$LINKDEV.VDI$ ~= ADDR(NIL)
     4735    28026    3             THEN
     4736    28027    4                DO;
     4737    28028                        %KV$USRENT ( VDI$ = KX$LINKDEV.VDI$, DFR$ = L_DFR,
     4738    28029                        SCHRSN = %KV_SCHRSN_DFR3 );
             28042    4           KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             28042                    KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
             28043    5           IF NOT KX$LINKDEV.VDI$->KV$VDI.BSY THEN DO;
             28044    5              KX$LINKDEV.VDI$->KV$VDI.BSY = '1'B;
             28045    5              KV@USRENT.SVDPTR$ = KV$PTR$;
             28046    5              KV$PTR$ = KX$LINKDEV.VDI$->KV$VDI.ASNINPPTR$;
             28047    5              END;                         /* ELSE IF ~BSY                       */
             28048    5           ELSE DO;
             28049    5              KX$LINKDEV.VDI$->KV$VDI.DFR.USR(3) = '1'B;
             28050    5           KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             28050                    KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1
             28050                    ;
             28051    5              GOTO L_DFR;
             28052    5              END;                         /* END IF                             */
     4739    28055    4                   CALL KVV$VDI ( KV@VDH_DSC );
     4740    28056                        %KV$USREXT ( VDI$ = KX$LINKDEV.VDI$ );
             28062    4           KV$PTR.VDI$->KV$VDI.BSY = '0'B;
             28064    4           KV$PTR$ = KV@USRENT.SVDPTR$;
     4741    28066    4                END;
     4742    28067    3   L_DFR: T$ = KX$LINKDEV.FLNK$;
     4743    28068    3       END;
     4744    28069
     4745    28070    2   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
     4746    28071
     4747    28072    2       IF TRY_SNDCQ
     4748    28073    2          THEN
     4749    28074    3             DO;
     4750    28075    3                KNH_MESS = '0'B;
     4751    28076    3                KNH_MESS.LDCTX = KX$L2.LDCTX;
     4752    28077    3                KNH_MESS.UID$ = L2$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:162  
     4753    28078    3                KNH_MESS.UIDX.CQ_HNDID = %KV#CQ_HNDID_SL;
     4754    28079    3                KV@SNDCQ = '0'B;
     4755    28080    3                KV@SNDCQ.MSG_.ADR$ (0) = ADDR ( KNH_MESS );
     4756    28081    3                KV@SNDCQ.MSG_.BYTSIZ (0) = ( LENGTHC (KNH_MESS) + 3 ) / 4 * 4;
     4757    28082    3                IF EVENT = %KX_P_EV_START#
     4758    28083    3                   THEN
     4759    28084    4                      DO;
     4760    28085    4                         KNH_MESS.FUNCTION = %KN_FCN_INIT;
     4761    28086    4                         KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@CONNECT );
     4762    28087    4                         KV@SNDCQ.MSG_.ADR$ (1) = ADDR(FPT@CONNECT);
     4763    28088    4                         KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@CONNECT)+3 )/4*4;
     4764    28089    4                      END;
     4765    28090    3                   ELSE
     4766    28091    4                      DO;
     4767    28092    4                         KNH_MESS.FUNCTION = %KN_FCN_TERM;
     4768    28093    4                         KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@TERM );
     4769    28094    4                         KV@SNDCQ.MSG_.ADR$ (1) = ADDR( FPT@TERM );
     4770    28095    4                         KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@TERM)+3 )/4*4;
     4771    28096    4                         KX$L2.TERMACKPND = '1'B;
     4772    28097    4                      END;
     4773    28098    3                CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN
     4774    28099    4                      DO;
     4775    28100    4                         KX$L2.LDCTX = 0;
     4776    28101    4                      END;
     4777    28102    3                   WHENALTRETURN
     4778    28103    4                      DO;
     4779    28104    4                         IF EVENT = %KX_P_EV_START#
     4780    28105    4                            THEN
     4781    28106    4                               KX$L2.INIT_ALTRET = '1'B;
     4782    28107    4                            ELSE
     4783    28108    4                               KX$L2.TERM_ALTRET = '1'B;
     4784    28109    4                      END;
     4785    28110    3             END;
     4786    28111    2       FPT_L3 = '0'B;
     4787    28112    2       FPT_L3.EVN = EVENT;
     4788    28113
     4789    28114    2       L3$ = KX$L2.L3_HEAD$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:163  
     4790    28115
     4791    28116        /* Loop thru all the level 3s */
     4792    28117
     4793    28118    3       DO WHILE ( L3$ ~= ADDR(NIL) );
     4794    28119
     4795    28120        /* Call this level 3 */
     4796    28121
     4797    28122    3          FPT_L3.RCV$ = L3$;
     4798    28123    3          L3$ = KX$L3.NEXT$;
     4799    28124    3          CALL KXP$PACKET ( FPT_L3 );
     4800    28125
     4801    28126    3       END /* LOOP */;
     4802    28127
     4803    28128    2   END /* SUBROUTINE */;
     4804    28129
     4805    28130        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:164  
     4806    28131        /*I* NAME: Y$STUFF_FACILITIES
     4807    28132             PURPOSE: To insert the facilities into a Call or
     4808    28133                      Call Confirmation packet
     4809    28134             CALL: CALL Y$STUFF_FACILITIES
     4810    28135             INPUT: BYTE_ARRAY buffer
     4811    28136                    BYTE_INDEX for the starting index
     4812    28137             OUTPUT: Updated BYTE_ARRAY buffer
     4813    28138                     BYTE_INDEX is the index for the next byte   */
     4814    28139
     4815    28140    1   Y$STUFF_FACILITIES: PROC;
     4816    28141
     4817    28142    2   DCL FACILITY_LENGTH_INDEX UBIN;
     4818    28143    2   DCL BFRC CHAR(66) AUTO ;
     4819    28144    2   DCL BFRU(0:65) REDEF BFRC UBIN BYTE CALIGNED ;
     4820    28145    2   DCL CHRBSD CHAR(FACILITY_LENGTH_INDEX) BASED CALIGNED ;
     4821    28146
     4822    28147    2       FACILITY_LENGTH_INDEX = 0 ;
     4823    28148        /*
     4824    28149                                             Sending packet and window sizes ?
     4825    28150        */
     4826    28151    2       IF (KX$L3.PCKNGT OR SENDING_CALL) AND KX$L3.FSTSLC ~= %KX_FSTSLC_RST#
     4827    28152    2          THEN
     4828    28153    3             DO;
     4829    28154    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_PCKSIZ# ;
     4830    28155    3                IF SENDING_CALL
     4831    28156    3                   THEN
     4832    28157    4                      DO;
     4833    28158    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX_BUF.LOGSIZ(
     4834    28159    4                            KX$L3.CALL_OPTS.RCVPCKSIZ);
     4835    28160    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX_BUF.LOGSIZ(
     4836    28161    4                            KX$L3.CALL_OPTS.SNDPCKSIZ);
     4837    28162    4                      END;
     4838    28163    3                   ELSE
     4839    28164    4                      DO;
     4840    28165    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX_BUF.LOGSIZ(
     4841    28166    4                            KX$L3.CALL_OPTS.RCVPCKSIZ);
     4842    28167    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX_BUF.LOGSIZ(
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:165  
     4843    28168    4                            KX$L3.CALL_OPTS.SNDPCKSIZ);
     4844    28169    4                      END;
     4845    28170    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 3;
     4846    28171    3             END;
     4847    28172    2       IF (KX$L3.WNDNGT OR SENDING_CALL) AND KX$L3.FSTSLC ~= %KX_FSTSLC_RST#
     4848    28173    2          THEN
     4849    28174    3             DO;
     4850    28175    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_WNDSIZ# ;
     4851    28176    3                IF SENDING_CALL
     4852    28177    3                   THEN
     4853    28178    4                      DO;
     4854    28179    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.RCVWND;
     4855    28180    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.CALL_OPTS.SNDWND;
     4856    28181    4                      END;
     4857    28182    3                   ELSE
     4858    28183    4                      DO;
     4859    28184    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.CALL_OPTS.RCVWND;
     4860    28185    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.SNDWND;
     4861    28186    4                      END;
     4862    28187    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 3;
     4863    28188    3             END;
     4864    28189        /*
     4865    28190                                             Throughput class is only sent
     4866    28191                                             if something special was
     4867    28192                                             specified.
     4868    28193        */
     4869    28194    2       IF KX$L3.CALL_OPTS.SNDTHR ~= %KLX25_THR_NONE#
     4870    28195    2          THEN
     4871    28196    3             DO;
     4872    28197    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_THRCLS# ;
     4873    28198    3                IF SENDING_CALL
     4874    28199    3                   THEN
     4875    28200    4                      DO;
     4876    28201    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.RCVTHR * 16
     4877    28202    4                            + KX$L3.CALL_OPTS.SNDTHR ;
     4878    28203    4                      END;
     4879    28204    3                   ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:166  
     4880    28205    4                      DO;
     4881    28206    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.SNDTHR * 16
     4882    28207    4                            + KX$L3.CALL_OPTS.RCVTHR ;
     4883    28208    4                      END;
     4884    28209    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 2;
     4885    28210    3             END;
     4886    28211        /*
     4887    28212                                             If sending a call, check for CUG, reverse
     4888    28213                                             charging, fast select and transit delay.
     4889    28214        */
     4890    28215    2       IF SENDING_CALL
     4891    28216    2          THEN
     4892    28217    3             DO;
     4893    28218        /*
     4894    28219                                             Insert Closed User Group if
     4895    28220                                             one was specified.
     4896    28221        */
     4897    28222    3                IF KX$L3.CUGLNG = 1
     4898    28223    3                   THEN
     4899    28224    4                      DO;
     4900    28225    4                         BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_CUG# ;
     4901    28226    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CUG_BCD.BCDPAIR2;
     4902    28227    4                      END;
     4903    28228    3                   ELSE
     4904    28229    3                      IF KX$L3.CUGLNG = 2
     4905    28230    3                         THEN
     4906    28231    4                            DO;
     4907    28232    4                               BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_CUG_EXT#;
     4908    28233    4                               BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CUG_BCD.BCDPAIR1;
     4909    28234    4                               BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.CUG_BCD.BCDPAIR2;
     4910    28235    4                            END;
     4911    28236    3                IF KX$L3.CUGLNG > 0
     4912    28237    3                   THEN
     4913    28238    3                      FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 1 + KX$L3.CUGLNG;
     4914    28239    3                IF ( KX$L3.RVS OR KX$L3.FSTSLC ~= 0 )
     4915    28240    3                   THEN
     4916    28241    4                      DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:167  
     4917    28242    4                         BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_RVS#;
     4918    28243    4                         BFRU(FACILITY_LENGTH_INDEX+2) = BITBIN(KX$L3.RVS)
     4919    28244    4                            + KX$L3.FSTSLC*64;
     4920    28245    4                         FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 2;
     4921    28246    4                      END;
     4922    28247    3                IF KX$L3.TRNDLY ~= 0
     4923    28248    3                   THEN
     4924    28249    4                      DO;
     4925    28250    4                         BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_DLY#;
     4926    28251    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.TRNDLYBYT.LFT;
     4927    28252    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.TRNDLYBYT.RGH;
     4928    28253    4                         FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 3;
     4929    28254    4                      END;
     4930    28255    3             END;
     4931    28256    2       IF (SENDING_CALL AND KX$L3.CHRINF) OR (NOT SENDING_CALL AND KX$L2.FLG.CHRINF)
     4932    28257    2          THEN
     4933    28258    3             DO;
     4934    28259    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_CHR_RQS#;
     4935    28260    3                BFRU(FACILITY_LENGTH_INDEX+2) = 1;
     4936    28261    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 2;
     4937    28262    3             END;
     4938    28263    2       IF SENDING_CALL AND KX$L3.LCLNSAP.NSAP.LEN > 0 AND KX$L3.RMTNSAP.NSAP.LEN > 0
     4939    28264    2          THEN
     4940    28265    3             DO;
     4941    28266    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_MRK#;
     4942    28267    3                BFRU(FACILITY_LENGTH_INDEX+2) = %KX_FCL_MRK_CCITT#;
     4943    28268    3                BFRU(FACILITY_LENGTH_INDEX+3) = %KX_FCL_CLGADREXT#;
     4944    28269    3                TEMP0 = (KX$L3.LCLNSAP.NSAP.LEN + 3)/2;
     4945    28270    3                TEMP1 = (KX$L3.RMTNSAP.NSAP.LEN + 3)/2;
     4946    28271    3                BFRU(FACILITY_LENGTH_INDEX+4) = TEMP0;
     4947    28272    3                SUBSTR(BFRC,FACILITY_LENGTH_INDEX+5,TEMP0) = SUBSTR(KX$L3.LCLNSAP_REDEF
             28272                         .NSAP,0,TEMP0);
     4948    28273    3                BFRU(FACILITY_LENGTH_INDEX+5+TEMP0) = %KX_FCL_CLDADREXT#;
     4949    28274    3                BFRU(FACILITY_LENGTH_INDEX+6+TEMP0) = TEMP1;
     4950    28275    3                SUBSTR(BFRC,FACILITY_LENGTH_INDEX+7+TEMP0,TEMP1) = SUBSTR(KX$L3.
             28275                         RMTNSAP_REDEF.NSAP,0,TEMP1);
     4951    28276    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + TEMP0 + TEMP1 + 6;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:168  
     4952    28277    3             END;
     4953    28278        /*
     4954    28279                                             Now go back and complete the
     4955    28280                                             facility length field.
     4956    28281        */
     4957    28282    2       BFRU(0) = FACILITY_LENGTH_INDEX;
     4958    28283    2       FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 1;
     4959    28284    2       ADDR(BYTE_ARRAY(BYTE_INDEX))->CHRBSD = ADDR(BFRC)->CHRBSD ;
     4960    28285    2       BYTE_INDEX = BYTE_INDEX + FACILITY_LENGTH_INDEX ;
     4961    28286
     4962    28287    2       RETURN;
     4963    28288
     4964    28289    2   END Y$STUFF_FACILITIES;
     4965    28290        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:169  
     4966    28291        /*I* NAME: Y$RESTART */
     4967    28292        /*I* PURPOSE: Send a restart packet */
     4968    28293        /*I* CALL: CALL Y$RESTART */
     4969    28294        /*I* INPUT: L2$  ->  line context block*/
     4970    28295        /*I* OUTPUT: None */
     4971    28296
     4972    28297    1   Y$RESTART: PROC;
     4973    28298
     4974    28299        /* Set the restart flag */
     4975    28300
     4976    28301    2       KX$L2.FLG.RESTART = '1'B;
     4977    28302    2       ID = %Y_ID_RESTART#;
     4978    28303    2       TEMP0 = %L2;
     4979    28304    2       GOTO RESTART_COMMON;
     4980    28305
     4981    28306    2   Y$RESTART_C: ENTRY;
     4982    28307
     4983    28308    2       ID = %Y_ID_RESTART_C#;
     4984    28309    2       TEMP0 = %L0;
     4985    28310
     4986    28311    2   RESTART_COMMON:
     4987    28312
     4988    28313    2       TEMP0 = TEMP0 + L2EXT;
     4989    28314
     4990    28315        /* Is the level 2 machine blocked? */
     4991    28316
     4992    28317    2       IF NOT KX$L2.FLG.OK OR KX$L2.FLG.BLK
     4993    28318    2          THEN
     4994    28319    3             DO;
     4995    28320
     4996    28321        /* The packet can't be sent now  -  set the flag */
     4997    28322
     4998    28323    3                KX$L2.FLG.RESTART_PEND = '1'B;
     4999    28324    3                KX$L2.FLG.DATAVL = '1'B;
     5000    28325    3             END;
     5001    28326
     5002    28327    2          ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:170  
     5003    28328    3             DO;
     5004    28329
     5005    28330        /* Send the restart packet now */
     5006    28331
     5007    28332    3                CALL KXS$GETBFR ( 2, TEMP2$ );
     5008    28333    3                DAT$ = TEMP2$;
     5009    28334    3                KX$DATA.RLS.L3 = '1'B;
     5010    28335    3                OUT_PKTHDR.TYPE = ID;
     5011    28336    3                OUT_PKTHDR.GFI = %GFI + BITBIN(KX$L2.DFLVCPRF.EXTSEQ#);
     5012    28337    3                KX$DATA.CNT = TEMP0;
     5013    28338    3                ADDR(BYTE_ARRAY(LENGTHC(KX$FRAME)+L2EXT))->XPKTHDR = OUT_PKTHDR_CHR;
     5014    28339    3                CALL_FPT.EVN = %KX_F_EV_DATA_OUT#;
     5015    28340    3                CALL_FPT.RCV$ = L2$;
     5016    28341    3                CALL_FPT.PRM1$ = DAT$;
     5017    28342    3                CALL KXF$FRAME ( CALL_FPT );
     5018    28343    3                IF ID = %Y_ID_RESTART#
     5019    28344    3                   THEN
     5020    28345    4                      DO;
     5021    28346                              %START_TIMER ( FPTN = KX$L2.T20TMR, PRD = KX$L2.T20 );
     5022    28366    4                         KX_STATS_X25.RESTART_OUT = KX_STATS_X25.RESTART_OUT + 1;
     5023    28367    4                      END;
     5024    28368    3             END /* IF */;
     5025    28369
     5026    28370    2   END /* SUBROUTINE */;
     5027    28371
     5028    28372        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:171  
     5029    28373        /*I* NAME: Y$CALL */
     5030    28374        /*I* PURPOSE: Send a call packet */
     5031    28375        /*I* CALL: CALL Y$CALL */
     5032    28376        /*I* INPUT: L2$  ->  line context block*/
     5033    28377        /*I* L3$  ->  level 3 context block */
     5034    28378        /*I* OUTPUT: DAT$  -  null if no LCN available */
     5035    28379
     5036    28380    1   Y$CALL: PROC ALTRET;
     5037    28381
     5038    28382    2   DCL END_LCN UBIN;
     5039    28383    2   DCL I UBIN;
     5040    28384    2   DCL T$ PTR;
     5041    28385
     5042    28386        /* Assign a logical channel number */
     5043    28387
     5044    28388    2       IF KX$L2.FLG.DCE
     5045    28389    2          THEN  /*                      Start with the lowest number  */
     5046    28390    3             DO;
     5047    28391    3                LCN = KX$L2.LIC;
     5048    28392    3                END_LCN = MAXIMUM ( KX$L2.HIC, LCN );
     5049    28393    3             END;
     5050    28394    2          ELSE  /*                      DTEs use the largest number  */
     5051    28395    3             DO;
     5052    28396    3                LCN = KX$L2.HOC;
     5053    28397    3                END_LCN = MINIMUM ( KX$L2.LOC, LCN );
     5054    28398    3             END;
     5055    28399
     5056    28400        /* Get the first level 3 */
     5057    28401
     5058    28402    2       T$ = KX$L2.L3_HEAD$;
     5059    28403
     5060    28404        /* Check each one for this LCN */
     5061    28405
     5062    28406    3   SRCH: DO WHILE ( T$ ~= ADDR(NIL) );
     5063    28407
     5064    28408    3          IF T$->KX$TL3.LCN# = LCN
     5065    28409    3             THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:172  
     5066    28410    4                DO;
     5067    28411
     5068    28412        /* Yes  -  go to the next LCN */
     5069    28413
     5070    28414        /*
     5071    28415                                             If we couldn't get an LCN, just
     5072    28416                                             altreturn and let the caller
     5073    28417                                             figure out what to do.
     5074    28418        */
     5075    28419    4                   IF LCN = END_LCN THEN ALTRETURN;
     5076    28420    4                   IF LCN < END_LCN
     5077    28421    4                      THEN
     5078    28422    4                         LCN = LCN + 1;
     5079    28423    4                      ELSE
     5080    28424    4                         LCN = LCN - 1;
     5081    28425
     5082    28426        /* Restart this loop */
     5083    28427
     5084    28428    4                   T$ = KX$L2.L3_HEAD$;
     5085    28429
     5086    28430    4                END;
     5087    28431    3             ELSE
     5088    28432
     5089    28433        /* No match  -  get the next level 3 */
     5090    28434
     5091    28435    3                T$ = T$ -> KX$TL3.NEXT$;
     5092    28436
     5093    28437
     5094    28438    3       END SRCH;
     5095    28439
     5096    28440    2       KX$L3.CHN$-> KH$CHN.TERMID.TERM.SUBDEVICE = LCN;
     5097    28441
     5098    28442        /* Getting this far means we got an LCN */
     5099    28443
     5100    28444    2       KX$L3.LCN# = LCN;
     5101    28445
     5102    28446        /* Get a buffer for the call packet */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:173  
     5103    28447
     5104    28448    2       CALL KXS$GETBFR ( 256, TEMP2$ );
     5105    28449    2       DAT$ = TEMP2$;
     5106    28450    2       KX$DATA.RLS.L3 = '1'B;
     5107    28451        /*
     5108    28452                                             Set up the addresses and call
     5109    28453                                             facilities in the packet.
     5110    28454        */
     5111    28455    2       BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT;
     5112    28456    2       TEMP0 = KX$L3.LCLADR.SIZ;
     5113    28457    2       TEMP1 = KX$L3.CALL_OPTS.RCVADR.SIZ;
     5114    28458    2       BYTE_ARRAY(BYTE_INDEX) = TEMP0*16 + TEMP1;
     5115    28459    2       BYTE_INDEX = BYTE_INDEX + 1;
     5116    28460    2       TEMP0 = (TEMP0 + 1 ) / 2 ;
     5117    28461    2       TEMP1 = (TEMP1 + 1 ) / 2 ;
     5118    28462    2       SUBSTR(DAT$->STRT1,BYTE_INDEX,TEMP1) = ADDR(KX$L3.CALL_OPTS.RCVADR.ADR_PAIR(0))
             28462                ->STRT1 ;
     5119    28463    2       IF MOD(KX$L3.CALL_OPTS.RCVADR.SIZ,2) = 0
     5120    28464    2          THEN
     5121    28465    3             DO;
     5122    28466    3                BYTE_INDEX = BYTE_INDEX + TEMP1;
     5123    28467    3                SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0) = ADDR(KX$L3.LCLADR.ADR_PAIR(0))->
             28467                         STRT0;
     5124    28468    3                BYTE_INDEX = BYTE_INDEX + TEMP0;
     5125    28469    3             END;
     5126    28470    2          ELSE
     5127    28471    3             DO;
     5128    28472    3                PINCRC(DAT$,KX$L3.CALL_OPTS.RCVADR.SIZ/2+BYTE_INDEX)->ADR2.ADR = ADDR(
             28472                         KX$L3.LCLADR)->ADR1.ADR;
     5129    28473    3                BYTE_INDEX = BYTE_INDEX + (KX$L3.LCLADR.SIZ+KX$L3.CALL_OPTS.RCVADR.SIZ+
             28473                         1)/2;
     5130    28474    3             END;
     5131    28475    2       SENDING_CALL = '1'B;
     5132    28476    2       KX$L3.CALL_OPTS = KX$L3.CM_OPTS;
     5133    28477    2       CALL Y$STUFF_FACILITIES;
     5134    28478        /*
     5135    28479                                             Finish the Call packet by
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:174  
     5136    28480                                             inserting the user data.
     5137    28481        */
     5138    28482    2       IF FPT_X25.V_.ADR$ ~= ADDR(NIL)
     5139    28483    2          THEN
     5140    28484    3             DO ;
     5141    28485    3                TEMP0 = FPT_X25.V_.BYTSIZ ;
     5142    28486    3                SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0) =
     5143    28487    3                   SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0) ;
     5144    28488    3                BYTE_INDEX = BYTE_INDEX + TEMP0 ;
     5145    28489
     5146    28490    3             END;
     5147    28491        /*
     5148    28492                                             Now that the packet is built,
     5149    28493                                             stuff the size.
     5150    28494        */
     5151    28495    2       KX$DATA.CNT = BYTE_INDEX - LENGTHC(KX$DATA);
     5152    28496
     5153    28497    2       OUT_PKTHDR.TYPE = %Y_ID_CALL#;
     5154    28498
     5155    28499        /* Send the packet*/
     5156    28500
     5157    28501    2       CALL Y$PACKET_OUT;
     5158    28502
     5159    28503        /* Stats*/
     5160    28504
     5161    28505    2       KX_STATS_X25.CALLS_OUT = KX_STATS_X25.CALLS_OUT + 1;
     5162    28506
     5163    28507    3       IF KX$L3.RTRCNT = 0 THEN DO;
     5164    28508    3                ERCOD = CALL_OUT;
     5165    28509    3                CALL Y$ER2;
     5166    28510    3             END;
     5167    28511    2   END /* SUBROUTINE */;
     5168    28512
     5169    28513
     5170    28514        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:175  
     5171    28515        /*I* NAME: Y$GETDAT                                */
     5172    28516        /*I* PURPOSE: To supply data to the Frame level    */
     5173    28517        /*I* CALL: CALL Y$GETDAT                           */
     5174    28518        /*I* INPUT: L2$ -> level 2 context                 */
     5175    28519        /*I* OUTPUT: Data supplied to the Frame level      */
     5176    28520
     5177    28521    1   Y$GETDAT: PROC;
     5178    28522
     5179    28523    2   DCL FOUND_ONE BIT(1);
     5180    28524        %FPT_X25 ( FPTN = CALL_L2, STCLASS = STATIC, EVN = %KX_F_EV_DATA_OUT#);
     5181    28568        %FPT_X25 ( FPTN = CALL_L3, STCLASS = STATIC);
     5182    28612        %FPT_X25 ( FPTN = CALL_CM, STCLASS = STATIC);
     5183    28656    2   DCL T$ PTR;
     5184    28657    2   DCL Y@BYTE UBIN BYTE UNAL;
     5185    28658    2   DCL 1 PS_PR REDEF Y@BYTE,
     5186    28659    2         2 PR UBIN(3) UNAL,
     5187    28660    2         2 M BIT(1) UNAL,
     5188    28661    2         2 PS UBIN(3) UNAL,
     5189    28662    2         2 * BIT(1) UNAL;
     5190    28663        /*
     5191    28664           CALL_L2.RCV$ is used to prevent re-entrance.
     5192    28665        */
     5193    28666
     5194    28667    2       IF CALL_L2.RCV$ ~= ADDR(NIL)
     5195    28668    2          THEN
     5196    28669    2             RETURN;
     5197    28670    2       CALL_L2.RCV$ = L2$;
     5198    28671    2       CALL_L3.CAL$ = L2$;
     5199    28672
     5200    28673    2       KX$L2.FLG.DATAVL = '0'B;
     5201    28674        /*
     5202    28675                                             There are several types of data
     5203    28676                                             to check for.  First, a restart
     5204    28677                                             procedure may be pending.  If so,
     5205    28678                                             a Restart or Restart Confirmation
     5206    28679                                             packet will be sent.  Second,
     5207    28680                                             completed packets may be queued
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:176  
     5208    28681                                             on KL$L3 context blocks.
     5209    28682                                             Third and last, pending data
     5210    28683                                             transmissions are serviced.
     5211    28684        */
     5212    28685    2       IF KX$L2.FLG.RESTART_PEND
     5213    28686    2          THEN
     5214    28687    3             DO;
     5215    28688    3                KX$L2.FLG.RESTART_PEND = '0'B;
     5216    28689    3                IF KX$L2.FLG.RESTART
     5217    28690    3                   THEN  /*             Send a restart packet  */
     5218    28691    3                      CALL Y$RESTART;
     5219    28692    3                   ELSE  /*             Send a Restart_C packet  */
     5220    28693    4                      DO;
     5221    28694    4                         CALL Y$RESTART_C;
     5222    28695        /*
     5223    28696                                             Since the restart procedure is
     5224    28697                                             now completed, start the level
     5225    28698                                             3 contexts.
     5226    28699        */
     5227    28700    4                         CALL_L3.EVN = %KX_P_EV_START#;
     5228    28701    4                         L3$ = KX$L2.L3_HEAD$;
     5229    28702    5                         DO WHILE ( L3$ ~= ADDR(NIL));
     5230    28703    5                            CALL_L3.RCV$ = L3$;
     5231    28704    5                            L3$ = KX$L3.NEXT$;
     5232    28705    5                            CALL KXP$PACKET ( CALL_L3 );
     5233    28706    5                         END;
     5234    28707    4                      END;
     5235    28708    3             END;
     5236    28709        /*
     5237    28710                                             Now for the second check - any
     5238    28711                                             previously constructed packets
     5239    28712                                             that are still queued to the
     5240    28713                                             L3 context.
     5241    28714        */
     5242    28715    2       IF KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK THEN GOTO L2_BLOCKED;
     5243    28716    3       DO UNTIL NOT FOUND_ONE;
     5244    28717    3          FOUND_ONE = '0'B;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:177  
     5245    28718    3          L3$ = KX$L2.L3_HEAD$;
     5246    28719    4          DO WHILE L3$ ~= ADDR(NIL);
     5247    28720        /*
     5248    28721                                             Send everything for each context
     5249    28722                                             block, provided level 2 does not
     5250    28723                                             become blocked.
     5251    28724        */
     5252    28725    4             CALL_L2.CAL$ = L3$;
     5253    28726    4             IF KX$L3.CTL_Q_HEAD$ ~= ADDR(NIL)
     5254    28727    4                THEN
     5255    28728    5                   DO;
     5256    28729    5                      CALL_L2.PRM1$ = KX$L3.CTL_Q_HEAD$;
     5257    28730    5                      KX$L3.CTL_Q_HEAD$ = CALL_L2.PRM1$ -> KX$TDATA.L3_LIST$;
     5258    28731    5                      IF KX$L3.CTL_Q_HEAD$ = ADDR(NIL)
     5259    28732    5                         THEN
     5260    28733    5                            KX$L3.CTL_Q_TAIL$ = KX$L3.CTL_Q_HEAD$;
     5261    28734    5                      TEMP1 = LENGTHC(KX$PACKET) + L2EXT - 1;
     5262    28735    5                      TEMP2 = MOD ( CALL_L2.PRM1$->BYTE_ARRAY(TEMP1), 16 );
     5263    28736    5                      IF (TEMP2 = 1 OR TEMP2 = 5)
     5264    28737        /* That's the way to tell if it is RR/RNR or something else */
     5265    28738    5                         THEN
     5266    28739    5                            IF NOT KX$L3.EXTSEQ
     5267    28740    5                               THEN
     5268    28741    6                                  DO;
     5269    28742    6                                     Y@BYTE = CALL_L2.PRM1$->BYTE_ARRAY(TEMP1);
     5270    28743    6                                     PS_PR.PR = KX$L3.VR;
     5271    28744    6                                     CALL_L2.PRM1$->BYTE_ARRAY(TEMP1) = Y@BYTE;
     5272    28745    6                                  END;
     5273    28746    5                               ELSE
     5274    28747    5                                  CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1) =
     5275    28748    5                                     MOD(CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1),2)+
     5276    28749    5                                     KX$L3.VR*2;
     5277    28750    5                      GOTO CALL_KXF;
     5278    28751    5                   END;
     5279    28752    4             IF NOT KX$L3.BLK AND NOT KX$L3.RNR AND KX$L3.RTR$ ~= ADDR(NIL)
     5280    28753    4                AND KX$L3.STATE.CURRENT = %Y_ST_DATA#
     5281    28754    4                THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:178  
     5282    28755    5                   DO;
     5283    28756        /*
     5284    28757          We cannot retransmit a packet that L2 and L1 are not done with. Otherwise
     5285    28758          the L2 queues will be screwed up.
     5286    28759        */
     5287    28760    5                      IF NOT KX$L3.RTR$->KX$TDATA.RLS.L2
     5288    28761    5                         OR NOT KX$L3.RTR$->KX$TDATA.RLS.L1
     5289    28762    5                         THEN
     5290    28763    5                            GOTO L2_BLOCKED;
     5291    28764    5                      CALL_L2.PRM1$ = KX$L3.RTR$;
     5292    28765    5                      KX$L3.RTR$ = CALL_L2.PRM1$ -> KX$TDATA.L3_LIST$;
     5293    28766    5                      TEMP1 = LENGTHC(KX$PACKET) + L2EXT - 1;
     5294    28767    5                      IF NOT KX$L3.EXTSEQ
     5295    28768    5                         THEN
     5296    28769    6                            DO;
     5297    28770    6                               Y@BYTE = CALL_L2.PRM1$->BYTE_ARRAY(TEMP1);
     5298    28771    6                               PS_PR.PR = KX$L3.VR;
     5299    28772    6                               PS_PR.PS = KX$L3.VS;
     5300    28773    6                               CALL_L2.PRM1$->BYTE_ARRAY(TEMP1) = Y@BYTE;
     5301    28774    6                            END;
     5302    28775    5                         ELSE
     5303    28776    6                            DO;
     5304    28777    6                               CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1) =
     5305    28778    6                                  MOD(CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1),2)+
     5306    28779    6                                  KX$L3.VR*2;
     5307    28780    6                               CALL_L2.PRM1$->BYTE_ARRAY(TEMP1) = KX$L3.VS*2;
     5308    28781    6                            END;
     5309    28782    5                      KX$L3.DCNTP = 0;
     5310    28783    5                      KX$L3.VS = MOD ( KX$L3.VS + 1, 8+120*BITBIN(KX$L3.EXTSEQ));
     5311    28784    5                      KX$L3.DCNT = KX$L3.DCNT + 1;
     5312    28785    5                      IF KX$L3.DCNT >= KX$L3.CALL_OPTS.SNDWND
     5313    28786    5                         THEN
     5314    28787    6                            DO;
     5315    28788    6                               KX$L3.BLK = '1'B;
     5316    28789    6                               KX_STATS_X25.P_BLK = KX_STATS_X25.P_BLK + 1;
     5317    28790    6                            END;
     5318    28791    5                      IF NOT KX$L3.TMRBLK.ON
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:179  
     5319    28792    5                         THEN
     5320    28793    5                            CALL Y$START_DATTMR;
     5321    28794    5   CALL_KXF:          CALL KXF$FRAME ( CALL_L2 );
     5322    28795    5                      FOUND_ONE = '1'B;
     5323    28796    5                   END;
     5324    28797        /*
     5325    28798                                             Is this context block to be released?
     5326    28799        */
     5327    28800    4   NXT_L3:
     5328    28801    4             TEMP2$ = L3$;
     5329    28802    4             L3$ = KX$L3.NEXT$;
     5330    28803    4             IF TEMP2$->KX$L3.MAYBE
     5331    28804    4                THEN
     5332    28805    4                   CALL KXS$RLSL3_MAYBE ( TEMP2$ );
     5333    28806    4             IF KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK THEN GOTO L2_BLOCKED;
     5334    28807    4          END;
     5335    28808    3       END;   /*  DO UNTIL ... */
     5336    28809        /*
     5337    28810                                             The last check is for new data
     5338    28811                                             to transmit. There is some added
     5339    28812                                             complexity in this loop since it
     5340    28813                                             is actually traversed several
     5341    28814                                             times.  This allows each L3 a
     5342    28815                                             shot at sending a packet before
     5343    28816                                             one busy L3 hogs the window.
     5344    28817        */
     5345    28818    3       DO UNTIL NOT FOUND_ONE;
     5346    28819    3          IF NOT KX$L2.FLG.BLK THEN KX$L2.FLG.DATAVL = '0'B;
     5347    28820    3          L3$ = KX$L2.L3_HEAD$;
     5348    28821    3          FOUND_ONE = '0'B;
     5349    28822    4          DO WHILE ( L3$ ~= ADDR(NIL));
     5350    28823    4             IF NOT KX$L3.BLK AND NOT KX$L3.RNR
     5351    28824    4                AND KX$L3.STATE.CURRENT = %Y_ST_DATA#
     5352    28825    4                THEN
     5353    28826    5                   DO;
     5354    28827        /*
     5355    28828                                             This inner loop does not check
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:180  
     5356    28829                                             KX$L2.FLG.BLK.  This allows every
     5357    28830                                             every L3 to construct at least
     5358    28831                                          one data packet, if L3 is not blocked. If the data
     5359    28832                                             could not be sent immediately,
     5360    28833                                             it is queued to the context.
     5361    28834        */
     5362    28835    5                      IF KX$L3.OUT_.ADR$ = ADDR(NIL) /*N* AND KX$L3.DATA */
     5363    28836    5                         THEN /*                Try to get some data  */
     5364    28837    6                            DO;
     5365    28838    6                               CALL_CM.CAL$ = L3$;
     5366    28839    6                               CALL_CM.RCV$ = KX$L3.CM$;
     5367    28840    6                               CALL_CM.EVN = %KX_CM_EV_DATRQS#;
     5368    28841    6                               CALL CALL_CM.RCV$->Y@CNCMNG ( CALL_CM );
     5369    28842    6                               IF CALL_CM.V_.BYTSIZ = 0
     5370    28843    6                                  THEN
     5371    28844    6                                     GOTO NO_DATA;
     5372    28845    6                               KX$L3.OUT_ = CALL_CM.V_;
     5373    28846    6                               CALL_CM.V_.BYTSIZ = 0;
     5374    28847    6                               KX$L3.OUT_QBIT = CALL_CM.PRS.PRM1;
     5375    28848    6                               KX$L3.OUT_MBIT = CALL_CM.PRS.PRM2;
     5376    28849    6                            END;
     5377    28850    5                      IF KX$L3.OUT_.ADR$ ~= ADDR(NIL)
     5378    28851    5                         THEN
     5379    28852    6                            DO;
     5380    28853    6                               FOUND_ONE = '1'B;
     5381    28854    6                               L3EXT = BITBIN(KX$L3.EXTSEQ);
     5382    28855    6                               CALL Y$DATOUT;
     5383    28856    6                            END;
     5384    28857    5                   END;
     5385    28858    4   NO_DATA:  L3$ = KX$L3.NEXT$;
     5386    28859    4          END;
     5387    28860    3          IF FOUND_ONE AND ( KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK ) THEN GOTO L2_BLOCKED;
     5388    28861    3       END;
     5389    28862
     5390    28863    2       CALL_L2.RCV$ = ADDR(NIL);
     5391    28864    2       RETURN;
     5392    28865
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:181  
     5393    28866    2   L2_BLOCKED: KX$L2.FLG.DATAVL = '1'B;
     5394    28867    2       CALL_L2.RCV$ = ADDR(NIL);
     5395    28868    2       KX_STATS_X25.F_BLK = KX_STATS_X25.F_BLK + 1;
     5396    28869    2       RETURN;
     5397    28870    2   END; /* Y$GETDAT */
     5398    28871        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:182  
     5399    28872        /*I* NAME: Y$RESET_L3CNTX*/
     5400    28873        /*I* PURPOSE: Get a level 3 context block ready for another call */
     5401    28874        /*I* CALL: CALL Y$RESET_L3CNTX */
     5402    28875        /*I* INPUT: L3$  ->  level 3 context */
     5403    28876        /*I* OUTPUT: None */
     5404    28877
     5405    28878    1   Y$RESET_L3CNTX: PROC;
     5406    28879        /*
     5407    28880                                             Clear assorted flags
     5408    28881        */
     5409    28882    2       KX$L3.DATA = '0'B;
     5410    28883    2       KX$L3.BLK = '0'B;
     5411    28884    2       KX$L3.INPBLK = '0'B;
     5412    28885    2       KX$L3.INTPND = '0'B;
     5413    28886    2       KX$L3.RNR = '0'B;
     5414    28887    2       CALL Y$STOP_INTTMR;
     5415    28888    2       CALL Y$STOP_DATTMR;
     5416    28889        /*
     5417    28890                                             If incoming data was being
     5418    28891                                             reconstructed, it will never
     5419    28892                                             be finished.  Release the buffer
     5420    28893                                             that was in use.
     5421    28894        */
     5422    28895    2       IF KX$L3.IN_.ADR$ ~= ADDR(NIL)
     5423    28896    2          THEN
     5424    28897    3             DO;
     5425    28898    3                IF KX$L3.IN_.BFRSIZ = 0
     5426    28899    3                   THEN
     5427    28900    3                      CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );
     5428    28901    3                   ELSE
     5429    28902    3                      CALL KVB$RLSSYS ( KX$L3.IN_.BFRSIZ/2, KX$L3.IN_.ADR$ );
     5430    28903    3                KX$L3.IN_ = '0'B;
     5431    28904    3                KX$L3.IN_QBIT = '0'B;
     5432    28905    3                KX$L3.IN_MBIT = '0'B;
     5433    28906    3             END;
     5434    28907        /*
     5435    28908           Delete any buffered input packets.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:183  
     5436    28909        */
     5437    28910    3       DO WHILE (KX$L3.INP_HEAD$ ~= ADDR(NIL));
     5438    28911    3          DAT$ = KX$L3.INP_HEAD$;
     5439    28912    3          KX$L3.INP_HEAD$ = KX$DATA.L3_LIST$;
     5440    28913    3          CALL KXS$RLSBFR ( DAT$ );
     5441    28914    3       END;
     5442    28915    2       KX$L3.INP_TAIL$ = ADDR(NIL);
     5443    28916        /*
     5444    28917                                             The outstanding data packet
     5445    28918                                             counts are back to 0.
     5446    28919        */
     5447    28920    2       KX$L3.DCNTP = 0;
     5448    28921    2       KX$L3.DCNT = 0;
     5449    28922        /*
     5450    28923                                             Reset all the window values
     5451    28924        */
     5452    28925    2       KX$L3.PPR = 0;
     5453    28926    2       KX$L3.VS = 0;
     5454    28927    2       KX$L3.VR = 0;
     5455    28928        /*
     5456    28929                                             Outstanding data packets must
     5457    28930                                             be released and acknowledged
     5458    28931                                             to CM.
     5459    28932        */
     5460    28933
     5461    28934    2       KX$L2.FLG.DATAVL = '1'B;
     5462    28935    2       IF KX$L3.TOACT = %KX_L3_TOACT_RSTRTR#   /* need to retransmit data pkt */
     5463    28936    2          AND ( KX$L3.STATE.CURRENT = %Y_ST_DATA#
     5464    28937    2          OR KX$L3.STATE.CURRENT = %Y_ST_RESET# )
     5465    28938    2          THEN
     5466    28939    3             DO;
     5467    28940    3                KX$L3.RTR$ = KX$L3.D_LIST_HEAD$;
     5468    28941    3             END;
     5469    28942    2          ELSE
     5470    28943    3             DO;
     5471    28944    4                DO WHILE ( KX$L3.D_LIST_HEAD$ ~= ADDR(NIL) );
     5472    28945    4                   DAT$ = KX$L3.D_LIST_HEAD$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:184  
     5473    28946    4                   KX$L3.D_LIST_HEAD$ = KX$DATA.L3_LIST$;
     5474    28947    4                   KX$DATA.RLS.L3 = '1'B;
     5475    28948    4                   IF ( KX$DATA.RLS_STAT = %KX_BFR_RLS_OK# )
     5476    28949    4                      THEN
     5477    28950    4                         CALL KXS$RLSBFR ( DAT$ );
     5478    28951    4                END /* LOOP */;
     5479    28952    3                KX$L3.D_LIST_TAIL$ = ADDR(NIL);
     5480    28953    3                KX$L3.RTR$ = KX$L3.D_LIST_TAIL$;
     5481    28954    3                KX$L3.OUT_ = '0'B;
     5482    28955    3                KX$L3.OUT_QBIT = '0'B;
     5483    28956    3                KX$L3.OUT_MBIT = '0'B;
     5484    28957    3             END;
     5485    28958
     5486    28959        /*
     5487    28960           Clear the CTL queue.
     5488    28961        */
     5489    28962    3       DO WHILE ( KX$L3.CTL_Q_HEAD$ ~= ADDR(NIL) );
     5490    28963    3          TEMP2$ = KX$L3.CTL_Q_HEAD$;
     5491    28964    3          KX$L3.CTL_Q_HEAD$ = TEMP2$ -> KX$TDATA.L3_LIST$;
     5492    28965    3          CALL KXS$RLSBFR ( TEMP2$ );
     5493    28966    3       END;
     5494    28967    2       KX$L3.CTL_Q_TAIL$ = ADDR(NIL);
     5495    28968        /*
     5496    28969           Restore DAT$ for main procedure.
     5497    28970        */
     5498    28971    2       DAT$ = FPT_X25.PRM1$;
     5499    28972        /*
     5500    28973           Update the circuits count in the stats buffer.
     5501    28974        */
     5502    28975    2       IF (KX$L3.STATE.LAST = %Y_ST_DATA# OR KX$L3.STATE.LAST = %Y_ST_RESET#) AND
             28975                ACTION ~= %Y_ACT_RSTRCV#
     5503    28976    2          AND ACTION ~= %Y_ACT_RST_D1# AND ACTION ~= %Y_ACT_VCRST# AND ACTION ~= %
             28976                   Y_ACT_RST_PRS#
     5504    28977    2          THEN
     5505    28978    2             KX_STATS_X25.CIRCUITS = KX_STATS_X25.CIRCUITS - 1;
     5506    28979    2   END /* SUBROUTINE */;
     5507    28980        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:185  
     5508    28981
     5509    28982    1   Y$ER0:
     5510    28983    1       PROC ;
     5511    28984    2       ERCOD = STOP ;
     5512    28985    2   Y$ER0000: ENTRY ;
     5513    28986    2       S_VAL0 = PEVENT ;
     5514    28987    2       GOTO L_COMMON ;
     5515    28988
     5516    28989    2   Y$ER00: ENTRY ;
     5517    28990    2       ERCOD = INV_LCN0 ;
     5518    28991    2   Y$ER000: ENTRY ;
     5519    28992    2       S_VAL0 = IN_PKTHDR.TYPE ;
     5520    28993    2   L_COMMON:
     5521    28994            %WRSYSLOG ( ERRCOD = ERCOD ,
     5522    28995            TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5523    28996            VAL0 = S_VAL0 ,
     5524    28997            VAL2 = LCN ) ;
     5525    29015
     5526    29016    2       RETURN ; END ;
     5527    29017
     5528    29018    1   Y$ER1:
     5529    29019    1       PROC ;
     5530    29020
     5531    29021               %WRSYSLOG  (  ERRCOD = ERCOD ,
     5532    29022                  TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5533    29023                  VAL0 = S_VAL0 ,
     5534    29024                  VAL1 = S_VAL1 ,
     5535    29025                  VAL2 = LCN ) ;
     5536    29043
     5537    29044    2       RETURN ; END ;
     5538    29045
     5539    29046    1   Y$ER2:
     5540    29047    1       PROC ;
     5541    29048
     5542    29049               %WRSYSLOG  (  ERRCOD = ERCOD ,
     5543    29050                  TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5544    29051                  VAL0 = S_VAL0 ,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:186  
     5545    29052                  VAL1 = DIAG ,
     5546    29053                  VAL2 = LCN ,
     5547    29054                  BFR = KX$XPACKET );
     5548    29072
     5549    29073    2       RETURN ; END ;
     5550    29074
     5551    29075    1   Y$ER:
     5552    29076    1       PROC ;
     5553    29077
     5554    29078               %WRSYSLOG  (  ERRCOD = ERCOD ,
     5555    29079                  TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5556    29080                  VAL2 = LCN ) ;
     5557    29098
     5558    29099    2       RETURN ; END ;
     5559    29100
     5560    29101        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:187  
     5561    29102
     5562    29103        /*I*
     5563    29104              NAME: Y$DATOUT - send a Data packet
     5564    29105              PURPOSE: Send a Data packet
     5565    29106                       If it didn't all fit,
     5566    29107                          Save information for future packets
     5567    29108                          Set the DATA flag
     5568    29109                       Set the BLK flag if the window is exhausted
     5569    29110        */
     5570    29111    1   Y$DATOUT: PROC;
     5571    29112    2   DCL SIZ UBIN STATIC;
     5572    29113    2   DCL BFR$ PTR STATIC;
     5573    29114    2   DCL YESBIT BIT(16) CONSTANT INIT('1'B);
     5574    29115
     5575    29116
     5576    29117    2       IF KX$L3.OUT_.BYTSIZ <= KX_BUF.SIZ ( KX$L3.CALL_OPTS.SNDPCKSIZ )
     5577    29118    2          THEN
     5578    29119    3             DO;
     5579    29120    3                SIZ = KX$L3.OUT_.BYTSIZ;
     5580    29121    3             END;
     5581    29122    2          ELSE
     5582    29123    3             DO;
     5583    29124    3                SIZ = KX_BUF.SIZ ( KX$L3.CALL_OPTS.SNDPCKSIZ );
     5584    29125    3             END;
     5585    29126
     5586    29127    2       CALL KXS$GETBFR ( SIZ, BFR$, YESBIT )
     5587    29128    3          WHENALTRETURN DO;
     5588    29129    3                KX$L2.FLG.DATAVL = '1'B;
     5589    29130    3                RETURN; /* No buffers now - just leave the data ready to go */
     5590    29131    3             END;
     5591    29132    2       DAT$ = BFR$;
     5592    29133    2       OUT_PKTHDR = '0'B;
     5593    29134    2       OUT_PKTHDR.Q_BIT = KX$L3.OUT_QBIT;
     5594    29135        /*
     5595    29136           P(S) and P(R) are stuffed in Y$PACKET_OUT.
     5596    29137        */
     5597    29138    2       IF KX$L3.TOACT ~= %KX_L3_TOACT_RSTRTR#
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:188  
     5598    29139    2          THEN
     5599    29140    2             KX$DATA.RLS.L3 = '1'B;      /* no need to keep this data packet */
     5600    29141    2          ELSE
     5601    29142    3             DO;
     5602    29143    3                IF KX$L3.D_LIST_HEAD$ = ADDR(NIL)
     5603    29144    3                   THEN
     5604    29145    3                      KX$L3.D_LIST_HEAD$ = DAT$;
     5605    29146    3                   ELSE
     5606    29147    3                      KX$L3.D_LIST_TAIL$ -> KX$TDATA.L3_LIST$ = DAT$;
     5607    29148    3                KX$L3.D_LIST_TAIL$ = DAT$;
     5608    29149    3             END;
     5609    29150    2       KX$DATA.L3_LIST$ = ADDR(NIL);
     5610    29151    2       KX$DATA.CNT = SIZ + %LD + L2EXT + L3EXT;
     5611    29152    2       STR$ = KX$L3.OUT_.ADR$;
     5612    29153    2       SUBSTR ( DATSTR, LENGTHC(KX$PACKET)+L2EXT+L3EXT, SIZ ) =
     5613    29154    2          SUBSTR ( OUTSTR, KX$L3.OUT_.BYTX, SIZ );
     5614    29155    2       KX$L3.OUT_.BYTSIZ = KX$L3.OUT_.BYTSIZ - SIZ;
     5615    29156    2       KX$L3.OUT_.BYTX = KX$L3.OUT_.BYTX + SIZ;
     5616    29157    2       IF KX$L3.OUT_.BYTSIZ = 0
     5617    29158    2          THEN
     5618    29159    3             DO;
     5619    29160    3                KX$L3.OUT_.ADR$ = ADDR(NIL);
     5620    29161    3                KX_STATS_X25.D_CMPPACKETS_OUT = KX_STATS_X25.D_CMPPACKETS_OUT + 1;
     5621    29162    3             END;
     5622    29163    2       IF KX$L3.OUT_.BYTSIZ ~= 0 OR ( KX$L3.NOREASM AND KX$L3.OUT_MBIT )
     5623    29164    2          THEN
     5624    29165    3             DO;
     5625    29166    3                IF L3EXT = 0
     5626    29167    3                   THEN
     5627    29168    3                      OUT_PKTHDR.PR_BITS.M = '1'B;
     5628    29169    3                   ELSE
     5629    29170    3                      OUT_PKTHDR.PR_EXT.M = '1'B;
     5630    29171    3                KX$L2.FLG.DATAVL = '1'B;
     5631    29172    3             END;
     5632    29173    2       CALL Y$PACKET_OUT;
     5633    29174    2       KX_STATS_X25.D_PACKETS_OUT = KX_STATS_X25.D_PACKETS_OUT + 1;
     5634    29175    2       KX_STATS_X25.D_BYTES_OUT = KX_STATS_X25.D_BYTES_OUT + SIZ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:189  
     5635    29176
     5636    29177    2       RETURN;
     5637    29178    2   END Y$DATOUT;
     5638    29179        %EJECT ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:190  
     5639    29180    1   Y$DVCADM:
     5640    29181    1       PROC ALTRET ;
     5641    29182    2       IF L3$ ~= ADDR(NIL) THEN
     5642    29183    2             CALL KHA$DVCADM( CODE, KHA_ERROR,
     5643    29184    2                KX$L3.CHN$->KH$CHN.TERMID,
     5644    29185    2                KX$L3.CHN$->KH$CHN.TERMID,
     5645    29186    2                VECTOR(NIL), 1);
     5646    29187    2       RETURN ;
     5647    29188    2   END ;
     5648    29189
     5649    29190    1   Y$STOP_TMR:
     5650    29191    1       PROC ;
     5651    29192                  %STOP_TIMER ( FPTN = KX$L3.TMRBLK );
     5652    29201    2       RETURN ;
     5653    29202    2   END ;
     5654    29203    1   Y$STOP_INTTMR:
     5655    29204    1       PROC ;
     5656    29205                  %STOP_TIMER ( FPTN = KX$L3.INTTMRBLK );
     5657    29214    2       RETURN ;
     5658    29215    2   END ;
     5659    29216    1   Y$STOP_DATTMR:
     5660    29217    1       PROC ;
     5661    29218                  %STOP_TIMER ( FPTN = KX$L3.DATTMRBLK );
     5662    29227    2       RETURN ;
     5663    29228    2   END ;
     5664    29229
     5665    29230    1   Y$START_DATTMR: PROC;
     5666    29231             %START_TIMER ( FPTN=KX$L3.DATTMRBLK, PRD=KX$L3.T25 );
     5667    29251    2       RETURN;
     5668    29252    2   END;
     5669    29253        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:191  
     5670    29254
     5671    29255
     5672    29256    1   Y$START_TIMER: PROC ( PRD );
     5673    29257
     5674    29258    2   DCL PRD UBIN;
     5675    29259
     5676    29260        /*
     5677    29261            There are so many occurrences of %START_TIMER that it make more
     5678    29262            sense to do what the macro does in an internal routine.
     5679    29263        */
     5680    29264
     5681    29265    2       IF PRD ~= 0
     5682    29266    2          THEN
     5683    29267    3             DO;
     5684    29268    3                KX$L3.TMRBLK.CNT = PRD;
     5685    29269    3                IF NOT KX$L3.TMRBLK.ON
     5686    29270    3                   THEN
     5687    29271    4                      DO;
     5688    29272    4                         KX$L3.TMRBLK.ON = '1'B;
     5689    29273    4                         KX$L3.TMRBLK.FLNK$ = ADDR(NIL);
     5690    29274    4                         IF KX_TMRBLK.QTL$ = ADDR(NIL)
     5691    29275    4                            THEN
     5692    29276    4                               KX_TMRBLK.QHD$ = ADDR ( KX$L3.TMRBLK );
     5693    29277    4                            ELSE
     5694    29278    4                               KX_TMRBLK.QTL$ -> KX$BTMRBLK.FLNK$ = ADDR ( KX$L3.TMRBLK
             29278                                        );
     5695    29279    4                         KX$L3.TMRBLK.BLNK$ = KX_TMRBLK.QTL$;
     5696    29280    4                         KX_TMRBLK.QTL$ = ADDR ( KX$L3.TMRBLK );
     5697    29281    4                      END;
     5698    29282    3             END;
     5699    29283    2          ELSE
     5700    29284    2             IF KX$L3.TMRBLK.ON
     5701    29285    2                THEN
     5702    29286    3                   DO;
     5703    29287    3                      KX$L3.TMRBLK.ON = '0'B;
     5704    29288    3                      IF KX$L3.TMRBLK.FLNK$ = ADDR(NIL)
     5705    29289    3                         THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:192  
     5706    29290    3                            KX_TMRBLK.QTL$ = KX$L3.TMRBLK.BLNK$;
     5707    29291    3                         ELSE
     5708    29292    3                            KX$L3.TMRBLK.FLNK$ -> KX$BTMRBLK.BLNK$ = KX$L3.TMRBLK.BLNK$
             29292                                     ;
     5709    29293    3                      IF KX$L3.TMRBLK.BLNK$ = ADDR(NIL)
     5710    29294    3                         THEN
     5711    29295    3                            KX_TMRBLK.QHD$ = KX$L3.TMRBLK.FLNK$;
     5712    29296    3                         ELSE
     5713    29297    3                            KX$L3.TMRBLK.BLNK$ -> KX$BTMRBLK.FLNK$ = KX$L3.TMRBLK.FLNK$
             29297                                     ;
     5714    29298    3                   END;
     5715    29299
     5716    29300    2       RETURN;
     5717    29301
     5718    29302    2   END Y$START_TIMER;
     5719    29303    1   END KXP$PACKET;     /* SUBROUTINE */

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:193  
--  Include file information  --

   KV_GLB_M.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXP$PACKET.

   Procedure KXP$PACKET requires 11107 words for executable code.
   Procedure KXP$PACKET requires 200 words of local(AUTO) storage.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:194  

    No errors detected in file KXP$PACKET.:E05TSI    .

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:195  

 Object Unit name= KXP$PACKET                                 File name= KXP$PACKET.:E05TOU
 UTS= JUL 30 '97 02:24:01.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS   1022    3FE  KXP$PACKET
    1   Data  even  none    73     49  KXP$PACKET
    2   Proc  even  none 11107   2B63  KXP$PACKET
    3  RoData even  none    23     17  KXP$PACKET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KXP$PACKET

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0    3A4  DEVLGNFAL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:196  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 KXS$GETL3
 yes     yes           Std       2 KVB$GETSYS
 yes     yes           Std       2 KVB$GET2NSYS
         yes           Std       1 KXS$RLSBFR
         yes           Std       1 KXS$RLSL3_MAYBE
 yes     yes           Std       2 KHA$GET_CTX_PTR
 yes     yes           Std       2 KVB$RLSSYS
 yes     yes           Std       3 KXS$GETBFR
         yes           Std       1 KXS$RLSL3
         yes           Std       1 KHD$SCREECH
 yes     yes           Std       1 KXC$CNCMNG
 yes     yes           Std       1 KXF$FRAME
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       2 KXX$INTCNC
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       1 KVM$SNDCQ
 yes     yes           Std       6 KHA$DVCADM
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
                       nStd      0 X6B_BLR

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_CNTX                               KX_BUF                                KX_TMRBLK
     KX_STATS_X25                          KX_CALLING_CM$                        KX_PM$
     G$JIT$                                FPT_CONNECT_C                         FPT_TERM_C
     KXX_VDH_DSC                           KV$PTR$                          r    G$ROS$
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:197  


        1        1        /*M* KXP$PACKET  -  X.25 Handler Packet Level Subroutine */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 8         */
        9        9        /*P* NAME: KXP$PACKET */
       10       10        /*P* PURPOSE: This module contains the X.25 packet level */
       11       11        /*P* subroutine and state machine. */
       12       12
       13       13        KXP$PACKET: PROC ( FPT_X25 ) ALTRET;

     13   2 000000  D380 0000 0000  xent KXP$PACKET      LNJ,B5   X6A_AUTO_1
          2 000003       00C8 0001                       DC       200,1

       14       14
       15       15        /*F* NAME: KXP$PACKET */
       16       16        /*F* PURPOSE: This subroutine does the normal state */
       17       17        /*F* transitions for the X.25 packet level. */
       18       18
       19       19        /*D* NAME: KXP$PACKET */
       20       20        /*D* PURPOSE: This subroutine does the normal state */
       21       21        /*D* transitions for the X.25 packet level. */
       22       22        /*D* CALL: CALL KXP$PACKET (FPT_X25) ALTRET ( label );  */
       23       23        /*D* INPUT: FPT_X25 - generic FPT for reporting events to X.25  */
       24       24        /*D* OUTPUT: none */
       25       25
       26       26        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:198  
       27       27        /*****************************************************************
       28       28        *                                                                *
       29       29        *                           Local macros                         *
       30       30        *                                                                *
       31       31        *****************************************************************/
       32       32
       33       33        %MACRO UNOCTET ( VAR = SOMETHING );
       34       34
       35       35            VAR = BYTE_ARRAY ( BYTE_INDEX );
       36       36            BYTE_INDEX = BYTE_INDEX + 1;
       37       37
       38       38        %MEND;
       39       39        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:199  
       40       40
       41       41        /*****************************************************************
       42       42        *                                                                *
       43       43        *                           Include files                        *
       44       44        *                                                                *
       45       45        *****************************************************************/
       46       46
       47       47        %INCLUDE K_ID_E;
       48       97            %K#ENTID_E;
       49      116            %K#LYRID_E;
       50      123        %INCLUDE KL_MACRO_C;
       51     3475        %INCLUDE KL_AFCN_C;
       52     3576        %INCLUDE LCP_6;
       53     7855        %INCLUDE CP_6_SUBS;
       54     8395        %INCLUDE G_JIT_M;
       55     8660
       56     8661        %INCLUDE KH$CHN;
       57     8783        %INCLUDE KHA_FNC_E;
       58     8883        %INCLUDE KH_MACRO_C;
       59     9626        %INCLUDE KL_SUPER_C;
       60    12528
       61    12529        %INCLUDE KX_EQUS_E;
       62    12968        %INCLUDE KX_PERR_C;
       63    13097        %INCLUDE KX_SCODE_C;
       64    13163        %INCLUDE KX_DATA_C;
       65    13231        %INCLUDE KX_MACROS_M;
       66    14002        %INCLUDE KV_GLBCNS_E;
       67    14343        %INCLUDE K_ADDRESS_M;
       68    14846        %INCLUDE KNH_MACRO_C;
       69    15129        %INCLUDE KV$VDH;
       70    15560        %INCLUDE KV$GLB;
       71    15979        %INCLUDE KV$GLBCTX;
       72    16424        %INCLUDE KV_GLB_M;
       73    16546            %KV#CQ_HNDID_E;
       74    16551            %KV_SCHRSN_E;
       75    16558        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:200  
       76    16559        /*****************************************************************
       77    16560        *                                                                *
       78    16561        *                           Refs (inside X.25)                   *
       79    16562        *                                                                *
       80    16563        *****************************************************************/
       81    16564
       82    16565    1   DCL KXC$CNCMNG ENTRY (1) ALTRET;
       83    16566    1   DCL KXF$FRAME ENTRY (1) ALTRET;
       84    16567    1   DCL KXS$GETBFR ENTRY (3) ALTRET;
       85    16568    1   DCL KXV$VCNTW ENTRY(1);
       86    16569    1   DCL KVM$SNDCQ ENTRY(1) ALTRET;
       87    16570    1   DCL KXS$GETL3 ENTRY(3) ALTRET;
       88    16571    1   DCL KXS$RLSBFR ENTRY (1);
       89    16572    1   DCL KXS$RLSL3 ENTRY (1);
       90    16573    1   DCL KXS$RLSL3_MAYBE ENTRY (1);
       91    16574    1   DCL KXS$SYSLOG ENTRY(7);
       92    16575    1   DCL KXS$Q_SYSLOG ENTRY (1);
       93    16576    1   DCL KXX$X29 ENTRY (1);
       94    16577        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:201  
       95    16578        /*****************************************************************
       96    16579        *                                                                *
       97    16580        *                           Refs (outside X.25)                  *
       98    16581        *                                                                *
       99    16582        *****************************************************************/
      100    16583
      101    16584    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      102    16585    1   DCL KVB$GET2NSYS ENTRY (2) ALTRET;
      103    16586    1   DCL KVV$VDI ENTRY (1) ALTRET;
      104    16587    1   DCL KXX$INTCNC ENTRY (2) ALTRET;
      105    16588    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
      106    16589    1   DCL KHA$DVCADM ENTRY (6) ALTRET;
      107    16590    1   DCL KHD$SCREECH ENTRY (1);
      108    16591    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      109    16592    1   DCL KHA$GET_CTX_PTR ENTRY (2) ALTRET;
      110    16593        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:202  
      111    16594        /*****************************************************************
      112    16595        *                                                                *
      113    16596        *                           Local equates                        *
      114    16597        *                                                                *
      115    16598        *****************************************************************/
      116    16599        /*****************************************************************
      117    16600        *                                                                *
      118    16601        *                           Action types                         *
      119    16602        *                                                                *
      120    16603        *****************************************************************/
      121    16604
      122    16605
      123    16606        %EQU Y_ACT_NULL#       =  0;
      124    16607        %EQU Y_ACT_SCREECH#    =  1;
      125    16608        %EQU Y_ACT_DWN#        =  2;
      126    16609        %EQU Y_ACT_CLR_P3#     =  3;
      127    16610        %EQU Y_ACT_DCL#        =  4;
      128    16611        %EQU Y_ACT_DLY#        =  5;
      129    16612        %EQU Y_ACT_RMTDCL#     =  6;
      130    16613        %EQU Y_ACT_CLR_TO#     =  7;
      131    16614        %EQU Y_ACT_CLRRCV#     =  8;
      132    16615        /*N*   %EQU Y_ACT_CLR_CC#     =  9;   not used any more   */
      133    16616        %EQU Y_ACT_RST_PRS#    = 10;
      134    16617        %EQU Y_ACT_CLR_RSTTO#  = 11;
      135    16618        %EQU Y_ACT_CLR_UP#     = 12;
      136    16619        %EQU Y_ACT_RLS#        = 13;
      137    16620        %EQU Y_ACT_VCUP#       = 14;
      138    16621        %EQU Y_ACT_VCDWN#      = 15;
      139    16622        %EQU Y_ACT_RSTCMP#     = 16;
      140    16623        %EQU Y_ACT_VCLST#      = 17;
      141    16624        %EQU Y_ACT_CLR_P2#     = 18;
      142    16625        %EQU Y_ACT_CLR_CALTO#  = 19;
      143    16626        %EQU Y_ACT_RST_D1#     = 20;
      144    16627        %EQU Y_ACT_STOP#       = 21;
      145    16628        %EQU Y_ACT_CLR_P4#     = 22;
      146    16629        %EQU Y_ACT_RSTRCV#     = 23;
      147    16630        %EQU Y_ACT_RESTART#    = 24;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:203  
      148    16631        %EQU Y_ACT_CLR_DISC#   = 25;
      149    16632        %EQU Y_ACT_ACK#        = 26;
      150    16633        %EQU Y_ACT_INTC#       = 27;
      151    16634        %EQU Y_ACT_INT#        = 28;
      152    16635        %EQU Y_ACT_DSB#        = 29;
      153    16636        %EQU Y_ACT_CALEST#     = 30;
      154    16637        /*N* This is equivalent to call.   %EQU Y_ACT_NEWCALL#    = 31; */
      155    16638        %EQU Y_ACT_VCLST_NCLR# = 32;
      156    16639        %EQU Y_ACT_FLOW#       = 33;
      157    16640        %EQU Y_ACT_DATIN#      = 34;
      158    16641        %EQU Y_ACT_DATOUT#     = 35;
      159    16642        %EQU Y_ACT_INTOUT#     = 36;
      160    16643        %EQU Y_ACT_VCRST#      = 37;
      161    16644        %EQU Y_ACT_CALL#       = 38;
      162    16645        %EQU Y_ACT_STOP_KD#    = 39;
      163    16646        %EQU Y_ACT_VCDWN_NCLR# = 40;
      164    16647        %EQU Y_ACT_CLR_CALL#   = 41;
      165    16648        %EQU Y_ACT_PVCDWN#     = 42;
      166    16649        %EQU Y_ACT_PVCUP#      = 43;
      167    16650        %EQU Y_ACT_RPVCDWN#    = 44;  /* this case is actually handled in RSTRCV# */
      168    16651        %EQU Y_ACT_RPVCUP#     = 45;  /* this case is actually handled in RSTRCV# */
      169    16652        %EQU Y_ACT_CLRC#       = 46;
      170    16653        %EQU Y_ACT_SP1#        = 47;
      171    16654        %EQU Y_ACT_SP2#        = 48;
      172    16655        %EQU Y_ACT_SP3#        = 49;
      173    16656        %EQU Y_ACT_MAX#        = 49;
      174    16657
      175    16658        %EQU L0 = 5+KX_EXT; /* Packet length for TYPE only. */
      176    16659        %EQU L1 = 6+KX_EXT; /* Packet length for TYPE and CAUSE. */
      177    16660        %EQU L2 = 7+KX_EXT; /* Packet length for TYPE, CAUSE, and DIAG. */
      178    16661        %EQU LD = 5+2*KX_EXT; /* Packet header length for data, or size for RR/RNR */
      179    16662        %EQU MODULUS = 8+120*KX_EXT; /* Packet id modulus */
      180    16663        %EQU GFI = 1; /* GFI */
      181    16664        %EQU GFI_EXT = 2;  /* Extended format */
      182    16665        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:204  
      183    16666        /*****************************************************************
      184    16667        *                                                                *
      185    16668        *                           Event types                          *
      186    16669        *                                                                *
      187    16670        *****************************************************************/
      188    16671
      189    16672        %EQU Y_EV_START#       =  0;
      190    16673        %EQU Y_EV_STOP#        =  1;
      191    16674        %EQU Y_EV_DIED#        =  2;
      192    16675        %EQU Y_EV_ENABLE#      =  3;
      193    16676        %EQU Y_EV_DISCONNECT#  =  4;
      194    16677        %EQU Y_EV_DISABLE#     =  5;
      195    16678        %EQU Y_EV_VCUP#        =  6;
      196    16679        %EQU Y_EV_VCRST#       =  7;
      197    16680        %EQU Y_EV_VCDWN#       =  8;
      198    16681        %EQU Y_EV_VCLST#       =  9;
      199    16682        %EQU Y_EV_CALL#        = 10;
      200    16683        %EQU Y_EV_RPVCUP#      = 10;
      201    16684        %EQU Y_EV_CALL_C#      = 11;
      202    16685        %EQU Y_EV_CLEAR#       = 12;
      203    16686        %EQU Y_EV_RPVCDWN#     = 12;
      204    16687        %EQU Y_EV_CLEAR_C#     = 13;
      205    16688        %EQU Y_EV_DATA_IN#     = 14;
      206    16689        %EQU Y_EV_RR#          = 15;
      207    16690        %EQU Y_EV_RNR#         = 16;
      208    16691        %EQU Y_EV_INT#         = 17;
      209    16692        %EQU Y_EV_INT_C#       = 18;
      210    16693        %EQU Y_EV_RESET#       = 19;
      211    16694        %EQU Y_EV_RESET_C#     = 20;
      212    16695        %EQU Y_EV_UNK_TYPE#    = 21;
      213    16696        %EQU Y_EV_SHORT_GFI#   = 22;
      214    16697        %EQU Y_EV_BAD_PRS#     = 23;
      215    16698        %EQU Y_EV_BAD_CALL#    = 24;
      216    16699        %EQU Y_EV_TO#          = 25;
      217    16700        %EQU Y_EV_SHR_PKT#     = 26;
      218    16701        %EQU Y_EV_SP1#         = 27;
      219    16702        %EQU Y_EV_SP2#         = 28;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:205  
      220    16703        %EQU Y_EV_SP3#         = 29;
      221    16704        %EQU Y_EV_MAX#         = 29;
      222    16705
      223    16706        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:206  
      224    16707        /*****************************************************************
      225    16708        *                                                                *
      226    16709        *                           Packet types                         *
      227    16710        *                                                                *
      228    16711        *****************************************************************/
      229    16712
      230    16713        %EQU Y_ID_MIN# = BITBIN('01'X);
      231    16714        %EQU Y_ID_RR# = BITBIN('01'X);
      232    16715        %EQU Y_ID_RNR# = BITBIN('05'X);
      233    16716        %EQU Y_ID_REJ# = BITBIN('09'X);
      234    16717        %EQU Y_ID_CALL# = BITBIN('0B'X);
      235    16718        %EQU Y_ID_CALL_C# = BITBIN('0F'X);
      236    16719        %EQU Y_ID_CLEAR# = BITBIN('13'X);
      237    16720        %EQU Y_ID_CLEAR_C# = BITBIN('17'X);
      238    16721        %EQU Y_ID_RESET# = BITBIN('1B'X);
      239    16722        %EQU Y_ID_RESET_C# = BITBIN('1F'X);
      240    16723        %EQU Y_ID_INT# = BITBIN('23'X);
      241    16724        %EQU Y_ID_INT_C# = BITBIN('27'X);
      242    16725        %EQU Y_ID_DIAG# = BITBIN('F1'X);
      243    16726        %EQU Y_ID_RESTART# = BITBIN('FB'X);
      244    16727        %EQU Y_ID_RESTART_C# = BITBIN('FF'X);
      245    16728        %EQU Y_ID_MAX# = BITBIN('FF'X);
      246    16729
      247    16730        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:207  
      248    16731        /*****************************************************************
      249    16732        *                                                                *
      250    16733        *                           Packet sub types                     *
      251    16734        *                                                                *
      252    16735        *****************************************************************/
      253    16736
      254    16737        %EQU Y_PS_MIN# = 0;
      255    16738        %EQU Y_PS_RR# = 0;
      256    16739        %EQU Y_PS_RNR# = 2;
      257    16740        %EQU Y_PS_REJ# = 4;
      258    16741        %EQU Y_PS_MAX# = 4;
      259    16742
      260    16743        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:208  
      261    16744        /*****************************************************************
      262    16745        *                                                                *
      263    16746        *                           States                               *
      264    16747        *                                                                *
      265    16748        *****************************************************************/
      266    16749
      267    16750        %EQU Y_ST_ENB_STOP#    =  0;
      268    16751        %EQU Y_ST_CLR_RLS#     =  1;
      269    16752        %EQU Y_ST_DSB_START#   =  2;
      270    16753        %EQU Y_ST_DSB_STOP#    =  3;
      271    16754        %EQU Y_ST_CALL_RQS#    =  4;
      272    16755        %EQU Y_ST_DOWN#        =  5;
      273    16756        %EQU Y_ST_VCDOWN#      =  6;
      274    16757        %EQU Y_ST_CALL_DELAY#  =  7;
      275    16758        %EQU Y_ST_CALL#        =  8;
      276    16759        %EQU Y_ST_DATA#        =  9;
      277    16760        %EQU Y_ST_RESET#       = 10;
      278    16761        %EQU Y_ST_CLEAR#       = 11;
      279    16762        %EQU Y_ST_SP1#         = 12;
      280    16763        %EQU Y_ST_SP2#         = 13;
      281    16764        %EQU Y_ST_SP3#         = 14;
      282    16765        %EQU Y_ST_MAX#         = 14;
      283    16766
      284    16767        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:209  
      285    16768        /*****************************************************************
      286    16769        *                                                                *
      287    16770        *                           Constant data                        *
      288    16771        *                                                                *
      289    16772        *****************************************************************/
      290    16773
      291    16774        /*****************************************************************
      292    16775        *                                                                *
      293    16776        *                           Level 3 state table                  *
      294    16777        *                                                                *
      295    16778        *****************************************************************/
      296    16779
      297    16780    1   DCL 1 STATE_TABLE UNAL CONSTANT,
      298    16781    1         2 NEXT_STATE (0:%(%(%Y_EV_MAX#+1) * %(%Y_ST_MAX#+1)-1)) UBIN BYTE
      299    16782    1             CALIGNED INIT(
      300    16783        /*
      301    16784            ENB_STOP    The VC is ENABLEd, but the Packet level restart
      302    16785                        process has not been completed.  This is also
      303    16786                        the initial state for incoming calls.
      304    16787        */
      305    16788    1   %Y_ST_DOWN#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      306    16789    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_DSB_STOP#,
      307    16790    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      308    16791    1   %Y_ST_CALL_RQS#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      309    16792    1   %Y_ST_ENB_STOP#,
      310    16793    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      311    16794    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      312    16795    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      313    16796    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      314    16797    1   %Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,%Y_ST_ENB_STOP#,
      315    16798        /*
      316    16799            CLR_RLS     This state is only reached for non-SUPERed VCs.
      317    16800                        A Clear packet has been sent.  When the response
      318    16801                        is received, the context is released.
      319    16802        */
      320    16803    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      321    16804    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:210  
      322    16805    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      323    16806    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_DSB_START#,
      324    16807    1   %Y_ST_CLR_RLS#,
      325    16808    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      326    16809    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      327    16810    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      328    16811    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      329    16812    1   %Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      330    16813        /*
      331    16814            DSB_START   START has been reported from the Packet level, but
      332    16815                        the VC is DISABLEd.
      333    16816        */
      334    16817    1   %Y_ST_DSB_START#,%Y_ST_DSB_STOP#,%Y_ST_DSB_START#,
      335    16818    1   %Y_ST_DOWN#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      336    16819    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      337    16820    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      338    16821    1   %Y_ST_DSB_START#,
      339    16822    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      340    16823    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      341    16824    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,
      342    16825    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,
      343    16826    1   %Y_ST_DSB_START#,%Y_ST_DSB_START#,%Y_ST_DSB_START#,
      344    16827        /*
      345    16828            DSB_STOP    Waiting to hear both ENABLE and START before
      346    16829                        using the VC.
      347    16830        */
      348    16831    1   %Y_ST_DSB_START#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      349    16832    1   %Y_ST_ENB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      350    16833    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      351    16834    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      352    16835    1   %Y_ST_DSB_STOP#,
      353    16836    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      354    16837    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      355    16838    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      356    16839    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      357    16840    1   %Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,%Y_ST_DSB_STOP#,
      358    16841        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:211  
      359    16842            CALL_RQS    This state is only for non-SUPERed VCs.  A Call
      360    16843                        packet has been received, and the VC has been
      361    16844                        RMTDCLed to the Connection Manager.  Waiting
      362    16845                        for VCUP, VCDWN, or VCLST from CM.
      363    16846        */
      364    16847    1   %Y_ST_CALL_RQS#,%Y_ST_ENB_STOP#,%Y_ST_CALL_RQS#,
      365    16848    1   %Y_ST_CALL_RQS#,%Y_ST_CLR_RLS#,%Y_ST_CLR_RLS#,
      366    16849    1   %Y_ST_DATA#,%Y_ST_CALL_RQS#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      367    16850    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_RQS#,%Y_ST_CLEAR#,
      368    16851    1   %Y_ST_CLEAR#,
      369    16852    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      370    16853    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_RQS#,
      371    16854    1   %Y_ST_CALL_RQS#,%Y_ST_CLEAR#,
      372    16855    1   %Y_ST_CALL_RQS#,%Y_ST_CLEAR#,
      373    16856    1   %Y_ST_CALL_RQS#,%Y_ST_CALL_RQS#,%Y_ST_CALL_RQS#,
      374    16857        /*
      375    16858            DOWN        This state is only for SUPERed VCs.  The VC has
      376    16859                        received both ENABLE and START, and CM knows
      377    16860                        about the VC via a DCL.  Now waiting for CM to
      378    16861                        say to start using the VC via VCUP.
      379    16862        */
      380    16863    1   %Y_ST_DOWN#,%Y_ST_ENB_STOP#,%Y_ST_DOWN#,
      381    16864    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      382    16865    1   %Y_ST_CALL#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      383    16866    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      384    16867    1   %Y_ST_DOWN#,
      385    16868    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      386    16869    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      387    16870    1   %Y_ST_DOWN#,%Y_ST_DOWN#,
      388    16871    1   %Y_ST_DOWN#,%Y_ST_DOWN#,
      389    16872    1   %Y_ST_DOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      390    16873        /*
      391    16874            VCDOWN      CM has told us to stop using a VC via VCDWN.  A
      392    16875                        Clear packet has been sent.  When a response is
      393    16876                        received, either transition to DOWN (for SUPERed
      394    16877                        VCs) or release the context (non-SUPERed VCs).
      395    16878        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:212  
      396    16879    1   %Y_ST_VCDOWN#,%Y_ST_ENB_STOP#,%Y_ST_VCDOWN#,
      397    16880    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      398    16881    1   %Y_ST_CLEAR#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      399    16882    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_DOWN#,%Y_ST_DOWN#,
      400    16883    1   %Y_ST_VCDOWN#,
      401    16884    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      402    16885    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      403    16886    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      404    16887    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      405    16888    1   %Y_ST_VCDOWN#,%Y_ST_VCDOWN#,%Y_ST_VCDOWN#,
      406    16889        /*
      407    16890            CALL_DELAY  A VC has just completed a clear procedure, and
      408    16891                        is sitting here as a simpe delay before sending
      409    16892                        another Call packet.  Only SUPERed VCs can reach
      410    16893                        this state.
      411    16894        */
      412    16895    1   %Y_ST_CALL_DELAY#,%Y_ST_ENB_STOP#,%Y_ST_CALL_DELAY#,
      413    16896    1   %Y_ST_CALL_DELAY#,%Y_ST_DOWN#,%Y_ST_DSB_START#,
      414    16897    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_DOWN#,%Y_ST_CLR_RLS#,
      415    16898    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      416    16899    1   %Y_ST_CALL_DELAY#,
      417    16900    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      418    16901    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      419    16902    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      420    16903    1   %Y_ST_DOWN#,%Y_ST_CALL_DELAY#,
      421    16904    1   %Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      422    16905        /*
      423    16906            CALL        A Call packet has been sent.  Waiting for a
      424    16907                        response.
      425    16908        */
      426    16909    1   %Y_ST_CALL#,%Y_ST_ENB_STOP#,%Y_ST_CALL#,
      427    16910    1   %Y_ST_CALL#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      428    16911    1   %Y_ST_CALL#,%Y_ST_CALL#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      429    16912    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_CALL_DELAY#,%Y_ST_CLEAR#,
      430    16913    1   %Y_ST_CLEAR#,
      431    16914    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      432    16915    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:213  
      433    16916    1   %Y_ST_CALL#,%Y_ST_CLEAR#,
      434    16917    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,
      435    16918    1   %Y_ST_CALL#,%Y_ST_CALL#,%Y_ST_CALL#,
      436    16919        /*
      437    16920            DATA        Call set-up procedures have been completed, and
      438    16921                        the VC is in normal data transfer state.
      439    16922        */
      440    16923    1   %Y_ST_DATA#,%Y_ST_ENB_STOP#,%Y_ST_DATA#,
      441    16924    1   %Y_ST_DATA#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      442    16925    1   %Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      443    16926    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_DELAY#,%Y_ST_CLEAR#,
      444    16927    1   %Y_ST_DATA#,
      445    16928    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_DATA#,
      446    16929    1   %Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_DATA#,
      447    16930    1   %Y_ST_RESET#,%Y_ST_CLEAR#,
      448    16931    1   %Y_ST_DATA#,%Y_ST_RESET#,
      449    16932    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_DATA#,
      450    16933        /*
      451    16934            RESET       A Reset packet has been sent to start a reset
      452    16935                        procedure.
      453    16936        */
      454    16937    1   %Y_ST_RESET#,%Y_ST_ENB_STOP#,%Y_ST_RESET#,
      455    16938    1   %Y_ST_RESET#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      456    16939    1   %Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      457    16940    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_DELAY#,%Y_ST_CLEAR#,
      458    16941    1   %Y_ST_RESET#,
      459    16942    1   %Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_RESET#,
      460    16943    1   %Y_ST_DATA#,%Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_RESET#,
      461    16944    1   %Y_ST_RESET#,%Y_ST_CLEAR#,
      462    16945    1   %Y_ST_CLEAR#,%Y_ST_RESET#,
      463    16946    1   %Y_ST_RESET#,%Y_ST_RESET#,%Y_ST_RESET#,
      464    16947        /*
      465    16948            CLEAR       A Clear packet has been sent to start a clear
      466    16949                        procedure.  When completed, SUPERed VCs will
      467    16950                        go to CALL_DELAY, and non-SUPERed VCs will be
      468    16951                        released.
      469    16952        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:214  
      470    16953    1   %Y_ST_CLEAR#,%Y_ST_ENB_STOP#,%Y_ST_CLEAR#,
      471    16954    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      472    16955    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_VCDOWN#,%Y_ST_CLR_RLS#,
      473    16956    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CALL_DELAY#,%Y_ST_CALL_DELAY#,
      474    16957    1   %Y_ST_CLEAR#,
      475    16958    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      476    16959    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      477    16960    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,
      478    16961    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,
      479    16962    1   %Y_ST_CLEAR#,%Y_ST_CLEAR#,%Y_ST_CLEAR#,
      480    16963        /*
      481    16964            SP1         Spare state #1.
      482    16965        */
      483    16966    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      484    16967    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      485    16968    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      486    16969    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      487    16970    1   %Y_ST_SP1#,
      488    16971    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      489    16972    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      490    16973    1   %Y_ST_SP1#,%Y_ST_SP1#,
      491    16974    1   %Y_ST_SP1#,%Y_ST_SP1#,
      492    16975    1   %Y_ST_SP1#,%Y_ST_SP1#,%Y_ST_SP1#,
      493    16976        /*
      494    16977            SP2         Spare state #2.
      495    16978        */
      496    16979    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      497    16980    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      498    16981    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      499    16982    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      500    16983    1   %Y_ST_SP2#,
      501    16984    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      502    16985    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      503    16986    1   %Y_ST_SP2#,%Y_ST_SP2#,
      504    16987    1   %Y_ST_SP2#,%Y_ST_SP2#,
      505    16988    1   %Y_ST_SP2#,%Y_ST_SP2#,%Y_ST_SP2#,
      506    16989        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:215  
      507    16990            SP3         Spare state #3.
      508    16991        */
      509    16992    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      510    16993    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      511    16994    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      512    16995    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      513    16996    1   %Y_ST_SP3#,
      514    16997    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      515    16998    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#,
      516    16999    1   %Y_ST_SP3#,%Y_ST_SP3#,
      517    17000    1   %Y_ST_SP3#,%Y_ST_SP3#,
      518    17001    1   %Y_ST_SP3#,%Y_ST_SP3#,%Y_ST_SP3#       ),
      519    17002
      520    17003        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:216  
      521    17004    1         2 ACTION (0:%(%(%Y_EV_MAX# + 1) * %(%Y_ST_MAX# + 1)-1)) UBIN BYTE
      522    17005    1             CALIGNED INIT(
      523    17006        /*
      524    17007
      525    17008            Actions for state ENB_STOP.
      526    17009
      527    17010        */
      528    17011    1   %Y_ACT_DCL#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      529    17012    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      530    17013    1   %Y_ACT_NULL#,%Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      531    17014    1   %Y_ACT_RMTDCL#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      532    17015    1   %Y_ACT_SCREECH#,
      533    17016    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      534    17017    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      535    17018    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_CALL#,
      536    17019    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      537    17020    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      538    17021        /*
      539    17022
      540    17023            Actions for state CLR_RLS.
      541    17024
      542    17025        */
      543    17026    1   %Y_ACT_NULL#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      544    17027    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      545    17028    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      546    17029    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      547    17030    1   %Y_ACT_NULL#,
      548    17031    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      549    17032    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      550    17033    1   %Y_ACT_NULL#,%Y_ACT_NULL#,
      551    17034    1   %Y_ACT_CLR_TO#,%Y_ACT_NULL#,
      552    17035    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      553    17036        /*
      554    17037
      555    17038            Actions for state DSB_START.
      556    17039
      557    17040        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:217  
      558    17041    1   %Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_RLS#,
      559    17042    1   %Y_ACT_DCL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      560    17043    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      561    17044    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      562    17045    1   %Y_ACT_SCREECH#,
      563    17046    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      564    17047    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      565    17048    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      566    17049    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      567    17050    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      568    17051        /*
      569    17052
      570    17053            Actions for state DSB_STOP.
      571    17054
      572    17055        */
      573    17056    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_RLS#,
      574    17057    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      575    17058    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      576    17059    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      577    17060    1   %Y_ACT_SCREECH#,
      578    17061    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      579    17062    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      580    17063    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      581    17064    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      582    17065    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      583    17066        /*
      584    17067
      585    17068            Actions for state CALL_RQS.
      586    17069
      587    17070        */
      588    17071    1   %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,
      589    17072    1   %Y_ACT_NULL#,%Y_ACT_VCLST#,%Y_ACT_VCLST#,
      590    17073    1   %Y_ACT_VCUP#,%Y_ACT_SCREECH#,%Y_ACT_VCDWN#,%Y_ACT_VCLST#,
      591    17074    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P2#,
      592    17075    1   %Y_ACT_CLR_P2#,
      593    17076    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,
      594    17077    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_UP#,%Y_ACT_NULL#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:218  
      595    17078    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_P2#,
      596    17079    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_UP#,
      597    17080    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      598    17081        /*
      599    17082
      600    17083            Actions for state DOWN.
      601    17084
      602    17085        */
      603    17086    1   %Y_ACT_SCREECH#,%Y_ACT_STOP#,%Y_ACT_RLS#,
      604    17087    1   %Y_ACT_NULL#,%Y_ACT_DCL#,%Y_ACT_NULL#,
      605    17088    1   %Y_ACT_CALL#,%Y_ACT_SCREECH#,%Y_ACT_RLS#,%Y_ACT_RLS#,
      606    17089    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      607    17090    1   %Y_ACT_SCREECH#,
      608    17091    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      609    17092    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      610    17093    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      611    17094    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      612    17095    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      613    17096        /*
      614    17097
      615    17098            Actions for state VCDOWN.
      616    17099
      617    17100        */
      618    17101    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      619    17102    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      620    17103    1   %Y_ACT_NULL#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_VCLST_NCLR#,
      621    17104    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_DWN#,%Y_ACT_DWN#,
      622    17105    1   %Y_ACT_NULL#,
      623    17106    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      624    17107    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      625    17108    1   %Y_ACT_NULL#,%Y_ACT_NULL#,
      626    17109    1   %Y_ACT_CLR_TO#,%Y_ACT_NULL#,
      627    17110    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      628    17111        /*
      629    17112
      630    17113            Actions for state CALL_DELAY.
      631    17114
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:219  
      632    17115        */
      633    17116    1   %Y_ACT_SCREECH#,%Y_ACT_STOP#,%Y_ACT_RLS#,
      634    17117    1   %Y_ACT_NULL#,%Y_ACT_DCL#,%Y_ACT_STOP_KD#,
      635    17118    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_VCDWN_NCLR#,%Y_ACT_RLS#,
      636    17119    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      637    17120    1   %Y_ACT_NULL#,
      638    17121    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      639    17122    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      640    17123    1   %Y_ACT_NULL#,%Y_ACT_NULL#,
      641    17124    1   %Y_ACT_DCL#,%Y_ACT_NULL#,
      642    17125    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      643    17126        /*
      644    17127
      645    17128            Actions for state CALL.
      646    17129
      647    17130        */
      648    17131    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      649    17132    1   %Y_ACT_NULL#,%Y_ACT_CLR_DISC#,%Y_ACT_CLR_DISC#,
      650    17133    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_VCDWN#,%Y_ACT_VCDWN#,
      651    17134    1   %Y_ACT_VCUP#,%Y_ACT_CALEST#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P2#,
      652    17135    1   %Y_ACT_CLR_P2#,
      653    17136    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,
      654    17137    1   %Y_ACT_CLR_P2#,%Y_ACT_CLR_P2#,%Y_ACT_CLR_UP#,%Y_ACT_NULL#,
      655    17138    1   %Y_ACT_SCREECH#,%Y_ACT_CLR_CALL#,
      656    17139    1   %Y_ACT_CLR_CALTO#,%Y_ACT_CLR_UP#,
      657    17140    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      658    17141        /*
      659    17142
      660    17143            Actions for state DATA.
      661    17144
      662    17145        */
      663    17146    1   %Y_ACT_NULL#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      664    17147    1   %Y_ACT_NULL#,%Y_ACT_CLR_DISC#,%Y_ACT_CLR_DISC#,
      665    17148    1   %Y_ACT_SCREECH#,%Y_ACT_VCRST#,%Y_ACT_VCDWN#,%Y_ACT_VCLST#,
      666    17149    1   %Y_ACT_CLR_P4#,%Y_ACT_CLR_P4#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P4#,
      667    17150    1   %Y_ACT_DATIN#,
      668    17151    1   %Y_ACT_FLOW#,%Y_ACT_FLOW#,%Y_ACT_INT#,%Y_ACT_INTC#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:220  
      669    17152    1   %Y_ACT_RSTRCV#,%Y_ACT_RST_D1#,%Y_ACT_RST_D1#,%Y_ACT_NULL#,
      670    17153    1   %Y_ACT_RST_PRS#,%Y_ACT_CLR_P4#,
      671    17154    1   %Y_ACT_ACK#,%Y_ACT_RST_D1#,
      672    17155    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      673    17156        /*
      674    17157
      675    17158            Actions for state RESET.
      676    17159
      677    17160        */
      678    17161    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      679    17162    1   %Y_ACT_NULL#,%Y_ACT_CLR_DISC#,%Y_ACT_CLR_DISC#,
      680    17163    1   %Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_VCDWN#,%Y_ACT_VCLST#,
      681    17164    1   %Y_ACT_CLR_P4#,%Y_ACT_CLR_P4#,%Y_ACT_CLRRCV#,%Y_ACT_CLR_P4#,
      682    17165    1   %Y_ACT_NULL#,
      683    17166    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      684    17167    1   %Y_ACT_RSTCMP#,%Y_ACT_RSTCMP#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      685    17168    1   %Y_ACT_NULL#,%Y_ACT_CLR_P4#,
      686    17169    1   %Y_ACT_CLR_RSTTO#,%Y_ACT_NULL#,
      687    17170    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      688    17171        /*
      689    17172
      690    17173            Actions for state CLEAR.
      691    17174
      692    17175        */
      693    17176    1   %Y_ACT_SCREECH#,%Y_ACT_STOP_KD#,%Y_ACT_RLS#,
      694    17177    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      695    17178    1   %Y_ACT_NULL#,%Y_ACT_SCREECH#,%Y_ACT_NULL#,%Y_ACT_VCLST_NCLR#,
      696    17179    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_DLY#,%Y_ACT_DLY#,
      697    17180    1   %Y_ACT_NULL#,
      698    17181    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      699    17182    1   %Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,%Y_ACT_NULL#,
      700    17183    1   %Y_ACT_NULL#,%Y_ACT_CLR_P4#,
      701    17184    1   %Y_ACT_CLR_TO#,%Y_ACT_CLR_P4#,
      702    17185    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      703    17186        /*
      704    17187
      705    17188            Actions for state SP1.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:221  
      706    17189
      707    17190        */
      708    17191    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      709    17192    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      710    17193    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      711    17194    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      712    17195    1   %Y_ACT_SCREECH#,
      713    17196    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      714    17197    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      715    17198    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      716    17199    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      717    17200    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      718    17201        /*
      719    17202
      720    17203            Actions for state SP2.
      721    17204
      722    17205        */
      723    17206    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      724    17207    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      725    17208    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      726    17209    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      727    17210    1   %Y_ACT_SCREECH#,
      728    17211    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      729    17212    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      730    17213    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      731    17214    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      732    17215    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      733    17216        /*
      734    17217
      735    17218            Actions for state SP3.
      736    17219
      737    17220        */
      738    17221    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      739    17222    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      740    17223    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      741    17224    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      742    17225    1   %Y_ACT_SCREECH#,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:222  
      743    17226    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      744    17227    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      745    17228    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      746    17229    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,
      747    17230    1   %Y_ACT_SCREECH#,%Y_ACT_SCREECH#,%Y_ACT_SCREECH#     );
      748    17231
      749    17232        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:223  
      750    17233        /*****************************************************************
      751    17234        *                                                                *
      752    17235        *                           Level 3 state table for PVC          *
      753    17236        *                                                                *
      754    17237        *****************************************************************/
      755    17238
      756    17239    1   DCL 1 PVC_STATE_TABLE UNAL CONSTANT,
      757    17240    1         2 NEXT_STATE (0:%(%(%Y_EV_MAX#+1) * %(%Y_ST_MAX#+1)-1)) UBIN BYTE
      758    17241    1             CALIGNED INIT(
      759    17242    1   /*  0 */  %Y_ST_DOWN#,%Y_ST_ENB_STOP#*29,
      760    17243    1   /*  1 */  %Y_ST_CLR_RLS#*30,
      761    17244    1   /*  2 */  %Y_ST_DSB_START#*30,
      762    17245    1   /*  3 */  %Y_ST_DSB_STOP#*30,
      763    17246    1   /*  4 */  %Y_ST_CALL_RQS#*30,
      764    17247    1   /*  5 */  %Y_ST_DOWN#,%Y_ST_ENB_STOP#,%Y_ST_DOWN#*4,%Y_ST_DATA#,%Y_ST_DOWN#,
      765    17248    1                %Y_ST_VCDOWN#,%Y_ST_DOWN#*11,%Y_ST_DATA#,%Y_ST_DOWN#*9,
      766    17249    1   /*  6 */  %Y_ST_VCDOWN#,%Y_ST_ENB_STOP#,%Y_ST_VCDOWN#*4,%Y_ST_RESET#,
      767    17250    1                %Y_ST_VCDOWN#*3,%Y_ST_DOWN#,%Y_ST_VCDOWN#*19,
      768    17251    1   /*  7 */  %Y_ST_CALL_DELAY#*30,
      769    17252    1   /*  8 */  %Y_ST_CALL#*30,
      770    17253    1   /*  9 */  %Y_ST_DATA#,%Y_ST_ENB_STOP#,%Y_ST_DATA#*5,%Y_ST_RESET#,
      771    17254    1                %Y_ST_VCDOWN#,%Y_ST_DATA#*2,%Y_ST_RESET#,%Y_ST_ENB_STOP#,
      772    17255    1                %Y_ST_RESET#,%Y_ST_DATA#*6,%Y_ST_RESET#*2,%Y_ST_DATA#,
      773    17256    1                %Y_ST_RESET#*2,%Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_DATA#*3,
      774    17257    1   /* 10 */  %Y_ST_RESET#,%Y_ST_ENB_STOP#,%Y_ST_RESET#*6,%Y_ST_VCDOWN#,
      775    17258    1                %Y_ST_RESET#,%Y_ST_DATA#,%Y_ST_RESET#,%Y_ST_ENB_STOP#,
      776    17259    1                %Y_ST_RESET#*6,%Y_ST_DATA#*2,%Y_ST_RESET#*9,
      777    17260    1   /* 11 */  %Y_ST_CLEAR#*30,
      778    17261    1   /* 12 */  %Y_ST_SP1#*30,
      779    17262    1   /* 13 */  %Y_ST_SP2#*30,
      780    17263    1   /* 14 */  %Y_ST_SP3#*30 ),
      781    17264    1         2 ACTION (0:%(%(%Y_EV_MAX#+1) * %(%Y_ST_MAX#+1)-1)) UBIN BYTE
      782    17265    1             CALIGNED INIT(
      783    17266    1   /*  0 */  %Y_ACT_DCL#,%Y_ACT_NULL#,%Y_ACT_RLS#,%Y_ACT_NULL#*5,%Y_ACT_SP1#*2,
      784    17267    1                %Y_ACT_NULL#*20,
      785    17268    1   /*  1 */  %Y_ACT_NULL#*30,
      786    17269    1   /*  2 */  %Y_ACT_NULL#*30,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:224  
      787    17270    1   /*  3 */  %Y_ACT_NULL#*30,
      788    17271    1   /*  4 */  %Y_ACT_NULL#*30,
      789    17272    1   /*  5 */  %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,%Y_ACT_NULL#*3,
      790    17273    1                %Y_ACT_VCUP#,%Y_ACT_NULL#,%Y_ACT_PVCDWN#,%Y_ACT_SP1#,
      791    17274    1                %Y_ACT_NULL#*4,%Y_ACT_DATIN#,%Y_ACT_NULL#*5,
      792    17275    1                %Y_ACT_VCUP#,%Y_ACT_NULL#*9,
      793    17276    1   /*  6 */  %Y_ACT_NULL#*2,%Y_ACT_RLS#,%Y_ACT_NULL#*3,%Y_ACT_PVCUP#,
      794    17277    1                %Y_ACT_NULL#*3,%Y_ACT_RSTRCV#,%Y_ACT_NULL#*9,%Y_ACT_RSTCMP#,
      795    17278    1                %Y_ACT_NULL#*4,%Y_ACT_RESTART#,%Y_ACT_NULL#*4,
      796    17279    1   /*  7 */  %Y_ACT_NULL#*30,
      797    17280    1   /*  8 */  %Y_ACT_NULL#*30,
      798    17281    1   /*  9 */  %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,%Y_ACT_NULL#*4,
      799    17282    1                %Y_ACT_VCRST#,%Y_ACT_PVCDWN#,%Y_ACT_SP1#,%Y_ACT_RSTRCV#,
      800    17283    1                %Y_ACT_RST_D1#,%Y_ACT_RSTRCV#,%Y_ACT_RST_D1#,
      801    17284    1                %Y_ACT_DATIN#,%Y_ACT_FLOW#*2,%Y_ACT_INT#,
      802    17285    1                %Y_ACT_INTC#,%Y_ACT_RSTRCV#,%Y_ACT_RST_D1#*2,%Y_ACT_NULL#,
      803    17286    1                %Y_ACT_RST_PRS#,%Y_ACT_RST_D1#,%Y_ACT_ACK#,%Y_ACT_RST_D1#,
      804    17287    1                %Y_ACT_NULL#*3,
      805    17288    1   /* 10 */  %Y_ACT_NULL#,%Y_ACT_STOP#,%Y_ACT_RLS#,%Y_ACT_NULL#*5,%Y_ACT_PVCDWN#,
      806    17289    1                %Y_ACT_SP1#,%Y_ACT_RSTCMP#,%Y_ACT_NULL#,%Y_ACT_RSTRCV#,
      807    17290    1                %Y_ACT_NULL#*6,%Y_ACT_RSTCMP#*2,%Y_ACT_NULL#*4,%Y_ACT_RESTART#,
      808    17291    1                %Y_ACT_NULL#*4,
      809    17292    1   /* 11 */  %Y_ACT_NULL#*30,
      810    17293    1   /* 12 */  %Y_ACT_NULL#*30,
      811    17294    1   /* 13 */  %Y_ACT_NULL#*30,
      812    17295    1   /* 14 */  %Y_ACT_NULL#*30 );
      813    17296        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:225  
      814    17297        /*****************************************************************
      815    17298        *                                                                *
      816    17299        *                           VLP_ERRCODEs                         *
      817    17300        *                                                                *
      818    17301        *****************************************************************/
      819    17302
      820    17303        /*
      821    17304                                             Informational logs
      822    17305        */
      823    17306
      824    17307        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      825    17308                           FPTN = RESTART,
      826    17309                           ERR# = %E_KXP_RESTART# );
      827    17355        /*E*   ERROR:      KXP-E_KXP_RESTART#-0
      828    17356               MESSAGE:    Restart packet received; Completed restart procedure.
      829    17357                           If VAL0 is greater than 5, VAL1 is the cause field
      830    17358                           and VAL2 is the diagnostic field.
      831    17359        */
      832    17360        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      833    17361                           FPTN = CLRRCV,
      834    17362                           ERR# = %E_KXP_CLRRCV# );
      835    17408        /*E*   ERROR:      KXP-E_KXP_CLRRCV#-0
      836    17409               MESSAGE:    A Clear packet was received.
      837    17410                           If VAL0 is greater than 5,
      838    17411                           VAL1 is the cause field and VAL2 is the
      839    17412                           diagnostic field.
      840    17413        */
      841    17414        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      842    17415                           FPTN = HC_DSC,
      843    17416                           ERR# = %E_KXP_HC_DSC# );
      844    17462        /*E*   ERROR:      KXP-E_KXP_HC_DSC#-0
      845    17463               MESSAGE:    Disconnect request received from handler common.
      846    17464        */
      847    17465        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      848    17466                           FPTN = DCL_EVENT,
      849    17467                           ERR# = %E_KXP_DCL# );
      850    17513        /*E*   ERROR:      KXP-E_KXP_DCL#-0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:226  
      851    17514               MESSAGE:    Reporting DCL event to Connection Manager.
      852    17515        */
      853    17516        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      854    17517                           FPTN = DSB,
      855    17518                           ERR# = %E_KXP_DSB# );
      856    17564        /*E*   ERROR:      KXP-E_KXP_DSB#-0
      857    17565               MESSAGE:    Disable command received from handler common.
      858    17566        */
      859    17567        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      860    17568                           FPTN = RLSACT,
      861    17569                           ERR# = %E_KXP_RLSACT# );
      862    17615        /*E*   ERROR:      KXP-E_KXP_RLSACT#-0
      863    17616               MESSAGE:    Releasing packet level context block.
      864    17617        */
      865    17618        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      866    17619                           FPTN = RMTDCL,
      867    17620                           ERR# = %E_KXP_RMTDCL# );
      868    17666        /*E*   ERROR:      KXP-E_KXP_RMTDCL#-0
      869    17667               MESSAGE:    Reporting RMTDCL event to Connection Manager.
      870    17668        */
      871    17669        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      872    17670                           FPTN = RSTCMP,
      873    17671                           ERR# = %E_KXP_RSTCMP# );
      874    17717        /*E*   ERROR:      KXP-E_KXP_RSTCMP#-0
      875    17718               MESSAGE:    Packet level reset procedure completed.
      876    17719                           If VAL0 is greater than 5, VAL1 is the cause field,
      877    17720                           and VAL2 is the diagnostic field.
      878    17721        */
      879    17722        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      880    17723                           FPTN = STOP,
      881    17724                           ERR# = %E_KXP_STOP# );
      882    17770        /*E*   ERROR:      KXP-E_KXP_STOP#-0
      883    17771               MESSAGE:    Received Stop event from packet restart/frame level.
      884    17772        */
      885    17773        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      886    17774                           FPTN = VCDWN,
      887    17775                           ERR# = %E_KXP_VCDWN# );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:227  
      888    17821        /*E*   ERROR:      KXP-E_KXP_VCDWN#-0
      889    17822               MESSAGE:    Received VCDWN event from Connection Manager.
      890    17823        */
      891    17824        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      892    17825                           FPTN = VCLST,
      893    17826                           ERR# = %E_KXP_VCLST# );
      894    17872        /*E*   ERROR:      KXP-E_KXP_VCLST#-0
      895    17873               MESSAGE:    Received VCLST event from Connection Manager.
      896    17874        */
      897    17875        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      898    17876                           FPTN = VCRST,
      899    17877                           ERR# = %E_KXP_VCRST# );
      900    17923        /*E*   ERROR:      KXP-E_KXP_VCRST#-0
      901    17924               MESSAGE:    Received VCRST event from Connection Manager.
      902    17925        */
      903    17926        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      904    17927                           FPTN = VCUP,
      905    17928                           ERR# = %E_KXP_VCUP# );
      906    17974        /*E*   ERROR:      KXP-E_KXP_VCUP#-0
      907    17975               MESSAGE:    Received VCUP event from Connection Manager.
      908    17976        */
      909    17977        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      910    17978                           FPTN = REDIRECTED_CALL,
      911    17979                           ERR# = %E_KXP_RED# );
      912    18025        /*E*   ERROR:      KXP-E_KXP_RED#-0
      913    18026               MESSAGE:    Received redirected call from network.
      914    18027        */
      915    18028        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      916    18029                           FPTN = ADDRESS_MODIFIED,
      917    18030                           ERR# = %E_KXP_ADR_MOD# );
      918    18076        /*E*   ERROR:      KXP-E_KXP_ADR_MOD#-0
      919    18077               MESSAGE:    Called line address has been modified.
      920    18078        */
      921    18079        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      922    18080                           FPTN = BAD_CLR_RQS,
      923    18081                           ERR# = %E_KXP_BADCLR# );
      924    18127        /*E*   ERROR:      KXP-E_KXP_BADCLR#-0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:228  
      925    18128               MESSAGE:    Received invalid clear request packet.
      926    18129        */
      927    18130        %VLP_ERRCODE (STCLASS="CONSTANT SYMDEF",FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      928    18131                           FPTN = DEVLGNFAL,
      929    18132                           ERR# = %E_KXP_DEVLGNFAL# );
      930    18178        /*E*   ERROR:      KXP-E_KXP_DEVLGNFAL#-0
      931    18179               MESSAGE:    Failed to log on a LINKDEV.
      932    18180        */
      933    18181        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_INFO#,
      934    18182                           FPTN = CALL_OUT,
      935    18183                           ERR# = %E_KXP_CALL_OUT# );
      936    18229        /*E*   ERROR:      KXP-E_KXP_CALL_OUT#-0
      937    18230               MESSAGE:    Call packet has been sent.
      938    18231        */
      939    18232
      940    18233        /*
      941    18234                                             Software logs
      942    18235        */
      943    18236
      944    18237        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      945    18238                           FPTN = SHORT_PACKET,
      946    18239                           ERR# = %E_KXP_SHORT_PACKET# );
      947    18285        /*E*   ERROR:      KXP-E_KXP_SHORT_PACKET#-3
      948    18286               MESSAGE:    Discarded over-length packet or packet < 5 bytes.
      949    18287        */
      950    18288        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      951    18289                           FPTN = BAD_GFI,
      952    18290                           ERR# = %E_KXP_BAD_GFI# );
      953    18336        /*E*   ERROR:      KXP-E_KXP_BAD_GFI#-3
      954    18337               MESSAGE:    Discarded packet with invalid GFI.
      955    18338        */
      956    18339        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      957    18340                           FPTN = BAD_LCN0_GFI,
      958    18341                           ERR# = %E_KXP_BAD_LCN0_GFI# );
      959    18387        /*E*   ERROR:      KXP-E_KXP_BAD_LCN0_GFI#-3
      960    18388               MESSAGE:    Discarded packet for channel 0; bad GFI.
      961    18389        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:229  
      962    18390        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      963    18391                           FPTN = INV_LCN0,
      964    18392                           ERR# = %E_KXP_INV_LCN0# );
      965    18438        /*E*   ERROR:      KXP-E_KXP_INV_LCN0#-3
      966    18439               MESSAGE:    Invalid packet for logical channel 0.
      967    18440        */
      968    18441        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      969    18442                           FPTN = RESTART_LNG,
      970    18443                           ERR# = %E_KXP_RESTART_LNG# );
      971    18489        /*E*   ERROR:      KXP-E_KXP_RESTART_LNG#-3
      972    18490               MESSAGE:    Discarded restart(confirm); invalid length.
      973    18491        */
      974    18492        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      975    18493                           FPTN = NO_L3CTX,
      976    18494                           ERR# = %E_KXP_NO_L3CTX# );
      977    18540        /*E*   ERROR:      KXP-E_KXP_NO_L3CTX#-3
      978    18541               MESSAGE:    No more memory for new L3 context.
      979    18542        */
      980    18543
      981    18544        /*
      982    18545                                             Nonfatal protocol errors
      983    18546        */
      984    18547
      985    18548        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
      986    18549                           FPTN = RSTRCV,
      987    18550                           ERR# = %E_KXP_RSTRCV# );
      988    18596        /*E*   ERROR:      KXP-E_KXP_RSTRCV#-5
      989    18597               MESSAGE:    Reset packet received to cause a reset procedure.
      990    18598        */
      991    18599        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
      992    18600                           FPTN = RST_D1,
      993    18601                           ERR# = %E_KXP_RST_D1# );
      994    18647        /*E*   ERROR:      KXP-E_KXP_RST_D1#-5
      995    18648               MESSAGE:    Invalid packet for data xfer state caused reset.
      996    18649        */
      997    18650        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
      998    18651                           FPTN = BAD_PR,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:230  
      999    18652                           ERR# = %E_KXP_BAD_PR# );
     1000    18698        /*E*   ERROR:      KXP-E_KXP_BAD_PR#-5
     1001    18699               MESSAGE:    Ack with invalid seq# caused reset procedure.
     1002    18700        */
     1003    18701        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
     1004    18702                           FPTN = BAD_PS,
     1005    18703                           ERR# = %E_KXP_BAD_PS# );
     1006    18749        /*E*   ERROR:      KXP-E_KXP_BAD_PS#-5
     1007    18750               MESSAGE:    Data packet with invalid seq# caused reset procedure.
     1008    18751        */
     1009    18752        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
     1010    18753                           FPTN = INV_INTC,
     1011    18754                           ERR# = %E_KXP_INV_INTC# );
     1012    18800        /*E*   ERROR:      KXP-E_KXP_INV_INTC#-5
     1013    18801               MESSAGE:    Unexpected Interrupt Confirmation caused reset procedure.
     1014    18802        */
     1015    18803        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_NONFATAL_PROT#,
     1016    18804                           FPTN = XTR_INT,
     1017    18805                           ERR# = %E_KXP_XTRINT# );
     1018    18851        /*E*   ERROR:      KXP-E_KXP_XTRINT#-5
     1019    18852               MESSAGE:    Extra interrupt requests before confirmation.
     1020    18853        */
     1021    18854
     1022    18855        /*
     1023    18856                                             Fatal protocol errors
     1024    18857        */
     1025    18858
     1026    18859        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1027    18860                           FPTN = NEW_RESTART,
     1028    18861                           ERR# = %E_KXP_NEW_RESTART# );
     1029    18907        /*E*   ERROR:      KXP-E_KXP_NEW_RESTART#-4
     1030    18908               MESSAGE:    Unexpected Restart; all virtual circuits lost.
     1031    18909        */
     1032    18910        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1033    18911                           FPTN = INV_RESTART_C,
     1034    18912                           ERR# = %E_KXP_INV_RESTART_C# );
     1035    18958        /*E*   ERROR:      KXP-E_KXP_INV_RESTART_C#-4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:231  
     1036    18959               MESSAGE:    Unexpected Restart Confirmation received.
     1037    18960        */
     1038    18961        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1039    18962                           FPTN = NO_LCN,
     1040    18963                           ERR# = %E_KXP_NO_LCN# );
     1041    19009        /*E*   ERROR:      KXP-E_KXP_NO_LCN#-4
     1042    19010               MESSAGE:    No more logical channels for outgoing call.
     1043    19011        */
     1044    19012        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1045    19013                           FPTN = FTLCLR,
     1046    19014                           ERR# = %E_KXP_FTLCLR# );
     1047    19060        /*E*   ERROR:      KXP-E_KXP_FTLCLR#-4
     1048    19061               MESSAGE:    Clear packet received for active virtual circuit.
     1049    19062        */
     1050    19063        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1051    19064                           FPTN = CALRTREXH,
     1052    19065                           ERR# = %E_KXP_CALRTREXH# );
     1053    19111        /*E*   ERROR:      KXP-E_KXP_CALRTREXH#-4
     1054    19112               MESSAGE:    Call retries exhausted. Virtual circuit killed.
     1055    19113
     1056    19114        */
     1057    19115        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1058    19116                           FPTN = INVCALPRM,
     1059    19117                           ERR# = %E_KXP_INVCALPRM# );
     1060    19163        /*E*   ERROR:      KXP-E_KXP_INVCALPRM#-4
     1061    19164               MESSAGE:    Invalid call parameter. Circuit cleared.
     1062    19165        */
     1063    19166        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1064    19167                           FPTN = CALTIMOUT,
     1065    19168                           ERR# = %E_KXP_CALTIMOUT# );
     1066    19214        /*E*   ERROR:      KXP-E_KXP_CALTIMOUT#-4
     1067    19215               MESSAGE:    Call packet timed-out. Circuit cleared.
     1068    19216        */
     1069    19217        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1070    19218                           FPTN = CALCLS,
     1071    19219                           ERR# = %E_KXP_CALCLS# );
     1072    19265        /*E*   ERROR:      KXP-E_KXP_CALCLS#-4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:232  
     1073    19266               MESSAGE:    Call collision occurred.
     1074    19267        */
     1075    19268        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1076    19269                           FPTN = CLR_P2,
     1077    19270                           ERR# = %E_KXP_CLR_P2# );
     1078    19316        /*E*   ERROR:      KXP-E_KXP_CLR_P2#-4
     1079    19317               MESSAGE:    Invalid packet for state P2. Circuit cleared.
     1080    19318        */
     1081    19319        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1082    19320                           FPTN = CLR_P3,
     1083    19321                           ERR# = %E_KXP_CLR_P3# );
     1084    19367        /*E*   ERROR:      KXP-E_KXP_CLR_P3#-4
     1085    19368               MESSAGE:    Invalid packet for state P3. Circuit cleared.
     1086    19369        */
     1087    19370        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1088    19371                           FPTN = CLR_P4,
     1089    19372                           ERR# = %E_KXP_CLR_P4# );
     1090    19418        /*E*   ERROR:      KXP-E_KXP_CLR_P4#-4
     1091    19419               MESSAGE:    Invalid packet for state P4. Circuit cleared.
     1092    19420        */
     1093    19421        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1094    19422                           FPTN = RSTTIMOUT,
     1095    19423                           ERR# = %E_KXP_RSTTIMOUT# );
     1096    19469        /*E*   ERROR:      KXP-E_KXP_RSTTIMOUT#-4
     1097    19470               MESSAGE:    Reset packet timed-out.
     1098    19471        */
     1099    19472        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1100    19473                           FPTN = UNKLCN,
     1101    19474                           ERR# = %E_KXP_UNKLCN# );
     1102    19520        /*E*   ERROR:      KXP-E_KXP_UNKLCN#-4
     1103    19521               MESSAGE:    Discarded packet for unassigned channel.
     1104    19522        */
     1105    19523        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1106    19524                           FPTN = UNKPCK,
     1107    19525                           ERR# = %E_KXP_UNKPCK# );
     1108    19571        /*E*   ERROR:      KXP-E_KXP_UNKPCK#-4
     1109    19572               MESSAGE:    Unknown packet type received; circuit cleared.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:233  
     1110    19573        */
     1111    19574        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
     1112    19575                           FPTN = CLRTIMOUT,
     1113    19576                           ERR# = %E_KXP_CLRTIMOUT# );
     1114    19622        /*E*   ERROR:      KXP-E_KXP_CLRTIMOUT#-4
     1115    19623               MESSAGE:    Clear retries exhausted. Confirmation presumed.
     1116    19624        */
     1117    19625
     1118    19626        %VLP_SCODE (FPTN=Y_NO_CHNMEM,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_NO_CHNMEM#);
     1119    19687        %VLP_SCODE (FPTN=Y_BADCTXPTR,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_BADCTXPTR#);
     1120    19748        %VLP_SCODE (FPTN=Y_UNKEVT,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_PCK_UNKEVT#);
     1121    19809        %VLP_SCODE (FPTN=Y_UNKACT,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_PCK_UNKACT#);
     1122    19870        %VLP_SCODE (FPTN=Y_ACTSCR,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_PCK_ACTSCR#);
     1123    19931        %VLP_SCODE (FPTN=Y_VCLST_LCL,STCLASS=CONSTANT,FCG=KX,MID=P,ERR#=%S$KX_VCLST_LCL#);
     1124    19992
     1125    19993    1   DCL LOG_TO_CP6 (0:12) UBIN CONSTANT INIT (0,0,0,0,0,0,0,0,1,2,3,4,5);
     1126    19994        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:234  
     1127    19995        /*****************************************************************
     1128    19996        *                                                                *
     1129    19997        *                           Auto                                 *
     1130    19998        *                                                                *
     1131    19999        *****************************************************************/
     1132    20000
     1133    20001    1   DCL DAT$ PTR;
     1134    20002    1   DCL L3$ PTR;
     1135    20003    1   DCL CM$ PTR;
     1136    20004    1   DCL L2$ PTR;
     1137    20005    1   DCL CHN$ PTR;
     1138    20006    1   DCL STR$ PTR;
     1139    20007
     1140    20008        %FPT_X25 ( STCLASS = );
     1141    20052        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
     1142    20096        %VLP_ERRCODE (STCLASS=AUTO,FPTN=ERCOD) ;
     1143    20142    1   DCL S_TRMID$ PTR AUTO ;
     1144    20143    1   DCL S_VAL0 UBIN ALIGNED AUTO ;
     1145    20144    1   DCL S_VAL1 UBIN ALIGNED AUTO ;
     1146    20145    1   DCL LCN UBIN ALIGNED AUTO ; /* for erloguing purposes mostly */
     1147    20146    1   DCL CODE UBIN AUTO;
     1148    20147    1   DCL TEMP0 UBIN ;
     1149    20148    1   DCL TEMP1 UBIN AUTO ;
     1150    20149
     1151    20150    1   DCL PEVENT UBIN WORD;
     1152    20151    1   DCL PSTATE UBIN WORD;
     1153    20152    1   DCL ID UBIN WORD;
     1154    20153    1   DCL DIAG UBIN WORD;
     1155    20154    1   DCL INV_PRM UBIN;
     1156    20155    1   DCL PRM_VAL UBIN;
     1157    20156    1   DCL BYTE_INDEX UBIN;
     1158    20157    1   DCL SIZ UBIN;
     1159    20158    1   DCL ACTION UBIN;
     1160    20159    1   DCL KHA_ERROR UBIN(32);
     1161    20160    1   DCL SENDING_CALL BIT(1);
     1162    20161    1   DCL RVS BIT(1);
     1163    20162    1   DCL Y@DFRINP BIT(1);
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:235  
     1164    20163    1   DCL CHR_$$$_X UBIN;            /* byte indices to find the charging info */
     1165    20164    1   DCL CHR_SEG_X UBIN;
     1166    20165    1   DCL CHR_DUR_X UBIN;
     1167    20166    1   DCL L2EXT UBIN;
     1168    20167    1   DCL L3EXT UBIN;
     1169    20168    1   DCL DATACNT UBIN;
     1170    20169    1   DCL IN_PR UBIN;
     1171    20170    1   DCL MBIT BIT(1);
     1172    20171
     1173    20172    1   DCL TEMP2$ PTR;
     1174    20173    1   DCL TEMP2 UBIN WORD;
     1175    20174
     1176    20175    1   DCL PS UBIN ALIGNED;
     1177    20176        %B$TERMINAL_ID ( FPTN = TERMID, STCLASS = AUTO );
     1178    20205        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:236  
     1179    20206        /*****************************************************************
     1180    20207        *                                                                *
     1181    20208        *                           Based                                *
     1182    20209        *                                                                *
     1183    20210        *****************************************************************/
     1184    20211
     1185    20212        %KH$CHN;
     1186    20336        %KH$ADMIN_FPT ( FPTN = ADMIN_FPT, STCLASS = "BASED ( FPT_X25.PRM1$ )" );
     1187    20547
     1188    20548        %KX$L1 ( STCLASS ="BASED ( L2$ )");
     1189    20588        %KX$L2 ( STCLASS ="BASED ( L2$ )");
     1190    20955        %KX$L3 ( STCLASS ="BASED ( L3$ )");
     1191    21358
     1192    21359        %KX$DATA ( STCLASS ="BASED ( DAT$ )");
     1193    21379        %KX$FRAME ( STCLASS ="BASED ( DAT$ )");
     1194    21411        %KX$XFRAME ( STCLASS = "BASED ( DAT$ )" );
     1195    21445        %KX$PACKET ( STCLASS ="BASED ( DAT$ )");
     1196    21511        %KX$XPACKET ( STCLASS ="BASED ( DAT$ )");
     1197    21579
     1198    21580        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
     1199    21600        %KX$L3 ( FPTN = KX$TL3, STCLASS = BASED );
     1200    22003        %KX$PACKET ( FPTN = KX$TPACKET, STCLASS = BASED );
     1201    22069        %KX$TMRBLK ( FPTN = KX$BTMRBLK, STCLASS = BASED );
     1202    22101
     1203    22102    1   DCL INSTR CHAR(100) BASED( STR$ );
     1204    22103    1   DCL OUTSTR CHAR(100) BASED( STR$ );
     1205    22104    1   DCL DATSTR CHAR(100) BASED( DAT$ );
     1206    22105        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
     1207    22519    1   DCL STRT CHAR(8) BASED;
     1208    22520    1   DCL STRT0 CHAR(TEMP0) BASED CALIGNED;
     1209    22521    1   DCL STRT1 CHAR(TEMP1) BASED CALIGNED;
     1210    22522    1   DCL BYTE_ARRAY (0:256) UBIN BYTE CALIGNED BASED(DAT$);
     1211    22523    1   DCL PKTHDR CHAR(3) BASED CALIGNED;  /* 3 byte pkt header with just the type */
     1212    22524    1   DCL EXTPKTHDR CHAR(4) BASED CALIGNED;  /* 4 byte pkt header; extended format */
     1213    22525    1  DCL XPKTHDR CHAR(5) BASED CALIGNED; /* pkt header with type, cause and diag bytes */
     1214    22526    1   DCL Y@CNCMNG EPTR BASED(CM$);
     1215    22527    1   DCL 1 ADR1 BASED CALIGNED,
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:237  
     1216    22528    1         2 SIZ UBIN BYTE CALIGNED,
     1217    22529    1         2 ADR,
     1218    22530    1           3 B32 BIT(32) UNAL,
     1219    22531    1           3 B24 BIT(24) UNAL;
     1220    22532    1   DCL 1 ADR2 BASED CALIGNED,
     1221    22533    1         2 B4 BIT(4) UNAL,
     1222    22534    1         2 ADR,
     1223    22535    1           3 B32 BIT(32) UNAL,
     1224    22536    1           3 B24 BIT(24) UNAL;
     1225    22537    1   DCL KVB_SIZ UBIN BASED ALIGNED;
     1226    22538        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:238  
     1227    22539        /*****************************************************************
     1228    22540        *                                                                *
     1229    22541        *                           Static                               *
     1230    22542        *                                                                *
     1231    22543        *****************************************************************/
     1232    22544
     1233    22545        %KX_DATA;
     1234    23235    1   DCL G$JIT$ PTR SYMREF;
     1235    23236    1   DCL 1 IN_PKTHDR STATIC,
     1236    23237        %KX$PACKET_INNARDS ( LAST = "," );
     1237    23271    1         2 TYPE_EXT REDEF TYPE,
     1238    23272    1           3 PS UBIN(7) UNAL,
     1239    23273    1           3 * BIT(1) UNAL,
     1240    23274    1         2 CAUSE UBIN BYTE CALIGNED,
     1241    23275    1         2 PR_EXT REDEF CAUSE,
     1242    23276    1           3 PR UBIN(7) UNAL,
     1243    23277    1           3 M BIT(1) UNAL,
     1244    23278    1         2 DIAG UBIN BYTE CALIGNED;
     1245    23279    1   DCL IN_PKTHDR_CHR REDEF IN_PKTHDR CHAR(5);
     1246    23280
     1247    23281    1   DCL 1 OUT_PKTHDR STATIC,
     1248    23282        %KX$PACKET_INNARDS ( LAST = "," );
     1249    23316    1         2 TYPE_EXT REDEF TYPE,
     1250    23317    1           3 PS UBIN(7) UNAL,
     1251    23318    1           3 * BIT(1) UNAL,
     1252    23319    1         2 CAUSE UBIN BYTE CALIGNED,
     1253    23320    1         2 PR_EXT REDEF CAUSE,
     1254    23321    1           3 PR UBIN(7) UNAL,
     1255    23322    1           3 M BIT(1) UNAL,
     1256    23323    1         2 DIAG UBIN BYTE CALIGNED;
     1257    23324    1   DCL OUT_PKTHDR_CHR REDEF OUT_PKTHDR CHAR(5);
     1258    23325
     1259    23326        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:239  
     1260    23327        /*****************************************************************
     1261    23328        *                                                                *
     1262    23329        *                           Procedure                            *
     1263    23330        *                                                                *
     1264    23331        *****************************************************************/
     1265    23332
     1266    23333        /* Set up everything from the parameters */
     1267    23334
     1268    23335    1       L3$ = FPT_X25.RCV$;

  23335   2 000005  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 000007  DCC6 0003                            LDB,B5   3,B6
          2 000009  DFC7 0008                            STB,B5   L3$,AUTO

     1269    23336    1       IF L3$ ~= ADDR(NIL)

  23336   2 00000B  8DC7 0008                            CMN      L3$,AUTO
          2 00000D  0901 0018                            BE       s:23346,PREL

     1270    23337    1          THEN
     1271    23338    2             DO;

     1272    23339    2                L3EXT = BITBIN(KX$L3.EXTSEQ);

  23339   2 00000F  E845 0029                            LDR,R6   41,B5
          2 000011  6045                                 SOR,R6   5
          2 000012  E570 0001                            AND,R6   1,IMO
          2 000014  EF47 003E                            STR,R6   L3EXT,AUTO

     1273    23340    2                L2$ = KX$L3.L2$;

  23340   2 000016  CCC5 0002                            LDB,B4   2,B5
          2 000018  CFC7 000C                            STB,B4   L2$,AUTO

     1274    23341    2                CM$ = KX$L3.CM$;

  23341   2 00001A  BCC5 0004                            LDB,B3   4,B5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:240  
          2 00001C  BFC7 000A                            STB,B3   CM$,AUTO

     1275    23342    2                LCN = KX$L3.LCN#;

  23342   2 00001E  D845 002A                            LDR,R5   42,B5
          2 000020  D570 0FFF                            AND,R5   4095,IMO
          2 000022  DF47 0028                            STR,R5   LCN,AUTO

     1276    23343    2             END;

  23343   2 000024  0F81 000C                            B        s:23350,PREL

     1277    23344    1          ELSE
     1278    23345    2             DO;

     1279    23346    2                L2$ = FPT_X25.CAL$;

  23346   2 000026  CCC6 0001                            LDB,B4   1,B6
          2 000028  CFC7 000C                            STB,B4   L2$,AUTO

     1280    23347    2                CM$ = ADDR(NIL);

  23347   2 00002A  BB80 0000 0000                       LAB,B3   0
          2 00002D  BFC7 000A                            STB,B3   CM$,AUTO

     1281    23348    2                LCN = 0;

  23348   2 00002F  8747 0028                            CL       LCN,AUTO

     1282    23349    2             END;

     1283    23350    1       CALL_FPT = '0'B;

  23350   2 000031  5C20                                 LDV,R5   32
          2 000032  0021                                 ALR      ;
          2 000033       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000035       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:241  

     1284    23351    1       CHR_$$$_X = 0;

  23351   2 000037  437F                                 CSYNC    s:23350+5,SPREL
          2 000038  8747 003A                            CL       CHR_$$$_X,AUTO

     1285    23352    1       CHR_SEG_X = 0;

  23352   2 00003A  8747 003B                            CL       CHR_SEG_X,AUTO

     1286    23353    1       CHR_DUR_X = 0;   /* byte index from the byte after packet type */

  23353   2 00003C  8747 003C                            CL       CHR_DUR_X,AUTO

     1287    23354    1       IF L2$ ~= ADDR(NIL)

  23354   2 00003E  8DC7 000C                            CMN      L2$,AUTO
          2 000040  0901 000A                            BE       s:23360,PREL

     1288    23355    1          THEN
     1289    23356    2             DO;

     1290    23357    2                S_TRMID$ = KX$L1.CHN$ ;

  23357   2 000042  ACC4 0002                            LDB,B2   2,B4
          2 000044  AFC7 0024                            STB,B2   S_TRMID$,AUTO

     1291    23358    2                L2EXT = BITBIN (KX$L2.FLG.EXTSEQ);

  23358   2 000046  E844 002F                            LDR,R6   47,B4
          2 000048  604F                                 SOR,R6   15
          2 000049  EF47 003D                            STR,R6   L2EXT,AUTO

     1292    23359    2             END;

     1293    23360    1       OUT_PKTHDR = '0'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:242  
  23360   2 00004B  AB80 0000 0000  01                   LAB,B2   IN_PKTHDR
          2 00004E  5C05                                 LDV,R5   5
          2 00004F  0021                                 ALR      ;
          2 000050       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000052       4002 0003                                ALPHANUM(3,B2,,R5,FILL)

     1294    23361    1       PEVENT = FPT_X25.EVN;

  23361   2 000054  437F                                 CSYNC    s:23360+8,SPREL
          2 000055  E806                                 LDR,R6   ,B6
          2 000056  EF47 002C                            STR,R6   PEVENT,AUTO

     1295    23362        /*
     1296    23363                                             The events have different setup
     1297    23364                                             duties to perform.  DOCASE on
     1298    23365                                             each event to convert external
     1299    23366                                             event names into internal names.
     1300    23367        */
     1301    23368    2       DO CASE ( PEVENT );

  23368   2 000058  B856                                 LDR,R3   R6
          2 000059  3D1D                                 CMV,R3   29
          2 00005A  0281 0627                            BGE      s:24045,PREL
          2 00005C  A830 0000 0062  02                   LDR,R2   s:23368+10,R3
          2 00005F  83A0 0000 007F  02                   JMP      s:23377,R2
          2 000062       0000                            DC       s:23377,PREL
          2 000063       02A7                            DC       s:23672,PREL
          2 000064       02AB                            DC       s:23681,PREL
          2 000065       02B0                            DC       s:23688,PREL
          2 000066       02D0                            DC       s:23730,PREL
          2 000067       030D                            DC       s:23767,PREL
          2 000068       0603                            DC       s:24045,PREL
          2 000069       0006                            DC       s:23391,PREL
          2 00006A       0259                            DC       s:23638,PREL
          2 00006B       0321                            DC       s:23780,PREL
          2 00006C       0325                            DC       s:23789,PREL
          2 00006D       032A                            DC       s:23799,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:243  
          2 00006E       02B5                            DC       s:23695,PREL
          2 00006F       02C3                            DC       s:23714,PREL
          2 000070       02BF                            DC       s:23706,PREL
          2 000071       02C7                            DC       s:23725,PREL
          2 000072       0363                            DC       s:23825,PREL
          2 000073       03A6                            DC       s:23846,PREL
          2 000074       03AC                            DC       s:23853,PREL
          2 000075       0478                            DC       s:23911,PREL
          2 000076       025E                            DC       s:23645,PREL
          2 000077       04BC                            DC       s:23935,PREL
          2 000078       0572                            DC       s:23978,PREL
          2 000079       0597                            DC       s:23993,PREL
          2 00007A       05E8                            DC       s:24018,PREL
          2 00007B       05EE                            DC       s:24021,PREL
          2 00007C       05F4                            DC       s:24027,PREL
          2 00007D       05F9                            DC       s:24033,PREL
          2 00007E       05FE                            DC       s:24039,PREL

     1302    23369
     1303    23370    2          CASE ( %KX_P_EV_INIT# );

     1304    23371        /*
     1305    23372                                             INIT means that the Frame level
     1306    23373                                             just finished set-up procedures
     1307    23374                                             at its level.  Always start off
     1308    23375                                             by sending a Restart packet.
     1309    23376        */
     1310    23377    2             CALL Y$RESTART;

  23377   2 00007F  E3C0 224A                            LNJ,B6   s:0,PREL
          2 000081       0001                            DC       s:23382,PREL

     1311    23378        /*
     1312    23379                                             Return now, since this is not a
     1313    23380                                             per-LCN event.
     1314    23381        */
     1315    23382    2             RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:244  

  23382   2 000082  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1316    23383
     1317    23384    2          CASE ( %KX_P_EV_DATIN# );

     1318    23385        /*
     1319    23386                                             The Frame level has received a
     1320    23387                                             packet and is passing it along to
     1321    23388                                             this level to interpret.
     1322    23389        */
     1323    23390
     1324    23391    2             DAT$ = FPT_X25.PRM1$;

  23391   2 000085  DCC6 0007                            LDB,B5   7,B6
          2 000087  DFC7 0006                            STB,B5   DAT$,AUTO

     1325    23392    2             IN_PKTHDR_CHR = ADDR(BYTE_ARRAY(LENGTHC(KX$FRAME)+L2EXT))->XPKTHDR;

  23392   2 000089  AB85                                 LAB,B2   ,B5
          2 00008A  A847 003D                            LDR,R2   L2EXT,AUTO
          2 00008C  2E12                                 ADV,R2   18
          2 00008D  6C05                                 LDV,R6   5
          2 00008E  BB80 0000 0000  01                   LAB,B3   IN_PKTHDR
          2 000091  3C00                                 LDV,R3   0
          2 000092  0008                                 MMM

     1326    23393    2             DATACNT = KX$DATA.CNT - L2EXT;

  23393   2 000093  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 000095  E844 0007                            LDR,R6   7,B4
          2 000097  E247 003D                            SUB,R6   L2EXT,AUTO
          2 000099  EF47 003F                            STR,R6   DATACNT,AUTO

     1327    23394    2             IF DATACNT < %L0 - 1

  23394   2 00009B  6D04                                 CMV,R6   4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:245  
          2 00009C  0281 0008                            BGE      s:23402,PREL

     1328    23395    2                THEN           /*  Short packets are always ignored  */
     1329    23396    3                   DO;

     1330    23397    3                      ERCOD = SHORT_PACKET;

  23397   2 00009E  8C80 0000 03A8  00                   LDI      SHORT_PACKET
          2 0000A1  8D47 0022                            SDI      ERCOD,AUTO

     1331    23398    3                      GOTO LER1 ;

  23398   2 0000A3  0F81 0049                            B        s:23432,PREL

     1332    23399
     1333    23400    3                   END;
     1334    23401
     1335    23402    2             IF ( IN_PKTHDR.GFI = %GFI AND KX$L2.DFLVCPRF.EXTSEQ# ) OR

  23402   2 0000A5  C800 0000 0000  01                   LDR,R4   IN_PKTHDR
          2 0000A8  404C                                 SOR,R4   12
          2 0000A9  C570 0003                            AND,R4   3,IMO
          2 0000AB  4D01                                 CMV,R4   1
          2 0000AC  0981 0007                            BNE      s:23402+15,PREL
          2 0000AE  BCC7 000C                            LDB,B3   L2$,AUTO
          2 0000B0  89C3 0060                            CMZ      96,B3
          2 0000B2  0801 0010                            BAL      s:23407,PREL
          2 0000B4  4D02                                 CMV,R4   2
          2 0000B5  0981 0007                            BNE      s:23402+24,PREL
          2 0000B7  BCC7 000C                            LDB,B3   L2$,AUTO
          2 0000B9  89C3 0060                            CMZ      96,B3
          2 0000BB  0881 0007                            BAGE     s:23407,PREL
          2 0000BD  4D01                                 CMV,R4   1
          2 0000BE  0901 000B                            BE       s:23412,PREL
          2 0000C0  4D02                                 CMV,R4   2
          2 0000C1  0901 0008                            BE       s:23412,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:246  
     1336    23403    2                ( IN_PKTHDR.GFI = %GFI_EXT AND NOT KX$L2.DFLVCPRF.EXTSEQ# ) OR
     1337    23404    2                ( IN_PKTHDR.GFI ~= %GFI AND IN_PKTHDR.GFI ~= %GFI_EXT )
     1338    23405    2                THEN  /*                Bad GFI is always ignored  */
     1339    23406    3                   DO;

     1340    23407    3                      ERCOD = BAD_GFI ;

  23407   2 0000C3  8C80 0000 03AA  00                   LDI      BAD_GFI
          2 0000C6  8D47 0022                            SDI      ERCOD,AUTO

     1341    23408    3                      GOTO LER1 ;

  23408   2 0000C8  0F81 0024                            B        s:23432,PREL

     1342    23409
     1343    23410    3                   END;
     1344    23411
     1345    23412    2             IF IN_PKTHDR.TYPE = %Y_ID_DIAG#

  23412   2 0000CA  B280 0000 0001  01                   LLH,R3   IN_PKTHDR+1
          2 0000CD  B970 00F1                            CMR,R3   241,IMO
          2 0000CF  0981 0004                            BNE      s:23422,PREL

     1346    23413    2                THEN
     1347    23414    2                   RETURN;

  23414   2 0000D1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1348    23415        /*
     1349    23416                                             LCN 0 is reserved for Restart
     1350    23417                                             procedures.  Any packet with that
     1351    23418                                             LCN gets special handling, and
     1352    23419                                             does not go thru the state table.
     1353    23420        */
     1354    23421
     1355    23422    2             LCN = IN_PKTHDR.LCN#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:247  
  23422   2 0000D4  A800 0000 0000  01                   LDR,R2   IN_PKTHDR
          2 0000D7  A570 0FFF                            AND,R2   4095,IMO
          2 0000D9  AF47 0028                            STR,R2   LCN,AUTO

     1356    23423    2             IF LCN = 0

  23423   2 0000DB  2981 00CE                            BNEZ,R2  s:23528,PREL

     1357    23424    2                THEN  /*                Check for restart stuff  */
     1358    23425    3                   DO;

     1359    23426
     1360    23427    3                      IF IN_PKTHDR.D_BIT OR IN_PKTHDR.Q_BIT

  23427   2 0000DD  8280 0000 0000  01                   LB,'4000'X        IN_PKTHDR
  23427   2 0000E0       4000
          2 0000E1  0501 0006                            BBT      s:23430,PREL
          2 0000E3  8980 0000 0000  01                   CMZ      IN_PKTHDR
          2 0000E6  0881 000C                            BAGE     s:23437,PREL

     1361    23428    3                         THEN  /*       Bad GFI for LCN 0  */
     1362    23429    4                            DO;

     1363    23430    4                               ERCOD = BAD_LCN0_GFI ;

  23430   2 0000E8  8C80 0000 03AC  00                   LDI      BAD_LCN0_GFI
          2 0000EB  8D47 0022                            SDI      ERCOD,AUTO

     1364    23431    4   LER1:
     1365    23432    4                               CALL Y$ER2 ;

  23432   2 0000ED  E3C0 27B9            LER1            LNJ,B6   s:0,PREL
          2 0000EF       0001                            DC       s:23434,PREL

     1366    23433
     1367    23434    4                               RETURN;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:248  
  23434   2 0000F0  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1368    23435    4                            END;
     1369    23436
     1370    23437    3                      IF (IN_PKTHDR.TYPE ~= %Y_ID_RESTART#)

  23437   2 0000F3  B970 00FB                            CMR,R3   251,IMO
          2 0000F5  0901 000B                            BE       s:23446,PREL
          2 0000F7  B970 00FF                            CMR,R3   255,IMO
          2 0000F9  0901 0007                            BE       s:23446,PREL

     1371    23438    3                         AND (IN_PKTHDR.TYPE ~= %Y_ID_RESTART_C#)
     1372    23439    3                         THEN  /*       Not valid on LCN 0  */
     1373    23440    4                            DO;

     1374    23441    4                               CALL Y$ER00 ;

  23441   2 0000FB  E3C0 274A                            LNJ,B6   s:0,PREL
          2 0000FD       0001                            DC       s:23443,PREL

     1375    23442
     1376    23443    4                               RETURN;

  23443   2 0000FE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1377    23444    4                            END;
     1378    23445
     1379    23446    3                      IF NOT(IN_PKTHDR.TYPE = %Y_ID_RESTART# AND (DATACNT = %L1

  23446   2 000101  B970 00FB                            CMR,R3   251,IMO
          2 000103  0981 0007                            BNE      s:23446+10,PREL
          2 000105  6D06                                 CMV,R6   6
          2 000106  0901 001C                            BE       s:23470,PREL
          2 000108  6D07                                 CMV,R6   7
          2 000109  0901 0019                            BE       s:23470,PREL
          2 00010B  B970 00FF                            CMR,R3   255,IMO
          2 00010D  0981 0004                            BNE      s:23451,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:249  
          2 00010F  6D05                                 CMV,R6   5
          2 000110  0901 0012                            BE       s:23470,PREL

     1380    23447    3                         OR DATACNT = %L2))
     1381    23448    3                         AND NOT(IN_PKTHDR.TYPE = %Y_ID_RESTART_C# AND DATACNT = %L0)
     1382    23449    3                         THEN  /*       Invalid length for restarts  */
     1383    23450    4                            DO;

     1384    23451    4                               ERCOD = RESTART_LNG ;

  23451   2 000112  8C80 0000 03B0  00                   LDI      RESTART_LNG
          2 000115  8D47 0022                            SDI      ERCOD,AUTO

     1385    23452    4                               S_VAL0 = IN_PKTHDR.TYPE ;

  23452   2 000117  BF47 0026                            STR,R3   S_VAL0,AUTO

     1386    23453    4                               S_VAL1 = KX$DATA.CNT ;

  23453   2 000119  9844 0007                            LDR,R1   7,B4
          2 00011B  9F47 0027                            STR,R1   S_VAL1,AUTO

     1387    23454    4                               CALL Y$ER1 ;

  23454   2 00011D  E3C0 2760                            LNJ,B6   s:0,PREL
          2 00011F       0001                            DC       s:23456,PREL

     1388    23455
     1389    23456    4                               RETURN;

  23456   2 000120  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1390    23457    4                            END;
     1391    23458
     1392    23459        /*
     1393    23460                                             It is a valid restart message.
     1394    23461                                             If we are already in a restart
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:250  
     1395    23462                                             process, it is now done.  If we
     1396    23463                                             aren't, we get to do one.
     1397    23464        */
     1398    23465                           %STOP_TIMER ( FPTN = KX$L2.T20TMR );

  23470   2 000123  BCC7 000C                            LDB,B3   L2$,AUTO
          2 000125  89C3 0051                            CMZ      81,B3
          2 000127  0881 0025                            BAGE     s:23474,PREL

  23470   2 000129  8843 0051                            LBF,'8000'X       81,B3
  23470   2 00012B       8000

  23470   2 00012C  8DC3 0048                            CMN      72,B3
          2 00012E  0981 0008                            BNE      s:23470+20,PREL

  23470   2 000130  9CC3 004A                            LDB,B1   74,B3
          2 000132  9F80 0000 0002  xsym                 STB,B1   KX_TMRBLK+2
          2 000135  0F81 0007                            B        s:23471,PREL

  23470   2 000137  9CC3 0048                            LDB,B1   72,B3
          2 000139  ECC3 004A                            LDB,B6   74,B3
          2 00013B  EFC1 0002                            STB,B6   2,B1

  23471   2 00013D  8DC3 004A                            CMN      74,B3
          2 00013F  0981 0008                            BNE      s:23471+11,PREL

  23471   2 000141  ECC3 0048                            LDB,B6   72,B3
          2 000143  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 000146  0F81 0006                            B        s:23474,PREL

  23471   2 000148  ECC3 004A                            LDB,B6   74,B3
          2 00014A  CCC3 0048                            LDB,B4   72,B3
          2 00014C  CF86                                 STB,B4   ,B6

     1399    23474    3                      IF KX$L2.FLG.RESTART

  23474   2 00014D  82C3 002E                            LB,'0008'X        46,B3
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:251  
  23474   2 00014F       0008
          2 000150  0581 001B                            BBF      s:23489,PREL

     1400    23475    3                         THEN  /*       Already in restart  */
     1401    23476    4                            DO;

     1402    23477    4                               KX$L2.FLG.RESTART = '0'B;

  23477   2 000152  8843 002E                            LBF,'0008'X       46,B3
  23477   2 000154       0008

     1403    23478    4                               IF IN_PKTHDR.TYPE = %Y_ID_RESTART#

  23478   2 000155  B970 00FB                            CMR,R3   251,IMO
          2 000157  0981 000F                            BNE      s:23485,PREL

     1404    23479    4                                  THEN  /*  Log it  */
     1405    23480    5                                     DO;

     1406    23481    5                                        ERCOD = RESTART ;

  23481   2 000159  8C80 0000 0384  00                   LDI      RESTART
          2 00015C  8D47 0022                            SDI      ERCOD,AUTO

     1407    23482    5                                        CALL Y$ER2 ;

  23482   2 00015E  E3C0 2748                            LNJ,B6   s:0,PREL
          2 000160       0001                            DC       s:23483,PREL

     1408    23483    5                                        KX_STATS_X25.RESTART_IN = KX_STATS_X25.
             23483                                                 RESTART_IN + 1;

  23483   2 000161  8A80 0000 0021  xsym                 INC      KX_STATS_X25+33
          2 000164  8E80 0000 0020  xsym                 CAD      KX_STATS_X25+32

     1409    23484    5                                     END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:252  
     1410    23485    4                               CALL Y$START_L3S;

  23485   2 000167  E3C0 1DDC                            LNJ,B6   s:0,PREL
          2 000169       0001                            DC       s:23486,PREL

     1411    23486    4                            END;

  23486   2 00016A  0F81 003C                            B        s:23520,PREL

     1412    23487    3                         ELSE  /*       New restart procedure  */
     1413    23488    4                            DO;

     1414    23489    4                               CALL Y$STOP_L3S;

  23489   2 00016C  E3C0 1E55                            LNJ,B6   s:0,PREL
          2 00016E       0001                            DC       s:23490,PREL

     1415    23490    4                               IF IN_PKTHDR.TYPE = %Y_ID_RESTART#

  23490   2 00016F  E280 0000 0001  01                   LLH,R6   IN_PKTHDR+1
          2 000172  E970 00FB                            CMR,R6   251,IMO
          2 000174  0981 0023                            BNE      s:23508,PREL

     1416    23491    4                                  THEN
     1417    23492    5                                     DO;

     1418    23493    5                                        ERCOD = NEW_RESTART ;

  23493   2 000176  8C80 0000 03C0  00                   LDI      NEW_RESTART
          2 000179  8D47 0022                            SDI      ERCOD,AUTO

     1419    23494    5                                        CALL Y$ER2 ;

  23494   2 00017B  E3C0 272B                            LNJ,B6   s:0,PREL
          2 00017D       0001                            DC       s:23495,PREL

     1420    23495    5                                        KX_STATS_X25.RESTART_IN = KX_STATS_X25.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:253  
             23495                                                 RESTART_IN + 1;

  23495   2 00017E  8A80 0000 0021  xsym                 INC      KX_STATS_X25+33
          2 000181  8E80 0000 0020  xsym                 CAD      KX_STATS_X25+32

     1421    23496    5                                        IF NOT KX$L2.FLG.OK

  23496   2 000184  ECC7 000C                            LDB,B6   L2$,AUTO
          2 000186  82C6 002E                            LB,'0800'X        46,B6
          2 000188       0800
          2 000189  0501 0006                            BBT      s:23501,PREL

     1422    23497    5                                           THEN
     1423    23498    5                                              KX$L2.FLG.RESTART_PEND = '1'B;

  23498   2 00018B  8946 002E                            LBT,'0004'X       46,B6
  23498   2 00018D       0004
          2 00018E  0F81 0018                            B        s:23520,PREL

     1424    23499    5                                           ELSE
     1425    23500    6                                              DO;

     1426    23501    6                                                 CALL Y$RESTART_C;

  23501   2 000190  E3C0 2149                            LNJ,B6   s:0,PREL
          2 000192       0001                            DC       s:23503,PREL

     1427    23502
     1428    23503    6                                                 CALL Y$START_L3S;

  23503   2 000193  E3C0 1DB0                            LNJ,B6   s:0,PREL
          2 000195       0001                            DC       s:23505,PREL

     1429    23504    6                                              END;

     1430    23505    5                                     END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:254  
  23505   2 000196  0F81 0010                            B        s:23520,PREL

     1431    23506    4                                  ELSE  /*  Invalid RESTART_C  */
     1432    23507    5                                     DO;

     1433    23508    5                                        ERCOD = INV_RESTART_C ;

  23508   2 000198  8C80 0000 03C2  00                   LDI      INV_RESTART_C
          2 00019B  8D47 0022                            SDI      ERCOD,AUTO

     1434    23509    5                                        CALL Y$ER ;

  23509   2 00019D  E3C0 2731                            LNJ,B6   s:0,PREL
          2 00019F       0001                            DC       s:23511,PREL

     1435    23510
     1436    23511    5                                        OUT_PKTHDR.DIAG = %KX_RES_DIAG_R1#;

  23511   2 0001A0  6C11                                 LDV,R6   17
          2 0001A1  E780 0000 0005  01                   STH,R6   OUT_PKTHDR+2

     1437    23512    5                                        CALL Y$RESTART;

  23512   2 0001A4  E3C0 2125                            LNJ,B6   s:0,PREL
          2 0001A6       0001                            DC       s:23520,PREL

     1438    23513    5                                     END;

     1439    23514    4                            END;  /*  IF on RESTART flag  */

     1440    23515
     1441    23516        /*
     1442    23517                                             However we ended up here, we
     1443    23518                                             are done processing this call.
     1444    23519        */
     1445    23520    3                      RETURN;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:255  
  23520   2 0001A7  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1446    23521    3                   END;  /*  IF on LCN 0  */
     1447    23522        /*
     1448    23523                                             If the restart flag is set, then
     1449    23524                                             all incoming packets are ignored
     1450    23525                                             (until the restart is done).
     1451    23526        */
     1452    23527
     1453    23528    2             IF KX$L2.FLG.RESTART OR KX$L2.FLG.RESTART_PEND THEN RETURN;

  23528   2 0001AA  BCC7 000C                            LDB,B3   L2$,AUTO
          2 0001AC  82C3 002E                            LB,'0008'X        46,B3
          2 0001AE       0008
          2 0001AF  0501 0006                            BBT      s:23528+12,PREL
          2 0001B1  82C3 002E                            LB,'0004'X        46,B3
          2 0001B3       0004
          2 0001B4  0581 0004                            BBF      s:23539,PREL

  23528   2 0001B6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1454    23529
     1455    23530        /*
     1456    23531                                             Find the L3 context block for
     1457    23532                                             this LCN.  If there isn't one, it
     1458    23533                                             is an error for anything but a
     1459    23534                                             Call packet.  In any case, just
     1460    23535                                             get a context block and let the
     1461    23536                                             state table take care of it.
     1462    23537        */
     1463    23538
     1464    23539    2             L3$ = KX$L2.L3_HEAD$;

  23539   2 0001B9  9CC3 0034                            LDB,B1   52,B3
          2 0001BB  9FC7 0008                            STB,B1   L3$,AUTO

     1465    23540    3   GET_L3:   DO WHILE ( L3$ ~= ADDR(NIL) );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:256  

  23540   2 0001BD  0F81 000E            GET_L3          B        s:23546,PREL

     1466    23541
     1467    23542    3                IF ( KX$L3.LCN# = LCN )

  23542   2 0001BF  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0001C1  E846 002A                            LDR,R6   42,B6
          2 0001C3  E570 0FFF                            AND,R6   4095,IMO
          2 0001C5  E947 0028                            CMR,R6   LCN,AUTO
          2 0001C7  0901 0007                            BE       s:23548,PREL

     1468    23543    3                   THEN EXIT GET_L3;  /*  Found a match  */
     1469    23544    3                L3$ = KX$L3.NEXT$;

  23544   2 0001C9  DC86                                 LDB,B5   ,B6
          2 0001CA  DFC7 0008                            STB,B5   L3$,AUTO

     1470    23545
     1471    23546    3             END GET_L3;

  23546   2 0001CC  8DC7 0008                            CMN      L3$,AUTO
          2 0001CE  09F1                                 BNE      s:23542,SPREL

     1472    23547
     1473    23548    2             IF L3$ = ADDR(NIL)

  23548   2 0001CF  8DC7 0008                            CMN      L3$,AUTO
          2 0001D1  0981 0059                            BNE      s:23575,PREL

     1474    23549    2                THEN  /*             New LCN - get a context block  */
     1475    23550    3                   DO;

     1476    23551    3                      IF IN_PKTHDR.TYPE ~= %Y_ID_CALL#

  23551   2 0001D3  E280 0000 0001  01                   LLH,R6   IN_PKTHDR+1
          2 0001D6  6D0B                                 CMV,R6   11
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:257  
          2 0001D7  0901 0008                            BE       s:23557,PREL

     1477    23552    3                         THEN
     1478    23553    4                            DO;

     1479    23554    4                               ERCOD = UNKLCN;

  23554   2 0001D9  8C80 0000 03D8  00                   LDI      UNKLCN
          2 0001DC  8D47 0022                            SDI      ERCOD,AUTO

     1480    23555    4                               GOTO LER1;

  23555   2 0001DE  0F81 FF0E                            B        s:23432,PREL

     1481    23556    4                            END;
     1482    23557    3                      CALL_FPT.CAL$ = L2$;

  23557   2 0001E0  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0001E2  EFC7 0013                            STB,B6   CALL_FPT+1,AUTO

     1483    23558    3                      CALL KXS$GETL3 ( CALL_FPT.CAL$, TEMP2$ )

  23558   2 0001E4  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 0001E6  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 0001E8  CBC7 0013                            LAB,B4   CALL_FPT+1,AUTO
          2 0001EA  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 0001EC  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0001EE  CBF0 0200                            LAB,B4   512,IMO
          2 0001F0  E380 0000 0000  xent                 LNJ,B6   KXS$GETL3
          2 0001F3       0003                            DC       s:23560,PREL
          2 0001F4  0F81 000C                            B        s:23565,PREL

     1484    23559    3                         WHENALTRETURN
     1485    23560    4                            DO;

     1486    23561    4   L_NO_MEM:                   ERCOD = NO_L3CTX;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:258  
  23561   2 0001F6  8C80 0000 03B2  00   L_NO_MEM        LDI      NO_L3CTX
          2 0001F9  8D47 0022                            SDI      ERCOD,AUTO

     1487    23562    4                               CALL Y$ER;

  23562   2 0001FB  E3C0 26D3                            LNJ,B6   s:0,PREL
          2 0001FD       0001                            DC       s:23563,PREL

     1488    23563    4                               RETURN;

  23563   2 0001FE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1489    23564    4                            END;
     1490    23565    3                      L3$ = TEMP2$;

  23565   2 000201  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 000203  EFC7 0008                            STB,B6   L3$,AUTO

     1491    23566    3                      KX$L3.LCN# = IN_PKTHDR.LCN#;

  23566   2 000205  E800 0000 0000  01                   LDR,R6   IN_PKTHDR
          2 000208  EAC6 002A                            SRM,R6,'0FFF'X    42,B6
          2 00020A       0FFF

     1492    23567    3                      TERMID = KX$L1.CHN$ -> KH$CHN.TERMID;

  23567   2 00020B  DCC7 000C                            LDB,B5   L2$,AUTO
          2 00020D  CCC5 0002                            LDB,B4   2,B5
          2 00020F  AB84                                 LAB,B2   ,B4
          2 000210  2C24                                 LDV,R2   36
          2 000211  6C10                                 LDV,R6   16
          2 000212  BBC7 0046                            LAB,B3   TERMID,AUTO
          2 000214  3C00                                 LDV,R3   0
          2 000215  0008                                 MMM

     1493    23568    3                      TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:259  
  23568   2 000216  6C03                                 LDV,R6   3
          2 000217  EAC7 0046                            SRM,R6,'00FF'X    TERMID,AUTO
          2 000219       00FF

     1494    23569    3                      TERMID.TERM.SUBDEVICE = 0;

  23569   2 00021A  8747 0048                            CL       TERMID+2,AUTO

     1495    23570    3                      TERMID.TERM.SUBSUBDEVICE = KX$L3.LCN#;

  23570   2 00021C  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00021E  D846 002A                            LDR,R5   42,B6
          2 000220  D570 0FFF                            AND,R5   4095,IMO
          2 000222  DF47 0049                            STR,R5   TERMID+3,AUTO

     1496    23571    3                      TERMID.TTYP = %KLTY_VIRCIR#;

  23571   2 000224  4C08                                 LDV,R4   8
          2 000225  C7C7 0046                            STH,R4   TERMID,AUTO

     1497    23572    3                      KX$L3.TYP = %KX_VC_TYP_RMT#;

  23572   2 000227  EF46 0013                            STR,R6   19,B6

     1498    23573    3                   END;

  23573   2 000229  0F81 0007                            B        s:23582,PREL

     1499    23574    2                ELSE
     1500    23575    2                   CM$ = KX$L3.CM$;

  23575   2 00022B  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00022D  DCC6 0004                            LDB,B5   4,B6
          2 00022F  DFC7 000A                            STB,B5   CM$,AUTO

     1501    23576        /*
     1502    23577                                             Have WHAT_TYPE figure out the
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:260  
     1503    23578                                             packet type, as well as doing
     1504    23579                                             all the necessary validation.
     1505    23580        */
     1506    23581
     1507    23582    2             L3EXT = BITBIN(KX$L3.EXTSEQ);

  23582   2 000231  E846 0029                            LDR,R6   41,B6
          2 000233  6045                                 SOR,R6   5
          2 000234  E570 0001                            AND,R6   1,IMO
          2 000236  EF47 003E                            STR,R6   L3EXT,AUTO

     1508    23583    2             IF DATACNT-%L0-L3EXT > KX_BUF.SIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ )

  23583   2 000238  E247 003F                            SUB,R6   DATACNT,AUTO
          2 00023A  B2C6 0014                            LLH,R3   20,B6
          2 00023C  8256                                 NEG      R6
          2 00023D  6EFB                                 ADV,R6   -5
          2 00023E  6801 000B                            BLZ,R6   s:23587,PREL
          2 000240  E930 0000 001E  xsym                 CMR,R6   KX_BUF+30,R3
          2 000243  0381 0006                            BLE      s:23587,PREL

     1509    23584    2                THEN
     1510    23585    2                   PEVENT = %Y_EV_UNK_TYPE#;

  23585   2 000245  6C15                                 LDV,R6   21
          2 000246  EF47 002C                            STR,R6   PEVENT,AUTO
          2 000248  0F81 0013                            B        s:23595,PREL

     1511    23586    2                ELSE
     1512    23587    2                   IF DATACNT < %L0

  23587   2 00024A  E847 003F                            LDR,R6   DATACNT,AUTO
          2 00024C  6D05                                 CMV,R6   5
          2 00024D  0281 0006                            BGE      s:23591,PREL

     1513    23588    2                      THEN
     1514    23589    2                         PEVENT = %Y_EV_SHR_PKT#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:261  

  23589   2 00024F  5C1A                                 LDV,R5   26
          2 000250  DF47 002C                            STR,R5   PEVENT,AUTO
          2 000252  0F81 0009                            B        s:23595,PREL

     1515    23590    2                      ELSE
     1516    23591    2                         CALL Y$WHAT_TYPE WHENALTRETURN

  23591   2 000254  E3C0 11F1                            LNJ,B6   s:0,PREL
          2 000256       0003                            DC       s:23593,PREL
          2 000257  0F81 0004                            B        s:23595,PREL

     1517    23592    3                               DO;

     1518    23593    3                                  RETURN;

  23593   2 000259  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1519    23594    3                               END;
     1520    23595    2             IF KX$L3.CHN$ = ADDR(NIL)

  23595   2 00025C  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00025E  8DC6 0006                            CMN      6,B6
          2 000260  0981 042A                            BNE      s:24054,PREL

     1521    23596    2                THEN
     1522    23597    3                   DO;

     1523    23598        /*
     1524    23599          TERMID has been setup either above or in Y$WHAT_TYPE
     1525    23600        */
     1526    23601    3                      CALL KHA$GET_CTX_PTR ( TERMID, KX$L3.CHN$ )

  23601   2 000262  DBC6 0006                            LAB,B5   6,B6
          2 000264  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 000266  CBC7 0046                            LAB,B4   TERMID,AUTO
          2 000268  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:262  
          2 00026A  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00026C  CBF0 0200                            LAB,B4   512,IMO
          2 00026E  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          2 000271       0008                            DC       s:23608,PREL

     1527    23602    3                         WHENRETURN
     1528    23603    4                            DO;

     1529    23604    4                               KX$L3.RLSCHN = '0'B;

  23604   2 000272  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000274  8846 0029                            LBF,'0400'X       41,B6
          2 000276       0400

     1530    23605    4                            END;

  23605   2 000277  0F81 0049                            B        s:23620,PREL

     1531    23606    3                         WHENALTRETURN
     1532    23607    4                            DO;

     1533    23608    4                               CALL KVB$GETSYS ( SIZEW ( KH$CHN ), KX$L3.CHN$ )

  23608   2 000279  EBF0 0020                            LAB,B6   32,IMO
          2 00027B  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00027D  CBC5 0006                            LAB,B4   6,B5
          2 00027F  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 000281  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 000283  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000285  CBF0 0200                            LAB,B4   512,IMO
          2 000287  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          2 00028A       0003                            DC       s:23611,PREL
          2 00028B  0F81 0010                            B        s:23615,PREL

     1534    23609    4                                  WHENALTRETURN
     1535    23610    5                                     DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:263  
     1536    23611    5                                        L3$->KVB_SIZ = SIZEW(KX$L3);

  23611   2 00028D  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00028F  E870 0091                            LDR,R6   145,IMO
          2 000291  EF06                                 STR,R6   ,B6

     1537    23612    5                                        CALL KVB$RLSSYS ( KX$L3 );

  23612   2 000292  BBC7 0008                            LAB,B3   L3$,AUTO
          2 000294  CBF0 0100                            LAB,B4   256,IMO
          2 000296  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 000299       0001                            DC       s:23613,PREL

     1538    23613    5                                        GOTO L_NO_MEM;

  23613   2 00029A  0F81 FF5B                            B        s:23560,PREL

     1539    23614    5                                     END;
     1540    23615    4                               KX$L3.RLSCHN = '1'B;

  23615   2 00029C  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00029E  8946 0029                            LBT,'0400'X       41,B6
          2 0002A0       0400

     1541    23616    4                               KX$L3.CHN$ -> KH$CHN = KX$L1.CHN$ -> KH$CHN;

  23616   2 0002A1  DCC6 0006                            LDB,B5   6,B6
          2 0002A3  CCC7 000C                            LDB,B4   L2$,AUTO
          2 0002A5  BCC4 0002                            LDB,B3   2,B4
          2 0002A7  AB83                                 LAB,B2   ,B3
          2 0002A8  2C00                                 LDV,R2   0
          2 0002A9  6C40                                 LDV,R6   64
          2 0002AA  BB85                                 LAB,B3   ,B5
          2 0002AB  3C00                                 LDV,R3   0
          2 0002AC  0008                                 MMM

     1542    23617    4                               KX$L3.CHN$ -> KH$CHN.TERMID = TERMID;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:264  

  23617   2 0002AD  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0002AF  CCC6 0006                            LDB,B4   6,B6
          2 0002B1  ABC7 0046                            LAB,B2   TERMID,AUTO
          2 0002B3  2C00                                 LDV,R2   0
          2 0002B4  6C10                                 LDV,R6   16
          2 0002B5  BB84                                 LAB,B3   ,B4
          2 0002B6  3C24                                 LDV,R3   36
          2 0002B7  0008                                 MMM

     1543    23618    4                               KX$L3.CHN$ -> KH$CHN.SUB$ = ADDR(NIL);

  23618   2 0002B8  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0002BA  ACC6 0006                            LDB,B2   6,B6
          2 0002BC  9B80 0000 0000                       LAB,B1   0
          2 0002BF  9FC2 001A                            STB,B1   26,B2

     1544    23619    4                            END;

     1545    23620    3                      KX$L3.CHN$ -> KH$CHN.CTX$ = L3$;

  23620   2 0002C1  DCC6 0006                            LDB,B5   6,B6
          2 0002C3  EFC5 000C                            STB,B6   12,B5

     1546    23621        /*
     1547    23622           send enable and connect to KHA to put channel table in right state
     1548    23623        */
     1549    23624    3                      IF NOT KX$L3.RLSCHN

  23624   2 0002C5  82C6 0029                            LB,'0400'X        41,B6
  23624   2 0002C7       0400
          2 0002C8  0501 03C2                            BBT      s:24054,PREL

     1550    23625    3                         THEN
     1551    23626    4                            DO;

     1552    23627    4                               CODE = %KHA_FNC_ENABLE;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:265  

  23627   2 0002CA  6C01                                 LDV,R6   1
          2 0002CB  EF47 0029                            STR,R6   CODE,AUTO

     1553    23628    4                               CALL Y$DVCADM;

  23628   2 0002CD  E3C0 2711                            LNJ,B6   s:0,PREL
          2 0002CF       0001                            DC       s:23629,PREL

     1554    23629    4                               CODE = %KHA_FNC_CONNECT;

  23629   2 0002D0  6C0E                                 LDV,R6   14
          2 0002D1  EF47 0029                            STR,R6   CODE,AUTO

     1555    23630    4                               CALL Y$DVCADM;

  23630   2 0002D3  E3C0 270B                            LNJ,B6   s:0,PREL
          2 0002D5       0001                            DC       s:23632,PREL

     1556    23631    4                            END;

     1557    23632    3                   END;

  23632   2 0002D6  0F81 03B4                            B        s:24054,PREL

     1558    23633
     1559    23634    2          CASE ( %KX_P_EV_TO# );

     1560    23635        /*
     1561    23636                                             Clock time-out.
     1562    23637        */
     1563    23638    2             PEVENT = %Y_EV_TO#;

  23638   2 0002D8  3C19                                 LDV,R3   25
          2 0002D9  BF47 002C                            STR,R3   PEVENT,AUTO
          2 0002DB  0F81 03AF                            B        s:24054,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:266  
     1564    23639
     1565    23640    2          CASE ( %KX_P_EV_DATTMR# );

     1566    23641        /*
     1567    23642           A data packet timer expired. If we are in data state, the appropriate
     1568    23643           action to take is in KX$L3.TOACT
     1569    23644        */
     1570    23645    2             IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND NOT KX$L3.RNR

  23645   2 0002DD  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0002DF  C2C5 0031                            LLH,R4   49,B5
          2 0002E1  4D09                                 CMV,R4   9
          2 0002E2  0901 0009                            BE       s:23648,PREL
          2 0002E4  82C5 0029                            LB,'0800'X        41,B5
          2 0002E6       0800
          2 0002E7  0501 0004                            BBT      s:23648,PREL

     1571    23646    2                THEN
     1572    23647    2                   RETURN;

  23647   2 0002E9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1573    23648    3             DO CASE ( KX$L3.TOACT );

  23648   2 0002EC  92C5 0075                            LLH,R1   117,B5
          2 0002EE  1D05                                 CMV,R1   5
          2 0002EF  0281 039B                            BGE      s:24054,PREL
          2 0002F1  B810 0000 02F7  02                   LDR,R3   s:23648+11,R1
          2 0002F4  83B0 0000 02FC  02                   JMP      s:23651,R3
          2 0002F7       0028                            DC       s:23666,PREL
          2 0002F8       0000                            DC       s:23651,PREL
          2 0002F9       000C                            DC       s:23658,PREL
          2 0002FA       000C                            DC       s:23658,PREL
          2 0002FB       000C                            DC       s:23658,PREL

     1574    23649    3                CASE ( %KX_L3_TOACT_NULL# );

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:267  
     1575    23650    3                CASE ( %KX_L3_TOACT_CALLCM# );

     1576    23651    3                   IF CM$ ~= ADDR(NIL)

  23651   2 0002FC  8DC7 000A                            CMN      CM$,AUTO
          2 0002FE  0901 038C                            BE       s:24054,PREL

     1577    23652    3                      THEN
     1578    23653    4                         DO;

     1579    23654    4                            CALL_FPT.EVN = %KX_CM_EV_DATA_TO#;

  23654   2 000300  2C11                                 LDV,R2   17
          2 000301  AF47 0012                            STR,R2   CALL_FPT,AUTO

     1580    23655    4                            CALL Y$CNCMNG;

  23655   2 000303  E3C0 0EC2                            LNJ,B6   s:0,PREL
          2 000305       0001                            DC       s:23656,PREL

     1581    23656    4                         END;

  23656   2 000306  0F81 0384                            B        s:24054,PREL

     1582    23657    3                CASE ( %KX_L3_TOACT_RST#,%KX_L3_TOACT_RSTRTR#,%KX_L3_TOACT_CLR# );

     1583    23658    3                   CALL_FPT.CAL$ = CM$;

  23658   2 000308  CCC7 000A                            LDB,B4   CM$,AUTO
          2 00030A  CFC7 0013                            STB,B4   CALL_FPT+1,AUTO

     1584    23659    3                   CALL_FPT.RCV$ = L3$;

  23659   2 00030C  DFC7 0015                            STB,B5   CALL_FPT+3,AUTO

     1585    23660    3                   IF PEVENT = %KX_L3_TOACT_CLR#

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:268  
  23660   2 00030E  6D04                                 CMV,R6   4
          2 00030F  0981 0006                            BNE      s:23664,PREL

     1586    23661    3                      THEN
     1587    23662    3                         CALL_FPT.EVN = %KX_P_EV_VCLST#;

  23662   2 000311  2C09                                 LDV,R2   9
          2 000312  AF47 0012                            STR,R2   CALL_FPT,AUTO
          2 000314  0F81 0004                            B        s:23665,PREL

     1588    23663    3                      ELSE
     1589    23664    3                         CALL_FPT.EVN = %KX_P_EV_VCRST#;

  23664   2 000316  2C0A                                 LDV,R2   10
          2 000317  AF47 0012                            STR,R2   CALL_FPT,AUTO

     1590    23665    3                   CALL KXP$PACKET ( CALL_FPT );

  23665   2 000319  BBC7 0012                            LAB,B3   CALL_FPT,AUTO
          2 00031B  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 00031D  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00031F  CBF0 0100                            LAB,B4   256,IMO
          2 000321  E3C0 FCDE                            LNJ,B6   s:13,PREL
          2 000323       0001                            DC       s:23666,PREL

     1591    23666    3             END;

  23666   2 000324  0F81 0366                            B        s:24054,PREL

     1592    23667    2          CASE ( %KX_P_EV_START# );

     1593    23668        /*
     1594    23669                                             START means that a restart
     1595    23670                                             procedure has been completed.
     1596    23671        */
     1597    23672    2             PEVENT = %Y_EV_START#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:269  
  23672   2 000326  8747 002C                            CL       PEVENT,AUTO
          2 000328  0F81 0362                            B        s:24054,PREL

     1598    23673
     1599    23674    2          CASE ( %KX_P_EV_STOP# );

     1600    23675        /*
     1601    23676                                             STOP means that either a restart
     1602    23677                                             procedure is starting, or the
     1603    23678                                             Frame level needs to go thru
     1604    23679                                             set-up procedures again.
     1605    23680        */
     1606    23681    2             PEVENT = %Y_EV_STOP#;

  23681   2 00032A  3C01                                 LDV,R3   1
          2 00032B  BF47 002C                            STR,R3   PEVENT,AUTO
          2 00032D  0F81 035D                            B        s:24054,PREL

     1607    23682
     1608    23683    2          CASE ( %KX_P_EV_DIED# );

     1609    23684        /*
     1610    23685                                             DIED means go away - the Frame
     1611    23686                                             level is also going away.
     1612    23687        */
     1613    23688    2             PEVENT = %Y_EV_DIED#;

  23688   2 00032F  3C02                                 LDV,R3   2
          2 000330  BF47 002C                            STR,R3   PEVENT,AUTO
          2 000332  0F81 0358                            B        s:24054,PREL

     1614    23689
     1615    23690    2          CASE ( %KX_P_EV_ENB# );

     1616    23691        /*
     1617    23692                                             ENABLE from handler common.
     1618    23693                                             The VC can be used.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:270  
     1619    23694        */
     1620    23695    2             PEVENT = %Y_EV_ENABLE#;

  23695   2 000334  3C03                                 LDV,R3   3
          2 000335  BF47 002C                            STR,R3   PEVENT,AUTO

     1621    23696    2   L_CHKL3:  IF L3$ = ADDR(NIL)

  23696   2 000337  8DC7 0008            L_CHKL3         CMN      L3$,AUTO
          2 000339  0981 0351                            BNE      s:24054,PREL

     1622    23697    2                THEN
     1623    23698    2                   RETURN;

  23698   2 00033B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1624    23699
     1625    23700    2          CASE ( %KX_P_EV_DSC# );

     1626    23701        /*
     1627    23702                                             Disconnect from handler common.
     1628    23703                                             Force the VC thru a clear
     1629    23704                                             procedure.
     1630    23705        */
     1631    23706    2             PEVENT = %Y_EV_DISCONNECT#;

  23706   2 00033E  3C04                                 LDV,R3   4
          2 00033F  BF47 002C                            STR,R3   PEVENT,AUTO

     1632    23707    2             GOTO L_CHKL3;

  23707   2 000341  0FF6                                 B        s:23696,SPREL

     1633    23708
     1634    23709    2          CASE ( %KX_P_EV_DSB# );

     1635    23710        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:271  
     1636    23711                                             DISABLE from handler common.
     1637    23712                                             Stop using a VC.
     1638    23713        */
     1639    23714    2             PEVENT = %Y_EV_DISABLE#;

  23714   2 000342  3C05                                 LDV,R3   5
          2 000343  BF47 002C                            STR,R3   PEVENT,AUTO

     1640    23715    2             GOTO L_CHKL3;

  23715   2 000345  0FF2                                 B        s:23696,SPREL

     1641    23716
     1642    23717    2          CASE ( %KX_P_EV_KLL# );

     1643    23718        /*
     1644    23719                                             KILL from handler common.  Since
     1645    23720                                             VC disconnection is immediate,
     1646    23721                                             tell handler common the VC has
     1647    23722                                             disconnected, and the resulting
     1648    23723                                             DISABLE call will do the work.
     1649    23724        */
     1650    23725    2             CODE = %KHA_FNC_DISCONNECT_EVT ;

  23725   2 000346  4C0C                                 LDV,R4   12
          2 000347  CF47 0029                            STR,R4   CODE,AUTO

     1651    23726    2             CALL Y$DVCADM;

  23726   2 000349  E3C0 2695                            LNJ,B6   s:0,PREL
          2 00034B       0001                            DC       s:23727,PREL

     1652    23727    2             RETURN;

  23727   2 00034C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1653    23728
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:272  
     1654    23729    2          CASE ( %KX_P_EV_VCUP# );

     1655    23730    2             IF KX$L3.FSTSLC = %KX_FSTSLC_RST# AND KX$L3.STATE.CURRENT = %
             23730                      Y_ST_CALL_RQS#

  23730   2 00034F  DCC7 0008                            LDB,B5   L3$,AUTO
          2 000351  C845 0029                            LDR,R4   41,B5
          2 000353  4046                                 SOR,R4   6
          2 000354  C570 0003                            AND,R4   3,IMO
          2 000356  4D03                                 CMV,R4   3
          2 000357  0981 000B                            BNE      s:23737,PREL
          2 000359  92C5 0031                            LLH,R1   49,B5
          2 00035B  1D04                                 CMV,R1   4
          2 00035C  0981 0006                            BNE      s:23737,PREL

     1656    23731    2                THEN
     1657    23732        /*
     1658    23733           It's a fast select VC with restriction on response. Have to clear it.
     1659    23734        */
     1660    23735    2                   PEVENT = %Y_EV_VCLST#;

  23735   2 00035E  3C09                                 LDV,R3   9
          2 00035F  BF47 002C                            STR,R3   PEVENT,AUTO
          2 000361  0F81 0004                            B        s:23744,PREL

     1661    23736    2                ELSE
     1662    23737    2                   PEVENT = %Y_EV_VCUP#;

  23737   2 000363  3C06                                 LDV,R3   6
          2 000364  BF47 002C                            STR,R3   PEVENT,AUTO

     1663    23738        /*
     1664    23739                                             VCUP from CM.  This might be on
     1665    23740                                             the same thread as the initial
     1666    23741                                             call to CM for this VC, so check
     1667    23742                                             before validating CM$.
     1668    23743        */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:273  
     1669    23744    2   L_CHKCM$: IF L3$ = KX_CALLING_CM$

  23744   2 000366  ECC7 0008            L_CHKCM$        LDB,B6   L3$,AUTO
          2 000368  ED80 0000 0000  xsym                 CMB,B6   KX_CALLING_CM$
          2 00036B  0981 000D                            BNE      s:23751,PREL

     1670    23745    2                THEN  /*                It is on the same thread  */
     1671    23746    3                   DO;

     1672    23747    3                      KX$L3.CM$ = FPT_X25.CAL$;

  23747   2 00036D  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          2 00036F  CCC5 0001                            LDB,B4   1,B5
          2 000371  CFC6 0004                            STB,B4   4,B6

     1673    23748    3                      CM$ = FPT_X25.CAL$;

  23748   2 000373  BCC5 0001                            LDB,B3   1,B5
          2 000375  BFC7 000A                            STB,B3   CM$,AUTO

     1674    23749    3                   END;

  23749   2 000377  0F81 0313                            B        s:24054,PREL

     1675    23750    2                ELSE  /*                Validate the CM$  */
     1676    23751    2                   IF CM$ ~= FPT_X25.CAL$

  23751   2 000379  DCC7 000A                            LDB,B5   CM$,AUTO
          2 00037B  CCC7 0004                            LDB,B4   @FPT_X25,AUTO
          2 00037D  DDC4 0001                            CMB,B5   1,B4
          2 00037F  0901 030B                            BE       s:24054,PREL

     1677    23752    2                      THEN  /*          Invalid - SCREECH  */
     1678    23753    3                         DO;

     1679    23754        /*S* SCREECH_CODE: KXP-S$KX_BADCTXPTR#
     1680    23755             MESSAGE: L3's pointer to MLC does not match MLC's pointer to L3.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:274  
     1681    23756        */
     1682    23757    3                            CALL KHD$SCREECH (Y_BADCTXPTR);

  23757   2 000381  BB80 0000 0000  03                   LAB,B3   0
          2 000384  CBF0 0100                            LAB,B4   256,IMO
          2 000386  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000389       0001                            DC       s:23758,PREL

     1683    23758    3                         END;

  23758   2 00038A  0F81 0300                            B        s:24054,PREL

     1684    23759
     1685    23760    2          CASE ( %KX_P_EV_VCDWN# );

     1686    23761        /*
     1687    23762                                             VCDWN from CM. VCDWN does not make sense
     1688    23763                                             for a remote VC so change to VCLST.
     1689    23764                                             Again, check for the same thread before
     1690    23765                                             doing the validation.
     1691    23766        */
     1692    23767    2             IF KX$L3.CHN$->KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#

  23767   2 00038C  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00038E  CCC5 0006                            LDB,B4   6,B5
          2 000390  C844 0012                            LDR,R4   18,B4
          2 000392  C570 00FF                            AND,R4   255,IMO
          2 000394  4D02                                 CMV,R4   2
          2 000395  0981 0006                            BNE      s:23771,PREL

     1693    23768    2                THEN
     1694    23769    2                   PEVENT = %Y_EV_VCDWN#;

  23769   2 000397  3C08                                 LDV,R3   8
          2 000398  BF47 002C                            STR,R3   PEVENT,AUTO
          2 00039A  0F81 0004                            B        s:23772,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:275  
     1695    23770    2                ELSE
     1696    23771    2                   PEVENT = %Y_EV_VCLST#;

  23771   2 00039C  3C09                                 LDV,R3   9
          2 00039D  BF47 002C                            STR,R3   PEVENT,AUTO

     1697    23772    2             GOTO L_CHKCM$;

  23772   2 00039F  0FC7                                 B        s:23744,SPREL

     1698    23773
     1699    23774    2          CASE ( %KX_P_EV_VCLST# );

     1700    23775        /*
     1701    23776                                             VCLST from CM.  Again, check for
     1702    23777                                             the same thread before doing the
     1703    23778                                             validation.
     1704    23779        */
     1705    23780    2             PEVENT = %Y_EV_VCLST#;

  23780   2 0003A0  3C09                                 LDV,R3   9
          2 0003A1  BF47 002C                            STR,R3   PEVENT,AUTO

     1706    23781    2             GOTO L_CHKCM$;

  23781   2 0003A3  0FC3                                 B        s:23744,SPREL

     1707    23782
     1708    23783    2          CASE ( %KX_P_EV_VCRST# );

     1709    23784        /*
     1710    23785                                             VCRST from CM.  Again, check for
     1711    23786                                             the same thread before doing the
     1712    23787                                             validation.
     1713    23788        */
     1714    23789    2             PEVENT = %Y_EV_VCRST#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:276  
  23789   2 0003A4  3C07                                 LDV,R3   7
          2 0003A5  BF47 002C                            STR,R3   PEVENT,AUTO

     1715    23790    2             GOTO L_CHKCM$;

  23790   2 0003A7  0F81 FFBE                            B        s:23744,PREL

     1716    23791
     1717    23792    2          CASE ( %KX_P_EV_DATAVL# );

     1718    23793        /*
     1719    23794                                             DATA from CM.  Mark the L3
     1720    23795                                             context, and check to see if
     1721    23796                                             a call to generate output is
     1722    23797                                             needed.
     1723    23798        */
     1724    23799    2             KX$L3.DATA = '1'B;

  23799   2 0003A9  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0003AB  8945 0029                            LBT,'8000'X       41,B5
          2 0003AD       8000

     1725    23800    2             IF L3$ = KX_CALLING_CM$

  23800   2 0003AE  DD80 0000 0000  xsym                 CMB,B5   KX_CALLING_CM$
          2 0003B1  0981 000B                            BNE      s:23807,PREL

     1726    23801    2                THEN  /*                It is on the same thread  */
     1727    23802    3                   DO;

     1728    23803    3                      KX$L3.CM$ = FPT_X25.CAL$;

  23803   2 0003B3  CCC6 0001                            LDB,B4   1,B6
          2 0003B5  CFC5 0004                            STB,B4   4,B5

     1729    23804    3                      CM$ = FPT_X25.CAL$;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:277  
  23804   2 0003B7  BCC6 0001                            LDB,B3   1,B6
          2 0003B9  BFC7 000A                            STB,B3   CM$,AUTO

     1730    23805    3                   END;

  23805   2 0003BB  0F81 0010                            B        s:23814,PREL

     1731    23806    2                ELSE  /*                Validate the CM$  */
     1732    23807    2                   IF CM$ ~= FPT_X25.CAL$

  23807   2 0003BD  CCC7 000A                            LDB,B4   CM$,AUTO
          2 0003BF  CDC6 0001                            CMB,B4   1,B6
          2 0003C1  0901 000A                            BE       s:23814,PREL

     1733    23808    2                      THEN  /*          Invalid - SCREECH  */
     1734    23809    3                         DO;

     1735    23810    3                            CALL KHD$SCREECH (Y_BADCTXPTR);

  23810   2 0003C3  BB80 0000 0000  03                   LAB,B3   0
          2 0003C6  CBF0 0100                            LAB,B4   256,IMO
          2 0003C8  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0003CB       0001                            DC       s:23814,PREL

     1736    23811    3                         END;

     1737    23812
     1738    23813
     1739    23814    2             IF KX$L2.FLG.OK AND NOT KX$L2.FLG.BLK

  23814   2 0003CC  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0003CE  82C6 002E                            LB,'0800'X        46,B6
          2 0003D0       0800
          2 0003D1  0581 000A                            BBF      s:23818,PREL
          2 0003D3  89C6 002E                            CMZ      46,B6
          2 0003D5  0801 0006                            BAL      s:23818,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:278  
     1740    23815    2                THEN
     1741    23816    2                   CALL Y$GETDAT;

  23816   2 0003D7  E3C0 2122                            LNJ,B6   s:0,PREL
          2 0003D9       0001                            DC       s:23816+3,PREL
          2 0003DA  0F81 0004                            B        s:23819,PREL

     1742    23817    2                ELSE
     1743    23818    2                   KX$L2.FLG.DATAVL = '1'B;

  23818   2 0003DC  8946 002E                            LBT,'0002'X       46,B6
  23818   2 0003DE       0002

     1744    23819    2             RETURN;

  23819   2 0003DF  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1745    23820
     1746    23821    2          CASE ( %KX_P_EV_BLDCTX# );

     1747    23822        /*
     1748    23823                                             BLDCTX from handler common.
     1749    23824        */
     1750    23825    2             CALL_FPT.CAL$ = L2$;

  23825   2 0003E2  DCC7 000C                            LDB,B5   L2$,AUTO
          2 0003E4  DFC7 0013                            STB,B5   CALL_FPT+1,AUTO

     1751    23826    2             CALL KXS$GETL3 ( CALL_FPT.CAL$, TEMP2$, ADMIN_FPT ) ALTRET (L_NO_MEM);

  23826   2 0003E6  CCC6 0007                            LDB,B4   7,B6
          2 0003E8  CFC7 00C0                            STB,B4   KV@USRENT+9,AUTO
          2 0003EA  BBC7 0042                            LAB,B3   TEMP2$,AUTO
          2 0003EC  BFC7 00BE                            STB,B3   KV@USRENT+7,AUTO
          2 0003EE  ABC7 0013                            LAB,B2   CALL_FPT+1,AUTO
          2 0003F0  AFC7 00BC                            STB,B2   KV@USRENT+5,AUTO
          2 0003F2  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:279  
          2 0003F4  CBF0 0300                            LAB,B4   768,IMO
          2 0003F6  E380 0000 0000  xent                 LNJ,B6   KXS$GETL3
          2 0003F9       FDFD                            DC       s:23560,PREL

     1752    23827    2             L3$ = TEMP2$;

  23827   2 0003FA  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 0003FC  EFC7 0008                            STB,B6   L3$,AUTO

     1753    23828    2             KX$L3.CHN$ = ADMIN_FPT.CHN$;

  23828   2 0003FE  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          2 000400  CCC5 0007                            LDB,B4   7,B5
          2 000402  BCC4 000B                            LDB,B3   11,B4
          2 000404  BFC6 0006                            STB,B3   6,B6

     1754    23829    2             KX$L3.RLSCHN = '0'B;

  23829   2 000406  8846 0029                            LBF,'0400'X       41,B6
  23829   2 000408       0400

     1755    23830    2             ADMIN_FPT.CHN$ -> KH$CHN.TERMID.TTYP = %KLTY_VIRCIR#;

  23830   2 000409  CCC5 0007                            LDB,B4   7,B5
          2 00040B  ACC4 000B                            LDB,B2   11,B4
          2 00040D  6C08                                 LDV,R6   8
          2 00040E  E7C2 0012                            STH,R6   18,B2

     1756    23831    2             ADMIN_FPT.CHN$ -> KH$CHN.CTX$ = L3$;

  23831   2 000410  CCC5 0007                            LDB,B4   7,B5
          2 000412  BCC4 000B                            LDB,B3   11,B4
          2 000414  EFC3 000C                            STB,B6   12,B3

     1757    23832    2             IF KX$L3.PVC

  23832   2 000416  82C6 0029                            LB,'0100'X        41,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:280  
  23832   2 000418       0100
          2 000419  0581 0005                            BBF      s:23836,PREL

     1758    23833    2                THEN
     1759    23834    2                   KX$L3.STATE.CURRENT = %Y_ST_ENB_STOP#;

  23834   2 00041B  87C6 0031                            CLH      49,B6
          2 00041D  0F81 0004                            B        s:23838,PREL

     1760    23835    2                ELSE
     1761    23836    2                   KX$L3.STATE.CURRENT = %Y_ST_DSB_STOP#;

  23836   2 00041F  5C03                                 LDV,R5   3
          2 000420  D7C6 0031                            STH,R5   49,B6

     1762    23837
     1763    23838    2             RETURN;

  23838   2 000422  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1764    23839
     1765    23840    2          CASE ( %KX_P_EV_GETDAT# );

     1766    23841        /*
     1767    23842                                             Request for data from the Frame
     1768    23843                                             level.  Supply some output if
     1769    23844                                             possible.
     1770    23845        */
     1771    23846    2             CALL Y$GETDAT;

  23846   2 000425  E3C0 20D4                            LNJ,B6   s:0,PREL
          2 000427       0001                            DC       s:23847,PREL

     1772    23847    2             RETURN;

  23847   2 000428  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:281  
     1773    23848
     1774    23849    2          CASE ( %KX_P_EV_SNDINT# );

     1775    23850        /*
     1776    23851                                             CM asks L3 to send an Interrupt packet.
     1777    23852        */
     1778    23853    2             IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND KX$L3.STATE.CURRENT ~= %
             23853                      Y_ST_RESET# OR

  23853   2 00042B  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00042D  C2C5 0031                            LLH,R4   49,B5
          2 00042F  4D09                                 CMV,R4   9
          2 000430  0901 0004                            BE       s:23853+10,PREL
          2 000432  4D0A                                 CMV,R4   10
          2 000433  0981 000B                            BNE      s:23857,PREL
          2 000435  9846 000E                            LDR,R1   14,B6
          2 000437  1D01                                 CMV,R1   1
          2 000438  0381 000E                            BLE      s:23860,PREL
          2 00043A  82C5 0029                            LB,'0020'X        41,B5
          2 00043C       0020
          2 00043D  0501 0009                            BBT      s:23860,PREL

     1779    23854    2                ( FPT_X25.V_.BYTSIZ > 1 AND NOT KX$L3.EXTSEQ )
     1780    23855    2                THEN
     1781    23856    3                   DO;

     1782    23857    3                      FPT_X25.PRM1$ = ADDR(Y_ACTSCR);

  23857   2 00043F  CB80 0000 03EA  00                   LAB,B4   Y_ACTSCR
          2 000442  CFC6 0007                            STB,B4   7,B6

     1783    23858    3                      ALTRETURN;

  23858   2 000444  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1784    23859    3                   END;
     1785    23860    2             IF KX$L3.INTPND    /* already have one outstanding */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:282  

  23860   2 000447  82C5 0029                            LB,'4000'X        41,B5
  23860   2 000449       4000
          2 00044A  0581 000B                            BBF      s:23874,PREL

     1786    23861    2                THEN
     1787    23862    3                   DO;

     1788    23863    3                      ERCOD = XTR_INT;

  23863   2 00044C  8C80 0000 03BE  00                   LDI      XTR_INT
          2 00044F  8D47 0022                            SDI      ERCOD,AUTO

     1789    23864    3                      CALL Y$ER;

  23864   2 000451  E3C0 247D                            LNJ,B6   s:0,PREL
          2 000453       0001                            DC       s:23865,PREL

     1790    23865    3                   END;

  23865   2 000454  0F81 009F                            B        s:23905,PREL

     1791    23866        /*
     1792    23867               INTOUT - Send an Interrupt packet
     1793    23868                  Set the Interrupt pending flag
     1794    23869                  Send the Interrupt packet
     1795    23870        */
     1796    23871
     1797    23872    2                ELSE
     1798    23873    3                   DO;

     1799    23874    3                      KX$L3.INTPND = '1'B;

  23874   2 000456  8945 0029                            LBT,'4000'X       41,B5
  23874   2 000458       4000

     1800    23875    3                      TEMP0 = FPT_X25.V_.BYTSIZ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:283  

  23875   2 000459  A846 000E                            LDR,R2   14,B6
          2 00045B  AF47 002A                            STR,R2   TEMP0,AUTO

     1801    23876    3                      CALL KXS$GETBFR ( TEMP0, TEMP2$ );

  23876   2 00045D  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 00045F  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 000461  BBC7 002A                            LAB,B3   TEMP0,AUTO
          2 000463  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 000465  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000467  CBF0 0200                            LAB,B4   512,IMO
          2 000469  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 00046C       0001                            DC       s:23877,PREL

     1802    23877    3                      DAT$ = TEMP2$;

  23877   2 00046D  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 00046F  EFC7 0006                            STB,B6   DAT$,AUTO

     1803    23878    3                      KX$DATA.RLS.L3 = '1'B;

  23878   2 000471  8946 0006                            LBT,'8000'X       6,B6
  23878   2 000473       8000

     1804    23879    3                      KX$DATA.CNT = %L0 + L2EXT + MAXIMUM ( 1, TEMP0 );

  23879   2 000474  E847 002A                            LDR,R6   TEMP0,AUTO
          2 000476  E970 0001                            CMR,R6   1,IMO
          2 000478  0281 0002                            BGE      s:23879+7,PREL
          2 00047A  6C01                                 LDV,R6   1
          2 00047B  EA47 003D                            ADD,R6   L2EXT,AUTO
          2 00047D  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 00047F  6E05                                 ADV,R6   5
          2 000480  EF46 0007                            STR,R6   7,B6

     1805    23880    3                      OUT_PKTHDR.TYPE = %Y_ID_INT#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:284  

  23880   2 000482  6C23                                 LDV,R6   35
          2 000483  E780 0000 0004  01                   STH,R6   OUT_PKTHDR+1

     1806    23881    3                      SUBSTR(DAT$->STRT0,LENGTHC(KX$PACKET)+L2EXT,TEMP0)

  23881   2 000486  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 000488  DCC6 000B                            LDB,B5   11,B6
          2 00048A  D846 000D                            LDR,R5   13,B6
          2 00048C  AB85                                 LAB,B2   ,B5
          2 00048D  A855                                 LDR,R2   R5
          2 00048E  E847 002A                            LDR,R6   TEMP0,AUTO
          2 000490  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 000492  B847 003D                            LDR,R3   L2EXT,AUTO
          2 000494  3E15                                 ADV,R3   21
          2 000495  0008                                 MMM

     1807    23882    3                         = SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0);
     1808    23883    3                      CALL Y$PACKET_OUT;

  23883   2 000496  E3C0 0D5E                            LNJ,B6   s:0,PREL
          2 000498       0001                            DC       s:23889,PREL

     1809    23884                           %START_TIMER ( FPTN = KX$L3.INTTMRBLK, PRD = KX$L3.T26 );

  23889   2 000499  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00049B  E846 006F                            LDR,R6   111,B6
          2 00049D  6901 002E                            BEZ,R6   s:23900+18,PREL

  23889   2 00049F  EAC6 0069                            SRM,R6,'00FF'X    105,B6
  23889   2 0004A1       00FF

  23899   2 0004A2  89C6 006A                            CMZ      106,B6
          2 0004A4  0801 004F                            BAL      s:23905,PREL

  23899   2 0004A6  8946 006A                            LBT,'8000'X       106,B6
  23899   2 0004A8       8000
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:285  

  23899   2 0004A9  DB80 0000 0000                       LAB,B5   0
          2 0004AC  DFC6 0061                            STB,B5   97,B6

  23899   2 0004AE  8D80 0000 0002  xsym                 CMN      KX_TMRBLK+2
          2 0004B1  0981 0008                            BNE      s:23900,PREL

  23899   2 0004B3  CBC6 0061                            LAB,B4   97,B6
          2 0004B5  CF80 0000 0000  xsym                 STB,B4   KX_TMRBLK
          2 0004B8  0F81 0007                            B        s:23900+6,PREL

  23900   2 0004BA  CBC6 0061                            LAB,B4   97,B6
          2 0004BC  BC80 0000 0002  xsym                 LDB,B3   KX_TMRBLK+2
          2 0004BF  CF83                                 STB,B4   ,B3

  23900   2 0004C0  DC80 0000 0002  xsym                 LDB,B5   KX_TMRBLK+2
          2 0004C3  DFC6 0063                            STB,B5   99,B6

  23900   2 0004C5  CBC6 0061                            LAB,B4   97,B6
          2 0004C7  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2

  23900   2 0004CA  0F81 0029                            B        s:23905,PREL

  23900   2 0004CC  89C6 006A                            CMZ      106,B6
          2 0004CE  0881 0025                            BAGE     s:23905,PREL

  23901   2 0004D0  8846 006A                            LBF,'8000'X       106,B6
  23901   2 0004D2       8000

  23901   2 0004D3  8DC6 0061                            CMN      97,B6
          2 0004D5  0981 0008                            BNE      s:23901+14,PREL

  23901   2 0004D7  DCC6 0063                            LDB,B5   99,B6
          2 0004D9  DF80 0000 0002  xsym                 STB,B5   KX_TMRBLK+2
          2 0004DC  0F81 0007                            B        s:23901+20,PREL

  23901   2 0004DE  DCC6 0061                            LDB,B5   97,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:286  
          2 0004E0  CCC6 0063                            LDB,B4   99,B6
          2 0004E2  CFC5 0002                            STB,B4   2,B5

  23901   2 0004E4  8DC6 0063                            CMN      99,B6
          2 0004E6  0981 0008                            BNE      s:23902+7,PREL

  23902   2 0004E8  DCC6 0061                            LDB,B5   97,B6
          2 0004EA  DF80 0000 0000  xsym                 STB,B5   KX_TMRBLK
          2 0004ED  0F81 0006                            B        s:23905,PREL

  23902   2 0004EF  DCC6 0063                            LDB,B5   99,B6
          2 0004F1  CCC6 0061                            LDB,B4   97,B6
          2 0004F3  CF85                                 STB,B4   ,B5

     1810    23904    3                   END;

     1811    23905    2             RETURN;

  23905   2 0004F4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1812    23906
     1813    23907    2          CASE ( %KX_P_EV_UPDCHN# );

     1814    23908        /*
     1815    23909           Let's use the real channel table.
     1816    23910        */
     1817    23911    2             IF ( L3$ = ADDR(NIL)         /* well somebody screwed up */

  23911   2 0004F7  8DC7 0008                            CMN      L3$,AUTO
          2 0004F9  0901 0012                            BE       s:23916,PREL
          2 0004FB  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0004FD  82C5 0029                            LB,'0400'X        41,B5
          2 0004FF       0400
          2 000500  0581 000B                            BBF      s:23916,PREL
          2 000502  8DC6 0007                            CMN      7,B6
          2 000504  0901 0007                            BE       s:23916,PREL
          2 000506  CCC6 0007                            LDB,B4   7,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:287  
          2 000508  CDC5 0006                            CMB,B4   6,B5
          2 00050A  0981 0004                            BNE      s:23917,PREL

     1818    23912    2                OR NOT KX$L3.RLSCHN     /* already using a real one */
     1819    23913    2                OR FPT_X25.PRM1$ = ADDR(NIL)
     1820    23914    2                OR FPT_X25.PRM1$ = KX$L3.CHN$   /* what a joke */
     1821    23915    2                )
     1822    23916    2                THEN RETURN;

  23916   2 00050C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1823    23917    2             CALL KVB$RLSSYS ( SIZEW ( KH$CHN ), KX$L3.CHN$ );

  23917   2 00050F  BBF0 0020                            LAB,B3   32,IMO
          2 000511  ABC5 0006                            LAB,B2   6,B5
          2 000513  AFC7 00BE                            STB,B2   KV@USRENT+7,AUTO
          2 000515  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 000517  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000519  CBF0 0200                            LAB,B4   512,IMO
          2 00051B  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 00051E       0001                            DC       s:23918,PREL

     1824    23918    2             KX$L3.RLSCHN = '0'B;

  23918   2 00051F  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000521  8846 0029                            LBF,'0400'X       41,B6
          2 000523       0400

     1825    23919    2             KX$L3.CHN$ = FPT_X25.PRM1$;

  23919   2 000524  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          2 000526  CCC5 0007                            LDB,B4   7,B5
          2 000528  CFC6 0006                            STB,B4   6,B6

     1826    23920    2             KX$L3.CHN$->KH$CHN.CTX$ = L3$;

  23920   2 00052A  EFC4 000C                            STB,B6   12,B4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:288  

     1827    23921        /*
     1828    23922           The channel table usually needs an ENABLE and a CONNECT to get
     1829    23923           the correct state, BUSY.
     1830    23924        */
     1831    23925    2             CODE = %KHA_FNC_ENABLE;

  23925   2 00052C  6C01                                 LDV,R6   1
          2 00052D  EF47 0029                            STR,R6   CODE,AUTO

     1832    23926    2             CALL Y$DVCADM;

  23926   2 00052F  E3C0 24AF                            LNJ,B6   s:0,PREL
          2 000531       0001                            DC       s:23927,PREL

     1833    23927    2             CODE = %KHA_FNC_CONNECT;

  23927   2 000532  6C0E                                 LDV,R6   14
          2 000533  EF47 0029                            STR,R6   CODE,AUTO

     1834    23928    2             CALL Y$DVCADM;

  23928   2 000535  E3C0 24A9                            LNJ,B6   s:0,PREL
          2 000537       0001                            DC       s:23929,PREL

     1835    23929    2             RETURN;

  23929   2 000538  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1836    23930
     1837    23931    2          CASE ( %KX_P_EV_REDRQS# );

     1838    23932        /*
     1839    23933           CM wants/is accepting input data packets.
     1840    23934        */
     1841    23935    2             IF NOT KX$L3.INPBLK THEN RETURN;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:289  
  23935   2 00053B  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00053D  82C5 0029                            LB,'0200'X        41,B5
          2 00053F       0200
          2 000540  0501 0004                            BBT      s:23936,PREL

  23935   2 000542  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1842    23936    2             KX$L3.INPBLK = '0'B;

  23936   2 000545  8845 0029                            LBF,'0200'X       41,B5
  23936   2 000547       0200

     1843    23937    2             IF KX$L3.IN_.ADR$ ~= ADDR(NIL)

  23937   2 000548  8DC5 0008                            CMN      8,B5
          2 00054A  0901 0064                            BE       s:23959,PREL

     1844    23938    2                THEN
     1845    23939    3                   DO;

     1846    23940    3                      CALL_FPT.EVN = %KX_CM_EV_DATIN#;

  23940   2 00054C  4C09                                 LDV,R4   9
          2 00054D  CF47 0012                            STR,R4   CALL_FPT,AUTO

     1847    23941    3                      CALL_FPT.V_ = KX$L3.IN_;

  23941   2 00054F  AB85                                 LAB,B2   ,B5
          2 000550  2C10                                 LDV,R2   16
          2 000551  6C08                                 LDV,R6   8
          2 000552  BB87                                 LAB,B3   ,AUTO
          2 000553  3C3A                                 LDV,R3   58
          2 000554  0008                                 MMM

     1848    23942    3                      CALL_FPT.PRS.PRM1 = KX$L3.IN_QBIT;

  23942   2 000555  CCC7 0008                            LDB,B4   L3$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:290  
          2 000557  E844 002A                            LDR,R6   42,B4
          2 000559  EAC7 0021                            SRM,R6,'8000'X    CALL_FPT+15,AUTO
          2 00055B       8000

     1849    23943    3                      CALL_FPT.PRS.PRM2 = KX$L3.IN_MBIT;

  23943   2 00055C  6001                                 SOL,R6   1
          2 00055D  EAC7 0021                            SRM,R6,'4000'X    CALL_FPT+15,AUTO
          2 00055F       4000

     1850    23944    3                      CALL Y$CNCMNG WHENALTRETURN

  23944   2 000560  E3C0 0C65                            LNJ,B6   s:0,PREL
          2 000562       0003                            DC       s:23946,PREL
          2 000563  0F81 0009                            B        s:23949,PREL

     1851    23945    4                            DO;

     1852    23946    4                               KX$L3.INPBLK = '1'B;

  23946   2 000565  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000567  8946 0029                            LBT,'0200'X       41,B6
          2 000569       0200

     1853    23947    4                               RETURN;

  23947   2 00056A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1854    23948    4                            END;
     1855    23949    3                      IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# THEN RETURN;

  23949   2 00056D  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00056F  E2C6 0031                            LLH,R6   49,B6
          2 000571  6D09                                 CMV,R6   9
          2 000572  0901 0004                            BE       s:23950,PREL

  23949   2 000574  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:291  

     1856    23950    3                      IF KX$L3.IN_.BFRSIZ = 0

  23950   2 000577  D846 000C                            LDR,R5   12,B6
          2 000579  5981 000F                            BNEZ,R5  s:23954,PREL

     1857    23951    3                         THEN
     1858    23952    3                            CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );

  23952   2 00057B  DBC6 0008                            LAB,B5   8,B6
          2 00057D  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 00057F  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000581  CBF0 0100                            LAB,B4   256,IMO
          2 000583  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 000586       0001                            DC       s:23952+12,PREL
          2 000587  0F81 0016                            B        s:23955,PREL

     1859    23953    3                         ELSE
     1860    23954    3                            CALL KVB$RLSSYS((KX$L3.IN_.BYTSIZ/2),KX$L3.IN_.ADR$);

  23954   2 000589  C846 000B                            LDR,R4   11,B6
          2 00058B  4041                                 SOR,R4   1
          2 00058C  CF47 00BC                            STR,R4   KV@USRENT+5,AUTO
          2 00058E  DBC6 0008                            LAB,B5   8,B6
          2 000590  DFC7 00BF                            STB,B5   KV@USRENT+8,AUTO
          2 000592  CBC7 00BC                            LAB,B4   KV@USRENT+5,AUTO
          2 000594  CFC7 00BD                            STB,B4   KV@USRENT+6,AUTO
          2 000596  BBC7 00BD                            LAB,B3   KV@USRENT+6,AUTO
          2 000598  CBF0 0200                            LAB,B4   512,IMO
          2 00059A  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 00059D       0001                            DC       s:23955,PREL

     1861    23955    3                      KX$L3.IN_ = '0'B;

  23955   2 00059E  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0005A0  5C0A                                 LDV,R5   10
          2 0005A1  0021                                 ALR      ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:292  
          2 0005A2       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0005A4       4006 0008                                ALPHANUM(8,B6,,R5,FILL)

     1862    23956    3                      KX$L3.IN_QBIT = '0'B;

  23956   2 0005A6  437F                                 CSYNC    s:23955+7,SPREL
          2 0005A7  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0005A9  8846 002A                            LBF,'8000'X       42,B6
          2 0005AB       8000

     1863    23957    3                      KX$L3.IN_MBIT = '0'B;

  23957   2 0005AC  8846 002A                            LBF,'2000'X       42,B6
  23957   2 0005AE       2000

     1864    23958    3                   END;

     1865    23959    2             CALL_FPT.EVN = %KX_P_EV_DATIN#;

  23959   2 0005AF  6C07                                 LDV,R6   7
          2 0005B0  EF47 0012                            STR,R6   CALL_FPT,AUTO

     1866    23960    2             CALL_FPT.RCV$ = ADDR(NIL);

  23960   2 0005B2  EB80 0000 0000                       LAB,B6   0
          2 0005B5  EFC7 0015                            STB,B6   CALL_FPT+3,AUTO

     1867    23961    2             CALL_FPT.CAL$ = L2$;

  23961   2 0005B7  DCC7 000C                            LDB,B5   L2$,AUTO
          2 0005B9  DFC7 0013                            STB,B5   CALL_FPT+1,AUTO

     1868    23962    3             DO WHILE ( KX$L3.INP_HEAD$ ~= ADDR(NIL) );

  23962   2 0005BB  0F81 0022                            B        s:23968,PREL

     1869    23963    3                DAT$ = KX$L3.INP_HEAD$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:293  

  23963   2 0005BD  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0005BF  DCC6 0049                            LDB,B5   73,B6
          2 0005C1  DFC7 0006                            STB,B5   DAT$,AUTO

     1870    23964    3                KX$L3.INP_HEAD$ = KX$DATA.L3_LIST$;

  23964   2 0005C3  CCC5 0004                            LDB,B4   4,B5
          2 0005C5  CFC6 0049                            STB,B4   73,B6

     1871    23965    3                CALL_FPT.PRM1$ = DAT$;

  23965   2 0005C7  DFC7 0019                            STB,B5   CALL_FPT+7,AUTO

     1872    23966    3                CALL KXP$PACKET (CALL_FPT);

  23966   2 0005C9  BBC7 0012                            LAB,B3   CALL_FPT,AUTO
          2 0005CB  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 0005CD  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0005CF  CBF0 0100                            LAB,B4   256,IMO
          2 0005D1  E3C0 FA2E                            LNJ,B6   s:13,PREL
          2 0005D3       0001                            DC       s:23967,PREL

     1873    23967    3                IF KX$L3.INPBLK THEN RETURN;

  23967   2 0005D4  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0005D6  82C6 0029                            LB,'0200'X        41,B6
          2 0005D8       0200
          2 0005D9  0581 0004                            BBF      s:23968,PREL

  23967   2 0005DB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1874    23968    3             END;

  23968   2 0005DE  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0005E0  8DC6 0049                            CMN      73,B6
          2 0005E2  09DB                                 BNE      s:23963,SPREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:294  

     1875    23969    2             KX$L3.INP_TAIL$ = ADDR(NIL);

  23969   2 0005E3  DB80 0000 0000                       LAB,B5   0
          2 0005E6  DFC6 004B                            STB,B5   75,B6

     1876    23970    2             ID = %Y_ID_RR#;

  23970   2 0005E8  6C01                                 LDV,R6   1
          2 0005E9  EF47 002E                            STR,R6   ID,AUTO

     1877    23971    2             CALL Y$SEND_PACKET;

  23971   2 0005EB  E3C0 0DEC                            LNJ,B6   s:0,PREL
          2 0005ED       0001                            DC       s:23972,PREL

     1878    23972    2             RETURN;

  23972   2 0005EE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1879    23973
     1880    23974    2          CASE ( %KX_P_EV_INTTMR# );

     1881    23975        /*
     1882    23976           Interrupt packet timed out. If we're in data state, do a reset.
     1883    23977        */
     1884    23978    2             IF KX$L3.STATE.CURRENT = %Y_ST_DATA#

  23978   2 0005F1  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0005F3  C2C5 0031                            LLH,R4   49,B5
          2 0005F5  4D09                                 CMV,R4   9
          2 0005F6  0981 001C                            BNE      s:23988,PREL

     1885    23979    2                THEN
     1886    23980    3                   DO;

     1887    23981    3                      CALL_FPT.EVN = %KX_P_EV_VCRST#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:295  

  23981   2 0005F8  1C0A                                 LDV,R1   10
          2 0005F9  9F47 0012                            STR,R1   CALL_FPT,AUTO

     1888    23982    3                      CALL_FPT.CAL$ = CM$;

  23982   2 0005FB  CCC7 000A                            LDB,B4   CM$,AUTO
          2 0005FD  CFC7 0013                            STB,B4   CALL_FPT+1,AUTO

     1889    23983    3                      CALL_FPT.RCV$ = L3$;

  23983   2 0005FF  DFC7 0015                            STB,B5   CALL_FPT+3,AUTO

     1890    23984    3                      CALL_FPT.PRS.PRM1 = '1'B;

  23984   2 000601  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  23984   2 000603       8000

     1891    23985    3                      CALL_FPT.PRM1 = %KX_RST_DIAG_INTEXP#;

  23985   2 000604  E870 0091                            LDR,R6   145,IMO
          2 000606  EF47 0017                            STR,R6   CALL_FPT+5,AUTO

     1892    23986    3                      CALL KXP$PACKET ( CALL_FPT );

  23986   2 000608  BBC7 0012                            LAB,B3   CALL_FPT,AUTO
          2 00060A  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 00060C  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00060E  CBF0 0100                            LAB,B4   256,IMO
          2 000610  E3C0 F9EF                            LNJ,B6   s:13,PREL
          2 000612       0001                            DC       s:23988,PREL

     1893    23987    3                   END;

     1894    23988    2             RETURN;

  23988   2 000613  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:296  

     1895    23989    2          CASE ( %KX_P_EV_IDLCLK# );

     1896    23990        /*
     1897    23991           Clear switched circuits that have been idling more than IDLPRD.
     1898    23992        */
     1899    23993    2             L2$ = KX_CNTX.HD$;

  23993   2 000616  DC80 0000 0000  xsym                 LDB,B5   KX_CNTX
          2 000619  DFC7 000C                            STB,B5   L2$,AUTO

     1900    23994    3             DO WHILE ( L2$ ~= ADDR(NIL) );

  23994   2 00061B  0F81 0044                            B        s:24014,PREL

     1901    23995    3                L3$ = KX$L2.L3_HEAD$;

  23995   2 00061D  ECC7 000C                            LDB,B6   L2$,AUTO
          2 00061F  DCC6 0034                            LDB,B5   52,B6
          2 000621  DFC7 0008                            STB,B5   L3$,AUTO

     1902    23996    4                DO WHILE ( L3$ ~= ADDR(NIL) );

  23996   2 000623  0F81 0034                            B        s:24012,PREL

     1903    23997    4                   IF KX$L3.STATE.CURRENT = %Y_ST_DATA# AND NOT KX$L3.PVC

  23997   2 000625  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000627  E2C6 0031                            LLH,R6   49,B6
          2 000629  6D09                                 CMV,R6   9
          2 00062A  0981 0028                            BNE      s:24011,PREL
          2 00062C  82C6 0029                            LB,'0100'X        41,B6
          2 00062E       0100
          2 00062F  0501 0023                            BBT      s:24011,PREL
          2 000631  82C6 0075                            LB,'00FF'X        117,B6
          2 000633       00FF
          2 000634  0581 001E                            BBF      s:24011,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:297  

     1904    23998    4                      AND KX$L3.IDLPRD ~= 0
     1905    23999    4                      THEN
     1906    24000    5                         DO;

     1907    24001    5                            KX$L3.IDLCLK = KX$L3.IDLCLK - 1;

  24001   2 000636  D2C6 0076                            LLH,R5   118,B6
          2 000638  5EFF                                 ADV,R5   -1
          2 000639  D7C6 0076                            STH,R5   118,B6

     1908    24002    5                            IF KX$L3.IDLCLK = 0

  24002   2 00063B  D2C6 0076                            LLH,R5   118,B6
          2 00063D  5981 0015                            BNEZ,R5  s:24011,PREL

     1909    24003    5                               THEN
     1910    24004    6                                  DO;

     1911    24005    6                                     CALL_FPT.CAL$ = KX$L3.CM$;

  24005   2 00063F  DCC6 0004                            LDB,B5   4,B6
          2 000641  DFC7 0013                            STB,B5   CALL_FPT+1,AUTO

     1912    24006    6                                     CALL_FPT.RCV$ = L3$;

  24006   2 000643  EFC7 0015                            STB,B6   CALL_FPT+3,AUTO

     1913    24007    6                                     CALL_FPT.EVN = %KX_P_EV_VCLST#;

  24007   2 000645  4C09                                 LDV,R4   9
          2 000646  CF47 0012                            STR,R4   CALL_FPT,AUTO

     1914    24008    6                                     CALL KXP$PACKET ( CALL_FPT );

  24008   2 000648  CBC7 0012                            LAB,B4   CALL_FPT,AUTO
          2 00064A  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:298  
          2 00064C  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00064E  CBF0 0100                            LAB,B4   256,IMO
          2 000650  E3C0 F9AF                            LNJ,B6   s:13,PREL
          2 000652       0001                            DC       s:24011,PREL

     1915    24009    6                                  END;

     1916    24010    5                         END;

     1917    24011    4                   L3$ = KX$L3.NEXT$;

  24011   2 000653  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000655  DC86                                 LDB,B5   ,B6
          2 000656  DFC7 0008                            STB,B5   L3$,AUTO

     1918    24012    4                END;

  24012   2 000658  8DC7 0008                            CMN      L3$,AUTO
          2 00065A  09CB                                 BNE      s:23997,SPREL

     1919    24013    3                L2$ = KX$L2.NEXT$;

  24013   2 00065B  ECC7 000C                            LDB,B6   L2$,AUTO
          2 00065D  CC86                                 LDB,B4   ,B6
          2 00065E  CFC7 000C                            STB,B4   L2$,AUTO

     1920    24014    3             END;

  24014   2 000660  8DC7 000C                            CMN      L2$,AUTO
          2 000662  0981 FFBA                            BNE      s:23995,PREL

     1921    24015    2             RETURN;

  24015   2 000664  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1922    24016
     1923    24017    2          CASE ( %KX_P_EV_STOP_ALL# );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:299  

     1924    24018    2             CALL Y$STOP_L3S;

  24018   2 000667  E3C0 195A                            LNJ,B6   s:0,PREL
          2 000669       0001                            DC       s:24019,PREL

     1925    24019    2             RETURN;

  24019   2 00066A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1926    24020    2          CASE ( %KX_P_EV_DIED_ALL# );

     1927    24021    2             CALL Y$DIED_L3S;

  24021   2 00066D  E3C0 194D                            LNJ,B6   s:0,PREL
          2 00066F       0001                            DC       s:24022,PREL

     1928    24022    2             RETURN;

  24022   2 000670  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1929    24023    2          CASE ( %KX_P_EV_SP1# );

     1930    24024        /*
     1931    24025                                             Spare event #1.
     1932    24026        */
     1933    24027    2             PEVENT = %Y_EV_SP1#;

  24027   2 000673  3C1B                                 LDV,R3   27
          2 000674  BF47 002C                            STR,R3   PEVENT,AUTO
          2 000676  0F81 0014                            B        s:24054,PREL

     1934    24028
     1935    24029    2          CASE ( %KX_P_EV_SP2# );

     1936    24030        /*
     1937    24031                                             Spare event #2.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:300  
     1938    24032        */
     1939    24033    2             PEVENT = %Y_EV_SP2#;

  24033   2 000678  3C1C                                 LDV,R3   28
          2 000679  BF47 002C                            STR,R3   PEVENT,AUTO
          2 00067B  0F81 000F                            B        s:24054,PREL

     1940    24034
     1941    24035    2          CASE ( %KX_P_EV_SP3# );

     1942    24036        /*
     1943    24037                                             Spare event #3.
     1944    24038        */
     1945    24039    2             PEVENT = %Y_EV_SP3#;

  24039   2 00067D  3C1D                                 LDV,R3   29
          2 00067E  BF47 002C                            STR,R3   PEVENT,AUTO
          2 000680  0F81 000A                            B        s:24054,PREL

     1946    24040
     1947    24041    2          CASE ( ELSE );

     1948    24042        /*S* SCREECH_CODE: KXP-S$KX_PCK_UNKEVT#
     1949    24043             MESSAGE: KXP$PACKET received a call with an unknown event type.
     1950    24044        */
     1951    24045    2             CALL KHD$SCREECH (Y_UNKEVT);

  24045   2 000682  BB80 0000 0002  03                   LAB,B3   +2
          2 000685  CBF0 0100                            LAB,B4   256,IMO
          2 000687  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00068A       0001                            DC       s:24054,PREL

     1952    24046
     1953    24047    2       END;  /*  CASE on external event  */

     1954    24048
     1955    24049        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:301  
     1956    24050                                             Do what the state table says to
     1957    24051                                             for this state/event combination.
     1958    24052        */
     1959    24053
     1960    24054    1       IF KX$L3.CHN$ ~= ADDR(NIL) THEN S_TRMID$ = KX$L3.CHN$ ;

  24054   2 00068B  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00068D  8DC6 0006                            CMN      6,B6
          2 00068F  0901 0005                            BE       s:24055,PREL

  24054   2 000691  DCC6 0006                            LDB,B5   6,B6
          2 000693  DFC7 0024                            STB,B5   S_TRMID$,AUTO

     1961    24055    1       PSTATE = KX$L3.STATE.CURRENT;

  24055   2 000695  E2C6 0031                            LLH,R6   49,B6
          2 000697  EF47 002D                            STR,R6   PSTATE,AUTO

     1962    24056    1       S_VAL0 = PSTATE;

  24056   2 000699  EF47 0026                            STR,R6   S_VAL0,AUTO

     1963    24057
     1964    24058    1       TEMP2 = PSTATE * ( %Y_EV_MAX# + 1 ) + PEVENT;

  24058   2 00069B  6F1E                                 MLV,R6   30
          2 00069C  EA47 002C                            ADD,R6   PEVENT,AUTO
          2 00069E  EF47 0044                            STR,R6   TEMP2,AUTO

     1965    24059    1       IF NOT KX$L3.PVC

  24059   2 0006A0  82C6 0029                            LB,'0100'X        41,B6
  24059   2 0006A2       0100
          2 0006A3  0501 000E                            BBT      s:24067,PREL

     1966    24060    1          THEN
     1967    24061    2             DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:302  

     1968    24062    2                PSTATE = STATE_TABLE.NEXT_STATE ( TEMP2 );

  24062   2 0006A5  B856                                 LDR,R3   R6
          2 0006A6  D2B0 0000 0000  00                   LLH,R5   STATE_TABLE,R3
          2 0006A9  DF47 002D                            STR,R5   PSTATE,AUTO

     1969    24063    2                ACTION = STATE_TABLE.ACTION ( TEMP2 );

  24063   2 0006AB  C2B0 0000 00E1  00                   LLH,R4   STATE_TABLE+225,R3
          2 0006AE  CF47 0034                            STR,R4   ACTION,AUTO

     1970    24064    2             END;

  24064   2 0006B0  0F81 000C                            B        s:24073,PREL

     1971    24065    1          ELSE
     1972    24066    2             DO;

     1973    24067    2                PSTATE = PVC_STATE_TABLE.NEXT_STATE ( TEMP2 );

  24067   2 0006B2  B856                                 LDR,R3   R6
          2 0006B3  D2B0 0000 01C2  00                   LLH,R5   PVC_STATE_TABLE,R3
          2 0006B6  DF47 002D                            STR,R5   PSTATE,AUTO

     1974    24068    2                ACTION = PVC_STATE_TABLE.ACTION ( TEMP2 );

  24068   2 0006B8  C2B0 0000 02A3  00                   LLH,R4   PVC_STATE_TABLE+225,R3
          2 0006BB  CF47 0034                            STR,R4   ACTION,AUTO

     1975    24069    2             END;

     1976    24070        /*
     1977    24071           Rseet IDLCLK because there is some activity on this L3.
     1978    24072        */
     1979    24073    1       KX$L3.IDLCLK = KX$L3.IDLPRD;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:303  
  24073   2 0006BD  A846 0075                            LDR,R2   117,B6
          2 0006BF  A570 00FF                            AND,R2   255,IMO
          2 0006C1  A7C6 0076                            STH,R2   118,B6

     1980    24074
     1981    24075    1       KX$L3.STATE.LAST = KX$L3.STATE.CURRENT;

  24075   2 0006C3  92C6 0031                            LLH,R1   49,B6
          2 0006C5  9AC6 0031                            SRM,R1,'00FF'X    49,B6
          2 0006C7       00FF

     1982    24076    1       KX$L3.STATE.CURRENT = PSTATE;

  24076   2 0006C8  D7C6 0031                            STH,R5   49,B6

     1983    24077
     1984    24078
     1985    24079    1       KX$L3.HIST.STT ( KX$L3.HIST.X ) = PSTATE;

  24079   2 0006CA  9846 0032                            LDR,R1   50,B6
          2 0006CC  1E66                                 ADV,R1   102
          2 0006CD  D796                                 STH,R5   ,B6,R1

     1986    24080    1       KX$L3.HIST.EVT ( KX$L3.HIST.X ) = PEVENT;

  24080   2 0006CE  A846 0032                            LDR,R2   50,B6
          2 0006D0  9847 002C                            LDR,R1   PEVENT,AUTO
          2 0006D2  2E6E                                 ADV,R2   110
          2 0006D3  97A6                                 STH,R1   ,B6,R2

     1987    24081    1       KX$L3.HIST.ACT ( KX$L3.HIST.X ) = ACTION;

  24081   2 0006D4  A846 0032                            LDR,R2   50,B6
          2 0006D6  2E76                                 ADV,R2   118
          2 0006D7  C7A6                                 STH,R4   ,B6,R2

     1988    24082    1       KX$L3.HIST.X = KX$L3.HIST.X + 1;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:304  

  24082   2 0006D8  8AC6 0032                            INC      50,B6

     1989    24083    1       IF KX$L3.HIST.X > 7

  24083   2 0006DA  A846 0032                            LDR,R2   50,B6
          2 0006DC  2D07                                 CMV,R2   7
          2 0006DD  0381 0003                            BLE      s:24087,PREL

     1990    24084    1          THEN
     1991    24085    1             KX$L3.HIST.X = 0;

  24085   2 0006DF  8746 0032                            CL       50,B6

     1992    24086
     1993    24087    2       DO CASE ( ACTION );

  24087   2 0006E1  A854                                 LDR,R2   R4
          2 0006E2  2D2F                                 CMV,R2   47
          2 0006E3  0281 0AD6                            BGE      s:25389,PREL
          2 0006E5  B820 0000 06EB  02                   LDR,R3   s:24087+10,R2
          2 0006E8  83B0 0000 071A  02                   JMP      s:24095,R3
          2 0006EB       0AA9                            DC       s:25392,PREL
          2 0006EC       0854                            DC       s:25140,PREL
          2 0006ED       05C2                            DC       s:24800,PREL
          2 0006EE       02B3                            DC       s:24460,PREL
          2 0006EF       055A                            DC       s:24736,PREL
          2 0006F0       0057                            DC       s:24176,PREL
          2 0006F1       06BC                            DC       s:24950,PREL
          2 0006F2       02E5                            DC       s:24518,PREL
          2 0006F3       0057                            DC       s:24176,PREL
          2 0006F4       0AA0                            DC       s:25389,PREL
          2 0006F5       0853                            DC       s:25132,PREL
          2 0006F6       02D8                            DC       s:24504,PREL
          2 0006F7       030E                            DC       s:24541,PREL
          2 0006F8       065E                            DC       s:24907,PREL
          2 0006F9       0994                            DC       s:25307,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:305  
          2 0006FA       089A                            DC       s:25199,PREL
          2 0006FB       0709                            DC       s:24982,PREL
          2 0006FC       089A                            DC       s:25199,PREL
          2 0006FD       029A                            DC       s:24440,PREL
          2 0006FE       0252                            DC       s:24391,PREL
          2 0006FF       07B2                            DC       s:25074,PREL
          2 000700       085E                            DC       s:25159,PREL
          2 000701       02C0                            DC       s:24477,PREL
          2 000702       075F                            DC       s:25028,PREL
          2 000703       0656                            DC       s:24891,PREL
          2 000704       0288                            DC       s:24423,PREL
          2 000705       0000                            DC       s:24095,PREL
          2 000706       0648                            DC       s:24872,PREL
          2 000707       0624                            DC       s:24852,PREL
          2 000708       05A5                            DC       s:24774,PREL
          2 000709       0006                            DC       s:24108,PREL
          2 00070A       0AA0                            DC       s:25389,PREL
          2 00070B       092E                            DC       s:25260,PREL
          2 00070C       061C                            DC       s:24842,PREL
          2 00070D       0340                            DC       s:24568,PREL
          2 00070E       0555                            DC       s:24727,PREL
          2 00070F       0AA0                            DC       s:25389,PREL
          2 000710       093F                            DC       s:25275,PREL
          2 000711       0030                            DC       s:24129,PREL
          2 000712       085E                            DC       s:25159,PREL
          2 000713       091D                            DC       s:25245,PREL
          2 000714       01DD                            DC       s:24334,PREL
          2 000715       0A25                            DC       s:25356,PREL
          2 000716       0A67                            DC       s:25372,PREL
          2 000717       0AA0                            DC       s:25389,PREL
          2 000718       0AA0                            DC       s:25389,PREL
          2 000719       0057                            DC       s:24176,PREL

     1994    24088        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:306  
     1995    24089        /*
     1996    24090               ACK - send a data acknowledgement to the other end
     1997    24091                  Send an RR packet
     1998    24092        */
     1999    24093    2          CASE ( %Y_ACT_ACK# );

     2000    24094
     2001    24095    2             IF KX$L3.DCNTP > 0

  24095   2 00071A  E2C6 0030                            LLH,R6   48,B6
          2 00071C  6981 053D                            BNEZ,R6  s:24705,PREL
          2 00071E  0F81 0AA4                            B        s:25392,PREL

     2002    24096    2                THEN
     2003    24097    2                   GOTO L_SEND_RR;  /* in case datin */
     2004    24098        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:307  
     2005    24099        /*
     2006    24100               CALEST - a call confirm packet has completed call set-up
     2007    24101                  Stop the timer
     2008    24102                  Set the DATA flag
     2009    24103                  Reset the retry count
     2010    24104                  Report VCUP to CM
     2011    24105        */
     2012    24106    2          CASE ( %Y_ACT_CALEST# );

     2013    24107
     2014    24108    2             CALL Y$STOP_TMR ;

  24108   2 000720  E3C0 22ED                            LNJ,B6   s:0,PREL
          2 000722       0001                            DC       s:24111,PREL

     2015    24109
     2016    24110
     2017    24111    2             KX$L3.DATA = '1'B;

  24111   2 000723  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000725  8946 0029                            LBT,'8000'X       41,B6
          2 000727       8000

     2018    24112    2             KX$L3.RTRCNT = 0;

  24112   2 000728  87C6 0072                            CLH      114,B6

     2019    24113    2             KX_STATS_X25.CIRCUITS = KX_STATS_X25.CIRCUITS + 1;

  24113   2 00072A  8A80 0000 003F  xsym                 INC      KX_STATS_X25+63
          2 00072D  8E80 0000 003E  xsym                 CAD      KX_STATS_X25+62

     2020    24114    2             CALL_FPT.EVN = %KX_CM_EV_VCUP#;

  24114   2 000730  6C03                                 LDV,R6   3
          2 000731  EF47 0012                            STR,R6   CALL_FPT,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:308  
     2021    24115    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.CALL_OPTS );

  24115   2 000733  DBC6 0014                            LAB,B5   20,B6
          2 000735  DFC7 0019                            STB,B5   CALL_FPT+7,AUTO

     2022    24116    2             CALL_FPT.V_.ADR$ = DAT$;

  24116   2 000737  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 000739  CFC7 001D                            STB,B4   CALL_FPT+11,AUTO

     2023    24117    2             CALL_FPT.V_.BYTX = BYTE_INDEX;

  24117   2 00073B  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 00073D  DF47 001F                            STR,R5   CALL_FPT+13,AUTO

     2024    24118    2             CALL_FPT.V_.BYTSIZ = KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX;

  24118   2 00073F  D244 0007                            SUB,R5   7,B4
          2 000741  8255                                 NEG      R5
          2 000742  5E10                                 ADV,R5   16
          2 000743  DF47 0020                            STR,R5   CALL_FPT+14,AUTO

     2025    24119    2             CALL Y$CNCMNG;

  24119   2 000745  E3C0 0A80                            LNJ,B6   s:0,PREL
          2 000747       0001                            DC       s:24119+3,PREL
          2 000748  0F81 0A7A                            B        s:25392,PREL

     2026    24120        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:309  
     2027    24121        /*
     2028    24122               CALL - Send a Call packet
     2029    24123                  Send a Call packet
     2030    24124                  Start the timer
     2031    24125                  Report a connection to handler common
     2032    24126        */
     2033    24127    2          CASE ( %Y_ACT_CALL# );

     2034    24128
     2035    24129    2             CALL Y$CALL

  24129   2 00074A  E3C0 1C69                            LNJ,B6   s:0,PREL
          2 00074C       0003                            DC       s:24136,PREL
          2 00074D  0F81 0012                            B        s:24144,PREL

     2036    24130    2                WHENALTRETURN
     2037    24131    3                   DO;

     2038    24132        /*
     2039    24133                                             Unable to get a LCN for this VC.
     2040    24134                                             Log the problem and KILL the VC.
     2041    24135        */
     2042    24136    3                      ERCOD = NO_LCN ;

  24136   2 00074F  8C80 0000 03C4  00                   LDI      NO_LCN
          2 000752  8D47 0022                            SDI      ERCOD,AUTO

     2043    24137    3                      CALL Y$ER ;

  24137   2 000754  E3C0 217A                            LNJ,B6   s:0,PREL
          2 000756       0001                            DC       s:24139,PREL

     2044    24138
     2045    24139    3                      CODE = %KHA_FNC_KILL ;

  24139   2 000757  6C03                                 LDV,R6   3
          2 000758  EF47 0029                            STR,R6   CODE,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:310  

     2046    24140    3                      CALL Y$DVCADM;

  24140   2 00075A  E3C0 2284                            LNJ,B6   s:0,PREL
          2 00075C       0001                            DC       s:24142,PREL

     2047    24141
     2048    24142    3                      RETURN;

  24142   2 00075D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2049    24143    3                   END;
     2050    24144    2             CALL Y$START_TIMER ( KX$L3.T21 );

  24144   2 000760  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000762  DBC6 006B                            LAB,B5   107,B6
          2 000764  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 000766  E3C0 2398                            LNJ,B6   s:0,PREL
          2 000768       0001                            DC       s:24145,PREL

     2051    24145    2             CODE = %KHA_FNC_CONNECT ;

  24145   2 000769  6C0E                                 LDV,R6   14
          2 00076A  EF47 0029                            STR,R6   CODE,AUTO

     2052    24146    2             CALL Y$DVCADM;

  24146   2 00076C  E3C0 2272                            LNJ,B6   s:0,PREL
          2 00076E       0001                            DC       s:24146+3,PREL
          2 00076F  0F81 0A53                            B        s:25392,PREL

     2053    24147
     2054    24148        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:311  
     2055    24149        /*
     2056    24150               CLRRCV - a Clear packet has been received
     2057    24151               It goes roughly like this:
     2058    24152                  Stop the timer
     2059    24153                  Log the Clear packet if necessary
     2060    24154                  If SUPER-defined,
     2061    24155                     Report a disconnect to handler common
     2062    24156                     If the retry count is exhausted,
     2063    24157                        Log the retries exhausted event
     2064    24158                     Otherwise
     2065    24159                        Report VCDWN to CM
     2066    24160                        If still in the same state,
     2067    24161                           If the call delay timer is 0,
     2068    24162                              Report a time-out to the packet level
     2069    24163                              Return
     2070    24164                           Otherwise,
     2071    24165                              Start the timer
     2072    24166                  Otherwise
     2073    24167                     Clear the LCN
     2074    24168                     Report VCLST to CM
     2075    24169                     Release (maybe) the context
     2076    24170               DLY is the same except that there should be no errlog or CLR_C
     2077    24171               CLRC causes L3 to tx the pending clear_c and either release context
     2078    24172               or initiate a new call.
     2079    24173        */
     2080    24174    2          CASE ( %Y_ACT_CLRRCV#, %Y_ACT_DLY#, %Y_ACT_CLRC# );

     2081    24175
     2082    24176    2             ID = %Y_ID_CLEAR_C#;   /* prepare to call Y$PACKET_OUT */

  24176   2 000771  6C17                                 LDV,R6   23
          2 000772  EF47 002E                            STR,R6   ID,AUTO

     2083    24177    2             IF ACTION = %Y_ACT_CLRC#

  24177   2 000774  2D2E                                 CMV,R2   46
          2 000775  0981 0014                            BNE      s:24187,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:312  

     2084    24178    2                THEN
     2085    24179    3                   DO;

     2086    24180    3                      IF KX$L3.CHN$->KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#

  24180   2 000777  DCC6 0006                            LDB,B5   6,B6
          2 000779  E845 0012                            LDR,R6   18,B5
          2 00077B  E570 00FF                            AND,R6   255,IMO
          2 00077D  6D02                                 CMV,R6   2
          2 00077E  0981 0006                            BNE      s:24184,PREL

     2087    24181    3                         THEN
     2088    24182    3                            CALL_FPT.EVN = %KX_CM_EV_VCDWN#;

  24182   2 000780  6C05                                 LDV,R6   5
          2 000781  EF47 0012                            STR,R6   CALL_FPT,AUTO
          2 000783  0F81 0004                            B        s:24185,PREL

     2089    24183    3                         ELSE
     2090    24184    3                            CALL_FPT.EVN = %KX_CM_EV_VCLST#;

  24184   2 000785  6C04                                 LDV,R6   4
          2 000786  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2091    24185    3                      GOTO L_CLRC;

  24185   2 000788  0F81 00EB                            B        s:24267,PREL

     2092    24186    3                   END;
     2093    24187    2             CALL Y$STOP_TMR ;

  24187   2 00078A  E3C0 2283                            LNJ,B6   s:0,PREL
          2 00078C       0001                            DC       s:24189,PREL

     2094    24188
     2095    24189    2             IF ACTION = %Y_ACT_CLRRCV#
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:313  

  24189   2 00078D  E847 0034                            LDR,R6   ACTION,AUTO
          2 00078F  6D08                                 CMV,R6   8
          2 000790  0981 002E                            BNE      s:24205,PREL

     2096    24190    2                THEN
     2097    24191    3                   DO;

     2098    24192    3                      KX$L3.CLRCPND = '1'B;    /* need to send clr_c eventually */

  24192   2 000792  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000794  8946 0076                            LBT,'0040'X       118,B6
          2 000796       0040

     2099    24193    3                      CALL_FPT.PRS.V = '1'B;   /* clear packet info is relevent */

  24193   2 000797  8947 0021                            LBT,'0800'X       CALL_FPT+15,AUTO
  24193   2 000799       0800

     2100    24194    3                      IF DATACNT > %L0 AND IN_PKTHDR.CAUSE ~= 0

  24194   2 00079A  D847 003F                            LDR,R5   DATACNT,AUTO
          2 00079C  5D05                                 CMV,R5   5
          2 00079D  0381 000E                            BLE      s:24198,PREL
          2 00079F  8280 0000 0001  01                   LB,'00FF'X        IN_PKTHDR+1
          2 0007A2       00FF
          2 0007A3  0581 0008                            BBF      s:24198,PREL

     2101    24195    3                         THEN
     2102    24196    3                            ERCOD = FTLCLR ;

  24196   2 0007A5  8C80 0000 03C6  00                   LDI      FTLCLR
          2 0007A8  8D47 0022                            SDI      ERCOD,AUTO
          2 0007AA  0F81 0011                            B        s:24203,PREL

     2103    24197    3                         ELSE
     2104    24198    3                            IF KX$L3.STATE.LAST = %Y_ST_CALL# AND KX$L3.RTRCNT > 0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:314  

  24198   2 0007AC  C846 0031                            LDR,R4   49,B6
          2 0007AE  C570 00FF                            AND,R4   255,IMO
          2 0007B0  4D08                                 CMV,R4   8
          2 0007B1  0981 0005                            BNE      s:24202,PREL
          2 0007B3  B2C6 0072                            LLH,R3   114,B6
          2 0007B5  3981 0009                            BNEZ,R3  s:24205,PREL

     2105    24199    3                               THEN
     2106    24200    3                                  EXIT; /* Only log the first clear */
     2107    24201    3                               ELSE
     2108    24202    3                                  ERCOD = CLRRCV ;

  24202   2 0007B7  8C80 0000 0386  00                   LDI      CLRRCV
          2 0007BA  8D47 0022                            SDI      ERCOD,AUTO

     2109    24203    3                      CALL Y$ER2 ;

  24203   2 0007BC  E3C0 20EA                            LNJ,B6   s:0,PREL
          2 0007BE       0001                            DC       s:24205,PREL

     2110    24204    3                   END;

     2111    24205    2             CALL_FPT.V_.ADR$ = DAT$;

  24205   2 0007BF  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0007C1  EFC7 001D                            STB,B6   CALL_FPT+11,AUTO

     2112    24206    2             CALL_FPT.V_.BYTX = BYTE_INDEX;

  24206   2 0007C3  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 0007C5  EF47 001F                            STR,R6   CALL_FPT+13,AUTO

     2113    24207    2             CALL_FPT.V_.BYTSIZ = KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX;

  24207   2 0007C7  E246 0007                            SUB,R6   7,B6
          2 0007C9  8256                                 NEG      R6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:315  
          2 0007CA  6E10                                 ADV,R6   16
          2 0007CB  EF47 0020                            STR,R6   CALL_FPT+14,AUTO

     2114    24208    2             CALL_FPT.PRM3N4.PRM3 = CHR_$$$_X;

  24208   2 0007CD  D847 003A                            LDR,R5   CHR_$$$_X,AUTO
          2 0007CF  DF47 0019                            STR,R5   CALL_FPT+7,AUTO

     2115    24209    2             CALL_FPT.PRM3N4.PRM4 = CHR_SEG_X;

  24209   2 0007D1  C847 003B                            LDR,R4   CHR_SEG_X,AUTO
          2 0007D3  CF47 001A                            STR,R4   CALL_FPT+8,AUTO

     2116    24210    2             CALL_FPT.PRM5N6.PRM5 = CHR_DUR_X;

  24210   2 0007D5  B847 003C                            LDR,R3   CHR_DUR_X,AUTO
          2 0007D7  BF47 001B                            STR,R3   CALL_FPT+9,AUTO

     2117    24211    2             IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0

  24211   2 0007D9  A847 002C                            LDR,R2   PEVENT,AUTO
          2 0007DB  2D0C                                 CMV,R2   12
          2 0007DC  0981 001B                            BNE      s:24223,PREL
          2 0007DE  9847 003F                            LDR,R1   DATACNT,AUTO
          2 0007E0  1D05                                 CMV,R1   5
          2 0007E1  0381 0016                            BLE      s:24223,PREL

     2118    24212    2                THEN
     2119    24213    3                   DO;

     2120    24214    3                      CALL_FPT.PRS.PRM1 = '1'B;

  24214   2 0007E3  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  24214   2 0007E5       8000

     2121    24215    3                      CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:316  
  24215   2 0007E6  E800 0000 0001  01                   LDR,R6   IN_PKTHDR+1
          2 0007E9  E570 00FF                            AND,R6   255,IMO
          2 0007EB  EF47 0017                            STR,R6   CALL_FPT+5,AUTO

     2122    24216    3                      IF DATACNT > %L1

  24216   2 0007ED  1D06                                 CMV,R1   6
          2 0007EE  0381 0009                            BLE      s:24223,PREL

     2123    24217    3                         THEN
     2124    24218    4                            DO;

     2125    24219    4                               CALL_FPT.PRS.PRM2 = '1'B;

  24219   2 0007F0  8947 0021                            LBT,'4000'X       CALL_FPT+15,AUTO
  24219   2 0007F2       4000

     2126    24220    4                               CALL_FPT.PRM2 = IN_PKTHDR.DIAG;

  24220   2 0007F3  E280 0000 0002  01                   LLH,R6   IN_PKTHDR+2
          2 0007F6  EF47 0018                            STR,R6   CALL_FPT+6,AUTO

     2127    24221    4                            END;

     2128    24222    3                   END;

     2129    24223    2             CALL Y$RESET_L3CNTX;

  24223   2 0007F8  E3C0 1F18                            LNJ,B6   s:0,PREL
          2 0007FA       0001                            DC       s:24224,PREL

     2130    24224    2             CALL_FPT.EVN = %KX_CM_EV_VCLST#;

  24224   2 0007FB  6C04                                 LDV,R6   4
          2 0007FC  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2131    24225    2             IF KX$L3.CHN$ -> KH$CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:317  

  24225   2 0007FE  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000800  DCC6 0006                            LDB,B5   6,B6
          2 000802  D845 0012                            LDR,R5   18,B5
          2 000804  D570 00FF                            AND,R5   255,IMO
          2 000806  5D02                                 CMV,R5   2
          2 000807  0981 005B                            BNE      s:24267,PREL

     2132    24226    2                THEN
     2133    24227    3                   DO;

     2134    24228    3                      CODE = %KHA_FNC_DISCONNECT_EVT ;

  24228   2 000809  4C0C                                 LDV,R4   12
          2 00080A  CF47 0029                            STR,R4   CODE,AUTO

     2135    24229    3                      CALL Y$DVCADM;

  24229   2 00080C  E3C0 21D2                            LNJ,B6   s:0,PREL
          2 00080E       0001                            DC       s:24231,PREL

     2136    24230
     2137    24231    3                      IF PSTATE ~= KX$L3.STATE.CURRENT

  24231   2 00080F  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000811  E2C6 0031                            LLH,R6   49,B6
          2 000813  E947 002D                            CMR,R6   PSTATE,AUTO
          2 000815  0901 0007                            BE       s:24237,PREL

     2138    24232    3                         THEN
     2139    24233    4                            DO;

     2140    24234    4                               CALL Y$SEND_PACKET;

  24234   2 000817  E3C0 0BC0                            LNJ,B6   s:0,PREL
          2 000819       0001                            DC       s:24235,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:318  
     2141    24235    4                               RETURN;

  24235   2 00081A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2142    24236    4                            END;
     2143    24237    3                      IF KX$L3.STATE.LAST = %Y_ST_CALL#

  24237   2 00081D  D846 0031                            LDR,R5   49,B6
          2 00081F  D570 00FF                            AND,R5   255,IMO
          2 000821  5D08                                 CMV,R5   8
          2 000822  0981 0039                            BNE      s:24263,PREL

     2144    24238    3                         THEN
     2145    24239    4                            DO;

     2146    24240    4                               KX$L3.RTRCNT = KX$L3.RTRCNT + 1;

  24240   2 000824  C2C6 0072                            LLH,R4   114,B6
          2 000826  4E01                                 ADV,R4   1
          2 000827  C7C6 0072                            STH,R4   114,B6

     2147    24241    4                               IF ( KX$L3.R21 ~= 0 OR

  24241   2 000829  C2C6 0070                            LLH,R4   112,B6
          2 00082B  4981 0005                            BNEZ,R4  s:24241+8,PREL
          2 00082D  B846 0013                            LDR,R3   19,B6
          2 00082F  3901 0027                            BEZ,R3   s:24260,PREL
          2 000831  B2C6 0072                            LLH,R3   114,B6
          2 000833  B954                                 CMR,R3   R4
          2 000834  0A01 0015                            BAG      s:24255,PREL
          2 000836  A800 0000 0001  01                   LDR,R2   IN_PKTHDR+1
          2 000839  A570 00FF                            AND,R2   255,IMO
          2 00083B  2D01                                 CMV,R2   1
          2 00083C  0901 000D                            BE       s:24255,PREL
          2 00083E  2D05                                 CMV,R2   5
          2 00083F  0901 000A                            BE       s:24255,PREL
          2 000841  2D09                                 CMV,R2   9
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:319  
          2 000842  0901 0007                            BE       s:24255,PREL
          2 000844  2D0D                                 CMV,R2   13
          2 000845  0901 0004                            BE       s:24255,PREL
          2 000847  2D11                                 CMV,R2   17
          2 000848  0981 000E                            BNE      s:24260,PREL

     2148    24242    4                                  KX$L3.TYP ~= %KX_VC_TYP_PRM# ) AND
     2149    24243    4                                  ( KX$L3.RTRCNT > KX$L3.R21 OR
     2150    24244        /*
     2151    24245           Look at clearing cause to see if there is any point for retrying
     2152    24246           the call packet.
     2153    24247        */
     2154    24248    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_BSY# OR
     2155    24249    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_NTWCGS# OR
     2156    24250    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_LNKDWN# OR
     2157    24251    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_PTH# OR
     2158    24252    4                                  IN_PKTHDR.CAUSE = %KX_CAUSE_RMT# )
     2159    24253    4                                  THEN
     2160    24254    5                                     DO;

     2161    24255    5                                        ERCOD = CALRTREXH ;

  24255   2 00084A  8C80 0000 03C8  00                   LDI      CALRTREXH
          2 00084D  8D47 0022                            SDI      ERCOD,AUTO

     2162    24256    5                                        CALL Y$ER ;

  24256   2 00084F  E3C0 207F                            LNJ,B6   s:0,PREL
          2 000851       0001                            DC       s:24257,PREL

     2163    24257    5                                        CALL_FPT.EVN = %KX_CM_EV_VCLST_PRM#;

  24257   2 000852  6C0F                                 LDV,R6   15
          2 000853  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2164    24258    5                                     END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:320  
  24258   2 000855  0F81 000D                            B        s:24267,PREL

     2165    24259    4                                  ELSE
     2166    24260    4                                     CALL_FPT.EVN = %KX_CM_EV_VCDWN#;

  24260   2 000857  3C05                                 LDV,R3   5
          2 000858  BF47 0012                            STR,R3   CALL_FPT,AUTO

     2167    24261    4                            END;  /* if last state was call */

  24261   2 00085A  0F81 0008                            B        s:24267,PREL

     2168    24262    3                         ELSE
     2169    24263    3                            IF KX$L3.TYP = %KX_VC_TYP_PRM#

  24263   2 00085C  C846 0013                            LDR,R4   19,B6
          2 00085E  4981 0004                            BNEZ,R4  s:24267,PREL

     2170    24264    3                               THEN
     2171    24265    3                                  CALL_FPT.EVN = %KX_CM_EV_VCDWN#;

  24265   2 000860  3C05                                 LDV,R3   5
          2 000861  BF47 0012                            STR,R3   CALL_FPT,AUTO

     2172    24266    3                   END;  /* if subchan; CALL_FPT.EVN is now set up */

     2173    24267    2             IF CM$ ~= ADDR(NIL)

  24267   2 000863  8DC7 000A                            CMN      CM$,AUTO
          2 000865  0901 000E                            BE       s:24267,PREL

     2174    24268    2                THEN
     2175    24269    2                   CALL Y$CNCMNG WHENALTRETURN

  24269   2 000867  E3C0 095E                            LNJ,B6   s:0,PREL
          2 000869       0003                            DC       s:24271,PREL
          2 00086A  0F81 0009                            B        s:24267,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:321  

     2176    24270    3                         DO;

     2177    24271    3                            IF ACTION = %Y_ACT_CLRRCV#

  24271   2 00086C  E847 0034                            LDR,R6   ACTION,AUTO
          2 00086E  6D08                                 CMV,R6   8
          2 00086F  0981 0004                            BNE      s:24267,PREL

     2178    24272    3                               THEN
     2179    24273    3                                  RETURN;

  24273   2 000871  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

  24267   2                              L_CLRC          null
     2180    24274    3                         END;
     2181    24275    2   L_CLRC:   ;
     2182    24276    2             IF KX$L3.CLRCPND

  24276   2 000874  ECC7 0008            L_CLRC          LDB,B6   L3$,AUTO
          2 000876  82C6 0076                            LB,'0040'X        118,B6
          2 000878       0040
          2 000879  0581 0007                            BBF      s:24282,PREL

     2183    24277    2                THEN
     2184    24278    3                   DO;

     2185    24279    3                      KX$L3.CLRCPND = '0'B;

  24279   2 00087B  8846 0076                            LBF,'0040'X       118,B6
  24279   2 00087D       0040

     2186    24280    3                      CALL Y$SEND_PACKET;

  24280   2 00087E  E3C0 0B59                            LNJ,B6   s:0,PREL
          2 000880       0001                            DC       s:24282,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:322  
     2187    24281    3                   END;

     2188    24282    2             KX$L3.LCN# = 0;

  24282   2 000881  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000883  8846 002A                            LBF,'0FFF'X       42,B6
          2 000885       0FFF

     2189    24283
     2190    24284        /* Figure out what to do depending what we had just told CM */
     2191    24285
     2192    24286    3             DO CASE ( CALL_FPT.EVN );

  24286   2 000886  B847 0012                            LDR,R3   CALL_FPT,AUTO
          2 000888  3EFC                                 ADV,R3   -4
          2 000889  3D0C                                 CMV,R3   12
          2 00088A  0281 0938                            BGE      s:25392,PREL
          2 00088C  A830 0000 0892  02                   LDR,R2   s:24286+12,R3
          2 00088F  83A0 0000 089E  02                   JMP      L_RLSL3,R2
          2 000892       0000                            DC       s:24288,PREL
          2 000893       0023                            DC       s:24301,PREL
          2 000894       0057                            DC       s:24321,PREL
          2 000895       0057                            DC       s:24321,PREL
          2 000896       0057                            DC       s:24321,PREL
          2 000897       0057                            DC       s:24321,PREL
          2 000898       0057                            DC       s:24321,PREL
          2 000899       0057                            DC       s:24321,PREL
          2 00089A       0057                            DC       s:24321,PREL
          2 00089B       0057                            DC       s:24321,PREL
          2 00089C       0057                            DC       s:24321,PREL
          2 00089D       0053                            DC       s:24318,PREL

     2193    24287
     2194    24288    3                CASE ( %KX_CM_EV_VCLST# );

     2195    24289
     2196    24290    3   L_RLSL3:        IF NOT KX$L3.RLSCHN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:323  

  24290   2 00089E  ECC7 0008            L_RLSL3         LDB,B6   L3$,AUTO
          2 0008A0  82C6 0029                            LB,'0400'X        41,B6
          2 0008A2       0400
          2 0008A3  0501 000D                            BBT      s:24296,PREL

     2197    24291    3                      THEN
     2198    24292    4                         DO;

     2199    24293    4                            KX$L3.CHN$->KH$CHN.CTX$ = ADDR(NIL);

  24293   2 0008A5  DCC6 0006                            LDB,B5   6,B6
          2 0008A7  CB80 0000 0000                       LAB,B4   0
          2 0008AA  CFC5 000C                            STB,B4   12,B5

     2200    24294    4                            KX$L3.CHN$ = ADDR(NIL);

  24294   2 0008AC  DB80 0000 0000                       LAB,B5   0
          2 0008AF  DFC6 0006                            STB,B5   6,B6

     2201    24295    4                         END;

     2202    24296    3                   TEMP2$ = L3$;

  24296   2 0008B1  EFC7 0042                            STB,B6   TEMP2$,AUTO

     2203    24297    3                   CALL KXS$RLSL3_MAYBE ( TEMP2$ );

  24297   2 0008B3  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 0008B5  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 0008B7  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0008B9  CBF0 0100                            LAB,B4   256,IMO
          2 0008BB  E380 0000 0000  xent                 LNJ,B6   KXS$RLSL3_MAYBE
          2 0008BE       0001                            DC       s:24297+12,PREL
          2 0008BF  0F81 0903                            B        s:25392,PREL

     2204    24298
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:324  
     2205    24299    3                CASE ( %KX_CM_EV_VCDWN# );

     2206    24300
     2207    24301    3                   IF PSTATE = KX$L3.STATE.CURRENT

  24301   2 0008C1  E2C6 0031                            LLH,R6   49,B6
          2 0008C3  E947 002D                            CMR,R6   PSTATE,AUTO
          2 0008C5  0981 08FD                            BNE      s:25392,PREL

     2208    24302    3                      THEN
     2209    24303    3                         IF KX$L3.CALDLY = 0

  24303   2 0008C7  D846 0074                            LDR,R5   116,B6
          2 0008C9  5981 001A                            BNEZ,R5  s:24312,PREL

     2210    24304    3                            THEN  /* Simulate a time-out  */
     2211    24305    4                               DO;

     2212    24306    4                                  CALL_FPT = '0'B;

  24306   2 0008CB  5C20                                 LDV,R5   32
          2 0008CC  0021                                 ALR      ;
          2 0008CD       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0008CF       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

     2213    24307    4                                  CALL_FPT.EVN = %KX_P_EV_TO#;

  24307   2 0008D1  6C08                                 LDV,R6   8
          2 0008D2  437F                                 CSYNC    s:24307,SPREL
          2 0008D3  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2214    24308    4                                  CALL_FPT.RCV$ = L3$;

  24308   2 0008D5  EFC7 0015                            STB,B6   CALL_FPT+3,AUTO

     2215    24309    4                                  CALL KXP$PACKET ( CALL_FPT );

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:325  
  24309   2 0008D7  DBC7 0012                            LAB,B5   CALL_FPT,AUTO
          2 0008D9  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 0008DB  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0008DD  CBF0 0100                            LAB,B4   256,IMO
          2 0008DF  E3C0 F720                            LNJ,B6   s:13,PREL
          2 0008E1       0001                            DC       s:24310,PREL

     2216    24310    4                               END;

  24310   2 0008E2  0F81 08E0                            B        s:25392,PREL

     2217    24311    3                            ELSE
     2218    24312    3                               IF NOT KX$L3.TMRBLK.ON

  24312   2 0008E4  89C6 0056                            CMZ      86,B6
          2 0008E6  0801 08DC                            BAL      s:25392,PREL

     2219    24313    3                                  THEN
     2220    24314    4                                     DO;

     2221    24315    4                                        CALL Y$START_TIMER ( KX$L3.CALDLY );

  24315   2 0008E8  DBC6 0074                            LAB,B5   116,B6
          2 0008EA  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 0008EC  E3C0 2212                            LNJ,B6   s:0,PREL
          2 0008EE       0001                            DC       s:24316,PREL

     2222    24316    4                                     END;

  24316   2 0008EF  0F81 08D3                            B        s:25392,PREL

     2223    24317    3                CASE ( %KX_CM_EV_VCLST_PRM# );

     2224    24318    3                   IF KX$L3.TYP ~= %KX_VC_TYP_PRM#

  24318   2 0008F1  E846 0013                            LDR,R6   19,B6
          2 0008F3  6981 FFAA                            BNEZ,R6  s:24288,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:326  

     2225    24319    3                      THEN
     2226    24320    3                         GOTO L_RLSL3;
     2227    24321    3             END;  /* do case ( .evn ) */

  24321   2 0008F5  0F81 08CD                            B        s:25392,PREL

     2228    24322        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:327  
     2229    24323        /*
     2230    24324               CLR_CALL - Send a Clear packet beacuse of invalid call set-up
     2231    24325                  Log the event
     2232    24326                  Send a Clear packet
     2233    24327                  Start the timer
     2234    24328                  Reset the context block
     2235    24329                  If connected to CM
     2236    24330                     Report VCDWN
     2237    24331        */
     2238    24332    2          CASE ( %Y_ACT_CLR_CALL# );

     2239    24333
     2240    24334    2             ERCOD = INVCALPRM;

  24334   2 0008F7  8C80 0000 03CA  00                   LDI      INVCALPRM
          2 0008FA  8D47 0022                            SDI      ERCOD,AUTO

     2241    24335    2             CALL Y$ER2;

  24335   2 0008FC  E3C0 1FAA                            LNJ,B6   s:0,PREL
          2 0008FE       0001                            DC       s:24334,PREL

  24334   2                              CLR_COMMON      null
     2242    24336        /*
     2243    24337                                             Since all of the CLR_? cases
     2244    24338                                             have identical actions other
     2245    24339                                             than the diagnostic code, all of
     2246    24340                                             them come here.
     2247    24341        */
     2248    24342    2   CLR_COMMON: ;
     2249    24343
     2250    24344    2             CALL Y$RESET_L3CNTX;

  24344   2 0008FF  E3C0 1E11            CLR_COMMON      LNJ,B6   s:0,PREL
          2 000901       0001                            DC       s:24345,PREL

     2251    24345    2             CALL KXS$GETBFR ( 2, TEMP2$ );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:328  

  24345   2 000902  EBF0 0002                            LAB,B6   2,IMO
          2 000904  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 000906  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 000908  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 00090A  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00090C  CBF0 0200                            LAB,B4   512,IMO
          2 00090E  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 000911       0001                            DC       s:24346,PREL

     2252    24346    2             DAT$ = TEMP2$;

  24346   2 000912  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 000914  EFC7 0006                            STB,B6   DAT$,AUTO

     2253    24347    2             KX$DATA.RLS.L3 = '1'B;

  24347   2 000916  8946 0006                            LBT,'8000'X       6,B6
  24347   2 000918       8000

     2254    24348    2             KX$DATA.CNT = %L2 + L2EXT;

  24348   2 000919  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 00091B  E847 003D                            LDR,R6   L2EXT,AUTO
          2 00091D  6E07                                 ADV,R6   7
          2 00091E  EF46 0007                            STR,R6   7,B6

     2255    24349    2             OUT_PKTHDR.TYPE = %Y_ID_CLEAR#;

  24349   2 000920  5C13                                 LDV,R5   19
          2 000921  D780 0000 0004  01                   STH,R5   OUT_PKTHDR+1

     2256    24350    2             OUT_PKTHDR.CAUSE = %KX_CAUSE_DTE#;

  24350   2 000924  8800 0000 0004  01                   LBF,'00FF'X       OUT_PKTHDR+1
  24350   2 000927       00FF

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:329  
     2257    24351    2             OUT_PKTHDR.DIAG = DIAG;

  24351   2 000928  C847 002F                            LDR,R4   DIAG,AUTO
          2 00092A  C780 0000 0005  01                   STH,R4   OUT_PKTHDR+2

     2258    24352    2             CALL Y$PACKET_OUT;

  24352   2 00092D  E3C0 08C7                            LNJ,B6   s:0,PREL
          2 00092F       0001                            DC       s:24353,PREL

     2259    24353    2             KX_STATS_X25.CLEARS_OUT = KX_STATS_X25.CLEARS_OUT + 1;

  24353   2 000930  8A80 0000 002F  xsym                 INC      KX_STATS_X25+47
          2 000933  8E80 0000 002E  xsym                 CAD      KX_STATS_X25+46

     2260    24354
     2261    24355    2             KX$L3.RTRCNT = 0;

  24355   2 000936  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000938  87C6 0072                            CLH      114,B6

     2262    24356    2             CALL Y$START_TIMER ( KX$L3.T23 );

  24356   2 00093A  DBC6 006D                            LAB,B5   109,B6
          2 00093C  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 00093E  E3C0 21C0                            LNJ,B6   s:0,PREL
          2 000940       0001                            DC       s:24357,PREL

     2263    24357    2             IF CM$ ~= ADDR(NIL)

  24357   2 000941  8DC7 000A                            CMN      CM$,AUTO
          2 000943  0901 087F                            BE       s:25392,PREL

     2264    24358    2                THEN
     2265    24359    3                   DO;

     2266    24360    3                      CALL_FPT.EVN = %KX_CM_EV_VCLST#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:330  

  24360   2 000945  6C04                                 LDV,R6   4
          2 000946  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2267    24361    3                      IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0

  24361   2 000948  D847 002C                            LDR,R5   PEVENT,AUTO
          2 00094A  5D0C                                 CMV,R5   12
          2 00094B  0981 001B                            BNE      s:24373,PREL
          2 00094D  C847 003F                            LDR,R4   DATACNT,AUTO
          2 00094F  4D05                                 CMV,R4   5
          2 000950  0381 0016                            BLE      s:24373,PREL

     2268    24362    3                         THEN
     2269    24363    4                            DO;

     2270    24364    4                               CALL_FPT.PRS.PRM1 = '1'B;

  24364   2 000952  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  24364   2 000954       8000

     2271    24365    4                               CALL_FPT.PRM1 = OUT_PKTHDR.CAUSE;

  24365   2 000955  B800 0000 0004  01                   LDR,R3   OUT_PKTHDR+1
          2 000958  B570 00FF                            AND,R3   255,IMO
          2 00095A  BF47 0017                            STR,R3   CALL_FPT+5,AUTO

     2272    24366    4                               IF DATACNT > %L1

  24366   2 00095C  4D06                                 CMV,R4   6
          2 00095D  0381 0009                            BLE      s:24373,PREL

     2273    24367    4                                  THEN
     2274    24368    5                                     DO;

     2275    24369    5                                        CALL_FPT.PRS.PRM2 = '1'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:331  
  24369   2 00095F  8947 0021                            LBT,'4000'X       CALL_FPT+15,AUTO
  24369   2 000961       4000

     2276    24370    5                                        CALL_FPT.PRM2 = OUT_PKTHDR.DIAG;

  24370   2 000962  A280 0000 0005  01                   LLH,R2   OUT_PKTHDR+2
          2 000965  AF47 0018                            STR,R2   CALL_FPT+6,AUTO

     2277    24371    5                                     END;

     2278    24372    4                            END;

     2279    24373    3                      CALL Y$CNCMNG;

  24373   2 000967  E3C0 085E                            LNJ,B6   s:0,PREL
          2 000969       0001                            DC       s:24374,PREL

     2280    24374    3                   END;

  24374   2 00096A  0F81 0858                            B        s:25392,PREL

     2281    24375        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:332  
     2282    24376        /*
     2283    24377               CLR_CALTO - Send a Clear packet because of call time-out
     2284    24378                  Log the event
     2285    24379                  If out of call retries,
     2286    24380                     Log the event
     2287    24381                     Report a kill to handler common
     2288    24382                     Return
     2289    24383                  Send a Clear packet
     2290    24384                  Start the timer
     2291    24385                  Reset the context block
     2292    24386                  If connected to CM,
     2293    24387                     Report VCDWN
     2294    24388        */
     2295    24389    2          CASE ( %Y_ACT_CLR_CALTO# );

     2296    24390
     2297    24391    2             ERCOD = CALTIMOUT ;

  24391   2 00096C  8C80 0000 03CC  00                   LDI      CALTIMOUT
          2 00096F  8D47 0022                            SDI      ERCOD,AUTO

     2298    24392    2             IF ( KX$L3.RTRCNT = 0 ) THEN CALL Y$ER ;

  24392   2 000971  E2C6 0072                            LLH,R6   114,B6
          2 000973  6981 0004                            BNEZ,R6  s:24395,PREL

  24392   2 000975  E3C0 1F59                            LNJ,B6   s:0,PREL
          2 000977       0001                            DC       s:24395,PREL

     2299    24393
     2300    24394
     2301    24395    2             KX$L3.RTRCNT = KX$L3.RTRCNT + 1;

  24395   2 000978  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00097A  E2C6 0072                            LLH,R6   114,B6
          2 00097C  6E01                                 ADV,R6   1
          2 00097D  E7C6 0072                            STH,R6   114,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:333  

     2302    24396    2             IF KX$L3.RTRCNT > KX$L3.R21 AND

  24396   2 00097F  E2C6 0072                            LLH,R6   114,B6
          2 000981  D2C6 0070                            LLH,R5   112,B6
          2 000983  E955                                 CMR,R6   R5
          2 000984  0A81 0018                            BALE     s:24409,PREL
          2 000986  5981 0005                            BNEZ,R5  s:24400,PREL
          2 000988  C846 0013                            LDR,R4   19,B6
          2 00098A  4901 0012                            BEZ,R4   s:24409,PREL

     2303    24397    2                ( KX$L3.R21 ~= 0 OR KX$L3.TYP ~= %KX_VC_TYP_PRM# )
     2304    24398    2                THEN
     2305    24399    3                   DO;

     2306    24400    3                      ERCOD = CALRTREXH ;

  24400   2 00098C  8C80 0000 03C8  00                   LDI      CALRTREXH
          2 00098F  8D47 0022                            SDI      ERCOD,AUTO

     2307    24401    3                      CALL Y$ER ;

  24401   2 000991  E3C0 1F3D                            LNJ,B6   s:0,PREL
          2 000993       0001                            DC       s:24403,PREL

     2308    24402
     2309    24403    3                      CODE = %KHA_FNC_KILL ;

  24403   2 000994  6C03                                 LDV,R6   3
          2 000995  EF47 0029                            STR,R6   CODE,AUTO

     2310    24404    3                      CALL Y$DVCADM;

  24404   2 000997  E3C0 2047                            LNJ,B6   s:0,PREL
          2 000999       0001                            DC       s:24406,PREL

     2311    24405
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:334  
     2312    24406    3                      RETURN;

  24406   2 00099A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2313    24407    3                   END;
     2314    24408
     2315    24409    2             DIAG = %KX_DIAG_TO_CAL#;

  24409   2 00099D  4C31                                 LDV,R4   49
          2 00099E  CF47 002F                            STR,R4   DIAG,AUTO

     2316    24410    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24410   2 0009A0  0F81 FF5E                            B        s:24334,PREL

     2317    24411        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:335  
     2318    24412        /*
     2319    24413               CLR_DISC - send a Clear packet due to a disconnect from HC
     2320    24414                  Log the event
     2321    24415                  Clear the retry count
     2322    24416                  Send a Clear packet
     2323    24417                  Start the timer
     2324    24418                  If connected to CM,
     2325    24419                     Report VCDWN
     2326    24420        */
     2327    24421    2          CASE ( %Y_ACT_CLR_DISC# );

     2328    24422
     2329    24423    2             ERCOD = HC_DSC ;

  24423   2 0009A2  8C80 0000 0388  00                   LDI      HC_DSC
          2 0009A5  8D47 0022                            SDI      ERCOD,AUTO

     2330    24424    2             CALL Y$ER ;

  24424   2 0009A7  E3C0 1F27                            LNJ,B6   s:0,PREL
          2 0009A9       0001                            DC       s:24426,PREL

     2331    24425
     2332    24426    2             KX$L3.RTRCNT = 0;

  24426   2 0009AA  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0009AC  87C6 0072                            CLH      114,B6

     2333    24427    2             DIAG = %KX_DIAG_DSC#;

  24427   2 0009AE  E870 00C8                            LDR,R6   200,IMO
          2 0009B0  EF47 002F                            STR,R6   DIAG,AUTO

     2334    24428    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24428   2 0009B2  0F81 FF4C                            B        s:24334,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:336  
     2335    24429        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:337  
     2336    24430        /*
     2337    24431               CLR_P2 - Send a Clear - invalid packet for state P2
     2338    24432                  Log the event
     2339    24433                  Send a Clear packet
     2340    24434                  Start the timer
     2341    24435                  If connected to CM,
     2342    24436                     Report VCDWN
     2343    24437        */
     2344    24438    2          CASE ( %Y_ACT_CLR_P2# );

     2345    24439
     2346    24440    2             ERCOD = CLR_P2 ;

  24440   2 0009B4  8C80 0000 03D0  00                   LDI      CLR_P2
          2 0009B7  8D47 0022                            SDI      ERCOD,AUTO

     2347    24441    2             CALL Y$ER000 ;

  24441   2 0009B9  E3C0 1E95                            LNJ,B6   s:0,PREL
          2 0009BB       0001                            DC       s:24443,PREL

     2348    24442
     2349    24443    2             IF KX$L3.CALL_COLLISION

  24443   2 0009BC  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0009BE  82C6 0076                            LB,'0008'X        118,B6
          2 0009C0       0008
          2 0009C1  0581 0006                            BBF      s:24447,PREL

     2350    24444    2                THEN
     2351    24445    2                   DIAG = %KX_DIAG_P5#;

  24445   2 0009C3  6C18                                 LDV,R6   24
          2 0009C4  EF47 002F                            STR,R6   DIAG,AUTO
          2 0009C6  0F81 0004                            B        s:24448,PREL

     2352    24446    2                ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:338  
     2353    24447    2                   DIAG = %KX_DIAG_P2#;

  24447   2 0009C8  6C15                                 LDV,R6   21
          2 0009C9  EF47 002F                            STR,R6   DIAG,AUTO

     2354    24448    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24448   2 0009CB  0F81 FF33                            B        s:24334,PREL

     2355    24449        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:339  
     2356    24450        /*
     2357    24451               CLR_P3 - Send a Clear - invalid packet for state P3
     2358    24452                  Log the event
     2359    24453                  Send a Clear packet
     2360    24454                  Start the timer
     2361    24455                  If connected to CM,
     2362    24456                     Report VCDWN
     2363    24457        */
     2364    24458    2          CASE ( %Y_ACT_CLR_P3# );

     2365    24459
     2366    24460    2             ERCOD = CLR_P3 ;

  24460   2 0009CD  8C80 0000 03D2  00                   LDI      CLR_P3
          2 0009D0  8D47 0022                            SDI      ERCOD,AUTO

     2367    24461    2             CALL Y$ER000 ;

  24461   2 0009D2  E3C0 1E7C                            LNJ,B6   s:0,PREL
          2 0009D4       0001                            DC       s:24463,PREL

     2368    24462
     2369    24463    2             DIAG = %KX_DIAG_P3#;

  24463   2 0009D5  6C16                                 LDV,R6   22
          2 0009D6  EF47 002F                            STR,R6   DIAG,AUTO

     2370    24464    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24464   2 0009D8  0F81 FF26                            B        s:24334,PREL

     2371    24465        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:340  
     2372    24466        /*
     2373    24467               CLR_P4 - Send a Clear - invalid packet for state P4
     2374    24468                  This action is borrowed to send clear pkts w/ other diags.
     2375    24469                  Log the event
     2376    24470                  Send a Clear packet
     2377    24471                  Start the timer
     2378    24472                  If connected to CM,
     2379    24473                     Report VCDWN
     2380    24474        */
     2381    24475    2          CASE ( %Y_ACT_CLR_P4# );

     2382    24476
     2383    24477    2             IF PEVENT ~= %Y_EV_BAD_CALL#

  24477   2 0009DA  1D18                                 CMV,R1   24
          2 0009DB  0901 0014                            BE       s:24492,PREL

     2384    24478    2                THEN
     2385    24479    3                   DO;

     2386    24480    3                      IF PEVENT = %Y_EV_SHR_PKT#

  24480   2 0009DD  1D1A                                 CMV,R1   26
          2 0009DE  0981 0006                            BNE      s:24487,PREL

     2387    24481    3                         THEN
     2388    24482    4                            DO;

     2389    24483    4                               DIAG = %KX_DIAG_SHR#;

  24483   2 0009E0  6C26                                 LDV,R6   38
          2 0009E1  EF47 002F                            STR,R6   DIAG,AUTO

     2390    24484    4                            END;

  24484   2 0009E3  0F81 000C                            B        s:24492,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:341  
     2391    24485    3                         ELSE
     2392    24486    4                            DO;

     2393    24487    4                               ERCOD = CLR_P4 ;

  24487   2 0009E5  8C80 0000 03D4  00                   LDI      CLR_P4
          2 0009E8  8D47 0022                            SDI      ERCOD,AUTO

     2394    24488    4                               CALL Y$ER000 ;

  24488   2 0009EA  E3C0 1E64                            LNJ,B6   s:0,PREL
          2 0009EC       0001                            DC       s:24489,PREL

     2395    24489    4                               DIAG = %KX_DIAG_P4#;

  24489   2 0009ED  6C17                                 LDV,R6   23
          2 0009EE  EF47 002F                            STR,R6   DIAG,AUTO

     2396    24490    4                            END;

     2397    24491    3                   END;

     2398    24492    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24492   2 0009F0  0F81 FF0E                            B        s:24334,PREL

     2399    24493        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:342  
     2400    24494        /*
     2401    24495               CLR_RSTTO - Send a Clear - reset time-out
     2402    24496                  Log the event
     2403    24497                  Send a Clear packet
     2404    24498                  Start the timer
     2405    24499                  If connected to CM,
     2406    24500                     Report VCDWN
     2407    24501        */
     2408    24502    2          CASE ( %Y_ACT_CLR_RSTTO# );

     2409    24503
     2410    24504    2             ERCOD = RSTTIMOUT ;

  24504   2 0009F2  8C80 0000 03D6  00                   LDI      RSTTIMOUT
          2 0009F5  8D47 0022                            SDI      ERCOD,AUTO

     2411    24505    2             CALL Y$ER ;

  24505   2 0009F7  E3C0 1ED7                            LNJ,B6   s:0,PREL
          2 0009F9       0001                            DC       s:24507,PREL

     2412    24506
     2413    24507    2             DIAG = %KX_RST_DIAG_RSTEXP#;

  24507   2 0009FA  6C33                                 LDV,R6   51
          2 0009FB  EF47 002F                            STR,R6   DIAG,AUTO

     2414    24508    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24508   2 0009FD  0F81 FF01                            B        s:24334,PREL

     2415    24509        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:343  
     2416    24510        /*
     2417    24511               CLR_TO - Sent a Clear - timed out before confirmation.
     2418    24512                  Log the event if retries exhausted
     2419    24513                  Retry the Clear packet if not exhausted - else stop.
     2420    24514                  Start the timer
     2421    24515        */
     2422    24516    2          CASE ( %Y_ACT_CLR_TO# );

     2423    24517
     2424    24518    2             KX$L3.RTRCNT = KX$L3.RTRCNT + 1;

  24518   2 0009FF  E2C6 0072                            LLH,R6   114,B6
          2 000A01  6E01                                 ADV,R6   1
          2 000A02  E7C6 0072                            STH,R6   114,B6

     2425    24519    2             IF ( KX$L3.RTRCNT < KX$L3.R23 AND NOT KX$L3.PVC )

  24519   2 000A04  E2C6 0072                            LLH,R6   114,B6
          2 000A06  B2C6 0071                            LLH,R3   113,B6
          2 000A08  E953                                 CMR,R6   R3
          2 000A09  0881 0010                            BAGE     s:24526,PREL
          2 000A0B  82C6 0029                            LB,'0100'X        41,B6
          2 000A0D       0100
          2 000A0E  0501 000B                            BBT      s:24526,PREL

     2426    24520    2                THEN
     2427    24521    3                   DO;

     2428    24522    3                      FPT_X25.PRS.PRM1 = '1'B;

  24522   2 000A10  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          2 000A12  8945 000F                            LBT,'8000'X       15,B5
          2 000A14       8000

     2429    24523    3                      FPT_X25.PRM1 = %KX_DIAG_TO_CLR#;

  24523   2 000A15  6C32                                 LDV,R6   50
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:344  
          2 000A16  EF45 0005                            STR,R6   5,B5

     2430    24524    3                      GOTO VCLST_ENTRY;   /*  in CASE ( %Y_ACT_VCDWN# ) */

  24524   2 000A18  0F81 05B1                            B        s:25206,PREL

     2431    24525    3                   END;
     2432    24526    2             ERCOD = CLRTIMOUT;

  24526   2 000A1A  8C80 0000 03DC  00                   LDI      CLRTIMOUT
          2 000A1D  8D47 0022                            SDI      ERCOD,AUTO

     2433    24527    2             CALL Y$ER;

  24527   2 000A1F  E3C0 1EAF                            LNJ,B6   s:0,PREL
          2 000A21       0001                            DC       s:24528,PREL

     2434    24528    2             KX$L3.STATE.CURRENT = %Y_ST_ENB_STOP#;

  24528   2 000A22  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000A24  87C6 0031                            CLH      49,B6

     2435    24529    2             GOTO L_STOP;  /*       In case STOP  */

  24529   2 000A26  0F81 0554                            B        s:25159,PREL

     2436    24530        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:345  
     2437    24531        /*
     2438    24532               CLR_UP - Send a Clear - unknown packet received
     2439    24533                  Log the event
     2440    24534                  Send a Clear packet
     2441    24535                  Start the timer
     2442    24536                  If connected to CM,
     2443    24537                     Report VCDWN
     2444    24538        */
     2445    24539    2          CASE ( %Y_ACT_CLR_UP# );

     2446    24540
     2447    24541    2             ERCOD = UNKPCK ;

  24541   2 000A28  8C80 0000 03DA  00                   LDI      UNKPCK
          2 000A2B  8D47 0022                            SDI      ERCOD,AUTO

     2448    24542    2             CALL Y$ER2 ;

  24542   2 000A2D  E3C0 1E79                            LNJ,B6   s:0,PREL
          2 000A2F       0001                            DC       s:24544,PREL

     2449    24543
     2450    24544    2             IF IN_PKTHDR.TYPE = %Y_ID_RESTART# OR

  24544   2 000A30  E280 0000 0001  01                   LLH,R6   IN_PKTHDR+1
          2 000A33  E970 00FB                            CMR,R6   251,IMO
          2 000A35  0901 0005                            BE       s:24547,PREL
          2 000A37  E970 00FF                            CMR,R6   255,IMO
          2 000A39  0981 0006                            BNE      s:24549,PREL

     2451    24545    2                IN_PKTHDR.TYPE = %Y_ID_RESTART_C#
     2452    24546    2                THEN
     2453    24547    2                   DIAG = %KX_DIAG_INVRST#;

  24547   2 000A3B  5C29                                 LDV,R5   41
          2 000A3C  DF47 002F                            STR,R5   DIAG,AUTO
          2 000A3E  0F81 0019                            B        s:24554,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:346  

     2454    24548    2                ELSE
     2455    24549    2                   IF DATACNT-%L0-L3EXT > KX_BUF.SIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ )

  24549   2 000A40  D847 003F                            LDR,R5   DATACNT,AUTO
          2 000A42  D247 003E                            SUB,R5   L3EXT,AUTO
          2 000A44  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000A46  B2C6 0014                            LLH,R3   20,B6
          2 000A48  5EFB                                 ADV,R5   -5
          2 000A49  5801 000B                            BLZ,R5   s:24553,PREL
          2 000A4B  D930 0000 001E  xsym                 CMR,R5   KX_BUF+30,R3
          2 000A4E  0381 0006                            BLE      s:24553,PREL

     2456    24550    2                      THEN
     2457    24551    2                         DIAG = %KX_DIAG_LNG#;

  24551   2 000A50  5C27                                 LDV,R5   39
          2 000A51  DF47 002F                            STR,R5   DIAG,AUTO
          2 000A53  0F81 0004                            B        s:24554,PREL

     2458    24552    2                      ELSE
     2459    24553    2                         DIAG = %KX_DIAG_UNKPCK#;

  24553   2 000A55  5C21                                 LDV,R5   33
          2 000A56  DF47 002F                            STR,R5   DIAG,AUTO

     2460    24554    2             GOTO CLR_COMMON;  /*       In case CLR_CALL  */

  24554   2 000A58  0F81 FEA6                            B        s:24334,PREL

     2461    24555        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:347  
     2462    24556        /*
     2463    24557               DATIN - Receipt of data from the other end
     2464    24558                  If complete,
     2465    24559                     Deliver it to CM
     2466    24560                  Otherwise,
     2467    24561                     Save it until the rest arrives
     2468    24562                  Report any pending data acknowledgements to CM
     2469    24563                  If a response should be generated,
     2470    24564                     Start the timer
     2471    24565        */
     2472    24566    2          CASE ( %Y_ACT_DATIN# );

     2473    24567
     2474    24568    2             Y@DFRINP = KX$DATA.RLS.L3;  /* are we processing deferred input? */

  24568   2 000A5A  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 000A5C  E845 0006                            LDR,R6   6,B5
          2 000A5E  E570 8000                            AND,R6   -32768,IMO
          2 000A60  EF47 0039                            STR,R6   Y@DFRINP,AUTO

     2475    24569    2             IF KX$L3.INPBLK AND NOT Y@DFRINP

  24569   2 000A62  82C6 0029                            LB,'0200'X        41,B6
  24569   2 000A64       0200
          2 000A65  0581 0021                            BBF      s:24582,PREL
          2 000A67  89C7 0039                            CMZ      Y@DFRINP,AUTO
          2 000A69  0801 001D                            BAL      s:24582,PREL

     2476    24570    2                THEN
     2477    24571    3                   DO;

     2478    24572    3                      IF KX$L3.INP_HEAD$ = ADDR(NIL)

  24572   2 000A6B  8DC6 0049                            CMN      73,B6
          2 000A6D  0981 0005                            BNE      s:24576,PREL

     2479    24573    3                         THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:348  
     2480    24574    3                            KX$L3.INP_HEAD$ = DAT$;

  24574   2 000A6F  DFC6 0049                            STB,B5   73,B6
          2 000A71  0F81 0005                            B        s:24577,PREL

     2481    24575    3                         ELSE
     2482    24576    3                            KX$L3.INP_TAIL$->KX$DATA.L3_LIST$ = DAT$;

  24576   2 000A73  CCC6 004B                            LDB,B4   75,B6
          2 000A75  DFC4 0004                            STB,B5   4,B4

     2483    24577    3                      KX$L3.INP_TAIL$ = DAT$;

  24577   2 000A77  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 000A79  DFC6 004B                            STB,B5   75,B6

     2484    24578    3                      KX$DATA.L3_LIST$ = ADDR(NIL);

  24578   2 000A7B  CB80 0000 0000                       LAB,B4   0
          2 000A7E  CFC5 0004                            STB,B4   4,B5

     2485    24579    3                      KX$DATA.RLS.L3 = '1'B;  /* mark this as deferred input */

  24579   2 000A80  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 000A82  8945 0006                            LBT,'8000'X       6,B5
          2 000A84       8000

     2486    24580    3                      GOTO KEEP_BFR;

  24580   2 000A85  0F81 0191                            B        s:24692,PREL

     2487    24581    3                   END;
     2488    24582    2             KX_STATS_X25.D_PACKETS_IN = KX_STATS_X25.D_PACKETS_IN + 1;

  24582   2 000A87  8A80 0000 001D  xsym                 INC      KX_STATS_X25+29
          2 000A8A  8E80 0000 001C  xsym                 CAD      KX_STATS_X25+28

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:349  
     2489    24583    2             TEMP0 = DATACNT - %LD - L3EXT;

  24583   2 000A8D  E847 003F                            LDR,R6   DATACNT,AUTO
          2 000A8F  E247 003E                            SUB,R6   L3EXT,AUTO
          2 000A91  6EFB                                 ADV,R6   -5
          2 000A92  EF47 002A                            STR,R6   TEMP0,AUTO

     2490    24584    2             KX_STATS_X25.D_BYTES_IN = KX_STATS_X25.D_BYTES_IN + TEMP0;

  24584   2 000A94  F856                                 LDR,R7   R6
          2 000A95  6C00                                 LDV,R6   0
          2 000A96  8400 0000 0030  xsym                 AID      KX_STATS_X25+48
          2 000A99  8D00 0000 0030  xsym                 SDI      KX_STATS_X25+48

     2491    24585    2             CALL_FPT.PRS = '0'B;

  24585   2 000A9C  8847 0021                            LBF,'F800'X       CALL_FPT+15,AUTO
  24585   2 000A9E       F800

     2492    24586
     2493    24587    2             IF KX$L3.IN_.ADR$ = ADDR(NIL)

  24587   2 000A9F  8DC6 0008                            CMN      8,B6
          2 000AA1  0981 0021                            BNE      s:24599,PREL

     2494    24588    2                THEN
     2495    24589    3                   DO;

     2496    24590    3                      KX$L3.IN_.ADR$ = DAT$;

  24590   2 000AA3  DFC6 0008                            STB,B5   8,B6

     2497    24591    3                      KX$L3.IN_.BYTX = LENGTHC(KX$PACKET) + L2EXT + L3EXT;

  24591   2 000AA5  E847 003D                            LDR,R6   L2EXT,AUTO
          2 000AA7  EA47 003E                            ADD,R6   L3EXT,AUTO
          2 000AA9  6E15                                 ADV,R6   21
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:350  
          2 000AAA  EF46 000A                            STR,R6   10,B6

     2498    24592    3                      KX$L3.IN_.BYTSIZ = DATACNT - %LD - L3EXT;

  24592   2 000AAC  B847 003F                            LDR,R3   DATACNT,AUTO
          2 000AAE  B247 003E                            SUB,R3   L3EXT,AUTO
          2 000AB0  3EFB                                 ADV,R3   -5
          2 000AB1  BF46 000B                            STR,R3   11,B6

     2499    24593    3                      KX$L3.IN_.BFRSIZ = 0;

  24593   2 000AB3  8746 000C                            CL       12,B6

     2500    24594    3                      KX$L3.IN_QBIT = IN_PKTHDR.Q_BIT;

  24594   2 000AB5  E800 0000 0000  01                   LDR,R6   IN_PKTHDR
          2 000AB8  EAC6 002A                            SRM,R6,'8000'X    42,B6
          2 000ABA       8000

     2501    24595    3                      KX$L3.IN_MBIT = MBIT;

  24595   2 000ABB  E847 0041                            LDR,R6   MBIT,AUTO
          2 000ABD  6042                                 SOR,R6   2
          2 000ABE  EAC6 002A                            SRM,R6,'2000'X    42,B6
          2 000AC0       2000

     2502    24596    3                   END;

  24596   2 000AC1  0F81 00C9                            B        s:24645,PREL

     2503    24597    2                ELSE
     2504    24598    3                   DO;

     2505    24599    3                      IF KX$L3.IN_.BFRSIZ = 0 OR ( KX$L3.IN_.BFRSIZ - KX$L3.IN_.BYTX

  24599   2 000AC3  E846 000C                            LDR,R6   12,B6
          2 000AC5  6901 000B                            BEZ,R6   s:24603,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:351  
          2 000AC7  E246 000A                            SUB,R6   10,B6
          2 000AC9  E246 000B                            SUB,R6   11,B6
          2 000ACB  6801 0005                            BLZ,R6   s:24603,PREL
          2 000ACD  E947 002A                            CMR,R6   TEMP0,AUTO
          2 000ACF  0281 0085                            BGE      s:24632,PREL

     2506    24600    3                         - KX$L3.IN_.BYTSIZ < TEMP0 )
     2507    24601    3                         THEN
     2508    24602    4                            DO;

     2509    24603    4                               SIZ = KX$L3.IN_.BYTSIZ + TEMP0;

  24603   2 000AD1  E846 000B                            LDR,R6   11,B6
          2 000AD3  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 000AD5  EF47 0033                            STR,R6   SIZ,AUTO

     2510    24604    4                               IF MBIT

  24604   2 000AD7  89C7 0041                            CMZ      MBIT,AUTO
          2 000AD9  0881 0008                            BAGE     s:24607,PREL

     2511    24605    4                                  THEN
     2512    24606    4                                    SIZ = SIZ + KX_BUF.SIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ
             24606                                              );

  24606   2 000ADB  B2C6 0014                            LLH,R3   20,B6
          2 000ADD  EA30 0000 001E  xsym                 ADD,R6   KX_BUF+30,R3
          2 000AE0  EF47 0033                            STR,R6   SIZ,AUTO

     2513    24607    4                               SIZ = (SIZ + 1) / 2;

  24607   2 000AE2  6E01                                 ADV,R6   1
          2 000AE3  6041                                 SOR,R6   1
          2 000AE4  EF47 0033                            STR,R6   SIZ,AUTO

     2514    24608    5                               CALL KVB$GET2NSYS ( SIZ, TEMP2$ ) WHENALTRETURN DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:352  
  24608   2 000AE6  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 000AE8  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 000AEA  BBC7 0033                            LAB,B3   SIZ,AUTO
          2 000AEC  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 000AEE  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000AF0  CBF0 0200                            LAB,B4   512,IMO
          2 000AF2  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          2 000AF5       0003                            DC       s:24609,PREL
          2 000AF6  0F81 001A                            B        s:24616,PREL

     2515    24609    5                                        IF KX$L3.VR > 0

  24609   2 000AF8  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000AFA  82C6 002F                            LB,'00FF'X        47,B6
          2 000AFC       00FF
          2 000AFD  0581 000A                            BBF      s:24613,PREL

     2516    24610    5                                           THEN
     2517    24611    5                                              KX$L3.VR = KX$L3.VR - 1;

  24611   2 000AFF  E846 002F                            LDR,R6   47,B6
          2 000B01  EA70 00FF                            ADD,R6   255,IMO
          2 000B03  EAC6 002F                            SRM,R6,'00FF'X    47,B6
          2 000B05       00FF
          2 000B06  0F81 0008                            B        s:24614,PREL

     2518    24612    5                                           ELSE
     2519    24613    5                                              KX$L3.VR = 7+120*L3EXT;

  24613   2 000B08  E847 003E                            LDR,R6   L3EXT,AUTO
          2 000B0A  6F78                                 MLV,R6   120
          2 000B0B  6E07                                 ADV,R6   7
          2 000B0C  EAC6 002F                            SRM,R6,'00FF'X    47,B6
          2 000B0E       00FF

     2520    24614    5                                        GOTO EXIT_CASE;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:353  
  24614   2 000B0F  0F81 015D                            B        s:24714,PREL

     2521    24615    5                                     END;
     2522    24616    4                               STR$ = KX$L3.IN_.ADR$;

  24616   2 000B11  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000B13  DCC6 0008                            LDB,B5   8,B6
          2 000B15  DFC7 0010                            STB,B5   STR$,AUTO

     2523    24617    4                               SUBSTR (TEMP2$->DATSTR,0,KX$L3.IN_.BYTSIZ) =

  24617   2 000B17  E846 000B                            LDR,R6   11,B6
          2 000B19  D846 000A                            LDR,R5   10,B6
          2 000B1B  AB85                                 LAB,B2   ,B5
          2 000B1C  A855                                 LDR,R2   R5
          2 000B1D  BCC7 0042                            LDB,B3   TEMP2$,AUTO
          2 000B1F  3C00                                 LDV,R3   0
          2 000B20  0008                                 MMM

     2524    24618    4                                  SUBSTR (INSTR,KX$L3.IN_.BYTX,KX$L3.IN_.BYTSIZ);
     2525    24619    4                               IF KX$L3.IN_.BFRSIZ = 0

  24619   2 000B21  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000B23  E846 000C                            LDR,R6   12,B6
          2 000B25  6981 000F                            BNEZ,R6  s:24626,PREL

     2526    24620    4                                  THEN
     2527    24621    5                                     DO;

     2528    24622    5                                        CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );

  24622   2 000B27  CBC6 0008                            LAB,B4   8,B6
          2 000B29  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 000B2B  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000B2D  CBF0 0100                            LAB,B4   256,IMO
          2 000B2F  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 000B32       0001                            DC       s:24623,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:354  

     2529    24623    5                                     END;

  24623   2 000B33  0F81 0014                            B        s:24628,PREL

     2530    24624    4                                  ELSE
     2531    24625    5                                     DO;

     2532    24626    5                                        CALL KVB$RLSSYS ( (KX$L3.IN_.BFRSIZ/2), KX$L3.
             24626                                                 IN_.ADR$ );

  24626   2 000B35  6041                                 SOR,R6   1
          2 000B36  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 000B38  CBC6 0008                            LAB,B4   8,B6
          2 000B3A  CFC7 00BF                            STB,B4   KV@USRENT+8,AUTO
          2 000B3C  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000B3E  BFC7 00BD                            STB,B3   KV@USRENT+6,AUTO
          2 000B40  BBC7 00BD                            LAB,B3   KV@USRENT+6,AUTO
          2 000B42  CBF0 0200                            LAB,B4   512,IMO
          2 000B44  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 000B47       0001                            DC       s:24628,PREL

     2533    24627    5                                     END;

     2534    24628    4                               KX$L3.IN_.ADR$ = TEMP2$;

  24628   2 000B48  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 000B4A  DCC7 0008                            LDB,B5   L3$,AUTO
          2 000B4C  EFC5 0008                            STB,B6   8,B5

     2535    24629    4                               KX$L3.IN_.BFRSIZ = SIZ * 2;

  24629   2 000B4E  E847 0033                            LDR,R6   SIZ,AUTO
          2 000B50  6001                                 SOL,R6   1
          2 000B51  EF45 000C                            STR,R6   12,B5

     2536    24630    4                               KX$L3.IN_.BYTX = 0;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:355  

  24630   2 000B53  8745 000A                            CL       10,B5

     2537    24631    4                            END;

     2538    24632    3                      IF ( (KX$L3.IN_.BYTSIZ+TEMP0) > 32768 )

  24632   2 000B55  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000B57  E846 000B                            LDR,R6   11,B6
          2 000B59  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 000B5B  E970 8000                            CMR,R6   -32768,IMO
          2 000B5D  0381 000A                            BLE      s:24639,PREL

     2539    24633    3                         THEN
     2540    24634    4                            DO;

     2541    24635    4                               KX$L3.STATE.CURRENT = %Y_ST_RESET#;

  24635   2 000B5F  6C0A                                 LDV,R6   10
          2 000B60  E7C6 0031                            STH,R6   49,B6

     2542    24636    4                               DATACNT = 9999;

  24636   2 000B62  D870 270F                            LDR,R5   9999,IMO
          2 000B64  DF47 003F                            STR,R5   DATACNT,AUTO

     2543    24637    4                               GOTO L_RST_D1;

  24637   2 000B66  0F81 0365                            B        s:25074,PREL

     2544    24638    4                            END;
     2545    24639    3                      STR$ = KX$L3.IN_.ADR$;

  24639   2 000B68  DCC6 0008                            LDB,B5   8,B6
          2 000B6A  DFC7 0010                            STB,B5   STR$,AUTO

     2546    24640    3                      SUBSTR (INSTR,(KX$L3.IN_.BYTSIZ+KX$L3.IN_.BYTX),TEMP0) =
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:356  

  24640   2 000B6C  E846 000B                            LDR,R6   11,B6
          2 000B6E  EA46 000A                            ADD,R6   10,B6
          2 000B70  D846 0029                            LDR,R5   41,B6
          2 000B72  5045                                 SOR,R5   5
          2 000B73  D570 0001                            AND,R5   1,IMO
          2 000B75  DA47 003D                            ADD,R5   L2EXT,AUTO
          2 000B77  ACC7 0006                            LDB,B2   DAT$,AUTO
          2 000B79  A855                                 LDR,R2   R5
          2 000B7A  2E15                                 ADV,R2   21
          2 000B7B  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 000B7D  E847 002A                            LDR,R6   TEMP0,AUTO
          2 000B7F  BB85                                 LAB,B3   ,B5
          2 000B80  B847 00BC                            LDR,R3   KV@USRENT+5,AUTO
          2 000B82  0008                                 MMM

     2547    24641    3                         SUBSTR (DATSTR,LENGTHC(KX$PACKET)+L2EXT+BITBIN(KX$L3.EXTSEQ),
             24641                                  TEMP0);
     2548    24642    3                      KX$L3.IN_.BYTSIZ = KX$L3.IN_.BYTSIZ + TEMP0;

  24642   2 000B83  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000B85  E846 000B                            LDR,R6   11,B6
          2 000B87  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 000B89  EF46 000B                            STR,R6   11,B6

     2549    24643    3                   END;

     2550    24644
     2551    24645    2             IF NOT MBIT OR KX$L3.NOREASM

  24645   2 000B8B  89C7 0041                            CMZ      MBIT,AUTO
          2 000B8D  0881 0006                            BAGE     s:24648,PREL
          2 000B8F  82C6 0076                            LB,'0080'X        118,B6
          2 000B91       0080
          2 000B92  0581 007A                            BBF      s:24686,PREL

     2552    24646    2                THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:357  
     2553    24647    3                   DO;

     2554    24648    3                      KX_STATS_X25.D_CMPPACKETS_IN = KX_STATS_X25.D_CMPPACKETS_IN + 1;

  24648   2 000B94  8A80 0000 0033  xsym                 INC      KX_STATS_X25+51
          2 000B97  8E80 0000 0032  xsym                 CAD      KX_STATS_X25+50

     2555    24649    3                      CALL_FPT.EVN = %KX_CM_EV_DATIN#;

  24649   2 000B9A  6C09                                 LDV,R6   9
          2 000B9B  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2556    24650    3                      CALL_FPT.V_ = KX$L3.IN_;

  24650   2 000B9D  AB86                                 LAB,B2   ,B6
          2 000B9E  2C10                                 LDV,R2   16
          2 000B9F  6C08                                 LDV,R6   8
          2 000BA0  BB87                                 LAB,B3   ,AUTO
          2 000BA1  3C3A                                 LDV,R3   58
          2 000BA2  0008                                 MMM

     2557    24651    3                      CALL_FPT.PRS.PRM1 = KX$L3.IN_QBIT;

  24651   2 000BA3  DCC7 0008                            LDB,B5   L3$,AUTO
          2 000BA5  E845 002A                            LDR,R6   42,B5
          2 000BA7  EAC7 0021                            SRM,R6,'8000'X    CALL_FPT+15,AUTO
          2 000BA9       8000

     2558    24652    3                      CALL_FPT.PRS.PRM2 = KX$L3.IN_MBIT;

  24652   2 000BAA  6001                                 SOL,R6   1
          2 000BAB  EAC7 0021                            SRM,R6,'4000'X    CALL_FPT+15,AUTO
          2 000BAD       4000

     2559    24653    3                      CALL_FPT.PRS.PRM2 = MBIT;

  24653   2 000BAE  E847 0041                            LDR,R6   MBIT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:358  
          2 000BB0  6041                                 SOR,R6   1
          2 000BB1  EAC7 0021                            SRM,R6,'4000'X    CALL_FPT+15,AUTO
          2 000BB3       4000

     2560    24654    3                      CALL Y$CNCMNG

  24654   2 000BB4  E3C0 0611                            LNJ,B6   s:0,PREL
          2 000BB6       0003                            DC       s:24657,PREL
          2 000BB7  0F81 0008                            B        s:24660,PREL

     2561    24655    3                         WHENALTRETURN
     2562    24656    4                            DO;

     2563    24657    4                               KX$L3.INPBLK = '1'B;

  24657   2 000BB9  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000BBB  8946 0029                            LBT,'0200'X       41,B6
          2 000BBD       0200

     2564    24658    4                               GOTO KEEP_BFR;

  24658   2 000BBE  0F81 0058                            B        s:24692,PREL

     2565    24659    4                            END;
     2566    24660    3                      KX$L3.INPBLK = '0'B;

  24660   2 000BC0  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000BC2  8846 0029                            LBF,'0200'X       41,B6
          2 000BC4       0200

     2567    24661    3                      IF PSTATE ~= KX$L3.STATE.CURRENT

  24661   2 000BC5  E2C6 0031                            LLH,R6   49,B6
          2 000BC7  E947 002D                            CMR,R6   PSTATE,AUTO
          2 000BC9  0901 000B                            BE       s:24670,PREL

     2568    24662    3                         THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:359  
     2569    24663    4                            DO;

     2570    24664    4                               FPT_X25.PRM1$ = ADDR(NIL);

  24664   2 000BCB  DB80 0000 0000                       LAB,B5   0
          2 000BCE  CCC7 0004                            LDB,B4   @FPT_X25,AUTO
          2 000BD0  DFC4 0007                            STB,B5   7,B4

     2571    24665    4                               RETURN;

  24665   2 000BD2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2572    24666    4                            END;
     2573    24667        /*    Incoming data has been passed on to higher layers.
     2574    24668              Release the buffer if KXH will not be re-using it.
     2575    24669        */
     2576    24670    3                      IF KX$L3.IN_.ADR$ ~= FPT_X25.PRM1$ OR Y@DFRINP

  24670   2 000BD5  DCC6 0008                            LDB,B5   8,B6
          2 000BD7  CCC7 0004                            LDB,B4   @FPT_X25,AUTO
          2 000BD9  DDC4 0007                            CMB,B5   7,B4
          2 000BDB  0981 0005                            BNE      s:24673,PREL
          2 000BDD  89C7 0039                            CMZ      Y@DFRINP,AUTO
          2 000BDF  0881 0026                            BAGE     s:24683,PREL

     2577    24671    3                         THEN
     2578    24672    4                            DO;

     2579    24673    4                               IF KX$L3.IN_.BFRSIZ = 0

  24673   2 000BE1  D846 000C                            LDR,R5   12,B6
          2 000BE3  5981 000F                            BNEZ,R5  s:24680,PREL

     2580    24674    4                                  THEN
     2581    24675    5                                     DO;

     2582    24676    5                                        CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:360  

  24676   2 000BE5  BBC6 0008                            LAB,B3   8,B6
          2 000BE7  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 000BE9  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000BEB  CBF0 0100                            LAB,B4   256,IMO
          2 000BED  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 000BF0       0001                            DC       s:24677,PREL

     2583    24677    5                                     END;

  24677   2 000BF1  0F81 0014                            B        s:24683,PREL

     2584    24678    4                                  ELSE
     2585    24679    5                                     DO;

     2586    24680    5                                        CALL KVB$RLSSYS ( (KX$L3.IN_.BFRSIZ/2), KX$L3.
             24680                                                 IN_.ADR$ );

  24680   2 000BF3  5041                                 SOR,R5   1
          2 000BF4  DF47 00BC                            STR,R5   KV@USRENT+5,AUTO
          2 000BF6  DBC6 0008                            LAB,B5   8,B6
          2 000BF8  DFC7 00BF                            STB,B5   KV@USRENT+8,AUTO
          2 000BFA  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000BFC  BFC7 00BD                            STB,B3   KV@USRENT+6,AUTO
          2 000BFE  BBC7 00BD                            LAB,B3   KV@USRENT+6,AUTO
          2 000C00  CBF0 0200                            LAB,B4   512,IMO
          2 000C02  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 000C05       0001                            DC       s:24683,PREL

     2587    24681    5                                     END;

     2588    24682    4                            END;

     2589    24683    3                      KX$L3.IN_.ADR$ = ADDR(NIL);

  24683   2 000C06  EB80 0000 0000                       LAB,B6   0
          2 000C09  DCC7 0008                            LDB,B5   L3$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:361  
          2 000C0B  EFC5 0008                            STB,B6   8,B5

     2590    24684    3                   END;

     2591    24685
     2592    24686    2             IF FPT_X25.PRM1$ = KX$L3.IN_.ADR$

  24686   2 000C0D  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 000C0F  DCC6 0007                            LDB,B5   7,B6
          2 000C11  CCC7 0008                            LDB,B4   L3$,AUTO
          2 000C13  DDC4 0008                            CMB,B5   8,B4
          2 000C15  0981 0008                            BNE      s:24694,PREL

     2593    24687    2                THEN
     2594    24688        /*
     2595    24689           This is the first part of a multi-packet message.
     2596    24690           Reassembly is in progress. Hold on to this buffer.
     2597    24691        */
     2598    24692    2   KEEP_BFR:       FPT_X25.PRM1$ = ADDR(NIL);

  24692   2 000C17  EB80 0000 0000       KEEP_BFR        LAB,B6   0
          2 000C1A  DCC7 0004                            LDB,B5   @FPT_X25,AUTO
          2 000C1C  EFC5 0007                            STB,B6   7,B5

     2599    24693
     2600    24694    2             IF PSTATE ~= KX$L3.STATE.CURRENT OR Y@DFRINP THEN RETURN;

  24694   2 000C1E  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000C20  E2C6 0031                            LLH,R6   49,B6
          2 000C22  E947 002D                            CMR,R6   PSTATE,AUTO
          2 000C24  0981 0005                            BNE      s:24694+12,PREL
          2 000C26  89C7 0039                            CMZ      Y@DFRINP,AUTO
          2 000C28  0881 0004                            BAGE     s:24697,PREL

  24694   2 000C2A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2601    24695
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:362  
     2602    24696
     2603    24697    2             KX$L3.DCNTP = KX$L3.DCNTP + 1;

  24697   2 000C2D  D2C6 0030                            LLH,R5   48,B6
          2 000C2F  5E01                                 ADV,R5   1
          2 000C30  D7C6 0030                            STH,R5   48,B6

     2604    24698    2             IF (((KX$L3.DCNTP >= KX$L3.RSPDLY) OR

  24698   2 000C32  D2C6 0030                            LLH,R5   48,B6
          2 000C34  C846 0072                            LDR,R4   114,B6
          2 000C36  C570 00FF                            AND,R4   255,IMO
          2 000C38  D954                                 CMR,R5   R4
          2 000C39  0881 000A                            BAGE     s:24698+18,PREL
          2 000C3B  82C6 0029                            LB,'0002'X        41,B6
          2 000C3D       0002
          2 000C3E  0581 002E                            BBF      s:24714,PREL
          2 000C40  89C7 0041                            CMZ      MBIT,AUTO
          2 000C42  0801 002A                            BAL      s:24714,PREL
          2 000C44  8DC6 000D                            CMN      13,B6
          2 000C46  0981 0005                            BNE      s:24698+26,PREL
          2 000C48  8DC6 0043                            CMN      67,B6
          2 000C4A  0901 0006                            BE       s:24703,PREL
          2 000C4C  82C6 0029                            LB,'2000'X        41,B6
          2 000C4E       2000
          2 000C4F  0581 001D                            BBF      s:24714,PREL

     2605    24699    2                KX$L3.RSPTOCMP AND NOT MBIT )
     2606    24700    2                AND ((KX$L3.OUT_.ADR$ = ADDR(NIL)) AND
     2607    24701    2                (KX$L3.RTR$ = ADDR(NIL)) OR KX$L3.BLK))
     2608    24702    2                THEN
     2609    24703    2                   IF KX$L3.RSPTMR = 0 OR KX$L3.DCNTP = KX$L3.CALL_OPTS.RCVWND

  24703   2 000C51  B846 0073                            LDR,R3   115,B6
          2 000C53  3901 0006                            BEZ,R3   s:24705,PREL
          2 000C55  A2C6 0015                            LLH,R2   21,B6
          2 000C57  D952                                 CMR,R5   R2
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:363  
          2 000C58  0981 0009                            BNE      s:24711,PREL

     2610    24704    2                      THEN
     2611    24705    3                         DO;

     2612    24706    3   L_SEND_RR:               ID = %Y_ID_RR#;

  24706   2 000C5A  6C01                 L_SEND_RR       LDV,R6   1
          2 000C5B  EF47 002E                            STR,R6   ID,AUTO

     2613    24707    3                            CALL Y$SEND_PACKET;

  24707   2 000C5D  E3C0 077A                            LNJ,B6   s:0,PREL
          2 000C5F       0001                            DC       s:24708,PREL

     2614    24708    3                         END;

  24708   2 000C60  0F81 000C                            B        s:24714,PREL

     2615    24709    2                      ELSE
     2616    24710    3                         DO;

     2617    24711    3                            IF NOT KX$L3.TMRBLK.ON

  24711   2 000C62  89C6 0056                            CMZ      86,B6
          2 000C64  0801 0008                            BAL      s:24714,PREL

     2618    24712    3                               THEN
     2619    24713    3                                  CALL Y$START_TIMER ( KX$L3.RSPTMR );

  24713   2 000C66  DBC6 0073                            LAB,B5   115,B6
          2 000C68  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 000C6A  E3C0 1E94                            LNJ,B6   s:0,PREL
          2 000C6C       0001                            DC       s:24714,PREL

     2620    24714    3                         END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:364  
     2621    24715    2   EXIT_CASE: ;

  24715   2 000C6D  0F81 0555            EXIT_CASE       B        s:25392,PREL

     2622    24716        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:365  
     2623    24717        /*
     2624    24718               DATOUT - send a Data packet
     2625    24719                  Send a Data packet
     2626    24720                  If it didn't all fit,
     2627    24721                     Save information for future packets
     2628    24722                     Set the DATA flag
     2629    24723                  Set the BLK flag if the window is exhausted
     2630    24724        */
     2631    24725    2          CASE ( %Y_ACT_DATOUT# );

     2632    24726
     2633    24727    2             CALL Y$DATOUT;

  24727   2 000C6F  E3C0 1C8A                            LNJ,B6   s:0,PREL
          2 000C71       0001                            DC       s:24727+3,PREL
          2 000C72  0F81 0550                            B        s:25392,PREL

     2634    24728        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:366  
     2635    24729        /*
     2636    24730               DCL - Inform CM about a SUPER-defined VC
     2637    24731                  Log the event
     2638    24732                  Report DCL
     2639    24733        */
     2640    24734    2          CASE ( %Y_ACT_DCL# );

     2641    24735
     2642    24736    2             ERCOD = DCL_EVENT ;

  24736   2 000C74  8C80 0000 038A  00                   LDI      DCL_EVENT
          2 000C77  8D47 0022                            SDI      ERCOD,AUTO

     2643    24737    2             IF PEVENT ~= %Y_EV_TO#

  24737   2 000C79  1D19                                 CMV,R1   25
          2 000C7A  0901 0006                            BE       s:24744,PREL

     2644    24738    2                THEN
     2645    24739    3                   DO; /* Only log the first of a series of retried calls */

     2646    24740    3                      KX$L3.RTRCNT = 0;

  24740   2 000C7C  87C6 0072                            CLH      114,B6

     2647    24741    3                      CALL Y$ER ;

  24741   2 000C7E  E3C0 1C50                            LNJ,B6   s:0,PREL
          2 000C80       0001                            DC       s:24744,PREL

     2648    24742    3                   END;

     2649    24743
     2650    24744    2             CALL Y$STOP_TMR;

  24744   2 000C81  E3C0 1D8C                            LNJ,B6   s:0,PREL
          2 000C83       0001                            DC       s:24747,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:367  

     2651    24745
     2652    24746
     2653    24747    2             CALL_FPT.EVN = %KX_CM_EV_DCL#;

  24747   2 000C84  6C01                                 LDV,R6   1
          2 000C85  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2654    24748    2             CALL_FPT.PRM1 = KX$L3.NOD;

  24748   2 000C87  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000C89  D2C6 0012                            LLH,R5   18,B6
          2 000C8B  DF47 0017                            STR,R5   CALL_FPT+5,AUTO

     2655    24749    2             CALL_FPT.PRM2 = KX$L3.TYP;

  24749   2 000C8D  C846 0013                            LDR,R4   19,B6
          2 000C8F  CF47 0018                            STR,R4   CALL_FPT+6,AUTO

     2656    24750    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.DFL_OPTS );

  24750   2 000C91  DBC6 0022                            LAB,B5   34,B6
          2 000C93  DFC7 0019                            STB,B5   CALL_FPT+7,AUTO

     2657    24751    2             CALL_FPT.PRM2$ = KX$L3.CHN$;

  24751   2 000C95  CCC6 0006                            LDB,B4   6,B6
          2 000C97  CFC7 001B                            STB,B4   CALL_FPT+9,AUTO

     2658    24752    2             KX_CALLING_CM$ = L3$;

  24752   2 000C99  EF80 0000 0000  xsym                 STB,B6   KX_CALLING_CM$

     2659    24753    2             CALL Y$CNCMNG;

  24753   2 000C9C  E3C0 0529                            LNJ,B6   s:0,PREL
          2 000C9E       0001                            DC       s:24754,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:368  

     2660    24754    2             KX_CALLING_CM$ = ADDR(NIL);

  24754   2 000C9F  EB80 0000 0000                       LAB,B6   0
          2 000CA2  EF80 0000 0000  xsym                 STB,B6   KX_CALLING_CM$

     2661    24755    2             KX$L3.CM$ = CALL_FPT.RCV$;

  24755   2 000CA5  DCC7 0015                            LDB,B5   CALL_FPT+3,AUTO
          2 000CA7  CCC7 0008                            LDB,B4   L3$,AUTO
          2 000CA9  DFC4 0004                            STB,B5   4,B4

     2662    24756    2             KX$L3.NOREASM = CALL_FPT.PRS.PRM1;

  24756   2 000CAB  E847 0021                            LDR,R6   CALL_FPT+15,AUTO
          2 000CAD  6048                                 SOR,R6   8
          2 000CAE  EAC4 0076                            SRM,R6,'0080'X    118,B4
          2 000CB0       0080

     2663    24757    2             IF KX$L3.T25 = 0

  24757   2 000CB1  E844 006E                            LDR,R6   110,B4
          2 000CB3  6981 0005                            BNEZ,R6  s:24761,PREL

     2664    24758    2                THEN
     2665    24759    2                   KX$L3.TOACT = %KX_L3_TOACT_NULL#;

  24759   2 000CB5  87C4 0075                            CLH      117,B4
          2 000CB7  0F81 050B                            B        s:25392,PREL

     2666    24760    2                ELSE
     2667    24761    2                   KX$L3.TOACT = CALL_FPT.PRM1;

  24761   2 000CB9  D847 0017                            LDR,R5   CALL_FPT+5,AUTO
          2 000CBB  D7C4 0075                            STH,R5   117,B4
          2 000CBD  0F81 0505                            B        s:25392,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:369  
     2668    24762        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:370  
     2669    24763        /*
     2670    24764               DSB - move the VCs into a disabled state
     2671    24765                  Log the event
     2672    24766                  Stop the timer
     2673    24767                  Set the LCN to 0
     2674    24768                  Reset the retry count
     2675    24769                  Reset the context
     2676    24770                  Report VCLST to CM
     2677    24771        */
     2678    24772    2          CASE ( %Y_ACT_DSB# );

     2679    24773
     2680    24774    2             ERCOD = DSB ;

  24774   2 000CBF  8C80 0000 038C  00                   LDI      DSB
          2 000CC2  8D47 0022                            SDI      ERCOD,AUTO

     2681    24775    2             CALL Y$ER ;

  24775   2 000CC4  E3C0 1C0A                            LNJ,B6   s:0,PREL
          2 000CC6       0001                            DC       s:24777,PREL

     2682    24776
     2683    24777    2             CALL Y$STOP_TMR ;

  24777   2 000CC7  E3C0 1D46                            LNJ,B6   s:0,PREL
          2 000CC9       0001                            DC       s:24779,PREL

     2684    24778
     2685    24779    2             KX$L3.LCN# = 0;

  24779   2 000CCA  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000CCC  8846 002A                            LBF,'0FFF'X       42,B6
          2 000CCE       0FFF

     2686    24780    2             KX$L3.RTRCNT = 0;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:371  
  24780   2 000CCF  87C6 0072                            CLH      114,B6

     2687    24781    2             CALL Y$RESET_L3CNTX;

  24781   2 000CD1  E3C0 1A3F                            LNJ,B6   s:0,PREL
          2 000CD3       0001                            DC       s:24782,PREL

     2688    24782    2             CALL_FPT.EVN = %KX_CM_EV_VCLST#;

  24782   2 000CD4  6C04                                 LDV,R6   4
          2 000CD5  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2689    24783    2             CALL Y$CNCMNG;

  24783   2 000CD7  E3C0 04EE                            LNJ,B6   s:0,PREL
          2 000CD9       0001                            DC       s:24783+3,PREL
          2 000CDA  0F81 04E8                            B        s:25392,PREL

     2690    24784        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:372  
     2691    24785        /*
     2692    24786               DWN - move the VC into the DOWN state
     2693    24787                  If the Clear packet has a non-zero cause,
     2694    24788                     Log the Clear packet
     2695    24789                  Stop the timer
     2696    24790                  If not SUPER-defined,
     2697    24791                     Report VCLST
     2698    24792                     Release the context
     2699    24793                  Otherwise,
     2700    24794                     Report a disconnect to HC
     2701    24795                     If still in the same state,
     2702    24796                     Report VCDWN to CM
     2703    24797        */
     2704    24798    2          CASE ( %Y_ACT_DWN# );

     2705    24799
     2706    24800    2             IF DATACNT > %L0 AND IN_PKTHDR.TYPE = %Y_ID_CLEAR#

  24800   2 000CDC  E847 003F                            LDR,R6   DATACNT,AUTO
          2 000CDE  6D05                                 CMV,R6   5
          2 000CDF  0381 0015                            BLE      s:24807,PREL
          2 000CE1  E280 0000 0001  01                   LLH,R6   IN_PKTHDR+1
          2 000CE4  6D13                                 CMV,R6   19
          2 000CE5  0981 000F                            BNE      s:24807,PREL
          2 000CE7  8280 0000 0001  01                   LB,'00FF'X        IN_PKTHDR+1
          2 000CEA       00FF
          2 000CEB  0581 0009                            BBF      s:24807,PREL

     2707    24801    2                AND IN_PKTHDR.CAUSE ~=  0
     2708    24802    2                THEN
     2709    24803    3                   DO;

     2710    24804    3                      ERCOD = FTLCLR ;

  24804   2 000CED  8C80 0000 03C6  00                   LDI      FTLCLR
          2 000CF0  8D47 0022                            SDI      ERCOD,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:373  
     2711    24805    3                      CALL Y$ER2 ;

  24805   2 000CF2  E3C0 1BB4                            LNJ,B6   s:0,PREL
          2 000CF4       0001                            DC       s:24807,PREL

     2712    24806    3                   END;

     2713    24807    2             CALL Y$STOP_TMR ;

  24807   2 000CF5  E3C0 1D18                            LNJ,B6   s:0,PREL
          2 000CF7       0001                            DC       s:24809,PREL

     2714    24808
     2715    24809    2             KX$L3.LCN# = 0;

  24809   2 000CF8  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000CFA  8846 002A                            LBF,'0FFF'X       42,B6
          2 000CFC       0FFF

     2716    24810    2             CODE = %KHA_FNC_DISCONNECT_EVT ;

  24810   2 000CFD  6C0C                                 LDV,R6   12
          2 000CFE  EF47 0029                            STR,R6   CODE,AUTO

     2717    24811    2             CALL Y$DVCADM;

  24811   2 000D00  E3C0 1CDE                            LNJ,B6   s:0,PREL
          2 000D02       0001                            DC       s:24812,PREL

     2718    24812    2             IF PSTATE = KX$L3.STATE.CURRENT

  24812   2 000D03  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000D05  E2C6 0031                            LLH,R6   49,B6
          2 000D07  E947 002D                            CMR,R6   PSTATE,AUTO
          2 000D09  0981 04B9                            BNE      s:25392,PREL

     2719    24813    2                THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:374  
     2720    24814    3                   DO;

     2721    24815    3                      CALL_FPT.EVN = %KX_CM_EV_VCDWN#;

  24815   2 000D0B  5C05                                 LDV,R5   5
          2 000D0C  DF47 0012                            STR,R5   CALL_FPT,AUTO

     2722    24816    3                      IF IN_PKTHDR.TYPE = %Y_ID_CLEAR#

  24816   2 000D0E  C280 0000 0001  01                   LLH,R4   IN_PKTHDR+1
          2 000D11  4D13                                 CMV,R4   19
          2 000D12  0981 001E                            BNE      s:24833,PREL

     2723    24817    3                         THEN
     2724    24818    4                            DO;

     2725    24819    4                               CALL_FPT.PRS.V = '1'B;

  24819   2 000D14  8947 0021                            LBT,'0800'X       CALL_FPT+15,AUTO
  24819   2 000D16       0800

     2726    24820    4                               IF DATACNT > %L0

  24820   2 000D17  B847 003F                            LDR,R3   DATACNT,AUTO
          2 000D19  3D05                                 CMV,R3   5
          2 000D1A  0381 0016                            BLE      s:24833,PREL

     2727    24821    4                                  THEN
     2728    24822    5                                     DO;

     2729    24823    5                                        CALL_FPT.PRS.PRM1 = '1'B;

  24823   2 000D1C  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  24823   2 000D1E       8000

     2730    24824    5                                        CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:375  
  24824   2 000D1F  A800 0000 0001  01                   LDR,R2   IN_PKTHDR+1
          2 000D22  A570 00FF                            AND,R2   255,IMO
          2 000D24  AF47 0017                            STR,R2   CALL_FPT+5,AUTO

     2731    24825    5                                        IF DATACNT > %L1

  24825   2 000D26  3D06                                 CMV,R3   6
          2 000D27  0381 0009                            BLE      s:24833,PREL

     2732    24826    5                                           THEN
     2733    24827    6                                              DO;

     2734    24828    6                                                 CALL_FPT.PRS.PRM2 = '1'B;

  24828   2 000D29  8947 0021                            LBT,'4000'X       CALL_FPT+15,AUTO
  24828   2 000D2B       4000

     2735    24829    6                                                 CALL_FPT.PRM2 = IN_PKTHDR.DIAG;

  24829   2 000D2C  9280 0000 0002  01                   LLH,R1   IN_PKTHDR+2
          2 000D2F  9F47 0018                            STR,R1   CALL_FPT+6,AUTO

     2736    24830    6                                              END;

     2737    24831    5                                     END;

     2738    24832    4                            END;

     2739    24833    3                      CALL Y$CNCMNG;

  24833   2 000D31  E3C0 0494                            LNJ,B6   s:0,PREL
          2 000D33       0001                            DC       s:24834,PREL

     2740    24834    3                   END;

  24834   2 000D34  0F81 048E                            B        s:25392,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:376  
     2741    24835        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:377  
     2742    24836        /*
     2743    24837               FLOW - Process information from an RR or RNR packet
     2744    24838                  Deliver any pending data acknowledgements to CM
     2745    24839        */
     2746    24840    2          CASE ( %Y_ACT_FLOW# );

     2747    24841
     2748    24842    2             KX_STATS_X25.P_FLOW_IN = KX_STATS_X25.P_FLOW_IN + 1;

  24842   2 000D36  8A80 0000 003B  xsym                 INC      KX_STATS_X25+59
          2 000D39  8E80 0000 003A  xsym                 CAD      KX_STATS_X25+58
          2 000D3C  0F81 0486                            B        s:25392,PREL

     2749    24843        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:378  
     2750    24844        /*
     2751    24845               INT - Deliver an Interrupt packet to CM
     2752    24846                  Report INT to CM
     2753    24847                  If still in the same state,
     2754    24848                     Send an Interrupt_C packet
     2755    24849        */
     2756    24850    2          CASE ( %Y_ACT_INT# );

     2757    24851
     2758    24852    2             CALL_FPT.EVN = %KX_CM_EV_INT#;

  24852   2 000D3E  6C07                                 LDV,R6   7
          2 000D3F  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2759    24853    2             CALL_FPT.V_.ADR$ = DAT$;

  24853   2 000D41  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 000D43  DFC7 001D                            STB,B5   CALL_FPT+11,AUTO

     2760    24854    2             CALL_FPT.V_.BYTX = LENGTHC(KX$PACKET) + L2EXT;

  24854   2 000D45  E847 003D                            LDR,R6   L2EXT,AUTO
          2 000D47  6E15                                 ADV,R6   21
          2 000D48  EF47 001F                            STR,R6   CALL_FPT+13,AUTO

     2761    24855    2             CALL_FPT.V_.BYTSIZ = DATACNT - %L0;

  24855   2 000D4A  E847 003F                            LDR,R6   DATACNT,AUTO
          2 000D4C  6EFB                                 ADV,R6   -5
          2 000D4D  EF47 0020                            STR,R6   CALL_FPT+14,AUTO

     2762    24856    2             CALL Y$CNCMNG;

  24856   2 000D4F  E3C0 0476                            LNJ,B6   s:0,PREL
          2 000D51       0001                            DC       s:24858,PREL

     2763    24857
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:379  
     2764    24858    2             IF PSTATE = KX$L3.STATE.CURRENT

  24858   2 000D52  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000D54  E2C6 0031                            LLH,R6   49,B6
          2 000D56  E947 002D                            CMR,R6   PSTATE,AUTO
          2 000D58  0981 046A                            BNE      s:25392,PREL

     2765    24859    2                THEN
     2766    24860    3                   DO;

     2767    24861    3                      ID = %Y_ID_INT_C#;

  24861   2 000D5A  5C27                                 LDV,R5   39
          2 000D5B  DF47 002E                            STR,R5   ID,AUTO

     2768    24862    3                      CALL Y$SEND_PACKET;

  24862   2 000D5D  E3C0 067A                            LNJ,B6   s:0,PREL
          2 000D5F       0001                            DC       s:24863,PREL

     2769    24863    3                   END;

  24863   2 000D60  0F81 0462                            B        s:25392,PREL

     2770    24864        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:380  
     2771    24865        /*
     2772    24866               INTC - Process expected Interupt_C packet
     2773    24867                  Clear the Interrupt pending flag
     2774    24868                  Report INTACK to CM
     2775    24869        */
     2776    24870    2          CASE ( %Y_ACT_INTC# );

     2777    24871
     2778    24872    2             KX$L3.INTPND = '0'B;

  24872   2 000D62  8846 0029                            LBF,'4000'X       41,B6
  24872   2 000D64       4000

     2779    24873    2             CALL_FPT.EVN = %KX_CM_EV_INTACK#;

  24873   2 000D65  3C0A                                 LDV,R3   10
          2 000D66  BF47 0012                            STR,R3   CALL_FPT,AUTO

     2780    24874    2             CALL Y$CNCMNG;

  24874   2 000D68  E3C0 045D                            LNJ,B6   s:0,PREL
          2 000D6A       0001                            DC       s:24875,PREL

     2781    24875    2             CALL Y$STOP_INTTMR;

  24875   2 000D6B  E3C0 1CD2                            LNJ,B6   s:0,PREL
          2 000D6D       0001                            DC       s:24875+3,PREL
          2 000D6E  0F81 0454                            B        s:25392,PREL

     2782    24876        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:381  
     2783    24877        /*
     2784    24878               NULL - do nothing
     2785    24879        */
     2786    24880    2          CASE ( %Y_ACT_NULL# );

     2787    24881
     2788    24882        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:382  
     2789    24883        /*
     2790    24884               RESTART - start a restart procedure
     2791    24885                  Log the event
     2792    24886                  Stop all the VCs
     2793    24887                  Send a Restart packet
     2794    24888        */
     2795    24889    2          CASE ( %Y_ACT_RESTART# );

     2796    24890
     2797    24891    2             CALL Y$STOP_L3S;

  24891   2 000D70  E3C0 1251                            LNJ,B6   s:0,PREL
          2 000D72       0001                            DC       s:24892,PREL

     2798    24892    2             CALL Y$RESTART;

  24892   2 000D73  E3C0 1556                            LNJ,B6   s:0,PREL
          2 000D75       0001                            DC       s:24892+3,PREL
          2 000D76  0F81 044C                            B        s:25392,PREL

     2799    24893        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:383  
     2800    24894        /*
     2801    24895               RLS - Release level 3 context
     2802    24896                  If the Clear packet has a non-zero cause,
     2803    24897                     Log the event
     2804    24898                  Otherwise,
     2805    24899                     Log the release action
     2806    24900                  Stop the timer
     2807    24901                  If connected to CM,
     2808    24902                     Report VCLST
     2809    24903                  Release the context
     2810    24904        */
     2811    24905    2          CASE ( %Y_ACT_RLS# );

     2812    24906
     2813    24907    2             IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0

  24907   2 000D78  1D0C                                 CMV,R1   12
          2 000D79  0981 0016                            BNE      s:24916,PREL
          2 000D7B  E847 003F                            LDR,R6   DATACNT,AUTO
          2 000D7D  6D05                                 CMV,R6   5
          2 000D7E  0381 0011                            BLE      s:24916,PREL
          2 000D80  8280 0000 0001  01                   LB,'00FF'X        IN_PKTHDR+1
          2 000D83       00FF
          2 000D84  0581 000B                            BBF      s:24916,PREL

     2814    24908    2                AND IN_PKTHDR.CAUSE ~= 0
     2815    24909    2                THEN
     2816    24910    3                   DO;

     2817    24911    3                      ERCOD = FTLCLR ;

  24911   2 000D86  8C80 0000 03C6  00                   LDI      FTLCLR
          2 000D89  8D47 0022                            SDI      ERCOD,AUTO

     2818    24912    3                      CALL Y$ER2 ;

  24912   2 000D8B  E3C0 1B1B                            LNJ,B6   s:0,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:384  
          2 000D8D       0001                            DC       s:24913,PREL

     2819    24913    3                   END;

  24913   2 000D8E  0F81 0009                            B        s:24921,PREL

     2820    24914    2                ELSE
     2821    24915    3                   DO;

     2822    24916    3                      ERCOD = RLSACT ;

  24916   2 000D90  8C80 0000 038E  00                   LDI      RLSACT
          2 000D93  8D47 0022                            SDI      ERCOD,AUTO

     2823    24917    3                      CALL Y$ER0000 ;

  24917   2 000D95  E3C0 1AA8                            LNJ,B6   s:0,PREL
          2 000D97       0001                            DC       s:24921,PREL

     2824    24918
     2825    24919    3                   END;

     2826    24920
     2827    24921    2             CALL Y$RESET_L3CNTX;

  24921   2 000D98  E3C0 1978                            LNJ,B6   s:0,PREL
          2 000D9A       0001                            DC       s:24922,PREL

     2828    24922    2             IF CM$ ~= ADDR(NIL)

  24922   2 000D9B  8DC7 000A                            CMN      CM$,AUTO
          2 000D9D  0901 0026                            BE       s:24940,PREL

     2829    24923    2                THEN
     2830    24924    3                   DO;

     2831    24925    3                      CALL_FPT.EVN = %KX_CM_EV_VCLST#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:385  

  24925   2 000D9F  6C04                                 LDV,R6   4
          2 000DA0  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2832    24926    3                      IF PEVENT = %Y_EV_CLEAR# AND DATACNT > %L0

  24926   2 000DA2  D847 002C                            LDR,R5   PEVENT,AUTO
          2 000DA4  5D0C                                 CMV,R5   12
          2 000DA5  0981 001B                            BNE      s:24938,PREL
          2 000DA7  C847 003F                            LDR,R4   DATACNT,AUTO
          2 000DA9  4D05                                 CMV,R4   5
          2 000DAA  0381 0016                            BLE      s:24938,PREL

     2833    24927    3                         THEN
     2834    24928    4                            DO;

     2835    24929    4                               CALL_FPT.PRS.PRM1 = '1'B;

  24929   2 000DAC  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  24929   2 000DAE       8000

     2836    24930    4                               CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;

  24930   2 000DAF  B800 0000 0001  01                   LDR,R3   IN_PKTHDR+1
          2 000DB2  B570 00FF                            AND,R3   255,IMO
          2 000DB4  BF47 0017                            STR,R3   CALL_FPT+5,AUTO

     2837    24931    4                               IF DATACNT > %L1

  24931   2 000DB6  4D06                                 CMV,R4   6
          2 000DB7  0381 0009                            BLE      s:24938,PREL

     2838    24932    4                                  THEN
     2839    24933    5                                     DO;

     2840    24934    5                                        CALL_FPT.PRS.PRM2 = '1'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:386  
  24934   2 000DB9  8947 0021                            LBT,'4000'X       CALL_FPT+15,AUTO
  24934   2 000DBB       4000

     2841    24935    5                                        CALL_FPT.PRM2 = IN_PKTHDR.DIAG;

  24935   2 000DBC  A280 0000 0002  01                   LLH,R2   IN_PKTHDR+2
          2 000DBF  AF47 0018                            STR,R2   CALL_FPT+6,AUTO

     2842    24936    5                                     END;

     2843    24937    4                            END;

     2844    24938    3                      CALL Y$CNCMNG;

  24938   2 000DC1  E3C0 0404                            LNJ,B6   s:0,PREL
          2 000DC3       0001                            DC       s:24940,PREL

     2845    24939    3                   END;

     2846    24940    2             TEMP2$ = L3$;

  24940   2 000DC4  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000DC6  EFC7 0042                            STB,B6   TEMP2$,AUTO

     2847    24941    2             CALL KXS$RLSL3 ( TEMP2$ );

  24941   2 000DC8  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 000DCA  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 000DCC  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000DCE  CBF0 0100                            LAB,B4   256,IMO
          2 000DD0  E380 0000 0000  xent                 LNJ,B6   KXS$RLSL3
          2 000DD3       0001                            DC       s:24941+12,PREL
          2 000DD4  0F81 03EE                            B        s:25392,PREL

     2848    24942        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:387  
     2849    24943        /*
     2850    24944               RMTDCL - declare a non-SUPER-defined VC to CM
     2851    24945                  Log the event
     2852    24946                  Report RMTDCL to CM
     2853    24947        */
     2854    24948    2          CASE ( %Y_ACT_RMTDCL# );

     2855    24949
     2856    24950    2             ERCOD = RMTDCL ;

  24950   2 000DD6  8C80 0000 0390  00                   LDI      RMTDCL
          2 000DD9  8D47 0022                            SDI      ERCOD,AUTO

     2857    24951    2             CALL Y$ER2;

  24951   2 000DDB  E3C0 1ACB                            LNJ,B6   s:0,PREL
          2 000DDD       0001                            DC       s:24954,PREL

     2858    24952
     2859    24953
     2860    24954    2             CALL_FPT.EVN = %KX_CM_EV_RMTDCL#;

  24954   2 000DDE  6C02                                 LDV,R6   2
          2 000DDF  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2861    24955    2             CALL_FPT.PRM1 = KX$L3.NOD;

  24955   2 000DE1  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000DE3  D2C6 0012                            LLH,R5   18,B6
          2 000DE5  DF47 0017                            STR,R5   CALL_FPT+5,AUTO

     2862    24956    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.DFL_OPTS );

  24956   2 000DE7  DBC6 0022                            LAB,B5   34,B6
          2 000DE9  DFC7 0019                            STB,B5   CALL_FPT+7,AUTO

     2863    24957    2             CALL_FPT.PRM2$ = KX$L3.CHN$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:388  

  24957   2 000DEB  CCC6 0006                            LDB,B4   6,B6
          2 000DED  CFC7 001B                            STB,B4   CALL_FPT+9,AUTO

     2864    24958    2             CALL_FPT.V_.ADR$ = DAT$;

  24958   2 000DEF  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 000DF1  BFC7 001D                            STB,B3   CALL_FPT+11,AUTO

     2865    24959    2             CALL_FPT.V_.BYTX = BYTE_INDEX;

  24959   2 000DF3  C847 0032                            LDR,R4   BYTE_INDEX,AUTO
          2 000DF5  CF47 001F                            STR,R4   CALL_FPT+13,AUTO

     2866    24960    2             CALL_FPT.V_.BYTSIZ = KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX;

  24960   2 000DF7  C243 0007                            SUB,R4   7,B3
          2 000DF9  8254                                 NEG      R4
          2 000DFA  4E10                                 ADV,R4   16
          2 000DFB  CF47 0020                            STR,R4   CALL_FPT+14,AUTO

     2867    24961
     2868    24962    2             KX_CALLING_CM$ = L3$;

  24962   2 000DFD  EF80 0000 0000  xsym                 STB,B6   KX_CALLING_CM$

     2869    24963    2             CALL Y$CNCMNG;

  24963   2 000E00  E3C0 03C5                            LNJ,B6   s:0,PREL
          2 000E02       0001                            DC       s:24964,PREL

     2870    24964    2             KX_CALLING_CM$ = ADDR(NIL);

  24964   2 000E03  EB80 0000 0000                       LAB,B6   0
          2 000E06  EF80 0000 0000  xsym                 STB,B6   KX_CALLING_CM$

     2871    24965    2             KX$L3.CM$ = CALL_FPT.RCV$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:389  

  24965   2 000E09  DCC7 0015                            LDB,B5   CALL_FPT+3,AUTO
          2 000E0B  CCC7 0008                            LDB,B4   L3$,AUTO
          2 000E0D  DFC4 0004                            STB,B5   4,B4

     2872    24966    2             KX$L3.NOREASM = CALL_FPT.PRS.PRM1;

  24966   2 000E0F  E847 0021                            LDR,R6   CALL_FPT+15,AUTO
          2 000E11  6048                                 SOR,R6   8
          2 000E12  EAC4 0076                            SRM,R6,'0080'X    118,B4
          2 000E14       0080

     2873    24967    2             IF KX$L3.T25 = 0

  24967   2 000E15  E844 006E                            LDR,R6   110,B4
          2 000E17  6981 0005                            BNEZ,R6  s:24971,PREL

     2874    24968    2                THEN
     2875    24969    2                   KX$L3.TOACT = %KX_L3_TOACT_NULL#;

  24969   2 000E19  87C4 0075                            CLH      117,B4
          2 000E1B  0F81 03A7                            B        s:25392,PREL

     2876    24970    2                ELSE
     2877    24971    2                   KX$L3.TOACT = CALL_FPT.PRM1;

  24971   2 000E1D  D847 0017                            LDR,R5   CALL_FPT+5,AUTO
          2 000E1F  D7C4 0075                            STH,R5   117,B4
          2 000E21  0F81 03A1                            B        s:25392,PREL

     2878    24972        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:390  
     2879    24973        /*
     2880    24974               RSTCMP - a reset procedure has been completed
     2881    24975                  Log the event
     2882    24976                  Stop timer
     2883    24977                  Set the data available flag
     2884    24978                  Report VCRST to CM
     2885    24979        */
     2886    24980    2          CASE ( %Y_ACT_RSTCMP# );

     2887    24981
     2888    24982    2             CALL Y$STOP_TMR ;

  24982   2 000E23  E3C0 1BEA                            LNJ,B6   s:0,PREL
          2 000E25       0001                            DC       s:24983,PREL

     2889    24983    2             IF ( KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND

  24983   2 000E26  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000E28  E2C6 0031                            LLH,R6   49,B6
          2 000E2A  6D09                                 CMV,R6   9
          2 000E2B  0901 0007                            BE       s:24988,PREL
          2 000E2D  6D0A                                 CMV,R6   10
          2 000E2E  0901 0004                            BE       s:24988,PREL

     2890    24984    2                KX$L3.STATE.CURRENT ~= %Y_ST_RESET# )
     2891    24985    2                THEN
     2892    24986    2                   RETURN;

  24986   2 000E30  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2893    24987
     2894    24988    2             IF PEVENT = %Y_EV_RESET#

  24988   2 000E33  D847 002C                            LDR,R5   PEVENT,AUTO
          2 000E35  5D13                                 CMV,R5   19
          2 000E36  0981 000E                            BNE      s:24997,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:391  
     2895    24989    2                THEN
     2896    24990    3                   DO;

     2897    24991    3                      ERCOD = RSTRCV ;

  24991   2 000E38  8C80 0000 03B4  00                   LDI      RSTRCV
          2 000E3B  8D47 0022                            SDI      ERCOD,AUTO

     2898    24992    3                      CALL Y$ER2 ;

  24992   2 000E3D  E3C0 1A69                            LNJ,B6   s:0,PREL
          2 000E3F       0001                            DC       s:24993,PREL

     2899    24993    3                      CALL_FPT.EVN = %KX_CM_EV_RSTIND#;

  24993   2 000E40  6C10                                 LDV,R6   16
          2 000E41  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2900    24994    3                   END;

  24994   2 000E43  0F81 000C                            B        s:25002,PREL

     2901    24995    2                ELSE
     2902    24996    3                   DO;

     2903    24997    3                      ERCOD = RSTCMP ;

  24997   2 000E45  8C80 0000 0392  00                   LDI      RSTCMP
          2 000E48  8D47 0022                            SDI      ERCOD,AUTO

     2904    24998    3                      CALL Y$ER ;

  24998   2 000E4A  E3C0 1A84                            LNJ,B6   s:0,PREL
          2 000E4C       0001                            DC       s:24999,PREL

     2905    24999    3                      CALL_FPT.EVN = %KX_CM_EV_VCRST#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:392  
  24999   2 000E4D  6C06                                 LDV,R6   6
          2 000E4E  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2906    25000
     2907    25001    3                   END;

     2908    25002    2             KX$L3.DATA = '1'B;

  25002   2 000E50  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000E52  8946 0029                            LBT,'8000'X       41,B6
          2 000E54       8000

     2909    25003    2             IF PEVENT = %Y_EV_RESET# AND DATACNT > %L0

  25003   2 000E55  D847 002C                            LDR,R5   PEVENT,AUTO
          2 000E57  5D13                                 CMV,R5   19
          2 000E58  0981 001B                            BNE      s:25015,PREL
          2 000E5A  C847 003F                            LDR,R4   DATACNT,AUTO
          2 000E5C  4D05                                 CMV,R4   5
          2 000E5D  0381 0016                            BLE      s:25015,PREL

     2910    25004    2                THEN
     2911    25005    3                   DO;

     2912    25006    3                      CALL_FPT.PRS.PRM1 = '1'B;

  25006   2 000E5F  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  25006   2 000E61       8000

     2913    25007    3                      CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;

  25007   2 000E62  B800 0000 0001  01                   LDR,R3   IN_PKTHDR+1
          2 000E65  B570 00FF                            AND,R3   255,IMO
          2 000E67  BF47 0017                            STR,R3   CALL_FPT+5,AUTO

     2914    25008    3                      IF DATACNT > %L1

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:393  
  25008   2 000E69  4D06                                 CMV,R4   6
          2 000E6A  0381 0009                            BLE      s:25015,PREL

     2915    25009    3                         THEN
     2916    25010    4                            DO;

     2917    25011    4                               CALL_FPT.PRS.PRM2 = '1'B;

  25011   2 000E6C  8947 0021                            LBT,'4000'X       CALL_FPT+15,AUTO
  25011   2 000E6E       4000

     2918    25012    4                               CALL_FPT.PRM2 = IN_PKTHDR.DIAG;

  25012   2 000E6F  A280 0000 0002  01                   LLH,R2   IN_PKTHDR+2
          2 000E72  AF47 0018                            STR,R2   CALL_FPT+6,AUTO

     2919    25013    4                            END;

     2920    25014    3                   END;

     2921    25015    2             CALL Y$CNCMNG;

  25015   2 000E74  E3C0 0351                            LNJ,B6   s:0,PREL
          2 000E76       0001                            DC       s:25015+3,PREL
          2 000E77  0F81 034B                            B        s:25392,PREL

     2922    25016        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:394  
     2923    25017        /*
     2924    25018               RSTRCV - complete a reset procedure
     2925    25019                  Log the event
     2926    25020                  Reset the context block
     2927    25021                  Report VCRST to CM
     2928    25022                  If still in the same state,
     2929    25023                     Send a Reset_C packet
     2930    25024                     Start the timer
     2931    25025        */
     2932    25026    2          CASE ( %Y_ACT_RSTRCV# );

     2933    25027
     2934    25028    2             ERCOD = RSTRCV ;

  25028   2 000E79  8C80 0000 03B4  00                   LDI      RSTRCV
          2 000E7C  8D47 0022                            SDI      ERCOD,AUTO

     2935    25029    2             CALL Y$ER2 ;

  25029   2 000E7E  E3C0 1A28                            LNJ,B6   s:0,PREL
          2 000E80       0001                            DC       s:25030,PREL

     2936    25030    2             CALL Y$RESET_L3CNTX;

  25030   2 000E81  E3C0 188F                            LNJ,B6   s:0,PREL
          2 000E83       0001                            DC       s:25031,PREL

     2937    25031    2             KX$L3.DATA = '1'B;

  25031   2 000E84  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000E86  8946 0029                            LBT,'8000'X       41,B6
          2 000E88       8000

     2938    25032
     2939    25033    2             CALL_FPT.EVN = %KX_CM_EV_RSTIND#;

  25033   2 000E89  6C10                                 LDV,R6   16
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:395  
          2 000E8A  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2940    25034    2             IF DATACNT > %L0

  25034   2 000E8C  D847 003F                            LDR,R5   DATACNT,AUTO
          2 000E8E  5D05                                 CMV,R5   5
          2 000E8F  0381 0029                            BLE      s:25057,PREL

     2941    25035    2                THEN
     2942    25036    3                   DO;

     2943    25037    3                      CALL_FPT.PRS.PRM1 = '1'B;

  25037   2 000E91  8947 0021                            LBT,'8000'X       CALL_FPT+15,AUTO
  25037   2 000E93       8000

     2944    25038    3                      CALL_FPT.PRM1 = IN_PKTHDR.CAUSE;

  25038   2 000E94  C800 0000 0001  01                   LDR,R4   IN_PKTHDR+1
          2 000E97  C570 00FF                            AND,R4   255,IMO
          2 000E99  CF47 0017                            STR,R4   CALL_FPT+5,AUTO

     2945    25039    3                      IF KX$L3.PVC

  25039   2 000E9B  82C6 0029                            LB,'0100'X        41,B6
  25039   2 000E9D       0100
          2 000E9E  0581 000F                            BBF      s:25050,PREL

     2946    25040    3                         THEN
     2947    25041    4                            DO;

     2948    25042    4                               IF CALL_FPT.PRM1 = %KX_RST_CAUSE_OOO#

  25042   2 000EA0  4D01                                 CMV,R4   1
          2 000EA1  0981 0006                            BNE      s:25046,PREL

     2949    25043    4                                  THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:396  
     2950    25044    4                                     CALL_FPT.EVN = %KX_CM_EV_VCDWN#;

  25044   2 000EA3  6C05                                 LDV,R6   5
          2 000EA4  EF47 0012                            STR,R6   CALL_FPT,AUTO
          2 000EA6  0F81 0007                            B        s:25050,PREL

     2951    25045    4                                  ELSE
     2952    25046    4                                     IF CALL_FPT.PRM1 = %KX_RST_CAUSE_RDO#

  25046   2 000EA8  4D09                                 CMV,R4   9
          2 000EA9  0981 0004                            BNE      s:25050,PREL

     2953    25047    4                                        THEN
     2954    25048    4                                           CALL_FPT.EVN = %KX_CM_EV_VCUP#;

  25048   2 000EAB  6C03                                 LDV,R6   3
          2 000EAC  EF47 0012                            STR,R6   CALL_FPT,AUTO

     2955    25049    4                            END;

     2956    25050    3                      IF DATACNT > %L1

  25050   2 000EAE  5D06                                 CMV,R5   6
          2 000EAF  0381 0009                            BLE      s:25057,PREL

     2957    25051    3                         THEN
     2958    25052    4                            DO;

     2959    25053    4                               CALL_FPT.PRS.PRM2 = '1'B;

  25053   2 000EB1  8947 0021                            LBT,'4000'X       CALL_FPT+15,AUTO
  25053   2 000EB3       4000

     2960    25054    4                               CALL_FPT.PRM2 = IN_PKTHDR.DIAG;

  25054   2 000EB4  B280 0000 0002  01                   LLH,R3   IN_PKTHDR+2
          2 000EB7  BF47 0018                            STR,R3   CALL_FPT+6,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:397  

     2961    25055    4                            END;

     2962    25056    3                   END;

     2963    25057    2             CALL Y$CNCMNG;

  25057   2 000EB9  E3C0 030C                            LNJ,B6   s:0,PREL
          2 000EBB       0001                            DC       s:25059,PREL

     2964    25058
     2965    25059    2             IF PSTATE = KX$L3.STATE.CURRENT

  25059   2 000EBC  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000EBE  E2C6 0031                            LLH,R6   49,B6
          2 000EC0  E947 002D                            CMR,R6   PSTATE,AUTO
          2 000EC2  0981 0300                            BNE      s:25392,PREL

     2966    25060    2                THEN
     2967    25061    3                   DO;

     2968    25062    3                      ID = %Y_ID_RESET_C#;

  25062   2 000EC4  5C1F                                 LDV,R5   31
          2 000EC5  DF47 002E                            STR,R5   ID,AUTO

     2969    25063    3                      CALL Y$SEND_PACKET;

  25063   2 000EC7  E3C0 0510                            LNJ,B6   s:0,PREL
          2 000EC9       0001                            DC       s:25064,PREL

     2970    25064    3                   END;

  25064   2 000ECA  0F81 02F8                            B        s:25392,PREL

     2971    25065        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:398  
     2972    25066        /*
     2973    25067               RST_D1 - start a reset procedure
     2974    25068                  Log the event
     2975    25069                  Send a reset packet
     2976    25070                  Start the timer
     2977    25071                  Reset the context block
     2978    25072                  Report VCRST to CM
     2979    25073        */
     2980    25074    2          CASE ( %Y_ACT_RST_D1# );

     2981    25075
     2982    25076    2   L_RST_D1: ERCOD = RST_D1 ;

  25076   2 000ECC  8C80 0000 03B6  00   L_RST_D1        LDI      RST_D1
          2 000ECF  8D47 0022                            SDI      ERCOD,AUTO

     2983    25077    2             CALL Y$ER2 ;

  25077   2 000ED1  E3C0 19D5                            LNJ,B6   s:0,PREL
          2 000ED3       0001                            DC       s:25079,PREL

     2984    25078
     2985    25079    2             IF DATACNT > %LD + L3EXT + KX_BUF.SIZ(KX$L3.CALL_OPTS.RCVPCKSIZ)

  25079   2 000ED4  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000ED6  B2C6 0014                            LLH,R3   20,B6
          2 000ED8  E847 003E                            LDR,R6   L3EXT,AUTO
          2 000EDA  EA30 0000 001E  xsym                 ADD,R6   KX_BUF+30,R3
          2 000EDD  6E05                                 ADV,R6   5
          2 000EDE  E947 003F                            CMR,R6   DATACNT,AUTO
          2 000EE0  0281 0006                            BGE      s:25083,PREL

     2986    25080    2                THEN
     2987    25081    2                   DIAG = %KX_RST_DIAG_LNG#;

  25081   2 000EE2  6C27                                 LDV,R6   39
          2 000EE3  EF47 002F                            STR,R6   DIAG,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:399  
          2 000EE5  0F81 0043                            B        s:25105,PREL

     2988    25082    2                ELSE
     2989    25083    2                   IF DATACNT < %LD + L3EXT

  25083   2 000EE7  E847 003E                            LDR,R6   L3EXT,AUTO
          2 000EE9  6E05                                 ADV,R6   5
          2 000EEA  E947 003F                            CMR,R6   DATACNT,AUTO
          2 000EEC  0381 0006                            BLE      s:25087,PREL

     2990    25084    2                      THEN
     2991    25085    2                         DIAG = %KX_RST_DIAG_SHR#;

  25085   2 000EEE  5C26                                 LDV,R5   38
          2 000EEF  DF47 002F                            STR,R5   DIAG,AUTO
          2 000EF1  0F81 0037                            B        s:25105,PREL

     2992    25086    2                      ELSE
     2993    25087    2                         IF PEVENT = %Y_EV_UNK_TYPE#

  25087   2 000EF3  D847 002C                            LDR,R5   PEVENT,AUTO
          2 000EF5  5D15                                 CMV,R5   21
          2 000EF6  0981 0027                            BNE      s:25100,PREL

     2994    25088    2                            THEN
     2995    25089    2                               IF IN_PKTHDR.TYPE= %Y_ID_RESTART# OR

  25089   2 000EF8  C280 0000 0001  01                   LLH,R4   IN_PKTHDR+1
          2 000EFB  C970 00FB                            CMR,R4   251,IMO
          2 000EFD  0901 0005                            BE       s:25092,PREL
          2 000EFF  C970 00FF                            CMR,R4   255,IMO
          2 000F01  0981 0006                            BNE      s:25094,PREL

     2996    25090    2                                  IN_PKTHDR.TYPE= %Y_ID_RESTART_C#
     2997    25091    2                                  THEN
     2998    25092    2                                     DIAG = %KX_RST_DIAG_LCN0#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:400  
  25092   2 000F03  2C29                                 LDV,R2   41
          2 000F04  AF47 002F                            STR,R2   DIAG,AUTO
          2 000F06  0F81 0022                            B        s:25105,PREL

     2999    25093    2                                  ELSE
     3000    25094    2                                     IF DATACNT-%L0-L3EXT > KX_BUF.SIZ ( KX$L3.
             25094                                              CALL_OPTS.RCVPCKSIZ )

  25094   2 000F08  A847 003F                            LDR,R2   DATACNT,AUTO
          2 000F0A  A247 003E                            SUB,R2   L3EXT,AUTO
          2 000F0C  2EFB                                 ADV,R2   -5
          2 000F0D  2801 000B                            BLZ,R2   s:25098,PREL
          2 000F0F  A930 0000 001E  xsym                 CMR,R2   KX_BUF+30,R3
          2 000F12  0381 0006                            BLE      s:25098,PREL

     3001    25095    2                                        THEN
     3002    25096    2                                           DIAG = %KX_RST_DIAG_LNG#;

  25096   2 000F14  2C27                                 LDV,R2   39
          2 000F15  AF47 002F                            STR,R2   DIAG,AUTO
          2 000F17  0F81 0011                            B        s:25105,PREL

     3003    25097    2                                        ELSE
     3004    25098    2                                           DIAG = %KX_RST_DIAG_UNID#;

  25098   2 000F19  2C21                                 LDV,R2   33
          2 000F1A  AF47 002F                            STR,R2   DIAG,AUTO
          2 000F1C  0F81 000C                            B        s:25105,PREL

     3005    25099    2                            ELSE
     3006    25100    2                               IF PEVENT = %Y_EV_SHR_PKT#

  25100   2 000F1E  5D1A                                 CMV,R5   26
          2 000F1F  0981 0006                            BNE      s:25104,PREL

     3007    25101    2                                  THEN
     3008    25102    2                                     DIAG = %KX_RST_DIAG_SHR#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:401  

  25102   2 000F21  4C26                                 LDV,R4   38
          2 000F22  CF47 002F                            STR,R4   DIAG,AUTO
          2 000F24  0F81 0004                            B        s:25105,PREL

     3009    25103    2                                  ELSE
     3010    25104    2                                     DIAG = %KX_RST_DIAG_D1#;

  25104   2 000F26  4C1B                                 LDV,R4   27
          2 000F27  CF47 002F                            STR,R4   DIAG,AUTO

     3011    25105    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;

  25105   2 000F29  8A80 0000 0041  xsym                 INC      KX_STATS_X25+65
          2 000F2C  8E80 0000 0040  xsym                 CAD      KX_STATS_X25+64

  25105   2                              RST_PRS_ENTRY   null
     3012    25106
     3013    25107    2   RST_PRS_ENTRY: ;  /*                 From case RST_PRS  */
     3014    25108
     3015    25109    2             CALL Y$RESET_L3CNTX;

  25109   2 000F2F  E3C0 17E1            RST_PRS_ENTRY   LNJ,B6   s:0,PREL
          2 000F31       0001                            DC       s:25110,PREL

     3016    25110    2             CALL KXS$GETBFR ( 2, TEMP2$ );

  25110   2 000F32  EBF0 0002                            LAB,B6   2,IMO
          2 000F34  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 000F36  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 000F38  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 000F3A  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000F3C  CBF0 0200                            LAB,B4   512,IMO
          2 000F3E  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 000F41       0001                            DC       s:25111,PREL

     3017    25111    2             DAT$ = TEMP2$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:402  

  25111   2 000F42  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 000F44  EFC7 0006                            STB,B6   DAT$,AUTO

     3018    25112    2             KX$DATA.RLS.L3 = '1'B;

  25112   2 000F46  8946 0006                            LBT,'8000'X       6,B6
  25112   2 000F48       8000

     3019    25113    2             KX$DATA.CNT = %L2 + L2EXT;

  25113   2 000F49  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 000F4B  E847 003D                            LDR,R6   L2EXT,AUTO
          2 000F4D  6E07                                 ADV,R6   7
          2 000F4E  EF46 0007                            STR,R6   7,B6

     3020    25114    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;

  25114   2 000F50  5C1B                                 LDV,R5   27
          2 000F51  D780 0000 0004  01                   STH,R5   OUT_PKTHDR+1

     3021    25115    2             OUT_PKTHDR.DIAG = DIAG;

  25115   2 000F54  C847 002F                            LDR,R4   DIAG,AUTO
          2 000F56  C780 0000 0005  01                   STH,R4   OUT_PKTHDR+2

     3022    25116    2             CALL Y$PACKET_OUT;

  25116   2 000F59  E3C0 029B                            LNJ,B6   s:0,PREL
          2 000F5B       0001                            DC       s:25118,PREL

     3023    25117
     3024    25118    2             CALL Y$START_TIMER ( KX$L3.T22 );

  25118   2 000F5C  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000F5E  DBC6 006C                            LAB,B5   108,B6
          2 000F60  DFC7 0050                            STB,B5   TERMID+10,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:403  
          2 000F62  E3C0 1B9C                            LNJ,B6   s:0,PREL
          2 000F64       0001                            DC       s:25120,PREL

     3025    25119
     3026    25120    2             CALL_FPT.EVN = %KX_CM_EV_VCRST#;

  25120   2 000F65  6C06                                 LDV,R6   6
          2 000F66  EF47 0012                            STR,R6   CALL_FPT,AUTO

     3027    25121    2             CALL Y$CNCMNG;

  25121   2 000F68  E3C0 025D                            LNJ,B6   s:0,PREL
          2 000F6A       0001                            DC       s:25121+3,PREL
          2 000F6B  0F81 0257                            B        s:25392,PREL

     3028    25122        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:404  
     3029    25123        /*
     3030    25124               RST_PRS - start a reset procedure
     3031    25125                  Send a Reset packet
     3032    25126                  Start the timer
     3033    25127                  Reset the context block
     3034    25128                  Report VCRST to CM
     3035    25129        */
     3036    25130    2          CASE ( %Y_ACT_RST_PRS# );

     3037    25131
     3038    25132    2             GOTO RST_PRS_ENTRY;  /*    In case RST_D1  */

  25132   2 000F6D  0FC2                                 B        s:25105,SPREL

     3039    25133        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:405  
     3040    25134        /*S* SCREECH_CODE: KXP-S$KX_PCK_ACTSCR#
     3041    25135             MESSAGE: KXP$PACKET received a call with an illegal event type
     3042    25136                      for the current state.
     3043    25137        */
     3044    25138    2          CASE ( %Y_ACT_SCREECH# );

     3045    25139
     3046    25140    2             FPT_X25.PRM1$ = ADDR(Y_ACTSCR);

  25140   2 000F6E  DB80 0000 03EA  00                   LAB,B5   Y_ACTSCR
          2 000F71  CCC7 0004                            LDB,B4   @FPT_X25,AUTO
          2 000F73  DFC4 0007                            STB,B5   7,B4

     3047    25141    2             ALTRETURN;

  25141   2 000F75  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     3048    25142        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:406  
     3049    25143        /*
     3050    25144               STOP - move a VC to a stopped state
     3051    25145               STOP_KD - move a VC to a stopped state
     3052    25146                  Log the event
     3053    25147                  Stop the timer
     3054    25148                  Report VCLST to CM
     3055    25149                  If non-SUPER-defined,
     3056    25150                     Release the context
     3057    25151                  Otherwise,
     3058    25152                     Clear the LCN
     3059    25153                     Clear the retry counter
     3060    25154                     Reset the context block
     3061    25155                     If STOP_KD, report disconnect to HC
     3062    25156        */
     3063    25157    2          CASE ( %Y_ACT_STOP#, %Y_ACT_STOP_KD# );

     3064    25158
     3065    25159    2             CALL Y$ER0 ;

  25159   2 000F78  E3C0 18BC                            LNJ,B6   s:0,PREL
          2 000F7A       0001                            DC       s:25159,PREL

  25159   2                              L_STOP          null
     3066    25160
     3067    25161
     3068    25162    2   L_STOP:   ;
     3069    25163    2             CALL Y$STOP_TMR ;

  25163   2 000F7B  E3C0 1A92            L_STOP          LNJ,B6   s:0,PREL
          2 000F7D       0001                            DC       s:25165,PREL

     3070    25164
     3071    25165    2             CALL Y$RESET_L3CNTX;

  25165   2 000F7E  E3C0 1792                            LNJ,B6   s:0,PREL
          2 000F80       0001                            DC       s:25167,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:407  
     3072    25166
     3073    25167    2             CALL_FPT.EVN = %KX_CM_EV_VCLST#;

  25167   2 000F81  6C04                                 LDV,R6   4
          2 000F82  EF47 0012                            STR,R6   CALL_FPT,AUTO

     3074    25168    2             CALL Y$CNCMNG;

  25168   2 000F84  E3C0 0241                            LNJ,B6   s:0,PREL
          2 000F86       0001                            DC       s:25170,PREL

     3075    25169
     3076    25170    2             IF KX$L3.TYP ~= %KX_VC_TYP_PRM#

  25170   2 000F87  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000F89  E846 0013                            LDR,R6   19,B6
          2 000F8B  6901 0011                            BEZ,R6   s:25178,PREL

     3077    25171    2                THEN
     3078    25172    3                   DO;

     3079    25173    3                      TEMP2$ = L3$;

  25173   2 000F8D  EFC7 0042                            STB,B6   TEMP2$,AUTO

     3080    25174    3                      CALL KXS$RLSL3 ( TEMP2$ );

  25174   2 000F8F  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 000F91  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 000F93  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000F95  CBF0 0100                            LAB,B4   256,IMO
          2 000F97  E380 0000 0000  xent                 LNJ,B6   KXS$RLSL3
          2 000F9A       0001                            DC       s:25175,PREL

     3081    25175    3                   END;

  25175   2 000F9B  0F81 0227                            B        s:25392,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:408  

     3082    25176    2                ELSE
     3083    25177    3                   DO;

     3084    25178    3                      IF NOT KX$L3.PVC

  25178   2 000F9D  82C6 0029                            LB,'0100'X        41,B6
  25178   2 000F9F       0100
          2 000FA0  0501 0004                            BBT      s:25181,PREL

     3085    25179    3                         THEN
     3086    25180    3                            KX$L3.LCN# = 0;

  25180   2 000FA2  8846 002A                            LBF,'0FFF'X       42,B6
  25180   2 000FA4       0FFF

     3087    25181    3                      KX$L3.RTRCNT = 0;

  25181   2 000FA5  87C6 0072                            CLH      114,B6

     3088    25182    3                      IF ACTION = %Y_ACT_STOP#

  25182   2 000FA7  D847 0034                            LDR,R5   ACTION,AUTO
          2 000FA9  5D15                                 CMV,R5   21
          2 000FAA  0901 0007                            BE       s:25187,PREL

     3089    25183    3                         THEN
     3090    25184    3                            EXIT;
     3091    25185    3                      CODE = %KHA_FNC_DISCONNECT_EVT ;

  25185   2 000FAC  4C0C                                 LDV,R4   12
          2 000FAD  CF47 0029                            STR,R4   CODE,AUTO

     3092    25186    3                      CALL Y$DVCADM;

  25186   2 000FAF  E3C0 1A2F                            LNJ,B6   s:0,PREL
          2 000FB1       0001                            DC       s:25187,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:409  

     3093    25187    3                   END;

  25187   2 000FB2  0F81 0210                            B        s:25392,PREL

     3094    25188        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:410  
     3095    25189        /*
     3096    25190               VCDWN,VCLST - start a clear procedure
     3097    25191                  Log the event
     3098    25192                  Send a Clear packet
     3099    25193                  Start the timer
     3100    25194                  Reset the context block
     3101    25195                  Reset the retry counter
     3102    25196        */
     3103    25197    2          CASE ( %Y_ACT_VCDWN#, %Y_ACT_VCLST# );

     3104    25198
     3105    25199    2             IF ACTION = %Y_ACT_VCDWN#

  25199   2 000FB4  2D0F                                 CMV,R2   15
          2 000FB5  0981 0008                            BNE      s:25203,PREL

     3106    25200    2                THEN
     3107    25201    2                   ERCOD = VCDWN ;

  25201   2 000FB7  8C80 0000 0396  00                   LDI      VCDWN
          2 000FBA  8D47 0022                            SDI      ERCOD,AUTO
          2 000FBC  0F81 0006                            B        s:25204,PREL

     3108    25202    2                ELSE
     3109    25203    2                   ERCOD = VCLST ;

  25203   2 000FBE  8C80 0000 0398  00                   LDI      VCLST
          2 000FC1  8D47 0022                            SDI      ERCOD,AUTO

     3110    25204    2             CALL Y$ER ;

  25204   2 000FC3  E3C0 190B                            LNJ,B6   s:0,PREL
          2 000FC5       0001                            DC       s:25206,PREL

     3111    25205
     3112    25206    2             KX$L3.RTRCNT = 0;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:411  
  25206   2 000FC6  ECC7 0008                            LDB,B6   L3$,AUTO
          2 000FC8  87C6 0072                            CLH      114,B6

  25206   2                              VCLST_ENTRY     null
     3113    25207    2   VCLST_ENTRY: ;  /*                   Entry for case RESTART */
     3114    25208
     3115    25209    2             CALL Y$RESET_L3CNTX;

  25209   2 000FCA  E3C0 1746            VCLST_ENTRY     LNJ,B6   s:0,PREL
          2 000FCC       0001                            DC       s:25210,PREL

     3116    25210    2             TEMP0 = FPT_X25.V_.BYTSIZ;

  25210   2 000FCD  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 000FCF  E846 000E                            LDR,R6   14,B6
          2 000FD1  EF47 002A                            STR,R6   TEMP0,AUTO

     3117    25211    2             TEMP1 = TEMP0 + %L2 + L2EXT;

  25211   2 000FD3  EA47 003D                            ADD,R6   L2EXT,AUTO
          2 000FD5  6E07                                 ADV,R6   7
          2 000FD6  EF47 002B                            STR,R6   TEMP1,AUTO

     3118    25212    2             CALL KXS$GETBFR ( TEMP1, TEMP2$ );

  25212   2 000FD8  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 000FDA  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 000FDC  CBC7 002B                            LAB,B4   TEMP1,AUTO
          2 000FDE  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 000FE0  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 000FE2  CBF0 0200                            LAB,B4   512,IMO
          2 000FE4  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 000FE7       0001                            DC       s:25213,PREL

     3119    25213    2             DAT$ = TEMP2$;

  25213   2 000FE8  ECC7 0042                            LDB,B6   TEMP2$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:412  
          2 000FEA  EFC7 0006                            STB,B6   DAT$,AUTO

     3120    25214    2             KX$DATA.RLS.L3 = '1'B;

  25214   2 000FEC  8946 0006                            LBT,'8000'X       6,B6
  25214   2 000FEE       8000

     3121    25215    2             KX$DATA.CNT = TEMP1;

  25215   2 000FEF  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 000FF1  E847 002B                            LDR,R6   TEMP1,AUTO
          2 000FF3  EF46 0007                            STR,R6   7,B6

     3122    25216    2             OUT_PKTHDR.TYPE = %Y_ID_CLEAR#;

  25216   2 000FF5  6C13                                 LDV,R6   19
          2 000FF6  E780 0000 0004                       STH,R6   4

     3123    25217    2             OUT_PKTHDR.CAUSE = %KX_CAUSE_DTE#;

  25217   2 000FF9  8800 0000 0004  01                   LBF,'00FF'X       OUT_PKTHDR+1
  25217   2 000FFC       00FF

     3124    25218    2             IF FPT_X25.PRS.PRM1 = '1'B

  25218   2 000FFD  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 000FFF  89C6 000F                            CMZ      15,B6
          2 001001  0881 0008                            BAGE     s:25222,PREL

     3125    25219    2                THEN
     3126    25220    2                   OUT_PKTHDR.DIAG = FPT_X25.PRM1;

  25220   2 001003  D846 0005                            LDR,R5   5,B6
          2 001005  D780 0000 0005  01                   STH,R5   OUT_PKTHDR+2
          2 001008  0F81 0004                            B        s:25223,PREL

     3127    25221    2                ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:413  
     3128    25222    2                   OUT_PKTHDR.DIAG = %KX_DIAG_NON#;

  25222   2 00100A  8780 0000 0005  01                   CLH      OUT_PKTHDR+2

     3129    25223    2             IF TEMP0 ~= 0 AND TEMP0 <= 128 AND KX$L3.FSTSLC ~= 0

  25223   2 00100D  D847 002A                            LDR,R5   TEMP0,AUTO
          2 00100F  5901 0019                            BEZ,R5   s:25232,PREL
          2 001011  D970 0080                            CMR,R5   128,IMO
          2 001013  0301 0015                            BG       s:25232,PREL
          2 001015  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001017  82C5 0029                            LB,'00C0'X        41,B5
          2 001019       00C0
          2 00101A  0581 000E                            BBF      s:25232,PREL

     3130    25224    2                THEN
     3131    25225    3                   DO;

     3132    25226        /*
     3133    25227          Send clear user data on a fast select circuit.
     3134    25228        */
     3135    25229    3                      SUBSTR(DAT$->STRT0,LENGTHC(KX$PACKET)+%L2+L2EXT,TEMP0) =

  25229   2 00101C  CCC6 000B                            LDB,B4   11,B6
          2 00101E  C846 000D                            LDR,R4   13,B6
          2 001020  AB84                                 LAB,B2   ,B4
          2 001021  A854                                 LDR,R2   R4
          2 001022  E855                                 LDR,R6   R5
          2 001023  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 001025  B847 003D                            LDR,R3   L2EXT,AUTO
          2 001027  3E1C                                 ADV,R3   28
          2 001028  0008                                 MMM

     3136    25230    3                         SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0);
     3137    25231    3                   END;

     3138    25232    2             CALL Y$PACKET_OUT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:414  

  25232   2 001029  E3C0 01CB                            LNJ,B6   s:0,PREL
          2 00102B       0001                            DC       s:25234,PREL

     3139    25233
     3140    25234    2             CALL Y$START_TIMER ( KX$L3.T23 );

  25234   2 00102C  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00102E  DBC6 006D                            LAB,B5   109,B6
          2 001030  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 001032  E3C0 1ACC                            LNJ,B6   s:0,PREL
          2 001034       0001                            DC       s:25234+9,PREL
          2 001035  0F81 018D                            B        s:25392,PREL

     3141    25235        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:415  
     3142    25236        /*
     3143    25237               VCDWN_NCLR - move a VC into the DOWN state
     3144    25238                  Log the event
     3145    25239                  Stop the timer
     3146    25240                  Reset the retry counter
     3147    25241                  Report VCDWN to CM
     3148    25242        */
     3149    25243    2          CASE ( %Y_ACT_VCDWN_NCLR# );

     3150    25244
     3151    25245    2             ERCOD = VCDWN ;

  25245   2 001037  8C80 0000 0396  00                   LDI      VCDWN
          2 00103A  8D47 0022                            SDI      ERCOD,AUTO

     3152    25246    2             CALL Y$ER ;

  25246   2 00103C  E3C0 1892                            LNJ,B6   s:0,PREL
          2 00103E       0001                            DC       s:25248,PREL

     3153    25247
     3154    25248    2             CALL Y$STOP_TMR ;

  25248   2 00103F  E3C0 19CE                            LNJ,B6   s:0,PREL
          2 001041       0001                            DC       s:25250,PREL

     3155    25249
     3156    25250    2             KX$L3.RTRCNT = 0;

  25250   2 001042  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001044  87C6 0072                            CLH      114,B6
          2 001046  0F81 017C                            B        s:25392,PREL

     3157    25251        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:416  
     3158    25252        /*
     3159    25253               VCLST_NCLR - disassociate a VC from CM
     3160    25254                  Log the event
     3161    25255                  Clear KX$L3.CM$
     3162    25256        */
     3163    25257    2          CASE ( %Y_ACT_VCLST_NCLR# );

     3164    25258
     3165    25259
     3166    25260    2             ERCOD = VCLST ;

  25260   2 001048  8C80 0000 0398  00                   LDI      VCLST
          2 00104B  8D47 0022                            SDI      ERCOD,AUTO

     3167    25261    2             CALL Y$ER ;

  25261   2 00104D  E3C0 1881                            LNJ,B6   s:0,PREL
          2 00104F       0001                            DC       s:25264,PREL

     3168    25262
     3169    25263
     3170    25264    2             KX$L3.CM$ = ADDR(NIL);

  25264   2 001050  EB80 0000 0000                       LAB,B6   0
          2 001053  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001055  EFC5 0004                            STB,B6   4,B5
          2 001057  0F81 016B                            B        s:25392,PREL

     3171    25265        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:417  
     3172    25266        /*
     3173    25267               VCRST - start a reset procedure
     3174    25268                  Log the event
     3175    25269                  Send a Reset packet
     3176    25270                  Start the timer
     3177    25271                  Reset the context block
     3178    25272        */
     3179    25273    2          CASE ( %Y_ACT_VCRST# );

     3180    25274
     3181    25275    2             ERCOD = VCRST ;

  25275   2 001059  8C80 0000 039A  00                   LDI      VCRST
          2 00105C  8D47 0022                            SDI      ERCOD,AUTO

     3182    25276    2             CALL Y$ER ;

  25276   2 00105E  E3C0 1870                            LNJ,B6   s:0,PREL
          2 001060       0001                            DC       s:25279,PREL

     3183    25277
     3184    25278
     3185    25279    2             CALL Y$RESET_L3CNTX;

  25279   2 001061  E3C0 16AF                            LNJ,B6   s:0,PREL
          2 001063       0001                            DC       s:25280,PREL

     3186    25280    2             CALL KXS$GETBFR ( 2, TEMP2$ );

  25280   2 001064  EBF0 0002                            LAB,B6   2,IMO
          2 001066  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 001068  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 00106A  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 00106C  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00106E  CBF0 0200                            LAB,B4   512,IMO
          2 001070  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 001073       0001                            DC       s:25281,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:418  

     3187    25281    2             DAT$ = TEMP2$;

  25281   2 001074  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 001076  EFC7 0006                            STB,B6   DAT$,AUTO

     3188    25282    2             KX$DATA.RLS.L3 = '1'B;

  25282   2 001078  8946 0006                            LBT,'8000'X       6,B6
  25282   2 00107A       8000

     3189    25283    2             KX$DATA.CNT = %L2 + L2EXT;

  25283   2 00107B  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 00107D  E847 003D                            LDR,R6   L2EXT,AUTO
          2 00107F  6E07                                 ADV,R6   7
          2 001080  EF46 0007                            STR,R6   7,B6

     3190    25284    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;

  25284   2 001082  5C1B                                 LDV,R5   27
          2 001083  D780 0000 0004  01                   STH,R5   OUT_PKTHDR+1

     3191    25285    2             OUT_PKTHDR.CAUSE = %KX_RST_CAUSE_DTE#;

  25285   2 001086  8800 0000 0004  01                   LBF,'00FF'X       OUT_PKTHDR+1
  25285   2 001089       00FF

     3192    25286    2             IF FPT_X25.PRS.PRM1

  25286   2 00108A  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 00108C  89C6 000F                            CMZ      15,B6
          2 00108E  0881 0008                            BAGE     s:25290,PREL

     3193    25287    2                THEN
     3194    25288    2                   OUT_PKTHDR.DIAG = FPT_X25.PRM1;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:419  
  25288   2 001090  C846 0005                            LDR,R4   5,B6
          2 001092  C780 0000 0005  01                   STH,R4   OUT_PKTHDR+2
          2 001095  0F81 0004                            B        s:25291,PREL

     3195    25289    2                ELSE
     3196    25290    2                   OUT_PKTHDR.DIAG = %KX_DIAG_NON#;

  25290   2 001097  8780 0000 0005  01                   CLH      OUT_PKTHDR+2

     3197    25291    2             CALL Y$PACKET_OUT;

  25291   2 00109A  E3C0 015A                            LNJ,B6   s:0,PREL
          2 00109C       0001                            DC       s:25292,PREL

     3198    25292    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;

  25292   2 00109D  8A80 0000 0041  xsym                 INC      KX_STATS_X25+65
          2 0010A0  8E80 0000 0040  xsym                 CAD      KX_STATS_X25+64

     3199    25293
     3200    25294    2             CALL Y$START_TIMER ( KX$L3.T22 );

  25294   2 0010A3  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0010A5  DBC6 006C                            LAB,B5   108,B6
          2 0010A7  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 0010A9  E3C0 1A55                            LNJ,B6   s:0,PREL
          2 0010AB       0001                            DC       s:25294+9,PREL
          2 0010AC  0F81 0116                            B        s:25392,PREL

     3201    25295        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:420  
     3202    25296        /*
     3203    25297               VCUP - complete call set-up
     3204    25298                  Log the event
     3205    25299                  Stop timer
     3206    25300                  Send a Call_C packet
     3207    25301                  Set the data available flag
     3208    25302                  reset retry count
     3209    25303                  Report VCUP to CM
     3210    25304        */
     3211    25305    2          CASE ( %Y_ACT_VCUP# );

     3212    25306
     3213    25307    2             ERCOD = VCUP ;

  25307   2 0010AE  8C80 0000 039C  00                   LDI      VCUP
          2 0010B1  8D47 0022                            SDI      ERCOD,AUTO

     3214    25308    2             CALL Y$ER ;

  25308   2 0010B3  E3C0 181B                            LNJ,B6   s:0,PREL
          2 0010B5       0001                            DC       s:25311,PREL

     3215    25309
     3216    25310
     3217    25311    2             CALL Y$STOP_TMR ;

  25311   2 0010B6  E3C0 1957                            LNJ,B6   s:0,PREL
          2 0010B8       0001                            DC       s:25317,PREL

     3218    25312
     3219    25313
     3220    25314        /*
     3221    25315                                             Send a Call Confirmation packet
     3222    25316        */
     3223    25317    2             IF NOT KX$L3.PVC

  25317   2 0010B9  ECC7 0008                            LDB,B6   L3$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:421  
          2 0010BB  82C6 0029                            LB,'0100'X        41,B6
          2 0010BD       0100
          2 0010BE  0501 0060                            BBT      s:25340,PREL

     3224    25318    2                THEN
     3225    25319    3                   DO;

     3226    25320    3                      CALL KXS$GETBFR ( 256, TEMP2$ );

  25320   2 0010C0  DBF0 0100                            LAB,B5   256,IMO
          2 0010C2  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 0010C4  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 0010C6  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 0010C8  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0010CA  CBF0 0200                            LAB,B4   512,IMO
          2 0010CC  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 0010CF       0001                            DC       s:25321,PREL

     3227    25321    3                      DAT$ = TEMP2$;

  25321   2 0010D0  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 0010D2  EFC7 0006                            STB,B6   DAT$,AUTO

     3228    25322    3                      KX$DATA.RLS.L3 = '1'B;

  25322   2 0010D4  8946 0006                            LBT,'8000'X       6,B6
  25322   2 0010D6       8000

     3229    25323    3                      SENDING_CALL = '0'B;

  25323   2 0010D7  8747 0037                            CL       SENDING_CALL,AUTO

     3230    25324    3                      OUT_PKTHDR.TYPE = %Y_ID_CALL_C#;

  25324   2 0010D9  6C0F                                 LDV,R6   15
          2 0010DA  E780 0000 0004  01                   STH,R6   OUT_PKTHDR+1

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:422  
     3231    25325    3                      BYTE_INDEX = LENGTHC(KX$PACKET)+L2EXT;

  25325   2 0010DD  D847 003D                            LDR,R5   L2EXT,AUTO
          2 0010DF  5E15                                 ADV,R5   21
          2 0010E0  DF47 0032                            STR,R5   BYTE_INDEX,AUTO

     3232    25326    3                      BYTE_ARRAY ( BYTE_INDEX ) = 0;     /* address lengths = 0 */

  25326   2 0010E2  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0010E4  B855                                 LDR,R3   R5
          2 0010E5  87B6                                 CLH      ,B6,R3

     3233    25327    3                      BYTE_INDEX = BYTE_INDEX + 1;

  25327   2 0010E6  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3234    25328    3                      CALL Y$STUFF_FACILITIES;

  25328   2 0010E8  E3C0 1001                            LNJ,B6   s:0,PREL
          2 0010EA       0001                            DC       s:25329,PREL

     3235    25329    3                      KX$DATA.CNT = BYTE_INDEX - LENGTHC(KX$DATA);

  25329   2 0010EB  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0010ED  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 0010EF  6EF0                                 ADV,R6   -16
          2 0010F0  EF46 0007                            STR,R6   7,B6

     3236    25330    3                      TEMP0 = FPT_X25.V_.BYTSIZ;

  25330   2 0010F2  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 0010F4  D846 000E                            LDR,R5   14,B6
          2 0010F6  DF47 002A                            STR,R5   TEMP0,AUTO

     3237    25331    3                     IF TEMP0 ~= 0 AND TEMP0 <= 128 AND KX$L3.FSTSLC = %KX_FSTSLC_UNR#

  25331   2 0010F8  5901 0023                            BEZ,R5   s:25338,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:423  
          2 0010FA  D970 0080                            CMR,R5   128,IMO
          2 0010FC  0301 001F                            BG       s:25338,PREL
          2 0010FE  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001100  C845 0029                            LDR,R4   41,B5
          2 001102  4046                                 SOR,R4   6
          2 001103  C570 0003                            AND,R4   3,IMO
          2 001105  4D02                                 CMV,R4   2
          2 001106  0981 0015                            BNE      s:25338,PREL

     3238    25332    3                         THEN
     3239    25333    4                            DO;

     3240    25334    4                               SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0) =

  25334   2 001108  CCC6 000B                            LDB,B4   11,B6
          2 00110A  B846 000D                            LDR,R3   13,B6
          2 00110C  AB84                                 LAB,B2   ,B4
          2 00110D  A853                                 LDR,R2   R3
          2 00110E  E855                                 LDR,R6   R5
          2 00110F  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 001111  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001113  0008                                 MMM

     3241    25335    4                                 SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0);
     3242    25336    4                               KX$DATA.CNT = KX$DATA.CNT + TEMP0;

  25336   2 001114  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 001116  E845 0007                            LDR,R6   7,B5
          2 001118  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 00111A  EF45 0007                            STR,R6   7,B5

     3243    25337    4                            END;

     3244    25338    3                      CALL Y$PACKET_OUT;

  25338   2 00111C  E3C0 00D8                            LNJ,B6   s:0,PREL
          2 00111E       0001                            DC       s:25340,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:424  

     3245    25339    3                   END;

     3246    25340    2             KX_STATS_X25.CIRCUITS = KX_STATS_X25.CIRCUITS + 1;

  25340   2 00111F  8A80 0000 003F  xsym                 INC      KX_STATS_X25+63
          2 001122  8E80 0000 003E  xsym                 CAD      KX_STATS_X25+62

     3247    25341
     3248    25342
     3249    25343    2             KX$L3.DATA = '1'B;

  25343   2 001125  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001127  8946 0029                            LBT,'8000'X       41,B6
          2 001129       8000

     3250    25344    2             KX$L3.RTRCNT = 0;

  25344   2 00112A  87C6 0072                            CLH      114,B6

     3251    25345    2             CALL_FPT = '0'B;

  25345   2 00112C  5C20                                 LDV,R5   32
          2 00112D  0021                                 ALR      ;
          2 00112E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 001130       4007 0012                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

     3252    25346    2             CALL_FPT.EVN = %KX_CM_EV_VCUP#;

  25346   2 001132  6C03                                 LDV,R6   3
          2 001133  437F                                 CSYNC    s:25346,SPREL
          2 001134  EF47 0012                            STR,R6   CALL_FPT,AUTO

     3253    25347    2             CALL_FPT.PRM1$ = ADDR ( KX$L3.CALL_OPTS );

  25347   2 001136  DBC6 0014                            LAB,B5   20,B6
          2 001138  DFC7 0019                            STB,B5   CALL_FPT+7,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:425  

     3254    25348    2             CALL Y$CNCMNG;

  25348   2 00113A  E3C0 008B                            LNJ,B6   s:0,PREL
          2 00113C       0001                            DC       s:25348+3,PREL
          2 00113D  0F81 0085                            B        s:25392,PREL

     3255    25349        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:426  
     3256    25350        /*
     3257    25351                PVCDWN  -  CM is not ready to start this permanent VC
     3258    25352                           send RESET with cause 01 (Out Of Order),
     3259    25353                           call CM to say VCDOWN
     3260    25354        */
     3261    25355    2          CASE ( %Y_ACT_PVCDWN# );

     3262    25356    2             CALL Y$RESET_L3CNTX;

  25356   2 00113F  E3C0 15D1                            LNJ,B6   s:0,PREL
          2 001141       0001                            DC       s:25357,PREL

     3263    25357    2             CALL KXS$GETBFR ( 2, DAT$ );

  25357   2 001142  EBF0 0002                            LAB,B6   2,IMO
          2 001144  DBC7 0006                            LAB,B5   DAT$,AUTO
          2 001146  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 001148  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 00114A  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00114C  CBF0 0200                            LAB,B4   512,IMO
          2 00114E  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 001151       0001                            DC       s:25358,PREL

     3264    25358    2             KX$DATA.RLS.L3 = '1'B;

  25358   2 001152  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001154  8946 0006                            LBT,'8000'X       6,B6
          2 001156       8000

     3265    25359    2             KX$DATA.CNT = %L1 + L2EXT;

  25359   2 001157  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001159  E847 003D                            LDR,R6   L2EXT,AUTO
          2 00115B  6E06                                 ADV,R6   6
          2 00115C  EF46 0007                            STR,R6   7,B6

     3266    25360    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:427  

  25360   2 00115E  5C1B                                 LDV,R5   27
          2 00115F  D780 0000 0004  01                   STH,R5   OUT_PKTHDR+1

     3267    25361    2             OUT_PKTHDR.CAUSE = %KX_RST_CAUSE_OOO#;

  25361   2 001162  4C01                                 LDV,R4   1
          2 001163  CA80 0000 0004  01                   SRM,R4,'00FF'X    OUT_PKTHDR+1
          2 001166       00FF

     3268    25362    2             CALL Y$PACKET_OUT;

  25362   2 001167  E3C0 008D                            LNJ,B6   s:0,PREL
          2 001169       0001                            DC       s:25363,PREL

     3269    25363    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;

  25363   2 00116A  8A80 0000 0041  xsym                 INC      KX_STATS_X25+65
          2 00116D  8E80 0000 0040  xsym                 CAD      KX_STATS_X25+64

     3270    25364    2             CALL Y$START_TIMER ( KX$L3.T22 );

  25364   2 001170  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001172  DBC6 006C                            LAB,B5   108,B6
          2 001174  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 001176  E3C0 1988                            LNJ,B6   s:0,PREL
          2 001178       0001                            DC       s:25365,PREL

     3271    25365    2             CALL_FPT.EVN = %KX_CM_EV_VCDWN#;

  25365   2 001179  6C05                                 LDV,R6   5
          2 00117A  EF47 0012                            STR,R6   CALL_FPT,AUTO

     3272    25366    2             CALL Y$CNCMNG;

  25366   2 00117C  E3C0 0049                            LNJ,B6   s:0,PREL
          2 00117E       0001                            DC       s:25366+3,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:428  
          2 00117F  0F81 0043                            B        s:25392,PREL

     3273    25367        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:429  
     3274    25368        /*
     3275    25369                PVCUP  -  send reset packet with cause = remote DTE operational
     3276    25370        */
     3277    25371    2          CASE ( %Y_ACT_PVCUP# );

     3278    25372    2             CALL KXS$GETBFR ( 2, DAT$ );

  25372   2 001181  DBF0 0002                            LAB,B5   2,IMO
          2 001183  CBC7 0006                            LAB,B4   DAT$,AUTO
          2 001185  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 001187  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 001189  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00118B  CBF0 0200                            LAB,B4   512,IMO
          2 00118D  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 001190       0001                            DC       s:25373,PREL

     3279    25373    2             KX$DATA.RLS.L3 = '1'B;

  25373   2 001191  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001193  8946 0006                            LBT,'8000'X       6,B6
          2 001195       8000

     3280    25374    2             KX$DATA.CNT = %L1 + L2EXT;

  25374   2 001196  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001198  E847 003D                            LDR,R6   L2EXT,AUTO
          2 00119A  6E06                                 ADV,R6   6
          2 00119B  EF46 0007                            STR,R6   7,B6

     3281    25375    2             OUT_PKTHDR.TYPE = %Y_ID_RESET#;

  25375   2 00119D  5C1B                                 LDV,R5   27
          2 00119E  D780 0000 0004  01                   STH,R5   OUT_PKTHDR+1

     3282    25376    2             OUT_PKTHDR.CAUSE = %KX_RST_CAUSE_RDO#;

  25376   2 0011A1  4C09                                 LDV,R4   9
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:430  
          2 0011A2  CA80 0000 0004  01                   SRM,R4,'00FF'X    OUT_PKTHDR+1
          2 0011A5       00FF

     3283    25377    2             CALL Y$PACKET_OUT;

  25377   2 0011A6  E3C0 004E                            LNJ,B6   s:0,PREL
          2 0011A8       0001                            DC       s:25378,PREL

     3284    25378    2             KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;

  25378   2 0011A9  8A80 0000 0041  xsym                 INC      KX_STATS_X25+65
          2 0011AC  8E80 0000 0040  xsym                 CAD      KX_STATS_X25+64

     3285    25379    2             CALL Y$START_TIMER ( KX$L3.T22 );

  25379   2 0011AF  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0011B1  DBC6 006C                            LAB,B5   108,B6
          2 0011B3  DFC7 0050                            STB,B5   TERMID+10,AUTO
          2 0011B5  E3C0 1949                            LNJ,B6   s:0,PREL
          2 0011B7       0001                            DC       s:25379+9,PREL
          2 0011B8  0F81 000A                            B        s:25392,PREL

     3286    25380        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:431  
     3287    25381        /*
     3288    25382               Everything else should screech
     3289    25383        */
     3290    25384    2          CASE ( ELSE );

     3291    25385
     3292    25386        /*S* SCREECH_CODE: KXP-S$KX_PCK_UNKACT#
     3293    25387             MESSAGE: Unknown action type for KXP$PACKET
     3294    25388        */
     3295    25389    2             CALL KHD$SCREECH (Y_UNKACT);

  25389   2 0011BA  BB80 0000 0004  03                   LAB,B3   +4
          2 0011BD  CBF0 0100                            LAB,B4   256,IMO
          2 0011BF  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0011C2       0001                            DC       s:25392,PREL

     3296    25390
     3297    25391    2       END;  /*  CASE on ACTION  */

     3298    25392    1       RETURN;

  25392   2 0011C3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     3299    25393
     3300    25394        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:432  
     3301    25395    1   Y$CNCMNG: PROC ALTRET;

  25395   2 0011C6  EFC7 004E            Y$CNCMNG        STB,B6   TERMID+8,AUTO

     3302    25396
     3303    25397        /*I* NAME: Y$CNCMNG */
     3304    25398        /*I* PURPOSE: Calls the connection manager */
     3305    25399        /*I* CALL: CALL Y$CNCMNG [ALTRET] */
     3306    25400        /*I* INPUT: CM$ = copy of KX$L3.CM$ */
     3307    25401        /*I*        L3$ = KX$L3 pointer */
     3308    25402        /*I*        CALL_FPT = parameter fpt for the call */
     3309    25403
     3310    25404    2       CALL_FPT.CAL$ = L3$;

  25404   2 0011C8  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0011CA  DFC7 0013                            STB,B5   CALL_FPT+1,AUTO

     3311    25405    2       CALL_FPT.RCV$ = CM$;

  25405   2 0011CC  CCC7 000A                            LDB,B4   CM$,AUTO
          2 0011CE  CFC7 0015                            STB,B4   CALL_FPT+3,AUTO

     3312    25406    2       IF CM$ = ADDR(NIL)

  25406   2 0011D0  8DC7 000A                            CMN      CM$,AUTO
          2 0011D2  0981 000F                            BNE      s:25410,PREL

     3313    25407    2          THEN
     3314    25408    2             CALL KXC$CNCMNG (CALL_FPT) ALTRET (RETALT);

  25408   2 0011D4  BBC7 0012                            LAB,B3   CALL_FPT,AUTO
          2 0011D6  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 0011D8  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0011DA  CBF0 0100                            LAB,B4   256,IMO
          2 0011DC  E380 0000 0000  xent                 LNJ,B6   KXC$CNCMNG
          2 0011DF       0012                            DC       s:25406,PREL
          2 0011E0  0F81 000C                            B        s:25411,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:433  

     3315    25409    2          ELSE
     3316    25410    2             CALL Y@CNCMNG (CALL_FPT) ALTRET (RETALT);

  25410   2 0011E2  BBC7 0012                            LAB,B3   CALL_FPT,AUTO
          2 0011E4  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 0011E6  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0011E8  9C84                                 LDB,B1   ,B4
          2 0011E9  CBF0 0100                            LAB,B4   256,IMO
          2 0011EB  E381                                 LNJ,B6   ,B1
          2 0011EC       0005                            DC       s:25406,PREL

     3317    25411    2       RETURN;

  25411   2 0011ED  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0011EF  C3C6 0001                            LNJ,B4   1,B6

  25406   2                              RETALT          null
     3318    25412    2   RETALT: ;
     3319    25413    2       ALTRETURN;

  25413   2 0011F1  ECC7 004E            RETALT          LDB,B6   TERMID+8,AUTO
          2 0011F3  B806                                 LDR,R3   ,B6
          2 0011F4  C3B6                                 LNJ,B4   ,B6,R3

     3320    25414    2   END Y$CNCMNG;
     3321    25415        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:434  
     3322    25416    1   Y$PACKET_OUT: PROC;

  25416   2 0011F5  EFC7 0056            Y$PACKET_OUT    STB,B6   FCLID+1,AUTO

     3323    25417
     3324    25418        /*I* NAME: Y$PACKET_OUT */
     3325    25419        /*I* PURPOSE: This subroutine will forward the data/control packet or */
     3326    25420        /*I* queue it if the frame level is not ready. */
     3327    25421        /*I* CALL: CALL Y$PACKET_OUT */
     3328    25422        /*I* INPUT: L2$  =  line context block pointer */
     3329    25423        /*I* L3$  =  L3 context block pointer */
     3330    25424        /*I* DAT$  =  data pointer */
     3331    25425        /*I* OUTPUT: none */
     3332    25426
     3333    25427        %FPT_X25 ( FPTN = FPT_DATA_OUT, STCLASS = STATIC, EVN = %KX_F_EV_DATA_OUT# );
     3334    25471
     3335    25472    2       OUT_PKTHDR.LCN# = KX$L3.LCN#;

  25472   2 0011F7  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0011F9  E845 002A                            LDR,R6   42,B5
          2 0011FB  EA80 0000 0003  01                   SRM,R6,'0FFF'X    OUT_PKTHDR
          2 0011FE       0FFF

     3336    25473    2       OUT_PKTHDR.GFI = %GFI + L3EXT;

  25473   2 0011FF  D847 003E                            LDR,R5   L3EXT,AUTO
          2 001201  5E01                                 ADV,R5   1
          2 001202  500C                                 SOL,R5   12
          2 001203  DA80 0000 0003  01                   SRM,R5,'3000'X    OUT_PKTHDR
          2 001206       3000

     3337    25474
     3338    25475    2       FPT_DATA_OUT.RCV$ = L2$;

  25475   2 001207  CCC7 000C                            LDB,B4   L2$,AUTO
          2 001209  CF80 0000 0009  01                   STB,B4   FPT_DATA_OUT+3

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:435  
     3339    25476    2       FPT_DATA_OUT.PRM1$ = DAT$;

  25476   2 00120C  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 00120E  BF80 0000 000D  01                   STB,B3   FPT_DATA_OUT+7

     3340    25477    2       IF NOT OUT_PKTHDR.TYPE_BITS.DP

  25477   2 001211  8280 0000 0004  01                   LB,'0100'X        OUT_PKTHDR+1
  25477   2 001214       0100
          2 001215  0501 0051                            BBT      s:25508,PREL

     3341    25478    2          THEN
     3342    25479    3             DO;

     3343    25480        /*
     3344    25481           Insert P(R) and P(S). The M-bit is already taken care of.
     3345    25482        */
     3346    25483    3                IF L3EXT = 0

  25483   2 001217  D847 003E                            LDR,R5   L3EXT,AUTO
          2 001219  5981 0018                            BNEZ,R5  s:25492,PREL

     3347    25484    3                   THEN
     3348    25485    4                      DO;

     3349    25486    4                         OUT_PKTHDR.PR_BITS.PR = KX$L3.VR;

  25486   2 00121B  C845 002F                            LDR,R4   47,B5
          2 00121D  400D                                 SOL,R4   13
          2 00121E  CA80 0000 0004  01                   SRM,R4,'E000'X    OUT_PKTHDR+1
          2 001221       E000

     3350    25487    4                         OUT_PKTHDR.TYPE_BITS.PS = KX$L3.VS;

  25487   2 001222  C2C5 002F                            LLH,R4   47,B5
          2 001224  4009                                 SOL,R4   9
          2 001225  CA80 0000 0004  01                   SRM,R4,'0E00'X    OUT_PKTHDR+1
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:436  
          2 001228       0E00

     3351    25488    4                         KX$L3.VS = MOD ( KX$L3.VS + 1, 8);

  25488   2 001229  C2C5 002F                            LLH,R4   47,B5
          2 00122B  4E01                                 ADV,R4   1
          2 00122C  C570 0007                            AND,R4   7,IMO
          2 00122E  C7C5 002F                            STH,R4   47,B5

     3352    25489    4                      END;

  25489   2 001230  0F81 0016                            B        s:25496,PREL

     3353    25490    3                   ELSE
     3354    25491    4                      DO;

     3355    25492    4                         OUT_PKTHDR.PR_EXT.PR = KX$L3.VR;

  25492   2 001232  C845 002F                            LDR,R4   47,B5
          2 001234  4001                                 SOL,R4   1
          2 001235  CA80 0000 0004  01                   SRM,R4,'00FE'X    OUT_PKTHDR+1
          2 001238       00FE

     3356    25493    4                         OUT_PKTHDR.TYPE_EXT.PS = KX$L3.VS;

  25493   2 001239  C2C5 002F                            LLH,R4   47,B5
          2 00123B  4009                                 SOL,R4   9
          2 00123C  CA80 0000 0004  01                   SRM,R4,'FE00'X    OUT_PKTHDR+1
          2 00123F       FE00

     3357    25494    4                         KX$L3.VS = MOD ( KX$L3.VS + 1, 128);

  25494   2 001240  C2C5 002F                            LLH,R4   47,B5
          2 001242  4E01                                 ADV,R4   1
          2 001243  C570 007F                            AND,R4   127,IMO
          2 001245  C7C5 002F                            STH,R4   47,B5

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:437  
     3358    25495    4                      END;

     3359    25496    3                KX$L3.DCNTP = 0;

  25496   2 001247  87C5 0030                            CLH      48,B5

     3360    25497    3                KX$L3.DCNT = KX$L3.DCNT + 1;

  25497   2 001249  C2C5 002E                            LLH,R4   46,B5
          2 00124B  4E01                                 ADV,R4   1
          2 00124C  C7C5 002E                            STH,R4   46,B5

     3361    25498    3                IF KX$L3.DCNT >= KX$L3.CALL_OPTS.SNDWND

  25498   2 00124E  C2C5 002E                            LLH,R4   46,B5
          2 001250  B845 0016                            LDR,R3   22,B5
          2 001252  B570 00FF                            AND,R3   255,IMO
          2 001254  C953                                 CMR,R4   R3
          2 001255  0801 000A                            BAL      s:25504,PREL

     3362    25499    3                   THEN
     3363    25500    4                      DO;

     3364    25501    4                         KX_STATS_X25.P_BLK = KX_STATS_X25.P_BLK + 1;

  25501   2 001257  8A80 0000 0035  xsym                 INC      KX_STATS_X25+53
          2 00125A  8E80 0000 0034  xsym                 CAD      KX_STATS_X25+52

     3365    25502    4                         KX$L3.BLK = '1'B;

  25502   2 00125D  8945 0029                            LBT,'2000'X       41,B5
  25502   2 00125F       2000

     3366    25503    4                      END;

     3367    25504    3                IF NOT KX$L3.TMRBLK.ON

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:438  
  25504   2 001260  89C5 0056                            CMZ      86,B5
          2 001262  0801 0004                            BAL      s:25508,PREL

     3368    25505    3                   THEN
     3369    25506    3                      CALL Y$START_DATTMR;

  25506   2 001264  E3C0 1839                            LNJ,B6   s:0,PREL
          2 001266       0001                            DC       s:25508,PREL

     3370    25507    3             END;

     3371    25508    2       IF OUT_PKTHDR.TYPE = %Y_ID_CLEAR# OR OUT_PKTHDR.TYPE = %Y_ID_RESET#

  25508   2 001267  E280 0000 0004  01                   LLH,R6   OUT_PKTHDR+1
          2 00126A  6D13                                 CMV,R6   19
          2 00126B  0901 0004                            BE       s:25510,PREL
          2 00126D  6D1B                                 CMV,R6   27
          2 00126E  0981 0006                            BNE      s:25512,PREL

     3372    25509    2          THEN   /* 5 byte packet header */
     3373    25510    2             TEMP0 = 5;

  25510   2 001270  5C05                                 LDV,R5   5
          2 001271  DF47 002A                            STR,R5   TEMP0,AUTO
          2 001273  0F81 0018                            B        s:25518,PREL

     3374    25511    2          ELSE
     3375    25512    2             IF (NOT OUT_PKTHDR.TYPE_BITS.DP OR MOD(OUT_PKTHDR.TYPE,4) = 1)

  25512   2 001275  8280 0000 0004  01                   LB,'0100'X        OUT_PKTHDR+1
  25512   2 001278       0100
          2 001279  0581 0006                            BBF      s:25512+11,PREL
          2 00127B  E570 0003                            AND,R6   3,IMO
          2 00127D  6D01                                 CMV,R6   1
          2 00127E  0981 000A                            BNE      s:25517,PREL
          2 001280  E847 003E                            LDR,R6   L3EXT,AUTO
          2 001282  6901 0006                            BEZ,R6   s:25517,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:439  

     3376    25513    2                AND L3EXT ~= 0
     3377    25514    2                THEN   /* 4 byte packet header */
     3378    25515    2                   TEMP0 = 4;

  25515   2 001284  5C04                                 LDV,R5   4
          2 001285  DF47 002A                            STR,R5   TEMP0,AUTO
          2 001287  0F81 0004                            B        s:25518,PREL

     3379    25516    2                ELSE   /* 3 byte packet header */
     3380    25517    2                   TEMP0 = 3;

  25517   2 001289  6C03                                 LDV,R6   3
          2 00128A  EF47 002A                            STR,R6   TEMP0,AUTO

     3381    25518    2       SUBSTR(DAT$->STRT0,LENGTHC(KX$FRAME)+L2EXT,TEMP0) = ADDR(OUT_PKTHDR)->STRT0;

  25518   2 00128C  AB80 0000 0000  01                   LAB,B2   IN_PKTHDR
          2 00128F  2C06                                 LDV,R2   6
          2 001290  E847 002A                            LDR,R6   TEMP0,AUTO
          2 001292  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 001294  B847 003D                            LDR,R3   L2EXT,AUTO
          2 001296  3E12                                 ADV,R3   18
          2 001297  0008                                 MMM

     3382    25519    2       IF KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK

  25519   2 001298  ECC7 000C                            LDB,B6   L2$,AUTO
          2 00129A  89C6 002E                            CMZ      46,B6
          2 00129C  0801 0006                            BAL      s:25527,PREL
          2 00129E  82C6 002E                            LB,'0800'X        46,B6
          2 0012A0       0800
          2 0012A1  0501 0027                            BBT      s:25540,PREL

     3383    25520    2          THEN
     3384    25521    3             DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:440  
     3385    25522        /*
     3386    25523           We have to queue the packet for later transmission.
     3387    25524           We know it is a control packet because this check is done before
     3388    25525           attempting to transmit the data packet.
     3389    25526        */
     3390    25527    3                KX$L2.FLG.DATAVL = '1'B;

  25527   2 0012A3  8946 002E                            LBT,'0002'X       46,B6
  25527   2 0012A5       0002

     3391    25528    3                IF ( KX$L3.CTL_Q_HEAD$ = ADDR(NIL) )

  25528   2 0012A6  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0012A8  8DC5 003F                            CMN      63,B5
          2 0012AA  0981 0007                            BNE      s:25532,PREL

     3392    25529    3                   THEN
     3393    25530    3                      KX$L3.CTL_Q_HEAD$ = DAT$;

  25530   2 0012AC  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 0012AE  CFC5 003F                            STB,B4   63,B5
          2 0012B0  0F81 0007                            B        s:25533,PREL

     3394    25531    3                   ELSE
     3395    25532    3                      KX$L3.CTL_Q_TAIL$ -> KX$TDATA.L3_LIST$ = DAT$;

  25532   2 0012B2  CCC5 0041                            LDB,B4   65,B5
          2 0012B4  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 0012B6  BFC4 0004                            STB,B3   4,B4

     3396    25533    3                KX$L3.CTL_Q_TAIL$ = DAT$;

  25533   2 0012B8  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 0012BA  CFC5 0041                            STB,B4   65,B5

     3397    25534        /* Clear the forward link */
     3398    25535
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:441  
     3399    25536    3                KX$DATA.L3_LIST$ = ADDR(NIL);

  25536   2 0012BC  BB80 0000 0000                       LAB,B3   0
          2 0012BF  BFC4 0004                            STB,B3   4,B4

     3400    25537    3                KX_STATS_X25.F_BLK = KX_STATS_X25.F_BLK + 1;

  25537   2 0012C1  8A80 0000 0043  xsym                 INC      KX_STATS_X25+67
          2 0012C4  8E80 0000 0042  xsym                 CAD      KX_STATS_X25+66

     3401    25538    3             END;

  25538   2 0012C7  0F81 000A                            B        s:25541,PREL

     3402    25539    2          ELSE
     3403    25540    2             CALL KXF$FRAME ( FPT_DATA_OUT );

  25540   2 0012C9  BB80 0000 0006  03                   LAB,B3   +6
          2 0012CC  CBF0 0100                            LAB,B4   256,IMO
          2 0012CE  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 0012D1       0001                            DC       s:25541,PREL

     3404    25541    2       RETURN;

  25541   2 0012D2  ECC7 0056                            LDB,B6   FCLID+1,AUTO
          2 0012D4  C3C6 0001                            LNJ,B4   1,B6

     3405    25542    2   END /* SUBROUTINE */;
     3406    25543
     3407    25544        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:442  
     3408    25545
     3409    25546    1   Y$PR: PROC ALTRET;

  25546   2 0012D6  EFC7 005A            Y$PR            STB,B6   FCL_PRESENT+1,AUTO

     3410    25547
     3411    25548        /*I* NAME: Y$PR */
     3412    25549        /*I* PURPOSE: This subroutine checks for a good P ( R ) */
     3413    25550        /*I* and updates P' ( R ) . */
     3414    25551        /*I* CALL: CALL Y$PR */
     3415    25552        /*I* INPUT: L3$  =  L3 context block pointer */
     3416    25553        /*I* DAT$  =  data pointer */
     3417    25554        /*I* PEVENT  =  event type */
     3418    25555        /*I* OUTPUT: PEVENT  =  event type */
     3419    25556
     3420    25557    2   DCL T$ PTR;
     3421    25558    2   DCL PPR UBIN;
     3422    25559    2   DCL PR UBIN;
     3423    25560    2   DCL VS UBIN;
     3424    25561    2   DCL DCOUNT UBIN;
     3425    25562
     3426    25563        /*
     3427    25564                                             P(R) is only checked if the VC
     3428    25565                                             is in state DATA.  Otherwise,
     3429    25566                                             data acknowledgements are not
     3430    25567                                             meaningful.
     3431    25568        */
     3432    25569
     3433    25570    2       IF ( KX$L3.STATE.CURRENT ~= %Y_ST_DATA# ) THEN RETURN;

  25570   2 0012D8  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0012DA  E2C5 0031                            LLH,R6   49,B5
          2 0012DC  6D09                                 CMV,R6   9
          2 0012DD  0901 0005                            BE       s:25572,PREL

  25570   2 0012DF  ECC7 005A                            LDB,B6   FCL_PRESENT+1,AUTO
          2 0012E1  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:443  

     3434    25571
     3435    25572    2       PR = IN_PR;

  25572   2 0012E3  D847 0040                            LDR,R5   IN_PR,AUTO
          2 0012E5  DF47 005F                            STR,R5   PR,AUTO

     3436    25573    2       PPR = KX$L3.PPR;

  25573   2 0012E7  C845 002E                            LDR,R4   46,B5
          2 0012E9  C570 00FF                            AND,R4   255,IMO
          2 0012EB  CF47 005E                            STR,R4   PPR,AUTO

     3437    25574    2       VS = KX$L3.VS;

  25574   2 0012ED  B2C5 002F                            LLH,R3   47,B5
          2 0012EF  BF47 0060                            STR,R3   VS,AUTO

     3438    25575
     3439    25576        /*
     3440    25577                                             Before releasing any buffers,
     3441    25578                                             the values are checked.  If P(R)
     3442    25579                                             is invalid, the error is flagged
     3443    25580                                             and no more processing is done.
     3444    25581                                             As buffers are released, keep
     3445    25582                                             track of how many CM ACKs are to
     3446    25583                                             be delivered.
     3447    25584        */
     3448    25585
     3449    25586    2       IF VS < PPR

  25586   2 0012F1  B954                                 CMR,R3   R4
          2 0012F2  0281 001B                            BGE      s:25596,PREL

     3450    25587    2          THEN  /*                      Wrap around the modulus  */
     3451    25588    3             IF L3EXT = 0 THEN DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:444  
  25588   2 0012F4  A847 003E                            LDR,R2   L3EXT,AUTO
          2 0012F6  2981 000C                            BNEZ,R2  s:25592,PREL

     3452    25589    3                      IF PR <= VS THEN PR = PR + 8;

  25589   2 0012F8  D953                                 CMR,R5   R3
          2 0012F9  0301 0004                            BG       s:25590,PREL

  25589   2 0012FB  5E08                                 ADV,R5   8
          2 0012FC  DF47 005F                            STR,R5   PR,AUTO

     3453    25590    3                      VS = VS + 8;

  25590   2 0012FE  3E08                                 ADV,R3   8
          2 0012FF  BF47 0060                            STR,R3   VS,AUTO

     3454    25591    3                   END; ELSE DO;

  25591   2 001301  0F81 000C                            B        s:25596,PREL

     3455    25592    3                      IF PR <= VS THEN PR = PR + 128;

  25592   2 001303  D953                                 CMR,R5   R3
          2 001304  0301 0005                            BG       s:25593,PREL

  25592   2 001306  DA70 0080                            ADD,R5   128,IMO
          2 001308  DF47 005F                            STR,R5   PR,AUTO

     3456    25593    3                      VS = VS + 128;

  25593   2 00130A  BA70 0080                            ADD,R3   128,IMO
          2 00130C  BF47 0060                            STR,R3   VS,AUTO

     3457    25594    3                   END;

     3458    25595
     3459    25596    2       IF ( PR < PPR ) OR ( PR > VS ) OR ( PR - PPR > KX$L3.DCNT )
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:445  

  25596   2 00130E  D954                                 CMR,R5   R4
          2 00130F  0201 000A                            BL       s:25619,PREL
          2 001311  D953                                 CMR,R5   R3
          2 001312  0301 0007                            BG       s:25619,PREL
          2 001314  D254                                 SUB,R5   R4
          2 001315  A2C5 002E                            LLH,R2   46,B5
          2 001317  A955                                 CMR,R2   R5
          2 001318  0881 002A                            BAGE     s:25626,PREL

     3460    25597    2          THEN  /*                      Bad P(R)  */
     3461    25598    3             DO;

     3462    25599                     %WRSYSLOG ( ERRCOD = BAD_PR,
     3463    25600                     TRMID = "KX$L3.CHN$ -> KH$CHN.TERMID",
     3464    25601                     BFR = KX$PACKET,
     3465    25602                     VAL0 = KX$L3.DCNT,  /*  and .PPR  */
     3466    25603                     VAL1 = KX$L3.VS );  /*  and .VR  */

  25619   2 00131A  CCC5 0006                            LDB,B4   6,B5
          2 00131C  BBC5 002F                            LAB,B3   47,B5
          2 00131E  BFC7 00C4                            STB,B3   KV@USRENT+13,AUTO
          2 001320  ABC5 002E                            LAB,B2   46,B5
          2 001322  AFC7 00C2                            STB,B2   KV@USRENT+11,AUTO
          2 001324  9CC7 0006                            LDB,B1   DAT$,AUTO
          2 001326  9FC7 00C0                            STB,B1   KV@USRENT+9,AUTO
          2 001328  EBC4 0012                            LAB,B6   18,B4
          2 00132A  EFC7 00BE                            STB,B6   KV@USRENT+7,AUTO
          2 00132C  CB80 0000 03B8  00                   LAB,B4   BAD_PR
          2 00132F  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 001331  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 001333  CBF0 0500                            LAB,B4   1280,IMO
          2 001335  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 001338       0001                            DC       s:25621,PREL

     3467    25621    3                PEVENT = %Y_EV_BAD_PRS#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:446  
  25621   2 001339  6C17                                 LDV,R6   23
          2 00133A  EF47 002C                            STR,R6   PEVENT,AUTO

     3468    25622    3                DIAG = %KX_RST_DIAG_PR#;

  25622   2 00133C  5C02                                 LDV,R5   2
          2 00133D  DF47 002F                            STR,R5   DIAG,AUTO

     3469    25623    3                ALTRETURN;

  25623   2 00133F  ECC7 005A                            LDB,B6   FCL_PRESENT+1,AUTO
          2 001341  B806                                 LDR,R3   ,B6
          2 001342  C3B6                                 LNJ,B4   ,B6,R3

     3470    25624    3             END;
     3471    25625
     3472    25626    2       DCOUNT = PR -PPR;

  25626   2 001343  C247 005F                            SUB,R4   PR,AUTO
          2 001345  8254                                 NEG      R4
          2 001346  CF47 0061                            STR,R4   DCOUNT,AUTO

     3473    25627
     3474    25628    2       KX$L3.DCNT = KX$L3.DCNT - DCOUNT;

  25628   2 001348  A254                                 SUB,R2   R4
          2 001349  A7C5 002E                            STH,R2   46,B5

     3475    25629
     3476    25630    3       DO WHILE ( PPR < PR AND KX$L3.D_LIST_HEAD$ ~= ADDR(NIL) );

  25630   2 00134B  0F81 002F                            B        s:25644,PREL

     3477    25631
     3478    25632    3          T$ = KX$L3.D_LIST_HEAD$;

  25632   2 00134D  ECC7 0008                            LDB,B6   L3$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:447  
          2 00134F  DCC6 0045                            LDB,B5   69,B6
          2 001351  DFC7 005C                            STB,B5   T$,AUTO

     3479    25633    3          KX$L3.D_LIST_HEAD$ = T$ -> KX$TDATA.L3_LIST$;

  25633   2 001353  CCC5 0004                            LDB,B4   4,B5
          2 001355  CFC6 0045                            STB,B4   69,B6

     3480    25634    3          IF KX$L3.D_LIST_HEAD$ = ADDR(NIL)

  25634   2 001357  8DC6 0045                            CMN      69,B6
          2 001359  0981 0006                            BNE      s:25637,PREL

     3481    25635    3             THEN
     3482    25636    3                KX$L3.D_LIST_TAIL$ = ADDR(NIL);

  25636   2 00135B  DB80 0000 0000                       LAB,B5   0
          2 00135E  DFC6 0047                            STB,B5   71,B6

     3483    25637    3          T$ -> KX$TDATA.RLS.L3 = '1'B;

  25637   2 001360  DCC7 005C                            LDB,B5   T$,AUTO
          2 001362  8945 0006                            LBT,'8000'X       6,B5
          2 001364       8000

     3484    25638    3          IF ( T$ -> KX$TDATA.RLS_STAT = %KX_BFR_RLS_OK# )

  25638   2 001365  DCC7 005C                            LDB,B5   T$,AUTO
          2 001367  E845 0006                            LDR,R6   6,B5
          2 001369  604D                                 SOR,R6   13
          2 00136A  6D07                                 CMV,R6   7
          2 00136B  0981 000D                            BNE      s:25642,PREL

     3485    25639    3             THEN
     3486    25640    3                CALL KXS$RLSBFR ( T$ );

  25640   2 00136D  CBC7 005C                            LAB,B4   T$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:448  
          2 00136F  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 001371  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 001373  CBF0 0100                            LAB,B4   256,IMO
          2 001375  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 001378       0001                            DC       s:25642,PREL

     3487    25641
     3488    25642    3          PPR = PPR + 1;

  25642   2 001379  8AC7 005E                            INC      PPR,AUTO

     3489    25643
     3490    25644    3       END;

  25644   2 00137B  E847 005E                            LDR,R6   PPR,AUTO
          2 00137D  E947 005F                            CMR,R6   PR,AUTO
          2 00137F  0281 0006                            BGE      s:25645,PREL
          2 001381  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001383  8DC6 0045                            CMN      69,B6
          2 001385  09C8                                 BNE      s:25632,SPREL

     3491    25645    2       IF KX$L3.BLK AND KX$L3.DCNT < KX$L3.CALL_OPTS.SNDWND

  25645   2 001386  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001388  82C6 0029                            LB,'2000'X        41,B6
          2 00138A       2000
          2 00138B  0581 0012                            BBF      s:25654,PREL
          2 00138D  D2C6 002E                            LLH,R5   46,B6
          2 00138F  C846 0016                            LDR,R4   22,B6
          2 001391  C570 00FF                            AND,R4   255,IMO
          2 001393  D954                                 CMR,R5   R4
          2 001394  0881 0009                            BAGE     s:25654,PREL

     3492    25646    2          THEN
     3493    25647    3             DO;

     3494    25648    3                KX$L3.BLK = '0'B;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:449  

  25648   2 001396  8846 0029                            LBF,'2000'X       41,B6
  25648   2 001398       2000

     3495    25649    3                KX$L2.FLG.DATAVL = '1'B;

  25649   2 001399  DCC7 000C                            LDB,B5   L2$,AUTO
          2 00139B  8945 002E                            LBT,'0002'X       46,B5
          2 00139D       0002

     3496    25650    3             END;

     3497    25651
     3498    25652        /* Return P' ( R )  to the context block */
     3499    25653
     3500    25654    2       IF ( (KX$L3.PPR ~= IN_PR AND PEVENT = %Y_EV_DATA_IN#)

  25654   2 00139E  D846 002E                            LDR,R5   46,B6
          2 0013A0  D570 00FF                            AND,R5   255,IMO
          2 0013A2  D947 0040                            CMR,R5   IN_PR,AUTO
          2 0013A4  0901 0006                            BE       s:25654+13,PREL
          2 0013A6  C847 002C                            LDR,R4   PEVENT,AUTO
          2 0013A8  4D0E                                 CMV,R4   14
          2 0013A9  0901 0006                            BE       s:25654+18,PREL
          2 0013AB  C847 002C                            LDR,R4   PEVENT,AUTO
          2 0013AD  4D0F                                 CMV,R4   15
          2 0013AE  0981 000E                            BNE      s:25661,PREL
          2 0013B0  82C6 0029                            LB,'0800'X        41,B6
          2 0013B2       0800
          2 0013B3  0581 0009                            BBF      s:25661,PREL

     3501    25655    2          OR (PEVENT = %Y_EV_RR#) ) AND KX$L3.RNR
     3502    25656    2          THEN
     3503    25657    3             DO;

     3504    25658    3                KX$L2.FLG.DATAVL = '1'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:450  
  25658   2 0013B5  DCC7 000C                            LDB,B5   L2$,AUTO
          2 0013B7  8945 002E                            LBT,'0002'X       46,B5
          2 0013B9       0002

     3505    25659    3                KX$L3.RNR = '0'B;

  25659   2 0013BA  8846 0029                            LBF,'0800'X       41,B6
  25659   2 0013BC       0800

     3506    25660    3             END;

     3507    25661    2       KX$L3.PPR = IN_PR;

  25661   2 0013BD  D847 0040                            LDR,R5   IN_PR,AUTO
          2 0013BF  DAC6 002E                            SRM,R5,'00FF'X    46,B6
          2 0013C1       00FF

     3508    25662
     3509    25663        /*
     3510    25664           Should we start a new data packet clock?
     3511    25665        */
     3512    25666    2       IF KX$L3.D_LIST_HEAD$ = KX$L3.RTR$

  25666   2 0013C2  DCC6 0045                            LDB,B5   69,B6
          2 0013C4  DDC6 0043                            CMB,B5   67,B6
          2 0013C6  0981 0006                            BNE      s:25672,PREL

     3513    25667    2          THEN
     3514    25668    3             DO;

     3515    25669    3                CALL Y$STOP_DATTMR;

  25669   2 0013C8  E3C0 16A5                            LNJ,B6   s:0,PREL
          2 0013CA       0001                            DC       s:25670,PREL

     3516    25670    3             END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:451  
  25670   2 0013CB  0F81 0008                            B        s:25675,PREL

     3517    25671    2          ELSE
     3518    25672    2             IF DCOUNT > 0

  25672   2 0013CD  B847 0061                            LDR,R3   DCOUNT,AUTO
          2 0013CF  3901 0004                            BEZ,R3   s:25675,PREL

     3519    25673    2                THEN
     3520    25674    2                   CALL Y$START_DATTMR;

  25674   2 0013D1  E3C0 16CC                            LNJ,B6   s:0,PREL
          2 0013D3       0001                            DC       s:25675,PREL

     3521    25675    2   END /* SUBROUTINE */;

  25675   2 0013D4  ECC7 005A                            LDB,B6   FCL_PRESENT+1,AUTO
          2 0013D6  C3C6 0001                            LNJ,B4   1,B6

     3522    25676        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:452  
     3523    25677    1   Y$SEND_PACKET: PROC ALTRET;

  25677   2 0013D8  EFC7 004E            Y$SEND_PACKET   STB,B6   TERMID+8,AUTO

     3524    25678
     3525    25679        /*I* NAME: Y$SEND_PACKET */
     3526    25680        /*I* PURPOSE: This subroutine will send the requested control packet. */
     3527    25681        /*I* CALL: CALL Y$SEND_PACKET */
     3528    25682        /*I* INPUT: ID  =  packet to be sent */
     3529    25683        /*I* L2$  =  line context block pointer*/
     3530    25684        /*I* L3$  =  L3 context block pointer */
     3531    25685        /*I* OUTPUT: none */
     3532    25686
     3533    25687        /* Get a buffer */
     3534    25688
     3535    25689    2       CALL KXS$GETBFR ( 0, TEMP2$ );

  25689   2 0013DA  DBF0 0000                            LAB,B5   0,IMO
          2 0013DC  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 0013DE  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 0013E0  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 0013E2  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0013E4  CBF0 0200                            LAB,B4   512,IMO
          2 0013E6  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 0013E9       0001                            DC       s:25690,PREL

     3536    25690    2       DAT$ = TEMP2$;

  25690   2 0013EA  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 0013EC  EFC7 0006                            STB,B6   DAT$,AUTO

     3537    25691
     3538    25692        /* Set the L3 buffer release bit */
     3539    25693
     3540    25694    2       KX$DATA.RLS.L3 = '1'B;

  25694   2 0013EE  8946 0006                            LBT,'8000'X       6,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:453  
  25694   2 0013F0       8000

     3541    25695
     3542    25696        /* Put in a data size of 4 */
     3543    25697
     3544    25698    2       KX$DATA.CNT = %L0 + L2EXT;

  25698   2 0013F1  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0013F3  E847 003D                            LDR,R6   L2EXT,AUTO
          2 0013F5  6E05                                 ADV,R6   5
          2 0013F6  EF46 0007                            STR,R6   7,B6

     3545    25699
     3546    25700        /*
     3547    25701           This is a convenient way to determine if we actually meant to send
     3548    25702           an RNR instead of an RR, without going back to check everywhere we
     3549    25703           request to send an RR.
     3550    25704        */
     3551    25705    2       IF ( ID = %Y_ID_RR# AND KX$L3.INPBLK )

  25705   2 0013F8  D847 002E                            LDR,R5   ID,AUTO
          2 0013FA  5D01                                 CMV,R5   1
          2 0013FB  0981 000B                            BNE      s:25712,PREL
          2 0013FD  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0013FF  82C6 0029                            LB,'0200'X        41,B6
          2 001401       0200
          2 001402  0581 0004                            BBF      s:25712,PREL

     3552    25706    2          THEN
     3553    25707    2             ID = %Y_ID_RNR#;

  25707   2 001404  5C05                                 LDV,R5   5
          2 001405  DF47 002E                            STR,R5   ID,AUTO

     3554    25708
     3555    25709
     3556    25710        /* Put in the packet type id*/
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:454  
     3557    25711
     3558    25712    2       OUT_PKTHDR = '0'B;

  25712   2 001407  EB80 0000 0000  01                   LAB,B6   IN_PKTHDR
          2 00140A  5C05                                 LDV,R5   5
          2 00140B  0021                                 ALR      ;
          2 00140C       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00140E       4006 0003                                ALPHANUM(3,B6,,R5,FILL)

     3559    25713    2       OUT_PKTHDR.TYPE = ID;

  25713   2 001410  437F                                 CSYNC    s:25712+8,SPREL
          2 001411  E847 002E                            LDR,R6   ID,AUTO
          2 001413  E780 0000 0004  01                   STH,R6   OUT_PKTHDR+1

     3560    25714
     3561    25715        /* For RR,  RNR,  and REJ,  stuff in V ( R ) */
     3562    25716
     3563    25717    2       IF ( ID = %Y_ID_RR# ) OR ( ID = %Y_ID_RNR# )

  25717   2 001416  6D01                                 CMV,R6   1
          2 001417  0901 0004                            BE       s:25720,PREL
          2 001419  6D05                                 CMV,R6   5
          2 00141A  0981 0024                            BNE      s:25732,PREL

     3564    25718    2          THEN
     3565    25719    3             DO;

     3566    25720    3                IF NOT KX$L3.EXTSEQ

  25720   2 00141C  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00141E  82C6 0029                            LB,'0020'X        41,B6
          2 001420       0020
          2 001421  0501 000A                            BBT      s:25725,PREL

     3567    25721    3                   THEN
     3568    25722    3                      OUT_PKTHDR.PR_BITS.PR = KX$L3.VR;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:455  

  25722   2 001423  C846 002F                            LDR,R4   47,B6
          2 001425  400D                                 SOL,R4   13
          2 001426  CA80 0000 0004  01                   SRM,R4,'E000'X    OUT_PKTHDR+1
          2 001429       E000
          2 00142A  0F81 000C                            B        s:25728,PREL

     3569    25723    3                   ELSE
     3570    25724    4                      DO;

     3571    25725    4                         OUT_PKTHDR.PR_EXT.PR = KX$L3.VR;

  25725   2 00142C  C846 002F                            LDR,R4   47,B6
          2 00142E  4001                                 SOL,R4   1
          2 00142F  CA80 0000 0004  01                   SRM,R4,'00FE'X    OUT_PKTHDR+1
          2 001432       00FE

     3572    25726    4                         KX$DATA.CNT = KX$DATA.CNT + 1;

  25726   2 001433  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 001435  8AC5 0007                            INC      7,B5

     3573    25727    4                      END;

     3574    25728    3                KX$L3.DCNTP = 0;

  25728   2 001437  87C6 0030                            CLH      48,B6

     3575    25729    3                KX_STATS_X25.P_FLOW_OUT = KX_STATS_X25.P_FLOW_OUT + 1;

  25729   2 001439  8A80 0000 003D  xsym                 INC      KX_STATS_X25+61
          2 00143C  8E80 0000 003C  xsym                 CAD      KX_STATS_X25+60

     3576    25730    3             END;

     3577    25731
     3578    25732    2       CALL Y$PACKET_OUT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:456  

  25732   2 00143F  E3C0 FDB5                            LNJ,B6   s:0,PREL
          2 001441       0001                            DC       s:25734,PREL

     3579    25733
     3580    25734    2   END /* SUBROUTINE */;

  25734   2 001442  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001444  C3C6 0001                            LNJ,B4   1,B6

     3581    25735        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:457  
     3582    25736    1   Y$WHAT_TYPE: PROC ALTRET;

  25736   2 001446  EFC7 004E            Y$WHAT_TYPE     STB,B6   TERMID+8,AUTO

     3583    25737
     3584    25738        /*I* NAME: Y$WHAT_TYPE */
     3585    25739        /*I* PURPOSE: This subroutine turns the external event into an */
     3586    25740        /*I* event that makes sense internally. */
     3587    25741        /*I* CALL: CALL Y$WHAT_TYPE */
     3588    25742        /*I* INPUT: PEVENT  =  packet event type*/
     3589    25743        /*I* L2$  =  line context block pointer*/
     3590    25744        /*I* L3$  =  L3 context block pointer */
     3591    25745        /*I* DAT$  =  data pointer */
     3592    25746        /*I* OUTPUT: PEVENT  =  packet event type */
     3593    25747
     3594    25748    2   DCL 1 ADRLNGS CALIGNED,
     3595    25749    2         2 * UBIN(8) UNAL,
     3596    25750    2         2 LFT UBIN(4) UNAL,
     3597    25751    2         2 RGH UBIN(4) UNAL;
     3598    25752    2   DCL ADRLNG REDEF ADRLNGS UBIN;
     3599    25753    2   DCL 1 ADREXT CALIGNED,
     3600    25754    2         2 FMT UBIN(2) UNAL,
     3601    25755    2         2 LNG UBIN(6) UNAL;
     3602    25756    2   DCL ADREXTBYT REDEF ADREXT UBIN BYTE CALIGNED;
     3603    25757    2   DCL I UBIN;
     3604    25758    2   DCL J UBIN;
     3605    25759    2   DCL FCLLNG UBIN;
     3606    25760    2   DCL FCLID UBIN;
     3607    25761    2   DCL TEMP UBIN;
     3608    25762    2   DCL TL3$ PTR;
     3609    25763        /*
     3610    25764           Define these to detect duplicate facility request
     3611    25765        */
     3612    25766        %EQU FCLX_CUG1# = 0;
     3613    25767        %EQU FCLX_CUG2# = 1;
     3614    25768        %EQU FCLX_RVS# = 3;
     3615    25769        %EQU FCLX_PCKSIZ# = 4;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:458  
     3616    25770        %EQU FCLX_WNDSIZ# = 5;
     3617    25771        %EQU FCLX_THRCLS# = 6;
     3618    25772        %EQU FCLX_CHR_RQS# = 7;
     3619    25773        %EQU FCLX_DLY# = 8;
     3620    25774        %EQU FCLX_RED# = 9;
     3621    25775        %EQU FCLX_NUID# = 10;
     3622    25776        %EQU FCLX_ADR_MOD# = 11;
     3623    25777        %EQU FCLX_CLGADREXT# = 12;
     3624    25778        %EQU FCLX_CLDADREXT# = 13;
     3625    25779        %EQU FCLX_HI# = 13;
     3626    25780    2   DCL FCL_PRESENT (0:%FCLX_HI#) BIT(1) UNAL AUTO;
     3627    25781    2   DCL FCL_PRESENT_BITS REDEF FCL_PRESENT BIT(%(%FCLX_HI#+1)) UNAL;
     3628    25782
     3629    25783        /*
     3630    25784                                             Find out what type of packet
     3631    25785                                             this is.  The fast path is set
     3632    25786                                             up for data, then flow control.
     3633    25787        */
     3634    25788
     3635    25789    2       IF L3EXT ~= 0

  25789   2 001448  E847 003E                            LDR,R6   L3EXT,AUTO
          2 00144A  6901 0017                            BEZ,R6   s:25798,PREL

     3636    25790    2          THEN
     3637    25791    3             DO;

     3638    25792    3                MBIT = IN_PKTHDR.PR_EXT.M;

  25792   2 00144C  D800 0000 0001  01                   LDR,R5   IN_PKTHDR+1
          2 00144F  500F                                 SOL,R5   15
          2 001450  DF47 0041                            STR,R5   MBIT,AUTO

     3639    25793    3                IN_PR = IN_PKTHDR.PR_EXT.PR;

  25793   2 001452  C800 0000 0001  01                   LDR,R4   IN_PKTHDR+1
          2 001455  4041                                 SOR,R4   1
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:459  
          2 001456  C570 007F                            AND,R4   127,IMO
          2 001458  CF47 0040                            STR,R4   IN_PR,AUTO

     3640    25794    3                PS = IN_PKTHDR.TYPE_EXT.PS;

  25794   2 00145A  B800 0000 0001  01                   LDR,R3   IN_PKTHDR+1
          2 00145D  3049                                 SOR,R3   9
          2 00145E  BF47 0045                            STR,R3   PS,AUTO

     3641    25795    3             END;

  25795   2 001460  0F81 0017                            B        s:25802,PREL

     3642    25796    2          ELSE
     3643    25797    3             DO;

     3644    25798    3                MBIT = IN_PKTHDR.PR_BITS.M;

  25798   2 001462  D800 0000 0001  01                   LDR,R5   IN_PKTHDR+1
          2 001465  5003                                 SOL,R5   3
          2 001466  D570 8000                            AND,R5   -32768,IMO
          2 001468  DF47 0041                            STR,R5   MBIT,AUTO

     3645    25799    3                IN_PR = IN_PKTHDR.PR_BITS.PR;

  25799   2 00146A  C800 0000 0001  01                   LDR,R4   IN_PKTHDR+1
          2 00146D  404D                                 SOR,R4   13
          2 00146E  CF47 0040                            STR,R4   IN_PR,AUTO

     3646    25800    3                PS = IN_PKTHDR.TYPE_BITS.PS;

  25800   2 001470  B800 0000 0001  01                   LDR,R3   IN_PKTHDR+1
          2 001473  3049                                 SOR,R3   9
          2 001474  B570 0007                            AND,R3   7,IMO
          2 001476  BF47 0045                            STR,R3   PS,AUTO

     3647    25801    3             END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:460  

     3648    25802    2       IF NOT IN_PKTHDR.TYPE_BITS.DP

  25802   2 001478  8280 0000 0001  01                   LB,'0100'X        IN_PKTHDR+1
  25802   2 00147B       0100
          2 00147C  0501 0085                            BBT      s:25845,PREL

     3649    25803    2          THEN
     3650    25804    3             DO;

     3651    25805    3                PEVENT = %Y_EV_DATA_IN#;

  25805   2 00147E  5C0E                                 LDV,R5   14
          2 00147F  DF47 002C                            STR,R5   PEVENT,AUTO

     3652    25806    3                IF DATACNT < %LD + L3EXT OR

  25806   2 001481  6E05                                 ADV,R6   5
          2 001482  E947 003F                            CMR,R6   DATACNT,AUTO
          2 001484  0301 000F                            BG       s:25810,PREL
          2 001486  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001488  A2C5 0014                            LLH,R2   20,B5
          2 00148A  9847 003E                            LDR,R1   L3EXT,AUTO
          2 00148C  9A20 0000 001E  xsym                 ADD,R1   KX_BUF+30,R2
          2 00148F  1E05                                 ADV,R1   5
          2 001490  9947 003F                            CMR,R1   DATACNT,AUTO
          2 001492  0281 0008                            BGE      s:25813,PREL

     3653    25807    3                   DATACNT > %LD + L3EXT + KX_BUF.SIZ(KX$L3.CALL_OPTS.RCVPCKSIZ)
     3654    25808    3                   THEN
     3655    25809    4                      DO;

     3656    25810    4                         PEVENT = %Y_EV_SHR_PKT#;

  25810   2 001494  5C1A                                 LDV,R5   26
          2 001495  DF47 002C                            STR,R5   PEVENT,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:461  
     3657    25811    4                         RETURN;

  25811   2 001497  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001499  C3C6 0001                            LNJ,B4   1,B6

     3658    25812    4                      END;
     3659    25813    3                IF KX$L3.STATE.CURRENT ~= %Y_ST_DATA# AND NOT KX$L3.PVC

  25813   2 00149B  92C5 0031                            LLH,R1   49,B5
          2 00149D  1D09                                 CMV,R1   9
          2 00149E  0901 000A                            BE       s:25816,PREL
          2 0014A0  82C5 0029                            LB,'0100'X        41,B5
          2 0014A2       0100
          2 0014A3  0501 0005                            BBT      s:25816,PREL

     3660    25814    3                   THEN
     3661    25815    3                      RETURN;

  25815   2 0014A5  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0014A7  C3C6 0001                            LNJ,B4   1,B6

     3662    25816    3                IF MBIT AND DATACNT ~= KX_BUF.SIZ(KX$L3.CALL_OPTS.RCVPCKSIZ)+%L0+L3EXT
             25816                         AND NOT KX$L3.NOREASM

  25816   2 0014A9  89C7 0041                            CMZ      MBIT,AUTO
          2 0014AB  0881 0012                            BAGE     s:25819,PREL
          2 0014AD  E820 0000 001E  xsym                 LDR,R6   KX_BUF+30,R2
          2 0014B0  EA47 003E                            ADD,R6   L3EXT,AUTO
          2 0014B2  6E05                                 ADV,R6   5
          2 0014B3  E947 003F                            CMR,R6   DATACNT,AUTO
          2 0014B5  0901 0008                            BE       s:25819,PREL
          2 0014B7  82C5 0076                            LB,'0080'X        118,B5
          2 0014B9       0080
          2 0014BA  0501 0003                            BBT      s:25819,PREL

     3663    25817    3                   THEN
     3664    25818    3                      MBIT = '0'B;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:462  

  25818   2 0014BC  8747 0041                            CL       MBIT,AUTO

     3665    25819    3                IF PS ~= KX$L3.VR AND NOT KX$PACKET.RLS.L3

  25819   2 0014BE  E845 002F                            LDR,R6   47,B5
          2 0014C0  E570 00FF                            AND,R6   255,IMO
          2 0014C2  E953                                 CMR,R6   R3
          2 0014C3  0901 001F                            BE       s:25832,PREL
          2 0014C5  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 0014C7  89C4 0006                            CMZ      6,B4
          2 0014C9  0801 0019                            BAL      s:25832,PREL

     3666    25820    3                   THEN  /*             Out-of-order data packet  */
     3667    25821    4                      DO;

     3668    25822    4                         ERCOD = BAD_PS ;

  25822   2 0014CB  8C80 0000 03BA  00                   LDI      BAD_PS
          2 0014CE  8D47 0022                            SDI      ERCOD,AUTO

     3669    25823    4                         S_VAL0 = KX$L3.VR ;

  25823   2 0014D0  A845 002F                            LDR,R2   47,B5
          2 0014D2  A570 00FF                            AND,R2   255,IMO
          2 0014D4  AF47 0026                            STR,R2   S_VAL0,AUTO

     3670    25824    4                         S_VAL1 = PS ;

  25824   2 0014D6  BF47 0027                            STR,R3   S_VAL1,AUTO

     3671    25825    4                         CALL Y$ER1 ;

  25825   2 0014D8  E3C0 13A5                            LNJ,B6   s:0,PREL
          2 0014DA       0001                            DC       s:25827,PREL

     3672    25826
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:463  
     3673    25827    4                         PEVENT = %Y_EV_BAD_PRS#;

  25827   2 0014DB  6C17                                 LDV,R6   23
          2 0014DC  EF47 002C                            STR,R6   PEVENT,AUTO

     3674    25828    4                         DIAG = %KX_RST_DIAG_PS#;

  25828   2 0014DE  5C01                                 LDV,R5   1
          2 0014DF  DF47 002F                            STR,R5   DIAG,AUTO

     3675    25829    4                      END;

  25829   2 0014E1  0F81 001C                            B        s:25837,PREL

     3676    25830    3                   ELSE
     3677    25831    4                      DO;

     3678    25832    4                         IF NOT KX$PACKET.RLS.L3 THEN   /* deferred pkt? */

  25832   2 0014E3  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 0014E5  89C4 0006                            CMZ      6,B4
          2 0014E7  0801 0016                            BAL      s:25837,PREL

     3679    25833    5                               CALL Y$PR WHENRETURN DO;

  25833   2 0014E9  E3C0 FDEC                            LNJ,B6   s:0,PREL
          2 0014EB       0013                            DC       s:25837,PREL

     3680    25834    5                                       KX$L3.VR = MOD ( KX$L3.VR + 1, 8 + 120*L3EXT );

  25834   2 0014EC  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0014EE  F846 002F                            LDR,R7   47,B6
          2 0014F0  F570 00FF                            AND,R7   255,IMO
          2 0014F2  6C00                                 LDV,R6   0
          2 0014F3  8470 0000 0001                       AID      1,IMO
          2 0014F6  D847 003E                            LDR,R5   L3EXT,AUTO
          2 0014F8  5F78                                 MLV,R5   120
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:464  
          2 0014F9  5E08                                 ADV,R5   8
          2 0014FA  F355                                 DIV,R7   R5
          2 0014FB  EAC6 002F                            SRM,R6,'00FF'X    47,B6
          2 0014FD       00FF

     3681    25835    5                                     END;

     3682    25836    4                      END;

     3683    25837    3                RETURN;

  25837   2 0014FE  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001500  C3C6 0001                            LNJ,B4   1,B6

     3684    25838    3             END;
     3685    25839
     3686    25840        /*
     3687    25841                                             No packets other than data can
     3688    25842                                             have the Q bit set.
     3689    25843        */
     3690    25844
     3691    25845    2       IF IN_PKTHDR.Q_BIT

  25845   2 001502  8980 0000 0000  01                   CMZ      IN_PKTHDR
          2 001505  0881 0003                            BAGE     s:25857,PREL

     3692    25846    2          THEN
     3693    25847    3             DO;

     3694    25848    3                GOTO L_LL ;

  25848   2 001507  0F81 0010                            B        s:25860,PREL

     3695    25849
     3696    25850
     3697    25851    3             END;
     3698    25852
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:465  
     3699    25853        /*
     3700    25854                                             Only Call and Call_C packets
     3701    25855                                             can have the D bit set.
     3702    25856        */
     3703    25857    2       IF IN_PKTHDR.D_BIT AND ( IN_PKTHDR.TYPE ~= %Y_ID_CALL# )

  25857   2 001509  8280 0000 0000  01                   LB,'4000'X        IN_PKTHDR
  25857   2 00150C       4000
          2 00150D  0581 0019                            BBF      s:25877,PREL
          2 00150F  D280 0000 0001  01                   LLH,R5   IN_PKTHDR+1
          2 001512  5D0B                                 CMV,R5   11
          2 001513  0901 0013                            BE       s:25877,PREL
          2 001515  5D0F                                 CMV,R5   15
          2 001516  0901 0010                            BE       s:25877,PREL

     3704    25858    2          AND ( IN_PKTHDR.TYPE ~= %Y_ID_CALL_C# )
     3705    25859    2          THEN
     3706    25860    3             DO;

     3707    25861    3   L_LL:
     3708    25862    3                ERCOD = BAD_GFI;

  25862   2 001518  8C80 0000 03AA  00   L_LL            LDI      BAD_GFI
          2 00151B  8D47 0022                            SDI      ERCOD,AUTO

     3709    25863    3                CALL Y$ER2;

  25863   2 00151D  E3C0 1389                            LNJ,B6   s:0,PREL
          2 00151F       0001                            DC       s:25864,PREL

     3710    25864    3                PEVENT = %Y_EV_SHORT_GFI#;

  25864   2 001520  6C16                                 LDV,R6   22
          2 001521  EF47 002C                            STR,R6   PEVENT,AUTO

     3711    25865
     3712    25866    3                RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:466  

  25866   2 001523  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001525  C3C6 0001                            LNJ,B4   1,B6

     3713    25867
     3714    25868    3             END /* IF */;
     3715    25869
     3716    25870        /*
     3717    25871                                             The GFI for all the remaining
     3718    25872                                             packet types has been checked.
     3719    25873                                             Now figure out what it is,
     3720    25874                                             starting with flow control.
     3721    25875        */
     3722    25876
     3723    25877    2       IF NOT IN_PKTHDR.TYPE_BITS.PS_BITS.FC

  25877   2 001527  8280 0000 0001  01                   LB,'0200'X        IN_PKTHDR+1
  25877   2 00152A       0200
          2 00152B  0501 003C                            BBT      s:25913,PREL

     3724    25878    2          THEN
     3725    25879    3             DO;

     3726    25880        /*
     3727    25881                                             Flow control packets must be 5
     3728    25882                                             bytes long, and the M bit can
     3729    25883                                             not be set.
     3730    25884        */
     3731    25885    3                IF ( DATACNT ~= %LD+L3EXT ) OR MBIT

  25885   2 00152D  6E05                                 ADV,R6   5
          2 00152E  E947 003F                            CMR,R6   DATACNT,AUTO
          2 001530  0981 0005                            BNE      s:25887,PREL
          2 001532  89C7 0041                            CMZ      MBIT,AUTO
          2 001534  0881 0006                            BAGE     s:25889,PREL

     3732    25886    3                   THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:467  
     3733    25887    3                      PEVENT = %Y_EV_UNK_TYPE#;

  25887   2 001536  5C15                                 LDV,R5   21
          2 001537  DF47 002C                            STR,R5   PEVENT,AUTO
          2 001539  0F81 002A                            B        s:25904,PREL

     3734    25888    3                   ELSE
     3735    25889    4                      DO CASE ( IN_PKTHDR.TYPE_BITS.PS_BITS.FT );

  25889   2 00153B  A800 0000 0001  01                   LDR,R2   IN_PKTHDR+1
          2 00153E  204A                                 SOR,R2   10
          2 00153F  A570 0003                            AND,R2   3,IMO
          2 001541  2D02                                 CMV,R2   2
          2 001542  0281 001E                            BGE      s:25900,PREL
          2 001544  9820 0000 154A  02                   LDR,R1   s:25889+15,R2
          2 001547  8390 0000 154C  02                   JMP      s:25891,R1
          2 00154A       0000                            DC       s:25891,PREL
          2 00154B       0008                            DC       s:25895,PREL

     3736    25890    4                         CASE ( 0  /* RR */ );

     3737    25891    4                            PEVENT = %Y_EV_RR#;

  25891   2 00154C  5C0F                                 LDV,R5   15
          2 00154D  DF47 002C                            STR,R5   PEVENT,AUTO

     3738    25892    4                            CALL Y$PR;

  25892   2 00154F  E3C0 FD86                            LNJ,B6   s:0,PREL
          2 001551       0001                            DC       s:25892+3,PREL
          2 001552  0F81 0011                            B        s:25904,PREL

     3739    25893
     3740    25894    4                         CASE ( 1  /* RNR */ );

     3741    25895    4                            PEVENT = %Y_EV_RNR#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:468  
  25895   2 001554  5C10                                 LDV,R5   16
          2 001555  DF47 002C                            STR,R5   PEVENT,AUTO

     3742    25896    4                            KX$L3.RNR = '1'B;

  25896   2 001557  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001559  8945 0029                            LBT,'0800'X       41,B5
          2 00155B       0800

     3743    25897    4                            CALL Y$PR;

  25897   2 00155C  E3C0 FD79                            LNJ,B6   s:0,PREL
          2 00155E       0001                            DC       s:25897+3,PREL
          2 00155F  0F81 0004                            B        s:25904,PREL

     3744    25898
     3745    25899    4                         CASE ( ELSE );

     3746    25900    4                            PEVENT = %Y_EV_UNK_TYPE#;

  25900   2 001561  5C15                                 LDV,R5   21
          2 001562  DF47 002C                            STR,R5   PEVENT,AUTO

     3747    25901
     3748    25902    4                      END;

     3749    25903
     3750    25904    3                RETURN;

  25904   2 001564  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001566  C3C6 0001                            LNJ,B4   1,B6

     3751    25905    3             END;
     3752    25906
     3753    25907        /*
     3754    25908                                             Now figure out any remaining
     3755    25909                                             packets.  This is off the fast
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:469  
     3756    25910                                             path, so just use a SELECT.
     3757    25911        */
     3758    25912
     3759    25913    3       DO SELECT ( IN_PKTHDR.TYPE );

  25913   2 001568  D280 0000 0001  01                   LLH,R5   IN_PKTHDR+1
          2 00156B  D970 0017                            CMR,R5   23,IMO
          2 00156D  0201 0019                            BL       s:25913+31,PREL
          2 00156F  0901 0945                            BE       s:26801,PREL
          2 001571  D970 0023                            CMR,R5   35,IMO
          2 001573  0201 0008                            BL       s:25913+20,PREL
          2 001575  0901 0946                            BE       s:26809,PREL
          2 001577  5D27                                 CMV,R5   39
          2 001578  0981 09C4                            BNE      s:26865,PREL
          2 00157A  0F81 095C                            B        s:26817,PREL
          2 00157C  D970 001B                            CMR,R5   27,IMO
          2 00157E  0201 09BE                            BL       s:26865,PREL
          2 001580  0901 0983                            BE       s:26835,PREL
          2 001582  5D1F                                 CMV,R5   31
          2 001583  0981 09B9                            BNE      s:26865,PREL
          2 001585  0F81 09B2                            B        s:26862,PREL
          2 001587  D970 000F                            CMR,R5   15,IMO
          2 001589  0201 0008                            BL       s:25913+42,PREL
          2 00158B  0901 05CA                            BE       s:26436,PREL
          2 00158D  5D13                                 CMV,R5   19
          2 00158E  0981 09AE                            BNE      s:26865,PREL
          2 001590  0F81 082B                            B        s:26703,PREL
          2 001592  5D0B                                 CMV,R5   11
          2 001593  0981 09A9                            BNE      s:26865,PREL
          2 001595  0F81 0001                            B        s:25922,PREL

     3760    25914    3          SELECT ( %Y_ID_CALL# );

     3761    25915        /*
     3762    25916                                             Assume it is a valid Call packet
     3763    25917                                             for starters.  If the state is
     3764    25918                                             not END_STOP, then this is an
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:470  
     3765    25919                                             unexpected Call packet and there
     3766    25920                                             is no sense parsing it.
     3767    25921        */
     3768    25922    3          KX_STATS_X25.CALLS_IN = KX_STATS_X25.CALLS_IN + 1;

  25922   2 001597  8A80 0000 0029  xsym                 INC      KX_STATS_X25+41
          2 00159A  8E80 0000 0028  xsym                 CAD      KX_STATS_X25+40

     3769    25923    3          IF KX$L3.PVC

  25923   2 00159D  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00159F  82C5 0029                            LB,'0100'X        41,B5
          2 0015A1       0100
          2 0015A2  0581 0008                            BBF      s:25930,PREL

     3770    25924    3             THEN
     3771    25925    4                DO;

     3772    25926    4                   PEVENT = %Y_EV_CALL_C#;

  25926   2 0015A4  2C0B                                 LDV,R2   11
          2 0015A5  AF47 002C                            STR,R2   PEVENT,AUTO

     3773    25927        /*  EV_CALL has special meaning for PVCs */
     3774    25928    4                   RETURN;

  25928   2 0015A7  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0015A9  C3C6 0001                            LNJ,B4   1,B6

     3775    25929    4                END;
     3776    25930    3          IF IN_PKTHDR.GFI = %GFI_EXT

  25930   2 0015AB  A800 0000 0000  01                   LDR,R2   IN_PKTHDR
          2 0015AE  204C                                 SOR,R2   12
          2 0015AF  A570 0003                            AND,R2   3,IMO
          2 0015B1  2D02                                 CMV,R2   2
          2 0015B2  0981 0009                            BNE      s:25935,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:471  

     3777    25931    4             THEN DO;

     3778    25932    4                   L3EXT = 1;

  25932   2 0015B4  6C01                                 LDV,R6   1
          2 0015B5  EF47 003E                            STR,R6   L3EXT,AUTO

     3779    25933    4                   KX$L3.EXTSEQ = '1'B;

  25933   2 0015B7  8945 0029                            LBT,'0020'X       41,B5
  25933   2 0015B9       0020

     3780    25934    4                END; ELSE DO;

  25934   2 0015BA  0F81 0006                            B        s:25938,PREL

     3781    25935    4                   L3EXT = 0;

  25935   2 0015BC  8747 003E                            CL       L3EXT,AUTO

     3782    25936    4                   KX$L3.EXTSEQ = '0'B;

  25936   2 0015BE  8845 0029                            LBF,'0020'X       41,B5
  25936   2 0015C0       0020

     3783    25937    4                END;

     3784    25938    3          DIAG = 0;

  25938   2 0015C1  8747 002F                            CL       DIAG,AUTO

     3785    25939    3          PEVENT = %Y_EV_BAD_CALL#;

  25939   2 0015C3  6C18                                 LDV,R6   24
          2 0015C4  EF47 002C                            STR,R6   PEVENT,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:472  
     3786    25940
     3787    25941    3          IF KX$L3.STATE.CURRENT ~= %Y_ST_ENB_STOP#

  25941   2 0015C6  92C5 0031                            LLH,R1   49,B5
          2 0015C8  1901 000B                            BEZ,R1   s:25952,PREL
          2 0015CA  1D08                                 CMV,R1   8
          2 0015CB  0901 0008                            BE       s:25952,PREL

     3788    25942    3             AND KX$L3.STATE.CURRENT ~= %Y_ST_CALL#
     3789    25943    3             THEN
     3790    25944    4                DO;

     3791    25945    4                   PEVENT = %Y_EV_CALL#;

  25945   2 0015CD  6C0A                                 LDV,R6   10
          2 0015CE  EF47 002C                            STR,R6   PEVENT,AUTO

     3792    25946    4                   RETURN;

  25946   2 0015D0  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0015D2  C3C6 0001                            LNJ,B4   1,B6

     3793    25947    4                END;
     3794    25948
     3795    25949        /*
     3796    25950          Make sure the LCN is in range
     3797    25951        */
     3798    25952    3         IF ( KX$L2.FLG.DCE AND ( KX$L3.LCN# < KX$L2.LOC OR KX$L3.LCN# > KX$L2.HOC ) )

  25952   2 0015D4  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0015D6  82C6 002E                            LB,'1000'X        46,B6
          2 0015D8       1000
          2 0015D9  0581 000D                            BBF      s:25952+19,PREL
          2 0015DB  E845 002A                            LDR,R6   42,B5
          2 0015DD  E570 0FFF                            AND,R6   4095,IMO
          2 0015DF  E946 001B                            CMR,R6   27,B6
          2 0015E1  0201 0013                            BL       s:25956,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:473  
          2 0015E3  E946 001C                            CMR,R6   28,B6
          2 0015E5  0301 000F                            BG       s:25956,PREL
          2 0015E7  0501 0014                            BBT      s:25959,PREL
          2 0015E9  E845 002A                            LDR,R6   42,B5
          2 0015EB  E570 0FFF                            AND,R6   4095,IMO
          2 0015ED  E946 0018                            CMR,R6   24,B6
          2 0015EF  0201 0005                            BL       s:25956,PREL
          2 0015F1  E946 0019                            CMR,R6   25,B6
          2 0015F3  0381 0008                            BLE      s:25959,PREL

     3799    25953    3            OR ( NOT KX$L2.FLG.DCE AND ( KX$L3.LCN# < KX$L2.LIC OR KX$L3.LCN# > KX$L2.
             25953                      HIC ) )
     3800    25954    3             THEN
     3801    25955    4                DO;

     3802    25956    4                   DIAG = %KX_DIAG_ONEWAY#;

  25956   2 0015F5  6C22                                 LDV,R6   34
          2 0015F6  EF47 002F                            STR,R6   DIAG,AUTO

     3803    25957    4                   RETURN;

  25957   2 0015F8  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0015FA  C3C6 0001                            LNJ,B4   1,B6

     3804    25958    4                END;
     3805    25959    3          BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT;

  25959   2 0015FC  E847 003D                            LDR,R6   L2EXT,AUTO
          2 0015FE  6E15                                 ADV,R6   21
          2 0015FF  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     3806    25960        /*
     3807    25961                                             Validate and save the addresses.
     3808    25962        */
     3809    25963               %UNOCTET ( VAR = ADRLNG );

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:474  
  25964   2 001601  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 001603  B856                                 LDR,R3   R6
          2 001604  E2B4                                 LLH,R6   ,B4,R3
          2 001605  EF47 0050                            STR,R6   ADRLNGS,AUTO

  25965   2 001607  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3810    25967    3          IF ADRLNGS.LFT > 14

  25967   2 001609  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 00160B  6044                                 SOR,R6   4
          2 00160C  E570 000F                            AND,R6   15,IMO
          2 00160E  6D0E                                 CMV,R6   14
          2 00160F  0381 0009                            BLE      s:25973,PREL

     3811    25968    3             THEN
     3812    25969    4                DO;

     3813    25970    4                   DIAG = %KX_DIAG_LNGCLNADR#;

  25970   2 001611  E870 00BF                            LDR,R6   191,IMO
          2 001613  EF47 002F                            STR,R6   DIAG,AUTO

     3814    25971    4                   RETURN;

  25971   2 001615  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001617  C3C6 0001                            LNJ,B4   1,B6

     3815    25972    4                END;
     3816    25973    3          IF ADRLNGS.RGH > 14

  25973   2 001619  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 00161B  E570 000F                            AND,R6   15,IMO
          2 00161D  6D0E                                 CMV,R6   14
          2 00161E  0381 0009                            BLE      s:25980,PREL

     3817    25974    3             THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:475  
     3818    25975    4                DO;

     3819    25976    4                   DIAG = %KX_DIAG_LNGCLDADR#;

  25976   2 001620  E870 00BD                            LDR,R6   189,IMO
          2 001622  EF47 002F                            STR,R6   DIAG,AUTO

     3820    25977    4                   RETURN;

  25977   2 001624  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001626  C3C6 0001                            LNJ,B4   1,B6

     3821    25978    4                END;
     3822    25979
     3823    25980    3          KX$L3.CALL_OPTS.RCVADR.SIZ = ADRLNGS.LFT;

  25980   2 001628  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 00162A  6044                                 SOR,R6   4
          2 00162B  E570 000F                            AND,R6   15,IMO
          2 00162D  E7C5 0017                            STH,R6   23,B5

     3824    25981
     3825    25982
     3826    25983        /*
     3827    25984            Check the CALLED address against our address in KX$L2.
     3828    25985        */
     3829    25986    3          TEMP0 = KX$L2.NTWADR.LNG / 2 ;

  25986   2 00162F  E846 0039                            LDR,R6   57,B6
          2 001631  E570 00FF                            AND,R6   255,IMO
          2 001633  6041                                 SOR,R6   1
          2 001634  EF47 002A                            STR,R6   TEMP0,AUTO

     3830    25987    3          IF ADRLNGS.RGH ~= KX$L2.NTWADR.LNG

  25987   2 001636  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001638  E570 000F                            AND,R6   15,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:476  
          2 00163A  D846 0039                            LDR,R5   57,B6
          2 00163C  D570 00FF                            AND,R5   255,IMO
          2 00163E  E955                                 CMR,R6   R5
          2 00163F  0901 0005                            BE       s:25987+15,PREL
          2 001641  5E02                                 ADV,R5   2
          2 001642  E955                                 CMR,R6   R5
          2 001643  0981 000F                            BNE      s:25992,PREL
          2 001645  C847 002A                            LDR,R4   TEMP0,AUTO
          2 001647  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001649  D854                                 LDR,R5   R4
          2 00164A  DA70 2000                            ADD,R5   8192,IMO
          2 00164C  0022                                 ACM      ;
          2 00164D       4006 003A                                ALPHANUM(58,B6,,R4,FILL),;
          2 00164F       4034 0000                                ALPHANUM(0,B4,R3,,R5,FILL)
          2 001651  5381 000E                            CBE      s:25998,PREL

     3831    25988    3             AND ADRLNGS.RGH ~= KX$L2.NTWADR.LNG+2
     3832    25989    3             OR SUBSTR(KX$L2.NTWADR.ADR_STRING,0,TEMP0) ~=
     3833    25990    3             SUBSTR(DAT$->STRT,BYTE_INDEX,TEMP0)
     3834    25991    3             THEN
     3835    25992    4                DO;

     3836    25993    4   L_INVCLDADR:    DIAG = %KX_DIAG_INVCLDADR#;

  25993   2 001653  6C43                 L_INVCLDADR     LDV,R6   67
          2 001654  EF47 002F                            STR,R6   DIAG,AUTO

     3837    25994        /* I will tolerate this if NSAP extension facilities are used in this call */
     3838    25995    4                   TEMP0 = ( ADRLNGS.RGH + 1 ) / 2;

  25995   2 001656  D847 0050                            LDR,R5   ADRLNGS,AUTO
          2 001658  D570 000F                            AND,R5   15,IMO
          2 00165A  5E01                                 ADV,R5   1
          2 00165B  5041                                 SOR,R5   1
          2 00165C  DF47 002A                            STR,R5   TEMP0,AUTO

     3839    25996    4                   GOTO FOUND_SUBSUBCHN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:477  

  25996   2 00165E  0F81 00CB                            B        s:26045,PREL

     3840    25997    4                END;
     3841    25998    3          IF MOD(ADRLNGS.RGH,2) = 1

  25998   2 001660  E570 0001                            AND,R6   1,IMO
          2 001662  6D01                                 CMV,R6   1
          2 001663  0981 0011                            BNE      s:26007,PREL

     3842    25999    3             THEN
     3843    26000    4                DO;

     3844    26001    4                   TEMP = BITBIN(BINBIT(BYTE_ARRAY(BYTE_INDEX+TEMP0),8) & 'F0'X);

  26001   2 001665  BA54                                 ADD,R3   R4
          2 001666  E2B4                                 LLH,R6   ,B4,R3
          2 001667  6008                                 SOL,R6   8
          2 001668  E570 F000                            AND,R6   -4096,IMO
          2 00166A  6048                                 SOR,R6   8
          2 00166B  EF47 0056                            STR,R6   TEMP,AUTO

     3845    26002    4                   IF (TEMP ~= KX$L2.NTWADR.ADR_PAIR(TEMP0))

  26002   2 00166D  B854                                 LDR,R3   R4
          2 00166E  3E74                                 ADV,R3   116
          2 00166F  E2B6                                 LLH,R6   ,B6,R3
          2 001670  E947 0056                            CMR,R6   TEMP,AUTO
          2 001672  09E1                                 BNE      s:25992,SPREL

     3846    26003    4                      THEN
     3847    26004    4                         GOTO L_INVCLDADR;
     3848    26005    4                   TEMP0 = TEMP0 + 1;

  26005   2 001673  8AC7 002A                            INC      TEMP0,AUTO

     3849    26006    4                END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:478  

     3850    26007    3          IF ADRLNGS.RGH = KX$L2.NTWADR.LNG + 2

  26007   2 001675  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001677  E570 000F                            AND,R6   15,IMO
          2 001679  B846 0039                            LDR,R3   57,B6
          2 00167B  B570 00FF                            AND,R3   255,IMO
          2 00167D  3E02                                 ADV,R3   2
          2 00167E  E953                                 CMR,R6   R3
          2 00167F  0981 00AA                            BNE      s:26045,PREL

     3851    26008    3             THEN
     3852    26009    4                DO;

     3853    26010    4                   TEMP0 = TEMP0 + 1;

  26010   2 001681  8AC7 002A                            INC      TEMP0,AUTO

     3854    26011        /*
     3855    26012           Subaddressed call. Figure out the correct termid.
     3856    26013        */
     3857    26014    4                   TERMID = KX$L2.CHN$->KH$CHN.TERMID;

  26014   2 001683  BCC6 0002                            LDB,B3   2,B6
          2 001685  AB83                                 LAB,B2   ,B3
          2 001686  2C24                                 LDV,R2   36
          2 001687  6C10                                 LDV,R6   16
          2 001688  BBC7 0046                            LAB,B3   TERMID,AUTO
          2 00168A  3C00                                 LDV,R3   0
          2 00168B  0008                                 MMM

     3858    26015    4                   IF MOD(ADRLNGS.RGH,2) = 1  /* odd # of BCDs */

  26015   2 00168C  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 00168E  E570 000F                            AND,R6   15,IMO
          2 001690  E570 0001                            AND,R6   1,IMO
          2 001692  6D01                                 CMV,R6   1
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:479  
          2 001693  0981 0020                            BNE      s:26023,PREL

     3859    26016    4                      THEN
     3860    26017    5                         DO;

     3861    26018    5                            TERMID.TERM.SUBDEVICE = MOD(BYTE_ARRAY(BYTE_INDEX+ADRLNGS.
             26018                                     RGH/2-1),16)*10 +

  26018   2 001695  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001697  E570 000F                            AND,R6   15,IMO
          2 001699  6041                                 SOR,R6   1
          2 00169A  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 00169C  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 00169E  B856                                 LDR,R3   R6
          2 00169F  3EFF                                 ADV,R3   -1
          2 0016A0  E2B6                                 LLH,R6   ,B6,R3
          2 0016A1  E570 000F                            AND,R6   15,IMO
          2 0016A3  B847 0050                            LDR,R3   ADRLNGS,AUTO
          2 0016A5  B570 000F                            AND,R3   15,IMO
          2 0016A7  3EFF                                 ADV,R3   -1
          2 0016A8  B370 0002                            DIV,R3   2,IMO
          2 0016AA  BA47 0032                            ADD,R3   BYTE_INDEX,AUTO
          2 0016AC  A2B6                                 LLH,R2   ,B6,R3
          2 0016AD  2044                                 SOR,R2   4
          2 0016AE  6F0A                                 MLV,R6   10
          2 0016AF  EA52                                 ADD,R6   R2
          2 0016B0  EF47 0048                            STR,R6   TERMID+2,AUTO

     3862    26019    5                               BYTE_ARRAY(BYTE_INDEX+(ADRLNGS.RGH-1)/2)/16;
     3863    26020    5                         END;

  26020   2 0016B2  0F81 001E                            B        s:26026,PREL

     3864    26021    4                      ELSE
     3865    26022    5                         DO;

     3866    26023    5                           TERMID.TERM.SUBDEVICE = (BYTE_ARRAY(BYTE_INDEX+ADRLNGS.RGH/
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:480  
             26023                                     2-1)/16)*10 +

  26023   2 0016B4  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 0016B6  E570 000F                            AND,R6   15,IMO
          2 0016B8  6041                                 SOR,R6   1
          2 0016B9  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 0016BB  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0016BD  B856                                 LDR,R3   R6
          2 0016BE  3EFF                                 ADV,R3   -1
          2 0016BF  E2B6                                 LLH,R6   ,B6,R3
          2 0016C0  6044                                 SOR,R6   4
          2 0016C1  B847 0050                            LDR,R3   ADRLNGS,AUTO
          2 0016C3  B570 000F                            AND,R3   15,IMO
          2 0016C5  3EFF                                 ADV,R3   -1
          2 0016C6  B370 0002                            DIV,R3   2,IMO
          2 0016C8  BA47 0032                            ADD,R3   BYTE_INDEX,AUTO
          2 0016CA  A2B6                                 LLH,R2   ,B6,R3
          2 0016CB  A570 000F                            AND,R2   15,IMO
          2 0016CD  6F0A                                 MLV,R6   10
          2 0016CE  EA52                                 ADD,R6   R2
          2 0016CF  EF47 0048                            STR,R6   TERMID+2,AUTO

     3867    26024    5                               MOD(BYTE_ARRAY(BYTE_INDEX+(ADRLNGS.RGH-1)/2),16);
     3868    26025    5                         END;

     3869    26026    4                   TERMID.TERM.SUBSUBDEVICE = 0;

  26026   2 0016D1  8747 0049                            CL       TERMID+3,AUTO

     3870    26027    4                   TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN#;

  26027   2 0016D3  3C03                                 LDV,R3   3
          2 0016D4  BAC7 0046                            SRM,R3,'00FF'X    TERMID,AUTO
          2 0016D6       00FF

     3871    26028    4                   TERMID.TTYP = %KLTY_VIRCIR#;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:481  
  26028   2 0016D7  2C08                                 LDV,R2   8
          2 0016D8  A7C7 0046                            STH,R2   TERMID,AUTO

     3872    26029    4                   CALL KHA$GET_CTX_PTR ( TERMID, CHN$ )

  26029   2 0016DA  DBC7 000E                            LAB,B5   CHN$,AUTO
          2 0016DC  DFC7 00BE                            STB,B5   KV@USRENT+7,AUTO
          2 0016DE  CBC7 0046                            LAB,B4   TERMID,AUTO
          2 0016E0  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 0016E2  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0016E4  CBF0 0200                            LAB,B4   512,IMO
          2 0016E6  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          2 0016E9       0003                            DC       s:26032,PREL
          2 0016EA  0F81 0006                            B        s:26037,PREL

     3873    26030    4                      WHENALTRETURN
     3874    26031    5                         DO;

     3875    26032    5                            CHN$ = ADDR(NIL);

  26032   2 0016EC  EB80 0000 0000                       LAB,B6   0
          2 0016EF  EFC7 000E                            STB,B6   CHN$,AUTO

     3876    26033    5                         END;

     3877    26034        /*
     3878    26035           Have we exceeded the number of circuits on the subaddress ?
     3879    26036        */
     3880    26037    4                   TERMID.TERM.SUBSUBDEVICE = 1;

  26037   2 0016F1  6C01                                 LDV,R6   1
          2 0016F2  EF47 0049                            STR,R6   TERMID+3,AUTO

     3881    26038    5                   DO WHILE ( CHN$ = ADDR(NIL) OR

  26038   2 0016F4  0F81 0021                            B        s:26051,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:482  
     3882    26039    5                      TERMID.TERM.SUBSUBDEVICE <= CHN$->KH$CHN.INPBFRBYTSIZ
     3883    26040    5                      OR CHN$->KH$CHN.INPBFRBYTSIZ = 0 );
     3884    26041    5                      TL3$ = KX$L2.L3_HEAD$;

  26041   2 0016F6  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0016F8  DCC6 0034                            LDB,B5   52,B6
          2 0016FA  DFC7 0057                            STB,B5   TL3$,AUTO

     3885    26042    6                      DO WHILE ( TL3$ ~= L3$  /* L3$ is currently L3_TAIL$ */

  26042   2 0016FC  0F81 0006                            B        s:26045,PREL

     3886    26043    6                         AND TL3$->KX$TL3.CHN$->KH$CHN.TERMID.TERM ~= TERMID.TERM );
     3887    26044    6                         TL3$ = TL3$->KX$TL3.NEXT$;

  26044   2 0016FE  ECC7 0057                            LDB,B6   TL3$,AUTO
          2 001700  DC86                                 LDB,B5   ,B6
          2 001701  DFC7 0057                            STB,B5   TL3$,AUTO

     3888    26045    6                      END;

  26045   2 001703  DDC7 0008                            CMB,B5   L3$,AUTO
          2 001705  0901 000A                            BE       s:26046,PREL
          2 001707  ECC5 0006                            LDB,B6   6,B5
          2 001709  5C0E                                 LDV,R5   14
          2 00170A  0022                                 ACM      ;
          2 00170B       4E06 0013                                ALPHANUM(19,B6,,14,FILL),;
          2 00170D       4007 0047                                ALPHANUM(TERMID+1,AUTO,,R5,FILL)
          2 00170F  536F                                 CBNE     s:26044,SPREL

     3889    26046    5                      IF TL3$ = L3$  /* We have found a subsubchan to use */

  26046   2 001710  DDC7 0008                            CMB,B5   L3$,AUTO
          2 001712  0901 0017                            BE       s:26045,PREL

     3890    26047    5                         THEN
     3891    26048    5                            GOTO FOUND_SUBSUBCHN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:483  
     3892    26049    5                         ELSE
     3893    26050    5                            TERMID.TERM.SUBSUBDEVICE = TERMID.TERM.SUBSUBDEVICE + 1;

  26050   2 001714  8AC7 0049                            INC      TERMID+3,AUTO

     3894    26051    5                   END;

  26051   2 001716  8DC7 000E                            CMN      CHN$,AUTO
          2 001718  095E                                 BE       s:26041,SPREL
          2 001719  ECC7 000E                            LDB,B6   CHN$,AUTO
          2 00171B  E847 0049                            LDR,R6   TERMID+3,AUTO
          2 00171D  E946 000B                            CMR,R6   11,B6
          2 00171F  03D7                                 BLE      s:26041,SPREL
          2 001720  D846 000B                            LDR,R5   11,B6
          2 001722  5954                                 BEZ,R5   s:26041,SPREL

     3895    26052        /*
     3896    26053           If we come down here, there is no more room for this circuit.
     3897    26054        */
     3898    26055    4                   DIAG = %KX_DIAG_CALPRB#;

  26055   2 001723  4C40                                 LDV,R4   64
          2 001724  CF47 002F                            STR,R4   DIAG,AUTO

     3899    26056    4                   RETURN;

  26056   2 001726  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001728  C3C6 0001                            LNJ,B4   1,B6

  26045   2                              FOUND_SUBSUBCHN null
     3900    26057    4                END;  /* of subaddressed call */
     3901    26058    3   FOUND_SUBSUBCHN: ;
     3902    26059    3          KX$L3.LCLADR.SIZ = ADRLNGS.RGH;

  26059   2 00172A  E847 0050            FOUND_SUBSUBCHN LDR,R6   ADRLNGS,AUTO
          2 00172C  E570 000F                            AND,R6   15,IMO
          2 00172E  ECC7 0008                            LDB,B6   L3$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:484  
          2 001730  E7C6 0077                            STH,R6   119,B6

     3903    26060    3         ADDR(KX$L3.LCLADR.ADR_PAIR(0))->STRT0 = SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0);

  26060   2 001732  ACC7 0006                            LDB,B2   DAT$,AUTO
          2 001734  A847 0032                            LDR,R2   BYTE_INDEX,AUTO
          2 001736  E847 002A                            LDR,R6   TEMP0,AUTO
          2 001738  BBC6 0077                            LAB,B3   119,B6
          2 00173A  3C01                                 LDV,R3   1
          2 00173B  0008                                 MMM

     3904    26061    3          IF MOD(ADRLNGS.RGH,2) = 1

  26061   2 00173C  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 00173E  E570 000F                            AND,R6   15,IMO
          2 001740  E570 0001                            AND,R6   1,IMO
          2 001742  6D01                                 CMV,R6   1
          2 001743  0981 0031                            BNE      s:26066,PREL

     3905    26062    3             THEN
     3906    26063    3                ADDR(KX$L3.CALL_OPTS.RCVADR)->ADR1.ADR =

  26063   2 001745  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001747  E570 000F                            AND,R6   15,IMO
          2 001749  6041                                 SOR,R6   1
          2 00174A  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 00174C  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 00174E  8CC7 0006                            LDI      DAT$,AUTO
          2 001750  7031                                 DCL,R7   1
          2 001751  8D47 00BD                            SDI      KV@USRENT+6,AUTO
          2 001753  F847 00BC                            LDR,R7   KV@USRENT+5,AUTO
          2 001755  6C00                                 LDV,R6   0
          2 001756  8447 00BD                            AID      KV@USRENT+6,AUTO
          2 001758  7071                                 DCR,R7   1
          2 001759  B856                                 LDR,R3   R6
          2 00175A  E570 7FFF                            AND,R6   32767,IMO
          2 00175C  8D47 00BF                            SDI      KV@USRENT+8,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:485  
          2 00175E  ECC7 00BF                            LDB,B6   KV@USRENT+8,AUTO
          2 001760  304F                                 SOR,R3   15
          2 001761  BF47 00C1                            STR,R3   KV@USRENT+10,AUTO
          2 001763  EFC7 00C2                            STB,B6   KV@USRENT+11,AUTO
          2 001765  AB86                                 LAB,B2   ,B6
          2 001766  A853                                 LDR,R2   R3
          2 001767  2003                                 SOL,R2   3
          2 001768  2E04                                 ADV,R2   4
          2 001769  6C38                                 LDV,R6   56
          2 00176A  BCC7 0008                            LDB,B3   L3$,AUTO
          2 00176C  BBC3 0017                            LAB,B3   23,B3
          2 00176E  3C08                                 LDV,R3   8
          2 00176F  7C38                                 LDV,R7   56
          2 001770  D380 0000 0000  xent                 LNJ,B5   X6B_BLR
          2 001773  0F81 0010                            B        s:26068,PREL

     3907    26064    3                   PINCRC(DAT$,BYTE_INDEX+ADRLNGS.RGH/2)->ADR2.ADR;
     3908    26065    3             ELSE
     3909    26066    3                ADDR(KX$L3.CALL_OPTS.RCVADR)->ADR1.ADR =

  26066   2 001775  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001777  E570 000F                            AND,R6   15,IMO
          2 001779  6041                                 SOR,R6   1
          2 00177A  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 00177C  ACC7 0006                            LDB,B2   DAT$,AUTO
          2 00177E  A856                                 LDR,R2   R6
          2 00177F  6C07                                 LDV,R6   7
          2 001780  BCC7 0008                            LDB,B3   L3$,AUTO
          2 001782  3C2F                                 LDV,R3   47
          2 001783  0008                                 MMM

     3910    26067    3                   PINCRC(DAT$,BYTE_INDEX-1+ADRLNGS.RGH/2)->ADR1.ADR;
     3911    26068    3          KX$L3.CALL_OPTS.RCVADR.SIZ = ADRLNGS.LFT;

  26068   2 001784  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001786  6044                                 SOR,R6   4
          2 001787  E570 000F                            AND,R6   15,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:486  
          2 001789  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00178B  E7C6 0017                            STH,R6   23,B6

     3912    26069    3          IF MOD(ADRLNGS.LFT,2) = 1

  26069   2 00178D  E570 0001                            AND,R6   1,IMO
          2 00178F  6D01                                 CMV,R6   1
          2 001790  0981 0019                            BNE      s:26073,PREL

     3913    26070    3             THEN
     3914    26071    3                KX$L3.CALL_OPTS.RCVADR.ADR_PAIR((ADRLNGS.LFT+1)/2) =

  26071   2 001792  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001794  6044                                 SOR,R6   4
          2 001795  E570 000F                            AND,R6   15,IMO
          2 001797  6E01                                 ADV,R6   1
          2 001798  6041                                 SOR,R6   1
          2 001799  D847 0050                            LDR,R5   ADRLNGS,AUTO
          2 00179B  5044                                 SOR,R5   4
          2 00179C  D570 000F                            AND,R5   15,IMO
          2 00179E  5E01                                 ADV,R5   1
          2 00179F  5041                                 SOR,R5   1
          2 0017A0  B855                                 LDR,R3   R5
          2 0017A1  3E2F                                 ADV,R3   47
          2 0017A2  D2B6                                 LLH,R5   ,B6,R3
          2 0017A3  5008                                 SOL,R5   8
          2 0017A4  D570 F000                            AND,R5   -4096,IMO
          2 0017A6  5048                                 SOR,R5   8
          2 0017A7  B856                                 LDR,R3   R6
          2 0017A8  3E2F                                 ADV,R3   47
          2 0017A9  D7B6                                 STH,R5   ,B6,R3

     3915    26072    3                  BITBIN(BINBIT(KX$L3.CALL_OPTS.RCVADR.ADR_PAIR((ADRLNGS.LFT+1)/2),8)&
             26072                            'F0'X);
     3916    26073    3          BYTE_INDEX = BYTE_INDEX + (ADRLNGS.LFT+ADRLNGS.RGH+1)/2;

  26073   2 0017AA  E847 0050                            LDR,R6   ADRLNGS,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:487  
          2 0017AC  6044                                 SOR,R6   4
          2 0017AD  E570 000F                            AND,R6   15,IMO
          2 0017AF  D847 0050                            LDR,R5   ADRLNGS,AUTO
          2 0017B1  D570 000F                            AND,R5   15,IMO
          2 0017B3  EA55                                 ADD,R6   R5
          2 0017B4  6E01                                 ADV,R6   1
          2 0017B5  6041                                 SOR,R6   1
          2 0017B6  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 0017B8  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     3917    26074        /*
     3918    26075                                             Now parse the facilities.
     3919    26076        */
     3920    26077               %UNOCTET ( VAR = FCLLNG );

  26078   2 0017BA  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 0017BC  B856                                 LDR,R3   R6
          2 0017BD  C2B5                                 LLH,R4   ,B5,R3
          2 0017BE  CF47 0054                            STR,R4   FCLLNG,AUTO

  26079   2 0017C0  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3921    26081    3          IF FCLLNG > 109

  26081   2 0017C2  4D6D                                 CMV,R4   109
          2 0017C3  0381 0009                            BLE      s:26087,PREL

     3922    26082    3             THEN
     3923    26083    4                DO;

     3924    26084    4                   DIAG = %KX_DIAG_LRGFCLCNT#;

  26084   2 0017C5  A870 00B9                            LDR,R2   185,IMO
          2 0017C7  AF47 002F                            STR,R2   DIAG,AUTO

     3925    26085    4                   RETURN;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:488  
  26085   2 0017C9  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0017CB  C3C6 0001                            LNJ,B4   1,B6

     3926    26086    4                END;
     3927    26087    3          IF KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX < FCLLNG

  26087   2 0017CD  A845 0007                            LDR,R2   7,B5
          2 0017CF  A247 0032                            SUB,R2   BYTE_INDEX,AUTO
          2 0017D1  2E10                                 ADV,R2   16
          2 0017D2  2801 0004                            BLZ,R2   s:26090,PREL
          2 0017D4  A954                                 CMR,R2   R4
          2 0017D5  0281 0009                            BGE      s:26093,PREL

     3928    26088    3             THEN
     3929    26089    4                DO;

     3930    26090    4                   DIAG = %KX_DIAG_UNBFCLCNT#;

  26090   2 0017D7  A870 00B7                            LDR,R2   183,IMO
          2 0017D9  AF47 002F                            STR,R2   DIAG,AUTO

     3931    26091    4                   RETURN;

  26091   2 0017DB  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0017DD  C3C6 0001                            LNJ,B4   1,B6

     3932    26092    4                END;
     3933    26093    3          FCL_PRESENT_BITS = '0'B;

  26093   2 0017DF  8847 0059                            LBF,'FFFC'X       FCL_PRESENT,AUTO
  26093   2 0017E1       FFFC

     3934    26094
     3935    26095    4          DO I = 1 TO FCLLNG;

  26095   2 0017E2  2C01                                 LDV,R2   1
          2 0017E3  AF47 0052                            STR,R2   I,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:489  
          2 0017E5  0F81 02B4                            B        s:26362+2,PREL

     3936    26096                  %UNOCTET ( VAR = FCLID );

  26097   2 0017E7  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0017E9  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0017EB  E2B6                                 LLH,R6   ,B6,R3
          2 0017EC  EF47 0055                            STR,R6   FCLID,AUTO

  26098   2 0017EE  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3937    26100    5             DO SELECT ( FCLID );

  26100   2 0017F0  E970 0009                            CMR,R6   9,IMO
          2 0017F2  0201 002A                            BL       s:26100+45,PREL
          2 0017F4  0901 0045                            BE       s:26105,PREL
          2 0017F6  E970 0047                            CMR,R6   71,IMO
          2 0017F8  0201 0014                            BL       s:26100+29,PREL
          2 0017FA  0901 005F                            BE       s:26123,PREL
          2 0017FC  E970 0049                            CMR,R6   73,IMO
          2 0017FE  0201 0009                            BL       s:26100+24,PREL
          2 001800  0901 024E                            BE       s:26324,PREL
          2 001802  E970 00C3                            CMR,R6   195,IMO
          2 001804  0981 028C                            BNE      s:26356,PREL
          2 001806  0F81 0260                            B        s:26337,PREL
          2 001808  6D48                                 CMV,R6   72
          2 001809  0981 0287                            BNE      s:26356,PREL
          2 00180B  0F81 004E                            B        s:26123,PREL
          2 00180D  E970 0042                            CMR,R6   66,IMO
          2 00180F  0201 0008                            BL       s:26100+40,PREL
          2 001811  0901 00B0                            BE       s:26173,PREL
          2 001813  6D43                                 CMV,R6   67
          2 001814  0981 027C                            BNE      s:26356,PREL
          2 001816  0F81 00FD                            B        s:26210,PREL
          2 001818  6D41                                 CMV,R6   65
          2 001819  0981 0277                            BNE      s:26356,PREL
          2 00181B  0F81 003E                            B        s:26123,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:490  
          2 00181D  E970 0002                            CMR,R6   2,IMO
          2 00181F  0201 000E                            BL       s:26100+62,PREL
          2 001821  0901 0144                            BE       s:26246,PREL
          2 001823  E970 0003                            CMR,R6   3,IMO
          2 001825  0201 026B                            BL       s:26356,PREL
          2 001827  0901 0012                            BE       s:26105,PREL
          2 001829  6D04                                 CMV,R6   4
          2 00182A  0981 0266                            BNE      s:26356,PREL
          2 00182C  0F81 0210                            B        s:26314,PREL
          2 00182E  E970 0001                            CMR,R6   1,IMO
          2 001830  0201 0005                            BL       s:26100+70,PREL
          2 001832  0901 004E                            BE       s:26146,PREL
          2 001834  0F81 025C                            B        s:26356,PREL
          2 001836  6901 0146                            BEZ,R6   s:26258,PREL
          2 001838  0F81 0258                            B        s:26356,PREL

     3938    26101    5                SELECT ( %KX_FCL_CUG#, %KX_FCL_CUG_OUT# );

     3939    26102        /*
     3940    26103                                             Just save the CUG information
     3941    26104        */
     3942    26105    5                IF FCL_PRESENT(%FCLX_CUG1#)

  26105   2 00183A  89C7 0059                            CMZ      FCL_PRESENT,AUTO
          2 00183C  0881 0008                            BAGE     s:26111,PREL

     3943    26106    5                   THEN
     3944    26107    6                      DO;

     3945    26108    6   L_DUPFCL:             DIAG = %KX_DIAG_DUPFCL#;

  26108   2 00183E  6C49                 L_DUPFCL        LDV,R6   73
          2 00183F  EF47 002F                            STR,R6   DIAG,AUTO

     3946    26109    6                         RETURN;

  26109   2 001841  ECC7 004E                            LDB,B6   TERMID+8,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:491  
          2 001843  C3C6 0001                            LNJ,B4   1,B6

     3947    26110    6                      END;
     3948    26111    5                FCL_PRESENT(%FCLX_CUG1#) = '1'B;

  26111   2 001845  8947 0059                            LBT,'8000'X       FCL_PRESENT,AUTO
  26111   2 001847       8000

     3949    26112                     %UNOCTET ( VAR = KX$L3.CUG_BCD.BCDPAIR2 );

  26113   2 001848  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 00184A  D2B6                                 LLH,R5   ,B6,R3
          2 00184B  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00184D  DAC5 002B                            SRM,R5,'00FF'X    43,B5
          2 00184F       00FF

  26114   2 001850  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3950    26116    5                KX$L3.CUGLNG = 1;      /* LNG is in unit of bytes */

  26116   2 001852  5C04                                 LDV,R5   4
          2 001853  DAC5 0029                            SRM,R5,'000C'X    41,B5
          2 001855       000C

     3951    26117    5                I = I + 1;

  26117   2 001856  8AC7 0052                            INC      I,AUTO
          2 001858  0F81 023F                            B        s:26362,PREL

     3952    26118
     3953    26119    5                SELECT ( %KX_FCL_CUG_EXT#, %KX_FCL_CUG_OUT_EXT#, %KX_FCL_CUG_BIL# );

     3954    26120        /*
     3955    26121                                             Just save the CUG information
     3956    26122        */
     3957    26123    5                IF FCL_PRESENT(%FCLX_CUG2#)

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:492  
  26123   2 00185A  82C7 0059                            LB,'4000'X        FCL_PRESENT,AUTO
  26123   2 00185C       4000
          2 00185D  0561                                 BBT      s:26107,SPREL

     3958    26124    5                   THEN
     3959    26125    5                      GOTO L_DUPFCL;
     3960    26126    5                IF L3EXT = 0

  26126   2 00185E  D847 003E                            LDR,R5   L3EXT,AUTO
          2 001860  5901 0230                            BEZ,R5   s:26356,PREL

     3961    26127    5                   THEN
     3962    26128    5                      GOTO L_INVFCLCOD;
     3963    26129    5                FCL_PRESENT(%FCLX_CUG2#) = '1'B;

  26129   2 001862  8947 0059                            LBT,'4000'X       FCL_PRESENT,AUTO
  26129   2 001864       4000

     3964    26130                     %UNOCTET ( VAR = KX$L3.CUG_BCD.BCDPAIR1 );

  26131   2 001865  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001867  C2B6                                 LLH,R4   ,B6,R3
          2 001868  DCC7 0008                            LDB,B5   L3$,AUTO
          2 00186A  C7C5 002B                            STH,R4   43,B5

  26132   2 00186C  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3965    26134                     %UNOCTET ( VAR = KX$L3.CUG_BCD.BCDPAIR2 );

  26135   2 00186E  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001870  C2B6                                 LLH,R4   ,B6,R3
          2 001871  CAC5 002B                            SRM,R4,'00FF'X    43,B5
          2 001873       00FF

  26136   2 001874  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3966    26138    5                KX$L3.CUGLNG = 2;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:493  

  26138   2 001876  4C08                                 LDV,R4   8
          2 001877  CAC5 0029                            SRM,R4,'000C'X    41,B5
          2 001879       000C

     3967    26139    5                I = I + 2;

  26139   2 00187A  B847 0052                            LDR,R3   I,AUTO
          2 00187C  3E02                                 ADV,R3   2
          2 00187D  BF47 0052                            STR,R3   I,AUTO
          2 00187F  0F81 0218                            B        s:26362,PREL

     3968    26140
     3969    26141    5                SELECT ( %KX_FCL_RVS# );

     3970    26142        /*
     3971    26143                                             Make sure reverse charging is ok
     3972    26144                                             and check for fast select.
     3973    26145        */
     3974    26146    5                IF FCL_PRESENT(%FCLX_RVS#)

  26146   2 001881  82C7 0059                            LB,'1000'X        FCL_PRESENT,AUTO
  26146   2 001883       1000
          2 001884  0501 FFB9                            BBT      s:26107,PREL

     3975    26147    5                   THEN
     3976    26148    5                      GOTO L_DUPFCL;
     3977    26149    5                FCL_PRESENT(%FCLX_RVS#) = '1'B;

  26149   2 001886  8947 0059                            LBT,'1000'X       FCL_PRESENT,AUTO
  26149   2 001888       1000

     3978    26150                     %UNOCTET ( VAR = TEMP );

  26151   2 001889  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 00188B  D2B6                                 LLH,R5   ,B6,R3
          2 00188C  DF47 0056                            STR,R5   TEMP,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:494  

  26152   2 00188E  8AC7 0032                            INC      BYTE_INDEX,AUTO

     3979    26154    5                IF (  MOD ( TEMP, 2 ) = 1 AND NOT KX$L2.FLG.REV_CH )

  26154   2 001890  D570 0001                            AND,R5   1,IMO
          2 001892  5D01                                 CMV,R5   1
          2 001893  0981 000F                            BNE      s:26160,PREL
          2 001895  DCC7 000C                            LDB,B5   L2$,AUTO
          2 001897  82C5 002E                            LB,'2000'X        46,B5
          2 001899       2000
          2 00189A  0501 0008                            BBT      s:26160,PREL

     3980    26155    5                   THEN
     3981    26156    6                      DO;

     3982    26157    6   INVFCLPRM:            DIAG = %KX_DIAG_INVFCLPRM#;

  26157   2 00189C  6C42                 INVFCLPRM       LDV,R6   66
          2 00189D  EF47 002F                            STR,R6   DIAG,AUTO

     3983    26158    6                         RETURN;

  26158   2 00189F  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0018A1  C3C6 0001                            LNJ,B4   1,B6

     3984    26159    6                      END;
     3985    26160    5                KX$L3.RVS = BINBIT (TEMP ,1);

  26160   2 0018A3  D847 0056                            LDR,R5   TEMP,AUTO
          2 0018A5  500F                                 SOL,R5   15
          2 0018A6  504F                                 SOR,R5   15
          2 0018A7  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0018A9  DAC5 0029                            SRM,R5,'0001'X    41,B5
          2 0018AB       0001

     3986    26161    5                KX$L3.FSTSLC = TEMP/64;  /* pick up top 2 bits */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:495  

  26161   2 0018AC  D847 0056                            LDR,R5   TEMP,AUTO
          2 0018AE  5046                                 SOR,R5   6
          2 0018AF  5006                                 SOL,R5   6
          2 0018B0  DAC5 0029                            SRM,R5,'00C0'X    41,B5
          2 0018B2       00C0

     3987    26162    5                IF KX$L3.FSTSLC ~= 0 AND NOT KX$L2.FLG.FSTSLCACP

  26162   2 0018B3  82C5 0029                            LB,'00C0'X        41,B5
  26162   2 0018B5       00C0
          2 0018B6  0581 0007                            BBF      s:26165,PREL
          2 0018B8  CCC7 000C                            LDB,B4   L2$,AUTO
          2 0018BA  82C4 002F                            LB,'4000'X        47,B4
          2 0018BC       4000
          2 0018BD  05DF                                 BBF      s:26156,SPREL

     3988    26163    5                   THEN
     3989    26164    5                      GOTO INVFCLPRM;
     3990    26165    5                I = I + 1;

  26165   2 0018BE  8AC7 0052                            INC      I,AUTO
          2 0018C0  0F81 01D7                            B        s:26362,PREL

     3991    26166
     3992    26167    5                SELECT ( %KX_FCL_PCKSIZ# );

     3993    26168        /*
     3994    26169                                             The packet size must be at least
     3995    26170                                             128.  If it is more than what is
     3996    26171                                             allowed, then reduce it.
     3997    26172        */
     3998    26173    5                IF FCL_PRESENT(%FCLX_PCKSIZ#)

  26173   2 0018C2  82C7 0059                            LB,'0800'X        FCL_PRESENT,AUTO
  26173   2 0018C4       0800
          2 0018C5  0501 FF78                            BBT      s:26107,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:496  

     3999    26174    5                   THEN
     4000    26175    5                      GOTO L_DUPFCL;
     4001    26176    5                FCL_PRESENT(%FCLX_PCKSIZ#) = '1'B;

  26176   2 0018C7  8947 0059                            LBT,'0800'X       FCL_PRESENT,AUTO
  26176   2 0018C9       0800

     4002    26177    5                KX$L3.PCKNGT = '1'B;

  26177   2 0018CA  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0018CC  8945 0076                            LBT,'0010'X       118,B5
          2 0018CE       0010

     4003    26178                     %UNOCTET ( VAR = TEMP );

  26179   2 0018CF  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0018D1  D2B6                                 LLH,R5   ,B6,R3
          2 0018D2  DF47 0056                            STR,R5   TEMP,AUTO

  26180   2 0018D4  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4004    26182    5                IF TEMP > KX_BUF.LOGSIZ ( %KX_S_BUF_MAX# )

  26182   2 0018D6  D900 0000 0029  xsym                 CMR,R5   KX_BUF+41
          2 0018D9  0343                                 BG       s:26156,SPREL
          2 0018DA  D900 0000 0024  xsym                 CMR,R5   KX_BUF+36
          2 0018DD  0201 FFBE                            BL       s:26156,PREL

     4005    26183    5                   OR TEMP < KX_BUF.LOGSIZ ( 0 )
     4006    26184    5                   THEN
     4007    26185    5                      GOTO INVFCLPRM;
     4008    26186    5                TEMP = LOG_TO_CP6 ( TEMP );

  26186   2 0018DF  B855                                 LDR,R3   R5
          2 0018E0  D830 0000 03F0  00                   LDR,R5   LOG_TO_CP6,R3
          2 0018E3  DF47 0056                            STR,R5   TEMP,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:497  

     4009    26187    5                IF TEMP <= KX$L2.BUF_SIZE

  26187   2 0018E5  CCC7 000C                            LDB,B4   L2$,AUTO
          2 0018E7  C2C4 0004                            LLH,R4   4,B4
          2 0018E9  C955                                 CMR,R4   R5
          2 0018EA  0201 0004                            BL       s:26192,PREL

     4010    26188    5                   THEN
     4011    26189    5                      KX$L3.CALL_OPTS.SNDPCKSIZ = TEMP;

  26189   2 0018EC  DAC5 0015                            SRM,R5,'00FF'X    21,B5
  26189   2 0018EE       00FF

     4012    26190
     4013    26191                     %UNOCTET ( VAR = TEMP );

  26192   2 0018EF  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0018F1  D2B6                                 LLH,R5   ,B6,R3
          2 0018F2  DF47 0056                            STR,R5   TEMP,AUTO

  26193   2 0018F4  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4014    26195    5                IF TEMP > KX_BUF.LOGSIZ ( %KX_S_BUF_MAX# )

  26195   2 0018F6  D900 0000 0029  xsym                 CMR,R5   KX_BUF+41
          2 0018F9  0301 FFA2                            BG       s:26156,PREL
          2 0018FB  D900 0000 0024  xsym                 CMR,R5   KX_BUF+36
          2 0018FE  0201 FF9D                            BL       s:26156,PREL

     4015    26196    5                   OR TEMP < KX_BUF.LOGSIZ ( 0 )
     4016    26197    5                   THEN
     4017    26198    5                      GOTO INVFCLPRM;
     4018    26199    5                TEMP = LOG_TO_CP6 ( TEMP );

  26199   2 001900  B855                                 LDR,R3   R5
          2 001901  D830 0000 03F0  00                   LDR,R5   LOG_TO_CP6,R3
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:498  
          2 001904  DF47 0056                            STR,R5   TEMP,AUTO

     4019    26200    5                IF TEMP <= KX$L2.BUF_SIZE

  26200   2 001906  C2C4 0004                            LLH,R4   4,B4
          2 001908  C955                                 CMR,R4   R5
          2 001909  0201 0003                            BL       s:26203,PREL

     4020    26201    5                   THEN
     4021    26202    5                      KX$L3.CALL_OPTS.RCVPCKSIZ = TEMP;

  26202   2 00190B  D7C5 0014                            STH,R5   20,B5

     4022    26203    5                I = I + 2;

  26203   2 00190D  C847 0052                            LDR,R4   I,AUTO
          2 00190F  4E02                                 ADV,R4   2
          2 001910  CF47 0052                            STR,R4   I,AUTO
          2 001912  0F81 0185                            B        s:26362,PREL

     4023    26204
     4024    26205    5                SELECT ( %KX_FCL_WNDSIZ# );

     4025    26206        /*
     4026    26207                                             If window is more than what is
     4027    26208                                             allowed, reduce it.
     4028    26209        */
     4029    26210    5                IF FCL_PRESENT(%FCLX_WNDSIZ#)

  26210   2 001914  82C7 0059                            LB,'0400'X        FCL_PRESENT,AUTO
  26210   2 001916       0400
          2 001917  0501 FF26                            BBT      s:26107,PREL

     4030    26211    5                   THEN
     4031    26212    5                      GOTO L_DUPFCL;
     4032    26213    5                FCL_PRESENT(%FCLX_WNDSIZ#) = '1'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:499  
  26213   2 001919  8947 0059                            LBT,'0400'X       FCL_PRESENT,AUTO
  26213   2 00191B       0400

     4033    26214                     %UNOCTET ( VAR = TEMP );

  26215   2 00191C  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 00191E  D2B6                                 LLH,R5   ,B6,R3
          2 00191F  DF47 0056                            STR,R5   TEMP,AUTO

  26216   2 001921  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4034    26218    5                IF TEMP < 1 OR TEMP > 7+120*L3EXT

  26218   2 001923  5D01                                 CMV,R5   1
          2 001924  0201 FF77                            BL       s:26156,PREL
          2 001926  C847 003E                            LDR,R4   L3EXT,AUTO
          2 001928  4F78                                 MLV,R4   120
          2 001929  4E07                                 ADV,R4   7
          2 00192A  C955                                 CMR,R4   R5
          2 00192B  0201 FF70                            BL       s:26156,PREL

     4035    26219    5                   THEN
     4036    26220    5                      GOTO INVFCLPRM;
     4037    26221    5                IF TEMP <= KX$L2.MAXWND

  26221   2 00192D  DCC7 000C                            LDB,B5   L2$,AUTO
          2 00192F  B2C5 001A                            LLH,R3   26,B5
          2 001931  B955                                 CMR,R3   R5
          2 001932  0201 0006                            BL       s:26226,PREL

     4038    26222    5                   THEN
     4039    26223    5                      KX$L3.CALL_OPTS.SNDWND = TEMP;

  26223   2 001934  CCC7 0008                            LDB,B4   L3$,AUTO
          2 001936  DAC4 0016                            SRM,R5,'00FF'X    22,B4
          2 001938       00FF

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:500  
     4040    26224
     4041    26225                     %UNOCTET ( VAR = TEMP );

  26226   2 001939  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 00193B  D2B6                                 LLH,R5   ,B6,R3
          2 00193C  DF47 0056                            STR,R5   TEMP,AUTO

  26227   2 00193E  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4042    26229    5                IF TEMP < 1 OR TEMP > 7+120*L3EXT

  26229   2 001940  5D01                                 CMV,R5   1
          2 001941  0201 FF5A                            BL       s:26156,PREL
          2 001943  C955                                 CMR,R4   R5
          2 001944  0201 FF57                            BL       s:26156,PREL

     4043    26230    5                   THEN
     4044    26231    5                      GOTO INVFCLPRM;
     4045    26232    5                IF TEMP <= KX$L2.MAXWND

  26232   2 001946  B2C5 001A                            LLH,R3   26,B5
          2 001948  B955                                 CMR,R3   R5
          2 001949  0201 0010                            BL       s:26238,PREL

     4046    26233    5                   THEN
     4047    26234    6                      DO;

     4048    26235    6                         KX$L3.CALL_OPTS.RCVWND = TEMP;

  26235   2 00194B  CCC7 0008                            LDB,B4   L3$,AUTO
          2 00194D  D7C4 0015                            STH,R5   21,B4

     4049    26236    6                         KX$L3.RSPDLY = MAXIMUM(KX$L3.CALL_OPTS.RCVWND/2,1);

  26236   2 00194F  B2C4 0015                            LLH,R3   21,B4
          2 001951  3041                                 SOR,R3   1
          2 001952  B970 0001                            CMR,R3   1,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:501  
          2 001954  0281 0002                            BGE      s:26236+8,PREL
          2 001956  3C01                                 LDV,R3   1
          2 001957  BAC4 0072                            SRM,R3,'00FF'X    114,B4
          2 001959       00FF

     4050    26237    6                      END;

     4051    26238    5                I = I + 2;

  26238   2 00195A  B847 0052                            LDR,R3   I,AUTO
          2 00195C  3E02                                 ADV,R3   2
          2 00195D  BF47 0052                            STR,R3   I,AUTO

     4052    26239    5                KX$L3.WNDNGT = '1'B;

  26239   2 00195F  CCC7 0008                            LDB,B4   L3$,AUTO
          2 001961  8944 0076                            LBT,'0020'X       118,B4
          2 001963       0020
          2 001964  0F81 0133                            B        s:26362,PREL

     4053    26240
     4054    26241    5                SELECT ( %KX_FCL_THRCLS# );

     4055    26242        /*
     4056    26243                                             Just save the information.
     4057    26244        */
     4058    26245                     %UNOCTET ( VAR = TEMP );

  26246   2 001966  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001968  D2B6                                 LLH,R5   ,B6,R3
          2 001969  DF47 0056                            STR,R5   TEMP,AUTO

  26247   2 00196B  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4059    26249    5                KX$L3.CALL_OPTS.SNDTHR = TEMP / 16;

  26249   2 00196D  5044                                 SOR,R5   4
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:502  
          2 00196E  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001970  D7C5 0016                            STH,R5   22,B5

     4060    26250    5                KX$L3.CALL_OPTS.RCVTHR = MOD ( TEMP, 16 );

  26250   2 001972  D847 0056                            LDR,R5   TEMP,AUTO
          2 001974  D570 000F                            AND,R5   15,IMO
          2 001976  DAC5 0014                            SRM,R5,'00FF'X    20,B5
          2 001978       00FF

     4061    26251    5                I = I + 1;

  26251   2 001979  8AC7 0052                            INC      I,AUTO
          2 00197B  0F81 011C                            B        s:26362,PREL

     4062    26252
     4063    26253    5                SELECT ( %KX_FCL_MRK# );

     4064    26254        /*
     4065    26255                                             Facility marker.
     4066    26256        */
     4067    26257                     %UNOCTET ( VAR = TEMP );

  26258   2 00197D  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 00197F  D2B6                                 LLH,R5   ,B6,R3
          2 001980  DF47 0056                            STR,R5   TEMP,AUTO

  26259   2 001982  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4068    26261    6                DO SELECT ( TEMP );

  26261   2 001984  D970 000F                            CMR,R5   15,IMO
          2 001986  0201 0009                            BL       s:26261+12,PREL
          2 001988  0901 0019                            BE       s:26266,PREL
          2 00198A  D970 00FF                            CMR,R5   255,IMO
          2 00198C  0981 00AE                            BNE      s:26311,PREL
          2 00198E  0F81 0005                            B        s:26263,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:503  
          2 001990  5901 0003                            BEZ,R5   s:26263,PREL
          2 001992  0F81 00A8                            B        s:26311,PREL

     4069    26262    6                   SELECT ( %KX_FCL_MRK_CLGDTE#, %KX_FCL_MRK_CLDDTE# );

     4070    26263    6                   BYTE_INDEX = BYTE_INDEX + FCLLNG - I;

  26263   2 001994  C847 0032                            LDR,R4   BYTE_INDEX,AUTO
          2 001996  CA47 0054                            ADD,R4   FCLLNG,AUTO
          2 001998  C247 0052                            SUB,R4   I,AUTO
          2 00199A  CF47 0032                            STR,R4   BYTE_INDEX,AUTO

     4071    26264    6                   I = FCLLNG;

  26264   2 00199C  B847 0054                            LDR,R3   FCLLNG,AUTO
          2 00199E  BF47 0052                            STR,R3   I,AUTO
          2 0019A0  0F81 00F7                            B        s:26362,PREL

     4072    26265    6                   SELECT ( %KX_FCL_MRK_CCITT# );

     4073    26266    6                   I = I + 1;

  26266   2 0019A2  8AC7 0052                            INC      I,AUTO

     4074    26267    7                   DO WHILE ( I < FCLLNG );

  26267   2 0019A4  C847 0052                            LDR,R4   I,AUTO
          2 0019A6  C947 0054                            CMR,R4   FCLLNG,AUTO
          2 0019A8  0281 00EF                            BGE      s:26362,PREL

     4075    26268                           %UNOCTET ( VAR = FCLID );

  26269   2 0019AA  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 0019AC  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0019AE  E2B6                                 LLH,R6   ,B6,R3
          2 0019AF  EF47 0055                            STR,R6   FCLID,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:504  
  26270   2 0019B1  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4076    26272    7                      I = I + 1;

  26272   2 0019B3  8AC7 0052                            INC      I,AUTO

     4077    26273    8                      DO SELECT ( FCLID );

  26273   2 0019B5  E970 00CB                            CMR,R6   203,IMO
          2 0019B7  0201 0005                            BL       s:26273+8,PREL
          2 0019B9  0901 0009                            BE       s:26275,PREL
          2 0019BB  0F81 0077                            B        s:26307,PREL
          2 0019BD  E970 00C9                            CMR,R6   201,IMO
          2 0019BF  0981 0073                            BNE      s:26307,PREL
          2 0019C1  0F81 0039                            B        s:26291,PREL

     4078    26274    8                         SELECT ( %KX_FCL_CLGADREXT# );

     4079    26275    8                         IF FCL_PRESENT(%FCLX_CLGADREXT#)

  26275   2 0019C3  82C7 0059                            LB,'0008'X        FCL_PRESENT,AUTO
  26275   2 0019C5       0008
          2 0019C6  0501 FE77                            BBT      s:26107,PREL

     4080    26276    8                            THEN
     4081    26277    8                               GOTO L_DUPFCL;
     4082    26278    8                         FCL_PRESENT(%FCLX_CLGADREXT#) = '1'B;

  26278   2 0019C8  8947 0059                            LBT,'0008'X       FCL_PRESENT,AUTO
  26278   2 0019CA       0008

     4083    26279                              %UNOCTET ( VAR = ADREXTBYT );

  26280   2 0019CB  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0019CD  D2B6                                 LLH,R5   ,B6,R3
          2 0019CE  D7C7 0051                            STH,R5   ADREXT,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:505  
  26281   2 0019D0  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4084    26283    8                         IF ADREXT.LNG > 20

  26283   2 0019D2  D847 0051                            LDR,R5   ADREXT,AUTO
          2 0019D4  5048                                 SOR,R5   8
          2 0019D5  D570 003F                            AND,R5   63,IMO
          2 0019D7  5D14                                 CMV,R5   20
          2 0019D8  0301 FEC3                            BG       s:26156,PREL

     4085    26284    8                            THEN
     4086    26285    8                               GOTO INVFCLPRM;
     4087    26286    8                         SUBSTR(KX$L3.RMTNSAP_REDEF.NSAP,0,ADREXT.LNG) = SUBSTR(DAT$->
             26286                                  STRT0,BYTE_INDEX,ADREXT.LNG);

  26286   2 0019DA  AB86                                 LAB,B2   ,B6
          2 0019DB  A847 0032                            LDR,R2   BYTE_INDEX,AUTO
          2 0019DD  E855                                 LDR,R6   R5
          2 0019DE  BCC7 0008                            LDB,B3   L3$,AUTO
          2 0019E0  BBC3 0086                            LAB,B3   134,B3
          2 0019E2  3C00                                 LDV,R3   0
          2 0019E3  0008                                 MMM

     4088    26287    8                         DIAG = 0;

  26287   2 0019E4  8747 002F                            CL       DIAG,AUTO

     4089    26288    8                         BYTE_INDEX = BYTE_INDEX + ADREXT.LNG;

  26288   2 0019E6  E847 0051                            LDR,R6   ADREXT,AUTO
          2 0019E8  6048                                 SOR,R6   8
          2 0019E9  E570 003F                            AND,R6   63,IMO
          2 0019EB  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 0019ED  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     4090    26289    8                         I = I + ADREXT.LNG + 1;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:506  
  26289   2 0019EF  C847 0051                            LDR,R4   ADREXT,AUTO
          2 0019F1  4048                                 SOR,R4   8
          2 0019F2  C570 003F                            AND,R4   63,IMO
          2 0019F4  CA47 0052                            ADD,R4   I,AUTO
          2 0019F6  4E01                                 ADV,R4   1
          2 0019F7  CF47 0052                            STR,R4   I,AUTO
          2 0019F9  0F81 003B                            B        s:26309,PREL

     4091    26290    8                         SELECT ( %KX_FCL_CLDADREXT# );

     4092    26291    8                         IF FCL_PRESENT(%FCLX_CLDADREXT#)

  26291   2 0019FB  82C7 0059                            LB,'0004'X        FCL_PRESENT,AUTO
  26291   2 0019FD       0004
          2 0019FE  0501 FE3F                            BBT      s:26107,PREL

     4093    26292    8                            THEN
     4094    26293    8                               GOTO L_DUPFCL;
     4095    26294    8                         FCL_PRESENT(%FCLX_CLDADREXT#) = '1'B;

  26294   2 001A00  8947 0059                            LBT,'0004'X       FCL_PRESENT,AUTO
  26294   2 001A02       0004

     4096    26295                              %UNOCTET ( VAR = ADREXTBYT );

  26296   2 001A03  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001A05  D2B6                                 LLH,R5   ,B6,R3
          2 001A06  D7C7 0051                            STH,R5   ADREXT,AUTO

  26297   2 001A08  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4097    26299    8                         IF ADREXT.LNG > 20

  26299   2 001A0A  D847 0051                            LDR,R5   ADREXT,AUTO
          2 001A0C  5048                                 SOR,R5   8
          2 001A0D  D570 003F                            AND,R5   63,IMO
          2 001A0F  5D14                                 CMV,R5   20
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:507  
          2 001A10  0301 FE8B                            BG       s:26156,PREL

     4098    26300    8                            THEN
     4099    26301    8                               GOTO INVFCLPRM;
     4100    26302    8                         SUBSTR(KX$L3.LCLNSAP_REDEF.NSAP,0,ADREXT.LNG) = SUBSTR(DAT$->
             26302                                  STRT0,BYTE_INDEX,ADREXT.LNG);

  26302   2 001A12  AB86                                 LAB,B2   ,B6
          2 001A13  A847 0032                            LDR,R2   BYTE_INDEX,AUTO
          2 001A15  E855                                 LDR,R6   R5
          2 001A16  BCC7 0008                            LDB,B3   L3$,AUTO
          2 001A18  BBC3 007B                            LAB,B3   123,B3
          2 001A1A  3C00                                 LDV,R3   0
          2 001A1B  0008                                 MMM

     4101    26303    8                         DIAG = 0;

  26303   2 001A1C  8747 002F                            CL       DIAG,AUTO

     4102    26304    8                         BYTE_INDEX = BYTE_INDEX + ADREXT.LNG;

  26304   2 001A1E  E847 0051                            LDR,R6   ADREXT,AUTO
          2 001A20  6048                                 SOR,R6   8
          2 001A21  E570 003F                            AND,R6   63,IMO
          2 001A23  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 001A25  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     4103    26305    8                         I = I + ADREXT.LNG+1;

  26305   2 001A27  C847 0051                            LDR,R4   ADREXT,AUTO
          2 001A29  4048                                 SOR,R4   8
          2 001A2A  C570 003F                            AND,R4   63,IMO
          2 001A2C  CA47 0052                            ADD,R4   I,AUTO
          2 001A2E  4E01                                 ADV,R4   1
          2 001A2F  CF47 0052                            STR,R4   I,AUTO
          2 001A31  0F81 0003                            B        s:26309,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:508  
     4104    26306    8                         SELECT ( ELSE );

     4105    26307    8                      GOTO INVFCLPRM;

  26307   2 001A33  0F81 FE68                            B        s:26156,PREL

     4106    26308    8                      END; /* do select ( ccitt-fcl-code ) */

     4107    26309    7                   END;  /* do while */

  26309   2 001A35  C947 0054                            CMR,R4   FCLLNG,AUTO
          2 001A37  0201 FF72                            BL       s:26269,PREL
          2 001A39  0F81 005E                            B        s:26362,PREL

     4108    26310    6                   SELECT ( ELSE );

     4109    26311    6                GOTO L_INVFCLCOD;

  26311   2 001A3B  0F81 0055                            B        s:26356,PREL

     4110    26312    6                END;  /* do select ( fcl-mrk-byte ) */

     4111    26313    5             SELECT ( %KX_FCL_CHR_RQS# );

     4112    26314    5             IF FCL_PRESENT(%FCLX_CHR_RQS#)

  26314   2 001A3D  82C7 0059                            LB,'0100'X        FCL_PRESENT,AUTO
  26314   2 001A3F       0100
          2 001A40  0501 FDFD                            BBT      s:26107,PREL

     4113    26315    5                THEN
     4114    26316    5                   GOTO L_DUPFCL;
     4115    26317    5             IF L3EXT = 0

  26317   2 001A42  D847 003E                            LDR,R5   L3EXT,AUTO
          2 001A44  5901 004C                            BEZ,R5   s:26356,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:509  
     4116    26318    5                THEN
     4117    26319    5                   GOTO L_INVFCLCOD;
     4118    26320    5             FCL_PRESENT(%FCLX_CHR_RQS#) = '1'B;

  26320   2 001A46  8947 0059                            LBT,'0100'X       FCL_PRESENT,AUTO
  26320   2 001A48       0100

     4119    26321    5             I = I + 1;    /* not supposed to get this. Skip over. */

  26321   2 001A49  8AC7 0052                            INC      I,AUTO

     4120    26322    5             BYTE_INDEX = BYTE_INDEX + 1;

  26322   2 001A4B  8AC7 0032                            INC      BYTE_INDEX,AUTO
          2 001A4D  0F81 004A                            B        s:26362,PREL

     4121    26323    5             SELECT ( %KX_FCL_DLY# );

     4122    26324    5             IF FCL_PRESENT(%FCLX_DLY#)

  26324   2 001A4F  82C7 0059                            LB,'0080'X        FCL_PRESENT,AUTO
  26324   2 001A51       0080
          2 001A52  0501 FDEB                            BBT      s:26107,PREL

     4123    26325    5                THEN
     4124    26326    5                   GOTO L_DUPFCL;
     4125    26327    5             IF L3EXT = 0

  26327   2 001A54  D847 003E                            LDR,R5   L3EXT,AUTO
          2 001A56  5901 003A                            BEZ,R5   s:26356,PREL

     4126    26328    5                THEN
     4127    26329    5                   GOTO L_INVFCLCOD;
     4128    26330    5             FCL_PRESENT(%FCLX_DLY#) = '1'B;

  26330   2 001A58  8947 0059                            LBT,'0080'X       FCL_PRESENT,AUTO
  26330   2 001A5A       0080
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:510  

     4129    26331    5             I = I + 2;    /* not supposed to get this. Skip over. */

  26331   2 001A5B  C847 0052                            LDR,R4   I,AUTO
          2 001A5D  4E02                                 ADV,R4   2
          2 001A5E  CF47 0052                            STR,R4   I,AUTO

     4130    26332    5             BYTE_INDEX = BYTE_INDEX + 2;

  26332   2 001A60  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001A62  3E02                                 ADV,R3   2
          2 001A63  BF47 0032                            STR,R3   BYTE_INDEX,AUTO
          2 001A65  0F81 0032                            B        s:26362,PREL

     4131    26333    5             SELECT ( %KX_FCL_RED# );

     4132    26334        /*
     4133    26335           Redirected call. Error-log the originally called address.
     4134    26336        */
     4135    26337    5             IF FCL_PRESENT(%FCLX_RED#)

  26337   2 001A67  82C7 0059                            LB,'0040'X        FCL_PRESENT,AUTO
  26337   2 001A69       0040
          2 001A6A  0501 FDD3                            BBT      s:26107,PREL

     4136    26338    5                THEN
     4137    26339    5                   GOTO L_DUPFCL;
     4138    26340    5             IF L3EXT = 0

  26340   2 001A6C  D847 003E                            LDR,R5   L3EXT,AUTO
          2 001A6E  5901 0022                            BEZ,R5   s:26356,PREL

     4139    26341    5                THEN
     4140    26342    5                   GOTO L_INVFCLCOD;
     4141    26343    5             FCL_PRESENT(%FCLX_RED#) = '1'B;

  26343   2 001A70  8947 0059                            LBT,'0040'X       FCL_PRESENT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:511  
  26343   2 001A72       0040

     4142    26344    5             ERCOD = REDIRECTED_CALL;

  26344   2 001A73  8C80 0000 039E  00                   LDI      REDIRECTED_CALL
          2 001A76  8D47 0022                            SDI      ERCOD,AUTO

     4143    26345    5             CALL Y$ER2;

  26345   2 001A78  E3C0 0E2E                            LNJ,B6   s:0,PREL
          2 001A7A       0001                            DC       s:26347,PREL

     4144    26346                  %UNOCTET ( VAR = TEMP );

  26347   2 001A7B  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001A7D  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001A7F  E2B6                                 LLH,R6   ,B6,R3
          2 001A80  EF47 0056                            STR,R6   TEMP,AUTO

  26348   2 001A82  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4145    26350    5             I = I + TEMP + 1;

  26350   2 001A84  EA47 0052                            ADD,R6   I,AUTO
          2 001A86  6E01                                 ADV,R6   1
          2 001A87  EF47 0052                            STR,R6   I,AUTO

     4146    26351    5             BYTE_INDEX = BYTE_INDEX + TEMP;

  26351   2 001A89  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 001A8B  DA47 0056                            ADD,R5   TEMP,AUTO
          2 001A8D  DF47 0032                            STR,R5   BYTE_INDEX,AUTO
          2 001A8F  0F81 0008                            B        s:26362,PREL

     4147    26352    5             SELECT ( ELSE );

     4148    26353        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:512  
     4149    26354                                             Unknown facility
     4150    26355        */
     4151    26356    6             DO;

     4152    26357    6   L_INVFCLCOD: DIAG = %KX_DIAG_INVFCLCOD#;

  26357   2 001A91  6C41                 L_INVFCLCOD     LDV,R6   65
          2 001A92  EF47 002F                            STR,R6   DIAG,AUTO

     4153    26358    6                RETURN;

  26358   2 001A94  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001A96  C3C6 0001                            LNJ,B4   1,B6

     4154    26359    6             END;
     4155    26360
     4156    26361    5             END;  /*  SELECT  */

     4157    26362    4          END;  /*  DO LOOP  */

  26362   2 001A98  8AC7 0052                            INC      I,AUTO
          2 001A9A  E847 0052                            LDR,R6   I,AUTO
          2 001A9C  E947 0054                            CMR,R6   FCLLNG,AUTO
          2 001A9E  0381 FD48                            BLE      s:26097,PREL

     4158    26363
     4159    26364        /*
     4160    26365           Check for inconsistencies in facility requests. Only case known now
     4161    26366           is fast select (restricted response) with window/packet-size negotiation.
     4162    26367        */
     4163    26368    3          IF KX$L3.FSTSLC = %KX_FSTSLC_RST# AND ( FCL_PRESENT(%FCLX_WNDSIZ#) OR

  26368   2 001AA0  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001AA2  D846 0029                            LDR,R5   41,B6
          2 001AA4  5046                                 SOR,R5   6
          2 001AA5  D570 0003                            AND,R5   3,IMO
          2 001AA7  5D03                                 CMV,R5   3
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:513  
          2 001AA8  0981 0009                            BNE      s:26372,PREL
          2 001AAA  82C7 0059                            LB,'0400'X        FCL_PRESENT,AUTO
          2 001AAC       0400
          2 001AAD  0564                                 BBT      s:26356,SPREL
          2 001AAE  82C7 0059                            LB,'0800'X        FCL_PRESENT,AUTO
          2 001AB0       0800
          2 001AB1  0560                                 BBT      s:26356,SPREL

     4164    26369    3             FCL_PRESENT(%FCLX_PCKSIZ#) )
     4165    26370    3             THEN
     4166    26371    3                GOTO L_INVFCLCOD;
     4167    26372    3          KX$L3.DFL_OPTS = KX$L3.CALL_OPTS;

  26372   2 001AB2  AB86                                 LAB,B2   ,B6
          2 001AB3  2C28                                 LDV,R2   40
          2 001AB4  6C0E                                 LDV,R6   14
          2 001AB5  BB82                                 LAB,B3   ,B2
          2 001AB6  3C44                                 LDV,R3   68
          2 001AB7  0008                                 MMM

     4168    26373    3          KX$L3.CM_OPTS = KX$L3.CALL_OPTS;

  26373   2 001AB8  ACC7 0008                            LDB,B2   L3$,AUTO
          2 001ABA  2C28                                 LDV,R2   40
          2 001ABB  6C0E                                 LDV,R6   14
          2 001ABC  BB82                                 LAB,B3   ,B2
          2 001ABD  3C36                                 LDV,R3   54
          2 001ABE  0008                                 MMM

     4169    26374
     4170    26375    3          IF ( KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX > 128 )

  26375   2 001ABF  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 001AC1  E845 0007                            LDR,R6   7,B5
          2 001AC3  E247 0032                            SUB,R6   BYTE_INDEX,AUTO
          2 001AC5  6E10                                 ADV,R6   16
          2 001AC6  E970 0080                            CMR,R6   128,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:514  
          2 001AC8  0A81 0009                            BALE     s:26381,PREL

     4171    26376    3             THEN
     4172    26377    4                DO;

     4173    26378    4                   DIAG = %KX_DIAG_LRGUSRDAT#;

  26378   2 001ACA  E870 00C3                            LDR,R6   195,IMO
          2 001ACC  EF47 002F                            STR,R6   DIAG,AUTO

     4174    26379    4                   RETURN;

  26379   2 001ACE  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001AD0  C3C6 0001                            LNJ,B4   1,B6

     4175    26380    4                END;
     4176    26381    3          IF ( KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX > 0 )

  26381   2 001AD2  E845 0007                            LDR,R6   7,B5
          2 001AD4  E247 0032                            SUB,R6   BYTE_INDEX,AUTO
          2 001AD6  6E10                                 ADV,R6   16
          2 001AD7  6A81 0016                            BLEZ,R6  s:26390,PREL

     4177    26382    3             THEN IF BYTE_ARRAY ( BYTE_INDEX ) = %KX_PRTID_X29#

  26382   2 001AD9  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001ADB  E2B5                                 LLH,R6   ,B5,R3
          2 001ADC  6D01                                 CMV,R6   1
          2 001ADD  0981 0010                            BNE      s:26390,PREL

     4178    26383    4                   THEN DO;

     4179    26384    4                         IF NOT KX$L2.FLG.ACPX29

  26384   2 001ADF  CCC7 000C                            LDB,B4   L2$,AUTO
          2 001AE1  82C4 002E                            LB,'0010'X        46,B4
          2 001AE3       0010
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:515  
          2 001AE4  0501 0018                            BBT      s:26399,PREL

     4180    26385    5                            THEN DO;

     4181    26386    5                                  DIAG = %KX_DIAG_NOX29#;

  26386   2 001AE6  D870 00CB                            LDR,R5   203,IMO
          2 001AE8  DF47 002F                            STR,R5   DIAG,AUTO

     4182    26387    5                                  RETURN;

  26387   2 001AEA  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001AEC  C3C6 0001                            LNJ,B4   1,B6

     4183    26388    5                               END;
     4184    26389    4                      END;
     4185    26390    4                   ELSE DO;

     4186    26391    4   L_CHKX25:             IF NOT KX$L2.FLG.ACPX25

  26391   2 001AEE  ECC7 000C            L_CHKX25        LDB,B6   L2$,AUTO
          2 001AF0  82C6 002E                            LB,'0020'X        46,B6
          2 001AF2       0020
          2 001AF3  0501 0009                            BBT      s:26399,PREL

     4187    26392    5                            THEN DO;

     4188    26393    5                                  DIAG = %KX_DIAG_NOX25#;

  26393   2 001AF5  E870 00CC                            LDR,R6   204,IMO
          2 001AF7  EF47 002F                            STR,R6   DIAG,AUTO

     4189    26394    5                                  RETURN;

  26394   2 001AF9  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001AFB  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:516  
     4190    26395    5                               END;
     4191    26396    4                      END;
     4192    26397    3             ELSE GOTO L_CHKX25;
     4193    26398
     4194    26399    3          IF DIAG = 0

  26399   2 001AFD  E847 002F                            LDR,R6   DIAG,AUTO
          2 001AFF  6981 0004                            BNEZ,R6  s:26402,PREL

     4195    26400    3             THEN
     4196    26401    3                PEVENT = %Y_EV_CALL#;

  26401   2 001B01  5C0A                                 LDV,R5   10
          2 001B02  DF47 002C                            STR,R5   PEVENT,AUTO

     4197    26402    3          IF KX$L3.STATE.CURRENT = %Y_ST_CALL#

  26402   2 001B04  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001B06  D2C6 0031                            LLH,R5   49,B6
          2 001B08  5D08                                 CMV,R5   8
          2 001B09  0981 001C                            BNE      s:26419,PREL

     4198    26403    4             THEN DO;

     4199    26404    4                   IF KX$L3.CALL_COLLISION

  26404   2 001B0B  82C6 0076                            LB,'0008'X        118,B6
  26404   2 001B0D       0008
          2 001B0E  0581 0009                            BBF      s:26410,PREL

     4200    26405    5                      THEN DO;

     4201    26406    5                            PEVENT = %Y_EV_BAD_CALL#;

  26406   2 001B10  4C18                                 LDV,R4   24
          2 001B11  CF47 002C                            STR,R4   PEVENT,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:517  
     4202    26407    5                            DIAG = %KX_DIAG_P5#;

  26407   2 001B13  6C18                                 LDV,R6   24
          2 001B14  EF47 002F                            STR,R6   DIAG,AUTO

     4203    26408    5                         END;

  26408   2 001B16  0F81 000F                            B        s:26419,PREL

     4204    26409    5                      ELSE DO;

     4205    26410    5                            KX$L3.CALL_COLLISION = '1'B;

  26410   2 001B18  8946 0076                            LBT,'0008'X       118,B6
  26410   2 001B1A       0008

     4206    26411    5                            IF NOT KX$L2.FLG.DCE

  26411   2 001B1B  DCC7 000C                            LDB,B5   L2$,AUTO
          2 001B1D  82C5 002E                            LB,'1000'X        46,B5
          2 001B1F       1000
          2 001B20  0501 0005                            BBT      s:26419,PREL

     4207    26412    5                               THEN ALTRETURN;

  26412   2 001B22  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001B24  B806                                 LDR,R3   ,B6
          2 001B25  C3B6                                 LNJ,B4   ,B6,R3

     4208    26413    5                         END;
     4209    26414    4                END;
     4210    26415
     4211    26416        /*  If called subaddress is 99, assume OSI Connection Oriented transport.
     4212    26417            NSAP's are identical to x.121 addresses if not in address extensions.
     4213    26418        */
     4214    26419    3          IF (TERMID.TERM.SUBDEVICE = 99)

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:518  
  26419   2 001B26  C847 0048                            LDR,R4   TERMID+2,AUTO
          2 001B28  4D63                                 CMV,R4   99
          2 001B29  0901 0010                            BE       s:26423,PREL
          2 001B2B  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 001B2D  B845 0007                            LDR,R3   7,B5
          2 001B2F  B247 0032                            SUB,R3   BYTE_INDEX,AUTO
          2 001B31  3E10                                 ADV,R3   16
          2 001B32  3A81 040D                            BLEZ,R3  s:26868,PREL
          2 001B34  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001B36  A2B5                                 LLH,R2   ,B5,R3
          2 001B37  2D03                                 CMV,R2   3
          2 001B38  0981 0407                            BNE      s:26868,PREL

     4215    26420    3             OR ( (KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX>0)
     4216    26421    3             AND ( BYTE_ARRAY ( BYTE_INDEX ) = %KX_PRTID_OSI#) )
     4217    26422    4             THEN DO;

     4218    26423    4                   IF NOT (FCL_PRESENT(%FCLX_CLDADREXT#))

  26423   2 001B3A  82C7 0059                            LB,'0004'X        FCL_PRESENT,AUTO
  26423   2 001B3C       0004
          2 001B3D  0501 0009                            BBT      s:26425,PREL

     4219    26424    4                      THEN ADDR(KX$L3.LCLNSAP)->STRT = ADDR(KX$L3.LCLADR)->STRT;

  26424   2 001B3F  ABC6 0077                            LAB,B2   119,B6
          2 001B41  2C00                                 LDV,R2   0
          2 001B42  6C08                                 LDV,R6   8
          2 001B43  BBC6 007B                            LAB,B3   123,B6
          2 001B45  3C00                                 LDV,R3   0
          2 001B46  0008                                 MMM

     4220    26425    4                   IF NOT (FCL_PRESENT(%FCLX_CLGADREXT#))

  26425   2 001B47  82C7 0059                            LB,'0008'X        FCL_PRESENT,AUTO
  26425   2 001B49       0008
          2 001B4A  0501 03F5                            BBT      s:26868,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:519  

     4221    26426    4                      THEN ADDR(KX$L3.RMTNSAP)->STRT = ADDR(KX$L3.CALL_OPTS.RCVADR)->
             26426                               STRT;

  26426   2 001B4C  ACC7 0008                            LDB,B2   L3$,AUTO
          2 001B4E  2C2E                                 LDV,R2   46
          2 001B4F  6C08                                 LDV,R6   8
          2 001B50  BBC2 0086                            LAB,B3   134,B2
          2 001B52  3C00                                 LDV,R3   0
          2 001B53  0008                                 MMM

     4222    26427    4                END;

  26427   2 001B54  0F81 03EB                            B        s:26868,PREL

     4223    26428
     4224    26429    3          SELECT ( %Y_ID_CALL_C# );

     4225    26430        /*
     4226    26431                                             If the state is not CALL, then
     4227    26432                                             it is an unexpected Call Confirm,
     4228    26433                                             and there is no reason to parse
     4229    26434                                             the data.
     4230    26435        */
     4231    26436    3          IF KX$L3.STATE.CURRENT = %Y_ST_CLEAR#

  26436   2 001B56  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001B58  A2C5 0031                            LLH,R2   49,B5
          2 001B5A  2D0B                                 CMV,R2   11
          2 001B5B  0981 0006                            BNE      s:26440,PREL

     4232    26437    3             THEN
     4233    26438    3                PEVENT = %Y_EV_CALL_C#;

  26438   2 001B5D  1C0B                                 LDV,R1   11
          2 001B5E  9F47 002C                            STR,R1   PEVENT,AUTO
          2 001B60  0F81 0004                            B        s:26441,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:520  

     4234    26439    3             ELSE
     4235    26440    3                PEVENT = %Y_EV_BAD_CALL#;

  26440   2 001B62  1C18                                 LDV,R1   24
          2 001B63  9F47 002C                            STR,R1   PEVENT,AUTO

     4236    26441    3          DIAG = 0;

  26441   2 001B65  8747 002F                            CL       DIAG,AUTO

     4237    26442    3          IF KX$L3.STATE.CURRENT ~= %Y_ST_CALL# OR KX$L3.FSTSLC = %KX_FSTSLC_RST#

  26442   2 001B67  2D08                                 CMV,R2   8
          2 001B68  0981 0009                            BNE      s:26444,PREL
          2 001B6A  E845 0029                            LDR,R6   41,B5
          2 001B6C  6046                                 SOR,R6   6
          2 001B6D  E570 0003                            AND,R6   3,IMO
          2 001B6F  6D03                                 CMV,R6   3
          2 001B70  0981 0005                            BNE      s:26446,PREL

     4238    26443    3             THEN
     4239    26444    3                RETURN;

  26444   2 001B72  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001B74  C3C6 0001                            LNJ,B4   1,B6

     4240    26445
     4241    26446    3          BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT;

  26446   2 001B76  E847 003D                            LDR,R6   L2EXT,AUTO
          2 001B78  6E15                                 ADV,R6   21
          2 001B79  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     4242    26447    3          IF DATACNT = %L0

  26447   2 001B7B  E847 003F                            LDR,R6   DATACNT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:521  
          2 001B7D  6D05                                 CMV,R6   5
          2 001B7E  0981 0008                            BNE      s:26453,PREL

     4243    26448    3             THEN
     4244    26449    4                DO;

     4245    26450    4                   PEVENT = %Y_EV_CALL_C#;

  26450   2 001B80  1C0B                                 LDV,R1   11
          2 001B81  9F47 002C                            STR,R1   PEVENT,AUTO

     4246    26451    4                   RETURN;

  26451   2 001B83  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001B85  C3C6 0001                            LNJ,B4   1,B6

     4247    26452    4                END;
     4248    26453    3          FCL_PRESENT_BITS = '0'B;

  26453   2 001B87  8847 0059                            LBF,'FFFC'X       FCL_PRESENT,AUTO
  26453   2 001B89       FFFC

     4249    26454
     4250    26455               %UNOCTET ( VAR = ADRLNG );

  26456   2 001B8A  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 001B8C  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001B8E  E2B4                                 LLH,R6   ,B4,R3
          2 001B8F  EF47 0050                            STR,R6   ADRLNGS,AUTO

  26457   2 001B91  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4251    26459    3          IF ADRLNGS.LFT > 14

  26459   2 001B93  B847 0050                            LDR,R3   ADRLNGS,AUTO
          2 001B95  3044                                 SOR,R3   4
          2 001B96  B570 000F                            AND,R3   15,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:522  
          2 001B98  3D0E                                 CMV,R3   14
          2 001B99  0381 0009                            BLE      s:26465,PREL

     4252    26460    3             THEN
     4253    26461    4                DO;

     4254    26462    4                   DIAG = %KX_DIAG_LNGCLNADR#;

  26462   2 001B9B  E870 00BF                            LDR,R6   191,IMO
          2 001B9D  EF47 002F                            STR,R6   DIAG,AUTO

     4255    26463    4                   RETURN;

  26463   2 001B9F  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001BA1  C3C6 0001                            LNJ,B4   1,B6

     4256    26464    4                END;
     4257    26465    3          IF ADRLNGS.RGH > 14

  26465   2 001BA3  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001BA5  E570 000F                            AND,R6   15,IMO
          2 001BA7  6D0E                                 CMV,R6   14
          2 001BA8  0381 0009                            BLE      s:26472,PREL

     4258    26466    3             THEN
     4259    26467    4                DO;

     4260    26468    4                   DIAG = %KX_DIAG_LNGCLDADR#;

  26468   2 001BAA  E870 00BD                            LDR,R6   189,IMO
          2 001BAC  EF47 002F                            STR,R6   DIAG,AUTO

     4261    26469    4                   RETURN;

  26469   2 001BAE  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001BB0  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:523  
     4262    26470    4                END;
     4263    26471
     4264    26472    3          BYTE_INDEX = BYTE_INDEX + (ADRLNGS.RGH+ADRLNGS.LFT+1)/2;

  26472   2 001BB2  EA53                                 ADD,R6   R3
          2 001BB3  6E01                                 ADV,R6   1
          2 001BB4  6041                                 SOR,R6   1
          2 001BB5  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 001BB7  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     4265    26473        /*
     4266    26474                                             Now parse the facilities.
     4267    26475        */
     4268    26476    3          IF KX$DATA.CNT+LENGTHC(KX$DATA) <=  BYTE_INDEX

  26476   2 001BB9  E844 0007                            LDR,R6   7,B4
          2 001BBB  6E10                                 ADV,R6   16
          2 001BBC  E947 0032                            CMR,R6   BYTE_INDEX,AUTO
          2 001BBE  0301 0005                            BG       s:26481,PREL

     4269    26477    3             THEN
     4270    26478    3                RETURN;

  26478   2 001BC0  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001BC2  C3C6 0001                            LNJ,B4   1,B6

     4271    26479
     4272    26480               %UNOCTET ( VAR = FCLLNG );

  26481   2 001BC4  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001BC6  E2B4                                 LLH,R6   ,B4,R3
          2 001BC7  EF47 0054                            STR,R6   FCLLNG,AUTO

  26482   2 001BC9  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4273    26484    3          IF FCLLNG > 109

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:524  
  26484   2 001BCB  6D6D                                 CMV,R6   109
          2 001BCC  0381 0009                            BLE      s:26490,PREL

     4274    26485    3             THEN
     4275    26486    4                DO;

     4276    26487    4                   DIAG = %KX_DIAG_LRGFCLCNT#;

  26487   2 001BCE  B870 00B9                            LDR,R3   185,IMO
          2 001BD0  BF47 002F                            STR,R3   DIAG,AUTO

     4277    26488    4                   RETURN;

  26488   2 001BD2  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001BD4  C3C6 0001                            LNJ,B4   1,B6

     4278    26489    4                END;
     4279    26490    3          IF KX$DATA.CNT + LENGTHC(KX$DATA) - BYTE_INDEX < FCLLNG

  26490   2 001BD6  B844 0007                            LDR,R3   7,B4
          2 001BD8  B247 0032                            SUB,R3   BYTE_INDEX,AUTO
          2 001BDA  3E10                                 ADV,R3   16
          2 001BDB  3801 0004                            BLZ,R3   s:26493,PREL
          2 001BDD  B956                                 CMR,R3   R6
          2 001BDE  0281 0009                            BGE      s:26497,PREL

     4280    26491    3             THEN
     4281    26492    4                DO;

     4282    26493    4                   DIAG = %KX_DIAG_UNBFCLCNT#;

  26493   2 001BE0  B870 00B7                            LDR,R3   183,IMO
          2 001BE2  BF47 002F                            STR,R3   DIAG,AUTO

     4283    26494    4                   RETURN;

  26494   2 001BE4  ECC7 004E                            LDB,B6   TERMID+8,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:525  
          2 001BE6  C3C6 0001                            LNJ,B4   1,B6

     4284    26495    4                END;
     4285    26496
     4286    26497    4          DO I = 1 TO FCLLNG;

  26497   2 001BE8  3C01                                 LDV,R3   1
          2 001BE9  BF47 0052                            STR,R3   I,AUTO
          2 001BEB  0F81 01AE                            B        s:26688+2,PREL

     4287    26498                  %UNOCTET ( VAR = FCLID );

  26499   2 001BED  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001BEF  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001BF1  E2B6                                 LLH,R6   ,B6,R3
          2 001BF2  EF47 0055                            STR,R6   FCLID,AUTO

  26500   2 001BF4  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4288    26502    5             DO SELECT ( FCLID );

  26502   2 001BF6  E970 0009                            CMR,R6   9,IMO
          2 001BF8  0201 002A                            BL       s:26502+45,PREL
          2 001BFA  0901 004A                            BE       s:26507,PREL
          2 001BFC  E970 0047                            CMR,R6   71,IMO
          2 001BFE  0201 0014                            BL       s:26502+29,PREL
          2 001C00  0901 005F                            BE       s:26529,PREL
          2 001C02  E970 0049                            CMR,R6   73,IMO
          2 001C04  0201 0009                            BL       s:26502+24,PREL
          2 001C06  0901 0149                            BE       s:26646,PREL
          2 001C08  E970 00C6                            CMR,R6   198,IMO
          2 001C0A  0981 0186                            BNE      s:26683,PREL
          2 001C0C  0F81 0119                            B        s:26620,PREL
          2 001C0E  6D48                                 CMV,R6   72
          2 001C0F  0981 0181                            BNE      s:26683,PREL
          2 001C11  0F81 004E                            B        s:26529,PREL
          2 001C13  E970 0042                            CMR,R6   66,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:526  
          2 001C15  0201 0008                            BL       s:26502+40,PREL
          2 001C17  0901 005C                            BE       s:26543,PREL
          2 001C19  6D43                                 CMV,R6   67
          2 001C1A  0981 0176                            BNE      s:26683,PREL
          2 001C1C  0F81 00A1                            B        s:26574,PREL
          2 001C1E  6D41                                 CMV,R6   65
          2 001C1F  0981 0171                            BNE      s:26683,PREL
          2 001C21  0F81 003E                            B        s:26529,PREL
          2 001C23  E970 0002                            CMR,R6   2,IMO
          2 001C25  0201 0013                            BL       s:26502+67,PREL
          2 001C27  0901 00DF                            BE       s:26604,PREL
          2 001C29  E970 0004                            CMR,R6   4,IMO
          2 001C2B  0201 0008                            BL       s:26502+62,PREL
          2 001C2D  0901 0114                            BE       s:26635,PREL
          2 001C2F  6D08                                 CMV,R6   8
          2 001C30  0981 0160                            BNE      s:26683,PREL
          2 001C32  0F81 013D                            B        s:26664,PREL
          2 001C34  6D03                                 CMV,R6   3
          2 001C35  0981 015B                            BNE      s:26683,PREL
          2 001C37  0F81 000D                            B        s:26507,PREL
          2 001C39  E970 0001                            CMR,R6   1,IMO
          2 001C3B  0201 0005                            BL       s:26502+75,PREL
          2 001C3D  0901 0014                            BE       s:26518,PREL
          2 001C3F  0F81 0151                            B        s:26683,PREL
          2 001C41  6901 0141                            BEZ,R6   s:26676,PREL
          2 001C43  0F81 014D                            B        s:26683,PREL

     4289    26503    5                SELECT ( %KX_FCL_CUG#, %KX_FCL_CUG_OUT# );

     4290    26504        /*
     4291    26505                                             Should not be in a call_c. Skip over.
     4292    26506        */
     4293    26507    5                IF FCL_PRESENT(%FCLX_CUG1#)

  26507   2 001C45  89C7 0059                            CMZ      FCL_PRESENT,AUTO
          2 001C47  0801 FBF6                            BAL      s:26107,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:527  
     4294    26508    5                   THEN
     4295    26509    5                      GOTO L_DUPFCL;
     4296    26510    5                FCL_PRESENT(%FCLX_CUG1#) = '1'B;

  26510   2 001C49  8947 0059                            LBT,'8000'X       FCL_PRESENT,AUTO
  26510   2 001C4B       8000

     4297    26511    5                BYTE_INDEX = BYTE_INDEX + 1;

  26511   2 001C4C  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4298    26512    5                I = I + 1;

  26512   2 001C4E  8AC7 0052                            INC      I,AUTO
          2 001C50  0F81 0147                            B        s:26688,PREL

     4299    26513
     4300    26514    5                SELECT ( %KX_FCL_RVS# );

     4301    26515        /*
     4302    26516                                             Should not be in a call_c. Skip over.
     4303    26517        */
     4304    26518    5                IF FCL_PRESENT(%FCLX_RVS#)

  26518   2 001C52  82C7 0059                            LB,'1000'X        FCL_PRESENT,AUTO
  26518   2 001C54       1000
          2 001C55  0501 FBE8                            BBT      s:26107,PREL

     4305    26519    5                   THEN
     4306    26520    5                      GOTO L_DUPFCL;
     4307    26521    5                FCL_PRESENT(%FCLX_RVS#) = '1'B;

  26521   2 001C57  8947 0059                            LBT,'1000'X       FCL_PRESENT,AUTO
  26521   2 001C59       1000

     4308    26522    5                BYTE_INDEX = BYTE_INDEX + 1;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:528  
  26522   2 001C5A  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4309    26523    5                I = I + 1;

  26523   2 001C5C  8AC7 0052                            INC      I,AUTO
          2 001C5E  0F81 0139                            B        s:26688,PREL

     4310    26524
     4311    26525    5                SELECT ( %KX_FCL_CUG_EXT#, %KX_FCL_CUG_OUT_EXT#, %KX_FCL_CUG_BIL# );

     4312    26526        /*
     4313    26527                                             Should not be in a call_c. Skip over.
     4314    26528        */
     4315    26529    5                IF FCL_PRESENT(%FCLX_CUG2#)

  26529   2 001C60  82C7 0059                            LB,'4000'X        FCL_PRESENT,AUTO
  26529   2 001C62       4000
          2 001C63  0501 FBDA                            BBT      s:26107,PREL

     4316    26530    5                   THEN
     4317    26531    5                      GOTO L_DUPFCL;
     4318    26532    5                FCL_PRESENT(%FCLX_CUG2#) = '1'B;

  26532   2 001C65  8947 0059                            LBT,'4000'X       FCL_PRESENT,AUTO
  26532   2 001C67       4000

     4319    26533    5                BYTE_INDEX = BYTE_INDEX + 2;

  26533   2 001C68  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 001C6A  5E02                                 ADV,R5   2
          2 001C6B  DF47 0032                            STR,R5   BYTE_INDEX,AUTO

     4320    26534    5                I = I + 2;

  26534   2 001C6D  C847 0052                            LDR,R4   I,AUTO
          2 001C6F  4E02                                 ADV,R4   2
          2 001C70  CF47 0052                            STR,R4   I,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:529  
          2 001C72  0F81 0125                            B        s:26688,PREL

     4321    26535
     4322    26536
     4323    26537    5                SELECT ( %KX_FCL_PCKSIZ# );

     4324    26538        /*
     4325    26539                                             The packet size must be at least
     4326    26540                                             128.  If it is more than what is
     4327    26541                                             allowed, then the call is cleared.
     4328    26542        */
     4329    26543    5                IF FCL_PRESENT(%FCLX_PCKSIZ#)

  26543   2 001C74  82C7 0059                            LB,'0800'X        FCL_PRESENT,AUTO
  26543   2 001C76       0800
          2 001C77  0501 FBC6                            BBT      s:26107,PREL

     4330    26544    5                   THEN
     4331    26545    5                      GOTO L_DUPFCL;
     4332    26546    5                FCL_PRESENT(%FCLX_PCKSIZ#) = '1'B;

  26546   2 001C79  8947 0059                            LBT,'0800'X       FCL_PRESENT,AUTO
  26546   2 001C7B       0800

     4333    26547                     %UNOCTET ( VAR = TEMP );

  26548   2 001C7C  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001C7E  D2B6                                 LLH,R5   ,B6,R3
          2 001C7F  DF47 0056                            STR,R5   TEMP,AUTO

  26549   2 001C81  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4334    26551    5                IF TEMP < KX_BUF.LOGSIZ ( 0 ) OR

  26551   2 001C83  D900 0000 0024  xsym                 CMR,R5   KX_BUF+36
          2 001C86  0201 FC15                            BL       s:26156,PREL
          2 001C88  DCC7 0008                            LDB,B5   L3$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:530  
          2 001C8A  B2C5 0014                            LLH,R3   20,B5
          2 001C8C  D930 0000 0024  xsym                 CMR,R5   KX_BUF+36,R3
          2 001C8F  0301 FC0C                            BG       s:26156,PREL

     4335    26552    5                   TEMP > KX_BUF.LOGSIZ ( KX$L3.CALL_OPTS.RCVPCKSIZ )
     4336    26553    5                   THEN
     4337    26554    5                      GOTO INVFCLPRM;
     4338    26555    5                TEMP = LOG_TO_CP6 ( TEMP );

  26555   2 001C91  A855                                 LDR,R2   R5
          2 001C92  D820 0000 03F0  00                   LDR,R5   LOG_TO_CP6,R2
          2 001C95  DF47 0056                            STR,R5   TEMP,AUTO

     4339    26556    5                KX$L3.CALL_OPTS.RCVPCKSIZ = TEMP;

  26556   2 001C97  D7C5 0014                            STH,R5   20,B5

     4340    26557
     4341    26558                     %UNOCTET ( VAR = TEMP );

  26559   2 001C99  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001C9B  D2B6                                 LLH,R5   ,B6,R3
          2 001C9C  DF47 0056                            STR,R5   TEMP,AUTO

  26560   2 001C9E  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4342    26562    5                IF TEMP < KX_BUF.LOGSIZ ( 0 ) OR

  26562   2 001CA0  D900 0000 0024  xsym                 CMR,R5   KX_BUF+36
          2 001CA3  0201 FBF8                            BL       s:26156,PREL
          2 001CA5  B845 0015                            LDR,R3   21,B5
          2 001CA7  B570 00FF                            AND,R3   255,IMO
          2 001CA9  D930 0000 0024  xsym                 CMR,R5   KX_BUF+36,R3
          2 001CAC  0301 FBEF                            BG       s:26156,PREL

     4343    26563    5                   TEMP > KX_BUF.LOGSIZ ( KX$L3.CALL_OPTS.SNDPCKSIZ )
     4344    26564    5                   THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:531  
     4345    26565    5                      GOTO INVFCLPRM;
     4346    26566    5                TEMP = LOG_TO_CP6 ( TEMP );

  26566   2 001CAE  A855                                 LDR,R2   R5
          2 001CAF  D820 0000 03F0  00                   LDR,R5   LOG_TO_CP6,R2
          2 001CB2  DF47 0056                            STR,R5   TEMP,AUTO

     4347    26567    5                KX$L3.CALL_OPTS.SNDPCKSIZ = TEMP;

  26567   2 001CB4  DAC5 0015                            SRM,R5,'00FF'X    21,B5
  26567   2 001CB6       00FF

     4348    26568    5                I = I + 2;

  26568   2 001CB7  C847 0052                            LDR,R4   I,AUTO
          2 001CB9  4E02                                 ADV,R4   2
          2 001CBA  CF47 0052                            STR,R4   I,AUTO
          2 001CBC  0F81 00DB                            B        s:26688,PREL

     4349    26569
     4350    26570    5                SELECT ( %KX_FCL_WNDSIZ# );

     4351    26571        /*
     4352    26572                                             Window negotiation.
     4353    26573        */
     4354    26574    5                IF FCL_PRESENT(%FCLX_WNDSIZ#)

  26574   2 001CBE  82C7 0059                            LB,'0400'X        FCL_PRESENT,AUTO
  26574   2 001CC0       0400
          2 001CC1  0501 FB7C                            BBT      s:26107,PREL

     4355    26575    5                   THEN
     4356    26576    5                      GOTO L_DUPFCL;
     4357    26577    5                FCL_PRESENT(%FCLX_WNDSIZ#) = '1'B;

  26577   2 001CC3  8947 0059                            LBT,'0400'X       FCL_PRESENT,AUTO
  26577   2 001CC5       0400
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:532  

     4358    26578                     %UNOCTET ( VAR = TEMP );

  26579   2 001CC6  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001CC8  D2B6                                 LLH,R5   ,B6,R3
          2 001CC9  DF47 0056                            STR,R5   TEMP,AUTO

  26580   2 001CCB  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4359    26582    5                IF (TEMP = 0 OR TEMP > KX$L3.CALL_OPTS.RCVWND) AND TEMP ~= 2

  26582   2 001CCD  5901 0008                            BEZ,R5   s:26582+9,PREL
          2 001CCF  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001CD1  C2C5 0015                            LLH,R4   21,B5
          2 001CD3  C955                                 CMR,R4   R5
          2 001CD4  0281 0004                            BGE      s:26585,PREL
          2 001CD6  5D02                                 CMV,R5   2
          2 001CD7  0981 FBC4                            BNE      s:26156,PREL

     4360    26583    5                   THEN
     4361    26584    5                      GOTO INVFCLPRM;
     4362    26585    5                KX$L3.CALL_OPTS.RCVWND = TEMP;

  26585   2 001CD9  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001CDB  D7C5 0015                            STH,R5   21,B5

     4363    26586    5                IF KX$L3.RSPDLY > KX$L3.CALL_OPTS.RCVWND

  26586   2 001CDD  C845 0072                            LDR,R4   114,B5
          2 001CDF  C570 00FF                            AND,R4   255,IMO
          2 001CE1  B2C5 0015                            LLH,R3   21,B5
          2 001CE3  C953                                 CMR,R4   R3
          2 001CE4  0A81 0005                            BALE     s:26591,PREL

     4364    26587    5                   THEN
     4365    26588    5                      KX$L3.RSPDLY = KX$L3.CALL_OPTS.RCVWND/2;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:533  
  26588   2 001CE6  3041                                 SOR,R3   1
          2 001CE7  BAC5 0072                            SRM,R3,'00FF'X    114,B5
          2 001CE9       00FF

     4366    26589
     4367    26590                     %UNOCTET ( VAR = TEMP );

  26591   2 001CEA  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001CEC  D2B6                                 LLH,R5   ,B6,R3
          2 001CED  DF47 0056                            STR,R5   TEMP,AUTO

  26592   2 001CEF  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4368    26594    5                IF (TEMP = 0 OR TEMP > KX$L3.CALL_OPTS.SNDWND) AND TEMP ~= 2

  26594   2 001CF1  5901 0008                            BEZ,R5   s:26594+9,PREL
          2 001CF3  C845 0016                            LDR,R4   22,B5
          2 001CF5  C570 00FF                            AND,R4   255,IMO
          2 001CF7  C955                                 CMR,R4   R5
          2 001CF8  0281 0004                            BGE      s:26597,PREL
          2 001CFA  5D02                                 CMV,R5   2
          2 001CFB  0981 FBA0                            BNE      s:26156,PREL

     4369    26595    5                   THEN
     4370    26596    5                      GOTO INVFCLPRM;
     4371    26597    5                KX$L3.CALL_OPTS.SNDWND = TEMP;

  26597   2 001CFD  DAC5 0016                            SRM,R5,'00FF'X    22,B5
  26597   2 001CFF       00FF

     4372    26598    5                I = I + 2;

  26598   2 001D00  C847 0052                            LDR,R4   I,AUTO
          2 001D02  4E02                                 ADV,R4   2
          2 001D03  CF47 0052                            STR,R4   I,AUTO
          2 001D05  0F81 0092                            B        s:26688,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:534  
     4373    26599
     4374    26600    5                SELECT ( %KX_FCL_THRCLS# );

     4375    26601        /*
     4376    26602                                             Just save the information.
     4377    26603        */
     4378    26604    5                IF FCL_PRESENT(%FCLX_THRCLS#)

  26604   2 001D07  82C7 0059                            LB,'0200'X        FCL_PRESENT,AUTO
  26604   2 001D09       0200
          2 001D0A  0501 FB33                            BBT      s:26107,PREL

     4379    26605    5                   THEN
     4380    26606    5                      GOTO L_DUPFCL;
     4381    26607    5                FCL_PRESENT(%FCLX_THRCLS#) = '1'B;

  26607   2 001D0C  8947 0059                            LBT,'0200'X       FCL_PRESENT,AUTO
  26607   2 001D0E       0200

     4382    26608                     %UNOCTET ( VAR = TEMP );

  26609   2 001D0F  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001D11  D2B6                                 LLH,R5   ,B6,R3
          2 001D12  DF47 0056                            STR,R5   TEMP,AUTO

  26610   2 001D14  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4383    26612    5                KX$L3.CALL_OPTS.RCVTHR = TEMP / 16;

  26612   2 001D16  5044                                 SOR,R5   4
          2 001D17  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001D19  DAC5 0014                            SRM,R5,'00FF'X    20,B5
          2 001D1B       00FF

     4384    26613    5                KX$L3.CALL_OPTS.SNDTHR = MOD ( TEMP, 16 );

  26613   2 001D1C  D847 0056                            LDR,R5   TEMP,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:535  
          2 001D1E  D570 000F                            AND,R5   15,IMO
          2 001D20  D7C5 0016                            STH,R5   22,B5

     4385    26614    5                I = I + 1;

  26614   2 001D22  8AC7 0052                            INC      I,AUTO
          2 001D24  0F81 0073                            B        s:26688,PREL

     4386    26615
     4387    26616    5                SELECT ( %KX_FCL_NUID# );

     4388    26617        /*
     4389    26618           Network user ID. Just skip over.
     4390    26619        */
     4391    26620    5                IF FCL_PRESENT(%FCLX_NUID#)

  26620   2 001D26  82C7 0059                            LB,'0020'X        FCL_PRESENT,AUTO
  26620   2 001D28       0020
          2 001D29  0501 FB14                            BBT      s:26107,PREL

     4392    26621    5                   THEN
     4393    26622    5                      GOTO L_DUPFCL;
     4394    26623    5                FCL_PRESENT(%FCLX_NUID#) = '1'B;

  26623   2 001D2B  8947 0059                            LBT,'0020'X       FCL_PRESENT,AUTO
  26623   2 001D2D       0020

     4395    26624                     %UNOCTET ( VAR = TEMP );

  26625   2 001D2E  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001D30  D2B6                                 LLH,R5   ,B6,R3
          2 001D31  DF47 0056                            STR,R5   TEMP,AUTO

  26626   2 001D33  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4396    26628    5                BYTE_INDEX = BYTE_INDEX + TEMP;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:536  
  26628   2 001D35  DA47 0032                            ADD,R5   BYTE_INDEX,AUTO
          2 001D37  DF47 0032                            STR,R5   BYTE_INDEX,AUTO

     4397    26629    5                I = I + 1 + TEMP;

  26629   2 001D39  C847 0052                            LDR,R4   I,AUTO
          2 001D3B  CA47 0056                            ADD,R4   TEMP,AUTO
          2 001D3D  4E01                                 ADV,R4   1
          2 001D3E  CF47 0052                            STR,R4   I,AUTO
          2 001D40  0F81 0057                            B        s:26688,PREL

     4398    26630
     4399    26631    5                SELECT ( %KX_FCL_CHR_RQS# );

     4400    26632        /*
     4401    26633           Charging information request. Just skip over.
     4402    26634        */
     4403    26635    5                IF FCL_PRESENT(%FCLX_CHR_RQS#)

  26635   2 001D42  82C7 0059                            LB,'0100'X        FCL_PRESENT,AUTO
  26635   2 001D44       0100
          2 001D45  0501 FAF8                            BBT      s:26107,PREL

     4404    26636    5                   THEN
     4405    26637    5                      GOTO L_DUPFCL;
     4406    26638    5                FCL_PRESENT(%FCLX_CHR_RQS#) = '1'B;

  26638   2 001D47  8947 0059                            LBT,'0100'X       FCL_PRESENT,AUTO
  26638   2 001D49       0100

     4407    26639    5                BYTE_INDEX = BYTE_INDEX + 1;

  26639   2 001D4A  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4408    26640    5                I = I + 1;

  26640   2 001D4C  8AC7 0052                            INC      I,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:537  
          2 001D4E  0F81 0049                            B        s:26688,PREL

     4409    26641
     4410    26642    5                SELECT ( %KX_FCL_DLY# );

     4411    26643        /*
     4412    26644           Transit delay indication. Save the value.
     4413    26645        */
     4414    26646    5                IF FCL_PRESENT(%FCLX_DLY#)

  26646   2 001D50  82C7 0059                            LB,'0080'X        FCL_PRESENT,AUTO
  26646   2 001D52       0080
          2 001D53  0501 FAEA                            BBT      s:26107,PREL

     4415    26647    5                   THEN
     4416    26648    5                      GOTO L_DUPFCL;
     4417    26649    5                FCL_PRESENT(%FCLX_DLY#) = '1'B;

  26649   2 001D55  8947 0059                            LBT,'0080'X       FCL_PRESENT,AUTO
  26649   2 001D57       0080

     4418    26650                     %UNOCTET ( VAR = KX$L3.TRNDLYINDBYT.LFT );

  26651   2 001D58  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001D5A  D2B6                                 LLH,R5   ,B6,R3
          2 001D5B  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001D5D  D7C5 002D                            STH,R5   45,B5

  26652   2 001D5F  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4419    26654                     %UNOCTET ( VAR = KX$L3.TRNDLYINDBYT.RGH );

  26655   2 001D61  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001D63  D2B6                                 LLH,R5   ,B6,R3
          2 001D64  DAC5 002D                            SRM,R5,'00FF'X    45,B5
          2 001D66       00FF

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:538  
  26656   2 001D67  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4420    26658    5                I = I + 2;

  26658   2 001D69  D847 0052                            LDR,R5   I,AUTO
          2 001D6B  5E02                                 ADV,R5   2
          2 001D6C  DF47 0052                            STR,R5   I,AUTO
          2 001D6E  0F81 0029                            B        s:26688,PREL

     4421    26659
     4422    26660    5                SELECT ( %KX_FCL_ADR_MOD# );

     4423    26661        /*
     4424    26662           Called line address modified notification. Error log the info.
     4425    26663        */
     4426    26664    5                IF FCL_PRESENT(%FCLX_ADR_MOD#)

  26664   2 001D70  82C7 0059                            LB,'0010'X        FCL_PRESENT,AUTO
  26664   2 001D72       0010
          2 001D73  0501 FACA                            BBT      s:26107,PREL

     4427    26665    5                   THEN
     4428    26666    5                      GOTO L_DUPFCL;
     4429    26667    5                FCL_PRESENT(%FCLX_ADR_MOD#) = '1'B;

  26667   2 001D75  8947 0059                            LBT,'0010'X       FCL_PRESENT,AUTO
  26667   2 001D77       0010

     4430    26668    5                ERCOD = ADDRESS_MODIFIED;

  26668   2 001D78  8C80 0000 03A0  00                   LDI      ADDRESS_MODIFIED
          2 001D7B  8D47 0022                            SDI      ERCOD,AUTO

     4431    26669    5                I = I + 1;

  26669   2 001D7D  8AC7 0052                            INC      I,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:539  
     4432    26670    5                BYTE_INDEX = BYTE_INDEX + 1;

  26670   2 001D7F  8AC7 0032                            INC      BYTE_INDEX,AUTO
          2 001D81  0F81 0016                            B        s:26688,PREL

     4433    26671
     4434    26672    5                SELECT ( %KX_FCL_MRK# );

     4435    26673        /*
     4436    26674                                             Facility marker.
     4437    26675        */
     4438    26676    5                BYTE_INDEX = BYTE_INDEX + FCLLNG - I;

  26676   2 001D83  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 001D85  DA47 0054                            ADD,R5   FCLLNG,AUTO
          2 001D87  D247 0052                            SUB,R5   I,AUTO
          2 001D89  DF47 0032                            STR,R5   BYTE_INDEX,AUTO

     4439    26677    5                I = FCLLNG;

  26677   2 001D8B  C847 0054                            LDR,R4   FCLLNG,AUTO
          2 001D8D  CF47 0052                            STR,R4   I,AUTO
          2 001D8F  0F81 0008                            B        s:26688,PREL

     4440    26678    5                SELECT ( ELSE );

     4441    26679        /*
     4442    26680                                             Unknown facility
     4443    26681        */
     4444    26682    6             DO;

     4445    26683    6                DIAG = %KX_DIAG_INVFCLCOD#;

  26683   2 001D91  5C41                                 LDV,R5   65
          2 001D92  DF47 002F                            STR,R5   DIAG,AUTO

     4446    26684    6                RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:540  

  26684   2 001D94  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001D96  C3C6 0001                            LNJ,B4   1,B6

     4447    26685    6             END;
     4448    26686
     4449    26687    5             END;  /*  SELECT  */

     4450    26688    4          END;  /*  DO LOOP  */

  26688   2 001D98  8AC7 0052                            INC      I,AUTO
          2 001D9A  E847 0052                            LDR,R6   I,AUTO
          2 001D9C  E947 0054                            CMR,R6   FCLLNG,AUTO
          2 001D9E  0381 FE4E                            BLE      s:26499,PREL

     4451    26689
     4452    26690    3          IF KX$DATA.CNT + LENGTHC(KX$DATA) ~= BYTE_INDEX AND

  26690   2 001DA0  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001DA2  D846 0007                            LDR,R5   7,B6
          2 001DA4  5E10                                 ADV,R5   16
          2 001DA5  D947 0032                            CMR,R5   BYTE_INDEX,AUTO
          2 001DA7  0901 000F                            BE       s:26699,PREL
          2 001DA9  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001DAB  C845 0029                            LDR,R4   41,B5
          2 001DAD  4046                                 SOR,R4   6
          2 001DAE  C570 0003                            AND,R4   3,IMO
          2 001DB0  4D02                                 CMV,R4   2
          2 001DB1  0901 0005                            BE       s:26699,PREL

     4453    26691    3             KX$L3.FSTSLC ~= %KX_FSTSLC_UNR#
     4454    26692        /*
     4455    26693           User data field in call_c allowed only on fast select calls with
     4456    26694           no restriction on response.
     4457    26695        */
     4458    26696    3             THEN
     4459    26697    3                RETURN;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:541  

  26697   2 001DB3  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001DB5  C3C6 0001                            LNJ,B4   1,B6

     4460    26698
     4461    26699    3          PEVENT = %Y_EV_CALL_C#;

  26699   2 001DB7  4C0B                                 LDV,R4   11
          2 001DB8  CF47 002C                            STR,R4   PEVENT,AUTO
          2 001DBA  0F81 0185                            B        s:26868,PREL

     4462    26700
     4463    26701    3          SELECT ( %Y_ID_CLEAR# );

     4464    26702
     4465    26703    3          IF KX$L3.PVC

  26703   2 001DBC  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001DBE  82C5 0029                            LB,'0100'X        41,B5
          2 001DC0       0100
          2 001DC1  0581 0006                            BBF      s:26708,PREL

     4466    26704    3             THEN
     4467    26705    3                PEVENT = %Y_EV_CLEAR_C#;

  26705   2 001DC3  2C0D                                 LDV,R2   13
          2 001DC4  AF47 002C                            STR,R2   PEVENT,AUTO
          2 001DC6  0F81 0004                            B        s:26709,PREL

     4468    26706        /*   EV_CLEAR has special meaning for PVCs     */
     4469    26707    3             ELSE
     4470    26708    3                PEVENT = %Y_EV_CLEAR#;

  26708   2 001DC8  2C0C                                 LDV,R2   12
          2 001DC9  AF47 002C                            STR,R2   PEVENT,AUTO

     4471    26709    3          KX_STATS_X25.CLEARS_IN = KX_STATS_X25.CLEARS_IN + 1;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:542  

  26709   2 001DCB  8A80 0000 002D  xsym                 INC      KX_STATS_X25+45
          2 001DCE  8E80 0000 002C  xsym                 CAD      KX_STATS_X25+44

     4472    26710    3          TEMP0 = 2;

  26710   2 001DD1  1C02                                 LDV,R1   2
          2 001DD2  9F47 002A                            STR,R1   TEMP0,AUTO

     4473    26711    3          IF DATACNT < %L1

  26711   2 001DD4  E847 003F                            LDR,R6   DATACNT,AUTO
          2 001DD6  6D06                                 CMV,R6   6
          2 001DD7  0281 0008                            BGE      s:26711,PREL

     4474    26712    3             THEN
     4475    26713    4                DO;

     4476    26714    4                   PEVENT = %Y_EV_SHR_PKT#;

  26714   2 001DD9  2C1A                                 LDV,R2   26
          2 001DDA  AF47 002C                            STR,R2   PEVENT,AUTO

     4477    26715    4                   RETURN;

  26715   2 001DDC  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001DDE  C3C6 0001                            LNJ,B4   1,B6

  26711   2                              DECODE_CLR      null
     4478    26716    4                END;
     4479    26717    3   DECODE_CLR: ;
     4480    26718    3          BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT + TEMP0;

  26718   2 001DE0  E847 003D            DECODE_CLR      LDR,R6   L2EXT,AUTO
          2 001DE2  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 001DE4  6E15                                 ADV,R6   21
          2 001DE5  EF47 0032                            STR,R6   BYTE_INDEX,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:543  

     4481    26719    3          IF DATACNT <= %L0+TEMP0

  26719   2 001DE7  D847 002A                            LDR,R5   TEMP0,AUTO
          2 001DE9  5E05                                 ADV,R5   5
          2 001DEA  D947 003F                            CMR,R5   DATACNT,AUTO
          2 001DEC  0201 0005                            BL       s:26722,PREL

     4482    26720    3             THEN
     4483    26721    3                RETURN;

  26721   2 001DEE  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001DF0  C3C6 0001                            LNJ,B4   1,B6

     4484    26722    3          IF IN_PKTHDR.GFI ~= %GFI_EXT AND KX$L3.FSTSLC = 0

  26722   2 001DF2  C800 0000 0000  01                   LDR,R4   IN_PKTHDR
          2 001DF5  404C                                 SOR,R4   12
          2 001DF6  C570 0003                            AND,R4   3,IMO
          2 001DF8  4D02                                 CMV,R4   2
          2 001DF9  0901 0012                            BE       s:26730,PREL
          2 001DFB  ECC7 0008                            LDB,B6   L3$,AUTO
          2 001DFD  82C6 0029                            LB,'00C0'X        41,B6
          2 001DFF       00C0
          2 001E00  0501 000B                            BBT      s:26730,PREL

     4485    26723    3             THEN
     4486    26724    4                DO;

     4487    26725    4                   DIAG = %KX_DIAG_LNG#;

  26725   2 001E02  3C27                                 LDV,R3   39
          2 001E03  BF47 002F                            STR,R3   DIAG,AUTO

     4488    26726    4                   PEVENT = %Y_EV_BAD_CALL#;  /* borrow this event */

  26726   2 001E05  2C18                                 LDV,R2   24
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:544  
          2 001E06  AF47 002C                            STR,R2   PEVENT,AUTO

     4489    26727    4                   RETURN;

  26727   2 001E08  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001E0A  C3C6 0001                            LNJ,B4   1,B6

     4490    26728    4                END;
     4491    26729               %UNOCTET ( VAR = ADRLNG );

  26730   2 001E0C  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001E0E  B856                                 LDR,R3   R6
          2 001E0F  A2B6                                 LLH,R2   ,B6,R3
          2 001E10  AF47 0050                            STR,R2   ADRLNGS,AUTO

  26731   2 001E12  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4492    26733    3          BYTE_INDEX = BYTE_INDEX + (ADRLNGS.RGH+1)/2 + (ADRLNGS.LFT+1)/2 + 1;

  26733   2 001E14  9847 0050                            LDR,R1   ADRLNGS,AUTO
          2 001E16  9570 000F                            AND,R1   15,IMO
          2 001E18  1E01                                 ADV,R1   1
          2 001E19  1041                                 SOR,R1   1
          2 001E1A  9A47 0032                            ADD,R1   BYTE_INDEX,AUTO
          2 001E1C  E847 0050                            LDR,R6   ADRLNGS,AUTO
          2 001E1E  6044                                 SOR,R6   4
          2 001E1F  E570 000F                            AND,R6   15,IMO
          2 001E21  6E01                                 ADV,R6   1
          2 001E22  6041                                 SOR,R6   1
          2 001E23  9A56                                 ADD,R1   R6
          2 001E24  1E01                                 ADV,R1   1
          2 001E25  9F47 0032                            STR,R1   BYTE_INDEX,AUTO

     4493    26734    3          IF DATACNT <= %L0 + BYTE_INDEX   /* are we at the end? */

  26734   2 001E27  1E05                                 ADV,R1   5
          2 001E28  9947 003F                            CMR,R1   DATACNT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:545  
          2 001E2A  0201 0005                            BL       s:26738,PREL

     4494    26735    3             THEN
     4495    26736    3                RETURN;

  26736   2 001E2C  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001E2E  C3C6 0001                            LNJ,B4   1,B6

     4496    26737               %UNOCTET ( VAR = FCLLNG );

  26738   2 001E30  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001E32  E2B6                                 LLH,R6   ,B6,R3
          2 001E33  EF47 0054                            STR,R6   FCLLNG,AUTO

  26739   2 001E35  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4497    26741    3          IF FCLLNG > 109

  26741   2 001E37  6D6D                                 CMV,R6   109
          2 001E38  0381 000D                            BLE      s:26748,PREL

     4498    26742    3             THEN
     4499    26743    4                DO;

     4500    26744    4                   ERCOD = BAD_CLR_RQS;

  26744   2 001E3A  8C80 0000 03A2  00                   LDI      BAD_CLR_RQS
          2 001E3D  8D47 0022                            SDI      ERCOD,AUTO

     4501    26745    4                   CALL Y$ER2;

  26745   2 001E3F  E3C0 0A67                            LNJ,B6   s:0,PREL
          2 001E41       0001                            DC       s:26746,PREL

     4502    26746    4                   RETURN;

  26746   2 001E42  ECC7 004E                            LDB,B6   TERMID+8,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:546  
          2 001E44  C3C6 0001                            LNJ,B4   1,B6

     4503    26747    4                END;
     4504    26748    4          DO I = 1 TO FCLLNG;

  26748   2 001E46  3C01                                 LDV,R3   1
          2 001E47  BF47 0052                            STR,R3   I,AUTO
          2 001E49  0F81 0063                            B        s:26797+2,PREL

     4505    26749                  %UNOCTET ( VAR = FCLID );

  26750   2 001E4B  ECC7 0006                            LDB,B6   DAT$,AUTO
          2 001E4D  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001E4F  E2B6                                 LLH,R6   ,B6,R3
          2 001E50  EF47 0055                            STR,R6   FCLID,AUTO

  26751   2 001E52  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4506    26753    5             DO SELECT ( FCLID );

  26753   2 001E54  E970 00C2                            CMR,R6   194,IMO
          2 001E56  0201 0009                            BL       s:26753+12,PREL
          2 001E58  0901 0035                            BE       s:26778,PREL
          2 001E5A  E970 00C5                            CMR,R6   197,IMO
          2 001E5C  0981 0045                            BNE      s:26794,PREL
          2 001E5E  0F81 000E                            B        s:26758,PREL
          2 001E60  E970 00C1                            CMR,R6   193,IMO
          2 001E62  0201 0005                            BL       s:26753+20,PREL
          2 001E64  0901 0023                            BE       s:26771,PREL
          2 001E66  0F81 003B                            B        s:26794,PREL
          2 001E68  6D08                                 CMV,R6   8
          2 001E69  0981 0038                            BNE      s:26794,PREL
          2 001E6B  0F81 0028                            B        s:26785,PREL

     4507    26754    5                SELECT ( %KX_FCL_CHR_$$$# );

     4508    26755        /*
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:547  
     4509    26756           Charging information indicating monetary unit.
     4510    26757        */
     4511    26758    5                CHR_$$$_X = BYTE_INDEX - 1;

  26758   2 001E6D  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 001E6F  5EFF                                 ADV,R5   -1
          2 001E70  DF47 003A                            STR,R5   CHR_$$$_X,AUTO

  26758   2                              CHARGING_INFO   null
     4512    26759    5   CHARGING_INFO: ;
     4513    26760                     %UNOCTET ( VAR = TEMP );

  26761   2 001E72  ECC7 0006            CHARGING_INFO   LDB,B6   DAT$,AUTO
          2 001E74  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 001E76  E2B6                                 LLH,R6   ,B6,R3
          2 001E77  EF47 0056                            STR,R6   TEMP,AUTO

  26762   2 001E79  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4514    26764    5                BYTE_INDEX = BYTE_INDEX + TEMP;

  26764   2 001E7B  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 001E7D  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     4515    26765    5                I = I + TEMP + 1;

  26765   2 001E7F  D847 0052                            LDR,R5   I,AUTO
          2 001E81  DA47 0056                            ADD,R5   TEMP,AUTO
          2 001E83  5E01                                 ADV,R5   1
          2 001E84  DF47 0052                            STR,R5   I,AUTO
          2 001E86  0F81 0024                            B        s:26797,PREL

     4516    26766
     4517    26767    5                SELECT ( %KX_FCL_CHR_DUR# );

     4518    26768        /*
     4519    26769           Charging information indicating call duration.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:548  
     4520    26770        */
     4521    26771    5                CHR_DUR_X = BYTE_INDEX - 1;

  26771   2 001E88  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 001E8A  5EFF                                 ADV,R5   -1
          2 001E8B  DF47 003C                            STR,R5   CHR_DUR_X,AUTO

     4522    26772    5                GOTO CHARGING_INFO;

  26772   2 001E8D  0FE5                                 B        s:26758,SPREL

     4523    26773
     4524    26774    5                SELECT ( %KX_FCL_CHR_SEG# );

     4525    26775        /*
     4526    26776           Charging information indicating segment count.
     4527    26777        */
     4528    26778    5                CHR_SEG_X = BYTE_INDEX - 1;

  26778   2 001E8E  D847 0032                            LDR,R5   BYTE_INDEX,AUTO
          2 001E90  5EFF                                 ADV,R5   -1
          2 001E91  DF47 003B                            STR,R5   CHR_SEG_X,AUTO

     4529    26779    5                GOTO CHARGING_INFO;

  26779   2 001E93  0FDF                                 B        s:26758,SPREL

     4530    26780
     4531    26781    5                SELECT ( %KX_FCL_ADR_MOD# );

     4532    26782        /*
     4533    26783           Called line address modified notification. Error log it.
     4534    26784        */
     4535    26785    5                ERCOD = ADDRESS_MODIFIED;

  26785   2 001E94  8C80 0000 03A0  00                   LDI      ADDRESS_MODIFIED
          2 001E97  8D47 0022                            SDI      ERCOD,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:549  

     4536    26786    5                CALL Y$ER2;

  26786   2 001E99  E3C0 0A0D                            LNJ,B6   s:0,PREL
          2 001E9B       0001                            DC       s:26787,PREL

     4537    26787    5                BYTE_INDEX = BYTE_INDEX + 1;

  26787   2 001E9C  8AC7 0032                            INC      BYTE_INDEX,AUTO

     4538    26788    5                I = I + 1;

  26788   2 001E9E  8AC7 0052                            INC      I,AUTO
          2 001EA0  0F81 000A                            B        s:26797,PREL

     4539    26789
     4540    26790    5                SELECT ( ELSE );

     4541    26791        /*
     4542    26792           Invalid facility. Set byte_index to end of packet.
     4543    26793        */
     4544    26794    5             BYTE_INDEX = KX$DATA.CNT + LENGTHC(KX$DATA);

  26794   2 001EA2  D846 0007                            LDR,R5   7,B6
          2 001EA4  5E10                                 ADV,R5   16
          2 001EA5  DF47 0032                            STR,R5   BYTE_INDEX,AUTO

     4545    26795    5             I = FCLLNG;

  26795   2 001EA7  C847 0054                            LDR,R4   FCLLNG,AUTO
          2 001EA9  CF47 0052                            STR,R4   I,AUTO

     4546    26796    5             END;   /* of select */

     4547    26797    4          END;    /* do loop */

  26797   2 001EAB  8AC7 0052                            INC      I,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:550  
          2 001EAD  E847 0052                            LDR,R6   I,AUTO
          2 001EAF  E947 0054                            CMR,R6   FCLLNG,AUTO
          2 001EB1  0381 FF99                            BLE      s:26750,PREL
          2 001EB3  0F81 008C                            B        s:26868,PREL

     4548    26798
     4549    26799    3          SELECT ( %Y_ID_CLEAR_C# );

     4550    26800
     4551    26801    3          PEVENT = %Y_EV_CLEAR_C#;

  26801   2 001EB5  2C0D                                 LDV,R2   13
          2 001EB6  AF47 002C                            STR,R2   PEVENT,AUTO

     4552    26802    3          TEMP0 = 0;

  26802   2 001EB8  8747 002A                            CL       TEMP0,AUTO

     4553    26803    3          GOTO DECODE_CLR;

  26803   2 001EBA  0F81 FF25                            B        s:26711,PREL

     4554    26804
     4555    26805    3          SELECT ( %Y_ID_INT# );

     4556    26806
     4557    26807        /* Check the length */
     4558    26808
     4559    26809    3          IF ( IN_PKTHDR.GFI ~= %GFI_EXT AND DATACNT ~= %L1 AND DATACNT ~= %L0 )

  26809   2 001EBC  A800 0000 0000  01                   LDR,R2   IN_PKTHDR
          2 001EBF  204C                                 SOR,R2   12
          2 001EC0  A570 0003                            AND,R2   3,IMO
          2 001EC2  2D02                                 CMV,R2   2
          2 001EC3  0901 000E                            BE       s:26813,PREL
          2 001EC5  9847 003F                            LDR,R1   DATACNT,AUTO
          2 001EC7  1D06                                 CMV,R1   6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:551  
          2 001EC8  0901 0009                            BE       s:26813,PREL
          2 001ECA  1D05                                 CMV,R1   5
          2 001ECB  0901 0006                            BE       s:26813,PREL

     4560    26810    3             THEN
     4561    26811    3                PEVENT = %Y_EV_UNK_TYPE#;

  26811   2 001ECD  6C15                                 LDV,R6   21
          2 001ECE  EF47 002C                            STR,R6   PEVENT,AUTO
          2 001ED0  0F81 006F                            B        s:26868,PREL

     4562    26812    3             ELSE
     4563    26813    3                PEVENT = %Y_EV_INT#;

  26813   2 001ED2  1C11                                 LDV,R1   17
          2 001ED3  9F47 002C                            STR,R1   PEVENT,AUTO
          2 001ED5  0F81 006A                            B        s:26868,PREL

     4564    26814
     4565    26815    3          SELECT ( %Y_ID_INT_C# );

     4566    26816
     4567    26817    3          IF KX$DATA.CNT ~= %L0

  26817   2 001ED7  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 001ED9  A845 0007                            LDR,R2   7,B5
          2 001EDB  2D05                                 CMV,R2   5
          2 001EDC  0901 0006                            BE       s:26821,PREL

     4568    26818    3             THEN
     4569    26819    3                PEVENT = %Y_EV_UNK_TYPE#;

  26819   2 001EDE  1C15                                 LDV,R1   21
          2 001EDF  9F47 002C                            STR,R1   PEVENT,AUTO
          2 001EE1  0F81 005E                            B        s:26868,PREL

     4570    26820    3             ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:552  
     4571    26821    3                IF KX$L3.STATE.CURRENT = %Y_ST_DATA# AND NOT KX$L3.INTPND

  26821   2 001EE3  CCC7 0008                            LDB,B4   L3$,AUTO
          2 001EE5  92C4 0031                            LLH,R1   49,B4
          2 001EE7  1D09                                 CMV,R1   9
          2 001EE8  0981 0016                            BNE      s:26831,PREL
          2 001EEA  82C4 0029                            LB,'4000'X        41,B4
          2 001EEC       4000
          2 001EED  0501 0011                            BBT      s:26831,PREL

     4572    26822    3                   THEN
     4573    26823    4                      DO;

     4574    26824    4                         ERCOD = INV_INTC ;

  26824   2 001EEF  8C80 0000 03BC  00                   LDI      INV_INTC
          2 001EF2  8D47 0022                            SDI      ERCOD,AUTO

     4575    26825    4                         CALL Y$ER ;

  26825   2 001EF4  E3C0 09DA                            LNJ,B6   s:0,PREL
          2 001EF6       0001                            DC       s:26827,PREL

     4576    26826
     4577    26827    4                         DIAG = %KX_RST_DIAG_UIC#;

  26827   2 001EF7  6C2B                                 LDV,R6   43
          2 001EF8  EF47 002F                            STR,R6   DIAG,AUTO

     4578    26828    4                         PEVENT = %Y_EV_BAD_PRS#;

  26828   2 001EFA  5C17                                 LDV,R5   23
          2 001EFB  DF47 002C                            STR,R5   PEVENT,AUTO

     4579    26829    4                      END;

  26829   2 001EFD  0F81 0042                            B        s:26868,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:553  

     4580    26830    3                   ELSE
     4581    26831    3                      PEVENT = %Y_EV_INT_C#;

  26831   2 001EFF  6C12                                 LDV,R6   18
          2 001F00  EF47 002C                            STR,R6   PEVENT,AUTO
          2 001F02  0F81 003D                            B        s:26868,PREL

     4582    26832
     4583    26833    3          SELECT ( %Y_ID_RESET# );

     4584    26834
     4585    26835    3          IF DATACNT < %L1

  26835   2 001F04  A847 003F                            LDR,R2   DATACNT,AUTO
          2 001F06  2D06                                 CMV,R2   6
          2 001F07  0281 0008                            BGE      s:26842,PREL

     4586    26836    3             THEN
     4587    26837    4                DO;

     4588    26838    4                   PEVENT = %Y_EV_SHR_PKT#;

  26838   2 001F09  1C1A                                 LDV,R1   26
          2 001F0A  9F47 002C                            STR,R1   PEVENT,AUTO

     4589    26839    4                   RETURN;

  26839   2 001F0C  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001F0E  C3C6 0001                            LNJ,B4   1,B6

     4590    26840    4                END;
     4591    26841    3             ELSE
     4592    26842    3                PEVENT = %Y_EV_RESET#;

  26842   2 001F10  1C13                                 LDV,R1   19
          2 001F11  9F47 002C                            STR,R1   PEVENT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:554  

     4593    26843    3          KX_STATS_X25.RESETS = KX_STATS_X25.RESETS + 1;

  26843   2 001F13  8A80 0000 0041  xsym                 INC      KX_STATS_X25+65
          2 001F16  8E80 0000 0040  xsym                 CAD      KX_STATS_X25+64

     4594    26844    3          IF ( KX$L3.PVC AND DATACNT > %L0 )

  26844   2 001F19  DCC7 0008                            LDB,B5   L3$,AUTO
          2 001F1B  82C5 0029                            LB,'0100'X        41,B5
          2 001F1D       0100
          2 001F1E  0581 0021                            BBF      s:26868,PREL
          2 001F20  2D05                                 CMV,R2   5
          2 001F21  0381 001E                            BLE      s:26868,PREL

     4595    26845        /*
     4596    26846           For PVCs, we need special case handling of reset packets with cause equal to
     4597    26847           out-of-order or remote-DTE-operational.
     4598    26848        */
     4599    26849    3             THEN
     4600    26850    4                DO;

     4601    26851    4                   IF IN_PKTHDR.CAUSE = %KX_RST_CAUSE_OOO#

  26851   2 001F23  E800 0000 0001  01                   LDR,R6   IN_PKTHDR+1
          2 001F26  E570 00FF                            AND,R6   255,IMO
          2 001F28  6D01                                 CMV,R6   1
          2 001F29  0981 0006                            BNE      s:26855,PREL

     4602    26852    4                      THEN
     4603    26853    4                         PEVENT = %Y_EV_RPVCDWN#; /* remote PVC out-of-order */

  26853   2 001F2B  1C0C                                 LDV,R1   12
          2 001F2C  9F47 002C                            STR,R1   PEVENT,AUTO
          2 001F2E  0F81 0011                            B        s:26868,PREL

     4604    26854    4                      ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:555  
     4605    26855    4                         IF IN_PKTHDR.CAUSE = %KX_RST_CAUSE_RDO#

  26855   2 001F30  6D09                                 CMV,R6   9
          2 001F31  0981 000E                            BNE      s:26868,PREL

     4606    26856    4                            THEN
     4607    26857    4                               PEVENT = %Y_EV_RPVCUP#;  /* remote PVC up */

  26857   2 001F33  1C0A                                 LDV,R1   10
          2 001F34  9F47 002C                            STR,R1   PEVENT,AUTO

     4608    26858    4                END;

  26858   2 001F36  0F81 0009                            B        s:26868,PREL

     4609    26859
     4610    26860    3          SELECT ( %Y_ID_RESET_C# );

     4611    26861
     4612    26862    3          PEVENT = %Y_EV_RESET_C#;

  26862   2 001F38  2C14                                 LDV,R2   20
          2 001F39  AF47 002C                            STR,R2   PEVENT,AUTO
          2 001F3B  0F81 0004                            B        s:26868,PREL

     4613    26863
     4614    26864    3          SELECT ( ELSE );

     4615    26865    3       PEVENT = %Y_EV_UNK_TYPE#;

  26865   2 001F3D  2C15                                 LDV,R2   21
          2 001F3E  AF47 002C                            STR,R2   PEVENT,AUTO

     4616    26866
     4617    26867    3       END /* SELECT */;

     4618    26868    2   END /* SUBROUTINE */;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:556  

  26868   2 001F40  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 001F42  C3C6 0001                            LNJ,B4   1,B6

     4619    26869
     4620    26870        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:557  
     4621    26871        /*I* NAME: Y$START_L3S,  Y$STOP_L3S */
     4622    26872        /*I* PURPOSE: Report START or STOP to all the level 3s */
     4623    26873        /*I* CALL: CALL Y$? */
     4624    26874        /*I* INPUT: L2$  ->  line context block*/
     4625    26875        /*I* OUTPUT: None */
     4626    26876
     4627    26877    1   Y$START_L3S: PROC;

  26877   2 001F44  EFC7 004E            Y$START_L3S     STB,B6   TERMID+8,AUTO

     4628    26878
     4629    26879    2   DCL T$ PTR;
     4630    26880        %KX$LINKDEV ( STCLASS = "BASED(T$)" );
     4631    26907        %FPT_X25 ( FPTN = FPT_L3, STCLASS = );
     4632    26951    2   DCL EVENT UBIN;
     4633    26952        %KNH$MESS ( FPTN = KNH_MESS, STCLASS = );
     4634    27001    2   DCL 1 KV@SNDCQ ALIGNED,
     4635    27002    2         2 MSG_ (0:5),
     4636    27003    2           3 ADR$ PTR,
     4637    27004    2           3 BYTX UBIN WORD,
     4638    27005    2           3 BYTSIZ UBIN WORD;
     4639    27006        %FPT_CONNECT ( FPTN = FPT@CONNECT, ADRTYP = NET, STCLASS = );
     4640    27177        %FPT_TERM ( FPTN = FPT@TERM, STCLASS = );
     4641    27199    2   DCL TRY_SNDCQ BIT(1);
     4642    27200        %FPT_CONNECT ( FPTN = FPT_CONNECT_C, STCLASS = SYMREF );
     4643    27269        %FPT_TERM ( FPTN = FPT_TERM_C, STCLASS = SYMREF );
     4644    27291        %KV$VDH_DSC ( NAME = KV@VDH_DSC, STCLASS = AUTO );
     4645    27327        %KV$VDH_DSC ( NAME = KXX_VDH_DSC, STCLASS = SYMREF );
     4646    27363        %KV@USRENT;
     4647    27383        %KV$VDI ( STCLASS = BASED );
     4648    27454        %KV$USRPRM;
     4649    27505        %KV$STT;
     4650    27899        %KV$PTR;
     4651    27942
     4652    27943        /* Report START */
     4653    27944
     4654    27945    2       EVENT = %KX_P_EV_START#;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:558  

  27945   2 001F46  6C01                                 LDV,R6   1
          2 001F47  EF47 0062                            STR,R6   EVENT,AUTO

     4655    27946    2       IF KX$L2.DSTSNPA.LNG ~= 0

  27946   2 001F49  DCC7 000C                            LDB,B5   L2$,AUTO
          2 001F4B  D2C5 0062                            LLH,R5   98,B5
          2 001F4D  5901 003B                            BEZ,R5   s:27967,PREL

     4656    27947    2          THEN
     4657    27948    3             DO;

     4658    27949    3                IF KX$L2.TERM_ALTRET

  27949   2 001F4F  82C5 0067                            LB,'0040'X        103,B5
  27949   2 001F51       0040
          2 001F52  0581 0008                            BBF      s:27957,PREL

     4659    27950    3                   THEN
     4660    27951    4                      DO;

     4661    27952    4                         KX$L2.TERM_ALTRET = '0'B;

  27952   2 001F54  8845 0067                            LBF,'0040'X       103,B5
  27952   2 001F56       0040

     4662    27953    4                         TRY_SNDCQ = '0'B;

  27953   2 001F57  8747 00B4                            CL       TRY_SNDCQ,AUTO

     4663    27954    4                      END;

  27954   2 001F59  0F81 0031                            B        s:27971,PREL

     4664    27955    3                   ELSE
     4665    27956    4                      DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:559  

     4666    27957    4                         FPT@CONNECT = FPT_CONNECT_C;

  27957   2 001F5B  CB80 0000 0000  xsym                 LAB,B4   FPT_CONNECT_C
          2 001F5E  4C26                                 LDV,R4   38
          2 001F5F  5C5A                                 LDV,R5   90
          2 001F60  0021                                 ALR      ;
          2 001F61       4004 0000                                ALPHANUM(0,B4,,R4),;
          2 001F63       4007 0083                                ALPHANUM(FPT@CONNECT,AUTO,,R5,FILL)

     4667    27958    4                         FPT@CONNECT.RLCID.FLAGS.VIRCIR = '0'B;

  27958   2 001F65  437F                                 CSYNC    s:27957+9,SPREL
          2 001F66  8847 0091                            LBF,'4000'X       FPT@CONNECT+14,AUTO
          2 001F68       4000

     4668    27959    4                         FPT@CONNECT.RLCID.NODE = %K_CNC_LINK#;

  27959   2 001F69  8947 0090                            LBT,'FF00'X       FPT@CONNECT+13,AUTO
  27959   2 001F6B       FF00

     4669    27960    4                         FPT@CONNECT.DSTSNPA = KX$L2.DSTSNPA;

  27960   2 001F6C  ABC5 0062                            LAB,B2   98,B5
          2 001F6E  2C00                                 LDV,R2   0
          2 001F6F  6C08                                 LDV,R6   8
          2 001F70  BBC7 00AC                            LAB,B3   FPT@CONNECT+41,AUTO
          2 001F72  3C00                                 LDV,R3   0
          2 001F73  0008                                 MMM

     4670    27961    4                         FPT@CONNECT.SERVICE = KX$L2.QOS;

  27961   2 001F74  ECC7 000C                            LDB,B6   L2$,AUTO
          2 001F76  E2C6 0067                            LLH,R6   103,B6
          2 001F78  EAC7 0093                            SRM,R6,'00FF'X    FPT@CONNECT+16,AUTO
          2 001F7A       00FF

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:560  
     4671    27962    4                         FPT@CONNECT.TERMINAL_ID = KX$L2.CHN$->KH$CHN.TERMID;

  27962   2 001F7B  DCC6 0002                            LDB,B5   2,B6
          2 001F7D  AB85                                 LAB,B2   ,B5
          2 001F7E  2C24                                 LDV,R2   36
          2 001F7F  6C10                                 LDV,R6   16
          2 001F80  BBC7 0088                            LAB,B3   FPT@CONNECT+5,AUTO
          2 001F82  3C00                                 LDV,R3   0
          2 001F83  0008                                 MMM

     4672    27963    4                         TRY_SNDCQ = '1'B;

  27963   2 001F84  8947 00B4                            LBT,'8000'X       TRY_SNDCQ,AUTO
  27963   2 001F86       8000

     4673    27964    4                      END;

     4674    27965    3             END;

  27965   2 001F87  0F81 0003                            B        s:27971,PREL

     4675    27966    2          ELSE
     4676    27967    2             TRY_SNDCQ = '0'B;

  27967   2 001F89  8747 00B4                            CL       TRY_SNDCQ,AUTO

     4677    27968        /*
     4678    27969           Try to log on all LINKDEVs
     4679    27970        */
     4680    27971    2       T$ = KX$L2.DVC_HEAD$;

  27971   2 001F8B  ECC7 000C                            LDB,B6   L2$,AUTO
          2 001F8D  DCC6 0068                            LDB,B5   104,B6
          2 001F8F  DFC7 0050                            STB,B5   T$,AUTO

     4681    27972    3       DO WHILE ( T$ ~= ADDR(NIL) );

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:561  
  27972   2 001F91  0F81 0024                            B        s:27985,PREL

     4682    27973    3          IF KX$LINKDEV.VDI$ = ADDR(NIL)

  27973   2 001F93  ECC7 0050                            LDB,B6   T$,AUTO
          2 001F95  8DC6 0002                            CMN      2,B6
          2 001F97  0981 0015                            BNE      s:27983,PREL

     4683    27974    3             THEN
     4684    27975    4                DO;

     4685    27976    4                   CALL KXX$INTCNC ( KX$LINKDEV ) WHENALTRETURN

  27976   2 001F99  BBC7 0050                            LAB,B3   T$,AUTO
          2 001F9B  CBF0 0100                            LAB,B4   256,IMO
          2 001F9D  E380 0000 0000  xent                 LNJ,B6   KXX$INTCNC
          2 001FA0       0003                            DC       s:27978,PREL
          2 001FA1  0F81 0009                            B        s:27981,PREL

     4686    27977    5                         DO;

     4687    27978    5                            ERCOD = DEVLGNFAL;

  27978   2 001FA3  8C80 0000 03A4  00                   LDI      DEVLGNFAL
          2 001FA6  8D47 0022                            SDI      ERCOD,AUTO

     4688    27979    5                            CALL Y$ER;

  27979   2 001FA8  E3C0 0926                            LNJ,B6   s:0,PREL
          2 001FAA       0001                            DC       s:27981,PREL

     4689    27980    5                         END;

     4690    27981    4                END;

  27981   2 001FAB  0F81 0004                            B        s:27984,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:562  
     4691    27982    3             ELSE
     4692    27983    3                KX$LINKDEV.RECNC = '1'B; /* assume it's doing disconnect */

  27983   2 001FAD  8946 0017                            LBT,'0008'X       23,B6
  27983   2 001FAF       0008

     4693    27984    3          T$ = KX$LINKDEV.FLNK$;

  27984   2 001FB0  ECC7 0050                            LDB,B6   T$,AUTO
          2 001FB2  DCC6 0006                            LDB,B5   6,B6
          2 001FB4  DFC7 0050                            STB,B5   T$,AUTO

     4694    27985    3       END;

  27985   2 001FB6  8DC7 0050                            CMN      T$,AUTO
          2 001FB8  09DB                                 BNE      s:27973,SPREL

     4695    27986
     4696    27987    2       GOTO SUBCOMMON;

  27987   2 001FB9  0F81 009B                            B        s:28055,PREL

     4697    27988
     4698    27989
     4699    27990    2   Y$DIED_L3S: ENTRY;

  27990   2 001FBB  EFC7 004E            Y$DIED_L3S      STB,B6   TERMID+8,AUTO

     4700    27991
     4701    27992    2       EVENT = %KX_P_EV_DIED#;

  27992   2 001FBD  6C03                                 LDV,R6   3
          2 001FBE  EF47 0062                            STR,R6   EVENT,AUTO

     4702    27993    2       GOTO L_DIED;

  27993   2 001FC0  0F81 0006                            B        s:28001,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:563  

     4703    27994
     4704    27995    2   Y$STOP_L3S: ENTRY;

  27995   2 001FC2  EFC7 004E            Y$STOP_L3S      STB,B6   TERMID+8,AUTO

     4705    27996
     4706    27997        /* Report STOP */
     4707    27998
     4708    27999    2       EVENT = %KX_P_EV_STOP#;

  27999   2 001FC4  6C02                                 LDV,R6   2
          2 001FC5  EF47 0062                            STR,R6   EVENT,AUTO

     4709    28000    2   L_DIED:
     4710    28001    2       IF KX$L2.LDCTX ~= 0

  28001   2 001FC7  DCC7 000C            L_DIED          LDB,B5   L2$,AUTO
          2 001FC9  D845 0066                            LDR,R5   102,B5
          2 001FCB  5901 0021                            BEZ,R5   s:28018,PREL

     4711    28002    2          THEN
     4712    28003    3             DO;

     4713    28004    3                IF KX$L2.INIT_ALTRET

  28004   2 001FCD  82C5 0067                            LB,'0080'X        103,B5
  28004   2 001FCF       0080
          2 001FD0  0581 0008                            BBF      s:28012,PREL

     4714    28005    3                   THEN
     4715    28006    4                      DO;

     4716    28007    4                         KX$L2.INIT_ALTRET = '0'B;

  28007   2 001FD2  8845 0067                            LBF,'0080'X       103,B5
  28007   2 001FD4       0080
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:564  

     4717    28008    4                         TRY_SNDCQ = '0'B;

  28008   2 001FD5  8747 00B4                            CL       TRY_SNDCQ,AUTO

     4718    28009    4                      END;

  28009   2 001FD7  0F81 0017                            B        s:28022,PREL

     4719    28010    3                   ELSE
     4720    28011    4                      DO;

     4721    28012    4                         FPT@TERM = FPT_TERM_C;

  28012   2 001FD9  AB80 0000 0000  xsym                 LAB,B2   FPT_TERM_C
          2 001FDC  2C00                                 LDV,R2   0
          2 001FDD  6C08                                 LDV,R6   8
          2 001FDE  BBC7 00B0                            LAB,B3   FPT@TERM,AUTO
          2 001FE0  3C00                                 LDV,R3   0
          2 001FE1  0008                                 MMM

     4722    28013    4                         FPT@TERM.RLCID.LDCTX = KX$L2.LDCTX;

  28013   2 001FE2  ECC7 000C                            LDB,B6   L2$,AUTO
          2 001FE4  E846 0066                            LDR,R6   102,B6
          2 001FE6  EF47 00B1                            STR,R6   FPT@TERM+1,AUTO

     4723    28014    4                         TRY_SNDCQ = '1'B;

  28014   2 001FE8  8947 00B4                            LBT,'8000'X       TRY_SNDCQ,AUTO
  28014   2 001FEA       8000

     4724    28015    4                      END;

     4725    28016    3             END;

  28016   2 001FEB  0F81 0003                            B        s:28022,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:565  

     4726    28017    2          ELSE
     4727    28018    2             TRY_SNDCQ = '0'B;

  28018   2 001FED  8747 00B4                            CL       TRY_SNDCQ,AUTO

     4728    28019        /*
     4729    28020           Log off all LINKDEVs
     4730    28021        */
     4731    28022    2       T$ = KX$L2.DVC_HEAD$;

  28022   2 001FEF  ECC7 000C                            LDB,B6   L2$,AUTO
          2 001FF1  DCC6 0068                            LDB,B5   104,B6
          2 001FF3  DFC7 0050                            STB,B5   T$,AUTO

     4732    28023    2       KV@VDH_DSC = KXX_VDH_DSC;

  28023   2 001FF5  8C80 0000 0000  xsym                 LDI      KXX_VDH_DSC
          2 001FF8  8D47 00B5                            SDI      KV@VDH_DSC,AUTO

     4733    28024    3       DO WHILE ( T$ ~= ADDR(NIL) );

  28024   2 001FFA  0F81 0056                            B        s:28068,PREL

     4734    28025    3          IF KX$LINKDEV.VDI$ ~= ADDR(NIL)

  28025   2 001FFC  ECC7 0050                            LDB,B6   T$,AUTO
          2 001FFE  8DC6 0002                            CMN      2,B6
          2 002000  0901 004A                            BE       s:28066,PREL

     4735    28026    3             THEN
     4736    28027    4                DO;

     4737    28028                        %KV$USRENT ( VDI$ = KX$LINKDEV.VDI$, DFR$ = L_DFR,
     4738    28029                        SCHRSN = %KV_SCHRSN_DFR3 );
             28042    4           KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT =
             28042                    KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTCNT + 1;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:566  

  28042   2 002002  DCC6 0002                            LDB,B5   2,B6
          2 002004  CCC5 0008                            LDB,B4   8,B5
          2 002006  BCC4 0033                            LDB,B3   51,B4
          2 002008  8AC3 0039                            INC      57,B3
          2 00200A  8EC3 0038                            CAD      56,B3

             28043    5           IF NOT KX$LINKDEV.VDI$->KV$VDI.BSY THEN DO;

  28043   2 00200C  DCC6 0002                            LDB,B5   2,B6
          2 00200E  82C5 0019                            LB,'0080'X        25,B5
          2 002010       0080
          2 002011  0501 0012                            BBT      s:28049,PREL

             28044    5              KX$LINKDEV.VDI$->KV$VDI.BSY = '1'B;

  28044   2 002013  8945 0019                            LBT,'0080'X       25,B5
  28044   2 002015       0080

             28045    5              KV@USRENT.SVDPTR$ = KV$PTR$;

  28045   2 002016  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 002019  DFC7 00B7                            STB,B5   KV@USRENT,AUTO

             28046    5              KV$PTR$ = KX$LINKDEV.VDI$->KV$VDI.ASNINPPTR$;

  28046   2 00201B  CCC6 0002                            LDB,B4   2,B6
          2 00201D  BCC4 0006                            LDB,B3   6,B4
          2 00201F  BF80 0000 0000  xsym                 STB,B3   KV$PTR$

             28047    5              END;                         /* ELSE IF ~BSY                       */

  28047   2 002022  0F81 0010                            B        s:28055,PREL

             28048    5           ELSE DO;

             28049    5              KX$LINKDEV.VDI$->KV$VDI.DFR.USR(3) = '1'B;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:567  

  28049   2 002024  8945 0018                            LBT,'1000'X       24,B5
  28049   2 002026       1000

             28050    5           KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT =
             28050                   KX$LINKDEV.VDI$->KV$VDI.USRPRM$->KV$USRPRM.STT$->KV$STT.USRENTDFRCNT + 1
             28050                    ;

  28050   2 002027  DCC6 0002                            LDB,B5   2,B6
          2 002029  CCC5 0008                            LDB,B4   8,B5
          2 00202B  BCC4 0033                            LDB,B3   51,B4
          2 00202D  8AC3 003B                            INC      59,B3
          2 00202F  8EC3 003A                            CAD      58,B3

             28051    5              GOTO L_DFR;

  28051   2 002031  0F81 0019                            B        s:28066,PREL

             28052    5              END;                         /* END IF                             */
     4739    28055    4                   CALL KVV$VDI ( KV@VDH_DSC );

  28055   2 002033  ABC7 00B5                            LAB,B2   KV@VDH_DSC,AUTO
          2 002035  AFC7 00BC                            STB,B2   KV@USRENT+5,AUTO
          2 002037  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 002039  CBF0 0100                            LAB,B4   256,IMO
          2 00203B  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00203E       0001                            DC       s:28062,PREL

     4740    28056                        %KV$USREXT ( VDI$ = KX$LINKDEV.VDI$ );
             28062    4           KV$PTR.VDI$->KV$VDI.BSY = '0'B;

  28062   2 00203F  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 002042  DC86                                 LDB,B5   ,B6
          2 002043  8845 0019                            LBF,'0080'X       25,B5
          2 002045       0080

             28064    4           KV$PTR$ = KV@USRENT.SVDPTR$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:568  

  28064   2 002046  DCC7 00B7                            LDB,B5   KV@USRENT,AUTO
          2 002048  DF80 0000 0000  xsym                 STB,B5   KV$PTR$

     4741    28066    4                END;

     4742    28067    3   L_DFR: T$ = KX$LINKDEV.FLNK$;

  28067   2 00204B  ECC7 0050            L_DFR           LDB,B6   T$,AUTO
          2 00204D  DCC6 0006                            LDB,B5   6,B6
          2 00204F  DFC7 0050                            STB,B5   T$,AUTO

     4743    28068    3       END;

  28068   2 002051  8DC7 0050                            CMN      T$,AUTO
          2 002053  0981 FFA8                            BNE      s:28025,PREL

  28055   2                              SUBCOMMON       null
     4744    28069
     4745    28070    2   SUBCOMMON: ;                            /* THERE MUST BE AN ALTENTRY ABOVE ME */
     4746    28071
     4747    28072    2       IF TRY_SNDCQ

  28072   2 002055  89C7 00B4            SUBCOMMON       CMZ      TRY_SNDCQ,AUTO
          2 002057  0881 0066                            BAGE     s:28111,PREL

     4748    28073    2          THEN
     4749    28074    3             DO;

     4750    28075    3                KNH_MESS = '0'B;

  28075   2 002059  5C10                                 LDV,R5   16
          2 00205A  0021                                 ALR      ;
          2 00205B       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00205D       4007 0063                                ALPHANUM(KNH_MESS,AUTO,,R5,FILL)

     4751    28076    3                KNH_MESS.LDCTX = KX$L2.LDCTX;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:569  

  28076   2 00205F  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002061  437F                                 CSYNC    s:28076+1,SPREL
          2 002062  E846 0066                            LDR,R6   102,B6
          2 002064  EF47 0064                            STR,R6   KNH_MESS+1,AUTO

     4752    28077    3                KNH_MESS.UID$ = L2$;

  28077   2 002066  EFC7 0065                            STB,B6   KNH_MESS+2,AUTO

     4753    28078    3                KNH_MESS.UIDX.CQ_HNDID = %KV#CQ_HNDID_SL;

  28078   2 002068  4C01                                 LDV,R4   1
          2 002069  C7C7 0065                            STH,R4   KNH_MESS+2,AUTO

     4754    28079    3                KV@SNDCQ = '0'B;

  28079   2 00206B  5C30                                 LDV,R5   48
          2 00206C  0021                                 ALR      ;
          2 00206D       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00206F       4007 006B                                ALPHANUM(KV@SNDCQ,AUTO,,R5,FILL)

     4755    28080    3                KV@SNDCQ.MSG_.ADR$ (0) = ADDR ( KNH_MESS );

  28080   2 002071  CBC7 0063                            LAB,B4   KNH_MESS,AUTO
          2 002073  437F                                 CSYNC    s:28080+1,SPREL
          2 002074  CFC7 006B                            STB,B4   KV@SNDCQ,AUTO

     4756    28081    3                KV@SNDCQ.MSG_.BYTSIZ (0) = ( LENGTHC (KNH_MESS) + 3 ) / 4 * 4;

  28081   2 002076  3C10                                 LDV,R3   16
          2 002077  BF47 006E                            STR,R3   KV@SNDCQ+3,AUTO

     4757    28082    3                IF EVENT = %KX_P_EV_START#

  28082   2 002079  A847 0062                            LDR,R2   EVENT,AUTO
          2 00207B  2D01                                 CMV,R2   1
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:570  
          2 00207C  0981 000F                            BNE      s:28092,PREL

     4758    28083    3                   THEN
     4759    28084    4                      DO;

     4760    28085    4                         KNH_MESS.FUNCTION = %KN_FCN_INIT;

  28085   2 00207E  CF47 0063                            STR,R4   KNH_MESS,AUTO

     4761    28086    4                         KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@CONNECT );

  28086   2 002080  1C5A                                 LDV,R1   90
          2 002081  9F47 0069                            STR,R1   KNH_MESS+6,AUTO

     4762    28087    4                         KV@SNDCQ.MSG_.ADR$ (1) = ADDR(FPT@CONNECT);

  28087   2 002083  BBC7 0083                            LAB,B3   FPT@CONNECT,AUTO
          2 002085  BFC7 006F                            STB,B3   KV@SNDCQ+4,AUTO

     4763    28088    4                         KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@CONNECT)+3 )/4*4;

  28088   2 002087  6C5C                                 LDV,R6   92
          2 002088  EF47 0072                            STR,R6   KV@SNDCQ+7,AUTO

     4764    28089    4                      END;

  28089   2 00208A  0F81 0010                            B        s:28098,PREL

     4765    28090    3                   ELSE
     4766    28091    4                      DO;

     4767    28092    4                         KNH_MESS.FUNCTION = %KN_FCN_TERM;

  28092   2 00208C  1C03                                 LDV,R1   3
          2 00208D  9F47 0063                            STR,R1   KNH_MESS,AUTO

     4768    28093    4                         KNH_MESS.FPTSZ = 2 * SIZEW ( FPT@TERM );
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:571  

  28093   2 00208F  6C08                                 LDV,R6   8
          2 002090  EF47 0069                            STR,R6   KNH_MESS+6,AUTO

     4769    28094    4                         KV@SNDCQ.MSG_.ADR$ (1) = ADDR( FPT@TERM );

  28094   2 002092  BBC7 00B0                            LAB,B3   FPT@TERM,AUTO
          2 002094  BFC7 006F                            STB,B3   KV@SNDCQ+4,AUTO

     4770    28095    4                         KV@SNDCQ.MSG_.BYTSIZ (1) = ( LENGTHC(FPT@TERM)+3 )/4*4;

  28095   2 002096  EF47 0072                            STR,R6   KV@SNDCQ+7,AUTO

     4771    28096    4                         KX$L2.TERMACKPND = '1'B;

  28096   2 002098  8946 0067                            LBT,'0020'X       103,B6
  28096   2 00209A       0020

     4772    28097    4                      END;

     4773    28098    3                CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN

  28098   2 00209B  CBC7 006B                            LAB,B4   KV@SNDCQ,AUTO
          2 00209D  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 00209F  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0020A1  CBF0 0100                            LAB,B4   256,IMO
          2 0020A3  E380 0000 0000  xent                 LNJ,B6   KVM$SNDCQ
          2 0020A6       0007                            DC       s:28104,PREL

     4774    28099    4                      DO;

     4775    28100    4                         KX$L2.LDCTX = 0;

  28100   2 0020A7  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0020A9  8746 0066                            CL       102,B6

     4776    28101    4                      END;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:572  

  28101   2 0020AB  0F81 0012                            B        s:28111,PREL

     4777    28102    3                   WHENALTRETURN
     4778    28103    4                      DO;

     4779    28104    4                         IF EVENT = %KX_P_EV_START#

  28104   2 0020AD  E847 0062                            LDR,R6   EVENT,AUTO
          2 0020AF  6D01                                 CMV,R6   1
          2 0020B0  0981 0008                            BNE      s:28108,PREL

     4780    28105    4                            THEN
     4781    28106    4                               KX$L2.INIT_ALTRET = '1'B;

  28106   2 0020B2  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0020B4  8946 0067                            LBT,'0080'X       103,B6
          2 0020B6       0080
          2 0020B7  0F81 0006                            B        s:28111,PREL

     4782    28107    4                            ELSE
     4783    28108    4                               KX$L2.TERM_ALTRET = '1'B;

  28108   2 0020B9  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0020BB  8946 0067                            LBT,'0040'X       103,B6
          2 0020BD       0040

     4784    28109    4                      END;

     4785    28110    3             END;

     4786    28111    2       FPT_L3 = '0'B;

  28111   2 0020BE  5C20                                 LDV,R5   32
          2 0020BF  0021                                 ALR      ;
          2 0020C0       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0020C2       4007 0052                                ALPHANUM(FPT_L3,AUTO,,R5,FILL)
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:573  

     4787    28112    2       FPT_L3.EVN = EVENT;

  28112   2 0020C4  437F                                 CSYNC    s:28111+5,SPREL
          2 0020C5  E847 0062                            LDR,R6   EVENT,AUTO
          2 0020C7  EF47 0052                            STR,R6   FPT_L3,AUTO

     4788    28113
     4789    28114    2       L3$ = KX$L2.L3_HEAD$;

  28114   2 0020C9  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0020CB  DCC6 0034                            LDB,B5   52,B6
          2 0020CD  DFC7 0008                            STB,B5   L3$,AUTO

     4790    28115
     4791    28116        /* Loop thru all the level 3s */
     4792    28117
     4793    28118    3       DO WHILE ( L3$ ~= ADDR(NIL) );

  28118   2 0020CF  0F81 0013                            B        s:28126,PREL

     4794    28119
     4795    28120        /* Call this level 3 */
     4796    28121
     4797    28122    3          FPT_L3.RCV$ = L3$;

  28122   2 0020D1  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0020D3  EFC7 0055                            STB,B6   FCLID,AUTO

     4798    28123    3          L3$ = KX$L3.NEXT$;

  28123   2 0020D5  DC86                                 LDB,B5   ,B6
          2 0020D6  DFC7 0008                            STB,B5   L3$,AUTO

     4799    28124    3          CALL KXP$PACKET ( FPT_L3 );

  28124   2 0020D8  CBC7 0052                            LAB,B4   FPT_L3,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:574  
          2 0020DA  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 0020DC  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0020DE  CBF0 0100                            LAB,B4   256,IMO
          2 0020E0  E3C0 DF1F                            LNJ,B6   s:13,PREL
          2 0020E2       0001                            DC       s:28126,PREL

     4800    28125
     4801    28126    3       END /* LOOP */;

  28126   2 0020E3  8DC7 0008                            CMN      L3$,AUTO
          2 0020E5  09EC                                 BNE      s:28122,SPREL

     4802    28127
     4803    28128    2   END /* SUBROUTINE */;

  28128   2 0020E6  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0020E8  C3C6 0001                            LNJ,B4   1,B6

     4804    28129
     4805    28130        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:575  
     4806    28131        /*I* NAME: Y$STUFF_FACILITIES
     4807    28132             PURPOSE: To insert the facilities into a Call or
     4808    28133                      Call Confirmation packet
     4809    28134             CALL: CALL Y$STUFF_FACILITIES
     4810    28135             INPUT: BYTE_ARRAY buffer
     4811    28136                    BYTE_INDEX for the starting index
     4812    28137             OUTPUT: Updated BYTE_ARRAY buffer
     4813    28138                     BYTE_INDEX is the index for the next byte   */
     4814    28139
     4815    28140    1   Y$STUFF_FACILITIES: PROC;

  28140   2 0020EA  EFC7 0054            Y$STUFF_FACILIT*STB,B6   FCLLNG,AUTO

     4816    28141
     4817    28142    2   DCL FACILITY_LENGTH_INDEX UBIN;
     4818    28143    2   DCL BFRC CHAR(66) AUTO ;
     4819    28144    2   DCL BFRU(0:65) REDEF BFRC UBIN BYTE CALIGNED ;
     4820    28145    2   DCL CHRBSD CHAR(FACILITY_LENGTH_INDEX) BASED CALIGNED ;
     4821    28146
     4822    28147    2       FACILITY_LENGTH_INDEX = 0 ;

  28147   2 0020EC  8747 0056                            CL       FACILITY_LENGTH_INDEX,AUTO

     4823    28148        /*
     4824    28149                                             Sending packet and window sizes ?
     4825    28150        */
     4826    28151    2       IF (KX$L3.PCKNGT OR SENDING_CALL) AND KX$L3.FSTSLC ~= %KX_FSTSLC_RST#

  28151   2 0020EE  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0020F0  82C5 0076                            LB,'0010'X        118,B5
          2 0020F2       0010
          2 0020F3  0501 0005                            BBT      s:28151+11,PREL
          2 0020F5  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 0020F7  0881 0041                            BAGE     s:28172,PREL
          2 0020F9  E845 0029                            LDR,R6   41,B5
          2 0020FB  6046                                 SOR,R6   6
          2 0020FC  E570 0003                            AND,R6   3,IMO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:576  
          2 0020FE  6D03                                 CMV,R6   3
          2 0020FF  0901 0039                            BE       s:28172,PREL

     4827    28152    2          THEN
     4828    28153    3             DO;

     4829    28154    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_PCKSIZ# ;

  28154   2 002101  5C42                                 LDV,R5   66
          2 002102  CBC7 0057                            LAB,B4   BFRC,AUTO
          2 002104  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 002106  3E01                                 ADV,R3   1
          2 002107  D7B4                                 STH,R5   ,B4,R3

     4830    28155    3                IF SENDING_CALL

  28155   2 002108  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 00210A  0881 0017                            BAGE     s:28165,PREL

     4831    28156    3                   THEN
     4832    28157    4                      DO;

     4833    28158    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX_BUF.LOGSIZ(

  28158   2 00210C  A2C5 0014                            LLH,R2   20,B5
          2 00210E  E820 0000 0024  xsym                 LDR,R6   KX_BUF+36,R2
          2 002111  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002113  9847 0056                            LDR,R1   FACILITY_LENGTH_INDEX,AUTO
          2 002115  E796                                 STH,R6   ,B6,R1

     4834    28159    4                            KX$L3.CALL_OPTS.RCVPCKSIZ);
     4835    28160    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX_BUF.LOGSIZ(

  28160   2 002116  A845 0015                            LDR,R2   21,B5
          2 002118  A570 00FF                            AND,R2   255,IMO
          2 00211A  E820 0000 0024  xsym                 LDR,R6   KX_BUF+36,R2
          2 00211D  EBC7 0058                            LAB,B6   BFRC+1,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:577  
          2 00211F  E7B6                                 STH,R6   ,B6,R3

     4836    28161    4                            KX$L3.CALL_OPTS.SNDPCKSIZ);
     4837    28162    4                      END;

  28162   2 002120  0F81 0015                            B        s:28170,PREL

     4838    28163    3                   ELSE
     4839    28164    4                      DO;

     4840    28165    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX_BUF.LOGSIZ(

  28165   2 002122  A2C5 0014                            LLH,R2   20,B5
          2 002124  E820 0000 0024  xsym                 LDR,R6   KX_BUF+36,R2
          2 002127  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002129  E7B6                                 STH,R6   ,B6,R3

     4841    28166    4                            KX$L3.CALL_OPTS.RCVPCKSIZ);
     4842    28167    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX_BUF.LOGSIZ(

  28167   2 00212A  A845 0015                            LDR,R2   21,B5
          2 00212C  A570 00FF                            AND,R2   255,IMO
          2 00212E  E820 0000 0024  xsym                 LDR,R6   KX_BUF+36,R2
          2 002131  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002133  9847 0056                            LDR,R1   FACILITY_LENGTH_INDEX,AUTO
          2 002135  E796                                 STH,R6   ,B6,R1

     4843    28168    4                            KX$L3.CALL_OPTS.SNDPCKSIZ);
     4844    28169    4                      END;

     4845    28170    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 3;

  28170   2 002136  1E03                                 ADV,R1   3
          2 002137  9F47 0056                            STR,R1   FACILITY_LENGTH_INDEX,AUTO

     4846    28171    3             END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:578  
     4847    28172    2       IF (KX$L3.WNDNGT OR SENDING_CALL) AND KX$L3.FSTSLC ~= %KX_FSTSLC_RST#

  28172   2 002139  82C5 0076                            LB,'0020'X        118,B5
  28172   2 00213B       0020
          2 00213C  0501 0005                            BBT      s:28172+9,PREL
          2 00213E  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 002140  0881 0035                            BAGE     s:28194,PREL
          2 002142  E845 0029                            LDR,R6   41,B5
          2 002144  6046                                 SOR,R6   6
          2 002145  E570 0003                            AND,R6   3,IMO
          2 002147  6D03                                 CMV,R6   3
          2 002148  0901 002D                            BE       s:28194,PREL

     4848    28173    2          THEN
     4849    28174    3             DO;

     4850    28175    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_WNDSIZ# ;

  28175   2 00214A  5C43                                 LDV,R5   67
          2 00214B  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 00214D  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 00214F  3E01                                 ADV,R3   1
          2 002150  D7B6                                 STH,R5   ,B6,R3

     4851    28176    3                IF SENDING_CALL

  28176   2 002151  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 002153  0881 0011                            BAGE     s:28184,PREL

     4852    28177    3                   THEN
     4853    28178    4                      DO;

     4854    28179    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.RCVWND;

  28179   2 002155  E2C5 0015                            LLH,R6   21,B5
          2 002157  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002159  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:579  
          2 00215B  E7A6                                 STH,R6   ,B6,R2

     4855    28180    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.CALL_OPTS.SNDWND;

  28180   2 00215C  E845 0016                            LDR,R6   22,B5
          2 00215E  E570 00FF                            AND,R6   255,IMO
          2 002160  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002162  E7B6                                 STH,R6   ,B6,R3

     4856    28181    4                      END;

  28181   2 002163  0F81 000F                            B        s:28187,PREL

     4857    28182    3                   ELSE
     4858    28183    4                      DO;

     4859    28184    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.CALL_OPTS.RCVWND;

  28184   2 002165  E2C5 0015                            LLH,R6   21,B5
          2 002167  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002169  E7B6                                 STH,R6   ,B6,R3

     4860    28185    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.SNDWND;

  28185   2 00216A  E845 0016                            LDR,R6   22,B5
          2 00216C  E570 00FF                            AND,R6   255,IMO
          2 00216E  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002170  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 002172  E7A6                                 STH,R6   ,B6,R2

     4861    28186    4                      END;

     4862    28187    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 3;

  28187   2 002173  2E03                                 ADV,R2   3
          2 002174  AF47 0056                            STR,R2   FACILITY_LENGTH_INDEX,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:580  
     4863    28188    3             END;

     4864    28189        /*
     4865    28190                                             Throughput class is only sent
     4866    28191                                             if something special was
     4867    28192                                             specified.
     4868    28193        */
     4869    28194    2       IF KX$L3.CALL_OPTS.SNDTHR ~= %KLX25_THR_NONE#

  28194   2 002176  E2C5 0016                            LLH,R6   22,B5
          2 002178  6901 002B                            BEZ,R6   s:28215,PREL

     4870    28195    2          THEN
     4871    28196    3             DO;

     4872    28197    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_THRCLS# ;

  28197   2 00217A  5C02                                 LDV,R5   2
          2 00217B  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 00217D  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 00217F  3E01                                 ADV,R3   1
          2 002180  D7B6                                 STH,R5   ,B6,R3

     4873    28198    3                IF SENDING_CALL

  28198   2 002181  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 002183  0881 0010                            BAGE     s:28206,PREL

     4874    28199    3                   THEN
     4875    28200    4                      DO;

     4876    28201    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.RCVTHR * 16

  28201   2 002185  E845 0014                            LDR,R6   20,B5
          2 002187  6004                                 SOL,R6   4
          2 002188  E570 0FF0                            AND,R6   4080,IMO
          2 00218A  C2C5 0016                            LLH,R4   22,B5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:581  
          2 00218C  EA54                                 ADD,R6   R4
          2 00218D  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 00218F  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 002191  E7A6                                 STH,R6   ,B6,R2

     4877    28202    4                            + KX$L3.CALL_OPTS.SNDTHR ;
     4878    28203    4                      END;

  28203   2 002192  0F81 000E                            B        s:28209,PREL

     4879    28204    3                   ELSE
     4880    28205    4                      DO;

     4881    28206    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CALL_OPTS.SNDTHR * 16

  28206   2 002194  E2C5 0016                            LLH,R6   22,B5
          2 002196  6004                                 SOL,R6   4
          2 002197  C845 0014                            LDR,R4   20,B5
          2 002199  C570 00FF                            AND,R4   255,IMO
          2 00219B  EA54                                 ADD,R6   R4
          2 00219C  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 00219E  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 0021A0  E7A6                                 STH,R6   ,B6,R2

     4882    28207    4                            + KX$L3.CALL_OPTS.RCVTHR ;
     4883    28208    4                      END;

     4884    28209    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 2;

  28209   2 0021A1  2E02                                 ADV,R2   2
          2 0021A2  AF47 0056                            STR,R2   FACILITY_LENGTH_INDEX,AUTO

     4885    28210    3             END;

     4886    28211        /*
     4887    28212                                             If sending a call, check for CUG, reverse
     4888    28213                                             charging, fast select and transit delay.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:582  
     4889    28214        */
     4890    28215    2       IF SENDING_CALL

  28215   2 0021A4  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 0021A6  0881 0080                            BAGE     s:28256,PREL

     4891    28216    2          THEN
     4892    28217    3             DO;

     4893    28218        /*
     4894    28219                                             Insert Closed User Group if
     4895    28220                                             one was specified.
     4896    28221        */
     4897    28222    3                IF KX$L3.CUGLNG = 1

  28222   2 0021A8  E845 0029                            LDR,R6   41,B5
          2 0021AA  6042                                 SOR,R6   2
          2 0021AB  E570 0003                            AND,R6   3,IMO
          2 0021AD  6D01                                 CMV,R6   1
          2 0021AE  0981 0013                            BNE      s:28229,PREL

     4898    28223    3                   THEN
     4899    28224    4                      DO;

     4900    28225    4                         BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_CUG# ;

  28225   2 0021B0  5C03                                 LDV,R5   3
          2 0021B1  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 0021B3  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 0021B5  3E01                                 ADV,R3   1
          2 0021B6  D7B6                                 STH,R5   ,B6,R3

     4901    28226    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CUG_BCD.BCDPAIR2;

  28226   2 0021B7  E845 002B                            LDR,R6   43,B5
          2 0021B9  E570 00FF                            AND,R6   255,IMO
          2 0021BB  EBC7 0058                            LAB,B6   BFRC+1,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:583  
          2 0021BD  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 0021BF  E7A6                                 STH,R6   ,B6,R2

     4902    28227    4                      END;

  28227   2 0021C0  0F81 0019                            B        s:28236,PREL

     4903    28228    3                   ELSE
     4904    28229    3                      IF KX$L3.CUGLNG = 2

  28229   2 0021C2  6D02                                 CMV,R6   2
          2 0021C3  0981 0016                            BNE      s:28236,PREL

     4905    28230    3                         THEN
     4906    28231    4                            DO;

     4907    28232    4                               BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_CUG_EXT#;

  28232   2 0021C5  5C47                                 LDV,R5   71
          2 0021C6  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 0021C8  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 0021CA  3E01                                 ADV,R3   1
          2 0021CB  D7B6                                 STH,R5   ,B6,R3

     4908    28233    4                               BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.CUG_BCD.BCDPAIR1;

  28233   2 0021CC  E2C5 002B                            LLH,R6   43,B5
          2 0021CE  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 0021D0  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 0021D2  E7A6                                 STH,R6   ,B6,R2

     4909    28234    4                               BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.CUG_BCD.BCDPAIR2;

  28234   2 0021D3  E845 002B                            LDR,R6   43,B5
          2 0021D5  E570 00FF                            AND,R6   255,IMO
          2 0021D7  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 0021D9  E7B6                                 STH,R6   ,B6,R3
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:584  

     4910    28235    4                            END;

     4911    28236    3                IF KX$L3.CUGLNG > 0

  28236   2 0021DA  82C5 0029                            LB,'000C'X        41,B5
  28236   2 0021DC       000C
          2 0021DD  0581 000B                            BBF      s:28239,PREL

     4912    28237    3                   THEN
     4913    28238    3                     FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 1 + KX$L3.CUGLNG;

  28238   2 0021DF  E845 0029                            LDR,R6   41,B5
          2 0021E1  6042                                 SOR,R6   2
          2 0021E2  E570 0003                            AND,R6   3,IMO
          2 0021E4  EA47 0056                            ADD,R6   FACILITY_LENGTH_INDEX,AUTO
          2 0021E6  6E01                                 ADV,R6   1
          2 0021E7  EF47 0056                            STR,R6   FACILITY_LENGTH_INDEX,AUTO

     4914    28239    3                IF ( KX$L3.RVS OR KX$L3.FSTSLC ~= 0 )

  28239   2 0021E9  82C5 0029                            LB,'0001'X        41,B5
  28239   2 0021EB       0001
          2 0021EC  0501 0006                            BBT      s:28242,PREL
          2 0021EE  82C5 0029                            LB,'00C0'X        41,B5
          2 0021F0       00C0
          2 0021F1  0581 0019                            BBF      s:28247,PREL

     4915    28240    3                   THEN
     4916    28241    4                      DO;

     4917    28242    4                         BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_RVS#;

  28242   2 0021F3  6C01                                 LDV,R6   1
          2 0021F4  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 0021F6  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 0021F8  3E01                                 ADV,R3   1
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:585  
          2 0021F9  E7B6                                 STH,R6   ,B6,R3

     4918    28243    4                         BFRU(FACILITY_LENGTH_INDEX+2) = BITBIN(KX$L3.RVS)

  28243   2 0021FA  D845 0029                            LDR,R5   41,B5
          2 0021FC  D570 0001                            AND,R5   1,IMO
          2 0021FE  C845 0029                            LDR,R4   41,B5
          2 002200  C570 00C0                            AND,R4   192,IMO
          2 002202  CA55                                 ADD,R4   R5
          2 002203  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002205  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 002207  C7A6                                 STH,R4   ,B6,R2

     4919    28244    4                            + KX$L3.FSTSLC*64;
     4920    28245    4                         FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 2;

  28245   2 002208  2E02                                 ADV,R2   2
          2 002209  AF47 0056                            STR,R2   FACILITY_LENGTH_INDEX,AUTO

     4921    28246    4                      END;

     4922    28247    3                IF KX$L3.TRNDLY ~= 0

  28247   2 00220B  E845 002C                            LDR,R6   44,B5
          2 00220D  6901 0019                            BEZ,R6   s:28256,PREL

     4923    28248    3                   THEN
     4924    28249    4                      DO;

     4925    28250    4                         BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_DLY#;

  28250   2 00220F  5C49                                 LDV,R5   73
          2 002210  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 002212  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 002214  3E01                                 ADV,R3   1
          2 002215  D7B6                                 STH,R5   ,B6,R3

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:586  
     4926    28251    4                         BFRU(FACILITY_LENGTH_INDEX+2) = KX$L3.TRNDLYBYT.LFT;

  28251   2 002216  E2C5 002C                            LLH,R6   44,B5
          2 002218  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 00221A  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 00221C  E7A6                                 STH,R6   ,B6,R2

     4927    28252    4                         BFRU(FACILITY_LENGTH_INDEX+3) = KX$L3.TRNDLYBYT.RGH;

  28252   2 00221D  E845 002C                            LDR,R6   44,B5
          2 00221F  E570 00FF                            AND,R6   255,IMO
          2 002221  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002223  E7B6                                 STH,R6   ,B6,R3

     4928    28253    4                         FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 3;

  28253   2 002224  2E03                                 ADV,R2   3
          2 002225  AF47 0056                            STR,R2   FACILITY_LENGTH_INDEX,AUTO

     4929    28254    4                      END;

     4930    28255    3             END;

     4931    28256    2       IF (SENDING_CALL AND KX$L3.CHRINF) OR (NOT SENDING_CALL AND KX$L2.FLG.CHRINF)

  28256   2 002227  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 002229  0881 0006                            BAGE     s:28256+9,PREL
          2 00222B  82C5 0029                            LB,'0010'X        41,B5
          2 00222D       0010
          2 00222E  0501 000C                            BBT      s:28259,PREL
          2 002230  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 002232  0801 0018                            BAL      s:28263,PREL
          2 002234  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002236  82C6 002F                            LB,'2000'X        47,B6
          2 002238       2000
          2 002239  0581 0011                            BBF      s:28263,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:587  
     4932    28257    2          THEN
     4933    28258    3             DO;

     4934    28259    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_CHR_RQS#;

  28259   2 00223B  6C04                                 LDV,R6   4
          2 00223C  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 00223E  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 002240  3E01                                 ADV,R3   1
          2 002241  E7B6                                 STH,R6   ,B6,R3

     4935    28260    3                BFRU(FACILITY_LENGTH_INDEX+2) = 1;

  28260   2 002242  5C01                                 LDV,R5   1
          2 002243  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002245  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 002247  D7A6                                 STH,R5   ,B6,R2

     4936    28261    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 2;

  28261   2 002248  2E02                                 ADV,R2   2
          2 002249  AF47 0056                            STR,R2   FACILITY_LENGTH_INDEX,AUTO

     4937    28262    3             END;

     4938    28263    2       IF SENDING_CALL AND KX$L3.LCLNSAP.NSAP.LEN > 0 AND KX$L3.RMTNSAP.NSAP.LEN > 0

  28263   2 00224B  89C7 0037                            CMZ      SENDING_CALL,AUTO
          2 00224D  0881 0062                            BAGE     s:28282,PREL
          2 00224F  E2C5 007B                            LLH,R6   123,B5
          2 002251  6901 005E                            BEZ,R6   s:28282,PREL
          2 002253  D2C5 0086                            LLH,R5   134,B5
          2 002255  5901 005A                            BEZ,R5   s:28282,PREL

     4939    28264    2          THEN
     4940    28265    3             DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:588  
     4941    28266    3                BFRU(FACILITY_LENGTH_INDEX+1) = %KX_FCL_MRK#;

  28266   2 002257  EBC7 0057                            LAB,B6   BFRC,AUTO
          2 002259  B847 0056                            LDR,R3   FACILITY_LENGTH_INDEX,AUTO
          2 00225B  3E01                                 ADV,R3   1
          2 00225C  87B6                                 CLH      ,B6,R3

     4942    28267    3                BFRU(FACILITY_LENGTH_INDEX+2) = %KX_FCL_MRK_CCITT#;

  28267   2 00225D  6C0F                                 LDV,R6   15
          2 00225E  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002260  A847 0056                            LDR,R2   FACILITY_LENGTH_INDEX,AUTO
          2 002262  E7A6                                 STH,R6   ,B6,R2

     4943    28268    3                BFRU(FACILITY_LENGTH_INDEX+3) = %KX_FCL_CLGADREXT#;

  28268   2 002263  D870 00CB                            LDR,R5   203,IMO
          2 002265  EBC7 0058                            LAB,B6   BFRC+1,AUTO
          2 002267  D7B6                                 STH,R5   ,B6,R3

     4944    28269    3                TEMP0 = (KX$L3.LCLNSAP.NSAP.LEN + 3)/2;

  28269   2 002268  C2C5 007B                            LLH,R4   123,B5
          2 00226A  4E03                                 ADV,R4   3
          2 00226B  4041                                 SOR,R4   1
          2 00226C  CF47 002A                            STR,R4   TEMP0,AUTO

     4945    28270    3                TEMP1 = (KX$L3.RMTNSAP.NSAP.LEN + 3)/2;

  28270   2 00226E  92C5 0086                            LLH,R1   134,B5
          2 002270  1E03                                 ADV,R1   3
          2 002271  1041                                 SOR,R1   1
          2 002272  9F47 002B                            STR,R1   TEMP1,AUTO

     4946    28271    3                BFRU(FACILITY_LENGTH_INDEX+4) = TEMP0;

  28271   2 002274  EBC7 0059                            LAB,B6   FCL_PRESENT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:589  
          2 002276  C7A6                                 STH,R4   ,B6,R2

     4947    28272    3               SUBSTR(BFRC,FACILITY_LENGTH_INDEX+5,TEMP0) = SUBSTR(KX$L3.LCLNSAP_REDEF
             28272                         .NSAP,0,TEMP0);

  28272   2 002277  ABC5 007B                            LAB,B2   123,B5
          2 002279  2C00                                 LDV,R2   0
          2 00227A  E847 002A                            LDR,R6   TEMP0,AUTO
          2 00227C  BBC7 0059                            LAB,B3   FCL_PRESENT,AUTO
          2 00227E  0008                                 MMM

     4948    28273    3                BFRU(FACILITY_LENGTH_INDEX+5+TEMP0) = %KX_FCL_CLDADREXT#;

  28273   2 00227F  E847 0056                            LDR,R6   FACILITY_LENGTH_INDEX,AUTO
          2 002281  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 002283  C870 00C9                            LDR,R4   201,IMO
          2 002285  EBC7 0059                            LAB,B6   FCL_PRESENT,AUTO
          2 002287  B856                                 LDR,R3   R6
          2 002288  3E01                                 ADV,R3   1
          2 002289  C7B6                                 STH,R4   ,B6,R3

     4949    28274    3                BFRU(FACILITY_LENGTH_INDEX+6+TEMP0) = TEMP1;

  28274   2 00228A  E847 0056                            LDR,R6   FACILITY_LENGTH_INDEX,AUTO
          2 00228C  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 00228E  B847 002B                            LDR,R3   TEMP1,AUTO
          2 002290  EBC7 005A                            LAB,B6   FCL_PRESENT+1,AUTO
          2 002292  A856                                 LDR,R2   R6
          2 002293  B7A6                                 STH,R3   ,B6,R2

     4950    28275    3                SUBSTR(BFRC,FACILITY_LENGTH_INDEX+7+TEMP0,TEMP1) = SUBSTR(KX$L3.
             28275                         RMTNSAP_REDEF.NSAP,0,TEMP1);

  28275   2 002294  E847 0056                            LDR,R6   FACILITY_LENGTH_INDEX,AUTO
          2 002296  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 002298  ACC7 0008                            LDB,B2   L3$,AUTO
          2 00229A  ABC2 0086                            LAB,B2   134,B2
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:590  
          2 00229C  2C00                                 LDV,R2   0
          2 00229D  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 00229F  E847 002B                            LDR,R6   TEMP1,AUTO
          2 0022A1  BBC7 005A                            LAB,B3   FCL_PRESENT+1,AUTO
          2 0022A3  B847 00BC                            LDR,R3   KV@USRENT+5,AUTO
          2 0022A5  3E01                                 ADV,R3   1
          2 0022A6  0008                                 MMM

     4951    28276    3                FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + TEMP0 + TEMP1 + 6;

  28276   2 0022A7  E847 0056                            LDR,R6   FACILITY_LENGTH_INDEX,AUTO
          2 0022A9  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 0022AB  EA47 002B                            ADD,R6   TEMP1,AUTO
          2 0022AD  6E06                                 ADV,R6   6
          2 0022AE  EF47 0056                            STR,R6   FACILITY_LENGTH_INDEX,AUTO

     4952    28277    3             END;

     4953    28278        /*
     4954    28279                                             Now go back and complete the
     4955    28280                                             facility length field.
     4956    28281        */
     4957    28282    2       BFRU(0) = FACILITY_LENGTH_INDEX;

  28282   2 0022B0  E847 0056                            LDR,R6   FACILITY_LENGTH_INDEX,AUTO
          2 0022B2  E7C7 0057                            STH,R6   BFRC,AUTO

     4958    28283    2       FACILITY_LENGTH_INDEX = FACILITY_LENGTH_INDEX + 1;

  28283   2 0022B4  8AC7 0056                            INC      FACILITY_LENGTH_INDEX,AUTO

     4959    28284    2       ADDR(BYTE_ARRAY(BYTE_INDEX))->CHRBSD = ADDR(BFRC)->CHRBSD ;

  28284   2 0022B6  ABC7 0057                            LAB,B2   BFRC,AUTO
          2 0022B8  2C00                                 LDV,R2   0
          2 0022B9  E847 0056                            LDR,R6   FACILITY_LENGTH_INDEX,AUTO
          2 0022BB  BCC7 0006                            LDB,B3   DAT$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:591  
          2 0022BD  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0022BF  0008                                 MMM

     4960    28285    2       BYTE_INDEX = BYTE_INDEX + FACILITY_LENGTH_INDEX ;

  28285   2 0022C0  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 0022C2  EA47 0056                            ADD,R6   FACILITY_LENGTH_INDEX,AUTO
          2 0022C4  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     4961    28286
     4962    28287    2       RETURN;

  28287   2 0022C6  ECC7 0054                            LDB,B6   FCLLNG,AUTO
          2 0022C8  C3C6 0001                            LNJ,B4   1,B6

     4963    28288
     4964    28289    2   END Y$STUFF_FACILITIES;
     4965    28290        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:592  
     4966    28291        /*I* NAME: Y$RESTART */
     4967    28292        /*I* PURPOSE: Send a restart packet */
     4968    28293        /*I* CALL: CALL Y$RESTART */
     4969    28294        /*I* INPUT: L2$  ->  line context block*/
     4970    28295        /*I* OUTPUT: None */
     4971    28296
     4972    28297    1   Y$RESTART: PROC;

  28297   2 0022CA  EFC7 0054            Y$RESTART       STB,B6   FCLLNG,AUTO

     4973    28298
     4974    28299        /* Set the restart flag */
     4975    28300
     4976    28301    2       KX$L2.FLG.RESTART = '1'B;

  28301   2 0022CC  DCC7 000C                            LDB,B5   L2$,AUTO
          2 0022CE  8945 002E                            LBT,'0008'X       46,B5
          2 0022D0       0008

     4977    28302    2       ID = %Y_ID_RESTART#;

  28302   2 0022D1  E870 00FB                            LDR,R6   251,IMO
          2 0022D3  EF47 002E                            STR,R6   ID,AUTO

     4978    28303    2       TEMP0 = %L2;

  28303   2 0022D5  5C07                                 LDV,R5   7
          2 0022D6  DF47 002A                            STR,R5   TEMP0,AUTO

     4979    28304    2       GOTO RESTART_COMMON;

  28304   2 0022D8  0F81 000A                            B        s:28313,PREL

     4980    28305
     4981    28306    2   Y$RESTART_C: ENTRY;

  28306   2 0022DA  EFC7 0054            Y$RESTART_C     STB,B6   FCLLNG,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:593  

     4982    28307
     4983    28308    2       ID = %Y_ID_RESTART_C#;

  28308   2 0022DC  E870 00FF                            LDR,R6   255,IMO
          2 0022DE  EF47 002E                            STR,R6   ID,AUTO

     4984    28309    2       TEMP0 = %L0;

  28309   2 0022E0  5C05                                 LDV,R5   5
          2 0022E1  DF47 002A                            STR,R5   TEMP0,AUTO

     4985    28310
     4986    28311    2   RESTART_COMMON:
     4987    28312
     4988    28313    2       TEMP0 = TEMP0 + L2EXT;

  28313   2 0022E3  DA47 003D            RESTART_COMMON  ADD,R5   L2EXT,AUTO
          2 0022E5  DF47 002A                            STR,R5   TEMP0,AUTO

     4989    28314
     4990    28315        /* Is the level 2 machine blocked? */
     4991    28316
     4992    28317    2       IF NOT KX$L2.FLG.OK OR KX$L2.FLG.BLK

  28317   2 0022E7  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0022E9  82C6 002E                            LB,'0800'X        46,B6
          2 0022EB       0800
          2 0022EC  0581 0005                            BBF      s:28323,PREL
          2 0022EE  89C6 002E                            CMZ      46,B6
          2 0022F0  0881 0009                            BAGE     s:28332,PREL

     4993    28318    2          THEN
     4994    28319    3             DO;

     4995    28320
     4996    28321        /* The packet can't be sent now  -  set the flag */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:594  
     4997    28322
     4998    28323    3                KX$L2.FLG.RESTART_PEND = '1'B;

  28323   2 0022F2  8946 002E                            LBT,'0004'X       46,B6
  28323   2 0022F4       0004

     4999    28324    3                KX$L2.FLG.DATAVL = '1'B;

  28324   2 0022F5  8946 002E                            LBT,'0002'X       46,B6
  28324   2 0022F7       0002

     5000    28325    3             END;

  28325   2 0022F8  0F81 00B7                            B        s:28370,PREL

     5001    28326
     5002    28327    2          ELSE
     5003    28328    3             DO;

     5004    28329
     5005    28330        /* Send the restart packet now */
     5006    28331
     5007    28332    3                CALL KXS$GETBFR ( 2, TEMP2$ );

  28332   2 0022FA  DBF0 0002                            LAB,B5   2,IMO
          2 0022FC  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 0022FE  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 002300  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 002302  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 002304  CBF0 0200                            LAB,B4   512,IMO
          2 002306  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 002309       0001                            DC       s:28333,PREL

     5008    28333    3                DAT$ = TEMP2$;

  28333   2 00230A  ECC7 0042                            LDB,B6   TEMP2$,AUTO
          2 00230C  EFC7 0006                            STB,B6   DAT$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:595  

     5009    28334    3                KX$DATA.RLS.L3 = '1'B;

  28334   2 00230E  8946 0006                            LBT,'8000'X       6,B6
  28334   2 002310       8000

     5010    28335    3                OUT_PKTHDR.TYPE = ID;

  28335   2 002311  E847 002E                            LDR,R6   ID,AUTO
          2 002313  E780 0000 0004  01                   STH,R6   OUT_PKTHDR+1

     5011    28336    3                OUT_PKTHDR.GFI = %GFI + BITBIN(KX$L2.DFLVCPRF.EXTSEQ#);

  28336   2 002316  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002318  D846 0060                            LDR,R5   96,B6
          2 00231A  504F                                 SOR,R5   15
          2 00231B  5E01                                 ADV,R5   1
          2 00231C  500C                                 SOL,R5   12
          2 00231D  DA80 0000 0003  01                   SRM,R5,'3000'X    OUT_PKTHDR
          2 002320       3000

     5012    28337    3                KX$DATA.CNT = TEMP0;

  28337   2 002321  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 002323  D847 002A                            LDR,R5   TEMP0,AUTO
          2 002325  DF45 0007                            STR,R5   7,B5

     5013    28338    3                ADDR(BYTE_ARRAY(LENGTHC(KX$FRAME)+L2EXT))->XPKTHDR = OUT_PKTHDR_CHR;

  28338   2 002327  AB80 0000 0000  01                   LAB,B2   IN_PKTHDR
          2 00232A  2C06                                 LDV,R2   6
          2 00232B  6C05                                 LDV,R6   5
          2 00232C  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 00232E  B847 003D                            LDR,R3   L2EXT,AUTO
          2 002330  3E12                                 ADV,R3   18
          2 002331  0008                                 MMM

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:596  
     5014    28339    3                CALL_FPT.EVN = %KX_F_EV_DATA_OUT#;

  28339   2 002332  6C07                                 LDV,R6   7
          2 002333  EF47 0012                            STR,R6   CALL_FPT,AUTO

     5015    28340    3                CALL_FPT.RCV$ = L2$;

  28340   2 002335  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002337  EFC7 0015                            STB,B6   CALL_FPT+3,AUTO

     5016    28341    3                CALL_FPT.PRM1$ = DAT$;

  28341   2 002339  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 00233B  DFC7 0019                            STB,B5   CALL_FPT+7,AUTO

     5017    28342    3                CALL KXF$FRAME ( CALL_FPT );

  28342   2 00233D  CBC7 0012                            LAB,B4   CALL_FPT,AUTO
          2 00233F  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 002341  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 002343  CBF0 0100                            LAB,B4   256,IMO
          2 002345  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 002348       0001                            DC       s:28343,PREL

     5018    28343    3                IF ID = %Y_ID_RESTART#

  28343   2 002349  E847 002E                            LDR,R6   ID,AUTO
          2 00234B  E970 00FB                            CMR,R6   251,IMO
          2 00234D  0981 0062                            BNE      s:28370,PREL

     5019    28344    3                   THEN
     5020    28345    4                      DO;

     5021    28346                              %START_TIMER ( FPTN = KX$L2.T20TMR, PRD = KX$L2.T20 );

  28351   2 00234F  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002351  D2C6 0055                            LLH,R5   85,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:597  
          2 002353  5901 002E                            BEZ,R5   s:28362+18,PREL

  28351   2 002355  DAC6 0050                            SRM,R5,'00FF'X    80,B6
  28351   2 002357       00FF

  28361   2 002358  89C6 0051                            CMZ      81,B6
          2 00235A  0801 004F                            BAL      s:28366,PREL

  28361   2 00235C  8946 0051                            LBT,'8000'X       81,B6
  28361   2 00235E       8000

  28361   2 00235F  DB80 0000 0000                       LAB,B5   0
          2 002362  DFC6 0048                            STB,B5   72,B6

  28361   2 002364  8D80 0000 0002  xsym                 CMN      KX_TMRBLK+2
          2 002367  0981 0008                            BNE      s:28362,PREL

  28361   2 002369  CBC6 0048                            LAB,B4   72,B6
          2 00236B  CF80 0000 0000  xsym                 STB,B4   KX_TMRBLK
          2 00236E  0F81 0007                            B        s:28362+6,PREL

  28362   2 002370  CBC6 0048                            LAB,B4   72,B6
          2 002372  BC80 0000 0002  xsym                 LDB,B3   KX_TMRBLK+2
          2 002375  CF83                                 STB,B4   ,B3

  28362   2 002376  DC80 0000 0002  xsym                 LDB,B5   KX_TMRBLK+2
          2 002379  DFC6 004A                            STB,B5   74,B6

  28362   2 00237B  CBC6 0048                            LAB,B4   72,B6
          2 00237D  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2

  28362   2 002380  0F81 0029                            B        s:28366,PREL

  28362   2 002382  89C6 0051                            CMZ      81,B6
          2 002384  0881 0025                            BAGE     s:28366,PREL

  28363   2 002386  8846 0051                            LBF,'8000'X       81,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:598  
  28363   2 002388       8000

  28363   2 002389  8DC6 0048                            CMN      72,B6
          2 00238B  0981 0008                            BNE      s:28363+14,PREL

  28363   2 00238D  DCC6 004A                            LDB,B5   74,B6
          2 00238F  DF80 0000 0002  xsym                 STB,B5   KX_TMRBLK+2
          2 002392  0F81 0007                            B        s:28363+20,PREL

  28363   2 002394  DCC6 0048                            LDB,B5   72,B6
          2 002396  CCC6 004A                            LDB,B4   74,B6
          2 002398  CFC5 0002                            STB,B4   2,B5

  28363   2 00239A  8DC6 004A                            CMN      74,B6
          2 00239C  0981 0008                            BNE      s:28364+7,PREL

  28364   2 00239E  DCC6 0048                            LDB,B5   72,B6
          2 0023A0  DF80 0000 0000  xsym                 STB,B5   KX_TMRBLK
          2 0023A3  0F81 0006                            B        s:28366,PREL

  28364   2 0023A5  DCC6 004A                            LDB,B5   74,B6
          2 0023A7  CCC6 0048                            LDB,B4   72,B6
          2 0023A9  CF85                                 STB,B4   ,B5

     5022    28366    4                         KX_STATS_X25.RESTART_OUT = KX_STATS_X25.RESTART_OUT + 1;

  28366   2 0023AA  8A80 0000 0023  xsym                 INC      KX_STATS_X25+35
          2 0023AD  8E80 0000 0022  xsym                 CAD      KX_STATS_X25+34

     5023    28367    4                      END;

     5024    28368    3             END /* IF */;

     5025    28369
     5026    28370    2   END /* SUBROUTINE */;

  28370   2 0023B0  ECC7 0054                            LDB,B6   FCLLNG,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:599  
          2 0023B2  C3C6 0001                            LNJ,B4   1,B6

     5027    28371
     5028    28372        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:600  
     5029    28373        /*I* NAME: Y$CALL */
     5030    28374        /*I* PURPOSE: Send a call packet */
     5031    28375        /*I* CALL: CALL Y$CALL */
     5032    28376        /*I* INPUT: L2$  ->  line context block*/
     5033    28377        /*I* L3$  ->  level 3 context block */
     5034    28378        /*I* OUTPUT: DAT$  -  null if no LCN available */
     5035    28379
     5036    28380    1   Y$CALL: PROC ALTRET;

  28380   2 0023B4  EFC7 004E            Y$CALL          STB,B6   TERMID+8,AUTO

     5037    28381
     5038    28382    2   DCL END_LCN UBIN;
     5039    28383    2   DCL I UBIN;
     5040    28384    2   DCL T$ PTR;
     5041    28385
     5042    28386        /* Assign a logical channel number */
     5043    28387
     5044    28388    2       IF KX$L2.FLG.DCE

  28388   2 0023B6  DCC7 000C                            LDB,B5   L2$,AUTO
          2 0023B8  82C5 002E                            LB,'1000'X        46,B5
          2 0023BA       1000
          2 0023BB  0581 000F                            BBF      s:28396,PREL

     5045    28389    2          THEN  /*                      Start with the lowest number  */
     5046    28390    3             DO;

     5047    28391    3                LCN = KX$L2.LIC;

  28391   2 0023BD  E845 0018                            LDR,R6   24,B5
          2 0023BF  EF47 0028                            STR,R6   LCN,AUTO

     5048    28392    3                END_LCN = MAXIMUM ( KX$L2.HIC, LCN );

  28392   2 0023C1  E945 0019                            CMR,R6   25,B5
          2 0023C3  0281 0003                            BGE      s:28392+6,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:601  
          2 0023C5  E845 0019                            LDR,R6   25,B5
          2 0023C7  EF47 0050                            STR,R6   END_LCN,AUTO

     5049    28393    3             END;

  28393   2 0023C9  0F81 000D                            B        s:28402,PREL

     5050    28394    2          ELSE  /*                      DTEs use the largest number  */
     5051    28395    3             DO;

     5052    28396    3                LCN = KX$L2.HOC;

  28396   2 0023CB  E845 001C                            LDR,R6   28,B5
          2 0023CD  EF47 0028                            STR,R6   LCN,AUTO

     5053    28397    3                END_LCN = MINIMUM ( KX$L2.LOC, LCN );

  28397   2 0023CF  E945 001B                            CMR,R6   27,B5
          2 0023D1  0381 0003                            BLE      s:28397+6,PREL
          2 0023D3  E845 001B                            LDR,R6   27,B5
          2 0023D5  EF47 0050                            STR,R6   END_LCN,AUTO

     5054    28398    3             END;

     5055    28399
     5056    28400        /* Get the first level 3 */
     5057    28401
     5058    28402    2       T$ = KX$L2.L3_HEAD$;

  28402   2 0023D7  CCC5 0034                            LDB,B4   52,B5
          2 0023D9  CFC7 0052                            STB,B4   T$,AUTO

     5059    28403
     5060    28404        /* Check each one for this LCN */
     5061    28405
     5062    28406    3   SRCH: DO WHILE ( T$ ~= ADDR(NIL) );

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:602  
  28406   2 0023DB  0F81 0028            SRCH            B        s:28438,PREL

     5063    28407
     5064    28408    3          IF T$->KX$TL3.LCN# = LCN

  28408   2 0023DD  ECC7 0052                            LDB,B6   T$,AUTO
          2 0023DF  E846 002A                            LDR,R6   42,B6
          2 0023E1  E570 0FFF                            AND,R6   4095,IMO
          2 0023E3  E947 0028                            CMR,R6   LCN,AUTO
          2 0023E5  0981 001B                            BNE      s:28435,PREL

     5065    28409    3             THEN
     5066    28410    4                DO;

     5067    28411
     5068    28412        /* Yes  -  go to the next LCN */
     5069    28413
     5070    28414        /*
     5071    28415                                             If we couldn't get an LCN, just
     5072    28416                                             altreturn and let the caller
     5073    28417                                             figure out what to do.
     5074    28418        */
     5075    28419    4                   IF LCN = END_LCN THEN ALTRETURN;

  28419   2 0023E7  D847 0028                            LDR,R5   LCN,AUTO
          2 0023E9  D947 0050                            CMR,R5   END_LCN,AUTO
          2 0023EB  0981 0005                            BNE      s:28420,PREL

  28419   2 0023ED  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0023EF  B806                                 LDR,R3   ,B6
          2 0023F0  C3B6                                 LNJ,B4   ,B6,R3

     5076    28420    4                   IF LCN < END_LCN

  28420   2 0023F1  0281 0005                            BGE      s:28424,PREL

     5077    28421    4                      THEN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:603  
     5078    28422    4                         LCN = LCN + 1;

  28422   2 0023F3  8AC7 0028                            INC      LCN,AUTO
          2 0023F5  0F81 0003                            B        s:28428,PREL

     5079    28423    4                      ELSE
     5080    28424    4                         LCN = LCN - 1;

  28424   2 0023F7  88C7 0028                            DEC      LCN,AUTO

     5081    28425
     5082    28426        /* Restart this loop */
     5083    28427
     5084    28428    4                   T$ = KX$L2.L3_HEAD$;

  28428   2 0023F9  DCC7 000C                            LDB,B5   L2$,AUTO
          2 0023FB  CCC5 0034                            LDB,B4   52,B5
          2 0023FD  CFC7 0052                            STB,B4   T$,AUTO

     5085    28429
     5086    28430    4                END;

  28430   2 0023FF  0F81 0004                            B        s:28438,PREL

     5087    28431    3             ELSE
     5088    28432
     5089    28433        /* No match  -  get the next level 3 */
     5090    28434
     5091    28435    3                T$ = T$ -> KX$TL3.NEXT$;

  28435   2 002401  DC86                                 LDB,B5   ,B6
          2 002402  DFC7 0052                            STB,B5   T$,AUTO

     5092    28436
     5093    28437
     5094    28438    3       END SRCH;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:604  
  28438   2 002404  8DC7 0052                            CMN      T$,AUTO
          2 002406  09D7                                 BNE      s:28408,SPREL

     5095    28439
     5096    28440    2       KX$L3.CHN$-> KH$CHN.TERMID.TERM.SUBDEVICE = LCN;

  28440   2 002407  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002409  DCC6 0006                            LDB,B5   6,B6
          2 00240B  E847 0028                            LDR,R6   LCN,AUTO
          2 00240D  EF45 0014                            STR,R6   20,B5

     5097    28441
     5098    28442        /* Getting this far means we got an LCN */
     5099    28443
     5100    28444    2       KX$L3.LCN# = LCN;

  28444   2 00240F  E847 0028                            LDR,R6   LCN,AUTO
          2 002411  EAC6 002A                            SRM,R6,'0FFF'X    42,B6
          2 002413       0FFF

     5101    28445
     5102    28446        /* Get a buffer for the call packet */
     5103    28447
     5104    28448    2       CALL KXS$GETBFR ( 256, TEMP2$ );

  28448   2 002414  DBF0 0100                            LAB,B5   256,IMO
          2 002416  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 002418  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 00241A  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 00241C  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00241E  CBF0 0200                            LAB,B4   512,IMO
          2 002420  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 002423       0001                            DC       s:28449,PREL

     5105    28449    2       DAT$ = TEMP2$;

  28449   2 002424  ECC7 0042                            LDB,B6   TEMP2$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:605  
          2 002426  EFC7 0006                            STB,B6   DAT$,AUTO

     5106    28450    2       KX$DATA.RLS.L3 = '1'B;

  28450   2 002428  8946 0006                            LBT,'8000'X       6,B6
  28450   2 00242A       8000

     5107    28451        /*
     5108    28452                                             Set up the addresses and call
     5109    28453                                             facilities in the packet.
     5110    28454        */
     5111    28455    2       BYTE_INDEX = LENGTHC(KX$PACKET) + L2EXT;

  28455   2 00242B  E847 003D                            LDR,R6   L2EXT,AUTO
          2 00242D  6E15                                 ADV,R6   21
          2 00242E  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     5112    28456    2       TEMP0 = KX$L3.LCLADR.SIZ;

  28456   2 002430  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002432  D2C6 0077                            LLH,R5   119,B6
          2 002434  DF47 002A                            STR,R5   TEMP0,AUTO

     5113    28457    2       TEMP1 = KX$L3.CALL_OPTS.RCVADR.SIZ;

  28457   2 002436  C2C6 0017                            LLH,R4   23,B6
          2 002438  CF47 002B                            STR,R4   TEMP1,AUTO

     5114    28458    2       BYTE_ARRAY(BYTE_INDEX) = TEMP0*16 + TEMP1;

  28458   2 00243A  5004                                 SOL,R5   4
          2 00243B  DA54                                 ADD,R5   R4
          2 00243C  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 00243E  B856                                 LDR,R3   R6
          2 00243F  D7B5                                 STH,R5   ,B5,R3

     5115    28459    2       BYTE_INDEX = BYTE_INDEX + 1;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:606  

  28459   2 002440  8AC7 0032                            INC      BYTE_INDEX,AUTO

     5116    28460    2       TEMP0 = (TEMP0 + 1 ) / 2 ;

  28460   2 002442  D847 002A                            LDR,R5   TEMP0,AUTO
          2 002444  5E01                                 ADV,R5   1
          2 002445  5041                                 SOR,R5   1
          2 002446  DF47 002A                            STR,R5   TEMP0,AUTO

     5117    28461    2       TEMP1 = (TEMP1 + 1 ) / 2 ;

  28461   2 002448  C847 002B                            LDR,R4   TEMP1,AUTO
          2 00244A  4E01                                 ADV,R4   1
          2 00244B  4041                                 SOR,R4   1
          2 00244C  CF47 002B                            STR,R4   TEMP1,AUTO

     5118    28462    2       SUBSTR(DAT$->STRT1,BYTE_INDEX,TEMP1) = ADDR(KX$L3.CALL_OPTS.RCVADR.ADR_PAIR(0))
             28462                ->STRT1 ;

  28462   2 00244E  AB86                                 LAB,B2   ,B6
          2 00244F  2C2F                                 LDV,R2   47
          2 002450  E854                                 LDR,R6   R4
          2 002451  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 002453  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 002455  0008                                 MMM

     5119    28463    2       IF MOD(KX$L3.CALL_OPTS.RCVADR.SIZ,2) = 0

  28463   2 002456  DCC7 0008                            LDB,B5   L3$,AUTO
          2 002458  E2C5 0017                            LLH,R6   23,B5
          2 00245A  E570 0001                            AND,R6   1,IMO
          2 00245C  6981 0019                            BNEZ,R6  s:28472,PREL

     5120    28464    2          THEN
     5121    28465    3             DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:607  
     5122    28466    3                BYTE_INDEX = BYTE_INDEX + TEMP1;

  28466   2 00245E  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 002460  EA47 002B                            ADD,R6   TEMP1,AUTO
          2 002462  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     5123    28467    3               SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0) = ADDR(KX$L3.LCLADR.ADR_PAIR(0))->
             28467                         STRT0;

  28467   2 002464  ABC5 0077                            LAB,B2   119,B5
          2 002466  2C01                                 LDV,R2   1
          2 002467  E847 002A                            LDR,R6   TEMP0,AUTO
          2 002469  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 00246B  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 00246D  0008                                 MMM

     5124    28468    3                BYTE_INDEX = BYTE_INDEX + TEMP0;

  28468   2 00246E  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 002470  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 002472  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     5125    28469    3             END;

  28469   2 002474  0F81 0037                            B        s:28475,PREL

     5126    28470    2          ELSE
     5127    28471    3             DO;

     5128    28472    3                PINCRC(DAT$,KX$L3.CALL_OPTS.RCVADR.SIZ/2+BYTE_INDEX)->ADR2.ADR = ADDR(
             28472                         KX$L3.LCLADR)->ADR1.ADR;

  28472   2 002476  E2C5 0017                            LLH,R6   23,B5
          2 002478  6041                                 SOR,R6   1
          2 002479  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 00247B  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 00247D  8CC7 0006                            LDI      DAT$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:608  
          2 00247F  7031                                 DCL,R7   1
          2 002480  8D47 00BD                            SDI      KV@USRENT+6,AUTO
          2 002482  F847 00BC                            LDR,R7   KV@USRENT+5,AUTO
          2 002484  6C00                                 LDV,R6   0
          2 002485  8447 00BD                            AID      KV@USRENT+6,AUTO
          2 002487  7071                                 DCR,R7   1
          2 002488  B856                                 LDR,R3   R6
          2 002489  E570 7FFF                            AND,R6   32767,IMO
          2 00248B  8D47 00BF                            SDI      KV@USRENT+8,AUTO
          2 00248D  CCC7 00BF                            LDB,B4   KV@USRENT+8,AUTO
          2 00248F  304F                                 SOR,R3   15
          2 002490  BF47 00C1                            STR,R3   KV@USRENT+10,AUTO
          2 002492  CFC7 00C2                            STB,B4   KV@USRENT+11,AUTO
          2 002494  ABC5 0077                            LAB,B2   119,B5
          2 002496  2C08                                 LDV,R2   8
          2 002497  6C38                                 LDV,R6   56
          2 002498  BB84                                 LAB,B3   ,B4
          2 002499  3003                                 SOL,R3   3
          2 00249A  3E04                                 ADV,R3   4
          2 00249B  7C38                                 LDV,R7   56
          2 00249C  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

     5129    28473    3               BYTE_INDEX = BYTE_INDEX + (KX$L3.LCLADR.SIZ+KX$L3.CALL_OPTS.RCVADR.SIZ+
             28473                         1)/2;

  28473   2 00249F  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0024A1  E2C6 0077                            LLH,R6   119,B6
          2 0024A3  D2C6 0017                            LLH,R5   23,B6
          2 0024A5  EA55                                 ADD,R6   R5
          2 0024A6  6E01                                 ADV,R6   1
          2 0024A7  6041                                 SOR,R6   1
          2 0024A8  EA47 0032                            ADD,R6   BYTE_INDEX,AUTO
          2 0024AA  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     5130    28474    3             END;

     5131    28475    2       SENDING_CALL = '1'B;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:609  

  28475   2 0024AC  8947 0037                            LBT,'8000'X       SENDING_CALL,AUTO
  28475   2 0024AE       8000

     5132    28476    2       KX$L3.CALL_OPTS = KX$L3.CM_OPTS;

  28476   2 0024AF  ACC7 0008                            LDB,B2   L3$,AUTO
          2 0024B1  2C36                                 LDV,R2   54
          2 0024B2  6C0E                                 LDV,R6   14
          2 0024B3  BB82                                 LAB,B3   ,B2
          2 0024B4  3C28                                 LDV,R3   40
          2 0024B5  0008                                 MMM

     5133    28477    2       CALL Y$STUFF_FACILITIES;

  28477   2 0024B6  E3C0 FC33                            LNJ,B6   s:0,PREL
          2 0024B8       0001                            DC       s:28482,PREL

     5134    28478        /*
     5135    28479                                             Finish the Call packet by
     5136    28480                                             inserting the user data.
     5137    28481        */
     5138    28482    2       IF FPT_X25.V_.ADR$ ~= ADDR(NIL)

  28482   2 0024B9  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          2 0024BB  8DC6 000B                            CMN      11,B6
          2 0024BD  0901 0016                            BE       s:28495,PREL

     5139    28483    2          THEN
     5140    28484    3             DO ;

     5141    28485    3                TEMP0 = FPT_X25.V_.BYTSIZ ;

  28485   2 0024BF  E846 000E                            LDR,R6   14,B6
          2 0024C1  EF47 002A                            STR,R6   TEMP0,AUTO

     5142    28486    3                SUBSTR(DAT$->STRT0,BYTE_INDEX,TEMP0) =
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:610  

  28486   2 0024C3  DCC6 000B                            LDB,B5   11,B6
          2 0024C5  D846 000D                            LDR,R5   13,B6
          2 0024C7  AB85                                 LAB,B2   ,B5
          2 0024C8  A855                                 LDR,R2   R5
          2 0024C9  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 0024CB  B847 0032                            LDR,R3   BYTE_INDEX,AUTO
          2 0024CD  0008                                 MMM

     5143    28487    3                   SUBSTR(FPT_X25.V_.ADR$->STRT0,FPT_X25.V_.BYTX,TEMP0) ;
     5144    28488    3                BYTE_INDEX = BYTE_INDEX + TEMP0 ;

  28488   2 0024CE  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 0024D0  EA47 002A                            ADD,R6   TEMP0,AUTO
          2 0024D2  EF47 0032                            STR,R6   BYTE_INDEX,AUTO

     5145    28489
     5146    28490    3             END;

     5147    28491        /*
     5148    28492                                             Now that the packet is built,
     5149    28493                                             stuff the size.
     5150    28494        */
     5151    28495    2       KX$DATA.CNT = BYTE_INDEX - LENGTHC(KX$DATA);

  28495   2 0024D4  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 0024D6  E847 0032                            LDR,R6   BYTE_INDEX,AUTO
          2 0024D8  6EF0                                 ADV,R6   -16
          2 0024D9  EF45 0007                            STR,R6   7,B5

     5152    28496
     5153    28497    2       OUT_PKTHDR.TYPE = %Y_ID_CALL#;

  28497   2 0024DB  5C0B                                 LDV,R5   11
          2 0024DC  D780 0000 0004  01                   STH,R5   OUT_PKTHDR+1

     5154    28498
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:611  
     5155    28499        /* Send the packet*/
     5156    28500
     5157    28501    2       CALL Y$PACKET_OUT;

  28501   2 0024DF  E3C0 ED15                            LNJ,B6   s:0,PREL
          2 0024E1       0001                            DC       s:28505,PREL

     5158    28502
     5159    28503        /* Stats*/
     5160    28504
     5161    28505    2       KX_STATS_X25.CALLS_OUT = KX_STATS_X25.CALLS_OUT + 1;

  28505   2 0024E2  8A80 0000 002B  xsym                 INC      KX_STATS_X25+43
          2 0024E5  8E80 0000 002A  xsym                 CAD      KX_STATS_X25+42

     5162    28506
     5163    28507    3       IF KX$L3.RTRCNT = 0 THEN DO;

  28507   2 0024E8  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0024EA  E2C6 0072                            LLH,R6   114,B6
          2 0024EC  6981 0009                            BNEZ,R6  s:28511,PREL

     5164    28508    3                ERCOD = CALL_OUT;

  28508   2 0024EE  8C80 0000 03A6  00                   LDI      CALL_OUT
          2 0024F1  8D47 0022                            SDI      ERCOD,AUTO

     5165    28509    3                CALL Y$ER2;

  28509   2 0024F3  E3C0 03B3                            LNJ,B6   s:0,PREL
          2 0024F5       0001                            DC       s:28511,PREL

     5166    28510    3             END;

     5167    28511    2   END /* SUBROUTINE */;

  28511   2 0024F6  ECC7 004E                            LDB,B6   TERMID+8,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:612  
          2 0024F8  C3C6 0001                            LNJ,B4   1,B6

     5168    28512
     5169    28513
     5170    28514        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:613  
     5171    28515        /*I* NAME: Y$GETDAT                                */
     5172    28516        /*I* PURPOSE: To supply data to the Frame level    */
     5173    28517        /*I* CALL: CALL Y$GETDAT                           */
     5174    28518        /*I* INPUT: L2$ -> level 2 context                 */
     5175    28519        /*I* OUTPUT: Data supplied to the Frame level      */
     5176    28520
     5177    28521    1   Y$GETDAT: PROC;

  28521   2 0024FA  EFC7 004E            Y$GETDAT        STB,B6   TERMID+8,AUTO

     5178    28522
     5179    28523    2   DCL FOUND_ONE BIT(1);
     5180    28524        %FPT_X25 ( FPTN = CALL_L2, STCLASS = STATIC, EVN = %KX_F_EV_DATA_OUT#);
     5181    28568        %FPT_X25 ( FPTN = CALL_L3, STCLASS = STATIC);
     5182    28612        %FPT_X25 ( FPTN = CALL_CM, STCLASS = STATIC);
     5183    28656    2   DCL T$ PTR;
     5184    28657    2   DCL Y@BYTE UBIN BYTE UNAL;
     5185    28658    2   DCL 1 PS_PR REDEF Y@BYTE,
     5186    28659    2         2 PR UBIN(3) UNAL,
     5187    28660    2         2 M BIT(1) UNAL,
     5188    28661    2         2 PS UBIN(3) UNAL,
     5189    28662    2         2 * BIT(1) UNAL;
     5190    28663        /*
     5191    28664           CALL_L2.RCV$ is used to prevent re-entrance.
     5192    28665        */
     5193    28666
     5194    28667    2       IF CALL_L2.RCV$ ~= ADDR(NIL)

  28667   2 0024FC  8D80 0000 0019  01                   CMN      CALL_L2+3
          2 0024FF  0901 0005                            BE       s:28670,PREL

     5195    28668    2          THEN
     5196    28669    2             RETURN;

  28669   2 002501  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 002503  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:614  
     5197    28670    2       CALL_L2.RCV$ = L2$;

  28670   2 002505  DCC7 000C                            LDB,B5   L2$,AUTO
          2 002507  DF80 0000 0019  01                   STB,B5   CALL_L2+3

     5198    28671    2       CALL_L3.CAL$ = L2$;

  28671   2 00250A  DF80 0000 0027  01                   STB,B5   CALL_L3+1

     5199    28672
     5200    28673    2       KX$L2.FLG.DATAVL = '0'B;

  28673   2 00250D  8845 002E                            LBF,'0002'X       46,B5
  28673   2 00250F       0002

     5201    28674        /*
     5202    28675                                             There are several types of data
     5203    28676                                             to check for.  First, a restart
     5204    28677                                             procedure may be pending.  If so,
     5205    28678                                             a Restart or Restart Confirmation
     5206    28679                                             packet will be sent.  Second,
     5207    28680                                             completed packets may be queued
     5208    28681                                             on KL$L3 context blocks.
     5209    28682                                             Third and last, pending data
     5210    28683                                             transmissions are serviced.
     5211    28684        */
     5212    28685    2       IF KX$L2.FLG.RESTART_PEND

  28685   2 002510  82C5 002E                            LB,'0004'X        46,B5
  28685   2 002512       0004
          2 002513  0581 0030                            BBF      s:28715,PREL

     5213    28686    2          THEN
     5214    28687    3             DO;

     5215    28688    3                KX$L2.FLG.RESTART_PEND = '0'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:615  
  28688   2 002515  8845 002E                            LBF,'0004'X       46,B5
  28688   2 002517       0004

     5216    28689    3                IF KX$L2.FLG.RESTART

  28689   2 002518  82C5 002E                            LB,'0008'X        46,B5
  28689   2 00251A       0008
          2 00251B  0581 0006                            BBF      s:28694,PREL

     5217    28690    3                   THEN  /*             Send a restart packet  */
     5218    28691    3                      CALL Y$RESTART;

  28691   2 00251D  E3C0 FDAC                            LNJ,B6   s:0,PREL
          2 00251F       0001                            DC       s:28691+3,PREL
          2 002520  0F81 0023                            B        s:28715,PREL

     5219    28692    3                   ELSE  /*             Send a Restart_C packet  */
     5220    28693    4                      DO;

     5221    28694    4                         CALL Y$RESTART_C;

  28694   2 002522  E3C0 FDB7                            LNJ,B6   s:0,PREL
          2 002524       0001                            DC       s:28700,PREL

     5222    28695        /*
     5223    28696                                             Since the restart procedure is
     5224    28697                                             now completed, start the level
     5225    28698                                             3 contexts.
     5226    28699        */
     5227    28700    4                         CALL_L3.EVN = %KX_P_EV_START#;

  28700   2 002525  6C01                                 LDV,R6   1
          2 002526  EF00 0000 0026  01                   STR,R6   CALL_L3

     5228    28701    4                         L3$ = KX$L2.L3_HEAD$;

  28701   2 002529  ECC7 000C                            LDB,B6   L2$,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:616  
          2 00252B  DCC6 0034                            LDB,B5   52,B6
          2 00252D  DFC7 0008                            STB,B5   L3$,AUTO

     5229    28702    5                         DO WHILE ( L3$ ~= ADDR(NIL));

  28702   2 00252F  0F81 0011                            B        s:28706,PREL

     5230    28703    5                            CALL_L3.RCV$ = L3$;

  28703   2 002531  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002533  EF80 0000 0029  01                   STB,B6   CALL_L3+3

     5231    28704    5                            L3$ = KX$L3.NEXT$;

  28704   2 002536  DC86                                 LDB,B5   ,B6
          2 002537  DFC7 0008                            STB,B5   L3$,AUTO

     5232    28705    5                            CALL KXP$PACKET ( CALL_L3 );

  28705   2 002539  BB80 0000 0008  03                   LAB,B3   +8
          2 00253C  CBF0 0100                            LAB,B4   256,IMO
          2 00253E  E3C0 DAC1                            LNJ,B6   s:13,PREL
          2 002540       0001                            DC       s:28706,PREL

     5233    28706    5                         END;

  28706   2 002541  8DC7 0008                            CMN      L3$,AUTO
          2 002543  09EE                                 BNE      s:28703,SPREL

     5234    28707    4                      END;

     5235    28708    3             END;

     5236    28709        /*
     5237    28710                                             Now for the second check - any
     5238    28711                                             previously constructed packets
     5239    28712                                             that are still queued to the
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:617  
     5240    28713                                             L3 context.
     5241    28714        */
     5242    28715    2       IF KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK THEN GOTO L2_BLOCKED;

  28715   2 002544  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002546  89C6 002E                            CMZ      46,B6
          2 002548  0801 01B3                            BAL      s:28866,PREL
          2 00254A  82C6 002E                            LB,'0800'X        46,B6
          2 00254C       0800
          2 00254D  0581 01AE                            BBF      s:28866,PREL

     5243    28716    3       DO UNTIL NOT FOUND_ONE;

     5244    28717    3          FOUND_ONE = '0'B;

  28717   2 00254F  8747 0050                            CL       FOUND_ONE,AUTO

     5245    28718    3          L3$ = KX$L2.L3_HEAD$;

  28718   2 002551  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002553  DCC6 0034                            LDB,B5   52,B6
          2 002555  DFC7 0008                            STB,B5   L3$,AUTO

     5246    28719    4          DO WHILE L3$ ~= ADDR(NIL);

  28719   2 002557  0F81 0107                            B        s:28807,PREL

     5247    28720        /*
     5248    28721                                             Send everything for each context
     5249    28722                                             block, provided level 2 does not
     5250    28723                                             become blocked.
     5251    28724        */
     5252    28725    4             CALL_L2.CAL$ = L3$;

  28725   2 002559  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00255B  EF80 0000 0017  01                   STB,B6   CALL_L2+1

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:618  
     5253    28726    4             IF KX$L3.CTL_Q_HEAD$ ~= ADDR(NIL)

  28726   2 00255E  8DC6 003F                            CMN      63,B6
          2 002560  0901 0041                            BE       s:28752,PREL

     5254    28727    4                THEN
     5255    28728    5                   DO;

     5256    28729    5                      CALL_L2.PRM1$ = KX$L3.CTL_Q_HEAD$;

  28729   2 002562  DCC6 003F                            LDB,B5   63,B6
          2 002564  DF80 0000 001D  01                   STB,B5   CALL_L2+7

     5257    28730    5                      KX$L3.CTL_Q_HEAD$ = CALL_L2.PRM1$ -> KX$TDATA.L3_LIST$;

  28730   2 002567  CCC5 0004                            LDB,B4   4,B5
          2 002569  CFC6 003F                            STB,B4   63,B6

     5258    28731    5                      IF KX$L3.CTL_Q_HEAD$ = ADDR(NIL)

  28731   2 00256B  8DC6 003F                            CMN      63,B6
          2 00256D  0981 0003                            BNE      s:28734,PREL

     5259    28732    5                         THEN
     5260    28733    5                            KX$L3.CTL_Q_TAIL$ = KX$L3.CTL_Q_HEAD$;

  28733   2 00256F  CFC6 0041                            STB,B4   65,B6

     5261    28734    5                      TEMP1 = LENGTHC(KX$PACKET) + L2EXT - 1;

  28734   2 002571  E847 003D                            LDR,R6   L2EXT,AUTO
          2 002573  6E14                                 ADV,R6   20
          2 002574  EF47 002B                            STR,R6   TEMP1,AUTO

     5262    28735    5                      TEMP2 = MOD ( CALL_L2.PRM1$->BYTE_ARRAY(TEMP1), 16 );

  28735   2 002576  B856                                 LDR,R3   R6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:619  
          2 002577  D2B5                                 LLH,R5   ,B5,R3
          2 002578  D570 000F                            AND,R5   15,IMO
          2 00257A  DF47 0044                            STR,R5   TEMP2,AUTO

     5263    28736    5                      IF (TEMP2 = 1 OR TEMP2 = 5)

  28736   2 00257C  5D01                                 CMV,R5   1
          2 00257D  0901 0004                            BE       s:28739,PREL
          2 00257F  5D05                                 CMV,R5   5
          2 002580  0981 001F                            BNE      s:28750,PREL

     5264    28737        /* That's the way to tell if it is RR/RNR or something else */
     5265    28738    5                         THEN
     5266    28739    5                            IF NOT KX$L3.EXTSEQ

  28739   2 002582  82C6 0029                            LB,'0020'X        41,B6
  28739   2 002584       0020
          2 002585  0501 000F                            BBT      s:28747,PREL

     5267    28740    5                               THEN
     5268    28741    6                                  DO;

     5269    28742    6                                     Y@BYTE = CALL_L2.PRM1$->BYTE_ARRAY(TEMP1);

  28742   2 002587  C2B5                                 LLH,R4   ,B5,R3
          2 002588  C7C7 0053                            STH,R4   Y@BYTE,AUTO

     5270    28743    6                                     PS_PR.PR = KX$L3.VR;

  28743   2 00258A  A846 002F                            LDR,R2   47,B6
          2 00258C  200D                                 SOL,R2   13
          2 00258D  AAC7 0053                            SRM,R2,'E000'X    Y@BYTE,AUTO
          2 00258F       E000

     5271    28744    6                                     CALL_L2.PRM1$->BYTE_ARRAY(TEMP1) = Y@BYTE;

  28744   2 002590  A2C7 0053                            LLH,R2   Y@BYTE,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:620  
          2 002592  A7B5                                 STH,R2   ,B5,R3

     5272    28745    6                                  END;

  28745   2 002593  0F81 000C                            B        s:28750,PREL

     5273    28746    5                               ELSE
     5274    28747    5                                  CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1) =

  28747   2 002595  3E01                                 ADV,R3   1
          2 002596  C2B5                                 LLH,R4   ,B5,R3
          2 002597  C570 0001                            AND,R4   1,IMO
          2 002599  A846 002F                            LDR,R2   47,B6
          2 00259B  2001                                 SOL,R2   1
          2 00259C  A570 01FE                            AND,R2   510,IMO
          2 00259E  AA54                                 ADD,R2   R4
          2 00259F  A7B5                                 STH,R2   ,B5,R3

     5275    28748    5                                     MOD(CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1),2)+
     5276    28749    5                                     KX$L3.VR*2;
     5277    28750    5                      GOTO CALL_KXF;

  28750   2 0025A0  0F81 008F                            B        s:28794,PREL

     5278    28751    5                   END;
     5279    28752    4             IF NOT KX$L3.BLK AND NOT KX$L3.RNR AND KX$L3.RTR$ ~= ADDR(NIL)

  28752   2 0025A2  82C6 0029                            LB,'2000'X        41,B6
  28752   2 0025A4       2000
          2 0025A5  0501 0096                            BBT      s:28796,PREL
          2 0025A7  82C6 0029                            LB,'0800'X        41,B6
          2 0025A9       0800
          2 0025AA  0501 0091                            BBT      s:28796,PREL
          2 0025AC  8DC6 0043                            CMN      67,B6
          2 0025AE  0901 008D                            BE       s:28796,PREL
          2 0025B0  E2C6 0031                            LLH,R6   49,B6
          2 0025B2  6D09                                 CMV,R6   9
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:621  
          2 0025B3  0981 0088                            BNE      s:28796,PREL

     5280    28753    4                AND KX$L3.STATE.CURRENT = %Y_ST_DATA#
     5281    28754    4                THEN
     5282    28755    5                   DO;

     5283    28756        /*
     5284    28757          We cannot retransmit a packet that L2 and L1 are not done with. Otherwise
     5285    28758          the L2 queues will be screwed up.
     5286    28759        */
     5287    28760    5                      IF NOT KX$L3.RTR$->KX$TDATA.RLS.L2

  28760   2 0025B5  DCC6 0043                            LDB,B5   67,B6
          2 0025B7  82C5 0006                            LB,'4000'X        6,B5
          2 0025B9       4000
          2 0025BA  0581 0141                            BBF      s:28866,PREL
          2 0025BC  82C5 0006                            LB,'2000'X        6,B5
          2 0025BE       2000
          2 0025BF  0581 013C                            BBF      s:28866,PREL

     5288    28761    5                         OR NOT KX$L3.RTR$->KX$TDATA.RLS.L1
     5289    28762    5                         THEN
     5290    28763    5                            GOTO L2_BLOCKED;
     5291    28764    5                      CALL_L2.PRM1$ = KX$L3.RTR$;

  28764   2 0025C1  DF80 0000 001D  01                   STB,B5   CALL_L2+7

     5292    28765    5                      KX$L3.RTR$ = CALL_L2.PRM1$ -> KX$TDATA.L3_LIST$;

  28765   2 0025C4  CCC5 0004                            LDB,B4   4,B5
          2 0025C6  CFC6 0043                            STB,B4   67,B6

     5293    28766    5                      TEMP1 = LENGTHC(KX$PACKET) + L2EXT - 1;

  28766   2 0025C8  D847 003D                            LDR,R5   L2EXT,AUTO
          2 0025CA  5E14                                 ADV,R5   20
          2 0025CB  DF47 002B                            STR,R5   TEMP1,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:622  

     5294    28767    5                      IF NOT KX$L3.EXTSEQ

  28767   2 0025CD  82C6 0029                            LB,'0020'X        41,B6
  28767   2 0025CF       0020
          2 0025D0  0501 0016                            BBT      s:28777,PREL

     5295    28768    5                         THEN
     5296    28769    6                            DO;

     5297    28770    6                               Y@BYTE = CALL_L2.PRM1$->BYTE_ARRAY(TEMP1);

  28770   2 0025D2  B855                                 LDR,R3   R5
          2 0025D3  C2B5                                 LLH,R4   ,B5,R3
          2 0025D4  C7C7 0053                            STH,R4   Y@BYTE,AUTO

     5298    28771    6                               PS_PR.PR = KX$L3.VR;

  28771   2 0025D6  A846 002F                            LDR,R2   47,B6
          2 0025D8  200D                                 SOL,R2   13
          2 0025D9  AAC7 0053                            SRM,R2,'E000'X    Y@BYTE,AUTO
          2 0025DB       E000

     5299    28772    6                               PS_PR.PS = KX$L3.VS;

  28772   2 0025DC  A2C6 002F                            LLH,R2   47,B6
          2 0025DE  2009                                 SOL,R2   9
          2 0025DF  AAC7 0053                            SRM,R2,'0E00'X    Y@BYTE,AUTO
          2 0025E1       0E00

     5300    28773    6                               CALL_L2.PRM1$->BYTE_ARRAY(TEMP1) = Y@BYTE;

  28773   2 0025E2  A2C7 0053                            LLH,R2   Y@BYTE,AUTO
          2 0025E4  A7B5                                 STH,R2   ,B5,R3

     5301    28774    6                            END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:623  
  28774   2 0025E5  0F81 0016                            B        s:28782,PREL

     5302    28775    5                         ELSE
     5303    28776    6                            DO;

     5304    28777    6                               CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1) =

  28777   2 0025E7  B855                                 LDR,R3   R5
          2 0025E8  3E01                                 ADV,R3   1
          2 0025E9  C2B5                                 LLH,R4   ,B5,R3
          2 0025EA  C570 0001                            AND,R4   1,IMO
          2 0025EC  A846 002F                            LDR,R2   47,B6
          2 0025EE  2001                                 SOL,R2   1
          2 0025EF  A570 01FE                            AND,R2   510,IMO
          2 0025F1  AA54                                 ADD,R2   R4
          2 0025F2  A7B5                                 STH,R2   ,B5,R3

     5305    28778    6                                  MOD(CALL_L2.PRM1$->BYTE_ARRAY(TEMP1+1),2)+
     5306    28779    6                                  KX$L3.VR*2;
     5307    28780    6                               CALL_L2.PRM1$->BYTE_ARRAY(TEMP1) = KX$L3.VS*2;

  28780   2 0025F3  E2C6 002F                            LLH,R6   47,B6
          2 0025F5  6001                                 SOL,R6   1
          2 0025F6  DC80 0000 001D  01                   LDB,B5   CALL_L2+7
          2 0025F9  A847 002B                            LDR,R2   TEMP1,AUTO
          2 0025FB  E7A5                                 STH,R6   ,B5,R2

     5308    28781    6                            END;

     5309    28782    5                      KX$L3.DCNTP = 0;

  28782   2 0025FC  87C6 0030                            CLH      48,B6

     5310    28783    5                      KX$L3.VS = MOD ( KX$L3.VS + 1, 8+120*BITBIN(KX$L3.EXTSEQ));

  28783   2 0025FE  E846 0029                            LDR,R6   41,B6
          2 002600  6045                                 SOR,R6   5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:624  
          2 002601  E570 0001                            AND,R6   1,IMO
          2 002603  F2C6 002F                            LLH,R7   47,B6
          2 002605  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 002607  6C00                                 LDV,R6   0
          2 002608  8470 0000 0001                       AID      1,IMO
          2 00260B  C847 00BC                            LDR,R4   KV@USRENT+5,AUTO
          2 00260D  4F78                                 MLV,R4   120
          2 00260E  4E08                                 ADV,R4   8
          2 00260F  F354                                 DIV,R7   R4
          2 002610  E7C6 002F                            STH,R6   47,B6

     5311    28784    5                      KX$L3.DCNT = KX$L3.DCNT + 1;

  28784   2 002612  E2C6 002E                            LLH,R6   46,B6
          2 002614  6E01                                 ADV,R6   1
          2 002615  E7C6 002E                            STH,R6   46,B6

     5312    28785    5                      IF KX$L3.DCNT >= KX$L3.CALL_OPTS.SNDWND

  28785   2 002617  E2C6 002E                            LLH,R6   46,B6
          2 002619  B846 0016                            LDR,R3   22,B6
          2 00261B  B570 00FF                            AND,R3   255,IMO
          2 00261D  E953                                 CMR,R6   R3
          2 00261E  0801 000A                            BAL      s:28791,PREL

     5313    28786    5                         THEN
     5314    28787    6                            DO;

     5315    28788    6                               KX$L3.BLK = '1'B;

  28788   2 002620  8946 0029                            LBT,'2000'X       41,B6
  28788   2 002622       2000

     5316    28789    6                               KX_STATS_X25.P_BLK = KX_STATS_X25.P_BLK + 1;

  28789   2 002623  8A80 0000 0035  xsym                 INC      KX_STATS_X25+53
          2 002626  8E80 0000 0034  xsym                 CAD      KX_STATS_X25+52
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:625  

     5317    28790    6                            END;

     5318    28791    5                      IF NOT KX$L3.TMRBLK.ON

  28791   2 002629  89C6 0056                            CMZ      86,B6
          2 00262B  0801 0004                            BAL      s:28794,PREL

     5319    28792    5                         THEN
     5320    28793    5                            CALL Y$START_DATTMR;

  28793   2 00262D  E3C0 0470                            LNJ,B6   s:0,PREL
          2 00262F       0001                            DC       s:28794,PREL

     5321    28794    5   CALL_KXF:          CALL KXF$FRAME ( CALL_L2 );

  28794   2 002630  BB80 0000 000A  03   CALL_KXF        LAB,B3   +10
          2 002633  CBF0 0100                            LAB,B4   256,IMO
          2 002635  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 002638       0001                            DC       s:28795,PREL

     5322    28795    5                      FOUND_ONE = '1'B;

  28795   2 002639  8947 0050                            LBT,'8000'X       FOUND_ONE,AUTO
  28795   2 00263B       8000

     5323    28796    5                   END;

     5324    28797        /*
     5325    28798                                             Is this context block to be released?
     5326    28799        */
     5327    28800    4   NXT_L3:
     5328    28801    4             TEMP2$ = L3$;

  28801   2 00263C  ECC7 0008            NXT_L3          LDB,B6   L3$,AUTO
          2 00263E  EFC7 0042                            STB,B6   TEMP2$,AUTO

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:626  
     5329    28802    4             L3$ = KX$L3.NEXT$;

  28802   2 002640  DC86                                 LDB,B5   ,B6
          2 002641  DFC7 0008                            STB,B5   L3$,AUTO

     5330    28803    4             IF TEMP2$->KX$L3.MAYBE

  28803   2 002643  82C6 0029                            LB,'1000'X        41,B6
  28803   2 002645       1000
          2 002646  0581 000D                            BBF      s:28806,PREL

     5331    28804    4                THEN
     5332    28805    4                   CALL KXS$RLSL3_MAYBE ( TEMP2$ );

  28805   2 002648  CBC7 0042                            LAB,B4   TEMP2$,AUTO
          2 00264A  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 00264C  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00264E  CBF0 0100                            LAB,B4   256,IMO
          2 002650  E380 0000 0000  xent                 LNJ,B6   KXS$RLSL3_MAYBE
          2 002653       0001                            DC       s:28806,PREL

     5333    28806    4             IF KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK THEN GOTO L2_BLOCKED;

  28806   2 002654  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002656  89C6 002E                            CMZ      46,B6
          2 002658  0801 00A3                            BAL      s:28866,PREL
          2 00265A  82C6 002E                            LB,'0800'X        46,B6
          2 00265C       0800
          2 00265D  0581 009E                            BBF      s:28866,PREL

     5334    28807    4          END;

  28807   2 00265F  8DC7 0008                            CMN      L3$,AUTO
          2 002661  0981 FEF7                            BNE      s:28725,PREL

     5335    28808    3       END;   /*  DO UNTIL ... */

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:627  
  28808   2 002663  89C7 0050                            CMZ      FOUND_ONE,AUTO
          2 002665  0801 FEE9                            BAL      s:28717,PREL

     5336    28809        /*
     5337    28810                                             The last check is for new data
     5338    28811                                             to transmit. There is some added
     5339    28812                                             complexity in this loop since it
     5340    28813                                             is actually traversed several
     5341    28814                                             times.  This allows each L3 a
     5342    28815                                             shot at sending a packet before
     5343    28816                                             one busy L3 hogs the window.
     5344    28817        */
     5345    28818    3       DO UNTIL NOT FOUND_ONE;

     5346    28819    3          IF NOT KX$L2.FLG.BLK THEN KX$L2.FLG.DATAVL = '0'B;

  28819   2 002667  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002669  89C6 002E                            CMZ      46,B6
          2 00266B  0801 0004                            BAL      s:28820,PREL

  28819   2 00266D  8846 002E                            LBF,'0002'X       46,B6
  28819   2 00266F       0002

     5347    28820    3          L3$ = KX$L2.L3_HEAD$;

  28820   2 002670  DCC6 0034                            LDB,B5   52,B6
          2 002672  DFC7 0008                            STB,B5   L3$,AUTO

     5348    28821    3          FOUND_ONE = '0'B;

  28821   2 002674  8747 0050                            CL       FOUND_ONE,AUTO

     5349    28822    4          DO WHILE ( L3$ ~= ADDR(NIL));

  28822   2 002676  0F81 0064                            B        s:28859,PREL

     5350    28823    4             IF NOT KX$L3.BLK AND NOT KX$L3.RNR
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:628  

  28823   2 002678  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00267A  82C6 0029                            LB,'2000'X        41,B6
          2 00267C       2000
          2 00267D  0501 0058                            BBT      s:28857,PREL
          2 00267F  82C6 0029                            LB,'0800'X        41,B6
          2 002681       0800
          2 002682  0501 0053                            BBT      s:28857,PREL
          2 002684  E2C6 0031                            LLH,R6   49,B6
          2 002686  6D09                                 CMV,R6   9
          2 002687  0981 004E                            BNE      s:28857,PREL

     5351    28824    4                AND KX$L3.STATE.CURRENT = %Y_ST_DATA#
     5352    28825    4                THEN
     5353    28826    5                   DO;

     5354    28827        /*
     5355    28828                                             This inner loop does not check
     5356    28829                                             KX$L2.FLG.BLK.  This allows every
     5357    28830                                             every L3 to construct at least
     5358    28831                                         one data packet, if L3 is not blocked. If the data
     5359    28832                                             could not be sent immediately,
     5360    28833                                             it is queued to the context.
     5361    28834        */
     5362    28835    5                      IF KX$L3.OUT_.ADR$ = ADDR(NIL) /*N* AND KX$L3.DATA */

  28835   2 002689  8DC6 000D                            CMN      13,B6
          2 00268B  0981 0037                            BNE      s:28850,PREL

     5363    28836    5                         THEN /*                Try to get some data  */
     5364    28837    6                            DO;

     5365    28838    6                               CALL_CM.CAL$ = L3$;

  28838   2 00268D  EF80 0000 0037  01                   STB,B6   CALL_CM+1

     5366    28839    6                               CALL_CM.RCV$ = KX$L3.CM$;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:629  

  28839   2 002690  DCC6 0004                            LDB,B5   4,B6
          2 002692  DF80 0000 0039  01                   STB,B5   CALL_CM+3

     5367    28840    6                               CALL_CM.EVN = %KX_CM_EV_DATRQS#;

  28840   2 002695  6C0C                                 LDV,R6   12
          2 002696  EF00 0000 0036  01                   STR,R6   CALL_CM

     5368    28841    6                               CALL CALL_CM.RCV$->Y@CNCMNG ( CALL_CM );

  28841   2 002699  BB80 0000 000C  03                   LAB,B3   +12
          2 00269C  9C85                                 LDB,B1   ,B5
          2 00269D  CBF0 0100                            LAB,B4   256,IMO
          2 00269F  E381                                 LNJ,B6   ,B1
          2 0026A0       0001                            DC       s:28842,PREL

     5369    28842    6                               IF CALL_CM.V_.BYTSIZ = 0

  28842   2 0026A1  E800 0000 0044  01                   LDR,R6   CALL_CM+14
          2 0026A4  6901 0031                            BEZ,R6   s:28857,PREL

     5370    28843    6                                  THEN
     5371    28844    6                                     GOTO NO_DATA;
     5372    28845    6                               KX$L3.OUT_ = CALL_CM.V_;

  28845   2 0026A6  EB80 0000 0000  01                   LAB,B6   IN_PKTHDR
          2 0026A9  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0026AB  5C0A                                 LDV,R5   10
          2 0026AC  0021                                 ALR      ;
          2 0026AD       4806 0041                                ALPHANUM(65,B6,,8),;
          2 0026AF       4005 000D                                ALPHANUM(13,B5,,R5,FILL)

     5373    28846    6                               CALL_CM.V_.BYTSIZ = 0;

  28846   2 0026B1  437F                                 CSYNC    s:28845+10,SPREL
          2 0026B2  8700 0000 0044  01                   CL       CALL_CM+14
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:630  

     5374    28847    6                               KX$L3.OUT_QBIT = CALL_CM.PRS.PRM1;

  28847   2 0026B5  E800 0000 0045  01                   LDR,R6   CALL_CM+15
          2 0026B8  6041                                 SOR,R6   1
          2 0026B9  EAC5 002A                            SRM,R6,'4000'X    42,B5
          2 0026BB       4000

     5375    28848    6                               KX$L3.OUT_MBIT = CALL_CM.PRS.PRM2;

  28848   2 0026BC  E800 0000 0045  01                   LDR,R6   CALL_CM+15
          2 0026BF  6042                                 SOR,R6   2
          2 0026C0  EAC5 002A                            SRM,R6,'1000'X    42,B5
          2 0026C2       1000

     5376    28849    6                            END;

     5377    28850    5                      IF KX$L3.OUT_.ADR$ ~= ADDR(NIL)

  28850   2 0026C3  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0026C5  8DC6 000D                            CMN      13,B6
          2 0026C7  0901 000E                            BE       s:28857,PREL

     5378    28851    5                         THEN
     5379    28852    6                            DO;

     5380    28853    6                               FOUND_ONE = '1'B;

  28853   2 0026C9  8947 0050                            LBT,'8000'X       FOUND_ONE,AUTO
  28853   2 0026CB       8000

     5381    28854    6                               L3EXT = BITBIN(KX$L3.EXTSEQ);

  28854   2 0026CC  E846 0029                            LDR,R6   41,B6
          2 0026CE  6045                                 SOR,R6   5
          2 0026CF  E570 0001                            AND,R6   1,IMO
          2 0026D1  EF47 003E                            STR,R6   L3EXT,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:631  

     5382    28855    6                               CALL Y$DATOUT;

  28855   2 0026D3  E3C0 0226                            LNJ,B6   s:0,PREL
          2 0026D5       0001                            DC       s:28857,PREL

     5383    28856    6                            END;

     5384    28857    5                   END;

     5385    28858    4   NO_DATA:  L3$ = KX$L3.NEXT$;

  28858   2 0026D6  ECC7 0008            NO_DATA         LDB,B6   L3$,AUTO
          2 0026D8  DC86                                 LDB,B5   ,B6
          2 0026D9  DFC7 0008                            STB,B5   L3$,AUTO

     5386    28859    4          END;

  28859   2 0026DB  8DC7 0008                            CMN      L3$,AUTO
          2 0026DD  0981 FF9A                            BNE      s:28823,PREL

     5387    28860    3          IF FOUND_ONE AND ( KX$L2.FLG.BLK OR NOT KX$L2.FLG.OK ) THEN GOTO L2_BLOCKED;

  28860   2 0026DF  89C7 0050                            CMZ      FOUND_ONE,AUTO
          2 0026E1  0881 000C                            BAGE     s:28861,PREL
          2 0026E3  ECC7 000C                            LDB,B6   L2$,AUTO
          2 0026E5  89C6 002E                            CMZ      46,B6
          2 0026E7  0801 0014                            BAL      s:28866,PREL
          2 0026E9  82C6 002E                            LB,'0800'X        46,B6
          2 0026EB       0800
          2 0026EC  0581 000F                            BBF      s:28866,PREL

     5388    28861    3       END;

  28861   2 0026EE  89C7 0050                            CMZ      FOUND_ONE,AUTO
          2 0026F0  0801 FF76                            BAL      s:28819,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:632  
     5389    28862
     5390    28863    2       CALL_L2.RCV$ = ADDR(NIL);

  28863   2 0026F2  EB80 0000 0000                       LAB,B6   0
          2 0026F5  EF80 0000 0019  01                   STB,B6   CALL_L2+3

     5391    28864    2       RETURN;

  28864   2 0026F8  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 0026FA  C3C6 0001                            LNJ,B4   1,B6

     5392    28865
     5393    28866    2   L2_BLOCKED: KX$L2.FLG.DATAVL = '1'B;

  28866   2 0026FC  ECC7 000C            L2_BLOCKED      LDB,B6   L2$,AUTO
          2 0026FE  8946 002E                            LBT,'0002'X       46,B6
          2 002700       0002

     5394    28867    2       CALL_L2.RCV$ = ADDR(NIL);

  28867   2 002701  DB80 0000 0000                       LAB,B5   0
          2 002704  DF80 0000 0019  01                   STB,B5   CALL_L2+3

     5395    28868    2       KX_STATS_X25.F_BLK = KX_STATS_X25.F_BLK + 1;

  28868   2 002707  8A80 0000 0043  xsym                 INC      KX_STATS_X25+67
          2 00270A  8E80 0000 0042  xsym                 CAD      KX_STATS_X25+66

     5396    28869    2       RETURN;

  28869   2 00270D  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 00270F  C3C6 0001                            LNJ,B4   1,B6

     5397    28870    2   END; /* Y$GETDAT */
     5398    28871        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:633  
     5399    28872        /*I* NAME: Y$RESET_L3CNTX*/
     5400    28873        /*I* PURPOSE: Get a level 3 context block ready for another call */
     5401    28874        /*I* CALL: CALL Y$RESET_L3CNTX */
     5402    28875        /*I* INPUT: L3$  ->  level 3 context */
     5403    28876        /*I* OUTPUT: None */
     5404    28877
     5405    28878    1   Y$RESET_L3CNTX: PROC;

  28878   2 002711  EFC7 004E            Y$RESET_L3CNTX  STB,B6   TERMID+8,AUTO

     5406    28879        /*
     5407    28880                                             Clear assorted flags
     5408    28881        */
     5409    28882    2       KX$L3.DATA = '0'B;

  28882   2 002713  DCC7 0008                            LDB,B5   L3$,AUTO
          2 002715  8845 0029                            LBF,'8000'X       41,B5
          2 002717       8000

     5410    28883    2       KX$L3.BLK = '0'B;

  28883   2 002718  8845 0029                            LBF,'2000'X       41,B5
  28883   2 00271A       2000

     5411    28884    2       KX$L3.INPBLK = '0'B;

  28884   2 00271B  8845 0029                            LBF,'0200'X       41,B5
  28884   2 00271D       0200

     5412    28885    2       KX$L3.INTPND = '0'B;

  28885   2 00271E  8845 0029                            LBF,'4000'X       41,B5
  28885   2 002720       4000

     5413    28886    2       KX$L3.RNR = '0'B;

  28886   2 002721  8845 0029                            LBF,'0800'X       41,B5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:634  
  28886   2 002723       0800

     5414    28887    2       CALL Y$STOP_INTTMR;

  28887   2 002724  E3C0 0319                            LNJ,B6   s:0,PREL
          2 002726       0001                            DC       s:28888,PREL

     5415    28888    2       CALL Y$STOP_DATTMR;

  28888   2 002727  E3C0 0346                            LNJ,B6   s:0,PREL
          2 002729       0001                            DC       s:28895,PREL

     5416    28889        /*
     5417    28890                                             If incoming data was being
     5418    28891                                             reconstructed, it will never
     5419    28892                                             be finished.  Release the buffer
     5420    28893                                             that was in use.
     5421    28894        */
     5422    28895    2       IF KX$L3.IN_.ADR$ ~= ADDR(NIL)

  28895   2 00272A  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00272C  8DC6 0008                            CMN      8,B6
          2 00272E  0901 0037                            BE       s:28910,PREL

     5423    28896    2          THEN
     5424    28897    3             DO;

     5425    28898    3                IF KX$L3.IN_.BFRSIZ = 0

  28898   2 002730  E846 000C                            LDR,R6   12,B6
          2 002732  6981 000F                            BNEZ,R6  s:28902,PREL

     5426    28899    3                   THEN
     5427    28900    3                      CALL KXS$RLSBFR ( KX$L3.IN_.ADR$ );

  28900   2 002734  DBC6 0008                            LAB,B5   8,B6
          2 002736  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:635  
          2 002738  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00273A  CBF0 0100                            LAB,B4   256,IMO
          2 00273C  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 00273F       0001                            DC       s:28900+12,PREL
          2 002740  0F81 0014                            B        s:28903,PREL

     5428    28901    3                   ELSE
     5429    28902    3                      CALL KVB$RLSSYS ( KX$L3.IN_.BFRSIZ/2, KX$L3.IN_.ADR$ );

  28902   2 002742  6041                                 SOR,R6   1
          2 002743  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 002745  DBC6 0008                            LAB,B5   8,B6
          2 002747  DFC7 00BF                            STB,B5   KV@USRENT+8,AUTO
          2 002749  CBC7 00BC                            LAB,B4   KV@USRENT+5,AUTO
          2 00274B  CFC7 00BD                            STB,B4   KV@USRENT+6,AUTO
          2 00274D  BBC7 00BD                            LAB,B3   KV@USRENT+6,AUTO
          2 00274F  CBF0 0200                            LAB,B4   512,IMO
          2 002751  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 002754       0001                            DC       s:28903,PREL

     5430    28903    3                KX$L3.IN_ = '0'B;

  28903   2 002755  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002757  5C0A                                 LDV,R5   10
          2 002758  0021                                 ALR      ;
          2 002759       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00275B       4006 0008                                ALPHANUM(8,B6,,R5,FILL)

     5431    28904    3                KX$L3.IN_QBIT = '0'B;

  28904   2 00275D  437F                                 CSYNC    s:28903+7,SPREL
          2 00275E  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002760  8846 002A                            LBF,'8000'X       42,B6
          2 002762       8000

     5432    28905    3                KX$L3.IN_MBIT = '0'B;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:636  
  28905   2 002763  8846 002A                            LBF,'2000'X       42,B6
  28905   2 002765       2000

     5433    28906    3             END;

     5434    28907        /*
     5435    28908           Delete any buffered input packets.
     5436    28909        */
     5437    28910    3       DO WHILE (KX$L3.INP_HEAD$ ~= ADDR(NIL));

  28910   2 002766  0F81 0017                            B        s:28914,PREL

     5438    28911    3          DAT$ = KX$L3.INP_HEAD$;

  28911   2 002768  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00276A  DCC6 0049                            LDB,B5   73,B6
          2 00276C  DFC7 0006                            STB,B5   DAT$,AUTO

     5439    28912    3          KX$L3.INP_HEAD$ = KX$DATA.L3_LIST$;

  28912   2 00276E  CCC5 0004                            LDB,B4   4,B5
          2 002770  CFC6 0049                            STB,B4   73,B6

     5440    28913    3          CALL KXS$RLSBFR ( DAT$ );

  28913   2 002772  BBC7 0006                            LAB,B3   DAT$,AUTO
          2 002774  BFC7 00BC                            STB,B3   KV@USRENT+5,AUTO
          2 002776  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 002778  CBF0 0100                            LAB,B4   256,IMO
          2 00277A  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 00277D       0001                            DC       s:28914,PREL

     5441    28914    3       END;

  28914   2 00277E  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002780  8DC6 0049                            CMN      73,B6
          2 002782  09E6                                 BNE      s:28911,SPREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:637  

     5442    28915    2       KX$L3.INP_TAIL$ = ADDR(NIL);

  28915   2 002783  DB80 0000 0000                       LAB,B5   0
          2 002786  DFC6 004B                            STB,B5   75,B6

     5443    28916        /*
     5444    28917                                             The outstanding data packet
     5445    28918                                             counts are back to 0.
     5446    28919        */
     5447    28920    2       KX$L3.DCNTP = 0;

  28920   2 002788  87C6 0030                            CLH      48,B6

     5448    28921    2       KX$L3.DCNT = 0;

  28921   2 00278A  87C6 002E                            CLH      46,B6

     5449    28922        /*
     5450    28923                                             Reset all the window values
     5451    28924        */
     5452    28925    2       KX$L3.PPR = 0;

  28925   2 00278C  8846 002E                            LBF,'00FF'X       46,B6
  28925   2 00278E       00FF

     5453    28926    2       KX$L3.VS = 0;

  28926   2 00278F  87C6 002F                            CLH      47,B6

     5454    28927    2       KX$L3.VR = 0;

  28927   2 002791  8846 002F                            LBF,'00FF'X       47,B6
  28927   2 002793       00FF

     5455    28928        /*
     5456    28929                                             Outstanding data packets must
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:638  
     5457    28930                                             be released and acknowledged
     5458    28931                                             to CM.
     5459    28932        */
     5460    28933
     5461    28934    2       KX$L2.FLG.DATAVL = '1'B;

  28934   2 002794  CCC7 000C                            LDB,B4   L2$,AUTO
          2 002796  8944 002E                            LBT,'0002'X       46,B4
          2 002798       0002

     5462    28935    2       IF KX$L3.TOACT = %KX_L3_TOACT_RSTRTR#   /* need to retransmit data pkt */

  28935   2 002799  E2C6 0075                            LLH,R6   117,B6
          2 00279B  6D03                                 CMV,R6   3
          2 00279C  0981 000F                            BNE      s:28944,PREL
          2 00279E  D2C6 0031                            LLH,R5   49,B6
          2 0027A0  5D09                                 CMV,R5   9
          2 0027A1  0901 0004                            BE       s:28940,PREL
          2 0027A3  5D0A                                 CMV,R5   10
          2 0027A4  0981 0007                            BNE      s:28944,PREL

     5463    28936    2          AND ( KX$L3.STATE.CURRENT = %Y_ST_DATA#
     5464    28937    2          OR KX$L3.STATE.CURRENT = %Y_ST_RESET# )
     5465    28938    2          THEN
     5466    28939    3             DO;

     5467    28940    3                KX$L3.RTR$ = KX$L3.D_LIST_HEAD$;

  28940   2 0027A6  DCC6 0045                            LDB,B5   69,B6
          2 0027A8  DFC6 0043                            STB,B5   67,B6

     5468    28941    3             END;

  28941   2 0027AA  0F81 003D                            B        s:28962,PREL

     5469    28942    2          ELSE
     5470    28943    3             DO;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:639  

     5471    28944    4                DO WHILE ( KX$L3.D_LIST_HEAD$ ~= ADDR(NIL) );

  28944   2 0027AC  0F81 0022                            B        s:28951,PREL

     5472    28945    4                   DAT$ = KX$L3.D_LIST_HEAD$;

  28945   2 0027AE  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0027B0  DCC6 0045                            LDB,B5   69,B6
          2 0027B2  DFC7 0006                            STB,B5   DAT$,AUTO

     5473    28946    4                   KX$L3.D_LIST_HEAD$ = KX$DATA.L3_LIST$;

  28946   2 0027B4  CCC5 0004                            LDB,B4   4,B5
          2 0027B6  CFC6 0045                            STB,B4   69,B6

     5474    28947    4                   KX$DATA.RLS.L3 = '1'B;

  28947   2 0027B8  8945 0006                            LBT,'8000'X       6,B5
  28947   2 0027BA       8000

     5475    28948    4                   IF ( KX$DATA.RLS_STAT = %KX_BFR_RLS_OK# )

  28948   2 0027BB  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 0027BD  E845 0006                            LDR,R6   6,B5
          2 0027BF  604D                                 SOR,R6   13
          2 0027C0  6D07                                 CMV,R6   7
          2 0027C1  0981 000D                            BNE      s:28951,PREL

     5476    28949    4                      THEN
     5477    28950    4                         CALL KXS$RLSBFR ( DAT$ );

  28950   2 0027C3  CBC7 0006                            LAB,B4   DAT$,AUTO
          2 0027C5  CFC7 00BC                            STB,B4   KV@USRENT+5,AUTO
          2 0027C7  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0027C9  CBF0 0100                            LAB,B4   256,IMO
          2 0027CB  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:640  
          2 0027CE       0001                            DC       s:28951,PREL

     5478    28951    4                END /* LOOP */;

  28951   2 0027CF  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0027D1  8DC6 0045                            CMN      69,B6
          2 0027D3  09DB                                 BNE      s:28945,SPREL

     5479    28952    3                KX$L3.D_LIST_TAIL$ = ADDR(NIL);

  28952   2 0027D4  DB80 0000 0000                       LAB,B5   0
          2 0027D7  DFC6 0047                            STB,B5   71,B6

     5480    28953    3                KX$L3.RTR$ = KX$L3.D_LIST_TAIL$;

  28953   2 0027D9  DFC6 0043                            STB,B5   67,B6

     5481    28954    3                KX$L3.OUT_ = '0'B;

  28954   2 0027DB  5C0A                                 LDV,R5   10
          2 0027DC  0021                                 ALR      ;
          2 0027DD       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0027DF       4006 000D                                ALPHANUM(13,B6,,R5,FILL)

     5482    28955    3                KX$L3.OUT_QBIT = '0'B;

  28955   2 0027E1  437F                                 CSYNC    s:28954+5,SPREL
          2 0027E2  8846 002A                            LBF,'4000'X       42,B6
          2 0027E4       4000

     5483    28956    3                KX$L3.OUT_MBIT = '0'B;

  28956   2 0027E5  8846 002A                            LBF,'1000'X       42,B6
  28956   2 0027E7       1000

     5484    28957    3             END;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:641  
     5485    28958
     5486    28959        /*
     5487    28960           Clear the CTL queue.
     5488    28961        */
     5489    28962    3       DO WHILE ( KX$L3.CTL_Q_HEAD$ ~= ADDR(NIL) );

  28962   2 0027E8  0F81 0017                            B        s:28966,PREL

     5490    28963    3          TEMP2$ = KX$L3.CTL_Q_HEAD$;

  28963   2 0027EA  ECC7 0008                            LDB,B6   L3$,AUTO
          2 0027EC  DCC6 003F                            LDB,B5   63,B6
          2 0027EE  DFC7 0042                            STB,B5   TEMP2$,AUTO

     5491    28964    3          KX$L3.CTL_Q_HEAD$ = TEMP2$ -> KX$TDATA.L3_LIST$;

  28964   2 0027F0  CCC5 0004                            LDB,B4   4,B5
          2 0027F2  CFC6 003F                            STB,B4   63,B6

     5492    28965    3          CALL KXS$RLSBFR ( TEMP2$ );

  28965   2 0027F4  DBC7 0042                            LAB,B5   TEMP2$,AUTO
          2 0027F6  DFC7 00BC                            STB,B5   KV@USRENT+5,AUTO
          2 0027F8  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0027FA  CBF0 0100                            LAB,B4   256,IMO
          2 0027FC  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 0027FF       0001                            DC       s:28966,PREL

     5493    28966    3       END;

  28966   2 002800  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002802  8DC6 003F                            CMN      63,B6
          2 002804  09E6                                 BNE      s:28963,SPREL

     5494    28967    2       KX$L3.CTL_Q_TAIL$ = ADDR(NIL);

  28967   2 002805  DB80 0000 0000                       LAB,B5   0
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:642  
          2 002808  DFC6 0041                            STB,B5   65,B6

     5495    28968        /*
     5496    28969           Restore DAT$ for main procedure.
     5497    28970        */
     5498    28971    2       DAT$ = FPT_X25.PRM1$;

  28971   2 00280A  CCC7 0004                            LDB,B4   @FPT_X25,AUTO
          2 00280C  BCC4 0007                            LDB,B3   7,B4
          2 00280E  BFC7 0006                            STB,B3   DAT$,AUTO

     5499    28972        /*
     5500    28973           Update the circuits count in the stats buffer.
     5501    28974        */
     5502    28975    2       IF (KX$L3.STATE.LAST = %Y_ST_DATA# OR KX$L3.STATE.LAST = %Y_ST_RESET#) AND
             28975                ACTION ~= %Y_ACT_RSTRCV#

  28975   2 002810  E846 0031                            LDR,R6   49,B6
          2 002812  E570 00FF                            AND,R6   255,IMO
          2 002814  6D09                                 CMV,R6   9
          2 002815  0901 0004                            BE       s:28975+10,PREL
          2 002817  6D0A                                 CMV,R6   10
          2 002818  0981 0018                            BNE      s:28979,PREL
          2 00281A  D847 0034                            LDR,R5   ACTION,AUTO
          2 00281C  5D17                                 CMV,R5   23
          2 00281D  0901 0013                            BE       s:28979,PREL
          2 00281F  5D14                                 CMV,R5   20
          2 002820  0901 0010                            BE       s:28979,PREL
          2 002822  5D25                                 CMV,R5   37
          2 002823  0901 000D                            BE       s:28979,PREL
          2 002825  5D0A                                 CMV,R5   10
          2 002826  0901 000A                            BE       s:28979,PREL

     5503    28976    2          AND ACTION ~= %Y_ACT_RST_D1# AND ACTION ~= %Y_ACT_VCRST# AND ACTION ~= %
             28976                   Y_ACT_RST_PRS#
     5504    28977    2          THEN
     5505    28978    2             KX_STATS_X25.CIRCUITS = KX_STATS_X25.CIRCUITS - 1;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:643  

  28978   2 002828  8C80 0000 003E  xsym                 LDI      KX_STATS_X25+62
          2 00282B  8470 FFFF FFFF                       AID      -1,IMO
          2 00282E  8D00 0000 003E  xsym                 SDI      KX_STATS_X25+62

     5506    28979    2   END /* SUBROUTINE */;

  28979   2 002831  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 002833  C3C6 0001                            LNJ,B4   1,B6

     5507    28980        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:644  
     5508    28981
     5509    28982    1   Y$ER0:

  28982   2 002835  EFC7 004E            Y$ER0           STB,B6   TERMID+8,AUTO

     5510    28983    1       PROC ;
     5511    28984    2       ERCOD = STOP ;

  28984   2 002837  8C80 0000 0394  00                   LDI      STOP
          2 00283A  8D47 0022                            SDI      ERCOD,AUTO
          2 00283C  0F81 0003                            B        s:28986,PREL

     5512    28985    2   Y$ER0000: ENTRY ;

  28985   2 00283E  EFC7 004E            Y$ER0000        STB,B6   TERMID+8,AUTO

     5513    28986    2       S_VAL0 = PEVENT ;

  28986   2 002840  E847 002C                            LDR,R6   PEVENT,AUTO
          2 002842  EF47 0026                            STR,R6   S_VAL0,AUTO

     5514    28987    2       GOTO L_COMMON ;

  28987   2 002844  0F81 0011                            B        s:29013,PREL

     5515    28988
     5516    28989    2   Y$ER00: ENTRY ;

  28989   2 002846  EFC7 004E            Y$ER00          STB,B6   TERMID+8,AUTO

     5517    28990    2       ERCOD = INV_LCN0 ;

  28990   2 002848  8C80 0000 03AE  00                   LDI      INV_LCN0
          2 00284B  8D47 0022                            SDI      ERCOD,AUTO
          2 00284D  0F81 0003                            B        s:28992,PREL

     5518    28991    2   Y$ER000: ENTRY ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:645  

  28991   2 00284F  EFC7 004E            Y$ER000         STB,B6   TERMID+8,AUTO

     5519    28992    2       S_VAL0 = IN_PKTHDR.TYPE ;

  28992   2 002851  E280 0000 0001  01                   LLH,R6   IN_PKTHDR+1
          2 002854  EF47 0026                            STR,R6   S_VAL0,AUTO

     5520    28993    2   L_COMMON:
     5521    28994            %WRSYSLOG ( ERRCOD = ERCOD ,
     5522    28995            TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5523    28996            VAL0 = S_VAL0 ,
     5524    28997            VAL2 = LCN ) ;

  29013   2 002856  DBC7 0028            L_COMMON        LAB,B5   LCN,AUTO
          2 002858  DFC7 00C6                            STB,B5   KV@USRENT+15,AUTO
          2 00285A  CB80 0000 0000                       LAB,B4   0
          2 00285D  CFC7 00C4                            STB,B4   KV@USRENT+13,AUTO
          2 00285F  BBC7 0026                            LAB,B3   S_VAL0,AUTO
          2 002861  BFC7 00C2                            STB,B3   KV@USRENT+11,AUTO
          2 002863  AB80 0000 0000                       LAB,B2   0
          2 002866  AFC7 00C0                            STB,B2   KV@USRENT+9,AUTO
          2 002868  9CC7 0024                            LDB,B1   S_TRMID$,AUTO
          2 00286A  EBC1 0012                            LAB,B6   18,B1
          2 00286C  EFC7 00BE                            STB,B6   KV@USRENT+7,AUTO
          2 00286E  EBC7 0022                            LAB,B6   ERCOD,AUTO
          2 002870  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 002872  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 002874  CBF0 0600                            LAB,B4   1536,IMO
          2 002876  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 002879       0001                            DC       s:29016,PREL

     5525    29015
     5526    29016    2       RETURN ; END ;

  29016   2 00287A  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 00287C  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:646  

     5527    29017
     5528    29018    1   Y$ER1:

  29018   2 00287E  EFC7 005A            Y$ER1           STB,B6   FCL_PRESENT+1,AUTO

     5529    29019    1       PROC ;
     5530    29020
     5531    29021               %WRSYSLOG  (  ERRCOD = ERCOD ,
     5532    29022                  TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5533    29023                  VAL0 = S_VAL0 ,
     5534    29024                  VAL1 = S_VAL1 ,
     5535    29025                  VAL2 = LCN ) ;

  29041   2 002880  DBC7 0028                            LAB,B5   LCN,AUTO
          2 002882  DFC7 00C6                            STB,B5   KV@USRENT+15,AUTO
          2 002884  CBC7 0027                            LAB,B4   S_VAL1,AUTO
          2 002886  CFC7 00C4                            STB,B4   KV@USRENT+13,AUTO
          2 002888  BBC7 0026                            LAB,B3   S_VAL0,AUTO
          2 00288A  BFC7 00C2                            STB,B3   KV@USRENT+11,AUTO
          2 00288C  AB80 0000 0000                       LAB,B2   0
          2 00288F  AFC7 00C0                            STB,B2   KV@USRENT+9,AUTO
          2 002891  9CC7 0024                            LDB,B1   S_TRMID$,AUTO
          2 002893  EBC1 0012                            LAB,B6   18,B1
          2 002895  EFC7 00BE                            STB,B6   KV@USRENT+7,AUTO
          2 002897  EBC7 0022                            LAB,B6   ERCOD,AUTO
          2 002899  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 00289B  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 00289D  CBF0 0600                            LAB,B4   1536,IMO
          2 00289F  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 0028A2       0001                            DC       s:29044,PREL

     5536    29043
     5537    29044    2       RETURN ; END ;

  29044   2 0028A3  ECC7 005A                            LDB,B6   FCL_PRESENT+1,AUTO
          2 0028A5  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:647  

     5538    29045
     5539    29046    1   Y$ER2:

  29046   2 0028A7  EFC7 005A            Y$ER2           STB,B6   FCL_PRESENT+1,AUTO

     5540    29047    1       PROC ;
     5541    29048
     5542    29049               %WRSYSLOG  (  ERRCOD = ERCOD ,
     5543    29050                  TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5544    29051                  VAL0 = S_VAL0 ,
     5545    29052                  VAL1 = DIAG ,
     5546    29053                  VAL2 = LCN ,
     5547    29054                  BFR = KX$XPACKET );

  29070   2 0028A9  DBC7 0028                            LAB,B5   LCN,AUTO
          2 0028AB  DFC7 00C6                            STB,B5   KV@USRENT+15,AUTO
          2 0028AD  CBC7 002F                            LAB,B4   DIAG,AUTO
          2 0028AF  CFC7 00C4                            STB,B4   KV@USRENT+13,AUTO
          2 0028B1  BBC7 0026                            LAB,B3   S_VAL0,AUTO
          2 0028B3  BFC7 00C2                            STB,B3   KV@USRENT+11,AUTO
          2 0028B5  ACC7 0006                            LDB,B2   DAT$,AUTO
          2 0028B7  AFC7 00C0                            STB,B2   KV@USRENT+9,AUTO
          2 0028B9  9CC7 0024                            LDB,B1   S_TRMID$,AUTO
          2 0028BB  EBC1 0012                            LAB,B6   18,B1
          2 0028BD  EFC7 00BE                            STB,B6   KV@USRENT+7,AUTO
          2 0028BF  EBC7 0022                            LAB,B6   ERCOD,AUTO
          2 0028C1  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 0028C3  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0028C5  CBF0 0600                            LAB,B4   1536,IMO
          2 0028C7  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 0028CA       0001                            DC       s:29073,PREL

     5548    29072
     5549    29073    2       RETURN ; END ;

  29073   2 0028CB  ECC7 005A                            LDB,B6   FCL_PRESENT+1,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:648  
          2 0028CD  C3C6 0001                            LNJ,B4   1,B6

     5550    29074
     5551    29075    1   Y$ER:

  29075   2 0028CF  EFC7 00BA            Y$ER            STB,B6   KV@USRENT+3,AUTO

     5552    29076    1       PROC ;
     5553    29077
     5554    29078               %WRSYSLOG  (  ERRCOD = ERCOD ,
     5555    29079                  TRMID = "S_TRMID$->KH$CHN.TERMID" ,
     5556    29080                  VAL2 = LCN ) ;

  29096   2 0028D1  DBC7 0028                            LAB,B5   LCN,AUTO
          2 0028D3  DFC7 00C6                            STB,B5   KV@USRENT+15,AUTO
          2 0028D5  CB80 0000 0000                       LAB,B4   0
          2 0028D8  CFC7 00C4                            STB,B4   KV@USRENT+13,AUTO
          2 0028DA  BB80 0000 0000                       LAB,B3   0
          2 0028DD  BFC7 00C2                            STB,B3   KV@USRENT+11,AUTO
          2 0028DF  AB80 0000 0000                       LAB,B2   0
          2 0028E2  AFC7 00C0                            STB,B2   KV@USRENT+9,AUTO
          2 0028E4  9CC7 0024                            LDB,B1   S_TRMID$,AUTO
          2 0028E6  EBC1 0012                            LAB,B6   18,B1
          2 0028E8  EFC7 00BE                            STB,B6   KV@USRENT+7,AUTO
          2 0028EA  EBC7 0022                            LAB,B6   ERCOD,AUTO
          2 0028EC  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 0028EE  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 0028F0  CBF0 0600                            LAB,B4   1536,IMO
          2 0028F2  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 0028F5       0001                            DC       s:29099,PREL

     5557    29098
     5558    29099    2       RETURN ; END ;

  29099   2 0028F6  ECC7 00BA                            LDB,B6   KV@USRENT+3,AUTO
          2 0028F8  C3C6 0001                            LNJ,B4   1,B6

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:649  
     5559    29100
     5560    29101        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:650  
     5561    29102
     5562    29103        /*I*
     5563    29104              NAME: Y$DATOUT - send a Data packet
     5564    29105              PURPOSE: Send a Data packet
     5565    29106                       If it didn't all fit,
     5566    29107                          Save information for future packets
     5567    29108                          Set the DATA flag
     5568    29109                       Set the BLK flag if the window is exhausted
     5569    29110        */
     5570    29111    1   Y$DATOUT: PROC;

  29111   2 0028FA  EFC7 0054            Y$DATOUT        STB,B6   FCLLNG,AUTO

     5571    29112    2   DCL SIZ UBIN STATIC;
     5572    29113    2   DCL BFR$ PTR STATIC;
     5573    29114    2   DCL YESBIT BIT(16) CONSTANT INIT('1'B);
     5574    29115
     5575    29116
     5576    29117    2       IF KX$L3.OUT_.BYTSIZ <= KX_BUF.SIZ ( KX$L3.CALL_OPTS.SNDPCKSIZ )

  29117   2 0028FC  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0028FE  B845 0015                            LDR,R3   21,B5
          2 002900  B570 00FF                            AND,R3   255,IMO
          2 002902  E845 0010                            LDR,R6   16,B5
          2 002904  E930 0000 001E  xsym                 CMR,R6   KX_BUF+30,R3
          2 002907  0301 0006                            BG       s:29124,PREL

     5577    29118    2          THEN
     5578    29119    3             DO;

     5579    29120    3                SIZ = KX$L3.OUT_.BYTSIZ;

  29120   2 002909  EF00 0000 0046  01                   STR,R6   SIZ

     5580    29121    3             END;

  29121   2 00290C  0F81 0007                            B        s:29127,PREL
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:651  

     5581    29122    2          ELSE
     5582    29123    3             DO;

     5583    29124    3                SIZ = KX_BUF.SIZ ( KX$L3.CALL_OPTS.SNDPCKSIZ );

  29124   2 00290E  D830 0000 001E  xsym                 LDR,R5   KX_BUF+30,R3
          2 002911  DF00 0000 0046  01                   STR,R5   SIZ

     5584    29125    3             END;

     5585    29126
     5586    29127    2       CALL KXS$GETBFR ( SIZ, BFR$, YESBIT )

  29127   2 002914  BB80 0000 000E  03                   LAB,B3   +14
          2 002917  CBF0 0300                            LAB,B4   768,IMO
          2 002919  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 00291C       0003                            DC       s:29129,PREL
          2 00291D  0F81 000A                            B        s:29132,PREL

     5587    29128    3          WHENALTRETURN DO;

     5588    29129    3                KX$L2.FLG.DATAVL = '1'B;

  29129   2 00291F  ECC7 000C                            LDB,B6   L2$,AUTO
          2 002921  8946 002E                            LBT,'0002'X       46,B6
          2 002923       0002

     5589    29130    3                RETURN; /* No buffers now - just leave the data ready to go */

  29130   2 002924  ECC7 0054                            LDB,B6   FCLLNG,AUTO
          2 002926  C3C6 0001                            LNJ,B4   1,B6

     5590    29131    3             END;
     5591    29132    2       DAT$ = BFR$;

  29132   2 002928  EC80 0000 0047  01                   LDB,B6   BFR$
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:652  
          2 00292B  EFC7 0006                            STB,B6   DAT$,AUTO

     5592    29133    2       OUT_PKTHDR = '0'B;

  29133   2 00292D  DB80 0000 0000  01                   LAB,B5   IN_PKTHDR
          2 002930  5C05                                 LDV,R5   5
          2 002931  0021                                 ALR      ;
          2 002932       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 002934       4005 0003                                ALPHANUM(3,B5,,R5,FILL)

     5593    29134    2       OUT_PKTHDR.Q_BIT = KX$L3.OUT_QBIT;

  29134   2 002936  437F                                 CSYNC    s:29133+8,SPREL
          2 002937  ECC7 0008                            LDB,B6   L3$,AUTO
          2 002939  E846 002A                            LDR,R6   42,B6
          2 00293B  6001                                 SOL,R6   1
          2 00293C  EA80 0000 0003  01                   SRM,R6,'8000'X    OUT_PKTHDR
          2 00293F       8000

     5594    29135        /*
     5595    29136           P(S) and P(R) are stuffed in Y$PACKET_OUT.
     5596    29137        */
     5597    29138    2       IF KX$L3.TOACT ~= %KX_L3_TOACT_RSTRTR#

  29138   2 002940  E2C6 0075                            LLH,R6   117,B6
          2 002942  6D03                                 CMV,R6   3
          2 002943  0901 0008                            BE       s:29143,PREL

     5598    29139    2          THEN
     5599    29140    2             KX$DATA.RLS.L3 = '1'B;      /* no need to keep this data packet */

  29140   2 002945  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 002947  8945 0006                            LBT,'8000'X       6,B5
          2 002949       8000
          2 00294A  0F81 0015                            B        s:29150,PREL

     5600    29141    2          ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:653  
     5601    29142    3             DO;

     5602    29143    3                IF KX$L3.D_LIST_HEAD$ = ADDR(NIL)

  29143   2 00294C  8DC6 0045                            CMN      69,B6
          2 00294E  0981 0007                            BNE      s:29147,PREL

     5603    29144    3                   THEN
     5604    29145    3                      KX$L3.D_LIST_HEAD$ = DAT$;

  29145   2 002950  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 002952  DFC6 0045                            STB,B5   69,B6
          2 002954  0F81 0007                            B        s:29148,PREL

     5605    29146    3                   ELSE
     5606    29147    3                      KX$L3.D_LIST_TAIL$ -> KX$TDATA.L3_LIST$ = DAT$;

  29147   2 002956  DCC6 0047                            LDB,B5   71,B6
          2 002958  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 00295A  CFC5 0004                            STB,B4   4,B5

     5607    29148    3                KX$L3.D_LIST_TAIL$ = DAT$;

  29148   2 00295C  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 00295E  DFC6 0047                            STB,B5   71,B6

     5608    29149    3             END;

     5609    29150    2       KX$DATA.L3_LIST$ = ADDR(NIL);

  29150   2 002960  DB80 0000 0000                       LAB,B5   0
          2 002963  CCC7 0006                            LDB,B4   DAT$,AUTO
          2 002965  DFC4 0004                            STB,B5   4,B4

     5610    29151    2       KX$DATA.CNT = SIZ + %LD + L2EXT + L3EXT;

  29151   2 002967  E800 0000 0046  01                   LDR,R6   SIZ
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:654  
          2 00296A  EA47 003D                            ADD,R6   L2EXT,AUTO
          2 00296C  EA47 003E                            ADD,R6   L3EXT,AUTO
          2 00296E  DCC7 0006                            LDB,B5   DAT$,AUTO
          2 002970  6E05                                 ADV,R6   5
          2 002971  EF45 0007                            STR,R6   7,B5

     5611    29152    2       STR$ = KX$L3.OUT_.ADR$;

  29152   2 002973  DCC6 000D                            LDB,B5   13,B6
          2 002975  DFC7 0010                            STB,B5   STR$,AUTO

     5612    29153    2       SUBSTR ( DATSTR, LENGTHC(KX$PACKET)+L2EXT+L3EXT, SIZ ) =

  29153   2 002977  E847 003D                            LDR,R6   L2EXT,AUTO
          2 002979  EA47 003E                            ADD,R6   L3EXT,AUTO
          2 00297B  C846 000F                            LDR,R4   15,B6
          2 00297D  AB85                                 LAB,B2   ,B5
          2 00297E  A854                                 LDR,R2   R4
          2 00297F  EF47 00BC                            STR,R6   KV@USRENT+5,AUTO
          2 002981  E800 0000 0046  01                   LDR,R6   SIZ
          2 002984  BCC7 0006                            LDB,B3   DAT$,AUTO
          2 002986  B847 00BC                            LDR,R3   KV@USRENT+5,AUTO
          2 002988  3E15                                 ADV,R3   21
          2 002989  0008                                 MMM

     5613    29154    2          SUBSTR ( OUTSTR, KX$L3.OUT_.BYTX, SIZ );
     5614    29155    2       KX$L3.OUT_.BYTSIZ = KX$L3.OUT_.BYTSIZ - SIZ;

  29155   2 00298A  ECC7 0008                            LDB,B6   L3$,AUTO
          2 00298C  E846 0010                            LDR,R6   16,B6
          2 00298E  E200 0000 0046  01                   SUB,R6   SIZ
          2 002991  EF46 0010                            STR,R6   16,B6

     5615    29156    2       KX$L3.OUT_.BYTX = KX$L3.OUT_.BYTX + SIZ;

  29156   2 002993  B846 000F                            LDR,R3   15,B6
          2 002995  BA00 0000 0046  01                   ADD,R3   SIZ
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:655  
          2 002998  BF46 000F                            STR,R3   15,B6

     5616    29157    2       IF KX$L3.OUT_.BYTSIZ = 0

  29157   2 00299A  6981 000C                            BNEZ,R6  s:29163,PREL

     5617    29158    2          THEN
     5618    29159    3             DO;

     5619    29160    3                KX$L3.OUT_.ADR$ = ADDR(NIL);

  29160   2 00299C  CB80 0000 0000                       LAB,B4   0
          2 00299F  CFC6 000D                            STB,B4   13,B6

     5620    29161    3                KX_STATS_X25.D_CMPPACKETS_OUT = KX_STATS_X25.D_CMPPACKETS_OUT + 1;

  29161   2 0029A1  8A80 0000 0037  xsym                 INC      KX_STATS_X25+55
          2 0029A4  8E80 0000 0036  xsym                 CAD      KX_STATS_X25+54

     5621    29162    3             END;

     5622    29163    2       IF KX$L3.OUT_.BYTSIZ ~= 0 OR ( KX$L3.NOREASM AND KX$L3.OUT_MBIT )

  29163   2 0029A7  E846 0010                            LDR,R6   16,B6
          2 0029A9  6981 000B                            BNEZ,R6  s:29166,PREL
          2 0029AB  82C6 0076                            LB,'0080'X        118,B6
          2 0029AD       0080
          2 0029AE  0581 0019                            BBF      s:29173,PREL
          2 0029B0  82C6 002A                            LB,'1000'X        42,B6
          2 0029B2       1000
          2 0029B3  0581 0014                            BBF      s:29173,PREL

     5623    29164    2          THEN
     5624    29165    3             DO;

     5625    29166    3                IF L3EXT = 0

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:656  
  29166   2 0029B5  B847 003E                            LDR,R3   L3EXT,AUTO
          2 0029B7  3981 0007                            BNEZ,R3  s:29170,PREL

     5626    29167    3                   THEN
     5627    29168    3                      OUT_PKTHDR.PR_BITS.M = '1'B;

  29168   2 0029B9  8900 0000 0004  01                   LBT,'1000'X       OUT_PKTHDR+1
  29168   2 0029BC       1000
          2 0029BD  0F81 0005                            B        s:29171,PREL

     5628    29169    3                   ELSE
     5629    29170    3                      OUT_PKTHDR.PR_EXT.M = '1'B;

  29170   2 0029BF  8900 0000 0004  01                   LBT,'0001'X       OUT_PKTHDR+1
  29170   2 0029C2       0001

     5630    29171    3                KX$L2.FLG.DATAVL = '1'B;

  29171   2 0029C3  CCC7 000C                            LDB,B4   L2$,AUTO
          2 0029C5  8944 002E                            LBT,'0002'X       46,B4
          2 0029C7       0002

     5631    29172    3             END;

     5632    29173    2       CALL Y$PACKET_OUT;

  29173   2 0029C8  E3C0 E82C                            LNJ,B6   s:0,PREL
          2 0029CA       0001                            DC       s:29174,PREL

     5633    29174    2       KX_STATS_X25.D_PACKETS_OUT = KX_STATS_X25.D_PACKETS_OUT + 1;

  29174   2 0029CB  8A80 0000 001F  xsym                 INC      KX_STATS_X25+31
          2 0029CE  8E80 0000 001E  xsym                 CAD      KX_STATS_X25+30

     5634    29175    2       KX_STATS_X25.D_BYTES_OUT = KX_STATS_X25.D_BYTES_OUT + SIZ;

  29175   2 0029D1  F800 0000 0046  01                   LDR,R7   SIZ
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:657  
          2 0029D4  6C00                                 LDV,R6   0
          2 0029D5  8400 0000 0038  xsym                 AID      KX_STATS_X25+56
          2 0029D8  8D00 0000 0038  xsym                 SDI      KX_STATS_X25+56

     5635    29176
     5636    29177    2       RETURN;

  29177   2 0029DB  ECC7 0054                            LDB,B6   FCLLNG,AUTO
          2 0029DD  C3C6 0001                            LNJ,B4   1,B6

     5637    29178    2   END Y$DATOUT;
     5638    29179        %EJECT ;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:658  
     5639    29180    1   Y$DVCADM:

  29180   2 0029DF  EFC7 004E            Y$DVCADM        STB,B6   TERMID+8,AUTO

     5640    29181    1       PROC ALTRET ;
     5641    29182    2       IF L3$ ~= ADDR(NIL) THEN

  29182   2 0029E1  8DC7 0008                            CMN      L3$,AUTO
          2 0029E3  0901 0026                            BE       s:29187,PREL

     5642    29183    2             CALL KHA$DVCADM( CODE, KHA_ERROR,

  29183   2 0029E5  DCC7 0008                            LDB,B5   L3$,AUTO
          2 0029E7  CCC5 0006                            LDB,B4   6,B5
          2 0029E9  BBF0 0001                            LAB,B3   1,IMO
          2 0029EB  BFC7 00C6                            STB,B3   KV@USRENT+15,AUTO
          2 0029ED  AB80 0000 0014  03                   LAB,B2   +20
          2 0029F0  AFC7 00C4                            STB,B2   KV@USRENT+13,AUTO
          2 0029F2  9BC4 0012                            LAB,B1   18,B4
          2 0029F4  9FC7 00C2                            STB,B1   KV@USRENT+11,AUTO
          2 0029F6  EBC4 0012                            LAB,B6   18,B4
          2 0029F8  EFC7 00C0                            STB,B6   KV@USRENT+9,AUTO
          2 0029FA  CBC7 0035                            LAB,B4   KHA_ERROR,AUTO
          2 0029FC  CFC7 00BE                            STB,B4   KV@USRENT+7,AUTO
          2 0029FE  EBC7 0029                            LAB,B6   CODE,AUTO
          2 002A00  EFC7 00BC                            STB,B6   KV@USRENT+5,AUTO
          2 002A02  BBC7 00BC                            LAB,B3   KV@USRENT+5,AUTO
          2 002A04  CBF0 0600                            LAB,B4   1536,IMO
          2 002A06  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          2 002A09       0001                            DC       s:29187,PREL

     5643    29184    2                KX$L3.CHN$->KH$CHN.TERMID,
     5644    29185    2                KX$L3.CHN$->KH$CHN.TERMID,
     5645    29186    2                VECTOR(NIL), 1);
     5646    29187    2       RETURN ;

  29187   2 002A0A  ECC7 004E                            LDB,B6   TERMID+8,AUTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:659  
          2 002A0C  C3C6 0001                            LNJ,B4   1,B6

     5647    29188    2   END ;
     5648    29189
     5649    29190    1   Y$STOP_TMR:

  29190   2 002A0E  EFC7 004E            Y$STOP_TMR      STB,B6   TERMID+8,AUTO

     5650    29191    1       PROC ;
     5651    29192                  %STOP_TIMER ( FPTN = KX$L3.TMRBLK );

  29197   2 002A10  DCC7 0008                            LDB,B5   L3$,AUTO
          2 002A12  89C5 0056                            CMZ      86,B5
          2 002A14  0881 0025                            BAGE     s:29201,PREL

  29197   2 002A16  8845 0056                            LBF,'8000'X       86,B5
  29197   2 002A18       8000

  29197   2 002A19  8DC5 004D                            CMN      77,B5
          2 002A1B  0981 0008                            BNE      s:29197+20,PREL

  29197   2 002A1D  CCC5 004F                            LDB,B4   79,B5
          2 002A1F  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2
          2 002A22  0F81 0007                            B        s:29198,PREL

  29197   2 002A24  CCC5 004D                            LDB,B4   77,B5
          2 002A26  BCC5 004F                            LDB,B3   79,B5
          2 002A28  BFC4 0002                            STB,B3   2,B4

  29198   2 002A2A  8DC5 004F                            CMN      79,B5
          2 002A2C  0981 0008                            BNE      s:29198+11,PREL

  29198   2 002A2E  ECC5 004D                            LDB,B6   77,B5
          2 002A30  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 002A33  0F81 0006                            B        s:29201,PREL

  29198   2 002A35  ECC5 004F                            LDB,B6   79,B5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:660  
          2 002A37  CCC5 004D                            LDB,B4   77,B5
          2 002A39  CF86                                 STB,B4   ,B6

     5652    29201    2       RETURN ;

  29201   2 002A3A  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 002A3C  C3C6 0001                            LNJ,B4   1,B6

     5653    29202    2   END ;
     5654    29203    1   Y$STOP_INTTMR:

  29203   2 002A3E  EFC7 0050            Y$STOP_INTTMR   STB,B6   FOUND_ONE,AUTO

     5655    29204    1       PROC ;
     5656    29205                  %STOP_TIMER ( FPTN = KX$L3.INTTMRBLK );

  29210   2 002A40  DCC7 0008                            LDB,B5   L3$,AUTO
          2 002A42  89C5 006A                            CMZ      106,B5
          2 002A44  0881 0025                            BAGE     s:29214,PREL

  29210   2 002A46  8845 006A                            LBF,'8000'X       106,B5
  29210   2 002A48       8000

  29210   2 002A49  8DC5 0061                            CMN      97,B5
          2 002A4B  0981 0008                            BNE      s:29210+20,PREL

  29210   2 002A4D  CCC5 0063                            LDB,B4   99,B5
          2 002A4F  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2
          2 002A52  0F81 0007                            B        s:29211,PREL

  29210   2 002A54  CCC5 0061                            LDB,B4   97,B5
          2 002A56  BCC5 0063                            LDB,B3   99,B5
          2 002A58  BFC4 0002                            STB,B3   2,B4

  29211   2 002A5A  8DC5 0063                            CMN      99,B5
          2 002A5C  0981 0008                            BNE      s:29211+11,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:661  
  29211   2 002A5E  ECC5 0061                            LDB,B6   97,B5
          2 002A60  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 002A63  0F81 0006                            B        s:29214,PREL

  29211   2 002A65  ECC5 0063                            LDB,B6   99,B5
          2 002A67  CCC5 0061                            LDB,B4   97,B5
          2 002A69  CF86                                 STB,B4   ,B6

     5657    29214    2       RETURN ;

  29214   2 002A6A  ECC7 0050                            LDB,B6   FOUND_ONE,AUTO
          2 002A6C  C3C6 0001                            LNJ,B4   1,B6

     5658    29215    2   END ;
     5659    29216    1   Y$STOP_DATTMR:

  29216   2 002A6E  EFC7 0062            Y$STOP_DATTMR   STB,B6   EVENT,AUTO

     5660    29217    1       PROC ;
     5661    29218                  %STOP_TIMER ( FPTN = KX$L3.DATTMRBLK );

  29223   2 002A70  DCC7 0008                            LDB,B5   L3$,AUTO
          2 002A72  89C5 0060                            CMZ      96,B5
          2 002A74  0881 0025                            BAGE     s:29227,PREL

  29223   2 002A76  8845 0060                            LBF,'8000'X       96,B5
  29223   2 002A78       8000

  29223   2 002A79  8DC5 0057                            CMN      87,B5
          2 002A7B  0981 0008                            BNE      s:29223+20,PREL

  29223   2 002A7D  ECC5 0059                            LDB,B6   89,B5
          2 002A7F  EF80 0000 0002  xsym                 STB,B6   KX_TMRBLK+2
          2 002A82  0F81 0007                            B        s:29224,PREL

  29223   2 002A84  ECC5 0057                            LDB,B6   87,B5
          2 002A86  CCC5 0059                            LDB,B4   89,B5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:662  
          2 002A88  CFC6 0002                            STB,B4   2,B6

  29224   2 002A8A  8DC5 0059                            CMN      89,B5
          2 002A8C  0981 0008                            BNE      s:29224+11,PREL

  29224   2 002A8E  ECC5 0057                            LDB,B6   87,B5
          2 002A90  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 002A93  0F81 0006                            B        s:29227,PREL

  29224   2 002A95  ECC5 0059                            LDB,B6   89,B5
          2 002A97  CCC5 0057                            LDB,B4   87,B5
          2 002A99  CF86                                 STB,B4   ,B6

     5662    29227    2       RETURN ;

  29227   2 002A9A  ECC7 0062                            LDB,B6   EVENT,AUTO
          2 002A9C  C3C6 0001                            LNJ,B4   1,B6

     5663    29228    2   END ;
     5664    29229
     5665    29230    1   Y$START_DATTMR: PROC;

  29230   2 002A9E  EFC7 0062            Y$START_DATTMR  STB,B6   EVENT,AUTO

     5666    29231             %START_TIMER ( FPTN=KX$L3.DATTMRBLK, PRD=KX$L3.T25 );

  29236   2 002AA0  DCC7 0008                            LDB,B5   L3$,AUTO
          2 002AA2  E845 006E                            LDR,R6   110,B5
          2 002AA4  6901 002E                            BEZ,R6   s:29247+18,PREL

  29236   2 002AA6  EAC5 005F                            SRM,R6,'00FF'X    95,B5
  29236   2 002AA8       00FF

  29246   2 002AA9  89C5 0060                            CMZ      96,B5
          2 002AAB  0801 004F                            BAL      s:29251,PREL

  29246   2 002AAD  8945 0060                            LBT,'8000'X       96,B5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:663  
  29246   2 002AAF       8000

  29246   2 002AB0  EB80 0000 0000                       LAB,B6   0
          2 002AB3  EFC5 0057                            STB,B6   87,B5

  29246   2 002AB5  8D80 0000 0002  xsym                 CMN      KX_TMRBLK+2
          2 002AB8  0981 0008                            BNE      s:29247,PREL

  29246   2 002ABA  CBC5 0057                            LAB,B4   87,B5
          2 002ABC  CF80 0000 0000  xsym                 STB,B4   KX_TMRBLK
          2 002ABF  0F81 0007                            B        s:29247+6,PREL

  29247   2 002AC1  CBC5 0057                            LAB,B4   87,B5
          2 002AC3  BC80 0000 0002  xsym                 LDB,B3   KX_TMRBLK+2
          2 002AC6  CF83                                 STB,B4   ,B3

  29247   2 002AC7  EC80 0000 0002  xsym                 LDB,B6   KX_TMRBLK+2
          2 002ACA  EFC5 0059                            STB,B6   89,B5

  29247   2 002ACC  CBC5 0057                            LAB,B4   87,B5
          2 002ACE  CF80 0000 0002  xsym                 STB,B4   KX_TMRBLK+2

  29247   2 002AD1  0F81 0029                            B        s:29251,PREL

  29247   2 002AD3  89C5 0060                            CMZ      96,B5
          2 002AD5  0881 0025                            BAGE     s:29251,PREL

  29248   2 002AD7  8845 0060                            LBF,'8000'X       96,B5
  29248   2 002AD9       8000

  29248   2 002ADA  8DC5 0057                            CMN      87,B5
          2 002ADC  0981 0008                            BNE      s:29248+14,PREL

  29248   2 002ADE  ECC5 0059                            LDB,B6   89,B5
          2 002AE0  EF80 0000 0002  xsym                 STB,B6   KX_TMRBLK+2
          2 002AE3  0F81 0007                            B        s:29248+20,PREL

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:664  
  29248   2 002AE5  ECC5 0057                            LDB,B6   87,B5
          2 002AE7  CCC5 0059                            LDB,B4   89,B5
          2 002AE9  CFC6 0002                            STB,B4   2,B6

  29248   2 002AEB  8DC5 0059                            CMN      89,B5
          2 002AED  0981 0008                            BNE      s:29249+7,PREL

  29249   2 002AEF  ECC5 0057                            LDB,B6   87,B5
          2 002AF1  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 002AF4  0F81 0006                            B        s:29251,PREL

  29249   2 002AF6  ECC5 0059                            LDB,B6   89,B5
          2 002AF8  CCC5 0057                            LDB,B4   87,B5
          2 002AFA  CF86                                 STB,B4   ,B6

     5667    29251    2       RETURN;

  29251   2 002AFB  ECC7 0062                            LDB,B6   EVENT,AUTO
          2 002AFD  C3C6 0001                            LNJ,B4   1,B6

     5668    29252    2   END;
     5669    29253        %EJECT;
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:665  
     5670    29254
     5671    29255
     5672    29256    1   Y$START_TIMER: PROC ( PRD );

  29256   2 002AFF  EFC7 004E            Y$START_TIMER   STB,B6   TERMID+8,AUTO

     5673    29257
     5674    29258    2   DCL PRD UBIN;
     5675    29259
     5676    29260        /*
     5677    29261            There are so many occurrences of %START_TIMER that it make more
     5678    29262            sense to do what the macro does in an internal routine.
     5679    29263        */
     5680    29264
     5681    29265    2       IF PRD ~= 0

  29265   2 002B01  DCC7 0050                            LDB,B5   @PRD,AUTO
          2 002B03  E805                                 LDR,R6   ,B5
          2 002B04  6901 0030                            BEZ,R6   s:29284,PREL

     5682    29266    2          THEN
     5683    29267    3             DO;

     5684    29268    3                KX$L3.TMRBLK.CNT = PRD;

  29268   2 002B06  CCC7 0008                            LDB,B4   L3$,AUTO
          2 002B08  EAC4 0055                            SRM,R6,'00FF'X    85,B4
          2 002B0A       00FF

     5685    29269    3                IF NOT KX$L3.TMRBLK.ON

  29269   2 002B0B  89C4 0056                            CMZ      86,B4
          2 002B0D  0801 0051                            BAL      s:29300,PREL

     5686    29270    3                   THEN
     5687    29271    4                      DO;

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:666  
     5688    29272    4                         KX$L3.TMRBLK.ON = '1'B;

  29272   2 002B0F  8944 0056                            LBT,'8000'X       86,B4
  29272   2 002B11       8000

     5689    29273    4                         KX$L3.TMRBLK.FLNK$ = ADDR(NIL);

  29273   2 002B12  BB80 0000 0000                       LAB,B3   0
          2 002B15  BFC4 004D                            STB,B3   77,B4

     5690    29274    4                         IF KX_TMRBLK.QTL$ = ADDR(NIL)

  29274   2 002B17  8D80 0000 0002  xsym                 CMN      KX_TMRBLK+2
          2 002B1A  0981 0008                            BNE      s:29278,PREL

     5691    29275    4                            THEN
     5692    29276    4                               KX_TMRBLK.QHD$ = ADDR ( KX$L3.TMRBLK );

  29276   2 002B1C  EBC4 004D                            LAB,B6   77,B4
          2 002B1E  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 002B21  0F81 0007                            B        s:29279,PREL

     5693    29277    4                            ELSE
     5694    29278    4                              KX_TMRBLK.QTL$ -> KX$BTMRBLK.FLNK$ = ADDR ( KX$L3.TMRBLK
             29278                                        );

  29278   2 002B23  EBC4 004D                            LAB,B6   77,B4
          2 002B25  AC80 0000 0002  xsym                 LDB,B2   KX_TMRBLK+2
          2 002B28  EF82                                 STB,B6   ,B2

     5695    29279    4                         KX$L3.TMRBLK.BLNK$ = KX_TMRBLK.QTL$;

  29279   2 002B29  EC80 0000 0002  xsym                 LDB,B6   KX_TMRBLK+2
          2 002B2C  EFC4 004F                            STB,B6   79,B4

     5696    29280    4                         KX_TMRBLK.QTL$ = ADDR ( KX$L3.TMRBLK );

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:667  
  29280   2 002B2E  BBC4 004D                            LAB,B3   77,B4
          2 002B30  BF80 0000 0002  xsym                 STB,B3   KX_TMRBLK+2

     5697    29281    4                      END;

     5698    29282    3             END;

  29282   2 002B33  0F81 002B                            B        s:29300,PREL

     5699    29283    2          ELSE
     5700    29284    2             IF KX$L3.TMRBLK.ON

  29284   2 002B35  CCC7 0008                            LDB,B4   L3$,AUTO
          2 002B37  89C4 0056                            CMZ      86,B4
          2 002B39  0881 0025                            BAGE     s:29300,PREL

     5701    29285    2                THEN
     5702    29286    3                   DO;

     5703    29287    3                      KX$L3.TMRBLK.ON = '0'B;

  29287   2 002B3B  8844 0056                            LBF,'8000'X       86,B4
  29287   2 002B3D       8000

     5704    29288    3                      IF KX$L3.TMRBLK.FLNK$ = ADDR(NIL)

  29288   2 002B3E  8DC4 004D                            CMN      77,B4
          2 002B40  0981 0008                            BNE      s:29292,PREL

     5705    29289    3                         THEN
     5706    29290    3                            KX_TMRBLK.QTL$ = KX$L3.TMRBLK.BLNK$;

  29290   2 002B42  BCC4 004F                            LDB,B3   79,B4
          2 002B44  BF80 0000 0002  xsym                 STB,B3   KX_TMRBLK+2
          2 002B47  0F81 0007                            B        s:29293,PREL

     5707    29291    3                         ELSE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:668  
     5708    29292    3                           KX$L3.TMRBLK.FLNK$ -> KX$BTMRBLK.BLNK$ = KX$L3.TMRBLK.BLNK$
             29292                                     ;

  29292   2 002B49  BCC4 004D                            LDB,B3   77,B4
          2 002B4B  ACC4 004F                            LDB,B2   79,B4
          2 002B4D  AFC3 0002                            STB,B2   2,B3

     5709    29293    3                      IF KX$L3.TMRBLK.BLNK$ = ADDR(NIL)

  29293   2 002B4F  8DC4 004F                            CMN      79,B4
          2 002B51  0981 0008                            BNE      s:29297,PREL

     5710    29294    3                         THEN
     5711    29295    3                            KX_TMRBLK.QHD$ = KX$L3.TMRBLK.FLNK$;

  29295   2 002B53  ECC4 004D                            LDB,B6   77,B4
          2 002B55  EF80 0000 0000  xsym                 STB,B6   KX_TMRBLK
          2 002B58  0F81 0006                            B        s:29300,PREL

     5712    29296    3                         ELSE
     5713    29297    3                           KX$L3.TMRBLK.BLNK$ -> KX$BTMRBLK.FLNK$ = KX$L3.TMRBLK.FLNK$
             29297                                     ;

  29297   2 002B5A  ECC4 004F                            LDB,B6   79,B4
          2 002B5C  BCC4 004D                            LDB,B3   77,B4
          2 002B5E  BF86                                 STB,B3   ,B6

     5714    29298    3                   END;

     5715    29299
     5716    29300    2       RETURN;

  29300   2 002B5F  ECC7 004E                            LDB,B6   TERMID+8,AUTO
          2 002B61  C3C6 0001                            LNJ,B4   1,B6
     5717    29301
     5718    29302    2   END Y$START_TIMER;
     5719    29303    1   END KXP$PACKET;     /* SUBROUTINE */
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:669  

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:670  
--  Include file information  --

   KV_GLB_M.:E05TOU  is referenced.
   KV$GLBCTX.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXP$PACKET.
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:671  

 **** Variables and constants ****

  ****  Section 000 RoData KXP$PACKET

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

   3A0-0-0/w STRC(32)    r     1 ADDRESS_MODIFIED         3A2-0-0/w STRC(32)    r     1 BAD_CLR_RQS
   3AA-0-0/w STRC(32)    r     1 BAD_GFI                  3AC-0-0/w STRC(32)    r     1 BAD_LCN0_GFI
   3B8-0-0/w STRC(32)    r     1 BAD_PR                   3BA-0-0/w STRC(32)    r     1 BAD_PS
   3A6-0-0/w STRC(32)    r     1 CALL_OUT                 3C8-0-0/w STRC(32)    r     1 CALRTREXH
   3CC-0-0/w STRC(32)    r     1 CALTIMOUT                386-0-0/w STRC(32)    r     1 CLRRCV
   3DC-0-0/w STRC(32)    r     1 CLRTIMOUT                3D0-0-0/w STRC(32)    r     1 CLR_P2
   3D2-0-0/w STRC(32)    r     1 CLR_P3                   3D4-0-0/w STRC(32)    r     1 CLR_P4
   38A-0-0/w STRC(32)    r     1 DCL_EVENT                3A4-0-0/w STRC(32)    r     1 DEVLGNFAL
   38C-0-0/w STRC(32)    r     1 DSB                      3C6-0-0/w STRC(32)    r     1 FTLCLR
   388-0-0/w STRC(32)    r     1 HC_DSC                   3CA-0-0/w STRC(32)    r     1 INVCALPRM
   3BC-0-0/w STRC(32)    r     1 INV_INTC                 3AE-0-0/w STRC(32)    r     1 INV_LCN0
   3C2-0-0/w STRC(32)    r     1 INV_RESTART_C
   3F0-0-0/w UBIN(16)    r     1 LOG_TO_CP6(0:12)
   3C0-0-0/w STRC(32)    r     1 NEW_RESTART              3B2-0-0/w STRC(32)    r     1 NO_L3CTX
   3C4-0-0/w STRC(32)    r     1 NO_LCN                   1C2-0-0/c STRC(7200)  r     1 PVC_STATE_TABLE
   39E-0-0/w STRC(32)    r     1 REDIRECTED_CALL          384-0-0/w STRC(32)    r     1 RESTART
   3B0-0-0/w STRC(32)    r     1 RESTART_LNG              38E-0-0/w STRC(32)    r     1 RLSACT
   390-0-0/w STRC(32)    r     1 RMTDCL                   392-0-0/w STRC(32)    r     1 RSTCMP
   3B4-0-0/w STRC(32)    r     1 RSTRCV                   3D6-0-0/w STRC(32)    r     1 RSTTIMOUT
   3B6-0-0/w STRC(32)    r     1 RST_D1                   3A8-0-0/w STRC(32)    r     1 SHORT_PACKET
     0-0-0/c STRC(7200)  r     1 STATE_TABLE              394-0-0/w STRC(32)    r     1 STOP
   3D8-0-0/w STRC(32)    r     1 UNKLCN                   3DA-0-0/w STRC(32)    r     1 UNKPCK
   396-0-0/w STRC(32)    r     1 VCDWN                    398-0-0/w STRC(32)    r     1 VCLST
   39A-0-0/w STRC(32)    r     1 VCRST                    39C-0-0/w STRC(32)    r     1 VCUP
   3BE-0-0/w STRC(32)    r     1 XTR_INT                  3FD-0-0/b BIT (16)    r     1 YESBIT
   3EA-0-0/w STRC(48)    r     1 Y_ACTSCR                 3E1-0-0/w STRC(48)    r     1 Y_BADCTXPTR
   3E7-0-0/w STRC(48)    r     1 Y_UNKACT                 3E4-0-0/w STRC(48)    r     1 Y_UNKEVT

  ****  Section 001  Data  KXP$PACKET

PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:672  
  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    47-0-0/w PTR         r     1 BFR$                      36-0-0/w STRC(256)   r     1 CALL_CM
    16-0-0/w STRC(256)   r     1 CALL_L2                   26-0-0/w STRC(256)   r     1 CALL_L3
     6-0-0/w STRC(256)   r     1 FPT_DATA_OUT               0-0-0/c STRC(40)    r     1 IN_PKTHDR
     0-0-0/c CHAR(5)     r     1 IN_PKTHDR_CHR              3-0-0/c STRC(40)    r     1 OUT_PKTHDR
     3-0-0/c CHAR(5)     r     1 OUT_PKTHDR_CHR            46-0-0/w UBIN(16)    r     1 SIZ

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FPT_X25                  50-0-0/w PTR         r     1 @PRD
    34-0-0/w UBIN(16)    r     1 ACTION                    51-0-0/c STRC(8)     r     1 ADREXT
    51-0-0/c UBIN(8)     r     1 ADREXTBYT                 50-0-0/w UBIN(16)    r     1 ADRLNG
    50-0-0/c STRC(16)    r     1 ADRLNGS                   57-0-0/c CHAR(66)    r     1 BFRC
    57-0-0/c UBIN(8)     r     1 BFRU(0:65)                32-0-0/w UBIN(16)    r     1 BYTE_INDEX
    12-0-0/w STRC(256)   r     1 CALL_FPT                   E-0-0/w PTR         r     1 CHN$
    3A-0-0/w UBIN(16)    r     1 CHR_$$$_X                 3C-0-0/w UBIN(16)    r     1 CHR_DUR_X
    3B-0-0/w UBIN(16)    r     1 CHR_SEG_X                  A-0-0/w PTR         r     1 CM$
    29-0-0/w UBIN(16)    r     1 CODE                       6-0-0/w PTR         r     1 DAT$
    3F-0-0/w UBIN(16)    r     1 DATACNT                   61-0-0/w UBIN(16)    r     1 DCOUNT
    2F-0-0/w UBIN(16)    r     1 DIAG                      50-0-0/w UBIN(16)    r     1 END_LCN
    22-0-0/w STRC(32)    r     1 ERCOD                     62-0-0/w UBIN(16)    r     1 EVENT
    56-0-0/w UBIN(16)    r     1 FACILITY_LENGTH_INDEX
    55-0-0/w UBIN(16)    r     1 FCLID                     54-0-0/w UBIN(16)    r     1 FCLLNG
    59-0-0/b BIT         r     1 FCL_PRESENT(0:13)
    59-0-0/b BIT (14)    r     1 FCL_PRESENT_BITS          50-0-0/b BIT         r     1 FOUND_ONE
    83-0-0/w STRC(720)   r     1 FPT@CONNECT               B0-0-0/w STRC(64)    r     1 FPT@TERM
    52-0-0/w STRC(256)   r     1 FPT_L3                    *0-0-0/w STRC(256)   r     1 FPT_X25
    52-0-0/w UBIN(16)    r     1 I                         2E-0-0/w UBIN(16)    r     1 ID
    40-0-0/w UBIN(16)    r     1 IN_PR                     35-0-0/w UBIN(32)    r     1 KHA_ERROR
    63-0-0/c STRC(128)   r     1 KNH_MESS                  6B-0-0/w STRC(384)   r     1 KV@SNDCQ
    B7-0-0/w STRC(32)    r     1 KV@USRENT                 B5-0-0/w STRC(32)    r     1 KV@VDH_DSC
     C-0-0/w PTR         r     1 L2$                       3D-0-0/w UBIN(16)    r     1 L2EXT
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:673  
     8-0-0/w PTR         r     1 L3$                       3E-0-0/w UBIN(16)    r     1 L3EXT
    28-0-0/w UBIN(16)    r     1 LCN                       41-0-0/b BIT         r     1 MBIT
    2C-0-0/w UBIN(16)    r     1 PEVENT                    5E-0-0/w UBIN(16)    r     1 PPR
    5F-0-0/w UBIN(16)    r     1 PR                        *0-0-0/w UBIN(16)    r     1 PRD
    45-0-0/w UBIN(16)    r     1 PS                        2D-0-0/w UBIN(16)    r     1 PSTATE
    53-0-0/b STRC(8)     r     1 PS_PR                     37-0-0/b BIT         r     1 SENDING_CALL
    33-0-0/w UBIN(16)    r     1 SIZ                       10-0-0/w PTR         r     1 STR$
    24-0-0/w PTR         r     1 S_TRMID$                  26-0-0/w UBIN(16)    r     1 S_VAL0
    27-0-0/w UBIN(16)    r     1 S_VAL1                    5C-0-0/w PTR         r     1 T$
    50-0-0/w PTR         r     1 T$                        52-0-0/w PTR         r     1 T$
    56-0-0/w UBIN(16)    r     1 TEMP                      2A-0-0/w UBIN(16)    r     1 TEMP0
    2B-0-0/w UBIN(16)    r     1 TEMP1                     44-0-0/w UBIN(16)    r     1 TEMP2
    42-0-0/w PTR         r     1 TEMP2$                    46-0-0/c STRC(128)   r     1 TERMID
    57-0-0/w PTR         r     1 TL3$                      B4-0-0/b BIT         r     1 TRY_SNDCQ
    60-0-0/w UBIN(16)    r     1 VS                        53-0-0/b UBIN(8)     r     1 Y@BYTE
    39-0-0/b BIT         r     1 Y@DFRINP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(304)   r     1 FPT_CONNECT_C              0-0-0/w STRC(64)    r     1 FPT_TERM_C
     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w PTR         r     1 KV$PTR$
     0-0-0/w STRC(32)    r     1 KXX_VDH_DSC                0-0-0/w STRC(672)   r     1 KX_BUF
     0-0-0/w PTR         r     1 KX_CALLING_CM$             0-0-0/w STRC(64)    r     1 KX_CNTX
     0-0-0/b EPTR        r     1 KX_PM$(0:2)                0-0-0/w STRC(1248)  r     1 KX_STATS_X25
     0-0-0/w STRC(64)    r     1 KX_TMRBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 ADMIN_FPT                  0-0-0/c STRC(64)    r     1 ADR1
     0-0-0/c STRC(60)    r     1 ADR2
     0-0-0/c UBIN(8)     r     1 BYTE_ARRAY(0:256)
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:674  
     0-0-0/c ACHR        r     1 CHRBSD                     0-0-0/c CHAR(100)   r     1 DATSTR
     0-0-0/c CHAR(100)   r     1 INSTR                      0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(8960)  r     1 KV$STT
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w UBIN(16)    r     1 KVB_SIZ                    0-0-0/w STRC(160)   r     1 KX$BTMRBLK
     0-0-0/w STRC(128)   r     1 KX$DATA                    0-0-0/w STRC(144)   r     1 KX$FRAME
     0-0-0/w STRC(352)   r     1 KX$L1                      0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w STRC(2320)  r     1 KX$L3                      0-0-0/w STRC(384)   r     1 KX$LINKDEV
     0-0-0/w STRC(168)   r     1 KX$PACKET                  0-0-0/w STRC(128)   r     1 KX$TDATA
     0-0-0/w STRC(2320)  r     1 KX$TL3                     0-0-0/w STRC(184)   r     1 KX$XPACKET
     0-0-0/c CHAR(100)   r     1 OUTSTR                     0-0-0/c CHAR(8)     r     1 STRT
     0-0-0/c ACHR        r     1 STRT0                      0-0-0/c ACHR        r     1 STRT1
     0-0-0/c CHAR(5)     r     1 XPKTHDR                    0-0-0/w EPTR        r     1 Y@CNCMNG


   Procedure KXP$PACKET requires 11107 words for executable code.
   Procedure KXP$PACKET requires 200 words of local(AUTO) storage.

    No errors detected in file KXP$PACKET.:E05TSI    .
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:675  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:676  
          MINI XREF LISTING

ACTION
     20158**DCL     24063<<ASSIGN  24068<<ASSIGN  24081>>ASSIGN  24087>>DOCASE  24177>>IF      24189>>IF
     24271>>IF      25182>>IF      25199>>IF      28975>>IF      28975>>IF      28975>>IF      28975>>IF
ADDRESS_MODIFIED
     18044**DCL     26668>>ASSIGN  26785>>ASSIGN
ADMIN_FPT
     20351**DCL     23826<>CALL
ADMIN_FPT.CHN$
     20478**DCL     23828>>ASSIGN  23830>>ASSIGN  23831>>ASSIGN
ADMIN_FPT.TERMID.TERM
     20375**DCL     20384--REDEF
ADR1.ADR
     22529**DCL     26063<<ASSIGN  26066<<ASSIGN  26066>>ASSIGN  28472>>ASSIGN
ADR2.ADR
     22534**DCL     26063>>ASSIGN  28472<<ASSIGN
ADREXT IN PROCEDURE Y$WHAT_TYPE
     25753**DCL     25756--REDEF
ADREXT.LNG IN PROCEDURE Y$WHAT_TYPE
     25755**DCL     26283>>IF      26286>>ASSIGN  26286>>ASSIGN  26288>>ASSIGN  26289>>ASSIGN  26299>>IF
     26302>>ASSIGN  26302>>ASSIGN  26304>>ASSIGN  26305>>ASSIGN
ADREXTBYT IN PROCEDURE Y$WHAT_TYPE
     25756**DCL     26280<<ASSIGN  26296<<ASSIGN
ADRLNG IN PROCEDURE Y$WHAT_TYPE
     25752**DCL     25964<<ASSIGN  26456<<ASSIGN  26730<<ASSIGN
ADRLNGS IN PROCEDURE Y$WHAT_TYPE
     25748**DCL     25752--REDEF
ADRLNGS.LFT IN PROCEDURE Y$WHAT_TYPE
     25750**DCL     25967>>IF      25980>>ASSIGN  26068>>ASSIGN  26069>>IF      26071>>ASSIGN  26071>>ASSIGN
     26073>>ASSIGN  26459>>IF      26472>>ASSIGN  26733>>ASSIGN
ADRLNGS.RGH IN PROCEDURE Y$WHAT_TYPE
     25751**DCL     25973>>IF      25987>>IF      25987>>IF      25995>>ASSIGN  25998>>IF      26007>>IF
     26015>>IF      26018>>ASSIGN  26018>>ASSIGN  26023>>ASSIGN  26023>>ASSIGN  26059>>ASSIGN  26061>>IF
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:677  
     26063>>ASSIGN  26066>>ASSIGN  26073>>ASSIGN  26465>>IF      26472>>ASSIGN  26733>>ASSIGN
BAD_CLR_RQS
     18095**DCL     26744>>ASSIGN
BAD_GFI
     18304**DCL     23407>>ASSIGN  25862>>ASSIGN
BAD_LCN0_GFI
     18355**DCL     23430>>ASSIGN
BAD_PR
     18666**DCL     25619<>CALL
BAD_PS
     18717**DCL     25822>>ASSIGN
BFR$ IN PROCEDURE Y$DATOUT
     29113**DCL     29127<>CALL    29132>>ASSIGN
BFRC IN PROCEDURE Y$STUFF_FACILITIES
     28143**DCL     28144--REDEF   28272<<ASSIGN  28275<<ASSIGN  28284--ASSIGN
BFRU IN PROCEDURE Y$STUFF_FACILITIES
     28144**DCL     28154<<ASSIGN  28158<<ASSIGN  28160<<ASSIGN  28165<<ASSIGN  28167<<ASSIGN  28175<<ASSIGN
     28179<<ASSIGN  28180<<ASSIGN  28184<<ASSIGN  28185<<ASSIGN  28197<<ASSIGN  28201<<ASSIGN  28206<<ASSIGN
     28225<<ASSIGN  28226<<ASSIGN  28232<<ASSIGN  28233<<ASSIGN  28234<<ASSIGN  28242<<ASSIGN  28243<<ASSIGN
     28250<<ASSIGN  28251<<ASSIGN  28252<<ASSIGN  28259<<ASSIGN  28260<<ASSIGN  28266<<ASSIGN  28267<<ASSIGN
     28268<<ASSIGN  28271<<ASSIGN  28273<<ASSIGN  28274<<ASSIGN  28282<<ASSIGN
BYTE_ARRAY
     22522**DCL     23392--ASSIGN  25326<<ASSIGN  25964>>ASSIGN  26001>>ASSIGN  26018>>ASSIGN  26018>>ASSIGN
     26023>>ASSIGN  26023>>ASSIGN  26078>>ASSIGN  26097>>ASSIGN  26113>>ASSIGN  26131>>ASSIGN  26135>>ASSIGN
     26151>>ASSIGN  26179>>ASSIGN  26192>>ASSIGN  26215>>ASSIGN  26226>>ASSIGN  26246>>ASSIGN  26258>>ASSIGN
     26269>>ASSIGN  26280>>ASSIGN  26296>>ASSIGN  26347>>ASSIGN  26382>>IF      26419>>IF      26456>>ASSIGN
     26481>>ASSIGN  26499>>ASSIGN  26548>>ASSIGN  26559>>ASSIGN  26579>>ASSIGN  26591>>ASSIGN  26609>>ASSIGN
     26625>>ASSIGN  26651>>ASSIGN  26655>>ASSIGN  26730>>ASSIGN  26738>>ASSIGN  26750>>ASSIGN  26761>>ASSIGN
     28284--ASSIGN  28338--ASSIGN  28458<<ASSIGN  28735>>ASSIGN  28742>>ASSIGN  28744<<ASSIGN  28747<<ASSIGN
     28747>>ASSIGN  28770>>ASSIGN  28773<<ASSIGN  28777<<ASSIGN  28777>>ASSIGN  28780<<ASSIGN
BYTE_INDEX
     20156**DCL     24117>>ASSIGN  24118>>ASSIGN  24206>>ASSIGN  24207>>ASSIGN  24959>>ASSIGN  24960>>ASSIGN
     25325<<ASSIGN  25326>>ASSIGN  25327<<ASSIGN  25327>>ASSIGN  25329>>ASSIGN  25334>>ASSIGN  25959<<ASSIGN
     25964>>ASSIGN  25965<<ASSIGN  25965>>ASSIGN  25987>>IF      26001>>ASSIGN  26018>>ASSIGN  26018>>ASSIGN
     26023>>ASSIGN  26023>>ASSIGN  26060>>ASSIGN  26063>>ASSIGN  26066>>ASSIGN  26073<<ASSIGN  26073>>ASSIGN
     26078>>ASSIGN  26079<<ASSIGN  26079>>ASSIGN  26087>>IF      26097>>ASSIGN  26098<<ASSIGN  26098>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:678  
     26113>>ASSIGN  26114<<ASSIGN  26114>>ASSIGN  26131>>ASSIGN  26132<<ASSIGN  26132>>ASSIGN  26135>>ASSIGN
     26136<<ASSIGN  26136>>ASSIGN  26151>>ASSIGN  26152<<ASSIGN  26152>>ASSIGN  26179>>ASSIGN  26180<<ASSIGN
     26180>>ASSIGN  26192>>ASSIGN  26193<<ASSIGN  26193>>ASSIGN  26215>>ASSIGN  26216<<ASSIGN  26216>>ASSIGN
     26226>>ASSIGN  26227<<ASSIGN  26227>>ASSIGN  26246>>ASSIGN  26247<<ASSIGN  26247>>ASSIGN  26258>>ASSIGN
     26259<<ASSIGN  26259>>ASSIGN  26263<<ASSIGN  26263>>ASSIGN  26269>>ASSIGN  26270<<ASSIGN  26270>>ASSIGN
     26280>>ASSIGN  26281<<ASSIGN  26281>>ASSIGN  26286>>ASSIGN  26288<<ASSIGN  26288>>ASSIGN  26296>>ASSIGN
     26297<<ASSIGN  26297>>ASSIGN  26302>>ASSIGN  26304<<ASSIGN  26304>>ASSIGN  26322<<ASSIGN  26322>>ASSIGN
     26332<<ASSIGN  26332>>ASSIGN  26347>>ASSIGN  26348<<ASSIGN  26348>>ASSIGN  26351<<ASSIGN  26351>>ASSIGN
     26375>>IF      26381>>IF      26382>>IF      26419>>IF      26419>>IF      26446<<ASSIGN  26456>>ASSIGN
     26457<<ASSIGN  26457>>ASSIGN  26472<<ASSIGN  26472>>ASSIGN  26476>>IF      26481>>ASSIGN  26482<<ASSIGN
     26482>>ASSIGN  26490>>IF      26499>>ASSIGN  26500<<ASSIGN  26500>>ASSIGN  26511<<ASSIGN  26511>>ASSIGN
     26522<<ASSIGN  26522>>ASSIGN  26533<<ASSIGN  26533>>ASSIGN  26548>>ASSIGN  26549<<ASSIGN  26549>>ASSIGN
     26559>>ASSIGN  26560<<ASSIGN  26560>>ASSIGN  26579>>ASSIGN  26580<<ASSIGN  26580>>ASSIGN  26591>>ASSIGN
     26592<<ASSIGN  26592>>ASSIGN  26609>>ASSIGN  26610<<ASSIGN  26610>>ASSIGN  26625>>ASSIGN  26626<<ASSIGN
     26626>>ASSIGN  26628<<ASSIGN  26628>>ASSIGN  26639<<ASSIGN  26639>>ASSIGN  26651>>ASSIGN  26652<<ASSIGN
     26652>>ASSIGN  26655>>ASSIGN  26656<<ASSIGN  26656>>ASSIGN  26670<<ASSIGN  26670>>ASSIGN  26676<<ASSIGN
     26676>>ASSIGN  26690>>IF      26718<<ASSIGN  26730>>ASSIGN  26731<<ASSIGN  26731>>ASSIGN  26733<<ASSIGN
     26733>>ASSIGN  26734>>IF      26738>>ASSIGN  26739<<ASSIGN  26739>>ASSIGN  26750>>ASSIGN  26751<<ASSIGN
     26751>>ASSIGN  26758>>ASSIGN  26761>>ASSIGN  26762<<ASSIGN  26762>>ASSIGN  26764<<ASSIGN  26764>>ASSIGN
     26771>>ASSIGN  26778>>ASSIGN  26787<<ASSIGN  26787>>ASSIGN  26794<<ASSIGN  28284>>ASSIGN  28285<<ASSIGN
     28285>>ASSIGN  28455<<ASSIGN  28458>>ASSIGN  28459<<ASSIGN  28459>>ASSIGN  28462>>ASSIGN  28466<<ASSIGN
     28466>>ASSIGN  28467>>ASSIGN  28468<<ASSIGN  28468>>ASSIGN  28472>>ASSIGN  28473<<ASSIGN  28473>>ASSIGN
     28486>>ASSIGN  28488<<ASSIGN  28488>>ASSIGN  28495>>ASSIGN
CALL_CM IN PROCEDURE Y$GETDAT
     28639**DCL     28841<>CALL
CALL_CM.CAL$ IN PROCEDURE Y$GETDAT
     28643**DCL     28838<<ASSIGN
CALL_CM.EVN IN PROCEDURE Y$GETDAT
     28643**DCL     28840<<ASSIGN
CALL_CM.PRM1$ IN PROCEDURE Y$GETDAT
     28644**DCL     28645--REDEF
CALL_CM.PRM2$ IN PROCEDURE Y$GETDAT
     28646**DCL     28646--REDEF
CALL_CM.PRS.PRM1 IN PROCEDURE Y$GETDAT
     28649**DCL     28847>>ASSIGN
CALL_CM.PRS.PRM2 IN PROCEDURE Y$GETDAT
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:679  
     28649**DCL     28848>>ASSIGN
CALL_CM.RCV$ IN PROCEDURE Y$GETDAT
     28643**DCL     28839<<ASSIGN  28841>>CALL
CALL_CM.V_ IN PROCEDURE Y$GETDAT
     28647**DCL     28845>>ASSIGN
CALL_CM.V_.BYTSIZ IN PROCEDURE Y$GETDAT
     28648**DCL     28842>>IF      28846<<ASSIGN
CALL_FPT
     20079**DCL     23350<<ASSIGN  23665<>CALL    23966<>CALL    23986<>CALL    24008<>CALL    24306<<ASSIGN
     24309<>CALL    25345<<ASSIGN  25408<>CALL    25410<>CALL    28342<>CALL
CALL_FPT.CAL$
     20083**DCL     23557<<ASSIGN  23558<>CALL    23658<<ASSIGN  23825<<ASSIGN  23826<>CALL    23961<<ASSIGN
     23982<<ASSIGN  24005<<ASSIGN  25404<<ASSIGN
CALL_FPT.EVN
     20083**DCL     23654<<ASSIGN  23662<<ASSIGN  23664<<ASSIGN  23940<<ASSIGN  23959<<ASSIGN  23981<<ASSIGN
     24007<<ASSIGN  24114<<ASSIGN  24182<<ASSIGN  24184<<ASSIGN  24224<<ASSIGN  24257<<ASSIGN  24260<<ASSIGN
     24265<<ASSIGN  24286>>DOCASE  24307<<ASSIGN  24360<<ASSIGN  24649<<ASSIGN  24747<<ASSIGN  24782<<ASSIGN
     24815<<ASSIGN  24852<<ASSIGN  24873<<ASSIGN  24925<<ASSIGN  24954<<ASSIGN  24993<<ASSIGN  24999<<ASSIGN
     25033<<ASSIGN  25044<<ASSIGN  25048<<ASSIGN  25120<<ASSIGN  25167<<ASSIGN  25346<<ASSIGN  25365<<ASSIGN
     28339<<ASSIGN
CALL_FPT.PRM1
     20084**DCL     23985<<ASSIGN  24215<<ASSIGN  24365<<ASSIGN  24748<<ASSIGN  24761>>ASSIGN  24824<<ASSIGN
     24930<<ASSIGN  24955<<ASSIGN  24971>>ASSIGN  25007<<ASSIGN  25038<<ASSIGN  25042>>IF      25046>>IF
CALL_FPT.PRM1$
     20084**DCL     20085--REDEF   23965<<ASSIGN  24115<<ASSIGN  24750<<ASSIGN  24956<<ASSIGN  25347<<ASSIGN
     28341<<ASSIGN
CALL_FPT.PRM2
     20084**DCL     24220<<ASSIGN  24370<<ASSIGN  24749<<ASSIGN  24829<<ASSIGN  24935<<ASSIGN  25012<<ASSIGN
     25054<<ASSIGN
CALL_FPT.PRM2$
     20086**DCL     20086--REDEF   24751<<ASSIGN  24957<<ASSIGN
CALL_FPT.PRM3N4.PRM3
     20085**DCL     24208<<ASSIGN
CALL_FPT.PRM3N4.PRM4
     20086**DCL     24209<<ASSIGN
CALL_FPT.PRM5N6.PRM5
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:680  
     20087**DCL     24210<<ASSIGN
CALL_FPT.PRS
     20089**DCL     24585<<ASSIGN
CALL_FPT.PRS.PRM1
     20089**DCL     23942<<ASSIGN  23984<<ASSIGN  24214<<ASSIGN  24364<<ASSIGN  24651<<ASSIGN  24756>>ASSIGN
     24823<<ASSIGN  24929<<ASSIGN  24966>>ASSIGN  25006<<ASSIGN  25037<<ASSIGN
CALL_FPT.PRS.PRM2
     20089**DCL     23943<<ASSIGN  24219<<ASSIGN  24369<<ASSIGN  24652<<ASSIGN  24653<<ASSIGN  24828<<ASSIGN
     24934<<ASSIGN  25011<<ASSIGN  25053<<ASSIGN
CALL_FPT.PRS.V
     20090**DCL     24193<<ASSIGN  24819<<ASSIGN
CALL_FPT.RCV$
     20083**DCL     23659<<ASSIGN  23960<<ASSIGN  23983<<ASSIGN  24006<<ASSIGN  24308<<ASSIGN  24755>>ASSIGN
     24965>>ASSIGN  25405<<ASSIGN  28340<<ASSIGN
CALL_FPT.V_
     20087**DCL     23941<<ASSIGN  24650<<ASSIGN
CALL_FPT.V_.ADR$
     20087**DCL     24116<<ASSIGN  24205<<ASSIGN  24853<<ASSIGN  24958<<ASSIGN
CALL_FPT.V_.BYTSIZ
     20088**DCL     24118<<ASSIGN  24207<<ASSIGN  24855<<ASSIGN  24960<<ASSIGN
CALL_FPT.V_.BYTX
     20088**DCL     24117<<ASSIGN  24206<<ASSIGN  24854<<ASSIGN  24959<<ASSIGN
CALL_KXF IN PROCEDURE Y$GETDAT
     28794**LABEL   28750--GOTO
CALL_L2 IN PROCEDURE Y$GETDAT
     28551**DCL     28794<>CALL
CALL_L2.CAL$ IN PROCEDURE Y$GETDAT
     28555**DCL     28725<<ASSIGN
CALL_L2.PRM1$ IN PROCEDURE Y$GETDAT
     28556**DCL     28557--REDEF   28729<<ASSIGN  28730>>ASSIGN  28735>>ASSIGN  28742>>ASSIGN  28744>>ASSIGN
     28747>>ASSIGN  28747>>ASSIGN  28764<<ASSIGN  28765>>ASSIGN  28770>>ASSIGN  28773>>ASSIGN  28777>>ASSIGN
     28777>>ASSIGN  28780>>ASSIGN
CALL_L2.PRM2$ IN PROCEDURE Y$GETDAT
     28558**DCL     28558--REDEF
CALL_L2.RCV$ IN PROCEDURE Y$GETDAT
     28555**DCL     28667>>IF      28670<<ASSIGN  28863<<ASSIGN  28867<<ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:681  
CALL_L3 IN PROCEDURE Y$GETDAT
     28595**DCL     28705<>CALL
CALL_L3.CAL$ IN PROCEDURE Y$GETDAT
     28599**DCL     28671<<ASSIGN
CALL_L3.EVN IN PROCEDURE Y$GETDAT
     28599**DCL     28700<<ASSIGN
CALL_L3.PRM1$ IN PROCEDURE Y$GETDAT
     28600**DCL     28601--REDEF
CALL_L3.PRM2$ IN PROCEDURE Y$GETDAT
     28602**DCL     28602--REDEF
CALL_L3.RCV$ IN PROCEDURE Y$GETDAT
     28599**DCL     28703<<ASSIGN
CALL_OUT
     18197**DCL     28508>>ASSIGN
CALRTREXH
     19079**DCL     24255>>ASSIGN  24400>>ASSIGN
CALTIMOUT
     19182**DCL     24391>>ASSIGN
CHARGING_INFO IN PROCEDURE Y$WHAT_TYPE
     26758**LABEL   26772--GOTO    26779--GOTO
CHN$
     20005**DCL     26029<>CALL    26032<<ASSIGN  26038>>DOWHILE 26038>>DOWHILE 26038>>DOWHILE
CHRBSD IN PROCEDURE Y$STUFF_FACILITIES
     28145**DCL     28284<<ASSIGN  28284>>ASSIGN
CHR_$$$_X
     20163**DCL     23351<<ASSIGN  24208>>ASSIGN  26758<<ASSIGN
CHR_DUR_X
     20165**DCL     23353<<ASSIGN  24210>>ASSIGN  26771<<ASSIGN
CHR_SEG_X
     20164**DCL     23352<<ASSIGN  24209>>ASSIGN  26778<<ASSIGN
CLRRCV
     17376**DCL     24202>>ASSIGN
CLRTIMOUT
     19590**DCL     24526>>ASSIGN
CLR_COMMON
     24334**LABEL   24410--GOTO    24428--GOTO    24448--GOTO    24464--GOTO    24492--GOTO    24508--GOTO
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:682  
     24554--GOTO
CLR_P2
     19284**DCL     24440>>ASSIGN
CLR_P3
     19335**DCL     24460>>ASSIGN
CLR_P4
     19386**DCL     24487>>ASSIGN
CM$
     20003**DCL     22526--IMP-PTR 23341<<ASSIGN  23347<<ASSIGN  23575<<ASSIGN  23651>>IF      23658>>ASSIGN
     23748<<ASSIGN  23751>>IF      23804<<ASSIGN  23807>>IF      23982>>ASSIGN  24267>>IF      24357>>IF
     24922>>IF      25405>>ASSIGN  25406>>IF      25410>>CALL
CODE
     20146**DCL     23627<<ASSIGN  23629<<ASSIGN  23725<<ASSIGN  23925<<ASSIGN  23927<<ASSIGN  24139<<ASSIGN
     24145<<ASSIGN  24228<<ASSIGN  24403<<ASSIGN  24810<<ASSIGN  25185<<ASSIGN  29183<>CALL
DAT$
     20001**DCL     21372--IMP-PTR 21392--IMP-PTR 21424--IMP-PTR 21458--IMP-PTR 21524--IMP-PTR 22104--IMP-PTR
     22522--IMP-PTR 23391<<ASSIGN  23392>>ASSIGN  23393>>ASSIGN  23453>>ASSIGN  23877<<ASSIGN  23878>>ASSIGN
     23879>>ASSIGN  23881>>ASSIGN  23963<<ASSIGN  23964>>ASSIGN  23965>>ASSIGN  24116>>ASSIGN  24118>>ASSIGN
     24205>>ASSIGN  24207>>ASSIGN  24346<<ASSIGN  24347>>ASSIGN  24348>>ASSIGN  24568>>ASSIGN  24574>>ASSIGN
     24576>>ASSIGN  24577>>ASSIGN  24578>>ASSIGN  24579>>ASSIGN  24590>>ASSIGN  24640>>ASSIGN  24853>>ASSIGN
     24958>>ASSIGN  24960>>ASSIGN  25111<<ASSIGN  25112>>ASSIGN  25113>>ASSIGN  25213<<ASSIGN  25214>>ASSIGN
     25215>>ASSIGN  25229>>ASSIGN  25281<<ASSIGN  25282>>ASSIGN  25283>>ASSIGN  25321<<ASSIGN  25322>>ASSIGN
     25326>>ASSIGN  25329>>ASSIGN  25334>>ASSIGN  25336>>ASSIGN  25336>>ASSIGN  25357<>CALL    25358>>ASSIGN
     25359>>ASSIGN  25372<>CALL    25373>>ASSIGN  25374>>ASSIGN  25476>>ASSIGN  25518>>ASSIGN  25530>>ASSIGN
     25532>>ASSIGN  25533>>ASSIGN  25536>>ASSIGN  25619>>CALL    25690<<ASSIGN  25694>>ASSIGN  25698>>ASSIGN
     25726>>ASSIGN  25726>>ASSIGN  25819>>IF      25832>>IF      25964>>ASSIGN  25987>>IF      26001>>ASSIGN
     26018>>ASSIGN  26018>>ASSIGN  26023>>ASSIGN  26023>>ASSIGN  26060>>ASSIGN  26063>>ASSIGN  26066>>ASSIGN
     26078>>ASSIGN  26087>>IF      26097>>ASSIGN  26113>>ASSIGN  26131>>ASSIGN  26135>>ASSIGN  26151>>ASSIGN
     26179>>ASSIGN  26192>>ASSIGN  26215>>ASSIGN  26226>>ASSIGN  26246>>ASSIGN  26258>>ASSIGN  26269>>ASSIGN
     26280>>ASSIGN  26286>>ASSIGN  26296>>ASSIGN  26302>>ASSIGN  26347>>ASSIGN  26375>>IF      26381>>IF
     26382>>IF      26419>>IF      26419>>IF      26456>>ASSIGN  26476>>IF      26481>>ASSIGN  26490>>IF
     26499>>ASSIGN  26548>>ASSIGN  26559>>ASSIGN  26579>>ASSIGN  26591>>ASSIGN  26609>>ASSIGN  26625>>ASSIGN
     26651>>ASSIGN  26655>>ASSIGN  26690>>IF      26730>>ASSIGN  26738>>ASSIGN  26750>>ASSIGN  26761>>ASSIGN
     26794>>ASSIGN  26817>>IF      28284>>ASSIGN  28333<<ASSIGN  28334>>ASSIGN  28337>>ASSIGN  28338>>ASSIGN
     28341>>ASSIGN  28449<<ASSIGN  28450>>ASSIGN  28458>>ASSIGN  28462>>ASSIGN  28467>>ASSIGN  28472>>ASSIGN
     28486>>ASSIGN  28495>>ASSIGN  28911<<ASSIGN  28912>>ASSIGN  28913<>CALL    28945<<ASSIGN  28946>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:683  
     28947>>ASSIGN  28948>>IF      28950<>CALL    28971<<ASSIGN  29070>>CALL    29132<<ASSIGN  29140>>ASSIGN
     29145>>ASSIGN  29147>>ASSIGN  29148>>ASSIGN  29150>>ASSIGN  29151>>ASSIGN  29153>>ASSIGN
DATACNT
     20168**DCL     23393<<ASSIGN  23394>>IF      23446>>IF      23446>>IF      23446>>IF      23583>>IF
     23587>>IF      24194>>IF      24211>>IF      24216>>IF      24361>>IF      24366>>IF      24549>>IF
     24583>>ASSIGN  24592>>ASSIGN  24636<<ASSIGN  24800>>IF      24820>>IF      24825>>IF      24855>>ASSIGN
     24907>>IF      24926>>IF      24931>>IF      25003>>IF      25008>>IF      25034>>IF      25050>>IF
     25079>>IF      25083>>IF      25094>>IF      25806>>IF      25806>>IF      25816>>IF      25885>>IF
     26447>>IF      26711>>IF      26719>>IF      26734>>IF      26809>>IF      26809>>IF      26835>>IF
     26844>>IF
DATSTR
     22104**DCL     24617<<ASSIGN  24640>>ASSIGN  29153<<ASSIGN
DCL_EVENT
     17481**DCL     24736>>ASSIGN
DCOUNT IN PROCEDURE Y$PR
     25561**DCL     25626<<ASSIGN  25628>>ASSIGN  25672>>IF
DECODE_CLR IN PROCEDURE Y$WHAT_TYPE
     26711**LABEL   26803--GOTO
DEVLGNFAL
     18146**DCL     27978>>ASSIGN
DIAG
     20153**DCL     24351>>ASSIGN  24409<<ASSIGN  24427<<ASSIGN  24445<<ASSIGN  24447<<ASSIGN  24463<<ASSIGN
     24483<<ASSIGN  24489<<ASSIGN  24507<<ASSIGN  24547<<ASSIGN  24551<<ASSIGN  24553<<ASSIGN  25081<<ASSIGN
     25085<<ASSIGN  25092<<ASSIGN  25096<<ASSIGN  25098<<ASSIGN  25102<<ASSIGN  25104<<ASSIGN  25115>>ASSIGN
     25622<<ASSIGN  25828<<ASSIGN  25938<<ASSIGN  25956<<ASSIGN  25970<<ASSIGN  25976<<ASSIGN  25993<<ASSIGN
     26055<<ASSIGN  26084<<ASSIGN  26090<<ASSIGN  26108<<ASSIGN  26157<<ASSIGN  26287<<ASSIGN  26303<<ASSIGN
     26357<<ASSIGN  26378<<ASSIGN  26386<<ASSIGN  26393<<ASSIGN  26399>>IF      26407<<ASSIGN  26441<<ASSIGN
     26462<<ASSIGN  26468<<ASSIGN  26487<<ASSIGN  26493<<ASSIGN  26683<<ASSIGN  26725<<ASSIGN  26827<<ASSIGN
     29070<>CALL
DSB
     17532**DCL     24774>>ASSIGN
END_LCN IN PROCEDURE Y$CALL
     28382**DCL     28392<<ASSIGN  28397<<ASSIGN  28419>>IF      28420>>IF
ERCOD
     20110**DCL     23397<<ASSIGN  23407<<ASSIGN  23430<<ASSIGN  23451<<ASSIGN  23481<<ASSIGN  23493<<ASSIGN
     23508<<ASSIGN  23554<<ASSIGN  23561<<ASSIGN  23863<<ASSIGN  24136<<ASSIGN  24196<<ASSIGN  24202<<ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:684  
     24255<<ASSIGN  24334<<ASSIGN  24391<<ASSIGN  24400<<ASSIGN  24423<<ASSIGN  24440<<ASSIGN  24460<<ASSIGN
     24487<<ASSIGN  24504<<ASSIGN  24526<<ASSIGN  24541<<ASSIGN  24736<<ASSIGN  24774<<ASSIGN  24804<<ASSIGN
     24911<<ASSIGN  24916<<ASSIGN  24950<<ASSIGN  24991<<ASSIGN  24997<<ASSIGN  25028<<ASSIGN  25076<<ASSIGN
     25201<<ASSIGN  25203<<ASSIGN  25245<<ASSIGN  25260<<ASSIGN  25275<<ASSIGN  25307<<ASSIGN  25822<<ASSIGN
     25862<<ASSIGN  26344<<ASSIGN  26668<<ASSIGN  26744<<ASSIGN  26785<<ASSIGN  26824<<ASSIGN  27978<<ASSIGN
     28508<<ASSIGN  28984<<ASSIGN  28990<<ASSIGN  29013<>CALL    29041<>CALL    29070<>CALL    29096<>CALL
EVENT IN PROCEDURE Y$START_L3S
     26951**DCL     27945<<ASSIGN  27992<<ASSIGN  27999<<ASSIGN  28082>>IF      28104>>IF      28112>>ASSIGN
EXIT_CASE
     24715**LABEL   24614--GOTO
FACILITY_LENGTH_INDEX IN PROCEDURE Y$STUFF_FACILITIES
     28142**DCL     28145--IMP-SIZ 28147<<ASSIGN  28154>>ASSIGN  28158>>ASSIGN  28160>>ASSIGN  28165>>ASSIGN
     28167>>ASSIGN  28170<<ASSIGN  28170>>ASSIGN  28175>>ASSIGN  28179>>ASSIGN  28180>>ASSIGN  28184>>ASSIGN
     28185>>ASSIGN  28187<<ASSIGN  28187>>ASSIGN  28197>>ASSIGN  28201>>ASSIGN  28206>>ASSIGN  28209<<ASSIGN
     28209>>ASSIGN  28225>>ASSIGN  28226>>ASSIGN  28232>>ASSIGN  28233>>ASSIGN  28234>>ASSIGN  28238<<ASSIGN
     28238>>ASSIGN  28242>>ASSIGN  28243>>ASSIGN  28245<<ASSIGN  28245>>ASSIGN  28250>>ASSIGN  28251>>ASSIGN
     28252>>ASSIGN  28253<<ASSIGN  28253>>ASSIGN  28259>>ASSIGN  28260>>ASSIGN  28261<<ASSIGN  28261>>ASSIGN
     28266>>ASSIGN  28267>>ASSIGN  28268>>ASSIGN  28271>>ASSIGN  28272>>ASSIGN  28273>>ASSIGN  28274>>ASSIGN
     28275>>ASSIGN  28276<<ASSIGN  28276>>ASSIGN  28282>>ASSIGN  28283<<ASSIGN  28283>>ASSIGN  28284>>ASSIGN
     28284>>ASSIGN  28285>>ASSIGN
FCLID IN PROCEDURE Y$WHAT_TYPE
     25760**DCL     26097<<ASSIGN  26100>>DOSELCT 26269<<ASSIGN  26273>>DOSELCT 26499<<ASSIGN  26502>>DOSELCT
     26750<<ASSIGN  26753>>DOSELCT
FCLLNG IN PROCEDURE Y$WHAT_TYPE
     25759**DCL     26078<<ASSIGN  26081>>IF      26087>>IF      26095>>DOINDEX 26263>>ASSIGN  26264>>ASSIGN
     26267>>DOWHILE 26481<<ASSIGN  26484>>IF      26490>>IF      26497>>DOINDEX 26676>>ASSIGN  26677>>ASSIGN
     26738<<ASSIGN  26741>>IF      26748>>DOINDEX 26795>>ASSIGN
FCL_PRESENT IN PROCEDURE Y$WHAT_TYPE
     25780**DCL     25781--REDEF   26105>>IF      26111<<ASSIGN  26123>>IF      26129<<ASSIGN  26146>>IF
     26149<<ASSIGN  26173>>IF      26176<<ASSIGN  26210>>IF      26213<<ASSIGN  26275>>IF      26278<<ASSIGN
     26291>>IF      26294<<ASSIGN  26314>>IF      26320<<ASSIGN  26324>>IF      26330<<ASSIGN  26337>>IF
     26343<<ASSIGN  26368>>IF      26368>>IF      26423>>IF      26425>>IF      26507>>IF      26510<<ASSIGN
     26518>>IF      26521<<ASSIGN  26529>>IF      26532<<ASSIGN  26543>>IF      26546<<ASSIGN  26574>>IF
     26577<<ASSIGN  26604>>IF      26607<<ASSIGN  26620>>IF      26623<<ASSIGN  26635>>IF      26638<<ASSIGN
     26646>>IF      26649<<ASSIGN  26664>>IF      26667<<ASSIGN
FCL_PRESENT_BITS IN PROCEDURE Y$WHAT_TYPE
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:685  
     25781**DCL     26093<<ASSIGN  26453<<ASSIGN
FOUND_ONE IN PROCEDURE Y$GETDAT
     28523**DCL     28716>>DOUNTIL 28717<<ASSIGN  28795<<ASSIGN  28818>>DOUNTIL 28821<<ASSIGN  28853<<ASSIGN
     28860>>IF
FOUND_SUBSUBCHN IN PROCEDURE Y$WHAT_TYPE
     26045**LABEL   25996--GOTO    26048--GOTO
FPT@CONNECT IN PROCEDURE Y$START_L3S
     27020**DCL     27957<<ASSIGN  28086--ASSIGN  28087--ASSIGN  28088--ASSIGN
FPT@CONNECT.DEST.ADDRESS_N IN PROCEDURE Y$START_L3S
     27117**DCL     27118--REDEF
FPT@CONNECT.DSTSNPA IN PROCEDURE Y$START_L3S
     27173**DCL     27960<<ASSIGN
FPT@CONNECT.DSTSNPA.ADR_STRING IN PROCEDURE Y$START_L3S
     27173**DCL     27173--REDEF
FPT@CONNECT.LADR.ADDRESS_N IN PROCEDURE Y$START_L3S
     27169**DCL     27170--REDEF
FPT@CONNECT.RLCID.FLAGS.VIRCIR IN PROCEDURE Y$START_L3S
     27058**DCL     27958<<ASSIGN
FPT@CONNECT.RLCID.GENERATION IN PROCEDURE Y$START_L3S
     27056**DCL     27057--REDEF
FPT@CONNECT.RLCID.LDCTX IN PROCEDURE Y$START_L3S
     27057**DCL     27057--REDEF
FPT@CONNECT.RLCID.NODE IN PROCEDURE Y$START_L3S
     27056**DCL     27959<<ASSIGN
FPT@CONNECT.SERVICE IN PROCEDURE Y$START_L3S
     27059**DCL     27961<<ASSIGN
FPT@CONNECT.TERMINAL_ID IN PROCEDURE Y$START_L3S
     27043**DCL     27962<<ASSIGN
FPT@CONNECT.TERMINAL_ID.TERM IN PROCEDURE Y$START_L3S
     27045**DCL     27054--REDEF
FPT@TERM IN PROCEDURE Y$START_L3S
     27191**DCL     28012<<ASSIGN  28093--ASSIGN  28094--ASSIGN  28095--ASSIGN
FPT@TERM.RLCID.LDCTX IN PROCEDURE Y$START_L3S
     27196**DCL     28013<<ASSIGN
FPT_CONNECT_C IN PROCEDURE Y$START_L3S
     27214**DCL     27957>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:686  
FPT_CONNECT_C.RLCID.GENERATION IN PROCEDURE Y$START_L3S
     27250**DCL     27251--REDEF
FPT_CONNECT_C.RLCID.LDCTX IN PROCEDURE Y$START_L3S
     27251**DCL     27251--REDEF
FPT_CONNECT_C.TERMINAL_ID.TERM IN PROCEDURE Y$START_L3S
     27239**DCL     27248--REDEF
FPT_DATA_OUT IN PROCEDURE Y$PACKET_OUT
     25454**DCL     25540<>CALL
FPT_DATA_OUT.PRM1$ IN PROCEDURE Y$PACKET_OUT
     25459**DCL     25460--REDEF   25476<<ASSIGN
FPT_DATA_OUT.PRM2$ IN PROCEDURE Y$PACKET_OUT
     25461**DCL     25461--REDEF
FPT_DATA_OUT.RCV$ IN PROCEDURE Y$PACKET_OUT
     25458**DCL     25475<<ASSIGN
FPT_L3 IN PROCEDURE Y$START_L3S
     26934**DCL     28111<<ASSIGN  28124<>CALL
FPT_L3.EVN IN PROCEDURE Y$START_L3S
     26938**DCL     28112<<ASSIGN
FPT_L3.PRM1$ IN PROCEDURE Y$START_L3S
     26939**DCL     26940--REDEF
FPT_L3.PRM2$ IN PROCEDURE Y$START_L3S
     26941**DCL     26941--REDEF
FPT_L3.RCV$ IN PROCEDURE Y$START_L3S
     26938**DCL     28122<<ASSIGN
FPT_TERM_C IN PROCEDURE Y$START_L3S
     27283**DCL     28012>>ASSIGN
FPT_X25
     20035**DCL        13--PROC
FPT_X25.CAL$
     20039**DCL     23346>>ASSIGN  23747>>ASSIGN  23748>>ASSIGN  23751>>IF      23803>>ASSIGN  23804>>ASSIGN
     23807>>IF
FPT_X25.EVN
     20039**DCL     23361>>ASSIGN
FPT_X25.PRM1
     20040**DCL     24523<<ASSIGN  25220>>ASSIGN  25288>>ASSIGN
FPT_X25.PRM1$
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:687  
     20040**DCL     20041--REDEF   20351--IMP-PTR 23391>>ASSIGN  23826>>CALL    23828>>ASSIGN  23830>>ASSIGN
     23831>>ASSIGN  23857<<ASSIGN  23911>>IF      23911>>IF      23919>>ASSIGN  24664<<ASSIGN  24670>>IF
     24686>>IF      24692<<ASSIGN  25140<<ASSIGN  28971>>ASSIGN
FPT_X25.PRM2$
     20042**DCL     20042--REDEF
FPT_X25.PRS.PRM1
     20045**DCL     24522<<ASSIGN  25218>>IF      25286>>IF
FPT_X25.RCV$
     20039**DCL     23335>>ASSIGN
FPT_X25.V_.ADR$
     20043**DCL     23881>>ASSIGN  25229>>ASSIGN  25334>>ASSIGN  28482>>IF      28486>>ASSIGN
FPT_X25.V_.BYTSIZ
     20044**DCL     23853>>IF      23875>>ASSIGN  25210>>ASSIGN  25330>>ASSIGN  28485>>ASSIGN
FPT_X25.V_.BYTX
     20044**DCL     23881>>ASSIGN  25229>>ASSIGN  25334>>ASSIGN  28486>>ASSIGN
FTLCLR
     19028**DCL     24196>>ASSIGN  24804>>ASSIGN  24911>>ASSIGN
G$JIT.ERRLOG
     22449**DCL     22452--REDEF
G$JIT.JSUNIT
     22188**DCL     22189--REDEF
G$JIT.MCLS
     22187**DCL     22187--REDEF
G$JIT.TMRZ
     22456**DCL     22457--REDEF
G$JIT.USER_EXTIME
     22180**DCL     22181--REDEF
G$JIT.USER_MEMTIME
     22183**DCL     22183--REDEF
G$JIT.USER_SVTIME
     22182**DCL     22182--REDEF
G$JIT$
     23235**DCL     22119--IMP-PTR
GET_L3
     23540**LABEL   23543--EXIT
HC_DSC
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:688  
     17430**DCL     24423>>ASSIGN
I IN PROCEDURE Y$WHAT_TYPE
     25757**DCL     26095<<DOINDEX 26117<<ASSIGN  26117>>ASSIGN  26139<<ASSIGN  26139>>ASSIGN  26165<<ASSIGN
     26165>>ASSIGN  26203<<ASSIGN  26203>>ASSIGN  26238<<ASSIGN  26238>>ASSIGN  26251<<ASSIGN  26251>>ASSIGN
     26263>>ASSIGN  26264<<ASSIGN  26266<<ASSIGN  26266>>ASSIGN  26267>>DOWHILE 26272<<ASSIGN  26272>>ASSIGN
     26289<<ASSIGN  26289>>ASSIGN  26305<<ASSIGN  26305>>ASSIGN  26321<<ASSIGN  26321>>ASSIGN  26331<<ASSIGN
     26331>>ASSIGN  26350<<ASSIGN  26350>>ASSIGN  26497<<DOINDEX 26512<<ASSIGN  26512>>ASSIGN  26523<<ASSIGN
     26523>>ASSIGN  26534<<ASSIGN  26534>>ASSIGN  26568<<ASSIGN  26568>>ASSIGN  26598<<ASSIGN  26598>>ASSIGN
     26614<<ASSIGN  26614>>ASSIGN  26629<<ASSIGN  26629>>ASSIGN  26640<<ASSIGN  26640>>ASSIGN  26658<<ASSIGN
     26658>>ASSIGN  26669<<ASSIGN  26669>>ASSIGN  26676>>ASSIGN  26677<<ASSIGN  26748<<DOINDEX 26765<<ASSIGN
     26765>>ASSIGN  26788<<ASSIGN  26788>>ASSIGN  26795<<ASSIGN
ID
     20152**DCL     23970<<ASSIGN  24176<<ASSIGN  24706<<ASSIGN  24861<<ASSIGN  25062<<ASSIGN  25705>>IF
     25707<<ASSIGN  25713>>ASSIGN  25717>>IF      25717>>IF      28302<<ASSIGN  28308<<ASSIGN  28335>>ASSIGN
     28343>>IF
INSTR
     22102**DCL     24617>>ASSIGN  24640<<ASSIGN
INVCALPRM
     19131**DCL     24334>>ASSIGN
INVFCLPRM IN PROCEDURE Y$WHAT_TYPE
     26157**LABEL   26164--GOTO    26185--GOTO    26198--GOTO    26220--GOTO    26231--GOTO    26285--GOTO
     26301--GOTO    26307--GOTO    26554--GOTO    26565--GOTO    26584--GOTO    26596--GOTO
INV_INTC
     18768**DCL     26824>>ASSIGN
INV_LCN0
     18406**DCL     28990>>ASSIGN
INV_RESTART_C
     18926**DCL     23508>>ASSIGN
IN_PKTHDR
     23236**DCL     23279--REDEF
IN_PKTHDR.CAUSE
     23274**DCL     23275--REDEF   24194>>IF      24215>>ASSIGN  24241>>IF      24241>>IF      24241>>IF
     24241>>IF      24241>>IF      24800>>IF      24824>>ASSIGN  24907>>IF      24930>>ASSIGN  25007>>ASSIGN
     25038>>ASSIGN  26851>>IF      26855>>IF
IN_PKTHDR.DIAG
     23278**DCL     24220>>ASSIGN  24829>>ASSIGN  24935>>ASSIGN  25012>>ASSIGN  25054>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:689  
IN_PKTHDR.D_BIT
     23255**DCL     23427>>IF      25857>>IF
IN_PKTHDR.GFI
     23255**DCL     23402>>IF      23402>>IF      23402>>IF      23402>>IF      25930>>IF      26722>>IF
     26809>>IF
IN_PKTHDR.LCN#
     23255**DCL     23256--REDEF   23422>>ASSIGN  23566>>ASSIGN
IN_PKTHDR.PR_BITS.M
     23268**DCL     25798>>ASSIGN
IN_PKTHDR.PR_BITS.PR
     23268**DCL     25799>>ASSIGN
IN_PKTHDR.PR_EXT.M
     23277**DCL     25792>>ASSIGN
IN_PKTHDR.PR_EXT.PR
     23276**DCL     25793>>ASSIGN
IN_PKTHDR.Q_BIT
     23255**DCL     23427>>IF      24594>>ASSIGN  25845>>IF
IN_PKTHDR.TYPE
     23256**DCL     23256--REDEF   23268--REDEF   23271--REDEF   23412>>IF      23437>>IF      23437>>IF
     23446>>IF      23446>>IF      23452>>ASSIGN  23478>>IF      23490>>IF      23551>>IF      24544>>IF
     24544>>IF      24800>>IF      24816>>IF      25089>>IF      25089>>IF      25857>>IF      25857>>IF
     25913>>DOSELCT 28992>>ASSIGN
IN_PKTHDR.TYPE_BITS.DP
     23264**DCL     25802>>IF
IN_PKTHDR.TYPE_BITS.PS
     23260**DCL     23260--REDEF   25800>>ASSIGN
IN_PKTHDR.TYPE_BITS.PS_BITS.FC
     23264**DCL     25877>>IF
IN_PKTHDR.TYPE_BITS.PS_BITS.FT
     23264**DCL     25889>>DOCASE
IN_PKTHDR.TYPE_EXT.PS
     23272**DCL     25794>>ASSIGN
IN_PKTHDR_CHR
     23279**DCL     23392<<ASSIGN
IN_PR
     20169**DCL     25572>>ASSIGN  25654>>IF      25661>>ASSIGN  25793<<ASSIGN  25799<<ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:690  
KEEP_BFR
     24692**LABEL   24580--GOTO    24658--GOTO
KH$CHN
     20227**DCL     23608--CALL    23616<<ASSIGN  23616>>ASSIGN  23917--CALL
KH$CHN.CTX$
     20297**DCL     23620<<ASSIGN  23831<<ASSIGN  23920<<ASSIGN  24293<<ASSIGN
KH$CHN.INPBFRBYTSIZ
     20295**DCL     26038>>DOWHILE 26038>>DOWHILE
KH$CHN.SUB$
     20334**DCL     23618<<ASSIGN
KH$CHN.TERMID
     20321**DCL     23567>>ASSIGN  23617<<ASSIGN  25619<>CALL    26014>>ASSIGN  27962>>ASSIGN  29013<>CALL
     29041<>CALL    29070<>CALL    29096<>CALL    29183<>CALL    29183<>CALL
KH$CHN.TERMID.LEV
     20323**DCL     23767>>IF      24180>>IF      24225>>IF
KH$CHN.TERMID.TERM
     20323**DCL     20332--REDEF   26042>>DOWHILE
KH$CHN.TERMID.TERM.SUBDEVICE
     20329**DCL     28440<<ASSIGN
KH$CHN.TERMID.TTYP
     20323**DCL     23830<<ASSIGN
KHA$DVCADM
     16589**DCL-ENT 29183--CALL
KHA$GET_CTX_PTR
     16592**DCL-ENT 23601--CALL    26029--CALL
KHA_ERROR
     20159**DCL     29183<>CALL
KHD$SCREECH
     16590**DCL-ENT 23757--CALL    23810--CALL    24045--CALL    25389--CALL
KNH_MESS IN PROCEDURE Y$START_L3S
     26965**DCL     28075<<ASSIGN  28080--ASSIGN  28081--ASSIGN
KNH_MESS.FPTSZ IN PROCEDURE Y$START_L3S
     26998**DCL     28086<<ASSIGN  28093<<ASSIGN
KNH_MESS.FUNCTION IN PROCEDURE Y$START_L3S
     26965**DCL     26965--REDEF   28085<<ASSIGN  28092<<ASSIGN
KNH_MESS.LDCTX IN PROCEDURE Y$START_L3S
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:691  
     26970**DCL     28076<<ASSIGN
KNH_MESS.UID IN PROCEDURE Y$START_L3S
     26995**DCL     26995--REDEF   26995--REDEF
KNH_MESS.UID$ IN PROCEDURE Y$START_L3S
     26995**DCL     28077<<ASSIGN
KNH_MESS.UIDX.CQ_HNDID IN PROCEDURE Y$START_L3S
     26996**DCL     28078<<ASSIGN
KV$PTR.INPCNDPND IN PROCEDURE Y$START_L3S
     27926**DCL     27935--REDEF   27939--REDEF
KV$PTR.LINLST$ IN PROCEDURE Y$START_L3S
     27922**DCL     27923--REDEF
KV$PTR.VDI$ IN PROCEDURE Y$START_L3S
     27920**DCL     28062>>ASSIGN
KV$PTR$ IN PROCEDURE Y$START_L3S
     27914**DCL     27920--IMP-PTR 28045>>ASSIGN  28046<<ASSIGN  28062>>ASSIGN  28064<<ASSIGN
KV$STT.REQSTATS.DSPMSK IN PROCEDURE Y$START_L3S
     27778**DCL     27784--REDEF
KV$STT.REQSTATS.SLCMSK IN PROCEDURE Y$START_L3S
     27819**DCL     27826--REDEF
KV$STT.USRENTCNT IN PROCEDURE Y$START_L3S
     27888**DCL     28042<<ASSIGN  28042>>ASSIGN
KV$STT.USRENTDFRCNT IN PROCEDURE Y$START_L3S
     27889**DCL     28050<<ASSIGN  28050>>ASSIGN
KV$USRPRM.STT$ IN PROCEDURE Y$START_L3S
     27502**DCL     28042>>ASSIGN  28042>>ASSIGN  28050>>ASSIGN  28050>>ASSIGN
KV$VDI.ASNINPPTR$ IN PROCEDURE Y$START_L3S
     27405**DCL     28046>>ASSIGN
KV$VDI.BSY IN PROCEDURE Y$START_L3S
     27439**DCL     28043>>IF      28044<<ASSIGN  28062<<ASSIGN
KV$VDI.DFR.USR IN PROCEDURE Y$START_L3S
     27436**DCL     28049<<ASSIGN
KV$VDI.USRPRM$ IN PROCEDURE Y$START_L3S
     27405**DCL     28042>>ASSIGN  28042>>ASSIGN  28050>>ASSIGN  28050>>ASSIGN
KV@SNDCQ IN PROCEDURE Y$START_L3S
     27001**DCL     28079<<ASSIGN  28098<>CALL
KV@SNDCQ.MSG_.ADR$ IN PROCEDURE Y$START_L3S
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:692  
     27003**DCL     28080<<ASSIGN  28087<<ASSIGN  28094<<ASSIGN
KV@SNDCQ.MSG_.BYTSIZ IN PROCEDURE Y$START_L3S
     27005**DCL     28081<<ASSIGN  28088<<ASSIGN  28095<<ASSIGN
KV@USRENT.SVDPTR$ IN PROCEDURE Y$START_L3S
     27381**DCL     28045<<ASSIGN  28064>>ASSIGN
KV@VDH_DSC IN PROCEDURE Y$START_L3S
     27318**DCL     28023<<ASSIGN  28055<>CALL
KVB$GET2NSYS
     16585**DCL-ENT 24608--CALL
KVB$GETSYS
     16584**DCL-ENT 23608--CALL
KVB$RLSSYS
     16588**DCL-ENT 23612--CALL    23917--CALL    23954--CALL    24626--CALL    24680--CALL    28902--CALL
KVB_SIZ
     22537**DCL     23611<<ASSIGN
KVM$SNDCQ
     16569**DCL-ENT 28098--CALL
KVV$VDI
     16586**DCL-ENT 28055--CALL
KX$BTMRBLK.BLNK$
     22096**DCL     23470<<ASSIGN  23901<<ASSIGN  28363<<ASSIGN  29197<<ASSIGN  29210<<ASSIGN  29223<<ASSIGN
     29248<<ASSIGN  29292<<ASSIGN
KX$BTMRBLK.FLNK$
     22096**DCL     23471<<ASSIGN  23900<<ASSIGN  23902<<ASSIGN  28362<<ASSIGN  28364<<ASSIGN  29198<<ASSIGN
     29211<<ASSIGN  29224<<ASSIGN  29247<<ASSIGN  29249<<ASSIGN  29278<<ASSIGN  29297<<ASSIGN
KX$DATA
     21372**DCL     24118--ASSIGN  24207--ASSIGN  24960--ASSIGN  25329--ASSIGN  26087--IF      26375--IF
     26381--IF      26419--IF      26476--IF      26490--IF      26690--IF      26794--ASSIGN  28495--ASSIGN
KX$DATA.CNT
     21375**DCL     23393>>ASSIGN  23453>>ASSIGN  23879<<ASSIGN  24118>>ASSIGN  24207>>ASSIGN  24348<<ASSIGN
     24960>>ASSIGN  25113<<ASSIGN  25215<<ASSIGN  25283<<ASSIGN  25329<<ASSIGN  25336<<ASSIGN  25336>>ASSIGN
     25359<<ASSIGN  25374<<ASSIGN  25698<<ASSIGN  25726<<ASSIGN  25726>>ASSIGN  26087>>IF      26375>>IF
     26381>>IF      26419>>IF      26476>>IF      26490>>IF      26690>>IF      26794>>ASSIGN  26817>>IF
     28337<<ASSIGN  28495<<ASSIGN  29151<<ASSIGN
KX$DATA.L3_LIST$
     21374**DCL     23964>>ASSIGN  24576<<ASSIGN  24578<<ASSIGN  25536<<ASSIGN  28912>>ASSIGN  28946>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:693  
     29150<<ASSIGN
KX$DATA.RLS.L3
     21375**DCL     23878<<ASSIGN  24347<<ASSIGN  24568>>ASSIGN  24579<<ASSIGN  25112<<ASSIGN  25214<<ASSIGN
     25282<<ASSIGN  25322<<ASSIGN  25358<<ASSIGN  25373<<ASSIGN  25694<<ASSIGN  28334<<ASSIGN  28450<<ASSIGN
     28947<<ASSIGN  29140<<ASSIGN
KX$DATA.RLS_STAT
     21374**DCL     21375--REDEF   28948>>IF
KX$FRAME
     21392**DCL     23392--ASSIGN  25518--ASSIGN  28338--ASSIGN
KX$FRAME.CTL
     21399**DCL     21399--REDEF
KX$FRAME.RLS_STAT
     21394**DCL     21395--REDEF
KX$L1.CHN$
     20580**DCL     23357>>ASSIGN  23567>>ASSIGN  23616>>ASSIGN
KX$L2.BUF_SIZE
     20625**DCL     26187>>IF      26200>>IF
KX$L2.CHN$
     20625**DCL     26014>>ASSIGN  27962>>ASSIGN
KX$L2.DFLVCPRF.EXTSEQ#
     20866**DCL     23402>>IF      23402>>IF      28336>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     20746**DCL     20756--REDEF
KX$L2.DSTSNPA
     20937**DCL     27960>>ASSIGN
KX$L2.DSTSNPA.ADR_STRING
     20937**DCL     20937--REDEF
KX$L2.DSTSNPA.LNG
     20937**DCL     27946>>IF
KX$L2.DVC_HEAD$
     20943**DCL     27971>>ASSIGN  28022>>ASSIGN
KX$L2.FLG.ACPX25
     20651**DCL     26391>>IF
KX$L2.FLG.ACPX29
     20651**DCL     26384>>IF
KX$L2.FLG.BLK
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:694  
     20649**DCL     23814>>IF      25519>>IF      28317>>IF      28715>>IF      28806>>IF      28819>>IF
     28860>>IF
KX$L2.FLG.CHRINF
     20653**DCL     28256>>IF
KX$L2.FLG.DATAVL
     20652**DCL     23818<<ASSIGN  25527<<ASSIGN  25649<<ASSIGN  25658<<ASSIGN  28324<<ASSIGN  28673<<ASSIGN
     28819<<ASSIGN  28866<<ASSIGN  28934<<ASSIGN  29129<<ASSIGN  29171<<ASSIGN
KX$L2.FLG.DCE
     20649**DCL     25952>>IF      25952>>IF      26411>>IF      28388>>IF
KX$L2.FLG.EXTSEQ
     20653**DCL     23358>>ASSIGN
KX$L2.FLG.FSTSLCACP
     20653**DCL     26162>>IF
KX$L2.FLG.OK
     20650**DCL     23496>>IF      23814>>IF      25519>>IF      28317>>IF      28715>>IF      28806>>IF
     28860>>IF
KX$L2.FLG.RESTART
     20652**DCL     23474>>IF      23477<<ASSIGN  23528>>IF      28301<<ASSIGN  28689>>IF
KX$L2.FLG.RESTART_PEND
     20652**DCL     23498<<ASSIGN  23528>>IF      28323<<ASSIGN  28685>>IF      28688<<ASSIGN
KX$L2.FLG.REV_CH
     20649**DCL     26154>>IF
KX$L2.FRMR_NSNR
     20723**DCL     20724--REDEF
KX$L2.HIC
     20633**DCL     25952>>IF      28392>>ASSIGN
KX$L2.HOC
     20634**DCL     25952>>IF      28396>>ASSIGN
KX$L2.INIT_ALTRET
     20942**DCL     28004>>IF      28007<<ASSIGN  28106<<ASSIGN
KX$L2.L3_HEAD$
     20655**DCL     23539>>ASSIGN  23995>>ASSIGN  26041>>ASSIGN  28114>>ASSIGN  28402>>ASSIGN  28428>>ASSIGN
     28701>>ASSIGN  28718>>ASSIGN  28820>>ASSIGN
KX$L2.LDCTX
     20938**DCL     28001>>IF      28013>>ASSIGN  28076>>ASSIGN  28100<<ASSIGN
KX$L2.LIC
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:695  
     20633**DCL     25952>>IF      28391>>ASSIGN
KX$L2.LOC
     20634**DCL     25952>>IF      28397>>ASSIGN
KX$L2.MAXWND
     20633**DCL     26221>>IF      26232>>IF
KX$L2.NEXT$
     20625**DCL     24013>>ASSIGN
KX$L2.NTWADR.ADR_PAIR
     20657**DCL     26002>>IF
KX$L2.NTWADR.ADR_STRING
     20657**DCL     20657--REDEF   25987>>IF
KX$L2.NTWADR.LNG
     20657**DCL     25986>>ASSIGN  25987>>IF      25987>>IF      26007>>IF
KX$L2.QOS
     20938**DCL     27961>>ASSIGN
KX$L2.STATES
     20635**DCL     20635--REDEF
KX$L2.T20
     20725**DCL     28351>>IF      28351>>ASSIGN
KX$L2.T20TMR
     20716**DCL     28361--ASSIGN  28362--ASSIGN  28362--ASSIGN
KX$L2.T20TMR.BLNK$
     20718**DCL     23470>>ASSIGN  23470>>ASSIGN  23471>>IF      23471>>ASSIGN  28362<<ASSIGN  28363>>ASSIGN
     28363>>ASSIGN  28363>>IF      28364>>ASSIGN
KX$L2.T20TMR.CNT
     20720**DCL     28351<<ASSIGN
KX$L2.T20TMR.FLNK$
     20718**DCL     23470>>IF      23470>>ASSIGN  23471>>ASSIGN  23471>>ASSIGN  28361<<ASSIGN  28363>>IF
     28363>>ASSIGN  28364>>ASSIGN  28364>>ASSIGN
KX$L2.T20TMR.ON
     20720**DCL     23470>>IF      23470<<ASSIGN  28361>>IF      28361<<ASSIGN  28362>>IF      28363<<ASSIGN
KX$L2.TERMACKPND
     20942**DCL     28096<<ASSIGN
KX$L2.TERM_ALTRET
     20942**DCL     27949>>IF      27952<<ASSIGN  28108<<ASSIGN
KX$L3
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:696  
     20975**DCL     23611--ASSIGN  23612<>CALL
KX$L3.BLK
     21088**DCL     24698>>IF      25502<<ASSIGN  25645>>IF      25648<<ASSIGN  28752>>IF      28788<<ASSIGN
     28823>>IF      28883<<ASSIGN
KX$L3.CALDLY
     21206**DCL     24303>>IF      24315<>CALL
KX$L3.CALL_COLLISION
     21209**DCL     24443>>IF      26404>>IF      26410<<ASSIGN
KX$L3.CALL_OPTS
     21010**DCL     24115--ASSIGN  25347--ASSIGN  26372>>ASSIGN  26373>>ASSIGN  28476<<ASSIGN
KX$L3.CALL_OPTS.RCVADR
     21014**DCL     26063--ASSIGN  26066--ASSIGN  26426--ASSIGN
KX$L3.CALL_OPTS.RCVADR.ADR_PAIR
     21015**DCL     26071<<ASSIGN  26071>>ASSIGN  28462--ASSIGN
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     21015**DCL     21015--REDEF
KX$L3.CALL_OPTS.RCVADR.SIZ
     21015**DCL     25980<<ASSIGN  26068<<ASSIGN  28457>>ASSIGN  28463>>IF      28472>>ASSIGN  28473>>ASSIGN
KX$L3.CALL_OPTS.RCVPCKSIZ
     21012**DCL     23583>>IF      24549>>IF      24606>>ASSIGN  25079>>IF      25094>>IF      25806>>IF
     25816>>IF      26202<<ASSIGN  26551>>IF      26556<<ASSIGN  28158>>ASSIGN  28165>>ASSIGN
KX$L3.CALL_OPTS.RCVTHR
     21012**DCL     26250<<ASSIGN  26612<<ASSIGN  28201>>ASSIGN  28206>>ASSIGN
KX$L3.CALL_OPTS.RCVWND
     21013**DCL     24703>>IF      26235<<ASSIGN  26236>>ASSIGN  26582>>IF      26585<<ASSIGN  26586>>IF
     26588>>ASSIGN  28179>>ASSIGN  28184>>ASSIGN
KX$L3.CALL_OPTS.SNDPCKSIZ
     21013**DCL     26189<<ASSIGN  26562>>IF      26567<<ASSIGN  28160>>ASSIGN  28167>>ASSIGN  29117>>IF
     29124>>ASSIGN
KX$L3.CALL_OPTS.SNDTHR
     21013**DCL     26249<<ASSIGN  26613<<ASSIGN  28194>>IF      28201>>ASSIGN  28206>>ASSIGN
KX$L3.CALL_OPTS.SNDWND
     21014**DCL     25498>>IF      25645>>IF      26223<<ASSIGN  26594>>IF      26597<<ASSIGN  28180>>ASSIGN
     28185>>ASSIGN  28785>>IF
KX$L3.CHN$
     20976**DCL     23595>>IF      23601<>CALL    23608<>CALL    23616>>ASSIGN  23617>>ASSIGN  23618>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:697  
     23620>>ASSIGN  23767>>IF      23828<<ASSIGN  23911>>IF      23917<>CALL    23919<<ASSIGN  23920>>ASSIGN
     24054>>IF      24054>>ASSIGN  24180>>IF      24225>>IF      24293>>ASSIGN  24294<<ASSIGN  24751>>ASSIGN
     24957>>ASSIGN  25619>>CALL    28440>>ASSIGN  29183>>CALL    29183>>CALL
KX$L3.CHRINF
     21090**DCL     28256>>IF
KX$L3.CLRCPND
     21208**DCL     24192<<ASSIGN  24276>>IF      24279<<ASSIGN
KX$L3.CM$
     20975**DCL     23341>>ASSIGN  23575>>ASSIGN  23747<<ASSIGN  23803<<ASSIGN  24005>>ASSIGN  24755<<ASSIGN
     24965<<ASSIGN  25264<<ASSIGN  28839>>ASSIGN
KX$L3.CM_OPTS
     21045**DCL     26373<<ASSIGN  28476>>ASSIGN
KX$L3.CM_OPTS.RCVADR.ADR_STRING
     21050**DCL     21050--REDEF
KX$L3.CTL_Q_HEAD$
     21101**DCL     25528>>IF      25530<<ASSIGN  28726>>IF      28729>>ASSIGN  28730<<ASSIGN  28731>>IF
     28733>>ASSIGN  28962>>DOWHILE 28963>>ASSIGN  28964<<ASSIGN
KX$L3.CTL_Q_TAIL$
     21101**DCL     25532>>ASSIGN  25533<<ASSIGN  28733<<ASSIGN  28967<<ASSIGN
KX$L3.CUG
     21093**DCL     21094--REDEF
KX$L3.CUGLNG
     21090**DCL     26116<<ASSIGN  26138<<ASSIGN  28222>>IF      28229>>IF      28236>>IF      28238>>ASSIGN
KX$L3.CUG_BCD.BCDPAIR1
     21094**DCL     26131<<ASSIGN  28233>>ASSIGN
KX$L3.CUG_BCD.BCDPAIR2
     21094**DCL     26113<<ASSIGN  26135<<ASSIGN  28226>>ASSIGN  28234>>ASSIGN
KX$L3.DATA
     21088**DCL     23799<<ASSIGN  24111<<ASSIGN  25002<<ASSIGN  25031<<ASSIGN  25343<<ASSIGN  28882<<ASSIGN
KX$L3.DATTMRBLK
     21162**DCL     29246--ASSIGN  29247--ASSIGN  29247--ASSIGN
KX$L3.DATTMRBLK.BLNK$
     21164**DCL     29223>>ASSIGN  29223>>ASSIGN  29224>>IF      29224>>ASSIGN  29247<<ASSIGN  29248>>ASSIGN
     29248>>ASSIGN  29248>>IF      29249>>ASSIGN
KX$L3.DATTMRBLK.CNT
     21166**DCL     29236<<ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:698  
KX$L3.DATTMRBLK.FLNK$
     21164**DCL     29223>>IF      29223>>ASSIGN  29224>>ASSIGN  29224>>ASSIGN  29246<<ASSIGN  29248>>IF
     29248>>ASSIGN  29249>>ASSIGN  29249>>ASSIGN
KX$L3.DATTMRBLK.ON
     21166**DCL     29223>>IF      29223<<ASSIGN  29246>>IF      29246<<ASSIGN  29247>>IF      29248<<ASSIGN
KX$L3.DCNT
     21096**DCL     25497<<ASSIGN  25497>>ASSIGN  25498>>IF      25596>>IF      25619<>CALL    25628<<ASSIGN
     25628>>ASSIGN  25645>>IF      28784<<ASSIGN  28784>>ASSIGN  28785>>IF      28921<<ASSIGN
KX$L3.DCNTP
     21097**DCL     24095>>IF      24697<<ASSIGN  24697>>ASSIGN  24698>>IF      24703>>IF      25496<<ASSIGN
     25728<<ASSIGN  28782<<ASSIGN  28920<<ASSIGN
KX$L3.DFL_OPTS
     21080**DCL     24750--ASSIGN  24956--ASSIGN  26372<<ASSIGN
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     21085**DCL     21085--REDEF
KX$L3.D_LIST_HEAD$
     21102**DCL     25630>>DOWHILE 25632>>ASSIGN  25633<<ASSIGN  25634>>IF      25666>>IF      28940>>ASSIGN
     28944>>DOWHILE 28945>>ASSIGN  28946<<ASSIGN  29143>>IF      29145<<ASSIGN
KX$L3.D_LIST_TAIL$
     21102**DCL     25636<<ASSIGN  28952<<ASSIGN  28953>>ASSIGN  29147>>ASSIGN  29148<<ASSIGN
KX$L3.EXTSEQ
     21090**DCL     23339>>ASSIGN  23582>>ASSIGN  23853>>IF      24640>>ASSIGN  25720>>IF      25933<<ASSIGN
     25936<<ASSIGN  28739>>IF      28767>>IF      28783>>ASSIGN  28854>>ASSIGN
KX$L3.FSTSLC
     21090**DCL     23730>>IF      25223>>IF      25331>>IF      26161<<ASSIGN  26162>>IF      26368>>IF
     26442>>IF      26690>>IF      26722>>IF      28151>>IF      28172>>IF      28239>>IF      28243>>ASSIGN
KX$L3.HIST.ACT
     21100**DCL     24081<<ASSIGN
KX$L3.HIST.EVT
     21100**DCL     24080<<ASSIGN
KX$L3.HIST.STT
     21100**DCL     24079<<ASSIGN
KX$L3.HIST.X
     21099**DCL     24079>>ASSIGN  24080>>ASSIGN  24081>>ASSIGN  24082<<ASSIGN  24082>>ASSIGN  24083>>IF
     24085<<ASSIGN
KX$L3.IDLCLK
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:699  
     21208**DCL     24001<<ASSIGN  24001>>ASSIGN  24002>>IF      24073<<ASSIGN
KX$L3.IDLPRD
     21207**DCL     23997>>IF      24073>>ASSIGN
KX$L3.INPBLK
     21089**DCL     23935>>IF      23936<<ASSIGN  23946<<ASSIGN  23967>>IF      24569>>IF      24657<<ASSIGN
     24660<<ASSIGN  25705>>IF      28884<<ASSIGN
KX$L3.INP_HEAD$
     21103**DCL     23962>>DOWHILE 23963>>ASSIGN  23964<<ASSIGN  24572>>IF      24574<<ASSIGN  28910>>DOWHILE
     28911>>ASSIGN  28912<<ASSIGN
KX$L3.INP_TAIL$
     21103**DCL     23969<<ASSIGN  24576>>ASSIGN  24577<<ASSIGN  28915<<ASSIGN
KX$L3.INTPND
     21088**DCL     23860>>IF      23874<<ASSIGN  24872<<ASSIGN  26821>>IF      28885<<ASSIGN
KX$L3.INTTMRBLK
     21194**DCL     23899--ASSIGN  23900--ASSIGN  23900--ASSIGN
KX$L3.INTTMRBLK.BLNK$
     21196**DCL     23900<<ASSIGN  23901>>ASSIGN  23901>>ASSIGN  23901>>IF      23902>>ASSIGN  29210>>ASSIGN
     29210>>ASSIGN  29211>>IF      29211>>ASSIGN
KX$L3.INTTMRBLK.CNT
     21198**DCL     23889<<ASSIGN
KX$L3.INTTMRBLK.FLNK$
     21196**DCL     23899<<ASSIGN  23901>>IF      23901>>ASSIGN  23902>>ASSIGN  23902>>ASSIGN  29210>>IF
     29210>>ASSIGN  29211>>ASSIGN  29211>>ASSIGN
KX$L3.INTTMRBLK.ON
     21198**DCL     23899>>IF      23899<<ASSIGN  23900>>IF      23901<<ASSIGN  29210>>IF      29210<<ASSIGN
KX$L3.IN_
     20976**DCL     23941>>ASSIGN  23955<<ASSIGN  24650>>ASSIGN  28903<<ASSIGN
KX$L3.IN_.ADR$
     20976**DCL     23937>>IF      23952<>CALL    23954<>CALL    24587>>IF      24590<<ASSIGN  24616>>ASSIGN
     24622<>CALL    24626<>CALL    24628<<ASSIGN  24639>>ASSIGN  24670>>IF      24676<>CALL    24680<>CALL
     24683<<ASSIGN  24686>>IF      28895>>IF      28900<>CALL    28902<>CALL
KX$L3.IN_.BFRSIZ
     20978**DCL     23950>>IF      24593<<ASSIGN  24599>>IF      24599>>IF      24619>>IF      24626>>CALL
     24629<<ASSIGN  24673>>IF      24680>>CALL    28898>>IF      28902>>CALL
KX$L3.IN_.BYTSIZ
     20977**DCL     23954>>CALL    24592<<ASSIGN  24599>>IF      24603>>ASSIGN  24617>>ASSIGN  24617>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:700  
     24632>>IF      24640>>ASSIGN  24642<<ASSIGN  24642>>ASSIGN
KX$L3.IN_.BYTX
     20977**DCL     24591<<ASSIGN  24599>>IF      24617>>ASSIGN  24630<<ASSIGN  24640>>ASSIGN
KX$L3.IN_MBIT
     21092**DCL     23943>>ASSIGN  23957<<ASSIGN  24595<<ASSIGN  24652>>ASSIGN  28905<<ASSIGN
KX$L3.IN_QBIT
     21091**DCL     23942>>ASSIGN  23956<<ASSIGN  24594<<ASSIGN  24651>>ASSIGN  28904<<ASSIGN
KX$L3.L2$
     20975**DCL     23340>>ASSIGN
KX$L3.LCLADR
     21209**DCL     26424--ASSIGN  28472--ASSIGN
KX$L3.LCLADR.ADR_PAIR
     21210**DCL     26060--ASSIGN  28467--ASSIGN
KX$L3.LCLADR.ADR_STRING
     21210**DCL     21210--REDEF
KX$L3.LCLADR.SIZ
     21209**DCL     26059<<ASSIGN  28456>>ASSIGN  28473>>ASSIGN
KX$L3.LCLNSAP
     21227**DCL     21283--REDEF   26424--ASSIGN
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     21278**DCL     21279--REDEF
KX$L3.LCLNSAP.NSAP.LEN
     21250**DCL     28263>>IF      28269>>ASSIGN
KX$L3.LCLNSAP_REDEF.NSAP
     21283**DCL     26302<<ASSIGN  28272>>ASSIGN
KX$L3.LCN#
     21092**DCL     21093--REDEF   23342>>ASSIGN  23542>>IF      23566<<ASSIGN  23570>>ASSIGN  24282<<ASSIGN
     24779<<ASSIGN  24809<<ASSIGN  25180<<ASSIGN  25472>>ASSIGN  25952>>IF      25952>>IF      25952>>IF
     25952>>IF      28444<<ASSIGN
KX$L3.MAYBE
     21088**DCL     28803>>IF
KX$L3.NEXT$
     20975**DCL     23544>>ASSIGN  24011>>ASSIGN  28123>>ASSIGN  28704>>ASSIGN  28802>>ASSIGN  28858>>ASSIGN
KX$L3.NOD
     20980**DCL     24748>>ASSIGN  24955>>ASSIGN
KX$L3.NOREASM
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:701  
     21208**DCL     24645>>IF      24756<<ASSIGN  24966<<ASSIGN  25816>>IF      29163>>IF
KX$L3.OUT_
     20978**DCL     28845<<ASSIGN  28954<<ASSIGN
KX$L3.OUT_.ADR$
     20978**DCL     24698>>IF      28835>>IF      28850>>IF      29152>>ASSIGN  29160<<ASSIGN
KX$L3.OUT_.BYTSIZ
     20979**DCL     29117>>IF      29120>>ASSIGN  29155<<ASSIGN  29155>>ASSIGN  29157>>IF      29163>>IF
KX$L3.OUT_.BYTX
     20979**DCL     29153>>ASSIGN  29156<<ASSIGN  29156>>ASSIGN
KX$L3.OUT_MBIT
     21092**DCL     28848<<ASSIGN  28956<<ASSIGN  29163>>IF
KX$L3.OUT_QBIT
     21092**DCL     28847<<ASSIGN  28955<<ASSIGN  29134>>ASSIGN
KX$L3.PCKNGT
     21209**DCL     26177<<ASSIGN  28151>>IF
KX$L3.PPR
     21096**DCL     25573>>ASSIGN  25654>>IF      25661<<ASSIGN  28925<<ASSIGN
KX$L3.PVC
     21089**DCL     23832>>IF      23997>>IF      24059>>IF      24519>>IF      25039>>IF      25178>>IF
     25317>>IF      25813>>IF      25923>>IF      26703>>IF      26844>>IF
KX$L3.R21
     21203**DCL     24241>>IF      24241>>IF      24396>>IF      24396>>IF
KX$L3.R23
     21204**DCL     24519>>IF
KX$L3.RLSCHN
     21089**DCL     23604<<ASSIGN  23615<<ASSIGN  23624>>IF      23829<<ASSIGN  23911>>IF      23918<<ASSIGN
     24290>>IF
KX$L3.RMTNSAP
     21300**DCL     21356--REDEF   26426--ASSIGN
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     21351**DCL     21352--REDEF
KX$L3.RMTNSAP.NSAP.LEN
     21323**DCL     28263>>IF      28270>>ASSIGN
KX$L3.RMTNSAP_REDEF.NSAP
     21356**DCL     26286<<ASSIGN  28275>>ASSIGN
KX$L3.RNR
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:702  
     21089**DCL     23645>>IF      25654>>IF      25659<<ASSIGN  25896<<ASSIGN  28752>>IF      28823>>IF
     28886<<ASSIGN
KX$L3.RSPDLY
     21205**DCL     24698>>IF      26236<<ASSIGN  26586>>IF      26588<<ASSIGN
KX$L3.RSPTMR
     21206**DCL     24703>>IF      24713<>CALL
KX$L3.RSPTOCMP
     21091**DCL     24698>>IF
KX$L3.RTR$
     21101**DCL     24698>>IF      25666>>IF      28752>>IF      28760>>IF      28760>>IF      28764>>ASSIGN
     28765<<ASSIGN  28940<<ASSIGN  28953<<ASSIGN
KX$L3.RTRCNT
     21205**DCL     24112<<ASSIGN  24198>>IF      24240<<ASSIGN  24240>>ASSIGN  24241>>IF      24355<<ASSIGN
     24392>>IF      24395<<ASSIGN  24395>>ASSIGN  24396>>IF      24426<<ASSIGN  24518<<ASSIGN  24518>>ASSIGN
     24519>>IF      24740<<ASSIGN  24780<<ASSIGN  25181<<ASSIGN  25206<<ASSIGN  25250<<ASSIGN  25344<<ASSIGN
     28507>>IF
KX$L3.RVS
     21091**DCL     26160<<ASSIGN  28239>>IF      28243>>ASSIGN
KX$L3.STATE.CURRENT
     21099**DCL     23645>>IF      23730>>IF      23834<<ASSIGN  23836<<ASSIGN  23853>>IF      23853>>IF
     23949>>IF      23978>>IF      23997>>IF      24055>>ASSIGN  24075>>ASSIGN  24076<<ASSIGN  24231>>IF
     24301>>IF      24528<<ASSIGN  24635<<ASSIGN  24661>>IF      24694>>IF      24812>>IF      24858>>IF
     24983>>IF      24983>>IF      25059>>IF      25570>>IF      25813>>IF      25941>>IF      25941>>IF
     26402>>IF      26436>>IF      26442>>IF      26821>>IF      28752>>IF      28823>>IF      28935>>IF
     28935>>IF
KX$L3.STATE.LAST
     21099**DCL     24075<<ASSIGN  24198>>IF      24237>>IF      28975>>IF      28975>>IF
KX$L3.STATES
     21098**DCL     21098--REDEF
KX$L3.T21
     21201**DCL     24144<>CALL
KX$L3.T22
     21201**DCL     25118<>CALL    25294<>CALL    25364<>CALL    25379<>CALL
KX$L3.T23
     21202**DCL     24356<>CALL    25234<>CALL
KX$L3.T25
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:703  
     21202**DCL     24757>>IF      24967>>IF      29236>>IF      29236>>ASSIGN
KX$L3.T26
     21203**DCL     23889>>IF      23889>>ASSIGN
KX$L3.TMRBLK
     21130**DCL     29276--ASSIGN  29278--ASSIGN  29280--ASSIGN
KX$L3.TMRBLK.BLNK$
     21132**DCL     29197>>ASSIGN  29197>>ASSIGN  29198>>IF      29198>>ASSIGN  29279<<ASSIGN  29290>>ASSIGN
     29292>>ASSIGN  29293>>IF      29297>>ASSIGN
KX$L3.TMRBLK.CNT
     21134**DCL     29268<<ASSIGN
KX$L3.TMRBLK.FLNK$
     21132**DCL     29197>>IF      29197>>ASSIGN  29198>>ASSIGN  29198>>ASSIGN  29273<<ASSIGN  29288>>IF
     29292>>ASSIGN  29295>>ASSIGN  29297>>ASSIGN
KX$L3.TMRBLK.ON
     21134**DCL     24312>>IF      24711>>IF      25504>>IF      28791>>IF      29197>>IF      29197<<ASSIGN
     29269>>IF      29272<<ASSIGN  29284>>IF      29287<<ASSIGN
KX$L3.TOACT
     21207**DCL     23648>>DOCASE  24759<<ASSIGN  24761<<ASSIGN  24969<<ASSIGN  24971<<ASSIGN  28935>>IF
     29138>>IF
KX$L3.TRNDLY
     21094**DCL     21095--REDEF   28247>>IF
KX$L3.TRNDLYBYT.LFT
     21095**DCL     28251>>ASSIGN
KX$L3.TRNDLYBYT.RGH
     21095**DCL     28252>>ASSIGN
KX$L3.TRNDLYIND
     21095**DCL     21096--REDEF
KX$L3.TRNDLYINDBYT.LFT
     21096**DCL     26651<<ASSIGN
KX$L3.TRNDLYINDBYT.RGH
     21096**DCL     26655<<ASSIGN
KX$L3.TYP
     20981**DCL     23572<<ASSIGN  24241>>IF      24263>>IF      24318>>IF      24396>>IF      24749>>ASSIGN
     25170>>IF
KX$L3.VR
     21097**DCL     24609>>IF      24611<<ASSIGN  24611>>ASSIGN  24613<<ASSIGN  25486>>ASSIGN  25492>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:704  
     25722>>ASSIGN  25725>>ASSIGN  25819>>IF      25823>>ASSIGN  25834<<ASSIGN  25834>>ASSIGN  28743>>ASSIGN
     28747>>ASSIGN  28771>>ASSIGN  28777>>ASSIGN  28927<<ASSIGN
KX$L3.VS
     21097**DCL     25487>>ASSIGN  25488<<ASSIGN  25488>>ASSIGN  25493>>ASSIGN  25494<<ASSIGN  25494>>ASSIGN
     25574>>ASSIGN  25619<>CALL    28772>>ASSIGN  28780>>ASSIGN  28783<<ASSIGN  28783>>ASSIGN  28926<<ASSIGN
KX$L3.WNDNGT
     21208**DCL     26239<<ASSIGN  28172>>IF
KX$LINKDEV IN PROCEDURE Y$START_L3S
     26898**DCL     27976<>CALL
KX$LINKDEV.FLNK$ IN PROCEDURE Y$START_L3S
     26899**DCL     27984>>ASSIGN  28067>>ASSIGN
KX$LINKDEV.RECNC IN PROCEDURE Y$START_L3S
     26904**DCL     27983<<ASSIGN
KX$LINKDEV.VDI$ IN PROCEDURE Y$START_L3S
     26898**DCL     27973>>IF      28025>>IF      28042>>ASSIGN  28042>>ASSIGN  28043>>IF      28044>>ASSIGN
     28046>>ASSIGN  28049>>ASSIGN  28050>>ASSIGN  28050>>ASSIGN
KX$PACKET
     21458**DCL     23881--ASSIGN  24591--ASSIGN  24640--ASSIGN  24854--ASSIGN  25229--ASSIGN  25325--ASSIGN
     25619<>CALL    25959--ASSIGN  26446--ASSIGN  26718--ASSIGN  28455--ASSIGN  28734--ASSIGN  28766--ASSIGN
     29153--ASSIGN
KX$PACKET.CTL
     21465**DCL     21465--REDEF
KX$PACKET.LCN#
     21494**DCL     21495--REDEF
KX$PACKET.RLS.L3
     21461**DCL     25819>>IF      25832>>IF
KX$PACKET.RLS_STAT
     21460**DCL     21461--REDEF
KX$PACKET.TYPE
     21495**DCL     21495--REDEF   21507--REDEF
KX$PACKET.TYPE_BITS.PS
     21499**DCL     21499--REDEF
KX$TDATA.L3_LIST$
     21595**DCL     25532<<ASSIGN  25633>>ASSIGN  28730>>ASSIGN  28765>>ASSIGN  28964>>ASSIGN  29147<<ASSIGN
KX$TDATA.RLS.L1
     21596**DCL     28760>>IF
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:705  
KX$TDATA.RLS.L2
     21596**DCL     28760>>IF
KX$TDATA.RLS.L3
     21596**DCL     25637<<ASSIGN
KX$TDATA.RLS_STAT
     21595**DCL     21596--REDEF   25638>>IF
KX$TL3.CALL_OPTS.RCVADR.ADR_STRING
     21660**DCL     21660--REDEF
KX$TL3.CHN$
     21621**DCL     26042>>DOWHILE
KX$TL3.CM_OPTS.RCVADR.ADR_STRING
     21695**DCL     21695--REDEF
KX$TL3.CUG
     21738**DCL     21739--REDEF
KX$TL3.DFL_OPTS.RCVADR.ADR_STRING
     21730**DCL     21730--REDEF
KX$TL3.LCLADR.ADR_STRING
     21855**DCL     21855--REDEF
KX$TL3.LCLNSAP
     21872**DCL     21928--REDEF
KX$TL3.LCLNSAP.NSAP.ADDRESS_N
     21923**DCL     21924--REDEF
KX$TL3.LCN#
     21737**DCL     21738--REDEF   28408>>IF
KX$TL3.NEXT$
     21620**DCL     26044>>ASSIGN  28435>>ASSIGN
KX$TL3.RMTNSAP
     21945**DCL     22001--REDEF
KX$TL3.RMTNSAP.NSAP.ADDRESS_N
     21996**DCL     21997--REDEF
KX$TL3.STATES
     21743**DCL     21743--REDEF
KX$TL3.TRNDLY
     21739**DCL     21740--REDEF
KX$TL3.TRNDLYIND
     21740**DCL     21741--REDEF
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:706  
KX$TPACKET.CTL
     22023**DCL     22023--REDEF
KX$TPACKET.LCN#
     22052**DCL     22053--REDEF
KX$TPACKET.RLS_STAT
     22018**DCL     22019--REDEF
KX$TPACKET.TYPE
     22053**DCL     22053--REDEF   22065--REDEF
KX$TPACKET.TYPE_BITS.PS
     22057**DCL     22057--REDEF
KX$XFRAME.CTL
     21431**DCL     21431--REDEF
KX$XFRAME.FRMR_NSNR
     21442**DCL     21442--REDEF
KX$XFRAME.RLS_STAT
     21426**DCL     21427--REDEF
KX$XPACKET
     21524**DCL     29070<>CALL
KX$XPACKET.CTL
     21531**DCL     21531--REDEF
KX$XPACKET.LCN#
     21560**DCL     21561--REDEF
KX$XPACKET.RLS_STAT
     21526**DCL     21527--REDEF
KX$XPACKET.TYPE
     21561**DCL     21561--REDEF   21573--REDEF
KX$XPACKET.TYPE_BITS.PS
     21565**DCL     21565--REDEF
KXC$CNCMNG
     16565**DCL-ENT 25408--CALL
KXF$FRAME
     16566**DCL-ENT 25540--CALL    28342--CALL    28794--CALL
KXP$PACKET
        13**PROC    23665--CALL    23966--CALL    23986--CALL    24008--CALL    24309--CALL    28124--CALL
     28705--CALL
KXS$GETBFR
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:707  
     16567**DCL-ENT 23876--CALL    24345--CALL    25110--CALL    25212--CALL    25280--CALL    25320--CALL
     25357--CALL    25372--CALL    25689--CALL    28332--CALL    28448--CALL    29127--CALL
KXS$GETL3
     16570**DCL-ENT 23558--CALL    23826--CALL
KXS$RLSBFR
     16571**DCL-ENT 23952--CALL    24622--CALL    24676--CALL    25640--CALL    28900--CALL    28913--CALL
     28950--CALL    28965--CALL
KXS$RLSL3
     16572**DCL-ENT 24941--CALL    25174--CALL
KXS$RLSL3_MAYBE
     16573**DCL-ENT 24297--CALL    28805--CALL
KXS$SYSLOG
     16574**DCL-ENT 25619--CALL    29013--CALL    29041--CALL    29070--CALL    29096--CALL
KXX$INTCNC
     16587**DCL-ENT 27976--CALL
KXX_VDH_DSC IN PROCEDURE Y$START_L3S
     27354**DCL     28023>>ASSIGN
KX_BUF.LOGSIZ
     22562**DCL     26182>>IF      26182>>IF      26195>>IF      26195>>IF      26551>>IF      26551>>IF
     26562>>IF      26562>>IF      28158>>ASSIGN  28160>>ASSIGN  28165>>ASSIGN  28167>>ASSIGN
KX_BUF.SIZ
     22561**DCL     23583>>IF      24549>>IF      24606>>ASSIGN  25079>>IF      25094>>IF      25806>>IF
     25816>>IF      29117>>IF      29124>>ASSIGN
KX_CALLING_CM$
     23223**DCL     23744>>IF      23800>>IF      24752<<ASSIGN  24754<<ASSIGN  24962<<ASSIGN  24964<<ASSIGN
KX_CNTX.HD$
     22558**DCL     23993>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     22832**DCL     22838--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     22873**DCL     22880--REDEF
KX_STATS_X25.CALLS_IN
     23212**DCL     25922<<ASSIGN  25922>>ASSIGN
KX_STATS_X25.CALLS_OUT
     23213**DCL     28505<<ASSIGN  28505>>ASSIGN
KX_STATS_X25.CIRCUITS
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:708  
     23217**DCL     24113<<ASSIGN  24113>>ASSIGN  25340<<ASSIGN  25340>>ASSIGN  28978<<ASSIGN  28978>>ASSIGN
KX_STATS_X25.CLEARS_IN
     23213**DCL     26709<<ASSIGN  26709>>ASSIGN
KX_STATS_X25.CLEARS_OUT
     23214**DCL     24353<<ASSIGN  24353>>ASSIGN
KX_STATS_X25.D_BYTES_IN
     23214**DCL     24584<<ASSIGN  24584>>ASSIGN
KX_STATS_X25.D_BYTES_OUT
     23216**DCL     29175<<ASSIGN  29175>>ASSIGN
KX_STATS_X25.D_CMPPACKETS_IN
     23214**DCL     24648<<ASSIGN  24648>>ASSIGN
KX_STATS_X25.D_CMPPACKETS_OUT
     23215**DCL     29161<<ASSIGN  29161>>ASSIGN
KX_STATS_X25.D_PACKETS_IN
     23210**DCL     24582<<ASSIGN  24582>>ASSIGN
KX_STATS_X25.D_PACKETS_OUT
     23210**DCL     29174<<ASSIGN  29174>>ASSIGN
KX_STATS_X25.F_BLK
     23217**DCL     25537<<ASSIGN  25537>>ASSIGN  28868<<ASSIGN  28868>>ASSIGN
KX_STATS_X25.P_BLK
     23215**DCL     25501<<ASSIGN  25501>>ASSIGN  28789<<ASSIGN  28789>>ASSIGN
KX_STATS_X25.P_FLOW_IN
     23216**DCL     24842<<ASSIGN  24842>>ASSIGN
KX_STATS_X25.P_FLOW_OUT
     23216**DCL     25729<<ASSIGN  25729>>ASSIGN
KX_STATS_X25.REQSTATS.DSPMSK
     23157**DCL     23163--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     23198**DCL     23205--REDEF
KX_STATS_X25.RESETS
     23217**DCL     25105<<ASSIGN  25105>>ASSIGN  25292<<ASSIGN  25292>>ASSIGN  25363<<ASSIGN  25363>>ASSIGN
     25378<<ASSIGN  25378>>ASSIGN  26843<<ASSIGN  26843>>ASSIGN
KX_STATS_X25.RESTART_IN
     23211**DCL     23483<<ASSIGN  23483>>ASSIGN  23495<<ASSIGN  23495>>ASSIGN
KX_STATS_X25.RESTART_OUT
     23211**DCL     28366<<ASSIGN  28366>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:709  
KX_TMRBLK.QHD$
     22563**DCL     23471<<ASSIGN  23899<<ASSIGN  23902<<ASSIGN  28361<<ASSIGN  28364<<ASSIGN  29198<<ASSIGN
     29211<<ASSIGN  29224<<ASSIGN  29246<<ASSIGN  29249<<ASSIGN  29276<<ASSIGN  29295<<ASSIGN
KX_TMRBLK.QTL$
     22563**DCL     23470<<ASSIGN  23899>>IF      23900>>ASSIGN  23900>>ASSIGN  23900<<ASSIGN  23901<<ASSIGN
     28361>>IF      28362>>ASSIGN  28362>>ASSIGN  28362<<ASSIGN  28363<<ASSIGN  29197<<ASSIGN  29210<<ASSIGN
     29223<<ASSIGN  29246>>IF      29247>>ASSIGN  29247>>ASSIGN  29247<<ASSIGN  29248<<ASSIGN  29274>>IF
     29278>>ASSIGN  29279>>ASSIGN  29280<<ASSIGN  29290<<ASSIGN
L2$
     20004**DCL     20561--IMP-PTR 20606--IMP-PTR 23340<<ASSIGN  23346<<ASSIGN  23354>>IF      23357>>ASSIGN
     23358>>ASSIGN  23402>>IF      23402>>IF      23470>>IF      23470>>ASSIGN  23470>>IF      23470>>ASSIGN
     23470>>ASSIGN  23470>>ASSIGN  23471>>IF      23471>>ASSIGN  23471>>ASSIGN  23471>>ASSIGN  23474>>IF
     23477>>ASSIGN  23496>>IF      23498>>ASSIGN  23528>>IF      23528>>IF      23539>>ASSIGN  23557>>ASSIGN
     23567>>ASSIGN  23616>>ASSIGN  23814>>IF      23814>>IF      23818>>ASSIGN  23825>>ASSIGN  23961>>ASSIGN
     23993<<ASSIGN  23994>>DOWHILE 23995>>ASSIGN  24013<<ASSIGN  24013>>ASSIGN  25475>>ASSIGN  25519>>IF
     25519>>IF      25527>>ASSIGN  25649>>ASSIGN  25658>>ASSIGN  25952>>IF      25952>>IF      25952>>IF
     25952>>IF      25952>>IF      25952>>IF      25986>>ASSIGN  25987>>IF      25987>>IF      25987>>IF
     26002>>IF      26007>>IF      26014>>ASSIGN  26041>>ASSIGN  26154>>IF      26162>>IF      26187>>IF
     26200>>IF      26221>>IF      26232>>IF      26384>>IF      26391>>IF      26411>>IF      27946>>IF
     27949>>IF      27952>>ASSIGN  27960>>ASSIGN  27961>>ASSIGN  27962>>ASSIGN  27971>>ASSIGN  28001>>IF
     28004>>IF      28007>>ASSIGN  28013>>ASSIGN  28022>>ASSIGN  28076>>ASSIGN  28077>>ASSIGN  28096>>ASSIGN
     28100>>ASSIGN  28106>>ASSIGN  28108>>ASSIGN  28114>>ASSIGN  28256>>IF      28301>>ASSIGN  28317>>IF
     28317>>IF      28323>>ASSIGN  28324>>ASSIGN  28336>>ASSIGN  28340>>ASSIGN  28351>>IF      28351>>ASSIGN
     28351>>ASSIGN  28361>>IF      28361>>ASSIGN  28361>>ASSIGN  28361>>ASSIGN  28362>>ASSIGN  28362>>ASSIGN
     28362>>ASSIGN  28362>>IF      28363>>ASSIGN  28363>>IF      28363>>ASSIGN  28363>>ASSIGN  28363>>ASSIGN
     28363>>IF      28364>>ASSIGN  28364>>ASSIGN  28364>>ASSIGN  28388>>IF      28391>>ASSIGN  28392>>ASSIGN
     28396>>ASSIGN  28397>>ASSIGN  28402>>ASSIGN  28428>>ASSIGN  28670>>ASSIGN  28671>>ASSIGN  28673>>ASSIGN
     28685>>IF      28688>>ASSIGN  28689>>IF      28701>>ASSIGN  28715>>IF      28715>>IF      28718>>ASSIGN
     28806>>IF      28806>>IF      28819>>IF      28819>>ASSIGN  28820>>ASSIGN  28860>>IF      28860>>IF
     28866>>ASSIGN  28934>>ASSIGN  29129>>ASSIGN  29171>>ASSIGN
L2EXT
     20166**DCL     23358<<ASSIGN  23392>>ASSIGN  23393>>ASSIGN  23879>>ASSIGN  23881>>ASSIGN  24348>>ASSIGN
     24591>>ASSIGN  24640>>ASSIGN  24854>>ASSIGN  25113>>ASSIGN  25211>>ASSIGN  25229>>ASSIGN  25283>>ASSIGN
     25325>>ASSIGN  25359>>ASSIGN  25374>>ASSIGN  25518>>ASSIGN  25698>>ASSIGN  25959>>ASSIGN  26446>>ASSIGN
     26718>>ASSIGN  28313>>ASSIGN  28338>>ASSIGN  28455>>ASSIGN  28734>>ASSIGN  28766>>ASSIGN  29151>>ASSIGN
     29153>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:710  
L2_BLOCKED IN PROCEDURE Y$GETDAT
     28866**LABEL   28715--GOTO    28763--GOTO    28806--GOTO    28860--GOTO
L3$
     20002**DCL     20975--IMP-PTR 23335<<ASSIGN  23336>>IF      23339>>ASSIGN  23340>>ASSIGN  23341>>ASSIGN
     23342>>ASSIGN  23539<<ASSIGN  23540>>DOWHILE 23542>>IF      23544<<ASSIGN  23544>>ASSIGN  23548>>IF
     23565<<ASSIGN  23566>>ASSIGN  23570>>ASSIGN  23572>>ASSIGN  23575>>ASSIGN  23582>>ASSIGN  23583>>IF
     23595>>IF      23601>>CALL    23604>>ASSIGN  23608>>CALL    23611>>ASSIGN  23612>>CALL    23615>>ASSIGN
     23616>>ASSIGN  23617>>ASSIGN  23618>>ASSIGN  23620>>ASSIGN  23620>>ASSIGN  23624>>IF      23645>>IF
     23645>>IF      23648>>DOCASE  23659>>ASSIGN  23696>>IF      23730>>IF      23730>>IF      23744>>IF
     23747>>ASSIGN  23767>>IF      23799>>ASSIGN  23800>>IF      23803>>ASSIGN  23827<<ASSIGN  23828>>ASSIGN
     23829>>ASSIGN  23831>>ASSIGN  23832>>IF      23834>>ASSIGN  23836>>ASSIGN  23853>>IF      23853>>IF
     23853>>IF      23860>>IF      23874>>ASSIGN  23889>>IF      23889>>ASSIGN  23889>>ASSIGN  23899>>IF
     23899>>ASSIGN  23899>>ASSIGN  23899>>ASSIGN  23900>>ASSIGN  23900>>ASSIGN  23900>>ASSIGN  23900>>IF
     23901>>ASSIGN  23901>>IF      23901>>ASSIGN  23901>>ASSIGN  23901>>ASSIGN  23901>>IF      23902>>ASSIGN
     23902>>ASSIGN  23902>>ASSIGN  23911>>IF      23911>>IF      23911>>IF      23917>>CALL    23918>>ASSIGN
     23919>>ASSIGN  23920>>ASSIGN  23920>>ASSIGN  23935>>IF      23936>>ASSIGN  23937>>IF      23941>>ASSIGN
     23942>>ASSIGN  23943>>ASSIGN  23946>>ASSIGN  23949>>IF      23950>>IF      23952>>CALL    23954>>CALL
     23954>>CALL    23955>>ASSIGN  23956>>ASSIGN  23957>>ASSIGN  23962>>DOWHILE 23963>>ASSIGN  23964>>ASSIGN
     23967>>IF      23969>>ASSIGN  23978>>IF      23983>>ASSIGN  23995<<ASSIGN  23996>>DOWHILE 23997>>IF
     23997>>IF      23997>>IF      24001>>ASSIGN  24001>>ASSIGN  24002>>IF      24005>>ASSIGN  24006>>ASSIGN
     24011<<ASSIGN  24011>>ASSIGN  24054>>IF      24054>>ASSIGN  24055>>ASSIGN  24059>>IF      24073>>ASSIGN
     24073>>ASSIGN  24075>>ASSIGN  24075>>ASSIGN  24076>>ASSIGN  24079>>ASSIGN  24079>>ASSIGN  24080>>ASSIGN
     24080>>ASSIGN  24081>>ASSIGN  24081>>ASSIGN  24082>>ASSIGN  24082>>ASSIGN  24083>>IF      24085>>ASSIGN
     24095>>IF      24111>>ASSIGN  24112>>ASSIGN  24115>>ASSIGN  24144>>CALL    24180>>IF      24192>>ASSIGN
     24198>>IF      24198>>IF      24225>>IF      24231>>IF      24237>>IF      24240>>ASSIGN  24240>>ASSIGN
     24241>>IF      24241>>IF      24241>>IF      24241>>IF      24263>>IF      24276>>IF      24279>>ASSIGN
     24282>>ASSIGN  24290>>IF      24293>>ASSIGN  24294>>ASSIGN  24296>>ASSIGN  24301>>IF      24303>>IF
     24308>>ASSIGN  24312>>IF      24315>>CALL    24318>>IF      24355>>ASSIGN  24356>>CALL    24392>>IF
     24395>>ASSIGN  24395>>ASSIGN  24396>>IF      24396>>IF      24396>>IF      24396>>IF      24426>>ASSIGN
     24443>>IF      24518>>ASSIGN  24518>>ASSIGN  24519>>IF      24519>>IF      24519>>IF      24528>>ASSIGN
     24549>>IF      24569>>IF      24572>>IF      24574>>ASSIGN  24576>>ASSIGN  24577>>ASSIGN  24587>>IF
     24590>>ASSIGN  24591>>ASSIGN  24592>>ASSIGN  24593>>ASSIGN  24594>>ASSIGN  24595>>ASSIGN  24599>>IF
     24599>>IF      24599>>IF      24599>>IF      24603>>ASSIGN  24606>>ASSIGN  24609>>IF      24611>>ASSIGN
     24611>>ASSIGN  24613>>ASSIGN  24616>>ASSIGN  24617>>ASSIGN  24617>>ASSIGN  24617>>ASSIGN  24619>>IF
     24622>>CALL    24626>>CALL    24626>>CALL    24628>>ASSIGN  24629>>ASSIGN  24630>>ASSIGN  24632>>IF
     24635>>ASSIGN  24639>>ASSIGN  24640>>ASSIGN  24640>>ASSIGN  24640>>ASSIGN  24642>>ASSIGN  24642>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:711  
     24645>>IF      24650>>ASSIGN  24651>>ASSIGN  24652>>ASSIGN  24657>>ASSIGN  24660>>ASSIGN  24661>>IF
     24670>>IF      24673>>IF      24676>>CALL    24680>>CALL    24680>>CALL    24683>>ASSIGN  24686>>IF
     24694>>IF      24697>>ASSIGN  24697>>ASSIGN  24698>>IF      24698>>IF      24698>>IF      24698>>IF
     24698>>IF      24698>>IF      24703>>IF      24703>>IF      24703>>IF      24711>>IF      24713>>CALL
     24740>>ASSIGN  24748>>ASSIGN  24749>>ASSIGN  24750>>ASSIGN  24751>>ASSIGN  24752>>ASSIGN  24755>>ASSIGN
     24756>>ASSIGN  24757>>IF      24759>>ASSIGN  24761>>ASSIGN  24779>>ASSIGN  24780>>ASSIGN  24809>>ASSIGN
     24812>>IF      24858>>IF      24872>>ASSIGN  24940>>ASSIGN  24955>>ASSIGN  24956>>ASSIGN  24957>>ASSIGN
     24962>>ASSIGN  24965>>ASSIGN  24966>>ASSIGN  24967>>IF      24969>>ASSIGN  24971>>ASSIGN  24983>>IF
     24983>>IF      25002>>ASSIGN  25031>>ASSIGN  25039>>IF      25059>>IF      25079>>IF      25094>>IF
     25118>>CALL    25170>>IF      25173>>ASSIGN  25178>>IF      25180>>ASSIGN  25181>>ASSIGN  25206>>ASSIGN
     25223>>IF      25234>>CALL    25250>>ASSIGN  25264>>ASSIGN  25294>>CALL    25317>>IF      25331>>IF
     25343>>ASSIGN  25344>>ASSIGN  25347>>ASSIGN  25364>>CALL    25379>>CALL    25404>>ASSIGN  25472>>ASSIGN
     25486>>ASSIGN  25487>>ASSIGN  25488>>ASSIGN  25488>>ASSIGN  25492>>ASSIGN  25493>>ASSIGN  25494>>ASSIGN
     25494>>ASSIGN  25496>>ASSIGN  25497>>ASSIGN  25497>>ASSIGN  25498>>IF      25498>>IF      25502>>ASSIGN
     25504>>IF      25528>>IF      25530>>ASSIGN  25532>>ASSIGN  25533>>ASSIGN  25570>>IF      25573>>ASSIGN
     25574>>ASSIGN  25596>>IF      25619>>CALL    25619>>CALL    25619>>CALL    25628>>ASSIGN  25628>>ASSIGN
     25630>>DOWHILE 25632>>ASSIGN  25633>>ASSIGN  25634>>IF      25636>>ASSIGN  25645>>IF      25645>>IF
     25645>>IF      25648>>ASSIGN  25654>>IF      25654>>IF      25659>>ASSIGN  25661>>ASSIGN  25666>>IF
     25666>>IF      25705>>IF      25720>>IF      25722>>ASSIGN  25725>>ASSIGN  25728>>ASSIGN  25806>>IF
     25813>>IF      25813>>IF      25816>>IF      25816>>IF      25819>>IF      25823>>ASSIGN  25834>>ASSIGN
     25834>>ASSIGN  25896>>ASSIGN  25923>>IF      25933>>ASSIGN  25936>>ASSIGN  25941>>IF      25941>>IF
     25952>>IF      25952>>IF      25952>>IF      25952>>IF      25980>>ASSIGN  26042>>DOWHILE 26046>>IF
     26059>>ASSIGN  26060>>ASSIGN  26063>>ASSIGN  26066>>ASSIGN  26068>>ASSIGN  26071>>ASSIGN  26071>>ASSIGN
     26113>>ASSIGN  26116>>ASSIGN  26131>>ASSIGN  26135>>ASSIGN  26138>>ASSIGN  26160>>ASSIGN  26161>>ASSIGN
     26162>>IF      26177>>ASSIGN  26189>>ASSIGN  26202>>ASSIGN  26223>>ASSIGN  26235>>ASSIGN  26236>>ASSIGN
     26236>>ASSIGN  26239>>ASSIGN  26249>>ASSIGN  26250>>ASSIGN  26286>>ASSIGN  26302>>ASSIGN  26368>>IF
     26372>>ASSIGN  26372>>ASSIGN  26373>>ASSIGN  26373>>ASSIGN  26402>>IF      26404>>IF      26410>>ASSIGN
     26424>>ASSIGN  26424>>ASSIGN  26426>>ASSIGN  26426>>ASSIGN  26436>>IF      26442>>IF      26442>>IF
     26551>>IF      26556>>ASSIGN  26562>>IF      26567>>ASSIGN  26582>>IF      26585>>ASSIGN  26586>>IF
     26586>>IF      26588>>ASSIGN  26588>>ASSIGN  26594>>IF      26597>>ASSIGN  26612>>ASSIGN  26613>>ASSIGN
     26651>>ASSIGN  26655>>ASSIGN  26690>>IF      26703>>IF      26722>>IF      26821>>IF      26821>>IF
     26844>>IF      28114<<ASSIGN  28118>>DOWHILE 28122>>ASSIGN  28123<<ASSIGN  28123>>ASSIGN  28151>>IF
     28151>>IF      28158>>ASSIGN  28160>>ASSIGN  28165>>ASSIGN  28167>>ASSIGN  28172>>IF      28172>>IF
     28179>>ASSIGN  28180>>ASSIGN  28184>>ASSIGN  28185>>ASSIGN  28194>>IF      28201>>ASSIGN  28201>>ASSIGN
     28206>>ASSIGN  28206>>ASSIGN  28222>>IF      28226>>ASSIGN  28229>>IF      28233>>ASSIGN  28234>>ASSIGN
     28236>>IF      28238>>ASSIGN  28239>>IF      28239>>IF      28243>>ASSIGN  28243>>ASSIGN  28247>>IF
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:712  
     28251>>ASSIGN  28252>>ASSIGN  28256>>IF      28263>>IF      28263>>IF      28269>>ASSIGN  28270>>ASSIGN
     28272>>ASSIGN  28275>>ASSIGN  28440>>ASSIGN  28444>>ASSIGN  28456>>ASSIGN  28457>>ASSIGN  28462>>ASSIGN
     28463>>IF      28467>>ASSIGN  28472>>ASSIGN  28472>>ASSIGN  28473>>ASSIGN  28473>>ASSIGN  28476>>ASSIGN
     28476>>ASSIGN  28507>>IF      28701<<ASSIGN  28702>>DOWHILE 28703>>ASSIGN  28704<<ASSIGN  28704>>ASSIGN
     28718<<ASSIGN  28719>>DOWHILE 28725>>ASSIGN  28726>>IF      28729>>ASSIGN  28730>>ASSIGN  28731>>IF
     28733>>ASSIGN  28733>>ASSIGN  28739>>IF      28743>>ASSIGN  28747>>ASSIGN  28752>>IF      28752>>IF
     28752>>IF      28752>>IF      28760>>IF      28760>>IF      28764>>ASSIGN  28765>>ASSIGN  28767>>IF
     28771>>ASSIGN  28772>>ASSIGN  28777>>ASSIGN  28780>>ASSIGN  28782>>ASSIGN  28783>>ASSIGN  28783>>ASSIGN
     28783>>ASSIGN  28784>>ASSIGN  28784>>ASSIGN  28785>>IF      28785>>IF      28788>>ASSIGN  28791>>IF
     28801>>ASSIGN  28802<<ASSIGN  28802>>ASSIGN  28820<<ASSIGN  28822>>DOWHILE 28823>>IF      28823>>IF
     28823>>IF      28835>>IF      28838>>ASSIGN  28839>>ASSIGN  28845>>ASSIGN  28847>>ASSIGN  28848>>ASSIGN
     28850>>IF      28854>>ASSIGN  28858<<ASSIGN  28858>>ASSIGN  28882>>ASSIGN  28883>>ASSIGN  28884>>ASSIGN
     28885>>ASSIGN  28886>>ASSIGN  28895>>IF      28898>>IF      28900>>CALL    28902>>CALL    28902>>CALL
     28903>>ASSIGN  28904>>ASSIGN  28905>>ASSIGN  28910>>DOWHILE 28911>>ASSIGN  28912>>ASSIGN  28915>>ASSIGN
     28920>>ASSIGN  28921>>ASSIGN  28925>>ASSIGN  28926>>ASSIGN  28927>>ASSIGN  28935>>IF      28935>>IF
     28935>>IF      28940>>ASSIGN  28940>>ASSIGN  28944>>DOWHILE 28945>>ASSIGN  28946>>ASSIGN  28952>>ASSIGN
     28953>>ASSIGN  28953>>ASSIGN  28954>>ASSIGN  28955>>ASSIGN  28956>>ASSIGN  28962>>DOWHILE 28963>>ASSIGN
     28964>>ASSIGN  28967>>ASSIGN  28975>>IF      28975>>IF      29117>>IF      29117>>IF      29120>>ASSIGN
     29124>>ASSIGN  29134>>ASSIGN  29138>>IF      29143>>IF      29145>>ASSIGN  29147>>ASSIGN  29148>>ASSIGN
     29152>>ASSIGN  29153>>ASSIGN  29155>>ASSIGN  29155>>ASSIGN  29156>>ASSIGN  29156>>ASSIGN  29157>>IF
     29160>>ASSIGN  29163>>IF      29163>>IF      29163>>IF      29182>>IF      29183>>CALL    29183>>CALL
     29197>>IF      29197>>ASSIGN  29197>>IF      29197>>ASSIGN  29197>>ASSIGN  29197>>ASSIGN  29198>>IF
     29198>>ASSIGN  29198>>ASSIGN  29198>>ASSIGN  29210>>IF      29210>>ASSIGN  29210>>IF      29210>>ASSIGN
     29210>>ASSIGN  29210>>ASSIGN  29211>>IF      29211>>ASSIGN  29211>>ASSIGN  29211>>ASSIGN  29223>>IF
     29223>>ASSIGN  29223>>IF      29223>>ASSIGN  29223>>ASSIGN  29223>>ASSIGN  29224>>IF      29224>>ASSIGN
     29224>>ASSIGN  29224>>ASSIGN  29236>>IF      29236>>ASSIGN  29236>>ASSIGN  29246>>IF      29246>>ASSIGN
     29246>>ASSIGN  29246>>ASSIGN  29247>>ASSIGN  29247>>ASSIGN  29247>>ASSIGN  29247>>IF      29248>>ASSIGN
     29248>>IF      29248>>ASSIGN  29248>>ASSIGN  29248>>ASSIGN  29248>>IF      29249>>ASSIGN  29249>>ASSIGN
     29249>>ASSIGN  29268>>ASSIGN  29269>>IF      29272>>ASSIGN  29273>>ASSIGN  29276>>ASSIGN  29278>>ASSIGN
     29279>>ASSIGN  29280>>ASSIGN  29284>>IF      29287>>ASSIGN  29288>>IF      29290>>ASSIGN  29292>>ASSIGN
     29292>>ASSIGN  29293>>IF      29295>>ASSIGN  29297>>ASSIGN  29297>>ASSIGN
L3EXT
     20167**DCL     23339<<ASSIGN  23582<<ASSIGN  23583>>IF      24549>>IF      24583>>ASSIGN  24591>>ASSIGN
     24592>>ASSIGN  24613>>ASSIGN  25079>>IF      25083>>IF      25094>>IF      25473>>ASSIGN  25483>>IF
     25512>>IF      25588>>IF      25789>>IF      25806>>IF      25806>>IF      25816>>IF      25834>>ASSIGN
     25885>>IF      25932<<ASSIGN  25935<<ASSIGN  26126>>IF      26218>>IF      26229>>IF      26317>>IF
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:713  
     26327>>IF      26340>>IF      28854<<ASSIGN  29151>>ASSIGN  29153>>ASSIGN  29166>>IF
LCN
     20145**DCL     23342<<ASSIGN  23348<<ASSIGN  23422<<ASSIGN  23423>>IF      23542>>IF      28391<<ASSIGN
     28392>>ASSIGN  28396<<ASSIGN  28397>>ASSIGN  28408>>IF      28419>>IF      28420>>IF      28422<<ASSIGN
     28422>>ASSIGN  28424<<ASSIGN  28424>>ASSIGN  28440>>ASSIGN  28444>>ASSIGN  29013<>CALL    29041<>CALL
     29070<>CALL    29096<>CALL
LER1
     23432**LABEL   23398--GOTO    23408--GOTO    23555--GOTO
LOG_TO_CP6
     19993**DCL     26186>>ASSIGN  26199>>ASSIGN  26555>>ASSIGN  26566>>ASSIGN
L_CHKCM$
     23744**LABEL   23772--GOTO    23781--GOTO    23790--GOTO
L_CHKL3
     23696**LABEL   23707--GOTO    23715--GOTO
L_CHKX25 IN PROCEDURE Y$WHAT_TYPE
     26391**LABEL   26397--GOTO
L_CLRC
     24267**LABEL   24185--GOTO
L_COMMON IN PROCEDURE Y$ER0
     29013**LABEL   28987--GOTO
L_DFR IN PROCEDURE Y$START_L3S
     28067**LABEL   28051--GOTO
L_DIED IN PROCEDURE Y$START_L3S
     28001**LABEL   27993--GOTO
L_DUPFCL IN PROCEDURE Y$WHAT_TYPE
     26108**LABEL   26125--GOTO    26148--GOTO    26175--GOTO    26212--GOTO    26277--GOTO    26293--GOTO
     26316--GOTO    26326--GOTO    26339--GOTO    26509--GOTO    26520--GOTO    26531--GOTO    26545--GOTO
     26576--GOTO    26606--GOTO    26622--GOTO    26637--GOTO    26648--GOTO    26666--GOTO
L_INVCLDADR IN PROCEDURE Y$WHAT_TYPE
     25993**LABEL   26004--GOTO
L_INVFCLCOD IN PROCEDURE Y$WHAT_TYPE
     26357**LABEL   26128--GOTO    26311--GOTO    26319--GOTO    26329--GOTO    26342--GOTO    26371--GOTO
L_LL IN PROCEDURE Y$WHAT_TYPE
     25862**LABEL   25848--GOTO
L_NO_MEM
     23561**LABEL   23613--GOTO    23826--CALLALT
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:714  
L_RLSL3
     24290**LABEL   24320--GOTO
L_RST_D1
     25076**LABEL   24637--GOTO
L_SEND_RR
     24706**LABEL   24097--GOTO
L_STOP
     25159**LABEL   24529--GOTO
MBIT
     20170**DCL     24595>>ASSIGN  24604>>IF      24645>>IF      24653>>ASSIGN  24698>>IF      25792<<ASSIGN
     25798<<ASSIGN  25816>>IF      25818<<ASSIGN  25885>>IF
NEW_RESTART
     18875**DCL     23493>>ASSIGN
NO_DATA IN PROCEDURE Y$GETDAT
     28858**LABEL   28844--GOTO
NO_L3CTX
     18508**DCL     23561>>ASSIGN
NO_LCN
     18977**DCL     24136>>ASSIGN
OUTSTR
     22103**DCL     29153>>ASSIGN
OUT_PKTHDR
     23281**DCL     23324--REDEF   23360<<ASSIGN  25518--ASSIGN  25712<<ASSIGN  29133<<ASSIGN
OUT_PKTHDR.CAUSE
     23319**DCL     23320--REDEF   24350<<ASSIGN  24365>>ASSIGN  25217<<ASSIGN  25285<<ASSIGN  25361<<ASSIGN
     25376<<ASSIGN
OUT_PKTHDR.DIAG
     23323**DCL     23511<<ASSIGN  24351<<ASSIGN  24370>>ASSIGN  25115<<ASSIGN  25220<<ASSIGN  25222<<ASSIGN
     25288<<ASSIGN  25290<<ASSIGN
OUT_PKTHDR.GFI
     23300**DCL     25473<<ASSIGN  28336<<ASSIGN
OUT_PKTHDR.LCN#
     23300**DCL     23301--REDEF   25472<<ASSIGN
OUT_PKTHDR.PR_BITS.M
     23313**DCL     29168<<ASSIGN
OUT_PKTHDR.PR_BITS.PR
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:715  
     23313**DCL     25486<<ASSIGN  25722<<ASSIGN
OUT_PKTHDR.PR_EXT.M
     23322**DCL     29170<<ASSIGN
OUT_PKTHDR.PR_EXT.PR
     23321**DCL     25492<<ASSIGN  25725<<ASSIGN
OUT_PKTHDR.Q_BIT
     23300**DCL     29134<<ASSIGN
OUT_PKTHDR.TYPE
     23301**DCL     23301--REDEF   23313--REDEF   23316--REDEF   23880<<ASSIGN  24349<<ASSIGN  25114<<ASSIGN
     25216<<ASSIGN  25284<<ASSIGN  25324<<ASSIGN  25360<<ASSIGN  25375<<ASSIGN  25508>>IF      25508>>IF
     25512>>IF      25713<<ASSIGN  28335<<ASSIGN  28497<<ASSIGN
OUT_PKTHDR.TYPE_BITS.DP
     23309**DCL     25477>>IF      25512>>IF
OUT_PKTHDR.TYPE_BITS.PS
     23305**DCL     23305--REDEF   25487<<ASSIGN
OUT_PKTHDR.TYPE_EXT.PS
     23317**DCL     25493<<ASSIGN
OUT_PKTHDR_CHR
     23324**DCL     28338>>ASSIGN
PEVENT
     20150**DCL     23361<<ASSIGN  23368>>DOCASE  23585<<ASSIGN  23589<<ASSIGN  23638<<ASSIGN  23660>>IF
     23672<<ASSIGN  23681<<ASSIGN  23688<<ASSIGN  23695<<ASSIGN  23706<<ASSIGN  23714<<ASSIGN  23735<<ASSIGN
     23737<<ASSIGN  23769<<ASSIGN  23771<<ASSIGN  23780<<ASSIGN  23789<<ASSIGN  24027<<ASSIGN  24033<<ASSIGN
     24039<<ASSIGN  24058>>ASSIGN  24080>>ASSIGN  24211>>IF      24361>>IF      24477>>IF      24480>>IF
     24737>>IF      24907>>IF      24926>>IF      24988>>IF      25003>>IF      25087>>IF      25100>>IF
     25621<<ASSIGN  25654>>IF      25654>>IF      25805<<ASSIGN  25810<<ASSIGN  25827<<ASSIGN  25864<<ASSIGN
     25887<<ASSIGN  25891<<ASSIGN  25895<<ASSIGN  25900<<ASSIGN  25926<<ASSIGN  25939<<ASSIGN  25945<<ASSIGN
     26401<<ASSIGN  26406<<ASSIGN  26438<<ASSIGN  26440<<ASSIGN  26450<<ASSIGN  26699<<ASSIGN  26705<<ASSIGN
     26708<<ASSIGN  26714<<ASSIGN  26726<<ASSIGN  26801<<ASSIGN  26811<<ASSIGN  26813<<ASSIGN  26819<<ASSIGN
     26828<<ASSIGN  26831<<ASSIGN  26838<<ASSIGN  26842<<ASSIGN  26853<<ASSIGN  26857<<ASSIGN  26862<<ASSIGN
     26865<<ASSIGN  28986>>ASSIGN
PPR IN PROCEDURE Y$PR
     25558**DCL     25573<<ASSIGN  25586>>IF      25596>>IF      25596>>IF      25626>>ASSIGN  25630>>DOWHILE
     25642<<ASSIGN  25642>>ASSIGN
PR IN PROCEDURE Y$PR
     25559**DCL     25572<<ASSIGN  25589>>IF      25589<<ASSIGN  25589>>ASSIGN  25592>>IF      25592<<ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:716  
     25592>>ASSIGN  25596>>IF      25596>>IF      25596>>IF      25626>>ASSIGN  25630>>DOWHILE
PRD IN PROCEDURE Y$START_TIMER
     29258**DCL     29256--PROC    29265>>IF      29268>>ASSIGN
PS
     20175**DCL     25794<<ASSIGN  25800<<ASSIGN  25819>>IF      25824>>ASSIGN
PSTATE
     20151**DCL     24055<<ASSIGN  24056>>ASSIGN  24058>>ASSIGN  24062<<ASSIGN  24067<<ASSIGN  24076>>ASSIGN
     24079>>ASSIGN  24231>>IF      24301>>IF      24661>>IF      24694>>IF      24812>>IF      24858>>IF
     25059>>IF
PS_PR.PR IN PROCEDURE Y$GETDAT
     28659**DCL     28743<<ASSIGN  28771<<ASSIGN
PS_PR.PS IN PROCEDURE Y$GETDAT
     28661**DCL     28772<<ASSIGN
PVC_STATE_TABLE.ACTION
     17264**DCL     24068>>ASSIGN
PVC_STATE_TABLE.NEXT_STATE
     17240**DCL     24067>>ASSIGN
REDIRECTED_CALL
     17993**DCL     26344>>ASSIGN
RESTART
     17323**DCL     23481>>ASSIGN
RESTART_COMMON IN PROCEDURE Y$RESTART
     28313**LABEL   28304--GOTO
RESTART_LNG
     18457**DCL     23451>>ASSIGN
RETALT IN PROCEDURE Y$CNCMNG
     25406**LABEL   25408--CALLALT 25410--CALLALT
RLSACT
     17583**DCL     24916>>ASSIGN
RMTDCL
     17634**DCL     24950>>ASSIGN
RSTCMP
     17685**DCL     24997>>ASSIGN
RSTRCV
     18564**DCL     24991>>ASSIGN  25028>>ASSIGN
RSTTIMOUT
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:717  
     19437**DCL     24504>>ASSIGN
RST_D1
     18615**DCL     25076>>ASSIGN
RST_PRS_ENTRY
     25105**LABEL   25132--GOTO
SENDING_CALL
     20160**DCL     25323<<ASSIGN  28151>>IF      28155>>IF      28172>>IF      28176>>IF      28198>>IF
     28215>>IF      28256>>IF      28256>>IF      28263>>IF      28475<<ASSIGN
SHORT_PACKET
     18253**DCL     23397>>ASSIGN
SIZ
     20157**DCL     24603<<ASSIGN  24606<<ASSIGN  24606>>ASSIGN  24607<<ASSIGN  24607>>ASSIGN  24608<>CALL
     24629>>ASSIGN
SIZ IN PROCEDURE Y$DATOUT
     29112**DCL     29120<<ASSIGN  29124<<ASSIGN  29127<>CALL    29151>>ASSIGN  29153>>ASSIGN  29153>>ASSIGN
     29155>>ASSIGN  29156>>ASSIGN  29175>>ASSIGN
STATE_TABLE.ACTION
     17004**DCL     24063>>ASSIGN
STATE_TABLE.NEXT_STATE
     16781**DCL     24062>>ASSIGN
STOP
     17738**DCL     28984>>ASSIGN
STR$
     20006**DCL     22102--IMP-PTR 22103--IMP-PTR 24616<<ASSIGN  24617>>ASSIGN  24639<<ASSIGN  24640>>ASSIGN
     29152<<ASSIGN  29153>>ASSIGN
STRT
     22519**DCL     25987>>IF      26424<<ASSIGN  26424>>ASSIGN  26426<<ASSIGN  26426>>ASSIGN
STRT0
     22520**DCL     23881<<ASSIGN  23881>>ASSIGN  25229<<ASSIGN  25229>>ASSIGN  25334<<ASSIGN  25334>>ASSIGN
     25518<<ASSIGN  25518>>ASSIGN  26060<<ASSIGN  26060>>ASSIGN  26286>>ASSIGN  26302>>ASSIGN  28467<<ASSIGN
     28467>>ASSIGN  28486<<ASSIGN  28486>>ASSIGN
STRT1
     22521**DCL     28462<<ASSIGN  28462>>ASSIGN
SUBCOMMON IN PROCEDURE Y$START_L3S
     28055**LABEL   27987--GOTO
S_TRMID$
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:718  
     20142**DCL     23357<<ASSIGN  24054<<ASSIGN  29013>>CALL    29041>>CALL    29070>>CALL    29096>>CALL
S_VAL0
     20143**DCL     23452<<ASSIGN  24056<<ASSIGN  25823<<ASSIGN  28986<<ASSIGN  28992<<ASSIGN  29013<>CALL
     29041<>CALL    29070<>CALL
S_VAL1
     20144**DCL     23453<<ASSIGN  25824<<ASSIGN  29041<>CALL
T$ IN PROCEDURE Y$CALL
     28384**DCL     28402<<ASSIGN  28406>>DOWHILE 28408>>IF      28428<<ASSIGN  28435<<ASSIGN  28435>>ASSIGN
T$ IN PROCEDURE Y$PR
     25557**DCL     25632<<ASSIGN  25633>>ASSIGN  25637>>ASSIGN  25638>>IF      25640<>CALL
T$ IN PROCEDURE Y$START_L3S
     26879**DCL     26898--IMP-PTR 27971<<ASSIGN  27972>>DOWHILE 27973>>IF      27976>>CALL    27983>>ASSIGN
     27984<<ASSIGN  27984>>ASSIGN  28022<<ASSIGN  28024>>DOWHILE 28025>>IF      28042>>ASSIGN  28042>>ASSIGN
     28043>>IF      28044>>ASSIGN  28046>>ASSIGN  28049>>ASSIGN  28050>>ASSIGN  28050>>ASSIGN  28067<<ASSIGN
     28067>>ASSIGN
TEMP IN PROCEDURE Y$WHAT_TYPE
     25761**DCL     26001<<ASSIGN  26002>>IF      26151<<ASSIGN  26154>>IF      26160>>ASSIGN  26161>>ASSIGN
     26179<<ASSIGN  26182>>IF      26182>>IF      26186<<ASSIGN  26186>>ASSIGN  26187>>IF      26189>>ASSIGN
     26192<<ASSIGN  26195>>IF      26195>>IF      26199<<ASSIGN  26199>>ASSIGN  26200>>IF      26202>>ASSIGN
     26215<<ASSIGN  26218>>IF      26218>>IF      26221>>IF      26223>>ASSIGN  26226<<ASSIGN  26229>>IF
     26229>>IF      26232>>IF      26235>>ASSIGN  26246<<ASSIGN  26249>>ASSIGN  26250>>ASSIGN  26258<<ASSIGN
     26261>>DOSELCT 26347<<ASSIGN  26350>>ASSIGN  26351>>ASSIGN  26548<<ASSIGN  26551>>IF      26551>>IF
     26555<<ASSIGN  26555>>ASSIGN  26556>>ASSIGN  26559<<ASSIGN  26562>>IF      26562>>IF      26566<<ASSIGN
     26566>>ASSIGN  26567>>ASSIGN  26579<<ASSIGN  26582>>IF      26582>>IF      26582>>IF      26585>>ASSIGN
     26591<<ASSIGN  26594>>IF      26594>>IF      26594>>IF      26597>>ASSIGN  26609<<ASSIGN  26612>>ASSIGN
     26613>>ASSIGN  26625<<ASSIGN  26628>>ASSIGN  26629>>ASSIGN  26761<<ASSIGN  26764>>ASSIGN  26765>>ASSIGN
TEMP0
     20147**DCL     22520--IMP-SIZ 23875<<ASSIGN  23876<>CALL    23879>>ASSIGN  23881>>ASSIGN  23881>>ASSIGN
     23881>>ASSIGN  23881>>ASSIGN  24583<<ASSIGN  24584>>ASSIGN  24599>>IF      24603>>ASSIGN  24632>>IF
     24640>>ASSIGN  24640>>ASSIGN  24642>>ASSIGN  25210<<ASSIGN  25211>>ASSIGN  25223>>IF      25223>>IF
     25229>>ASSIGN  25229>>ASSIGN  25229>>ASSIGN  25229>>ASSIGN  25330<<ASSIGN  25331>>IF      25331>>IF
     25334>>ASSIGN  25334>>ASSIGN  25334>>ASSIGN  25334>>ASSIGN  25336>>ASSIGN  25510<<ASSIGN  25515<<ASSIGN
     25517<<ASSIGN  25518>>ASSIGN  25518>>ASSIGN  25518>>ASSIGN  25986<<ASSIGN  25987>>IF      25987>>IF
     25995<<ASSIGN  26001>>ASSIGN  26002>>IF      26005<<ASSIGN  26005>>ASSIGN  26010<<ASSIGN  26010>>ASSIGN
     26060>>ASSIGN  26060>>ASSIGN  26060>>ASSIGN  26286>>ASSIGN  26302>>ASSIGN  26710<<ASSIGN  26718>>ASSIGN
     26719>>IF      26802<<ASSIGN  28269<<ASSIGN  28271>>ASSIGN  28272>>ASSIGN  28272>>ASSIGN  28273>>ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:719  
     28274>>ASSIGN  28275>>ASSIGN  28276>>ASSIGN  28303<<ASSIGN  28309<<ASSIGN  28313<<ASSIGN  28313>>ASSIGN
     28337>>ASSIGN  28456<<ASSIGN  28458>>ASSIGN  28460<<ASSIGN  28460>>ASSIGN  28467>>ASSIGN  28467>>ASSIGN
     28467>>ASSIGN  28468>>ASSIGN  28485<<ASSIGN  28486>>ASSIGN  28486>>ASSIGN  28486>>ASSIGN  28486>>ASSIGN
     28488>>ASSIGN
TEMP1
     20148**DCL     22521--IMP-SIZ 25211<<ASSIGN  25212<>CALL    25215>>ASSIGN  28270<<ASSIGN  28274>>ASSIGN
     28275>>ASSIGN  28275>>ASSIGN  28276>>ASSIGN  28457<<ASSIGN  28458>>ASSIGN  28461<<ASSIGN  28461>>ASSIGN
     28462>>ASSIGN  28462>>ASSIGN  28462>>ASSIGN  28466>>ASSIGN  28734<<ASSIGN  28735>>ASSIGN  28742>>ASSIGN
     28744>>ASSIGN  28747>>ASSIGN  28747>>ASSIGN  28766<<ASSIGN  28770>>ASSIGN  28773>>ASSIGN  28777>>ASSIGN
     28777>>ASSIGN  28780>>ASSIGN
TEMP2
     20173**DCL     24058<<ASSIGN  24062>>ASSIGN  24063>>ASSIGN  24067>>ASSIGN  24068>>ASSIGN  28735<<ASSIGN
     28736>>IF      28736>>IF
TEMP2$
     20172**DCL     23558<>CALL    23565>>ASSIGN  23826<>CALL    23827>>ASSIGN  23876<>CALL    23877>>ASSIGN
     24296<<ASSIGN  24297<>CALL    24345<>CALL    24346>>ASSIGN  24608<>CALL    24617>>ASSIGN  24628>>ASSIGN
     24940<<ASSIGN  24941<>CALL    25110<>CALL    25111>>ASSIGN  25173<<ASSIGN  25174<>CALL    25212<>CALL
     25213>>ASSIGN  25280<>CALL    25281>>ASSIGN  25320<>CALL    25321>>ASSIGN  25689<>CALL    25690>>ASSIGN
     28332<>CALL    28333>>ASSIGN  28448<>CALL    28449>>ASSIGN  28801<<ASSIGN  28803>>IF      28805<>CALL
     28963<<ASSIGN  28964>>ASSIGN  28965<>CALL
TERMID
     20190**DCL     23567<<ASSIGN  23601<>CALL    23617>>ASSIGN  26014<<ASSIGN  26029<>CALL
TERMID.LEV
     20194**DCL     23568<<ASSIGN  26027<<ASSIGN
TERMID.TERM
     20194**DCL     20203--REDEF   26042>>DOWHILE
TERMID.TERM.SUBDEVICE
     20200**DCL     23569<<ASSIGN  26018<<ASSIGN  26023<<ASSIGN  26419>>IF
TERMID.TERM.SUBSUBDEVICE
     20200**DCL     23570<<ASSIGN  26026<<ASSIGN  26037<<ASSIGN  26038>>DOWHILE 26050<<ASSIGN  26050>>ASSIGN
TERMID.TTYP
     20194**DCL     23571<<ASSIGN  26028<<ASSIGN
TL3$ IN PROCEDURE Y$WHAT_TYPE
     25762**DCL     26041<<ASSIGN  26042>>DOWHILE 26042>>DOWHILE 26044<<ASSIGN  26044>>ASSIGN  26046>>IF
TRY_SNDCQ IN PROCEDURE Y$START_L3S
     27199**DCL     27953<<ASSIGN  27963<<ASSIGN  27967<<ASSIGN  28008<<ASSIGN  28014<<ASSIGN  28018<<ASSIGN
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:720  
     28072>>IF
UNKLCN
     19488**DCL     23554>>ASSIGN
UNKPCK
     19539**DCL     24541>>ASSIGN
VCDWN
     17789**DCL     25201>>ASSIGN  25245>>ASSIGN
VCLST
     17840**DCL     25203>>ASSIGN  25260>>ASSIGN
VCLST_ENTRY
     25206**LABEL   24524--GOTO
VCRST
     17891**DCL     25275>>ASSIGN
VCUP
     17942**DCL     25307>>ASSIGN
VS IN PROCEDURE Y$PR
     25560**DCL     25574<<ASSIGN  25586>>IF      25589>>IF      25590<<ASSIGN  25590>>ASSIGN  25592>>IF
     25593<<ASSIGN  25593>>ASSIGN  25596>>IF
XPKTHDR
     22525**DCL     23392>>ASSIGN  28338<<ASSIGN
XTR_INT
     18819**DCL     23863>>ASSIGN
Y$CALL
     28380**PROC    24129--CALL
Y$CNCMNG
     25395**PROC    23655--CALL    23944--CALL    24119--CALL    24269--CALL    24373--CALL    24654--CALL
     24753--CALL    24783--CALL    24833--CALL    24856--CALL    24874--CALL    24938--CALL    24963--CALL
     25015--CALL    25057--CALL    25121--CALL    25168--CALL    25348--CALL    25366--CALL
Y$DATOUT
     29111**PROC    24727--CALL    28855--CALL
Y$DIED_L3S IN PROCEDURE Y$START_L3S
     27990**ENTRY   24021--CALL
Y$DVCADM
     29181**PROC    23628--CALL    23630--CALL    23726--CALL    23926--CALL    23928--CALL    24140--CALL
     24146--CALL    24229--CALL    24404--CALL    24811--CALL    25186--CALL
Y$ER
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:721  
     29076**PROC    23509--CALL    23562--CALL    23864--CALL    24137--CALL    24256--CALL    24392--CALL
     24401--CALL    24424--CALL    24505--CALL    24527--CALL    24741--CALL    24775--CALL    24998--CALL
     25204--CALL    25246--CALL    25261--CALL    25276--CALL    25308--CALL    26825--CALL    27979--CALL
Y$ER0
     28983**PROC    25159--CALL
Y$ER00 IN PROCEDURE Y$ER0
     28989**ENTRY   23441--CALL
Y$ER000 IN PROCEDURE Y$ER0
     28991**ENTRY   24441--CALL    24461--CALL    24488--CALL
Y$ER0000 IN PROCEDURE Y$ER0
     28985**ENTRY   24917--CALL
Y$ER1
     29019**PROC    23454--CALL    25825--CALL
Y$ER2
     29047**PROC    23432--CALL    23482--CALL    23494--CALL    24203--CALL    24335--CALL    24542--CALL
     24805--CALL    24912--CALL    24951--CALL    24992--CALL    25029--CALL    25077--CALL    25863--CALL
     26345--CALL    26745--CALL    26786--CALL    28509--CALL
Y$GETDAT
     28521**PROC    23816--CALL    23846--CALL
Y$PACKET_OUT
     25416**PROC    23883--CALL    24352--CALL    25116--CALL    25232--CALL    25291--CALL    25338--CALL
     25362--CALL    25377--CALL    25732--CALL    28501--CALL    29173--CALL
Y$PR
     25546**PROC    25833--CALL    25892--CALL    25897--CALL
Y$RESET_L3CNTX
     28878**PROC    24223--CALL    24344--CALL    24781--CALL    24921--CALL    25030--CALL    25109--CALL
     25165--CALL    25209--CALL    25279--CALL    25356--CALL
Y$RESTART
     28297**PROC    23377--CALL    23512--CALL    24892--CALL    28691--CALL
Y$RESTART_C IN PROCEDURE Y$RESTART
     28306**ENTRY   23501--CALL    28694--CALL
Y$SEND_PACKET
     25677**PROC    23971--CALL    24234--CALL    24280--CALL    24707--CALL    24862--CALL    25063--CALL
Y$START_DATTMR
     29230**PROC    25506--CALL    25674--CALL    28793--CALL
Y$START_L3S
PL6.E3A0      #001=KXP$PACKET File=KXP$PACKET.:E05TSI                            WED 07/30/97 02:24 Page:722  
     26877**PROC    23485--CALL    23503--CALL
Y$START_TIMER
     29256**PROC    24144--CALL    24315--CALL    24356--CALL    24713--CALL    25118--CALL    25234--CALL
     25294--CALL    25364--CALL    25379--CALL
Y$STOP_DATTMR
     29217**PROC    25669--CALL    28888--CALL
Y$STOP_INTTMR
     29204**PROC    24875--CALL    28887--CALL
Y$STOP_L3S IN PROCEDURE Y$START_L3S
     27995**ENTRY   23489--CALL    24018--CALL    24891--CALL
Y$STOP_TMR
     29191**PROC    24108--CALL    24187--CALL    24744--CALL    24777--CALL    24807--CALL    24982--CALL
     25163--CALL    25248--CALL    25311--CALL
Y$STUFF_FACILITIES
     28140**PROC    25328--CALL    28477--CALL
Y$WHAT_TYPE
     25736**PROC    23591--CALL
Y@BYTE IN PROCEDURE Y$GETDAT
     28657**DCL     28658--REDEF   28742<<ASSIGN  28744>>ASSIGN  28770<<ASSIGN  28773>>ASSIGN
Y@CNCMNG
     22526**DCL     25410>>CALL    28841>>CALL
Y@DFRINP
     20162**DCL     24568<<ASSIGN  24569>>IF      24670>>IF      24694>>IF
YESBIT IN PROCEDURE Y$DATOUT
     29114**DCL     29127<>CALL
Y_ACTSCR
     19897**DCL     23857--ASSIGN  25140--ASSIGN
Y_BADCTXPTR
     19714**DCL     23757<>CALL    23810<>CALL
Y_UNKACT
     19836**DCL     25389<>CALL
Y_UNKEVT
     19775**DCL     24045<>CALL
