VERSION E05

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:1    
        1        1        /*M*    VER$RECCMD - EDIT EXECUTION ROUTINES FOR RECORD COMMANDS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        /**/
        9        9        VER$RECCMD: PROC;
       10       10        /**/
       11       11        /*********************************************************************/
       12       12        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       13       13        /*********************************************************************/
       14       14        /**/
       15       15        %INCLUDE VE_SUBS_C;
       16      209        %INCLUDE VE_PERR_C;
       17      426        %INCLUDE CP_6_SUBS;
       18      966        %INCLUDE F$DCB;
       19     1015        %INCLUDE CP_6;
       20     1096        %INCLUDE B_ERRORS_C;
       21     2223        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:2    
       22     2224        /********************************************************************/
       23     2225        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       24     2226        /********************************************************************/
       25     2227        %FPT_READ  (FPTN=REREAD_FPT, STCLASS = CONSTANT,
       26     2228                    BUF = REC_BUF,
       27     2229                    DCB = M$UC ,
       28     2230                    REREAD = YES);
       29     2269        %FPT_SINPUT (FPTN = SINPUT_FPT,
       30     2270                     BUF = REC_BUF);
       31     2307        %FPT_OPEN (FPTN = OPEN_MELP_FPT, STCLASS = STATIC,
       32     2308                   DCB = M$ME,
       33     2309                   ASN = DEVICE,
       34     2310                   SCRUB = YES,
       35     2311                   FUN = CREATE,
       36     2312                   RES = 'LP');
       37     2421        %FPT_CLOSE    (FPTN = CLOSE_TY_FPT, STCLASS = STATIC,
       38     2422                      DISP = SAVE);
       39     2464        %FPT_PRECORD (FPTN = PREC_REV_FPT,
       40     2465                      DCB = M$FILE,
       41     2466                      BRK = YES,
       42     2467                      KEYS = NO,
       43     2468                      KEYR = YES,
       44     2469                      N = -2);
       45     2490        %FPT_PRECORD (FPTN = PREC_FPT,
       46     2491                      DCB = M$FILE,
       47     2492                      BRK = YES,
       48     2493                      KEYS = YES,
       49     2494                      KEYR = YES);
       50     2515        %FPT_GDS      (FPTN = MKDS_FPT, STCLASS = CONSTANT,
       51     2516                      RESULTS = DS_RESULTS,
       52     2517                      SEGSIZE = 10240);
       53     2533        %FPT_GETDCB ( FPTN = GETDCB_FPT,
       54     2534                      STCLASS = CONSTANT,
       55     2535                      DCBNAME = DCB_NAME ,
       56     2536                      DCBNUM = TY_DCBNUM) ;
       57     2551        %FPT_RELDCB ( FPTN = RELDCB_FPT,
       58     2552                      STCLASS = STATIC) ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:3    
       59     2566        %FPT_INT (FPTN = BREAKMK_FPT,UENTRY=VEX$BREAKMK,STCLASS=CONSTANT);
       60     2580        %FPT_INT (FPTN = BREAK_FPT,UENTRY=VEX$BREAK,STCLASS=CONSTANT);
       61     2594        %VLP_VECTOR   (FPTN = DS_RESULTS);
       62     2609        %VLP_NAME ( FPTN = DCB_NAME,
       63     2610                    NAME = 'M$TY',
       64     2611                    LEN = 4) ;
       65     2638        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:4    
       66     2639        /**********************************************************************/
       67     2640        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       68     2641        /**********************************************************************/
       69     2642    1   DCL 1 CMD_CNTRLWD BASED ALIGNED,        /* CONTROL WORD FOR CMD_TBL ENTRIES   */
       70     2643    1          2 FLAGS,
       71     2644    1             3 ENDCT BIT(1) UNAL,          /* LAST ENTRY                         */
       72     2645    1             3 * BIT(17) UNAL,
       73     2646    1          2 OFFSET UBIN(9) UNAL,           /* NUM. OF WORDS TO NEXT ENTRY        */
       74     2647    1          2 CMD_CODE UBIN(9) UNAL;         /* CODE FOR THIS COMMAND              */
       75     2648    1   DCL 1 IN_CMD_TBL BASED ALIGNED,         /*IN,IP,IS,RN,DE,AD,RR CMDS           */
       76     2649    1          2 * BIT(36) UNAL,
       77     2650    1          2 LO_SEQNUM UBIN(36) UNAL,
       78     2651    1          2 HI_SEQNUM UBIN(36) UNAL,
       79     2652    1          2 START_SPEC UBIN(36) UNAL,      /* DID USER SPECIFY A START */
       80     2653    1          2 COLUMN SBIN WORD UNAL;
       81     2654    1   DCL 1 CM_CMD_TBL BASED ALIGNED,         /* CM,CT COMMANDS                     */
       82     2655    1          2 * BIT(36) UNAL,
       83     2656    1          2 SEQNUM UBIN(36) UNAL,
       84     2657    1          2 LO_CLMN UBIN(36) UNAL,
       85     2658    1          2 HI_CLMN UBIN(36) UNAL;
       86     2659    1   DCL 1 MK_CMD_TBL BASED ALIGNED,         /* MK,MD COMMANDS                     */
       87     2660    1          2 * BIT(36) UNAL,
       88     2661    1          2 LO_SEQNUM UBIN(36) UNAL,
       89     2662    1          2 HI_SEQNUM UBIN(36) UNAL,
       90     2663    1          2 LO_SEQNUM2 UBIN(36) UNAL,
       91     2664    1          2 HI_SEQNUM2 UBIN(36) UNAL,
       92     2665    1          2 INCR UBIN(36) UNAL;
       93     2666    1   DCL 1 TN_CMD_TBL BASED ALIGNED,
       94     2667    1          2 * BIT(36) UNAL,
       95     2668    1          2 COUNT UBIN WORD UNAL;
       96     2669        /**/
       97     2670    1   DCL MK$BUF CHAR(PC_RECSIZE#) BASED ;
       98     2671    1   DCL 1 MK$RECS BASED ALIGNED,            /* BOOKKEEPPING                       */
       99     2672    1          2 SIZE (0:MKCOUNTMAX) UBIN BYTE UNAL,
      100     2673    1          2 OFFSET (0:MKCOUNTMAX) UBIN HALF UNAL,
      101     2674    1          2 KEY (0:MKCOUNTMAX) UBIN WORD UNAL ,
      102     2675    1          2 DVBYTE (0:MKCOUNTMAX) BIT(36) UNAL ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:5    
      103     2676        %B$TCB;
      104     2679        %B$ALT;
      105     2687    1   DCL 1 VARY$STRC BASED ALIGNED ,
      106     2688    1          2 CNT UBIN BYTE UNAL ,
      107     2689    1          2 TXT CHAR(VARY$STRC.CNT) UNAL ;
      108     2690        /**/
      109     2691        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:6    
      110     2692        /***********************************************************************/
      111     2693        /*    ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   */
      112     2694        /**********************************************************************/
      113     2695    1   DCL VEX$READ_SEQUEN ENTRY ALTRET;       /* GET NEXT RECORD                    */
      114     2696    1   DCL VEX$GET_NEXT_KEY ENTRY ALTRET;      /* GET NEXT RECORD KEY                */
      115     2697    1   DCL VEX$READ_RANDOM ENTRY(1) ALTRET;
      116     2698    1   DCL VEX$FIND_MATCH ENTRY(4) ALTRET;
      117     2699    1   DCL VEX$WRITE_REC ENTRY(2) ALTRET;
      118     2700    1   DCL VEX$DELREC ENTRY(3) ALTRET;
      119     2701    1   DCL VEX$ERROR ENTRY(2) ALTRET;
      120     2702    1   DCL VEX$ERRNEXT ENTRY ALTRET;
      121     2703    1   DCL VEX$ERRMAX ENTRY ALTRET;
      122     2704    1   DCL VEX$READ_TERM_REC ENTRY(3) ALTRET;
      123     2705    1   DCL VEX$TYPE_REC ENTRY(1);
      124     2706    1   DCL VEX$CLMN_DFLT ENTRY;
      125     2707    1   DCL VEX$FIELD_LEFT ENTRY(3);
      126     2708    1   DCL VEX$MOVE_LEFT ENTRY(2);
      127     2709    1   DCL VEX$COMP_RIGHT ENTRY(2);
      128     2710    1   DCL VEX$MOVE_RIGHT ENTRY(2);
      129     2711    1   DCL VEX$FIND_CLMN ENTRY(2) ALTRET;
      130     2712    1   DCL VEX$SEQNUM_TEXT ENTRY(2);
      131     2713    1   DCL VEX$SET_SUB_BUF ENTRY(2);
      132     2714    1   DCL VEX$SET_PROMPT ENTRY(1);
      133     2715    1   DCL VEX$BREAK ENTRY ASYNC;
      134     2716    1   DCL VEX$BREAKMK ENTRY ASYNC;
      135     2717        /********************************************************************/
      136     2718        /*   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   */
      137     2719        /********************************************************************/
      138     2720        /**/
      139     2721    1   DCL M$SI DCB;
      140     2722    1   DCL M$FILE DCB;                         /* READ EDIT FILE                     */
      141     2723    1   DCL M$FILE2 DCB;                        /* FOR MERGE AND COPY                 */
      142     2724    1   DCL M$DO DCB;                           /* ERROR MESSAGES                     */
      143     2725    1   DCL M$ME DCB;
      144     2726        /**/
      145     2727        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:7    
      146     2728        /*****************************************************************/
      147     2729        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
      148     2730        /*****************************************************************/
      149     2731        /**/
      150     2732    1   DCL FIRST_FLG BIT(1) AUTO ;
      151     2733    1   DCL TEMP_COUNT2 SBIN AUTO ;
      152     2734    1   DCL REMAIN SBIN AUTO;
      153     2735        /*****************************************************************/
      154     2736        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      155     2737        /*****************************************************************/
      156     2738        /**/
      157     2739        %INCLUDE VE_FLAGS_R;
      158     2790        /**/
      159     2791    1   DCL ME_DCBNUM UBIN WORD SYMREF ;        /* M$ME DCBNUM FOR OL COMMAND         */
      160     2792    1   DCL TY_DCBNUM UBIN WORD SYMREF ;        /* DCBNUM FOR OL COMMAND              */
      161     2793    1   DCL B$TCB$ PTR SYMREF;                  /* POINTER TO TCB                     */
      162     2794    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
      163     2795    1   DCL CMD_BUF CHAR(256) SYMREF;
      164     2796    1   DCL 1 TYPE_BUF SYMREF,
      165     2797    1          2 VFC CHAR(1) CALIGNED,
      166     2798    1          2 TEXT CHAR(PC_DISPRECSIZE#) CALIGNED;
      167     2799    1   DCL 1 SUB_BUF_1 SYMREF,
      168     2800    1          2 COUNT UBIN(9) UNAL,
      169     2801    1          2 TEXT CHAR(31) UNAL;
      170     2802    1   DCL 1 SUB_BUF_2 SYMREF,
      171     2803    1          2 COUNT UBIN(9) UNAL,
      172     2804    1          2 TEXT CHAR(31) UNAL;
      173     2805    1   DCL 1 SUB_BUF_3 SYMREF,
      174     2806    1          2 COUNT UBIN(9) UNAL,
      175     2807    1          2 TEXT CHAR(31) UNAL;
      176     2808    1   DCL SEQ_TEXT_BUF CHAR(9)  SYMREF;
      177     2809    1   DCL REC_SIZE UBIN(36) SYMREF;           /* CHARACTER COUNT OF REC_BUF         */
      178     2810    1   DCL RP_REC_SIZE UBIN WORD SYMREF;       /* RECORD SIZE READ - FOR RP          */
      179     2811    1   DCL CMD_SIZE UBIN(36) SYMREF;           /* CHARACTER COUNT OF CMD_BUF         */
      180     2812    1   DCL DVBYTE BIT(36) SYMREF ;
      181     2813    1   DCL LO_SRCH_CLMN UBIN(36) SYMREF;       /* LOW LIMIT OF SEARCH RANGE          */
      182     2814    1   DCL HI_SRCH_CLMN UBIN(36) SYMREF;       /* HIGH LIMIT OF SEARCH RANGE         */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:8    
      183     2815    1   DCL LO_EXEC_CLMN UBIN(36) SYMREF;       /* LOW LIMIT OF CHANGEABLE RANGE      */
      184     2816    1   DCL HI_EXEC_CLMN UBIN(36) SYMREF;       /* HIGH LIMIT OF CHANGEABLE RANGE     */
      185     2817    1   DCL RR_POS_CLMN SBIN WORD SYMREF;       /* Column num to position to on an RR */
      186     2818    1   DCL LO_SEQNUM UBIN(36) SYMREF ;
      187     2819                                                /* LOW LIMIT OF RECORD RANGE          */
      188     2820    1   DCL HI_SEQNUM UBIN(36) SYMREF ;
      189     2821                                                /* HIGH LIMIT OF RECORD RANGE         */
      190     2822    1   DCL EXEC_SEQNUM UBIN(36) SYMREF;        /* CURRENT RECORD BEING USED          */
      191     2823    1   DCL LIMIT_SEQNUM UBIN(36) SYMREF;       /* TEMP FOR SEARCHING RANGES          */
      192     2824    1   DCL INCR UBIN(36) SYMREF;               /* INCREMENT                          */
      193     2825    1   DCL DFLT_INCR UBIN(36) SYMREF ;
      194     2826    1   DCL LAST_KEY UBIN(36) SYMREF;           /* KEY OF LAST RECORD READ            */
      195     2827    1   DCL READ_KEY UBIN(36) SYMREF;           /* KEY TO BE USED TO READ RECORD      */
      196     2828    1   DCL SAVE_KEY UBIN(36) SYMREF;           /* SAVE KEY IN MD                     */
      197     2829    1   DCL MATCH_CLMN UBIN(36) SYMREF;         /* COLUMN OF START OF STRING          */
      198     2830    1   DCL TEMP_CLMN UBIN(36) SYMREF;          /* TEMP CELL FOR COLUMN NUM.          */
      199     2831    1   DCL TEMP_COUNT UBIN(36) SYMREF;
      200     2832    1   DCL STR1_CLMN UBIN(36) SYMREF;          /* START OF FIRST INTRA STRING        */
      201     2833    1   DCL STR2_CLMN UBIN(36) SYMREF;          /* START OF SECOND INTRA STRING       */
      202     2834    1   DCL CMD_CODE UBIN(36) SYMREF;           /* CODE FOR CURRENT COMMAND           */
      203     2835    1   DCL LAST_CMD UBIN(36) SYMREF;           /* SAVED CMD FOR ?? COMMAND           */
      204     2836    1   DCL SAVED_CMD UBIN(36) SYMREF ;
      205     2837    1   DCL LAST_TYPE_CMD UBIN(36) SYMREF;      /* FORMAT FOR LF - UPARROW            */
      206     2838    1   DCL REC_COUNT UBIN(36) SYMREF;          /* COUNT OF RECORDS OPERATED ON       */
      207     2839    1   DCL STRCHG_COUNT UBIN(36) SYMREF;       /* COUNT OF STRINGS CHANGED           */
      208     2840    1   DCL DELREC_COUNT UBIN(36) SYMREF;       /* INTRARECORD RECORDS DELETED        */
      209     2841    1   DCL I UBIN(36) SYMREF;                  /* INDEX                              */
      210     2842    1   DCL M$FILE_NUM UBIN(36) SYMREF ;
      211     2843    1   DCL M$FILE2_NUM UBIN(36) SYMREF ;
      212     2844    1   DCL MK_COUNT UBIN WORD SYMREF;          /* BLOCK MK MOVE COUNT                */
      213     2845    1   DCL FRST2DEL UBIN WORD SYMREF;          /* FIRST RECORD TO DELETE IN MD BLOCK */
      214     2846    1   DCL P$ PTR SYMREF;                      /* TEMP PTR                           */
      215     2847    1   DCL M$SI$ PTR SYMREF;
      216     2848    1   DCL M$UC$ PTR SYMREF;
      217     2849    1   DCL M$FILE$ PTR SYMREF;                 /* POINTER TO M$FILE                  */
      218     2850    1   DCL M$FILE2$ PTR SYMREF;
      219     2851    1   DCL CMD$ PTR SYMREF;                    /* POINTER TO RUN CMD_TBL             */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:9    
      220     2852    1   DCL CMD_BASE$ PTR SYMREF;
      221     2853    1   DCL MK_BASE$ PTR SYMREF;                /* MK DATA SEG PTR                    */
      222     2854    1   DCL MK_WORK$ PTR SYMREF;                /* MK BLOCK MAVE PTR                  */
      223     2855    1   DCL MK_BOUND$ PTR SYMREF;               /* END OF MK DATA SEG                 */
      224     2856    1   DCL MAX_SEQNUM UBIN(36) SYMREF ;
      225     2857    1   DCL MAX_CLMN UBIN(36) SYMREF ;
      226     2858    1   DCL Y003 UBIN(36) SYMREF ;
      227     2859    1   DCL SEQNUM_ONE UBIN(36) SYMREF ;
      228     2860        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:10   
      229     2861        /*****************************************************************************/
      230     2862        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      231     2863        /*****************************************************************************/
      232     2864        /**/
      233     2865    1   VER$EXEC_AD: ENTRY;
      234     2866        /**/
      235     2867    2        IF (~FLAGS.INTRA_CMD) THEN DO;     /* INTER RECORD MODE                  */
      236     2868    2           CALL VEX$CLMN_DFLT;
      237     2869    2           LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;
      238     2870    2           HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;
      239     2871    2           EXEC_SEQNUM = LO_SEQNUM;
      240     2872    2           CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_AD_ERR);
      241     2873    3           IF (~FLAGS.EXISTS) THEN DO;
      242     2874    3              CALL VEX$READ_SEQUEN ALTRET(EXEC_AD_ERR);
      243     2875    4              IF (FLAGS.EOF) THEN DO;
      244     2876    4                 CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                    */
      245     2877    4                 RETURN;
      246     2878        /**/
      247     2879        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      248     2880                 DESCRIPTION:  EOF hit durring AD operation.
      249     2881        */
      250     2882    4                 END;
      251     2883    4              IF (LAST_KEY > HI_SEQNUM) THEN DO; /* NONE TO AD TO             */
      252     2884    4                 CALL VEX$ERROR(E$E_NONE,1);
      253     2885    4                 RETURN;
      254     2886    4                 END;
      255     2887        /**/
      256     2888        /*E*     ERROR:    VEE-E$E_NONE-0
      257     2889                 DESCRIPTION:   No records to AD to
      258     2890        */
      259     2891    3              END;
      260     2892    2           END;
      261     2893        /**/                                    /* BOTH INTER AND INTRA MODES         */
      262     2894    1   EXEC_AD_1:
      263     2895    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);
      264     2896    1        CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,0,REC_SIZE),BINASC(0)
              2896                 );
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:11   
      265     2897    1        CALL VEX$TYPE_REC(TYPENOCR);
      266     2898    1        CALL VEX$SET_PROMPT(PR_NULL);
      267     2899    1        CALL VEX$READ_TERM_REC(CMD_BUF,CMD_SIZE,SIZEC(CMD_BUF))
      268     2900    1           ALTRET(EXEC_AD_ERR);
      269     2901    2        IF (REC_SIZE+CMD_SIZE > PC_RECSIZE#) THEN DO; /* OVERFLOW */
      270     2902    2           CALL VEX$ERROR(E$E_OVERFLOW,2);
      271     2903    2           CMD_SIZE = PC_RECSIZE# - REC_SIZE;
      272     2904    2           END;
      273     2905        /**/
      274     2906        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
      275     2907                 DESCRIPTION: Too many characters were input to the AD command
      276     2908                           some of them were lost.
      277     2909        */
      278     2910    1        CALL INSERT(REC_BUF,REC_SIZE,CMD_SIZE,SUBSTR(CMD_BUF,0,CMD_SIZE));
      279     2911    1        REC_SIZE = REC_SIZE+CMD_SIZE;
      280     2912    2        IF (FLAGS.INTRA_CMD) THEN DO;
      281     2913    2           FLAGS.TXFLAG = TRUE;
      282     2914    2           STRCHG_COUNT = STRCHG_COUNT + 1;
      283     2915    2           RETURN;
      284     2916    2           END;
      285     2917        /**/                                    /* INTER RECORD MODE                  */
      286     2918    1        CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY) ALTRET(EXEC_AD_ERR);
      287     2919    1        CALL VEX$READ_SEQUEN ALTRET (EXEC_AD_ERR);
      288     2920    2        IF (FLAGS.EOF) THEN DO;
      289     2921    2           CALL VEX$ERROR(E$E_EDITEOF,1);
      290     2922    2           RETURN;
      291     2923    2           END;
      292     2924        /**/
      293     2925        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      294     2926                 DESCRIPTION: EOF hit durring AD operation
      295     2927        */
      296     2928    1        IF (LAST_KEY > HI_SEQNUM) THEN RETURN;
      297     2929        /**/
      298     2930    1        GOTO EXEC_AD_1;
      299     2931        /**/
      300     2932    1   EXEC_AD_ERR:
      301     2933    1        RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:12   
      302     2934        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:13   
      303     2935        /**/
      304     2936    1   VER$EXEC_CM: ENTRY;
      305     2937        /**/
      306     2938    1        READ_KEY = CMD$ -> CM_CMD_TBL.SEQNUM; /* INITIALIZE PARAMETERS        */
      307     2939    1        LO_EXEC_CLMN = CMD$ -> CM_CMD_TBL.LO_CLMN;
      308     2940    1        HI_EXEC_CLMN = CMD$ -> CM_CMD_TBL.HI_CLMN;
      309     2941        /**/
      310     2942    1        TEMP_CLMN = HI_EXEC_CLMN - LO_EXEC_CLMN +1; /* SLOT SIZE              */
      311     2943        /**/
      312     2944    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET (EXEC_CM_ERR);
      313     2945    2        IF (~FLAGS.EXISTS) THEN DO;
      314     2946    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_CM_ERR);
      315     2947    3           IF (FLAGS.EOF) THEN DO;
      316     2948    3              CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                       */
      317     2949    3              RETURN;
      318     2950    3              END;
      319     2951        /**/
      320     2952        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      321     2953                 DESCRIPTION: EOF hit in CM/CT operation.
      322     2954        */
      323     2955    2           END;
      324     2956    1        IF (CMD_CODE = CTCMD) THEN CALL VEX$SET_PROMPT(PR_NULL);
      325     2957        /**/
      326     2958    2        DO WHILE (~FLAGS.EOF);             /* GOT TO END OF FILE                 */
      327     2959    2           CALL VEX$SEQNUM_TEXT(LAST_KEY);
      328     2960    3           IF (CMD_CODE = CTCMD) THEN DO;
      329     2961    3              CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,
      330     2962    3                 0,LO_EXEC_CLMN),BINASC(0));
      331     2963    3              CALL VEX$TYPE_REC(TYPENOCR); /* TYPE RECORD UP TO LO_CLMN(NOCR) */
      332     2964    3              END;
      333     2965    2           ELSE CALL VEX$SET_PROMPT(PR_SEQNUM);
      334     2966        /**/
      335     2967    2           CALL VEX$READ_TERM_REC(CMD_BUF,CMD_SIZE,SIZEC(CMD_BUF))
      336     2968    2              ALTRET(EXEC_CM_ERR);
      337     2969    2           IF (CMD_SIZE = 0) THEN GOTO EXEC_CM_ERR;
      338     2970    3           IF (CMD_SIZE > TEMP_CLMN) THEN DO; /* TEXT TOO BIG FOR SLOT        */
      339     2971    3              CALL VEX$ERROR(E$E_TRUNC,2); /* TRUNCATION                      */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:14   
      340     2972    3              CMD_SIZE = TEMP_CLMN;
      341     2973    3              END;
      342     2974        /**/
      343     2975        /*E*     ERROR:    VEE-E$E_TRUNC-0
      344     2976                 MESSAGE:  Truncation
      345     2977                 MESSAGE1: The input text will not fit in the specified slot
      346     2978                 DESCRIPTION: More text has been input than will fit in the
      347     2979                           slot in the record specified on the CM/CT command.
      348     2980        */
      349     2981    2           CALL INSERT(REC_BUF,LO_EXEC_CLMN,TEMP_CLMN,
      350     2982    2              SUBSTR(CMD_BUF,0,CMD_SIZE));
      351     2983        /**/
      352     2984    2           IF (REC_SIZE < LO_EXEC_CLMN + TEMP_CLMN + 1) THEN
              2984                    /* RECORD SMALLER THAN SLOT END */
      353     2985    2              REC_SIZE = LO_EXEC_CLMN + CMD_SIZE + 1;
      354     2986        /**/
      355     2987    2           CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY) ALTRET (EXEC_CM_ERR);
      356     2988    2           CALL VEX$READ_SEQUEN ALTRET (EXEC_CM_ERR);
      357     2989    2           END;
      358     2990        /**/
      359     2991    1   EXEC_CM_ERR:
      360     2992    1        CALL VEX$CLMN_DFLT;
      361     2993    1        LO_SEQNUM = LAST_KEY;
      362     2994    1        HI_SEQNUM = LAST_KEY;
      363     2995    1        RETURN;
      364     2996        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:15   
      365     2997        /**/
      366     2998    1   VER$EXEC_DE: ENTRY;
      367     2999        /**/
      368     3000    2        IF (FLAGS.INTRA_CMD) THEN DO;      /* INTRA RECORD MODE                  */
      369     3001    2           CALL VEX$DELREC(M$FILE_NUM,LAST_KEY,0) ALTRET(EXEC_DE_ERR);
      370     3002    2           DELREC_COUNT = DELREC_COUNT + 1;
      371     3003    2           FLAGS.TXFLAG = FALSE;           /* DONT WRITE BACK TO FILE            */
      372     3004    2           FLAGS.DELRECCMD = TRUE;
      373     3005    2           RETURN;
      374     3006    2           END;
      375     3007        /**/                                    /* INTER RECORD MODE                  */
      376     3008    1        REC_COUNT = 0;
      377     3009    1        LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;
      378     3010    1        HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;
      379     3011    1        CALL VEX$CLMN_DFLT;                /* SELECT DELETED RANGE               */
      380     3012        /**/
      381     3013    1        CALL VEX$DELREC(M$FILE_NUM,LO_SEQNUM,HI_SEQNUM) ALTRET (EXEC_DE_ERR);
      382     3014    1        REC_COUNT = M$FILE$ -> F$DCB.ARS;
      383     3015        /**/
      384     3016    1        CALL VEX$SET_SUB_BUF(SUB_BUF_1,REC_COUNT);
      385     3017    1        CALL VEX$ERROR(E$E_RECSDEL,1);     /* XX RECS DELETED                    */
      386     3018    1        RETURN;
      387     3019        /**/
      388     3020        /*E*     ERROR:    VEE-E$E_RECSDEL-0
      389     3021                 DESCRIPTION: The specified range of records which was deleted
      390     3022                           contained %U1 records.
      391     3023        */
      392     3024        /**/
      393     3025    1   EXEC_DE_ERR:
      394     3026    1        RETURN;
      395     3027        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:16   
      396     3028        /**/
      397     3029    1   VER$EXEC_FD: ENTRY;
      398     3030        /**/
      399     3031    1        CALL VEX$DELREC(M$FILE_NUM,LAST_KEY,0) ALTRET(EXEC_FD_ERR);
      400     3032    1        DELREC_COUNT = DELREC_COUNT + 1;
      401     3033    1        RETURN;
      402     3034        /**/
      403     3035    1   EXEC_FD_ERR:
      404     3036    1        RETURN;
      405     3037        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:17   
      406     3038        /**/
      407     3039    1   VER$EXEC_FS: ENTRY;
      408     3040        /**/
      409     3041    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);
      410     3042    1        TYPE_BUF.TEXT = SEQ_TEXT_BUF;
      411     3043    1        CALL VEX$TYPE_REC(TYPECR);
      412     3044    1        RETURN;
      413     3045        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:18   
      414     3046        /**/
      415     3047    1   VER$EXEC_IN: ENTRY;
      416     3048        /**/
      417     3049    1        EXEC_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM; /* BEGINING SEQNUM        */
      418     3050    1        INCR = CMD$ -> IN_CMD_TBL.HI_SEQNUM;
      419     3051        /**/
      420     3052    1        IF (CMD_CODE = APCMD)  OR (FLAGS.CONSEC_MODE) OR
      421     3053    1           ((EXEC_SEQNUM = MAX_SEQNUM) AND (CMD$ -> IN_CMD_TBL.START_SPEC = 0))
      422     3054    2        THEN DO;
      423     3055    2           PREC_REV_FPT.V.N# = BITBIN('377777777777'O); /* SKIP TO EOF        */
      424     3056    2           PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;
      425     3057    2           CALL M$PRECORD(PREC_REV_FPT) ALTRET(EXEC_IN_EOF);
      426     3058        /**/
      427     3059    2   EXEC_IN_EOF:
      428     3060    2           PREC_REV_FPT.V.N# = -1;
      429     3061    2           CALL M$PRECORD(PREC_REV_FPT) ALTRET (IN_PREC_ERR);
      430     3062    2           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN
      431     3063    2              LAST_KEY = (LAST_KEY * 1000) + Y003;
      432     3064    2   AP_PRECOK:
      433     3065    3           IF (LAST_KEY + INCR > MAX_SEQNUM) THEN DO;
      434     3066    3   NOROOM:
      435     3067    3              CALL VEX$ERROR(E$E_NOROOM,3);
      436     3068    3              RETURN;
      437     3069    3              END;
      438     3070        /**/
      439     3071        /*E*     ERROR:    VEE-E$E_NOROOM-0
      440     3072                 MESSAGE:  No room to insert records
      441     3073                 DESCRIPTION: THE HOLE TO PUT RECORDS IN HASN'T EVEN ENOUGH
      442     3074                           ROOM FOR A SINGLE ONE         */
      443     3075        /**/
      444     3076    3           ELSE DO;
      445     3077    3              EXEC_SEQNUM = LAST_KEY + INCR;
      446     3078    3              CMD$ -> IN_CMD_TBL.LO_SEQNUM = EXEC_SEQNUM;
      447     3079    3              END;
      448     3080    2           END;
      449     3081    2        ELSE IF (CMD_CODE = IACMD) THEN DO;
      450     3082    3              IF INCR = 0 THEN DO ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:19   
      451     3083    3                 CALL VEX$ERROR( E$E_BADINCR,3);
      452     3084    3                 GOTO EXEC_IN_ERR ;
      453     3085    3                 END ;                     /* THEN DO                   */
      454     3086        /**/
      455     3087        /*E*     ERROR:    VEE-E$E_BADINCR-0
      456     3088                 DESCRIPTION: An increment of 0 was input for IA command.
      457     3089        */
      458     3090    2              CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_IN_ERR);
      459     3091    2              CALL VEX$GET_NEXT_KEY ALTRET(EXEC_IN_ERR);
      460     3092    2              IF (~FLAGS.EOF)AND(EXEC_SEQNUM + INCR >= LAST_KEY) THEN GOTO NOROOM;
      461     3093    2              ELSE EXEC_SEQNUM = EXEC_SEQNUM + INCR;
      462     3094    2              END;
      463     3095        /**/
      464     3096    2           ELSE IF (CMD_CODE = IBCMD) THEN DO;
      465     3097    2                 CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_IN_ERR);
      466     3098    2                 IF (FLAGS.EXISTS) THEN PREC_REV_FPT.V.N# = -2;
      467     3099    2                 ELSE PREC_REV_FPT.V.N# = -1;
      468     3100    2                 PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;
      469     3101    2                 CALL M$PRECORD(PREC_REV_FPT) ALTRET(IN_PREC_ERR);
      470     3102        /**/
      471     3103    2   IN_PRECOK:
      472     3104    2                 IF (LAST_KEY + INCR >= EXEC_SEQNUM) THEN GOTO NOROOM;
      473     3105    2                 EXEC_SEQNUM = LAST_KEY + INCR;
      474     3106    2                 END;
      475     3107    1        CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_IN_ERR);
      476     3108    2        IF ((FLAGS.EXISTS) AND (CMD_CODE = IPCMD)) THEN DO; /* TEST PROTECTED MODE */
      477     3109    2           CALL VEX$ERROR(E$E_RECEXTS,2);  /* RECORD EXISTS                    */
      478     3110    2           HI_SEQNUM = EXEC_SEQNUM ;
      479     3111    2           LO_SEQNUM = EXEC_SEQNUM ;
      480     3112    2           RETURN;
      481     3113    2           END;
      482     3114        /**/
      483     3115        /*E*     ERROR:    VEE-E$E_RECEXTS-0
      484     3116                 MESSAGE:  Record exists
      485     3117                 DESCRIPTION: Cannot insert (IP) this record - it exists.
      486     3118        */
      487     3119        /**/
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:20   
      488     3120    1        IF NOT (CMD_CODE = APCMD AND FLAGS.CONSEC_MODE)
      489     3121    1        THEN
      490     3122    1           CALL VEX$GET_NEXT_KEY ALTRET (EXEC_IN_ERR); /* SET LIMIT      */
      491     3123    1        ELSE
      492     3124    1           FLAGS.EOF = TRUE ;
      493     3125    1        FLAGS.BADKEY = '0'B ;
      494     3126    2        IF (FLAGS.EOF) THEN DO;
      495     3127    2           FLAGS.EOF = FALSE;
      496     3128    2           HI_SEQNUM = MAX_SEQNUM;
      497     3129    2           END;
      498     3130    1        ELSE HI_SEQNUM= LAST_KEY-1;
      499     3131        /**/
      500     3132    1        REMAIN = 0; /* How much we have to ROUND EXEC_SEQNUM to get even value */
      501     3133    2        DO WHILE (EXEC_SEQNUM <= HI_SEQNUM);
      502     3134    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM);
      503     3135    2           IF (CMD_CODE = ISCMD) THEN CALL VEX$SET_PROMPT(PR_PERIOD);
      504     3136    2           ELSE CALL VEX$SET_PROMPT(PR_SEQNUM);
      505     3137        /**/
      506     3138    2           CALL VEX$READ_TERM_REC(REC_BUF,REC_SIZE,SIZEC(REC_BUF))
      507     3139    2              ALTRET(EXEC_IN_ERR);
      508     3140    3           IF (REC_SIZE = 0) THEN DO;
      509     3141    3              IF (EXEC_SEQNUM > CMD$ -> IN_CMD_TBL.LO_SEQNUM)OR
      510     3142    3                 (CMD_CODE = IBCMD) THEN
      511     3143    3                 EXEC_SEQNUM = EXEC_SEQNUM - INCR + REMAIN; /* Add Round amount */
      512     3144    3              GOTO EXEC_IN_1;
      513     3145    3              END;
      514     3146        /**/
      515     3147    2           RP_REC_SIZE = REC_SIZE;
      516     3148    2           DVBYTE = '0'B ;
      517     3149        /**/
      518     3150    2           CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET (EXEC_IN_ERR);
      519     3151    2           IF INCR = 0 THEN GOTO EXEC_IN_1 ;
      520     3152    2           IF (FLAGS.ROUNDFLAG)
      521     3153    2           THEN REMAIN = MOD((EXEC_SEQNUM+INCR-Y003),INCR);/* get Round amount */
      522     3154    2           ELSE REMAIN = 0;
      523     3155    2           EXEC_SEQNUM = EXEC_SEQNUM + INCR - REMAIN; /* subtract round amount */
      524     3156    2           END;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:21   
      525     3157        /**/
      526     3158    1        IF (EXEC_SEQNUM > MAX_SEQNUM) THEN CALL VEX$ERROR(E$E_MAXSEQ,1);
      527     3159        /**/
      528     3160        /*E*     ERROR:    VEE-E$E_MAXSEQ-0
      529     3161                 DESCRIPTION: The max. sequence number was exceeded durring
      530     3162                           an INSERT operation.
      531     3163        */
      532     3164    1        EXEC_SEQNUM = EXEC_SEQNUM - INCR + REMAIN; /* Added round amount */
      533     3165        /**/
      534     3166    1   EXEC_IN_1:                              /* SET SELECTION TO LAST RECORD       */
      535     3167    1        CALL VEX$CLMN_DFLT;
      536     3168    1        LO_SEQNUM = EXEC_SEQNUM;
      537     3169    1        HI_SEQNUM = EXEC_SEQNUM;
      538     3170    1        RETURN;
      539     3171        /**/
      540     3172    1   EXEC_IN_ERR:
      541     3173    1        RETURN;
      542     3174        /**/
      543     3175    1   IN_PREC_ERR:
      544     3176    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN DO;
      545     3177    2           LAST_KEY = Y003;
      546     3178    2           IF (CMD_CODE = APCMD) THEN GOTO AP_PRECOK ;
      547     3179    2           GOTO IN_PRECOK;
      548     3180    2           END;
      549     3181    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BADVECT1) THEN DO;
      550     3182    2           ADDR(LAST_KEY) -> VARY$STRC.CNT = 3 ;
      551     3183    2           IF CMD_CODE = APCMD THEN GOTO AP_PRECOK ;
      552     3184    2           GOTO IN_PRECOK ;
      553     3185    2           END ;                           /* THEN DO */
      554     3186    1        CALL VEX$ERROR(0,3);
      555     3187    1        RETURN;
      556     3188        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:22   
      557     3189        /**/
      558     3190    1   VER$EXEC_MK: ENTRY;
      559     3191        /**/
      560     3192    1        CALL M$INT(BREAKMK_FPT);
      561     3193    1        READ_KEY = CMD$ -> MK_CMD_TBL.LO_SEQNUM;
      562     3194    1        LIMIT_SEQNUM = CMD$ -> MK_CMD_TBL.HI_SEQNUM; /* INITALIZE RANGES      */
      563     3195    1        EXEC_SEQNUM = CMD$ -> MK_CMD_TBL.LO_SEQNUM2;
      564     3196    1        LO_SEQNUM = EXEC_SEQNUM;
      565     3197    1        HI_SEQNUM = CMD$ -> MK_CMD_TBL.HI_SEQNUM2;
      566     3198    1        INCR = CMD$ -> MK_CMD_TBL.INCR;
      567     3199    1        CALL VEX$CLMN_DFLT;                /* RESET COLUMN RANGE                 */
      568     3200        /**/
      569     3201    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET (EXEC_MK_ERR);
      570     3202    2        IF (~FLAGS.EXISTS) THEN DO;        /* GET FIRST FROM RECORD              */
      571     3203    2           CALL VEX$GET_NEXT_KEY ALTRET (EXEC_MK_ERR);
      572     3204    3           IF ((FLAGS.EOF) OR (LAST_KEY > LIMIT_SEQNUM)) THEN DO;
      573     3205    3              CALL VEX$ERROR(E$E_NOMOVE,2); /* NOTHING TO MOVE                */
      574     3206    3              RETURN;
      575     3207    3              END;
      576     3208        /**/
      577     3209        /*E*     ERROR:    VEE-E$E_NOMOVE-0
      578     3210                 DESCRIPTION: An attempt was made to MK/MD records in a file
      579     3211                           and the file has no records in the specified range.
      580     3212        */
      581     3213    2           READ_KEY = LAST_KEY;            /* REMEMBER POSITION                  */
      582     3214    2           END;
      583     3215    1        SAVE_KEY = READ_KEY ;
      584     3216        /**/
      585     3217    2        IF (CMD_CODE = MDPCMD)OR(CMD_CODE = MKPCMD) THEN DO; /* PROTECTED*/
      586     3218    2           CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_MK_ERR);
      587     3219    3           IF (FLAGS.EXISTS) THEN DO;
      588     3220    3              CALL VEX$ERROR(E$E_RECEXTS,3);
      589     3221    3              RETURN;
      590     3222    3              END;
      591     3223    2           CALL VEX$GET_NEXT_KEY ALTRET(EXEC_MK_ERR);
      592     3224    3           IF ((LAST_KEY <= HI_SEQNUM) AND (~FLAGS.EOF)) THEN DO;
      593     3225    3              CALL VEX$ERROR(E$E_RECEXTS,3);
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:23   
      594     3226    3              RETURN;
      595     3227    3              END ;                        /* THEN DO */
      596     3228    2           END;
      597     3229        /**/
      598     3230        /*E*    ERROR:   VEE-E$E_RECEXTS-0
      599     3231                DESCRIPTION: RECORD EXISTS IN PROTECTED MODE */
      600     3232        /**/
      601     3233    1        REC_COUNT = 0;                     /* DELETE 'TO' RANGE                  */
      602     3234    1        CALL VEX$DELREC(M$FILE_NUM,EXEC_SEQNUM,HI_SEQNUM) ALTRET(EXEC_MK_ERR);
      603     3235    1        REC_COUNT = M$FILE$ -> F$DCB.ARS;
      604     3236    1        CALL VEX$GET_NEXT_KEY ALTRET (EXEC_MK_ERR);
      605     3237    2        IF (FLAGS.EOF) THEN DO;
      606     3238    2           CALL VEX$ERROR(E$E_EDITEOF,1);  /* EOF HIT                          */
      607     3239        /**/
      608     3240        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      609     3241                 DESCRIPTION: EOF hit in MK/MD operation.
      610     3242        */
      611     3243    2           HI_SEQNUM = MAX_SEQNUM+1;
      612     3244    2           END;
      613     3245    1        ELSE HI_SEQNUM = LAST_KEY;
      614     3246        /**/
      615     3247    2        IF (REC_COUNT > 1) THEN DO;
      616     3248    2           CALL VEX$SET_SUB_BUF(SUB_BUF_1,REC_COUNT); /* OUTPUT RECORDS DELETED */
      617     3249    2           CALL VEX$ERROR(E$E_RECSDEL,1);
      618     3250    2           END;
      619     3251        /**/
      620     3252        /*E*     ERROR:    VEE-E$E_RECSDEL-0
      621     3253                 DESCRIPTION: The specified range of records which was deleted
      622     3254                           contained %U1 records.
      623     3255        */
      624     3256        /**/
      625     3257    1        REC_COUNT = 0;                     /* MOVE RECORDS                       */
      626     3258    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET (EXEC_MK_ERR); /* READ FOR POSITION */
      627     3259        /**/
      628     3260    1        IF (READ_KEY = LIMIT_SEQNUM)OR(INCR=0) THEN GOTO RECMOVE; /* ONLY 1 TO MOVE */
      629     3261        /**/
      630     3262    1        DS_RESULTS.W2.SEGID# = FALSE;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:24   
      631     3263    1        CALL M$GDS(MKDS_FPT) ALTRET (MKDS_ERR);
      632     3264        /**/
      633     3265    1   MKDSOK:
      634     3266    1        MK_BASE$ = DS_RESULTS.PTR$;
      635     3267    1        MK_BOUND$ = PINCRC(MK_BASE$,DS_RESULTS.W1.VSIZE#);
      636     3268    1        MK_WORK$ = PINCRW(MK_BASE$,SIZEW(MK$RECS)); /* PAST CONTROL INFO      */
      637     3269    1        MK_BASE$ -> MK$RECS = FALSE;
      638     3270    1        MK_COUNT = 0;
      639     3271    1        FRST2DEL = 0;
      640     3272        /**/
      641     3273    1   BLOCKSTART:
      642     3274    1        I = MKCOUNTMAX + 1;                /* FLAG FOR BREAK RIUTINE             */
      643     3275    2        DO WHILE ((LAST_KEY <= LIMIT_SEQNUM)AND(MK_COUNT <= MKCOUNTMAX));
      644     3276    2           IF (REC_SIZE > POFFC(MK_BOUND$,MK_WORK$)) THEN GOTO BLOCKMOVE;
      645     3277    2           CALL INSERT (SUBSTR(MK_WORK$ -> MK$BUF,0,REC_SIZE),0,REC_SIZE,
      646     3278    2              SUBSTR(REC_BUF,0,REC_SIZE));
      647     3279    2           MK_BASE$ -> MK$RECS.SIZE(MK_COUNT) = REC_SIZE;
      648     3280    2           MK_BASE$ -> MK$RECS.OFFSET(MK_COUNT) = POFFC(MK_WORK$,MK_BASE$);
      649     3281    2           MK_BASE$ -> MK$RECS.KEY(MK_COUNT) = LAST_KEY;
      650     3282    2           MK_BASE$ -> MK$RECS.DVBYTE(MK_COUNT) = DVBYTE ;
      651     3283        /**/
      652     3284    2           MK_WORK$ = PINCRC(MK_WORK$,REC_SIZE);
      653     3285    2           MK_COUNT = MK_COUNT + 1;
      654     3286        /**/
      655     3287    2           CALL VEX$READ_SEQUEN ALTRET (EXEC_MK_ERR1);
      656     3288    3           IF (FLAGS.EOF) THEN DO;
      657     3289    3              LAST_KEY = MAX_SEQNUM + 1;
      658     3290    3              GOTO BLOCKMOVE;
      659     3291    3              END;
      660     3292        /**/
      661     3293    2           END;
      662     3294        /**/
      663     3295    1   BLOCKMOVE:
      664     3296    1        IF (FRST2DEL > 0) THEN        /* This is a second batch of 100 records */
      665     3297    2        DO;
      666     3298    2           FRST2DEL = 0 ;
      667     3299    2           HI_SEQNUM = MK_BASE$ -> MK$RECS.KEY(FRST2DEL);
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:25   
      668     3300    2           END;
      669     3301    2        DO I = 0 TO MK_COUNT - 1;          /* WRITE TO NEW SLOT                  */
      670     3302    2           MK_WORK$ = PINCRC(MK_BASE$,MK_BASE$ -> MK$RECS.OFFSET(I));
      671     3303    2           REC_SIZE = MK_BASE$ -> MK$RECS.SIZE(I);
      672     3304    2           RP_REC_SIZE = REC_SIZE;
      673     3305    2           REC_BUF = SUBSTR(MK_WORK$-> MK$BUF,0,REC_SIZE);
      674     3306    2           DVBYTE = MK_BASE$ -> MK$RECS.DVBYTE(I) ;
      675     3307        /**/
      676     3308    2           CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET (EXEC_MK_ERR1);
      677     3309        /**/
      678     3310    2           EXEC_SEQNUM = EXEC_SEQNUM + INCR;
      679     3311    2           IF (((EXEC_SEQNUM > MAX_SEQNUM) OR (EXEC_SEQNUM >= HI_SEQNUM))
      680     3312    3              AND (I ~= MK_COUNT-1)) THEN DO ; /* Over ran 'TO' range. */
      681     3313    3              IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN CALL VEX$DELREC (
              3313                       M$FILE_NUM,
      682     3314    3                    MK_BASE$ -> MK$RECS.KEY(FRST2DEL),MK_BASE$ -> MK$RECS.KEY(I))
      683     3315    3                    ALTRET (EXEC_MK_ERR1);
      684     3316    3              IF (CMD_CODE = MDCMD OR CMD_CODE = MDPCMD)
      685     3317    3                 AND (HI_SEQNUM >= MK_BASE$ -> MK$RECS.KEY(FRST2DEL)
      686     3318    3                 AND HI_SEQNUM <= MK_BASE$ -> MK$RECS.KEY(I)
      687     3319    3                 AND EXEC_SEQNUM < MK_BASE$ -> MK$RECS.KEY(I+1)
      688     3320    3                 AND EXEC_SEQNUM <= MAX_SEQNUM)
      689     3321    3              THEN
      690     3322    3                 GOTO MAKE_ROOM ;          /* We overlap records deleted. */
      691     3323    3              REC_COUNT = REC_COUNT + I + 1;
      692     3324    3              SAVE_KEY = MK_BASE$ -> MK$RECS.KEY(I);
      693     3325    3              GOTO CUTOFF;
      694     3326    3   MAKE_ROOM:
      695     3327    3              FRST2DEL = I + 1 ;
      696     3328    3              HI_SEQNUM = MK_BASE$ -> MK$RECS.KEY(FRST2DEL) ;
      697     3329    3              END;
      698     3330        /**/
      699     3331    2           END;
      700     3332        /**/
      701     3333    1        REC_COUNT = REC_COUNT + MK_COUNT;
      702     3334    1        IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN CALL VEX$DELREC(M$FILE_NUM,
      703     3335    1              MK_BASE$ -> MK$RECS.KEY(FRST2DEL),MK_BASE$ -> MK$RECS.KEY(MK_COUNT-1))
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:26   
      704     3336    1              ALTRET (EXEC_MK_ERR1);
      705     3337    1        SAVE_KEY = MK_BASE$ -> MK$RECS.KEY(MK_COUNT-1);
      706     3338        /**/
      707     3339    2        IF (LAST_KEY <= LIMIT_SEQNUM) THEN DO;
      708     3340    2           MK_COUNT = 0;
      709     3341    2           MK_WORK$ = PINCRW(MK_BASE$,SIZEW(MK$RECS));
      710     3342    2           CALL VEX$READ_RANDOM(LAST_KEY) ALTRET (EXEC_MK_ERR1); /* REPOSITION */
      711     3343    2           GOTO BLOCKSTART;
      712     3344    2           END;
      713     3345        /**/
      714     3346    1        GOTO EXEC_MK_DONE;
      715     3347        /**/
      716     3348    1   RECMOVE:
      717     3349    2        DO WHILE (LAST_KEY <= LIMIT_SEQNUM); /* DO WHOLE 'FROM' RANGE         */
      718     3350    2           CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET(EXEC_MK_ERR);
      719     3351    2           REC_COUNT = REC_COUNT+1;
      720     3352    2           IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN CALL VEX$DELREC(M$FILE_NUM,
              3352                    LAST_KEY,0)
      721     3353    2                 ALTRET(EXEC_MK_ERR);
      722     3354                                                /* DELETE 'FROM' REC AND REPOSITION   */
      723     3355    2           ELSE CALL VEX$READ_RANDOM(LAST_KEY) ALTRET (EXEC_MK_ERR);
      724     3356    2           EXEC_SEQNUM = EXEC_SEQNUM+INCR;
      725     3357        /**/
      726     3358    2           SAVE_KEY = LAST_KEY;            /* SAVE FOR CUTOFF                    */
      727     3359    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_MK_ERR);
      728     3360    3           IF (FLAGS.EOF) THEN DO;
      729     3361    3              GOTO EXEC_MK_DONE;
      730     3362    3              END;
      731     3363        /**/
      732     3364        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      733     3365                 DESCRIPTION: EOF hit in MK/MD operation.
      734     3366        */
      735     3367    2           IF ((EXEC_SEQNUM > HI_SEQNUM OR EXEC_SEQNUM > MAX_SEQNUM)
      736     3368    2              AND LAST_KEY <= LIMIT_SEQNUM) OR INCR=0
      737     3369    3           THEN DO ;                       /* Over ran 'TO' range. */
      738     3370        /**/
      739     3371    3   CUTOFF:
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:27   
      740     3372    3              EXEC_SEQNUM = EXEC_SEQNUM - INCR;
      741     3373    3              CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_1);
      742     3374    3              CALL VEX$SEQNUM_TEXT(SAVE_KEY,SUB_BUF_2);
      743     3375    3              CALL VEX$ERROR(E$E_CUTOFF,2); /* CUTOFF AT XX(YY)               */
      744     3376    3              GOTO EXEC_MK_DONE1;
      745     3377    3              END;
      746     3378        /**/
      747     3379        /*E*     ERROR:    VEE-E$E_CUTOFF-0
      748     3380                 DESCRIPTION: The slot specified by the user is not big
      749     3381                     CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,0,REC_SIZE));
      750     3382                           number %U1 and was sequence number %U2.
      751     3383        */
      752     3384    2           END;
      753     3385        /**/
      754     3386    1   EXEC_MK_DONE:
      755     3387    1        EXEC_SEQNUM = EXEC_SEQNUM - INCR;
      756     3388    1        CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_1);
      757     3389    1        CALL VEX$ERROR(E$E_DONEAT,1);
      758     3390        /**/
      759     3391        /*E*     ERROR:    VEE-E$E_DONEAT-0
      760     3392                 MESSAGE:  Done at %U1
      761     3393                 DESCRIPTION: TELL USER LAST RECORD WRITTEN        */
      762     3394        /**/
      763     3395    1   EXEC_MK_DONE1:
      764     3396    1        CALL VEX$SET_SUB_BUF(SUB_BUF_1,REC_COUNT); /* XX RECORDS MOVED        */
      765     3397    1        CALL VEX$ERROR(E$E_RECSMVED,1);
      766     3398        /**/
      767     3399        /*E*     ERROR:    VEE-E$E_RECSMVED-0
      768     3400                 DESCRIPTION: %U1 records have been moved by MK/MD.
      769     3401        */
      770     3402    1        HI_SEQNUM = EXEC_SEQNUM;           /* SET SELECTION RANGE LIMIT          */
      771     3403        /**/
      772     3404    1   EXEC_MK_ERR1:
      773     3405    1        CALL M$FDS (MKDS_FPT);
      774     3406    1        CALL M$INT(BREAK_FPT);
      775     3407        /**/
      776     3408    1   EXEC_MK_ERR:
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:28   
      777     3409    1        RETURN;
      778     3410        /**/
      779     3411    1   MKDS_ERR:
      780     3412    1        IF (DS_RESULTS.PTR$ = ADDR(NIL)) THEN GOTO RECMOVE; /* CANT GET DS    */
      781     3413    1        ELSE GOTO MKDSOK;                  /* ONLY GOT PART OF DS - USE IT       */
      782     3414        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:29   
      783     3415        /**/
      784     3416    1   VER$EXEC_OL: ENTRY;
      785     3417        /**/
      786     3418    2        IF (FLAGS.INTRA_CMD) THEN DO;
      787     3419    3           IF (~FLAGS.OLINPROG) THEN DO;
      788     3420    3              CALL M$GETDCB(GETDCB_FPT) ALTRET(EXEC_OL_ERR1) ;
      789     3421    3              OPEN_MELP_FPT.V.DCB# = TY_DCBNUM ;
      790     3422    3              CALL M$OPEN (OPEN_MELP_FPT) ALTRET (EXEC_OL_ERR1);
      791     3423    3              FLAGS.OLINPROG = TRUE;
      792     3424    3              END;
      793     3425    2           CALL VER$EXEC_TY;
      794     3426    2           RETURN;
      795     3427    2           END;
      796     3428        /**/
      797     3429    1        CALL VEX$CLMN_DFLT;
      798     3430    1        LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;
      799     3431    1        HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;
      800     3432    1        EXEC_SEQNUM = LO_SEQNUM;
      801     3433    1        CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_OL_ERR);
      802     3434    2        IF (~FLAGS.EXISTS) THEN DO;
      803     3435    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_OL_ERR);
      804     3436    3           IF (FLAGS.EOF) THEN DO;
      805     3437    3              CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                       */
      806     3438    3              RETURN;
      807     3439        /**/
      808     3440        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      809     3441                 DESCRIPTION:  EOF hit durring OL operation.
      810     3442        */
      811     3443    3              END;
      812     3444    2           END;
      813     3445    1        IF LAST_KEY > HI_SEQNUM
      814     3446    2        THEN DO;
      815     3447    2           CALL VEX$ERROR(E$E_NONE,1);
      816     3448    2           RETURN;
      817     3449    2           END ;                           /* THEN DO */
      818     3450        /**/
      819     3451        /*E*     ERROR:    VEE-E$E_NONE-0
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:30   
      820     3452                 DESCRIPTION:   No records to OL to
      821     3453        */
      822     3454        /**/
      823     3455    1        CALL M$GETDCB(GETDCB_FPT) ALTRET(EXEC_OL_ERR1) ;
      824     3456    1        OPEN_MELP_FPT.V.DCB# = TY_DCBNUM ;
      825     3457    1        CALL M$OPEN(OPEN_MELP_FPT) ALTRET(EXEC_OL_ERR1);
      826     3458        /**/
      827     3459    1   EXEC_OL_1:
      828     3460    1        CALL VER$EXEC_TY;
      829     3461    1        CALL VEX$READ_SEQUEN ALTRET(EXEC_OL_ERR);
      830     3462    2        IF (FLAGS.EOF) THEN DO;
      831     3463    2           CALL VEX$ERROR(E$E_EDITEOF,1);
      832     3464    2           GOTO EXEC_OL_ERR;
      833     3465    2           END;
      834     3466        /**/
      835     3467    1        IF LAST_KEY <= HI_SEQNUM
      836     3468    1        THEN
      837     3469    1           GOTO EXEC_OL_1;
      838     3470        /**/
      839     3471    1   EXEC_OL_ERR:
      840     3472    1        CLOSE_TY_FPT.V.DCB# = TY_DCBNUM ;
      841     3473    1        CALL M$CLOSE(CLOSE_TY_FPT);
      842     3474    1        CALL M$RELDCB(RELDCB_FPT) ALTRET(RELDCB_ERR) ;
      843     3475    1   RELDCB_ERR:
      844     3476    1        TY_DCBNUM = ME_DCBNUM ;
      845     3477    1        RETURN;
      846     3478        /**/
      847     3479    1   EXEC_OL_ERR1:
      848     3480    1        CALL VEX$ERROR(0,3);
      849     3481    1        RETURN;
      850     3482        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:31   
      851     3483        /**/
      852     3484    1   VER$EXEC_RN: ENTRY;
      853     3485        /**/
      854     3486    1        READ_KEY = CMD$ -> IN_CMD_TBL.LO_SEQNUM;
      855     3487    1        EXEC_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;
      856     3488    1        CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_RN_ERR);
      857     3489    2        IF (FLAGS.EXISTS) THEN DO;
      858     3490    2           CALL VEX$ERROR(E$E_RECEXTS,2);  /* RECORD EXISTS                    */
      859     3491    2           RETURN;
      860     3492    2           END;
      861     3493        /**/
      862     3494        /*E*     ERROR:    VEE-E$E_RECEXTS-0
      863     3495                 DESCRIPTION: Cannot renumber(RN) record 'TO' record exists.
      864     3496        */
      865     3497    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET(EXEC_RN_ERR);
      866     3498    2        IF (~FLAGS.EXISTS) THEN DO;
      867     3499    2           CALL VEX$ERROR(E$E_NORENUM,2);  /* NO RECORD TO RENUMBER            */
      868     3500    2           RETURN;
      869     3501    2           END;
      870     3502        /**/
      871     3503        /*E*     ERROR:    VEE-E$E_NORENUM-0
      872     3504                 MESSAGE:  No record to renumber
      873     3505                 DESCRIPTION: The record to be renumbered does not exist.
      874     3506        */
      875     3507    1        CALL VEX$DELREC(M$FILE_NUM,READ_KEY,0) ALTRET(EXEC_RN_ERR);
      876     3508    1        CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET(EXEC_RN_ERR);
      877     3509    1        CALL VEX$CLMN_DFLT;
      878     3510    1        LO_SEQNUM = EXEC_SEQNUM;
      879     3511    1        HI_SEQNUM = EXEC_SEQNUM;
      880     3512    1        RETURN;
      881     3513        /**/
      882     3514    1   EXEC_RN_ERR:
      883     3515    1        RETURN;
      884     3516        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:32   
      885     3517        /**/
      886     3518    1   VER$EXEC_RR: ENTRY;
      887     3519        /**/
      888     3520    2        IF (~FLAGS.INTRA_CMD) THEN DO;     /* INTER RECORD MODE                  */
      889     3521    2           CALL VEX$CLMN_DFLT;
      890     3522    2           LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;
      891     3523    2           HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;
      892     3524    2           CALL VEX$READ_RANDOM(LO_SEQNUM) ALTRET(EXEC_RR_ERR);
      893     3525    3           IF (~FLAGS.EXISTS) THEN DO;
      894     3526    3              CALL VEX$READ_SEQUEN ALTRET(EXEC_RR_ERR);
      895     3527    4              IF (FLAGS.EOF) THEN DO;
      896     3528    4                 CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                    */
      897     3529    4                 RETURN;
      898     3530    4                 END;
      899     3531        /**/
      900     3532        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      901     3533                 DESCRIPTION: EOF hit durring RR operation
      902     3534        */
      903     3535    3              IF LAST_KEY > HI_SEQNUM
      904     3536    4              THEN DO ;                    /* None to RR to. */
      905     3537    4                 CALL VEX$ERROR(E$E_NONE,1);
      906     3538    4                 RETURN;
      907     3539    4                 END;
      908     3540        /**/
      909     3541        /*E*     ERROR:    VEE-E$E_NONE-0
      910     3542                 DESCRIPTION:   No records to RR to
      911     3543        */
      912     3544    3              END;
      913     3545    2           END;
      914     3546        /**/                                    /* BOTH MODES                         */
      915     3547    1   EXEC_RR_1:
      916     3548    1        RR_POS_CLMN = CMD$ -> IN_CMD_TBL.COLUMN;
      917     3549    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);
      918     3550    1        CALL VEX$SET_PROMPT(PR_SEQNUM);
      919     3551    1        IF REC_SIZE >= PC_RECSIZE#
      920     3552    1        THEN
      921     3553    2        DO ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:33   
      922     3554    2           CALL VEX$ERROR(E$E_UNABLE2RR,2) ;
      923     3555    2           GOTO EXEC_RR_ERR ;
      924     3556    2           END ;                           /* THEN DO */
      925     3557        /**/
      926     3558        /*E*    ERROR: VEE-E$E_UNABLE2RR-0
      927     3559                MESSAGE: EDIT unable to RR 1024 character records (%U1).
      928     3560                DESCRIPTION: EDIT can only reread records less than 1024 bytes.
      929     3561        */
      930     3562    1        IF (REC_SIZE > 0) THEN SINPUT_FPT.BUF_.BOUND = REC_SIZE - 1;
      931     3563    1        ELSE SINPUT_FPT.BUF_.BOUND = 0;
      932     3564        /**/
      933     3565    1        IF RR_POS_CLMN < 0 THEN
      934     3566    1           SINPUT_FPT.V.REREADPOS# = MAXIMUM(1,REC_SIZE+RR_POS_CLMN+1);
      935     3567    1        ELSE
      936     3568    1           SINPUT_FPT.V.REREADPOS# = MINIMUM(1023,RR_POS_CLMN);
      937     3569    1        CALL M$SINPUT(SINPUT_FPT) ALTRET (EXEC_RR_ERR1);
      938     3570    1        CALL M$READ (REREAD_FPT) ALTRET (EXEC_RR_ERR1);
      939     3571    1        REC_SIZE = M$UC$ -> F$DCB.ARS;
      940     3572    2        IF (REC_SIZE = 0) THEN DO;         /* DELETE IF RECORD WIPED OUT         */
      941     3573    2           CALL VEX$DELREC(M$FILE_NUM,LAST_KEY,LAST_KEY) ALTRET (EXEC_RR_ERR);
      942     3574    2           DELREC_COUNT = DELREC_COUNT + 1;
      943     3575    2           FLAGS.TXFLAG = FALSE ;
      944     3576    2           IF (FLAGS.INTRA_CMD) THEN RETURN; /* DONT SET TXFLAG               */
      945     3577    2           END;
      946     3578    2        IF (FLAGS.INTRA_CMD) THEN DO;
      947     3579    2           FLAGS.TXFLAG = TRUE;
      948     3580    2           STRCHG_COUNT = STRCHG_COUNT + 1;
      949     3581    2           RETURN;
      950     3582    2           END;
      951     3583        /**/                                    /* INTER RECORD MODE                  */
      952     3584    1        IF (REC_SIZE ~= 0) THEN CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY)
      953     3585    1              ALTRET (EXEC_RR_ERR) ;
      954     3586    1        IF (LAST_KEY = HI_SEQNUM) THEN RETURN;
      955     3587    1        CALL VEX$READ_SEQUEN ALTRET (EXEC_RR_ERR);
      956     3588    2        IF (FLAGS.EOF) THEN DO;
      957     3589    2           CALL VEX$ERROR(E$E_EDITEOF,1);
      958     3590    2           RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:34   
      959     3591    2           END;
      960     3592        /**/
      961     3593        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      962     3594                 DESCRIPTION: EOF hit durring RR operation
      963     3595        */
      964     3596    1        IF (LAST_KEY > HI_SEQNUM) THEN RETURN;
      965     3597        /**/
      966     3598    1        GOTO EXEC_RR_1;
      967     3599        /**/
      968     3600    1   EXEC_RR_ERR1:
      969     3601    1        CALL VEX$ERROR(0,SYSFLAGLEV);
      970     3602        /**/
      971     3603    1   EXEC_RR_ERR:
      972     3604    1        RETURN;
      973     3605        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:35   
      974     3606        /**/
      975     3607    1   VER$EXEC_TC: ENTRY;
      976     3608        /**/
      977     3609    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);
      978     3610    1        CALL INSERT(TYPE_BUF.TEXT,0,10,SEQ_TEXT_BUF,' ');
      979     3611    1        I = 10;                            /* POSITION IN TYPE_BUF               */
      980     3612    1        TEMP_CLMN = LO_EXEC_CLMN;          /* POSITION IN REC_BUF                */
      981     3613    1        TEMP_COUNT2 = 0;                   /* ONE BLANK FIELD FLAG               */
      982     3614        /**/
      983     3615    2        DO WHILE (TEMP_CLMN <= HI_EXEC_CLMN); /* COMPRESS SELECTED RANGE      */
      984     3616    3           IF (SUBSTR(REC_BUF,TEMP_CLMN,1) ~= ' ') THEN DO;
      985     3617    3              CALL INSERT(TYPE_BUF.TEXT,I,1,SUBSTR(REC_BUF,TEMP_CLMN,1));
      986     3618    3              I = I+1;
      987     3619    3              TEMP_COUNT2 = 0;
      988     3620    3              END;
      989     3621    3           ELSE IF (TEMP_COUNT2 =0) THEN DO;
      990     3622    3                 CALL INSERT (TYPE_BUF.TEXT,I,1,' ');
      991     3623    3                 I = I+1;
      992     3624    3                 TEMP_COUNT2 = 1;
      993     3625    3                 END;
      994     3626    2           TEMP_CLMN = TEMP_CLMN+1;
      995     3627    2           END;
      996     3628        /**/
      997     3629    1        CALL INSERT (TYPE_BUF.TEXT,I,MAX_CLMN-I,' ');
      998     3630    1        CALL VEX$TYPE_REC(TYPECR);
      999     3631    1        RETURN;
     1000     3632        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:36   
     1001     3633        /**/
     1002     3634    1   VER$EXEC_TN: ENTRY;
     1003     3635        /**/
     1004     3636    1        CALL VEX$CLMN_DFLT;
     1005     3637        /**/
     1006     3638    1        TEMP_COUNT = CMD$ -> TN_CMD_TBL.COUNT;
     1007     3639    1        IF (TEMP_COUNT = 0) THEN RETURN ;
     1008     3640        /**/
     1009     3641    2        IF (CMD_CODE = TPCMD) THEN DO;
     1010     3642    2           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN
     1011     3643    3           DO ;
     1012     3644    3              PREC_REV_FPT.V.N# = -((LAST_KEY - LO_SEQNUM)/1000 + TEMP_COUNT + 1 ) ;
     1013     3645    3              IF ((FLAGS.EOF) AND (SAVED_CMD ~= TNCMD)) THEN
     1014     3646    3                 PREC_REV_FPT.V.N# = - (TEMP_COUNT ) ;
     1015     3647    3              END ;                        /* THEN DO */
     1016     3648    2           ELSE PREC_REV_FPT.V.N# = -TEMP_COUNT ;
     1017     3649    2           PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;
     1018     3650    2           PREC_REV_FPT.V.KEYS# = '1'B ;
     1019     3651    2           LAST_KEY = LO_SEQNUM ;
     1020     3652    2           CALL M$PRECORD(PREC_REV_FPT) ALTRET(TP_PREC_ERR);
     1021     3653    2           PREC_REV_FPT.V.KEYS# = '0'B ;
     1022     3654    2           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN
     1023     3655    2              LAST_KEY = ((LAST_KEY-1) * 1000) + Y003 ;
     1024     3656    2           LO_SEQNUM = LAST_KEY;
     1025     3657    2           END;
     1026     3658    1        ELSE CALL VEX$READ_RANDOM(HI_SEQNUM) ALTRET(EXEC_TN_ERR);
     1027     3659        /**/
     1028     3660    1   TN_PRECOK:
     1029     3661    1        CALL VEX$READ_SEQUEN ALTRET(EXEC_TN_ERR);
     1030     3662    2        IF (FLAGS.EOF) THEN DO;
     1031     3663    2           CALL VEX$ERROR(E$E_EDITEOF,1);
     1032     3664    2           HI_SEQNUM = LAST_KEY;
     1033     3665    2           RETURN;
     1034     3666    2           END;
     1035     3667    1        LO_SEQNUM = LAST_KEY;
     1036     3668        /**/
     1037     3669        /* use the the LAST_TYPE_CMD for the display of TN and TP*/
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:37   
     1038     3670    1        IF (LAST_TYPE_CMD = TSCMD) THEN CALL VER$EXEC_TS;
     1039     3671    1        ELSE IF (LAST_TYPE_CMD = TCCMD) THEN CALL VER$EXEC_TC;
     1040     3672    1           ELSE CALL VER$EXEC_TY;          /* Default if none specified */
     1041     3673    1        TEMP_COUNT = TEMP_COUNT - 1;
     1042     3674    1        HI_SEQNUM = LAST_KEY;
     1043     3675        /**/
     1044     3676    2        DO WHILE (TEMP_COUNT > 0);
     1045     3677    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_TN_ERR);
     1046     3678    2           HI_SEQNUM = LAST_KEY;
     1047     3679    3           IF (FLAGS.EOF) THEN DO;
     1048     3680    3              CALL VEX$ERROR(E$E_EDITEOF,1);
     1049     3681    3              RETURN;
     1050     3682    3              END;
     1051     3683        /* use the the LAST_TYPE_CMD for the display of TN and TP*/
     1052     3684    2           IF (LAST_TYPE_CMD = TSCMD) THEN CALL VER$EXEC_TS;
     1053     3685    2           ELSE IF (LAST_TYPE_CMD = TCCMD) THEN CALL VER$EXEC_TC;
     1054     3686    2              ELSE CALL VER$EXEC_TY;       /* Default if none specified */
     1055     3687    2           TEMP_COUNT = TEMP_COUNT - 1;
     1056     3688    2           END;
     1057     3689    1        RETURN;
     1058     3690        /**/
     1059     3691    1   TP_PREC_ERR:
     1060     3692    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN DO;
     1061     3693    3           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN DO ;
     1062     3694    3              IF (M$FILE$ -> F$DCB.ARS = 1) THEN TEMP_COUNT = 0 ;
     1063     3695    3              ELSE TEMP_COUNT = TEMP_COUNT + M$FILE$ -> F$DCB.ARS +
     1064     3696    3                    PREC_REV_FPT.V.N# ;
     1065     3697    3              END ;                        /* THEN DO */
     1066     3698    2           ELSE TEMP_COUNT = M$FILE$ -> F$DCB.ARS ; /* TYPE WHATS THERE   */
     1067     3699    2           PREC_REV_FPT.V.KEYS# = '0'B ;
     1068     3700    2           CALL VEX$ERROR(0,1);
     1069     3701    2           IF (FLAGS.CONSEC_MODE) THEN LAST_KEY = Y003;
     1070     3702    2           LO_SEQNUM = LAST_KEY;
     1071     3703    2           IF (TEMP_COUNT > 0) THEN GOTO TN_PRECOK;
     1072     3704    2           ELSE RETURN;
     1073     3705    2           END;
     1074     3706    1        CALL VEX$ERROR(0,3);
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:38   
     1075     3707        /**/
     1076     3708    1   EXEC_TN_ERR:
     1077     3709    1        RETURN;
     1078     3710        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:39   
     1079     3711        /**/
     1080     3712    1   VER$EXEC_TS: ENTRY;
     1081     3713        /**/
     1082     3714    1        TYPE_BUF.TEXT = SUBSTR(REC_BUF,LO_EXEC_CLMN,
     1083     3715    1           HI_EXEC_CLMN - LO_EXEC_CLMN + 1);
     1084     3716    1        CALL VEX$TYPE_REC(TYPECR);
     1085     3717    1        RETURN;
     1086     3718        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:40   
     1087     3719        /**/
     1088     3720    1   VER$EXEC_TY: ENTRY;
     1089     3721        /**/
     1090     3722    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);
     1091     3723    1        IF (CMD_CODE = TYCMD) THEN
     1092     3724    1           CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,
     1093     3725    1              LO_EXEC_CLMN,HI_EXEC_CLMN-LO_EXEC_CLMN+1));
     1094     3726    1        ELSE
     1095     3727    1           CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,
     1096     3728    1              0,REC_SIZE));
     1097     3729    1        CALL VEX$TYPE_REC(TYPECR);
     1098     3730    1        RETURN;
     1099     3731        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:41   
     1100     3732        /**/
     1101     3733    1   VER$EXEC_UPARROW: ENTRY;
     1102     3734        /**/
     1103     3735    2        IF (~FLAGS.EDIT_MODE) THEN DO;     /* NO FILE OPEN                       */
     1104     3736    2           CALL VEX$ERROR (E$E_NOFILE,3);
     1105     3737        /**/
     1106     3738        /*E*     ERROR:    VEE-E$E_NOFILE-0
     1107     3739                 DESCRIPTION: A record oriented command has been received
     1108     3740                           without a file open to edit.
     1109     3741        */
     1110     3742    2           RETURN;
     1111     3743    2           END;
     1112     3744        /**/
     1113     3745    1        CALL VEX$READ_RANDOM(LO_SEQNUM) ALTRET(UPARROW_ERR);
     1114     3746    1        IF (FLAGS.EXISTS) THEN PREC_REV_FPT.V.N# = -2;
     1115     3747    1        ELSE PREC_REV_FPT.V.N# = -1;
     1116     3748    1        PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;
     1117     3749    1        CALL M$PRECORD(PREC_REV_FPT) ALTRET(NL_PREC_ERR);
     1118     3750    1        IF (FLAGS.CONSEC_MODE) THEN
     1119     3751    1           LAST_KEY = ((LAST_KEY-1) * 1000) + Y003;
     1120     3752    1        GOTO COMMON;
     1121     3753        /**/
     1122     3754    1   VER$EXEC_NEWLINE: ENTRY;
     1123     3755        /**/
     1124     3756    2        IF (~FLAGS.EDIT_MODE) THEN DO;     /* NO FILE OPEN                       */
     1125     3757    2           CALL VEX$ERROR (E$E_NOFILE,3);
     1126     3758        /**/
     1127     3759        /*E*     ERROR:    VEE-E$E_NOFILE-0
     1128     3760                 DESCRIPTION: A record oriented command has been received
     1129     3761                           without a file open to edit.
     1130     3762        */
     1131     3763    2           RETURN;
     1132     3764    2           END;
     1133     3765        /**/
     1134     3766    1        CALL VEX$READ_RANDOM(HI_SEQNUM) ALTRET(UPARROW_ERR);
     1135     3767        /**/
     1136     3768    1   COMMON:
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:42   
     1137     3769    1        CALL VEX$CLMN_DFLT;
     1138     3770        /**/
     1139     3771    1        CALL VEX$READ_SEQUEN ALTRET(UPARROW_RET);
     1140     3772    2        IF (FLAGS.EOF) THEN DO;
     1141     3773    2           CALL VEX$ERROR(E$E_EDITEOF,1);
     1142     3774    2           RETURN;
     1143     3775    2           END;
     1144     3776        /**/
     1145     3777    1        IF (LAST_TYPE_CMD = TYCMD) THEN CALL VER$EXEC_TY;
     1146     3778    1        ELSE IF (LAST_TYPE_CMD = TSCMD) THEN CALL VER$EXEC_TS;
     1147     3779    1           ELSE IF (LAST_TYPE_CMD = TCCMD) THEN CALL VER$EXEC_TC;
     1148     3780    2              ELSE DO;
     1149     3781    2                 CALL VEX$SEQNUM_TEXT(LAST_KEY);
     1150     3782    2                 CALL VEX$SET_PROMPT(PR_SEQNUM);
     1151     3783    2                 IF (REC_SIZE > 0) THEN SINPUT_FPT.BUF_.BOUND = REC_SIZE - 1;
     1152     3784    2                 ELSE SINPUT_FPT.BUF_.BOUND = 0;
     1153     3785    2                 IF RR_POS_CLMN < 0 THEN
     1154     3786    2                    SINPUT_FPT.V.REREADPOS# = MAXIMUM(0,REC_SIZE+RR_POS_CLMN+1);
     1155     3787    2                 ELSE
     1156     3788    2                    SINPUT_FPT.V.REREADPOS# = MINIMUM(1023,RR_POS_CLMN);
     1157     3789    2                 CALL M$SINPUT(SINPUT_FPT) ALTRET (UPARROW_ERR);
     1158     3790    2                 CALL M$READ (REREAD_FPT) ALTRET (UPARROW_ERR);
     1159     3791    2                 REC_SIZE = M$UC$ -> F$DCB.ARS;
     1160     3792    3                 IF (REC_SIZE = 0) THEN DO ;
     1161     3793    3                    CALL VEX$DELREC(M$FILE_NUM, LAST_KEY, LAST_KEY)
     1162     3794    3                       ALTRET (UPARROW_RET);
     1163     3795    3                    DELREC_COUNT = DELREC_COUNT + 1 ;
     1164     3796    3                    END ;                  /* THEN DO */
     1165     3797    2                 ELSE CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY)
     1166     3798    2                       ALTRET(UPARROW_RET) ;
     1167     3799        /**/
     1168     3800    2                 END;
     1169     3801        /**/
     1170     3802    1        LO_SEQNUM = LAST_KEY;
     1171     3803    1        HI_SEQNUM = LAST_KEY;
     1172     3804    1        RETURN;
     1173     3805        /**/
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:43   
     1174     3806    1   NL_PREC_ERR:
     1175     3807    1        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN
     1176     3808    1           LAST_KEY = Y003;
     1177     3809        /**/
     1178     3810    1   UPARROW_ERR:
     1179     3811    1        CALL VEX$ERROR(0,3);
     1180     3812        /**/
     1181     3813    1   UPARROW_RET:
     1182     3814    1        RETURN;
     1183     3815    1   END;                                    /* END VER$RECCMD                     */

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:44   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VER$RECCMD.

   Procedure VER$RECCMD requires 1815 words for executable code.
   Procedure VER$RECCMD requires 10 words of local(AUTO) storage.

    No errors detected in file VER$RECCMD.:E05TSI    .

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:45   

 Object Unit name= VER$RECCMD                                 File name= VER$RECCMD.:E05TOU
 UTS= JUL 30 '97 07:09:45.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     36     44  VER$RECCMD
    2   Data  even  none   124    174  VER$RECCMD
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  M$FILE
    5   DCB   even  none     0      0  M$FILE2
    6   DCB   even  none     0      0  M$DO
    7   DCB   even  none     0      0  M$ME
    8   Proc  even  none  1815   3427  VER$RECCMD
    9  RoData even  none   101    145  VER$RECCMD
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:46   

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     8      0   yes            yes      Std        0  VER$RECCMD
     8      3                  yes      Std        0  VER$EXEC_AD
     8    202                  yes      Std        0  VER$EXEC_CM
     8    374                  yes      Std        0  VER$EXEC_DE
     8    447                  yes      Std        0  VER$EXEC_FD
     8    462                  yes      Std        0  VER$EXEC_FS
     8    500                  yes      Std        0  VER$EXEC_IN
     8   1113                  yes      Std        0  VER$EXEC_MK
     8   2030                  yes      Std        0  VER$EXEC_OL
     8   2204                  yes      Std        0  VER$EXEC_RN
     8   2265                  yes      Std        0  VER$EXEC_RR
     8   2516                  yes      Std        0  VER$EXEC_TC
     8   2612                  yes      Std        0  VER$EXEC_TN
     8   3102                  yes      Std        0  VER$EXEC_TS
     8   3120                  yes      Std        0  VER$EXEC_TY
     8   3166                  yes      Std        0  VER$EXEC_UPARROW
     8   3234                  yes      Std        0  VER$EXEC_NEWLINE
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:47   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 VEX$BREAKMK
         yes          Async      0 VEX$BREAK
         yes           Std       0 VEX$CLMN_DFLT
 yes     yes           Std       1 VEX$READ_RANDOM
 yes     yes           Std       0 VEX$READ_SEQUEN
 yes     yes           Std       2 VEX$ERROR
         yes           Std       2 VEX$SEQNUM_TEXT
         yes           Std       2 VEX$SET_SUB_BUF
         yes           Std       1 VEX$TYPE_REC
 yes     yes           Std       3 VEX$READ_TERM_REC
 yes     yes           Std       2 VEX$WRITE_REC
 yes     yes           Std       0 VEX$GET_NEXT_KEY
         yes           Std       1 VEX$SET_PROMPT
 yes     yes           Std       3 VEX$DELREC
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:48   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$SI                                  M$FILE
     M$FILE2                               M$DO                                  M$ME
     FLAGS                                 ME_DCBNUM                             TY_DCBNUM
     B$TCB$                                REC_BUF                               CMD_BUF
     TYPE_BUF                              SUB_BUF_1                             SUB_BUF_2
     SEQ_TEXT_BUF                          REC_SIZE                              RP_REC_SIZE
     CMD_SIZE                              DVBYTE                                LO_EXEC_CLMN
     HI_EXEC_CLMN                          RR_POS_CLMN                           LO_SEQNUM
     HI_SEQNUM                             EXEC_SEQNUM                           LIMIT_SEQNUM
     INCR                                  LAST_KEY                              READ_KEY
     SAVE_KEY                              TEMP_CLMN                             TEMP_COUNT
     CMD_CODE                              SAVED_CMD                             LAST_TYPE_CMD
     REC_COUNT                             STRCHG_COUNT                          DELREC_COUNT
     I                                     M$FILE_NUM                            MK_COUNT
     FRST2DEL                              M$UC$                                 M$FILE$
     CMD$                                  MK_BASE$                              MK_WORK$
     MK_BOUND$                             MAX_SEQNUM                            MAX_CLMN
     Y003                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:49   


        1        1        /*M*    VER$RECCMD - EDIT EXECUTION ROUTINES FOR RECORD COMMANDS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        /**/
        9        9        VER$RECCMD: PROC;

      9  8 000000   000000 700200 xent  VER$RECCMD   TSX0  ! X66_AUTO_0
         8 000001   000012 000000                    ZERO    10,0
         8 000002   000005 710000 8                  TRA     s:2867

       10       10        /**/
       11       11        /*********************************************************************/
       12       12        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       13       13        /*********************************************************************/
       14       14        /**/
       15       15        %INCLUDE VE_SUBS_C;
       16      209        %INCLUDE VE_PERR_C;
       17      426        %INCLUDE CP_6_SUBS;
       18      966        %INCLUDE F$DCB;
       19     1015        %INCLUDE CP_6;
       20     1096        %INCLUDE B_ERRORS_C;
       21     2223        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:50   
       22     2224        /********************************************************************/
       23     2225        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       24     2226        /********************************************************************/
       25     2227        %FPT_READ  (FPTN=REREAD_FPT, STCLASS = CONSTANT,
       26     2228                    BUF = REC_BUF,
       27     2229                    DCB = M$UC ,
       28     2230                    REREAD = YES);
       29     2269        %FPT_SINPUT (FPTN = SINPUT_FPT,
       30     2270                     BUF = REC_BUF);
       31     2307        %FPT_OPEN (FPTN = OPEN_MELP_FPT, STCLASS = STATIC,
       32     2308                   DCB = M$ME,
       33     2309                   ASN = DEVICE,
       34     2310                   SCRUB = YES,
       35     2311                   FUN = CREATE,
       36     2312                   RES = 'LP');
       37     2421        %FPT_CLOSE    (FPTN = CLOSE_TY_FPT, STCLASS = STATIC,
       38     2422                      DISP = SAVE);
       39     2464        %FPT_PRECORD (FPTN = PREC_REV_FPT,
       40     2465                      DCB = M$FILE,
       41     2466                      BRK = YES,
       42     2467                      KEYS = NO,
       43     2468                      KEYR = YES,
       44     2469                      N = -2);
       45     2490        %FPT_PRECORD (FPTN = PREC_FPT,
       46     2491                      DCB = M$FILE,
       47     2492                      BRK = YES,
       48     2493                      KEYS = YES,
       49     2494                      KEYR = YES);
       50     2515        %FPT_GDS      (FPTN = MKDS_FPT, STCLASS = CONSTANT,
       51     2516                      RESULTS = DS_RESULTS,
       52     2517                      SEGSIZE = 10240);
       53     2533        %FPT_GETDCB ( FPTN = GETDCB_FPT,
       54     2534                      STCLASS = CONSTANT,
       55     2535                      DCBNAME = DCB_NAME ,
       56     2536                      DCBNUM = TY_DCBNUM) ;
       57     2551        %FPT_RELDCB ( FPTN = RELDCB_FPT,
       58     2552                      STCLASS = STATIC) ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:51   
       59     2566        %FPT_INT (FPTN = BREAKMK_FPT,UENTRY=VEX$BREAKMK,STCLASS=CONSTANT);
       60     2580        %FPT_INT (FPTN = BREAK_FPT,UENTRY=VEX$BREAK,STCLASS=CONSTANT);
       61     2594        %VLP_VECTOR   (FPTN = DS_RESULTS);
       62     2609        %VLP_NAME ( FPTN = DCB_NAME,
       63     2610                    NAME = 'M$TY',
       64     2611                    LEN = 4) ;
       65     2638        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:52   
       66     2639        /**********************************************************************/
       67     2640        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       68     2641        /**********************************************************************/
       69     2642    1   DCL 1 CMD_CNTRLWD BASED ALIGNED,        /* CONTROL WORD FOR CMD_TBL ENTRIES   */
       70     2643    1          2 FLAGS,
       71     2644    1             3 ENDCT BIT(1) UNAL,          /* LAST ENTRY                         */
       72     2645    1             3 * BIT(17) UNAL,
       73     2646    1          2 OFFSET UBIN(9) UNAL,           /* NUM. OF WORDS TO NEXT ENTRY        */
       74     2647    1          2 CMD_CODE UBIN(9) UNAL;         /* CODE FOR THIS COMMAND              */
       75     2648    1   DCL 1 IN_CMD_TBL BASED ALIGNED,         /*IN,IP,IS,RN,DE,AD,RR CMDS           */
       76     2649    1          2 * BIT(36) UNAL,
       77     2650    1          2 LO_SEQNUM UBIN(36) UNAL,
       78     2651    1          2 HI_SEQNUM UBIN(36) UNAL,
       79     2652    1          2 START_SPEC UBIN(36) UNAL,      /* DID USER SPECIFY A START */
       80     2653    1          2 COLUMN SBIN WORD UNAL;
       81     2654    1   DCL 1 CM_CMD_TBL BASED ALIGNED,         /* CM,CT COMMANDS                     */
       82     2655    1          2 * BIT(36) UNAL,
       83     2656    1          2 SEQNUM UBIN(36) UNAL,
       84     2657    1          2 LO_CLMN UBIN(36) UNAL,
       85     2658    1          2 HI_CLMN UBIN(36) UNAL;
       86     2659    1   DCL 1 MK_CMD_TBL BASED ALIGNED,         /* MK,MD COMMANDS                     */
       87     2660    1          2 * BIT(36) UNAL,
       88     2661    1          2 LO_SEQNUM UBIN(36) UNAL,
       89     2662    1          2 HI_SEQNUM UBIN(36) UNAL,
       90     2663    1          2 LO_SEQNUM2 UBIN(36) UNAL,
       91     2664    1          2 HI_SEQNUM2 UBIN(36) UNAL,
       92     2665    1          2 INCR UBIN(36) UNAL;
       93     2666    1   DCL 1 TN_CMD_TBL BASED ALIGNED,
       94     2667    1          2 * BIT(36) UNAL,
       95     2668    1          2 COUNT UBIN WORD UNAL;
       96     2669        /**/
       97     2670    1   DCL MK$BUF CHAR(PC_RECSIZE#) BASED ;
       98     2671    1   DCL 1 MK$RECS BASED ALIGNED,            /* BOOKKEEPPING                       */
       99     2672    1          2 SIZE (0:MKCOUNTMAX) UBIN BYTE UNAL,
      100     2673    1          2 OFFSET (0:MKCOUNTMAX) UBIN HALF UNAL,
      101     2674    1          2 KEY (0:MKCOUNTMAX) UBIN WORD UNAL ,
      102     2675    1          2 DVBYTE (0:MKCOUNTMAX) BIT(36) UNAL ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:53   
      103     2676        %B$TCB;
      104     2679        %B$ALT;
      105     2687    1   DCL 1 VARY$STRC BASED ALIGNED ,
      106     2688    1          2 CNT UBIN BYTE UNAL ,
      107     2689    1          2 TXT CHAR(VARY$STRC.CNT) UNAL ;
      108     2690        /**/
      109     2691        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:54   
      110     2692        /***********************************************************************/
      111     2693        /*    ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   ENTRY DCLS   */
      112     2694        /**********************************************************************/
      113     2695    1   DCL VEX$READ_SEQUEN ENTRY ALTRET;       /* GET NEXT RECORD                    */
      114     2696    1   DCL VEX$GET_NEXT_KEY ENTRY ALTRET;      /* GET NEXT RECORD KEY                */
      115     2697    1   DCL VEX$READ_RANDOM ENTRY(1) ALTRET;
      116     2698    1   DCL VEX$FIND_MATCH ENTRY(4) ALTRET;
      117     2699    1   DCL VEX$WRITE_REC ENTRY(2) ALTRET;
      118     2700    1   DCL VEX$DELREC ENTRY(3) ALTRET;
      119     2701    1   DCL VEX$ERROR ENTRY(2) ALTRET;
      120     2702    1   DCL VEX$ERRNEXT ENTRY ALTRET;
      121     2703    1   DCL VEX$ERRMAX ENTRY ALTRET;
      122     2704    1   DCL VEX$READ_TERM_REC ENTRY(3) ALTRET;
      123     2705    1   DCL VEX$TYPE_REC ENTRY(1);
      124     2706    1   DCL VEX$CLMN_DFLT ENTRY;
      125     2707    1   DCL VEX$FIELD_LEFT ENTRY(3);
      126     2708    1   DCL VEX$MOVE_LEFT ENTRY(2);
      127     2709    1   DCL VEX$COMP_RIGHT ENTRY(2);
      128     2710    1   DCL VEX$MOVE_RIGHT ENTRY(2);
      129     2711    1   DCL VEX$FIND_CLMN ENTRY(2) ALTRET;
      130     2712    1   DCL VEX$SEQNUM_TEXT ENTRY(2);
      131     2713    1   DCL VEX$SET_SUB_BUF ENTRY(2);
      132     2714    1   DCL VEX$SET_PROMPT ENTRY(1);
      133     2715    1   DCL VEX$BREAK ENTRY ASYNC;
      134     2716    1   DCL VEX$BREAKMK ENTRY ASYNC;
      135     2717        /********************************************************************/
      136     2718        /*   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   DCBS   */
      137     2719        /********************************************************************/
      138     2720        /**/
      139     2721    1   DCL M$SI DCB;
      140     2722    1   DCL M$FILE DCB;                         /* READ EDIT FILE                     */
      141     2723    1   DCL M$FILE2 DCB;                        /* FOR MERGE AND COPY                 */
      142     2724    1   DCL M$DO DCB;                           /* ERROR MESSAGES                     */
      143     2725    1   DCL M$ME DCB;
      144     2726        /**/
      145     2727        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:55   
      146     2728        /*****************************************************************/
      147     2729        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
      148     2730        /*****************************************************************/
      149     2731        /**/
      150     2732    1   DCL FIRST_FLG BIT(1) AUTO ;
      151     2733    1   DCL TEMP_COUNT2 SBIN AUTO ;
      152     2734    1   DCL REMAIN SBIN AUTO;
      153     2735        /*****************************************************************/
      154     2736        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      155     2737        /*****************************************************************/
      156     2738        /**/
      157     2739        %INCLUDE VE_FLAGS_R;
      158     2790        /**/
      159     2791    1   DCL ME_DCBNUM UBIN WORD SYMREF ;        /* M$ME DCBNUM FOR OL COMMAND         */
      160     2792    1   DCL TY_DCBNUM UBIN WORD SYMREF ;        /* DCBNUM FOR OL COMMAND              */
      161     2793    1   DCL B$TCB$ PTR SYMREF;                  /* POINTER TO TCB                     */
      162     2794    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
      163     2795    1   DCL CMD_BUF CHAR(256) SYMREF;
      164     2796    1   DCL 1 TYPE_BUF SYMREF,
      165     2797    1          2 VFC CHAR(1) CALIGNED,
      166     2798    1          2 TEXT CHAR(PC_DISPRECSIZE#) CALIGNED;
      167     2799    1   DCL 1 SUB_BUF_1 SYMREF,
      168     2800    1          2 COUNT UBIN(9) UNAL,
      169     2801    1          2 TEXT CHAR(31) UNAL;
      170     2802    1   DCL 1 SUB_BUF_2 SYMREF,
      171     2803    1          2 COUNT UBIN(9) UNAL,
      172     2804    1          2 TEXT CHAR(31) UNAL;
      173     2805    1   DCL 1 SUB_BUF_3 SYMREF,
      174     2806    1          2 COUNT UBIN(9) UNAL,
      175     2807    1          2 TEXT CHAR(31) UNAL;
      176     2808    1   DCL SEQ_TEXT_BUF CHAR(9)  SYMREF;
      177     2809    1   DCL REC_SIZE UBIN(36) SYMREF;           /* CHARACTER COUNT OF REC_BUF         */
      178     2810    1   DCL RP_REC_SIZE UBIN WORD SYMREF;       /* RECORD SIZE READ - FOR RP          */
      179     2811    1   DCL CMD_SIZE UBIN(36) SYMREF;           /* CHARACTER COUNT OF CMD_BUF         */
      180     2812    1   DCL DVBYTE BIT(36) SYMREF ;
      181     2813    1   DCL LO_SRCH_CLMN UBIN(36) SYMREF;       /* LOW LIMIT OF SEARCH RANGE          */
      182     2814    1   DCL HI_SRCH_CLMN UBIN(36) SYMREF;       /* HIGH LIMIT OF SEARCH RANGE         */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:56   
      183     2815    1   DCL LO_EXEC_CLMN UBIN(36) SYMREF;       /* LOW LIMIT OF CHANGEABLE RANGE      */
      184     2816    1   DCL HI_EXEC_CLMN UBIN(36) SYMREF;       /* HIGH LIMIT OF CHANGEABLE RANGE     */
      185     2817    1   DCL RR_POS_CLMN SBIN WORD SYMREF;       /* Column num to position to on an RR */
      186     2818    1   DCL LO_SEQNUM UBIN(36) SYMREF ;
      187     2819                                                /* LOW LIMIT OF RECORD RANGE          */
      188     2820    1   DCL HI_SEQNUM UBIN(36) SYMREF ;
      189     2821                                                /* HIGH LIMIT OF RECORD RANGE         */
      190     2822    1   DCL EXEC_SEQNUM UBIN(36) SYMREF;        /* CURRENT RECORD BEING USED          */
      191     2823    1   DCL LIMIT_SEQNUM UBIN(36) SYMREF;       /* TEMP FOR SEARCHING RANGES          */
      192     2824    1   DCL INCR UBIN(36) SYMREF;               /* INCREMENT                          */
      193     2825    1   DCL DFLT_INCR UBIN(36) SYMREF ;
      194     2826    1   DCL LAST_KEY UBIN(36) SYMREF;           /* KEY OF LAST RECORD READ            */
      195     2827    1   DCL READ_KEY UBIN(36) SYMREF;           /* KEY TO BE USED TO READ RECORD      */
      196     2828    1   DCL SAVE_KEY UBIN(36) SYMREF;           /* SAVE KEY IN MD                     */
      197     2829    1   DCL MATCH_CLMN UBIN(36) SYMREF;         /* COLUMN OF START OF STRING          */
      198     2830    1   DCL TEMP_CLMN UBIN(36) SYMREF;          /* TEMP CELL FOR COLUMN NUM.          */
      199     2831    1   DCL TEMP_COUNT UBIN(36) SYMREF;
      200     2832    1   DCL STR1_CLMN UBIN(36) SYMREF;          /* START OF FIRST INTRA STRING        */
      201     2833    1   DCL STR2_CLMN UBIN(36) SYMREF;          /* START OF SECOND INTRA STRING       */
      202     2834    1   DCL CMD_CODE UBIN(36) SYMREF;           /* CODE FOR CURRENT COMMAND           */
      203     2835    1   DCL LAST_CMD UBIN(36) SYMREF;           /* SAVED CMD FOR ?? COMMAND           */
      204     2836    1   DCL SAVED_CMD UBIN(36) SYMREF ;
      205     2837    1   DCL LAST_TYPE_CMD UBIN(36) SYMREF;      /* FORMAT FOR LF - UPARROW            */
      206     2838    1   DCL REC_COUNT UBIN(36) SYMREF;          /* COUNT OF RECORDS OPERATED ON       */
      207     2839    1   DCL STRCHG_COUNT UBIN(36) SYMREF;       /* COUNT OF STRINGS CHANGED           */
      208     2840    1   DCL DELREC_COUNT UBIN(36) SYMREF;       /* INTRARECORD RECORDS DELETED        */
      209     2841    1   DCL I UBIN(36) SYMREF;                  /* INDEX                              */
      210     2842    1   DCL M$FILE_NUM UBIN(36) SYMREF ;
      211     2843    1   DCL M$FILE2_NUM UBIN(36) SYMREF ;
      212     2844    1   DCL MK_COUNT UBIN WORD SYMREF;          /* BLOCK MK MOVE COUNT                */
      213     2845    1   DCL FRST2DEL UBIN WORD SYMREF;          /* FIRST RECORD TO DELETE IN MD BLOCK */
      214     2846    1   DCL P$ PTR SYMREF;                      /* TEMP PTR                           */
      215     2847    1   DCL M$SI$ PTR SYMREF;
      216     2848    1   DCL M$UC$ PTR SYMREF;
      217     2849    1   DCL M$FILE$ PTR SYMREF;                 /* POINTER TO M$FILE                  */
      218     2850    1   DCL M$FILE2$ PTR SYMREF;
      219     2851    1   DCL CMD$ PTR SYMREF;                    /* POINTER TO RUN CMD_TBL             */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:57   
      220     2852    1   DCL CMD_BASE$ PTR SYMREF;
      221     2853    1   DCL MK_BASE$ PTR SYMREF;                /* MK DATA SEG PTR                    */
      222     2854    1   DCL MK_WORK$ PTR SYMREF;                /* MK BLOCK MAVE PTR                  */
      223     2855    1   DCL MK_BOUND$ PTR SYMREF;               /* END OF MK DATA SEG                 */
      224     2856    1   DCL MAX_SEQNUM UBIN(36) SYMREF ;
      225     2857    1   DCL MAX_CLMN UBIN(36) SYMREF ;
      226     2858    1   DCL Y003 UBIN(36) SYMREF ;
      227     2859    1   DCL SEQNUM_ONE UBIN(36) SYMREF ;
      228     2860        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:58   
      229     2861        /*****************************************************************************/
      230     2862        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      231     2863        /*****************************************************************************/
      232     2864        /**/
      233     2865    1   VER$EXEC_AD: ENTRY;

   2865  8 000003   000000 700200 xent  VER$EXEC_AD  TSX0  ! X66_AUTO_0
         8 000004   000012 000000                    ZERO    10,0

      234     2866        /**/
      235     2867    2        IF (~FLAGS.INTRA_CMD) THEN DO;     /* INTER RECORD MODE                  */

   2867  8 000005   000000 236000 xsym               LDQ     FLAGS
         8 000006   000001 736000                    QLS     1
         8 000007   400000 376003                    ANQ     -131072,DU
         8 000010   400000 676003                    ERQ     -131072,DU
         8 000011   000060 600000 8                  TZE     EXEC_AD_1

      236     2868    2           CALL VEX$CLMN_DFLT;

   2868  8 000012   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000013   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 000014   000000 011000                    NOP     0

      237     2869    2           LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;

   2869  8 000015   000000 470400 xsym               LDP0    CMD$
         8 000016   000001 235100                    LDA     1,,PR0
         8 000017   000000 755000 xsym               STA     LO_SEQNUM

      238     2870    2           HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;

   2870  8 000020   000002 235100                    LDA     2,,PR0
         8 000021   000000 755000 xsym               STA     HI_SEQNUM

      239     2871    2           EXEC_SEQNUM = LO_SEQNUM;

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:59   
   2871  8 000022   000000 236000 xsym               LDQ     LO_SEQNUM
         8 000023   000000 756000 xsym               STQ     EXEC_SEQNUM

      240     2872    2           CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_AD_ERR);

   2872  8 000024   000000 630400 9                  EPPR0   0
         8 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000026   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 000027   000201 702000 8                  TSX2    EXEC_AD_ERR

      241     2873    3           IF (~FLAGS.EXISTS) THEN DO;

   2873  8 000030   000000 236000 xsym               LDQ     FLAGS
         8 000031   000004 736000                    QLS     4
         8 000032   400000 376003                    ANQ     -131072,DU
         8 000033   400000 676003                    ERQ     -131072,DU
         8 000034   000060 600000 8                  TZE     EXEC_AD_1

      242     2874    3              CALL VEX$READ_SEQUEN ALTRET(EXEC_AD_ERR);

   2874  8 000035   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000036   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 000037   000201 702000 8                  TSX2    EXEC_AD_ERR

      243     2875    4              IF (FLAGS.EOF) THEN DO;

   2875  8 000040   000000 236000 xsym               LDQ     FLAGS
         8 000041   010000 316003                    CANQ    4096,DU
         8 000042   000050 600000 8                  TZE     s:2883

      244     2876    4                 CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                    */

   2876  8 000043   000002 630400 9                  EPPR0   2
         8 000044   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000045   000000 701000 xent               TSX1    VEX$ERROR
         8 000046   000000 011000                    NOP     0

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:60   
      245     2877    4                 RETURN;

   2877  8 000047   000000 702200 xent               TSX2  ! X66_ARET

      246     2878        /**/
      247     2879        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      248     2880                 DESCRIPTION:  EOF hit durring AD operation.
      249     2881        */
      250     2882    4                 END;
      251     2883    4              IF (LAST_KEY > HI_SEQNUM) THEN DO; /* NONE TO AD TO             */

   2883  8 000050   000000 236000 xsym               LDQ     HI_SEQNUM
         8 000051   000000 116000 xsym               CMPQ    LAST_KEY
         8 000052   000060 603000 8                  TRC     EXEC_AD_1

      252     2884    4                 CALL VEX$ERROR(E$E_NONE,1);

   2884  8 000053   000005 630400 9                  EPPR0   5
         8 000054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000055   000000 701000 xent               TSX1    VEX$ERROR
         8 000056   000000 011000                    NOP     0

      253     2885    4                 RETURN;

   2885  8 000057   000000 702200 xent               TSX2  ! X66_ARET

      254     2886    4                 END;
      255     2887        /**/
      256     2888        /*E*     ERROR:    VEE-E$E_NONE-0
      257     2889                 DESCRIPTION:   No records to AD to
      258     2890        */
      259     2891    3              END;
      260     2892    2           END;
      261     2893        /**/                                    /* BOTH INTER AND INTRA MODES         */
      262     2894    1   EXEC_AD_1:
      263     2895    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:61   
   2895  8 000060   000007 630400 9     EXEC_AD_1    EPPR0   7
         8 000061   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000062   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 000063   000000 011000                    NOP     0

      264     2896    1       CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,0,REC_SIZE),BINASC(0)
              2896                 );

   2896  8 000064   040000 100400                    MLR     fill='040'O
         8 000065   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         8 000066   000000 200011 xsym               ADSC9   TYPE_BUF                 cn=1,n=9
         8 000067   040000 236007                    LDQ     16384,DL
         8 000070   000002 552010 xsym               STBQ    TYPE_BUF+2,'10'O
         8 000071   000000 720000 xsym               LXL0    REC_SIZE
         8 000072   040000 100440                    MLR     fill='040'O
         8 000073   000000 000010 xsym               ADSC9   REC_BUF                  cn=0,n=*X0
         8 000074   000002 602072 xsym               ADSC9   TYPE_BUF+2               cn=3,n=1082
         8 000075   000000 236000 xsym               LDQ     REC_SIZE
         8 000076   002072 116007                    CMPQ    1082,DL
         8 000077   000105 603000 8                  TRC     s:2897
         8 000100   775705 621006                    EAX1    -1083,QL
         8 000101   777777 661003                    ERX1    -1,DU
         8 000102   040046 100400                    MLR     fill='040'O
         8 000103   000010 000001 9                  ADSC9   8                        cn=0,n=1
         8 000104   000002 600011 xsym               ADSC9   TYPE_BUF+2,Q             cn=3,n=*X1

      265     2897    1        CALL VEX$TYPE_REC(TYPENOCR);

   2897  8 000105   000011 630400 9                  EPPR0   9
         8 000106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000107   000000 701000 xent               TSX1    VEX$TYPE_REC
         8 000110   000000 011000                    NOP     0

      266     2898    1        CALL VEX$SET_PROMPT(PR_NULL);

   2898  8 000111   000012 630400 9                  EPPR0   10
         8 000112   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:62   
         8 000113   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 000114   000000 011000                    NOP     0

      267     2899    1        CALL VEX$READ_TERM_REC(CMD_BUF,CMD_SIZE,SIZEC(CMD_BUF))

   2899  8 000115   000014 630400 9                  EPPR0   12
         8 000116   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000117   000000 701000 xent               TSX1    VEX$READ_TERM_REC
         8 000120   000201 702000 8                  TSX2    EXEC_AD_ERR

      268     2900    1           ALTRET(EXEC_AD_ERR);
      269     2901    2        IF (REC_SIZE+CMD_SIZE > PC_RECSIZE#) THEN DO; /* OVERFLOW */

   2901  8 000121   000000 236000 xsym               LDQ     REC_SIZE
         8 000122   000000 036000 xsym               ADLQ    CMD_SIZE
         8 000123   002001 116007                    CMPQ    1025,DL
         8 000124   000134 602000 8                  TNC     s:2910

      270     2902    2           CALL VEX$ERROR(E$E_OVERFLOW,2);

   2902  8 000125   000020 630400 9                  EPPR0   16
         8 000126   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000127   000000 701000 xent               TSX1    VEX$ERROR
         8 000130   000000 011000                    NOP     0

      271     2903    2           CMD_SIZE = PC_RECSIZE# - REC_SIZE;

   2903  8 000131   002000 235007                    LDA     1024,DL
         8 000132   000000 135000 xsym               SBLA    REC_SIZE
         8 000133   000000 755000 xsym               STA     CMD_SIZE

      272     2904    2           END;

      273     2905        /**/
      274     2906        /*E*     ERROR:    VEE-E$E_OVERFLOW-0
      275     2907                 DESCRIPTION: Too many characters were input to the AD command
      276     2908                           some of them were lost.
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:63   
      277     2909        */
      278     2910    1        CALL INSERT(REC_BUF,REC_SIZE,CMD_SIZE,SUBSTR(CMD_BUF,0,CMD_SIZE));

   2910  8 000134   000000 720000 xsym               LXL0    CMD_SIZE
         8 000135   000000 235000 xsym               LDA     REC_SIZE
         8 000136   040045 100440                    MLR     fill='040'O
         8 000137   000000 000010 xsym               ADSC9   CMD_BUF                  cn=0,n=*X0
         8 000140   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0

      279     2911    1        REC_SIZE = REC_SIZE+CMD_SIZE;

   2911  8 000141   000000 236000 xsym               LDQ     REC_SIZE
         8 000142   000000 036000 xsym               ADLQ    CMD_SIZE
         8 000143   000000 756000 xsym               STQ     REC_SIZE

      280     2912    2        IF (FLAGS.INTRA_CMD) THEN DO;

   2912  8 000144   000000 236000 xsym               LDQ     FLAGS
         8 000145   200000 316003                    CANQ    65536,DU
         8 000146   000155 600000 8                  TZE     s:2918

      281     2913    2           FLAGS.TXFLAG = TRUE;

   2913  8 000147   000040 236003                    LDQ     32,DU
         8 000150   000000 256000 xsym               ORSQ    FLAGS

      282     2914    2           STRCHG_COUNT = STRCHG_COUNT + 1;

   2914  8 000151   000000 235000 xsym               LDA     STRCHG_COUNT
         8 000152   000001 035007                    ADLA    1,DL
         8 000153   000000 755000 xsym               STA     STRCHG_COUNT

      283     2915    2           RETURN;

   2915  8 000154   000000 702200 xent               TSX2  ! X66_ARET

      284     2916    2           END;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:64   
      285     2917        /**/                                    /* INTER RECORD MODE                  */
      286     2918    1        CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY) ALTRET(EXEC_AD_ERR);

   2918  8 000155   000022 630400 9                  EPPR0   18
         8 000156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000157   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 000160   000201 702000 8                  TSX2    EXEC_AD_ERR

      287     2919    1        CALL VEX$READ_SEQUEN ALTRET (EXEC_AD_ERR);

   2919  8 000161   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000162   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 000163   000201 702000 8                  TSX2    EXEC_AD_ERR

      288     2920    2        IF (FLAGS.EOF) THEN DO;

   2920  8 000164   000000 236000 xsym               LDQ     FLAGS
         8 000165   010000 316003                    CANQ    4096,DU
         8 000166   000174 600000 8                  TZE     s:2928

      289     2921    2           CALL VEX$ERROR(E$E_EDITEOF,1);

   2921  8 000167   000002 630400 9                  EPPR0   2
         8 000170   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000171   000000 701000 xent               TSX1    VEX$ERROR
         8 000172   000000 011000                    NOP     0

      290     2922    2           RETURN;

   2922  8 000173   000000 702200 xent               TSX2  ! X66_ARET

      291     2923    2           END;
      292     2924        /**/
      293     2925        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      294     2926                 DESCRIPTION: EOF hit durring AD operation
      295     2927        */
      296     2928    1        IF (LAST_KEY > HI_SEQNUM) THEN RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:65   

   2928  8 000174   000000 236000 xsym               LDQ     HI_SEQNUM
         8 000175   000000 116000 xsym               CMPQ    LAST_KEY
         8 000176   000200 603000 8                  TRC     s:2930

   2928  8 000177   000000 702200 xent               TSX2  ! X66_ARET

      297     2929        /**/
      298     2930    1        GOTO EXEC_AD_1;

   2930  8 000200   000060 710000 8                  TRA     EXEC_AD_1

      299     2931        /**/
      300     2932    1   EXEC_AD_ERR:
      301     2933    1        RETURN;

   2933  8 000201   000000 702200 xent  EXEC_AD_ERR  TSX2  ! X66_ARET

      302     2934        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:66   
      303     2935        /**/
      304     2936    1   VER$EXEC_CM: ENTRY;

   2936  8 000202   000000 700200 xent  VER$EXEC_CM  TSX0  ! X66_AUTO_0
         8 000203   000012 000000                    ZERO    10,0

      305     2937        /**/
      306     2938    1        READ_KEY = CMD$ -> CM_CMD_TBL.SEQNUM; /* INITIALIZE PARAMETERS        */

   2938  8 000204   000000 470400 xsym               LDP0    CMD$
         8 000205   000001 235100                    LDA     1,,PR0
         8 000206   000000 755000 xsym               STA     READ_KEY

      307     2939    1        LO_EXEC_CLMN = CMD$ -> CM_CMD_TBL.LO_CLMN;

   2939  8 000207   000002 235100                    LDA     2,,PR0
         8 000210   000000 755000 xsym               STA     LO_EXEC_CLMN

      308     2940    1        HI_EXEC_CLMN = CMD$ -> CM_CMD_TBL.HI_CLMN;

   2940  8 000211   000003 235100                    LDA     3,,PR0
         8 000212   000000 755000 xsym               STA     HI_EXEC_CLMN

      309     2941        /**/
      310     2942    1        TEMP_CLMN = HI_EXEC_CLMN - LO_EXEC_CLMN +1; /* SLOT SIZE              */

   2942  8 000213   000000 236000 xsym               LDQ     HI_EXEC_CLMN
         8 000214   000000 136000 xsym               SBLQ    LO_EXEC_CLMN
         8 000215   000001 036007                    ADLQ    1,DL
         8 000216   000000 756000 xsym               STQ     TEMP_CLMN

      311     2943        /**/
      312     2944    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET (EXEC_CM_ERR);

   2944  8 000217   000024 630400 9                  EPPR0   20
         8 000220   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000221   000000 701000 xent               TSX1    VEX$READ_RANDOM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:67   
         8 000222   000365 702000 8                  TSX2    EXEC_CM_ERR

      313     2945    2        IF (~FLAGS.EXISTS) THEN DO;

   2945  8 000223   000000 236000 xsym               LDQ     FLAGS
         8 000224   000004 736000                    QLS     4
         8 000225   400000 376003                    ANQ     -131072,DU
         8 000226   400000 676003                    ERQ     -131072,DU
         8 000227   000243 600000 8                  TZE     s:2956

      314     2946    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_CM_ERR);

   2946  8 000230   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000231   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 000232   000365 702000 8                  TSX2    EXEC_CM_ERR

      315     2947    3           IF (FLAGS.EOF) THEN DO;

   2947  8 000233   000000 236000 xsym               LDQ     FLAGS
         8 000234   010000 316003                    CANQ    4096,DU
         8 000235   000243 600000 8                  TZE     s:2956

      316     2948    3              CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                       */

   2948  8 000236   000002 630400 9                  EPPR0   2
         8 000237   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000240   000000 701000 xent               TSX1    VEX$ERROR
         8 000241   000000 011000                    NOP     0

      317     2949    3              RETURN;

   2949  8 000242   000000 702200 xent               TSX2  ! X66_ARET

      318     2950    3              END;
      319     2951        /**/
      320     2952        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      321     2953                 DESCRIPTION: EOF hit in CM/CT operation.
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:68   
      322     2954        */
      323     2955    2           END;
      324     2956    1        IF (CMD_CODE = CTCMD) THEN CALL VEX$SET_PROMPT(PR_NULL);

   2956  8 000243   000000 235000 xsym               LDA     CMD_CODE
         8 000244   000045 115007                    CMPA    37,DL
         8 000245   000252 601000 8                  TNZ     s:2958

   2956  8 000246   000012 630400 9                  EPPR0   10
         8 000247   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000250   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 000251   000000 011000                    NOP     0

      325     2957        /**/
      326     2958    2        DO WHILE (~FLAGS.EOF);             /* GOT TO END OF FILE                 */

   2958  8 000252   000360 710000 8                  TRA     s:2989

      327     2959    2           CALL VEX$SEQNUM_TEXT(LAST_KEY);

   2959  8 000253   000007 630400 9                  EPPR0   7
         8 000254   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000255   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 000256   000000 011000                    NOP     0

      328     2960    3           IF (CMD_CODE = CTCMD) THEN DO;

   2960  8 000257   000000 235000 xsym               LDA     CMD_CODE
         8 000260   000045 115007                    CMPA    37,DL
         8 000261   000310 601000 8                  TNZ     s:2965

      329     2961    3              CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,

   2961  8 000262   040000 100400                    MLR     fill='040'O
         8 000263   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         8 000264   000000 200011 xsym               ADSC9   TYPE_BUF                 cn=1,n=9
         8 000265   040000 236007                    LDQ     16384,DL
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:69   
         8 000266   000002 552010 xsym               STBQ    TYPE_BUF+2,'10'O
         8 000267   000000 720000 xsym               LXL0    LO_EXEC_CLMN
         8 000270   040000 100440                    MLR     fill='040'O
         8 000271   000000 000010 xsym               ADSC9   REC_BUF                  cn=0,n=*X0
         8 000272   000002 602072 xsym               ADSC9   TYPE_BUF+2               cn=3,n=1082
         8 000273   000000 236000 xsym               LDQ     LO_EXEC_CLMN
         8 000274   002072 116007                    CMPQ    1082,DL
         8 000275   000303 603000 8                  TRC     s:2963
         8 000276   775705 621006                    EAX1    -1083,QL
         8 000277   777777 661003                    ERX1    -1,DU
         8 000300   040046 100400                    MLR     fill='040'O
         8 000301   000010 000001 9                  ADSC9   8                        cn=0,n=1
         8 000302   000002 600011 xsym               ADSC9   TYPE_BUF+2,Q             cn=3,n=*X1

      330     2962    3                 0,LO_EXEC_CLMN),BINASC(0));
      331     2963    3              CALL VEX$TYPE_REC(TYPENOCR); /* TYPE RECORD UP TO LO_CLMN(NOCR) */

   2963  8 000303   000011 630400 9                  EPPR0   9
         8 000304   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000305   000000 701000 xent               TSX1    VEX$TYPE_REC
         8 000306   000000 011000                    NOP     0

      332     2964    3              END;

   2964  8 000307   000314 710000 8                  TRA     s:2967

      333     2965    2           ELSE CALL VEX$SET_PROMPT(PR_SEQNUM);

   2965  8 000310   000025 630400 9                  EPPR0   21
         8 000311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000312   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 000313   000000 011000                    NOP     0

      334     2966        /**/
      335     2967    2           CALL VEX$READ_TERM_REC(CMD_BUF,CMD_SIZE,SIZEC(CMD_BUF))

   2967  8 000314   000014 630400 9                  EPPR0   12
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:70   
         8 000315   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000316   000000 701000 xent               TSX1    VEX$READ_TERM_REC
         8 000317   000365 702000 8                  TSX2    EXEC_CM_ERR

      336     2968    2              ALTRET(EXEC_CM_ERR);
      337     2969    2           IF (CMD_SIZE = 0) THEN GOTO EXEC_CM_ERR;

   2969  8 000320   000000 235000 xsym               LDA     CMD_SIZE
         8 000321   000365 600000 8                  TZE     EXEC_CM_ERR

      338     2970    3           IF (CMD_SIZE > TEMP_CLMN) THEN DO; /* TEXT TOO BIG FOR SLOT        */

   2970  8 000322   000000 236000 xsym               LDQ     TEMP_CLMN
         8 000323   000000 116000 xsym               CMPQ    CMD_SIZE
         8 000324   000333 603000 8                  TRC     s:2981

      339     2971    3              CALL VEX$ERROR(E$E_TRUNC,2); /* TRUNCATION                      */

   2971  8 000325   000027 630400 9                  EPPR0   23
         8 000326   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000327   000000 701000 xent               TSX1    VEX$ERROR
         8 000330   000000 011000                    NOP     0

      340     2972    3              CMD_SIZE = TEMP_CLMN;

   2972  8 000331   000000 235000 xsym               LDA     TEMP_CLMN
         8 000332   000000 755000 xsym               STA     CMD_SIZE

      341     2973    3              END;

      342     2974        /**/
      343     2975        /*E*     ERROR:    VEE-E$E_TRUNC-0
      344     2976                 MESSAGE:  Truncation
      345     2977                 MESSAGE1: The input text will not fit in the specified slot
      346     2978                 DESCRIPTION: More text has been input than will fit in the
      347     2979                           slot in the record specified on the CM/CT command.
      348     2980        */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:71   
      349     2981    2           CALL INSERT(REC_BUF,LO_EXEC_CLMN,TEMP_CLMN,

   2981  8 000333   000000 620005                    EAX0    0,AL
         8 000334   000000 721000 xsym               LXL1    TEMP_CLMN
         8 000335   000000 235000 xsym               LDA     LO_EXEC_CLMN
         8 000336   040045 100440                    MLR     fill='040'O
         8 000337   000000 000010 xsym               ADSC9   CMD_BUF                  cn=0,n=*X0
         8 000340   000000 000011 xsym               ADSC9   REC_BUF,A                cn=0,n=*X1

      350     2982    2              SUBSTR(CMD_BUF,0,CMD_SIZE));
      351     2983        /**/
      352     2984    2           IF (REC_SIZE < LO_EXEC_CLMN + TEMP_CLMN + 1) THEN
              2984                    /* RECORD SMALLER THAN SLOT END */

   2984  8 000341   000000 236000 xsym               LDQ     LO_EXEC_CLMN
         8 000342   000000 036000 xsym               ADLQ    TEMP_CLMN
         8 000343   000000 116000 xsym               CMPQ    REC_SIZE
         8 000344   000351 602000 8                  TNC     s:2987

      353     2985    2              REC_SIZE = LO_EXEC_CLMN + CMD_SIZE + 1;

   2985  8 000345   000000 236000 xsym               LDQ     LO_EXEC_CLMN
         8 000346   000000 036000 xsym               ADLQ    CMD_SIZE
         8 000347   000001 036007                    ADLQ    1,DL
         8 000350   000000 756000 xsym               STQ     REC_SIZE

      354     2986        /**/
      355     2987    2           CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY) ALTRET (EXEC_CM_ERR);

   2987  8 000351   000022 630400 9                  EPPR0   18
         8 000352   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000353   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 000354   000365 702000 8                  TSX2    EXEC_CM_ERR

      356     2988    2           CALL VEX$READ_SEQUEN ALTRET (EXEC_CM_ERR);

   2988  8 000355   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:72   
         8 000356   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 000357   000365 702000 8                  TSX2    EXEC_CM_ERR

      357     2989    2           END;

   2989  8 000360   000000 236000 xsym               LDQ     FLAGS
         8 000361   000005 736000                    QLS     5
         8 000362   400000 376003                    ANQ     -131072,DU
         8 000363   400000 676003                    ERQ     -131072,DU
         8 000364   000253 601000 8                  TNZ     s:2959

      358     2990        /**/
      359     2991    1   EXEC_CM_ERR:
      360     2992    1        CALL VEX$CLMN_DFLT;

   2992  8 000365   000002 631400 xsym  EXEC_CM_ERR  EPPR1   B_VECTNIL+2
         8 000366   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 000367   000000 011000                    NOP     0

      361     2993    1        LO_SEQNUM = LAST_KEY;

   2993  8 000370   000000 235000 xsym               LDA     LAST_KEY
         8 000371   000000 755000 xsym               STA     LO_SEQNUM

      362     2994    1        HI_SEQNUM = LAST_KEY;

   2994  8 000372   000000 755000 xsym               STA     HI_SEQNUM

      363     2995    1        RETURN;

   2995  8 000373   000000 702200 xent               TSX2  ! X66_ARET

      364     2996        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:73   
      365     2997        /**/
      366     2998    1   VER$EXEC_DE: ENTRY;

   2998  8 000374   000000 700200 xent  VER$EXEC_DE  TSX0  ! X66_AUTO_0
         8 000375   000012 000000                    ZERO    10,0

      367     2999        /**/
      368     3000    2        IF (FLAGS.INTRA_CMD) THEN DO;      /* INTRA RECORD MODE                  */

   3000  8 000376   000000 236000 xsym               LDQ     FLAGS
         8 000377   200000 316003                    CANQ    65536,DU
         8 000400   000415 600000 8                  TZE     s:3008

      369     3001    2           CALL VEX$DELREC(M$FILE_NUM,LAST_KEY,0) ALTRET(EXEC_DE_ERR);

   3001  8 000401   000031 630400 9                  EPPR0   25
         8 000402   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000403   000000 701000 xent               TSX1    VEX$DELREC
         8 000404   000446 702000 8                  TSX2    EXEC_DE_ERR

      370     3002    2           DELREC_COUNT = DELREC_COUNT + 1;

   3002  8 000405   000000 235000 xsym               LDA     DELREC_COUNT
         8 000406   000001 035007                    ADLA    1,DL
         8 000407   000000 755000 xsym               STA     DELREC_COUNT

      371     3003    2           FLAGS.TXFLAG = FALSE;           /* DONT WRITE BACK TO FILE            */

   3003  8 000410   000034 236000 9                  LDQ     28
         8 000411   000000 356000 xsym               ANSQ    FLAGS

      372     3004    2           FLAGS.DELRECCMD = TRUE;

   3004  8 000412   001000 236007                    LDQ     512,DL
         8 000413   000000 256000 xsym               ORSQ    FLAGS

      373     3005    2           RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:74   

   3005  8 000414   000000 702200 xent               TSX2  ! X66_ARET

      374     3006    2           END;
      375     3007        /**/                                    /* INTER RECORD MODE                  */
      376     3008    1        REC_COUNT = 0;

   3008  8 000415   000000 450000 xsym               STZ     REC_COUNT

      377     3009    1        LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;

   3009  8 000416   000000 470400 xsym               LDP0    CMD$
         8 000417   000001 235100                    LDA     1,,PR0
         8 000420   000000 755000 xsym               STA     LO_SEQNUM

      378     3010    1        HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;

   3010  8 000421   000002 235100                    LDA     2,,PR0
         8 000422   000000 755000 xsym               STA     HI_SEQNUM

      379     3011    1        CALL VEX$CLMN_DFLT;                /* SELECT DELETED RANGE               */

   3011  8 000423   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000424   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 000425   000000 011000                    NOP     0

      380     3012        /**/
      381     3013    1        CALL VEX$DELREC(M$FILE_NUM,LO_SEQNUM,HI_SEQNUM) ALTRET (EXEC_DE_ERR);

   3013  8 000426   000035 630400 9                  EPPR0   29
         8 000427   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000430   000000 701000 xent               TSX1    VEX$DELREC
         8 000431   000446 702000 8                  TSX2    EXEC_DE_ERR

      382     3014    1        REC_COUNT = M$FILE$ -> F$DCB.ARS;

   3014  8 000432   000000 470400 xsym               LDP0    M$FILE$
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:75   
         8 000433   000000 235100                    LDA     0,,PR0
         8 000434   000000 755000 xsym               STA     REC_COUNT

      383     3015        /**/
      384     3016    1        CALL VEX$SET_SUB_BUF(SUB_BUF_1,REC_COUNT);

   3016  8 000435   000040 630400 9                  EPPR0   32
         8 000436   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000437   000000 701000 xent               TSX1    VEX$SET_SUB_BUF
         8 000440   000000 011000                    NOP     0

      385     3017    1        CALL VEX$ERROR(E$E_RECSDEL,1);     /* XX RECS DELETED                    */

   3017  8 000441   000043 630400 9                  EPPR0   35
         8 000442   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000443   000000 701000 xent               TSX1    VEX$ERROR
         8 000444   000000 011000                    NOP     0

      386     3018    1        RETURN;

   3018  8 000445   000000 702200 xent               TSX2  ! X66_ARET

      387     3019        /**/
      388     3020        /*E*     ERROR:    VEE-E$E_RECSDEL-0
      389     3021                 DESCRIPTION: The specified range of records which was deleted
      390     3022                           contained %U1 records.
      391     3023        */
      392     3024        /**/
      393     3025    1   EXEC_DE_ERR:
      394     3026    1        RETURN;

   3026  8 000446   000000 702200 xent  EXEC_DE_ERR  TSX2  ! X66_ARET

      395     3027        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:76   
      396     3028        /**/
      397     3029    1   VER$EXEC_FD: ENTRY;

   3029  8 000447   000000 700200 xent  VER$EXEC_FD  TSX0  ! X66_AUTO_0
         8 000450   000012 000000                    ZERO    10,0

      398     3030        /**/
      399     3031    1        CALL VEX$DELREC(M$FILE_NUM,LAST_KEY,0) ALTRET(EXEC_FD_ERR);

   3031  8 000451   000031 630400 9                  EPPR0   25
         8 000452   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000453   000000 701000 xent               TSX1    VEX$DELREC
         8 000454   000461 702000 8                  TSX2    EXEC_FD_ERR

      400     3032    1        DELREC_COUNT = DELREC_COUNT + 1;

   3032  8 000455   000000 235000 xsym               LDA     DELREC_COUNT
         8 000456   000001 035007                    ADLA    1,DL
         8 000457   000000 755000 xsym               STA     DELREC_COUNT

      401     3033    1        RETURN;

   3033  8 000460   000000 702200 xent               TSX2  ! X66_ARET

      402     3034        /**/
      403     3035    1   EXEC_FD_ERR:
      404     3036    1        RETURN;

   3036  8 000461   000000 702200 xent  EXEC_FD_ERR  TSX2  ! X66_ARET

      405     3037        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:77   
      406     3038        /**/
      407     3039    1   VER$EXEC_FS: ENTRY;

   3039  8 000462   000000 700200 xent  VER$EXEC_FS  TSX0  ! X66_AUTO_0
         8 000463   000012 000000                    ZERO    10,0

      408     3040        /**/
      409     3041    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);

   3041  8 000464   000007 630400 9                  EPPR0   7
         8 000465   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000466   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 000467   000000 011000                    NOP     0

      410     3042    1        TYPE_BUF.TEXT = SEQ_TEXT_BUF;

   3042  8 000470   040000 100400                    MLR     fill='040'O
         8 000471   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         8 000472   000000 202104 xsym               ADSC9   TYPE_BUF                 cn=1,n=1092

      411     3043    1        CALL VEX$TYPE_REC(TYPECR);

   3043  8 000473   000003 630400 9                  EPPR0   3
         8 000474   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000475   000000 701000 xent               TSX1    VEX$TYPE_REC
         8 000476   000000 011000                    NOP     0

      412     3044    1        RETURN;

   3044  8 000477   000000 702200 xent               TSX2  ! X66_ARET

      413     3045        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:78   
      414     3046        /**/
      415     3047    1   VER$EXEC_IN: ENTRY;

   3047  8 000500   000000 700200 xent  VER$EXEC_IN  TSX0  ! X66_AUTO_0
         8 000501   000012 000000                    ZERO    10,0

      416     3048        /**/
      417     3049    1        EXEC_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM; /* BEGINING SEQNUM        */

   3049  8 000502   000000 470400 xsym               LDP0    CMD$
         8 000503   000001 235100                    LDA     1,,PR0
         8 000504   000000 755000 xsym               STA     EXEC_SEQNUM

      418     3050    1        INCR = CMD$ -> IN_CMD_TBL.HI_SEQNUM;

   3050  8 000505   000002 235100                    LDA     2,,PR0
         8 000506   000000 755000 xsym               STA     INCR

      419     3051        /**/
      420     3052    1        IF (CMD_CODE = APCMD)  OR (FLAGS.CONSEC_MODE) OR

   3052  8 000507   000000 236000 xsym               LDQ     CMD_CODE
         8 000510   000053 116007                    CMPQ    43,DL
         8 000511   000522 600000 8                  TZE     s:3055
         8 000512   000000 236000 xsym               LDQ     FLAGS
         8 000513   002000 316003                    CANQ    1024,DU
         8 000514   000522 601000 8                  TNZ     s:3055
         8 000515   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 000516   000000 116000 xsym               CMPQ    MAX_SEQNUM
         8 000517   000571 601000 8                  TNZ     s:3081
         8 000520   000003 235100                    LDA     3,,PR0
         8 000521   000571 601000 8                  TNZ     s:3081

      421     3053    1           ((EXEC_SEQNUM = MAX_SEQNUM) AND (CMD$ -> IN_CMD_TBL.START_SPEC = 0))
      422     3054    2        THEN DO;

      423     3055    2           PREC_REV_FPT.V.N# = BITBIN('377777777777'O); /* SKIP TO EOF        */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:79   

   3055  8 000522   000031 235000 xsym               LDA     B_VECTNIL+25
         8 000523   000147 755000 2                  STA     PREC_REV_FPT+7

      424     3056    2           PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;

   3056  8 000524   000046 237000 9                  LDAQ    38
         8 000525   000142 757000 2                  STAQ    PREC_REV_FPT+2

      425     3057    2           CALL M$PRECORD(PREC_REV_FPT) ALTRET(EXEC_IN_EOF);

   3057  8 000526   000140 630400 2                  EPPR0   PREC_REV_FPT
         8 000527   440003 713400                    CLIMB   alt,+16387
         8 000530   401000 401760                    pmme    nvectors=3
         8 000531   000532 702000 8                  TSX2    EXEC_IN_EOF

      426     3058        /**/
      427     3059    2   EXEC_IN_EOF:
      428     3060    2           PREC_REV_FPT.V.N# = -1;

   3060  8 000532   000001 335007       EXEC_IN_EOF  LCA     1,DL
         8 000533   000147 755000 2                  STA     PREC_REV_FPT+7

      429     3061    2           CALL M$PRECORD(PREC_REV_FPT) ALTRET (IN_PREC_ERR);

   3061  8 000534   000140 630400 2                  EPPR0   PREC_REV_FPT
         8 000535   440003 713400                    CLIMB   alt,+16387
         8 000536   401000 401760                    pmme    nvectors=3
         8 000537   001062 702000 8                  TSX2    IN_PREC_ERR

      430     3062    2           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN

   3062  8 000540   000000 236000 xsym               LDQ     FLAGS
         8 000541   002000 316003                    CANQ    1024,DU
         8 000542   000545 601000 8                  TNZ     s:3063
         8 000543   400000 316007                    CANQ    -131072,DL
         8 000544   000551 600000 8                  TZE     AP_PRECOK
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:80   

      431     3063    2              LAST_KEY = (LAST_KEY * 1000) + Y003;

   3063  8 000545   000000 236000 xsym               LDQ     LAST_KEY
         8 000546   001750 402007                    MPY     1000,DL
         8 000547   000000 036000 xsym               ADLQ    Y003
         8 000550   000000 756000 xsym               STQ     LAST_KEY

      432     3064    2   AP_PRECOK:
      433     3065    3           IF (LAST_KEY + INCR > MAX_SEQNUM) THEN DO;

   3065  8 000551   000000 236000 xsym  AP_PRECOK    LDQ     LAST_KEY
         8 000552   000000 036000 xsym               ADLQ    INCR
         8 000553   000000 116000 xsym               CMPQ    MAX_SEQNUM
         8 000554   000563 602000 8                  TNC     s:3077
         8 000555   000563 600000 8                  TZE     s:3077

      434     3066    3   NOROOM:
      435     3067    3              CALL VEX$ERROR(E$E_NOROOM,3);

   3067  8 000556   000051 630400 9     NOROOM       EPPR0   41
         8 000557   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000560   000000 701000 xent               TSX1    VEX$ERROR
         8 000561   000000 011000                    NOP     0

      436     3068    3              RETURN;

   3068  8 000562   000000 702200 xent               TSX2  ! X66_ARET

      437     3069    3              END;
      438     3070        /**/
      439     3071        /*E*     ERROR:    VEE-E$E_NOROOM-0
      440     3072                 MESSAGE:  No room to insert records
      441     3073                 DESCRIPTION: THE HOLE TO PUT RECORDS IN HASN'T EVEN ENOUGH
      442     3074                           ROOM FOR A SINGLE ONE         */
      443     3075        /**/
      444     3076    3           ELSE DO;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:81   

      445     3077    3              EXEC_SEQNUM = LAST_KEY + INCR;

   3077  8 000563   000000 236000 xsym               LDQ     LAST_KEY
         8 000564   000000 036000 xsym               ADLQ    INCR
         8 000565   000000 756000 xsym               STQ     EXEC_SEQNUM

      446     3078    3              CMD$ -> IN_CMD_TBL.LO_SEQNUM = EXEC_SEQNUM;

   3078  8 000566   000000 470400 xsym               LDP0    CMD$
         8 000567   000001 756100                    STQ     1,,PR0

      447     3079    3              END;

      448     3080    2           END;

   3080  8 000570   000662 710000 8                  TRA     s:3107

      449     3081    2        ELSE IF (CMD_CODE = IACMD) THEN DO;

   3081  8 000571   000000 235000 xsym               LDA     CMD_CODE
         8 000572   000051 115007                    CMPA    41,DL
         8 000573   000627 601000 8                  TNZ     s:3096

      450     3082    3              IF INCR = 0 THEN DO ;

   3082  8 000574   000000 235000 xsym               LDA     INCR
         8 000575   000603 601000 8                  TNZ     s:3090

      451     3083    3                 CALL VEX$ERROR( E$E_BADINCR,3);

   3083  8 000576   000054 630400 9                  EPPR0   44
         8 000577   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000600   000000 701000 xent               TSX1    VEX$ERROR
         8 000601   000000 011000                    NOP     0

      452     3084    3                 GOTO EXEC_IN_ERR ;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:82   

   3084  8 000602   001061 710000 8                  TRA     EXEC_IN_ERR

      453     3085    3                 END ;                     /* THEN DO                   */
      454     3086        /**/
      455     3087        /*E*     ERROR:    VEE-E$E_BADINCR-0
      456     3088                 DESCRIPTION: An increment of 0 was input for IA command.
      457     3089        */
      458     3090    2              CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_IN_ERR);

   3090  8 000603   000000 630400 9                  EPPR0   0
         8 000604   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000605   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 000606   001061 702000 8                  TSX2    EXEC_IN_ERR

      459     3091    2              CALL VEX$GET_NEXT_KEY ALTRET(EXEC_IN_ERR);

   3091  8 000607   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000610   000000 701000 xent               TSX1    VEX$GET_NEXT_KEY
         8 000611   001061 702000 8                  TSX2    EXEC_IN_ERR

      460     3092    2              IF (~FLAGS.EOF)AND(EXEC_SEQNUM + INCR >= LAST_KEY) THEN GOTO NOROOM;

   3092  8 000612   000000 236000 xsym               LDQ     FLAGS
         8 000613   000005 736000                    QLS     5
         8 000614   400000 376003                    ANQ     -131072,DU
         8 000615   400000 676003                    ERQ     -131072,DU
         8 000616   000623 600000 8                  TZE     s:3093
         8 000617   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 000620   000000 036000 xsym               ADLQ    INCR
         8 000621   000000 116000 xsym               CMPQ    LAST_KEY
         8 000622   000556 603000 8                  TRC     NOROOM

      461     3093    2              ELSE EXEC_SEQNUM = EXEC_SEQNUM + INCR;

   3093  8 000623   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 000624   000000 036000 xsym               ADLQ    INCR
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:83   
         8 000625   000000 756000 xsym               STQ     EXEC_SEQNUM

      462     3094    2              END;

   3094  8 000626   000662 710000 8                  TRA     s:3107

      463     3095        /**/
      464     3096    2           ELSE IF (CMD_CODE = IBCMD) THEN DO;

   3096  8 000627   000052 115007                    CMPA    42,DL
         8 000630   000662 601000 8                  TNZ     s:3107

      465     3097    2                 CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_IN_ERR);

   3097  8 000631   000000 630400 9                  EPPR0   0
         8 000632   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000633   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 000634   001061 702000 8                  TSX2    EXEC_IN_ERR

      466     3098    2                 IF (FLAGS.EXISTS) THEN PREC_REV_FPT.V.N# = -2;

   3098  8 000635   000000 236000 xsym               LDQ     FLAGS
         8 000636   020000 316003                    CANQ    8192,DU
         8 000637   000643 600000 8                  TZE     s:3099

   3098  8 000640   000002 335007                    LCA     2,DL
         8 000641   000147 755000 2                  STA     PREC_REV_FPT+7
         8 000642   000645 710000 8                  TRA     s:3100

      467     3099    2                 ELSE PREC_REV_FPT.V.N# = -1;

   3099  8 000643   000001 335007                    LCA     1,DL
         8 000644   000147 755000 2                  STA     PREC_REV_FPT+7

      468     3100    2                 PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;

   3100  8 000645   000046 237000 9                  LDAQ    38
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:84   
         8 000646   000142 757000 2                  STAQ    PREC_REV_FPT+2

      469     3101    2                 CALL M$PRECORD(PREC_REV_FPT) ALTRET(IN_PREC_ERR);

   3101  8 000647   000140 630400 2                  EPPR0   PREC_REV_FPT
         8 000650   440003 713400                    CLIMB   alt,+16387
         8 000651   401000 401760                    pmme    nvectors=3
         8 000652   001062 702000 8                  TSX2    IN_PREC_ERR

      470     3102        /**/
      471     3103    2   IN_PRECOK:
      472     3104    2                 IF (LAST_KEY + INCR >= EXEC_SEQNUM) THEN GOTO NOROOM;

   3104  8 000653   000000 236000 xsym  IN_PRECOK    LDQ     LAST_KEY
         8 000654   000000 036000 xsym               ADLQ    INCR
         8 000655   000000 116000 xsym               CMPQ    EXEC_SEQNUM
         8 000656   000556 603000 8                  TRC     NOROOM

      473     3105    2                 EXEC_SEQNUM = LAST_KEY + INCR;

   3105  8 000657   000000 236000 xsym               LDQ     LAST_KEY
         8 000660   000000 036000 xsym               ADLQ    INCR
         8 000661   000000 756000 xsym               STQ     EXEC_SEQNUM

      474     3106    2                 END;

      475     3107    1        CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_IN_ERR);

   3107  8 000662   000000 630400 9                  EPPR0   0
         8 000663   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000664   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 000665   001061 702000 8                  TSX2    EXEC_IN_ERR

      476     3108    2        IF ((FLAGS.EXISTS) AND (CMD_CODE = IPCMD)) THEN DO; /* TEST PROTECTED MODE */

   3108  8 000666   000000 236000 xsym               LDQ     FLAGS
         8 000667   020000 316003                    CANQ    8192,DU
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:85   
         8 000670   000704 600000 8                  TZE     s:3120
         8 000671   000000 235000 xsym               LDA     CMD_CODE
         8 000672   000047 115007                    CMPA    39,DL
         8 000673   000704 601000 8                  TNZ     s:3120

      477     3109    2           CALL VEX$ERROR(E$E_RECEXTS,2);  /* RECORD EXISTS                    */

   3109  8 000674   000057 630400 9                  EPPR0   47
         8 000675   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 000676   000000 701000 xent               TSX1    VEX$ERROR
         8 000677   000000 011000                    NOP     0

      478     3110    2           HI_SEQNUM = EXEC_SEQNUM ;

   3110  8 000700   000000 235000 xsym               LDA     EXEC_SEQNUM
         8 000701   000000 755000 xsym               STA     HI_SEQNUM

      479     3111    2           LO_SEQNUM = EXEC_SEQNUM ;

   3111  8 000702   000000 755000 xsym               STA     LO_SEQNUM

      480     3112    2           RETURN;

   3112  8 000703   000000 702200 xent               TSX2  ! X66_ARET

      481     3113    2           END;
      482     3114        /**/
      483     3115        /*E*     ERROR:    VEE-E$E_RECEXTS-0
      484     3116                 MESSAGE:  Record exists
      485     3117                 DESCRIPTION: Cannot insert (IP) this record - it exists.
      486     3118        */
      487     3119        /**/
      488     3120    1        IF NOT (CMD_CODE = APCMD AND FLAGS.CONSEC_MODE)

   3120  8 000704   000000 235000 xsym               LDA     CMD_CODE
         8 000705   000053 115007                    CMPA    43,DL
         8 000706   000711 601000 8                  TNZ     s:3122
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:86   
         8 000707   002000 316003                    CANQ    1024,DU
         8 000710   000715 601000 8                  TNZ     s:3124

      489     3121    1        THEN
      490     3122    1           CALL VEX$GET_NEXT_KEY ALTRET (EXEC_IN_ERR); /* SET LIMIT      */

   3122  8 000711   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 000712   000000 701000 xent               TSX1    VEX$GET_NEXT_KEY
         8 000713   001061 702000 8                  TSX2    EXEC_IN_ERR
         8 000714   000717 710000 8                  TRA     s:3125

      491     3123    1        ELSE
      492     3124    1           FLAGS.EOF = TRUE ;

   3124  8 000715   010000 236003                    LDQ     4096,DU
         8 000716   000000 256000 xsym               ORSQ    FLAGS

      493     3125    1        FLAGS.BADKEY = '0'B ;

   3125  8 000717   000061 236000 9                  LDQ     49
         8 000720   000001 356000 xsym               ANSQ    FLAGS+1

      494     3126    2        IF (FLAGS.EOF) THEN DO;

   3126  8 000721   000000 236000 xsym               LDQ     FLAGS
         8 000722   010000 316003                    CANQ    4096,DU
         8 000723   000731 600000 8                  TZE     s:3130

      495     3127    2           FLAGS.EOF = FALSE;

   3127  8 000724   000062 236000 9                  LDQ     50
         8 000725   000000 356000 xsym               ANSQ    FLAGS

      496     3128    2           HI_SEQNUM = MAX_SEQNUM;

   3128  8 000726   000000 235000 xsym               LDA     MAX_SEQNUM
         8 000727   000000 755000 xsym               STA     HI_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:87   

      497     3129    2           END;

   3129  8 000730   000734 710000 8                  TRA     s:3132

      498     3130    1        ELSE HI_SEQNUM= LAST_KEY-1;

   3130  8 000731   000000 235000 xsym               LDA     LAST_KEY
         8 000732   000001 135007                    SBLA    1,DL
         8 000733   000000 755000 xsym               STA     HI_SEQNUM

      499     3131        /**/
      500     3132    1        REMAIN = 0; /* How much we have to ROUND EXEC_SEQNUM to get even value */

   3132  8 000734   200005 450100                    STZ     REMAIN,,AUTO

      501     3133    2        DO WHILE (EXEC_SEQNUM <= HI_SEQNUM);

   3133  8 000735   000000 236000 xsym               LDQ     HI_SEQNUM
         8 000736   000000 116000 xsym               CMPQ    EXEC_SEQNUM
         8 000737   001037 602000 8                  TNC     s:3158

      502     3134    2           CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM);

   3134  8 000740   000000 630400 9                  EPPR0   0
         8 000741   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000742   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 000743   000000 011000                    NOP     0

      503     3135    2           IF (CMD_CODE = ISCMD) THEN CALL VEX$SET_PROMPT(PR_PERIOD);

   3135  8 000744   000000 235000 xsym               LDA     CMD_CODE
         8 000745   000050 115007                    CMPA    40,DL
         8 000746   000754 601000 8                  TNZ     s:3136

   3135  8 000747   000052 630400 9                  EPPR0   42
         8 000750   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:88   
         8 000751   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 000752   000000 011000                    NOP     0
         8 000753   000760 710000 8                  TRA     s:3138

      504     3136    2           ELSE CALL VEX$SET_PROMPT(PR_SEQNUM);

   3136  8 000754   000025 630400 9                  EPPR0   21
         8 000755   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 000756   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 000757   000000 011000                    NOP     0

      505     3137        /**/
      506     3138    2           CALL VEX$READ_TERM_REC(REC_BUF,REC_SIZE,SIZEC(REC_BUF))

   3138  8 000760   000064 630400 9                  EPPR0   52
         8 000761   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 000762   000000 701000 xent               TSX1    VEX$READ_TERM_REC
         8 000763   001061 702000 8                  TSX2    EXEC_IN_ERR

      507     3139    2              ALTRET(EXEC_IN_ERR);
      508     3140    3           IF (REC_SIZE = 0) THEN DO;

   3140  8 000764   000000 235000 xsym               LDA     REC_SIZE
         8 000765   001002 601000 8                  TNZ     s:3147

      509     3141    3              IF (EXEC_SEQNUM > CMD$ -> IN_CMD_TBL.LO_SEQNUM)OR

   3141  8 000766   000000 470400 xsym               LDP0    CMD$
         8 000767   000001 236100                    LDQ     1,,PR0
         8 000770   000000 116000 xsym               CMPQ    EXEC_SEQNUM
         8 000771   000775 602000 8                  TNC     s:3143
         8 000772   000000 235000 xsym               LDA     CMD_CODE
         8 000773   000052 115007                    CMPA    42,DL
         8 000774   001001 601000 8                  TNZ     s:3144

      510     3142    3                 (CMD_CODE = IBCMD) THEN
      511     3143    3                 EXEC_SEQNUM = EXEC_SEQNUM - INCR + REMAIN; /* Add Round amount */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:89   

   3143  8 000775   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 000776   000000 136000 xsym               SBLQ    INCR
         8 000777   200005 036100                    ADLQ    REMAIN,,AUTO
         8 001000   000000 756000 xsym               STQ     EXEC_SEQNUM

      512     3144    3              GOTO EXEC_IN_1;

   3144  8 001001   001052 710000 8                  TRA     EXEC_IN_1

      513     3145    3              END;
      514     3146        /**/
      515     3147    2           RP_REC_SIZE = REC_SIZE;

   3147  8 001002   000000 755000 xsym               STA     RP_REC_SIZE

      516     3148    2           DVBYTE = '0'B ;

   3148  8 001003   000000 450000 xsym               STZ     DVBYTE

      517     3149        /**/
      518     3150    2           CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET (EXEC_IN_ERR);

   3150  8 001004   000067 630400 9                  EPPR0   55
         8 001005   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001006   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 001007   001061 702000 8                  TSX2    EXEC_IN_ERR

      519     3151    2           IF INCR = 0 THEN GOTO EXEC_IN_1 ;

   3151  8 001010   000000 235000 xsym               LDA     INCR
         8 001011   001052 600000 8                  TZE     EXEC_IN_1

      520     3152    2           IF (FLAGS.ROUNDFLAG)

   3152  8 001012   000001 236000 xsym               LDQ     FLAGS+1
         8 001013   020000 316003                    CANQ    8192,DU
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:90   
         8 001014   001027 600000 8                  TZE     s:3154

      521     3153    2           THEN REMAIN = MOD((EXEC_SEQNUM+INCR-Y003),INCR);/* get Round amount */

   3153  8 001015   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 001016   000000 036000 xsym               ADLQ    INCR
         8 001017   000000 136000 xsym               SBLQ    Y003
         8 001020   000000 115003                    CMPA    0,DU
         8 001021   001024 605000 8                  TPL     s:3153+7
         8 001022   000044 737000                    LLS     36
         8 001023   001025 710000 8                  TRA     s:3153+8
         8 001024   000000 506000 xsym               DIV     INCR
         8 001025   200005 755100                    STA     REMAIN,,AUTO
         8 001026   001030 710000 8                  TRA     s:3155

      522     3154    2           ELSE REMAIN = 0;

   3154  8 001027   200005 450100                    STZ     REMAIN,,AUTO

      523     3155    2           EXEC_SEQNUM = EXEC_SEQNUM + INCR - REMAIN; /* subtract round amount */

   3155  8 001030   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 001031   000000 036000 xsym               ADLQ    INCR
         8 001032   200005 136100                    SBLQ    REMAIN,,AUTO
         8 001033   000000 756000 xsym               STQ     EXEC_SEQNUM

      524     3156    2           END;

   3156  8 001034   000000 116000 xsym               CMPQ    HI_SEQNUM
         8 001035   000740 602000 8                  TNC     s:3134
         8 001036   000740 600000 8                  TZE     s:3134

      525     3157        /**/
      526     3158    1        IF (EXEC_SEQNUM > MAX_SEQNUM) THEN CALL VEX$ERROR(E$E_MAXSEQ,1);

   3158  8 001037   000000 236000 xsym               LDQ     MAX_SEQNUM
         8 001040   000000 116000 xsym               CMPQ    EXEC_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:91   
         8 001041   001046 603000 8                  TRC     s:3164

   3158  8 001042   000072 630400 9                  EPPR0   58
         8 001043   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001044   000000 701000 xent               TSX1    VEX$ERROR
         8 001045   000000 011000                    NOP     0

      527     3159        /**/
      528     3160        /*E*     ERROR:    VEE-E$E_MAXSEQ-0
      529     3161                 DESCRIPTION: The max. sequence number was exceeded durring
      530     3162                           an INSERT operation.
      531     3163        */
      532     3164    1        EXEC_SEQNUM = EXEC_SEQNUM - INCR + REMAIN; /* Added round amount */

   3164  8 001046   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 001047   000000 136000 xsym               SBLQ    INCR
         8 001050   200005 036100                    ADLQ    REMAIN,,AUTO
         8 001051   000000 756000 xsym               STQ     EXEC_SEQNUM

      533     3165        /**/
      534     3166    1   EXEC_IN_1:                              /* SET SELECTION TO LAST RECORD       */
      535     3167    1        CALL VEX$CLMN_DFLT;

   3167  8 001052   000002 631400 xsym  EXEC_IN_1    EPPR1   B_VECTNIL+2
         8 001053   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 001054   000000 011000                    NOP     0

      536     3168    1        LO_SEQNUM = EXEC_SEQNUM;

   3168  8 001055   000000 235000 xsym               LDA     EXEC_SEQNUM
         8 001056   000000 755000 xsym               STA     LO_SEQNUM

      537     3169    1        HI_SEQNUM = EXEC_SEQNUM;

   3169  8 001057   000000 755000 xsym               STA     HI_SEQNUM

      538     3170    1        RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:92   

   3170  8 001060   000000 702200 xent               TSX2  ! X66_ARET

      539     3171        /**/
      540     3172    1   EXEC_IN_ERR:
      541     3173    1        RETURN;

   3173  8 001061   000000 702200 xent  EXEC_IN_ERR  TSX2  ! X66_ARET

      542     3174        /**/
      543     3175    1   IN_PREC_ERR:
      544     3176    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN DO;

   3176  8 001062   000000 470400 xsym  IN_PREC_ERR  LDP0    B$TCB$
         8 001063   000000 471500                    LDP1    0,,PR0
         8 001064   100102 236100                    LDQ     66,,PR1
         8 001065   377770 376007                    ANQ     131064,DL
         8 001066   000040 116007                    CMPQ    32,DL
         8 001067   001076 601000 8                  TNZ     s:3181

      545     3177    2           LAST_KEY = Y003;

   3177  8 001070   000000 235000 xsym               LDA     Y003
         8 001071   000000 755000 xsym               STA     LAST_KEY

      546     3178    2           IF (CMD_CODE = APCMD) THEN GOTO AP_PRECOK ;

   3178  8 001072   000000 236000 xsym               LDQ     CMD_CODE
         8 001073   000053 116007                    CMPQ    43,DL
         8 001074   000551 600000 8                  TZE     AP_PRECOK

      547     3179    2           GOTO IN_PRECOK;

   3179  8 001075   000653 710000 8                  TRA     IN_PRECOK

      548     3180    2           END;
      549     3181    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BADVECT1) THEN DO;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:93   

   3181  8 001076   006450 116007                    CMPQ    3368,DL
         8 001077   001106 601000 8                  TNZ     s:3186

      550     3182    2           ADDR(LAST_KEY) -> VARY$STRC.CNT = 3 ;

   3182  8 001100   003000 236003                    LDQ     1536,DU
         8 001101   000000 552040 xsym               STBQ    LAST_KEY,'40'O

      551     3183    2           IF CMD_CODE = APCMD THEN GOTO AP_PRECOK ;

   3183  8 001102   000000 235000 xsym               LDA     CMD_CODE
         8 001103   000053 115007                    CMPA    43,DL
         8 001104   000551 600000 8                  TZE     AP_PRECOK

      552     3184    2           GOTO IN_PRECOK ;

   3184  8 001105   000653 710000 8                  TRA     IN_PRECOK

      553     3185    2           END ;                           /* THEN DO */
      554     3186    1        CALL VEX$ERROR(0,3);

   3186  8 001106   000074 630400 9                  EPPR0   60
         8 001107   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001110   000000 701000 xent               TSX1    VEX$ERROR
         8 001111   000000 011000                    NOP     0

      555     3187    1        RETURN;

   3187  8 001112   000000 702200 xent               TSX2  ! X66_ARET

      556     3188        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:94   
      557     3189        /**/
      558     3190    1   VER$EXEC_MK: ENTRY;

   3190  8 001113   000000 700200 xent  VER$EXEC_MK  TSX0  ! X66_AUTO_0
         8 001114   000012 000000                    ZERO    10,0

      559     3191        /**/
      560     3192    1        CALL M$INT(BREAKMK_FPT);

   3192  8 001115   000034 630400 1                  EPPR0   BREAKMK_FPT
         8 001116   010002 713400                    CLIMB   4098
         8 001117   400000 401760                    pmme    nvectors=1

      561     3193    1        READ_KEY = CMD$ -> MK_CMD_TBL.LO_SEQNUM;

   3193  8 001120   000000 470400 xsym               LDP0    CMD$
         8 001121   000001 235100                    LDA     1,,PR0
         8 001122   000000 755000 xsym               STA     READ_KEY

      562     3194    1        LIMIT_SEQNUM = CMD$ -> MK_CMD_TBL.HI_SEQNUM; /* INITALIZE RANGES      */

   3194  8 001123   000002 235100                    LDA     2,,PR0
         8 001124   000000 755000 xsym               STA     LIMIT_SEQNUM

      563     3195    1        EXEC_SEQNUM = CMD$ -> MK_CMD_TBL.LO_SEQNUM2;

   3195  8 001125   000003 235100                    LDA     3,,PR0
         8 001126   000000 755000 xsym               STA     EXEC_SEQNUM

      564     3196    1        LO_SEQNUM = EXEC_SEQNUM;

   3196  8 001127   000000 755000 xsym               STA     LO_SEQNUM

      565     3197    1        HI_SEQNUM = CMD$ -> MK_CMD_TBL.HI_SEQNUM2;

   3197  8 001130   000004 235100                    LDA     4,,PR0
         8 001131   000000 755000 xsym               STA     HI_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:95   

      566     3198    1        INCR = CMD$ -> MK_CMD_TBL.INCR;

   3198  8 001132   000005 235100                    LDA     5,,PR0
         8 001133   000000 755000 xsym               STA     INCR

      567     3199    1        CALL VEX$CLMN_DFLT;                /* RESET COLUMN RANGE                 */

   3199  8 001134   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 001135   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 001136   000000 011000                    NOP     0

      568     3200        /**/
      569     3201    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET (EXEC_MK_ERR);

   3201  8 001137   000024 630400 9                  EPPR0   20
         8 001140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 001141   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 001142   002023 702000 8                  TSX2    EXEC_MK_ERR

      570     3202    2        IF (~FLAGS.EXISTS) THEN DO;        /* GET FIRST FROM RECORD              */

   3202  8 001143   000000 236000 xsym               LDQ     FLAGS
         8 001144   000004 736000                    QLS     4
         8 001145   400000 376003                    ANQ     -131072,DU
         8 001146   400000 676003                    ERQ     -131072,DU
         8 001147   001170 600000 8                  TZE     s:3215

      571     3203    2           CALL VEX$GET_NEXT_KEY ALTRET (EXEC_MK_ERR);

   3203  8 001150   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 001151   000000 701000 xent               TSX1    VEX$GET_NEXT_KEY
         8 001152   002023 702000 8                  TSX2    EXEC_MK_ERR

      572     3204    3           IF ((FLAGS.EOF) OR (LAST_KEY > LIMIT_SEQNUM)) THEN DO;

   3204  8 001153   000000 236000 xsym               LDQ     FLAGS
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:96   
         8 001154   010000 316003                    CANQ    4096,DU
         8 001155   001161 601000 8                  TNZ     s:3205
         8 001156   000000 236000 xsym               LDQ     LIMIT_SEQNUM
         8 001157   000000 116000 xsym               CMPQ    LAST_KEY
         8 001160   001166 603000 8                  TRC     s:3213

      573     3205    3              CALL VEX$ERROR(E$E_NOMOVE,2); /* NOTHING TO MOVE                */

   3205  8 001161   000077 630400 9                  EPPR0   63
         8 001162   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001163   000000 701000 xent               TSX1    VEX$ERROR
         8 001164   000000 011000                    NOP     0

      574     3206    3              RETURN;

   3206  8 001165   000000 702200 xent               TSX2  ! X66_ARET

      575     3207    3              END;
      576     3208        /**/
      577     3209        /*E*     ERROR:    VEE-E$E_NOMOVE-0
      578     3210                 DESCRIPTION: An attempt was made to MK/MD records in a file
      579     3211                           and the file has no records in the specified range.
      580     3212        */
      581     3213    2           READ_KEY = LAST_KEY;            /* REMEMBER POSITION                  */

   3213  8 001166   000000 235000 xsym               LDA     LAST_KEY
         8 001167   000000 755000 xsym               STA     READ_KEY

      582     3214    2           END;

      583     3215    1        SAVE_KEY = READ_KEY ;

   3215  8 001170   000000 235000 xsym               LDA     READ_KEY
         8 001171   000000 755000 xsym               STA     SAVE_KEY

      584     3216        /**/
      585     3217    2        IF (CMD_CODE = MDPCMD)OR(CMD_CODE = MKPCMD) THEN DO; /* PROTECTED*/
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:97   

   3217  8 001172   000000 236000 xsym               LDQ     CMD_CODE
         8 001173   000043 116007                    CMPQ    35,DL
         8 001174   001177 600000 8                  TZE     s:3218
         8 001175   000042 116007                    CMPQ    34,DL
         8 001176   001233 601000 8                  TNZ     s:3233

      586     3218    2           CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_MK_ERR);

   3218  8 001177   000000 630400 9                  EPPR0   0
         8 001200   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 001201   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 001202   002023 702000 8                  TSX2    EXEC_MK_ERR

      587     3219    3           IF (FLAGS.EXISTS) THEN DO;

   3219  8 001203   000000 236000 xsym               LDQ     FLAGS
         8 001204   020000 316003                    CANQ    8192,DU
         8 001205   001213 600000 8                  TZE     s:3223

      588     3220    3              CALL VEX$ERROR(E$E_RECEXTS,3);

   3220  8 001206   000101 630400 9                  EPPR0   65
         8 001207   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001210   000000 701000 xent               TSX1    VEX$ERROR
         8 001211   000000 011000                    NOP     0

      589     3221    3              RETURN;

   3221  8 001212   000000 702200 xent               TSX2  ! X66_ARET

      590     3222    3              END;
      591     3223    2           CALL VEX$GET_NEXT_KEY ALTRET(EXEC_MK_ERR);

   3223  8 001213   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 001214   000000 701000 xent               TSX1    VEX$GET_NEXT_KEY
         8 001215   002023 702000 8                  TSX2    EXEC_MK_ERR
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:98   

      592     3224    3           IF ((LAST_KEY <= HI_SEQNUM) AND (~FLAGS.EOF)) THEN DO;

   3224  8 001216   000000 236000 xsym               LDQ     HI_SEQNUM
         8 001217   000000 116000 xsym               CMPQ    LAST_KEY
         8 001220   001233 602000 8                  TNC     s:3233
         8 001221   000000 236000 xsym               LDQ     FLAGS
         8 001222   000005 736000                    QLS     5
         8 001223   400000 376003                    ANQ     -131072,DU
         8 001224   400000 676003                    ERQ     -131072,DU
         8 001225   001233 600000 8                  TZE     s:3233

      593     3225    3              CALL VEX$ERROR(E$E_RECEXTS,3);

   3225  8 001226   000101 630400 9                  EPPR0   65
         8 001227   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001230   000000 701000 xent               TSX1    VEX$ERROR
         8 001231   000000 011000                    NOP     0

      594     3226    3              RETURN;

   3226  8 001232   000000 702200 xent               TSX2  ! X66_ARET

      595     3227    3              END ;                        /* THEN DO */
      596     3228    2           END;
      597     3229        /**/
      598     3230        /*E*    ERROR:   VEE-E$E_RECEXTS-0
      599     3231                DESCRIPTION: RECORD EXISTS IN PROTECTED MODE */
      600     3232        /**/
      601     3233    1        REC_COUNT = 0;                     /* DELETE 'TO' RANGE                  */

   3233  8 001233   000000 450000 xsym               STZ     REC_COUNT

      602     3234    1        CALL VEX$DELREC(M$FILE_NUM,EXEC_SEQNUM,HI_SEQNUM) ALTRET(EXEC_MK_ERR);

   3234  8 001234   000103 630400 9                  EPPR0   67
         8 001235   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:99   
         8 001236   000000 701000 xent               TSX1    VEX$DELREC
         8 001237   002023 702000 8                  TSX2    EXEC_MK_ERR

      603     3235    1        REC_COUNT = M$FILE$ -> F$DCB.ARS;

   3235  8 001240   000000 470400 xsym               LDP0    M$FILE$
         8 001241   000000 235100                    LDA     0,,PR0
         8 001242   000000 755000 xsym               STA     REC_COUNT

      604     3236    1        CALL VEX$GET_NEXT_KEY ALTRET (EXEC_MK_ERR);

   3236  8 001243   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 001244   000000 701000 xent               TSX1    VEX$GET_NEXT_KEY
         8 001245   002023 702000 8                  TSX2    EXEC_MK_ERR

      605     3237    2        IF (FLAGS.EOF) THEN DO;

   3237  8 001246   000000 236000 xsym               LDQ     FLAGS
         8 001247   010000 316003                    CANQ    4096,DU
         8 001250   001261 600000 8                  TZE     s:3245

      606     3238    2           CALL VEX$ERROR(E$E_EDITEOF,1);  /* EOF HIT                          */

   3238  8 001251   000002 630400 9                  EPPR0   2
         8 001252   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001253   000000 701000 xent               TSX1    VEX$ERROR
         8 001254   000000 011000                    NOP     0

      607     3239        /**/
      608     3240        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      609     3241                 DESCRIPTION: EOF hit in MK/MD operation.
      610     3242        */
      611     3243    2           HI_SEQNUM = MAX_SEQNUM+1;

   3243  8 001255   000000 235000 xsym               LDA     MAX_SEQNUM
         8 001256   000001 035007                    ADLA    1,DL
         8 001257   000000 755000 xsym               STA     HI_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:100  

      612     3244    2           END;

   3244  8 001260   001263 710000 8                  TRA     s:3247

      613     3245    1        ELSE HI_SEQNUM = LAST_KEY;

   3245  8 001261   000000 235000 xsym               LDA     LAST_KEY
         8 001262   000000 755000 xsym               STA     HI_SEQNUM

      614     3246        /**/
      615     3247    2        IF (REC_COUNT > 1) THEN DO;

   3247  8 001263   000000 236000 xsym               LDQ     REC_COUNT
         8 001264   000002 116007                    CMPQ    2,DL
         8 001265   001276 602000 8                  TNC     s:3257

      616     3248    2           CALL VEX$SET_SUB_BUF(SUB_BUF_1,REC_COUNT); /* OUTPUT RECORDS DELETED */

   3248  8 001266   000040 630400 9                  EPPR0   32
         8 001267   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001270   000000 701000 xent               TSX1    VEX$SET_SUB_BUF
         8 001271   000000 011000                    NOP     0

      617     3249    2           CALL VEX$ERROR(E$E_RECSDEL,1);

   3249  8 001272   000043 630400 9                  EPPR0   35
         8 001273   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001274   000000 701000 xent               TSX1    VEX$ERROR
         8 001275   000000 011000                    NOP     0

      618     3250    2           END;

      619     3251        /**/
      620     3252        /*E*     ERROR:    VEE-E$E_RECSDEL-0
      621     3253                 DESCRIPTION: The specified range of records which was deleted
      622     3254                           contained %U1 records.
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:101  
      623     3255        */
      624     3256        /**/
      625     3257    1        REC_COUNT = 0;                     /* MOVE RECORDS                       */

   3257  8 001276   000000 450000 xsym               STZ     REC_COUNT

      626     3258    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET (EXEC_MK_ERR); /* READ FOR POSITION */

   3258  8 001277   000024 630400 9                  EPPR0   20
         8 001300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 001301   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 001302   002023 702000 8                  TSX2    EXEC_MK_ERR

      627     3259        /**/
      628     3260    1        IF (READ_KEY = LIMIT_SEQNUM)OR(INCR=0) THEN GOTO RECMOVE; /* ONLY 1 TO MOVE */

   3260  8 001303   000000 236000 xsym               LDQ     READ_KEY
         8 001304   000000 116000 xsym               CMPQ    LIMIT_SEQNUM
         8 001305   001666 600000 8                  TZE     RECMOVE
         8 001306   000000 235000 xsym               LDA     INCR
         8 001307   001666 600000 8                  TZE     RECMOVE

      629     3261        /**/
      630     3262    1        DS_RESULTS.W2.SEGID# = FALSE;

   3262  8 001310   000000 236003                    LDQ     0,DU
         8 001311   000171 752003 2                  STCQ    DS_RESULTS+1,'03'O

      631     3263    1        CALL M$GDS(MKDS_FPT) ALTRET (MKDS_ERR);

   3263  8 001312   000016 630400 1                  EPPR0   MKDS_FPT
         8 001313   430001 713400                    CLIMB   alt,gds
         8 001314   400400 401760                    pmme    nvectors=2
         8 001315   002024 702000 8                  TSX2    MKDS_ERR

      632     3264        /**/
      633     3265    1   MKDSOK:
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:102  
      634     3266    1        MK_BASE$ = DS_RESULTS.PTR$;

   3266  8 001316   000171 236000 2     MKDSOK       LDQ     DS_RESULTS+1
         8 001317   000000 756000 xsym               STQ     MK_BASE$

      635     3267    1        MK_BOUND$ = PINCRC(MK_BASE$,DS_RESULTS.W1.VSIZE#);

   3267  8 001320   000170 236000 2                  LDQ     DS_RESULTS
         8 001321   000020 772000                    QRL     16
         8 001322   000020 736000                    QLS     16
         8 001323   000000 036000 xsym               ADLQ    MK_BASE$
         8 001324   000000 756000 xsym               STQ     MK_BOUND$

      636     3268    1        MK_WORK$ = PINCRW(MK_BASE$,SIZEW(MK$RECS)); /* PAST CONTROL INFO      */

   3268  8 001325   000000 236000 xsym               LDQ     MK_BASE$
         8 001326   000423 036003                    ADLQ    275,DU
         8 001327   000000 756000 xsym               STQ     MK_WORK$

      637     3269    1        MK_BASE$ -> MK$RECS = FALSE;

   3269  8 001330   000000 470400 xsym               LDP0    MK_BASE$
         8 001331   000100 100400                    MLR     fill='000'O
         8 001332   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         8 001333   000000 002114                    ADSC9   0,,PR0                   cn=0,n=1100

      638     3270    1        MK_COUNT = 0;

   3270  8 001334   000000 450000 xsym               STZ     MK_COUNT

      639     3271    1        FRST2DEL = 0;

   3271  8 001335   000000 450000 xsym               STZ     FRST2DEL

      640     3272        /**/
      641     3273    1   BLOCKSTART:
      642     3274    1        I = MKCOUNTMAX + 1;                /* FLAG FOR BREAK RIUTINE             */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:103  

   3274  8 001336   000144 235007       BLOCKSTART   LDA     100,DL
         8 001337   000000 755000 xsym               STA     I

      643     3275    2        DO WHILE ((LAST_KEY <= LIMIT_SEQNUM)AND(MK_COUNT <= MKCOUNTMAX));

   3275  8 001340   001432 710000 8                  TRA     s:3293

      644     3276    2           IF (REC_SIZE > POFFC(MK_BOUND$,MK_WORK$)) THEN GOTO BLOCKMOVE;

   3276  8 001341   000000 236000 xsym               LDQ     MK_WORK$
         8 001342   000020 772000                    QRL     16
         8 001343   200006 756100                    STQ     REMAIN+1,,AUTO
         8 001344   000000 236000 xsym               LDQ     MK_BOUND$
         8 001345   000020 772000                    QRL     16
         8 001346   200006 136100                    SBLQ    REMAIN+1,,AUTO
         8 001347   001440 604000 8                  TMI     BLOCKMOVE
         8 001350   000000 116000 xsym               CMPQ    REC_SIZE
         8 001351   001440 602000 8                  TNC     BLOCKMOVE

      645     3277    2           CALL INSERT (SUBSTR(MK_WORK$ -> MK$BUF,0,REC_SIZE),0,REC_SIZE,

   3277  8 001352   000000 720000 xsym               LXL0    REC_SIZE
         8 001353   000000 470400 xsym               LDP0    MK_WORK$
         8 001354   040140 100440                    MLR     fill='040'O
         8 001355   000000 000010 xsym               ADSC9   REC_BUF                  cn=0,n=*X0
         8 001356   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      646     3278    2              SUBSTR(REC_BUF,0,REC_SIZE));
      647     3279    2           MK_BASE$ -> MK$RECS.SIZE(MK_COUNT) = REC_SIZE;

   3279  8 001357   000000 470400 xsym               LDP0    MK_BASE$
         8 001360   000000 235000 xsym               LDA     MK_COUNT
         8 001361   000105 101400                    MRL     fill='000'O
         8 001362   000000 000004 xsym               ADSC9   REC_SIZE                 cn=0,n=4
         8 001363   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:104  
      648     3280    2           MK_BASE$ -> MK$RECS.OFFSET(MK_COUNT) = POFFC(MK_WORK$,MK_BASE$);

   3280  8 001364   000000 236000 xsym               LDQ     MK_BASE$
         8 001365   000020 772000                    QRL     16
         8 001366   200006 756100                    STQ     REMAIN+1,,AUTO
         8 001367   000000 236000 xsym               LDQ     MK_WORK$
         8 001370   000020 772000                    QRL     16
         8 001371   200006 136100                    SBLQ    REMAIN+1,,AUTO
         8 001372   200007 756100                    STQ     REMAIN+2,,AUTO
         8 001373   000000 235000 xsym               LDA     MK_COUNT
         8 001374   000001 735000                    ALS     1
         8 001375   000000 470400 xsym               LDP0    MK_BASE$
         8 001376   000105 101500                    MRL     fill='000'O
         8 001377   200007 000004                    ADSC9   REMAIN+2,,AUTO           cn=0,n=4
         8 001400   000031 000002                    ADSC9   25,A,PR0                 cn=0,n=2

      649     3281    2           MK_BASE$ -> MK$RECS.KEY(MK_COUNT) = LAST_KEY;

   3281  8 001401   000000 470400 xsym               LDP0    MK_BASE$
         8 001402   000000 720000 xsym               LXL0    MK_COUNT
         8 001403   000000 235000 xsym               LDA     LAST_KEY
         8 001404   000113 755110                    STA     75,X0,PR0

      650     3282    2           MK_BASE$ -> MK$RECS.DVBYTE(MK_COUNT) = DVBYTE ;

   3282  8 001405   000000 236000 xsym               LDQ     DVBYTE
         8 001406   000000 470400 xsym               LDP0    MK_BASE$
         8 001407   000000 720000 xsym               LXL0    MK_COUNT
         8 001410   000257 756110                    STQ     175,X0,PR0

      651     3283        /**/
      652     3284    2           MK_WORK$ = PINCRC(MK_WORK$,REC_SIZE);

   3284  8 001411   000000 236000 xsym               LDQ     REC_SIZE
         8 001412   000020 736000                    QLS     16
         8 001413   000000 036000 xsym               ADLQ    MK_WORK$
         8 001414   000000 756000 xsym               STQ     MK_WORK$
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:105  

      653     3285    2           MK_COUNT = MK_COUNT + 1;

   3285  8 001415   000000 235000 xsym               LDA     MK_COUNT
         8 001416   000001 035007                    ADLA    1,DL
         8 001417   000000 755000 xsym               STA     MK_COUNT

      654     3286        /**/
      655     3287    2           CALL VEX$READ_SEQUEN ALTRET (EXEC_MK_ERR1);

   3287  8 001420   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 001421   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 001422   002015 702000 8                  TSX2    EXEC_MK_ERR1

      656     3288    3           IF (FLAGS.EOF) THEN DO;

   3288  8 001423   000000 236000 xsym               LDQ     FLAGS
         8 001424   010000 316003                    CANQ    4096,DU
         8 001425   001432 600000 8                  TZE     s:3293

      657     3289    3              LAST_KEY = MAX_SEQNUM + 1;

   3289  8 001426   000000 235000 xsym               LDA     MAX_SEQNUM
         8 001427   000001 035007                    ADLA    1,DL
         8 001430   000000 755000 xsym               STA     LAST_KEY

      658     3290    3              GOTO BLOCKMOVE;

   3290  8 001431   001440 710000 8                  TRA     BLOCKMOVE

      659     3291    3              END;
      660     3292        /**/
      661     3293    2           END;

   3293  8 001432   000000 236000 xsym               LDQ     LIMIT_SEQNUM
         8 001433   000000 116000 xsym               CMPQ    LAST_KEY
         8 001434   001440 602000 8                  TNC     BLOCKMOVE
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:106  
         8 001435   000000 235000 xsym               LDA     MK_COUNT
         8 001436   000144 115007                    CMPA    100,DL
         8 001437   001341 602000 8                  TNC     s:3276

      662     3294        /**/
      663     3295    1   BLOCKMOVE:
      664     3296    1        IF (FRST2DEL > 0) THEN        /* This is a second batch of 100 records */

   3296  8 001440   000000 235000 xsym  BLOCKMOVE    LDA     FRST2DEL
         8 001441   001447 600000 8                  TZE     s:3301

      665     3297    2        DO;

      666     3298    2           FRST2DEL = 0 ;

   3298  8 001442   000000 450000 xsym               STZ     FRST2DEL

      667     3299    2           HI_SEQNUM = MK_BASE$ -> MK$RECS.KEY(FRST2DEL);

   3299  8 001443   000000 470400 xsym               LDP0    MK_BASE$
         8 001444   000000 720000 xsym               LXL0    FRST2DEL
         8 001445   000113 235110                    LDA     75,X0,PR0
         8 001446   000000 755000 xsym               STA     HI_SEQNUM

      668     3300    2           END;

      669     3301    2        DO I = 0 TO MK_COUNT - 1;          /* WRITE TO NEW SLOT                  */

   3301  8 001447   000000 450000 xsym               STZ     I
         8 001450   001613 710000 8                  TRA     s:3331+3

      670     3302    2           MK_WORK$ = PINCRC(MK_BASE$,MK_BASE$ -> MK$RECS.OFFSET(I));

   3302  8 001451   000000 235000 xsym               LDA     I
         8 001452   000001 735000                    ALS     1
         8 001453   000000 470400 xsym               LDP0    MK_BASE$
         8 001454   000100 101505                    MRL     fill='000'O
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:107  
         8 001455   000031 000002                    ADSC9   25,A,PR0                 cn=0,n=2
         8 001456   200006 000004                    ADSC9   REMAIN+1,,AUTO           cn=0,n=4
         8 001457   200006 236100                    LDQ     REMAIN+1,,AUTO
         8 001460   000020 736000                    QLS     16
         8 001461   000000 036000 xsym               ADLQ    MK_BASE$
         8 001462   000000 756000 xsym               STQ     MK_WORK$

      671     3303    2           REC_SIZE = MK_BASE$ -> MK$RECS.SIZE(I);

   3303  8 001463   000000 235000 xsym               LDA     I
         8 001464   000000 101505                    MRL     fill='000'O
         8 001465   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         8 001466   000000 000004 xsym               ADSC9   REC_SIZE                 cn=0,n=4

      672     3304    2           RP_REC_SIZE = REC_SIZE;

   3304  8 001467   000000 235000 xsym               LDA     REC_SIZE
         8 001470   000000 755000 xsym               STA     RP_REC_SIZE

      673     3305    2           REC_BUF = SUBSTR(MK_WORK$-> MK$BUF,0,REC_SIZE);

   3305  8 001471   000000 471400 xsym               LDP1    MK_WORK$
         8 001472   000000 620005                    EAX0    0,AL
         8 001473   040000 100540                    MLR     fill='040'O
         8 001474   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         8 001475   000000 002000 xsym               ADSC9   REC_BUF                  cn=0,n=1024

      674     3306    2           DVBYTE = MK_BASE$ -> MK$RECS.DVBYTE(I) ;

   3306  8 001476   000000 720000 xsym               LXL0    I
         8 001477   000257 236110                    LDQ     175,X0,PR0
         8 001500   000000 756000 xsym               STQ     DVBYTE

      675     3307        /**/
      676     3308    2           CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET (EXEC_MK_ERR1);

   3308  8 001501   000067 630400 9                  EPPR0   55
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:108  
         8 001502   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001503   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 001504   002015 702000 8                  TSX2    EXEC_MK_ERR1

      677     3309        /**/
      678     3310    2           EXEC_SEQNUM = EXEC_SEQNUM + INCR;

   3310  8 001505   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 001506   000000 036000 xsym               ADLQ    INCR
         8 001507   000000 756000 xsym               STQ     EXEC_SEQNUM

      679     3311    2           IF (((EXEC_SEQNUM > MAX_SEQNUM) OR (EXEC_SEQNUM >= HI_SEQNUM))

   3311  8 001510   000000 116000 xsym               CMPQ    MAX_SEQNUM
         8 001511   001513 600000 8                  TZE     s:3311+3
         8 001512   001515 603000 8                  TRC     s:3311+5
         8 001513   000000 116000 xsym               CMPQ    HI_SEQNUM
         8 001514   001610 602000 8                  TNC     s:3331
         8 001515   000000 236000 xsym               LDQ     MK_COUNT
         8 001516   000001 136007                    SBLQ    1,DL
         8 001517   001522 604000 8                  TMI     s:3313
         8 001520   000000 116000 xsym               CMPQ    I
         8 001521   001610 600000 8                  TZE     s:3331

      680     3312    3              AND (I ~= MK_COUNT-1)) THEN DO ; /* Over ran 'TO' range. */

      681     3313    3              IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN CALL VEX$DELREC (
              3313                       M$FILE_NUM,

   3313  8 001522   000000 235000 xsym               LDA     CMD_CODE
         8 001523   000041 115007                    CMPA    33,DL
         8 001524   001527 600000 8                  TZE     s:3313+5
         8 001525   000043 115007                    CMPA    35,DL
         8 001526   001546 601000 8                  TNZ     s:3316

   3313  8 001527   000000 236000 xsym               LDQ     I
         8 001530   000022 736000                    QLS     18
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:109  
         8 001531   000113 036003                    ADLQ    75,DU
         8 001532   000000 036000 xsym               ADLQ    MK_BASE$
         8 001533   200010 756100                    STQ     REMAIN+3,,AUTO
         8 001534   000000 236000 xsym               LDQ     FRST2DEL
         8 001535   000022 736000                    QLS     18
         8 001536   000113 036003                    ADLQ    75,DU
         8 001537   000000 036000 xsym               ADLQ    MK_BASE$
         8 001540   000022 235000 9                  LDA     18
         8 001541   200006 757100                    STAQ    REMAIN+1,,AUTO
         8 001542   200006 630500                    EPPR0   REMAIN+1,,AUTO
         8 001543   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 001544   000000 701000 xent               TSX1    VEX$DELREC
         8 001545   002015 702000 8                  TSX2    EXEC_MK_ERR1

      682     3314    3                    MK_BASE$ -> MK$RECS.KEY(FRST2DEL),MK_BASE$ -> MK$RECS.KEY(I))
      683     3315    3                    ALTRET (EXEC_MK_ERR1);
      684     3316    3              IF (CMD_CODE = MDCMD OR CMD_CODE = MDPCMD)

   3316  8 001546   000000 235000 xsym               LDA     CMD_CODE
         8 001547   000041 115007                    CMPA    33,DL
         8 001550   001553 600000 8                  TZE     s:3316+5
         8 001551   000043 115007                    CMPA    35,DL
         8 001552   001572 601000 8                  TNZ     s:3323
         8 001553   000000 470400 xsym               LDP0    MK_BASE$
         8 001554   000000 720000 xsym               LXL0    FRST2DEL
         8 001555   000000 236000 xsym               LDQ     HI_SEQNUM
         8 001556   000113 116110                    CMPQ    75,X0,PR0
         8 001557   001572 602000 8                  TNC     s:3323
         8 001560   000000 721000 xsym               LXL1    I
         8 001561   000113 116111                    CMPQ    75,X1,PR0
         8 001562   001564 600000 8                  TZE     s:3316+14
         8 001563   001572 603000 8                  TRC     s:3323
         8 001564   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 001565   000114 116111                    CMPQ    76,X1,PR0
         8 001566   001572 603000 8                  TRC     s:3323
         8 001567   000000 116000 xsym               CMPQ    MAX_SEQNUM
         8 001570   001603 602000 8                  TNC     MAKE_ROOM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:110  
         8 001571   001603 600000 8                  TZE     MAKE_ROOM

      685     3317    3                 AND (HI_SEQNUM >= MK_BASE$ -> MK$RECS.KEY(FRST2DEL)
      686     3318    3                 AND HI_SEQNUM <= MK_BASE$ -> MK$RECS.KEY(I)
      687     3319    3                 AND EXEC_SEQNUM < MK_BASE$ -> MK$RECS.KEY(I+1)
      688     3320    3                 AND EXEC_SEQNUM <= MAX_SEQNUM)
      689     3321    3              THEN
      690     3322    3                 GOTO MAKE_ROOM ;          /* We overlap records deleted. */
      691     3323    3              REC_COUNT = REC_COUNT + I + 1;

   3323  8 001572   000000 236000 xsym               LDQ     REC_COUNT
         8 001573   000000 036000 xsym               ADLQ    I
         8 001574   000001 036007                    ADLQ    1,DL
         8 001575   000000 756000 xsym               STQ     REC_COUNT

      692     3324    3              SAVE_KEY = MK_BASE$ -> MK$RECS.KEY(I);

   3324  8 001576   000000 470400 xsym               LDP0    MK_BASE$
         8 001577   000000 720000 xsym               LXL0    I
         8 001600   000113 235110                    LDA     75,X0,PR0
         8 001601   000000 755000 xsym               STA     SAVE_KEY

      693     3325    3              GOTO CUTOFF;

   3325  8 001602   001745 710000 8                  TRA     CUTOFF

      694     3326    3   MAKE_ROOM:
      695     3327    3              FRST2DEL = I + 1 ;

   3327  8 001603   000000 235000 xsym  MAKE_ROOM    LDA     I
         8 001604   000001 035007                    ADLA    1,DL
         8 001605   000000 755000 xsym               STA     FRST2DEL

      696     3328    3              HI_SEQNUM = MK_BASE$ -> MK$RECS.KEY(FRST2DEL) ;

   3328  8 001606   000113 235105                    LDA     75,AL,PR0
         8 001607   000000 755000 xsym               STA     HI_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:111  

      697     3329    3              END;

      698     3330        /**/
      699     3331    2           END;

   3331  8 001610   000000 235000 xsym               LDA     I
         8 001611   000001 035007                    ADLA    1,DL
         8 001612   000000 755000 xsym               STA     I
         8 001613   000000 236000 xsym               LDQ     I
         8 001614   000000 116000 xsym               CMPQ    MK_COUNT
         8 001615   001451 602000 8                  TNC     s:3302

      700     3332        /**/
      701     3333    1        REC_COUNT = REC_COUNT + MK_COUNT;

   3333  8 001616   000000 236000 xsym               LDQ     REC_COUNT
         8 001617   000000 036000 xsym               ADLQ    MK_COUNT
         8 001620   000000 756000 xsym               STQ     REC_COUNT

      702     3334    1        IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN CALL VEX$DELREC(M$FILE_NUM,

   3334  8 001621   000000 235000 xsym               LDA     CMD_CODE
         8 001622   000041 115007                    CMPA    33,DL
         8 001623   001626 600000 8                  TZE     s:3334+5
         8 001624   000043 115007                    CMPA    35,DL
         8 001625   001645 601000 8                  TNZ     s:3337

   3334  8 001626   000000 236000 xsym               LDQ     MK_COUNT
         8 001627   000022 736000                    QLS     18
         8 001630   000112 036003                    ADLQ    74,DU
         8 001631   000000 036000 xsym               ADLQ    MK_BASE$
         8 001632   200010 756100                    STQ     REMAIN+3,,AUTO
         8 001633   000000 236000 xsym               LDQ     FRST2DEL
         8 001634   000022 736000                    QLS     18
         8 001635   000113 036003                    ADLQ    75,DU
         8 001636   000000 036000 xsym               ADLQ    MK_BASE$
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:112  
         8 001637   000022 235000 9                  LDA     18
         8 001640   200006 757100                    STAQ    REMAIN+1,,AUTO
         8 001641   200006 630500                    EPPR0   REMAIN+1,,AUTO
         8 001642   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 001643   000000 701000 xent               TSX1    VEX$DELREC
         8 001644   002015 702000 8                  TSX2    EXEC_MK_ERR1

      703     3335    1              MK_BASE$ -> MK$RECS.KEY(FRST2DEL),MK_BASE$ -> MK$RECS.KEY(MK_COUNT-1))
      704     3336    1              ALTRET (EXEC_MK_ERR1);
      705     3337    1        SAVE_KEY = MK_BASE$ -> MK$RECS.KEY(MK_COUNT-1);

   3337  8 001645   000000 470400 xsym               LDP0    MK_BASE$
         8 001646   000000 720000 xsym               LXL0    MK_COUNT
         8 001647   000112 235110                    LDA     74,X0,PR0
         8 001650   000000 755000 xsym               STA     SAVE_KEY

      706     3338        /**/
      707     3339    2        IF (LAST_KEY <= LIMIT_SEQNUM) THEN DO;

   3339  8 001651   000000 236000 xsym               LDQ     LIMIT_SEQNUM
         8 001652   000000 116000 xsym               CMPQ    LAST_KEY
         8 001653   001665 602000 8                  TNC     s:3346

      708     3340    2           MK_COUNT = 0;

   3340  8 001654   000000 450000 xsym               STZ     MK_COUNT

      709     3341    2           MK_WORK$ = PINCRW(MK_BASE$,SIZEW(MK$RECS));

   3341  8 001655   000000 236000 xsym               LDQ     MK_BASE$
         8 001656   000423 036003                    ADLQ    275,DU
         8 001657   000000 756000 xsym               STQ     MK_WORK$

      710     3342    2           CALL VEX$READ_RANDOM(LAST_KEY) ALTRET (EXEC_MK_ERR1); /* REPOSITION */

   3342  8 001660   000007 630400 9                  EPPR0   7
         8 001661   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:113  
         8 001662   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 001663   002015 702000 8                  TSX2    EXEC_MK_ERR1

      711     3343    2           GOTO BLOCKSTART;

   3343  8 001664   001336 710000 8                  TRA     BLOCKSTART

      712     3344    2           END;
      713     3345        /**/
      714     3346    1        GOTO EXEC_MK_DONE;

   3346  8 001665   001770 710000 8                  TRA     EXEC_MK_DONE

      715     3347        /**/
      716     3348    1   RECMOVE:
      717     3349    2        DO WHILE (LAST_KEY <= LIMIT_SEQNUM); /* DO WHOLE 'FROM' RANGE         */

   3349  8 001666   000000 236000 xsym  RECMOVE      LDQ     LIMIT_SEQNUM
         8 001667   000000 116000 xsym               CMPQ    LAST_KEY
         8 001670   001770 602000 8                  TNC     EXEC_MK_DONE

      718     3350    2           CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET(EXEC_MK_ERR);

   3350  8 001671   000067 630400 9                  EPPR0   55
         8 001672   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001673   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 001674   002023 702000 8                  TSX2    EXEC_MK_ERR

      719     3351    2           REC_COUNT = REC_COUNT+1;

   3351  8 001675   000000 235000 xsym               LDA     REC_COUNT
         8 001676   000001 035007                    ADLA    1,DL
         8 001677   000000 755000 xsym               STA     REC_COUNT

      720     3352    2           IF (CMD_CODE = MDCMD)OR(CMD_CODE = MDPCMD) THEN CALL VEX$DELREC(M$FILE_NUM,
              3352                    LAST_KEY,0)

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:114  
   3352  8 001700   000000 236000 xsym               LDQ     CMD_CODE
         8 001701   000041 116007                    CMPQ    33,DL
         8 001702   001705 600000 8                  TZE     s:3352+5
         8 001703   000043 116007                    CMPQ    35,DL
         8 001704   001712 601000 8                  TNZ     s:3355

   3352  8 001705   000031 630400 9                  EPPR0   25
         8 001706   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 001707   000000 701000 xent               TSX1    VEX$DELREC
         8 001710   002023 702000 8                  TSX2    EXEC_MK_ERR
         8 001711   001716 710000 8                  TRA     s:3356

      721     3353    2                 ALTRET(EXEC_MK_ERR);
      722     3354                                                /* DELETE 'FROM' REC AND REPOSITION   */
      723     3355    2           ELSE CALL VEX$READ_RANDOM(LAST_KEY) ALTRET (EXEC_MK_ERR);

   3355  8 001712   000007 630400 9                  EPPR0   7
         8 001713   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 001714   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 001715   002023 702000 8                  TSX2    EXEC_MK_ERR

      724     3356    2           EXEC_SEQNUM = EXEC_SEQNUM+INCR;

   3356  8 001716   000000 236000 xsym               LDQ     EXEC_SEQNUM
         8 001717   000000 036000 xsym               ADLQ    INCR
         8 001720   000000 756000 xsym               STQ     EXEC_SEQNUM

      725     3357        /**/
      726     3358    2           SAVE_KEY = LAST_KEY;            /* SAVE FOR CUTOFF                    */

   3358  8 001721   000000 235000 xsym               LDA     LAST_KEY
         8 001722   000000 755000 xsym               STA     SAVE_KEY

      727     3359    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_MK_ERR);

   3359  8 001723   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 001724   000000 701000 xent               TSX1    VEX$READ_SEQUEN
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:115  
         8 001725   002023 702000 8                  TSX2    EXEC_MK_ERR

      728     3360    3           IF (FLAGS.EOF) THEN DO;

   3360  8 001726   000000 236000 xsym               LDQ     FLAGS
         8 001727   010000 316003                    CANQ    4096,DU
         8 001730   001732 600000 8                  TZE     s:3367

      729     3361    3              GOTO EXEC_MK_DONE;

   3361  8 001731   001770 710000 8                  TRA     EXEC_MK_DONE

      730     3362    3              END;
      731     3363        /**/
      732     3364        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      733     3365                 DESCRIPTION: EOF hit in MK/MD operation.
      734     3366        */
      735     3367    2           IF ((EXEC_SEQNUM > HI_SEQNUM OR EXEC_SEQNUM > MAX_SEQNUM)

   3367  8 001732   000000 236000 xsym               LDQ     HI_SEQNUM
         8 001733   000000 116000 xsym               CMPQ    EXEC_SEQNUM
         8 001734   001740 602000 8                  TNC     s:3367+6
         8 001735   000000 236000 xsym               LDQ     MAX_SEQNUM
         8 001736   000000 116000 xsym               CMPQ    EXEC_SEQNUM
         8 001737   001743 603000 8                  TRC     s:3367+9
         8 001740   000000 236000 xsym               LDQ     LIMIT_SEQNUM
         8 001741   000000 116000 xsym               CMPQ    LAST_KEY
         8 001742   001745 603000 8                  TRC     CUTOFF
         8 001743   000000 235000 xsym               LDA     INCR
         8 001744   001765 601000 8                  TNZ     s:3384

      736     3368    2              AND LAST_KEY <= LIMIT_SEQNUM) OR INCR=0
      737     3369    3           THEN DO ;                       /* Over ran 'TO' range. */

      738     3370        /**/
      739     3371    3   CUTOFF:
      740     3372    3              EXEC_SEQNUM = EXEC_SEQNUM - INCR;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:116  

   3372  8 001745   000000 236000 xsym  CUTOFF       LDQ     EXEC_SEQNUM
         8 001746   000000 136000 xsym               SBLQ    INCR
         8 001747   000000 756000 xsym               STQ     EXEC_SEQNUM

      741     3373    3              CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_1);

   3373  8 001750   000106 630400 9                  EPPR0   70
         8 001751   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001752   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 001753   000000 011000                    NOP     0

      742     3374    3              CALL VEX$SEQNUM_TEXT(SAVE_KEY,SUB_BUF_2);

   3374  8 001754   000110 630400 9                  EPPR0   72
         8 001755   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001756   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 001757   000000 011000                    NOP     0

      743     3375    3              CALL VEX$ERROR(E$E_CUTOFF,2); /* CUTOFF AT XX(YY)               */

   3375  8 001760   000113 630400 9                  EPPR0   75
         8 001761   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001762   000000 701000 xent               TSX1    VEX$ERROR
         8 001763   000000 011000                    NOP     0

      744     3376    3              GOTO EXEC_MK_DONE1;

   3376  8 001764   002003 710000 8                  TRA     EXEC_MK_DONE1

      745     3377    3              END;
      746     3378        /**/
      747     3379        /*E*     ERROR:    VEE-E$E_CUTOFF-0
      748     3380                 DESCRIPTION: The slot specified by the user is not big
      749     3381                    CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,0,REC_SIZE));
      750     3382                           number %U1 and was sequence number %U2.
      751     3383        */
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:117  
      752     3384    2           END;

   3384  8 001765   000000 236000 xsym               LDQ     LIMIT_SEQNUM
         8 001766   000000 116000 xsym               CMPQ    LAST_KEY
         8 001767   001671 603000 8                  TRC     s:3350

      753     3385        /**/
      754     3386    1   EXEC_MK_DONE:
      755     3387    1        EXEC_SEQNUM = EXEC_SEQNUM - INCR;

   3387  8 001770   000000 236000 xsym  EXEC_MK_DONE LDQ     EXEC_SEQNUM
         8 001771   000000 136000 xsym               SBLQ    INCR
         8 001772   000000 756000 xsym               STQ     EXEC_SEQNUM

      756     3388    1        CALL VEX$SEQNUM_TEXT(EXEC_SEQNUM,SUB_BUF_1);

   3388  8 001773   000106 630400 9                  EPPR0   70
         8 001774   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 001775   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 001776   000000 011000                    NOP     0

      757     3389    1        CALL VEX$ERROR(E$E_DONEAT,1);

   3389  8 001777   000116 630400 9                  EPPR0   78
         8 002000   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002001   000000 701000 xent               TSX1    VEX$ERROR
         8 002002   000000 011000                    NOP     0

      758     3390        /**/
      759     3391        /*E*     ERROR:    VEE-E$E_DONEAT-0
      760     3392                 MESSAGE:  Done at %U1
      761     3393                 DESCRIPTION: TELL USER LAST RECORD WRITTEN        */
      762     3394        /**/
      763     3395    1   EXEC_MK_DONE1:
      764     3396    1        CALL VEX$SET_SUB_BUF(SUB_BUF_1,REC_COUNT); /* XX RECORDS MOVED        */

   3396  8 002003   000040 630400 9     EXEC_MK_DON* EPPR0   32
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:118  
         8 002004   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002005   000000 701000 xent               TSX1    VEX$SET_SUB_BUF
         8 002006   000000 011000                    NOP     0

      765     3397    1        CALL VEX$ERROR(E$E_RECSMVED,1);

   3397  8 002007   000121 630400 9                  EPPR0   81
         8 002010   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002011   000000 701000 xent               TSX1    VEX$ERROR
         8 002012   000000 011000                    NOP     0

      766     3398        /**/
      767     3399        /*E*     ERROR:    VEE-E$E_RECSMVED-0
      768     3400                 DESCRIPTION: %U1 records have been moved by MK/MD.
      769     3401        */
      770     3402    1        HI_SEQNUM = EXEC_SEQNUM;           /* SET SELECTION RANGE LIMIT          */

   3402  8 002013   000000 235000 xsym               LDA     EXEC_SEQNUM
         8 002014   000000 755000 xsym               STA     HI_SEQNUM

      771     3403        /**/
      772     3404    1   EXEC_MK_ERR1:
      773     3405    1        CALL M$FDS (MKDS_FPT);

   3405  8 002015   000016 630400 1     EXEC_MK_ERR1 EPPR0   MKDS_FPT
         8 002016   030002 713400                    CLIMB   fds
         8 002017   400400 401760                    pmme    nvectors=2

      774     3406    1        CALL M$INT(BREAK_FPT);

   3406  8 002020   000040 630400 1                  EPPR0   BREAK_FPT
         8 002021   010002 713400                    CLIMB   4098
         8 002022   400000 401760                    pmme    nvectors=1

      775     3407        /**/
      776     3408    1   EXEC_MK_ERR:
      777     3409    1        RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:119  

   3409  8 002023   000000 702200 xent  EXEC_MK_ERR  TSX2  ! X66_ARET

      778     3410        /**/
      779     3411    1   MKDS_ERR:
      780     3412    1        IF (DS_RESULTS.PTR$ = ADDR(NIL)) THEN GOTO RECMOVE; /* CANT GET DS    */

   3412  8 002024   000171 236000 2     MKDS_ERR     LDQ     DS_RESULTS+1
         8 002025   000001 116000 xsym               CMPQ    B_VECTNIL+1
         8 002026   001666 600000 8                  TZE     RECMOVE

      781     3413    1        ELSE GOTO MKDSOK;                  /* ONLY GOT PART OF DS - USE IT       */

   3413  8 002027   001316 710000 8                  TRA     MKDSOK

      782     3414        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:120  
      783     3415        /**/
      784     3416    1   VER$EXEC_OL: ENTRY;

   3416  8 002030   000000 700200 xent  VER$EXEC_OL  TSX0  ! X66_AUTO_0
         8 002031   000012 000000                    ZERO    10,0

      785     3417        /**/
      786     3418    2        IF (FLAGS.INTRA_CMD) THEN DO;

   3418  8 002032   000000 236000 xsym               LDQ     FLAGS
         8 002033   200000 316003                    CANQ    65536,DU
         8 002034   002062 600000 8                  TZE     s:3429

      787     3419    3           IF (~FLAGS.OLINPROG) THEN DO;

   3419  8 002035   000000 236000 xsym               LDQ     FLAGS
         8 002036   000033 736000                    QLS     27
         8 002037   400000 376003                    ANQ     -131072,DU
         8 002040   400000 676003                    ERQ     -131072,DU
         8 002041   002056 600000 8                  TZE     s:3425

      788     3420    3              CALL M$GETDCB(GETDCB_FPT) ALTRET(EXEC_OL_ERR1) ;

   3420  8 002042   000024 630400 1                  EPPR0   GETDCB_FPT
         8 002043   460002 713400                    CLIMB   alt,+24578
         8 002044   401000 401760                    pmme    nvectors=3
         8 002045   002177 702000 8                  TSX2    EXEC_OL_ERR1

      789     3421    3              OPEN_MELP_FPT.V.DCB# = TY_DCBNUM ;

   3421  8 002046   000000 720000 xsym               LXL0    TY_DCBNUM
         8 002047   000054 740000 2                  STX0    OPEN_MELP_FPT+36

      790     3422    3              CALL M$OPEN (OPEN_MELP_FPT) ALTRET (EXEC_OL_ERR1);

   3422  8 002050   000010 630400 2                  EPPR0   OPEN_MELP_FPT
         8 002051   450000 713400                    CLIMB   alt,open
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:121  
         8 002052   410400 401760                    pmme    nvectors=18
         8 002053   002177 702000 8                  TSX2    EXEC_OL_ERR1

      791     3423    3              FLAGS.OLINPROG = TRUE;

   3423  8 002054   000400 236007                    LDQ     256,DL
         8 002055   000000 256000 xsym               ORSQ    FLAGS

      792     3424    3              END;

      793     3425    2           CALL VER$EXEC_TY;

   3425  8 002056   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002057   003120 701000 8                  TSX1    s:3720
         8 002060   000000 011000                    NOP     0

      794     3426    2           RETURN;

   3426  8 002061   000000 702200 xent               TSX2  ! X66_ARET

      795     3427    2           END;
      796     3428        /**/
      797     3429    1        CALL VEX$CLMN_DFLT;

   3429  8 002062   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002063   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 002064   000000 011000                    NOP     0

      798     3430    1        LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;

   3430  8 002065   000000 470400 xsym               LDP0    CMD$
         8 002066   000001 235100                    LDA     1,,PR0
         8 002067   000000 755000 xsym               STA     LO_SEQNUM

      799     3431    1        HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;

   3431  8 002070   000002 235100                    LDA     2,,PR0
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:122  
         8 002071   000000 755000 xsym               STA     HI_SEQNUM

      800     3432    1        EXEC_SEQNUM = LO_SEQNUM;

   3432  8 002072   000000 236000 xsym               LDQ     LO_SEQNUM
         8 002073   000000 756000 xsym               STQ     EXEC_SEQNUM

      801     3433    1        CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_OL_ERR);

   3433  8 002074   000000 630400 9                  EPPR0   0
         8 002075   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002076   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 002077   002163 702000 8                  TSX2    EXEC_OL_ERR

      802     3434    2        IF (~FLAGS.EXISTS) THEN DO;

   3434  8 002100   000000 236000 xsym               LDQ     FLAGS
         8 002101   000004 736000                    QLS     4
         8 002102   400000 376003                    ANQ     -131072,DU
         8 002103   400000 676003                    ERQ     -131072,DU
         8 002104   002120 600000 8                  TZE     s:3445

      803     3435    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_OL_ERR);

   3435  8 002105   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002106   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 002107   002163 702000 8                  TSX2    EXEC_OL_ERR

      804     3436    3           IF (FLAGS.EOF) THEN DO;

   3436  8 002110   000000 236000 xsym               LDQ     FLAGS
         8 002111   010000 316003                    CANQ    4096,DU
         8 002112   002120 600000 8                  TZE     s:3445

      805     3437    3              CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                       */

   3437  8 002113   000002 630400 9                  EPPR0   2
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:123  
         8 002114   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002115   000000 701000 xent               TSX1    VEX$ERROR
         8 002116   000000 011000                    NOP     0

      806     3438    3              RETURN;

   3438  8 002117   000000 702200 xent               TSX2  ! X66_ARET

      807     3439        /**/
      808     3440        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      809     3441                 DESCRIPTION:  EOF hit durring OL operation.
      810     3442        */
      811     3443    3              END;
      812     3444    2           END;
      813     3445    1        IF LAST_KEY > HI_SEQNUM

   3445  8 002120   000000 236000 xsym               LDQ     HI_SEQNUM
         8 002121   000000 116000 xsym               CMPQ    LAST_KEY
         8 002122   002130 603000 8                  TRC     s:3455

      814     3446    2        THEN DO;

      815     3447    2           CALL VEX$ERROR(E$E_NONE,1);

   3447  8 002123   000005 630400 9                  EPPR0   5
         8 002124   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002125   000000 701000 xent               TSX1    VEX$ERROR
         8 002126   000000 011000                    NOP     0

      816     3448    2           RETURN;

   3448  8 002127   000000 702200 xent               TSX2  ! X66_ARET

      817     3449    2           END ;                           /* THEN DO */
      818     3450        /**/
      819     3451        /*E*     ERROR:    VEE-E$E_NONE-0
      820     3452                 DESCRIPTION:   No records to OL to
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:124  
      821     3453        */
      822     3454        /**/
      823     3455    1        CALL M$GETDCB(GETDCB_FPT) ALTRET(EXEC_OL_ERR1) ;

   3455  8 002130   000024 630400 1                  EPPR0   GETDCB_FPT
         8 002131   460002 713400                    CLIMB   alt,+24578
         8 002132   401000 401760                    pmme    nvectors=3
         8 002133   002177 702000 8                  TSX2    EXEC_OL_ERR1

      824     3456    1        OPEN_MELP_FPT.V.DCB# = TY_DCBNUM ;

   3456  8 002134   000000 720000 xsym               LXL0    TY_DCBNUM
         8 002135   000054 740000 2                  STX0    OPEN_MELP_FPT+36

      825     3457    1        CALL M$OPEN(OPEN_MELP_FPT) ALTRET(EXEC_OL_ERR1);

   3457  8 002136   000010 630400 2                  EPPR0   OPEN_MELP_FPT
         8 002137   450000 713400                    CLIMB   alt,open
         8 002140   410400 401760                    pmme    nvectors=18
         8 002141   002177 702000 8                  TSX2    EXEC_OL_ERR1

      826     3458        /**/
      827     3459    1   EXEC_OL_1:
      828     3460    1        CALL VER$EXEC_TY;

   3460  8 002142   000002 631400 xsym  EXEC_OL_1    EPPR1   B_VECTNIL+2
         8 002143   003120 701000 8                  TSX1    s:3720
         8 002144   000000 011000                    NOP     0

      829     3461    1        CALL VEX$READ_SEQUEN ALTRET(EXEC_OL_ERR);

   3461  8 002145   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002146   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 002147   002163 702000 8                  TSX2    EXEC_OL_ERR

      830     3462    2        IF (FLAGS.EOF) THEN DO;

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:125  
   3462  8 002150   000000 236000 xsym               LDQ     FLAGS
         8 002151   010000 316003                    CANQ    4096,DU
         8 002152   002160 600000 8                  TZE     s:3467

      831     3463    2           CALL VEX$ERROR(E$E_EDITEOF,1);

   3463  8 002153   000002 630400 9                  EPPR0   2
         8 002154   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002155   000000 701000 xent               TSX1    VEX$ERROR
         8 002156   000000 011000                    NOP     0

      832     3464    2           GOTO EXEC_OL_ERR;

   3464  8 002157   002163 710000 8                  TRA     EXEC_OL_ERR

      833     3465    2           END;
      834     3466        /**/
      835     3467    1        IF LAST_KEY <= HI_SEQNUM

   3467  8 002160   000000 236000 xsym               LDQ     HI_SEQNUM
         8 002161   000000 116000 xsym               CMPQ    LAST_KEY
         8 002162   002142 603000 8                  TRC     EXEC_OL_1

      836     3468    1        THEN
      837     3469    1           GOTO EXEC_OL_1;
      838     3470        /**/
      839     3471    1   EXEC_OL_ERR:
      840     3472    1        CLOSE_TY_FPT.V.DCB# = TY_DCBNUM ;

   3472  8 002163   000000 720000 xsym  EXEC_OL_ERR  LXL0    TY_DCBNUM
         8 002164   000134 740000 2                  STX0    CLOSE_TY_FPT+26

      841     3473    1        CALL M$CLOSE(CLOSE_TY_FPT);

   3473  8 002165   000102 630400 2                  EPPR0   CLOSE_TY_FPT
         8 002166   050001 713400                    CLIMB   close
         8 002167   406000 401760                    pmme    nvectors=13
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:126  

      842     3474    1        CALL M$RELDCB(RELDCB_FPT) ALTRET(RELDCB_ERR) ;

   3474  8 002170   000164 630400 2                  EPPR0   RELDCB_FPT
         8 002171   460003 713400                    CLIMB   alt,+24579
         8 002172   400000 401760                    pmme    nvectors=1
         8 002173   002174 702000 8                  TSX2    RELDCB_ERR

      843     3475    1   RELDCB_ERR:
      844     3476    1        TY_DCBNUM = ME_DCBNUM ;

   3476  8 002174   000000 235000 xsym  RELDCB_ERR   LDA     ME_DCBNUM
         8 002175   000000 755000 xsym               STA     TY_DCBNUM

      845     3477    1        RETURN;

   3477  8 002176   000000 702200 xent               TSX2  ! X66_ARET

      846     3478        /**/
      847     3479    1   EXEC_OL_ERR1:
      848     3480    1        CALL VEX$ERROR(0,3);

   3480  8 002177   000074 630400 9     EXEC_OL_ERR1 EPPR0   60
         8 002200   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002201   000000 701000 xent               TSX1    VEX$ERROR
         8 002202   000000 011000                    NOP     0

      849     3481    1        RETURN;

   3481  8 002203   000000 702200 xent               TSX2  ! X66_ARET

      850     3482        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:127  
      851     3483        /**/
      852     3484    1   VER$EXEC_RN: ENTRY;

   3484  8 002204   000000 700200 xent  VER$EXEC_RN  TSX0  ! X66_AUTO_0
         8 002205   000012 000000                    ZERO    10,0

      853     3485        /**/
      854     3486    1        READ_KEY = CMD$ -> IN_CMD_TBL.LO_SEQNUM;

   3486  8 002206   000000 470400 xsym               LDP0    CMD$
         8 002207   000001 235100                    LDA     1,,PR0
         8 002210   000000 755000 xsym               STA     READ_KEY

      855     3487    1        EXEC_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;

   3487  8 002211   000002 235100                    LDA     2,,PR0
         8 002212   000000 755000 xsym               STA     EXEC_SEQNUM

      856     3488    1        CALL VEX$READ_RANDOM(EXEC_SEQNUM) ALTRET(EXEC_RN_ERR);

   3488  8 002213   000000 630400 9                  EPPR0   0
         8 002214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002215   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 002216   002264 702000 8                  TSX2    EXEC_RN_ERR

      857     3489    2        IF (FLAGS.EXISTS) THEN DO;

   3489  8 002217   000000 236000 xsym               LDQ     FLAGS
         8 002220   020000 316003                    CANQ    8192,DU
         8 002221   002227 600000 8                  TZE     s:3497

      858     3490    2           CALL VEX$ERROR(E$E_RECEXTS,2);  /* RECORD EXISTS                    */

   3490  8 002222   000057 630400 9                  EPPR0   47
         8 002223   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002224   000000 701000 xent               TSX1    VEX$ERROR
         8 002225   000000 011000                    NOP     0
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:128  

      859     3491    2           RETURN;

   3491  8 002226   000000 702200 xent               TSX2  ! X66_ARET

      860     3492    2           END;
      861     3493        /**/
      862     3494        /*E*     ERROR:    VEE-E$E_RECEXTS-0
      863     3495                 DESCRIPTION: Cannot renumber(RN) record 'TO' record exists.
      864     3496        */
      865     3497    1        CALL VEX$READ_RANDOM(READ_KEY) ALTRET(EXEC_RN_ERR);

   3497  8 002227   000024 630400 9                  EPPR0   20
         8 002230   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002231   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 002232   002264 702000 8                  TSX2    EXEC_RN_ERR

      866     3498    2        IF (~FLAGS.EXISTS) THEN DO;

   3498  8 002233   000000 236000 xsym               LDQ     FLAGS
         8 002234   000004 736000                    QLS     4
         8 002235   400000 376003                    ANQ     -131072,DU
         8 002236   400000 676003                    ERQ     -131072,DU
         8 002237   002245 600000 8                  TZE     s:3507

      867     3499    2           CALL VEX$ERROR(E$E_NORENUM,2);  /* NO RECORD TO RENUMBER            */

   3499  8 002240   000124 630400 9                  EPPR0   84
         8 002241   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002242   000000 701000 xent               TSX1    VEX$ERROR
         8 002243   000000 011000                    NOP     0

      868     3500    2           RETURN;

   3500  8 002244   000000 702200 xent               TSX2  ! X66_ARET

      869     3501    2           END;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:129  
      870     3502        /**/
      871     3503        /*E*     ERROR:    VEE-E$E_NORENUM-0
      872     3504                 MESSAGE:  No record to renumber
      873     3505                 DESCRIPTION: The record to be renumbered does not exist.
      874     3506        */
      875     3507    1        CALL VEX$DELREC(M$FILE_NUM,READ_KEY,0) ALTRET(EXEC_RN_ERR);

   3507  8 002245   000126 630400 9                  EPPR0   86
         8 002246   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 002247   000000 701000 xent               TSX1    VEX$DELREC
         8 002250   002264 702000 8                  TSX2    EXEC_RN_ERR

      876     3508    1        CALL VEX$WRITE_REC(M$FILE_NUM,EXEC_SEQNUM) ALTRET(EXEC_RN_ERR);

   3508  8 002251   000067 630400 9                  EPPR0   55
         8 002252   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002253   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 002254   002264 702000 8                  TSX2    EXEC_RN_ERR

      877     3509    1        CALL VEX$CLMN_DFLT;

   3509  8 002255   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002256   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 002257   000000 011000                    NOP     0

      878     3510    1        LO_SEQNUM = EXEC_SEQNUM;

   3510  8 002260   000000 235000 xsym               LDA     EXEC_SEQNUM
         8 002261   000000 755000 xsym               STA     LO_SEQNUM

      879     3511    1        HI_SEQNUM = EXEC_SEQNUM;

   3511  8 002262   000000 755000 xsym               STA     HI_SEQNUM

      880     3512    1        RETURN;

   3512  8 002263   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:130  

      881     3513        /**/
      882     3514    1   EXEC_RN_ERR:
      883     3515    1        RETURN;

   3515  8 002264   000000 702200 xent  EXEC_RN_ERR  TSX2  ! X66_ARET

      884     3516        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:131  
      885     3517        /**/
      886     3518    1   VER$EXEC_RR: ENTRY;

   3518  8 002265   000000 700200 xent  VER$EXEC_RR  TSX0  ! X66_AUTO_0
         8 002266   000012 000000                    ZERO    10,0

      887     3519        /**/
      888     3520    2        IF (~FLAGS.INTRA_CMD) THEN DO;     /* INTER RECORD MODE                  */

   3520  8 002267   000000 236000 xsym               LDQ     FLAGS
         8 002270   000001 736000                    QLS     1
         8 002271   400000 376003                    ANQ     -131072,DU
         8 002272   400000 676003                    ERQ     -131072,DU
         8 002273   002340 600000 8                  TZE     EXEC_RR_1

      889     3521    2           CALL VEX$CLMN_DFLT;

   3521  8 002274   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002275   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 002276   000000 011000                    NOP     0

      890     3522    2           LO_SEQNUM = CMD$ -> IN_CMD_TBL.LO_SEQNUM;

   3522  8 002277   000000 470400 xsym               LDP0    CMD$
         8 002300   000001 235100                    LDA     1,,PR0
         8 002301   000000 755000 xsym               STA     LO_SEQNUM

      891     3523    2           HI_SEQNUM = CMD$ -> IN_CMD_TBL.HI_SEQNUM;

   3523  8 002302   000002 235100                    LDA     2,,PR0
         8 002303   000000 755000 xsym               STA     HI_SEQNUM

      892     3524    2           CALL VEX$READ_RANDOM(LO_SEQNUM) ALTRET(EXEC_RR_ERR);

   3524  8 002304   000036 630400 9                  EPPR0   30
         8 002305   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002306   000000 701000 xent               TSX1    VEX$READ_RANDOM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:132  
         8 002307   002515 702000 8                  TSX2    EXEC_RR_ERR

      893     3525    3           IF (~FLAGS.EXISTS) THEN DO;

   3525  8 002310   000000 236000 xsym               LDQ     FLAGS
         8 002311   000004 736000                    QLS     4
         8 002312   400000 376003                    ANQ     -131072,DU
         8 002313   400000 676003                    ERQ     -131072,DU
         8 002314   002340 600000 8                  TZE     EXEC_RR_1

      894     3526    3              CALL VEX$READ_SEQUEN ALTRET(EXEC_RR_ERR);

   3526  8 002315   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002316   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 002317   002515 702000 8                  TSX2    EXEC_RR_ERR

      895     3527    4              IF (FLAGS.EOF) THEN DO;

   3527  8 002320   000000 236000 xsym               LDQ     FLAGS
         8 002321   010000 316003                    CANQ    4096,DU
         8 002322   002330 600000 8                  TZE     s:3535

      896     3528    4                 CALL VEX$ERROR(E$E_EDITEOF,1); /* EOF HIT                    */

   3528  8 002323   000002 630400 9                  EPPR0   2
         8 002324   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002325   000000 701000 xent               TSX1    VEX$ERROR
         8 002326   000000 011000                    NOP     0

      897     3529    4                 RETURN;

   3529  8 002327   000000 702200 xent               TSX2  ! X66_ARET

      898     3530    4                 END;
      899     3531        /**/
      900     3532        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      901     3533                 DESCRIPTION: EOF hit durring RR operation
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:133  
      902     3534        */
      903     3535    3              IF LAST_KEY > HI_SEQNUM

   3535  8 002330   000000 236000 xsym               LDQ     HI_SEQNUM
         8 002331   000000 116000 xsym               CMPQ    LAST_KEY
         8 002332   002340 603000 8                  TRC     EXEC_RR_1

      904     3536    4              THEN DO ;                    /* None to RR to. */

      905     3537    4                 CALL VEX$ERROR(E$E_NONE,1);

   3537  8 002333   000005 630400 9                  EPPR0   5
         8 002334   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002335   000000 701000 xent               TSX1    VEX$ERROR
         8 002336   000000 011000                    NOP     0

      906     3538    4                 RETURN;

   3538  8 002337   000000 702200 xent               TSX2  ! X66_ARET

      907     3539    4                 END;
      908     3540        /**/
      909     3541        /*E*     ERROR:    VEE-E$E_NONE-0
      910     3542                 DESCRIPTION:   No records to RR to
      911     3543        */
      912     3544    3              END;
      913     3545    2           END;
      914     3546        /**/                                    /* BOTH MODES                         */
      915     3547    1   EXEC_RR_1:
      916     3548    1        RR_POS_CLMN = CMD$ -> IN_CMD_TBL.COLUMN;

   3548  8 002340   000000 470400 xsym  EXEC_RR_1    LDP0    CMD$
         8 002341   000004 235100                    LDA     4,,PR0
         8 002342   000000 755000 xsym               STA     RR_POS_CLMN

      917     3549    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:134  
   3549  8 002343   000007 630400 9                  EPPR0   7
         8 002344   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002345   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 002346   000000 011000                    NOP     0

      918     3550    1        CALL VEX$SET_PROMPT(PR_SEQNUM);

   3550  8 002347   000025 630400 9                  EPPR0   21
         8 002350   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002351   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 002352   000000 011000                    NOP     0

      919     3551    1        IF REC_SIZE >= PC_RECSIZE#

   3551  8 002353   000000 235000 xsym               LDA     REC_SIZE
         8 002354   002000 115007                    CMPA    1024,DL
         8 002355   002363 602000 8                  TNC     s:3562

      920     3552    1        THEN
      921     3553    2        DO ;

      922     3554    2           CALL VEX$ERROR(E$E_UNABLE2RR,2) ;

   3554  8 002356   000132 630400 9                  EPPR0   90
         8 002357   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002360   000000 701000 xent               TSX1    VEX$ERROR
         8 002361   000000 011000                    NOP     0

      923     3555    2           GOTO EXEC_RR_ERR ;

   3555  8 002362   002515 710000 8                  TRA     EXEC_RR_ERR

      924     3556    2           END ;                           /* THEN DO */
      925     3557        /**/
      926     3558        /*E*    ERROR: VEE-E$E_UNABLE2RR-0
      927     3559                MESSAGE: EDIT unable to RR 1024 character records (%U1).
      928     3560                DESCRIPTION: EDIT can only reread records less than 1024 bytes.
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:135  
      929     3561        */
      930     3562    1        IF (REC_SIZE > 0) THEN SINPUT_FPT.BUF_.BOUND = REC_SIZE - 1;

   3562  8 002363   000000 115003                    CMPA    0,DU
         8 002364   002374 600000 8                  TZE     s:3563

   3562  8 002365   000000 236000 xsym               LDQ     REC_SIZE
         8 002366   000001 136007                    SBLQ    1,DL
         8 002367   000020 736000                    QLS     16
         8 002370   000004 676000 2                  ERQ     SINPUT_FPT+4
         8 002371   000034 376000 xsym               ANQ     B_VECTNIL+28
         8 002372   000004 656000 2                  ERSQ    SINPUT_FPT+4
         8 002373   002376 710000 8                  TRA     s:3565

      931     3563    1        ELSE SINPUT_FPT.BUF_.BOUND = 0;

   3563  8 002374   177777 236007                    LDQ     65535,DL
         8 002375   000004 356000 2                  ANSQ    SINPUT_FPT+4

      932     3564        /**/
      933     3565    1        IF RR_POS_CLMN < 0 THEN

   3565  8 002376   000000 236000 xsym               LDQ     RR_POS_CLMN
         8 002377   002410 605000 8                  TPL     s:3568

      934     3566    1           SINPUT_FPT.V.REREADPOS# = MAXIMUM(1,REC_SIZE+RR_POS_CLMN+1);

   3566  8 002400   000000 036000 xsym               ADLQ    REC_SIZE
         8 002401   000001 036007                    ADLQ    1,DL
         8 002402   000001 116007                    CMPQ    1,DL
         8 002403   002405 605000 8                  TPL     s:3566+5
         8 002404   000001 236007                    LDQ     1,DL
         8 002405   000000 620006                    EAX0    0,QL
         8 002406   000007 440000 2                  SXL0    SINPUT_FPT+7
         8 002407   002415 710000 8                  TRA     s:3569

      935     3567    1        ELSE
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:136  
      936     3568    1           SINPUT_FPT.V.REREADPOS# = MINIMUM(1023,RR_POS_CLMN);

   3568  8 002410   001777 116007                    CMPQ    1023,DL
         8 002411   002413 604400 8                  TMOZ    s:3568+3
         8 002412   001777 236007                    LDQ     1023,DL
         8 002413   000000 620006                    EAX0    0,QL
         8 002414   000007 440000 2                  SXL0    SINPUT_FPT+7

      937     3569    1        CALL M$SINPUT(SINPUT_FPT) ALTRET (EXEC_RR_ERR1);

   3569  8 002415   000000 630400 2                  EPPR0   SINPUT_FPT
         8 002416   560013 713400                    CLIMB   alt,+57355
         8 002417   401000 401760                    pmme    nvectors=3
         8 002420   002511 702000 8                  TSX2    EXEC_RR_ERR1

      938     3570    1        CALL M$READ (REREAD_FPT) ALTRET (EXEC_RR_ERR1);

   3570  8 002421   000000 630400 1                  EPPR0   REREAD_FPT
         8 002422   440000 713400                    CLIMB   alt,read
         8 002423   401400 401760                    pmme    nvectors=4
         8 002424   002511 702000 8                  TSX2    EXEC_RR_ERR1

      939     3571    1        REC_SIZE = M$UC$ -> F$DCB.ARS;

   3571  8 002425   000000 470400 xsym               LDP0    M$UC$
         8 002426   000000 235100                    LDA     0,,PR0
         8 002427   000000 755000 xsym               STA     REC_SIZE

      940     3572    2        IF (REC_SIZE = 0) THEN DO;         /* DELETE IF RECORD WIPED OUT         */

   3572  8 002430   002446 601000 8                  TNZ     s:3578

      941     3573    2           CALL VEX$DELREC(M$FILE_NUM,LAST_KEY,LAST_KEY) ALTRET (EXEC_RR_ERR);

   3573  8 002431   000134 630400 9                  EPPR0   92
         8 002432   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 002433   000000 701000 xent               TSX1    VEX$DELREC
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:137  
         8 002434   002515 702000 8                  TSX2    EXEC_RR_ERR

      942     3574    2           DELREC_COUNT = DELREC_COUNT + 1;

   3574  8 002435   000000 235000 xsym               LDA     DELREC_COUNT
         8 002436   000001 035007                    ADLA    1,DL
         8 002437   000000 755000 xsym               STA     DELREC_COUNT

      943     3575    2           FLAGS.TXFLAG = FALSE ;

   3575  8 002440   000034 236000 9                  LDQ     28
         8 002441   000000 356000 xsym               ANSQ    FLAGS

      944     3576    2           IF (FLAGS.INTRA_CMD) THEN RETURN; /* DONT SET TXFLAG               */

   3576  8 002442   000000 236000 xsym               LDQ     FLAGS
         8 002443   200000 316003                    CANQ    65536,DU
         8 002444   002446 600000 8                  TZE     s:3578

   3576  8 002445   000000 702200 xent               TSX2  ! X66_ARET

      945     3577    2           END;
      946     3578    2        IF (FLAGS.INTRA_CMD) THEN DO;

   3578  8 002446   000000 236000 xsym               LDQ     FLAGS
         8 002447   200000 316003                    CANQ    65536,DU
         8 002450   002457 600000 8                  TZE     s:3584

      947     3579    2           FLAGS.TXFLAG = TRUE;

   3579  8 002451   000040 236003                    LDQ     32,DU
         8 002452   000000 256000 xsym               ORSQ    FLAGS

      948     3580    2           STRCHG_COUNT = STRCHG_COUNT + 1;

   3580  8 002453   000000 235000 xsym               LDA     STRCHG_COUNT
         8 002454   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:138  
         8 002455   000000 755000 xsym               STA     STRCHG_COUNT

      949     3581    2           RETURN;

   3581  8 002456   000000 702200 xent               TSX2  ! X66_ARET

      950     3582    2           END;
      951     3583        /**/                                    /* INTER RECORD MODE                  */
      952     3584    1        IF (REC_SIZE ~= 0) THEN CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY)

   3584  8 002457   000000 235000 xsym               LDA     REC_SIZE
         8 002460   002465 600000 8                  TZE     s:3586

   3584  8 002461   000022 630400 9                  EPPR0   18
         8 002462   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002463   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 002464   002515 702000 8                  TSX2    EXEC_RR_ERR

      953     3585    1              ALTRET (EXEC_RR_ERR) ;
      954     3586    1        IF (LAST_KEY = HI_SEQNUM) THEN RETURN;

   3586  8 002465   000000 236000 xsym               LDQ     LAST_KEY
         8 002466   000000 116000 xsym               CMPQ    HI_SEQNUM
         8 002467   002471 601000 8                  TNZ     s:3587

   3586  8 002470   000000 702200 xent               TSX2  ! X66_ARET

      955     3587    1        CALL VEX$READ_SEQUEN ALTRET (EXEC_RR_ERR);

   3587  8 002471   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002472   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 002473   002515 702000 8                  TSX2    EXEC_RR_ERR

      956     3588    2        IF (FLAGS.EOF) THEN DO;

   3588  8 002474   000000 236000 xsym               LDQ     FLAGS
         8 002475   010000 316003                    CANQ    4096,DU
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:139  
         8 002476   002504 600000 8                  TZE     s:3596

      957     3589    2           CALL VEX$ERROR(E$E_EDITEOF,1);

   3589  8 002477   000002 630400 9                  EPPR0   2
         8 002500   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002501   000000 701000 xent               TSX1    VEX$ERROR
         8 002502   000000 011000                    NOP     0

      958     3590    2           RETURN;

   3590  8 002503   000000 702200 xent               TSX2  ! X66_ARET

      959     3591    2           END;
      960     3592        /**/
      961     3593        /*E*     ERROR:    VEE-E$E_EDITEOF-0
      962     3594                 DESCRIPTION: EOF hit durring RR operation
      963     3595        */
      964     3596    1        IF (LAST_KEY > HI_SEQNUM) THEN RETURN;

   3596  8 002504   000000 236000 xsym               LDQ     HI_SEQNUM
         8 002505   000000 116000 xsym               CMPQ    LAST_KEY
         8 002506   002510 603000 8                  TRC     s:3598

   3596  8 002507   000000 702200 xent               TSX2  ! X66_ARET

      965     3597        /**/
      966     3598    1        GOTO EXEC_RR_1;

   3598  8 002510   002340 710000 8                  TRA     EXEC_RR_1

      967     3599        /**/
      968     3600    1   EXEC_RR_ERR1:
      969     3601    1        CALL VEX$ERROR(0,SYSFLAGLEV);

   3601  8 002511   000074 630400 9     EXEC_RR_ERR1 EPPR0   60
         8 002512   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:140  
         8 002513   000000 701000 xent               TSX1    VEX$ERROR
         8 002514   000000 011000                    NOP     0

      970     3602        /**/
      971     3603    1   EXEC_RR_ERR:
      972     3604    1        RETURN;

   3604  8 002515   000000 702200 xent  EXEC_RR_ERR  TSX2  ! X66_ARET

      973     3605        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:141  
      974     3606        /**/
      975     3607    1   VER$EXEC_TC: ENTRY;

   3607  8 002516   000000 700200 xent  VER$EXEC_TC  TSX0  ! X66_AUTO_0
         8 002517   000012 000000                    ZERO    10,0

      976     3608        /**/
      977     3609    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);

   3609  8 002520   000007 630400 9                  EPPR0   7
         8 002521   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002522   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 002523   000000 011000                    NOP     0

      978     3610    1        CALL INSERT(TYPE_BUF.TEXT,0,10,SEQ_TEXT_BUF,' ');

   3610  8 002524   040000 100400                    MLR     fill='040'O
         8 002525   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         8 002526   000000 200011 xsym               ADSC9   TYPE_BUF                 cn=1,n=9
         8 002527   040000 236007                    LDQ     16384,DL
         8 002530   000002 552010 xsym               STBQ    TYPE_BUF+2,'10'O

      979     3611    1        I = 10;                            /* POSITION IN TYPE_BUF               */

   3611  8 002531   000012 235007                    LDA     10,DL
         8 002532   000000 755000 xsym               STA     I

      980     3612    1        TEMP_CLMN = LO_EXEC_CLMN;          /* POSITION IN REC_BUF                */

   3612  8 002533   000000 236000 xsym               LDQ     LO_EXEC_CLMN
         8 002534   000000 756000 xsym               STQ     TEMP_CLMN

      981     3613    1        TEMP_COUNT2 = 0;                   /* ONE BLANK FIELD FLAG               */

   3613  8 002535   200004 450100                    STZ     TEMP_COUNT2,,AUTO

      982     3614        /**/
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:142  
      983     3615    2        DO WHILE (TEMP_CLMN <= HI_EXEC_CLMN); /* COMPRESS SELECTED RANGE      */

   3615  8 002536   000000 116000 xsym               CMPQ    HI_EXEC_CLMN
         8 002537   002541 600000 8                  TZE     s:3616
         8 002540   002576 603000 8                  TRC     s:3629

      984     3616    3           IF (SUBSTR(REC_BUF,TEMP_CLMN,1) ~= ' ') THEN DO;

   3616  8 002541   000000 235000 xsym               LDA     TEMP_CLMN
         8 002542   040000 106405                    CMPC    fill='040'O
         8 002543   000000 000001 xsym               ADSC9   REC_BUF,A                cn=0,n=1
         8 002544   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 002545   002556 600000 8                  TZE     s:3621

      985     3617    3              CALL INSERT(TYPE_BUF.TEXT,I,1,SUBSTR(REC_BUF,TEMP_CLMN,1));

   3617  8 002546   000000 236000 xsym               LDQ     I
         8 002547   040006 100405                    MLR     fill='040'O
         8 002550   000000 000001 xsym               ADSC9   REC_BUF,A                cn=0,n=1
         8 002551   000000 200001 xsym               ADSC9   TYPE_BUF,Q               cn=1,n=1

      986     3618    3              I = I+1;

   3618  8 002552   000001 036007                    ADLQ    1,DL
         8 002553   000000 756000 xsym               STQ     I

      987     3619    3              TEMP_COUNT2 = 0;

   3619  8 002554   200004 450100                    STZ     TEMP_COUNT2,,AUTO

      988     3620    3              END;

   3620  8 002555   002570 710000 8                  TRA     s:3626

      989     3621    3           ELSE IF (TEMP_COUNT2 =0) THEN DO;

   3621  8 002556   200004 236100                    LDQ     TEMP_COUNT2,,AUTO
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:143  
         8 002557   002570 601000 8                  TNZ     s:3626

      990     3622    3                 CALL INSERT (TYPE_BUF.TEXT,I,1,' ');

   3622  8 002560   000000 235000 xsym               LDA     I
         8 002561   040005 100400                    MLR     fill='040'O
         8 002562   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 002563   000000 200001 xsym               ADSC9   TYPE_BUF,A               cn=1,n=1

      991     3623    3                 I = I+1;

   3623  8 002564   000001 035007                    ADLA    1,DL
         8 002565   000000 755000 xsym               STA     I

      992     3624    3                 TEMP_COUNT2 = 1;

   3624  8 002566   000001 235007                    LDA     1,DL
         8 002567   200004 755100                    STA     TEMP_COUNT2,,AUTO

      993     3625    3                 END;

      994     3626    2           TEMP_CLMN = TEMP_CLMN+1;

   3626  8 002570   000000 235000 xsym               LDA     TEMP_CLMN
         8 002571   000001 035007                    ADLA    1,DL
         8 002572   000000 755000 xsym               STA     TEMP_CLMN

      995     3627    2           END;

   3627  8 002573   000000 236000 xsym               LDQ     HI_EXEC_CLMN
         8 002574   000000 116000 xsym               CMPQ    TEMP_CLMN
         8 002575   002541 603000 8                  TRC     s:3616

      996     3628        /**/
      997     3629    1        CALL INSERT (TYPE_BUF.TEXT,I,MAX_CLMN-I,' ');

   3629  8 002576   000000 236000 xsym               LDQ     MAX_CLMN
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:144  
         8 002577   000000 136000 xsym               SBLQ    I
         8 002600   000000 620006                    EAX0    0,QL
         8 002601   000000 235000 xsym               LDA     I
         8 002602   040045 100400                    MLR     fill='040'O
         8 002603   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         8 002604   000000 200010 xsym               ADSC9   TYPE_BUF,A               cn=1,n=*X0

      998     3630    1        CALL VEX$TYPE_REC(TYPECR);

   3630  8 002605   000003 630400 9                  EPPR0   3
         8 002606   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002607   000000 701000 xent               TSX1    VEX$TYPE_REC
         8 002610   000000 011000                    NOP     0

      999     3631    1        RETURN;

   3631  8 002611   000000 702200 xent               TSX2  ! X66_ARET

     1000     3632        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:145  
     1001     3633        /**/
     1002     3634    1   VER$EXEC_TN: ENTRY;

   3634  8 002612   000000 700200 xent  VER$EXEC_TN  TSX0  ! X66_AUTO_0
         8 002613   000012 000000                    ZERO    10,0

     1003     3635        /**/
     1004     3636    1        CALL VEX$CLMN_DFLT;

   3636  8 002614   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002615   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 002616   000000 011000                    NOP     0

     1005     3637        /**/
     1006     3638    1        TEMP_COUNT = CMD$ -> TN_CMD_TBL.COUNT;

   3638  8 002617   000000 470400 xsym               LDP0    CMD$
         8 002620   000001 235100                    LDA     1,,PR0
         8 002621   000000 755000 xsym               STA     TEMP_COUNT

     1007     3639    1        IF (TEMP_COUNT = 0) THEN RETURN ;

   3639  8 002622   002624 601000 8                  TNZ     s:3641

   3639  8 002623   000000 702200 xent               TSX2  ! X66_ARET

     1008     3640        /**/
     1009     3641    2        IF (CMD_CODE = TPCMD) THEN DO;

   3641  8 002624   000000 236000 xsym               LDQ     CMD_CODE
         8 002625   000055 116007                    CMPQ    45,DL
         8 002626   002710 601000 8                  TNZ     s:3658

     1010     3642    2           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN

   3642  8 002627   000000 236000 xsym               LDQ     FLAGS
         8 002630   002000 316003                    CANQ    1024,DU
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:146  
         8 002631   002634 601000 8                  TNZ     s:3644
         8 002632   400000 316007                    CANQ    -131072,DL
         8 002633   002654 600000 8                  TZE     s:3648

     1011     3643    3           DO ;

     1012     3644    3              PREC_REV_FPT.V.N# = -((LAST_KEY - LO_SEQNUM)/1000 + TEMP_COUNT + 1 ) ;

   3644  8 002634   000000 236000 xsym               LDQ     LAST_KEY
         8 002635   000000 136000 xsym               SBLQ    LO_SEQNUM
         8 002636   001750 506007                    DIV     1000,DL
         8 002637   000000 036000 xsym               ADLQ    TEMP_COUNT
         8 002640   000027 676000 xsym               ERQ     B_VECTNIL+23
         8 002641   000147 756000 2                  STQ     PREC_REV_FPT+7

     1013     3645    3              IF ((FLAGS.EOF) AND (SAVED_CMD ~= TNCMD)) THEN

   3645  8 002642   000000 236000 xsym               LDQ     FLAGS
         8 002643   010000 316003                    CANQ    4096,DU
         8 002644   002657 600000 8                  TZE     s:3649
         8 002645   000000 235000 xsym               LDA     SAVED_CMD
         8 002646   000056 115007                    CMPA    46,DL
         8 002647   002657 600000 8                  TZE     s:3649

     1014     3646    3                 PREC_REV_FPT.V.N# = - (TEMP_COUNT ) ;

   3646  8 002650   000000 235003                    LDA     0,DU
         8 002651   000000 135000 xsym               SBLA    TEMP_COUNT
         8 002652   000147 755000 2                  STA     PREC_REV_FPT+7

     1015     3647    3              END ;                        /* THEN DO */

   3647  8 002653   002657 710000 8                  TRA     s:3649

     1016     3648    2           ELSE PREC_REV_FPT.V.N# = -TEMP_COUNT ;

   3648  8 002654   000027 675000 xsym               ERA     B_VECTNIL+23
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:147  
         8 002655   000001 035007                    ADLA    1,DL
         8 002656   000147 755000 2                  STA     PREC_REV_FPT+7

     1017     3649    2           PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;

   3649  8 002657   000046 237000 9                  LDAQ    38
         8 002660   000142 757000 2                  STAQ    PREC_REV_FPT+2

     1018     3650    2           PREC_REV_FPT.V.KEYS# = '1'B ;

   3650  8 002661   400000 236007                    LDQ     -131072,DL
         8 002662   000146 256000 2                  ORSQ    PREC_REV_FPT+6

     1019     3651    2           LAST_KEY = LO_SEQNUM ;

   3651  8 002663   000000 235000 xsym               LDA     LO_SEQNUM
         8 002664   000000 755000 xsym               STA     LAST_KEY

     1020     3652    2           CALL M$PRECORD(PREC_REV_FPT) ALTRET(TP_PREC_ERR);

   3652  8 002665   000140 630400 2                  EPPR0   PREC_REV_FPT
         8 002666   440003 713400                    CLIMB   alt,+16387
         8 002667   401000 401760                    pmme    nvectors=3
         8 002670   003024 702000 8                  TSX2    TP_PREC_ERR

     1021     3653    2           PREC_REV_FPT.V.KEYS# = '0'B ;

   3653  8 002671   000137 236000 9                  LDQ     95
         8 002672   000146 356000 2                  ANSQ    PREC_REV_FPT+6

     1022     3654    2           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN

   3654  8 002673   000000 236000 xsym               LDQ     FLAGS
         8 002674   002000 316003                    CANQ    1024,DU
         8 002675   002700 601000 8                  TNZ     s:3655
         8 002676   400000 316007                    CANQ    -131072,DL
         8 002677   002705 600000 8                  TZE     s:3656
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:148  

     1023     3655    2              LAST_KEY = ((LAST_KEY-1) * 1000) + Y003 ;

   3655  8 002700   000000 236000 xsym               LDQ     LAST_KEY
         8 002701   001750 402007                    MPY     1000,DL
         8 002702   000000 036000 xsym               ADLQ    Y003
         8 002703   001750 136007                    SBLQ    1000,DL
         8 002704   000000 756000 xsym               STQ     LAST_KEY

     1024     3656    2           LO_SEQNUM = LAST_KEY;

   3656  8 002705   000000 235000 xsym               LDA     LAST_KEY
         8 002706   000000 755000 xsym               STA     LO_SEQNUM

     1025     3657    2           END;

   3657  8 002707   002714 710000 8                  TRA     TN_PRECOK

     1026     3658    1        ELSE CALL VEX$READ_RANDOM(HI_SEQNUM) ALTRET(EXEC_TN_ERR);

   3658  8 002710   000037 630400 9                  EPPR0   31
         8 002711   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 002712   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 002713   003101 702000 8                  TSX2    EXEC_TN_ERR

     1027     3659        /**/
     1028     3660    1   TN_PRECOK:
     1029     3661    1        CALL VEX$READ_SEQUEN ALTRET(EXEC_TN_ERR);

   3661  8 002714   000002 631400 xsym  TN_PRECOK    EPPR1   B_VECTNIL+2
         8 002715   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 002716   003101 702000 8                  TSX2    EXEC_TN_ERR

     1030     3662    2        IF (FLAGS.EOF) THEN DO;

   3662  8 002717   000000 236000 xsym               LDQ     FLAGS
         8 002720   010000 316003                    CANQ    4096,DU
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:149  
         8 002721   002731 600000 8                  TZE     s:3667

     1031     3663    2           CALL VEX$ERROR(E$E_EDITEOF,1);

   3663  8 002722   000002 630400 9                  EPPR0   2
         8 002723   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002724   000000 701000 xent               TSX1    VEX$ERROR
         8 002725   000000 011000                    NOP     0

     1032     3664    2           HI_SEQNUM = LAST_KEY;

   3664  8 002726   000000 235000 xsym               LDA     LAST_KEY
         8 002727   000000 755000 xsym               STA     HI_SEQNUM

     1033     3665    2           RETURN;

   3665  8 002730   000000 702200 xent               TSX2  ! X66_ARET

     1034     3666    2           END;
     1035     3667    1        LO_SEQNUM = LAST_KEY;

   3667  8 002731   000000 235000 xsym               LDA     LAST_KEY
         8 002732   000000 755000 xsym               STA     LO_SEQNUM

     1036     3668        /**/
     1037     3669        /* use the the LAST_TYPE_CMD for the display of TN and TP*/
     1038     3670    1        IF (LAST_TYPE_CMD = TSCMD) THEN CALL VER$EXEC_TS;

   3670  8 002733   000000 235000 xsym               LDA     LAST_TYPE_CMD
         8 002734   000063 115007                    CMPA    51,DL
         8 002735   002742 601000 8                  TNZ     s:3671

   3670  8 002736   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002737   003102 701000 8                  TSX1    s:3712
         8 002740   000000 011000                    NOP     0
         8 002741   002753 710000 8                  TRA     s:3673

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:150  
     1039     3671    1        ELSE IF (LAST_TYPE_CMD = TCCMD) THEN CALL VER$EXEC_TC;

   3671  8 002742   000064 115007                    CMPA    52,DL
         8 002743   002750 601000 8                  TNZ     s:3672

   3671  8 002744   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002745   002516 701000 8                  TSX1    s:3607
         8 002746   000000 011000                    NOP     0
         8 002747   002753 710000 8                  TRA     s:3673

     1040     3672    1           ELSE CALL VER$EXEC_TY;          /* Default if none specified */

   3672  8 002750   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002751   003120 701000 8                  TSX1    s:3720
         8 002752   000000 011000                    NOP     0

     1041     3673    1        TEMP_COUNT = TEMP_COUNT - 1;

   3673  8 002753   000000 235000 xsym               LDA     TEMP_COUNT
         8 002754   000001 135007                    SBLA    1,DL
         8 002755   000000 755000 xsym               STA     TEMP_COUNT

     1042     3674    1        HI_SEQNUM = LAST_KEY;

   3674  8 002756   000000 236000 xsym               LDQ     LAST_KEY
         8 002757   000000 756000 xsym               STQ     HI_SEQNUM

     1043     3675        /**/
     1044     3676    2        DO WHILE (TEMP_COUNT > 0);

   3676  8 002760   000000 115003                    CMPA    0,DU
         8 002761   003023 600000 8                  TZE     s:3689

     1045     3677    2           CALL VEX$READ_SEQUEN ALTRET(EXEC_TN_ERR);

   3677  8 002762   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 002763   000000 701000 xent               TSX1    VEX$READ_SEQUEN
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:151  
         8 002764   003101 702000 8                  TSX2    EXEC_TN_ERR

     1046     3678    2           HI_SEQNUM = LAST_KEY;

   3678  8 002765   000000 235000 xsym               LDA     LAST_KEY
         8 002766   000000 755000 xsym               STA     HI_SEQNUM

     1047     3679    3           IF (FLAGS.EOF) THEN DO;

   3679  8 002767   000000 236000 xsym               LDQ     FLAGS
         8 002770   010000 316003                    CANQ    4096,DU
         8 002771   002777 600000 8                  TZE     s:3684

     1048     3680    3              CALL VEX$ERROR(E$E_EDITEOF,1);

   3680  8 002772   000002 630400 9                  EPPR0   2
         8 002773   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 002774   000000 701000 xent               TSX1    VEX$ERROR
         8 002775   000000 011000                    NOP     0

     1049     3681    3              RETURN;

   3681  8 002776   000000 702200 xent               TSX2  ! X66_ARET

     1050     3682    3              END;
     1051     3683        /* use the the LAST_TYPE_CMD for the display of TN and TP*/
     1052     3684    2           IF (LAST_TYPE_CMD = TSCMD) THEN CALL VER$EXEC_TS;

   3684  8 002777   000000 235000 xsym               LDA     LAST_TYPE_CMD
         8 003000   000063 115007                    CMPA    51,DL
         8 003001   003006 601000 8                  TNZ     s:3685

   3684  8 003002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003003   003102 701000 8                  TSX1    s:3712
         8 003004   000000 011000                    NOP     0
         8 003005   003017 710000 8                  TRA     s:3687

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:152  
     1053     3685    2           ELSE IF (LAST_TYPE_CMD = TCCMD) THEN CALL VER$EXEC_TC;

   3685  8 003006   000064 115007                    CMPA    52,DL
         8 003007   003014 601000 8                  TNZ     s:3686

   3685  8 003010   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003011   002516 701000 8                  TSX1    s:3607
         8 003012   000000 011000                    NOP     0
         8 003013   003017 710000 8                  TRA     s:3687

     1054     3686    2              ELSE CALL VER$EXEC_TY;       /* Default if none specified */

   3686  8 003014   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003015   003120 701000 8                  TSX1    s:3720
         8 003016   000000 011000                    NOP     0

     1055     3687    2           TEMP_COUNT = TEMP_COUNT - 1;

   3687  8 003017   000000 235000 xsym               LDA     TEMP_COUNT
         8 003020   000001 135007                    SBLA    1,DL
         8 003021   000000 755000 xsym               STA     TEMP_COUNT

     1056     3688    2           END;

   3688  8 003022   002762 601000 8                  TNZ     s:3677

     1057     3689    1        RETURN;

   3689  8 003023   000000 702200 xent               TSX2  ! X66_ARET

     1058     3690        /**/
     1059     3691    1   TP_PREC_ERR:
     1060     3692    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN DO;

   3692  8 003024   000000 470400 xsym  TP_PREC_ERR  LDP0    B$TCB$
         8 003025   000000 471500                    LDP1    0,,PR0
         8 003026   100102 236100                    LDQ     66,,PR1
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:153  
         8 003027   377770 376007                    ANQ     131064,DL
         8 003030   000040 116007                    CMPQ    32,DL
         8 003031   003075 601000 8                  TNZ     s:3706

     1061     3693    3           IF (FLAGS.CONSEC_MODE)OR(FLAGS.REL_MODE) THEN DO ;

   3693  8 003032   000000 236000 xsym               LDQ     FLAGS
         8 003033   002000 316003                    CANQ    1024,DU
         8 003034   003037 601000 8                  TNZ     s:3694
         8 003035   400000 316007                    CANQ    -131072,DL
         8 003036   003052 600000 8                  TZE     s:3698

     1062     3694    3              IF (M$FILE$ -> F$DCB.ARS = 1) THEN TEMP_COUNT = 0 ;

   3694  8 003037   000000 473400 xsym               LDP3    M$FILE$
         8 003040   300000 235100                    LDA     0,,PR3
         8 003041   000001 115007                    CMPA    1,DL
         8 003042   003045 601000 8                  TNZ     s:3695

   3694  8 003043   000000 450000 xsym               STZ     TEMP_COUNT
         8 003044   003055 710000 8                  TRA     s:3699

     1063     3695    3              ELSE TEMP_COUNT = TEMP_COUNT + M$FILE$ -> F$DCB.ARS +

   3695  8 003045   000000 236000 xsym               LDQ     TEMP_COUNT
         8 003046   300000 036100                    ADLQ    0,,PR3
         8 003047   000147 036000 2                  ADLQ    PREC_REV_FPT+7
         8 003050   000000 756000 xsym               STQ     TEMP_COUNT

     1064     3696    3                    PREC_REV_FPT.V.N# ;
     1065     3697    3              END ;                        /* THEN DO */

   3697  8 003051   003055 710000 8                  TRA     s:3699

     1066     3698    2           ELSE TEMP_COUNT = M$FILE$ -> F$DCB.ARS ; /* TYPE WHATS THERE   */

   3698  8 003052   000000 473400 xsym               LDP3    M$FILE$
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:154  
         8 003053   300000 235100                    LDA     0,,PR3
         8 003054   000000 755000 xsym               STA     TEMP_COUNT

     1067     3699    2           PREC_REV_FPT.V.KEYS# = '0'B ;

   3699  8 003055   000137 236000 9                  LDQ     95
         8 003056   000146 356000 2                  ANSQ    PREC_REV_FPT+6

     1068     3700    2           CALL VEX$ERROR(0,1);

   3700  8 003057   000140 630400 9                  EPPR0   96
         8 003060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 003061   000000 701000 xent               TSX1    VEX$ERROR
         8 003062   000000 011000                    NOP     0

     1069     3701    2           IF (FLAGS.CONSEC_MODE) THEN LAST_KEY = Y003;

   3701  8 003063   000000 236000 xsym               LDQ     FLAGS
         8 003064   002000 316003                    CANQ    1024,DU
         8 003065   003070 600000 8                  TZE     s:3702

   3701  8 003066   000000 235000 xsym               LDA     Y003
         8 003067   000000 755000 xsym               STA     LAST_KEY

     1070     3702    2           LO_SEQNUM = LAST_KEY;

   3702  8 003070   000000 235000 xsym               LDA     LAST_KEY
         8 003071   000000 755000 xsym               STA     LO_SEQNUM

     1071     3703    2           IF (TEMP_COUNT > 0) THEN GOTO TN_PRECOK;

   3703  8 003072   000000 235000 xsym               LDA     TEMP_COUNT
         8 003073   002714 601000 8                  TNZ     TN_PRECOK

     1072     3704    2           ELSE RETURN;

   3704  8 003074   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:155  

     1073     3705    2           END;
     1074     3706    1        CALL VEX$ERROR(0,3);

   3706  8 003075   000074 630400 9                  EPPR0   60
         8 003076   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 003077   000000 701000 xent               TSX1    VEX$ERROR
         8 003100   000000 011000                    NOP     0

     1075     3707        /**/
     1076     3708    1   EXEC_TN_ERR:
     1077     3709    1        RETURN;

   3709  8 003101   000000 702200 xent  EXEC_TN_ERR  TSX2  ! X66_ARET

     1078     3710        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:156  
     1079     3711        /**/
     1080     3712    1   VER$EXEC_TS: ENTRY;

   3712  8 003102   000000 700200 xent  VER$EXEC_TS  TSX0  ! X66_AUTO_0
         8 003103   000012 000000                    ZERO    10,0

     1081     3713        /**/
     1082     3714    1        TYPE_BUF.TEXT = SUBSTR(REC_BUF,LO_EXEC_CLMN,

   3714  8 003104   000000 236000 xsym               LDQ     HI_EXEC_CLMN
         8 003105   000000 136000 xsym               SBLQ    LO_EXEC_CLMN
         8 003106   000001 620006                    EAX0    1,QL
         8 003107   000000 235000 xsym               LDA     LO_EXEC_CLMN
         8 003110   040000 100445                    MLR     fill='040'O
         8 003111   000000 000010 xsym               ADSC9   REC_BUF,A                cn=0,n=*X0
         8 003112   000000 202104 xsym               ADSC9   TYPE_BUF                 cn=1,n=1092

     1083     3715    1           HI_EXEC_CLMN - LO_EXEC_CLMN + 1);
     1084     3716    1        CALL VEX$TYPE_REC(TYPECR);

   3716  8 003113   000003 630400 9                  EPPR0   3
         8 003114   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003115   000000 701000 xent               TSX1    VEX$TYPE_REC
         8 003116   000000 011000                    NOP     0

     1085     3717    1        RETURN;

   3717  8 003117   000000 702200 xent               TSX2  ! X66_ARET

     1086     3718        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:157  
     1087     3719        /**/
     1088     3720    1   VER$EXEC_TY: ENTRY;

   3720  8 003120   000000 700200 xent  VER$EXEC_TY  TSX0  ! X66_AUTO_0
         8 003121   000012 000000                    ZERO    10,0

     1089     3721        /**/
     1090     3722    1        CALL VEX$SEQNUM_TEXT(LAST_KEY);

   3722  8 003122   000007 630400 9                  EPPR0   7
         8 003123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003124   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 003125   000000 011000                    NOP     0

     1091     3723    1        IF (CMD_CODE = TYCMD) THEN

   3723  8 003126   000000 235000 xsym               LDA     CMD_CODE
         8 003127   000062 115007                    CMPA    50,DL
         8 003130   003150 601000 8                  TNZ     s:3727

     1092     3724    1           CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,

   3724  8 003131   000000 236000 xsym               LDQ     HI_EXEC_CLMN
         8 003132   000000 136000 xsym               SBLQ    LO_EXEC_CLMN
         8 003133   040000 100400                    MLR     fill='040'O
         8 003134   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         8 003135   000000 200011 xsym               ADSC9   TYPE_BUF                 cn=1,n=9
         8 003136   200006 756100                    STQ     REMAIN+1,,AUTO
         8 003137   040000 236007                    LDQ     16384,DL
         8 003140   000002 552010 xsym               STBQ    TYPE_BUF+2,'10'O
         8 003141   200006 720100                    LXL0    REMAIN+1,,AUTO
         8 003142   000001 621010                    EAX1    1,X0
         8 003143   000000 235000 xsym               LDA     LO_EXEC_CLMN
         8 003144   040000 100445                    MLR     fill='040'O
         8 003145   000000 000011 xsym               ADSC9   REC_BUF,A                cn=0,n=*X1
         8 003146   000002 602072 xsym               ADSC9   TYPE_BUF+2               cn=3,n=1082
         8 003147   003161 710000 8                  TRA     s:3729
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:158  

     1093     3725    1              LO_EXEC_CLMN,HI_EXEC_CLMN-LO_EXEC_CLMN+1));
     1094     3726    1        ELSE
     1095     3727    1           CALL CONCAT(TYPE_BUF.TEXT,SEQ_TEXT_BUF,' ',SUBSTR(REC_BUF,

   3727  8 003150   040000 100400                    MLR     fill='040'O
         8 003151   000000 000011 xsym               ADSC9   SEQ_TEXT_BUF             cn=0,n=9
         8 003152   000000 200011 xsym               ADSC9   TYPE_BUF                 cn=1,n=9
         8 003153   040000 236007                    LDQ     16384,DL
         8 003154   000002 552010 xsym               STBQ    TYPE_BUF+2,'10'O
         8 003155   000000 720000 xsym               LXL0    REC_SIZE
         8 003156   040000 100440                    MLR     fill='040'O
         8 003157   000000 000010 xsym               ADSC9   REC_BUF                  cn=0,n=*X0
         8 003160   000002 602072 xsym               ADSC9   TYPE_BUF+2               cn=3,n=1082

     1096     3728    1              0,REC_SIZE));
     1097     3729    1        CALL VEX$TYPE_REC(TYPECR);

   3729  8 003161   000003 630400 9                  EPPR0   3
         8 003162   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003163   000000 701000 xent               TSX1    VEX$TYPE_REC
         8 003164   000000 011000                    NOP     0

     1098     3730    1        RETURN;

   3730  8 003165   000000 702200 xent               TSX2  ! X66_ARET

     1099     3731        %EJECT;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:159  
     1100     3732        /**/
     1101     3733    1   VER$EXEC_UPARROW: ENTRY;

   3733  8 003166   000000 700200 xent  VER$EXEC_UP* TSX0  ! X66_AUTO_0
         8 003167   000012 000000                    ZERO    10,0

     1102     3734        /**/
     1103     3735    2        IF (~FLAGS.EDIT_MODE) THEN DO;     /* NO FILE OPEN                       */

   3735  8 003170   000000 236000 xsym               LDQ     FLAGS
         8 003171   400000 376003                    ANQ     -131072,DU
         8 003172   400000 676003                    ERQ     -131072,DU
         8 003173   003201 600000 8                  TZE     s:3745

     1104     3736    2           CALL VEX$ERROR (E$E_NOFILE,3);

   3736  8 003174   000143 630400 9                  EPPR0   99
         8 003175   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 003176   000000 701000 xent               TSX1    VEX$ERROR
         8 003177   000000 011000                    NOP     0

     1105     3737        /**/
     1106     3738        /*E*     ERROR:    VEE-E$E_NOFILE-0
     1107     3739                 DESCRIPTION: A record oriented command has been received
     1108     3740                           without a file open to edit.
     1109     3741        */
     1110     3742    2           RETURN;

   3742  8 003200   000000 702200 xent               TSX2  ! X66_ARET

     1111     3743    2           END;
     1112     3744        /**/
     1113     3745    1        CALL VEX$READ_RANDOM(LO_SEQNUM) ALTRET(UPARROW_ERR);

   3745  8 003201   000036 630400 9                  EPPR0   30
         8 003202   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003203   000000 701000 xent               TSX1    VEX$READ_RANDOM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:160  
         8 003204   003422 702000 8                  TSX2    UPARROW_ERR

     1114     3746    1        IF (FLAGS.EXISTS) THEN PREC_REV_FPT.V.N# = -2;

   3746  8 003205   000000 236000 xsym               LDQ     FLAGS
         8 003206   020000 316003                    CANQ    8192,DU
         8 003207   003213 600000 8                  TZE     s:3747

   3746  8 003210   000002 335007                    LCA     2,DL
         8 003211   000147 755000 2                  STA     PREC_REV_FPT+7
         8 003212   003215 710000 8                  TRA     s:3748

     1115     3747    1        ELSE PREC_REV_FPT.V.N# = -1;

   3747  8 003213   000001 335007                    LCA     1,DL
         8 003214   000147 755000 2                  STA     PREC_REV_FPT+7

     1116     3748    1        PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;

   3748  8 003215   000046 237000 9                  LDAQ    38
         8 003216   000142 757000 2                  STAQ    PREC_REV_FPT+2

     1117     3749    1        CALL M$PRECORD(PREC_REV_FPT) ALTRET(NL_PREC_ERR);

   3749  8 003217   000140 630400 2                  EPPR0   PREC_REV_FPT
         8 003220   440003 713400                    CLIMB   alt,+16387
         8 003221   401000 401760                    pmme    nvectors=3
         8 003222   003412 702000 8                  TSX2    NL_PREC_ERR

     1118     3750    1        IF (FLAGS.CONSEC_MODE) THEN

   3750  8 003223   000000 236000 xsym               LDQ     FLAGS
         8 003224   002000 316003                    CANQ    1024,DU
         8 003225   003233 600000 8                  TZE     s:3752

     1119     3751    1           LAST_KEY = ((LAST_KEY-1) * 1000) + Y003;

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:161  
   3751  8 003226   000000 236000 xsym               LDQ     LAST_KEY
         8 003227   001750 402007                    MPY     1000,DL
         8 003230   000000 036000 xsym               ADLQ    Y003
         8 003231   001750 136007                    SBLQ    1000,DL
         8 003232   000000 756000 xsym               STQ     LAST_KEY

     1120     3752    1        GOTO COMMON;

   3752  8 003233   003253 710000 8                  TRA     COMMON

     1121     3753        /**/
     1122     3754    1   VER$EXEC_NEWLINE: ENTRY;

   3754  8 003234   000000 700200 xent  VER$EXEC_NE* TSX0  ! X66_AUTO_0
         8 003235   000012 000000                    ZERO    10,0

     1123     3755        /**/
     1124     3756    2        IF (~FLAGS.EDIT_MODE) THEN DO;     /* NO FILE OPEN                       */

   3756  8 003236   000000 236000 xsym               LDQ     FLAGS
         8 003237   400000 376003                    ANQ     -131072,DU
         8 003240   400000 676003                    ERQ     -131072,DU
         8 003241   003247 600000 8                  TZE     s:3766

     1125     3757    2           CALL VEX$ERROR (E$E_NOFILE,3);

   3757  8 003242   000143 630400 9                  EPPR0   99
         8 003243   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 003244   000000 701000 xent               TSX1    VEX$ERROR
         8 003245   000000 011000                    NOP     0

     1126     3758        /**/
     1127     3759        /*E*     ERROR:    VEE-E$E_NOFILE-0
     1128     3760                 DESCRIPTION: A record oriented command has been received
     1129     3761                           without a file open to edit.
     1130     3762        */
     1131     3763    2           RETURN;
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:162  

   3763  8 003246   000000 702200 xent               TSX2  ! X66_ARET

     1132     3764    2           END;
     1133     3765        /**/
     1134     3766    1        CALL VEX$READ_RANDOM(HI_SEQNUM) ALTRET(UPARROW_ERR);

   3766  8 003247   000037 630400 9                  EPPR0   31
         8 003250   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003251   000000 701000 xent               TSX1    VEX$READ_RANDOM
         8 003252   003422 702000 8                  TSX2    UPARROW_ERR

     1135     3767        /**/
     1136     3768    1   COMMON:
     1137     3769    1        CALL VEX$CLMN_DFLT;

   3769  8 003253   000002 631400 xsym  COMMON       EPPR1   B_VECTNIL+2
         8 003254   000000 701000 xent               TSX1    VEX$CLMN_DFLT
         8 003255   000000 011000                    NOP     0

     1138     3770        /**/
     1139     3771    1        CALL VEX$READ_SEQUEN ALTRET(UPARROW_RET);

   3771  8 003256   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003257   000000 701000 xent               TSX1    VEX$READ_SEQUEN
         8 003260   003426 702000 8                  TSX2    UPARROW_RET

     1140     3772    2        IF (FLAGS.EOF) THEN DO;

   3772  8 003261   000000 236000 xsym               LDQ     FLAGS
         8 003262   010000 316003                    CANQ    4096,DU
         8 003263   003271 600000 8                  TZE     s:3777

     1141     3773    2           CALL VEX$ERROR(E$E_EDITEOF,1);

   3773  8 003264   000002 630400 9                  EPPR0   2
         8 003265   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:163  
         8 003266   000000 701000 xent               TSX1    VEX$ERROR
         8 003267   000000 011000                    NOP     0

     1142     3774    2           RETURN;

   3774  8 003270   000000 702200 xent               TSX2  ! X66_ARET

     1143     3775    2           END;
     1144     3776        /**/
     1145     3777    1        IF (LAST_TYPE_CMD = TYCMD) THEN CALL VER$EXEC_TY;

   3777  8 003271   000000 235000 xsym               LDA     LAST_TYPE_CMD
         8 003272   000062 115007                    CMPA    50,DL
         8 003273   003300 601000 8                  TNZ     s:3778

   3777  8 003274   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003275   003120 701000 8                  TSX1    s:3720
         8 003276   000000 011000                    NOP     0
         8 003277   003406 710000 8                  TRA     s:3802

     1146     3778    1        ELSE IF (LAST_TYPE_CMD = TSCMD) THEN CALL VER$EXEC_TS;

   3778  8 003300   000063 115007                    CMPA    51,DL
         8 003301   003306 601000 8                  TNZ     s:3779

   3778  8 003302   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003303   003102 701000 8                  TSX1    s:3712
         8 003304   000000 011000                    NOP     0
         8 003305   003406 710000 8                  TRA     s:3802

     1147     3779    1           ELSE IF (LAST_TYPE_CMD = TCCMD) THEN CALL VER$EXEC_TC;

   3779  8 003306   000064 115007                    CMPA    52,DL
         8 003307   003314 601000 8                  TNZ     s:3781

   3779  8 003310   000002 631400 xsym               EPPR1   B_VECTNIL+2
         8 003311   002516 701000 8                  TSX1    s:3607
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:164  
         8 003312   000000 011000                    NOP     0
         8 003313   003406 710000 8                  TRA     s:3802

     1148     3780    2              ELSE DO;

     1149     3781    2                 CALL VEX$SEQNUM_TEXT(LAST_KEY);

   3781  8 003314   000007 630400 9                  EPPR0   7
         8 003315   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003316   000000 701000 xent               TSX1    VEX$SEQNUM_TEXT
         8 003317   000000 011000                    NOP     0

     1150     3782    2                 CALL VEX$SET_PROMPT(PR_SEQNUM);

   3782  8 003320   000025 630400 9                  EPPR0   21
         8 003321   000017 631400 xsym               EPPR1   B_VECTNIL+15
         8 003322   000000 701000 xent               TSX1    VEX$SET_PROMPT
         8 003323   000000 011000                    NOP     0

     1151     3783    2                 IF (REC_SIZE > 0) THEN SINPUT_FPT.BUF_.BOUND = REC_SIZE - 1;

   3783  8 003324   000000 235000 xsym               LDA     REC_SIZE
         8 003325   003335 600000 8                  TZE     s:3784

   3783  8 003326   000000 236000 xsym               LDQ     REC_SIZE
         8 003327   000001 136007                    SBLQ    1,DL
         8 003330   000020 736000                    QLS     16
         8 003331   000004 676000 2                  ERQ     SINPUT_FPT+4
         8 003332   000034 376000 xsym               ANQ     B_VECTNIL+28
         8 003333   000004 656000 2                  ERSQ    SINPUT_FPT+4
         8 003334   003337 710000 8                  TRA     s:3785

     1152     3784    2                 ELSE SINPUT_FPT.BUF_.BOUND = 0;

   3784  8 003335   177777 236007                    LDQ     65535,DL
         8 003336   000004 356000 2                  ANSQ    SINPUT_FPT+4

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:165  
     1153     3785    2                 IF RR_POS_CLMN < 0 THEN

   3785  8 003337   000000 236000 xsym               LDQ     RR_POS_CLMN
         8 003340   003351 605000 8                  TPL     s:3788

     1154     3786    2                    SINPUT_FPT.V.REREADPOS# = MAXIMUM(0,REC_SIZE+RR_POS_CLMN+1);

   3786  8 003341   000000 036000 xsym               ADLQ    REC_SIZE
         8 003342   000001 036007                    ADLQ    1,DL
         8 003343   000000 116003                    CMPQ    0,DU
         8 003344   003346 605000 8                  TPL     s:3786+5
         8 003345   000000 236003                    LDQ     0,DU
         8 003346   000000 620006                    EAX0    0,QL
         8 003347   000007 440000 2                  SXL0    SINPUT_FPT+7
         8 003350   003356 710000 8                  TRA     s:3789

     1155     3787    2                 ELSE
     1156     3788    2                    SINPUT_FPT.V.REREADPOS# = MINIMUM(1023,RR_POS_CLMN);

   3788  8 003351   001777 116007                    CMPQ    1023,DL
         8 003352   003354 604400 8                  TMOZ    s:3788+3
         8 003353   001777 236007                    LDQ     1023,DL
         8 003354   000000 620006                    EAX0    0,QL
         8 003355   000007 440000 2                  SXL0    SINPUT_FPT+7

     1157     3789    2                 CALL M$SINPUT(SINPUT_FPT) ALTRET (UPARROW_ERR);

   3789  8 003356   000000 630400 2                  EPPR0   SINPUT_FPT
         8 003357   560013 713400                    CLIMB   alt,+57355
         8 003360   401000 401760                    pmme    nvectors=3
         8 003361   003422 702000 8                  TSX2    UPARROW_ERR

     1158     3790    2                 CALL M$READ (REREAD_FPT) ALTRET (UPARROW_ERR);

   3790  8 003362   000000 630400 1                  EPPR0   REREAD_FPT
         8 003363   440000 713400                    CLIMB   alt,read
         8 003364   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:166  
         8 003365   003422 702000 8                  TSX2    UPARROW_ERR

     1159     3791    2                 REC_SIZE = M$UC$ -> F$DCB.ARS;

   3791  8 003366   000000 470400 xsym               LDP0    M$UC$
         8 003367   000000 235100                    LDA     0,,PR0
         8 003370   000000 755000 xsym               STA     REC_SIZE

     1160     3792    3                 IF (REC_SIZE = 0) THEN DO ;

   3792  8 003371   003402 601000 8                  TNZ     s:3797

     1161     3793    3                    CALL VEX$DELREC(M$FILE_NUM, LAST_KEY, LAST_KEY)

   3793  8 003372   000134 630400 9                  EPPR0   92
         8 003373   000021 631400 xsym               EPPR1   B_VECTNIL+17
         8 003374   000000 701000 xent               TSX1    VEX$DELREC
         8 003375   003426 702000 8                  TSX2    UPARROW_RET

     1162     3794    3                       ALTRET (UPARROW_RET);
     1163     3795    3                    DELREC_COUNT = DELREC_COUNT + 1 ;

   3795  8 003376   000000 235000 xsym               LDA     DELREC_COUNT
         8 003377   000001 035007                    ADLA    1,DL
         8 003400   000000 755000 xsym               STA     DELREC_COUNT

     1164     3796    3                    END ;                  /* THEN DO */

   3796  8 003401   003406 710000 8                  TRA     s:3802

     1165     3797    2                 ELSE CALL VEX$WRITE_REC(M$FILE_NUM,LAST_KEY)

   3797  8 003402   000022 630400 9                  EPPR0   18
         8 003403   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 003404   000000 701000 xent               TSX1    VEX$WRITE_REC
         8 003405   003426 702000 8                  TSX2    UPARROW_RET

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:167  
     1166     3798    2                       ALTRET(UPARROW_RET) ;
     1167     3799        /**/
     1168     3800    2                 END;

     1169     3801        /**/
     1170     3802    1        LO_SEQNUM = LAST_KEY;

   3802  8 003406   000000 235000 xsym               LDA     LAST_KEY
         8 003407   000000 755000 xsym               STA     LO_SEQNUM

     1171     3803    1        HI_SEQNUM = LAST_KEY;

   3803  8 003410   000000 755000 xsym               STA     HI_SEQNUM

     1172     3804    1        RETURN;

   3804  8 003411   000000 702200 xent               TSX2  ! X66_ARET

     1173     3805        /**/
     1174     3806    1   NL_PREC_ERR:
     1175     3807    1        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN

   3807  8 003412   000000 470400 xsym  NL_PREC_ERR  LDP0    B$TCB$
         8 003413   000000 471500                    LDP1    0,,PR0
         8 003414   100102 236100                    LDQ     66,,PR1
         8 003415   377770 376007                    ANQ     131064,DL
         8 003416   000040 116007                    CMPQ    32,DL
         8 003417   003422 601000 8                  TNZ     UPARROW_ERR

     1176     3808    1           LAST_KEY = Y003;

   3808  8 003420   000000 235000 xsym               LDA     Y003
         8 003421   000000 755000 xsym               STA     LAST_KEY

     1177     3809        /**/
     1178     3810    1   UPARROW_ERR:
     1179     3811    1        CALL VEX$ERROR(0,3);
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:168  

   3811  8 003422   000074 630400 9     UPARROW_ERR  EPPR0   60
         8 003423   000020 631400 xsym               EPPR1   B_VECTNIL+16
         8 003424   000000 701000 xent               TSX1    VEX$ERROR
         8 003425   000000 011000                    NOP     0

     1180     3812        /**/
     1181     3813    1   UPARROW_RET:
     1182     3814    1        RETURN;

   3814  8 003426   000000 702200 xent  UPARROW_RET  TSX2  ! X66_ARET
     1183     3815    1   END;                                    /* END VER$RECCMD                     */

PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:169  
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VER$RECCMD.
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:170  

 **** Variables and constants ****

  ****  Section 001 RoData VER$RECCMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    34-0-0/d STRC(144)   r     1 BREAKMK_FPT               40-0-0/d STRC(144)   r     1 BREAK_FPT
    24-0-0/d STRC(288)   r     1 GETDCB_FPT                16-0-0/d STRC(216)   r     1 MKDS_FPT
     0-0-0/d STRC(504)   r     1 REREAD_FPT

  ****  Section 002  Data  VER$RECCMD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   102-0-0/d STRC(1080)  r     1 CLOSE_TY_FPT             172-0-0/c STRC(45)    r     1 DCB_NAME
   170-0-0/d STRC(72)    r     1 DS_RESULTS                10-0-0/d STRC(2088)  r     1 OPEN_MELP_FPT
   152-0-0/d STRC(360)   r     1 PREC_FPT                 140-0-0/d STRC(360)   r     1 PREC_REV_FPT
   164-0-0/d STRC(144)   r     1 RELDCB_FPT                 0-0-0/d STRC(288)   r     1 SINPUT_FPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w SBIN        r     1 REMAIN                     4-0-0/w SBIN        r     1 TEMP_COUNT2

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 CMD$
     0-0-0/c CHAR(256)   r     1 CMD_BUF                    0-0-0/w UBIN        r     1 CMD_CODE
     0-0-0/w UBIN        r     1 CMD_SIZE                   0-0-0/w UBIN        r     1 DELREC_COUNT
     0-0-0/b BIT         r     1 DVBYTE                     0-0-0/w UBIN        r     1 EXEC_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:171  
     0-0-0/b STRC(72)    r     1 FLAGS                      0-0-0/w UBIN        r     1 FRST2DEL
     0-0-0/w UBIN        r     1 HI_EXEC_CLMN               0-0-0/w UBIN        r     1 HI_SEQNUM
     0-0-0/w UBIN        r     1 I                          0-0-0/w UBIN        r     1 INCR
     0-0-0/w UBIN        r     1 LAST_KEY                   0-0-0/w UBIN        r     1 LAST_TYPE_CMD
     0-0-0/w UBIN        r     1 LIMIT_SEQNUM               0-0-0/w UBIN        r     1 LO_EXEC_CLMN
     0-0-0/w UBIN        r     1 LO_SEQNUM                  0-0-0/w PTR         r     1 M$FILE$
     0-0-0/w UBIN        r     1 M$FILE_NUM                 0-0-0/w PTR         r     1 M$UC$
     0-0-0/w UBIN        r     1 MAX_CLMN                   0-0-0/w UBIN        r     1 MAX_SEQNUM
     0-0-0/w UBIN        r     1 ME_DCBNUM                  0-0-0/w PTR         r     1 MK_BASE$
     0-0-0/w PTR         r     1 MK_BOUND$                  0-0-0/w UBIN        r     1 MK_COUNT
     0-0-0/w PTR         r     1 MK_WORK$                   0-0-0/w UBIN        r     1 READ_KEY
     0-0-0/c CHAR(1024)  r     1 REC_BUF                    0-0-0/w UBIN        r     1 REC_COUNT
     0-0-0/w UBIN        r     1 REC_SIZE                   0-0-0/w UBIN        r     1 RP_REC_SIZE
     0-0-0/w SBIN        r     1 RR_POS_CLMN                0-0-0/w UBIN        r     1 SAVED_CMD
     0-0-0/w UBIN        r     1 SAVE_KEY                   0-0-0/c CHAR(9)     r     1 SEQ_TEXT_BUF
     0-0-0/w UBIN        r     1 STRCHG_COUNT               0-0-0/c STRC(288)   r     1 SUB_BUF_1
     0-0-0/c STRC(288)   r     1 SUB_BUF_2                  0-0-0/w UBIN        r     1 TEMP_CLMN
     0-0-0/w UBIN        r     1 TEMP_COUNT                 0-0-0/c STRC(9837)  r     1 TYPE_BUF
     0-0-0/w UBIN        r     1 TY_DCBNUM                  0-0-0/w UBIN        r     1 Y003

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(144)   r     1 CM_CMD_TBL                 0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(180)   r     1 IN_CMD_TBL                 0-0-0N  NULL        r     1 M$FILE
     0-0-0N  NULL        r     1 M$ME                       0-0-0N  NULL        r     1 M$UC
     0-0-0/c CHAR(1024)  r     1 MK$BUF                     0-0-0/w STRC(9900)  r     1 MK$RECS
     0-0-0/w STRC(216)   r     1 MK_CMD_TBL                 0-0-0/w STRC(72)    r     1 TN_CMD_TBL
     0-0-0/w ASTR(9)     r     1 VARY$STRC


   Procedure VER$RECCMD requires 1815 words for executable code.
   Procedure VER$RECCMD requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:172  

    No errors detected in file VER$RECCMD.:E05TSI    .
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:173  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:174  
          MINI XREF LISTING

AP_PRECOK
      3065**LABEL    3178--GOTO     3183--GOTO
B$ALT.CODE
      2681**DCL      2681--REDEF    2682--REDEF    2682--REDEF
B$ALT.ERR.ERR#
      2683**DCL      2683--REDEF    3176>>IF       3181>>IF       3692>>IF       3807>>IF
B$ALT.EVID
      2682**DCL      2682--REDEF    2682--REDEF
B$TCB.ALT$
      2677**DCL      3176>>IF       3181>>IF       3692>>IF       3807>>IF
B$TCB$
      2793**DCL      3176>>IF       3181>>IF       3692>>IF       3807>>IF
BLOCKMOVE
      3296**LABEL    3276--GOTO     3290--GOTO
BLOCKSTART
      3274**LABEL    3343--GOTO
BREAKMK_FPT
      2577**DCL      3192<>CALL
BREAKMK_FPT.V
      2577**DCL      2577--DCLINIT
BREAK_FPT
      2591**DCL      3406<>CALL
BREAK_FPT.V
      2591**DCL      2591--DCLINIT
CLOSE_TY_FPT
      2445**DCL      3473<>CALL
CLOSE_TY_FPT.SN_
      2445**DCL      2445--REDEF
CLOSE_TY_FPT.UTL_
      2446**DCL      2446--REDEF
CLOSE_TY_FPT.V
      2450**DCL      2445--DCLINIT
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:175  
CLOSE_TY_FPT.V.DCB#
      2451**DCL      3472<<ASSIGN
CLOSE_TY_FPT.V.EXPIRE#
      2460**DCL      2460--REDEF
CLOSE_TY_FPT.V.TYPE#
      2458**DCL      2458--REDEF
CLOSE_TY_FPT.V.XTNSIZE#
      2455**DCL      2455--REDEF    2457--REDEF
CMD$
      2851**DCL      2869>>ASSIGN   2870>>ASSIGN   2938>>ASSIGN   2939>>ASSIGN   2940>>ASSIGN   3009>>ASSIGN
      3010>>ASSIGN   3049>>ASSIGN   3050>>ASSIGN   3052>>IF       3078>>ASSIGN   3141>>IF       3193>>ASSIGN
      3194>>ASSIGN   3195>>ASSIGN   3197>>ASSIGN   3198>>ASSIGN   3430>>ASSIGN   3431>>ASSIGN   3486>>ASSIGN
      3487>>ASSIGN   3522>>ASSIGN   3523>>ASSIGN   3548>>ASSIGN   3638>>ASSIGN
CMD_BUF
      2795**DCL      2899<>CALL     2899--CALL     2910>>CALLBLT  2967<>CALL     2967--CALL     2981>>CALLBLT
CMD_CODE
      2834**DCL      2956>>IF       2960>>IF       3052>>IF       3081>>IF       3096>>IF       3108>>IF
      3120>>IF       3135>>IF       3141>>IF       3178>>IF       3183>>IF       3217>>IF       3217>>IF
      3313>>IF       3313>>IF       3316>>IF       3316>>IF       3334>>IF       3334>>IF       3352>>IF
      3352>>IF       3641>>IF       3723>>IF
CMD_SIZE
      2811**DCL      2899<>CALL     2901>>IF       2903<<ASSIGN   2910>>CALLBLT  2910>>CALLBLT  2911>>ASSIGN
      2967<>CALL     2969>>IF       2970>>IF       2972<<ASSIGN   2981>>CALLBLT  2985>>ASSIGN
CM_CMD_TBL.HI_CLMN
      2658**DCL      2940>>ASSIGN
CM_CMD_TBL.LO_CLMN
      2657**DCL      2939>>ASSIGN
CM_CMD_TBL.SEQNUM
      2656**DCL      2938>>ASSIGN
COMMON
      3769**LABEL    3752--GOTO
CUTOFF
      3372**LABEL    3325--GOTO
DCB_NAME
      2636**DCL      2547--DCLINIT
DELREC_COUNT
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:176  
      2840**DCL      3002<<ASSIGN   3002>>ASSIGN   3032<<ASSIGN   3032>>ASSIGN   3574<<ASSIGN   3574>>ASSIGN
      3795<<ASSIGN   3795>>ASSIGN
DS_RESULTS
      2605**DCL      2528--DCLINIT
DS_RESULTS.PTR$
      2607**DCL      3266>>ASSIGN   3412>>IF
DS_RESULTS.W1.VSIZE#
      2605**DCL      3267>>ASSIGN
DS_RESULTS.W2
      2606**DCL      2607--REDEF
DS_RESULTS.W2.SEGID#
      2607**DCL      3262<<ASSIGN
DVBYTE
      2812**DCL      3148<<ASSIGN   3282>>ASSIGN   3306<<ASSIGN
EXEC_AD_1
      2895**LABEL    2930--GOTO
EXEC_AD_ERR
      2933**LABEL    2872--CALLALT  2874--CALLALT  2899--CALLALT  2918--CALLALT  2919--CALLALT
EXEC_CM_ERR
      2992**LABEL    2944--CALLALT  2946--CALLALT  2967--CALLALT  2969--GOTO     2987--CALLALT  2988--CALLALT
EXEC_DE_ERR
      3026**LABEL    3001--CALLALT  3013--CALLALT
EXEC_FD_ERR
      3036**LABEL    3031--CALLALT
EXEC_IN_1
      3167**LABEL    3144--GOTO     3151--GOTO
EXEC_IN_EOF
      3060**LABEL    3057--CALLALT
EXEC_IN_ERR
      3173**LABEL    3084--GOTO     3090--CALLALT  3091--CALLALT  3097--CALLALT  3107--CALLALT  3122--CALLALT
      3138--CALLALT  3150--CALLALT
EXEC_MK_DONE
      3387**LABEL    3346--GOTO     3361--GOTO
EXEC_MK_DONE1
      3396**LABEL    3376--GOTO
EXEC_MK_ERR
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:177  
      3409**LABEL    3201--CALLALT  3203--CALLALT  3218--CALLALT  3223--CALLALT  3234--CALLALT  3236--CALLALT
      3258--CALLALT  3350--CALLALT  3352--CALLALT  3355--CALLALT  3359--CALLALT
EXEC_MK_ERR1
      3405**LABEL    3287--CALLALT  3308--CALLALT  3313--CALLALT  3334--CALLALT  3342--CALLALT
EXEC_OL_1
      3460**LABEL    3469--GOTO
EXEC_OL_ERR
      3472**LABEL    3433--CALLALT  3435--CALLALT  3461--CALLALT  3464--GOTO
EXEC_OL_ERR1
      3480**LABEL    3420--CALLALT  3422--CALLALT  3455--CALLALT  3457--CALLALT
EXEC_RN_ERR
      3515**LABEL    3488--CALLALT  3497--CALLALT  3507--CALLALT  3508--CALLALT
EXEC_RR_1
      3548**LABEL    3598--GOTO
EXEC_RR_ERR
      3604**LABEL    3524--CALLALT  3526--CALLALT  3555--GOTO     3573--CALLALT  3584--CALLALT  3587--CALLALT
EXEC_RR_ERR1
      3601**LABEL    3569--CALLALT  3570--CALLALT
EXEC_SEQNUM
      2822**DCL      2871<<ASSIGN   2872<>CALL     3049<<ASSIGN   3052>>IF       3077<<ASSIGN   3078>>ASSIGN
      3090<>CALL     3092>>IF       3093<<ASSIGN   3093>>ASSIGN   3097<>CALL     3104>>IF       3105<<ASSIGN
      3107<>CALL     3110>>ASSIGN   3111>>ASSIGN   3133>>DOWHILE  3134<>CALL     3141>>IF       3143<<ASSIGN
      3143>>ASSIGN   3150<>CALL     3153>>ASSIGN   3155<<ASSIGN   3155>>ASSIGN   3158>>IF       3164<<ASSIGN
      3164>>ASSIGN   3168>>ASSIGN   3169>>ASSIGN   3195<<ASSIGN   3196>>ASSIGN   3218<>CALL     3234<>CALL
      3308<>CALL     3310<<ASSIGN   3310>>ASSIGN   3311>>IF       3311>>IF       3316>>IF       3316>>IF
      3350<>CALL     3356<<ASSIGN   3356>>ASSIGN   3367>>IF       3367>>IF       3372<<ASSIGN   3372>>ASSIGN
      3373<>CALL     3387<<ASSIGN   3387>>ASSIGN   3388<>CALL     3402>>ASSIGN   3432<<ASSIGN   3433<>CALL
      3487<<ASSIGN   3488<>CALL     3508<>CALL     3510>>ASSIGN   3511>>ASSIGN
EXEC_TN_ERR
      3709**LABEL    3658--CALLALT  3661--CALLALT  3677--CALLALT
F$DCB.ACTPOS
       992**DCL       992--REDEF
F$DCB.ARS
       967**DCL       967--REDEF    3014>>ASSIGN   3235>>ASSIGN   3571>>ASSIGN   3694>>IF       3695>>ASSIGN
      3698>>ASSIGN   3791>>ASSIGN
F$DCB.ATTR
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:178  
       985**DCL       986--REDEF
F$DCB.BORROW
      1000**DCL      1000--REDEF    1000--REDEF    1000--REDEF
F$DCB.DCBNAME.L
      1014**DCL      1014--IMP-SIZ
F$DCB.EOMCHAR
       971**DCL       971--REDEF
F$DCB.FLDID
       995**DCL       995--REDEF
F$DCB.FORM$
       989**DCL       989--REDEF
F$DCB.FSECT
      1005**DCL      1005--REDEF
F$DCB.FSN
       982**DCL       982--REDEF     982--REDEF     983--REDEF
F$DCB.HEADER$
       988**DCL       988--REDEF
F$DCB.IXTNSIZE
       986**DCL       986--REDEF
F$DCB.LASTSTA$
       976**DCL       976--REDEF
F$DCB.LVL
      1001**DCL      1001--REDEF
F$DCB.NAME.C
       976**DCL       976--REDEF
F$DCB.NOEOF
       997**DCL       997--REDEF
F$DCB.NRECS
       987**DCL       987--REDEF
F$DCB.NRECX
      1006**DCL      1006--REDEF
F$DCB.OHDR
       998**DCL       998--REDEF
F$DCB.ORG
       981**DCL       981--REDEF
F$DCB.PRECNO
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:179  
      1004**DCL      1004--REDEF
F$DCB.RCSZ
      1009**DCL      1009--REDEF
F$DCB.RES
       977**DCL       977--REDEF
F$DCB.SETX
       989**DCL       989--REDEF
F$DCB.TAB$
       988**DCL       989--REDEF
F$DCB.TDA
      1003**DCL      1003--REDEF
F$DCB.WSN
       978**DCL       978--REDEF
FLAGS.BADKEY
      2785**DCL      3125<<ASSIGN
FLAGS.CONSEC_MODE
      2755**DCL      3052>>IF       3062>>IF       3120>>IF       3642>>IF       3654>>IF       3693>>IF
      3701>>IF       3750>>IF
FLAGS.DELRECCMD
      2774**DCL      3004<<ASSIGN
FLAGS.EDIT_MODE
      2748**DCL      3735>>IF       3756>>IF
FLAGS.EOF
      2753**DCL      2875>>IF       2920>>IF       2947>>IF       2958>>DOWHILE  3092>>IF       3124<<ASSIGN
      3126>>IF       3127<<ASSIGN   3204>>IF       3224>>IF       3237>>IF       3288>>IF       3360>>IF
      3436>>IF       3462>>IF       3527>>IF       3588>>IF       3645>>IF       3662>>IF       3679>>IF
      3772>>IF
FLAGS.EXISTS
      2752**DCL      2873>>IF       2945>>IF       3098>>IF       3108>>IF       3202>>IF       3219>>IF
      3434>>IF       3489>>IF       3498>>IF       3525>>IF       3746>>IF
FLAGS.INTRA_CMD
      2749**DCL      2867>>IF       2912>>IF       3000>>IF       3418>>IF       3520>>IF       3576>>IF
      3578>>IF
FLAGS.OLINPROG
      2775**DCL      3419>>IF       3423<<ASSIGN
FLAGS.REL_MODE
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:180  
      2766**DCL      3062>>IF       3642>>IF       3654>>IF       3693>>IF
FLAGS.ROUNDFLAG
      2788**DCL      3152>>IF
FLAGS.TXFLAG
      2760**DCL      2913<<ASSIGN   3003<<ASSIGN   3575<<ASSIGN   3579<<ASSIGN
FRST2DEL
      2845**DCL      3271<<ASSIGN   3296>>IF       3298<<ASSIGN   3299>>ASSIGN   3313>>CALL     3316>>IF
      3327<<ASSIGN   3328>>ASSIGN   3334>>CALL
GETDCB_FPT
      2547**DCL      3420<>CALL     3455<>CALL
GETDCB_FPT.V
      2548**DCL      2547--DCLINIT
HI_EXEC_CLMN
      2816**DCL      2940<<ASSIGN   2942>>ASSIGN   3615>>DOWHILE  3714>>ASSIGN   3724>>CALLBLT
HI_SEQNUM
      2820**DCL      2870<<ASSIGN   2883>>IF       2928>>IF       2994<<ASSIGN   3010<<ASSIGN   3013<>CALL
      3110<<ASSIGN   3128<<ASSIGN   3130<<ASSIGN   3133>>DOWHILE  3169<<ASSIGN   3197<<ASSIGN   3224>>IF
      3234<>CALL     3243<<ASSIGN   3245<<ASSIGN   3299<<ASSIGN   3311>>IF       3316>>IF       3316>>IF
      3328<<ASSIGN   3367>>IF       3402<<ASSIGN   3431<<ASSIGN   3445>>IF       3467>>IF       3511<<ASSIGN
      3523<<ASSIGN   3535>>IF       3586>>IF       3596>>IF       3658<>CALL     3664<<ASSIGN   3674<<ASSIGN
      3678<<ASSIGN   3766<>CALL     3803<<ASSIGN
I
      2841**DCL      3274<<ASSIGN   3301<<DOINDEX  3302>>ASSIGN   3303>>ASSIGN   3306>>ASSIGN   3311>>IF
      3313>>CALL     3316>>IF       3316>>IF       3323>>ASSIGN   3324>>ASSIGN   3327>>ASSIGN   3611<<ASSIGN
      3617>>CALLBLT  3618<<ASSIGN   3618>>ASSIGN   3622>>CALLBLT  3623<<ASSIGN   3623>>ASSIGN   3629>>CALLBLT
      3629>>CALLBLT
INCR
      2824**DCL      3050<<ASSIGN   3065>>IF       3077>>ASSIGN   3082>>IF       3092>>IF       3093>>ASSIGN
      3104>>IF       3105>>ASSIGN   3143>>ASSIGN   3151>>IF       3153>>ASSIGN   3153>>ASSIGN   3155>>ASSIGN
      3164>>ASSIGN   3198<<ASSIGN   3260>>IF       3310>>ASSIGN   3356>>ASSIGN   3367>>IF       3372>>ASSIGN
      3387>>ASSIGN
IN_CMD_TBL.COLUMN
      2653**DCL      3548>>ASSIGN
IN_CMD_TBL.HI_SEQNUM
      2651**DCL      2870>>ASSIGN   3010>>ASSIGN   3050>>ASSIGN   3431>>ASSIGN   3487>>ASSIGN   3523>>ASSIGN
IN_CMD_TBL.LO_SEQNUM
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:181  
      2650**DCL      2869>>ASSIGN   3009>>ASSIGN   3049>>ASSIGN   3078<<ASSIGN   3141>>IF       3430>>ASSIGN
      3486>>ASSIGN   3522>>ASSIGN
IN_CMD_TBL.START_SPEC
      2652**DCL      3052>>IF
IN_PRECOK
      3104**LABEL    3179--GOTO     3184--GOTO
IN_PREC_ERR
      3176**LABEL    3061--CALLALT  3101--CALLALT
LAST_KEY
      2826**DCL      2883>>IF       2895<>CALL     2918<>CALL     2928>>IF       2959<>CALL     2987<>CALL
      2993>>ASSIGN   2994>>ASSIGN   3001<>CALL     3031<>CALL     3041<>CALL     3056--ASSIGN   3063<<ASSIGN
      3063>>ASSIGN   3065>>IF       3077>>ASSIGN   3092>>IF       3100--ASSIGN   3104>>IF       3105>>ASSIGN
      3130>>ASSIGN   3177<<ASSIGN   3182--ASSIGN   3204>>IF       3213>>ASSIGN   3224>>IF       3245>>ASSIGN
      3275>>DOWHILE  3281>>ASSIGN   3289<<ASSIGN   3339>>IF       3342<>CALL     3349>>DOWHILE  3352<>CALL
      3355<>CALL     3358>>ASSIGN   3367>>IF       3445>>IF       3467>>IF       3535>>IF       3549<>CALL
      3573<>CALL     3573<>CALL     3584<>CALL     3586>>IF       3596>>IF       3609<>CALL     3644>>ASSIGN
      3649--ASSIGN   3651<<ASSIGN   3655<<ASSIGN   3655>>ASSIGN   3656>>ASSIGN   3664>>ASSIGN   3667>>ASSIGN
      3674>>ASSIGN   3678>>ASSIGN   3701<<ASSIGN   3702>>ASSIGN   3722<>CALL     3748--ASSIGN   3751<<ASSIGN
      3751>>ASSIGN   3781<>CALL     3793<>CALL     3793<>CALL     3797<>CALL     3802>>ASSIGN   3803>>ASSIGN
      3808<<ASSIGN
LAST_TYPE_CMD
      2837**DCL      3670>>IF       3671>>IF       3684>>IF       3685>>IF       3777>>IF       3778>>IF
      3779>>IF
LIMIT_SEQNUM
      2823**DCL      3194<<ASSIGN   3204>>IF       3260>>IF       3275>>DOWHILE  3339>>IF       3349>>DOWHILE
      3367>>IF
LO_EXEC_CLMN
      2815**DCL      2939<<ASSIGN   2942>>ASSIGN   2961>>CALLBLT  2981>>CALLBLT  2984>>IF       2985>>ASSIGN
      3612>>ASSIGN   3714>>ASSIGN   3714>>ASSIGN   3724>>CALLBLT  3724>>CALLBLT
LO_SEQNUM
      2818**DCL      2869<<ASSIGN   2871>>ASSIGN   2993<<ASSIGN   3009<<ASSIGN   3013<>CALL     3111<<ASSIGN
      3168<<ASSIGN   3196<<ASSIGN   3430<<ASSIGN   3432>>ASSIGN   3510<<ASSIGN   3522<<ASSIGN   3524<>CALL
      3644>>ASSIGN   3651>>ASSIGN   3656<<ASSIGN   3667<<ASSIGN   3702<<ASSIGN   3745<>CALL     3802<<ASSIGN
M$CLOSE
      1024**DCL-ENT  3473--CALL
M$FDS
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:182  
      1059**DCL-ENT  3405--CALL
M$FILE$
      2849**DCL      3014>>ASSIGN   3235>>ASSIGN   3694>>IF       3695>>ASSIGN   3698>>ASSIGN
M$FILE_NUM
      2842**DCL      2918<>CALL     2987<>CALL     3001<>CALL     3013<>CALL     3031<>CALL     3150<>CALL
      3234<>CALL     3308<>CALL     3313<>CALL     3334<>CALL     3350<>CALL     3352<>CALL     3507<>CALL
      3508<>CALL     3573<>CALL     3584<>CALL     3793<>CALL     3797<>CALL
M$GDS
      1059**DCL-ENT  3263--CALL
M$GETDCB
      1030**DCL-ENT  3420--CALL     3455--CALL
M$INT
      1079**DCL-ENT  3192--CALL     3406--CALL
M$OPEN
      1024**DCL-ENT  3422--CALL     3457--CALL
M$PRECORD
      1028**DCL-ENT  3057--CALL     3061--CALL     3101--CALL     3652--CALL     3749--CALL
M$READ
      1025**DCL-ENT  3570--CALL     3790--CALL
M$RELDCB
      1030**DCL-ENT  3474--CALL
M$SINPUT
      1051**DCL-ENT  3569--CALL     3789--CALL
M$UC$
      2848**DCL      3571>>ASSIGN   3791>>ASSIGN
MAKE_ROOM
      3327**LABEL    3322--GOTO
MAX_CLMN
      2857**DCL      3629>>CALLBLT
MAX_SEQNUM
      2856**DCL      3052>>IF       3065>>IF       3128>>ASSIGN   3158>>IF       3243>>ASSIGN   3289>>ASSIGN
      3311>>IF       3316>>IF       3367>>IF
ME_DCBNUM
      2791**DCL      3476>>ASSIGN
MK$BUF
      2670**DCL      3277<<CALLBLT  3305>>ASSIGN
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:183  
MK$RECS
      2671**DCL      3268--ASSIGN   3269<<ASSIGN   3341--ASSIGN
MK$RECS.DVBYTE
      2675**DCL      3282<<ASSIGN   3306>>ASSIGN
MK$RECS.KEY
      2674**DCL      3281<<ASSIGN   3299>>ASSIGN   3313<>CALL     3313<>CALL     3316>>IF       3316>>IF
      3316>>IF       3324>>ASSIGN   3328>>ASSIGN   3334<>CALL     3334<>CALL     3337>>ASSIGN
MK$RECS.OFFSET
      2673**DCL      3280<<ASSIGN   3302>>ASSIGN
MK$RECS.SIZE
      2672**DCL      3279<<ASSIGN   3303>>ASSIGN
MKDSOK
      3266**LABEL    3413--GOTO
MKDS_ERR
      3412**LABEL    3263--CALLALT
MKDS_FPT
      2528**DCL      3263<>CALL     3405<>CALL
MKDS_FPT.V
      2528**DCL      2528--DCLINIT
MK_BASE$
      2853**DCL      3266<<ASSIGN   3267>>ASSIGN   3268>>ASSIGN   3269>>ASSIGN   3279>>ASSIGN   3280>>ASSIGN
      3280>>ASSIGN   3281>>ASSIGN   3282>>ASSIGN   3299>>ASSIGN   3302>>ASSIGN   3302>>ASSIGN   3303>>ASSIGN
      3306>>ASSIGN   3313>>CALL     3313>>CALL     3316>>IF       3316>>IF       3316>>IF       3324>>ASSIGN
      3328>>ASSIGN   3334>>CALL     3334>>CALL     3337>>ASSIGN   3341>>ASSIGN
MK_BOUND$
      2855**DCL      3267<<ASSIGN   3276>>IF
MK_CMD_TBL.HI_SEQNUM
      2662**DCL      3194>>ASSIGN
MK_CMD_TBL.HI_SEQNUM2
      2664**DCL      3197>>ASSIGN
MK_CMD_TBL.INCR
      2665**DCL      3198>>ASSIGN
MK_CMD_TBL.LO_SEQNUM
      2661**DCL      3193>>ASSIGN
MK_CMD_TBL.LO_SEQNUM2
      2663**DCL      3195>>ASSIGN
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:184  
MK_COUNT
      2844**DCL      3270<<ASSIGN   3275>>DOWHILE  3279>>ASSIGN   3280>>ASSIGN   3281>>ASSIGN   3282>>ASSIGN
      3285<<ASSIGN   3285>>ASSIGN   3301>>DOINDEX  3311>>IF       3333>>ASSIGN   3334>>CALL     3337>>ASSIGN
      3340<<ASSIGN
MK_WORK$
      2854**DCL      3268<<ASSIGN   3276>>IF       3277>>CALLBLT  3280>>ASSIGN   3284<<ASSIGN   3284>>ASSIGN
      3302<<ASSIGN   3305>>ASSIGN   3341<<ASSIGN
NL_PREC_ERR
      3807**LABEL    3749--CALLALT
NOROOM
      3067**LABEL    3092--GOTO     3104--GOTO
OPEN_MELP_FPT
      2377**DCL      3422<>CALL     3457<>CALL
OPEN_MELP_FPT.ACSVEH_
      2379**DCL      2380--REDEF
OPEN_MELP_FPT.ALTKEYS_
      2385**DCL      2386--REDEF    2386--REDEF
OPEN_MELP_FPT.HDR_
      2384**DCL      2385--REDEF
OPEN_MELP_FPT.TAB_
      2383**DCL      2384--REDEF
OPEN_MELP_FPT.UHL_
      2377**DCL      2378--REDEF    2378--REDEF
OPEN_MELP_FPT.V
      2386**DCL      2377--DCLINIT
OPEN_MELP_FPT.V.DCB#
      2386**DCL      3421<<ASSIGN   3456<<ASSIGN
OPEN_MELP_FPT.V.FSN#
      2417**DCL      2417--REDEF    2417--REDEF
OPEN_MELP_FPT.WSN_
      2383**DCL      2383--REDEF
PREC_FPT.V
      2507**DCL      2505--DCLINIT
PREC_REV_FPT
      2480**DCL      3057<>CALL     3061<>CALL     3101<>CALL     3652<>CALL     3749<>CALL
PREC_REV_FPT.KEY_
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:185  
      2480**DCL      3056<<ASSIGN   3100<<ASSIGN   3649<<ASSIGN   3748<<ASSIGN
PREC_REV_FPT.V
      2482**DCL      2480--DCLINIT
PREC_REV_FPT.V.KEYS#
      2483**DCL      3650<<ASSIGN   3653<<ASSIGN   3699<<ASSIGN
PREC_REV_FPT.V.N#
      2486**DCL      3055<<ASSIGN   3060<<ASSIGN   3098<<ASSIGN   3099<<ASSIGN   3644<<ASSIGN   3646<<ASSIGN
      3648<<ASSIGN   3695>>ASSIGN   3746<<ASSIGN   3747<<ASSIGN
READ_KEY
      2827**DCL      2938<<ASSIGN   2944<>CALL     3193<<ASSIGN   3201<>CALL     3213<<ASSIGN   3215>>ASSIGN
      3258<>CALL     3260>>IF       3486<<ASSIGN   3497<>CALL     3507<>CALL
RECMOVE
      3349**LABEL    3260--GOTO     3412--GOTO
REC_BUF
      2794**DCL      2249--DCLINIT  2250--DCLINIT  2293--DCLINIT  2293--DCLINIT  2896>>CALLBLT  2910<<CALLBLT
      2961>>CALLBLT  2981<<CALLBLT  3138<>CALL     3138--CALL     3277>>CALLBLT  3305<<ASSIGN   3616>>IF
      3617>>CALLBLT  3714>>ASSIGN   3724>>CALLBLT  3727>>CALLBLT
REC_COUNT
      2838**DCL      3008<<ASSIGN   3014<<ASSIGN   3016<>CALL     3233<<ASSIGN   3235<<ASSIGN   3247>>IF
      3248<>CALL     3257<<ASSIGN   3323<<ASSIGN   3323>>ASSIGN   3333<<ASSIGN   3333>>ASSIGN   3351<<ASSIGN
      3351>>ASSIGN   3396<>CALL
REC_SIZE
      2809**DCL      2896>>CALLBLT  2901>>IF       2903>>ASSIGN   2910>>CALLBLT  2911<<ASSIGN   2911>>ASSIGN
      2984>>IF       2985<<ASSIGN   3138<>CALL     3140>>IF       3147>>ASSIGN   3276>>IF       3277>>CALLBLT
      3277>>CALLBLT  3277>>CALLBLT  3279>>ASSIGN   3284>>ASSIGN   3303<<ASSIGN   3304>>ASSIGN   3305>>ASSIGN
      3551>>IF       3562>>IF       3562>>ASSIGN   3566>>ASSIGN   3571<<ASSIGN   3572>>IF       3584>>IF
      3727>>CALLBLT  3783>>IF       3783>>ASSIGN   3786>>ASSIGN   3791<<ASSIGN   3792>>IF
RELDCB_ERR
      3476**LABEL    3474--CALLALT
RELDCB_FPT
      2563**DCL      3474<>CALL
RELDCB_FPT.V
      2563**DCL      2563--DCLINIT
REMAIN
      2734**DCL      3132<<ASSIGN   3143>>ASSIGN   3153<<ASSIGN   3154<<ASSIGN   3155>>ASSIGN   3164>>ASSIGN
REREAD_FPT
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:186  
      2247**DCL      3570<>CALL     3790<>CALL
REREAD_FPT.STATION_
      2250**DCL      2251--REDEF
REREAD_FPT.V
      2251**DCL      2247--DCLINIT
REREAD_FPT.V.DVBYTE.REREAD#
      2262**DCL      2262--REDEF
REREAD_FPT.V.INDX#
      2260**DCL      2260--REDEF
RP_REC_SIZE
      2810**DCL      3147<<ASSIGN   3304<<ASSIGN
RR_POS_CLMN
      2817**DCL      3548<<ASSIGN   3565>>IF       3566>>ASSIGN   3568>>ASSIGN   3785>>IF       3786>>ASSIGN
      3788>>ASSIGN
SAVED_CMD
      2836**DCL      3645>>IF
SAVE_KEY
      2828**DCL      3215<<ASSIGN   3324<<ASSIGN   3337<<ASSIGN   3358<<ASSIGN   3374<>CALL
SEQ_TEXT_BUF
      2808**DCL      2896>>CALLBLT  2961>>CALLBLT  3042>>ASSIGN   3610>>CALLBLT  3724>>CALLBLT  3727>>CALLBLT
SINPUT_FPT
      2286**DCL      3569<>CALL     3789<>CALL
SINPUT_FPT.BUF_.BOUND
      2293**DCL      3562<<ASSIGN   3563<<ASSIGN   3783<<ASSIGN   3784<<ASSIGN
SINPUT_FPT.V
      2298**DCL      2288--DCLINIT
SINPUT_FPT.V.REREADPOS#
      2305**DCL      3566<<ASSIGN   3568<<ASSIGN   3786<<ASSIGN   3788<<ASSIGN
STRCHG_COUNT
      2839**DCL      2914<<ASSIGN   2914>>ASSIGN   3580<<ASSIGN   3580>>ASSIGN
SUB_BUF_1
      2799**DCL      3016<>CALL     3248<>CALL     3373<>CALL     3388<>CALL     3396<>CALL
SUB_BUF_2
      2802**DCL      3374<>CALL
TEMP_CLMN
      2830**DCL      2942<<ASSIGN   2970>>IF       2972>>ASSIGN   2981>>CALLBLT  2984>>IF       3612<<ASSIGN
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:187  
      3615>>DOWHILE  3616>>IF       3617>>CALLBLT  3626<<ASSIGN   3626>>ASSIGN
TEMP_COUNT
      2831**DCL      3638<<ASSIGN   3639>>IF       3644>>ASSIGN   3646>>ASSIGN   3648>>ASSIGN   3673<<ASSIGN
      3673>>ASSIGN   3676>>DOWHILE  3687<<ASSIGN   3687>>ASSIGN   3694<<ASSIGN   3695<<ASSIGN   3695>>ASSIGN
      3698<<ASSIGN   3703>>IF
TEMP_COUNT2
      2733**DCL      3613<<ASSIGN   3619<<ASSIGN   3621>>IF       3624<<ASSIGN
TN_CMD_TBL.COUNT
      2668**DCL      3638>>ASSIGN
TN_PRECOK
      3661**LABEL    3703--GOTO
TP_PREC_ERR
      3692**LABEL    3652--CALLALT
TYPE_BUF.TEXT
      2798**DCL      2896<<CALLBLT  2961<<CALLBLT  3042<<ASSIGN   3610<<CALLBLT  3617<<CALLBLT  3622<<CALLBLT
      3629<<CALLBLT  3714<<ASSIGN   3724<<CALLBLT  3727<<CALLBLT
TY_DCBNUM
      2792**DCL      2548--DCLINIT  3421>>ASSIGN   3456>>ASSIGN   3472>>ASSIGN   3476<<ASSIGN
UPARROW_ERR
      3811**LABEL    3745--CALLALT  3766--CALLALT  3789--CALLALT  3790--CALLALT
UPARROW_RET
      3814**LABEL    3771--CALLALT  3793--CALLALT  3797--CALLALT
VARY$STRC.CNT
      2688**DCL      2689--IMP-SIZ  3182<<ASSIGN
VER$EXEC_TC
      3607**ENTRY    3671--CALL     3685--CALL     3779--CALL
VER$EXEC_TS
      3712**ENTRY    3670--CALL     3684--CALL     3778--CALL
VER$EXEC_TY
      3720**ENTRY    3425--CALL     3460--CALL     3672--CALL     3686--CALL     3777--CALL
VEX$BREAK
      2715**DCL-ENT  2591--DCLINIT
VEX$BREAKMK
      2716**DCL-ENT  2577--DCLINIT
VEX$CLMN_DFLT
      2706**DCL-ENT  2868--CALL     2992--CALL     3011--CALL     3167--CALL     3199--CALL     3429--CALL
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:188  
      3509--CALL     3521--CALL     3636--CALL     3769--CALL
VEX$DELREC
      2700**DCL-ENT  3001--CALL     3013--CALL     3031--CALL     3234--CALL     3313--CALL     3334--CALL
      3352--CALL     3507--CALL     3573--CALL     3793--CALL
VEX$ERROR
      2701**DCL-ENT  2876--CALL     2884--CALL     2902--CALL     2921--CALL     2948--CALL     2971--CALL
      3017--CALL     3067--CALL     3083--CALL     3109--CALL     3158--CALL     3186--CALL     3205--CALL
      3220--CALL     3225--CALL     3238--CALL     3249--CALL     3375--CALL     3389--CALL     3397--CALL
      3437--CALL     3447--CALL     3463--CALL     3480--CALL     3490--CALL     3499--CALL     3528--CALL
      3537--CALL     3554--CALL     3589--CALL     3601--CALL     3663--CALL     3680--CALL     3700--CALL
      3706--CALL     3736--CALL     3757--CALL     3773--CALL     3811--CALL
VEX$GET_NEXT_KEY
      2696**DCL-ENT  3091--CALL     3122--CALL     3203--CALL     3223--CALL     3236--CALL
VEX$READ_RANDOM
      2697**DCL-ENT  2872--CALL     2944--CALL     3090--CALL     3097--CALL     3107--CALL     3201--CALL
      3218--CALL     3258--CALL     3342--CALL     3355--CALL     3433--CALL     3488--CALL     3497--CALL
      3524--CALL     3658--CALL     3745--CALL     3766--CALL
VEX$READ_SEQUEN
      2695**DCL-ENT  2874--CALL     2919--CALL     2946--CALL     2988--CALL     3287--CALL     3359--CALL
      3435--CALL     3461--CALL     3526--CALL     3587--CALL     3661--CALL     3677--CALL     3771--CALL
VEX$READ_TERM_REC
      2704**DCL-ENT  2899--CALL     2967--CALL     3138--CALL
VEX$SEQNUM_TEXT
      2712**DCL-ENT  2895--CALL     2959--CALL     3041--CALL     3134--CALL     3373--CALL     3374--CALL
      3388--CALL     3549--CALL     3609--CALL     3722--CALL     3781--CALL
VEX$SET_PROMPT
      2714**DCL-ENT  2898--CALL     2956--CALL     2965--CALL     3135--CALL     3136--CALL     3550--CALL
      3782--CALL
VEX$SET_SUB_BUF
      2713**DCL-ENT  3016--CALL     3248--CALL     3396--CALL
VEX$TYPE_REC
      2705**DCL-ENT  2897--CALL     2963--CALL     3043--CALL     3630--CALL     3716--CALL     3729--CALL
VEX$WRITE_REC
      2699**DCL-ENT  2918--CALL     2987--CALL     3150--CALL     3308--CALL     3350--CALL     3508--CALL
      3584--CALL     3797--CALL
Y003
PL6.E3A0      #001=VER$RECCMD File=VER$RECCMD.:E05TSI                            WED 07/30/97 07:09 Page:189  
      2858**DCL      3063>>ASSIGN   3153>>ASSIGN   3177>>ASSIGN   3655>>ASSIGN   3701>>ASSIGN   3751>>ASSIGN
      3808>>ASSIGN
