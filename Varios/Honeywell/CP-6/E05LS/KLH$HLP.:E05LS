VERSION E05

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:1    
        1        1        /*M* KLH$HLP Host logon processor main program*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        KLH$HLP: PROC;
        9        9        /*D* NAME:        KLH$HLP
       10       10             PURPOSE:     To log on all non-local devices to the host system
       11       11             CALL:        CALL KLH$HLP;
       12       12                          KL_RDBF - The logon message buffer just read
       13       13             OUTPUT:      A logged-on device
       14       14                          A logged-on timesharing user if this is a timesharing
       15       15                             logon
       16       16             DESCRIPTION: KLH$HLP takes the logon string portion of the logon message
       17       17                          parses it into ACCT,NAME,PW and PRO and using that
       18       18                          information, reads in the :HLP record for the device
       19       19                          (or user if a timesharing logon) and the :PRO record.
       20       20                          NOTE: In the case of an L6 system program logging on,
       21       21                          canned :HLP and :PRO records are used, no read is
       22       22                          performed.
       23       23                          KLH$SNDHSGN is called for any additional host logon
       24       24                          functions needed.
       25       25                          If any errors occur, a KL_SGNRSP message is built
       26       26                          and stuffed with a reason specifying failed logon.
       27       27                          This message is then sent back to the originator
       28       28                          if the logon.
       29       29
       30       30                          Security logging may be performed dependent upon
       31       31                          the CONTROL defined parameter, ES_LOGSYSACC. Also,
       32       32                          good logons and failed logons due to bad passwords
       33       33                          will cause the :USERS record to be updated.
       34       34        */
       35       35        %INCLUDE CP_6;
       36      116        %INCLUDE EL_SUBS_C;
       37      200        %INCLUDE ES_SUBS_E;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:2    
       38      226        %INCLUDE B_SEGIDS_C;
       39      765        %INCLUDE B$TABLES_C;
       40      873        %B$XL_UPPER_UR;
       41      877        %INCLUDE PC_SUBS_C;
       42     1209        %INCLUDE AS_SUPER_C;
       43     1644        %INCLUDE F$DCB;
       44     1693        %INCLUDE F_ERRORS_C;
       45     1933        %INCLUDE JC_MACRO_C;
       46     2047        %INCLUDE JC_DATA_R;
       47     2085        %INCLUDE KC$CGBLK;
       48     2133        %INCLUDE KL_AFCN_C;
       49     2234        %INCLUDE KL_MACRO_C;
       50     5586        %INCLUDE KL_ERRORS_C;
       51     5628        %INCLUDE KL_DATA_R;
       52     6092        %INCLUDE KL_SUBS_C;
       53     6146        %INCLUDE KL_SUPER_C;
       54     9048        %INCLUDE KL_CONFIG_M;
       55     9810        %INCLUDE OC_MESSHD_C;
       56     9863        %B$TCB;
       57     9866        %B$ALT;
       58     9874    1   DCL M$NETCON DCB;
       59     9875    1   DCL M$CSCG DCB;
       60     9876    1   DCL CNFG_BUF (0:49) UBIN WORD STATIC INIT(0*0);
       61     9877    1   DCL CNFG$ PTR STATIC INIT(ADDR(CNFG_BUF));
       62     9878        %KL$LINCNFG (NAME=LINCNFG,LGNSIZ=100,STCLASS="BASED(CNFG$)");
       63    10036        %KL$CONFIG_KEY (NAME=CONFIG_KEY,STCLASS=STATIC);
       64    10083        %KL$DEFAULT_KEY (NAME=DEFAULT_KEY,STCLASS=STATIC);
       65    10102        %FPT_READ (FPTN=READ_NETCON,
       66    10103                  KEYS=YES,
       67    10104                   DCB=M$NETCON);
       68    10143        %KL_PCD (FPTN=KL_PCD,CG=1,STCLASS=SYMREF);
       69    10308        %KL_PCD (FPTN=KL$PCD_TS,CG=0,STCLASS="BASED(PCD$)");
       70    10427        %KL_DREC (NAME=KL_HLPR,STCLASS=SYMREF,LAST=",");
       71    10540        %KC$CGID (FPTN=CGID,STCLASS=SYMREF,LVL=2,LAST=",");
       72    10566    1           2 INFO(0:31) UBIN WORD UNAL;
       73    10567        %KL_DREC(NAME=HLPR_RES,STCLASS="BASED",LAST=",");
       74    10680             %KL_RES_CL_DEV(NAME=RES,LVL=2);
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:3    
       75    10740        %KL_PHDR (NAME=PROH,STCLASS="BASED ALIGNED");
       76    10781        %KL_PHDR (NAME=FRGPRO,STCLASS="CONSTANT ALIGNED",WID=0,LIN=0,DLP='0'B,DIC='0'B,TOP=
             10781            '0'B,LC='0'B,TYP=%KLTY_PROG#);
       77    10822        %KL_PHDR (NAME=DEFPRO,STCLASS=CONSTANT,WID=80,LIN=24,IN='1'B,OUT='1'B,
       78    10823                 TOP='0'B,A='0'B,BN='1'B,LC='1'B,LAST=";");
       79    10864        %KL_DREC (NAME=SLUGHLP,STCLASS=CONSTANT,TYP=%KLAT_CG#,NWI="SIZEW(SLUGHLP.CGID)",TNM=
             10864            ' *FEP*',LAST=",");
       80    10977        %KC$CGID (FPTN=CGID,STCLASS=CONSTANT,NAME='HLPCG',LVL=2);
       81    11003        %KL_PHDR (NAME=KL_PROBUF,STCLASS="SYMREF ALIGNED");
       82    11044        %KL_SGN (FPTN=KL$SGN,STCLASS="BASED(RDBF$)",LGNSIZ="KL$SGN.LOGON.LGNSIZ");
       83    11137        %KL_HSGN (FPTN=KL$HSGN,CG=1,STCLASS="BASED(RDBF$)");
       84    11323        %KL_RQSPROFILE (FPTN=KL$RQSPROFILE,STCLASS="BASED(RDBF$)");
       85    11381    1   DCL M$HLPF DCB;
       86    11382    1   DCL M$PROF DCB;
       87    11383    1   DCL ACCT CHAR(8);
       88    11384    1   DCL 1 ADTW REDEF ACCT,
       89    11385    1         2 D CHAR(4),
       90    11386    1         2 TWSN CHAR(4);
       91    11387    1   DCL 1 ACCR REDEF ACCT,                  /* TO TEST FOR "?"                    */
       92    11388    1         2 C1 CHAR(1),
       93    11389    1         2 * CHAR(7);
       94    11390    1   DCL 1 NAME ALIGNED,
       95    11391    1         2 C UBIN BYTE UNAL,
       96    11392    1         2 T CHAR(12);
       97    11393    1   DCL PW CHAR(8);
       98    11394    1   DCL SAVE_PW CHAR(8);
       99    11395    1   DCL 1 PRO ALIGNED,
      100    11396    1         2 C UBIN BYTE UNAL,
      101    11397    1         2 T CHAR(11) UNAL;
      102    11398    1   DCL HOST CHAR(8);
      103    11399    1   DCL 1 NMID (0:3),
      104    11400    1         2 * BIT(1) UNAL,
      105    11401    1         2 BYT UBIN(8) UNAL;
      106    11402    1   DCL FEX UBIN;
      107    11403    1   DCL PSIZ UBIN WORD;
      108    11404    1   DCL HLPER REDEF PSIZ UBIN WORD;
      109    11405    1   DCL SNDPRO BIT(1);
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:4    
      110    11406    1   DCL NODETYPE UBIN;
      111    11407    1   DCL NOSETUP BIT (1) ALIGNED;
      112    11408    1   DCL NOHEADER BIT (1) ALIGNED;
      113    11409    1   DCL PCD$ PTR;
      114    11410    1   DCL P$ PTR;
      115    11411    1   DCL ES_LOGSYSACC UBIN WORD SYMREF;      /* Symdefed in ES_CNTRL_D             */
      116    11412    1   DCL ES$ PTR STATIC INIT(ADDR(ES_LOGSYSACC));
      117    11413    1   DCL LOGSYSACC UBIN WORD BASED;
      118    11414    1   DCL ES_LOGON_TIME UBIN WORD ALIGNED STATIC SYMDEF INIT(0);
      119    11415        %AS_USERS(STR_NAME=AS_USERS,STCLASS=STATIC);
      120    11593    1   DCL KL_STATION CHAR(8) SYMREF;
      121    11594    1   DCL RDBF$ PTR;
      122    11595    1   DCL 1 ACHAR BASED(P$) CALIGNED,
      123    11596    1         2 CNT UBIN BYTE UNAL,
      124    11597    1         2 TXT CHAR (ACHAR.CNT);
      125    11598    1   DCL B$TCB$ PTR SYMREF;
      126    11599        %FPT_READ (FPTN=KL_RDHLPR,STCLASS=SYMREF);
      127    11638        %FPT_READ (FPTN=KL_RDPROR,STCLASS=SYMREF);
      128    11677        %FPT_WRITE (FPTN=FPT_PROWT,STCLASS=STATIC,DCB=M$HLP,STATION=PROWT_STA);
      129    11708        %FPT_WRITE (FPTN=WRTAUTOFAIL,DCB=M$CSCG,BUF=KL_AUTOFAIL);
      130    11739        %VLP_STATION (FPTN=PROWT_STA,STCLASS=STATIC);
      131    11766    1   DCL ASZ$SCRAMBLE ENTRY(1);
      132    11767    1   DCL KLH$HSGN ENTRY(1);
      133    11768    1   DCL KLH$ERRMSG ENTRY(3);
      134    11769    1   DCL KLH$OPFILS ENTRY ALTRET;
      135    11770    1   DCL KLH$SGSCAN ENTRY(9) ALTRET;
      136    11771    1   DCL KLH$SGNRSP ENTRY ALTRET;
      137    11772    1   DCL KLH$SGNTXT ENTRY(2);
      138    11773    1   DCL KLH$NETTRM ENTRY(1) ALTRET;
      139    11774    1   DCL KLH$NETLNK ENTRY(1) ALTRET;
      140    11775    1   DCL KLX$8TO9 ENTRY(3);
      141    11776    1   DCL KLX$CONV_NODE ENTRY(3) ALTRET;
      142    11777    1   DCL KLX$CONV_NODENAME ENTRY(3) ALTRET;
      143    11778    1   DCL KLH$SNDHSGN ENTRY(1) ALTRET;
      144    11779    1   DCL KLX$WRHLPSTA ENTRY(4) ALTRET;
      145    11780    1   DCL JMU$SETSEG ENTRY(2);
      146    11781        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:5    
      147    11782                                                /* Fix up ES$ for security logging    */
      148    11783    1           CALL JMU$SETSEG(ES$,%SPCL1SID);
      149    11784    1           ES_LOGON_TIME=0;
      150    11785    1           RDBF$=ADDR(KL_RDBF);
      151    11786    2           DO CASE(KL_RDBF.CODE);
      152    11787    2             CASE(IGA_HSGN);
      153    11788    2               CALL KLH$HSGN(KL$HSGN.PCD);
      154    11789    2               RETURN;
      155    11790    2             CASE(IGA_SGNRSP);
      156    11791    2               CALL KLH$SGNRSP;
      157    11792    2               RETURN;
      158    11793    2             CASE(IGA_RQSPRO);
      159    11794    2               NMID = KL$RQSPROFILE.NMID;
      160    11795    3               IF KL$RQSPROFILE.HANDLER ~= ' ' THEN DO; /* Get default record    */
      161    11796    3                   CALL CHARBIN (FEX,SUBSTR(KL_STATION,4,4));
      162    11797    3                   DEFAULT_KEY.NODE = FEX;
      163    11798    3                   DEFAULT_KEY.HNDLR = KL$RQSPROFILE.HANDLER;
      164    11799    3                   READ_NETCON.KEY_ = VECTOR(DEFAULT_KEY);
      165    11800    3                   END;                    /* IF                                 */
      166    11801    3                 ELSE DO;                  /* Get config record                  */
      167    11802    3                   CALL CHARBIN(FEX,SUBSTR(KL_STATION,4,4));
      168    11803    3                   CONFIG_KEY.NODE=FEX;
      169    11804    3                   CONFIG_KEY.TERMID = KL$RQSPROFILE.TERMID;
      170    11805    3                   CONFIG_KEY.TERMID.TTYP = 0;
      171    11806    3                   IF CONFIG_KEY.TERMID.TERM.TERM_NAME ~= ' '
      172    11807    4                     THEN DO;
      173    11808    4                       CONFIG_KEY.TERMID.TERM.CHANNEL = '0'B;
      174    11809    4                       CONFIG_KEY.NODE = 0;
      175    11810    4                       END;
      176    11811    3                   READ_NETCON.KEY_ = VECTOR(CONFIG_KEY);
      177    11812    3                   END;                    /* ELSE                               */
      178    11813    2               PSIZ = 1;
      179    11814    2               READ_NETCON.BUF_ = VECTOR(CNFG_BUF);
      180    11815    2               CALL M$READ(READ_NETCON) ALTRET(RQSPROERR);
      181    11816    2               PRO = LINCNFG.PRO;
      182    11817    2               CALL GETPRO
      183    11818    3                 WHENALTRETURN DO;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:6    
      184    11819    3   RQSPROERR:      ;
      185    11820    3                   PSIZ = 1;
      186    11821    3                   END;
      187    11822    2               CALL SETPRO;
      188    11823    2               RETURN;
      189    11824    2             CASE(IGA_SGN);
      190    11825    2               NMID = KL$SGN.NMID;         /* The main body of this procedure    */
      191    11826    2             CASE(ELSE);
      192    11827    2               CALL M$XXX;                 /* Woops!!!                           */
      193    11828    2             END;
      194    11829    1           PSIZ=0;
      195    11830    1           PCD$=ADDR(KL_PCD);
      196    11831    1           IF KL_HLPFILS<2 AND KL$SGN.TERMINAL_ID.TTYP~=%KLTY_PROG#
      197    11832    2             THEN DO;
      198    11833    2               CALL KLH$OPFILS ALTRET (LOGON);
      199    11834    2               CALL SNDRJ (%E$NFIL);
      200    11835    2               RETURN;
      201    11836    2               END;
      202    11837    1   LOGON:  ;
      203    11838    1           IF KL$SGN.AUTOLGN
      204    11839    1             OR KL$SGN.PROFILE
      205    11840    2             THEN DO;
      206    11841    2               HLPER = %E$ILGL;
      207    11842    2               CALL CHARBIN(FEX,SUBSTR(KL_STATION,4,4));
      208    11843    2               CONFIG_KEY.NODE= FEX;
      209    11844    2               CONFIG_KEY.TERMID = KL$SGN.TERMINAL_ID;
      210    11845    2               IF CONFIG_KEY.TERMID.TERM.TERM_NAME ~= ' '
      211    11846    3                 THEN DO;
      212    11847    3                   CONFIG_KEY.TERMID.TERM.CHANNEL = '0'B;
      213    11848    3                   CONFIG_KEY.NODE = 0;
      214    11849    3                   END;
      215    11850    2               CONFIG_KEY.TERMID.TTYP = 0;
      216    11851    2               READ_NETCON.BUF_ = VECTOR(CNFG_BUF);
      217    11852    2               READ_NETCON.KEY_ = VECTOR(CONFIG_KEY);
      218    11853    2               CALL M$READ(READ_NETCON)
      219    11854    3                 WHENALTRETURN DO;
      220    11855    3                   IF KL$SGN.PROFILE
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:7    
      221    11856    3                     THEN
      222    11857    3                       KL$SGN.PROFILE = '0'B;
      223    11858    3                     ELSE
      224    11859    3                       GOTO ILGL;
      225    11860    3                   END;
      226    11861    2               IF KL$SGN.AUTOLGN
      227    11862    3                 THEN DO;
      228    11863    3                   KL$SGN.LOGON.LGNSIZ = LINCNFG.LGN.LGNSIZE;
      229    11864    3                   KL$SGN.LOGON.LGNTXT = LINCNFG.LGN.LGNSTRING;
      230    11865    3                   END;
      231    11866    2               END;                        /* IF KL$SGN.AUTOLGN                  */
      232    11867    2           CALL KLH$SGSCAN (KL$SGN.LOGON,ACCT,NAME,PW,PRO,HLPER,HOST,NOSETUP,NOHEADER)
             11867                    WHENALTRETURN DO;
      233    11868    2               IF ES$->LOGSYSACC >= %PC_ES_FAILED# THEN
      234    11869    2                   CALL SECLOG(%ES_JUNK_LOGON#);
      235    11870    2               GOTO ILGL;
      236    11871    2               END;
      237    11872    1           IF HOST = ' '
      238    11873    1             THEN
      239    11874    1               HOST = KL_NODENAME;
      240    11875
      241    11876        /* If this logon is not for this node send it back to NA */
      242    11877    1           IF KL_NODENAME ~= HOST
      243    11878    2             THEN DO;
      244    11879    2               CALL KLX$CONV_NODENAME(HOST,KL_DESTNODE,NODETYPE)
      245    11880    3                 WHENALTRETURN DO;
      246    11881    3                   HLPER = %E$UDHOST;
      247    11882    3                   GOTO ILGL;
      248    11883    3                   END;
      249    11884    2               IF NODETYPE ~= %KL_NODETYPE_HOST
      250    11885    3                 THEN DO;
      251    11886    3                   HLPER = %E$UDHOST;
      252    11887    3                   GOTO ILGL;
      253    11888    3                   END;
      254    11889    2               IF KL_FETBL.QOS(KL_DESTNODE) = 255 /* Cannot talk to this host    */
      255    11890    3                 THEN DO;
      256    11891    3                   HLPER = %E$NOHOST;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:8    
      257    11892    3                   GOTO ILGL;
      258    11893    3                   END;
      259    11894    2               KL$SGN.NODE = KL_DESTNODE;
      260    11895    2               KL$SGN.AUTOLGN = '0'B;
      261    11896    2               CALL KLX$WRHLPSTA(KL$SGN,SIZEC(KL$SGN),KL_STATION);
      262    11897    2               RETURN;
      263    11898    2               END;
      264    11899    1           KL_DESTNODE = KL_NODE;          /* This one is for me                 */
      265    11900    1           KL_PCD='0'B;
      266    11901    1           KL_PCD.ADDD.FEX=KL$SGN.NODE;
      267    11902    1           FEX = KL$SGN.NODE;
      268    11903    1           CALL KLX$CONV_NODE(KL_PCD.ADDD.FEPNAME,FEX,NODETYPE);
      269    11904    1           KL_PCD.ADDD.NMID=KL$SGN.NMID;
      270    11905    1           KL_PCD.ADDD.SPEED=KL$SGN.SPEED;
      271    11906    1           KL_PCD.ADDD.TERMID.LEV=KL$SGN.TERMINAL_ID.LEV;
      272    11907    1           CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.CHANNEL,KL_PCD.ADDD.TERMID.CHAN ,2);
      273    11908    1           CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBDEVICE,KL_PCD.ADDD.TERMID.SUB ,2);
      274    11909    1           CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE,KL_PCD.ADDD.TERMID.SUBSUB
             11909                    ,2);
      275    11910    2           IF ACCR.C1='?' THEN DO;
      276    11911    2               CALL SNDRJ (%E$SGSYN);
      277    11912    2               RETURN;
      278    11913    2               END;
      279    11914    1           HLPER=%E$ILGL;
      280    11915    1           SNDPRO = '1'B;                  /* always send the profile if possible*/
      281    11916    2           DO CASE (KL$SGN.TERMINAL_ID.TTYP); /* CASE on physical device type    */
      282    11917    2             CASE (%KLTY_TTY#,%KLTY_URP#,%KLTY_LINEDEV#);
             11917                      /* A TTY-like ASYNC device or URP device */
      283    11918    2               CALL GETHLP ALTRET (ILGL);
      284    11919    2               IF KL_HLPR.ATYP~=%KLAT_TS# AND KL_HLPR.ATYP~=%KLAT_CG#
      285    11920    2                 AND KL_HLPR.ATYP~=%KLAT_RES#
      286    11921    2                 THEN GOTO ILGL;
      287    11922    3               DO WHILE('0'B);
      288    11923    3   TSCHK:        IF KL_HLPR.ATYP~=%KLAT_TS# THEN GOTO BPRO;
      289    11924    3                 IF PRO.C=0
      290    11925    3                   THEN HLPER=%E$NGPRS;
      291    11926    3                   ELSE HLPER=%E$NOPRS;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:9    
      292    11927    3   NOPRO:        CALL SNDMSG(HLPER);
      293    11928    3                 PRO.C=4;
      294    11929    3                 PRO.T='NONE';
      295    11930    3                 END;
      296    11931        /*  dont send the profile again if it was specified in the channel config
      297    11932            but not on the logon string.  If it was specified in the config then
      298    11933            nodeadmn already got one */
      299    11934    2               IF KL$SGN.PROFILE AND PRO.C = 0
      300    11935    3                 THEN DO;
      301    11936    3                   SNDPRO = '0'B;
      302    11937    3                   PRO = LINCNFG.PRO;
      303    11938    3                   END;
      304    11939    2                 ELSE
      305    11940    2                   SNDPRO = '1'B;
      306    11941    2               CALL GETPRO ALTRET (TSCHK);
      307    11942    2               IF KL_PCD.ADDD.TERMID.TTYP~=KL$SGN.TERMINAL_ID.TTYP AND KL_HLPR.ATYP=%
             11942                        KLAT_TS#
      308    11943    3                 THEN DO;
      309    11944    3                   HLPER=%E$BDPRS;
      310    11945    3                   GOTO NOPRO;
      311    11946    3                   END;
      312    11947    2               IF KL_HLPR.ATYP=%KLAT_TS#
      313    11948    2                 THEN KL_PCD.ADDD.ACTYP=%KLAC_NONE;
      314    11949    2                 ELSE KL_PCD.ADDD.ACTYP=%KLAC_DEV;
      315    11950    2               KL_PCD.ADDD.ASSOCTRM=ACCT;
      316    11951    2             CASE (%KLTY_PROG#);           /* A system program on the L6         */
      317    11952    2               CALL GETHLP ALTRET (ILGL);
      318    11953    2               IF KL_HLPR.ATYP~=%KLAT_TS# AND KL_HLPR.ATYP~=%KLAT_CG#
      319    11954    2                 AND KL_HLPR.ATYP~=%KLAT_RES#
      320    11955    2                 THEN GOTO ILGL;
      321    11956    2               PRO.C = 4;
      322    11957    2               PRO.T = 'NONE';
      323    11958    2               CALL GETPRO;
      324    11959    2               IF KL_HLPR.ATYP=%KLAT_TS#
      325    11960    2                 THEN KL_PCD.ADDD.ACTYP=%KLAC_NONE;
      326    11961    2                 ELSE KL_PCD.ADDD.ACTYP=%KLAC_DEV;
      327    11962    2               KL_PCD.ADDD.ASSOCTRM=ACCT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:10   
      328    11963    2             CASE (%KLTY_SDEV#);           /* A sub-device of a multi-device     */
      329    11964                                                /* bi-sync terminal. This comes from  */
      330    11965                                                /* a list passed back to the FEP on   */
      331    11966                                                /* a multi-device terminal logon      */
      332    11967    2               NAME.C=0;
      333    11968    2               CALL GETHLP ALTRET (ILGL);
      334    11969    2               IF KL_HLPR.ATYP~=%KLAT_CG# AND KL_HLPR.ATYP~=%KLAT_RES#
      335    11970    2                 AND KL_HLPR.ATYP~=%KLAT_TS#
      336    11971    2                 THEN GOTO ILGL;
      337    11972    2               CALL GETPRO ALTRET (BPRO);
      338    11973    2               KL_PCD.ADDD.ACTYP=%KLAC_TDEV;
      339    11974    2               KL_PCD.ADDD.ASSOCTRM=KL_HLPR.TNAME;
      340    11975    2             CASE(%KLTY_FEP#);             /* A FEP                              */
      341    11976    2               KL_HLPR = SLUGHLP;
      342    11977    2               KL_PCD.ADDD.IO='11'B;
      343    11978    2               KL_PCD.ADDD.TERMID.TTYP=%KLTY_FEP#;
      344    11979    2               KL_PROBUF=FRGPRO;
      345    11980    2               KL_PCD.ADDD.ACTYP=%KLAC_DEV;
      346    11981    2               KL_PCD.ADDD.ASSOCTRM=ACCT;
      347    11982    2             CASE (ELSE);
      348    11983    2               GOTO ILGL;
      349    11984    2             END;
      350    11985    1           IF KL_PCD.ADDD.TERMID.TTYP~=KL$SGN.TERMINAL_ID.TTYP THEN GOTO BPROT;
      351    11986                                      /* PROFILE device-type ~= physical device-type  */
      352    11987    1           KL_PCD.ADDD.TNAME=KL_HLPR.SNAME;
      353    11988    1           KL_PCD.ADDD.TWSN=KL_HLPR.TWSN#;
      354    11989    1           KL_PCD.ADDD.ATYP=KL_HLPR.ATYP;
      355    11990    1           KL_PCD.ADDD.COS = KL_HLPR.COS;
      356    11991    2           DO CASE (KL_HLPR.ATYP);         /* CASE on attachment type            */
      357    11992    2             CASE (%KLAT_TS#);             /* Timesharing user                   */
      358    11993    3               IF KL_HLPR.FLAGS.OLOK='0'B THEN DO;
      359    11994    3                   CALL SNDRJ (%E$OLIL);
      360    11995    3                   RETURN;
      361    11996    3                   END;
      362    11997    2               IF KL_PROBUF.IO~='11'B THEN GOTO BPROT;
      363    11998    2               KL$PCD_TS.TSINFO.ACCT=ACCT;
      364    11999    2               KL$PCD_TS.TSINFO.UNAME=NAME.T;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:11   
      365    12000    2               KL$PCD_TS.TSINFO.HPSN=KL_HLPR.HPS.N;
      366    12001    2               KL$PCD_TS.TSINFO.WOO=KL_HLPR.WOO;
      367    12002    2               KL$PCD_TS.TSINFO.LINES=KL_PROBUF.LINES;
      368    12003    2               KL$PCD_TS.TSINFO.WIDTH=KL_PROBUF.WIDTH;
      369    12004    2               KL$PCD_TS.TSINFO.ATTR=KL_PROBUF.ATTR;
      370    12005    2               KL$PCD_TS.TSINFO.NOSETUP = NOSETUP; /* FROM SGSCAN CALL           */
      371    12006    2               KL$PCD_TS.TSINFO.NOHEADER = NOHEADER; /*FROM SGSCAN CALL*/
      372    12007    2               KL$PCD_TS.ADDD.DEVNM='*TSTERM*';
      373    12008    2               IF SNDPRO THEN
      374    12009    2                   CALL SETPRO;
      375    12010    2               CALL KLH$SNDHSGN(HLPER) ALTRET (ILGL);
      376    12011                    /* May be logging all logons or may at least have to
      377    12012                       update :USERS for successful logons.              */
      378    12013    2               IF ES$->LOGSYSACC=%PC_ES_LOGACC_ALL# THEN
      379    12014    2                   CALL SECLOG(%ES_LOG_ALL#);
      380    12015    3                 ELSE CALL UPD_USERS(%ES_LOG_ALL#) WHENALTRETURN DO;
      381    12016    3                       END;
      382    12017    2             CASE (%KLAT_CG#,%KLAT_RES#);  /* Device on a comgroup               */
      383    12018                                                /* Remote FEPs                        */
      384    12019                                                /* Sub-devices of a multi-device      */
      385    12020                                                /* terminal are of this type          */
      386    12021    2               KL_PCD.CGID = KL_HLPR.CGID;
      387    12022    2               KL_PCD.ADDD.NOCGREJ = KL_HLPR.FLAGS.NOCGREJ;
      388    12023    2               KL_PCD.ADDD.NOCGINF = KL_HLPR.FLAGS.NOCGINF;
      389    12024    2               KL_PCD.ADDD.USETP = KL_HLPR.FLAGS.USETP;
      390    12025    2               IF KL_HLPR.FLAGS.RNME
      391    12026    2                 THEN KL_PCD.ADDD.DEVNM = KL_HLPR.RENAME;
      392    12027    2                 ELSE KL_PCD.ADDD.DEVNM = ACCT;
      393    12028    2               KL_PCD.CGINFO.ATTR = KL_PROBUF.ATTR;
      394    12029    2               KL_PCD.CGINFO.FLG.INPUT = KL_PROBUF.IO.INPUT;
      395    12030    2               KL_PCD.CGINFO.FLG.OUTPUT = KL_PROBUF.IO.OUTPUT;
      396    12031    2               KL_PCD.CGINFO.WIDTH = KL_PROBUF.WIDTH;
      397    12032    2               KL_PCD.CGINFO.LENGTH = KL_PROBUF.LINES;
      398    12033    2               IF KL_HLPR.ATYP = %KLAT_RES#
      399    12034    3                 AND SUBSTR(KL_HLPR.RENAME,0,2) = 'CL' THEN DO;
      400    12035    3                   KL_PCD.CGINFO.RESINFO.AUACCT =
      401    12036    3                     ADDR(KL_HLPR)->HLPR_RES.RES.AUACCOUNT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:12   
      402    12037    3                   KL_PCD.CGINFO.RESINFO.MODE = ADDR(KL_HLPR)->HLPR_RES.RES.MODE;
      403    12038    3                   KL_PCD.CGINFO.ATTR = ADDR(KL_HLPR)->HLPR_RES.RES.ATTR;
      404    12039    3                   KL_PCD.CGINFO.RESINFO.RNAME = ADDR(KL_HLPR)->HLPR_RES.RES.RNAME;
      405    12040    3                   KL_PCD.CGINFO.NWINFO = KL_HLPR.NWINFO;
      406    12041    3                   END;
      407    12042    3                 ELSE DO;
      408    12043    3                   KL_PCD.CGINFO.WHO.ACCT = ACCT;
      409    12044    3                   KL_PCD.CGINFO.XTRAINFO = KL_HLPR.INFO;
      410    12045    3                   KL_PCD.CGINFO.NWINFO = KL_HLPR.NWINFO - SIZEW(KL_HLPR.CGID);
      411    12046    3                   END;
      412    12047    2               KL_PCD.CGINFO.WHO.NAME = NAME.T;
      413    12048    2               IF SNDPRO THEN
      414    12049    2                   CALL SETPRO;
      415    12050    2               CALL KLH$SNDHSGN(HLPER) ALTRET(ILGL);
      416    12051                    /* May be logging all logons or may at least have to
      417    12052                       update :USERS for successful logons.              */
      418    12053    2               IF ES$->LOGSYSACC=%PC_ES_LOGACC_ALL# THEN
      419    12054    2                   CALL SECLOG(%ES_LOG_ALL#);
      420    12055    3                 ELSE CALL UPD_USERS(%ES_LOG_ALL#) WHENALTRETURN DO;
      421    12056    3                       END;
      422    12057    2             CASE(ELSE);
      423    12058    2               GOTO ILGL;
      424    12059    2             END;
      425    12060    1   RET:    RETURN;
      426    12061    1   BPRO:   IF PRO.C=0
      427    12062    1             THEN HLPER=%E$NOPR;
      428    12063    1             ELSE HLPER=%E$NGPR;
      429    12064    2           DO WHILE('0'B);
      430    12065    2   BPROT:    HLPER=%E$BDPR;
      431    12066    2             END;
      432    12067    1   ILGL:   CALL SNDRJ (HLPER);
      433    12068
      434    12069        /*   If this is an AUTO logon send message to console */
      435    12070    1           IF KL$SGN.AUTOLGN
      436    12071    2             THEN DO;
      437    12072    2               KL_AUTOFAIL.FEX = KL$SGN.NODE;
      438    12073    2               KL_AUTOFAIL.LEVEL = KL$SGN.TERMINAL_ID.LEV;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:13   
      439    12074    2               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.CHANNEL,KL_AUTOFAIL.CHAN,2);
      440    12075    2               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBDEVICE,KL_AUTOFAIL.SUBDEV,2);
      441    12076    2               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE,KL_AUTOFAIL.SUBSUBDEV
             12076                        ,2);
      442    12077    2               KL_AUTOFAIL.REASON = HLPER;
      443    12078    2               CALL KLX$CONV_NODE(KL_AUTOFAIL.FEPNAME,FEX,NODETYPE);
      444    12079    2               CALL M$WRITE (WRTAUTOFAIL);
      445    12080    2               END;
      446    12081    1           RETURN;
      447    12082        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:14   
      448    12083    1   GETHLP: PROC ALTRET;
      449    12084        /*I* NAME:        GETHLP
      450    12085             PURPOSE:     To obtain the :HLP record and verify the PASSWORD
      451    12086             CALL:        CALL GETHLP ALTRET(LBL);
      452    12087             INPUT:       ACCT - Logging on account
      453    12088                          NAME - Logging on user name (TEXTC)
      454    12089             OUTPUT:      KL_HLPR - The read-in :HLP record
      455    12090                          HLPER - Error set to %E$HLPBD if read of :HLP gives
      456    12091                             unexpected ALTRETURN error code (not %E$NOKEY)
      457    12092                             Any other error condition sets HLPER=%E$ILGL.
      458    12093             DESCRIPTION: GETHLP formats a key out of ACCT and NAME and uses that
      459    12094                          key to read the :HLP record. The password is verified.
      460    12095                          If the record exists and the password matches,
      461    12096                          GETHLP RETURNs normally, otherwise it ALTRETURNs with
      462    12097                          HLPER filled in.
      463    12098        */
      464    12099    2           KL_HLPKEY.ACCT=ACCT;
      465    12100    2           KL_HLPKEY.CNT=NAME.C+SIZEC(KL_HLPKEY.ACCT);
      466    12101    2           KL_HLPKEY.NAME=NAME.T;
      467    12102    2           CALL M$READ (KL_RDHLPR) ALTRET (RDALT);
      468    12103    2           SAVE_PW=PW;
      469    12104    2           CALL ASZ$SCRAMBLE (PW);
      470    12105                /* May want to log it in the security log. At least, update
      471    12106                   the bad logon count in the :USERS record.               */
      472    12107    3           IF PW~=KL_HLPR.PASSWORD THEN DO;
      473    12108    3               IF ES$->LOGSYSACC >= %PC_ES_FAILEDPW# THEN
      474    12109    3                   CALL SECLOG(%ES_BAD_PW#);
      475    12110    4                 ELSE CALL UPD_USERS(%ES_BAD_PW#) WHENALTRETURN DO;
      476    12111    4                       END;
      477    12112    3               GOTO ILGL;
      478    12113    3               END;
      479    12114    2           RETURN;
      480    12115    2   RDALT:  IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOKEY
      481    12116    2             THEN HLPER=%E$HLPBD;
      482    12117    3             ELSE DO;
      483    12118    3               IF ES$->LOGSYSACC >= %PC_ES_FAILEDPWNE# THEN
      484    12119    3                   CALL SECLOG(%ES_NO_SUCH_USER#);
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:15   
      485    12120    3   ILGL:       HLPER=%E$ILGL;
      486    12121    3               END;
      487    12122    2           ALTRETURN;
      488    12123    2   END GETHLP;
      489    12124        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:16   
      490    12125    1   GETPRO: PROC ALTRET;
      491    12126        /*I* NAME:        GETPRO
      492    12127             PURPOSE:     To read in the profile record and set some values
      493    12128             CALL:        CALL GETPRO ALTRET(LBL);
      494    12129             INPUT:       PRO - A possibly filled-in profile key
      495    12130                          KL_HLPR - The device's (user's) :HLP record
      496    12131                          DEFPRO - SLUG's default profile record
      497    12132             OUTPUT:      KL_PROBUF - The read-in (or default) profile record
      498    12133                          KL_PCD.ADDD.IO - Input, output or both
      499    12134                          KL_PCD.ADDD.TERMID.TTYP - Terminal type (TTY,STRM,SDEV or PROG)
      500    12135                          PSIZ - Set to the length of the read in profile
      501    12136                             record now in KL_PROBUF. If no profile record
      502    12137                             was read in (including using DEFPRO as KL_PROBUF)
      503    12138                             then PSIZ will be zero.
      504    12139             DESCRIPTION: GETPRO reads a :PRO record using either PRO (user-specified)
      505    12140                          or KL_HLPR.PNAME (:HLP-record specified default) and
      506    12141                          uses the found information to update the OUTPUT fields
      507    12142                          described above. KL_PROBUF is returned with the read-in
      508    12143                          :PRO record intact. If the record does not exist, GETPRO
      509    12144                          will ALTRETURN. If no profile was specified either
      510    12145                          on the signon or as a :HLP-record default, DEFPRO
      511    12146                          will be used as the default profile but PSIZ will
      512    12147                          be zero. Also, if 'NONE' or 'none'
      513    12148                          was specified as the profile name, then again
      514    12149                          DEFPRO will be used but PSIZ will be zero.
      515    12150        */
      516    12151        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:17   
      517    12152    2           PSIZ = 0;
      518    12153    2           IF PRO.C=0
      519    12154    2             THEN P$ = ADDR(KL_HLPR.PNAME);
      520    12155    2             ELSE P$ = ADDR(PRO);
      521    12156    2           KL_PROKEY.C = ACHAR.CNT;
      522    12157    2           CALL XLATE (KL_PROKEY.T , B$XL_UPPER_UR , ACHAR.TXT);
      523    12158    2           IF KL_PROKEY.C=0 OR KL_PROKEY.T='NONE'
      524    12159    3             THEN DO;
      525    12160    3               KL_PROBUF=DEFPRO;
      526    12161    3               PSIZ = 0;
      527    12162    3               KL_PCD.ADDD.TERMID.TTYP=KL$SGN.TERMINAL_ID.TTYP;
      528    12163    3               END;
      529    12164    3             ELSE DO;
      530    12165    4               CALL M$READ(KL_RDPROR) WHENALTRETURN DO;
      531    12166    4                   ALTRETURN;
      532    12167    4                   END;
      533    12168    3               PSIZ=DCBADDR(DCBNUM(M$PROF))->F$DCB.ARS;
      534    12169    3               KL_PCD.ADDD.TERMID.TTYP=KL_PROBUF.TTYP;
      535    12170    3               END;
      536    12171    2           KL_PCD.ADDD.IO=KL_PROBUF.IO;
      537    12172    2           RETURN;
      538    12173    2   END GETPRO;
      539    12174        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:18   
      540    12175    1   SETPRO: PROC;
      541    12176        /*D* NAME:        SETPRO
      542    12177             PURPOSE:     To send a profile message on behalf of this path
      543    12178             CALL:        CALL SETPRO;
      544    12179             INPUT:       PSIZ - Size of KL_PROBUF
      545    12180                          KL_PROBUF - The profile record
      546    12181             OUTPUT:      A set profile message to Node Admin
      547    12182             DESCRIPTION: SETPRO sends a set profile message to Node Admin
      548    12183                          on behalf of this path if PSIZ is not zero. The
      549    12184                          profile information is obtained from KL_PROBUF
      550    12185                          and send without the profile header portion.
      551    12186        */
      552    12187
      553    12188    2   DCL SIZE SBIN;
      554    12189    2   DCL IMP# UBIN;
      555    12190    2   DCL CHR$SIZE CHAR(SIZE) BASED;
      556    12191        %KL_PRFRSP(FPTN=PRFRSP,PRFSIZE=1024,STCLASS=AUTO);
      557    12241
      558    12242    2           IF PSIZ = 0
      559    12243    2             THEN
      560    12244    2               RETURN;
      561    12245    2           SIZE=PSIZ-LENGTHC(PROH);
      562    12246    2           IF SIZE<=0
      563    12247    2             THEN
      564    12248    2               SIZE = 0;
      565    12249    2           PRFRSP.FCN=IGA_PRFRSP;
      566    12250    2           PRFRSP.IMP = '0'B;
      567    12251    2           PRFRSP.NMID=NMID;
      568    12252    2           PRFRSP.PROFILE.PRFSIZE.BYT(1)=SIZE;
      569    12253    2           PRFRSP.PROFILE.PRFSIZE.BYT(0)=SIZE/256;
      570    12254    2           PRFRSP.PROFILE.PRFTXT=
      571    12255    2             PINCRC(ADDR(KL_PROBUF),LENGTHC(PROH))->CHR$SIZE;
      572    12256    2           SIZE=LENGTHC(PRFRSP)-LENGTHC(PRFRSP.PROFILE.PRFTXT)+SIZE;
      573    12257    2           IMP# = KL_PROBUF.IMP#;
      574    12258    2           IF SIZE > 0 AND IMP# > 0
      575    12259    2             THEN
      576    12260    2               PRFRSP.MORE = '1'B;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:19   
      577    12261    2             ELSE
      578    12262    2               PRFRSP.MORE = '0'B;
      579    12263    2           CALL KLX$WRHLPSTA(PRFRSP,SIZE,KL_STATION);
      580    12264    2           KL_PROKEY.C = LENGTHC(KL_PROKEY) - 1;
      581    12265    2           PRFRSP.IMP = '1'B;
      582    12266    2           IF PRFRSP.MORE
      583    12267    2             THEN
      584    12268    3             DO KL_PROKEY.IMP# = 1 TO IMP#;
      585    12269    3               CALL M$READ (KL_RDPROR)
      586    12270    4                 WHENRETURN DO;
      587    12271    4                   SIZE = DCBADDR(DCBNUM(M$PROF))->F$DCB.ARS ;
      588    12272    4                   PRFRSP.PROFILE.PRFTXT = ADDR(KL_PROBUF)->CHR$SIZE;
      589    12273    4                   PRFRSP.PROFILE.PRFSIZE.BYT(1) = SIZE;
      590    12274    4                   PRFRSP.PROFILE.PRFSIZE.BYT(0) = SIZE/256;
      591    12275    4                   IF KL_PROKEY.IMP# = IMP#
      592    12276    4                     THEN
      593    12277    4                       PRFRSP.MORE = '0'B;
      594    12278    4                   SIZE = SIZE + LENGTHC(PRFRSP) - LENGTHC(PRFRSP.PROFILE.PRFTXT);
      595    12279    4                   CALL KLX$WRHLPSTA(PRFRSP,SIZE,KL_STATION);
      596    12280    4                   END;
      597    12281    3               END;
      598    12282    2           RETURN;
      599    12283    2   END SETPRO;
      600    12284
      601    12285        /*D* NAME:        SNDMSG
      602    12286             PURPOSE:     To send a message to the device
      603    12287             DESCRIPTION: SNDMSG simply takes ERR and gets an errmsg for it
      604    12288                          and sends that message to the device
      605    12289        */
      606    12290    1   SNDMSG: PROC(ERR);
      607    12291    2   DCL ERR UBIN;
      608    12292        %KL_WRITE(FPTN=KL_WRITE,STCLASS=AUTO);
      609    12331    2   DCL SIZ UBIN;
      610    12332
      611    12333    2           KL_WRITE='0'B;
      612    12334    2           KL_WRITE.FCN=IGA_WRITE;
      613    12335    2           KL_WRITE.NMID = NMID;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:20   
      614    12336    2           SIZ=LENGTHC(KL_WRITE.MESSAGE.MSGTXT);
      615    12337    2           CALL KLH$ERRMSG(KL_WRITE.MESSAGE.MSGTXT,SIZ,ERR);
      616    12338    2           KL_WRITE.MESSAGE.MSGSIZE=SIZ;
      617    12339    2           SIZ=LENGTHC(KL_WRITE)-LENGTHC(KL_WRITE.MESSAGE.MSGTXT)+KL_WRITE.MESSAGE.
             12339                    MSGSIZE;
      618    12340    2           CALL KLX$WRHLPSTA(KL_WRITE,SIZ,KL_STATION);
      619    12341    2           RETURN;
      620    12342    2   END SNDMSG;
      621    12343
      622    12344        /*D* NAME:        SNDRJ
      623    12345             PURPOSE:     To format and send a KL_SGNRSP message rejecting this logon
      624    12346             CALL:        CALL SNDRJ(ERR);
      625    12347             INPUT:       ERR - The reason for the reject
      626    12348             OUTPUT:      KL_SGNRSP - The signon response as a reject message
      627    12349             DESCRIPTION: SNDRJ formats a KL_SGNRSP message, calls KLH$SGNTXT
      628    12350                          to complete filling out the .MESSAGE portion, and
      629    12351                          sends this message to the originating station.
      630    12352        */
      631    12353
      632    12354    1   SNDRJ:  PROC(ERR);
      633    12355
      634    12356    2   DCL ERR UBIN;
      635    12357    2   DCL SIZ UBIN;
      636    12358        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS=AUTO);
      637    12493
      638    12494    2           KL_SGNRSP='0'B;
      639    12495    2           KL_SGNRSP.FCN=IGA_SGNRSP;
      640    12496    2           KL_SGNRSP.NMID=KL$SGN.NMID;
      641    12497    2           CALL KLH$SGNTXT(KL_SGNRSP,ERR);
      642    12498    2           IF HLPER = %E$NOHOST THEN
      643    12499    2               KL_SGNRSP.RLCID.NODE = KL_DESTNODE;
             12499                        /* node # device is attempting logon to*/
      644    12500    2           SIZ=LENGTHC(KL_SGNRSP)-LENGTHC(KL_SGNRSP.MESSAGE.RSPTXT)
      645    12501    2             +KL_SGNRSP.MESSAGE.RSPSIZ;
      646    12502    2           CALL KLX$WRHLPSTA(KL_SGNRSP,SIZ,KL_STATION);
      647    12503    2           RETURN;
      648    12504    2   END SNDRJ;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:21   
      649    12505        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:22   
      650    12506    1   SECLOG: PROC(REASON);
      651    12507
      652    12508        /*I* NAME:        SECLOG
      653    12509
      654    12510             PURPOSE:     To fill in and write a record to the security log
      655    12511                          for system accesses and/or possibly update the
      656    12512                          :USERS record for security purposes.
      657    12513
      658    12514             CALL:        CALL SECLOG(reason);
      659    12515
      660    12516             INPUT:       A reason as defined in the ES_SUBS_E include file.
      661    12517
      662    12518             OUTPUT:      In all cases, a record will be written to the
      663    12519                          security log via M$WRSYSLOG. Some cases will also
      664    12520                          require security updates to the :USERS record.
      665    12521
      666    12522             DESCRIPTION: SECLOG will only be called if the value of
      667    12523                          ES_LOGSYSACC (defined via CONTROL) indicates that
      668    12524                          security logging is desired. Dependent upon the
      669    12525                          specific type of logging desired, it may be called
      670    12526                          when (1) a garbage logon is given, (2) a logon
      671    12527                          is given which does not exist in :HLP, (3) a logon
      672    12528                          is given which does exist in :HLP but has failed
      673    12529                          the password check, or (4) logging of all system
      674    12530                          accesses is desired.
      675    12531
      676    12532                          The security log structure is filled in
      677    12533                          from information found in the KL$SGN and KL_HLPR
      678    12534                          (:HLP record) structures and M$WRSYSLOG is called.
      679    12535                          If the reason passed to SECLOG
      680    12536                          indicates that the logon given was good except for
      681    12537                          the password, the bad password is also placed in
      682    12538                          the security record and the count of bad logon
      683    12539                          attempts since the last system exit is incremented
      684    12540                          in the :USERS record. The online PRIV and PPRIV
      685    12541                          information is copied from the :USERS record into
      686    12542                          the security record in this case. If logging a good
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:23   
      687    12543                          logon, the current logon time and bad logon counts
      688    12544                          in the :USERS records will be updated.
      689    12545        */
      690    12546    2   DCL REASON UBIN;
      691    12547        %INCLUDE ES_TABLES_M;
      692    12941        %ES$SECLOG(NAME=ES$SECLOG,STCLASS=STATIC);
      693    13218        %INCLUDE B$JIT;
      694    13508        %B$JIT0_ES_MODES;
      695    13512    2   DCL B$JIT$ PTR SYMREF;
      696    13513        %FPT_WRSYSLOG(FPTN=WR_SECLOG,
      697    13514                  ENTRY=ES$SECLOG,
      698    13515                  FILENUM=EL_SEC,
      699    13516                  SIZE="SIZEW(ES$SECLOG)",
      700    13517                  TYPE=EL_SYS_ACCESS);
      701    13532        %INCLUDE AS_SUBS_C;
      702    14946
      703    14947    2           ES$SECLOG.REASON=REASON;
      704    14948    2           ES$SECLOG.GRANTED='0'B;
      705    14949    2           ES$SECLOG.MODE=0;
      706    14950    2           ES$SECLOG.ACCN = ' ';
      707    14951    2           ES$SECLOG.UNAME = ' ';
      708    14952    2           ES$SECLOG.PASSWORD = ' ';
      709    14953    2           ES$SECLOG.PRIV='0'B;
      710    14954    2           ES$SECLOG.PPRIV='0'B;
      711    14955    2           ES$SECLOG.LOGON.L = 0;
      712    14956    2           ES$SECLOG.LOGON.C = ' ';
      713    14957    3           IF REASON ~= %ES_JUNK_LOGON# THEN DO;
      714    14958    3               ES$SECLOG.TSLINE.FEX = KL_PCD.ADDD.FEX;
      715    14959    3               ES$SECLOG.TSLINE.PORT = BITBIN(KL_PCD.ADDD.TERMID.CHAN);
      716    14960    3               ES$SECLOG.TSLINE.LEV = KL_PCD.ADDD.TERMID.LEV;
      717    14961    3               ES$SECLOG.TSLINE.SUBDEVICE = BITBIN(KL_PCD.ADDD.TERMID.SUB);
      718    14962    3               ES$SECLOG.TSLINE.SUBSUBDEVICE = BITBIN(KL_PCD.ADDD.TERMID.SUBSUB);
      719    14963    3               END;
      720    14964
      721    14965    3           DO CASE(REASON);
      722    14966    3             CASE(%ES_LOG_ALL#);
      723    14967    3               ES$SECLOG.GRANTED='1'B;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:24   
      724    14968    3               ES$SECLOG.ACCN=ACCT;
      725    14969    3               IF NAME.C ~= 0 THEN
      726    14970    3                   ES$SECLOG.UNAME=NAME.T;
      727    14971    4               DO CASE(KL_HLPR.ATYP);
      728    14972    4                 CASE(%KLAT_TS#);
      729    14973    4                   ES$SECLOG.MODE=%M_INT#;
      730    14974    4                 CASE(%KLAT_CG#);
      731    14975    4                   ES$SECLOG.MODE=%M_CG#;
      732    14976    4                 CASE(%KLAT_RES#);
      733    14977    4                   ES$SECLOG.MODE=%M_RES#;
      734    14978    4                 END;
      735    14979    3               CALL UPD_USERS(%ES_LOG_ALL#) ALTRET(LOG_IT);
      736    14980    3             CASE(%ES_JUNK_LOGON#);
      737    14981    3               ES$SECLOG.LOGON.L=KL$SGN.LOGON.LGNSIZ;
      738    14982    3               IF ES$SECLOG.LOGON.L > LENGTHC(ES$SECLOG.LOGON.C) THEN
      739    14983    3                   ES$SECLOG.LOGON.L=LENGTHC(ES$SECLOG.LOGON.C);
      740    14984    3               ES$SECLOG.LOGON.C=KL$SGN.LOGON.LGNTXT;
      741    14985    3               ES$SECLOG.TSLINE.FEX=KL$SGN.NODE;
      742    14986    3               ES$SECLOG.TSLINE.LEV=KL$SGN.TERMINAL_ID.LEV;
      743    14987    3               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.CHANNEL,
      744    14988    3                 ES$SECLOG.TSLINE.PORT,2);
      745    14989    3               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBDEVICE,
      746    14990    3                 ES$SECLOG.TSLINE.SUBDEVICE,2);
      747    14991    3               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE,
      748    14992    3                 ES$SECLOG.TSLINE.SUBSUBDEVICE,2);
      749    14993    3             CASE(%ES_NO_SUCH_USER#);
      750    14994    3               ES$SECLOG.ACCN=ACCT;
      751    14995    3               IF NAME.C ~= 0 THEN
      752    14996    3                   ES$SECLOG.UNAME = NAME.T;
      753    14997    3             CASE(%ES_BAD_PW#);
      754    14998    3               ES$SECLOG.ACCN=ACCT;
      755    14999    3               IF NAME.C ~= 0 THEN
      756    15000    3                   ES$SECLOG.UNAME = NAME.T;
      757    15001    3               ES$SECLOG.PASSWORD = SAVE_PW;
      758    15002    4               DO CASE(KL_HLPR.ATYP);
      759    15003    4                 CASE(%KLAT_TS#);
      760    15004    4                   ES$SECLOG.MODE=%M_INT#;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:25   
      761    15005    4                 CASE(%KLAT_CG#);
      762    15006    4                   ES$SECLOG.MODE=%M_CG#;
      763    15007    4                 CASE(%KLAT_RES#);
      764    15008    4                   ES$SECLOG.MODE=%M_RES#;
      765    15009    4                 END;
      766    15010    3               CALL UPD_USERS(%ES_BAD_PW#) ALTRET(LOG_IT);
      767    15011    3               ES$SECLOG.PRIV = AS_USERS.PRIV(AS_M_INT#); /* Online privs        */
      768    15012    3               ES$SECLOG.PPRIV = AS_USERS.PPRIV(AS_M_INT#); /* Online pprivs     */
      769    15013    3             CASE(ELSE);
      770    15014                                                /* Should never happen                */
      771    15015    3               RETURN;
      772    15016    3             END;                          /* End Do Case(Reason)                */
      773    15017    2   LOG_IT: ;
      774    15018    2           CALL M$WRSYSLOG(WR_SECLOG);
      775    15019    2           RETURN;
      776    15020    2   END SECLOG;
      777    15021        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:26   
      778    15022    1   UPD_USERS: PROC(REASON) ALTRET;
      779    15023        /* Update :USERS record for either good or bad password logons. */
      780    15024    2   DCL REASON UBIN;
      781    15025    2   DCL M$ES_USER DCB;
      782    15026    2   DCL 1 USERS_KEY STATIC ALIGNED,
      783    15027    2         2 COUNT UBIN BYTE UNAL,
      784    15028    2         2 UKEY,
      785    15029    2           3 ACCT CHAR(8) UNAL,
      786    15030    2           3 UNAME CHAR(12) UNAL,
      787    15031    2         2 * CHAR(21) UNAL;
      788    15032        %FPT_OPEN(FPTN=OPEN_USERS,
      789    15033                  DCB=M$ES_USER,
      790    15034                  ASN=FILE,
      791    15035                  ACS=DIRECT,
      792    15036                  FUN=UPDATE,
      793    15037                  SHARE=ALL,
      794    15038                  NAME=USERS_NAME,
      795    15039                  ACCT=USERS_ACCT);
      796    15148        %VLP_NAME(FPTN=USERS_NAME,NAME=':USERS');
      797    15175        %VLP_ACCT(FPTN=USERS_ACCT,ACCT=':SYS');
      798    15188        %FPT_READ(FPTN=READ_USERS,
      799    15189                  DCB=M$ES_USER,
      800    15190                  KEYS=YES,
      801    15191                  KEY=USERS_KEY,
      802    15192                  BUF=AS_USERS);
      803    15231        %FPT_WRITE(FPTN=WRITE_USERS,
      804    15232                  DCB=M$ES_USER,
      805    15233                  KEY=USERS_KEY,
      806    15234                  BUF=AS_USERS);
      807    15265        %FPT_ENQ(FPTN=ENQ_USERS,
      808    15266                  DCB=M$ES_USER,
      809    15267                  RNAME=USERS_KEY,
      810    15268                  SHARE=NONE);
      811    15286        %FPT_DEQ(FPTN=DEQ_USERS,
      812    15287                  DCB=M$ES_USER);
      813    15304        %FPT_TRUNC(FPTN=FPT_TRUNC,
      814    15305                  DCB=M$ES_USER);
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:27   
      815    15319        %FPT_TIME(FPTN=LOGON_TIME,
      816    15320                  DEST=UTS,
      817    15321                  SOURCE=CLOCK,
      818    15322                  TSTAMP=ES_LOGON_TIME);
      819    15341
      820    15342
      821    15343    2           IF NOT DCBADDR(DCBNUM(M$ES_USER))->F$DCB.FCD THEN
      822    15344    2               CALL M$OPEN(OPEN_USERS) ALTRET(ERR);
      823    15345    2           USERS_KEY.COUNT=8+NAME.C;
      824    15346    2           USERS_KEY.UKEY.ACCT=ACCT;
      825    15347    2           IF NAME.C ~= 0 THEN
      826    15348    2               USERS_KEY.UKEY.UNAME=NAME.T;
      827    15349    2           CALL M$ENQ(ENQ_USERS) ALTRET(ERR);
      828    15350    3           CALL M$READ(READ_USERS) WHENALTRETURN DO;
      829    15351    3               CALL M$DEQ(DEQ_USERS);
      830    15352    3               GOTO ERR;
      831    15353    3               END;
      832    15354                                                /*
      833    15355                                                  Only timesharing users should make it
      834    15356                                                  to this point.  All others should have
      835    15357                                                  transferred to ERR after the READ
      836    15358                                                  ALTRETURN.
      837    15359                                                */
      838    15360    2           IF REASON=%ES_LOG_ALL# THEN
      839    15361    2               CALL M$TIME(LOGON_TIME);
      840    15362    3             ELSE IF REASON=%ES_BAD_PW# THEN DO;
      841    15363    3                   AS_USERS.BAD_LOGON_CNT=AS_USERS.BAD_LOGON_CNT+1;
      842    15364    3                   AS_USERS.LOGINS.BAD_LOGON_CNT(%M_INT#-1)=
      843    15365    3                     AS_USERS.LOGINS.BAD_LOGON_CNT(%M_INT#-1)+1;
      844    15366    3                   END;
      845    15367    2           CALL M$WRITE(WRITE_USERS);
      846    15368    2           CALL M$TRUNC(FPT_TRUNC);
      847    15369    2           CALL M$DEQ(DEQ_USERS);
      848    15370    2           RETURN;
      849    15371    2   ERR:    ;
      850    15372    2           ALTRETURN;
      851    15373
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:28   
      852    15374    2   END UPD_USERS;
      853    15375    1   END KLH$HLP;
      854    15376        %EOD;

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:29   
--  Include file information  --

   AS_SUBS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   ES_TABLES_M.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   JC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   PC_SUBS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   ES_SUBS_E.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$HLP.

   Procedure KLH$HLP requires 1463 words for executable code.
   Procedure KLH$HLP requires 300 words of local(AUTO) storage.

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:30   

 Object Unit name= KLH$HLP                                    File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:47:46.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   DCB   even  none     0      0  M$NETCON
    3   DCB   even  none     0      0  M$CSCG
    4   Data  even  none   816   1460  KLH$HLP
    5  RoData even  UTS     72    110  KLH$HLP
    6   DCB   even  none     0      0  M$HLPF
    7   DCB   even  none     0      0  M$PROF
    8   DCB   even  none     0      0  M$ES_USER
    9   Proc  even  none  1463   2667  KLH$HLP
   10  RoData even  none    50     62  KLH$HLP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     9      0   yes            yes      Std        0  KLH$HLP

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    4    113  ES_LOGON_TIME
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:31   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
 yes     yes           Std       4 KLX$WRHLPSTA
 yes     yes           Std       1 KLH$SNDHSGN
         yes           Std       2 JMU$SETSEG
 yes     yes           Std       0 KLH$OPFILS
         yes           Std       1 KLH$HSGN
 yes     yes           Std       0 KLH$SGNRSP
 yes     yes           Std       3 KLX$CONV_NODE
 yes     yes           Std       9 KLH$SGSCAN
         yes           Std       3 KLX$8TO9
 yes     yes           Std       3 KLX$CONV_NODENAME
         yes           Std       1 ASZ$SCRAMBLE
         yes           Std       3 KLH$ERRMSG
         yes           Std       2 KLH$SGNTXT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$XL_UPPER_UR$                        M$HLP
     KL_FETBL                              KL_HLPFILS                            KL_RDBF
     KL_NODENAME                           KL_NODE                               KL_DESTNODE
     KL_AUTOFAIL                           KL_HLPKEY                             KL_PROKEY
     M$NETCON                              M$CSCG                                KL_PCD
     KL_HLPR                               KL_PROBUF                             M$HLPF
     M$PROF                                ES_LOGSYSACC                          KL_STATION
     B$TCB$                                KL_RDHLPR                             KL_RDPROR
     B$JIT$                                M$ES_USER                             B_VECTNIL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:32   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:33   


        1        1        /*M* KLH$HLP Host logon processor main program*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
        8        8        KLH$HLP: PROC;

      8  9 000000   000000 700200 xent  KLH$HLP      TSX0  ! X66_AUTO_0
         9 000001   000454 000000                    ZERO    300,0

        9        9        /*D* NAME:        KLH$HLP
       10       10             PURPOSE:     To log on all non-local devices to the host system
       11       11             CALL:        CALL KLH$HLP;
       12       12                          KL_RDBF - The logon message buffer just read
       13       13             OUTPUT:      A logged-on device
       14       14                          A logged-on timesharing user if this is a timesharing
       15       15                             logon
       16       16             DESCRIPTION: KLH$HLP takes the logon string portion of the logon message
       17       17                          parses it into ACCT,NAME,PW and PRO and using that
       18       18                          information, reads in the :HLP record for the device
       19       19                          (or user if a timesharing logon) and the :PRO record.
       20       20                          NOTE: In the case of an L6 system program logging on,
       21       21                          canned :HLP and :PRO records are used, no read is
       22       22                          performed.
       23       23                          KLH$SNDHSGN is called for any additional host logon
       24       24                          functions needed.
       25       25                          If any errors occur, a KL_SGNRSP message is built
       26       26                          and stuffed with a reason specifying failed logon.
       27       27                          This message is then sent back to the originator
       28       28                          if the logon.
       29       29
       30       30                          Security logging may be performed dependent upon
       31       31                          the CONTROL defined parameter, ES_LOGSYSACC. Also,
       32       32                          good logons and failed logons due to bad passwords
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:34   
       33       33                          will cause the :USERS record to be updated.
       34       34        */
       35       35        %INCLUDE CP_6;
       36      116        %INCLUDE EL_SUBS_C;
       37      200        %INCLUDE ES_SUBS_E;
       38      226        %INCLUDE B_SEGIDS_C;
       39      765        %INCLUDE B$TABLES_C;
       40      873        %B$XL_UPPER_UR;
       41      877        %INCLUDE PC_SUBS_C;
       42     1209        %INCLUDE AS_SUPER_C;
       43     1644        %INCLUDE F$DCB;
       44     1693        %INCLUDE F_ERRORS_C;
       45     1933        %INCLUDE JC_MACRO_C;
       46     2047        %INCLUDE JC_DATA_R;
       47     2085        %INCLUDE KC$CGBLK;
       48     2133        %INCLUDE KL_AFCN_C;
       49     2234        %INCLUDE KL_MACRO_C;
       50     5586        %INCLUDE KL_ERRORS_C;
       51     5628        %INCLUDE KL_DATA_R;
       52     6092        %INCLUDE KL_SUBS_C;
       53     6146        %INCLUDE KL_SUPER_C;
       54     9048        %INCLUDE KL_CONFIG_M;
       55     9810        %INCLUDE OC_MESSHD_C;
       56     9863        %B$TCB;
       57     9866        %B$ALT;
       58     9874    1   DCL M$NETCON DCB;
       59     9875    1   DCL M$CSCG DCB;
       60     9876    1   DCL CNFG_BUF (0:49) UBIN WORD STATIC INIT(0*0);
       61     9877    1   DCL CNFG$ PTR STATIC INIT(ADDR(CNFG_BUF));
       62     9878        %KL$LINCNFG (NAME=LINCNFG,LGNSIZ=100,STCLASS="BASED(CNFG$)");
       63    10036        %KL$CONFIG_KEY (NAME=CONFIG_KEY,STCLASS=STATIC);
       64    10083        %KL$DEFAULT_KEY (NAME=DEFAULT_KEY,STCLASS=STATIC);
       65    10102        %FPT_READ (FPTN=READ_NETCON,
       66    10103                  KEYS=YES,
       67    10104                   DCB=M$NETCON);
       68    10143        %KL_PCD (FPTN=KL_PCD,CG=1,STCLASS=SYMREF);
       69    10308        %KL_PCD (FPTN=KL$PCD_TS,CG=0,STCLASS="BASED(PCD$)");
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:35   
       70    10427        %KL_DREC (NAME=KL_HLPR,STCLASS=SYMREF,LAST=",");
       71    10540        %KC$CGID (FPTN=CGID,STCLASS=SYMREF,LVL=2,LAST=",");
       72    10566    1           2 INFO(0:31) UBIN WORD UNAL;
       73    10567        %KL_DREC(NAME=HLPR_RES,STCLASS="BASED",LAST=",");
       74    10680             %KL_RES_CL_DEV(NAME=RES,LVL=2);
       75    10740        %KL_PHDR (NAME=PROH,STCLASS="BASED ALIGNED");
       76    10781        %KL_PHDR (NAME=FRGPRO,STCLASS="CONSTANT ALIGNED",WID=0,LIN=0,DLP='0'B,DIC='0'B,TOP=
             10781            '0'B,LC='0'B,TYP=%KLTY_PROG#);
       77    10822        %KL_PHDR (NAME=DEFPRO,STCLASS=CONSTANT,WID=80,LIN=24,IN='1'B,OUT='1'B,
       78    10823                 TOP='0'B,A='0'B,BN='1'B,LC='1'B,LAST=";");
       79    10864       %KL_DREC (NAME=SLUGHLP,STCLASS=CONSTANT,TYP=%KLAT_CG#,NWI="SIZEW(SLUGHLP.CGID)",TNM=
             10864            ' *FEP*',LAST=",");
       80    10977        %KC$CGID (FPTN=CGID,STCLASS=CONSTANT,NAME='HLPCG',LVL=2);
       81    11003        %KL_PHDR (NAME=KL_PROBUF,STCLASS="SYMREF ALIGNED");
       82    11044        %KL_SGN (FPTN=KL$SGN,STCLASS="BASED(RDBF$)",LGNSIZ="KL$SGN.LOGON.LGNSIZ");
       83    11137        %KL_HSGN (FPTN=KL$HSGN,CG=1,STCLASS="BASED(RDBF$)");
       84    11323        %KL_RQSPROFILE (FPTN=KL$RQSPROFILE,STCLASS="BASED(RDBF$)");
       85    11381    1   DCL M$HLPF DCB;
       86    11382    1   DCL M$PROF DCB;
       87    11383    1   DCL ACCT CHAR(8);
       88    11384    1   DCL 1 ADTW REDEF ACCT,
       89    11385    1         2 D CHAR(4),
       90    11386    1         2 TWSN CHAR(4);
       91    11387    1   DCL 1 ACCR REDEF ACCT,                  /* TO TEST FOR "?"                    */
       92    11388    1         2 C1 CHAR(1),
       93    11389    1         2 * CHAR(7);
       94    11390    1   DCL 1 NAME ALIGNED,
       95    11391    1         2 C UBIN BYTE UNAL,
       96    11392    1         2 T CHAR(12);
       97    11393    1   DCL PW CHAR(8);
       98    11394    1   DCL SAVE_PW CHAR(8);
       99    11395    1   DCL 1 PRO ALIGNED,
      100    11396    1         2 C UBIN BYTE UNAL,
      101    11397    1         2 T CHAR(11) UNAL;
      102    11398    1   DCL HOST CHAR(8);
      103    11399    1   DCL 1 NMID (0:3),
      104    11400    1         2 * BIT(1) UNAL,
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:36   
      105    11401    1         2 BYT UBIN(8) UNAL;
      106    11402    1   DCL FEX UBIN;
      107    11403    1   DCL PSIZ UBIN WORD;
      108    11404    1   DCL HLPER REDEF PSIZ UBIN WORD;
      109    11405    1   DCL SNDPRO BIT(1);
      110    11406    1   DCL NODETYPE UBIN;
      111    11407    1   DCL NOSETUP BIT (1) ALIGNED;
      112    11408    1   DCL NOHEADER BIT (1) ALIGNED;
      113    11409    1   DCL PCD$ PTR;
      114    11410    1   DCL P$ PTR;
      115    11411    1   DCL ES_LOGSYSACC UBIN WORD SYMREF;      /* Symdefed in ES_CNTRL_D             */
      116    11412    1   DCL ES$ PTR STATIC INIT(ADDR(ES_LOGSYSACC));
      117    11413    1   DCL LOGSYSACC UBIN WORD BASED;
      118    11414    1   DCL ES_LOGON_TIME UBIN WORD ALIGNED STATIC SYMDEF INIT(0);
      119    11415        %AS_USERS(STR_NAME=AS_USERS,STCLASS=STATIC);
      120    11593    1   DCL KL_STATION CHAR(8) SYMREF;
      121    11594    1   DCL RDBF$ PTR;
      122    11595    1   DCL 1 ACHAR BASED(P$) CALIGNED,
      123    11596    1         2 CNT UBIN BYTE UNAL,
      124    11597    1         2 TXT CHAR (ACHAR.CNT);
      125    11598    1   DCL B$TCB$ PTR SYMREF;
      126    11599        %FPT_READ (FPTN=KL_RDHLPR,STCLASS=SYMREF);
      127    11638        %FPT_READ (FPTN=KL_RDPROR,STCLASS=SYMREF);
      128    11677        %FPT_WRITE (FPTN=FPT_PROWT,STCLASS=STATIC,DCB=M$HLP,STATION=PROWT_STA);
      129    11708        %FPT_WRITE (FPTN=WRTAUTOFAIL,DCB=M$CSCG,BUF=KL_AUTOFAIL);
      130    11739        %VLP_STATION (FPTN=PROWT_STA,STCLASS=STATIC);
      131    11766    1   DCL ASZ$SCRAMBLE ENTRY(1);
      132    11767    1   DCL KLH$HSGN ENTRY(1);
      133    11768    1   DCL KLH$ERRMSG ENTRY(3);
      134    11769    1   DCL KLH$OPFILS ENTRY ALTRET;
      135    11770    1   DCL KLH$SGSCAN ENTRY(9) ALTRET;
      136    11771    1   DCL KLH$SGNRSP ENTRY ALTRET;
      137    11772    1   DCL KLH$SGNTXT ENTRY(2);
      138    11773    1   DCL KLH$NETTRM ENTRY(1) ALTRET;
      139    11774    1   DCL KLH$NETLNK ENTRY(1) ALTRET;
      140    11775    1   DCL KLX$8TO9 ENTRY(3);
      141    11776    1   DCL KLX$CONV_NODE ENTRY(3) ALTRET;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:37   
      142    11777    1   DCL KLX$CONV_NODENAME ENTRY(3) ALTRET;
      143    11778    1   DCL KLH$SNDHSGN ENTRY(1) ALTRET;
      144    11779    1   DCL KLX$WRHLPSTA ENTRY(4) ALTRET;
      145    11780    1   DCL JMU$SETSEG ENTRY(2);
      146    11781        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:38   
      147    11782                                                /* Fix up ES$ for security logging    */
      148    11783    1           CALL JMU$SETSEG(ES$,%SPCL1SID);

  11783  9 000002   000001 630400 10                 EPPR0   1
         9 000003   000020 631400 xsym               EPPR1   B_VECTNIL+16
         9 000004   000000 701000 xent               TSX1    JMU$SETSEG
         9 000005   000000 011000                    NOP     0

      149    11784    1           ES_LOGON_TIME=0;

  11784  9 000006   000113 450000 4                  STZ     ES_LOGON_TIME

      150    11785    1           RDBF$=ADDR(KL_RDBF);

  11785  9 000007   000003 236000 10                 LDQ     3
         9 000010   200033 756100                    STQ     RDBF$,,AUTO

      151    11786    2           DO CASE(KL_RDBF.CODE);

  11786  9 000011   000000 236000 xsym               LDQ     KL_RDBF
         9 000012   000033 772000                    QRL     27
         9 000013   000107 116007                    CMPQ    71,DL
         9 000014   000016 602006 9                  TNC     s:11786+5,QL
         9 000015   000246 710000 9                  TRA     s:11827
         9 000016   000246 710000 9                  TRA     s:11827
         9 000017   000246 710000 9                  TRA     s:11827
         9 000020   000237 710000 9                  TRA     s:11825
         9 000021   000246 710000 9                  TRA     s:11827
         9 000022   000246 710000 9                  TRA     s:11827
         9 000023   000246 710000 9                  TRA     s:11827
         9 000024   000246 710000 9                  TRA     s:11827
         9 000025   000246 710000 9                  TRA     s:11827
         9 000026   000246 710000 9                  TRA     s:11827
         9 000027   000246 710000 9                  TRA     s:11827
         9 000030   000246 710000 9                  TRA     s:11827
         9 000031   000246 710000 9                  TRA     s:11827
         9 000032   000246 710000 9                  TRA     s:11827
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:39   
         9 000033   000246 710000 9                  TRA     s:11827
         9 000034   000246 710000 9                  TRA     s:11827
         9 000035   000246 710000 9                  TRA     s:11827
         9 000036   000246 710000 9                  TRA     s:11827
         9 000037   000246 710000 9                  TRA     s:11827
         9 000040   000246 710000 9                  TRA     s:11827
         9 000041   000246 710000 9                  TRA     s:11827
         9 000042   000246 710000 9                  TRA     s:11827
         9 000043   000246 710000 9                  TRA     s:11827
         9 000044   000246 710000 9                  TRA     s:11827
         9 000045   000141 710000 9                  TRA     s:11794
         9 000046   000246 710000 9                  TRA     s:11827
         9 000047   000246 710000 9                  TRA     s:11827
         9 000050   000246 710000 9                  TRA     s:11827
         9 000051   000246 710000 9                  TRA     s:11827
         9 000052   000246 710000 9                  TRA     s:11827
         9 000053   000246 710000 9                  TRA     s:11827
         9 000054   000246 710000 9                  TRA     s:11827
         9 000055   000246 710000 9                  TRA     s:11827
         9 000056   000246 710000 9                  TRA     s:11827
         9 000057   000246 710000 9                  TRA     s:11827
         9 000060   000246 710000 9                  TRA     s:11827
         9 000061   000246 710000 9                  TRA     s:11827
         9 000062   000246 710000 9                  TRA     s:11827
         9 000063   000246 710000 9                  TRA     s:11827
         9 000064   000246 710000 9                  TRA     s:11827
         9 000065   000246 710000 9                  TRA     s:11827
         9 000066   000246 710000 9                  TRA     s:11827
         9 000067   000246 710000 9                  TRA     s:11827
         9 000070   000246 710000 9                  TRA     s:11827
         9 000071   000246 710000 9                  TRA     s:11827
         9 000072   000246 710000 9                  TRA     s:11827
         9 000073   000246 710000 9                  TRA     s:11827
         9 000074   000246 710000 9                  TRA     s:11827
         9 000075   000246 710000 9                  TRA     s:11827
         9 000076   000246 710000 9                  TRA     s:11827
         9 000077   000246 710000 9                  TRA     s:11827
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:40   
         9 000100   000246 710000 9                  TRA     s:11827
         9 000101   000246 710000 9                  TRA     s:11827
         9 000102   000246 710000 9                  TRA     s:11827
         9 000103   000246 710000 9                  TRA     s:11827
         9 000104   000246 710000 9                  TRA     s:11827
         9 000105   000246 710000 9                  TRA     s:11827
         9 000106   000246 710000 9                  TRA     s:11827
         9 000107   000246 710000 9                  TRA     s:11827
         9 000110   000246 710000 9                  TRA     s:11827
         9 000111   000246 710000 9                  TRA     s:11827
         9 000112   000246 710000 9                  TRA     s:11827
         9 000113   000246 710000 9                  TRA     s:11827
         9 000114   000246 710000 9                  TRA     s:11827
         9 000115   000246 710000 9                  TRA     s:11827
         9 000116   000135 710000 9                  TRA     s:11791
         9 000117   000246 710000 9                  TRA     s:11827
         9 000120   000246 710000 9                  TRA     s:11827
         9 000121   000246 710000 9                  TRA     s:11827
         9 000122   000246 710000 9                  TRA     s:11827
         9 000123   000246 710000 9                  TRA     s:11827
         9 000124   000125 710000 9                  TRA     s:11788

      152    11787    2             CASE(IGA_HSGN);

      153    11788    2               CALL KLH$HSGN(KL$HSGN.PCD);

  11788  9 000125   200033 236100                    LDQ     RDBF$,,AUTO
         9 000126   000001 036003                    ADLQ    1,DU
         9 000127   200442 756100                    STQ     SIZ+194,,AUTO
         9 000130   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000131   000017 631400 xsym               EPPR1   B_VECTNIL+15
         9 000132   000000 701000 xent               TSX1    KLH$HSGN
         9 000133   000000 011000                    NOP     0

      154    11789    2               RETURN;

  11789  9 000134   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:41   

      155    11790    2             CASE(IGA_SGNRSP);

      156    11791    2               CALL KLH$SGNRSP;

  11791  9 000135   000002 631400 xsym               EPPR1   B_VECTNIL+2
         9 000136   000000 701000 xent               TSX1    KLH$SGNRSP
         9 000137   000000 011000                    NOP     0

      157    11792    2               RETURN;

  11792  9 000140   000000 702200 xent               TSX2  ! X66_ARET

      158    11793    2             CASE(IGA_RQSPRO);

      159    11794    2               NMID = KL$RQSPROFILE.NMID;

  11794  9 000141   200033 470500                    LDP0    RDBF$,,AUTO
         9 000142   000005 236100                    LDQ     5,,PR0
         9 000143   200022 756100                    STQ     NMID,,AUTO

      160    11795    3               IF KL$RQSPROFILE.HANDLER ~= ' ' THEN DO; /* Get default record    */

  11795  9 000144   040000 106500                    CMPC    fill='040'O
         9 000145   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         9 000146   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 000147   000166 600000 9                  TZE     s:11802

      161    11796    3                   CALL CHARBIN (FEX,SUBSTR(KL_STATION,4,4));

  11796  9 000150   000100 305400                    DTB
         9 000151   000001 030004 xsym               NDSC9   KL_STATION+1             cn=0,s=nosgn,sf=0,n=4
         9 000152   200442 000010                    NDSC9   SIZ+194,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         9 000153   200443 235100                    LDA     SIZ+195,,AUTO
         9 000154   200023 755100                    STA     FEX,,AUTO

      162    11797    3                   DEFAULT_KEY.NODE = FEX;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:42   

  11797  9 000155   200023 236100                    LDQ     FEX,,AUTO
         9 000156   000011 736000                    QLS     9
         9 000157   000070 552010 4                  STBQ    DEFAULT_KEY,'10'O

      163    11798    3                   DEFAULT_KEY.HNDLR = KL$RQSPROFILE.HANDLER;

  11798  9 000160   040000 100500                    MLR     fill='040'O
         9 000161   000006 000010                    ADSC9   6,,PR0                   cn=0,n=8
         9 000162   000070 600010 4                  ADSC9   DEFAULT_KEY              cn=3,n=8

      164    11799    3                   READ_NETCON.KEY_ = VECTOR(DEFAULT_KEY);

  11799  9 000163   000004 237000 10                 LDAQ    4
         9 000164   000076 757000 4                  STAQ    READ_NETCON+2

      165    11800    3                   END;                    /* IF                                 */

  11800  9 000165   000213 710000 9                  TRA     s:11813

      166    11801    3                 ELSE DO;                  /* Get config record                  */

      167    11802    3                   CALL CHARBIN(FEX,SUBSTR(KL_STATION,4,4));

  11802  9 000166   000100 305400                    DTB
         9 000167   000001 030004 xsym               NDSC9   KL_STATION+1             cn=0,s=nosgn,sf=0,n=4
         9 000170   200442 000010                    NDSC9   SIZ+194,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         9 000171   200443 235100                    LDA     SIZ+195,,AUTO
         9 000172   200023 755100                    STA     FEX,,AUTO

      168    11803    3                   CONFIG_KEY.NODE=FEX;

  11803  9 000173   200023 236100                    LDQ     FEX,,AUTO
         9 000174   000011 736000                    QLS     9
         9 000175   000063 552010 4                  STBQ    CONFIG_KEY,'10'O

      169    11804    3                   CONFIG_KEY.TERMID = KL$RQSPROFILE.TERMID;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:43   

  11804  9 000176   000000 100500                    MLR     fill='000'O
         9 000177   000001 000020                    ADSC9   1,,PR0                   cn=0,n=16
         9 000200   000063 600020 4                  ADSC9   CONFIG_KEY               cn=3,n=16

      170    11805    3                   CONFIG_KEY.TERMID.TTYP = 0;

  11805  9 000201   000000 236003                    LDQ     0,DU
         9 000202   000063 552004 4                  STBQ    CONFIG_KEY,'04'O

      171    11806    3                   IF CONFIG_KEY.TERMID.TERM.TERM_NAME ~= ' '

  11806  9 000203   040000 106400                    CMPC    fill='040'O
         9 000204   000065 600010 4                  ADSC9   CONFIG_KEY+2             cn=3,n=8
         9 000205   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 000206   000211 600000 9                  TZE     s:11811

      172    11807    4                     THEN DO;

      173    11808    4                       CONFIG_KEY.TERMID.TERM.CHANNEL = '0'B;

  11808  9 000207   000064 552030 4                  STBQ    CONFIG_KEY+1,'30'O

      174    11809    4                       CONFIG_KEY.NODE = 0;

  11809  9 000210   000063 552010 4                  STBQ    CONFIG_KEY,'10'O

      175    11810    4                       END;

      176    11811    3                   READ_NETCON.KEY_ = VECTOR(CONFIG_KEY);

  11811  9 000211   000006 237000 10                 LDAQ    6
         9 000212   000076 757000 4                  STAQ    READ_NETCON+2

      177    11812    3                   END;                    /* ELSE                               */

      178    11813    2               PSIZ = 1;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:44   

  11813  9 000213   000001 235007                    LDA     1,DL
         9 000214   200024 755100                    STA     PSIZ,,AUTO

      179    11814    2               READ_NETCON.BUF_ = VECTOR(CNFG_BUF);

  11814  9 000215   000010 237000 10                 LDAQ    8
         9 000216   000100 757000 4                  STAQ    READ_NETCON+4

      180    11815    2               CALL M$READ(READ_NETCON) ALTRET(RQSPROERR);

  11815  9 000217   000074 630400 4                  EPPR0   READ_NETCON
         9 000220   440000 713400                    CLIMB   alt,read
         9 000221   401400 401760                    pmme    nvectors=4
         9 000222   000232 702000 9                  TSX2    RQSPROERR

      181    11816    2               PRO = LINCNFG.PRO;

  11816  9 000223   000062 470400 4                  LDP0    CNFG$
         9 000224   000100 100500                    MLR     fill='000'O
         9 000225   000007 400014                    ADSC9   7,,PR0                   cn=2,n=12
         9 000226   200015 000014                    ADSC9   PRO,,AUTO                cn=0,n=12

      182    11817    2               CALL GETPRO

  11817  9 000227   001634 701000 9                  TSX1    GETPRO
         9 000230   000232 702000 9                  TSX2    RQSPROERR
         9 000231   000234 710000 9                  TRA     s:11822

      183    11818    3                 WHENALTRETURN DO;

  11811  9 000232                       RQSPROERR    null
      184    11819    3   RQSPROERR:      ;
      185    11820    3                   PSIZ = 1;

  11820  9 000232   000001 235007                    LDA     1,DL
         9 000233   200024 755100                    STA     PSIZ,,AUTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:45   

      186    11821    3                   END;

      187    11822    2               CALL SETPRO;

  11822  9 000234   001732 701000 9                  TSX1    SETPRO
         9 000235   000000 011000                    NOP     0

      188    11823    2               RETURN;

  11823  9 000236   000000 702200 xent               TSX2  ! X66_ARET

      189    11824    2             CASE(IGA_SGN);

      190    11825    2               NMID = KL$SGN.NMID;         /* The main body of this procedure    */

  11825  9 000237   200033 470500                    LDP0    RDBF$,,AUTO
         9 000240   000005 235100                    LDA     5,,PR0
         9 000241   000006 236100                    LDQ     6,,PR0
         9 000242   000011 773000                    LRL     9
         9 000243   000027 376000 xsym               ANQ     B_VECTNIL+23
         9 000244   200022 756100                    STQ     NMID,,AUTO
         9 000245   000250 710000 9                  TRA     s:11829

      191    11826    2             CASE(ELSE);

      192    11827    2               CALL M$XXX;                 /* Woops!!!                           */

  11827  9 000246   000003 713400                    CLIMB   3
         9 000247   000000 401760                    pmme    nvectors=0

      193    11828    2             END;

      194    11829    1           PSIZ=0;

  11829  9 000250   200024 450100                    STZ     PSIZ,,AUTO

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:46   
      195    11830    1           PCD$=ADDR(KL_PCD);

  11830  9 000251   000012 236000 10                 LDQ     10
         9 000252   200031 756100                    STQ     PCD$,,AUTO

      196    11831    1           IF KL_HLPFILS<2 AND KL$SGN.TERMINAL_ID.TTYP~=%KLTY_PROG#

  11831  9 000253   000000 235000 xsym               LDA     KL_HLPFILS
         9 000254   000002 115007                    CMPA    2,DL
         9 000255   000272 603000 9                  TRC     LOGON
         9 000256   200033 470500                    LDP0    RDBF$,,AUTO
         9 000257   000001 236100                    LDQ     1,,PR0
         9 000260   777000 316003                    CANQ    -512,DU
         9 000261   000272 600000 9                  TZE     LOGON

      197    11832    2             THEN DO;

      198    11833    2               CALL KLH$OPFILS ALTRET (LOGON);

  11833  9 000262   000002 631400 xsym               EPPR1   B_VECTNIL+2
         9 000263   000000 701000 xent               TSX1    KLH$OPFILS
         9 000264   000272 702000 9                  TSX2    LOGON

      199    11834    2               CALL SNDRJ (%E$NFIL);

  11834  9 000265   000014 236000 10                 LDQ     12
         9 000266   200035 756100                    STQ     RDBF$+2,,AUTO
         9 000267   002171 701000 9                  TSX1    SNDRJ
         9 000270   000000 011000                    NOP     0

      200    11835    2               RETURN;

  11835  9 000271   000000 702200 xent               TSX2  ! X66_ARET

  11831  9 000272                       LOGON        null
      201    11836    2               END;
      202    11837    1   LOGON:  ;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:47   
      203    11838    1           IF KL$SGN.AUTOLGN

  11838  9 000272   200033 470500                    LDP0    RDBF$,,AUTO
         9 000273   000005 236100                    LDQ     5,,PR0
         9 000274   200000 316003                    CANQ    65536,DU
         9 000275   000300 601000 9                  TNZ     s:11841
         9 000276   100000 316003                    CANQ    32768,DU
         9 000277   000362 600000 9                  TZE     s:11867

      204    11839    1             OR KL$SGN.PROFILE
      205    11840    2             THEN DO;

      206    11841    2               HLPER = %E$ILGL;

  11841  9 000300   002270 235007                    LDA     1208,DL
         9 000301   200024 755100                    STA     PSIZ,,AUTO

      207    11842    2               CALL CHARBIN(FEX,SUBSTR(KL_STATION,4,4));

  11842  9 000302   000100 305400                    DTB
         9 000303   000001 030004 xsym               NDSC9   KL_STATION+1             cn=0,s=nosgn,sf=0,n=4
         9 000304   200442 000010                    NDSC9   SIZ+194,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         9 000305   200443 236100                    LDQ     SIZ+195,,AUTO
         9 000306   200023 756100                    STQ     FEX,,AUTO

      208    11843    2               CONFIG_KEY.NODE= FEX;

  11843  9 000307   000011 736000                    QLS     9
         9 000310   000063 552010 4                  STBQ    CONFIG_KEY,'10'O

      209    11844    2               CONFIG_KEY.TERMID = KL$SGN.TERMINAL_ID;

  11844  9 000311   000000 100500                    MLR     fill='000'O
         9 000312   000001 000020                    ADSC9   1,,PR0                   cn=0,n=16
         9 000313   000063 600020 4                  ADSC9   CONFIG_KEY               cn=3,n=16

      210    11845    2               IF CONFIG_KEY.TERMID.TERM.TERM_NAME ~= ' '
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:48   

  11845  9 000314   040000 106400                    CMPC    fill='040'O
         9 000315   000065 600010 4                  ADSC9   CONFIG_KEY+2             cn=3,n=8
         9 000316   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 000317   000323 600000 9                  TZE     s:11850

      211    11846    3                 THEN DO;

      212    11847    3                   CONFIG_KEY.TERMID.TERM.CHANNEL = '0'B;

  11847  9 000320   000000 236003                    LDQ     0,DU
         9 000321   000064 552030 4                  STBQ    CONFIG_KEY+1,'30'O

      213    11848    3                   CONFIG_KEY.NODE = 0;

  11848  9 000322   000063 552010 4                  STBQ    CONFIG_KEY,'10'O

      214    11849    3                   END;

      215    11850    2               CONFIG_KEY.TERMID.TTYP = 0;

  11850  9 000323   000000 236003                    LDQ     0,DU
         9 000324   000063 552004 4                  STBQ    CONFIG_KEY,'04'O

      216    11851    2               READ_NETCON.BUF_ = VECTOR(CNFG_BUF);

  11851  9 000325   000010 237000 10                 LDAQ    8
         9 000326   000100 757000 4                  STAQ    READ_NETCON+4

      217    11852    2               READ_NETCON.KEY_ = VECTOR(CONFIG_KEY);

  11852  9 000327   000006 237000 10                 LDAQ    6
         9 000330   000076 757000 4                  STAQ    READ_NETCON+2

      218    11853    2               CALL M$READ(READ_NETCON)

  11853  9 000331   000074 630400 4                  EPPR0   READ_NETCON
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:49   
         9 000332   440000 713400                    CLIMB   alt,read
         9 000333   401400 401760                    pmme    nvectors=4
         9 000334   000336 702000 9                  TSX2    s:11855
         9 000335   000345 710000 9                  TRA     s:11861

      219    11854    3                 WHENALTRETURN DO;

      220    11855    3                   IF KL$SGN.PROFILE

  11855  9 000336   200033 470500                    LDP0    RDBF$,,AUTO
         9 000337   000005 236100                    LDQ     5,,PR0
         9 000340   100000 316003                    CANQ    32768,DU
         9 000341   001433 600000 9                  TZE     ILGL

      221    11856    3                     THEN
      222    11857    3                       KL$SGN.PROFILE = '0'B;

  11857  9 000342   000015 236000 10                 LDQ     13
         9 000343   000005 356100                    ANSQ    5,,PR0
         9 000344   000345 710000 9                  TRA     s:11861

      223    11858    3                     ELSE
      224    11859    3                       GOTO ILGL;
      225    11860    3                   END;
      226    11861    2               IF KL$SGN.AUTOLGN

  11861  9 000345   200033 470500                    LDP0    RDBF$,,AUTO
         9 000346   000005 236100                    LDQ     5,,PR0
         9 000347   200000 316003                    CANQ    65536,DU
         9 000350   000362 600000 9                  TZE     s:11867

      227    11862    3                 THEN DO;

      228    11863    3                   KL$SGN.LOGON.LGNSIZ = LINCNFG.LGN.LGNSIZE;

  11863  9 000351   000062 471400 4                  LDP1    CNFG$
         9 000352   100012 236100                    LDQ     10,,PR1
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:50   
         9 000353   000011 736000                    QLS     9
         9 000354   000007 552120                    STBQ    7,'20'O,PR0

      229    11864    3                   KL$SGN.LOGON.LGNTXT = LINCNFG.LGN.LGNSTRING;

  11864  9 000355   000007 220100                    LDX0    7,,PR0
         9 000356   000777 360003                    ANX0    511,DU
         9 000357   040140 100500                    MLR     fill='040'O
         9 000360   100012 600144                    ADSC9   10,,PR1                  cn=3,n=100
         9 000361   000007 400010                    ADSC9   7,,PR0                   cn=2,n=*X0

      230    11865    3                   END;

      231    11866    2               END;                        /* IF KL$SGN.AUTOLGN                  */

      232    11867    2           CALL KLH$SGSCAN (KL$SGN.LOGON,ACCT,NAME,PW,PRO,HLPER,HOST,NOSETUP,NOHEADER)
             11867                    WHENALTRETURN DO;

  11867  9 000362   200030 631500                    EPPR1   NOHEADER,,AUTO
         9 000363   200452 451500                    STP1    SIZ+202,,AUTO
         9 000364   200027 633500                    EPPR3   NOSETUP,,AUTO
         9 000365   200451 453500                    STP3    SIZ+201,,AUTO
         9 000366   200020 634500                    EPPR4   HOST,,AUTO
         9 000367   200450 454500                    STP4    SIZ+200,,AUTO
         9 000370   200024 635500                    EPPR5   PSIZ,,AUTO
         9 000371   200447 455500                    STP5    SIZ+199,,AUTO
         9 000372   200015 636500                    EPPR6   PRO,,AUTO
         9 000373   200446 456500                    STP6    SIZ+198,,AUTO
         9 000374   200011 637500                    EPPR7   PW,,AUTO
         9 000375   200445 457500                    STP7    SIZ+197,,AUTO
         9 000376   200005 630500                    EPPR0   NAME,,AUTO
         9 000377   200444 450500                    STP0    SIZ+196,,AUTO
         9 000400   200003 630500                    EPPR0   ACCT,,AUTO
         9 000401   200443 450500                    STP0    SIZ+195,,AUTO
         9 000402   200033 236100                    LDQ     RDBF$,,AUTO
         9 000403   000017 036000 10                 ADLQ    15
         9 000404   200442 756100                    STQ     SIZ+194,,AUTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:51   
         9 000405   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000406   000016 631400 10                 EPPR1   14
         9 000407   000000 701000 xent               TSX1    KLH$SGSCAN
         9 000410   000412 702000 9                  TSX2    s:11868
         9 000411   000423 710000 9                  TRA     s:11872

      233    11868    2               IF ES$->LOGSYSACC >= %PC_ES_FAILED# THEN

  11868  9 000412   000112 470400 4                  LDP0    ES$
         9 000413   000000 235100                    LDA     0,,PR0
         9 000414   000003 115007                    CMPA    3,DL
         9 000415   000422 602000 9                  TNC     s:11870

      234    11869    2                   CALL SECLOG(%ES_JUNK_LOGON#);

  11869  9 000416   000020 236000 10                 LDQ     16
         9 000417   200037 756100                    STQ     SIZ+1,,AUTO
         9 000420   002241 701000 9                  TSX1    SECLOG
         9 000421   000000 011000                    NOP     0

      235    11870    2               GOTO ILGL;

  11870  9 000422   001433 710000 9                  TRA     ILGL

      236    11871    2               END;
      237    11872    1           IF HOST = ' '

  11872  9 000423   200020 237100                    LDAQ    HOST,,AUTO
         9 000424   000022 117000 10                 CMPAQ   18
         9 000425   000431 601000 9                  TNZ     s:11877

      238    11873    1             THEN
      239    11874    1               HOST = KL_NODENAME;

  11874  9 000426   040100 100400                    MLR     fill='040'O
         9 000427   000000 000010 xsym               ADSC9   KL_NODENAME              cn=0,n=8
         9 000430   200020 000010                    ADSC9   HOST,,AUTO               cn=0,n=8
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:52   

      240    11875
      241    11876        /* If this logon is not for this node send it back to NA */
      242    11877    1           IF KL_NODENAME ~= HOST

  11877  9 000431   040100 106400                    CMPC    fill='040'O
         9 000432   000000 000010 xsym               ADSC9   KL_NODENAME              cn=0,n=8
         9 000433   200020 000010                    ADSC9   HOST,,AUTO               cn=0,n=8
         9 000434   000524 600000 9                  TZE     s:11899

      243    11878    2             THEN DO;

      244    11879    2               CALL KLX$CONV_NODENAME(HOST,KL_DESTNODE,NODETYPE)

  11879  9 000435   200026 630500                    EPPR0   NODETYPE,,AUTO
         9 000436   200444 450500                    STP0    SIZ+196,,AUTO
         9 000437   000024 236000 10                 LDQ     20
         9 000440   200443 756100                    STQ     SIZ+195,,AUTO
         9 000441   200020 631500                    EPPR1   HOST,,AUTO
         9 000442   200442 451500                    STP1    SIZ+194,,AUTO
         9 000443   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000444   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 000445   000000 701000 xent               TSX1    KLX$CONV_NODENAME
         9 000446   000450 702000 9                  TSX2    s:11881
         9 000447   000453 710000 9                  TRA     s:11884

      245    11880    3                 WHENALTRETURN DO;

      246    11881    3                   HLPER = %E$UDHOST;

  11881  9 000450   002304 235007                    LDA     1220,DL
         9 000451   200024 755100                    STA     PSIZ,,AUTO

      247    11882    3                   GOTO ILGL;

  11882  9 000452   001433 710000 9                  TRA     ILGL

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:53   
      248    11883    3                   END;
      249    11884    2               IF NODETYPE ~= %KL_NODETYPE_HOST

  11884  9 000453   200026 235100                    LDA     NODETYPE,,AUTO
         9 000454   000001 115007                    CMPA    1,DL
         9 000455   000461 600000 9                  TZE     s:11889

      250    11885    3                 THEN DO;

      251    11886    3                   HLPER = %E$UDHOST;

  11886  9 000456   002304 236007                    LDQ     1220,DL
         9 000457   200024 756100                    STQ     PSIZ,,AUTO

      252    11887    3                   GOTO ILGL;

  11887  9 000460   001433 710000 9                  TRA     ILGL

      253    11888    3                   END;
      254    11889    2               IF KL_FETBL.QOS(KL_DESTNODE) = 255 /* Cannot talk to this host    */

  11889  9 000461   000000 720000 xsym               LXL0    KL_DESTNODE
         9 000462   000000 236010 xsym               LDQ     KL_FETBL,X0
         9 000463   000777 376003                    ANQ     511,DU
         9 000464   000377 116003                    CMPQ    255,DU
         9 000465   000471 601000 9                  TNZ     s:11894

      255    11890    3                 THEN DO;

      256    11891    3                   HLPER = %E$NOHOST;

  11891  9 000466   002303 235007                    LDA     1219,DL
         9 000467   200024 755100                    STA     PSIZ,,AUTO

      257    11892    3                   GOTO ILGL;

  11892  9 000470   001433 710000 9                  TRA     ILGL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:54   

      258    11893    3                   END;
      259    11894    2               KL$SGN.NODE = KL_DESTNODE;

  11894  9 000471   200033 470500                    LDP0    RDBF$,,AUTO
         9 000472   000000 236000 xsym               LDQ     KL_DESTNODE
         9 000473   000022 736000                    QLS     18
         9 000474   000000 552120                    STBQ    0,'20'O,PR0

      260    11895    2               KL$SGN.AUTOLGN = '0'B;

  11895  9 000475   000025 236000 10                 LDQ     21
         9 000476   000005 356100                    ANSQ    5,,PR0

      261    11896    2               CALL KLX$WRHLPSTA(KL$SGN,SIZEC(KL$SGN),KL_STATION);

  11896  9 000477   000007 220100                    LDX0    7,,PR0
         9 000500   000777 360003                    ANX0    511,DU
         9 000501   000036 621010                    EAX1    30,X0
         9 000502   000000 636011                    EAQ     0,X1
         9 000503   000022 772000                    QRL     18
         9 000504   000011 402007                    MPY     9,DL
         9 000505   000043 036007                    ADLQ    35,DL
         9 000506   000044 506007                    DIV     36,DL
         9 000507   000002 736000                    QLS     2
         9 000510   200442 756100                    STQ     SIZ+194,,AUTO
         9 000511   000026 236000 10                 LDQ     22
         9 000512   200445 756100                    STQ     SIZ+197,,AUTO
         9 000513   200442 631500                    EPPR1   SIZ+194,,AUTO
         9 000514   200444 451500                    STP1    SIZ+196,,AUTO
         9 000515   200033 236100                    LDQ     RDBF$,,AUTO
         9 000516   200443 756100                    STQ     SIZ+195,,AUTO
         9 000517   200443 630500                    EPPR0   SIZ+195,,AUTO
         9 000520   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 000521   000000 701000 xent               TSX1    KLX$WRHLPSTA
         9 000522   000000 011000                    NOP     0

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:55   
      262    11897    2               RETURN;

  11897  9 000523   000000 702200 xent               TSX2  ! X66_ARET

      263    11898    2               END;
      264    11899    1           KL_DESTNODE = KL_NODE;          /* This one is for me                 */

  11899  9 000524   000000 235000 xsym               LDA     KL_NODE
         9 000525   000000 755000 xsym               STA     KL_DESTNODE

      265    11900    1           KL_PCD='0'B;

  11900  9 000526   000000 100400                    MLR     fill='000'O
         9 000527   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         9 000530   000000 000420 xsym               ADSC9   KL_PCD                   cn=0,n=272

      266    11901    1           KL_PCD.ADDD.FEX=KL$SGN.NODE;

  11901  9 000531   200033 470500                    LDP0    RDBF$,,AUTO
         9 000532   000000 236100                    LDQ     0,,PR0
         9 000533   000022 772000                    QRL     18
         9 000534   000000 552004 xsym               STBQ    KL_PCD,'04'O

      267    11902    1           FEX = KL$SGN.NODE;

  11902  9 000535   000000 236100                    LDQ     0,,PR0
         9 000536   000022 772000                    QRL     18
         9 000537   000777 376007                    ANQ     511,DL
         9 000540   200023 756100                    STQ     FEX,,AUTO

      268    11903    1           CALL KLX$CONV_NODE(KL_PCD.ADDD.FEPNAME,FEX,NODETYPE);

  11903  9 000541   200026 631500                    EPPR1   NODETYPE,,AUTO
         9 000542   200444 451500                    STP1    SIZ+196,,AUTO
         9 000543   200023 633500                    EPPR3   FEX,,AUTO
         9 000544   200443 453500                    STP3    SIZ+195,,AUTO
         9 000545   000027 236000 10                 LDQ     23
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:56   
         9 000546   200442 756100                    STQ     SIZ+194,,AUTO
         9 000547   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000550   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 000551   000000 701000 xent               TSX1    KLX$CONV_NODE
         9 000552   000000 011000                    NOP     0

      269    11904    1           KL_PCD.ADDD.NMID=KL$SGN.NMID;

  11904  9 000553   200033 470500                    LDP0    RDBF$,,AUTO
         9 000554   000000 100500                    MLR     fill='000'O
         9 000555   000005 600004                    ADSC9   5,,PR0                   cn=3,n=4
         9 000556   000015 400004 xsym               ADSC9   KL_PCD+13                cn=2,n=4

      270    11905    1           KL_PCD.ADDD.SPEED=KL$SGN.SPEED;

  11905  9 000557   000006 236100                    LDQ     6,,PR0
         9 000560   000022 736000                    QLS     18
         9 000561   000003 552020 xsym               STBQ    KL_PCD+3,'20'O

      271    11906    1           KL_PCD.ADDD.TERMID.LEV=KL$SGN.TERMINAL_ID.LEV;

  11906  9 000562   000001 236100                    LDQ     1,,PR0
         9 000563   000011 772000                    QRL     9
         9 000564   000003 552010 xsym               STBQ    KL_PCD+3,'10'O

      272    11907    1           CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.CHANNEL,KL_PCD.ADDD.TERMID.CHAN ,2);

  11907  9 000565   000030 236000 10                 LDQ     24
         9 000566   200444 756100                    STQ     SIZ+196,,AUTO
         9 000567   000031 236000 10                 LDQ     25
         9 000570   200443 756100                    STQ     SIZ+195,,AUTO
         9 000571   200033 236100                    LDQ     RDBF$,,AUTO
         9 000572   000032 036000 10                 ADLQ    26
         9 000573   200442 756100                    STQ     SIZ+194,,AUTO
         9 000574   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000575   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 000576   000000 701000 xent               TSX1    KLX$8TO9
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:57   
         9 000577   000000 011000                    NOP     0

      273    11908    1           CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBDEVICE,KL_PCD.ADDD.TERMID.SUB ,2);

  11908  9 000600   000030 236000 10                 LDQ     24
         9 000601   200444 756100                    STQ     SIZ+196,,AUTO
         9 000602   000033 236000 10                 LDQ     27
         9 000603   200443 756100                    STQ     SIZ+195,,AUTO
         9 000604   200033 236100                    LDQ     RDBF$,,AUTO
         9 000605   000002 036003                    ADLQ    2,DU
         9 000606   200442 756100                    STQ     SIZ+194,,AUTO
         9 000607   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000610   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 000611   000000 701000 xent               TSX1    KLX$8TO9
         9 000612   000000 011000                    NOP     0

      274    11909    1          CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE,KL_PCD.ADDD.TERMID.SUBSUB
             11909                    ,2);

  11909  9 000613   000030 236000 10                 LDQ     24
         9 000614   200444 756100                    STQ     SIZ+196,,AUTO
         9 000615   000034 236000 10                 LDQ     28
         9 000616   200443 756100                    STQ     SIZ+195,,AUTO
         9 000617   200033 236100                    LDQ     RDBF$,,AUTO
         9 000620   000035 036000 10                 ADLQ    29
         9 000621   200442 756100                    STQ     SIZ+194,,AUTO
         9 000622   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 000623   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 000624   000000 701000 xent               TSX1    KLX$8TO9
         9 000625   000000 011000                    NOP     0

      275    11910    2           IF ACCR.C1='?' THEN DO;

  11910  9 000626   200003 236100                    LDQ     ACCT,,AUTO
         9 000627   777000 376003                    ANQ     -512,DU
         9 000630   077000 116003                    CMPQ    32256,DU
         9 000631   000637 601000 9                  TNZ     s:11914
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:58   

      276    11911    2               CALL SNDRJ (%E$SGSYN);

  11911  9 000632   000037 236000 10                 LDQ     31
         9 000633   200035 756100                    STQ     RDBF$+2,,AUTO
         9 000634   002171 701000 9                  TSX1    SNDRJ
         9 000635   000000 011000                    NOP     0

      277    11912    2               RETURN;

  11912  9 000636   000000 702200 xent               TSX2  ! X66_ARET

      278    11913    2               END;
      279    11914    1           HLPER=%E$ILGL;

  11914  9 000637   002270 235007                    LDA     1208,DL
         9 000640   200024 755100                    STA     PSIZ,,AUTO

      280    11915    1           SNDPRO = '1'B;                  /* always send the profile if possible*/

  11915  9 000641   400000 236003                    LDQ     -131072,DU
         9 000642   200025 756100                    STQ     SNDPRO,,AUTO

      281    11916    2           DO CASE (KL$SGN.TERMINAL_ID.TTYP); /* CASE on physical device type    */

  11916  9 000643   200033 470500                    LDP0    RDBF$,,AUTO
         9 000644   000001 236100                    LDQ     1,,PR0
         9 000645   000033 772000                    QRL     27
         9 000646   000013 116007                    CMPQ    11,DL
         9 000647   000651 602006 9                  TNC     s:11916+6,QL
         9 000650   001103 710000 9                  TRA     s:11983
         9 000651   001001 710000 9                  TRA     s:11952
         9 000652   001037 710000 9                  TRA     s:11967
         9 000653   000664 710000 9                  TRA     s:11918
         9 000654   001103 710000 9                  TRA     s:11983
         9 000655   001103 710000 9                  TRA     s:11983
         9 000656   001063 710000 9                  TRA     s:11976
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:59   
         9 000657   000664 710000 9                  TRA     s:11918
         9 000660   001103 710000 9                  TRA     s:11983
         9 000661   001103 710000 9                  TRA     s:11983
         9 000662   001103 710000 9                  TRA     s:11983
         9 000663   000664 710000 9                  TRA     s:11918

      282    11917    2             CASE (%KLTY_TTY#,%KLTY_URP#,%KLTY_LINEDEV#);
             11917                      /* A TTY-like ASYNC device or URP device */

      283    11918    2               CALL GETHLP ALTRET (ILGL);

  11918  9 000664   001532 701000 9                  TSX1    GETHLP
         9 000665   001433 702000 9                  TSX2    ILGL

      284    11919    2               IF KL_HLPR.ATYP~=%KLAT_TS# AND KL_HLPR.ATYP~=%KLAT_CG#

  11919  9 000666   000000 236000 xsym               LDQ     KL_HLPR
         9 000667   777000 376003                    ANQ     -512,DU
         9 000670   001000 116003                    CMPQ    512,DU
         9 000671   000676 600000 9                  TZE     s:11922
         9 000672   002000 116003                    CMPQ    1024,DU
         9 000673   000676 600000 9                  TZE     s:11922
         9 000674   003000 116003                    CMPQ    1536,DU
         9 000675   001433 601000 9                  TNZ     ILGL

      285    11920    2                 AND KL_HLPR.ATYP~=%KLAT_RES#
      286    11921    2                 THEN GOTO ILGL;
      287    11922    3               DO WHILE('0'B);

  11922  9 000676   000724 710000 9                  TRA     s:11934

      288    11923    3   TSCHK:        IF KL_HLPR.ATYP~=%KLAT_TS# THEN GOTO BPRO;

  11923  9 000677   000000 236000 xsym  TSCHK        LDQ     KL_HLPR
         9 000700   777000 376003                    ANQ     -512,DU
         9 000701   001000 116003                    CMPQ    512,DU
         9 000702   001420 601000 9                  TNZ     BPRO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:60   

      289    11924    3                 IF PRO.C=0

  11924  9 000703   200015 236100                    LDQ     PRO,,AUTO
         9 000704   777000 316003                    CANQ    -512,DU
         9 000705   000711 601000 9                  TNZ     s:11926

      290    11925    3                   THEN HLPER=%E$NGPRS;

  11925  9 000706   002300 235007                    LDA     1216,DL
         9 000707   200024 755100                    STA     PSIZ,,AUTO
         9 000710   000713 710000 9                  TRA     NOPRO

      291    11926    3                   ELSE HLPER=%E$NOPRS;

  11926  9 000711   002301 235007                    LDA     1217,DL
         9 000712   200024 755100                    STA     PSIZ,,AUTO

      292    11927    3   NOPRO:        CALL SNDMSG(HLPER);

  11927  9 000713   200024 630500       NOPRO        EPPR0   PSIZ,,AUTO
         9 000714   200035 450500                    STP0    RDBF$+2,,AUTO
         9 000715   002116 701000 9                  TSX1    SNDMSG
         9 000716   000000 011000                    NOP     0

      293    11928    3                 PRO.C=4;

  11928  9 000717   004000 236003                    LDQ     2048,DU
         9 000720   200015 552140                    STBQ    PRO,'40'O,AUTO

      294    11929    3                 PRO.T='NONE';

  11929  9 000721   040100 100400                    MLR     fill='040'O
         9 000722   000104 000004 5                  ADSC9   SLUGHLP+28               cn=0,n=4
         9 000723   200015 200013                    ADSC9   PRO,,AUTO                cn=1,n=11

      295    11930    3                 END;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:61   

      296    11931        /*  dont send the profile again if it was specified in the channel config
      297    11932            but not on the logon string.  If it was specified in the config then
      298    11933            nodeadmn already got one */
      299    11934    2               IF KL$SGN.PROFILE AND PRO.C = 0

  11934  9 000724   200033 470500                    LDP0    RDBF$,,AUTO
         9 000725   000005 236100                    LDQ     5,,PR0
         9 000726   100000 316003                    CANQ    32768,DU
         9 000727   000741 600000 9                  TZE     s:11940
         9 000730   200015 236100                    LDQ     PRO,,AUTO
         9 000731   777000 316003                    CANQ    -512,DU
         9 000732   000741 601000 9                  TNZ     s:11940

      300    11935    3                 THEN DO;

      301    11936    3                   SNDPRO = '0'B;

  11936  9 000733   200025 450100                    STZ     SNDPRO,,AUTO

      302    11937    3                   PRO = LINCNFG.PRO;

  11937  9 000734   000062 471400 4                  LDP1    CNFG$
         9 000735   000100 100500                    MLR     fill='000'O
         9 000736   100007 400014                    ADSC9   7,,PR1                   cn=2,n=12
         9 000737   200015 000014                    ADSC9   PRO,,AUTO                cn=0,n=12

      303    11938    3                   END;

  11938  9 000740   000743 710000 9                  TRA     s:11941

      304    11939    2                 ELSE
      305    11940    2                   SNDPRO = '1'B;

  11940  9 000741   400000 236003                    LDQ     -131072,DU
         9 000742   200025 756100                    STQ     SNDPRO,,AUTO

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:62   
      306    11941    2               CALL GETPRO ALTRET (TSCHK);

  11941  9 000743   001634 701000 9                  TSX1    GETPRO
         9 000744   000677 702000 9                  TSX2    TSCHK

      307    11942    2               IF KL_PCD.ADDD.TERMID.TTYP~=KL$SGN.TERMINAL_ID.TTYP AND KL_HLPR.ATYP=%
             11942                        KLAT_TS#

  11942  9 000745   200033 470500                    LDP0    RDBF$,,AUTO
         9 000746   000001 236100                    LDQ     1,,PR0
         9 000747   000033 772000                    QRL     27
         9 000750   200442 756100                    STQ     SIZ+194,,AUTO
         9 000751   000003 236000 xsym               LDQ     KL_PCD+3
         9 000752   000777 376007                    ANQ     511,DL
         9 000753   200442 116100                    CMPQ    SIZ+194,,AUTO
         9 000754   000764 600000 9                  TZE     s:11947
         9 000755   000000 236000 xsym               LDQ     KL_HLPR
         9 000756   777000 376003                    ANQ     -512,DU
         9 000757   001000 116003                    CMPQ    512,DU
         9 000760   000764 601000 9                  TNZ     s:11947

      308    11943    3                 THEN DO;

      309    11944    3                   HLPER=%E$BDPRS;

  11944  9 000761   002302 235007                    LDA     1218,DL
         9 000762   200024 755100                    STA     PSIZ,,AUTO

      310    11945    3                   GOTO NOPRO;

  11945  9 000763   000713 710000 9                  TRA     NOPRO

      311    11946    3                   END;
      312    11947    2               IF KL_HLPR.ATYP=%KLAT_TS#

  11947  9 000764   000000 236000 xsym               LDQ     KL_HLPR
         9 000765   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:63   
         9 000766   001000 116003                    CMPQ    512,DU
         9 000767   000773 601000 9                  TNZ     s:11949

      313    11948    2                 THEN KL_PCD.ADDD.ACTYP=%KLAC_NONE;

  11948  9 000770   000000 236003                    LDQ     0,DU
         9 000771   000000 552040 xsym               STBQ    KL_PCD,'40'O
         9 000772   000775 710000 9                  TRA     s:11950

      314    11949    2                 ELSE KL_PCD.ADDD.ACTYP=%KLAC_DEV;

  11949  9 000773   001000 236003                    LDQ     512,DU
         9 000774   000000 552040 xsym               STBQ    KL_PCD,'40'O

      315    11950    2               KL_PCD.ADDD.ASSOCTRM=ACCT;

  11950  9 000775   040000 100500                    MLR     fill='040'O
         9 000776   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 000777   000011 400010 xsym               ADSC9   KL_PCD+9                 cn=2,n=8
         9 001000   001104 710000 9                  TRA     s:11985

      316    11951    2             CASE (%KLTY_PROG#);           /* A system program on the L6         */

      317    11952    2               CALL GETHLP ALTRET (ILGL);

  11952  9 001001   001532 701000 9                  TSX1    GETHLP
         9 001002   001433 702000 9                  TSX2    ILGL

      318    11953    2               IF KL_HLPR.ATYP~=%KLAT_TS# AND KL_HLPR.ATYP~=%KLAT_CG#

  11953  9 001003   000000 236000 xsym               LDQ     KL_HLPR
         9 001004   777000 376003                    ANQ     -512,DU
         9 001005   001000 116003                    CMPQ    512,DU
         9 001006   001013 600000 9                  TZE     s:11956
         9 001007   002000 116003                    CMPQ    1024,DU
         9 001010   001013 600000 9                  TZE     s:11956
         9 001011   003000 116003                    CMPQ    1536,DU
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:64   
         9 001012   001433 601000 9                  TNZ     ILGL

      319    11954    2                 AND KL_HLPR.ATYP~=%KLAT_RES#
      320    11955    2                 THEN GOTO ILGL;
      321    11956    2               PRO.C = 4;

  11956  9 001013   004000 236003                    LDQ     2048,DU
         9 001014   200015 552140                    STBQ    PRO,'40'O,AUTO

      322    11957    2               PRO.T = 'NONE';

  11957  9 001015   040100 100400                    MLR     fill='040'O
         9 001016   000104 000004 5                  ADSC9   SLUGHLP+28               cn=0,n=4
         9 001017   200015 200013                    ADSC9   PRO,,AUTO                cn=1,n=11

      323    11958    2               CALL GETPRO;

  11958  9 001020   001634 701000 9                  TSX1    GETPRO
         9 001021   000000 011000                    NOP     0

      324    11959    2               IF KL_HLPR.ATYP=%KLAT_TS#

  11959  9 001022   000000 236000 xsym               LDQ     KL_HLPR
         9 001023   777000 376003                    ANQ     -512,DU
         9 001024   001000 116003                    CMPQ    512,DU
         9 001025   001031 601000 9                  TNZ     s:11961

      325    11960    2                 THEN KL_PCD.ADDD.ACTYP=%KLAC_NONE;

  11960  9 001026   000000 236003                    LDQ     0,DU
         9 001027   000000 552040 xsym               STBQ    KL_PCD,'40'O
         9 001030   001033 710000 9                  TRA     s:11962

      326    11961    2                 ELSE KL_PCD.ADDD.ACTYP=%KLAC_DEV;

  11961  9 001031   001000 236003                    LDQ     512,DU
         9 001032   000000 552040 xsym               STBQ    KL_PCD,'40'O
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:65   

      327    11962    2               KL_PCD.ADDD.ASSOCTRM=ACCT;

  11962  9 001033   040000 100500                    MLR     fill='040'O
         9 001034   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 001035   000011 400010 xsym               ADSC9   KL_PCD+9                 cn=2,n=8
         9 001036   001104 710000 9                  TRA     s:11985

      328    11963    2             CASE (%KLTY_SDEV#);           /* A sub-device of a multi-device     */

      329    11964                                                /* bi-sync terminal. This comes from  */
      330    11965                                                /* a list passed back to the FEP on   */
      331    11966                                                /* a multi-device terminal logon      */
      332    11967    2               NAME.C=0;

  11967  9 001037   000000 236003                    LDQ     0,DU
         9 001040   200005 552140                    STBQ    NAME,'40'O,AUTO

      333    11968    2               CALL GETHLP ALTRET (ILGL);

  11968  9 001041   001532 701000 9                  TSX1    GETHLP
         9 001042   001433 702000 9                  TSX2    ILGL

      334    11969    2               IF KL_HLPR.ATYP~=%KLAT_CG# AND KL_HLPR.ATYP~=%KLAT_RES#

  11969  9 001043   000000 236000 xsym               LDQ     KL_HLPR
         9 001044   777000 376003                    ANQ     -512,DU
         9 001045   002000 116003                    CMPQ    1024,DU
         9 001046   001053 600000 9                  TZE     s:11972
         9 001047   003000 116003                    CMPQ    1536,DU
         9 001050   001053 600000 9                  TZE     s:11972
         9 001051   001000 116003                    CMPQ    512,DU
         9 001052   001433 601000 9                  TNZ     ILGL

      335    11970    2                 AND KL_HLPR.ATYP~=%KLAT_TS#
      336    11971    2                 THEN GOTO ILGL;
      337    11972    2               CALL GETPRO ALTRET (BPRO);
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:66   

  11972  9 001053   001634 701000 9                  TSX1    GETPRO
         9 001054   001420 702000 9                  TSX2    BPRO

      338    11973    2               KL_PCD.ADDD.ACTYP=%KLAC_TDEV;

  11973  9 001055   003000 236003                    LDQ     1536,DU
         9 001056   000000 552040 xsym               STBQ    KL_PCD,'40'O

      339    11974    2               KL_PCD.ADDD.ASSOCTRM=KL_HLPR.TNAME;

  11974  9 001057   040000 100400                    MLR     fill='040'O
         9 001060   000013 000010 xsym               ADSC9   KL_HLPR+11               cn=0,n=8
         9 001061   000011 400010 xsym               ADSC9   KL_PCD+9                 cn=2,n=8
         9 001062   001104 710000 9                  TRA     s:11985

      340    11975    2             CASE(%KLTY_FEP#);             /* A FEP                              */

      341    11976    2               KL_HLPR = SLUGHLP;

  11976  9 001063   000000 100400                    MLR     fill='000'O
         9 001064   000050 000160 5                  ADSC9   SLUGHLP                  cn=0,n=112
         9 001065   000000 000360 xsym               ADSC9   KL_HLPR                  cn=0,n=240

      342    11977    2               KL_PCD.ADDD.IO='11'B;

  11977  9 001066   600000 236003                    LDQ     -65536,DU
         9 001067   000003 256000 xsym               ORSQ    KL_PCD+3

      343    11978    2               KL_PCD.ADDD.TERMID.TTYP=%KLTY_FEP#;

  11978  9 001070   000005 236007                    LDQ     5,DL
         9 001071   000003 552004 xsym               STBQ    KL_PCD+3,'04'O

      344    11979    2               KL_PROBUF=FRGPRO;

  11979  9 001072   000000 100400                    MLR     fill='000'O
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:67   
         9 001073   000000 000120 5                  ADSC9   FRGPRO                   cn=0,n=80
         9 001074   000000 000120 xsym               ADSC9   KL_PROBUF                cn=0,n=80

      345    11980    2               KL_PCD.ADDD.ACTYP=%KLAC_DEV;

  11980  9 001075   001000 236003                    LDQ     512,DU
         9 001076   000000 552040 xsym               STBQ    KL_PCD,'40'O

      346    11981    2               KL_PCD.ADDD.ASSOCTRM=ACCT;

  11981  9 001077   040000 100500                    MLR     fill='040'O
         9 001100   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 001101   000011 400010 xsym               ADSC9   KL_PCD+9                 cn=2,n=8
         9 001102   001104 710000 9                  TRA     s:11985

      347    11982    2             CASE (ELSE);

      348    11983    2               GOTO ILGL;

  11983  9 001103   001433 710000 9                  TRA     ILGL

      349    11984    2             END;

      350    11985    1           IF KL_PCD.ADDD.TERMID.TTYP~=KL$SGN.TERMINAL_ID.TTYP THEN GOTO BPROT;

  11985  9 001104   200033 470500                    LDP0    RDBF$,,AUTO
         9 001105   000001 236100                    LDQ     1,,PR0
         9 001106   000033 772000                    QRL     27
         9 001107   200442 756100                    STQ     SIZ+194,,AUTO
         9 001110   000003 236000 xsym               LDQ     KL_PCD+3
         9 001111   000777 376007                    ANQ     511,DL
         9 001112   200442 116100                    CMPQ    SIZ+194,,AUTO
         9 001113   001431 601000 9                  TNZ     BPROT

      351    11986                                      /* PROFILE device-type ~= physical device-type  */
      352    11987    1           KL_PCD.ADDD.TNAME=KL_HLPR.SNAME;

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:68   
  11987  9 001114   040000 100400                    MLR     fill='040'O
         9 001115   000015 000010 xsym               ADSC9   KL_HLPR+13               cn=0,n=8
         9 001116   000007 400010 xsym               ADSC9   KL_PCD+7                 cn=2,n=8

      353    11988    1           KL_PCD.ADDD.TWSN=KL_HLPR.TWSN#;

  11988  9 001117   040000 100400                    MLR     fill='040'O
         9 001120   000001 000004 xsym               ADSC9   KL_HLPR+1                cn=0,n=4
         9 001121   000013 400004 xsym               ADSC9   KL_PCD+11                cn=2,n=4

      354    11989    1           KL_PCD.ADDD.ATYP=KL_HLPR.ATYP;

  11989  9 001122   000000 236000 xsym               LDQ     KL_HLPR
         9 001123   000011 772000                    QRL     9
         9 001124   000000 552020 xsym               STBQ    KL_PCD,'20'O

      355    11990    1           KL_PCD.ADDD.COS = KL_HLPR.COS;

  11990  9 001125   000000 236000 xsym               LDQ     KL_HLPR
         9 001126   377000 376007                    ANQ     130560,DL
         9 001127   000016 552010 xsym               STBQ    KL_PCD+14,'10'O

      356    11991    2           DO CASE (KL_HLPR.ATYP);         /* CASE on attachment type            */

  11991  9 001130   000000 236000 xsym               LDQ     KL_HLPR
         9 001131   000033 772000                    QRL     27
         9 001132   000004 116007                    CMPQ    4,DL
         9 001133   001135 602006 9                  TNC     s:11991+5,QL
         9 001134   001416 710000 9                  TRA     s:12058
         9 001135   001416 710000 9                  TRA     s:12058
         9 001136   001141 710000 9                  TRA     s:11993
         9 001137   001245 710000 9                  TRA     s:12021
         9 001140   001245 710000 9                  TRA     s:12021

      357    11992    2             CASE (%KLAT_TS#);             /* Timesharing user                   */

      358    11993    3               IF KL_HLPR.FLAGS.OLOK='0'B THEN DO;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:69   

  11993  9 001141   000000 236000 xsym               LDQ     KL_HLPR
         9 001142   000100 316003                    CANQ    64,DU
         9 001143   001151 601000 9                  TNZ     s:11997

      359    11994    3                   CALL SNDRJ (%E$OLIL);

  11994  9 001144   000041 236000 10                 LDQ     33
         9 001145   200035 756100                    STQ     RDBF$+2,,AUTO
         9 001146   002171 701000 9                  TSX1    SNDRJ
         9 001147   000000 011000                    NOP     0

      360    11995    3                   RETURN;

  11995  9 001150   000000 702200 xent               TSX2  ! X66_ARET

      361    11996    3                   END;
      362    11997    2               IF KL_PROBUF.IO~='11'B THEN GOTO BPROT;

  11997  9 001151   000001 236000 xsym               LDQ     KL_PROBUF+1
         9 001152   600000 376007                    ANQ     -65536,DL
         9 001153   600000 116007                    CMPQ    -65536,DL
         9 001154   001431 601000 9                  TNZ     BPROT

      363    11998    2               KL$PCD_TS.TSINFO.ACCT=ACCT;

  11998  9 001155   200031 471500                    LDP1    PCD$,,AUTO
         9 001156   040100 100500                    MLR     fill='040'O
         9 001157   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 001160   100021 600010                    ADSC9   17,,PR1                  cn=3,n=8

      364    11999    2               KL$PCD_TS.TSINFO.UNAME=NAME.T;

  11999  9 001161   040100 100500                    MLR     fill='040'O
         9 001162   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
         9 001163   100016 600014                    ADSC9   14,,PR1                  cn=3,n=12

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:70   
      365    12000    2               KL$PCD_TS.TSINFO.HPSN=KL_HLPR.HPS.N;

  12000  9 001164   040100 100400                    MLR     fill='040'O
         9 001165   000011 000006 xsym               ADSC9   KL_HLPR+9                cn=0,n=6
         9 001166   100023 600006                    ADSC9   19,,PR1                  cn=3,n=6

      366    12001    2               KL$PCD_TS.TSINFO.WOO=KL_HLPR.WOO;

  12001  9 001167   040100 100400                    MLR     fill='040'O
         9 001170   000007 000010 xsym               ADSC9   KL_HLPR+7                cn=0,n=8
         9 001171   100025 600010                    ADSC9   21,,PR1                  cn=3,n=8

      367    12002    2               KL$PCD_TS.TSINFO.LINES=KL_PROBUF.LINES;

  12002  9 001172   000100 100400                    MLR     fill='000'O
         9 001173   000000 400002 xsym               ADSC9   KL_PROBUF                cn=2,n=2
         9 001174   100027 600002                    ADSC9   23,,PR1                  cn=3,n=2

      368    12003    2               KL$PCD_TS.TSINFO.WIDTH=KL_PROBUF.WIDTH;

  12003  9 001175   000100 100400                    MLR     fill='000'O
         9 001176   000000 200001 xsym               ADSC9   KL_PROBUF                cn=1,n=1
         9 001177   100030 200001                    ADSC9   24,,PR1                  cn=1,n=1

      369    12004    2               KL$PCD_TS.TSINFO.ATTR=KL_PROBUF.ATTR;

  12004  9 001200   000100 100400                    MLR     fill='000'O
         9 001201   000001 000002 xsym               ADSC9   KL_PROBUF+1              cn=0,n=2
         9 001202   100030 400002                    ADSC9   24,,PR1                  cn=2,n=2

      370    12005    2               KL$PCD_TS.TSINFO.NOSETUP = NOSETUP; /* FROM SGSCAN CALL           */

  12005  9 001203   003100 060500                    CSL     bolr='003'O
         9 001204   200027 000001                    BDSC    NOSETUP,,AUTO            by=0,bit=0,n=1
         9 001205   100025 200001                    BDSC    21,,PR1                  by=1,bit=0,n=1

      371    12006    2               KL$PCD_TS.TSINFO.NOHEADER = NOHEADER; /*FROM SGSCAN CALL*/
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:71   

  12006  9 001206   003100 060500                    CSL     bolr='003'O
         9 001207   200030 000001                    BDSC    NOHEADER,,AUTO           by=0,bit=0,n=1
         9 001210   100025 210001                    BDSC    21,,PR1                  by=1,bit=1,n=1

      372    12007    2               KL$PCD_TS.ADDD.DEVNM='*TSTERM*';

  12007  9 001211   040100 100400                    MLR     fill='040'O
         9 001212   000105 000010 5                  ADSC9   SLUGHLP+29               cn=0,n=8
         9 001213   100005 400010                    ADSC9   5,,PR1                   cn=2,n=8

      373    12008    2               IF SNDPRO THEN

  12008  9 001214   200025 234100                    SZN     SNDPRO,,AUTO
         9 001215   001220 605000 9                  TPL     s:12010

      374    12009    2                   CALL SETPRO;

  12009  9 001216   001732 701000 9                  TSX1    SETPRO
         9 001217   000000 011000                    NOP     0

      375    12010    2               CALL KLH$SNDHSGN(HLPER) ALTRET (ILGL);

  12010  9 001220   200024 630500                    EPPR0   PSIZ,,AUTO
         9 001221   200442 450500                    STP0    SIZ+194,,AUTO
         9 001222   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001223   000017 631400 xsym               EPPR1   B_VECTNIL+15
         9 001224   000000 701000 xent               TSX1    KLH$SNDHSGN
         9 001225   001433 702000 9                  TSX2    ILGL

      376    12011                    /* May be logging all logons or may at least have to
      377    12012                       update :USERS for successful logons.              */
      378    12013    2               IF ES$->LOGSYSACC=%PC_ES_LOGACC_ALL# THEN

  12013  9 001226   000112 470400 4                  LDP0    ES$
         9 001227   000000 235100                    LDA     0,,PR0
         9 001230   000004 115007                    CMPA    4,DL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:72   
         9 001231   001237 601000 9                  TNZ     s:12015

      379    12014    2                   CALL SECLOG(%ES_LOG_ALL#);

  12014  9 001232   000042 236000 10                 LDQ     34
         9 001233   200037 756100                    STQ     SIZ+1,,AUTO
         9 001234   002241 701000 9                  TSX1    SECLOG
         9 001235   000000 011000                    NOP     0
         9 001236   001417 710000 9                  TRA     RET

      380    12015    3                 ELSE CALL UPD_USERS(%ES_LOG_ALL#) WHENALTRETURN DO;

  12015  9 001237   000042 236000 10                 LDQ     34
         9 001240   200041 756100                    STQ     @REASON+2,,AUTO
         9 001241   002563 701000 9                  TSX1    UPD_USERS
         9 001242   001244 702000 9                  TSX2    s:12016
         9 001243   001244 710000 9                  TRA     s:12016

      381    12016    3                       END;

  12016  9 001244   001417 710000 9                  TRA     RET

      382    12017    2             CASE (%KLAT_CG#,%KLAT_RES#);  /* Device on a comgroup               */

      383    12018                                                /* Remote FEPs                        */
      384    12019                                                /* Sub-devices of a multi-device      */
      385    12020                                                /* terminal are of this type          */
      386    12021    2               KL_PCD.CGID = KL_HLPR.CGID;

  12021  9 001245   000000 100400                    MLR     fill='000'O
         9 001246   000020 000060 xsym               ADSC9   KL_HLPR+16               cn=0,n=48
         9 001247   000017 000060 xsym               ADSC9   KL_PCD+15                cn=0,n=48

      387    12022    2               KL_PCD.ADDD.NOCGREJ = KL_HLPR.FLAGS.NOCGREJ;

  12022  9 001250   000000 236000 xsym               LDQ     KL_HLPR
         9 001251   000010 736000                    QLS     8
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:73   
         9 001252   000003 676000 xsym               ERQ     KL_PCD+3
         9 001253   002000 376003                    ANQ     1024,DU
         9 001254   000003 656000 xsym               ERSQ    KL_PCD+3

      388    12023    2               KL_PCD.ADDD.NOCGINF = KL_HLPR.FLAGS.NOCGINF;

  12023  9 001255   000000 236000 xsym               LDQ     KL_HLPR
         9 001256   000010 736000                    QLS     8
         9 001257   000003 676000 xsym               ERQ     KL_PCD+3
         9 001260   001000 376003                    ANQ     512,DU
         9 001261   000003 656000 xsym               ERSQ    KL_PCD+3

      389    12024    2               KL_PCD.ADDD.USETP = KL_HLPR.FLAGS.USETP;

  12024  9 001262   000000 236000 xsym               LDQ     KL_HLPR
         9 001263   000010 736000                    QLS     8
         9 001264   000003 676000 xsym               ERQ     KL_PCD+3
         9 001265   004000 376003                    ANQ     2048,DU
         9 001266   000003 656000 xsym               ERSQ    KL_PCD+3

      390    12025    2               IF KL_HLPR.FLAGS.RNME

  12025  9 001267   000000 236000 xsym               LDQ     KL_HLPR
         9 001270   000400 316003                    CANQ    256,DU
         9 001271   001276 600000 9                  TZE     s:12027

      391    12026    2                 THEN KL_PCD.ADDD.DEVNM = KL_HLPR.RENAME;

  12026  9 001272   040000 100400                    MLR     fill='040'O
         9 001273   000011 000010 xsym               ADSC9   KL_HLPR+9                cn=0,n=8
         9 001274   000005 400010 xsym               ADSC9   KL_PCD+5                 cn=2,n=8
         9 001275   001301 710000 9                  TRA     s:12028

      392    12027    2                 ELSE KL_PCD.ADDD.DEVNM = ACCT;

  12027  9 001276   040000 100500                    MLR     fill='040'O
         9 001277   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:74   
         9 001300   000005 400010 xsym               ADSC9   KL_PCD+5                 cn=2,n=8

      393    12028    2               KL_PCD.CGINFO.ATTR = KL_PROBUF.ATTR;

  12028  9 001301   000001 236000 xsym               LDQ     KL_PROBUF+1
         9 001302   000011 772000                    QRL     9
         9 001303   000043 552030 xsym               STBQ    KL_PCD+35,'30'O

      394    12029    2               KL_PCD.CGINFO.FLG.INPUT = KL_PROBUF.IO.INPUT;

  12029  9 001304   000001 236000 xsym               LDQ     KL_PROBUF+1
         9 001305   000022 736000                    QLS     18
         9 001306   000043 676000 xsym               ERQ     KL_PCD+35
         9 001307   400000 376003                    ANQ     -131072,DU
         9 001310   000043 656000 xsym               ERSQ    KL_PCD+35

      395    12030    2               KL_PCD.CGINFO.FLG.OUTPUT = KL_PROBUF.IO.OUTPUT;

  12030  9 001311   000001 236000 xsym               LDQ     KL_PROBUF+1
         9 001312   000022 736000                    QLS     18
         9 001313   000043 676000 xsym               ERQ     KL_PCD+35
         9 001314   200000 376003                    ANQ     65536,DU
         9 001315   000043 656000 xsym               ERSQ    KL_PCD+35

      396    12031    2               KL_PCD.CGINFO.WIDTH = KL_PROBUF.WIDTH;

  12031  9 001316   000000 220000 xsym               LDX0    KL_PROBUF
         9 001317   000777 360003                    ANX0    511,DU
         9 001320   000033 740000 xsym               STX0    KL_PCD+27

      397    12032    2               KL_PCD.CGINFO.LENGTH = KL_PROBUF.LINES;

  12032  9 001321   000000 721000 xsym               LXL1    KL_PROBUF
         9 001322   000033 441000 xsym               SXL1    KL_PCD+27

      398    12033    2               IF KL_HLPR.ATYP = %KLAT_RES#

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:75   
  12033  9 001323   000000 236000 xsym               LDQ     KL_HLPR
         9 001324   777000 376003                    ANQ     -512,DU
         9 001325   003000 116003                    CMPQ    1536,DU
         9 001326   001351 601000 9                  TNZ     s:12043
         9 001327   000011 222000 xsym               LDX2    KL_HLPR+9
         9 001330   000107 102000 5                  CMPX2   SLUGHLP+31
         9 001331   001351 601000 9                  TNZ     s:12043

      399    12034    3                 AND SUBSTR(KL_HLPR.RENAME,0,2) = 'CL' THEN DO;

      400    12035    3                   KL_PCD.CGINFO.RESINFO.AUACCT =

  12035  9 001332   040000 100400                    MLR     fill='040'O
         9 001333   000022 200010 xsym               ADSC9   KL_HLPR+18               cn=1,n=8
         9 001334   000046 000010 xsym               ADSC9   KL_PCD+38                cn=0,n=8

      401    12036    3                     ADDR(KL_HLPR)->HLPR_RES.RES.AUACCOUNT;
      402    12037    3                   KL_PCD.CGINFO.RESINFO.MODE = ADDR(KL_HLPR)->HLPR_RES.RES.MODE;

  12037  9 001335   000020 236000 xsym               LDQ     KL_HLPR+16
         9 001336   000033 772000                    QRL     27
         9 001337   000000 623006                    EAX3    0,QL
         9 001340   000044 743000 xsym               STX3    KL_PCD+36

      403    12038    3                   KL_PCD.CGINFO.ATTR = ADDR(KL_HLPR)->HLPR_RES.RES.ATTR;

  12038  9 001341   000020 236000 xsym               LDQ     KL_HLPR+16
         9 001342   000043 552030 xsym               STBQ    KL_PCD+35,'30'O

      404    12039    3                   KL_PCD.CGINFO.RESINFO.RNAME = ADDR(KL_HLPR)->HLPR_RES.RES.RNAME;

  12039  9 001343   040000 100400                    MLR     fill='040'O
         9 001344   000020 600006 xsym               ADSC9   KL_HLPR+16               cn=3,n=6
         9 001345   000044 400006 xsym               ADSC9   KL_PCD+36                cn=2,n=6

      405    12040    3                   KL_PCD.CGINFO.NWINFO = KL_HLPR.NWINFO;

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:76   
  12040  9 001346   000017 236000 xsym               LDQ     KL_HLPR+15
         9 001347   000043 552004 xsym               STBQ    KL_PCD+35,'04'O

      406    12041    3                   END;

  12041  9 001350   001362 710000 9                  TRA     s:12047

      407    12042    3                 ELSE DO;

      408    12043    3                   KL_PCD.CGINFO.WHO.ACCT = ACCT;

  12043  9 001351   040000 100500                    MLR     fill='040'O
         9 001352   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 001353   000036 000010 xsym               ADSC9   KL_PCD+30                cn=0,n=8

      409    12044    3                   KL_PCD.CGINFO.XTRAINFO = KL_HLPR.INFO;

  12044  9 001354   000000 100400                    MLR     fill='000'O
         9 001355   000034 000200 xsym               ADSC9   KL_HLPR+28               cn=0,n=128
         9 001356   000044 000200 xsym               ADSC9   KL_PCD+36                cn=0,n=128

      410    12045    3                   KL_PCD.CGINFO.NWINFO = KL_HLPR.NWINFO - SIZEW(KL_HLPR.CGID);

  12045  9 001357   000017 236000 xsym               LDQ     KL_HLPR+15
         9 001360   000014 136007                    SBLQ    12,DL
         9 001361   000043 552004 xsym               STBQ    KL_PCD+35,'04'O

      411    12046    3                   END;

      412    12047    2               KL_PCD.CGINFO.WHO.NAME = NAME.T;

  12047  9 001362   040000 100500                    MLR     fill='040'O
         9 001363   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
         9 001364   000040 000014 xsym               ADSC9   KL_PCD+32                cn=0,n=12

      413    12048    2               IF SNDPRO THEN

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:77   
  12048  9 001365   200025 234100                    SZN     SNDPRO,,AUTO
         9 001366   001371 605000 9                  TPL     s:12050

      414    12049    2                   CALL SETPRO;

  12049  9 001367   001732 701000 9                  TSX1    SETPRO
         9 001370   000000 011000                    NOP     0

      415    12050    2               CALL KLH$SNDHSGN(HLPER) ALTRET(ILGL);

  12050  9 001371   200024 630500                    EPPR0   PSIZ,,AUTO
         9 001372   200442 450500                    STP0    SIZ+194,,AUTO
         9 001373   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001374   000017 631400 xsym               EPPR1   B_VECTNIL+15
         9 001375   000000 701000 xent               TSX1    KLH$SNDHSGN
         9 001376   001433 702000 9                  TSX2    ILGL

      416    12051                    /* May be logging all logons or may at least have to
      417    12052                       update :USERS for successful logons.              */
      418    12053    2               IF ES$->LOGSYSACC=%PC_ES_LOGACC_ALL# THEN

  12053  9 001377   000112 470400 4                  LDP0    ES$
         9 001400   000000 235100                    LDA     0,,PR0
         9 001401   000004 115007                    CMPA    4,DL
         9 001402   001410 601000 9                  TNZ     s:12055

      419    12054    2                   CALL SECLOG(%ES_LOG_ALL#);

  12054  9 001403   000042 236000 10                 LDQ     34
         9 001404   200037 756100                    STQ     SIZ+1,,AUTO
         9 001405   002241 701000 9                  TSX1    SECLOG
         9 001406   000000 011000                    NOP     0
         9 001407   001417 710000 9                  TRA     RET

      420    12055    3                 ELSE CALL UPD_USERS(%ES_LOG_ALL#) WHENALTRETURN DO;

  12055  9 001410   000042 236000 10                 LDQ     34
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:78   
         9 001411   200041 756100                    STQ     @REASON+2,,AUTO
         9 001412   002563 701000 9                  TSX1    UPD_USERS
         9 001413   001415 702000 9                  TSX2    s:12056
         9 001414   001415 710000 9                  TRA     s:12056

      421    12056    3                       END;

  12056  9 001415   001417 710000 9                  TRA     RET

      422    12057    2             CASE(ELSE);

      423    12058    2               GOTO ILGL;

  12058  9 001416   001433 710000 9                  TRA     ILGL

      424    12059    2             END;

      425    12060    1   RET:    RETURN;

  12060  9 001417   000000 702200 xent  RET          TSX2  ! X66_ARET

      426    12061    1   BPRO:   IF PRO.C=0

  12061  9 001420   200015 236100       BPRO         LDQ     PRO,,AUTO
         9 001421   777000 316003                    CANQ    -512,DU
         9 001422   001426 601000 9                  TNZ     s:12063

      427    12062    1             THEN HLPER=%E$NOPR;

  12062  9 001423   002272 235007                    LDA     1210,DL
         9 001424   200024 755100                    STA     PSIZ,,AUTO
         9 001425   001430 710000 9                  TRA     s:12064

      428    12063    1             ELSE HLPER=%E$NGPR;

  12063  9 001426   002271 235007                    LDA     1209,DL
         9 001427   200024 755100                    STA     PSIZ,,AUTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:79   

      429    12064    2           DO WHILE('0'B);

  12064  9 001430   001433 710000 9                  TRA     ILGL

      430    12065    2   BPROT:    HLPER=%E$BDPR;

  12065  9 001431   002277 235007       BPROT        LDA     1215,DL
         9 001432   200024 755100                    STA     PSIZ,,AUTO

      431    12066    2             END;

      432    12067    1   ILGL:   CALL SNDRJ (HLPER);

  12067  9 001433   200024 630500       ILGL         EPPR0   PSIZ,,AUTO
         9 001434   200035 450500                    STP0    RDBF$+2,,AUTO
         9 001435   002171 701000 9                  TSX1    SNDRJ
         9 001436   000000 011000                    NOP     0

      433    12068
      434    12069        /*   If this is an AUTO logon send message to console */
      435    12070    1           IF KL$SGN.AUTOLGN

  12070  9 001437   200033 470500                    LDP0    RDBF$,,AUTO
         9 001440   000005 236100                    LDQ     5,,PR0
         9 001441   200000 316003                    CANQ    65536,DU
         9 001442   001531 600000 9                  TZE     s:12081

      436    12071    2             THEN DO;

      437    12072    2               KL_AUTOFAIL.FEX = KL$SGN.NODE;

  12072  9 001443   000000 236100                    LDQ     0,,PR0
         9 001444   000022 772000                    QRL     18
         9 001445   000006 552004 xsym               STBQ    KL_AUTOFAIL+6,'04'O

      438    12073    2               KL_AUTOFAIL.LEVEL = KL$SGN.TERMINAL_ID.LEV;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:80   

  12073  9 001446   000001 236100                    LDQ     1,,PR0
         9 001447   000011 772000                    QRL     9
         9 001450   000011 552010 xsym               STBQ    KL_AUTOFAIL+9,'10'O

      439    12074    2               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.CHANNEL,KL_AUTOFAIL.CHAN,2);

  12074  9 001451   000030 236000 10                 LDQ     24
         9 001452   200444 756100                    STQ     SIZ+196,,AUTO
         9 001453   000043 236000 10                 LDQ     35
         9 001454   200443 756100                    STQ     SIZ+195,,AUTO
         9 001455   200033 236100                    LDQ     RDBF$,,AUTO
         9 001456   000032 036000 10                 ADLQ    26
         9 001457   200442 756100                    STQ     SIZ+194,,AUTO
         9 001460   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001461   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 001462   000000 701000 xent               TSX1    KLX$8TO9
         9 001463   000000 011000                    NOP     0

      440    12075    2               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBDEVICE,KL_AUTOFAIL.SUBDEV,2);

  12075  9 001464   000030 236000 10                 LDQ     24
         9 001465   200444 756100                    STQ     SIZ+196,,AUTO
         9 001466   000044 236000 10                 LDQ     36
         9 001467   200443 756100                    STQ     SIZ+195,,AUTO
         9 001470   200033 236100                    LDQ     RDBF$,,AUTO
         9 001471   000002 036003                    ADLQ    2,DU
         9 001472   200442 756100                    STQ     SIZ+194,,AUTO
         9 001473   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001474   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 001475   000000 701000 xent               TSX1    KLX$8TO9
         9 001476   000000 011000                    NOP     0

      441    12076    2              CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE,KL_AUTOFAIL.SUBSUBDEV
             12076                        ,2);

  12076  9 001477   000030 236000 10                 LDQ     24
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:81   
         9 001500   200444 756100                    STQ     SIZ+196,,AUTO
         9 001501   000045 236000 10                 LDQ     37
         9 001502   200443 756100                    STQ     SIZ+195,,AUTO
         9 001503   200033 236100                    LDQ     RDBF$,,AUTO
         9 001504   000035 036000 10                 ADLQ    29
         9 001505   200442 756100                    STQ     SIZ+194,,AUTO
         9 001506   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001507   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 001510   000000 701000 xent               TSX1    KLX$8TO9
         9 001511   000000 011000                    NOP     0

      442    12077    2               KL_AUTOFAIL.REASON = HLPER;

  12077  9 001512   200024 720100                    LXL0    PSIZ,,AUTO
         9 001513   000011 740000 xsym               STX0    KL_AUTOFAIL+9

      443    12078    2               CALL KLX$CONV_NODE(KL_AUTOFAIL.FEPNAME,FEX,NODETYPE);

  12078  9 001514   200026 630500                    EPPR0   NODETYPE,,AUTO
         9 001515   200444 450500                    STP0    SIZ+196,,AUTO
         9 001516   200023 631500                    EPPR1   FEX,,AUTO
         9 001517   200443 451500                    STP1    SIZ+195,,AUTO
         9 001520   000046 236000 10                 LDQ     38
         9 001521   200442 756100                    STQ     SIZ+194,,AUTO
         9 001522   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001523   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 001524   000000 701000 xent               TSX1    KLX$CONV_NODE
         9 001525   000000 011000                    NOP     0

      444    12079    2               CALL M$WRITE (WRTAUTOFAIL);

  12079  9 001526   001134 630400 4                  EPPR0   WRTAUTOFAIL
         9 001527   040001 713400                    CLIMB   write
         9 001530   401400 401760                    pmme    nvectors=4

      445    12080    2               END;

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:82   
      446    12081    1           RETURN;

  12081  9 001531   000000 702200 xent               TSX2  ! X66_ARET

      447    12082        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:83   
      448    12083    1   GETHLP: PROC ALTRET;

  12083  9 001532   200034 741300       GETHLP       STX1  ! RDBF$+1,,AUTO

      449    12084        /*I* NAME:        GETHLP
      450    12085             PURPOSE:     To obtain the :HLP record and verify the PASSWORD
      451    12086             CALL:        CALL GETHLP ALTRET(LBL);
      452    12087             INPUT:       ACCT - Logging on account
      453    12088                          NAME - Logging on user name (TEXTC)
      454    12089             OUTPUT:      KL_HLPR - The read-in :HLP record
      455    12090                          HLPER - Error set to %E$HLPBD if read of :HLP gives
      456    12091                             unexpected ALTRETURN error code (not %E$NOKEY)
      457    12092                             Any other error condition sets HLPER=%E$ILGL.
      458    12093             DESCRIPTION: GETHLP formats a key out of ACCT and NAME and uses that
      459    12094                          key to read the :HLP record. The password is verified.
      460    12095                          If the record exists and the password matches,
      461    12096                          GETHLP RETURNs normally, otherwise it ALTRETURNs with
      462    12097                          HLPER filled in.
      463    12098        */
      464    12099    2           KL_HLPKEY.ACCT=ACCT;

  12099  9 001533   040000 100500                    MLR     fill='040'O
         9 001534   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 001535   000000 200010 xsym               ADSC9   KL_HLPKEY                cn=1,n=8

      465    12100    2           KL_HLPKEY.CNT=NAME.C+SIZEC(KL_HLPKEY.ACCT);

  12100  9 001536   200005 236100                    LDQ     NAME,,AUTO
         9 001537   000033 772000                    QRL     27
         9 001540   000010 036007                    ADLQ    8,DL
         9 001541   000033 736000                    QLS     27
         9 001542   000000 552040 xsym               STBQ    KL_HLPKEY,'40'O

      466    12101    2           KL_HLPKEY.NAME=NAME.T;

  12101  9 001543   040000 100500                    MLR     fill='040'O
         9 001544   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:84   
         9 001545   000002 200014 xsym               ADSC9   KL_HLPKEY+2              cn=1,n=12

      467    12102    2           CALL M$READ (KL_RDHLPR) ALTRET (RDALT);

  12102  9 001546   000000 630400 xsym               EPPR0   KL_RDHLPR
         9 001547   440000 713400                    CLIMB   alt,read
         9 001550   401400 401760                    pmme    nvectors=4
         9 001551   001607 702000 9                  TSX2    RDALT

      468    12103    2           SAVE_PW=PW;

  12103  9 001552   040100 100500                    MLR     fill='040'O
         9 001553   200011 000010                    ADSC9   PW,,AUTO                 cn=0,n=8
         9 001554   200013 000010                    ADSC9   SAVE_PW,,AUTO            cn=0,n=8

      469    12104    2           CALL ASZ$SCRAMBLE (PW);

  12104  9 001555   200011 630500                    EPPR0   PW,,AUTO
         9 001556   200442 450500                    STP0    SIZ+194,,AUTO
         9 001557   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 001560   000017 631400 xsym               EPPR1   B_VECTNIL+15
         9 001561   000000 701000 xent               TSX1    ASZ$SCRAMBLE
         9 001562   000000 011000                    NOP     0

      470    12105                /* May want to log it in the security log. At least, update
      471    12106                   the bad logon count in the :USERS record.               */
      472    12107    3           IF PW~=KL_HLPR.PASSWORD THEN DO;

  12107  9 001563   040000 106500                    CMPC    fill='040'O
         9 001564   200011 000010                    ADSC9   PW,,AUTO                 cn=0,n=8
         9 001565   000002 000010 xsym               ADSC9   KL_HLPR+2                cn=0,n=8
         9 001566   001605 600000 9                  TZE     s:12114

      473    12108    3               IF ES$->LOGSYSACC >= %PC_ES_FAILEDPW# THEN

  12108  9 001567   000112 470400 4                  LDP0    ES$
         9 001570   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:85   
         9 001571   001577 600000 9                  TZE     s:12110

      474    12109    3                   CALL SECLOG(%ES_BAD_PW#);

  12109  9 001572   000030 236000 10                 LDQ     24
         9 001573   200037 756100                    STQ     SIZ+1,,AUTO
         9 001574   002241 701000 9                  TSX1    SECLOG
         9 001575   000000 011000                    NOP     0
         9 001576   001604 710000 9                  TRA     s:12112

      475    12110    4                 ELSE CALL UPD_USERS(%ES_BAD_PW#) WHENALTRETURN DO;

  12110  9 001577   000030 236000 10                 LDQ     24
         9 001600   200041 756100                    STQ     @REASON+2,,AUTO
         9 001601   002563 701000 9                  TSX1    UPD_USERS
         9 001602   001604 702000 9                  TSX2    s:12112
         9 001603   001604 710000 9                  TRA     s:12112

      476    12111    4                       END;

      477    12112    3               GOTO ILGL;

  12112  9 001604   001630 710000 9                  TRA     ILGL

      478    12113    3               END;
      479    12114    2           RETURN;

  12114  9 001605   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 001606   000001 702211                    TSX2  ! 1,X1

      480    12115    2   RDALT:  IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOKEY

  12115  9 001607   000000 470400 xsym  RDALT        LDP0    B$TCB$
         9 001610   000000 471500                    LDP1    0,,PR0
         9 001611   100102 236100                    LDQ     66,,PR1
         9 001612   377770 376007                    ANQ     131064,DL
         9 001613   001020 116007                    CMPQ    528,DL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:86   
         9 001614   001620 600000 9                  TZE     s:12118

      481    12116    2             THEN HLPER=%E$HLPBD;

  12116  9 001615   002274 235007                    LDA     1212,DL
         9 001616   200024 755100                    STA     PSIZ,,AUTO
         9 001617   001632 710000 9                  TRA     s:12122

      482    12117    3             ELSE DO;

      483    12118    3               IF ES$->LOGSYSACC >= %PC_ES_FAILEDPWNE# THEN

  12118  9 001620   000112 473400 4                  LDP3    ES$
         9 001621   300000 235100                    LDA     0,,PR3
         9 001622   000002 115007                    CMPA    2,DL
         9 001623   001630 602000 9                  TNC     ILGL

      484    12119    3                   CALL SECLOG(%ES_NO_SUCH_USER#);

  12119  9 001624   000047 236000 10                 LDQ     39
         9 001625   200037 756100                    STQ     SIZ+1,,AUTO
         9 001626   002241 701000 9                  TSX1    SECLOG
         9 001627   000000 011000                    NOP     0

      485    12120    3   ILGL:       HLPER=%E$ILGL;

  12120  9 001630   002270 235007       ILGL         LDA     1208,DL
         9 001631   200024 755100                    STA     PSIZ,,AUTO

      486    12121    3               END;

      487    12122    2           ALTRETURN;

  12122  9 001632   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 001633   000000 702211                    TSX2  ! 0,X1

      488    12123    2   END GETHLP;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:87   
      489    12124        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:88   
      490    12125    1   GETPRO: PROC ALTRET;

  12125  9 001634   200034 741300       GETPRO       STX1  ! RDBF$+1,,AUTO

      491    12126        /*I* NAME:        GETPRO
      492    12127             PURPOSE:     To read in the profile record and set some values
      493    12128             CALL:        CALL GETPRO ALTRET(LBL);
      494    12129             INPUT:       PRO - A possibly filled-in profile key
      495    12130                          KL_HLPR - The device's (user's) :HLP record
      496    12131                          DEFPRO - SLUG's default profile record
      497    12132             OUTPUT:      KL_PROBUF - The read-in (or default) profile record
      498    12133                          KL_PCD.ADDD.IO - Input, output or both
      499    12134                          KL_PCD.ADDD.TERMID.TTYP - Terminal type (TTY,STRM,SDEV or PROG)
      500    12135                          PSIZ - Set to the length of the read in profile
      501    12136                             record now in KL_PROBUF. If no profile record
      502    12137                             was read in (including using DEFPRO as KL_PROBUF)
      503    12138                             then PSIZ will be zero.
      504    12139             DESCRIPTION: GETPRO reads a :PRO record using either PRO (user-specified)
      505    12140                          or KL_HLPR.PNAME (:HLP-record specified default) and
      506    12141                          uses the found information to update the OUTPUT fields
      507    12142                          described above. KL_PROBUF is returned with the read-in
      508    12143                          :PRO record intact. If the record does not exist, GETPRO
      509    12144                          will ALTRETURN. If no profile was specified either
      510    12145                          on the signon or as a :HLP-record default, DEFPRO
      511    12146                          will be used as the default profile but PSIZ will
      512    12147                          be zero. Also, if 'NONE' or 'none'
      513    12148                          was specified as the profile name, then again
      514    12149                          DEFPRO will be used but PSIZ will be zero.
      515    12150        */
      516    12151        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:89   
      517    12152    2           PSIZ = 0;

  12152  9 001635   200024 450100                    STZ     PSIZ,,AUTO

      518    12153    2           IF PRO.C=0

  12153  9 001636   200015 236100                    LDQ     PRO,,AUTO
         9 001637   777000 316003                    CANQ    -512,DU
         9 001640   001644 601000 9                  TNZ     s:12155

      519    12154    2             THEN P$ = ADDR(KL_HLPR.PNAME);

  12154  9 001641   000050 236000 10                 LDQ     40
         9 001642   200032 756100                    STQ     P$,,AUTO
         9 001643   001646 710000 9                  TRA     s:12156

      520    12155    2             ELSE P$ = ADDR(PRO);

  12155  9 001644   200015 630500                    EPPR0   PRO,,AUTO
         9 001645   200032 450500                    STP0    P$,,AUTO

      521    12156    2           KL_PROKEY.C = ACHAR.CNT;

  12156  9 001646   200032 470500                    LDP0    P$,,AUTO
         9 001647   000000 100500                    MLR     fill='000'O
         9 001650   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 001651   000000 000001 xsym               ADSC9   KL_PROKEY                cn=0,n=1

      522    12157    2           CALL XLATE (KL_PROKEY.T , B$XL_UPPER_UR , ACHAR.TXT);

  12157  9 001652   000100 101500                    MRL     fill='000'O
         9 001653   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         9 001654   200442 000002                    ADSC9   SIZ+194,,AUTO            cn=0,n=2
         9 001655   200442 220100                    LDX0    SIZ+194,,AUTO
         9 001656   000000 471400 xsym               LDP1    B$XL_UPPER_UR$
         9 001657   040000 160540                    MVT     fill='040'O
         9 001660   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:90   
         9 001661   000000 200013 xsym               ADSC9   KL_PROKEY                cn=1,n=11
         9 001662   100000 000100                    ARG     0,,PR1

      523    12158    2           IF KL_PROKEY.C=0 OR KL_PROKEY.T='NONE'

  12158  9 001663   000000 236000 xsym               LDQ     KL_PROKEY
         9 001664   777000 316003                    CANQ    -512,DU
         9 001665   001672 600000 9                  TZE     s:12160
         9 001666   040000 106400                    CMPC    fill='040'O
         9 001667   000000 200013 xsym               ADSC9   KL_PROKEY                cn=1,n=11
         9 001670   000104 000004 5                  ADSC9   SLUGHLP+28               cn=0,n=4
         9 001671   001703 601000 9                  TNZ     s:12165

      524    12159    3             THEN DO;

      525    12160    3               KL_PROBUF=DEFPRO;

  12160  9 001672   000000 100400                    MLR     fill='000'O
         9 001673   000024 000120 5                  ADSC9   DEFPRO                   cn=0,n=80
         9 001674   000000 000120 xsym               ADSC9   KL_PROBUF                cn=0,n=80

      526    12161    3               PSIZ = 0;

  12161  9 001675   200024 450100                    STZ     PSIZ,,AUTO

      527    12162    3               KL_PCD.ADDD.TERMID.TTYP=KL$SGN.TERMINAL_ID.TTYP;

  12162  9 001676   200033 473500                    LDP3    RDBF$,,AUTO
         9 001677   300001 236100                    LDQ     1,,PR3
         9 001700   000033 772000                    QRL     27
         9 001701   000003 552004 xsym               STBQ    KL_PCD+3,'04'O

      528    12163    3               END;

  12163  9 001702   001723 710000 9                  TRA     s:12171

      529    12164    3             ELSE DO;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:91   

      530    12165    4               CALL M$READ(KL_RDPROR) WHENALTRETURN DO;

  12165  9 001703   000000 630400 xsym               EPPR0   KL_RDPROR
         9 001704   440000 713400                    CLIMB   alt,read
         9 001705   401400 401760                    pmme    nvectors=4
         9 001706   001710 702000 9                  TSX2    s:12166
         9 001707   001712 710000 9                  TRA     s:12168

      531    12166    4                   ALTRETURN;

  12166  9 001710   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 001711   000000 702211                    TSX2  ! 0,X1

      532    12167    4                   END;
      533    12168    3               PSIZ=DCBADDR(DCBNUM(M$PROF))->F$DCB.ARS;

  12168  9 001712   000000 236007 xsym               LDQ     M$PROF,DL
         9 001713   000051 470400 10                 LDP0    41
         9 001714   000000 471500                    LDP1    0,,PR0
         9 001715   100000 473506                    LDP3    0,QL,PR1
         9 001716   300000 235100                    LDA     0,,PR3
         9 001717   200024 755100                    STA     PSIZ,,AUTO

      534    12169    3               KL_PCD.ADDD.TERMID.TTYP=KL_PROBUF.TTYP;

  12169  9 001720   000000 236000 xsym               LDQ     KL_PROBUF
         9 001721   000033 772000                    QRL     27
         9 001722   000003 552004 xsym               STBQ    KL_PCD+3,'04'O

      535    12170    3               END;

      536    12171    2           KL_PCD.ADDD.IO=KL_PROBUF.IO;

  12171  9 001723   000001 236000 xsym               LDQ     KL_PROBUF+1
         9 001724   000022 736000                    QLS     18
         9 001725   000003 676000 xsym               ERQ     KL_PCD+3
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:92   
         9 001726   600000 376003                    ANQ     -65536,DU
         9 001727   000003 656000 xsym               ERSQ    KL_PCD+3

      537    12172    2           RETURN;

  12172  9 001730   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 001731   000001 702211                    TSX2  ! 1,X1

      538    12173    2   END GETPRO;
      539    12174        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:93   
      540    12175    1   SETPRO: PROC;

  12175  9 001732   200034 741300       SETPRO       STX1  ! RDBF$+1,,AUTO

      541    12176        /*D* NAME:        SETPRO
      542    12177             PURPOSE:     To send a profile message on behalf of this path
      543    12178             CALL:        CALL SETPRO;
      544    12179             INPUT:       PSIZ - Size of KL_PROBUF
      545    12180                          KL_PROBUF - The profile record
      546    12181             OUTPUT:      A set profile message to Node Admin
      547    12182             DESCRIPTION: SETPRO sends a set profile message to Node Admin
      548    12183                          on behalf of this path if PSIZ is not zero. The
      549    12184                          profile information is obtained from KL_PROBUF
      550    12185                          and send without the profile header portion.
      551    12186        */
      552    12187
      553    12188    2   DCL SIZE SBIN;
      554    12189    2   DCL IMP# UBIN;
      555    12190    2   DCL CHR$SIZE CHAR(SIZE) BASED;
      556    12191        %KL_PRFRSP(FPTN=PRFRSP,PRFSIZE=1024,STCLASS=AUTO);
      557    12241
      558    12242    2           IF PSIZ = 0

  12242  9 001733   200024 235100                    LDA     PSIZ,,AUTO
         9 001734   001736 601000 9                  TNZ     s:12245

      559    12243    2             THEN
      560    12244    2               RETURN;

  12244  9 001735   000001 702211                    TSX2  ! 1,X1

      561    12245    2           SIZE=PSIZ-LENGTHC(PROH);

  12245  9 001736   000120 135007                    SBLA    80,DL
         9 001737   200035 755100                    STA     SIZE,,AUTO

      562    12246    2           IF SIZE<=0
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:94   

  12246  9 001740   001742 605400 9                  TPNZ    s:12249

      563    12247    2             THEN
      564    12248    2               SIZE = 0;

  12248  9 001741   200035 450100                    STZ     SIZE,,AUTO

      565    12249    2           PRFRSP.FCN=IGA_PRFRSP;

  12249  9 001742   102000 236003                    LDQ     33792,DU
         9 001743   200037 552140                    STBQ    PRFRSP,'40'O,AUTO

      566    12250    2           PRFRSP.IMP = '0'B;

  12250  9 001744   000052 236000 10                 LDQ     42
         9 001745   200037 356100                    ANSQ    PRFRSP,,AUTO

      567    12251    2           PRFRSP.NMID=NMID;

  12251  9 001746   000100 100500                    MLR     fill='000'O
         9 001747   200022 000004                    ADSC9   NMID,,AUTO               cn=0,n=4
         9 001750   200037 400004                    ADSC9   PRFRSP,,AUTO             cn=2,n=4

      568    12252    2           PRFRSP.PROFILE.PRFSIZE.BYT(1)=SIZE;

  12252  9 001751   200035 236100                    LDQ     SIZE,,AUTO
         9 001752   200040 676100                    ERQ     @REASON+1,,AUTO
         9 001753   000377 376007                    ANQ     255,DL
         9 001754   200040 656100                    ERSQ    @REASON+1,,AUTO

      569    12253    2           PRFRSP.PROFILE.PRFSIZE.BYT(0)=SIZE/256;

  12253  9 001755   200035 236100                    LDQ     SIZE,,AUTO
         9 001756   000400 506007                    DIV     256,DL
         9 001757   000011 736000                    QLS     9
         9 001760   200040 676100                    ERQ     @REASON+1,,AUTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:95   
         9 001761   377000 376007                    ANQ     130560,DL
         9 001762   200040 656100                    ERSQ    @REASON+1,,AUTO

      570    12254    2           PRFRSP.PROFILE.PRFTXT=

  12254  9 001763   200035 720100                    LXL0    SIZE,,AUTO
         9 001764   040100 100440                    MLR     fill='040'O
         9 001765   000024 000010 xsym               ADSC9   KL_PROBUF+20             cn=0,n=*X0
         9 001766   200041 002000                    ADSC9   @REASON+2,,AUTO          cn=0,n=1024

      571    12255    2             PINCRC(ADDR(KL_PROBUF),LENGTHC(PROH))->CHR$SIZE;
      572    12256    2           SIZE=LENGTHC(PRFRSP)-LENGTHC(PRFRSP.PROFILE.PRFTXT)+SIZE;

  12256  9 001767   000010 236007                    LDQ     8,DL
         9 001770   200035 056100                    ASQ     SIZE,,AUTO

      573    12257    2           IMP# = KL_PROBUF.IMP#;

  12257  9 001771   000001 236000 xsym               LDQ     KL_PROBUF+1
         9 001772   000011 772000                    QRL     9
         9 001773   000177 376007                    ANQ     127,DL
         9 001774   200036 756100                    STQ     IMP#,,AUTO

      574    12258    2           IF SIZE > 0 AND IMP# > 0

  12258  9 001775   200035 235100                    LDA     SIZE,,AUTO
         9 001776   002004 604400 9                  TMOZ    s:12262
         9 001777   000000 116003                    CMPQ    0,DU
         9 002000   002004 600000 9                  TZE     s:12262

      575    12259    2             THEN
      576    12260    2               PRFRSP.MORE = '1'B;

  12260  9 002001   000100 236003                    LDQ     64,DU
         9 002002   200037 256100                    ORSQ    PRFRSP,,AUTO
         9 002003   002006 710000 9                  TRA     s:12263

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:96   
      577    12261    2             ELSE
      578    12262    2               PRFRSP.MORE = '0'B;

  12262  9 002004   000053 236000 10                 LDQ     43
         9 002005   200037 356100                    ANSQ    PRFRSP,,AUTO

      579    12263    2           CALL KLX$WRHLPSTA(PRFRSP,SIZE,KL_STATION);

  12263  9 002006   000026 236000 10                 LDQ     22
         9 002007   200444 756100                    STQ     SIZ+196,,AUTO
         9 002010   200035 630500                    EPPR0   SIZE,,AUTO
         9 002011   200443 450500                    STP0    SIZ+195,,AUTO
         9 002012   200037 631500                    EPPR1   PRFRSP,,AUTO
         9 002013   200442 451500                    STP1    SIZ+194,,AUTO
         9 002014   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002015   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002016   000000 701000 xent               TSX1    KLX$WRHLPSTA
         9 002017   000000 011000                    NOP     0

      580    12264    2           KL_PROKEY.C = LENGTHC(KL_PROKEY) - 1;

  12264  9 002020   014000 236003                    LDQ     6144,DU
         9 002021   000000 552040 xsym               STBQ    KL_PROKEY,'40'O

      581    12265    2           PRFRSP.IMP = '1'B;

  12265  9 002022   000200 236003                    LDQ     128,DU
         9 002023   200037 256100                    ORSQ    PRFRSP,,AUTO

      582    12266    2           IF PRFRSP.MORE

  12266  9 002024   200037 236100                    LDQ     PRFRSP,,AUTO
         9 002025   000100 316003                    CANQ    64,DU
         9 002026   002114 600000 9                  TZE     s:12282

      583    12267    2             THEN
      584    12268    3             DO KL_PROKEY.IMP# = 1 TO IMP#;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:97   

  12268  9 002027   001000 236003                    LDQ     512,DU
         9 002030   000003 756000 xsym               STQ     KL_PROKEY+3
         9 002031   002107 710000 9                  TRA     s:12281+3

      585    12269    3               CALL M$READ (KL_RDPROR)

  12269  9 002032   000000 630400 xsym               EPPR0   KL_RDPROR
         9 002033   440000 713400                    CLIMB   alt,read
         9 002034   401400 401760                    pmme    nvectors=4
         9 002035   002104 702000 9                  TSX2    s:12281

      586    12270    4                 WHENRETURN DO;

      587    12271    4                   SIZE = DCBADDR(DCBNUM(M$PROF))->F$DCB.ARS ;

  12271  9 002036   000000 236007 xsym               LDQ     M$PROF,DL
         9 002037   000051 470400 10                 LDP0    41
         9 002040   000000 471500                    LDP1    0,,PR0
         9 002041   100000 473506                    LDP3    0,QL,PR1
         9 002042   300000 235100                    LDA     0,,PR3
         9 002043   200035 755100                    STA     SIZE,,AUTO

      588    12272    4                   PRFRSP.PROFILE.PRFTXT = ADDR(KL_PROBUF)->CHR$SIZE;

  12272  9 002044   000000 620005                    EAX0    0,AL
         9 002045   040100 100440                    MLR     fill='040'O
         9 002046   000000 000010 xsym               ADSC9   KL_PROBUF                cn=0,n=*X0
         9 002047   200041 002000                    ADSC9   @REASON+2,,AUTO          cn=0,n=1024

      589    12273    4                   PRFRSP.PROFILE.PRFSIZE.BYT(1) = SIZE;

  12273  9 002050   200035 236100                    LDQ     SIZE,,AUTO
         9 002051   200040 676100                    ERQ     @REASON+1,,AUTO
         9 002052   000377 376007                    ANQ     255,DL
         9 002053   200040 656100                    ERSQ    @REASON+1,,AUTO

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:98   
      590    12274    4                   PRFRSP.PROFILE.PRFSIZE.BYT(0) = SIZE/256;

  12274  9 002054   200035 236100                    LDQ     SIZE,,AUTO
         9 002055   000400 506007                    DIV     256,DL
         9 002056   000011 736000                    QLS     9
         9 002057   200040 676100                    ERQ     @REASON+1,,AUTO
         9 002060   377000 376007                    ANQ     130560,DL
         9 002061   200040 656100                    ERSQ    @REASON+1,,AUTO

      591    12275    4                   IF KL_PROKEY.IMP# = IMP#

  12275  9 002062   000003 236000 xsym               LDQ     KL_PROKEY+3
         9 002063   000033 772000                    QRL     27
         9 002064   200036 116100                    CMPQ    IMP#,,AUTO
         9 002065   002070 601000 9                  TNZ     s:12278

      592    12276    4                     THEN
      593    12277    4                       PRFRSP.MORE = '0'B;

  12277  9 002066   000053 236000 10                 LDQ     43
         9 002067   200037 356100                    ANSQ    PRFRSP,,AUTO

      594    12278    4                   SIZE = SIZE + LENGTHC(PRFRSP) - LENGTHC(PRFRSP.PROFILE.PRFTXT);

  12278  9 002070   000010 236007                    LDQ     8,DL
         9 002071   200035 056100                    ASQ     SIZE,,AUTO

      595    12279    4                   CALL KLX$WRHLPSTA(PRFRSP,SIZE,KL_STATION);

  12279  9 002072   000026 236000 10                 LDQ     22
         9 002073   200444 756100                    STQ     SIZ+196,,AUTO
         9 002074   200035 633500                    EPPR3   SIZE,,AUTO
         9 002075   200443 453500                    STP3    SIZ+195,,AUTO
         9 002076   200037 634500                    EPPR4   PRFRSP,,AUTO
         9 002077   200442 454500                    STP4    SIZ+194,,AUTO
         9 002100   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002101   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:99   
         9 002102   000000 701000 xent               TSX1    KLX$WRHLPSTA
         9 002103   000000 011000                    NOP     0

      596    12280    4                   END;

      597    12281    3               END;

  12281  9 002104   000003 236000 xsym               LDQ     KL_PROKEY+3
         9 002105   001000 036003                    ADLQ    512,DU
         9 002106   000003 552040 xsym               STBQ    KL_PROKEY+3,'40'O
         9 002107   000003 236000 xsym               LDQ     KL_PROKEY+3
         9 002110   000033 772000                    QRL     27
         9 002111   200036 116100                    CMPQ    IMP#,,AUTO
         9 002112   002032 602000 9                  TNC     s:12269
         9 002113   002032 600000 9                  TZE     s:12269

      598    12282    2           RETURN;

  12282  9 002114   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 002115   000001 702211                    TSX2  ! 1,X1

      599    12283    2   END SETPRO;
      600    12284
      601    12285        /*D* NAME:        SNDMSG
      602    12286             PURPOSE:     To send a message to the device
      603    12287             DESCRIPTION: SNDMSG simply takes ERR and gets an errmsg for it
      604    12288                          and sends that message to the device
      605    12289        */
      606    12290    1   SNDMSG: PROC(ERR);

  12290  9 002116   200034 741300       SNDMSG       STX1  ! RDBF$+1,,AUTO

      607    12291    2   DCL ERR UBIN;
      608    12292        %KL_WRITE(FPTN=KL_WRITE,STCLASS=AUTO);
      609    12331    2   DCL SIZ UBIN;
      610    12332
      611    12333    2           KL_WRITE='0'B;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:100  

  12333  9 002117   000100 100400                    MLR     fill='000'O
         9 002120   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         9 002121   200036 000406                    ADSC9   KL_WRITE,,AUTO           cn=0,n=262

      612    12334    2           KL_WRITE.FCN=IGA_WRITE;

  12334  9 002122   110000 236003                    LDQ     36864,DU
         9 002123   200036 552140                    STBQ    KL_WRITE,'40'O,AUTO

      613    12335    2           KL_WRITE.NMID = NMID;

  12335  9 002124   000100 100500                    MLR     fill='000'O
         9 002125   200022 000004                    ADSC9   NMID,,AUTO               cn=0,n=4
         9 002126   200036 400004                    ADSC9   KL_WRITE,,AUTO           cn=2,n=4

      614    12336    2           SIZ=LENGTHC(KL_WRITE.MESSAGE.MSGTXT);

  12336  9 002127   000377 235007                    LDA     255,DL
         9 002130   200140 755100                    STA     SIZ,,AUTO

      615    12337    2           CALL KLH$ERRMSG(KL_WRITE.MESSAGE.MSGTXT,SIZ,ERR);

  12337  9 002131   200035 236100                    LDQ     @ERR,,AUTO
         9 002132   200444 756100                    STQ     SIZ+196,,AUTO
         9 002133   200140 630500                    EPPR0   SIZ,,AUTO
         9 002134   200443 450500                    STP0    SIZ+195,,AUTO
         9 002135   200445 452500                    STP2    SIZ+197,,AUTO
         9 002136   200445 236100                    LDQ     SIZ+197,,AUTO
         9 002137   000054 036000 10                 ADLQ    44
         9 002140   200442 756100                    STQ     SIZ+194,,AUTO
         9 002141   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002142   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002143   000000 701000 xent               TSX1    KLH$ERRMSG
         9 002144   000000 011000                    NOP     0

      616    12338    2           KL_WRITE.MESSAGE.MSGSIZE=SIZ;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:101  

  12338  9 002145   200140 236100                    LDQ     SIZ,,AUTO
         9 002146   000011 736000                    QLS     9
         9 002147   200037 552110                    STBQ    PRFRSP,'10'O,AUTO

      617    12339    2           SIZ=LENGTHC(KL_WRITE)-LENGTHC(KL_WRITE.MESSAGE.MSGTXT)+KL_WRITE.MESSAGE.
             12339                    MSGSIZE;

  12339  9 002150   200037 236100                    LDQ     PRFRSP,,AUTO
         9 002151   000011 772000                    QRL     9
         9 002152   000777 376007                    ANQ     511,DL
         9 002153   000007 036007                    ADLQ    7,DL
         9 002154   200140 756100                    STQ     SIZ,,AUTO

      618    12340    2           CALL KLX$WRHLPSTA(KL_WRITE,SIZ,KL_STATION);

  12340  9 002155   000026 236000 10                 LDQ     22
         9 002156   200444 756100                    STQ     SIZ+196,,AUTO
         9 002157   200140 630500                    EPPR0   SIZ,,AUTO
         9 002160   200443 450500                    STP0    SIZ+195,,AUTO
         9 002161   200036 631500                    EPPR1   KL_WRITE,,AUTO
         9 002162   200442 451500                    STP1    SIZ+194,,AUTO
         9 002163   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002164   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002165   000000 701000 xent               TSX1    KLX$WRHLPSTA
         9 002166   000000 011000                    NOP     0

      619    12341    2           RETURN;

  12341  9 002167   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 002170   000001 702211                    TSX2  ! 1,X1

      620    12342    2   END SNDMSG;
      621    12343
      622    12344        /*D* NAME:        SNDRJ
      623    12345             PURPOSE:     To format and send a KL_SGNRSP message rejecting this logon
      624    12346             CALL:        CALL SNDRJ(ERR);
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:102  
      625    12347             INPUT:       ERR - The reason for the reject
      626    12348             OUTPUT:      KL_SGNRSP - The signon response as a reject message
      627    12349             DESCRIPTION: SNDRJ formats a KL_SGNRSP message, calls KLH$SGNTXT
      628    12350                          to complete filling out the .MESSAGE portion, and
      629    12351                          sends this message to the originating station.
      630    12352        */
      631    12353
      632    12354    1   SNDRJ:  PROC(ERR);

  12354  9 002171   200034 741300       SNDRJ        STX1  ! RDBF$+1,,AUTO

      633    12355
      634    12356    2   DCL ERR UBIN;
      635    12357    2   DCL SIZ UBIN;
      636    12358        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS=AUTO);
      637    12493
      638    12494    2           KL_SGNRSP='0'B;

  12494  9 002172   000100 100400                    MLR     fill='000'O
         9 002173   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         9 002174   200037 000160                    ADSC9   KL_SGNRSP,,AUTO          cn=0,n=112

      639    12495    2           KL_SGNRSP.FCN=IGA_SGNRSP;

  12495  9 002175   100000 236003                    LDQ     32768,DU
         9 002176   200037 552140                    STBQ    KL_SGNRSP,'40'O,AUTO

      640    12496    2           KL_SGNRSP.NMID=KL$SGN.NMID;

  12496  9 002177   200033 470500                    LDP0    RDBF$,,AUTO
         9 002200   000100 100500                    MLR     fill='000'O
         9 002201   000005 600004                    ADSC9   5,,PR0                   cn=3,n=4
         9 002202   200037 400004                    ADSC9   KL_SGNRSP,,AUTO          cn=2,n=4

      641    12497    2           CALL KLH$SGNTXT(KL_SGNRSP,ERR);

  12497  9 002203   200035 236100                    LDQ     @ERR,,AUTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:103  
         9 002204   200443 756100                    STQ     SIZ+195,,AUTO
         9 002205   200037 631500                    EPPR1   KL_SGNRSP,,AUTO
         9 002206   200442 451500                    STP1    SIZ+194,,AUTO
         9 002207   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002210   000020 631400 xsym               EPPR1   B_VECTNIL+16
         9 002211   000000 701000 xent               TSX1    KLH$SGNTXT
         9 002212   000000 011000                    NOP     0

      642    12498    2           IF HLPER = %E$NOHOST THEN

  12498  9 002213   200024 235100                    LDA     PSIZ,,AUTO
         9 002214   002303 115007                    CMPA    1219,DL
         9 002215   002221 601000 9                  TNZ     s:12500

      643    12499    2               KL_SGNRSP.RLCID.NODE = KL_DESTNODE;
             12499                        /* node # device is attempting logon to*/

  12499  9 002216   000000 236000 xsym               LDQ     KL_DESTNODE
         9 002217   000011 736000                    QLS     9
         9 002220   200040 552110                    STBQ    @REASON+1,'10'O,AUTO

      644    12500    2           SIZ=LENGTHC(KL_SGNRSP)-LENGTHC(KL_SGNRSP.MESSAGE.RSPTXT)

  12500  9 002221   200046 236100                    LDQ     @REASON+5,,AUTO
         9 002222   000777 376007                    ANQ     511,DL
         9 002223   000040 036007                    ADLQ    32,DL
         9 002224   200036 756100                    STQ     SIZ,,AUTO

      645    12501    2             +KL_SGNRSP.MESSAGE.RSPSIZ;
      646    12502    2           CALL KLX$WRHLPSTA(KL_SGNRSP,SIZ,KL_STATION);

  12502  9 002225   000026 236000 10                 LDQ     22
         9 002226   200444 756100                    STQ     SIZ+196,,AUTO
         9 002227   200036 630500                    EPPR0   SIZ,,AUTO
         9 002230   200443 450500                    STP0    SIZ+195,,AUTO
         9 002231   200037 631500                    EPPR1   KL_SGNRSP,,AUTO
         9 002232   200442 451500                    STP1    SIZ+194,,AUTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:104  
         9 002233   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002234   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002235   000000 701000 xent               TSX1    KLX$WRHLPSTA
         9 002236   000000 011000                    NOP     0

      647    12503    2           RETURN;

  12503  9 002237   200034 221300                    LDX1  ! RDBF$+1,,AUTO
         9 002240   000001 702211                    TSX2  ! 1,X1

      648    12504    2   END SNDRJ;
      649    12505        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:105  
      650    12506    1   SECLOG: PROC(REASON);

  12506  9 002241   200036 741300       SECLOG       STX1  ! SIZ,,AUTO

      651    12507
      652    12508        /*I* NAME:        SECLOG
      653    12509
      654    12510             PURPOSE:     To fill in and write a record to the security log
      655    12511                          for system accesses and/or possibly update the
      656    12512                          :USERS record for security purposes.
      657    12513
      658    12514             CALL:        CALL SECLOG(reason);
      659    12515
      660    12516             INPUT:       A reason as defined in the ES_SUBS_E include file.
      661    12517
      662    12518             OUTPUT:      In all cases, a record will be written to the
      663    12519                          security log via M$WRSYSLOG. Some cases will also
      664    12520                          require security updates to the :USERS record.
      665    12521
      666    12522             DESCRIPTION: SECLOG will only be called if the value of
      667    12523                          ES_LOGSYSACC (defined via CONTROL) indicates that
      668    12524                          security logging is desired. Dependent upon the
      669    12525                          specific type of logging desired, it may be called
      670    12526                          when (1) a garbage logon is given, (2) a logon
      671    12527                          is given which does not exist in :HLP, (3) a logon
      672    12528                          is given which does exist in :HLP but has failed
      673    12529                          the password check, or (4) logging of all system
      674    12530                          accesses is desired.
      675    12531
      676    12532                          The security log structure is filled in
      677    12533                          from information found in the KL$SGN and KL_HLPR
      678    12534                          (:HLP record) structures and M$WRSYSLOG is called.
      679    12535                          If the reason passed to SECLOG
      680    12536                          indicates that the logon given was good except for
      681    12537                          the password, the bad password is also placed in
      682    12538                          the security record and the count of bad logon
      683    12539                          attempts since the last system exit is incremented
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:106  
      684    12540                          in the :USERS record. The online PRIV and PPRIV
      685    12541                          information is copied from the :USERS record into
      686    12542                          the security record in this case. If logging a good
      687    12543                          logon, the current logon time and bad logon counts
      688    12544                          in the :USERS records will be updated.
      689    12545        */
      690    12546    2   DCL REASON UBIN;
      691    12547        %INCLUDE ES_TABLES_M;
      692    12941        %ES$SECLOG(NAME=ES$SECLOG,STCLASS=STATIC);
      693    13218        %INCLUDE B$JIT;
      694    13508        %B$JIT0_ES_MODES;
      695    13512    2   DCL B$JIT$ PTR SYMREF;
      696    13513        %FPT_WRSYSLOG(FPTN=WR_SECLOG,
      697    13514                  ENTRY=ES$SECLOG,
      698    13515                  FILENUM=EL_SEC,
      699    13516                  SIZE="SIZEW(ES$SECLOG)",
      700    13517                  TYPE=EL_SYS_ACCESS);
      701    13532        %INCLUDE AS_SUBS_C;
      702    14946
      703    14947    2           ES$SECLOG.REASON=REASON;

  14947  9 002242   200037 470500                    LDP0    @REASON,,AUTO
         9 002243   000000 236100                    LDQ     0,,PR0
         9 002244   000033 736000                    QLS     27
         9 002245   001160 552040 4                  STBQ    ES$SECLOG,'40'O

      704    14948    2           ES$SECLOG.GRANTED='0'B;

  14948  9 002246   000055 236000 10                 LDQ     45
         9 002247   001160 356000 4                  ANSQ    ES$SECLOG

      705    14949    2           ES$SECLOG.MODE=0;

  14949  9 002250   000056 236000 10                 LDQ     46
         9 002251   001161 356000 4                  ANSQ    ES$SECLOG+1

      706    14950    2           ES$SECLOG.ACCN = ' ';
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:107  

  14950  9 002252   000035 235000 xsym               LDA     B_VECTNIL+29
         9 002253   000035 236000 xsym               LDQ     B_VECTNIL+29
         9 002254   001162 757000 4                  STAQ    ES$SECLOG+2

      707    14951    2           ES$SECLOG.UNAME = ' ';

  14951  9 002255   040000 100400                    MLR     fill='040'O
         9 002256   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002257   001164 000014 4                  ADSC9   ES$SECLOG+4              cn=0,n=12

      708    14952    2           ES$SECLOG.PASSWORD = ' ';

  14952  9 002260   000035 235000 xsym               LDA     B_VECTNIL+29
         9 002261   000035 236000 xsym               LDQ     B_VECTNIL+29
         9 002262   001167 755000 4                  STA     ES$SECLOG+7
         9 002263   001170 756000 4                  STQ     ES$SECLOG+8

      709    14953    2           ES$SECLOG.PRIV='0'B;

  14953  9 002264   001174 450000 4                  STZ     ES$SECLOG+12

      710    14954    2           ES$SECLOG.PPRIV='0'B;

  14954  9 002265   001175 450000 4                  STZ     ES$SECLOG+13

      711    14955    2           ES$SECLOG.LOGON.L = 0;

  14955  9 002266   000000 236003                    LDQ     0,DU
         9 002267   001200 552040 4                  STBQ    ES$SECLOG+16,'40'O

      712    14956    2           ES$SECLOG.LOGON.C = ' ';

  14956  9 002270   040000 100400                    MLR     fill='040'O
         9 002271   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         9 002272   001200 200037 4                  ADSC9   ES$SECLOG+16             cn=1,n=31

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:108  
      713    14957    3           IF REASON ~= %ES_JUNK_LOGON# THEN DO;

  14957  9 002273   000000 235100                    LDA     0,,PR0
         9 002274   000004 115007                    CMPA    4,DL
         9 002275   002320 600000 9                  TZE     s:14965

      714    14958    3               ES$SECLOG.TSLINE.FEX = KL_PCD.ADDD.FEX;

  14958  9 002276   000000 236000 xsym               LDQ     KL_PCD
         9 002277   000033 736000                    QLS     27
         9 002300   001214 552040 4                  STBQ    ES$SECLOG+28,'40'O

      715    14959    3               ES$SECLOG.TSLINE.PORT = BITBIN(KL_PCD.ADDD.TERMID.CHAN);

  14959  9 002301   000004 236000 xsym               LDQ     KL_PCD+4
         9 002302   000022 772000                    QRL     18
         9 002303   000011 736000                    QLS     9
         9 002304   001214 552030 4                  STBQ    ES$SECLOG+28,'30'O

      716    14960    3               ES$SECLOG.TSLINE.LEV = KL_PCD.ADDD.TERMID.LEV;

  14960  9 002305   000003 236000 xsym               LDQ     KL_PCD+3
         9 002306   000011 772000                    QRL     9
         9 002307   001214 552004 4                  STBQ    ES$SECLOG+28,'04'O

      717    14961    3               ES$SECLOG.TSLINE.SUBDEVICE = BITBIN(KL_PCD.ADDD.TERMID.SUB);

  14961  9 002310   000004 236000 xsym               LDQ     KL_PCD+4
         9 002311   777777 376007                    ANQ     -1,DL
         9 002312   000000 620006                    EAX0    0,QL
         9 002313   001215 740000 4                  STX0    ES$SECLOG+29

      718    14962    3               ES$SECLOG.TSLINE.SUBSUBDEVICE = BITBIN(KL_PCD.ADDD.TERMID.SUBSUB);

  14962  9 002314   000005 236000 xsym               LDQ     KL_PCD+5
         9 002315   000022 772000                    QRL     18
         9 002316   000000 622006                    EAX2    0,QL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:109  
         9 002317   001215 442000 4                  SXL2    ES$SECLOG+29

      719    14963    3               END;

      720    14964
      721    14965    3           DO CASE(REASON);

  14965  9 002320   000000 235100                    LDA     0,,PR0
         9 002321   000005 115007                    CMPA    5,DL
         9 002322   002324 602005 9                  TNC     s:14965+4,AL
         9 002323   002555 710000 9                  TRA     s:15015
         9 002324   002555 710000 9                  TRA     s:15015
         9 002325   002331 710000 9                  TRA     s:14967
         9 002326   002501 710000 9                  TRA     s:14998
         9 002327   002467 710000 9                  TRA     s:14994
         9 002330   002400 710000 9                  TRA     s:14981

      722    14966    3             CASE(%ES_LOG_ALL#);

      723    14967    3               ES$SECLOG.GRANTED='1'B;

  14967  9 002331   000400 236003                    LDQ     256,DU
         9 002332   001160 256000 4                  ORSQ    ES$SECLOG

      724    14968    3               ES$SECLOG.ACCN=ACCT;

  14968  9 002333   040000 100500                    MLR     fill='040'O
         9 002334   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 002335   001162 000010 4                  ADSC9   ES$SECLOG+2              cn=0,n=8

      725    14969    3               IF NAME.C ~= 0 THEN

  14969  9 002336   200005 236100                    LDQ     NAME,,AUTO
         9 002337   777000 316003                    CANQ    -512,DU
         9 002340   002344 600000 9                  TZE     s:14971

      726    14970    3                   ES$SECLOG.UNAME=NAME.T;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:110  

  14970  9 002341   040000 100500                    MLR     fill='040'O
         9 002342   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
         9 002343   001164 000014 4                  ADSC9   ES$SECLOG+4              cn=0,n=12

      727    14971    4               DO CASE(KL_HLPR.ATYP);

  14971  9 002344   000000 236000 xsym               LDQ     KL_HLPR
         9 002345   000033 772000                    QRL     27
         9 002346   000004 116007                    CMPQ    4,DL
         9 002347   002351 602006 9                  TNC     s:14971+5,QL
         9 002350   002373 710000 9                  TRA     s:14979
         9 002351   002373 710000 9                  TRA     s:14979
         9 002352   002355 710000 9                  TRA     s:14973
         9 002353   002362 710000 9                  TRA     s:14975
         9 002354   002367 710000 9                  TRA     s:14977

      728    14972    4                 CASE(%KLAT_TS#);

      729    14973    4                   ES$SECLOG.MODE=%M_INT#;

  14973  9 002355   001161 236000 4                  LDQ     ES$SECLOG+1
         9 002356   000056 376000 10                 ANQ     46
         9 002357   140000 276003                    ORQ     49152,DU
         9 002360   001161 756000 4                  STQ     ES$SECLOG+1
         9 002361   002373 710000 9                  TRA     s:14979

      730    14974    4                 CASE(%KLAT_CG#);

      731    14975    4                   ES$SECLOG.MODE=%M_CG#;

  14975  9 002362   001161 236000 4                  LDQ     ES$SECLOG+1
         9 002363   000056 376000 10                 ANQ     46
         9 002364   240000 276003                    ORQ     81920,DU
         9 002365   001161 756000 4                  STQ     ES$SECLOG+1
         9 002366   002373 710000 9                  TRA     s:14979

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:111  
      732    14976    4                 CASE(%KLAT_RES#);

      733    14977    4                   ES$SECLOG.MODE=%M_RES#;

  14977  9 002367   001161 236000 4                  LDQ     ES$SECLOG+1
         9 002370   000056 376000 10                 ANQ     46
         9 002371   300000 276003                    ORQ     98304,DU
         9 002372   001161 756000 4                  STQ     ES$SECLOG+1

      734    14978    4                 END;

      735    14979    3               CALL UPD_USERS(%ES_LOG_ALL#) ALTRET(LOG_IT);

  14979  9 002373   000042 236000 10                 LDQ     34
         9 002374   200041 756100                    STQ     @REASON+2,,AUTO
         9 002375   002563 701000 9                  TSX1    UPD_USERS
         9 002376   002556 702000 9                  TSX2    LOG_IT
         9 002377   002556 710000 9                  TRA     LOG_IT

      736    14980    3             CASE(%ES_JUNK_LOGON#);

      737    14981    3               ES$SECLOG.LOGON.L=KL$SGN.LOGON.LGNSIZ;

  14981  9 002400   200033 471500                    LDP1    RDBF$,,AUTO
         9 002401   100007 236100                    LDQ     7,,PR1
         9 002402   000011 736000                    QLS     9
         9 002403   001200 552040 4                  STBQ    ES$SECLOG+16,'40'O

      738    14982    3               IF ES$SECLOG.LOGON.L > LENGTHC(ES$SECLOG.LOGON.C) THEN

  14982  9 002404   001200 236000 4                  LDQ     ES$SECLOG+16
         9 002405   777000 376003                    ANQ     -512,DU
         9 002406   040000 116003                    CMPQ    16384,DU
         9 002407   002412 602000 9                  TNC     s:14984

      739    14983    3                   ES$SECLOG.LOGON.L=LENGTHC(ES$SECLOG.LOGON.C);

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:112  
  14983  9 002410   037000 236003                    LDQ     15872,DU
         9 002411   001200 552040 4                  STBQ    ES$SECLOG+16,'40'O

      740    14984    3               ES$SECLOG.LOGON.C=KL$SGN.LOGON.LGNTXT;

  14984  9 002412   100007 220100                    LDX0    7,,PR1
         9 002413   000777 360003                    ANX0    511,DU
         9 002414   040000 100540                    MLR     fill='040'O
         9 002415   100007 400010                    ADSC9   7,,PR1                   cn=2,n=*X0
         9 002416   001200 200037 4                  ADSC9   ES$SECLOG+16             cn=1,n=31

      741    14985    3               ES$SECLOG.TSLINE.FEX=KL$SGN.NODE;

  14985  9 002417   100000 236100                    LDQ     0,,PR1
         9 002420   000011 736000                    QLS     9
         9 002421   001214 552040 4                  STBQ    ES$SECLOG+28,'40'O

      742    14986    3               ES$SECLOG.TSLINE.LEV=KL$SGN.TERMINAL_ID.LEV;

  14986  9 002422   100001 236100                    LDQ     1,,PR1
         9 002423   000022 772000                    QRL     18
         9 002424   001214 552004 4                  STBQ    ES$SECLOG+28,'04'O

      743    14987    3               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.CHANNEL,

  14987  9 002425   000030 236000 10                 LDQ     24
         9 002426   200444 756100                    STQ     SIZ+196,,AUTO
         9 002427   000057 236000 10                 LDQ     47
         9 002430   200443 756100                    STQ     SIZ+195,,AUTO
         9 002431   200033 236100                    LDQ     RDBF$,,AUTO
         9 002432   000032 036000 10                 ADLQ    26
         9 002433   200442 756100                    STQ     SIZ+194,,AUTO
         9 002434   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002435   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002436   000000 701000 xent               TSX1    KLX$8TO9
         9 002437   000000 011000                    NOP     0

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:113  
      744    14988    3                 ES$SECLOG.TSLINE.PORT,2);
      745    14989    3               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBDEVICE,

  14989  9 002440   000030 236000 10                 LDQ     24
         9 002441   200444 756100                    STQ     SIZ+196,,AUTO
         9 002442   000060 236000 10                 LDQ     48
         9 002443   200443 756100                    STQ     SIZ+195,,AUTO
         9 002444   200033 236100                    LDQ     RDBF$,,AUTO
         9 002445   000002 036003                    ADLQ    2,DU
         9 002446   200442 756100                    STQ     SIZ+194,,AUTO
         9 002447   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002450   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002451   000000 701000 xent               TSX1    KLX$8TO9
         9 002452   000000 011000                    NOP     0

      746    14990    3                 ES$SECLOG.TSLINE.SUBDEVICE,2);
      747    14991    3               CALL KLX$8TO9(KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE,

  14991  9 002453   000030 236000 10                 LDQ     24
         9 002454   200444 756100                    STQ     SIZ+196,,AUTO
         9 002455   000061 236000 10                 LDQ     49
         9 002456   200443 756100                    STQ     SIZ+195,,AUTO
         9 002457   200033 236100                    LDQ     RDBF$,,AUTO
         9 002460   000035 036000 10                 ADLQ    29
         9 002461   200442 756100                    STQ     SIZ+194,,AUTO
         9 002462   200442 630500                    EPPR0   SIZ+194,,AUTO
         9 002463   000021 631400 xsym               EPPR1   B_VECTNIL+17
         9 002464   000000 701000 xent               TSX1    KLX$8TO9
         9 002465   000000 011000                    NOP     0
         9 002466   002556 710000 9                  TRA     LOG_IT

      748    14992    3                 ES$SECLOG.TSLINE.SUBSUBDEVICE,2);
      749    14993    3             CASE(%ES_NO_SUCH_USER#);

      750    14994    3               ES$SECLOG.ACCN=ACCT;

  14994  9 002467   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:114  
         9 002470   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 002471   001162 000010 4                  ADSC9   ES$SECLOG+2              cn=0,n=8

      751    14995    3               IF NAME.C ~= 0 THEN

  14995  9 002472   200005 236100                    LDQ     NAME,,AUTO
         9 002473   777000 316003                    CANQ    -512,DU
         9 002474   002556 600000 9                  TZE     LOG_IT

      752    14996    3                   ES$SECLOG.UNAME = NAME.T;

  14996  9 002475   040000 100500                    MLR     fill='040'O
         9 002476   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
         9 002477   001164 000014 4                  ADSC9   ES$SECLOG+4              cn=0,n=12
         9 002500   002556 710000 9                  TRA     LOG_IT

      753    14997    3             CASE(%ES_BAD_PW#);

      754    14998    3               ES$SECLOG.ACCN=ACCT;

  14998  9 002501   040000 100500                    MLR     fill='040'O
         9 002502   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 002503   001162 000010 4                  ADSC9   ES$SECLOG+2              cn=0,n=8

      755    14999    3               IF NAME.C ~= 0 THEN

  14999  9 002504   200005 236100                    LDQ     NAME,,AUTO
         9 002505   777000 316003                    CANQ    -512,DU
         9 002506   002512 600000 9                  TZE     s:15001

      756    15000    3                   ES$SECLOG.UNAME = NAME.T;

  15000  9 002507   040000 100500                    MLR     fill='040'O
         9 002510   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
         9 002511   001164 000014 4                  ADSC9   ES$SECLOG+4              cn=0,n=12

      757    15001    3               ES$SECLOG.PASSWORD = SAVE_PW;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:115  

  15001  9 002512   040000 100500                    MLR     fill='040'O
         9 002513   200013 000010                    ADSC9   SAVE_PW,,AUTO            cn=0,n=8
         9 002514   001167 000010 4                  ADSC9   ES$SECLOG+7              cn=0,n=8

      758    15002    4               DO CASE(KL_HLPR.ATYP);

  15002  9 002515   000000 236000 xsym               LDQ     KL_HLPR
         9 002516   000033 772000                    QRL     27
         9 002517   000004 116007                    CMPQ    4,DL
         9 002520   002522 602006 9                  TNC     s:15002+5,QL
         9 002521   002544 710000 9                  TRA     s:15010
         9 002522   002544 710000 9                  TRA     s:15010
         9 002523   002526 710000 9                  TRA     s:15004
         9 002524   002533 710000 9                  TRA     s:15006
         9 002525   002540 710000 9                  TRA     s:15008

      759    15003    4                 CASE(%KLAT_TS#);

      760    15004    4                   ES$SECLOG.MODE=%M_INT#;

  15004  9 002526   001161 236000 4                  LDQ     ES$SECLOG+1
         9 002527   000056 376000 10                 ANQ     46
         9 002530   140000 276003                    ORQ     49152,DU
         9 002531   001161 756000 4                  STQ     ES$SECLOG+1
         9 002532   002544 710000 9                  TRA     s:15010

      761    15005    4                 CASE(%KLAT_CG#);

      762    15006    4                   ES$SECLOG.MODE=%M_CG#;

  15006  9 002533   001161 236000 4                  LDQ     ES$SECLOG+1
         9 002534   000056 376000 10                 ANQ     46
         9 002535   240000 276003                    ORQ     81920,DU
         9 002536   001161 756000 4                  STQ     ES$SECLOG+1
         9 002537   002544 710000 9                  TRA     s:15010

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:116  
      763    15007    4                 CASE(%KLAT_RES#);

      764    15008    4                   ES$SECLOG.MODE=%M_RES#;

  15008  9 002540   001161 236000 4                  LDQ     ES$SECLOG+1
         9 002541   000056 376000 10                 ANQ     46
         9 002542   300000 276003                    ORQ     98304,DU
         9 002543   001161 756000 4                  STQ     ES$SECLOG+1

      765    15009    4                 END;

      766    15010    3               CALL UPD_USERS(%ES_BAD_PW#) ALTRET(LOG_IT);

  15010  9 002544   000030 236000 10                 LDQ     24
         9 002545   200041 756100                    STQ     @REASON+2,,AUTO
         9 002546   002563 701000 9                  TSX1    UPD_USERS
         9 002547   002556 702000 9                  TSX2    LOG_IT

      767    15011    3               ES$SECLOG.PRIV = AS_USERS.PRIV(AS_M_INT#); /* Online privs        */

  15011  9 002550   000343 236000 4                  LDQ     AS_USERS+151
         9 002551   001174 756000 4                  STQ     ES$SECLOG+12

      768    15012    3               ES$SECLOG.PPRIV = AS_USERS.PPRIV(AS_M_INT#); /* Online pprivs     */

  15012  9 002552   000347 236000 4                  LDQ     AS_USERS+155
         9 002553   001175 756000 4                  STQ     ES$SECLOG+13
         9 002554   002556 710000 9                  TRA     LOG_IT

      769    15013    3             CASE(ELSE);

      770    15014                                                /* Should never happen                */
      771    15015    3               RETURN;

  15015  9 002555   000001 702211                    TSX2  ! 1,X1

      772    15016    3             END;                          /* End Do Case(Reason)                */
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:117  

  15012  9 002556                       LOG_IT       null
      773    15017    2   LOG_IT: ;
      774    15018    2           CALL M$WRSYSLOG(WR_SECLOG);

  15018  9 002556   001242 630400 4                  EPPR0   WR_SECLOG
         9 002557   070001 713400                    CLIMB   28673
         9 002560   400400 401760                    pmme    nvectors=2

      775    15019    2           RETURN;

  15019  9 002561   200036 221300                    LDX1  ! SIZ,,AUTO
         9 002562   000001 702211                    TSX2  ! 1,X1

      776    15020    2   END SECLOG;
      777    15021        %EJECT;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:118  
      778    15022    1   UPD_USERS: PROC(REASON) ALTRET;

  15022  9 002563   200040 741300       UPD_USERS    STX1  ! @REASON+1,,AUTO

      779    15023        /* Update :USERS record for either good or bad password logons. */
      780    15024    2   DCL REASON UBIN;
      781    15025    2   DCL M$ES_USER DCB;
      782    15026    2   DCL 1 USERS_KEY STATIC ALIGNED,
      783    15027    2         2 COUNT UBIN BYTE UNAL,
      784    15028    2         2 UKEY,
      785    15029    2           3 ACCT CHAR(8) UNAL,
      786    15030    2           3 UNAME CHAR(12) UNAL,
      787    15031    2         2 * CHAR(21) UNAL;
      788    15032        %FPT_OPEN(FPTN=OPEN_USERS,
      789    15033                  DCB=M$ES_USER,
      790    15034                  ASN=FILE,
      791    15035                  ACS=DIRECT,
      792    15036                  FUN=UPDATE,
      793    15037                  SHARE=ALL,
      794    15038                  NAME=USERS_NAME,
      795    15039                  ACCT=USERS_ACCT);
      796    15148        %VLP_NAME(FPTN=USERS_NAME,NAME=':USERS');
      797    15175        %VLP_ACCT(FPTN=USERS_ACCT,ACCT=':SYS');
      798    15188        %FPT_READ(FPTN=READ_USERS,
      799    15189                  DCB=M$ES_USER,
      800    15190                  KEYS=YES,
      801    15191                  KEY=USERS_KEY,
      802    15192                  BUF=AS_USERS);
      803    15231        %FPT_WRITE(FPTN=WRITE_USERS,
      804    15232                  DCB=M$ES_USER,
      805    15233                  KEY=USERS_KEY,
      806    15234                  BUF=AS_USERS);
      807    15265        %FPT_ENQ(FPTN=ENQ_USERS,
      808    15266                  DCB=M$ES_USER,
      809    15267                  RNAME=USERS_KEY,
      810    15268                  SHARE=NONE);
      811    15286        %FPT_DEQ(FPTN=DEQ_USERS,
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:119  
      812    15287                  DCB=M$ES_USER);
      813    15304        %FPT_TRUNC(FPTN=FPT_TRUNC,
      814    15305                  DCB=M$ES_USER);
      815    15319        %FPT_TIME(FPTN=LOGON_TIME,
      816    15320                  DEST=UTS,
      817    15321                  SOURCE=CLOCK,
      818    15322                  TSTAMP=ES_LOGON_TIME);
      819    15341
      820    15342
      821    15343    2           IF NOT DCBADDR(DCBNUM(M$ES_USER))->F$DCB.FCD THEN

  15343  9 002564   000000 236007 xsym               LDQ     M$ES_USER,DL
         9 002565   000051 470400 10                 LDP0    41
         9 002566   000000 471500                    LDP1    0,,PR0
         9 002567   100000 473506                    LDP3    0,QL,PR1
         9 002570   300031 236100                    LDQ     25,,PR3
         9 002571   020000 316007                    CANQ    8192,DL
         9 002572   002577 601000 9                  TNZ     s:15345

      822    15344    2               CALL M$OPEN(OPEN_USERS) ALTRET(ERR);

  15344  9 002573   001266 630400 4                  EPPR0   OPEN_USERS
         9 002574   450000 713400                    CLIMB   alt,open
         9 002575   410400 401760                    pmme    nvectors=18
         9 002576   002665 702000 9                  TSX2    ERR

      823    15345    2           USERS_KEY.COUNT=8+NAME.C;

  15345  9 002577   200005 236100                    LDQ     NAME,,AUTO
         9 002600   000033 772000                    QRL     27
         9 002601   000010 036007                    ADLQ    8,DL
         9 002602   000033 736000                    QLS     27
         9 002603   001252 552040 4                  STBQ    USERS_KEY,'40'O

      824    15346    2           USERS_KEY.UKEY.ACCT=ACCT;

  15346  9 002604   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:120  
         9 002605   200003 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         9 002606   001252 200010 4                  ADSC9   USERS_KEY                cn=1,n=8

      825    15347    2           IF NAME.C ~= 0 THEN

  15347  9 002607   200005 236100                    LDQ     NAME,,AUTO
         9 002610   777000 316003                    CANQ    -512,DU
         9 002611   002615 600000 9                  TZE     s:15349

      826    15348    2               USERS_KEY.UKEY.UNAME=NAME.T;

  15348  9 002612   040000 100500                    MLR     fill='040'O
         9 002613   200005 200014                    ADSC9   NAME,,AUTO               cn=1,n=12
         9 002614   001254 200014 4                  ADSC9   USERS_KEY+2              cn=1,n=12

      827    15349    2           CALL M$ENQ(ENQ_USERS) ALTRET(ERR);

  15349  9 002615   001416 630400 4                  EPPR0   ENQ_USERS
         9 002616   420002 713400                    CLIMB   alt,+8194
         9 002617   401000 401760                    pmme    nvectors=3
         9 002620   002665 702000 9                  TSX2    ERR

      828    15350    3           CALL M$READ(READ_USERS) WHENALTRETURN DO;

  15350  9 002621   001364 630400 4                  EPPR0   READ_USERS
         9 002622   440000 713400                    CLIMB   alt,read
         9 002623   401400 401760                    pmme    nvectors=4
         9 002624   002626 702000 9                  TSX2    s:15351
         9 002625   002632 710000 9                  TRA     s:15360

      829    15351    3               CALL M$DEQ(DEQ_USERS);

  15351  9 002626   001430 630400 4                  EPPR0   DEQ_USERS
         9 002627   020003 713400                    CLIMB   8195
         9 002630   401000 401760                    pmme    nvectors=3

      830    15352    3               GOTO ERR;
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:121  

  15352  9 002631   002665 710000 9                  TRA     ERR

      831    15353    3               END;
      832    15354                                                /*
      833    15355                                                  Only timesharing users should make it
      834    15356                                                  to this point.  All others should have
      835    15357                                                  transferred to ERR after the READ
      836    15358                                                  ALTRETURN.
      837    15359                                                */
      838    15360    2           IF REASON=%ES_LOG_ALL# THEN

  15360  9 002632   200041 470500                    LDP0    @REASON,,AUTO
         9 002633   000000 235100                    LDA     0,,PR0
         9 002634   000001 115007                    CMPA    1,DL
         9 002635   002642 601000 9                  TNZ     s:15362

      839    15361    2               CALL M$TIME(LOGON_TIME);

  15361  9 002636   001444 630400 4                  EPPR0   LOGON_TIME
         9 002637   020004 713400                    CLIMB   8196
         9 002640   402000 401760                    pmme    nvectors=5
         9 002641   002652 710000 9                  TRA     s:15367

      840    15362    3             ELSE IF REASON=%ES_BAD_PW# THEN DO;

  15362  9 002642   000002 115007                    CMPA    2,DL
         9 002643   002652 601000 9                  TNZ     s:15367

      841    15363    3                   AS_USERS.BAD_LOGON_CNT=AS_USERS.BAD_LOGON_CNT+1;

  15363  9 002644   001077 220000 4                  LDX0    AS_USERS+499
         9 002645   000001 621010                    EAX1    1,X0
         9 002646   001077 741000 4                  STX1    AS_USERS+499

      842    15364    3                   AS_USERS.LOGINS.BAD_LOGON_CNT(%M_INT#-1)=

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:122  
  15364  9 002647   001105 235000 4                  LDA     AS_USERS+505
         9 002650   000001 035007                    ADLA    1,DL
         9 002651   001105 755000 4                  STA     AS_USERS+505

      843    15365    3                     AS_USERS.LOGINS.BAD_LOGON_CNT(%M_INT#-1)+1;
      844    15366    3                   END;

      845    15367    2           CALL M$WRITE(WRITE_USERS);

  15367  9 002652   001402 630400 4                  EPPR0   WRITE_USERS
         9 002653   040001 713400                    CLIMB   write
         9 002654   401400 401760                    pmme    nvectors=4

      846    15368    2           CALL M$TRUNC(FPT_TRUNC);

  15368  9 002655   001440 630400 4                  EPPR0   FPT_TRUNC
         9 002656   050003 713400                    CLIMB   20483
         9 002657   400000 401760                    pmme    nvectors=1

      847    15369    2           CALL M$DEQ(DEQ_USERS);

  15369  9 002660   001430 630400 4                  EPPR0   DEQ_USERS
         9 002661   020003 713400                    CLIMB   8195
         9 002662   401000 401760                    pmme    nvectors=3

      848    15370    2           RETURN;

  15370  9 002663   200040 221300                    LDX1  ! @REASON+1,,AUTO
         9 002664   000001 702211                    TSX2  ! 1,X1

  15365  9 002665                       ERR          null
      849    15371    2   ERR:    ;
      850    15372    2           ALTRETURN;

  15372  9 002665   200040 221300                    LDX1  ! @REASON+1,,AUTO
         9 002666   000000 702211                    TSX2  ! 0,X1
      851    15373
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:123  
      852    15374    2   END UPD_USERS;
      853    15375    1   END KLH$HLP;
      854    15376        %EOD;

PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:124  
--  Include file information  --

   AS_SUBS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   ES_TABLES_M.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   JC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   PC_SUBS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   ES_SUBS_E.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$HLP.
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:125  

 **** Variables and constants ****

  ****  Section 004  Data  KLH$HLP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   114-0-0/w STRC(18576) r     1 AS_USERS                  62-0-0/w PTR         r     1 CNFG$
     0-0-0/w UBIN        r     1 CNFG_BUF(0:49)
    63-0-0/c STRC(171)   r     1 CONFIG_KEY                70-0-0/w STRC(99)    r     1 DEFAULT_KEY
  1430-0-0/d STRC(288)   r     1 DEQ_USERS               1416-0-0/d STRC(360)   r     1 ENQ_USERS
   112-0-0/w PTR         r     1 ES$                     1160-0-0/w STRC(1764)  r     1 ES$SECLOG
   113-0-0/w UBIN        r     1 ES_LOGON_TIME           1120-0-0/d STRC(432)   r     1 FPT_PROWT
  1440-0-0/d STRC(144)   r     1 FPT_TRUNC               1444-0-0/d STRC(432)   r     1 LOGON_TIME
  1266-0-0/d STRC(2088)  r     1 OPEN_USERS              1150-0-0/w STRC(288)   r     1 PROWT_STA
    74-0-0/d STRC(504)   r     1 READ_NETCON             1364-0-0/d STRC(504)   r     1 READ_USERS
  1362-0-0/c STRC(72)    r     1 USERS_ACCT              1252-0-0/w STRC(378)   r     1 USERS_KEY
  1360-0-0/c STRC(63)    r     1 USERS_NAME              1402-0-0/d STRC(432)   r     1 WRITE_USERS
  1134-0-0/d STRC(432)   r     1 WRTAUTOFAIL             1242-0-0/d STRC(288)   r     1 WR_SECLOG

  ****  Section 005 RoData KLH$HLP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    24-0-0/c STRC(720)   r     1 DEFPRO                     0-0-0/w STRC(720)   r     1 FRGPRO
    50-0-0/w STRC(1008)  r     1 SLUGHLP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    35-0-0/w PTR         r     1 @ERR                      35-0-0/w PTR         r     1 @ERR
    37-0-0/w PTR         r     1 @REASON                   41-0-0/w PTR         r     1 @REASON
     3-0-0/c STRC(72)    r     1 ACCR                       3-0-0/c CHAR(8)     r     1 ACCT
    *0-0-0/w UBIN        r     1 ERR                       *0-0-0/w UBIN        r     1 ERR
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:126  
    23-0-0/w UBIN        r     1 FEX                       24-0-0/w UBIN        r     1 HLPER
    20-0-0/c CHAR(8)     r     1 HOST                      36-0-0/w UBIN        r     1 IMP#
    37-0-0/w STRC(1008)  r     1 KL_SGNRSP                 36-0-0/w STRC(2358)  r     1 KL_WRITE
     5-0-0/w STRC(117)   r     1 NAME                      22-0-0/b STRC(9)     r     1 NMID(0:3)
    26-0-0/w UBIN        r     1 NODETYPE                  30-0-0/w BIT         r     1 NOHEADER
    27-0-0/w BIT         r     1 NOSETUP                   32-0-0/w PTR         r     1 P$
    31-0-0/w PTR         r     1 PCD$                      37-0-0/w STRC(9288)  r     1 PRFRSP
    15-0-0/w STRC(108)   r     1 PRO                       24-0-0/w UBIN        r     1 PSIZ
    11-0-0/c CHAR(8)     r     1 PW                        33-0-0/w PTR         r     1 RDBF$
    *0-0-0/w UBIN        r     1 REASON                    *0-0-0/w UBIN        r     1 REASON
    13-0-0/c CHAR(8)     r     1 SAVE_PW                  140-0-0/w UBIN        r     1 SIZ
    36-0-0/w UBIN        r     1 SIZ                       35-0-0/w SBIN        r     1 SIZE
    25-0-0/b BIT         r     1 SNDPRO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 B$XL_UPPER_UR$             0-0-0/w UBIN        r     1 ES_LOGSYSACC
     0-0-0/w STRC(405)   r     1 KL_AUTOFAIL                0-0-0/w UBIN        r     1 KL_DESTNODE
     0-0-0/w STRC        r     1 KL_FETBL(0:0)
     0-0-0/w UBIN        r     1 KL_HLPFILS                 0-0-0/d STRC(189)   r     1 KL_HLPKEY
     0-0-0/w STRC(2160)  r     1 KL_HLPR                    0-0-0/w UBIN        r     1 KL_NODE
     0-0-0/c CHAR(8)     r     1 KL_NODENAME                0-0-0/w STRC(2448)  r     1 KL_PCD
     0-0-0/w STRC(720)   r     1 KL_PROBUF                  0-0-0/d STRC(117)   r     1 KL_PROKEY
     0-0-0/w STRC(1260)  r     1 KL_RDBF                    0-0-0/d STRC(504)   r     1 KL_RDHLPR
     0-0-0/d STRC(504)   r     1 KL_RDPROR                  0-0-0/c CHAR(8)     r     1 KL_STATION

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ASTR(9)     r     1 ACHAR                      0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d STRC(4608)  r     1 B$XL_UPPER_UR
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:127  
     0-0-0/c ACHR        r     1 CHR$SIZE                   0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(729)   r     1 HLPR_RES                   0-0-0/w STRC(2484)  r     1 KL$HSGN
     0-0-0/c STRC(900)   r     1 KL$PCD_TS                  0-0-0/w STRC(288)   r     1 KL$RQSPROFILE
     0-0-0/w ASTR(270)   r     1 KL$SGN                     0-0-0/w STRC(1287)  r     1 LINCNFG
     0-0-0/w UBIN        r     1 LOGSYSACC                  0-0-0N  NULL        r     1 M$CSCG
     0-0-0N  NULL        r     1 M$ES_USER                  0-0-0N  NULL        r     1 M$HLP
     0-0-0N  NULL        r     1 M$NETCON                   0-0-0N  NULL        r     1 M$PROF
     0-0-0/w STRC(720)   r     1 PROH


   Procedure KLH$HLP requires 1463 words for executable code.
   Procedure KLH$HLP requires 300 words of local(AUTO) storage.
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:128  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:129  
          MINI XREF LISTING

ACCR.C1
     11388**DCL     11910>>IF
ACCT
     11383**DCL     11384--REDEF   11387--REDEF   11867<>CALL    11950>>ASSIGN  11962>>ASSIGN  11981>>ASSIGN
     11998>>ASSIGN  12027>>ASSIGN  12043>>ASSIGN  12099>>ASSIGN  14968>>ASSIGN  14994>>ASSIGN  14998>>ASSIGN
     15346>>ASSIGN
ACHAR.CNT
     11596**DCL     11597--IMP-SIZ 12156>>ASSIGN  12157>>CALLBLT
ACHAR.TXT
     11597**DCL     12157>>CALLBLT
ASZ$SCRAMBLE
     11766**DCL-ENT 12104--CALL
AS_USERS
     11428**DCL     15211--DCLINIT 15212--DCLINIT 15252--DCLINIT 15253--DCLINIT
AS_USERS.BAD_LOGON_CNT
     11570**DCL     15363<<ASSIGN  15363>>ASSIGN
AS_USERS.BANNER_PERM
     11543**DCL     11544--REDEF
AS_USERS.BUDGET.MACCT
     11448**DCL     11452--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     11461**DCL     11464--REDEF
AS_USERS.BUDGET.PACCUM
     11444**DCL     11446--REDEF
AS_USERS.BUDGET.PMAXC
     11439**DCL     11441--REDEF
AS_USERS.LOGINS.BAD_LOGON_CNT
     11578**DCL     15364<<ASSIGN  15364>>ASSIGN
AS_USERS.PPRIV
     11507**DCL     15012>>ASSIGN
AS_USERS.PRIV
     11506**DCL     15011>>ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:130  
AS_USERS.SETUP_CHRA.TXT
     11559**DCL     11560--REDEF   11561--REDEF
B$ALT.CODE
      9868**DCL      9868--REDEF    9869--REDEF    9869--REDEF
B$ALT.ERR.CODE
      9870**DCL     12115>>IF
B$ALT.ERR.ERR#
      9870**DCL      9870--REDEF
B$ALT.EVID
      9869**DCL      9869--REDEF    9869--REDEF
B$JIT.CPFLAGS1.SLEAZE IN PROCEDURE SECLOG
     13326**DCL     13326--REDEF
B$JIT.ERR.MID IN PROCEDURE SECLOG
     13233**DCL     13233--REDEF
B$JIT.JRESPEAK IN PROCEDURE SECLOG
     13394**DCL     13395--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR IN PROCEDURE SECLOG
     13503**DCL     13503--REDEF   13504--REDEF
B$JIT.PNR IN PROCEDURE SECLOG
     13407**DCL     13407--REDEF
B$JIT.TSLINE IN PROCEDURE SECLOG
     13501**DCL     13502--REDEF
B$JIT$ IN PROCEDURE SECLOG
     13512**DCL     13227--IMP-PTR
B$TCB.ALT$
      9864**DCL     12115>>IF
B$TCB$
     11598**DCL     12115>>IF
B$XL_UPPER_UR
       875**DCL     12157>>CALLBLT
B$XL_UPPER_UR$
       874**DCL       875--IMP-PTR 12157>>CALLBLT
BPRO
     12061**LABEL   11923--GOTO    11972--CALLALT
BPROT
     12065**LABEL   11985--GOTO    11997--GOTO
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:131  
CHR$SIZE IN PROCEDURE SETPRO
     12190**DCL     12254>>ASSIGN  12272>>ASSIGN
CNFG$
      9877**DCL      9896--IMP-PTR 11816>>ASSIGN  11863>>ASSIGN  11864>>ASSIGN  11937>>ASSIGN
CNFG_BUF
      9876**DCL      9877--DCLINIT 11814--ASSIGN  11851--ASSIGN
CONFIG_KEY
     10049**DCL     11811--ASSIGN  11852--ASSIGN
CONFIG_KEY.NODE
     10052**DCL     11803<<ASSIGN  11809<<ASSIGN  11843<<ASSIGN  11848<<ASSIGN
CONFIG_KEY.TERMID
     10069**DCL     11804<<ASSIGN  11844<<ASSIGN
CONFIG_KEY.TERMID.TERM
     10071**DCL     10080--REDEF
CONFIG_KEY.TERMID.TERM.CHANNEL
     10073**DCL     11808<<ASSIGN  11847<<ASSIGN
CONFIG_KEY.TERMID.TERM.TERM_NAME
     10080**DCL     11806>>IF      11845>>IF
CONFIG_KEY.TERMID.TTYP
     10071**DCL     11805<<ASSIGN  11850<<ASSIGN
DEFAULT_KEY
     10096**DCL     11799--ASSIGN
DEFAULT_KEY.HNDLR
     10100**DCL     11798<<ASSIGN
DEFAULT_KEY.NODE
     10099**DCL     11797<<ASSIGN
DEFPRO
     10836**DCL     12160>>ASSIGN
DEQ_USERS IN PROCEDURE UPD_USERS
     15298**DCL     15351<>CALL    15369<>CALL
DEQ_USERS.V IN PROCEDURE UPD_USERS
     15299**DCL     15298--DCLINIT
ENQ_USERS IN PROCEDURE UPD_USERS
     15279**DCL     15349<>CALL
ENQ_USERS.V IN PROCEDURE UPD_USERS
     15280**DCL     15279--DCLINIT
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:132  
ERR IN PROCEDURE SNDMSG
     12291**DCL     12290--PROC    12337<>CALL
ERR IN PROCEDURE SNDRJ
     12356**DCL     12354--PROC    12497<>CALL
ERR IN PROCEDURE UPD_USERS
     15365**LABEL   15344--CALLALT 15349--CALLALT 15352--GOTO
ES$
     11412**DCL     11783<>CALL    11868>>IF      12013>>IF      12053>>IF      12108>>IF      12118>>IF
ES$SECLOG IN PROCEDURE SECLOG
     12955**DCL     13528--DCLINIT 13530--DCLINIT
ES$SECLOG.ACCN IN PROCEDURE SECLOG
     12988**DCL     14950<<ASSIGN  14968<<ASSIGN  14994<<ASSIGN  14998<<ASSIGN
ES$SECLOG.FACCN IN PROCEDURE SECLOG
     12996**DCL     13000--REDEF
ES$SECLOG.FILE IN PROCEDURE SECLOG
     13156**DCL     13187--REDEF
ES$SECLOG.GRANTED IN PROCEDURE SECLOG
     12962**DCL     14948<<ASSIGN  14967<<ASSIGN
ES$SECLOG.LOGON IN PROCEDURE SECLOG
     13045**DCL     13057--REDEF
ES$SECLOG.LOGON.C IN PROCEDURE SECLOG
     13054**DCL     14956<<ASSIGN  14982--IF      14983--ASSIGN  14984<<ASSIGN
ES$SECLOG.LOGON.L IN PROCEDURE SECLOG
     13051**DCL     14955<<ASSIGN  14981<<ASSIGN  14982>>IF      14983<<ASSIGN
ES$SECLOG.MODE IN PROCEDURE SECLOG
     12966**DCL     14949<<ASSIGN  14973<<ASSIGN  14975<<ASSIGN  14977<<ASSIGN  15004<<ASSIGN  15006<<ASSIGN
     15008<<ASSIGN
ES$SECLOG.PASSWORD IN PROCEDURE SECLOG
     13000**DCL     14952<<ASSIGN  15001<<ASSIGN
ES$SECLOG.PPRIV IN PROCEDURE SECLOG
     13031**DCL     14954<<ASSIGN  15012<<ASSIGN
ES$SECLOG.PRIV IN PROCEDURE SECLOG
     13024**DCL     14953<<ASSIGN  15011<<ASSIGN
ES$SECLOG.REASON IN PROCEDURE SECLOG
     12957**DCL     14947<<ASSIGN
ES$SECLOG.TSLINE.FEX IN PROCEDURE SECLOG
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:133  
     13097**DCL     14958<<ASSIGN  14985<<ASSIGN
ES$SECLOG.TSLINE.LEV IN PROCEDURE SECLOG
     13103**DCL     14960<<ASSIGN  14986<<ASSIGN
ES$SECLOG.TSLINE.PORT IN PROCEDURE SECLOG
     13100**DCL     14959<<ASSIGN  14987<>CALL
ES$SECLOG.TSLINE.SUBDEVICE IN PROCEDURE SECLOG
     13106**DCL     14961<<ASSIGN  14989<>CALL
ES$SECLOG.TSLINE.SUBSUBDEVICE IN PROCEDURE SECLOG
     13109**DCL     14962<<ASSIGN  14991<>CALL
ES$SECLOG.UNAME IN PROCEDURE SECLOG
     12992**DCL     14951<<ASSIGN  14970<<ASSIGN  14996<<ASSIGN  15000<<ASSIGN
ES_LOGON_TIME
     11414**DCL     11784<<ASSIGN  15337--DCLINIT
ES_LOGSYSACC
     11411**DCL     11412--DCLINIT
F$DCB.ACTPOS
      1670**DCL      1670--REDEF
F$DCB.ARS
      1645**DCL      1645--REDEF   12168>>ASSIGN  12271>>ASSIGN
F$DCB.ATTR
      1663**DCL      1664--REDEF
F$DCB.BORROW
      1678**DCL      1678--REDEF    1678--REDEF    1678--REDEF
F$DCB.DCBNAME.L
      1692**DCL      1692--IMP-SIZ
F$DCB.EOMCHAR
      1649**DCL      1649--REDEF
F$DCB.FCD
      1658**DCL     15343>>IF
F$DCB.FLDID
      1673**DCL      1673--REDEF
F$DCB.FORM$
      1667**DCL      1667--REDEF
F$DCB.FSECT
      1683**DCL      1683--REDEF
F$DCB.FSN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:134  
      1660**DCL      1660--REDEF    1660--REDEF    1661--REDEF
F$DCB.HEADER$
      1666**DCL      1666--REDEF
F$DCB.IXTNSIZE
      1664**DCL      1664--REDEF
F$DCB.LASTSTA$
      1654**DCL      1654--REDEF
F$DCB.LVL
      1679**DCL      1679--REDEF
F$DCB.NAME.C
      1654**DCL      1654--REDEF
F$DCB.NOEOF
      1675**DCL      1675--REDEF
F$DCB.NRECS
      1665**DCL      1665--REDEF
F$DCB.NRECX
      1684**DCL      1684--REDEF
F$DCB.OHDR
      1676**DCL      1676--REDEF
F$DCB.ORG
      1659**DCL      1659--REDEF
F$DCB.PRECNO
      1682**DCL      1682--REDEF
F$DCB.RCSZ
      1687**DCL      1687--REDEF
F$DCB.RES
      1655**DCL      1655--REDEF
F$DCB.SETX
      1667**DCL      1667--REDEF
F$DCB.TAB$
      1666**DCL      1667--REDEF
F$DCB.TDA
      1681**DCL      1681--REDEF
F$DCB.WSN
      1656**DCL      1656--REDEF
FEX
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:135  
     11402**DCL     11796<<CALLBLT 11797>>ASSIGN  11802<<CALLBLT 11803>>ASSIGN  11842<<CALLBLT 11843>>ASSIGN
     11902<<ASSIGN  11903<>CALL    12078<>CALL
FPT_PROWT.STATION_
     11696**DCL     11696--REDEF
FPT_PROWT.V
     11697**DCL     11694--DCLINIT
FPT_PROWT.V.DVBYTE.VFC#
     11703**DCL     11703--REDEF
FPT_TRUNC IN PROCEDURE UPD_USERS
     15316**DCL     15368<>CALL
FPT_TRUNC.V IN PROCEDURE UPD_USERS
     15316**DCL     15316--DCLINIT
FRGPRO
     10794**DCL     11979>>ASSIGN
GETHLP
     12083**PROC    11918--CALL    11952--CALL    11968--CALL
GETPRO
     12125**PROC    11817--CALL    11941--CALL    11958--CALL    11972--CALL
HLPER
     11404**DCL     11841<<ASSIGN  11867<>CALL    11881<<ASSIGN  11886<<ASSIGN  11891<<ASSIGN  11914<<ASSIGN
     11925<<ASSIGN  11926<<ASSIGN  11927<>CALL    11944<<ASSIGN  12010<>CALL    12050<>CALL    12062<<ASSIGN
     12063<<ASSIGN  12065<<ASSIGN  12067<>CALL    12077>>ASSIGN  12116<<ASSIGN  12120<<ASSIGN  12498>>IF
HLPR_RES.PASSWORD
     10638**DCL     10642--REDEF
HLPR_RES.RENAME
     10661**DCL     10662--REDEF
HLPR_RES.RES.ATTR
     10714**DCL     12038>>ASSIGN
HLPR_RES.RES.AUACCOUNT
     10738**DCL     12035>>ASSIGN
HLPR_RES.RES.MODE
     10711**DCL     12037>>ASSIGN
HLPR_RES.RES.RNAME
     10735**DCL     12039>>ASSIGN
HOST
     11398**DCL     11867<>CALL    11872>>IF      11874<<ASSIGN  11877>>IF      11879<>CALL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:136  
ILGL
     12067**LABEL   11859--GOTO    11870--GOTO    11882--GOTO    11887--GOTO    11892--GOTO    11918--CALLALT
     11921--GOTO    11952--CALLALT 11955--GOTO    11968--CALLALT 11971--GOTO    11983--GOTO    12010--CALLALT
     12050--CALLALT 12058--GOTO
ILGL IN PROCEDURE GETHLP
     12120**LABEL   12112--GOTO
IMP# IN PROCEDURE SETPRO
     12189**DCL     12257<<ASSIGN  12258>>IF      12268>>DOINDEX 12275>>IF
JMU$SETSEG
     11780**DCL-ENT 11783--CALL
KL$HSGN.PCD
     11174**DCL     11788<>CALL
KL$HSGN.PCD.ADDD.CINFO
     11222**DCL     11226--REDEF
KL$HSGN.PCD.ADDD.DEVNM
     11215**DCL     11216--REDEF
KL$HSGN.PCD.ADDD.NMID
     11229**DCL     11230--REDEF
KL$HSGN.PCD.CGINFO.ATTR
     11281**DCL     11281--REDEF
KL$HSGN.PCD.CGINFO.XTRAINFO
     11284**DCL     11286--REDEF
KL$PCD_TS.ADDD.CINFO
     10373**DCL     10377--REDEF
KL$PCD_TS.ADDD.DEVNM
     10366**DCL     10367--REDEF   12007<<ASSIGN
KL$PCD_TS.ADDD.NMID
     10380**DCL     10381--REDEF
KL$PCD_TS.TSINFO.ACCT
     10416**DCL     11998<<ASSIGN
KL$PCD_TS.TSINFO.ATTR
     10424**DCL     12004<<ASSIGN
KL$PCD_TS.TSINFO.HPSN
     10417**DCL     12000<<ASSIGN
KL$PCD_TS.TSINFO.LINES
     10422**DCL     12002<<ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:137  
KL$PCD_TS.TSINFO.NOHEADER
     10419**DCL     12006<<ASSIGN
KL$PCD_TS.TSINFO.NOSETUP
     10418**DCL     12005<<ASSIGN
KL$PCD_TS.TSINFO.UNAME
     10415**DCL     11999<<ASSIGN
KL$PCD_TS.TSINFO.WIDTH
     10423**DCL     12003<<ASSIGN
KL$PCD_TS.TSINFO.WOO
     10421**DCL     12001<<ASSIGN
KL$RQSPROFILE.HANDLER
     11379**DCL     11795>>IF      11798>>ASSIGN
KL$RQSPROFILE.NMID
     11373**DCL     11794>>ASSIGN
KL$RQSPROFILE.TERMID
     11359**DCL     11804>>ASSIGN
KL$RQSPROFILE.TERMID.TERM
     11361**DCL     11370--REDEF
KL$SGN
     11059**DCL     11896<>CALL    11896--CALL
KL$SGN.AUTOLGN
     11100**DCL     11838>>IF      11861>>IF      11895<<ASSIGN  12070>>IF
KL$SGN.LOGON
     11133**DCL     11867<>CALL
KL$SGN.LOGON.LGNSIZ
     11134**DCL     11135--IMP-SIZ 11863<<ASSIGN  11864>>ASSIGN  11867>>CALL    11896>>CALL    11896>>CALL
     14981>>ASSIGN  14984>>ASSIGN
KL$SGN.LOGON.LGNTXT
     11135**DCL     11864<<ASSIGN  14984>>ASSIGN
KL$SGN.NMID
     11118**DCL     11121--REDEF   11825>>ASSIGN  11904>>ASSIGN  12496>>ASSIGN
KL$SGN.NODE
     11063**DCL     11894<<ASSIGN  11901>>ASSIGN  11902>>ASSIGN  12072>>ASSIGN  14985>>ASSIGN
KL$SGN.PROFILE
     11104**DCL     11838>>IF      11855>>IF      11857<<ASSIGN  11934>>IF
KL$SGN.SPEED
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:138  
     11129**DCL     11905>>ASSIGN
KL$SGN.TERMINAL_ID
     11084**DCL     11844>>ASSIGN
KL$SGN.TERMINAL_ID.LEV
     11086**DCL     11906>>ASSIGN  12073>>ASSIGN  14986>>ASSIGN
KL$SGN.TERMINAL_ID.TERM
     11086**DCL     11095--REDEF
KL$SGN.TERMINAL_ID.TERM.CHANNEL
     11088**DCL     11907<>CALL    12074<>CALL    14987<>CALL
KL$SGN.TERMINAL_ID.TERM.SUBDEVICE
     11088**DCL     11908<>CALL    12075<>CALL    14989<>CALL
KL$SGN.TERMINAL_ID.TERM.SUBSUBDEVICE
     11089**DCL     11909<>CALL    12076<>CALL    14991<>CALL
KL$SGN.TERMINAL_ID.TTYP
     11086**DCL     11831>>IF      11916>>DOCASE  11942>>IF      11985>>IF      12162>>ASSIGN
KLH$ERRMSG
     11768**DCL-ENT 12337--CALL
KLH$HSGN
     11767**DCL-ENT 11788--CALL
KLH$OPFILS
     11769**DCL-ENT 11833--CALL
KLH$SGNRSP
     11771**DCL-ENT 11791--CALL
KLH$SGNTXT
     11772**DCL-ENT 12497--CALL
KLH$SGSCAN
     11770**DCL-ENT 11867--CALL
KLH$SNDHSGN
     11778**DCL-ENT 12010--CALL    12050--CALL
KLX$8TO9
     11775**DCL-ENT 11907--CALL    11908--CALL    11909--CALL    12074--CALL    12075--CALL    12076--CALL
     14987--CALL    14989--CALL    14991--CALL
KLX$CONV_NODE
     11776**DCL-ENT 11903--CALL    12078--CALL
KLX$CONV_NODENAME
     11777**DCL-ENT 11879--CALL
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:139  
KLX$WRHLPSTA
     11779**DCL-ENT 11896--CALL    12263--CALL    12279--CALL    12340--CALL    12502--CALL
KL_AUTOFAIL
      5925**DCL     11726--DCLINIT 11727--DCLINIT
KL_AUTOFAIL.CHAN
      5949**DCL     12074<>CALL
KL_AUTOFAIL.FEPNAME
      5946**DCL     12078<>CALL
KL_AUTOFAIL.FEX
      5945**DCL     12072<<ASSIGN
KL_AUTOFAIL.FLAGS
      5932**DCL      5933--REDEF
KL_AUTOFAIL.LEVEL
      5948**DCL     12073<<ASSIGN
KL_AUTOFAIL.MSGID
      5928**DCL      5929--REDEF
KL_AUTOFAIL.REASON
      5947**DCL     12077<<ASSIGN
KL_AUTOFAIL.SUBDEV
      5950**DCL     12075<>CALL
KL_AUTOFAIL.SUBSUBDEV
      5951**DCL     12076<>CALL
KL_AUTOFAIL.WSN
      5935**DCL      5936--REDEF
KL_DESTNODE
      5866**DCL     11879<>CALL    11889>>IF      11894>>ASSIGN  11899<<ASSIGN  12499>>ASSIGN
KL_FEMSG.FLAGS
      5882**DCL      5883--REDEF
KL_FEMSG.MSGID
      5878**DCL      5879--REDEF
KL_FEMSG.WSN
      5885**DCL      5886--REDEF
KL_FETBL.QOS
      5829**DCL     11889>>IF
KL_HLPFILS
      5831**DCL     11831>>IF
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:140  
KL_HLPKEY.ACCT
      5954**DCL     12099<<ASSIGN  12100--ASSIGN
KL_HLPKEY.CNT
      5953**DCL     12100<<ASSIGN
KL_HLPKEY.NAME
      5955**DCL     12101<<ASSIGN
KL_HLPR
     10440**DCL     11976<<ASSIGN  12035--ASSIGN  12037--ASSIGN  12038--ASSIGN  12039--ASSIGN
KL_HLPR.ATYP
     10445**DCL     11919>>IF      11919>>IF      11919>>IF      11923>>IF      11942>>IF      11947>>IF
     11953>>IF      11953>>IF      11953>>IF      11959>>IF      11969>>IF      11969>>IF      11969>>IF
     11989>>ASSIGN  11991>>DOCASE  12033>>IF      14971>>DOCASE  15002>>DOCASE
KL_HLPR.CGID
     10557**DCL     12021>>ASSIGN  12045--ASSIGN
KL_HLPR.COS
     10489**DCL     11990>>ASSIGN
KL_HLPR.FLAGS.NOCGINF
     10479**DCL     12023>>ASSIGN
KL_HLPR.FLAGS.NOCGREJ
     10474**DCL     12022>>ASSIGN
KL_HLPR.FLAGS.OLOK
     10458**DCL     11993>>IF
KL_HLPR.FLAGS.RNME
     10451**DCL     12025>>IF
KL_HLPR.FLAGS.USETP
     10469**DCL     12024>>ASSIGN
KL_HLPR.HPS.N
     10526**DCL     12000>>ASSIGN
KL_HLPR.INFO
     10566**DCL     12044>>ASSIGN
KL_HLPR.NWINFO
     10538**DCL     12040>>ASSIGN  12045>>ASSIGN
KL_HLPR.PASSWORD
     10498**DCL     10502--REDEF   12107>>IF
KL_HLPR.PNAME
     10504**DCL     12154--ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:141  
KL_HLPR.RENAME
     10521**DCL     10522--REDEF   12026>>ASSIGN  12033>>IF
KL_HLPR.SNAME
     10535**DCL     11987>>ASSIGN
KL_HLPR.TNAME
     10531**DCL     11974>>ASSIGN
KL_HLPR.TWSN#
     10495**DCL     11988>>ASSIGN
KL_HLPR.WOO
     10518**DCL     12001>>ASSIGN
KL_NETWORK_BUF.TERMINAL_ID.TERM
      6072**DCL      6081--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
      5998**DCL      6007--REDEF
KL_NODE
      5863**DCL     11899>>ASSIGN
KL_NODENAME
      5862**DCL     11874>>ASSIGN  11877>>IF
KL_PCD
     10158**DCL     11830--ASSIGN  11900<<ASSIGN
KL_PCD.ADDD.ACTYP
     10182**DCL     11948<<ASSIGN  11949<<ASSIGN  11960<<ASSIGN  11961<<ASSIGN  11973<<ASSIGN  11980<<ASSIGN
KL_PCD.ADDD.ASSOCTRM
     10206**DCL     11950<<ASSIGN  11962<<ASSIGN  11974<<ASSIGN  11981<<ASSIGN
KL_PCD.ADDD.ATYP
     10183**DCL     11989<<ASSIGN
KL_PCD.ADDD.CINFO
     10208**DCL     10212--REDEF
KL_PCD.ADDD.COS
     10219**DCL     11990<<ASSIGN
KL_PCD.ADDD.DEVNM
     10201**DCL     10202--REDEF   12026<<ASSIGN  12027<<ASSIGN
KL_PCD.ADDD.FEPNAME
     10186**DCL     11903<>CALL
KL_PCD.ADDD.FEX
     10185**DCL     11901<<ASSIGN  14958>>ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:142  
KL_PCD.ADDD.IO
     10187**DCL     11977<<ASSIGN  12171<<ASSIGN
KL_PCD.ADDD.NMID
     10215**DCL     10216--REDEF   11904<<ASSIGN
KL_PCD.ADDD.NOCGINF
     10193**DCL     12023<<ASSIGN
KL_PCD.ADDD.NOCGREJ
     10192**DCL     12022<<ASSIGN
KL_PCD.ADDD.SPEED
     10194**DCL     11905<<ASSIGN
KL_PCD.ADDD.TERMID.CHAN
     10198**DCL     11907<>CALL    14959>>ASSIGN
KL_PCD.ADDD.TERMID.LEV
     10196**DCL     11906<<ASSIGN  14960>>ASSIGN
KL_PCD.ADDD.TERMID.SUB
     10199**DCL     11908<>CALL    14961>>ASSIGN
KL_PCD.ADDD.TERMID.SUBSUB
     10200**DCL     11909<>CALL    14962>>ASSIGN
KL_PCD.ADDD.TERMID.TTYP
     10197**DCL     11942>>IF      11978<<ASSIGN  11985>>IF      12162<<ASSIGN  12169<<ASSIGN
KL_PCD.ADDD.TNAME
     10205**DCL     11987<<ASSIGN
KL_PCD.ADDD.TWSN
     10207**DCL     11988<<ASSIGN
KL_PCD.ADDD.USETP
     10191**DCL     12024<<ASSIGN
KL_PCD.CGID
     10239**DCL     12021<<ASSIGN
KL_PCD.CGINFO.ATTR
     10267**DCL     10267--REDEF   12028<<ASSIGN  12038<<ASSIGN
KL_PCD.CGINFO.FLG.INPUT
     10266**DCL     12029<<ASSIGN
KL_PCD.CGINFO.FLG.OUTPUT
     10266**DCL     12030<<ASSIGN
KL_PCD.CGINFO.LENGTH
     10264**DCL     12032<<ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:143  
KL_PCD.CGINFO.NWINFO
     10268**DCL     12040<<ASSIGN  12045<<ASSIGN
KL_PCD.CGINFO.RESINFO.AUACCT
     10288**DCL     12035<<ASSIGN
KL_PCD.CGINFO.RESINFO.MODE
     10273**DCL     12037<<ASSIGN
KL_PCD.CGINFO.RESINFO.RNAME
     10283**DCL     12039<<ASSIGN
KL_PCD.CGINFO.WHO.ACCT
     10265**DCL     12043<<ASSIGN
KL_PCD.CGINFO.WHO.NAME
     10265**DCL     12047<<ASSIGN
KL_PCD.CGINFO.WIDTH
     10264**DCL     12031<<ASSIGN
KL_PCD.CGINFO.XTRAINFO
     10270**DCL     10272--REDEF   12044<<ASSIGN
KL_PROBUF
     11016**DCL     11979<<ASSIGN  12160<<ASSIGN  12254--ASSIGN  12272--ASSIGN
KL_PROBUF.ATTR
     11020**DCL     12004>>ASSIGN  12028>>ASSIGN
KL_PROBUF.IMP#
     11034**DCL     12257>>ASSIGN
KL_PROBUF.IO
     11031**DCL     11997>>IF      12171>>ASSIGN
KL_PROBUF.IO.INPUT
     11032**DCL     12029>>ASSIGN
KL_PROBUF.IO.OUTPUT
     11033**DCL     12030>>ASSIGN
KL_PROBUF.LINES
     11019**DCL     12002>>ASSIGN  12032>>ASSIGN
KL_PROBUF.TTYP
     11017**DCL     12169>>ASSIGN
KL_PROBUF.WIDTH
     11018**DCL     12003>>ASSIGN  12031>>ASSIGN
KL_PROKEY
      5956**DCL     12264--ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:144  
KL_PROKEY.C
      5957**DCL     12156<<ASSIGN  12158>>IF      12264<<ASSIGN
KL_PROKEY.IMP#
      5959**DCL     12268<<DOINDEX 12275>>IF
KL_PROKEY.T
      5958**DCL     12157<<CALLBLT 12158>>IF
KL_RDBF
      5838**DCL     11785--ASSIGN
KL_RDBF.CODE
      5839**DCL     11786>>DOCASE
KL_RDBF.FEL#
      5841**DCL      5842--REDEF
KL_RDHLPR
     11616**DCL     12102<>CALL
KL_RDHLPR.STATION_
     11619**DCL     11620--REDEF
KL_RDHLPR.V.DVBYTE.REREAD#
     11631**DCL     11631--REDEF
KL_RDHLPR.V.INDX#
     11629**DCL     11629--REDEF
KL_RDPROR
     11655**DCL     12165<>CALL    12269<>CALL
KL_RDPROR.STATION_
     11658**DCL     11659--REDEF
KL_RDPROR.V.DVBYTE.REREAD#
     11670**DCL     11670--REDEF
KL_RDPROR.V.INDX#
     11668**DCL     11668--REDEF
KL_SGNRSP IN PROCEDURE SNDRJ
     12373**DCL     12494<<ASSIGN  12497<>CALL    12500--ASSIGN  12502<>CALL
KL_SGNRSP.FCN IN PROCEDURE SNDRJ
     12374**DCL     12495<<ASSIGN
KL_SGNRSP.MESSAGE.RSPSIZ IN PROCEDURE SNDRJ
     12490**DCL     12500>>ASSIGN
KL_SGNRSP.MESSAGE.RSPTXT IN PROCEDURE SNDRJ
     12491**DCL     12500--ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:145  
KL_SGNRSP.NMID IN PROCEDURE SNDRJ
     12386**DCL     12389--REDEF   12496<<ASSIGN
KL_SGNRSP.RLCID.NODE IN PROCEDURE SNDRJ
     12398**DCL     12499<<ASSIGN
KL_SGNRSP.TERMID.TERM IN PROCEDURE SNDRJ
     12476**DCL     12485--REDEF
KL_STATION
     11593**DCL     11796>>CALLBLT 11802>>CALLBLT 11842>>CALLBLT 11896<>CALL    12263<>CALL    12279<>CALL
     12340<>CALL    12502<>CALL
KL_TMSG.FLAGS
      5904**DCL      5905--REDEF
KL_TMSG.MSGID
      5900**DCL      5901--REDEF
KL_TMSG.WSN
      5907**DCL      5908--REDEF
KL_WRITE IN PROCEDURE SNDMSG
     12307**DCL     12333<<ASSIGN  12339--ASSIGN  12340<>CALL
KL_WRITE.FCN IN PROCEDURE SNDMSG
     12308**DCL     12334<<ASSIGN
KL_WRITE.MESSAGE.MSGSIZE IN PROCEDURE SNDMSG
     12324**DCL     12338<<ASSIGN  12339>>ASSIGN
KL_WRITE.MESSAGE.MSGTXT IN PROCEDURE SNDMSG
     12327**DCL     12336--ASSIGN  12337<>CALL    12339--ASSIGN
KL_WRITE.NMID IN PROCEDURE SNDMSG
     12313**DCL     12335<<ASSIGN
LINCNFG.LGN.LGNSIZE
     10033**DCL     11863>>ASSIGN
LINCNFG.LGN.LGNSTRING
     10034**DCL     11864>>ASSIGN
LINCNFG.PRO
     10029**DCL     11816>>ASSIGN  11937>>ASSIGN
LOGON
     11831**LABEL   11833--CALLALT
LOGON_TIME IN PROCEDURE UPD_USERS
     15333**DCL     15361<>CALL
LOGON_TIME.V IN PROCEDURE UPD_USERS
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:146  
     15337**DCL     15333--DCLINIT
LOGSYSACC
     11413**DCL     11868>>IF      12013>>IF      12053>>IF      12108>>IF      12118>>IF
LOG_IT IN PROCEDURE SECLOG
     15012**LABEL   14979--CALLALT 15010--CALLALT
M$DEQ
       111**DCL-ENT 15351--CALL    15369--CALL
M$ENQ
       110**DCL-ENT 15349--CALL
M$ES_USER IN PROCEDURE UPD_USERS
     15025**DCL     15343--IF
M$OPEN
        44**DCL-ENT 15344--CALL
M$PROF
     11382**DCL     12168--ASSIGN  12271--ASSIGN
M$READ
        45**DCL-ENT 11815--CALL    11853--CALL    12102--CALL    12165--CALL    12269--CALL    15350--CALL
M$TIME
       111**DCL-ENT 15361--CALL
M$TRUNC
        45**DCL-ENT 15368--CALL
M$WRITE
        45**DCL-ENT 12079--CALL    15367--CALL
M$WRSYSLOG
        93**DCL-ENT 15018--CALL
M$XXX
        56**DCL-ENT 11827--CALL
NAME
     11390**DCL     11867<>CALL
NAME.C
     11391**DCL     11967<<ASSIGN  12100>>ASSIGN  14969>>IF      14995>>IF      14999>>IF      15345>>ASSIGN
     15347>>IF
NAME.T
     11392**DCL     11999>>ASSIGN  12047>>ASSIGN  12101>>ASSIGN  14970>>ASSIGN  14996>>ASSIGN  15000>>ASSIGN
     15348>>ASSIGN
NMID
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:147  
     11399**DCL     11794<<ASSIGN  11825<<ASSIGN  12251>>ASSIGN  12335>>ASSIGN
NODETYPE
     11406**DCL     11879<>CALL    11884>>IF      11903<>CALL    12078<>CALL
NOHEADER
     11408**DCL     11867<>CALL    12006>>ASSIGN
NOPRO
     11927**LABEL   11945--GOTO
NOSETUP
     11407**DCL     11867<>CALL    12005>>ASSIGN
OPEN_USERS IN PROCEDURE UPD_USERS
     15104**DCL     15344<>CALL
OPEN_USERS.ACSVEH_ IN PROCEDURE UPD_USERS
     15106**DCL     15107--REDEF
OPEN_USERS.ALTKEYS_ IN PROCEDURE UPD_USERS
     15112**DCL     15113--REDEF   15113--REDEF
OPEN_USERS.HDR_ IN PROCEDURE UPD_USERS
     15111**DCL     15112--REDEF
OPEN_USERS.TAB_ IN PROCEDURE UPD_USERS
     15110**DCL     15111--REDEF
OPEN_USERS.UHL_ IN PROCEDURE UPD_USERS
     15104**DCL     15105--REDEF   15105--REDEF
OPEN_USERS.V IN PROCEDURE UPD_USERS
     15113**DCL     15104--DCLINIT
OPEN_USERS.V.FSN# IN PROCEDURE UPD_USERS
     15144**DCL     15144--REDEF   15144--REDEF
OPEN_USERS.WSN_ IN PROCEDURE UPD_USERS
     15110**DCL     15110--REDEF
P$
     11410**DCL     11595--IMP-PTR 12154<<ASSIGN  12155<<ASSIGN  12156>>ASSIGN  12157>>CALLBLT 12157>>CALLBLT
PCD$
     11409**DCL     10323--IMP-PTR 11830<<ASSIGN  11998>>ASSIGN  11999>>ASSIGN  12000>>ASSIGN  12001>>ASSIGN
     12002>>ASSIGN  12003>>ASSIGN  12004>>ASSIGN  12005>>ASSIGN  12006>>ASSIGN  12007>>ASSIGN
PRFRSP IN PROCEDURE SETPRO
     12206**DCL     12256--ASSIGN  12263<>CALL    12278--ASSIGN  12279<>CALL
PRFRSP.FCN IN PROCEDURE SETPRO
     12207**DCL     12249<<ASSIGN
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:148  
PRFRSP.IMP IN PROCEDURE SETPRO
     12213**DCL     12250<<ASSIGN  12265<<ASSIGN
PRFRSP.MORE IN PROCEDURE SETPRO
     12214**DCL     12260<<ASSIGN  12262<<ASSIGN  12266>>IF      12277<<ASSIGN
PRFRSP.NMID IN PROCEDURE SETPRO
     12217**DCL     12251<<ASSIGN
PRFRSP.PROFILE.PRFSIZE.BYT IN PROCEDURE SETPRO
     12231**DCL     12252<<ASSIGN  12253<<ASSIGN  12273<<ASSIGN  12274<<ASSIGN
PRFRSP.PROFILE.PRFTXT IN PROCEDURE SETPRO
     12237**DCL     12254<<ASSIGN  12256--ASSIGN  12272<<ASSIGN  12278--ASSIGN
PRO
     11395**DCL     11816<<ASSIGN  11867<>CALL    11937<<ASSIGN  12155--ASSIGN
PRO.C
     11396**DCL     11924>>IF      11928<<ASSIGN  11934>>IF      11956<<ASSIGN  12061>>IF      12153>>IF
PRO.T
     11397**DCL     11929<<ASSIGN  11957<<ASSIGN
PROH
     10753**DCL     12245--ASSIGN  12254--ASSIGN
PROWT_STA
     11751**DCL     11696--DCLINIT
PROWT_STA.MSGIDXT
     11761**DCL     11764--REDEF
PSIZ
     11403**DCL     11404--REDEF   11813<<ASSIGN  11820<<ASSIGN  11829<<ASSIGN  12152<<ASSIGN  12161<<ASSIGN
     12168<<ASSIGN  12242>>IF      12245>>ASSIGN
PW
     11393**DCL     11867<>CALL    12103>>ASSIGN  12104<>CALL    12107>>IF
RDALT IN PROCEDURE GETHLP
     12115**LABEL   12102--CALLALT
RDBF$
     11594**DCL     11059--IMP-PTR 11152--IMP-PTR 11338--IMP-PTR 11785<<ASSIGN  11788>>CALL    11794>>ASSIGN
     11795>>IF      11798>>ASSIGN  11804>>ASSIGN  11825>>ASSIGN  11831>>IF      11838>>IF      11838>>IF
     11844>>ASSIGN  11855>>IF      11857>>ASSIGN  11861>>IF      11863>>ASSIGN  11864>>ASSIGN  11864>>ASSIGN
     11867>>CALL    11867>>CALL    11894>>ASSIGN  11895>>ASSIGN  11896>>CALL    11896>>CALL    11896>>CALL
     11896>>CALL    11901>>ASSIGN  11902>>ASSIGN  11904>>ASSIGN  11905>>ASSIGN  11906>>ASSIGN  11907>>CALL
     11908>>CALL    11909>>CALL    11916>>DOCASE  11934>>IF      11942>>IF      11985>>IF      12070>>IF
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:149  
     12072>>ASSIGN  12073>>ASSIGN  12074>>CALL    12075>>CALL    12076>>CALL    12162>>ASSIGN  12496>>ASSIGN
     14981>>ASSIGN  14984>>ASSIGN  14984>>ASSIGN  14985>>ASSIGN  14986>>ASSIGN  14987>>CALL    14989>>CALL
     14991>>CALL
READ_NETCON
     10121**DCL     11815<>CALL    11853<>CALL
READ_NETCON.BUF_
     10123**DCL     11814<<ASSIGN  11851<<ASSIGN
READ_NETCON.KEY_
     10121**DCL     11799<<ASSIGN  11811<<ASSIGN  11852<<ASSIGN
READ_NETCON.STATION_
     10124**DCL     10125--REDEF
READ_NETCON.V
     10125**DCL     10121--DCLINIT
READ_NETCON.V.DVBYTE.REREAD#
     10136**DCL     10136--REDEF
READ_NETCON.V.INDX#
     10134**DCL     10134--REDEF
READ_USERS IN PROCEDURE UPD_USERS
     15209**DCL     15350<>CALL
READ_USERS.STATION_ IN PROCEDURE UPD_USERS
     15212**DCL     15213--REDEF
READ_USERS.V IN PROCEDURE UPD_USERS
     15213**DCL     15209--DCLINIT
READ_USERS.V.DVBYTE.REREAD# IN PROCEDURE UPD_USERS
     15224**DCL     15224--REDEF
READ_USERS.V.INDX# IN PROCEDURE UPD_USERS
     15222**DCL     15222--REDEF
REASON IN PROCEDURE SECLOG
     12546**DCL     12506--PROC    14947>>ASSIGN  14957>>IF      14965>>DOCASE
REASON IN PROCEDURE UPD_USERS
     15024**DCL     15022--PROC    15360>>IF      15362>>IF
RQSPROERR
     11811**LABEL   11815--CALLALT
SAVE_PW
     11394**DCL     12103<<ASSIGN  15001>>ASSIGN
SECLOG
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:150  
     12506**PROC    11869--CALL    12014--CALL    12054--CALL    12109--CALL    12119--CALL
SETPRO
     12175**PROC    11822--CALL    12009--CALL    12049--CALL
SIZ IN PROCEDURE SNDMSG
     12331**DCL     12336<<ASSIGN  12337<>CALL    12338>>ASSIGN  12339<<ASSIGN  12340<>CALL
SIZ IN PROCEDURE SNDRJ
     12357**DCL     12500<<ASSIGN  12502<>CALL
SIZE IN PROCEDURE SETPRO
     12188**DCL     12190--IMP-SIZ 12245<<ASSIGN  12246>>IF      12248<<ASSIGN  12252>>ASSIGN  12253>>ASSIGN
     12254>>ASSIGN  12256<<ASSIGN  12256>>ASSIGN  12258>>IF      12263<>CALL    12271<<ASSIGN  12272>>ASSIGN
     12273>>ASSIGN  12274>>ASSIGN  12278<<ASSIGN  12278>>ASSIGN  12279<>CALL
SLUGHLP
     10877**DCL     11976>>ASSIGN
SLUGHLP.CGID
     10994**DCL     10975--DCLINIT
SLUGHLP.PASSWORD
     10935**DCL     10939--REDEF
SLUGHLP.RENAME
     10958**DCL     10959--REDEF
SNDMSG
     12290**PROC    11927--CALL
SNDPRO
     11405**DCL     11915<<ASSIGN  11936<<ASSIGN  11940<<ASSIGN  12008>>IF      12048>>IF
SNDRJ
     12354**PROC    11834--CALL    11911--CALL    11994--CALL    12067--CALL
TSCHK
     11923**LABEL   11941--CALLALT
UPD_USERS
     15022**PROC    12015--CALL    12055--CALL    12110--CALL    14979--CALL    15010--CALL
USERS_ACCT IN PROCEDURE UPD_USERS
     15186**DCL     15109--DCLINIT
USERS_KEY IN PROCEDURE UPD_USERS
     15026**DCL     15209--DCLINIT 15210--DCLINIT 15251--DCLINIT 15279--DCLINIT
USERS_KEY.COUNT IN PROCEDURE UPD_USERS
     15027**DCL     15345<<ASSIGN
USERS_KEY.UKEY.ACCT IN PROCEDURE UPD_USERS
PL6.E3A0      #001=KLH$HLP File=KLH$HLP.:E05TSI                                  WED 07/30/97 00:47 Page:151  
     15029**DCL     15346<<ASSIGN
USERS_KEY.UKEY.UNAME IN PROCEDURE UPD_USERS
     15030**DCL     15348<<ASSIGN
USERS_NAME IN PROCEDURE UPD_USERS
     15173**DCL     15105--DCLINIT
WRITE_USERS IN PROCEDURE UPD_USERS
     15251**DCL     15367<>CALL
WRITE_USERS.STATION_ IN PROCEDURE UPD_USERS
     15253**DCL     15253--REDEF
WRITE_USERS.V IN PROCEDURE UPD_USERS
     15254**DCL     15251--DCLINIT
WRITE_USERS.V.DVBYTE.VFC# IN PROCEDURE UPD_USERS
     15260**DCL     15260--REDEF
WRTAUTOFAIL
     11725**DCL     12079<>CALL
WRTAUTOFAIL.STATION_
     11727**DCL     11727--REDEF
WRTAUTOFAIL.V
     11728**DCL     11725--DCLINIT
WRTAUTOFAIL.V.DVBYTE.VFC#
     11734**DCL     11734--REDEF
WR_SECLOG IN PROCEDURE SECLOG
     13528**DCL     15018<>CALL
WR_SECLOG.V IN PROCEDURE SECLOG
     13528**DCL     13528--DCLINIT

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:152  
      855        1        /*T***********************************************************/
      856        2        /*T*                                                         */
      857        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      858        4        /*T*                                                         */
      859        5        /*T***********************************************************/
      860        6        KLH$OPFILS: PROC ALTRET;
      861        7        /*D* NAME:        KLH$OPFILS
      862        8             PURPOSE:     To open :HLP and :PRO for SLUG
      863        9             CALL:        CALL KLH$OPFILS ALTRET(LBL);
      864       10             INPUT:       KL_HLPFILS - Value which signifies state of :HLP and :PRO
      865       11                             0 - Neither open
      866       12                             1 - :HLP open only
      867       13                             2 - :HLP and :PRO both open
      868       14             OUTPUT:      KL_HLPFILS - As stated above
      869       15             DESCRIPTION: KLH$OPFILS uses KL_HLPFILS to determine which of the
      870       16                          the two files, :HLP and :PRO to open. The desired result
      871       17                          is to have both files open. KL_HLPFILS is set to reflect
      872       18                          the state of the files. If both files end up opened,
      873       19                          KLH$OPFILS ALTRETURNs. If any errors occur, it RETURNs.
      874       20        */
      875       21        %INCLUDE CP_6;
      876      102        %INCLUDE CP_6_SUBS;
      877      642        %INCLUDE KL_DATA_R;
      878     1106        %INCLUDE B_ERRORS_C;
      879     2233    1   DCL B$TCB$ PTR SYMREF;
      880     2234        %B$TCB;
      881     2237        %B$ALT;
      882     2245    1   DCL M$HLPF DCB;
      883     2246    1   DCL M$PROF DCB;
      884     2247    1   DCL M$NETCON DCB;
      885     2248    1   DCL M$NETWORK DCB;
      886     2249    1   DCL M$WSNF DCB;
      887     2250    1   DCL M$ROUTE DCB;
      888     2251        %FPT_OPEN (FPTN=OPHLPF,STCLASS=CONSTANT,NAME=HLP,ACCT=SYS,SCRUB=YES,
      889     2252                   SHARE=ALL,ASN=FILE,FUN=IN,ACS=DIRECT,DCB=M$HLPF,CTG=YES,
      890     2253                   ORG=KEYED);
      891     2362        %FPT_OPEN (FPTN=OPENDCB,STCLASS=AUTO);
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:153  
      892     2471        %VLP_NAME (FPTN=HLP,NAME=':HLP',STCLASS=CONSTANT);
      893     2498        %VLP_NAME (FPTN=PRO,NAME=':PRO',STCLASS=CONSTANT);
      894     2525        %VLP_NAME (FPTN=NETCON,NAME=':NETCON',STCLASS=CONSTANT);
      895     2552        %VLP_NAME (FPTN=NETWORK,NAME=':NETWORK',STCLASS=CONSTANT);
      896     2579        %VLP_NAME (FPTN=WSN,NAME=':WSN',STCLASS=CONSTANT);
      897     2606        %VLP_NAME (FPTN=ROUTES,NAME=':ROUTES',STCLASS=CONSTANT);
      898     2633        %VLP_ACCT (FPTN=SYS,ACCT=':SYS',STCLASS=CONSTANT);
      899     2646        %VLP_ATTR (FPTN=NETCON_ACSVEH);
      900     2660        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='NETCON?');
      901     2677        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,DELR=YES,VEHICLE='SUPER?');
      902     2694        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='PIGETTE?');
      903     2711        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SLUG',LAST=";");
      904     2728        %VLP_ATTR (FPTN=ROUTECON_ACSVEH);
      905     2742        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='NETCON?');
      906     2759        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SUPER?');
      907     2776        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='PIGETTE?');
      908     2793        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='ROUTECON?');
      909     2810        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SLUG',LAST=";");
      910     2827        %VLP_ATTR(FPTN=NETCON_ACCESS,STCLASS=CONSTANT);
      911     2841        %VLP_ACCESS(ACCT='?',EXEC=YES,LAST=";");
      912     2858        %VLP_ATTR (FPTN=NETWORK_ACSVEH);
      913     2872        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SLUG',LAST=";");
      914     2889        %EJECT;
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:154  
      915     2890    1           OPENDCB = OPHLPF;
      916     2891    1           OPENDCB.V_ = VECTOR(OPENDCB.V);
      917     2892    1           IF KL_HLPFILS=0
      918     2893    2             THEN DO;
      919     2894    2               CALL M$OPEN (OPHLPF) ALTRET (NOPEN);
      920     2895    2               KL_HLPFILS=1;
      921     2896    2               END;
      922     2897    1           IF KL_HLPFILS=1
      923     2898    2             THEN DO;
      924     2899    2               OPENDCB.V.DCB# = DCBNUM(M$PROF);
      925     2900    2               OPENDCB.NAME_ = VECTOR(PRO);
      926     2901    2               CALL M$OPEN (OPENDCB) ALTRET (NOPEN);
      927     2902    2               KL_HLPFILS=2;
      928     2903    2               END;
      929     2904    1           OPENDCB.V.DCB# = DCBNUM(M$WSNF);
      930     2905    1           OPENDCB.NAME_ = VECTOR(WSN);
      931     2906    1           CALL M$OPEN (OPENDCB) ALTRET (NOPEN);
      932     2907
      933     2908    1   NOPEN:  ;
      934     2909
      935     2910    1           OPENDCB.V.DCB# = DCBNUM(M$NETCON);
      936     2911    1           OPENDCB.ACSVEH_ = VECTOR(NETCON_ACSVEH);
      937     2912    1           OPENDCB.V.FUN# = %UPDATE#;
      938     2913    1           OPENDCB.NAME_ = VECTOR(NETCON);
      939     2914    1           CALL M$OPEN (OPENDCB)
      940     2915    2             WHENALTRETURN DO;
      941     2916    3               IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE THEN DO;
      942     2917    3                   OPENDCB.V.FUN# = %CREATE#;
      943     2918    4                   CALL M$OPEN(OPENDCB) WHENALTRETURN DO;
      944     2919    4                       END;
      945     2920    3                   END;                    /* IF                                 */
      946     2921    2               END;
      947     2922
      948     2923    1           OPENDCB.V.DCB# = DCBNUM(M$NETWORK);
      949     2924    1           OPENDCB.V.FUN# = %CREATE#;
      950     2925    1           OPENDCB.NAME_ = VECTOR(NETWORK);
      951     2926    1           OPENDCB.ACSVEH_ = VECTOR(NETWORK_ACSVEH);
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:155  
      952     2927    2           CALL M$OPEN(OPENDCB) WHENALTRETURN DO;
      953     2928    2               END;
      954     2929    1   KLH$OPFILS_ROUTE: ENTRY ALTRET;
      955     2930        /*
      956     2931                open :route if not already open
      957     2932        */
      958     2933    2           IF KL_ROUTEOPEN = 0 THEN DO;
      959     2934    2               OPENDCB.V.DCB# = DCBNUM(M$ROUTE);
      960     2935    2               OPENDCB.ACSVEH_ = VECTOR(ROUTECON_ACSVEH);
      961     2936    2               OPENDCB.V.FUN# = %UPDATE#;
      962     2937    2               OPENDCB.NAME_ = VECTOR(ROUTES);
      963     2938    2               CALL M$OPEN (OPENDCB)
      964     2939    3                 WHENRETURN DO;
      965     2940    3                   KL_ROUTEOPEN = 1;
      966     2941    3                   END;
      967     2942    3                 WHENALTRETURN DO;
      968     2943    4                   IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE THEN DO;
      969     2944    4                       OPENDCB.V.FUN# = %CREATE#;
      970     2945    4                       CALL M$OPEN(OPENDCB)
      971     2946    5                         WHENRETURN DO;
      972     2947    5                           KL_ROUTEOPEN = 1;
      973     2948    5                           END;
      974     2949    5                         WHENALTRETURN DO;
      975     2950    5                           KL_ROUTEOPEN = 0;
      976     2951    5                           END;
      977     2952    4                       END;
      978     2953    3                   END;
      979     2954    2               END;                        /* :route not open                    */
      980     2955    1           IF KL_HLPFILS ~= 2
      981     2956    1             THEN
      982     2957    1               RETURN;
      983     2958
      984     2959
      985     2960    1           ALTRETURN;
      986     2961    1   END KLH$OPFILS;
      987     2962        %EOD;

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:156  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$OPFILS.

   Procedure KLH$OPFILS requires 123 words for executable code.
   Procedure KLH$OPFILS requires 64 words of local(AUTO) storage.

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:157  

 Object Unit name= KLH$OPFILS                                 File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:49:57.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   DCB   even  none     0      0  M$HLPF
    3   DCB   even  none     0      0  M$PROF
    4   DCB   even  none     0      0  M$NETCON
    5   DCB   even  none     0      0  M$NETWORK
    6   DCB   even  none     0      0  M$WSNF
    7   DCB   even  none     0      0  M$ROUTE
    8  RoData even  UTS     77    115  KLH$OPFILS
    9   Data  even  none    28     34  KLH$OPFILS
   10   Proc  even  none   123    173  KLH$OPFILS
   11  RoData even  none    18     22  KLH$OPFILS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes    yes     yes      Std        0  KLH$OPFILS
    10    122          yes     yes      Std        0  KLH$OPFILS_ROUTE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:158  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_HLPFILS
     KL_ROUTEOPEN                          B$TCB$                                M$HLPF
     M$PROF                                M$NETCON                              M$NETWORK
     M$WSNF                                M$ROUTE

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:159  


      855        1        /*T***********************************************************/
      856        2        /*T*                                                         */
      857        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      858        4        /*T*                                                         */
      859        5        /*T***********************************************************/
      860        6        KLH$OPFILS: PROC ALTRET;

      6 10 000000   000000 700200 xent  KLH$OPFILS   TSX0  ! X66_AUTO_0
        10 000001   000100 000000                    ZERO    64,0

      861        7        /*D* NAME:        KLH$OPFILS
      862        8             PURPOSE:     To open :HLP and :PRO for SLUG
      863        9             CALL:        CALL KLH$OPFILS ALTRET(LBL);
      864       10             INPUT:       KL_HLPFILS - Value which signifies state of :HLP and :PRO
      865       11                             0 - Neither open
      866       12                             1 - :HLP open only
      867       13                             2 - :HLP and :PRO both open
      868       14             OUTPUT:      KL_HLPFILS - As stated above
      869       15             DESCRIPTION: KLH$OPFILS uses KL_HLPFILS to determine which of the
      870       16                          the two files, :HLP and :PRO to open. The desired result
      871       17                          is to have both files open. KL_HLPFILS is set to reflect
      872       18                          the state of the files. If both files end up opened,
      873       19                          KLH$OPFILS ALTRETURNs. If any errors occur, it RETURNs.
      874       20        */
      875       21        %INCLUDE CP_6;
      876      102        %INCLUDE CP_6_SUBS;
      877      642        %INCLUDE KL_DATA_R;
      878     1106        %INCLUDE B_ERRORS_C;
      879     2233    1   DCL B$TCB$ PTR SYMREF;
      880     2234        %B$TCB;
      881     2237        %B$ALT;
      882     2245    1   DCL M$HLPF DCB;
      883     2246    1   DCL M$PROF DCB;
      884     2247    1   DCL M$NETCON DCB;
      885     2248    1   DCL M$NETWORK DCB;
      886     2249    1   DCL M$WSNF DCB;
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:160  
      887     2250    1   DCL M$ROUTE DCB;
      888     2251        %FPT_OPEN (FPTN=OPHLPF,STCLASS=CONSTANT,NAME=HLP,ACCT=SYS,SCRUB=YES,
      889     2252                   SHARE=ALL,ASN=FILE,FUN=IN,ACS=DIRECT,DCB=M$HLPF,CTG=YES,
      890     2253                   ORG=KEYED);
      891     2362        %FPT_OPEN (FPTN=OPENDCB,STCLASS=AUTO);
      892     2471        %VLP_NAME (FPTN=HLP,NAME=':HLP',STCLASS=CONSTANT);
      893     2498        %VLP_NAME (FPTN=PRO,NAME=':PRO',STCLASS=CONSTANT);
      894     2525        %VLP_NAME (FPTN=NETCON,NAME=':NETCON',STCLASS=CONSTANT);
      895     2552        %VLP_NAME (FPTN=NETWORK,NAME=':NETWORK',STCLASS=CONSTANT);
      896     2579        %VLP_NAME (FPTN=WSN,NAME=':WSN',STCLASS=CONSTANT);
      897     2606        %VLP_NAME (FPTN=ROUTES,NAME=':ROUTES',STCLASS=CONSTANT);
      898     2633        %VLP_ACCT (FPTN=SYS,ACCT=':SYS',STCLASS=CONSTANT);
      899     2646        %VLP_ATTR (FPTN=NETCON_ACSVEH);
      900     2660        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='NETCON?');
      901     2677        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,DELR=YES,VEHICLE='SUPER?');
      902     2694        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='PIGETTE?');
      903     2711        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SLUG',LAST=";");
      904     2728        %VLP_ATTR (FPTN=ROUTECON_ACSVEH);
      905     2742        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='NETCON?');
      906     2759        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SUPER?');
      907     2776        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='PIGETTE?');
      908     2793        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='ROUTECON?');
      909     2810        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SLUG',LAST=";");
      910     2827        %VLP_ATTR(FPTN=NETCON_ACCESS,STCLASS=CONSTANT);
      911     2841        %VLP_ACCESS(ACCT='?',EXEC=YES,LAST=";");
      912     2858        %VLP_ATTR (FPTN=NETWORK_ACSVEH);
      913     2872        %VLP_ACSVEH (READ=YES,UPD=YES,WNEW=YES,VEHICLE='SLUG',LAST=";");
      914     2889        %EJECT;
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:161  
      915     2890    1           OPENDCB = OPHLPF;

   2890 10 000002   000100 100400                    MLR     fill='000'O
        10 000003   000000 000350 8                  ADSC9   OPHLPF                   cn=0,n=232
        10 000004   200004 000350                    ADSC9   OPENDCB,,AUTO            cn=0,n=232

      916     2891    1           OPENDCB.V_ = VECTOR(OPENDCB.V);

   2891 10 000005   000000 235000 11                 LDA     0
        10 000006   200076 452500                    STP2    OPENDCB+58,,AUTO
        10 000007   200076 236100                    LDQ     OPENDCB+58,,AUTO
        10 000010   000050 036003                    ADLQ    40,DU
        10 000011   200004 757100                    STAQ    OPENDCB,,AUTO

      917     2892    1           IF KL_HLPFILS=0

   2892 10 000012   000000 235000 xsym               LDA     KL_HLPFILS
        10 000013   000022 601000 10                 TNZ     s:2897

      918     2893    2             THEN DO;

      919     2894    2               CALL M$OPEN (OPHLPF) ALTRET (NOPEN);

   2894 10 000014   000000 630400 8                  EPPR0   OPHLPF
        10 000015   450000 713400                    CLIMB   alt,open
        10 000016   410400 401760                    pmme    nvectors=18
        10 000017   000050 702000 10                 TSX2    NOPEN

      920     2895    2               KL_HLPFILS=1;

   2895 10 000020   000001 235007                    LDA     1,DL
        10 000021   000000 755000 xsym               STA     KL_HLPFILS

      921     2896    2               END;

      922     2897    1           IF KL_HLPFILS=1

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:162  
   2897 10 000022   000001 115007                    CMPA    1,DL
        10 000023   000037 601000 10                 TNZ     s:2904

      923     2898    2             THEN DO;

      924     2899    2               OPENDCB.V.DCB# = DCBNUM(M$PROF);

   2899 10 000024   000000 236007 xsym               LDQ     M$PROF,DL
        10 000025   000000 620006                    EAX0    0,QL
        10 000026   200050 740100                    STX0    OPENDCB+36,,AUTO

      925     2900    2               OPENDCB.NAME_ = VECTOR(PRO);

   2900 10 000027   000002 237000 11                 LDAQ    2
        10 000030   200012 757100                    STAQ    OPENDCB+6,,AUTO

      926     2901    2               CALL M$OPEN (OPENDCB) ALTRET (NOPEN);

   2901 10 000031   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000032   450000 713400                    CLIMB   alt,open
        10 000033   410400 401760                    pmme    nvectors=18
        10 000034   000050 702000 10                 TSX2    NOPEN

      927     2902    2               KL_HLPFILS=2;

   2902 10 000035   000002 235007                    LDA     2,DL
        10 000036   000000 755000 xsym               STA     KL_HLPFILS

      928     2903    2               END;

      929     2904    1           OPENDCB.V.DCB# = DCBNUM(M$WSNF);

   2904 10 000037   000000 236007 xsym               LDQ     M$WSNF,DL
        10 000040   000000 620006                    EAX0    0,QL
        10 000041   200050 740100                    STX0    OPENDCB+36,,AUTO

      930     2905    1           OPENDCB.NAME_ = VECTOR(WSN);
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:163  

   2905 10 000042   000004 237000 11                 LDAQ    4
        10 000043   200012 757100                    STAQ    OPENDCB+6,,AUTO

      931     2906    1           CALL M$OPEN (OPENDCB) ALTRET (NOPEN);

   2906 10 000044   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000045   450000 713400                    CLIMB   alt,open
        10 000046   410400 401760                    pmme    nvectors=18
        10 000047   000050 702000 10                 TSX2    NOPEN

   2905 10 000050                       NOPEN        null
      932     2907
      933     2908    1   NOPEN:  ;
      934     2909
      935     2910    1           OPENDCB.V.DCB# = DCBNUM(M$NETCON);

   2910 10 000050   000000 236007 xsym               LDQ     M$NETCON,DL
        10 000051   000000 620006                    EAX0    0,QL
        10 000052   200050 740100                    STX0    OPENDCB+36,,AUTO

      936     2911    1           OPENDCB.ACSVEH_ = VECTOR(NETCON_ACSVEH);

   2911 10 000053   000006 237000 11                 LDAQ    6
        10 000054   200020 757100                    STAQ    OPENDCB+12,,AUTO

      937     2912    1           OPENDCB.V.FUN# = %UPDATE#;

   2912 10 000055   001000 236007                    LDQ     512,DL
        10 000056   200051 552110                    STBQ    OPENDCB+37,'10'O,AUTO

      938     2913    1           OPENDCB.NAME_ = VECTOR(NETCON);

   2913 10 000057   000010 237000 11                 LDAQ    8
        10 000060   200012 757100                    STAQ    OPENDCB+6,,AUTO

      939     2914    1           CALL M$OPEN (OPENDCB)
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:164  

   2914 10 000061   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000062   450000 713400                    CLIMB   alt,open
        10 000063   410400 401760                    pmme    nvectors=18
        10 000064   000066 702000 10                 TSX2    s:2916
        10 000065   000103 710000 10                 TRA     s:2923

      940     2915    2             WHENALTRETURN DO;

      941     2916    3               IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE THEN DO;

   2916 10 000066   000000 470400 xsym               LDP0    B$TCB$
        10 000067   000000 471500                    LDP1    0,,PR0
        10 000070   100102 236100                    LDQ     66,,PR1
        10 000071   377770 376007                    ANQ     131064,DL
        10 000072   001610 116007                    CMPQ    904,DL
        10 000073   000103 601000 10                 TNZ     s:2923

      942     2917    3                   OPENDCB.V.FUN# = %CREATE#;

   2917 10 000074   003000 236007                    LDQ     1536,DL
        10 000075   200051 552110                    STBQ    OPENDCB+37,'10'O,AUTO

      943     2918    4                   CALL M$OPEN(OPENDCB) WHENALTRETURN DO;

   2918 10 000076   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000077   450000 713400                    CLIMB   alt,open
        10 000100   410400 401760                    pmme    nvectors=18
        10 000101   000103 702000 10                 TSX2    s:2923
        10 000102   000103 710000 10                 TRA     s:2923

      944     2919    4                       END;

      945     2920    3                   END;                    /* IF                                 */

      946     2921    2               END;

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:165  
      947     2922
      948     2923    1           OPENDCB.V.DCB# = DCBNUM(M$NETWORK);

   2923 10 000103   000000 236007 xsym               LDQ     M$NETWORK,DL
        10 000104   000000 620006                    EAX0    0,QL
        10 000105   200050 740100                    STX0    OPENDCB+36,,AUTO

      949     2924    1           OPENDCB.V.FUN# = %CREATE#;

   2924 10 000106   003000 236007                    LDQ     1536,DL
        10 000107   200051 552110                    STBQ    OPENDCB+37,'10'O,AUTO

      950     2925    1           OPENDCB.NAME_ = VECTOR(NETWORK);

   2925 10 000110   000012 237000 11                 LDAQ    10
        10 000111   200012 757100                    STAQ    OPENDCB+6,,AUTO

      951     2926    1           OPENDCB.ACSVEH_ = VECTOR(NETWORK_ACSVEH);

   2926 10 000112   000014 237000 11                 LDAQ    12
        10 000113   200020 757100                    STAQ    OPENDCB+12,,AUTO

      952     2927    2           CALL M$OPEN(OPENDCB) WHENALTRETURN DO;

   2927 10 000114   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000115   450000 713400                    CLIMB   alt,open
        10 000116   410400 401760                    pmme    nvectors=18
        10 000117   000121 702000 10                 TSX2    s:2928
        10 000120   000121 710000 10                 TRA     s:2928

      953     2928    2               END;

   2928 10 000121   000124 710000 10                 TRA     s:2933

      954     2929    1   KLH$OPFILS_ROUTE: ENTRY ALTRET;

   2929 10 000122   000000 700200 xent  KLH$OPFILS_* TSX0  ! X66_AUTO_0
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:166  
        10 000123   000100 000000                    ZERO    64,0

      955     2930        /*
      956     2931                open :route if not already open
      957     2932        */
      958     2933    2           IF KL_ROUTEOPEN = 0 THEN DO;

   2933 10 000124   000000 235000 xsym               LDA     KL_ROUTEOPEN
        10 000125   000166 601000 10                 TNZ     s:2955

      959     2934    2               OPENDCB.V.DCB# = DCBNUM(M$ROUTE);

   2934 10 000126   000000 236007 xsym               LDQ     M$ROUTE,DL
        10 000127   000000 620006                    EAX0    0,QL
        10 000130   200050 740100                    STX0    OPENDCB+36,,AUTO

      960     2935    2               OPENDCB.ACSVEH_ = VECTOR(ROUTECON_ACSVEH);

   2935 10 000131   000016 237000 11                 LDAQ    14
        10 000132   200020 757100                    STAQ    OPENDCB+12,,AUTO

      961     2936    2               OPENDCB.V.FUN# = %UPDATE#;

   2936 10 000133   001000 236007                    LDQ     512,DL
        10 000134   200051 552110                    STBQ    OPENDCB+37,'10'O,AUTO

      962     2937    2               OPENDCB.NAME_ = VECTOR(ROUTES);

   2937 10 000135   000020 237000 11                 LDAQ    16
        10 000136   200012 757100                    STAQ    OPENDCB+6,,AUTO

      963     2938    2               CALL M$OPEN (OPENDCB)

   2938 10 000137   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000140   450000 713400                    CLIMB   alt,open
        10 000141   410400 401760                    pmme    nvectors=18
        10 000142   000146 702000 10                 TSX2    s:2943
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:167  

      964     2939    3                 WHENRETURN DO;

      965     2940    3                   KL_ROUTEOPEN = 1;

   2940 10 000143   000001 235007                    LDA     1,DL
        10 000144   000000 755000 xsym               STA     KL_ROUTEOPEN

      966     2941    3                   END;

   2941 10 000145   000166 710000 10                 TRA     s:2955

      967     2942    3                 WHENALTRETURN DO;

      968     2943    4                   IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE = %E$NOFILE THEN DO;

   2943 10 000146   000000 470400 xsym               LDP0    B$TCB$
        10 000147   000000 471500                    LDP1    0,,PR0
        10 000150   100102 236100                    LDQ     66,,PR1
        10 000151   377770 376007                    ANQ     131064,DL
        10 000152   001610 116007                    CMPQ    904,DL
        10 000153   000166 601000 10                 TNZ     s:2955

      969     2944    4                       OPENDCB.V.FUN# = %CREATE#;

   2944 10 000154   003000 236007                    LDQ     1536,DL
        10 000155   200051 552110                    STBQ    OPENDCB+37,'10'O,AUTO

      970     2945    4                       CALL M$OPEN(OPENDCB)

   2945 10 000156   200004 630500                    EPPR0   OPENDCB,,AUTO
        10 000157   450000 713400                    CLIMB   alt,open
        10 000160   410400 401760                    pmme    nvectors=18
        10 000161   000165 702000 10                 TSX2    s:2950

      971     2946    5                         WHENRETURN DO;

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:168  
      972     2947    5                           KL_ROUTEOPEN = 1;

   2947 10 000162   000001 235007                    LDA     1,DL
        10 000163   000000 755000 xsym               STA     KL_ROUTEOPEN

      973     2948    5                           END;

   2948 10 000164   000166 710000 10                 TRA     s:2955

      974     2949    5                         WHENALTRETURN DO;

      975     2950    5                           KL_ROUTEOPEN = 0;

   2950 10 000165   000000 450000 xsym               STZ     KL_ROUTEOPEN

      976     2951    5                           END;

      977     2952    4                       END;

      978     2953    3                   END;

      979     2954    2               END;                        /* :route not open                    */

      980     2955    1           IF KL_HLPFILS ~= 2

   2955 10 000166   000000 235000 xsym               LDA     KL_HLPFILS
        10 000167   000002 115007                    CMPA    2,DL
        10 000170   000172 600000 10                 TZE     s:2960

      981     2956    1             THEN
      982     2957    1               RETURN;

   2957 10 000171   000000 702200 xent               TSX2  ! X66_ARET

      983     2958
      984     2959
      985     2960    1           ALTRETURN;
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:169  

   2960 10 000172   000000 702200 xent               TSX2  ! X66_AALT
      986     2961    1   END KLH$OPFILS;
      987     2962        %EOD;

PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:170  
--  Include file information  --

   B_ERRORS_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$OPFILS.
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:171  

 **** Variables and constants ****

  ****  Section 008 RoData KLH$OPFILS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    72-0-0/c STRC(45)    r     1 HLP                       76-0-0/c STRC(72)    r     1 NETCON
   111-0-0/w STRC(126)   r     1 NETCON_ACCESS            100-0-0/c STRC(81)    r     1 NETWORK
     0-0-0/d STRC(2088)  r     1 OPHLPF                    74-0-0/c STRC(45)    r     1 PRO
   105-0-0/c STRC(72)    r     1 ROUTES                   107-0-0/c STRC(72)    r     1 SYS
   103-0-0/c STRC(45)    r     1 WSN

  ****  Section 009  Data  KLH$OPFILS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(369)   r     1 NETCON_ACSVEH             31-0-0/w STRC(99)    r     1 NETWORK_ACSVEH
    13-0-0/w STRC(477)   r     1 ROUTECON_ACSVEH

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(2088)  r     1 OPENDCB

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w UBIN        r     1 KL_HLPFILS
     0-0-0/w UBIN        r     1 KL_ROUTEOPEN

  ****  BASED and DCB variables  ****
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:172  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0N  NULL        r     1 M$HLPF                     0-0-0N  NULL        r     1 M$NETCON
     0-0-0N  NULL        r     1 M$NETWORK                  0-0-0N  NULL        r     1 M$PROF
     0-0-0N  NULL        r     1 M$ROUTE                    0-0-0N  NULL        r     1 M$WSNF


   Procedure KLH$OPFILS requires 123 words for executable code.
   Procedure KLH$OPFILS requires 64 words of local(AUTO) storage.
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:173  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:174  
          MINI XREF LISTING

B$ALT.CODE
      2239**DCL      2239--REDEF    2240--REDEF    2240--REDEF
B$ALT.ERR.CODE
      2241**DCL      2916>>IF       2943>>IF
B$ALT.ERR.ERR#
      2241**DCL      2241--REDEF
B$ALT.EVID
      2240**DCL      2240--REDEF    2240--REDEF
B$TCB.ALT$
      2235**DCL      2916>>IF       2943>>IF
B$TCB$
      2233**DCL      2916>>IF       2943>>IF
HLP
      2496**DCL      2319--DCLINIT
KL_AUTOFAIL.FLAGS
       946**DCL       947--REDEF
KL_AUTOFAIL.MSGID
       942**DCL       943--REDEF
KL_AUTOFAIL.WSN
       949**DCL       950--REDEF
KL_FEMSG.FLAGS
       896**DCL       897--REDEF
KL_FEMSG.MSGID
       892**DCL       893--REDEF
KL_FEMSG.WSN
       899**DCL       900--REDEF
KL_HLPFILS
       845**DCL      2892>>IF       2895<<ASSIGN   2897>>IF       2902<<ASSIGN   2955>>IF
KL_NETWORK_BUF.TERMINAL_ID.TERM
      1086**DCL      1095--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
      1012**DCL      1021--REDEF
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:175  
KL_RDBF.FEL#
       855**DCL       856--REDEF
KL_ROUTEOPEN
       846**DCL      2933>>IF       2940<<ASSIGN   2947<<ASSIGN   2950<<ASSIGN
KL_TMSG.FLAGS
       918**DCL       919--REDEF
KL_TMSG.MSGID
       914**DCL       915--REDEF
KL_TMSG.WSN
       921**DCL       922--REDEF
M$NETCON
      2247**DCL      2910>>ASSIGN
M$NETWORK
      2248**DCL      2923>>ASSIGN
M$OPEN
        30**DCL-ENT  2894--CALL     2901--CALL     2906--CALL     2914--CALL     2918--CALL     2927--CALL
      2938--CALL     2945--CALL
M$PROF
      2246**DCL      2899>>ASSIGN
M$ROUTE
      2250**DCL      2934>>ASSIGN
M$WSNF
      2249**DCL      2904>>ASSIGN
NETCON
      2550**DCL      2913--ASSIGN
NETCON_ACCESS.Q
      2839**DCL      2838--DCLINIT
NETCON_ACSVEH
      2657**DCL      2911--ASSIGN
NETCON_ACSVEH.Q
      2658**DCL      2657--DCLINIT
NETWORK
      2577**DCL      2925--ASSIGN
NETWORK_ACSVEH
      2869**DCL      2926--ASSIGN
NETWORK_ACSVEH.Q
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:176  
      2870**DCL      2869--DCLINIT
NOPEN
      2905**LABEL    2894--CALLALT  2901--CALLALT  2906--CALLALT
OPENDCB
      2427**DCL      2890<<ASSIGN   2901<>CALL     2906<>CALL     2914<>CALL     2918<>CALL     2927<>CALL
      2938<>CALL     2945<>CALL
OPENDCB.ACSVEH_
      2429**DCL      2430--REDEF    2911<<ASSIGN   2926<<ASSIGN   2935<<ASSIGN
OPENDCB.ALTKEYS_
      2435**DCL      2436--REDEF    2436--REDEF
OPENDCB.HDR_
      2434**DCL      2435--REDEF
OPENDCB.NAME_
      2428**DCL      2900<<ASSIGN   2905<<ASSIGN   2913<<ASSIGN   2925<<ASSIGN   2937<<ASSIGN
OPENDCB.TAB_
      2433**DCL      2434--REDEF
OPENDCB.UHL_
      2427**DCL      2428--REDEF    2428--REDEF
OPENDCB.V
      2436**DCL      2891--ASSIGN
OPENDCB.V.DCB#
      2436**DCL      2899<<ASSIGN   2904<<ASSIGN   2910<<ASSIGN   2923<<ASSIGN   2934<<ASSIGN
OPENDCB.V.FSN#
      2467**DCL      2467--REDEF    2467--REDEF
OPENDCB.V.FUN#
      2446**DCL      2912<<ASSIGN   2917<<ASSIGN   2924<<ASSIGN   2936<<ASSIGN   2944<<ASSIGN
OPENDCB.V_
      2427**DCL      2891<<ASSIGN
OPENDCB.WSN_
      2433**DCL      2433--REDEF
OPHLPF
      2318**DCL      2890>>ASSIGN   2894<>CALL
OPHLPF.ACSVEH_
      2320**DCL      2321--REDEF
OPHLPF.ALTKEYS_
      2326**DCL      2327--REDEF    2327--REDEF
PL6.E3A0      #002=KLH$OPFILS File=KLH$HLP.:E05TSI                               WED 07/30/97 00:49 Page:177  
OPHLPF.HDR_
      2325**DCL      2326--REDEF
OPHLPF.TAB_
      2324**DCL      2325--REDEF
OPHLPF.UHL_
      2318**DCL      2319--REDEF    2319--REDEF
OPHLPF.V
      2327**DCL      2318--DCLINIT
OPHLPF.V.FSN#
      2358**DCL      2358--REDEF    2358--REDEF
OPHLPF.WSN_
      2324**DCL      2324--REDEF
PRO
      2523**DCL      2900--ASSIGN
ROUTECON_ACSVEH
      2739**DCL      2935--ASSIGN
ROUTECON_ACSVEH.Q
      2740**DCL      2739--DCLINIT
ROUTES
      2631**DCL      2937--ASSIGN
SYS
      2644**DCL      2323--DCLINIT
WSN
      2604**DCL      2905--ASSIGN

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:178  
      988        1        /*T***********************************************************/
      989        2        /*T*                                                         */
      990        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      991        4        /*T*                                                         */
      992        5        /*T***********************************************************/
      993        6        /*D* NAME:        KLH$SNDHSGN
      994        7             PURPOSE:     To get the KL_PCD structure to the right host logon
      995        8             CALL:        CALL KLH$SNDHSGN(ERRCODE) ALTRET(LBL);
      996        9             INPUT:       KL_PCD - All the information needed to tell host
      997       10                             logon so that it may log on this device
      998       11                          KL_NODE - The node number of this host.
      999       12                          KL_DESTNODE - The node number of the destination
     1000       13                             host logon
     1001       14             OUTPUT:      KL_LGNPND - A block used to remember this pending
     1002       15                             logon. Linked onto the KL_LGNPND$ list. Only
     1003       16                             built if the destination host is not this host.
     1004       17                          KL_HSGN - A message sent to the appropriate host
     1005       18                             logon; contains the KL_PCD structure. Only sent
     1006       19                             the destination host is not this host.
     1007       20                          ERRCODE - An error code returned if the write to
     1008       21                             host logon failed.
     1009       22             DESCRIPTION: KLH$SNDHSGN's job is to get KL_PCD off to the host
     1010       23                          that this device wishes to logon to. If that host is
     1011       24                          this host, KLH$SNDHSGN simply calls KLH$HSGN passing
     1012       25                          KL_PCD. Otherwise, KLH$SNDHSGN builds a KL_HSGN
     1013       26                          message and sends it to the appropriate host. We
     1014       27                          also build a KL_LGNPND block and link it onto the
     1015       28                          KL_LGNPND$ chain. This chain is used to remember
     1016       29                          host logon processes that are currently in transit
     1017       30                          outside this (network manager) host. It is used for
     1018       31                          recovery purposes if the destination host is lost.
     1019       32                          If either the KL_LGNPND block cannot be obtained or
     1020       33                          the write to the destination host fails,
     1021       34                          KLH$SNDHSGN will ALTRETURN with the error in ERRCODE.
     1022       35        */
     1023       36
     1024       37        KLH$SNDHSGN: PROC(ERRCODE) ALTRET;
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:179  
     1025       38
     1026       39        %INCLUDE CP_6;
     1027      120        %INCLUDE KC$CGBLK;
     1028      168        %INCLUDE KL_AFCN_C;
     1029      269        %INCLUDE KL_DATA_R;
     1030      733        %INCLUDE KL_MACRO_C;
     1031     4085        %INCLUDE KL_SUPER_C;
     1032     6987    1   DCL ERRCODE BIT(36) ALIGNED;
     1033     6988        %B$TCB;
     1034     6991        %B$ALT;
     1035     6999    1   DCL B$TCB$ PTR SYMREF;
     1036     7000        %KL_PCD (FPTN=KL_PCD,CG=0,STCLASS=SYMREF);
     1037     7119    1   DCL KL_STATION CHAR(8) SYMREF;
     1038     7120        %KL_HSGN (FPTN=KL_HSGN,STCLASS=AUTO,CG=1);
     1039     7306        %KL_HSGN (FPTN=KL$HSGN_TS,STCLASS=BASED,CG=0);
     1040     7446        %KL_LGNPND (FPTN=KL$LGNPND,STCLASS="BASED(PND$)");
     1041     7477        %KL_SGNRSP (FPTN=KL$SGNRSP,STCLASS="BASED(RSP$)");
     1042     7612    1   DCL RSP$ PTR;
     1043     7613    1   DCL P$ PTR;
     1044     7614    1   DCL PND$ PTR;
     1045     7615    1   DCL BSIZ UBIN;
     1046     7616    1   DCL KLB$GET ENTRY(2) ALTRET;
     1047     7617    1   DCL KLB$REL ENTRY(1) ALTRET;
     1048     7618    1   DCL KLH$HSGN ENTRY(1);
     1049     7619    1   DCL KLX$WRHLPNODE ENTRY(4) ALTRET;
     1050     7620    1   DCL KLX$WRHLPSTA  ENTRY(4) ALTRET;
     1051     7621
     1052     7622    2           IF KL_DESTNODE=KL_NODE THEN DO; /* Don't bother sending msg to self   */
     1053     7623    2               CALL KLH$HSGN(KL_PCD);
     1054     7624    2               RETURN;
     1055     7625    2               END;
     1056     7626    1           KL_HSGN='0'B;
     1057     7627    1           KL_HSGN.FCN=IGA_HSGN;
     1058     7628    1           KL_HSGN.PCD=KL_PCD;
     1059     7629    1           BSIZ=SIZEC(KL$LGNPND);
     1060     7630    2           CALL KLB$GET(PND$,BSIZ) WHENALTRETURN DO;
     1061     7631    2               ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:180  
     1062     7632    2               ALTRETURN;
     1063     7633    2               END;
     1064     7634    1           KL$LGNPND='0'B;
     1065     7635    1           KL$LGNPND.NODE=KL_DESTNODE;
     1066     7636    1           KL$LGNPND.STATION=KL_STATION;
     1067     7637    1           KL$LGNPND.SOURCE.NODE=KL_PCD.ADDD.FEX;
     1068     7638    1           KL$LGNPND.SOURCE.NMID=KL_PCD.ADDD.NMID;
     1069     7639    1           IF KL_PCD.ADDD.ATYP=%KLAT_TS#
     1070     7640    1             THEN BSIZ=SIZEC(KL$HSGN_TS);
     1071     7641    1             ELSE BSIZ=SIZEC(KL_HSGN);
     1072     7642    1           CALL KLX$WRHLPNODE(KL_HSGN,BSIZ,KL_DESTNODE)
     1073     7643    2             WHENRETURN DO;
     1074     7644    2               KL_LGNPND$=PND$;
     1075     7645    2               END;
     1076     7646    2             WHENALTRETURN DO;
     1077     7647    2               ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1078     7648    2               CALL KLB$REL(PND$);
     1079     7649    2               ALTRETURN;
     1080     7650    2               END;
     1081     7651    1           KL$LGNPND.LNK$=KL_LGNPND$;
     1082     7652    1           RETURN;
     1083     7653
     1084     7654        /*D* NAME:        KLH$SGNRSP
     1085     7655             PURPOSE:     To forward the KL_SGNRSP to the station which sent the KL_SGN
     1086     7656             DESCRIPTION: Simply forwards the message and releases the
     1087     7657                          KL_LGNPND block used to remember which station to
     1088     7658                          return this message to.
     1089     7659        */
     1090     7660
     1091     7661    1   KLH$SGNRSP: ENTRY ALTRET;               /*!!!DOESN'T ALTRET!!!*/
     1092     7662
     1093     7663    1           RSP$=ADDR(KL_RDBF);
     1094     7664    1           P$=ADDR(NIL);
     1095     7665    1           PND$=KL_LGNPND$;
     1096     7666    2           DO WHILE(PND$~=ADDR(NIL));
     1097     7667    2             IF KL$LGNPND.SOURCE.NMID=KL$SGNRSP.NMID
     1098     7668        /*         AND KL$LGNPND.SOURCE.NODE=KL$SGNRSP.SOURCE.NODE  */
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:181  
     1099     7669    3               THEN DO;
     1100     7670    3                 IF P$=ADDR(NIL)
     1101     7671    3                   THEN KL_LGNPND$=KL$LGNPND.LNK$;
     1102     7672    3                   ELSE P$->KL$LGNPND.LNK$=KL$LGNPND.LNK$;
     1103     7673    3                 CALL KLX$WRHLPSTA(KL$SGNRSP,KL_MARS,KL$LGNPND.STATION);
     1104     7674    3                 CALL KLB$REL(PND$);
     1105     7675    3                 RETURN;
     1106     7676    3                 END;
     1107     7677    3               ELSE DO;
     1108     7678    3                 P$=PND$;
     1109     7679    3                 PND$=KL$LGNPND.LNK$;
     1110     7680    3                 END;
     1111     7681    2             END;
     1112     7682        /* If we get here because we didn't find a KL$LGNPND that matched, it is OK; */
     1113     7683        /* the KL_SGN-originating node will have left us for a better silicon        */
     1114     7684        /* field somewhere.                                                          */
     1115     7685    1           RETURN;
     1116     7686    1   END KLH$SNDHSGN;
     1117     7687        %EOD;

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:182  
--  Include file information  --

   KL_SUPER_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$SNDHSGN.

   Procedure KLH$SNDHSGN requires 142 words for executable code.
   Procedure KLH$SNDHSGN requires 82 words of local(AUTO) storage.

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:183  

 Object Unit name= KLH$SNDHSGN                                File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:50:43.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   Proc  even  none   142    216  KLH$SNDHSGN
    3  RoData even  none     4      4  KLH$SNDHSGN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KLH$SNDHSGN
     2    136          yes     yes      Std        0  KLH$SGNRSP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KLH$HSGN
 yes     yes           Std       2 KLB$GET
 yes     yes           Std       4 KLX$WRHLPNODE
 yes     yes           Std       4 KLX$WRHLPSTA
 yes     yes           Std       1 KLB$REL
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:184  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_RDBF
     KL_MARS                               KL_NODE                               KL_DESTNODE
     KL_LGNPND$                            B$TCB$                                KL_PCD
     KL_STATION                            B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:185  


      988        1        /*T***********************************************************/
      989        2        /*T*                                                         */
      990        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      991        4        /*T*                                                         */
      992        5        /*T***********************************************************/
      993        6        /*D* NAME:        KLH$SNDHSGN
      994        7             PURPOSE:     To get the KL_PCD structure to the right host logon
      995        8             CALL:        CALL KLH$SNDHSGN(ERRCODE) ALTRET(LBL);
      996        9             INPUT:       KL_PCD - All the information needed to tell host
      997       10                             logon so that it may log on this device
      998       11                          KL_NODE - The node number of this host.
      999       12                          KL_DESTNODE - The node number of the destination
     1000       13                             host logon
     1001       14             OUTPUT:      KL_LGNPND - A block used to remember this pending
     1002       15                             logon. Linked onto the KL_LGNPND$ list. Only
     1003       16                             built if the destination host is not this host.
     1004       17                          KL_HSGN - A message sent to the appropriate host
     1005       18                             logon; contains the KL_PCD structure. Only sent
     1006       19                             the destination host is not this host.
     1007       20                          ERRCODE - An error code returned if the write to
     1008       21                             host logon failed.
     1009       22             DESCRIPTION: KLH$SNDHSGN's job is to get KL_PCD off to the host
     1010       23                          that this device wishes to logon to. If that host is
     1011       24                          this host, KLH$SNDHSGN simply calls KLH$HSGN passing
     1012       25                          KL_PCD. Otherwise, KLH$SNDHSGN builds a KL_HSGN
     1013       26                          message and sends it to the appropriate host. We
     1014       27                          also build a KL_LGNPND block and link it onto the
     1015       28                          KL_LGNPND$ chain. This chain is used to remember
     1016       29                          host logon processes that are currently in transit
     1017       30                          outside this (network manager) host. It is used for
     1018       31                          recovery purposes if the destination host is lost.
     1019       32                          If either the KL_LGNPND block cannot be obtained or
     1020       33                          the write to the destination host fails,
     1021       34                          KLH$SNDHSGN will ALTRETURN with the error in ERRCODE.
     1022       35        */
     1023       36
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:186  
     1024       37        KLH$SNDHSGN: PROC(ERRCODE) ALTRET;

     37  2 000000   000000 700200 xent  KLH$SNDHSGN  TSX0  ! X66_AUTO_1
         2 000001   000122 000001                    ZERO    82,1

     1025       38
     1026       39        %INCLUDE CP_6;
     1027      120        %INCLUDE KC$CGBLK;
     1028      168        %INCLUDE KL_AFCN_C;
     1029      269        %INCLUDE KL_DATA_R;
     1030      733        %INCLUDE KL_MACRO_C;
     1031     4085        %INCLUDE KL_SUPER_C;
     1032     6987    1   DCL ERRCODE BIT(36) ALIGNED;
     1033     6988        %B$TCB;
     1034     6991        %B$ALT;
     1035     6999    1   DCL B$TCB$ PTR SYMREF;
     1036     7000        %KL_PCD (FPTN=KL_PCD,CG=0,STCLASS=SYMREF);
     1037     7119    1   DCL KL_STATION CHAR(8) SYMREF;
     1038     7120        %KL_HSGN (FPTN=KL_HSGN,STCLASS=AUTO,CG=1);
     1039     7306        %KL_HSGN (FPTN=KL$HSGN_TS,STCLASS=BASED,CG=0);
     1040     7446        %KL_LGNPND (FPTN=KL$LGNPND,STCLASS="BASED(PND$)");
     1041     7477        %KL_SGNRSP (FPTN=KL$SGNRSP,STCLASS="BASED(RSP$)");
     1042     7612    1   DCL RSP$ PTR;
     1043     7613    1   DCL P$ PTR;
     1044     7614    1   DCL PND$ PTR;
     1045     7615    1   DCL BSIZ UBIN;
     1046     7616    1   DCL KLB$GET ENTRY(2) ALTRET;
     1047     7617    1   DCL KLB$REL ENTRY(1) ALTRET;
     1048     7618    1   DCL KLH$HSGN ENTRY(1);
     1049     7619    1   DCL KLX$WRHLPNODE ENTRY(4) ALTRET;
     1050     7620    1   DCL KLX$WRHLPSTA  ENTRY(4) ALTRET;
     1051     7621
     1052     7622    2           IF KL_DESTNODE=KL_NODE THEN DO; /* Don't bother sending msg to self   */

   7622  2 000002   000000 236000 xsym               LDQ     KL_DESTNODE
         2 000003   000000 116000 xsym               CMPQ    KL_NODE
         2 000004   000012 601000 2                  TNZ     s:7626
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:187  

     1053     7623    2               CALL KLH$HSGN(KL_PCD);

   7623  2 000005   000000 630400 3                  EPPR0   0
         2 000006   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000007   000000 701000 xent               TSX1    KLH$HSGN
         2 000010   000000 011000                    NOP     0

     1054     7624    2               RETURN;

   7624  2 000011   000000 702200 xent               TSX2  ! X66_ARET

     1055     7625    2               END;
     1056     7626    1           KL_HSGN='0'B;

   7626  2 000012   000100 100400                    MLR     fill='000'O
         2 000013   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000014   200004 000424                    ADSC9   KL_HSGN,,AUTO            cn=0,n=276

     1057     7627    1           KL_HSGN.FCN=IGA_HSGN;

   7627  2 000015   106000 236003                    LDQ     35840,DU
         2 000016   200004 552140                    STBQ    KL_HSGN,'40'O,AUTO

     1058     7628    1           KL_HSGN.PCD=KL_PCD;

   7628  2 000017   000100 100400                    MLR     fill='000'O
         2 000020   000000 000144 xsym               ADSC9   KL_PCD                   cn=0,n=100
         2 000021   200005 000420                    ADSC9   KL_HSGN+1,,AUTO          cn=0,n=272

     1059     7629    1           BSIZ=SIZEC(KL$LGNPND);

   7629  2 000022   000030 235007                    LDA     24,DL
         2 000023   200114 755100                    STA     BSIZ,,AUTO

     1060     7630    2           CALL KLB$GET(PND$,BSIZ) WHENALTRETURN DO;

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:188  
   7630  2 000024   200114 630500                    EPPR0   BSIZ,,AUTO
         2 000025   200117 450500                    STP0    BSIZ+3,,AUTO
         2 000026   200113 631500                    EPPR1   PND$,,AUTO
         2 000027   200116 451500                    STP1    BSIZ+2,,AUTO
         2 000030   200116 630500                    EPPR0   BSIZ+2,,AUTO
         2 000031   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000032   000000 701000 xent               TSX1    KLB$GET
         2 000033   000035 702000 2                  TSX2    s:7631
         2 000034   000043 710000 2                  TRA     s:7634

     1061     7631    2               ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   7631  2 000035   000000 470400 xsym               LDP0    B$TCB$
         2 000036   000000 471500                    LDP1    0,,PR0
         2 000037   100102 236100                    LDQ     66,,PR1
         2 000040   200003 473500                    LDP3    @ERRCODE,,AUTO
         2 000041   300000 756100                    STQ     0,,PR3

     1062     7632    2               ALTRETURN;

   7632  2 000042   000000 702200 xent               TSX2  ! X66_AALT

     1063     7633    2               END;
     1064     7634    1           KL$LGNPND='0'B;

   7634  2 000043   200113 470500                    LDP0    PND$,,AUTO
         2 000044   000100 100400                    MLR     fill='000'O
         2 000045   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000046   000000 000030                    ADSC9   0,,PR0                   cn=0,n=24

     1065     7635    1           KL$LGNPND.NODE=KL_DESTNODE;

   7635  2 000047   200113 470500                    LDP0    PND$,,AUTO
         2 000050   000000 236000 xsym               LDQ     KL_DESTNODE
         2 000051   000033 736000                    QLS     27
         2 000052   000001 552140                    STBQ    1,'40'O,PR0

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:189  
     1066     7636    1           KL$LGNPND.STATION=KL_STATION;

   7636  2 000053   200113 470500                    LDP0    PND$,,AUTO
         2 000054   040100 100400                    MLR     fill='040'O
         2 000055   000000 000010 xsym               ADSC9   KL_STATION               cn=0,n=8
         2 000056   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8

     1067     7637    1           KL$LGNPND.SOURCE.NODE=KL_PCD.ADDD.FEX;

   7637  2 000057   200113 470500                    LDP0    PND$,,AUTO
         2 000060   000000 236000 xsym               LDQ     KL_PCD
         2 000061   000033 736000                    QLS     27
         2 000062   000003 552140                    STBQ    3,'40'O,PR0

     1068     7638    1           KL$LGNPND.SOURCE.NMID=KL_PCD.ADDD.NMID;

   7638  2 000063   000015 235000 xsym               LDA     KL_PCD+13
         2 000064   000016 236000 xsym               LDQ     KL_PCD+14
         2 000065   000022 773000                    LRL     18
         2 000066   000027 376000 xsym               ANQ     B_VECTNIL+23
         2 000067   200113 470500                    LDP0    PND$,,AUTO
         2 000070   000002 756100                    STQ     2,,PR0

     1069     7639    1           IF KL_PCD.ADDD.ATYP=%KLAT_TS#

   7639  2 000071   000000 236000 xsym               LDQ     KL_PCD
         2 000072   000777 376003                    ANQ     511,DU
         2 000073   000001 116003                    CMPQ    1,DU
         2 000074   000100 601000 2                  TNZ     s:7641

     1070     7640    1             THEN BSIZ=SIZEC(KL$HSGN_TS);

   7640  2 000075   000150 235007                    LDA     104,DL
         2 000076   200114 755100                    STA     BSIZ,,AUTO
         2 000077   000102 710000 2                  TRA     s:7642

     1071     7641    1             ELSE BSIZ=SIZEC(KL_HSGN);
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:190  

   7641  2 000100   000424 235007                    LDA     276,DL
         2 000101   200114 755100                    STA     BSIZ,,AUTO

     1072     7642    1           CALL KLX$WRHLPNODE(KL_HSGN,BSIZ,KL_DESTNODE)

   7642  2 000102   000001 236000 3                  LDQ     1
         2 000103   200120 756100                    STQ     BSIZ+4,,AUTO
         2 000104   200114 630500                    EPPR0   BSIZ,,AUTO
         2 000105   200117 450500                    STP0    BSIZ+3,,AUTO
         2 000106   200004 631500                    EPPR1   KL_HSGN,,AUTO
         2 000107   200116 451500                    STP1    BSIZ+2,,AUTO
         2 000110   200116 630500                    EPPR0   BSIZ+2,,AUTO
         2 000111   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000112   000000 701000 xent               TSX1    KLX$WRHLPNODE
         2 000113   000117 702000 2                  TSX2    s:7647

     1073     7643    2             WHENRETURN DO;

     1074     7644    2               KL_LGNPND$=PND$;

   7644  2 000114   200113 236100                    LDQ     PND$,,AUTO
         2 000115   000000 756000 xsym               STQ     KL_LGNPND$

     1075     7645    2               END;

   7645  2 000116   000133 710000 2                  TRA     s:7651

     1076     7646    2             WHENALTRETURN DO;

     1077     7647    2               ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   7647  2 000117   000000 470400 xsym               LDP0    B$TCB$
         2 000120   000000 471500                    LDP1    0,,PR0
         2 000121   100102 236100                    LDQ     66,,PR1
         2 000122   200003 473500                    LDP3    @ERRCODE,,AUTO
         2 000123   300000 756100                    STQ     0,,PR3
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:191  

     1078     7648    2               CALL KLB$REL(PND$);

   7648  2 000124   200113 630500                    EPPR0   PND$,,AUTO
         2 000125   200116 450500                    STP0    BSIZ+2,,AUTO
         2 000126   200116 630500                    EPPR0   BSIZ+2,,AUTO
         2 000127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000130   000000 701000 xent               TSX1    KLB$REL
         2 000131   000000 011000                    NOP     0

     1079     7649    2               ALTRETURN;

   7649  2 000132   000000 702200 xent               TSX2  ! X66_AALT

     1080     7650    2               END;
     1081     7651    1           KL$LGNPND.LNK$=KL_LGNPND$;

   7651  2 000133   200113 470500                    LDP0    PND$,,AUTO
         2 000134   000000 756100                    STQ     0,,PR0

     1082     7652    1           RETURN;

   7652  2 000135   000000 702200 xent               TSX2  ! X66_ARET

     1083     7653
     1084     7654        /*D* NAME:        KLH$SGNRSP
     1085     7655             PURPOSE:     To forward the KL_SGNRSP to the station which sent the KL_SGN
     1086     7656             DESCRIPTION: Simply forwards the message and releases the
     1087     7657                          KL_LGNPND block used to remember which station to
     1088     7658                          return this message to.
     1089     7659        */
     1090     7660
     1091     7661    1   KLH$SGNRSP: ENTRY ALTRET;               /*!!!DOESN'T ALTRET!!!*/

   7661  2 000136   000000 700200 xent  KLH$SGNRSP   TSX0  ! X66_AUTO_1
         2 000137   000122 000001                    ZERO    82,1

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:192  
     1092     7662
     1093     7663    1           RSP$=ADDR(KL_RDBF);

   7663  2 000140   000002 236000 3                  LDQ     2
         2 000141   200111 756100                    STQ     RSP$,,AUTO

     1094     7664    1           P$=ADDR(NIL);

   7664  2 000142   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000143   200112 756100                    STQ     P$,,AUTO

     1095     7665    1           PND$=KL_LGNPND$;

   7665  2 000144   000000 236000 xsym               LDQ     KL_LGNPND$
         2 000145   200113 756100                    STQ     PND$,,AUTO

     1096     7666    2           DO WHILE(PND$~=ADDR(NIL));

   7666  2 000146   000213 710000 2                  TRA     s:7681

     1097     7667    2             IF KL$LGNPND.SOURCE.NMID=KL$SGNRSP.NMID

   7667  2 000147   200113 470500                    LDP0    PND$,,AUTO
         2 000150   200111 471500                    LDP1    RSP$,,AUTO
         2 000151   000100 106500                    CMPC    fill='000'O
         2 000152   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
         2 000153   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4
         2 000154   000207 601000 2                  TNZ     s:7678

     1098     7668        /*         AND KL$LGNPND.SOURCE.NODE=KL$SGNRSP.SOURCE.NODE  */
     1099     7669    3               THEN DO;

     1100     7670    3                 IF P$=ADDR(NIL)

   7670  2 000155   200112 236100                    LDQ     P$,,AUTO
         2 000156   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000157   000163 601000 2                  TNZ     s:7672
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:193  

     1101     7671    3                   THEN KL_LGNPND$=KL$LGNPND.LNK$;

   7671  2 000160   000000 236100                    LDQ     0,,PR0
         2 000161   000000 756000 xsym               STQ     KL_LGNPND$
         2 000162   000166 710000 2                  TRA     s:7673

     1102     7672    3                   ELSE P$->KL$LGNPND.LNK$=KL$LGNPND.LNK$;

   7672  2 000163   000000 236100                    LDQ     0,,PR0
         2 000164   200112 473500                    LDP3    P$,,AUTO
         2 000165   300000 756100                    STQ     0,,PR3

     1103     7673    3                 CALL KLX$WRHLPSTA(KL$SGNRSP,KL_MARS,KL$LGNPND.STATION);

   7673  2 000166   200113 236100                    LDQ     PND$,,AUTO
         2 000167   000004 036003                    ADLQ    4,DU
         2 000170   200120 756100                    STQ     BSIZ+4,,AUTO
         2 000171   000003 236000 3                  LDQ     3
         2 000172   200111 235100                    LDA     RSP$,,AUTO
         2 000173   200116 757100                    STAQ    BSIZ+2,,AUTO
         2 000174   200116 630500                    EPPR0   BSIZ+2,,AUTO
         2 000175   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000176   000000 701000 xent               TSX1    KLX$WRHLPSTA
         2 000177   000000 011000                    NOP     0

     1104     7674    3                 CALL KLB$REL(PND$);

   7674  2 000200   200113 630500                    EPPR0   PND$,,AUTO
         2 000201   200116 450500                    STP0    BSIZ+2,,AUTO
         2 000202   200116 630500                    EPPR0   BSIZ+2,,AUTO
         2 000203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000204   000000 701000 xent               TSX1    KLB$REL
         2 000205   000000 011000                    NOP     0

     1105     7675    3                 RETURN;

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:194  
   7675  2 000206   000000 702200 xent               TSX2  ! X66_ARET

     1106     7676    3                 END;
     1107     7677    3               ELSE DO;

     1108     7678    3                 P$=PND$;

   7678  2 000207   200113 236100                    LDQ     PND$,,AUTO
         2 000210   200112 756100                    STQ     P$,,AUTO

     1109     7679    3                 PND$=KL$LGNPND.LNK$;

   7679  2 000211   000000 236100                    LDQ     0,,PR0
         2 000212   200113 756100                    STQ     PND$,,AUTO

     1110     7680    3                 END;

     1111     7681    2             END;

   7681  2 000213   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000214   000147 601000 2                  TNZ     s:7667

     1112     7682        /* If we get here because we didn't find a KL$LGNPND that matched, it is OK; */
     1113     7683        /* the KL_SGN-originating node will have left us for a better silicon        */
     1114     7684        /* field somewhere.                                                          */
     1115     7685    1           RETURN;

   7685  2 000215   000000 702200 xent               TSX2  ! X66_ARET
     1116     7686    1   END KLH$SNDHSGN;
     1117     7687        %EOD;

PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:195  
--  Include file information  --

   KL_SUPER_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$SNDHSGN.
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:196  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ERRCODE                 114-0-0/w UBIN        r     1 BSIZ
    *0-0-0/w BIT         r     1 ERRCODE                    4-0-0/w STRC(2484)  r     1 KL_HSGN
   112-0-0/w PTR         r     1 P$                       113-0-0/w PTR         r     1 PND$
   111-0-0/w PTR         r     1 RSP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w UBIN        r     1 KL_DESTNODE
     0-0-0/w PTR         r     1 KL_LGNPND$                 0-0-0/w UBIN        r     1 KL_MARS
     0-0-0/w UBIN        r     1 KL_NODE                    0-0-0/c STRC(900)   r     1 KL_PCD
     0-0-0/w STRC(1260)  r     1 KL_RDBF                    0-0-0/c CHAR(8)     r     1 KL_STATION

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(936)   r     1 KL$HSGN_TS                 0-0-0/w STRC(216)   r     1 KL$LGNPND
     0-0-0/w STRC(297)   r     1 KL$SGNRSP


   Procedure KLH$SNDHSGN requires 142 words for executable code.
   Procedure KLH$SNDHSGN requires 82 words of local(AUTO) storage.
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:197  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:198  
          MINI XREF LISTING

B$ALT.CODE
      6993**DCL      6993--REDEF    6994--REDEF    6994--REDEF
B$ALT.ERR
      6994**DCL      7631>>ASSIGN   7647>>ASSIGN
B$ALT.ERR.ERR#
      6995**DCL      6995--REDEF
B$ALT.EVID
      6994**DCL      6994--REDEF    6994--REDEF
B$TCB.ALT$
      6989**DCL      7631>>ASSIGN   7647>>ASSIGN
B$TCB$
      6999**DCL      7631>>ASSIGN   7647>>ASSIGN
BSIZ
      7615**DCL      7629<<ASSIGN   7630<>CALL     7640<<ASSIGN   7641<<ASSIGN   7642<>CALL
ERRCODE
      6987**DCL        37--PROC     7631<<ASSIGN   7647<<ASSIGN
KL$HSGN_TS
      7321**DCL      7640--ASSIGN
KL$HSGN_TS.PCD.ADDD.CINFO
      7391**DCL      7395--REDEF
KL$HSGN_TS.PCD.ADDD.DEVNM
      7384**DCL      7385--REDEF
KL$HSGN_TS.PCD.ADDD.NMID
      7398**DCL      7399--REDEF
KL$LGNPND
      7459**DCL      7629--ASSIGN   7634<<ASSIGN
KL$LGNPND.LNK$
      7460**DCL      7651<<ASSIGN   7671>>ASSIGN   7672<<ASSIGN   7672>>ASSIGN   7679>>ASSIGN
KL$LGNPND.NODE
      7462**DCL      7635<<ASSIGN
KL$LGNPND.SOURCE.NMID
      7466**DCL      7638<<ASSIGN   7667>>IF
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:199  
KL$LGNPND.SOURCE.NODE
      7470**DCL      7637<<ASSIGN
KL$LGNPND.STATION
      7473**DCL      7636<<ASSIGN   7673<>CALL
KL$SGNRSP
      7492**DCL      7673<>CALL
KL$SGNRSP.NMID
      7505**DCL      7508--REDEF    7667>>IF
KL$SGNRSP.TERMID.TERM
      7595**DCL      7604--REDEF
KLB$GET
      7616**DCL-ENT  7630--CALL
KLB$REL
      7617**DCL-ENT  7648--CALL     7674--CALL
KLH$HSGN
      7618**DCL-ENT  7623--CALL
KLX$WRHLPNODE
      7619**DCL-ENT  7642--CALL
KLX$WRHLPSTA
      7620**DCL-ENT  7673--CALL
KL_AUTOFAIL.FLAGS
       573**DCL       574--REDEF
KL_AUTOFAIL.MSGID
       569**DCL       570--REDEF
KL_AUTOFAIL.WSN
       576**DCL       577--REDEF
KL_DESTNODE
       507**DCL      7622>>IF       7635>>ASSIGN   7642<>CALL
KL_FEMSG.FLAGS
       523**DCL       524--REDEF
KL_FEMSG.MSGID
       519**DCL       520--REDEF
KL_FEMSG.WSN
       526**DCL       527--REDEF
KL_HSGN
      7135**DCL      7626<<ASSIGN   7641--ASSIGN   7642<>CALL
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:200  
KL_HSGN.FCN
      7136**DCL      7627<<ASSIGN
KL_HSGN.PCD
      7157**DCL      7628<<ASSIGN
KL_HSGN.PCD.ADDD.CINFO
      7205**DCL      7209--REDEF
KL_HSGN.PCD.ADDD.DEVNM
      7198**DCL      7199--REDEF
KL_HSGN.PCD.ADDD.NMID
      7212**DCL      7213--REDEF
KL_HSGN.PCD.CGINFO.ATTR
      7264**DCL      7264--REDEF
KL_HSGN.PCD.CGINFO.XTRAINFO
      7267**DCL      7269--REDEF
KL_LGNPND$
       510**DCL      7644<<ASSIGN   7651>>ASSIGN   7665>>ASSIGN   7671<<ASSIGN
KL_MARS
       496**DCL      7673<>CALL
KL_NETWORK_BUF.TERMINAL_ID.TERM
       713**DCL       722--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
       639**DCL       648--REDEF
KL_NODE
       504**DCL      7622>>IF
KL_PCD
      7015**DCL      7623<>CALL     7628>>ASSIGN
KL_PCD.ADDD.ATYP
      7040**DCL      7639>>IF
KL_PCD.ADDD.CINFO
      7065**DCL      7069--REDEF
KL_PCD.ADDD.DEVNM
      7058**DCL      7059--REDEF
KL_PCD.ADDD.FEX
      7042**DCL      7637>>ASSIGN
KL_PCD.ADDD.NMID
      7072**DCL      7073--REDEF    7638>>ASSIGN
PL6.E3A0      #003=KLH$SNDHSGN File=KLH$HLP.:E05TSI                              WED 07/30/97 00:50 Page:201  
KL_RDBF
       479**DCL      7663--ASSIGN
KL_RDBF.FEL#
       482**DCL       483--REDEF
KL_STATION
      7119**DCL      7636>>ASSIGN
KL_TMSG.FLAGS
       545**DCL       546--REDEF
KL_TMSG.MSGID
       541**DCL       542--REDEF
KL_TMSG.WSN
       548**DCL       549--REDEF
P$
      7613**DCL      7664<<ASSIGN   7670>>IF       7672>>ASSIGN   7678<<ASSIGN
PND$
      7614**DCL      7459--IMP-PTR  7630<>CALL     7634>>ASSIGN   7635>>ASSIGN   7636>>ASSIGN   7637>>ASSIGN
      7638>>ASSIGN   7644>>ASSIGN   7648<>CALL     7651>>ASSIGN   7665<<ASSIGN   7666>>DOWHILE  7667>>IF
      7671>>ASSIGN   7672>>ASSIGN   7673>>CALL     7674<>CALL     7678>>ASSIGN   7679<<ASSIGN   7679>>ASSIGN
RSP$
      7612**DCL      7492--IMP-PTR  7663<<ASSIGN   7667>>IF       7673>>CALL

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:202  
     1118        1        /*T***********************************************************/
     1119        2        /*T*                                                         */
     1120        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1121        4        /*T*                                                         */
     1122        5        /*T***********************************************************/
     1123        6        /*D* NAME:        KLH$HSGN
     1124        7             PURPOSE:     To accept a KL_PCD and log the described device onto this host
     1125        8             CALL:        CALL KLH$HSGN(PCD);
     1126        9             INPUT:       PCD - A KL_PCD structure containing everything needed
     1127       10                             to log on this device
     1128       11                          KL_NODE - The node number of this host
     1129       12                          KL_NMNODE - The node number of the network manager
     1130       13                          JC_SUSR - Set if it is now legal to start users on
     1131       14                             this host.
     1132       15             OUTPUT:      o A logged on device (LDCT) onto this host (if successful)
     1133       16                          KL_SGNRSP - A response to the original KL_SGN message
     1134       17             DESCRIPTION: KLH$HSGN first checks JC_SUSR and rejects this logon
     1135       18                          outright if it is reset. JC_SUSR being reset indicates
     1136       19                          that this host is not yet ready to accept logons.
     1137       20                          KLH$HSGN accepts the PCD passed to him and
     1138       21                          tries to log on the described device. If this is
     1139       22                          a timesharing user, KLH$TSTRM is called who will in
     1140       23                          turn call M$PATHCON possibly obtaining an LDCT for
     1141       24                          the new user. If this is a comgroup device, we call
     1142       25                          M$PATHCON directly in order to attach this device
     1143       26                          to the comgroup. Once this is done, we build a
     1144       27                          KL_SGNRSP (signon response) message and send it to
     1145       28                          either KL_NMNODE if we are not the network manager
     1146       29                          or to KL_STATION if we are.
     1147       30        */
     1148       31
     1149       32        KLH$HSGN: PROC(PCD);
     1150       33
     1151       34        %INCLUDE CP_6;
     1152      115        %INCLUDE F$DCB;
     1153      164        %INCLUDE JC_MACRO_C;
     1154      278        %INCLUDE KC$CGBLK;
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:203  
     1155      326        %INCLUDE KL_AFCN_C;
     1156      427        %INCLUDE KL_DATA_R;
     1157      891        %INCLUDE KL_MACRO_C;
     1158     4243        %INCLUDE KL_ERRORS_C;
     1159     4285        %INCLUDE KL_SUBS_C;
     1160     4339        %INCLUDE KL_SUPER_C;
     1161     7241        %INCLUDE OC_MESSHD_C;
     1162     7294        %INCLUDE PC_MACRO_C;
     1163     7320        %INCLUDE QQ_MACROS_C;
     1164     7745        %INCLUDE KC_ERRORS_C;
     1165     7792        %INCLUDE JC_DATA_R;
     1166     7830        %B$TCB;
     1167     7833        %B$ALT;
     1168     7841    1   DCL B$TCB$ PTR SYMREF;
     1169     7842    1   DCL M$NETWORK DCB;
     1170     7843        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=STATIC);
     1171     7872        %FPT_WRITE (FPTN=KL_WR_NETWORK,STCLASS=SYMREF);
     1172     7903        %FPT_TIME (FPTN=KL_NETWORK_TIME,STCLASS=SYMREF);
     1173     7922        %FPT_PATHCON (FPTN=FPT_PATHCON,STCLASS=SYMREF);
     1174     7937        %VLR_PATHCON (FPTN=VLR_PATHCON,STCLASS=SYMREF);
     1175     7951        %PC$HDR(STCLASS="BASED(B$DS7$)");
     1176     7955        %PC$INSTANCE(STCLASS="BASED(INSTANCE$)");
     1177     8005        %FPT_OPEN (FPTN=OPEN_TP_CNTRL,
     1178     8006                   DCB=M$TP,
     1179     8007                   FUN=IN,
     1180     8008                   ORG=RANDOM,
     1181     8009                   ACS=DS7,
     1182     8010                   ASN=FILE,
     1183     8011                   EXIST=OLDFILE,
     1184     8012                   SHARE=ALL,
     1185     8013                   CTG=YES,
     1186     8014                   ACCT=SYSACCT,
     1187     8015                   NAME=TP_CNTRL_D);
     1188     8124        %VLP_NAME (FPTN=TP_CNTRL_D,
     1189     8125                   NAME='TP_CNTRL_D');
     1190     8152        %FPT_CLOSE (FPTN=CLOSE_TP_FILE,
     1191     8153                    DCB=M$TP,
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:204  
     1192     8154                    DISP=SAVE);
     1193     8196        %VLP_ACCT     (FPTN = SYSACCT,
     1194     8197                       ACCT = ':SYS');
     1195     8210
     1196     8211
     1197     8212        %OC_MESSHD_D  (NAME=BAD_TP_CNTRL, MSG=282, DELIM=";", STCLASS=STATIC);
     1198     8225
     1199     8226        %FPT_WRITE    (FPTN=WROCMSG, DCB=M$CSCG, BUF=BAD_TP_CNTRL);
     1200     8257
     1201     8258    1   DCL M$CSCG DCB;
     1202     8259    1   DCL M$TP DCB;
     1203     8260    1   DCL INSTANCE$ PTR;
     1204     8261
     1205     8262    1   DCL B$DS7$ PTR  SYMREF;
     1206     8263
     1207     8264    1   DCL FOUND BIT(1);
     1208     8265    1   DCL LOOP  SBIN;
     1209     8266
     1210     8267        %VLP_ERRCODE(FPTN=ERRCODE);
     1211     8312    1   DCL PCD UBIN;                           /* Dummy                              */
     1212     8313    1   DCL SGNSIZ UBIN;
     1213     8314    1   DCL TPC_GRANS SBIN;
     1214     8315    1   DCL PCD$ PTR;
     1215     8316    1   DCL BASED_CHAR CHAR(1) BASED;
     1216     8317        %KL_PCD(FPTN=KL$PCD,CG=1,STCLASS="BASED(PCD$)");
     1217     8482        %KL_PCD(FPTN=KL$PCD_TS,CG=0,STCLASS="BASED(PCD$)");
     1218     8601        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS=AUTO);
     1219     8736    1   DCL KL_STATION CHAR(8) SYMREF;
     1220     8737    1   DCL KLX$WRHLPSTA ENTRY(4) ALTRET;
     1221     8738    1   DCL KLX$WRHLPNODE ENTRY(4) ALTRET;
     1222     8739    1   DCL KLH$TSTRM ENTRY(2);
     1223     8740    1   DCL KLH$SGNTXT ENTRY(2);
     1224     8741    1   DCL KLX$9TO8 ENTRY(3);
     1225     8742
     1226     8743    1           PCD$=ADDR(PCD);
     1227     8744    1           KL_SGNRSP='0'B;
     1228     8745    1           KL_SGNRSP.FCN=IGA_SGNRSP;
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:205  
     1229     8746    1           KL_SGNRSP.NMID=KL$PCD.ADDD.NMID;
     1230     8747    1           TERMID.LEV = KL$PCD.ADDD.TERMID.LEV;
     1231     8748    1           CALL KLX$9TO8(KL$PCD.ADDD.TERMID.CHAN,TERMID.TERM.CHANNEL,2);
     1232     8749    1           CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUB,TERMID.TERM.SUBDEVICE,2);
     1233     8750    1           CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUBSUB,TERMID.TERM.SUBSUBDEVICE,2);
     1234     8751    1           KL_SGNRSP.TERMID = TERMID;
     1235     8752    1           KL_SGNRSP.COS = KL$PCD.ADDD.COS;
     1236     8753    2           IF ~JC_SUSR THEN DO;       /* LOGONs not yet allowed on this host     */
     1237     8754    2               CALL KLH$SGNTXT(KL_SGNRSP,%E$NFIL);
     1238     8755    2               END;
     1239     8756    1             ELSE IF KL$PCD.ADDD.ATYP=%KLAT_CG#
     1240     8757    1                 OR KL$PCD.ADDD.ATYP = %KLAT_RES#
     1241     8758    2                 THEN DO;
     1242     8759    2                   FPT_PATHCON.PCD_=VECTOR(KL$PCD);
     1243     8760    2                   CALL M$PATHCON (FPT_PATHCON)
     1244     8761    3                     WHENRETURN DO;
     1245     8762    3   LOGON_OK:           ;
     1246     8763    3                       KL_SGNRSP.RLCID=VLR_PATHCON.RLCID;
     1247     8764    3                       CALL KLX$9TO8(VLR_PATHCON.RLCID.LDCTX,KL_SGNRSP.RLCID.LDCTX,2);
     1248     8765    3                       TERMID.LEV = KL$PCD.ADDD.TERMID.LEV;
     1249     8766    3                       CALL KLX$9TO8(KL$PCD.ADDD.TERMID.CHAN,TERMID.TERM.CHANNEL,2);
     1250     8767    3                       CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUB,TERMID.TERM.SUBDEVICE,2);
     1251     8768    3                       CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUBSUB,TERMID.TERM.SUBSUBDEVICE
              8768                                ,2);
     1252     8769    3                       KL_NETWORK_KEY.KEY.TERMID = TERMID;
     1253     8770    3                       KL_NETWORK_KEY.SIZE = LENGTHC(KL_NETWORK_KEY.KEY);
     1254     8771    3                       KL_NETWORK_KEY.KEY.TERMID.TTYP = 0;
     1255     8772    3                       KL_NETWORK_BUF.DEVNM = KL$PCD.ADDD.DEVNM;
     1256     8773    3                       KL_NETWORK_BUF.ATYP = KL$PCD.ADDD.ATYP;
     1257     8774    3                       KL_NETWORK_BUF.TTYP = KL$PCD.ADDD.TERMID.TTYP;
     1258     8775    3                       KL_NETWORK_BUF.ACCT = KL$PCD.ADDD.ASSOCTRM;
     1259     8776    3                       KL_NETWORK_BUF.TERMNAME = KL$PCD.ADDD.TNAME;
     1260     8777    3                       KL_NETWORK_BUF.HLPKEY = KL_HLPKEY;
     1261     8778    3                       KL_NETWORK_KEY.KEY.NODE = KL$PCD.ADDD.FEX;
     1262     8779    3                       CALL M$TIME(KL_NETWORK_TIME);
     1263     8780    3                       KL_WR_NETWORK.KEY_ = VECTOR(KL_NETWORK_KEY);
     1264     8781    4                       CALL M$WRITE(KL_WR_NETWORK) WHENALTRETURN DO;
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:206  
     1265     8782                            /*N* ????????*/
     1266     8783    4                           END;            /* WHENALTRETURN                      */
     1267     8784    3                       END;
     1268     8785    3                     WHENALTRETURN DO;
     1269     8786    3                       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR ;
     1270     8787    3                       FOUND = '0'B;
     1271     8788    3                       IF (ERRCODE.ERR# = %E$NOTP) THEN
     1272     8789    4                         DO;
     1273     8790    4                           CALL M$OPEN(OPEN_TP_CNTRL) ALTRET(SKIPIT);
     1274     8791    4                           TPC_GRANS = DCBADDR(DCBNUM(M$TP))->F$DCB.NRECS;
     1275     8792    4                           IF PC$HDR.CURINSTANCES >
     1276     8793    4                             ((TPC_GRANS*1024)-5)/SIZEW(PC$INSTANCE) + 1 THEN
     1277     8794    4                               GOTO BAD_TP_CNTRL_D;
     1278     8795    4                           INSTANCE$=PINCRW(B$DS7$,SIZEW(PC$HDR));
     1279     8796    5                           DO LOOP = 1 TO PC$HDR.CURINSTANCES;
     1280     8797    5                             IF INSTANCE$->BASED_CHAR < '0' OR
     1281     8798    5                               INSTANCE$->BASED_CHAR > 'z' THEN
     1282     8799    5                                 GOTO BAD_TP_CNTRL_D;
     1283     8800    5                             IF INSTANCE$->BASED_CHAR > ':' AND
     1284     8801    5                               INSTANCE$->BASED_CHAR < 'A' THEN
     1285     8802    5                                 GOTO BAD_TP_CNTRL_D;
     1286     8803    5                             IF INSTANCE$->BASED_CHAR > 'Z' AND
     1287     8804    5                               INSTANCE$->BASED_CHAR < 'a' THEN
     1288     8805    5                                 GOTO BAD_TP_CNTRL_D;
     1289     8806    5                             IF (PC$INSTANCE.FLAGS.HEADER) AND
     1290     8807    5                               (PC$INSTANCE.INSTANCE_NAME =
     1291     8808    5                               KL$PCD.CGID.ACCT#) THEN
     1292     8809    6                               DO;
     1293     8810    6                                 KL_SGNRSP.MESSAGE.RSPTXT = PC$INSTANCE.HDR.MSG;
     1294     8811    6                                 KL_SGNRSP.MESSAGE.RSPSIZ = PC$INSTANCE.HDR.CNT;
     1295     8812    6                                 FOUND = '1'B;
     1296     8813    6                                 END;
     1297     8814    5                             INSTANCE$ = PINCRW(INSTANCE$,SIZEW(PC$INSTANCE));
     1298     8815    5                             END;
     1299     8816    5                           DO WHILE ('0'B);
     1300     8817    5   BAD_TP_CNTRL_D:           ; CALL M$WRITE(WROCMSG);
     1301     8818    5                             END;
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:207  
     1302     8819    4                           CALL M$CLOSE(CLOSE_TP_FILE) ALTRET(SKIPIT);
     1303     8820    4                           END;            /* ERR1.CODE = %E$NOTP                */
     1304     8821
     1305     8822    3   SKIPIT:             IF NOT FOUND THEN
     1306     8823    3                           CALL KLH$SGNTXT(KL_SGNRSP,ERRCODE);
     1307     8824    3                       IF ERRCODE.SEV = 0
     1308     8825    3                         THEN
     1309     8826    3                           GOTO LOGON_OK;
     1310     8827    3                       END;
     1311     8828    2                   END;
     1312     8829    2                 ELSE DO;
     1313     8830    2                   CALL KLH$TSTRM(KL$PCD_TS,KL_SGNRSP);
     1314     8831    2                   END;
     1315     8832
     1316     8833    1           SGNSIZ=LENGTHC(KL_SGNRSP)-LENGTHC(KL_SGNRSP.MESSAGE.RSPTXT)
     1317     8834    1             +KL_SGNRSP.MESSAGE.RSPSIZ;
     1318     8835    1           IF KL_NODE=KL_NMNODE
     1319     8836    1             THEN CALL KLX$WRHLPSTA(KL_SGNRSP,SGNSIZ,KL_STATION);
     1320     8837    1             ELSE CALL KLX$WRHLPNODE(KL_SGNRSP,SGNSIZ,KL_NMNODE);
     1321     8838    1           RETURN;
     1322     8839    1   END KLH$HSGN;
     1323     8840        %EOD;

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:208  
--  Include file information  --

   JC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KC_ERRORS_C.:E05TOU  is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   PC_MACRO_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$HSGN.

   Procedure KLH$HSGN requires 314 words for executable code.
   Procedure KLH$HSGN requires 42 words of local(AUTO) storage.

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:209  

 Object Unit name= KLH$HSGN                                   File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:51:24.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   DCB   even  none     0      0  M$NETWORK
    3   Data  even  none   117    165  KLH$HSGN
    4   DCB   even  none     0      0  M$CSCG
    5   DCB   even  none     0      0  M$TP
    6   Proc  even  none   314    472  KLH$HSGN
    7  RoData even  none    22     26  KLH$HSGN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes            yes      Std        1  KLH$HSGN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 KLX$9TO8
         yes           Std       2 KLH$SGNTXT
 yes     yes           Std       4 KLX$WRHLPSTA
 yes     yes           Std       4 KLX$WRHLPNODE
         yes           Std       2 KLH$TSTRM
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:210  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_NODE
     KL_NMNODE                             KL_HLPKEY                             KL_NETWORK_KEY
     KL_NETWORK_BUF                        JC_SUSR                               B$TCB$
     M$NETWORK                             KL_WR_NETWORK                         KL_NETWORK_TIME
     FPT_PATHCON                           VLR_PATHCON                           M$CSCG
     M$TP                                  B$DS7$                                KL_STATION
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:211  


     1118        1        /*T***********************************************************/
     1119        2        /*T*                                                         */
     1120        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1121        4        /*T*                                                         */
     1122        5        /*T***********************************************************/
     1123        6        /*D* NAME:        KLH$HSGN
     1124        7             PURPOSE:     To accept a KL_PCD and log the described device onto this host
     1125        8             CALL:        CALL KLH$HSGN(PCD);
     1126        9             INPUT:       PCD - A KL_PCD structure containing everything needed
     1127       10                             to log on this device
     1128       11                          KL_NODE - The node number of this host
     1129       12                          KL_NMNODE - The node number of the network manager
     1130       13                          JC_SUSR - Set if it is now legal to start users on
     1131       14                             this host.
     1132       15             OUTPUT:      o A logged on device (LDCT) onto this host (if successful)
     1133       16                          KL_SGNRSP - A response to the original KL_SGN message
     1134       17             DESCRIPTION: KLH$HSGN first checks JC_SUSR and rejects this logon
     1135       18                          outright if it is reset. JC_SUSR being reset indicates
     1136       19                          that this host is not yet ready to accept logons.
     1137       20                          KLH$HSGN accepts the PCD passed to him and
     1138       21                          tries to log on the described device. If this is
     1139       22                          a timesharing user, KLH$TSTRM is called who will in
     1140       23                          turn call M$PATHCON possibly obtaining an LDCT for
     1141       24                          the new user. If this is a comgroup device, we call
     1142       25                          M$PATHCON directly in order to attach this device
     1143       26                          to the comgroup. Once this is done, we build a
     1144       27                          KL_SGNRSP (signon response) message and send it to
     1145       28                          either KL_NMNODE if we are not the network manager
     1146       29                          or to KL_STATION if we are.
     1147       30        */
     1148       31
     1149       32        KLH$HSGN: PROC(PCD);

     32  6 000000   000000 700200 xent  KLH$HSGN     TSX0  ! X66_AUTO_1
         6 000001   000052 000001                    ZERO    42,1

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:212  
     1150       33
     1151       34        %INCLUDE CP_6;
     1152      115        %INCLUDE F$DCB;
     1153      164        %INCLUDE JC_MACRO_C;
     1154      278        %INCLUDE KC$CGBLK;
     1155      326        %INCLUDE KL_AFCN_C;
     1156      427        %INCLUDE KL_DATA_R;
     1157      891        %INCLUDE KL_MACRO_C;
     1158     4243        %INCLUDE KL_ERRORS_C;
     1159     4285        %INCLUDE KL_SUBS_C;
     1160     4339        %INCLUDE KL_SUPER_C;
     1161     7241        %INCLUDE OC_MESSHD_C;
     1162     7294        %INCLUDE PC_MACRO_C;
     1163     7320        %INCLUDE QQ_MACROS_C;
     1164     7745        %INCLUDE KC_ERRORS_C;
     1165     7792        %INCLUDE JC_DATA_R;
     1166     7830        %B$TCB;
     1167     7833        %B$ALT;
     1168     7841    1   DCL B$TCB$ PTR SYMREF;
     1169     7842    1   DCL M$NETWORK DCB;
     1170     7843        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=STATIC);
     1171     7872        %FPT_WRITE (FPTN=KL_WR_NETWORK,STCLASS=SYMREF);
     1172     7903        %FPT_TIME (FPTN=KL_NETWORK_TIME,STCLASS=SYMREF);
     1173     7922        %FPT_PATHCON (FPTN=FPT_PATHCON,STCLASS=SYMREF);
     1174     7937        %VLR_PATHCON (FPTN=VLR_PATHCON,STCLASS=SYMREF);
     1175     7951        %PC$HDR(STCLASS="BASED(B$DS7$)");
     1176     7955        %PC$INSTANCE(STCLASS="BASED(INSTANCE$)");
     1177     8005        %FPT_OPEN (FPTN=OPEN_TP_CNTRL,
     1178     8006                   DCB=M$TP,
     1179     8007                   FUN=IN,
     1180     8008                   ORG=RANDOM,
     1181     8009                   ACS=DS7,
     1182     8010                   ASN=FILE,
     1183     8011                   EXIST=OLDFILE,
     1184     8012                   SHARE=ALL,
     1185     8013                   CTG=YES,
     1186     8014                   ACCT=SYSACCT,
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:213  
     1187     8015                   NAME=TP_CNTRL_D);
     1188     8124        %VLP_NAME (FPTN=TP_CNTRL_D,
     1189     8125                   NAME='TP_CNTRL_D');
     1190     8152        %FPT_CLOSE (FPTN=CLOSE_TP_FILE,
     1191     8153                    DCB=M$TP,
     1192     8154                    DISP=SAVE);
     1193     8196        %VLP_ACCT     (FPTN = SYSACCT,
     1194     8197                       ACCT = ':SYS');
     1195     8210
     1196     8211
     1197     8212        %OC_MESSHD_D  (NAME=BAD_TP_CNTRL, MSG=282, DELIM=";", STCLASS=STATIC);
     1198     8225
     1199     8226        %FPT_WRITE    (FPTN=WROCMSG, DCB=M$CSCG, BUF=BAD_TP_CNTRL);
     1200     8257
     1201     8258    1   DCL M$CSCG DCB;
     1202     8259    1   DCL M$TP DCB;
     1203     8260    1   DCL INSTANCE$ PTR;
     1204     8261
     1205     8262    1   DCL B$DS7$ PTR  SYMREF;
     1206     8263
     1207     8264    1   DCL FOUND BIT(1);
     1208     8265    1   DCL LOOP  SBIN;
     1209     8266
     1210     8267        %VLP_ERRCODE(FPTN=ERRCODE);
     1211     8312    1   DCL PCD UBIN;                           /* Dummy                              */
     1212     8313    1   DCL SGNSIZ UBIN;
     1213     8314    1   DCL TPC_GRANS SBIN;
     1214     8315    1   DCL PCD$ PTR;
     1215     8316    1   DCL BASED_CHAR CHAR(1) BASED;
     1216     8317        %KL_PCD(FPTN=KL$PCD,CG=1,STCLASS="BASED(PCD$)");
     1217     8482        %KL_PCD(FPTN=KL$PCD_TS,CG=0,STCLASS="BASED(PCD$)");
     1218     8601        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS=AUTO);
     1219     8736    1   DCL KL_STATION CHAR(8) SYMREF;
     1220     8737    1   DCL KLX$WRHLPSTA ENTRY(4) ALTRET;
     1221     8738    1   DCL KLX$WRHLPNODE ENTRY(4) ALTRET;
     1222     8739    1   DCL KLH$TSTRM ENTRY(2);
     1223     8740    1   DCL KLH$SGNTXT ENTRY(2);
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:214  
     1224     8741    1   DCL KLX$9TO8 ENTRY(3);
     1225     8742
     1226     8743    1           PCD$=ADDR(PCD);

   8743  6 000002   200003 236100                    LDQ     @PCD,,AUTO
         6 000003   200011 756100                    STQ     PCD$,,AUTO

     1227     8744    1           KL_SGNRSP='0'B;

   8744  6 000004   000100 100400                    MLR     fill='000'O
         6 000005   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000006   200012 000160                    ADSC9   KL_SGNRSP,,AUTO          cn=0,n=112

     1228     8745    1           KL_SGNRSP.FCN=IGA_SGNRSP;

   8745  6 000007   100000 236003                    LDQ     32768,DU
         6 000010   200012 552140                    STBQ    KL_SGNRSP,'40'O,AUTO

     1229     8746    1           KL_SGNRSP.NMID=KL$PCD.ADDD.NMID;

   8746  6 000011   200011 470500                    LDP0    PCD$,,AUTO
         6 000012   000100 100500                    MLR     fill='000'O
         6 000013   000015 400004                    ADSC9   13,,PR0                  cn=2,n=4
         6 000014   200012 400004                    ADSC9   KL_SGNRSP,,AUTO          cn=2,n=4

     1230     8747    1           TERMID.LEV = KL$PCD.ADDD.TERMID.LEV;

   8747  6 000015   000003 236100                    LDQ     3,,PR0
         6 000016   000011 736000                    QLS     9
         6 000017   000000 552020 3                  STBQ    TERMID,'20'O

     1231     8748    1           CALL KLX$9TO8(KL$PCD.ADDD.TERMID.CHAN,TERMID.TERM.CHANNEL,2);

   8748  6 000020   000000 236000 7                  LDQ     0
         6 000021   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000022   000001 236000 7                  LDQ     1
         6 000023   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:215  
         6 000024   200011 236100                    LDQ     PCD$,,AUTO
         6 000025   000004 036003                    ADLQ    4,DU
         6 000026   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000027   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000030   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000031   000000 701000 xent               TSX1    KLX$9TO8
         6 000032   000000 011000                    NOP     0

     1232     8749    1           CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUB,TERMID.TERM.SUBDEVICE,2);

   8749  6 000033   000000 236000 7                  LDQ     0
         6 000034   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000035   000002 236000 7                  LDQ     2
         6 000036   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000037   200011 236100                    LDQ     PCD$,,AUTO
         6 000040   000003 036000 7                  ADLQ    3
         6 000041   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000042   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000043   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000044   000000 701000 xent               TSX1    KLX$9TO8
         6 000045   000000 011000                    NOP     0

     1233     8750    1           CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUBSUB,TERMID.TERM.SUBSUBDEVICE,2);

   8750  6 000046   000000 236000 7                  LDQ     0
         6 000047   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000050   000004 236000 7                  LDQ     4
         6 000051   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000052   200011 236100                    LDQ     PCD$,,AUTO
         6 000053   000005 036003                    ADLQ    5,DU
         6 000054   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000055   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000056   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000057   000000 701000 xent               TSX1    KLX$9TO8
         6 000060   000000 011000                    NOP     0

     1234     8751    1           KL_SGNRSP.TERMID = TERMID;
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:216  

   8751  6 000061   000100 100400                    MLR     fill='000'O
         6 000062   000000 000020 3                  ADSC9   TERMID                   cn=0,n=16
         6 000063   200015 400020                    ADSC9   KL_SGNRSP+3,,AUTO        cn=2,n=16

     1235     8752    1           KL_SGNRSP.COS = KL$PCD.ADDD.COS;

   8752  6 000064   200011 470500                    LDP0    PCD$,,AUTO
         6 000065   000016 236100                    LDQ     14,,PR0
         6 000066   200021 552110                    STBQ    KL_SGNRSP+7,'10'O,AUTO

     1236     8753    2           IF ~JC_SUSR THEN DO;       /* LOGONs not yet allowed on this host     */

   8753  6 000067   000000 236000 xsym               LDQ     JC_SUSR
         6 000070   400000 376003                    ANQ     -131072,DU
         6 000071   400000 676003                    ERQ     -131072,DU
         6 000072   000104 600000 6                  TZE     s:8756

     1237     8754    2               CALL KLH$SGNTXT(KL_SGNRSP,%E$NFIL);

   8754  6 000073   000006 236000 7                  LDQ     6
         6 000074   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000075   200012 631500                    EPPR1   KL_SGNRSP,,AUTO
         6 000076   200046 451500                    STP1    KL_SGNRSP+28,,AUTO
         6 000077   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000100   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000101   000000 701000 xent               TSX1    KLH$SGNTXT
         6 000102   000000 011000                    NOP     0

     1238     8755    2               END;

   8755  6 000103   000435 710000 6                  TRA     s:8833

     1239     8756    1             ELSE IF KL$PCD.ADDD.ATYP=%KLAT_CG#

   8756  6 000104   000000 236100                    LDQ     0,,PR0
         6 000105   000777 376003                    ANQ     511,DU
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:217  
         6 000106   000002 116003                    CMPQ    2,DU
         6 000107   000112 600000 6                  TZE     s:8759
         6 000110   000003 116003                    CMPQ    3,DU
         6 000111   000425 601000 6                  TNZ     s:8830

     1240     8757    1                 OR KL$PCD.ADDD.ATYP = %KLAT_RES#
     1241     8758    2                 THEN DO;

     1242     8759    2                   FPT_PATHCON.PCD_=VECTOR(KL$PCD);

   8759  6 000112   000007 235000 7                  LDA     7
         6 000113   200011 236100                    LDQ     PCD$,,AUTO
         6 000114   000004 757000 xsym               STAQ    FPT_PATHCON+4

     1243     8760    2                   CALL M$PATHCON (FPT_PATHCON)

   8760  6 000115   000000 630400 xsym               EPPR0   FPT_PATHCON
         6 000116   530000 713400                    CLIMB   alt,+45056
         6 000117   401000 401760                    pmme    nvectors=3
         6 000120   000253 702000 6                  TSX2    s:8786

     1244     8761    3                     WHENRETURN DO;

     1245     8762    3   LOGON_OK:           ;

   8762  6 000121                       LOGON_OK     null
     1246     8763    3                       KL_SGNRSP.RLCID=VLR_PATHCON.RLCID;

   8763  6 000121   000100 100400                    MLR     fill='000'O
         6 000122   000000 000004 xsym               ADSC9   VLR_PATHCON              cn=0,n=4
         6 000123   200013 400004                    ADSC9   KL_SGNRSP+1,,AUTO        cn=2,n=4

     1247     8764    3                       CALL KLX$9TO8(VLR_PATHCON.RLCID.LDCTX,KL_SGNRSP.RLCID.LDCTX,2);

   8764  6 000124   000000 236000 7                  LDQ     0
         6 000125   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000126   200014 630500                    EPPR0   KL_SGNRSP+2,,AUTO
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:218  
         6 000127   200047 450500                    STP0    KL_SGNRSP+29,,AUTO
         6 000130   000010 236000 7                  LDQ     8
         6 000131   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000132   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000133   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000134   000000 701000 xent               TSX1    KLX$9TO8
         6 000135   000000 011000                    NOP     0

     1248     8765    3                       TERMID.LEV = KL$PCD.ADDD.TERMID.LEV;

   8765  6 000136   200011 470500                    LDP0    PCD$,,AUTO
         6 000137   000003 236100                    LDQ     3,,PR0
         6 000140   000011 736000                    QLS     9
         6 000141   000000 552020 3                  STBQ    TERMID,'20'O

     1249     8766    3                       CALL KLX$9TO8(KL$PCD.ADDD.TERMID.CHAN,TERMID.TERM.CHANNEL,2);

   8766  6 000142   000000 236000 7                  LDQ     0
         6 000143   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000144   000001 236000 7                  LDQ     1
         6 000145   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000146   200011 236100                    LDQ     PCD$,,AUTO
         6 000147   000004 036003                    ADLQ    4,DU
         6 000150   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000151   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000152   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000153   000000 701000 xent               TSX1    KLX$9TO8
         6 000154   000000 011000                    NOP     0

     1250     8767    3                       CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUB,TERMID.TERM.SUBDEVICE,2);

   8767  6 000155   000000 236000 7                  LDQ     0
         6 000156   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000157   000002 236000 7                  LDQ     2
         6 000160   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000161   200011 236100                    LDQ     PCD$,,AUTO
         6 000162   000003 036000 7                  ADLQ    3
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:219  
         6 000163   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000164   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000165   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000166   000000 701000 xent               TSX1    KLX$9TO8
         6 000167   000000 011000                    NOP     0

     1251     8768    3                      CALL KLX$9TO8(KL$PCD.ADDD.TERMID.SUBSUB,TERMID.TERM.SUBSUBDEVICE
              8768                                ,2);

   8768  6 000170   000000 236000 7                  LDQ     0
         6 000171   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000172   000004 236000 7                  LDQ     4
         6 000173   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000174   200011 236100                    LDQ     PCD$,,AUTO
         6 000175   000005 036003                    ADLQ    5,DU
         6 000176   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000177   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000200   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000201   000000 701000 xent               TSX1    KLX$9TO8
         6 000202   000000 011000                    NOP     0

     1252     8769    3                       KL_NETWORK_KEY.KEY.TERMID = TERMID;

   8769  6 000203   000000 100400                    MLR     fill='000'O
         6 000204   000000 000020 3                  ADSC9   TERMID                   cn=0,n=16
         6 000205   000000 600020 xsym               ADSC9   KL_NETWORK_KEY           cn=3,n=16

     1253     8770    3                       KL_NETWORK_KEY.SIZE = LENGTHC(KL_NETWORK_KEY.KEY);

   8770  6 000206   022000 236003                    LDQ     9216,DU
         6 000207   000000 552040 xsym               STBQ    KL_NETWORK_KEY,'40'O

     1254     8771    3                       KL_NETWORK_KEY.KEY.TERMID.TTYP = 0;

   8771  6 000210   000000 236003                    LDQ     0,DU
         6 000211   000000 552004 xsym               STBQ    KL_NETWORK_KEY,'04'O

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:220  
     1255     8772    3                       KL_NETWORK_BUF.DEVNM = KL$PCD.ADDD.DEVNM;

   8772  6 000212   200011 470500                    LDP0    PCD$,,AUTO
         6 000213   040000 100500                    MLR     fill='040'O
         6 000214   000005 400010                    ADSC9   5,,PR0                   cn=2,n=8
         6 000215   000003 400010 xsym               ADSC9   KL_NETWORK_BUF+3         cn=2,n=8

     1256     8773    3                       KL_NETWORK_BUF.ATYP = KL$PCD.ADDD.ATYP;

   8773  6 000216   000000 236100                    LDQ     0,,PR0
         6 000217   000011 736000                    QLS     9
         6 000220   000001 552040 xsym               STBQ    KL_NETWORK_BUF+1,'40'O

     1257     8774    3                       KL_NETWORK_BUF.TTYP = KL$PCD.ADDD.TERMID.TTYP;

   8774  6 000221   000003 236100                    LDQ     3,,PR0
         6 000222   000022 736000                    QLS     18
         6 000223   000001 552020 xsym               STBQ    KL_NETWORK_BUF+1,'20'O

     1258     8775    3                       KL_NETWORK_BUF.ACCT = KL$PCD.ADDD.ASSOCTRM;

   8775  6 000224   040000 100500                    MLR     fill='040'O
         6 000225   000011 400010                    ADSC9   9,,PR0                   cn=2,n=8
         6 000226   000001 400010 xsym               ADSC9   KL_NETWORK_BUF+1         cn=2,n=8

     1259     8776    3                       KL_NETWORK_BUF.TERMNAME = KL$PCD.ADDD.TNAME;

   8776  6 000227   040000 100500                    MLR     fill='040'O
         6 000230   000007 400010                    ADSC9   7,,PR0                   cn=2,n=8
         6 000231   000005 600010 xsym               ADSC9   KL_NETWORK_BUF+5         cn=3,n=8

     1260     8777    3                       KL_NETWORK_BUF.HLPKEY = KL_HLPKEY;

   8777  6 000232   000000 100400                    MLR     fill='000'O
         6 000233   000000 000025 xsym               ADSC9   KL_HLPKEY                cn=0,n=21
         6 000234   000013 600040 xsym               ADSC9   KL_NETWORK_BUF+11        cn=3,n=32

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:221  
     1261     8778    3                       KL_NETWORK_KEY.KEY.NODE = KL$PCD.ADDD.FEX;

   8778  6 000235   000000 236100                    LDQ     0,,PR0
         6 000236   000011 736000                    QLS     9
         6 000237   000000 552010 xsym               STBQ    KL_NETWORK_KEY,'10'O

     1262     8779    3                       CALL M$TIME(KL_NETWORK_TIME);

   8779  6 000240   000000 630400 xsym               EPPR0   KL_NETWORK_TIME
         6 000241   020004 713400                    CLIMB   8196
         6 000242   402000 401760                    pmme    nvectors=5

     1263     8780    3                       KL_WR_NETWORK.KEY_ = VECTOR(KL_NETWORK_KEY);

   8780  6 000243   000012 237000 7                  LDAQ    10
         6 000244   000002 757000 xsym               STAQ    KL_WR_NETWORK+2

     1264     8781    4                       CALL M$WRITE(KL_WR_NETWORK) WHENALTRETURN DO;

   8781  6 000245   000000 630400 xsym               EPPR0   KL_WR_NETWORK
         6 000246   440001 713400                    CLIMB   alt,write
         6 000247   401400 401760                    pmme    nvectors=4
         6 000250   000252 702000 6                  TSX2    s:8784
         6 000251   000252 710000 6                  TRA     s:8784

     1265     8782                            /*N* ????????*/
     1266     8783    4                           END;            /* WHENALTRETURN                      */

     1267     8784    3                       END;

   8784  6 000252   000424 710000 6                  TRA     s:8828

     1268     8785    3                     WHENALTRETURN DO;

     1269     8786    3                       ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR ;

   8786  6 000253   000000 470400 xsym               LDP0    B$TCB$
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:222  
         6 000254   000000 471500                    LDP1    0,,PR0
         6 000255   100102 236100                    LDQ     66,,PR1
         6 000256   000164 756000 3                  STQ     ERRCODE

     1270     8787    3                       FOUND = '0'B;

   8787  6 000257   200005 450100                    STZ     FOUND,,AUTO

     1271     8788    3                       IF (ERRCODE.ERR# = %E$NOTP) THEN

   8788  6 000260   000164 236000 3                  LDQ     ERRCODE
         6 000261   377770 376007                    ANQ     131064,DL
         6 000262   016030 116007                    CMPQ    7192,DL
         6 000263   000407 601000 6                  TNZ     SKIPIT

     1272     8789    4                         DO;

     1273     8790    4                           CALL M$OPEN(OPEN_TP_CNTRL) ALTRET(SKIPIT);

   8790  6 000264   000004 630400 3                  EPPR0   OPEN_TP_CNTRL
         6 000265   450000 713400                    CLIMB   alt,open
         6 000266   410400 401760                    pmme    nvectors=18
         6 000267   000407 702000 6                  TSX2    SKIPIT

     1274     8791    4                           TPC_GRANS = DCBADDR(DCBNUM(M$TP))->F$DCB.NRECS;

   8791  6 000270   000000 236007 xsym               LDQ     M$TP,DL
         6 000271   000014 470400 7                  LDP0    12
         6 000272   000000 471500                    LDP1    0,,PR0
         6 000273   100000 473506                    LDP3    0,QL,PR1
         6 000274   300042 235100                    LDA     34,,PR3
         6 000275   200010 755100                    STA     TPC_GRANS,,AUTO

     1275     8792    4                           IF PC$HDR.CURINSTANCES >

   8792  6 000276   200010 236100                    LDQ     TPC_GRANS,,AUTO
         6 000277   000012 736000                    QLS     10
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:223  
         6 000300   000005 136007                    SBLQ    5,DL
         6 000301   000113 506007                    DIV     75,DL
         6 000302   000000 473400 xsym               LDP3    B$DS7$
         6 000303   000001 036007                    ADLQ    1,DL
         6 000304   000400 604000 6                  TMI     BAD_TP_CNTRL_D
         6 000305   300000 116100                    CMPQ    0,,PR3
         6 000306   000400 602000 6                  TNC     BAD_TP_CNTRL_D

     1276     8793    4                             ((TPC_GRANS*1024)-5)/SIZEW(PC$INSTANCE) + 1 THEN
     1277     8794    4                               GOTO BAD_TP_CNTRL_D;
     1278     8795    4                           INSTANCE$=PINCRW(B$DS7$,SIZEW(PC$HDR));

   8795  6 000307   000000 236000 xsym               LDQ     B$DS7$
         6 000310   000001 036003                    ADLQ    1,DU
         6 000311   200004 756100                    STQ     INSTANCE$,,AUTO

     1279     8796    5                           DO LOOP = 1 TO PC$HDR.CURINSTANCES;

   8796  6 000312   000001 235007                    LDA     1,DL
         6 000313   200006 755100                    STA     LOOP,,AUTO
         6 000314   000372 710000 6                  TRA     s:8815+1

     1280     8797    5                             IF INSTANCE$->BASED_CHAR < '0' OR

   8797  6 000315   200004 470500                    LDP0    INSTANCE$,,AUTO
         6 000316   040000 106500                    CMPC    fill='040'O
         6 000317   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         6 000320   000015 000001 7                  ADSC9   13                       cn=0,n=1
         6 000321   000400 602000 6                  TNC     BAD_TP_CNTRL_D
         6 000322   040100 106400                    CMPC    fill='040'O
         6 000323   000016 000001 7                  ADSC9   14                       cn=0,n=1
         6 000324   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         6 000325   000400 602000 6                  TNC     BAD_TP_CNTRL_D

     1281     8798    5                               INSTANCE$->BASED_CHAR > 'z' THEN
     1282     8799    5                                 GOTO BAD_TP_CNTRL_D;
     1283     8800    5                             IF INSTANCE$->BASED_CHAR > ':' AND
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:224  

   8800  6 000326   040100 106400                    CMPC    fill='040'O
         6 000327   000017 000001 7                  ADSC9   15                       cn=0,n=1
         6 000330   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         6 000331   000336 603000 6                  TRC     s:8803
         6 000332   040000 106500                    CMPC    fill='040'O
         6 000333   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         6 000334   000020 000001 7                  ADSC9   16                       cn=0,n=1
         6 000335   000400 602000 6                  TNC     BAD_TP_CNTRL_D

     1284     8801    5                               INSTANCE$->BASED_CHAR < 'A' THEN
     1285     8802    5                                 GOTO BAD_TP_CNTRL_D;
     1286     8803    5                             IF INSTANCE$->BASED_CHAR > 'Z' AND

   8803  6 000336   040100 106400                    CMPC    fill='040'O
         6 000337   000021 000001 7                  ADSC9   17                       cn=0,n=1
         6 000340   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         6 000341   000346 603000 6                  TRC     s:8806
         6 000342   040000 106500                    CMPC    fill='040'O
         6 000343   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         6 000344   000022 000001 7                  ADSC9   18                       cn=0,n=1
         6 000345   000400 602000 6                  TNC     BAD_TP_CNTRL_D

     1287     8804    5                               INSTANCE$->BASED_CHAR < 'a' THEN
     1288     8805    5                                 GOTO BAD_TP_CNTRL_D;
     1289     8806    5                             IF (PC$INSTANCE.FLAGS.HEADER) AND

   8806  6 000346   000003 236100                    LDQ     3,,PR0
         6 000347   100000 316003                    CANQ    32768,DU
         6 000350   000366 600000 6                  TZE     s:8814
         6 000351   200011 471500                    LDP1    PCD$,,AUTO
         6 000352   040100 106500                    CMPC    fill='040'O
         6 000353   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         6 000354   100017 000010                    ADSC9   15,,PR1                  cn=0,n=8
         6 000355   000366 601000 6                  TNZ     s:8814

     1290     8807    5                               (PC$INSTANCE.INSTANCE_NAME =
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:225  
     1291     8808    5                               KL$PCD.CGID.ACCT#) THEN
     1292     8809    6                               DO;

     1293     8810    6                                 KL_SGNRSP.MESSAGE.RSPTXT = PC$INSTANCE.HDR.MSG;

   8810  6 000356   040100 100500                    MLR     fill='040'O
         6 000357   000004 200120                    ADSC9   4,,PR0                   cn=1,n=80
         6 000360   200022 000120                    ADSC9   KL_SGNRSP+8,,AUTO        cn=0,n=80

     1294     8811    6                                 KL_SGNRSP.MESSAGE.RSPSIZ = PC$INSTANCE.HDR.CNT;

   8811  6 000361   000004 236100                    LDQ     4,,PR0
         6 000362   000033 772000                    QRL     27
         6 000363   200021 552104                    STBQ    KL_SGNRSP+7,'04'O,AUTO

     1295     8812    6                                 FOUND = '1'B;

   8812  6 000364   400000 236003                    LDQ     -131072,DU
         6 000365   200005 756100                    STQ     FOUND,,AUTO

     1296     8813    6                                 END;

     1297     8814    5                             INSTANCE$ = PINCRW(INSTANCE$,SIZEW(PC$INSTANCE));

   8814  6 000366   200004 236100                    LDQ     INSTANCE$,,AUTO
         6 000367   000113 036003                    ADLQ    75,DU
         6 000370   200004 756100                    STQ     INSTANCE$,,AUTO

     1298     8815    5                             END;

   8815  6 000371   200006 054100                    AOS     LOOP,,AUTO
         6 000372   000000 470400 xsym               LDP0    B$DS7$
         6 000373   000000 236100                    LDQ     0,,PR0
         6 000374   000315 604000 6                  TMI     s:8797
         6 000375   200006 116100                    CMPQ    LOOP,,AUTO
         6 000376   000315 605000 6                  TPL     s:8797

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:226  
     1299     8816    5                           DO WHILE ('0'B);

   8816  6 000377   000403 710000 6                  TRA     s:8819

   8814  6 000400                       BAD_TP_CNTR* null
     1300     8817    5   BAD_TP_CNTRL_D:           ; CALL M$WRITE(WROCMSG);

   8817  6 000400   000150 630400 3                  EPPR0   WROCMSG
         6 000401   040001 713400                    CLIMB   write
         6 000402   401400 401760                    pmme    nvectors=4

     1301     8818    5                             END;

     1302     8819    4                           CALL M$CLOSE(CLOSE_TP_FILE) ALTRET(SKIPIT);

   8819  6 000403   000102 630400 3                  EPPR0   CLOSE_TP_FILE
         6 000404   450001 713400                    CLIMB   alt,close
         6 000405   406000 401760                    pmme    nvectors=13
         6 000406   000407 702000 6                  TSX2    SKIPIT

     1303     8820    4                           END;            /* ERR1.CODE = %E$NOTP                */

     1304     8821
     1305     8822    3   SKIPIT:             IF NOT FOUND THEN

   8822  6 000407   200005 234100       SKIPIT       SZN     FOUND,,AUTO
         6 000410   000421 604000 6                  TMI     s:8824

     1306     8823    3                           CALL KLH$SGNTXT(KL_SGNRSP,ERRCODE);

   8823  6 000411   000023 236000 7                  LDQ     19
         6 000412   200047 756100                    STQ     KL_SGNRSP+29,,AUTO
         6 000413   200012 630500                    EPPR0   KL_SGNRSP,,AUTO
         6 000414   200046 450500                    STP0    KL_SGNRSP+28,,AUTO
         6 000415   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000416   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000417   000000 701000 xent               TSX1    KLH$SGNTXT
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:227  
         6 000420   000000 011000                    NOP     0

     1307     8824    3                       IF ERRCODE.SEV = 0

   8824  6 000421   000164 236000 3                  LDQ     ERRCODE
         6 000422   000007 316007                    CANQ    7,DL
         6 000423   000121 600000 6                  TZE     LOGON_OK

     1308     8825    3                         THEN
     1309     8826    3                           GOTO LOGON_OK;
     1310     8827    3                       END;

     1311     8828    2                   END;

   8828  6 000424   000435 710000 6                  TRA     s:8833

     1312     8829    2                 ELSE DO;

     1313     8830    2                   CALL KLH$TSTRM(KL$PCD_TS,KL_SGNRSP);

   8830  6 000425   200012 631500                    EPPR1   KL_SGNRSP,,AUTO
         6 000426   200047 451500                    STP1    KL_SGNRSP+29,,AUTO
         6 000427   200011 236100                    LDQ     PCD$,,AUTO
         6 000430   200046 756100                    STQ     KL_SGNRSP+28,,AUTO
         6 000431   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000432   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000433   000000 701000 xent               TSX1    KLH$TSTRM
         6 000434   000000 011000                    NOP     0

     1314     8831    2                   END;

     1315     8832
     1316     8833    1           SGNSIZ=LENGTHC(KL_SGNRSP)-LENGTHC(KL_SGNRSP.MESSAGE.RSPTXT)

   8833  6 000435   200021 236100                    LDQ     KL_SGNRSP+7,,AUTO
         6 000436   000777 376007                    ANQ     511,DL
         6 000437   000040 036007                    ADLQ    32,DL
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:228  
         6 000440   200007 756100                    STQ     SGNSIZ,,AUTO

     1317     8834    1             +KL_SGNRSP.MESSAGE.RSPSIZ;
     1318     8835    1           IF KL_NODE=KL_NMNODE

   8835  6 000441   000000 236000 xsym               LDQ     KL_NODE
         6 000442   000000 116000 xsym               CMPQ    KL_NMNODE
         6 000443   000457 601000 6                  TNZ     s:8837

     1319     8836    1             THEN CALL KLX$WRHLPSTA(KL_SGNRSP,SGNSIZ,KL_STATION);

   8836  6 000444   000024 236000 7                  LDQ     20
         6 000445   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000446   200007 630500                    EPPR0   SGNSIZ,,AUTO
         6 000447   200047 450500                    STP0    KL_SGNRSP+29,,AUTO
         6 000450   200012 631500                    EPPR1   KL_SGNRSP,,AUTO
         6 000451   200046 451500                    STP1    KL_SGNRSP+28,,AUTO
         6 000452   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000453   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000454   000000 701000 xent               TSX1    KLX$WRHLPSTA
         6 000455   000000 011000                    NOP     0
         6 000456   000471 710000 6                  TRA     s:8838

     1320     8837    1             ELSE CALL KLX$WRHLPNODE(KL_SGNRSP,SGNSIZ,KL_NMNODE);

   8837  6 000457   000025 236000 7                  LDQ     21
         6 000460   200050 756100                    STQ     KL_SGNRSP+30,,AUTO
         6 000461   200007 630500                    EPPR0   SGNSIZ,,AUTO
         6 000462   200047 450500                    STP0    KL_SGNRSP+29,,AUTO
         6 000463   200012 631500                    EPPR1   KL_SGNRSP,,AUTO
         6 000464   200046 451500                    STP1    KL_SGNRSP+28,,AUTO
         6 000465   200046 630500                    EPPR0   KL_SGNRSP+28,,AUTO
         6 000466   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000467   000000 701000 xent               TSX1    KLX$WRHLPNODE
         6 000470   000000 011000                    NOP     0

     1321     8838    1           RETURN;
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:229  

   8838  6 000471   000000 702200 xent               TSX2  ! X66_ARET
     1322     8839    1   END KLH$HSGN;
     1323     8840        %EOD;

PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:230  
--  Include file information  --

   JC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KC_ERRORS_C.:E05TOU  is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   PC_MACRO_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$HSGN.
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:231  

 **** Variables and constants ****

  ****  Section 003  Data  KLH$HSGN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   142-0-0/c STRC(180)   r     1 BAD_TP_CNTRL             102-0-0/d STRC(1080)  r     1 CLOSE_TP_FILE
   164-0-0/w STRC        r     1 ERRCODE                    4-0-0/d STRC(2088)  r     1 OPEN_TP_CNTRL
   140-0-0/c STRC(72)    r     1 SYSACCT                    0-0-0/c STRC(144)   r     1 TERMID
    76-0-0/c STRC(99)    r     1 TP_CNTRL_D               150-0-0/d STRC(432)   r     1 WROCMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PCD                       5-0-0/b BIT         r     1 FOUND
     4-0-0/w PTR         r     1 INSTANCE$                 12-0-0/w STRC(1008)  r     1 KL_SGNRSP
     6-0-0/w SBIN        r     1 LOOP                      *0-0-0/w UBIN        r     1 PCD
    11-0-0/w PTR         r     1 PCD$                       7-0-0/w UBIN        r     1 SGNSIZ
    10-0-0/w SBIN        r     1 TPC_GRANS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$DS7$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(288)   r     1 FPT_PATHCON                0-0-0/w BIT         r     1 JC_SUSR
     0-0-0/d STRC(189)   r     1 KL_HLPKEY                  0-0-0/w STRC(711)   r     1 KL_NETWORK_BUF
     0-0-0/w STRC(171)   r     1 KL_NETWORK_KEY             0-0-0/d STRC(432)   r     1 KL_NETWORK_TIME
     0-0-0/w UBIN        r     1 KL_NMNODE                  0-0-0/w UBIN        r     1 KL_NODE
     0-0-0/c CHAR(8)     r     1 KL_STATION                 0-0-0/d STRC(432)   r     1 KL_WR_NETWORK
     0-0-0/d STRC        r     1 VLR_PATHCON

  ****  BASED and DCB variables  ****
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:232  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c CHAR        r     1 BASED_CHAR                 0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(2448)  r     1 KL$PCD                     0-0-0/c STRC(900)   r     1 KL$PCD_TS
     0-0-0N  NULL        r     1 M$CSCG                     0-0-0N  NULL        r     1 M$TP
     0-0-0/w STRC        r     1 PC$HDR                     0-0-0/w STRC(2700)  r     1 PC$INSTANCE


   Procedure KLH$HSGN requires 314 words for executable code.
   Procedure KLH$HSGN requires 42 words of local(AUTO) storage.
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:233  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:234  
          MINI XREF LISTING

B$ALT.CODE
      7835**DCL      7835--REDEF    7836--REDEF    7836--REDEF
B$ALT.ERR
      7836**DCL      8786>>ASSIGN
B$ALT.ERR.ERR#
      7837**DCL      7837--REDEF
B$ALT.EVID
      7836**DCL      7836--REDEF    7836--REDEF
B$DS7$
      8262**DCL      7952--IMP-PTR  8792>>IF       8795>>ASSIGN   8796>>DOINDEX
B$TCB.ALT$
      7831**DCL      8786>>ASSIGN
B$TCB$
      7841**DCL      8786>>ASSIGN
BAD_TP_CNTRL
      8213**DCL      8244--DCLINIT  8245--DCLINIT
BAD_TP_CNTRL.FLAGS
      8220**DCL      8221--REDEF
BAD_TP_CNTRL.MSGID
      8216**DCL      8217--REDEF
BAD_TP_CNTRL_D
      8814**LABEL    8794--GOTO     8799--GOTO     8802--GOTO     8805--GOTO
BASED_CHAR
      8316**DCL      8797>>IF       8797>>IF       8800>>IF       8800>>IF       8803>>IF       8803>>IF
CLOSE_TP_FILE
      8177**DCL      8819<>CALL
CLOSE_TP_FILE.SN_
      8177**DCL      8177--REDEF
CLOSE_TP_FILE.UTL_
      8178**DCL      8178--REDEF
CLOSE_TP_FILE.V
      8182**DCL      8177--DCLINIT
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:235  
CLOSE_TP_FILE.V.EXPIRE#
      8192**DCL      8192--REDEF
CLOSE_TP_FILE.V.TYPE#
      8190**DCL      8190--REDEF
CLOSE_TP_FILE.V.XTNSIZE#
      8187**DCL      8187--REDEF    8189--REDEF
ERRCODE
      8279**DCL      8786<<ASSIGN   8823<>CALL
ERRCODE.ERR#
      8309**DCL      8788>>IF
ERRCODE.SEV
      8309**DCL      8824>>IF
F$DCB.ACTPOS
       141**DCL       141--REDEF
F$DCB.ARS
       116**DCL       116--REDEF
F$DCB.ATTR
       134**DCL       135--REDEF
F$DCB.BORROW
       149**DCL       149--REDEF     149--REDEF     149--REDEF
F$DCB.DCBNAME.L
       163**DCL       163--IMP-SIZ
F$DCB.EOMCHAR
       120**DCL       120--REDEF
F$DCB.FLDID
       144**DCL       144--REDEF
F$DCB.FORM$
       138**DCL       138--REDEF
F$DCB.FSECT
       154**DCL       154--REDEF
F$DCB.FSN
       131**DCL       131--REDEF     131--REDEF     132--REDEF
F$DCB.HEADER$
       137**DCL       137--REDEF
F$DCB.IXTNSIZE
       135**DCL       135--REDEF
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:236  
F$DCB.LASTSTA$
       125**DCL       125--REDEF
F$DCB.LVL
       150**DCL       150--REDEF
F$DCB.NAME.C
       125**DCL       125--REDEF
F$DCB.NOEOF
       146**DCL       146--REDEF
F$DCB.NRECS
       136**DCL       136--REDEF    8791>>ASSIGN
F$DCB.NRECX
       155**DCL       155--REDEF
F$DCB.OHDR
       147**DCL       147--REDEF
F$DCB.ORG
       130**DCL       130--REDEF
F$DCB.PRECNO
       153**DCL       153--REDEF
F$DCB.RCSZ
       158**DCL       158--REDEF
F$DCB.RES
       126**DCL       126--REDEF
F$DCB.SETX
       138**DCL       138--REDEF
F$DCB.TAB$
       137**DCL       138--REDEF
F$DCB.TDA
       152**DCL       152--REDEF
F$DCB.WSN
       127**DCL       127--REDEF
FOUND
      8264**DCL      8787<<ASSIGN   8812<<ASSIGN   8822>>IF
FPT_PATHCON
      7933**DCL      8760<>CALL
FPT_PATHCON.PCD_
      7934**DCL      8759<<ASSIGN
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:237  
INSTANCE$
      8260**DCL      7956--IMP-PTR  8795<<ASSIGN   8797>>IF       8797>>IF       8800>>IF       8800>>IF
      8803>>IF       8803>>IF       8806>>IF       8806>>IF       8810>>ASSIGN   8811>>ASSIGN   8814<<ASSIGN
      8814>>ASSIGN
JC_SUSR
      7800**DCL      8753>>IF
KL$PCD
      8332**DCL      8759--ASSIGN
KL$PCD.ADDD.ASSOCTRM
      8380**DCL      8775>>ASSIGN
KL$PCD.ADDD.ATYP
      8357**DCL      8756>>IF       8756>>IF       8773>>ASSIGN
KL$PCD.ADDD.CINFO
      8382**DCL      8386--REDEF
KL$PCD.ADDD.COS
      8393**DCL      8752>>ASSIGN
KL$PCD.ADDD.DEVNM
      8375**DCL      8376--REDEF    8772>>ASSIGN
KL$PCD.ADDD.FEX
      8359**DCL      8778>>ASSIGN
KL$PCD.ADDD.NMID
      8389**DCL      8390--REDEF    8746>>ASSIGN
KL$PCD.ADDD.TERMID.CHAN
      8372**DCL      8748<>CALL     8766<>CALL
KL$PCD.ADDD.TERMID.LEV
      8370**DCL      8747>>ASSIGN   8765>>ASSIGN
KL$PCD.ADDD.TERMID.SUB
      8373**DCL      8749<>CALL     8767<>CALL
KL$PCD.ADDD.TERMID.SUBSUB
      8374**DCL      8750<>CALL     8768<>CALL
KL$PCD.ADDD.TERMID.TTYP
      8371**DCL      8774>>ASSIGN
KL$PCD.ADDD.TNAME
      8379**DCL      8776>>ASSIGN
KL$PCD.CGID.ACCT#
      8415**DCL      8806>>IF
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:238  
KL$PCD.CGINFO.ATTR
      8441**DCL      8441--REDEF
KL$PCD.CGINFO.XTRAINFO
      8444**DCL      8446--REDEF
KL$PCD_TS
      8497**DCL      8830<>CALL
KL$PCD_TS.ADDD.CINFO
      8547**DCL      8551--REDEF
KL$PCD_TS.ADDD.DEVNM
      8540**DCL      8541--REDEF
KL$PCD_TS.ADDD.NMID
      8554**DCL      8555--REDEF
KLH$SGNTXT
      8740**DCL-ENT  8754--CALL     8823--CALL
KLH$TSTRM
      8739**DCL-ENT  8830--CALL
KLX$9TO8
      8741**DCL-ENT  8748--CALL     8749--CALL     8750--CALL     8764--CALL     8766--CALL     8767--CALL
      8768--CALL
KLX$WRHLPNODE
      8738**DCL-ENT  8837--CALL
KLX$WRHLPSTA
      8737**DCL-ENT  8836--CALL
KL_AUTOFAIL.FLAGS
       731**DCL       732--REDEF
KL_AUTOFAIL.MSGID
       727**DCL       728--REDEF
KL_AUTOFAIL.WSN
       734**DCL       735--REDEF
KL_FEMSG.FLAGS
       681**DCL       682--REDEF
KL_FEMSG.MSGID
       677**DCL       678--REDEF
KL_FEMSG.WSN
       684**DCL       685--REDEF
KL_HLPKEY
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:239  
       751**DCL      8777>>ASSIGN
KL_NETWORK_BUF.ACCT
       849**DCL      8775<<ASSIGN
KL_NETWORK_BUF.ATYP
       847**DCL      8773<<ASSIGN
KL_NETWORK_BUF.DEVNM
       850**DCL      8772<<ASSIGN
KL_NETWORK_BUF.HLPKEY
       882**DCL      8777<<ASSIGN
KL_NETWORK_BUF.TERMINAL_ID.TERM
       871**DCL       880--REDEF
KL_NETWORK_BUF.TERMNAME
       852**DCL      8776<<ASSIGN
KL_NETWORK_BUF.TTYP
       848**DCL      8774<<ASSIGN
KL_NETWORK_KEY
       774**DCL      8780--ASSIGN
KL_NETWORK_KEY.KEY
       776**DCL      8770--ASSIGN
KL_NETWORK_KEY.KEY.NODE
       778**DCL      8778<<ASSIGN
KL_NETWORK_KEY.KEY.TERMID
       795**DCL      8769<<ASSIGN
KL_NETWORK_KEY.KEY.TERMID.TERM
       797**DCL       806--REDEF
KL_NETWORK_KEY.KEY.TERMID.TTYP
       797**DCL      8771<<ASSIGN
KL_NETWORK_KEY.SIZE
       775**DCL      8770<<ASSIGN
KL_NETWORK_TIME
      7914**DCL      8779<>CALL
KL_NMNODE
       663**DCL      8835>>IF       8837<>CALL
KL_NODE
       662**DCL      8835>>IF
KL_RDBF.FEL#
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:240  
       640**DCL       641--REDEF
KL_SGNRSP
      8616**DCL      8744<<ASSIGN   8754<>CALL     8823<>CALL     8830<>CALL     8833--ASSIGN   8836<>CALL
      8837<>CALL
KL_SGNRSP.COS
      8730**DCL      8752<<ASSIGN
KL_SGNRSP.FCN
      8617**DCL      8745<<ASSIGN
KL_SGNRSP.MESSAGE.RSPSIZ
      8733**DCL      8811<<ASSIGN   8833>>ASSIGN
KL_SGNRSP.MESSAGE.RSPTXT
      8734**DCL      8810<<ASSIGN   8833--ASSIGN
KL_SGNRSP.NMID
      8629**DCL      8632--REDEF    8746<<ASSIGN
KL_SGNRSP.RLCID
      8640**DCL      8763<<ASSIGN
KL_SGNRSP.RLCID.LDCTX
      8648**DCL      8764<>CALL
KL_SGNRSP.TERMID
      8717**DCL      8751<<ASSIGN
KL_SGNRSP.TERMID.TERM
      8719**DCL      8728--REDEF
KL_STATION
      8736**DCL      8836<>CALL
KL_TMSG.FLAGS
       703**DCL       704--REDEF
KL_TMSG.MSGID
       699**DCL       700--REDEF
KL_TMSG.WSN
       706**DCL       707--REDEF
KL_WR_NETWORK
      7889**DCL      8781<>CALL
KL_WR_NETWORK.KEY_
      7889**DCL      8780<<ASSIGN
KL_WR_NETWORK.STATION_
      7891**DCL      7891--REDEF
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:241  
KL_WR_NETWORK.V.DVBYTE.VFC#
      7898**DCL      7898--REDEF
LOGON_OK
      8762**LABEL    8826--GOTO
LOOP
      8265**DCL      8796<<DOINDEX
M$CLOSE
        43**DCL-ENT  8819--CALL
M$OPEN
        43**DCL-ENT  8790--CALL
M$PATHCON
       107**DCL-ENT  8760--CALL
M$TIME
       110**DCL-ENT  8779--CALL
M$TP
      8259**DCL      8791--ASSIGN
M$WRITE
        44**DCL-ENT  8781--CALL     8817--CALL
OPEN_TP_CNTRL
      8080**DCL      8790<>CALL
OPEN_TP_CNTRL.ACSVEH_
      8082**DCL      8083--REDEF
OPEN_TP_CNTRL.ALTKEYS_
      8088**DCL      8089--REDEF    8089--REDEF
OPEN_TP_CNTRL.HDR_
      8087**DCL      8088--REDEF
OPEN_TP_CNTRL.TAB_
      8086**DCL      8087--REDEF
OPEN_TP_CNTRL.UHL_
      8080**DCL      8081--REDEF    8081--REDEF
OPEN_TP_CNTRL.V
      8089**DCL      8080--DCLINIT
OPEN_TP_CNTRL.V.FSN#
      8120**DCL      8120--REDEF    8120--REDEF
OPEN_TP_CNTRL.WSN_
      8086**DCL      8086--REDEF
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:242  
PC$HDR
      7952**DCL      8795--ASSIGN
PC$HDR.CURINSTANCES
      7953**DCL      8792>>IF       8796>>DOINDEX
PC$INSTANCE
      7956**DCL      8792--IF       8814--ASSIGN
PC$INSTANCE.FLAGS.HEADER
      7962**DCL      8806>>IF
PC$INSTANCE.HDR.CNT
      7965**DCL      8811>>ASSIGN
PC$INSTANCE.HDR.MSG
      7966**DCL      8810>>ASSIGN
PC$INSTANCE.INSTANCE_NAME
      7957**DCL      8806>>IF
PCD
      8312**DCL        32--PROC     8743--ASSIGN
PCD$
      8315**DCL      8332--IMP-PTR  8497--IMP-PTR  8743<<ASSIGN   8746>>ASSIGN   8747>>ASSIGN   8748>>CALL
      8749>>CALL     8750>>CALL     8752>>ASSIGN   8756>>IF       8756>>IF       8759>>ASSIGN   8765>>ASSIGN
      8766>>CALL     8767>>CALL     8768>>CALL     8772>>ASSIGN   8773>>ASSIGN   8774>>ASSIGN   8775>>ASSIGN
      8776>>ASSIGN   8778>>ASSIGN   8806>>IF       8830>>CALL
SGNSIZ
      8313**DCL      8833<<ASSIGN   8836<>CALL     8837<>CALL
SKIPIT
      8822**LABEL    8790--CALLALT  8819--CALLALT
SYSACCT
      8208**DCL      8085--DCLINIT
TERMID
      7857**DCL      8751>>ASSIGN   8769>>ASSIGN
TERMID.LEV
      7861**DCL      8747<<ASSIGN   8765<<ASSIGN
TERMID.TERM
      7861**DCL      7870--REDEF
TERMID.TERM.CHANNEL
      7863**DCL      8748<>CALL     8766<>CALL
TERMID.TERM.SUBDEVICE
PL6.E3A0      #004=KLH$HSGN File=KLH$HLP.:E05TSI                                 WED 07/30/97 00:51 Page:243  
      7863**DCL      8749<>CALL     8767<>CALL
TERMID.TERM.SUBSUBDEVICE
      7864**DCL      8750<>CALL     8768<>CALL
TPC_GRANS
      8314**DCL      8791<<ASSIGN   8792>>IF
TP_CNTRL_D
      8150**DCL      8081--DCLINIT
VLR_PATHCON.RLCID
      7948**DCL      8763>>ASSIGN
VLR_PATHCON.RLCID.LDCTX
      7949**DCL      8764<>CALL
WROCMSG
      8243**DCL      8817<>CALL
WROCMSG.STATION_
      8245**DCL      8245--REDEF
WROCMSG.V
      8246**DCL      8243--DCLINIT
WROCMSG.V.DVBYTE.VFC#
      8252**DCL      8252--REDEF

PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:244  
     1324        1        /*T***********************************************************/
     1325        2        /*T*                                                         */
     1326        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1327        4        /*T*                                                         */
     1328        5        /*T***********************************************************/
     1329        6        KLH$SGNTXT: PROC (KL_SGNRSP,ERR);
     1330        7        /*D* NAME:        KLH$SGNTXT
     1331        8             PURPOSE:     To fill in KL_SGNRSP.MESSAGE and .ERRCODE from ERR
     1332        9             CALL:        CALL KLH$SGNTXT(KL_SGNRSP,ERR);
     1333       10             INPUT:       KL_SGNRSP - A signon response message
     1334       11                          ERR - Error code to be transformed into message text
     1335       12                                ERR is either a full JIT.ERR or an internal error;
     1336       13             OUTPUT:      KL_SGNRSP - The .MESSAGE and .ERRCODE fields have
     1337       14                             been filled in with a TEXTC message and the error
     1338       15                             code respectively.
     1339       16             DESCRIPTION: KLH$SGNTXT calls KLH$ERRMSG to obtain a message using
     1340       17                          as an errcode, either ERR if FCG is non-zero or
     1341       18                          KLH-ERR-E if FCG is zero. This resulting message is
     1342       19                          placed into KL_SGNRSP.MESSAGE. Finally,
     1343       20                          KL_SGNRSP.ERRCODE is set to the error code.
     1344       21        */
     1345       22        %INCLUDE KL_MACRO_C;
     1346     3374        %INCLUDE CP_6;
     1347     3455        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS="");
     1348     3590    1   DCL 1 ERR ALIGNED,
     1349     3591    1         2 FCG BIT(18) UNAL,
     1350     3592    1         2 MON BIT(1) UNAL,
     1351     3593    1         2 CODE UBIN(14) UNAL,
     1352     3594    1         2 SEV UBIN(3) UNAL;
     1353     3595    1   DCL ERRUBIN REDEF ERR UBIN WORD;
     1354     3596    1   DCL 1 ERR1 ALIGNED,
     1355     3597    1         2 FCG BIT(18) UNAL,
     1356     3598    1         2 MON BIT(1) UNAL,
     1357     3599    1         2 CODE UBIN(14) UNAL,
     1358     3600    1         2 SEV UBIN(3) UNAL;
     1359     3601    1   DCL SIZE UBIN;
     1360     3602    1   DCL LCP6ERR BIT(36);
PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:245  
     1361     3603    1   DCL ERRTMPLAT BIT(36) CONSTANT ALIGNED INIT('131410400002'O);
     1362     3604    1   DCL KLH$ERRMSG ENTRY(3);
     1363     3605    1   DCL XUR$ERRTOLCP6 ENTRY(2);
     1364     3606    1           IF ERR.FCG~='0'B
     1365     3607    1             THEN ERR1=ERR;
     1366     3608    2             ELSE DO;
     1367     3609    2               ERR1=ERRTMPLAT;
     1368     3610    2               ERR1.CODE=ERRUBIN;
     1369     3611    2               END;
     1370     3612    1           CALL XUR$ERRTOLCP6(LCP6ERR,ERR1);
     1371     3613    1           KL_SGNRSP.ERRCODE = LCP6ERR;
     1372     3614    1           SIZE=LENGTHC(KL_SGNRSP.MESSAGE.RSPTXT);
     1373     3615    1           CALL KLH$ERRMSG(KL_SGNRSP.MESSAGE.RSPTXT,SIZE,ERR1);
     1374     3616    1           KL_SGNRSP.MESSAGE.RSPSIZ=SIZE;
     1375     3617    1           RETURN;
     1376     3618    1   END KLH$SGNTXT;
     1377     3619        %EOD;

PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:246  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$SGNTXT.

   Procedure KLH$SGNTXT requires 44 words for executable code.
   Procedure KLH$SGNTXT requires 12 words of local(AUTO) storage.

PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:247  

 Object Unit name= KLH$SGNTXT                                 File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:52:23.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  KLH$SGNTXT
    2   Proc  even  none    44     54  KLH$SGNTXT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  KLH$SGNTXT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 XUR$ERRTOLCP6
         yes           Std       3 KLH$ERRMSG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:248  


     1324        1        /*T***********************************************************/
     1325        2        /*T*                                                         */
     1326        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1327        4        /*T*                                                         */
     1328        5        /*T***********************************************************/
     1329        6        KLH$SGNTXT: PROC (KL_SGNRSP,ERR);

      6  2 000000   000000 700200 xent  KLH$SGNTXT   TSX0  ! X66_AUTO_2
         2 000001   000014 000002                    ZERO    12,2

     1330        7        /*D* NAME:        KLH$SGNTXT
     1331        8             PURPOSE:     To fill in KL_SGNRSP.MESSAGE and .ERRCODE from ERR
     1332        9             CALL:        CALL KLH$SGNTXT(KL_SGNRSP,ERR);
     1333       10             INPUT:       KL_SGNRSP - A signon response message
     1334       11                          ERR - Error code to be transformed into message text
     1335       12                                ERR is either a full JIT.ERR or an internal error;
     1336       13             OUTPUT:      KL_SGNRSP - The .MESSAGE and .ERRCODE fields have
     1337       14                             been filled in with a TEXTC message and the error
     1338       15                             code respectively.
     1339       16             DESCRIPTION: KLH$SGNTXT calls KLH$ERRMSG to obtain a message using
     1340       17                          as an errcode, either ERR if FCG is non-zero or
     1341       18                          KLH-ERR-E if FCG is zero. This resulting message is
     1342       19                          placed into KL_SGNRSP.MESSAGE. Finally,
     1343       20                          KL_SGNRSP.ERRCODE is set to the error code.
     1344       21        */
     1345       22        %INCLUDE KL_MACRO_C;
     1346     3374        %INCLUDE CP_6;
     1347     3455        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS="");
     1348     3590    1   DCL 1 ERR ALIGNED,
     1349     3591    1         2 FCG BIT(18) UNAL,
     1350     3592    1         2 MON BIT(1) UNAL,
     1351     3593    1         2 CODE UBIN(14) UNAL,
     1352     3594    1         2 SEV UBIN(3) UNAL;
     1353     3595    1   DCL ERRUBIN REDEF ERR UBIN WORD;
     1354     3596    1   DCL 1 ERR1 ALIGNED,
     1355     3597    1         2 FCG BIT(18) UNAL,
PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:249  
     1356     3598    1         2 MON BIT(1) UNAL,
     1357     3599    1         2 CODE UBIN(14) UNAL,
     1358     3600    1         2 SEV UBIN(3) UNAL;
     1359     3601    1   DCL SIZE UBIN;
     1360     3602    1   DCL LCP6ERR BIT(36);
     1361     3603    1   DCL ERRTMPLAT BIT(36) CONSTANT ALIGNED INIT('131410400002'O);
     1362     3604    1   DCL KLH$ERRMSG ENTRY(3);
     1363     3605    1   DCL XUR$ERRTOLCP6 ENTRY(2);
     1364     3606    1           IF ERR.FCG~='0'B

   3606  2 000002   200004 470500                    LDP0    @ERR,,AUTO
         2 000003   000000 220100                    LDX0    0,,PR0
         2 000004   000010 600000 2                  TZE     s:3609

     1365     3607    1             THEN ERR1=ERR;

   3607  2 000005   000000 236100                    LDQ     0,,PR0
         2 000006   200005 756100                    STQ     ERR1,,AUTO
         2 000007   000017 710000 2                  TRA     s:3612

     1366     3608    2             ELSE DO;

     1367     3609    2               ERR1=ERRTMPLAT;

   3609  2 000010   000000 236000 1                  LDQ     ERRTMPLAT
         2 000011   200005 756100                    STQ     ERR1,,AUTO

     1368     3610    2               ERR1.CODE=ERRUBIN;

   3610  2 000012   000000 236100                    LDQ     0,,PR0
         2 000013   000003 736000                    QLS     3
         2 000014   200005 676100                    ERQ     ERR1,,AUTO
         2 000015   377770 376007                    ANQ     131064,DL
         2 000016   200005 656100                    ERSQ    ERR1,,AUTO

     1369     3611    2               END;

PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:250  
     1370     3612    1           CALL XUR$ERRTOLCP6(LCP6ERR,ERR1);

   3612  2 000017   200005 631500                    EPPR1   ERR1,,AUTO
         2 000020   200011 451500                    STP1    LCP6ERR+2,,AUTO
         2 000021   200007 633500                    EPPR3   LCP6ERR,,AUTO
         2 000022   200010 453500                    STP3    LCP6ERR+1,,AUTO
         2 000023   200010 630500                    EPPR0   LCP6ERR+1,,AUTO
         2 000024   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000025   000000 701000 xent               TSX1    XUR$ERRTOLCP6
         2 000026   000000 011000                    NOP     0

     1371     3613    1           KL_SGNRSP.ERRCODE = LCP6ERR;

   3613  2 000027   200003 470500                    LDP0    @KL_SGNRSP,,AUTO
         2 000030   000100 100500                    MLR     fill='000'O
         2 000031   200007 000004                    ADSC9   LCP6ERR,,AUTO            cn=0,n=4
         2 000032   000002 400004                    ADSC9   2,,PR0                   cn=2,n=4

     1372     3614    1           SIZE=LENGTHC(KL_SGNRSP.MESSAGE.RSPTXT);

   3614  2 000033   000120 235007                    LDA     80,DL
         2 000034   200006 755100                    STA     SIZE,,AUTO

     1373     3615    1           CALL KLH$ERRMSG(KL_SGNRSP.MESSAGE.RSPTXT,SIZE,ERR1);

   3615  2 000035   200005 631500                    EPPR1   ERR1,,AUTO
         2 000036   200012 451500                    STP1    LCP6ERR+3,,AUTO
         2 000037   200006 633500                    EPPR3   SIZE,,AUTO
         2 000040   200011 453500                    STP3    LCP6ERR+2,,AUTO
         2 000041   200003 236100                    LDQ     @KL_SGNRSP,,AUTO
         2 000042   000010 036003                    ADLQ    8,DU
         2 000043   200010 756100                    STQ     LCP6ERR+1,,AUTO
         2 000044   200010 630500                    EPPR0   LCP6ERR+1,,AUTO
         2 000045   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000046   000000 701000 xent               TSX1    KLH$ERRMSG
         2 000047   000000 011000                    NOP     0

PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:251  
     1374     3616    1           KL_SGNRSP.MESSAGE.RSPSIZ=SIZE;

   3616  2 000050   200003 470500                    LDP0    @KL_SGNRSP,,AUTO
         2 000051   200006 236100                    LDQ     SIZE,,AUTO
         2 000052   000007 552104                    STBQ    7,'04'O,PR0

     1375     3617    1           RETURN;

   3617  2 000053   000000 702200 xent               TSX2  ! X66_ARET
     1376     3618    1   END KLH$SGNTXT;
     1377     3619        %EOD;

PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:252  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$SGNTXT.
PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:253  

 **** Variables and constants ****

  ****  Section 001 RoData KLH$SGNTXT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 ERRTMPLAT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ERR                       3-0-0/w PTR         r     1 @KL_SGNRSP
    *0-0-0/w STRC        r     1 ERR                        5-0-0/w STRC        r     1 ERR1
    *0-0-0/w UBIN        r     1 ERRUBIN                   *0-0-0/w STRC(1008)  r     1 KL_SGNRSP
     7-0-0/b BIT         r     1 LCP6ERR                    6-0-0/w UBIN        r     1 SIZE


   Procedure KLH$SGNTXT requires 44 words for executable code.
   Procedure KLH$SGNTXT requires 12 words of local(AUTO) storage.
PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:254  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KLH$SGNTXT File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:255  
          MINI XREF LISTING

ERR
      3590**DCL         6--PROC     3595--REDEF    3607>>ASSIGN
ERR.FCG
      3591**DCL      3606>>IF
ERR1
      3596**DCL      3607<<ASSIGN   3609<<ASSIGN   3612<>CALL     3615<>CALL
ERR1.CODE
      3599**DCL      3610<<ASSIGN
ERRTMPLAT
      3603**DCL      3609>>ASSIGN
ERRUBIN
      3595**DCL      3610>>ASSIGN
KLH$ERRMSG
      3604**DCL-ENT  3615--CALL
KL_SGNRSP
      3470**DCL         6--PROC
KL_SGNRSP.ERRCODE
      3524**DCL      3613<<ASSIGN
KL_SGNRSP.MESSAGE.RSPSIZ
      3587**DCL      3616<<ASSIGN
KL_SGNRSP.MESSAGE.RSPTXT
      3588**DCL      3614--ASSIGN   3615<>CALL
KL_SGNRSP.NMID
      3483**DCL      3486--REDEF
KL_SGNRSP.TERMID.TERM
      3573**DCL      3582--REDEF
LCP6ERR
      3602**DCL      3612<>CALL     3613>>ASSIGN
SIZE
      3601**DCL      3614<<ASSIGN   3615<>CALL     3616>>ASSIGN
XUR$ERRTOLCP6
      3605**DCL-ENT  3612--CALL

PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:256  
     1378        1        /*T***********************************************************/
     1379        2        /*T*                                                         */
     1380        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1381        4        /*T*                                                         */
     1382        5        /*T***********************************************************/
     1383        6        KLH$ERRMSG: PROC (MSG,SIZE,ERR);
     1384        7        /*D* NAME:        KLH$ERRMSG
     1385        8             PURPOSE:     To fill in MSG with an error message for ERR
     1386        9             CALL:        CALL KLH$ERRMSG(MSG,MSGSIZ,ERR);
     1387       10             INPUT:       SIZE - Byte size of MSG
     1388       11                          ERR - Error code to be transformed into message text
     1389       12                                ERR is either a full JIT.ERR or an internal error;
     1390       13             OUTPUT:      MSG - Filled in with error message text
     1391       14                          SIZE - Returned as the byte size of the string placed
     1392       15                                 into MSG
     1393       16             DESCRIPTION: KLH$ERRMSG calls M$ERRMSG to obtain a message using
     1394       17                          as an errcode, either ERR if FCG is non-zero or
     1395       18                          KLH-ERR-E if FCG is zero. This resulting message is
     1396       19                          placed into MSG and its length into SIZE.
     1397       20        */
     1398       21        %INCLUDE CP_6;
     1399      102    1   DCL MSG CHAR(1);                        /* Actually variable length           */
     1400      103    1   DCL SIZE UBIN;
     1401      104    1   DCL 1 ERR ALIGNED,
     1402      105    1         2 FCG BIT(18) UNAL,
     1403      106    1         2 MON BIT(1) UNAL,
     1404      107    1         2 CODE UBIN(14) UNAL,
     1405      108    1         2 SEV UBIN(3) UNAL;
     1406      109    1   DCL ERR1 REDEF ERR UBIN;
     1407      110    1   DCL 1 ERRCODE ALIGNED,
     1408      111    1         2 FCG BIT(18) UNAL,
     1409      112    1         2 MON BIT(1) UNAL,
     1410      113    1         2 CODE UBIN(14) UNAL,
     1411      114    1         2 SEV UBIN(3) UNAL;
     1412      115        %VLP_ERRCODE (FPTN=E_ANY,FCG=KL,MID=H,MON='1'B,SEV=4);
     1413      160    1   DCL ERRLEN UBIN;
     1414      161    1   DCL ERRBEG UBIN;
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:257  
     1415      162    1   DCL ERRBUF CHAR(600) DALIGNED;
     1416      163    1   DCL BADERRMSG CHAR(0) CONSTANT INIT('M$ERRMSG call failed');
     1417      164    1   DCL CHR$SIZE CHAR(SIZE) BASED;
     1418      165        %FPT_ERRMSG (FPTN=FPT_ERRMSG,INCLCODE=NO,STCLASS=STATIC);
     1419      192        /*E* ERROR:    KLH-E$NUSR-E
     1420      193             MESSAGE:  !!!Maximum users already in system.
     1421      194        */
     1422      195        /*E* ERROR: KLH-E$FEPSTOPPED-E
     1423      196             MESSAGE: ** Front end stopped by operator - PLEASE STAND BY **
     1424      197        */
     1425      198        /*E* ERROR:    KLH-E$NOOL-E
     1426      199             MESSAGE:  !!!No more online users currently allowed.
     1427      200        */
     1428      201        /*E* ERROR:    KLH-E$NOSYD-E
     1429      202             MESSAGE:  !!!No system id available to log you on.
     1430      203        */
     1431      204        /*E* ERROR:    KLH-E$SGSYN-E
     1432      205             MESSAGE:  Type: 'Account,Myusername,Password option_list'
     1433      206                       where option_list consists of the following,
     1434      207                       separated by a comma, in any order:
     1435      208                          N[o]S[etup]            - bypasses the setup command.
     1436      209                          P[rofile]=profile_name - where profile_name is a
     1437      210                                                    system defined profile.
     1438      211                          H[ost]=site            - where site is another
     1439      212                                                    CP-6 machine.
     1440      213                          N[o]H[eader]           - bypasses the sysid message
     1441      214                                                    received after logon.
     1442      215                       The bracketed letters in the option_list show optional
     1443      216                       characters to specify an option.  The non-enclosed
     1444      217                       letters are required.  All option keywords can be
     1445      218                       specified in either upper or lowercase, but are
     1446      219                       translated to uppercase for processing.
     1447      220        */
     1448      221        /*E* ERROR:    KLH-E$NJIT-E
     1449      222             MESSAGE:  !!!Insufficient physical pages to start a new user.
     1450      223        */
     1451      224        /*E* ERROR:    KLH-E$BDID-E
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:258  
     1452      225         MESSAGE0:  !!!Acct, name or password were specified incorrectly - type '?' for synt
               225        ax.
     1453      226             MESSAGE1: Type: 'Account,Myusername,Password option_list'
     1454      227                       where option_list consists of the following,
     1455      228                       separated by a comma, in any order:
     1456      229                          N[o]S[etup]            - bypasses the setup command.
     1457      230                          P[rofile]=profile_name - where profile_name is a
     1458      231                                                    system defined profile.
     1459      232                          H[ost]=site            - where site is another
     1460      233                                                    CP-6 machine.
     1461      234                          N[o]H[eader]           - bypasses the sysid message
     1462      235                                                    received after logon.
     1463      236                       The bracketed letters in the option_list show optional
     1464      237                       characters to specify an option.  The non-enclosed
     1465      238                       letters are required.  All option keywords can be
     1466      239                       specified in either upper or lowercase, but are
     1467      240                       translated to uppercase for processing.
     1468      241        */
     1469      242        /*E* ERROR:    KLH-E$ILGL-E
     1470      243             MESSAGE0:  !!!No such logon - Please try again - Type '?' for syntax
     1471      244             MESSAGE1: Type: 'Account,Myusername,Password option_list'
     1472      245                       where option_list consists of the following,
     1473      246                       separated by a comma, in any order:
     1474      247                          N[o]S[etup]            - bypasses the setup command.
     1475      248                          P[rofile]=profile_name - where profile_name is a
     1476      249                                                    system defined profile.
     1477      250                          H[ost]=site            - where site is another
     1478      251                                                    CP-6 machine.
     1479      252                          N[o]H[eader]           - bypasses the sysid message
     1480      253                                                    received after logon.
     1481      254                       The bracketed letters in the option_list show optional
     1482      255                       characters to specify an option.  The non-enclosed
     1483      256                       letters are required.  All option keywords can be
     1484      257                       specified in either upper or lowercase, but are
     1485      258                       translated to uppercase for processing.
     1486      259        */
     1487      260        /*E* ERROR:    KLH-E$NGPR-E
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:259  
     1488      261             MESSAGE:  !!!Specified profile does not exist.
     1489      262        */
     1490      263        /*E* ERROR:    KLH-E$NOPR-E
     1491      264             MESSAGE:  !!!Default profile bad - Type (e.g.) PRO=TTY after acct,name.
     1492      265        */
     1493      266        /*E* ERROR:    KLH-E$HLPBD-E
     1494      267             MESSAGE:  !!!Account definition bad - See your system manager.
     1495      268        */
     1496      269        /*E* ERROR:    KLH-E$NFIL-E
     1497      270             MESSAGE:  !!!System not yet ready for logons.
     1498      271        */
     1499      272        /*E* ERROR:    KLH-E$OLIL-E
     1500      273             MESSAGE:  !!!That logon illegal for timesharing.
     1501      274        */
     1502      275        /*E* ERROR:    KLH-E$BDPR-E
     1503      276             MESSAGE:  !!!Illegal profile type - Try again.
     1504      277        */
     1505      278        /*E* ERROR:    KLH-E$BDPRS-0
     1506      279             MESSAGE:  !!!Illegal profile type - handler profile used.
     1507      280        */
     1508      281        /*E* ERROR:    KLH-E$NOPRS-0
     1509      282             MESSAGE:  !!!Specified profile does not exist - handler profile used.
     1510      283        */
     1511      284        /*E* ERROR:    KLH-E$NGPRS-0
     1512      285             MESSAGE:  !!!Default profile bad - handler profile used.
     1513      286        */
     1514      287        /*E* ERROR:    KLH-E$NOHOST-0
     1515      288             MESSAGE:  !!!That Host is not currently available.
     1516      289         */
     1517      290        /*E* ERROR:    KLH-E$UDHOST-0
     1518      291           MESSAGE:  !!!That host is not defined.
     1519      292         */
     1520      293        %EJECT;
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:260  
     1521      294    1           IF ERR.FCG~='0'B
     1522      295    1             THEN ERRCODE=ERR;
     1523      296    2             ELSE DO;
     1524      297    2               ERRCODE=E_ANY;
     1525      298    2               ERRCODE.CODE=ERR1;
     1526      299    2               END;
     1527      300    1           ERRCODE.SEV=0;
     1528      301    1           IF ERRCODE.CODE=0
     1529      302    1             THEN ERRLEN=0;
     1530      303    2             ELSE DO;
     1531      304    2               ERRBUF = ' ';
     1532      305    2               FPT_ERRMSG.CODE_=VECTOR(ERRCODE);
     1533      306    2               FPT_ERRMSG.BUF_=VECTOR(ERRBUF);
     1534      307    2               CALL M$ERRMSG(FPT_ERRMSG)
     1535      308    3                 WHENRETURN DO;
     1536      309    3                   ERRBEG = 0;
     1537      310    3                   ERRLEN=LENGTHC(ERRBUF);
     1538      311    4                   DO WHILE (SUBSTR(ERRBUF,ERRLEN-1,1)=' ' AND ERRLEN>ERRBEG);
     1539      312    4                     ERRLEN=ERRLEN-1;
     1540      313    4                     END;
     1541      314    4                   DO WHILE(SUBSTR(ERRBUF,ERRBEG,1)=' ' AND ERRBEG<ERRLEN-1);
     1542      315    4                     ERRBEG=ERRBEG+1;
     1543      316    4                     END;
     1544      317    3                   ERRLEN=ERRLEN-ERRBEG;
     1545      318    3                   ADDR(MSG)->CHR$SIZE=SUBSTR(ERRBUF,ERRBEG,ERRLEN);
     1546      319    3                   END;
     1547      320    3                 WHENALTRETURN DO;
     1548      321    3                   ADDR(MSG)->CHR$SIZE=BADERRMSG;
     1549      322    3                   ERRLEN=LENGTHC(BADERRMSG);
     1550      323    3                   END;
     1551      324    2               END;
     1552      325    1           IF ERRLEN<SIZE THEN SIZE=ERRLEN;
     1553      326    1           RETURN;
     1554      327    1   END KLH$ERRMSG;
     1555      328        %EOD;

PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:261  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$ERRMSG.

   Procedure KLH$ERRMSG requires 93 words for executable code.
   Procedure KLH$ERRMSG requires 162 words of local(AUTO) storage.

PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:262  

 Object Unit name= KLH$ERRMSG                                 File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:52:40.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    28     34  KLH$ERRMSG
    2  RoData even  UTS      5      5  KLH$ERRMSG
    3   Proc  even  none    93    135  KLH$ERRMSG
    4  RoData even  none     2      2  KLH$ERRMSG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        3  KLH$ERRMSG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:263  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:264  


     1378        1        /*T***********************************************************/
     1379        2        /*T*                                                         */
     1380        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1381        4        /*T*                                                         */
     1382        5        /*T***********************************************************/
     1383        6        KLH$ERRMSG: PROC (MSG,SIZE,ERR);

      6  3 000000   000000 700200 xent  KLH$ERRMSG   TSX0  ! X66_AUTO_3
         3 000001   000242 000003                    ZERO    162,3

     1384        7        /*D* NAME:        KLH$ERRMSG
     1385        8             PURPOSE:     To fill in MSG with an error message for ERR
     1386        9             CALL:        CALL KLH$ERRMSG(MSG,MSGSIZ,ERR);
     1387       10             INPUT:       SIZE - Byte size of MSG
     1388       11                          ERR - Error code to be transformed into message text
     1389       12                                ERR is either a full JIT.ERR or an internal error;
     1390       13             OUTPUT:      MSG - Filled in with error message text
     1391       14                          SIZE - Returned as the byte size of the string placed
     1392       15                                 into MSG
     1393       16             DESCRIPTION: KLH$ERRMSG calls M$ERRMSG to obtain a message using
     1394       17                          as an errcode, either ERR if FCG is non-zero or
     1395       18                          KLH-ERR-E if FCG is zero. This resulting message is
     1396       19                          placed into MSG and its length into SIZE.
     1397       20        */
     1398       21        %INCLUDE CP_6;
     1399      102    1   DCL MSG CHAR(1);                        /* Actually variable length           */
     1400      103    1   DCL SIZE UBIN;
     1401      104    1   DCL 1 ERR ALIGNED,
     1402      105    1         2 FCG BIT(18) UNAL,
     1403      106    1         2 MON BIT(1) UNAL,
     1404      107    1         2 CODE UBIN(14) UNAL,
     1405      108    1         2 SEV UBIN(3) UNAL;
     1406      109    1   DCL ERR1 REDEF ERR UBIN;
     1407      110    1   DCL 1 ERRCODE ALIGNED,
     1408      111    1         2 FCG BIT(18) UNAL,
     1409      112    1         2 MON BIT(1) UNAL,
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:265  
     1410      113    1         2 CODE UBIN(14) UNAL,
     1411      114    1         2 SEV UBIN(3) UNAL;
     1412      115        %VLP_ERRCODE (FPTN=E_ANY,FCG=KL,MID=H,MON='1'B,SEV=4);
     1413      160    1   DCL ERRLEN UBIN;
     1414      161    1   DCL ERRBEG UBIN;
     1415      162    1   DCL ERRBUF CHAR(600) DALIGNED;
     1416      163    1   DCL BADERRMSG CHAR(0) CONSTANT INIT('M$ERRMSG call failed');
     1417      164    1   DCL CHR$SIZE CHAR(SIZE) BASED;
     1418      165        %FPT_ERRMSG (FPTN=FPT_ERRMSG,INCLCODE=NO,STCLASS=STATIC);
     1419      192        /*E* ERROR:    KLH-E$NUSR-E
     1420      193             MESSAGE:  !!!Maximum users already in system.
     1421      194        */
     1422      195        /*E* ERROR: KLH-E$FEPSTOPPED-E
     1423      196             MESSAGE: ** Front end stopped by operator - PLEASE STAND BY **
     1424      197        */
     1425      198        /*E* ERROR:    KLH-E$NOOL-E
     1426      199             MESSAGE:  !!!No more online users currently allowed.
     1427      200        */
     1428      201        /*E* ERROR:    KLH-E$NOSYD-E
     1429      202             MESSAGE:  !!!No system id available to log you on.
     1430      203        */
     1431      204        /*E* ERROR:    KLH-E$SGSYN-E
     1432      205             MESSAGE:  Type: 'Account,Myusername,Password option_list'
     1433      206                       where option_list consists of the following,
     1434      207                       separated by a comma, in any order:
     1435      208                          N[o]S[etup]            - bypasses the setup command.
     1436      209                          P[rofile]=profile_name - where profile_name is a
     1437      210                                                    system defined profile.
     1438      211                          H[ost]=site            - where site is another
     1439      212                                                    CP-6 machine.
     1440      213                          N[o]H[eader]           - bypasses the sysid message
     1441      214                                                    received after logon.
     1442      215                       The bracketed letters in the option_list show optional
     1443      216                       characters to specify an option.  The non-enclosed
     1444      217                       letters are required.  All option keywords can be
     1445      218                       specified in either upper or lowercase, but are
     1446      219                       translated to uppercase for processing.
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:266  
     1447      220        */
     1448      221        /*E* ERROR:    KLH-E$NJIT-E
     1449      222             MESSAGE:  !!!Insufficient physical pages to start a new user.
     1450      223        */
     1451      224        /*E* ERROR:    KLH-E$BDID-E
     1452      225         MESSAGE0: !!!Acct, name or password were specified incorrectly - type '?' for synt
               225        ax.
     1453      226             MESSAGE1: Type: 'Account,Myusername,Password option_list'
     1454      227                       where option_list consists of the following,
     1455      228                       separated by a comma, in any order:
     1456      229                          N[o]S[etup]            - bypasses the setup command.
     1457      230                          P[rofile]=profile_name - where profile_name is a
     1458      231                                                    system defined profile.
     1459      232                          H[ost]=site            - where site is another
     1460      233                                                    CP-6 machine.
     1461      234                          N[o]H[eader]           - bypasses the sysid message
     1462      235                                                    received after logon.
     1463      236                       The bracketed letters in the option_list show optional
     1464      237                       characters to specify an option.  The non-enclosed
     1465      238                       letters are required.  All option keywords can be
     1466      239                       specified in either upper or lowercase, but are
     1467      240                       translated to uppercase for processing.
     1468      241        */
     1469      242        /*E* ERROR:    KLH-E$ILGL-E
     1470      243             MESSAGE0:  !!!No such logon - Please try again - Type '?' for syntax
     1471      244             MESSAGE1: Type: 'Account,Myusername,Password option_list'
     1472      245                       where option_list consists of the following,
     1473      246                       separated by a comma, in any order:
     1474      247                          N[o]S[etup]            - bypasses the setup command.
     1475      248                          P[rofile]=profile_name - where profile_name is a
     1476      249                                                    system defined profile.
     1477      250                          H[ost]=site            - where site is another
     1478      251                                                    CP-6 machine.
     1479      252                          N[o]H[eader]           - bypasses the sysid message
     1480      253                                                    received after logon.
     1481      254                       The bracketed letters in the option_list show optional
     1482      255                       characters to specify an option.  The non-enclosed
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:267  
     1483      256                       letters are required.  All option keywords can be
     1484      257                       specified in either upper or lowercase, but are
     1485      258                       translated to uppercase for processing.
     1486      259        */
     1487      260        /*E* ERROR:    KLH-E$NGPR-E
     1488      261             MESSAGE:  !!!Specified profile does not exist.
     1489      262        */
     1490      263        /*E* ERROR:    KLH-E$NOPR-E
     1491      264             MESSAGE:  !!!Default profile bad - Type (e.g.) PRO=TTY after acct,name.
     1492      265        */
     1493      266        /*E* ERROR:    KLH-E$HLPBD-E
     1494      267             MESSAGE:  !!!Account definition bad - See your system manager.
     1495      268        */
     1496      269        /*E* ERROR:    KLH-E$NFIL-E
     1497      270             MESSAGE:  !!!System not yet ready for logons.
     1498      271        */
     1499      272        /*E* ERROR:    KLH-E$OLIL-E
     1500      273             MESSAGE:  !!!That logon illegal for timesharing.
     1501      274        */
     1502      275        /*E* ERROR:    KLH-E$BDPR-E
     1503      276             MESSAGE:  !!!Illegal profile type - Try again.
     1504      277        */
     1505      278        /*E* ERROR:    KLH-E$BDPRS-0
     1506      279             MESSAGE:  !!!Illegal profile type - handler profile used.
     1507      280        */
     1508      281        /*E* ERROR:    KLH-E$NOPRS-0
     1509      282             MESSAGE:  !!!Specified profile does not exist - handler profile used.
     1510      283        */
     1511      284        /*E* ERROR:    KLH-E$NGPRS-0
     1512      285             MESSAGE:  !!!Default profile bad - handler profile used.
     1513      286        */
     1514      287        /*E* ERROR:    KLH-E$NOHOST-0
     1515      288             MESSAGE:  !!!That Host is not currently available.
     1516      289         */
     1517      290        /*E* ERROR:    KLH-E$UDHOST-0
     1518      291           MESSAGE:  !!!That host is not defined.
     1519      292         */
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:268  
     1520      293        %EJECT;
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:269  
     1521      294    1           IF ERR.FCG~='0'B

    294  3 000002   200005 470500                    LDP0    @ERR,,AUTO
         3 000003   000000 220100                    LDX0    0,,PR0
         3 000004   000010 600000 3                  TZE     s:297

     1522      295    1             THEN ERRCODE=ERR;

    295  3 000005   000000 236100                    LDQ     0,,PR0
         3 000006   200006 756100                    STQ     ERRCODE,,AUTO
         3 000007   000017 710000 3                  TRA     s:300

     1523      296    2             ELSE DO;

     1524      297    2               ERRCODE=E_ANY;

    297  3 000010   000000 236000 1                  LDQ     E_ANY
         3 000011   200006 756100                    STQ     ERRCODE,,AUTO

     1525      298    2               ERRCODE.CODE=ERR1;

    298  3 000012   000000 236100                    LDQ     0,,PR0
         3 000013   000003 736000                    QLS     3
         3 000014   200006 676100                    ERQ     ERRCODE,,AUTO
         3 000015   377770 376007                    ANQ     131064,DL
         3 000016   200006 656100                    ERSQ    ERRCODE,,AUTO

     1526      299    2               END;

     1527      300    1           ERRCODE.SEV=0;

    300  3 000017   000000 236000 4                  LDQ     0
         3 000020   200006 356100                    ANSQ    ERRCODE,,AUTO

     1528      301    1           IF ERRCODE.CODE=0

    301  3 000021   200006 236100                    LDQ     ERRCODE,,AUTO
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:270  
         3 000022   377770 316007                    CANQ    131064,DL
         3 000023   000026 601000 3                  TNZ     s:304

     1529      302    1             THEN ERRLEN=0;

    302  3 000024   200007 450100                    STZ     ERRLEN,,AUTO
         3 000025   000127 710000 3                  TRA     s:325

     1530      303    2             ELSE DO;

     1531      304    2               ERRBUF = ' ';

    304  3 000026   040100 100400                    MLR     fill='040'O
         3 000027   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000030   200012 001130                    ADSC9   ERRBUF,,AUTO             cn=0,n=600

     1532      305    2               FPT_ERRMSG.CODE_=VECTOR(ERRCODE);

    305  3 000031   777640 235007                    LDA     -96,DL
         3 000032   200240 452500                    STP2    ERRBUF+150,,AUTO
         3 000033   200240 236100                    LDQ     ERRBUF+150,,AUTO
         3 000034   000006 036003                    ADLQ    6,DU
         3 000035   000004 757000 1                  STAQ    FPT_ERRMSG+2

     1533      306    2               FPT_ERRMSG.BUF_=VECTOR(ERRBUF);

    306  3 000036   000001 235000 4                  LDA     1
         3 000037   200240 452500                    STP2    ERRBUF+150,,AUTO
         3 000040   200240 236100                    LDQ     ERRBUF+150,,AUTO
         3 000041   000012 036003                    ADLQ    10,DU
         3 000042   000006 757000 1                  STAQ    FPT_ERRMSG+4

     1534      307    2               CALL M$ERRMSG(FPT_ERRMSG)

    307  3 000043   000002 630400 1                  EPPR0   FPT_ERRMSG
         3 000044   420000 713400                    CLIMB   alt,+8192
         3 000045   405000 401760                    pmme    nvectors=11
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:271  
         3 000046   000117 702000 3                  TSX2    s:321

     1535      308    3                 WHENRETURN DO;

     1536      309    3                   ERRBEG = 0;

    309  3 000047   200010 450100                    STZ     ERRBEG,,AUTO

     1537      310    3                   ERRLEN=LENGTHC(ERRBUF);

    310  3 000050   001130 235007                    LDA     600,DL
         3 000051   200007 755100                    STA     ERRLEN,,AUTO

     1538      311    4                   DO WHILE (SUBSTR(ERRBUF,ERRLEN-1,1)=' ' AND ERRLEN>ERRBEG);

    311  3 000052   000056 710000 3                  TRA     s:313

     1539      312    4                     ERRLEN=ERRLEN-1;

    312  3 000053   200007 235100                    LDA     ERRLEN,,AUTO
         3 000054   000001 135007                    SBLA    1,DL
         3 000055   200007 755100                    STA     ERRLEN,,AUTO

     1540      313    4                     END;

    313  3 000056   040000 106505                    CMPC    fill='040'O
         3 000057   200011 600001                    ADSC9   ERRBEG+1,A,AUTO          cn=3,n=1
         3 000060   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000061   000065 601000 3                  TNZ     s:314
         3 000062   200010 236100                    LDQ     ERRBEG,,AUTO
         3 000063   200007 116100                    CMPQ    ERRLEN,,AUTO
         3 000064   000053 602000 3                  TNC     s:312

     1541      314    4                   DO WHILE(SUBSTR(ERRBUF,ERRBEG,1)=' ' AND ERRBEG<ERRLEN-1);

    314  3 000065   000071 710000 3                  TRA     s:316

PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:272  
     1542      315    4                     ERRBEG=ERRBEG+1;

    315  3 000066   200010 235100                    LDA     ERRBEG,,AUTO
         3 000067   000001 035007                    ADLA    1,DL
         3 000070   200010 755100                    STA     ERRBEG,,AUTO

     1543      316    4                     END;

    316  3 000071   200010 235100                    LDA     ERRBEG,,AUTO
         3 000072   040000 106505                    CMPC    fill='040'O
         3 000073   200012 000001                    ADSC9   ERRBUF,A,AUTO            cn=0,n=1
         3 000074   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         3 000075   000104 601000 3                  TNZ     s:317
         3 000076   200007 236100                    LDQ     ERRLEN,,AUTO
         3 000077   000001 136007                    SBLQ    1,DL
         3 000100   000104 604000 3                  TMI     s:317
         3 000101   200010 116100                    CMPQ    ERRBEG,,AUTO
         3 000102   000104 600000 3                  TZE     s:317
         3 000103   000066 603000 3                  TRC     s:315

     1544      317    3                   ERRLEN=ERRLEN-ERRBEG;

    317  3 000104   200007 236100                    LDQ     ERRLEN,,AUTO
         3 000105   200010 136100                    SBLQ    ERRBEG,,AUTO
         3 000106   200007 756100                    STQ     ERRLEN,,AUTO

     1545      318    3                   ADDR(MSG)->CHR$SIZE=SUBSTR(ERRBUF,ERRBEG,ERRLEN);

    318  3 000107   200004 470500                    LDP0    @SIZE,,AUTO
         3 000110   000000 720100                    LXL0    0,,PR0
         3 000111   000000 621006                    EAX1    0,QL
         3 000112   200003 471500                    LDP1    @MSG,,AUTO
         3 000113   040140 100545                    MLR     fill='040'O
         3 000114   200012 000011                    ADSC9   ERRBUF,A,AUTO            cn=0,n=*X1
         3 000115   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1546      319    3                   END;
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:273  

    319  3 000116   000127 710000 3                  TRA     s:325

     1547      320    3                 WHENALTRETURN DO;

     1548      321    3                   ADDR(MSG)->CHR$SIZE=BADERRMSG;

    321  3 000117   200004 470500                    LDP0    @SIZE,,AUTO
         3 000120   000000 720100                    LXL0    0,,PR0
         3 000121   200003 471500                    LDP1    @MSG,,AUTO
         3 000122   040140 100400                    MLR     fill='040'O
         3 000123   000000 000024 2                  ADSC9   BADERRMSG                cn=0,n=20
         3 000124   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1549      322    3                   ERRLEN=LENGTHC(BADERRMSG);

    322  3 000125   000024 235007                    LDA     20,DL
         3 000126   200007 755100                    STA     ERRLEN,,AUTO

     1550      323    3                   END;

     1551      324    2               END;

     1552      325    1           IF ERRLEN<SIZE THEN SIZE=ERRLEN;

    325  3 000127   200004 470500                    LDP0    @SIZE,,AUTO
         3 000130   200007 236100                    LDQ     ERRLEN,,AUTO
         3 000131   000000 116100                    CMPQ    0,,PR0
         3 000132   000134 603000 3                  TRC     s:326

    325  3 000133   000000 756100                    STQ     0,,PR0

     1553      326    1           RETURN;

    326  3 000134   000000 702200 xent               TSX2  ! X66_ARET
     1554      327    1   END KLH$ERRMSG;
     1555      328        %EOD;
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:274  

PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:275  
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$ERRMSG.
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:276  

 **** Variables and constants ****

  ****  Section 001  Data  KLH$ERRMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_ANY                      2-0-0/d STRC(936)   r     1 FPT_ERRMSG

  ****  Section 002 RoData KLH$ERRMSG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(20)    r     1 BADERRMSG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ERR                       3-0-0/w PTR         r     1 @MSG
     4-0-0/w PTR         r     1 @SIZE                     *0-0-0/w STRC        r     1 ERR
    *0-0-0/w UBIN        r     1 ERR1                      10-0-0/w UBIN        r     1 ERRBEG
    12-0-0/d CHAR(600)   r     1 ERRBUF                     6-0-0/w STRC        r     1 ERRCODE
     7-0-0/w UBIN        r     1 ERRLEN                    *0-0-0/c CHAR        r     1 MSG
    *0-0-0/w UBIN        r     1 SIZE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 CHR$SIZE

PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:277  

   Procedure KLH$ERRMSG requires 93 words for executable code.
   Procedure KLH$ERRMSG requires 162 words of local(AUTO) storage.
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:278  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:279  
          MINI XREF LISTING

BADERRMSG
       163**DCL       321>>ASSIGN    322--ASSIGN
CHR$SIZE
       164**DCL       318<<ASSIGN    321<<ASSIGN
ERR
       104**DCL         6--PROC      109--REDEF     295>>ASSIGN
ERR.FCG
       105**DCL       294>>IF
ERR1
       109**DCL       298>>ASSIGN
ERRBEG
       161**DCL       309<<ASSIGN    311>>DOWHILE   314>>DOWHILE   314>>DOWHILE   315<<ASSIGN    315>>ASSIGN
       317>>ASSIGN    318>>ASSIGN
ERRBUF
       162**DCL       304<<ASSIGN    306--ASSIGN    310--ASSIGN    311>>DOWHILE   314>>DOWHILE   318>>ASSIGN
ERRCODE
       110**DCL       295<<ASSIGN    297<<ASSIGN    305--ASSIGN
ERRCODE.CODE
       113**DCL       298<<ASSIGN    301>>IF
ERRCODE.SEV
       114**DCL       300<<ASSIGN
ERRLEN
       160**DCL       302<<ASSIGN    310<<ASSIGN    311>>DOWHILE   311>>DOWHILE   312<<ASSIGN    312>>ASSIGN
       314>>DOWHILE   317<<ASSIGN    317>>ASSIGN    318>>ASSIGN    322<<ASSIGN    325>>IF        325>>ASSIGN
E_ANY
       127**DCL       297>>ASSIGN
FPT_ERRMSG
       176**DCL       307<>CALL
FPT_ERRMSG.BUF_
       176**DCL       306<<ASSIGN
FPT_ERRMSG.CODE_
       176**DCL       305<<ASSIGN
PL6.E3A0      #006=KLH$ERRMSG File=KLH$HLP.:E05TSI                               WED 07/30/97 00:52 Page:280  
FPT_ERRMSG.V
       180**DCL       176--DCLINIT
M$ERRMSG
        93**DCL-ENT   307--CALL
MSG
       102**DCL         6--PROC      318--ASSIGN    321--ASSIGN
SIZE
       103**DCL         6--PROC      164--IMP-SIZ   318>>ASSIGN    321>>ASSIGN    325>>IF        325<<ASSIGN

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:281  
     1556        1        /*M* KLH$TSTRM Host log on timesharing terminals */
     1557        2        /*T***********************************************************/
     1558        3        /*T*                                                         */
     1559        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1560        5        /*T*                                                         */
     1561        6        /*T***********************************************************/
     1562        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
     1563        8        KLH$TSTRM: PROC (PCD,KL_SGNRSP);
     1564        9        /*D* NAME:        KLH$TSTRM
     1565       10             PURPOSE:     To complete logging on of a timesharing user and terminal
     1566       11             CALL:        CALL KLH$TSTRM(PCD,KL_SGNRSP);
     1567       12             INPUT:       PCD - A KL_PCD structure describing the terminal
     1568       13                             logging on
     1569       14                          KL_SGNRSP - A signon response message to fill in
     1570       15             OUTPUT:      o A timesharing user (if all is successful)
     1571       16                          KL_SGNRSP - A signon response message
     1572       17             DESCRIPTION: KLH$TSTRM completes the logging on of a timesharing
     1573       18                          user. It first attempts to get a user number and sysid.
     1574       19                          Next, the user's initial 3 pages are obtained if possible
     1575       20                          and initialized. The user's terminal is now connected
     1576       21                          (by calling M$PATHCON) as a timesharing terminal.
     1577       22                          Finally, if all that was successful, the user is
     1578       23                          'made' by calling JCM$MAKEU and a user logon message
     1579       24                          is sent to this host's operator's console.
     1580       25
     1581       26                          The timesharing user is started in the SS_QA
     1582       27                          scheduler state pending a connect acknowledge on
     1583       28                          his now-dangling M$UC DCB's LDCT. This will come
     1584       29                          as a result of the yet-to-be-sent KL_SGNRSP message.
     1585       30
     1586       31                          If any errors occur, KL_SGNRSP is filled in but no
     1587       32                          user is made. KLH$TSTRM never ALTRETURNs.
     1588       33        */
     1589       34        %INCLUDE B$JIT;
     1590      324        %INCLUDE CP_6;
     1591      405        %INCLUDE F$DCB;
     1592      454        %INCLUDE KL_MACRO_C;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:282  
     1593     3806        %INCLUDE KL_ERRORS_C;
     1594     3848        %INCLUDE KL_DATA_R;
     1595     4312        %INCLUDE KL_SUBS_C;
     1596     4366        %KL_PCD (FPTN=PCD,STCLASS="",CG=0);
     1597     4485        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS="");
     1598     4620        %VLR_PATHCON (FPTN=VLR_PATHCON,STCLASS=SYMREF);
     1599     4634    1   DCL ES_LOGON_TIME UBIN WORD ALIGNED SYMREF; /* DEFed in KLH$HLP               */
     1600     4635    1   DCL ERR UBIN;
     1601     4636    1   DCL ERRB REDEF ERR BIT(36);
     1602     4637    1   DCL JIT$ PTR;
     1603     4638    1   DCL VM_UC$ PTR;
     1604     4639    1   DCL VROSEG$ PTR;
     1605     4640    1   DCL PP (0:2) UBIN WORD;
     1606     4641        %VLR_NXTUSR (FPTN=VLR_NXTUSR,STCLASS=STATIC);
     1607     4654    1   DCL B$JIT$ PTR SYMREF;
     1608     4655    1   DCL B$TCB$ PTR SYMREF;
     1609     4656        %B$TCB;
     1610     4659        %B$ALT;
     1611     4667    1   DCL M$CSCG DCB;
     1612     4668    1   DCL JCM$SETU ENTRY(5) ALTRET;
     1613     4669    1   DCL JCM$MAKEU ENTRY(1);
     1614     4670    1   DCL JCM$RELJ ENTRY(2);
     1615     4671    1   DCL KLH$SGNTXT ENTRY(2);
     1616     4672    1   DCL KLX$9TO8 ENTRY(3);
     1617     4673        %FPT_PATHCON (FPTN=FPT_PATHCON,STCLASS=SYMREF);
     1618     4688        %FPT_WRITE (FPTN=FPT_WRITE,STCLASS=CONSTANT,DCB=M$CSCG,BUF=KL_TMSG);
     1619     4719        %FPT_NXTUSR (FPTN=FPT_NXTUSR,STCLASS=CONSTANT,RESULTS=VLR_NXTUSR);
     1620     4732        %EJECT;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:283  
     1621     4733        /**/
     1622     4734        /* Get a timesharing user slot */
     1623     4735        /**/
     1624     4736    1           VLR_NXTUSR.MODE = %M_INT#;
     1625     4737    1           CALL M$NXTUSR (FPT_NXTUSR);
     1626     4738    1           IF VLR_NXTUSR.ERR~=0
     1627     4739    2             THEN DO;
     1628     4740    2               ERR=VLR_NXTUSR.ERR;
     1629     4741    2   ERROUT:     CALL KLH$SGNTXT(KL_SGNRSP,ERR);
     1630     4742    2               RETURN;
     1631     4743    2               END;
     1632     4744        /**/
     1633     4745        /* Get and initialize first 3 user pages */
     1634     4746        /**/
     1635     4747    2           CALL JCM$SETU (VLR_NXTUSR.MODE,JIT$,VM_UC$,VROSEG$,PP) WHENALTRETURN DO;
     1636     4748    2               VLR_NXTUSR.MODE = -VLR_NXTUSR.MODE;
     1637     4749    2               CALL M$NXTUSR (FPT_NXTUSR);
     1638     4750    2               ERR=%E$NJIT;
     1639     4751    2               GOTO ERROUT;
     1640     4752    2               END;
     1641     4753    1           JIT$->B$JIT.USER=VLR_NXTUSR.USR;
     1642     4754    1           JIT$->B$JIT.SYSID=VLR_NXTUSR.SYSID;
     1643     4755    1           JIT$->B$JIT.UNAME=PCD.TSINFO.UNAME;
     1644     4756    1           JIT$->B$JIT.ACCN=PCD.TSINFO.ACCT;
     1645     4757    1           JIT$->B$JIT.FACCN=PCD.TSINFO.ACCT;
     1646     4758    1           JIT$->B$JIT.HPSN=PCD.TSINFO.HPSN;
     1647     4759    1           JIT$->B$JIT.WOO=PCD.TSINFO.WOO;
     1648     4760    1           JIT$->B$JIT.TSLINE.FEX=PCD.ADDD.FEX;
     1649     4761    1           JIT$->B$JIT.TSLINE.SPEED=PCD.ADDD.SPEED;
     1650     4762    1           JIT$->B$JIT.TSLINE.LEV=PCD.ADDD.TERMID.LEV;
     1651     4763    1           JIT$->B$JIT.TSLINE.TTYP=PCD.ADDD.TERMID.TTYP;
     1652     4764    1           JIT$->B$JIT.TSLINE.SUBDEVICE=BITBIN(PCD.ADDD.TERMID.SUB);
     1653     4765    1           JIT$->B$JIT.TSLINE.SUBSUBDEVICE=BITBIN(PCD.ADDD.TERMID.SUBSUB);
     1654     4766    1           JIT$->B$JIT.TSLINE.PORT=BITBIN(PCD.ADDD.TERMID.CHAN);
     1655     4767    1           JIT$->B$JIT.LOGONTIME=ES_LOGON_TIME;
     1656     4768    1           JIT$->B$JIT.BLINDACCTNG = PCD.TSINFO.NOSETUP;
     1657     4769    1           JIT$->B$JIT.LOCK (0) = PCD.TSINFO.NOHEADER;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:284  
     1658     4770    1           VM_UC$->F$DCB.LINES=PCD.TSINFO.LINES;
     1659     4771    1           VM_UC$->F$DCB.RECL=PCD.TSINFO.WIDTH;
     1660     4772    1           VM_UC$->F$DCB.ATTR=PCD.TSINFO.ATTR;
     1661     4773        /**/
     1662     4774        /* Connect the user's terminal to the system */
     1663     4775        /**/
     1664     4776    1           PCD.ADDD.CINFO.USER=VLR_NXTUSR.USR;
     1665     4777    1           FPT_PATHCON.PCD_=VECTOR(PCD);
     1666     4778    2           CALL M$PATHCON (FPT_PATHCON) WHENALTRETURN DO;
     1667     4779    2               ERRB = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1668     4780    2               VLR_NXTUSR.MODE = -VLR_NXTUSR.MODE;
     1669     4781    2               CALL M$NXTUSR (FPT_NXTUSR);
     1670     4782    2               CALL JCM$RELJ (PP,3);
     1671     4783    2               GOTO ERROUT;
     1672     4784    2               END;
     1673     4785        /**/
     1674     4786        /* Fill in KL_SGNRSP.RLCID */
     1675     4787        /**/
     1676     4788    1           KL_SGNRSP.RLCID=VLR_PATHCON.RLCID;
     1677     4789    1           CALL KLX$9TO8(VLR_PATHCON.RLCID.LDCTX,KL_SGNRSP.RLCID.LDCTX,2);
     1678     4790        /**/
     1679     4791        /* 'Connect' the user's terminal to his M$UC DCB */
     1680     4792        /**/
     1681     4793    1           VM_UC$->F$DCB.LDCTX=VLR_PATHCON.RLCID.LDCTX;
     1682     4794    1           VM_UC$->F$DCB.SETX=VLR_PATHCON.RLCID.LDCTX;
     1683     4795        /**/
     1684     4796        /* Introduce the new user to the system */
     1685     4797        /**/
     1686     4798    1           CALL JCM$MAKEU (PP);
     1687     4799        /**/
     1688     4800        /* Write a line connect message to the console for the new user */
     1689     4801        /**/
     1690     4802    1           KL_TMSG.WSN=JIT$->B$JIT.WOO;
     1691     4803    1           KL_TMSG.FEX=PCD.ADDD.FEX;
     1692     4804    1           KL_TMSG.FEPNAME=PCD.ADDD.FEPNAME;
     1693     4805    1           KL_TMSG.LN#=BITBIN(PCD.ADDD.TERMID.CHAN);
     1694     4806    1           KL_TMSG.SID=VLR_NXTUSR.SYSID;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:285  
     1695     4807    1           KL_TMSG.UNM=VLR_NXTUSR.USR;
     1696     4808    1           KL_TMSG.ACCT=PCD.TSINFO.ACCT;
     1697     4809    1           KL_TMSG.NME=PCD.TSINFO.UNAME;
     1698     4810    1           CALL M$WRITE (FPT_WRITE) ALTRET (IGNORE);
     1699     4811    1   IGNORE: RETURN;
     1700     4812    1   END KLH$TSTRM;

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:286  
--  Include file information  --

   KL_SUBS_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$TSTRM.

   Procedure KLH$TSTRM requires 203 words for executable code.
   Procedure KLH$TSTRM requires 18 words of local(AUTO) storage.

    No errors detected in file KLH$HLP.:E05TSI    .

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:287  

 Object Unit name= KLH$TSTRM                                  File name= KLH$HLP.:E05TOU
 UTS= JUL 30 '97 00:52:53.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$HLP
    2   Data  even  none     4      4  KLH$TSTRM
    3   DCB   even  none     0      0  M$CSCG
    4  RoData even  UTS     14     16  KLH$TSTRM
    5   Proc  even  none   203    313  KLH$TSTRM
    6  RoData even  none     5      5  KLH$TSTRM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        2  KLH$TSTRM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KLH$SGNTXT
 yes     yes           Std       5 JCM$SETU
         yes           Std       1 JCM$MAKEU
         yes           Std       2 JCM$RELJ
         yes           Std       3 KLX$9TO8
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:288  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$HLP                                 KL_TMSG
     VLR_PATHCON                           ES_LOGON_TIME                         B$JIT$
     B$TCB$                                M$CSCG                                FPT_PATHCON
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:289  


     1556        1        /*M* KLH$TSTRM Host log on timesharing terminals */
     1557        2        /*T***********************************************************/
     1558        3        /*T*                                                         */
     1559        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1560        5        /*T*                                                         */
     1561        6        /*T***********************************************************/
     1562        7        /*X* DTI=2,DCI=4,THI=2,CSI=2,ECI=2,STI=2,IND=2,ENI=2 */
     1563        8        KLH$TSTRM: PROC (PCD,KL_SGNRSP);

      8  5 000000   000000 700200 xent  KLH$TSTRM    TSX0  ! X66_AUTO_2
         5 000001   000022 000002                    ZERO    18,2

     1564        9        /*D* NAME:        KLH$TSTRM
     1565       10             PURPOSE:     To complete logging on of a timesharing user and terminal
     1566       11             CALL:        CALL KLH$TSTRM(PCD,KL_SGNRSP);
     1567       12             INPUT:       PCD - A KL_PCD structure describing the terminal
     1568       13                             logging on
     1569       14                          KL_SGNRSP - A signon response message to fill in
     1570       15             OUTPUT:      o A timesharing user (if all is successful)
     1571       16                          KL_SGNRSP - A signon response message
     1572       17             DESCRIPTION: KLH$TSTRM completes the logging on of a timesharing
     1573       18                          user. It first attempts to get a user number and sysid.
     1574       19                          Next, the user's initial 3 pages are obtained if possible
     1575       20                          and initialized. The user's terminal is now connected
     1576       21                          (by calling M$PATHCON) as a timesharing terminal.
     1577       22                          Finally, if all that was successful, the user is
     1578       23                          'made' by calling JCM$MAKEU and a user logon message
     1579       24                          is sent to this host's operator's console.
     1580       25
     1581       26                          The timesharing user is started in the SS_QA
     1582       27                          scheduler state pending a connect acknowledge on
     1583       28                          his now-dangling M$UC DCB's LDCT. This will come
     1584       29                          as a result of the yet-to-be-sent KL_SGNRSP message.
     1585       30
     1586       31                          If any errors occur, KL_SGNRSP is filled in but no
     1587       32                          user is made. KLH$TSTRM never ALTRETURNs.
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:290  
     1588       33        */
     1589       34        %INCLUDE B$JIT;
     1590      324        %INCLUDE CP_6;
     1591      405        %INCLUDE F$DCB;
     1592      454        %INCLUDE KL_MACRO_C;
     1593     3806        %INCLUDE KL_ERRORS_C;
     1594     3848        %INCLUDE KL_DATA_R;
     1595     4312        %INCLUDE KL_SUBS_C;
     1596     4366        %KL_PCD (FPTN=PCD,STCLASS="",CG=0);
     1597     4485        %KL_SGNRSP (FPTN=KL_SGNRSP,RSPSIZ=80,STCLASS="");
     1598     4620        %VLR_PATHCON (FPTN=VLR_PATHCON,STCLASS=SYMREF);
     1599     4634    1   DCL ES_LOGON_TIME UBIN WORD ALIGNED SYMREF; /* DEFed in KLH$HLP               */
     1600     4635    1   DCL ERR UBIN;
     1601     4636    1   DCL ERRB REDEF ERR BIT(36);
     1602     4637    1   DCL JIT$ PTR;
     1603     4638    1   DCL VM_UC$ PTR;
     1604     4639    1   DCL VROSEG$ PTR;
     1605     4640    1   DCL PP (0:2) UBIN WORD;
     1606     4641        %VLR_NXTUSR (FPTN=VLR_NXTUSR,STCLASS=STATIC);
     1607     4654    1   DCL B$JIT$ PTR SYMREF;
     1608     4655    1   DCL B$TCB$ PTR SYMREF;
     1609     4656        %B$TCB;
     1610     4659        %B$ALT;
     1611     4667    1   DCL M$CSCG DCB;
     1612     4668    1   DCL JCM$SETU ENTRY(5) ALTRET;
     1613     4669    1   DCL JCM$MAKEU ENTRY(1);
     1614     4670    1   DCL JCM$RELJ ENTRY(2);
     1615     4671    1   DCL KLH$SGNTXT ENTRY(2);
     1616     4672    1   DCL KLX$9TO8 ENTRY(3);
     1617     4673        %FPT_PATHCON (FPTN=FPT_PATHCON,STCLASS=SYMREF);
     1618     4688        %FPT_WRITE (FPTN=FPT_WRITE,STCLASS=CONSTANT,DCB=M$CSCG,BUF=KL_TMSG);
     1619     4719        %FPT_NXTUSR (FPTN=FPT_NXTUSR,STCLASS=CONSTANT,RESULTS=VLR_NXTUSR);
     1620     4732        %EJECT;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:291  
     1621     4733        /**/
     1622     4734        /* Get a timesharing user slot */
     1623     4735        /**/
     1624     4736    1           VLR_NXTUSR.MODE = %M_INT#;

   4736  5 000002   000003 235007                    LDA     3,DL
         5 000003   000000 755000 2                  STA     VLR_NXTUSR

     1625     4737    1           CALL M$NXTUSR (FPT_NXTUSR);

   4737  5 000004   000014 630400 4                  EPPR0   FPT_NXTUSR
         5 000005   020005 713400                    CLIMB   8197
         5 000006   400000 401760                    pmme    nvectors=1

     1626     4738    1           IF VLR_NXTUSR.ERR~=0

   4738  5 000007   000001 235000 2                  LDA     VLR_NXTUSR+1
         5 000010   000023 600000 5                  TZE     s:4747

     1627     4739    2             THEN DO;

     1628     4740    2               ERR=VLR_NXTUSR.ERR;

   4740  5 000011   200005 755100                    STA     ERR,,AUTO

     1629     4741    2   ERROUT:     CALL KLH$SGNTXT(KL_SGNRSP,ERR);

   4741  5 000012   200005 630500       ERROUT       EPPR0   ERR,,AUTO
         5 000013   200015 450500                    STP0    PP+4,,AUTO
         5 000014   200004 236100                    LDQ     @KL_SGNRSP,,AUTO
         5 000015   200014 756100                    STQ     PP+3,,AUTO
         5 000016   200014 630500                    EPPR0   PP+3,,AUTO
         5 000017   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000020   000000 701000 xent               TSX1    KLH$SGNTXT
         5 000021   000000 011000                    NOP     0

     1630     4742    2               RETURN;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:292  

   4742  5 000022   000000 702200 xent               TSX2  ! X66_ARET

     1631     4743    2               END;
     1632     4744        /**/
     1633     4745        /* Get and initialize first 3 user pages */
     1634     4746        /**/
     1635     4747    2           CALL JCM$SETU (VLR_NXTUSR.MODE,JIT$,VM_UC$,VROSEG$,PP) WHENALTRETURN DO;

   4747  5 000023   200011 630500                    EPPR0   PP,,AUTO
         5 000024   200020 450500                    STP0    PP+7,,AUTO
         5 000025   200010 631500                    EPPR1   VROSEG$,,AUTO
         5 000026   200017 451500                    STP1    PP+6,,AUTO
         5 000027   200007 633500                    EPPR3   VM_UC$,,AUTO
         5 000030   200016 453500                    STP3    PP+5,,AUTO
         5 000031   200006 634500                    EPPR4   JIT$,,AUTO
         5 000032   200015 454500                    STP4    PP+4,,AUTO
         5 000033   000000 236000 6                  LDQ     0
         5 000034   200014 756100                    STQ     PP+3,,AUTO
         5 000035   200014 630500                    EPPR0   PP+3,,AUTO
         5 000036   000023 631400 xsym               EPPR1   B_VECTNIL+19
         5 000037   000000 701000 xent               TSX1    JCM$SETU
         5 000040   000042 702000 5                  TSX2    s:4748
         5 000041   000052 710000 5                  TRA     s:4753

     1636     4748    2               VLR_NXTUSR.MODE = -VLR_NXTUSR.MODE;

   4748  5 000042   000000 335000 2                  LCA     VLR_NXTUSR
         5 000043   000000 755000 2                  STA     VLR_NXTUSR

     1637     4749    2               CALL M$NXTUSR (FPT_NXTUSR);

   4749  5 000044   000014 630400 4                  EPPR0   FPT_NXTUSR
         5 000045   020005 713400                    CLIMB   8197
         5 000046   400000 401760                    pmme    nvectors=1

     1638     4750    2               ERR=%E$NJIT;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:293  

   4750  5 000047   002266 235007                    LDA     1206,DL
         5 000050   200005 755100                    STA     ERR,,AUTO

     1639     4751    2               GOTO ERROUT;

   4751  5 000051   000012 710000 5                  TRA     ERROUT

     1640     4752    2               END;
     1641     4753    1           JIT$->B$JIT.USER=VLR_NXTUSR.USR;

   4753  5 000052   200006 470500                    LDP0    JIT$,,AUTO
         5 000053   000003 236000 2                  LDQ     VLR_NXTUSR+3
         5 000054   000022 736000                    QLS     18
         5 000055   000000 552120                    STBQ    0,'20'O,PR0

     1642     4754    1           JIT$->B$JIT.SYSID=VLR_NXTUSR.SYSID;

   4754  5 000056   000002 720000 2                  LXL0    VLR_NXTUSR+2
         5 000057   200006 470500                    LDP0    JIT$,,AUTO
         5 000060   000000 440100                    SXL0    0,,PR0

     1643     4755    1           JIT$->B$JIT.UNAME=PCD.TSINFO.UNAME;

   4755  5 000061   200003 470500                    LDP0    @PCD,,AUTO
         5 000062   200006 471500                    LDP1    JIT$,,AUTO
         5 000063   040100 100500                    MLR     fill='040'O
         5 000064   000016 600014                    ADSC9   14,,PR0                  cn=3,n=12
         5 000065   100003 000014                    ADSC9   3,,PR1                   cn=0,n=12

     1644     4756    1           JIT$->B$JIT.ACCN=PCD.TSINFO.ACCT;

   4756  5 000066   200006 471500                    LDP1    JIT$,,AUTO
         5 000067   040100 100500                    MLR     fill='040'O
         5 000070   000021 600010                    ADSC9   17,,PR0                  cn=3,n=8
         5 000071   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:294  
     1645     4757    1           JIT$->B$JIT.FACCN=PCD.TSINFO.ACCT;

   4757  5 000072   200006 471500                    LDP1    JIT$,,AUTO
         5 000073   040100 100500                    MLR     fill='040'O
         5 000074   000021 600010                    ADSC9   17,,PR0                  cn=3,n=8
         5 000075   100006 000010                    ADSC9   6,,PR1                   cn=0,n=8

     1646     4758    1           JIT$->B$JIT.HPSN=PCD.TSINFO.HPSN;

   4758  5 000076   200006 471500                    LDP1    JIT$,,AUTO
         5 000077   040100 100500                    MLR     fill='040'O
         5 000100   000023 600006                    ADSC9   19,,PR0                  cn=3,n=6
         5 000101   100234 000006                    ADSC9   156,,PR1                 cn=0,n=6

     1647     4759    1           JIT$->B$JIT.WOO=PCD.TSINFO.WOO;

   4759  5 000102   040100 100500                    MLR     fill='040'O
         5 000103   000025 600010                    ADSC9   21,,PR0                  cn=3,n=8
         5 000104   100010 000010                    ADSC9   8,,PR1                   cn=0,n=8

     1648     4760    1           JIT$->B$JIT.TSLINE.FEX=PCD.ADDD.FEX;

   4760  5 000105   000100 100500                    MLR     fill='000'O
         5 000106   000000 600001                    ADSC9   0,,PR0                   cn=3,n=1
         5 000107   100337 000001                    ADSC9   223,,PR1                 cn=0,n=1

     1649     4761    1           JIT$->B$JIT.TSLINE.SPEED=PCD.ADDD.SPEED;

   4761  5 000110   000100 100500                    MLR     fill='000'O
         5 000111   000003 200001                    ADSC9   3,,PR0                   cn=1,n=1
         5 000112   100337 200001                    ADSC9   223,,PR1                 cn=1,n=1

     1650     4762    1           JIT$->B$JIT.TSLINE.LEV=PCD.ADDD.TERMID.LEV;

   4762  5 000113   000100 100500                    MLR     fill='000'O
         5 000114   000003 400001                    ADSC9   3,,PR0                   cn=2,n=1
         5 000115   100340 000001                    ADSC9   224,,PR1                 cn=0,n=1
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:295  

     1651     4763    1           JIT$->B$JIT.TSLINE.TTYP=PCD.ADDD.TERMID.TTYP;

   4763  5 000116   000100 100500                    MLR     fill='000'O
         5 000117   000003 600001                    ADSC9   3,,PR0                   cn=3,n=1
         5 000120   100340 200001                    ADSC9   224,,PR1                 cn=1,n=1

     1652     4764    1           JIT$->B$JIT.TSLINE.SUBDEVICE=BITBIN(PCD.ADDD.TERMID.SUB);

   4764  5 000121   000100 101500                    MRL     fill='000'O
         5 000122   000004 400002                    ADSC9   4,,PR0                   cn=2,n=2
         5 000123   200014 000004                    ADSC9   PP+3,,AUTO               cn=0,n=4
         5 000124   200014 236100                    LDQ     PP+3,,AUTO
         5 000125   000000 620006                    EAX0    0,QL
         5 000126   100340 440100                    SXL0    224,,PR1

     1653     4765    1           JIT$->B$JIT.TSLINE.SUBSUBDEVICE=BITBIN(PCD.ADDD.TERMID.SUBSUB);

   4765  5 000127   000100 101500                    MRL     fill='000'O
         5 000130   000005 000002                    ADSC9   5,,PR0                   cn=0,n=2
         5 000131   200014 000004                    ADSC9   PP+3,,AUTO               cn=0,n=4
         5 000132   200014 236100                    LDQ     PP+3,,AUTO
         5 000133   000000 621006                    EAX1    0,QL
         5 000134   100341 741100                    STX1    225,,PR1

     1654     4766    1           JIT$->B$JIT.TSLINE.PORT=BITBIN(PCD.ADDD.TERMID.CHAN);

   4766  5 000135   000100 101500                    MRL     fill='000'O
         5 000136   000004 000002                    ADSC9   4,,PR0                   cn=0,n=2
         5 000137   200014 000004                    ADSC9   PP+3,,AUTO               cn=0,n=4
         5 000140   200014 236100                    LDQ     PP+3,,AUTO
         5 000141   000000 622006                    EAX2    0,QL
         5 000142   100337 442100                    SXL2    223,,PR1

     1655     4767    1           JIT$->B$JIT.LOGONTIME=ES_LOGON_TIME;

   4767  5 000143   000000 235000 xsym               LDA     ES_LOGON_TIME
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:296  
         5 000144   100150 755100                    STA     104,,PR1

     1656     4768    1           JIT$->B$JIT.BLINDACCTNG = PCD.TSINFO.NOSETUP;

   4768  5 000145   003100 060500                    CSL     bolr='003'O
         5 000146   000025 200001                    BDSC    21,,PR0                  by=1,bit=0,n=1
         5 000147   100153 400001                    BDSC    107,,PR1                 by=2,bit=0,n=1

     1657     4769    1           JIT$->B$JIT.LOCK (0) = PCD.TSINFO.NOHEADER;

   4769  5 000150   003100 060500                    CSL     bolr='003'O
         5 000151   000025 210001                    BDSC    21,,PR0                  by=1,bit=1,n=1
         5 000152   100154 000001                    BDSC    108,,PR1                 by=0,bit=0,n=1

     1658     4770    1           VM_UC$->F$DCB.LINES=PCD.TSINFO.LINES;

   4770  5 000153   200007 473500                    LDP3    VM_UC$,,AUTO
         5 000154   000100 100500                    MLR     fill='000'O
         5 000155   000027 600002                    ADSC9   23,,PR0                  cn=3,n=2
         5 000156   300044 000002                    ADSC9   36,,PR3                  cn=0,n=2

     1659     4771    1           VM_UC$->F$DCB.RECL=PCD.TSINFO.WIDTH;

   4771  5 000157   000100 101500                    MRL     fill='000'O
         5 000160   000030 200001                    ADSC9   24,,PR0                  cn=1,n=1
         5 000161   300033 400002                    ADSC9   27,,PR3                  cn=2,n=2

     1660     4772    1           VM_UC$->F$DCB.ATTR=PCD.TSINFO.ATTR;

   4772  5 000162   000100 100500                    MLR     fill='000'O
         5 000163   000030 400002                    ADSC9   24,,PR0                  cn=2,n=2
         5 000164   300040 400002                    ADSC9   32,,PR3                  cn=2,n=2

     1661     4773        /**/
     1662     4774        /* Connect the user's terminal to the system */
     1663     4775        /**/
     1664     4776    1           PCD.ADDD.CINFO.USER=VLR_NXTUSR.USR;
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:297  

   4776  5 000165   000100 101400                    MRL     fill='000'O
         5 000166   000003 000004 2                  ADSC9   VLR_NXTUSR+3             cn=0,n=4
         5 000167   000014 400001                    ADSC9   12,,PR0                  cn=2,n=1

     1665     4777    1           FPT_PATHCON.PCD_=VECTOR(PCD);

   4777  5 000170   000001 235000 6                  LDA     1
         5 000171   200003 236100                    LDQ     @PCD,,AUTO
         5 000172   000004 757000 xsym               STAQ    FPT_PATHCON+4

     1666     4778    2           CALL M$PATHCON (FPT_PATHCON) WHENALTRETURN DO;

   4778  5 000173   000000 630400 xsym               EPPR0   FPT_PATHCON
         5 000174   530000 713400                    CLIMB   alt,+45056
         5 000175   401000 401760                    pmme    nvectors=3
         5 000176   000200 702000 5                  TSX2    s:4779
         5 000177   000222 710000 5                  TRA     s:4788

     1667     4779    2               ERRB = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   4779  5 000200   000000 470400 xsym               LDP0    B$TCB$
         5 000201   000000 471500                    LDP1    0,,PR0
         5 000202   100102 236100                    LDQ     66,,PR1
         5 000203   200005 756100                    STQ     ERR,,AUTO

     1668     4780    2               VLR_NXTUSR.MODE = -VLR_NXTUSR.MODE;

   4780  5 000204   000000 335000 2                  LCA     VLR_NXTUSR
         5 000205   000000 755000 2                  STA     VLR_NXTUSR

     1669     4781    2               CALL M$NXTUSR (FPT_NXTUSR);

   4781  5 000206   000014 630400 4                  EPPR0   FPT_NXTUSR
         5 000207   020005 713400                    CLIMB   8197
         5 000210   400000 401760                    pmme    nvectors=1

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:298  
     1670     4782    2               CALL JCM$RELJ (PP,3);

   4782  5 000211   000002 236000 6                  LDQ     2
         5 000212   200015 756100                    STQ     PP+4,,AUTO
         5 000213   200011 630500                    EPPR0   PP,,AUTO
         5 000214   200014 450500                    STP0    PP+3,,AUTO
         5 000215   200014 630500                    EPPR0   PP+3,,AUTO
         5 000216   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000217   000000 701000 xent               TSX1    JCM$RELJ
         5 000220   000000 011000                    NOP     0

     1671     4783    2               GOTO ERROUT;

   4783  5 000221   000012 710000 5                  TRA     ERROUT

     1672     4784    2               END;
     1673     4785        /**/
     1674     4786        /* Fill in KL_SGNRSP.RLCID */
     1675     4787        /**/
     1676     4788    1           KL_SGNRSP.RLCID=VLR_PATHCON.RLCID;

   4788  5 000222   200004 470500                    LDP0    @KL_SGNRSP,,AUTO
         5 000223   000100 100400                    MLR     fill='000'O
         5 000224   000000 000004 xsym               ADSC9   VLR_PATHCON              cn=0,n=4
         5 000225   000001 400004                    ADSC9   1,,PR0                   cn=2,n=4

     1677     4789    1           CALL KLX$9TO8(VLR_PATHCON.RLCID.LDCTX,KL_SGNRSP.RLCID.LDCTX,2);

   4789  5 000226   000003 236000 6                  LDQ     3
         5 000227   200016 756100                    STQ     PP+5,,AUTO
         5 000230   200004 236100                    LDQ     @KL_SGNRSP,,AUTO
         5 000231   000002 036003                    ADLQ    2,DU
         5 000232   000004 235000 6                  LDA     4
         5 000233   200014 757100                    STAQ    PP+3,,AUTO
         5 000234   200014 630500                    EPPR0   PP+3,,AUTO
         5 000235   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000236   000000 701000 xent               TSX1    KLX$9TO8
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:299  
         5 000237   000000 011000                    NOP     0

     1678     4790        /**/
     1679     4791        /* 'Connect' the user's terminal to his M$UC DCB */
     1680     4792        /**/
     1681     4793    1           VM_UC$->F$DCB.LDCTX=VLR_PATHCON.RLCID.LDCTX;

   4793  5 000240   000000 720000 xsym               LXL0    VLR_PATHCON
         5 000241   200007 470500                    LDP0    VM_UC$,,AUTO
         5 000242   000051 740100                    STX0    41,,PR0

     1682     4794    1           VM_UC$->F$DCB.SETX=VLR_PATHCON.RLCID.LDCTX;

   4794  5 000243   000051 440100                    SXL0    41,,PR0

     1683     4795        /**/
     1684     4796        /* Introduce the new user to the system */
     1685     4797        /**/
     1686     4798    1           CALL JCM$MAKEU (PP);

   4798  5 000244   200011 631500                    EPPR1   PP,,AUTO
         5 000245   200014 451500                    STP1    PP+3,,AUTO
         5 000246   200014 630500                    EPPR0   PP+3,,AUTO
         5 000247   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000250   000000 701000 xent               TSX1    JCM$MAKEU
         5 000251   000000 011000                    NOP     0

     1687     4799        /**/
     1688     4800        /* Write a line connect message to the console for the new user */
     1689     4801        /**/
     1690     4802    1           KL_TMSG.WSN=JIT$->B$JIT.WOO;

   4802  5 000252   200006 470500                    LDP0    JIT$,,AUTO
         5 000253   000010 237100                    LDAQ    8,,PR0
         5 000254   000003 755000 xsym               STA     KL_TMSG+3
         5 000255   000004 756000 xsym               STQ     KL_TMSG+4

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:300  
     1691     4803    1           KL_TMSG.FEX=PCD.ADDD.FEX;

   4803  5 000256   200003 471500                    LDP1    @PCD,,AUTO
         5 000257   000000 100500                    MLR     fill='000'O
         5 000260   100000 600001                    ADSC9   0,,PR1                   cn=3,n=1
         5 000261   000006 600001 xsym               ADSC9   KL_TMSG+6                cn=3,n=1

     1692     4804    1           KL_TMSG.FEPNAME=PCD.ADDD.FEPNAME;

   4804  5 000262   040000 100500                    MLR     fill='040'O
         5 000263   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
         5 000264   000016 200010 xsym               ADSC9   KL_TMSG+14               cn=1,n=8

     1693     4805    1           KL_TMSG.LN#=BITBIN(PCD.ADDD.TERMID.CHAN);

   4805  5 000265   000100 101500                    MRL     fill='000'O
         5 000266   100004 000002                    ADSC9   4,,PR1                   cn=0,n=2
         5 000267   200014 000004                    ADSC9   PP+3,,AUTO               cn=0,n=4
         5 000270   200014 236100                    LDQ     PP+3,,AUTO
         5 000271   000000 620006                    EAX0    0,QL
         5 000272   000007 740000 xsym               STX0    KL_TMSG+7

     1694     4806    1           KL_TMSG.SID=VLR_NXTUSR.SYSID;

   4806  5 000273   000002 721000 2                  LXL1    VLR_NXTUSR+2
         5 000274   000007 441000 xsym               SXL1    KL_TMSG+7

     1695     4807    1           KL_TMSG.UNM=VLR_NXTUSR.USR;

   4807  5 000275   000000 101400                    MRL     fill='000'O
         5 000276   000003 000004 2                  ADSC9   VLR_NXTUSR+3             cn=0,n=4
         5 000277   000015 600002 xsym               ADSC9   KL_TMSG+13               cn=3,n=2

     1696     4808    1           KL_TMSG.ACCT=PCD.TSINFO.ACCT;

   4808  5 000300   040000 100500                    MLR     fill='040'O
         5 000301   100021 600010                    ADSC9   17,,PR1                  cn=3,n=8
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:301  
         5 000302   000010 000010 xsym               ADSC9   KL_TMSG+8                cn=0,n=8

     1697     4809    1           KL_TMSG.NME=PCD.TSINFO.UNAME;

   4809  5 000303   040000 100500                    MLR     fill='040'O
         5 000304   100016 600014                    ADSC9   14,,PR1                  cn=3,n=12
         5 000305   000012 000017 xsym               ADSC9   KL_TMSG+10               cn=0,n=15

     1698     4810    1           CALL M$WRITE (FPT_WRITE) ALTRET (IGNORE);

   4810  5 000306   000000 630400 4                  EPPR0   FPT_WRITE
         5 000307   440001 713400                    CLIMB   alt,write
         5 000310   401400 401760                    pmme    nvectors=4
         5 000311   000312 702000 5                  TSX2    IGNORE

     1699     4811    1   IGNORE: RETURN;

   4811  5 000312   000000 702200 xent  IGNORE       TSX2  ! X66_ARET
     1700     4812    1   END KLH$TSTRM;

PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:302  
--  Include file information  --

   KL_SUBS_C.:E05TOU  is referenced.
   KL_NETWORK_M.:E05TOU  is referenced.
   OC$MESSHD_C.:E05TOU  is referenced.
   KL_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KLH$TSTRM.
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:303  

 **** Variables and constants ****

  ****  Section 002  Data  KLH$TSTRM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(144)   r     1 VLR_NXTUSR

  ****  Section 004 RoData KLH$TSTRM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    14-0-0/d STRC(72)    r     1 FPT_NXTUSR                 0-0-0/d STRC(432)   r     1 FPT_WRITE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KL_SGNRSP                 3-0-0/w PTR         r     1 @PCD
     5-0-0/w UBIN        r     1 ERR                        5-0-0/w BIT         r     1 ERRB
     6-0-0/w PTR         r     1 JIT$                      *0-0-0/w STRC(1008)  r     1 KL_SGNRSP
    *0-0-0/c STRC(900)   r     1 PCD                       11-0-0/w UBIN        r     1 PP(0:2)
     7-0-0/w PTR         r     1 VM_UC$                    10-0-0/w PTR         r     1 VROSEG$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 ES_LOGON_TIME              0-0-0/d STRC(288)   r     1 FPT_PATHCON
     0-0-0/w STRC(585)   r     1 KL_TMSG                    0-0-0/d STRC        r     1 VLR_PATHCON

  ****  BASED and DCB variables  ****
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:304  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$CSCG


   Procedure KLH$TSTRM requires 203 words for executable code.
   Procedure KLH$TSTRM requires 18 words of local(AUTO) storage.

    No errors detected in file KLH$HLP.:E05TSI    .
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:305  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:306  
          MINI XREF LISTING

B$ALT.CODE
      4661**DCL      4661--REDEF    4662--REDEF    4662--REDEF
B$ALT.ERR
      4662**DCL      4779>>ASSIGN
B$ALT.ERR.ERR#
      4663**DCL      4663--REDEF
B$ALT.EVID
      4662**DCL      4662--REDEF    4662--REDEF
B$JIT.ACCN
        48**DCL      4756<<ASSIGN
B$JIT.BLINDACCTNG
       196**DCL      4768<<ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       142**DCL       142--REDEF
B$JIT.ERR.MID
        49**DCL        49--REDEF
B$JIT.FACCN
        48**DCL      4757<<ASSIGN
B$JIT.HPSN
       216**DCL      4758<<ASSIGN
B$JIT.JRESPEAK
       210**DCL       211--REDEF
B$JIT.LOCK
       197**DCL      4769<<ASSIGN
B$JIT.LOGONTIME
       185**DCL      4767<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
       319**DCL       319--REDEF     320--REDEF
B$JIT.PNR
       223**DCL       223--REDEF
B$JIT.SYSID
        48**DCL      4754<<ASSIGN
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:307  
B$JIT.TSLINE
       317**DCL       318--REDEF
B$JIT.TSLINE.FEX
       317**DCL      4760<<ASSIGN
B$JIT.TSLINE.LEV
       318**DCL      4762<<ASSIGN
B$JIT.TSLINE.PORT
       317**DCL      4766<<ASSIGN
B$JIT.TSLINE.SPEED
       317**DCL      4761<<ASSIGN
B$JIT.TSLINE.SUBDEVICE
       318**DCL      4764<<ASSIGN
B$JIT.TSLINE.SUBSUBDEVICE
       318**DCL      4765<<ASSIGN
B$JIT.TSLINE.TTYP
       318**DCL      4763<<ASSIGN
B$JIT.UNAME
        48**DCL      4755<<ASSIGN
B$JIT.USER
        48**DCL      4753<<ASSIGN
B$JIT.WOO
        48**DCL      4759<<ASSIGN   4802>>ASSIGN
B$JIT$
      4654**DCL        43--IMP-PTR
B$TCB.ALT$
      4657**DCL      4779>>ASSIGN
B$TCB$
      4655**DCL      4779>>ASSIGN
ERR
      4635**DCL      4636--REDEF    4740<<ASSIGN   4741<>CALL     4750<<ASSIGN
ERRB
      4636**DCL      4779<<ASSIGN
ERROUT
      4741**LABEL    4751--GOTO     4783--GOTO
ES_LOGON_TIME
      4634**DCL      4767>>ASSIGN
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:308  
F$DCB.ACTPOS
       431**DCL       431--REDEF
F$DCB.ARS
       406**DCL       406--REDEF
F$DCB.ATTR
       424**DCL       425--REDEF    4772<<ASSIGN
F$DCB.BORROW
       439**DCL       439--REDEF     439--REDEF     439--REDEF
F$DCB.DCBNAME.L
       453**DCL       453--IMP-SIZ
F$DCB.EOMCHAR
       410**DCL       410--REDEF
F$DCB.FLDID
       434**DCL       434--REDEF
F$DCB.FORM$
       428**DCL       428--REDEF
F$DCB.FSECT
       444**DCL       444--REDEF
F$DCB.FSN
       421**DCL       421--REDEF     421--REDEF     422--REDEF
F$DCB.HEADER$
       427**DCL       427--REDEF
F$DCB.IXTNSIZE
       425**DCL       425--REDEF
F$DCB.LASTSTA$
       415**DCL       415--REDEF
F$DCB.LDCTX
       428**DCL      4793<<ASSIGN
F$DCB.LINES
       427**DCL      4770<<ASSIGN
F$DCB.LVL
       440**DCL       440--REDEF
F$DCB.NAME.C
       415**DCL       415--REDEF
F$DCB.NOEOF
       436**DCL       436--REDEF
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:309  
F$DCB.NRECS
       426**DCL       426--REDEF
F$DCB.NRECX
       445**DCL       445--REDEF
F$DCB.OHDR
       437**DCL       437--REDEF
F$DCB.ORG
       420**DCL       420--REDEF
F$DCB.PRECNO
       443**DCL       443--REDEF
F$DCB.RCSZ
       448**DCL       448--REDEF
F$DCB.RECL
       421**DCL      4771<<ASSIGN
F$DCB.RES
       416**DCL       416--REDEF
F$DCB.SETX
       428**DCL       428--REDEF    4794<<ASSIGN
F$DCB.TAB$
       427**DCL       428--REDEF
F$DCB.TDA
       442**DCL       442--REDEF
F$DCB.WSN
       417**DCL       417--REDEF
FPT_NXTUSR
      4730**DCL      4737<>CALL     4749<>CALL     4781<>CALL
FPT_PATHCON
      4684**DCL      4778<>CALL
FPT_PATHCON.PCD_
      4685**DCL      4777<<ASSIGN
FPT_WRITE
      4705**DCL      4810<>CALL
FPT_WRITE.STATION_
      4707**DCL      4707--REDEF
FPT_WRITE.V
      4708**DCL      4705--DCLINIT
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:310  
FPT_WRITE.V.DVBYTE.VFC#
      4714**DCL      4714--REDEF
IGNORE
      4811**LABEL    4810--CALLALT
JCM$MAKEU
      4669**DCL-ENT  4798--CALL
JCM$RELJ
      4670**DCL-ENT  4782--CALL
JCM$SETU
      4668**DCL-ENT  4747--CALL
JIT$
      4637**DCL      4747<>CALL     4753>>ASSIGN   4754>>ASSIGN   4755>>ASSIGN   4756>>ASSIGN   4757>>ASSIGN
      4758>>ASSIGN   4759>>ASSIGN   4760>>ASSIGN   4761>>ASSIGN   4762>>ASSIGN   4763>>ASSIGN   4764>>ASSIGN
      4765>>ASSIGN   4766>>ASSIGN   4767>>ASSIGN   4768>>ASSIGN   4769>>ASSIGN   4802>>ASSIGN
KLH$SGNTXT
      4671**DCL-ENT  4741--CALL
KLX$9TO8
      4672**DCL-ENT  4789--CALL
KL_AUTOFAIL.FLAGS
      4152**DCL      4153--REDEF
KL_AUTOFAIL.MSGID
      4148**DCL      4149--REDEF
KL_AUTOFAIL.WSN
      4155**DCL      4156--REDEF
KL_FEMSG.FLAGS
      4102**DCL      4103--REDEF
KL_FEMSG.MSGID
      4098**DCL      4099--REDEF
KL_FEMSG.WSN
      4105**DCL      4106--REDEF
KL_NETWORK_BUF.TERMINAL_ID.TERM
      4292**DCL      4301--REDEF
KL_NETWORK_KEY.KEY.TERMID.TERM
      4218**DCL      4227--REDEF
KL_RDBF.FEL#
      4061**DCL      4062--REDEF
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:311  
KL_SGNRSP
      4500**DCL         8--PROC     4741<>CALL
KL_SGNRSP.NMID
      4513**DCL      4516--REDEF
KL_SGNRSP.RLCID
      4524**DCL      4788<<ASSIGN
KL_SGNRSP.RLCID.LDCTX
      4532**DCL      4789<>CALL
KL_SGNRSP.TERMID.TERM
      4603**DCL      4612--REDEF
KL_TMSG
      4117**DCL      4706--DCLINIT  4707--DCLINIT
KL_TMSG.ACCT
      4140**DCL      4808<<ASSIGN
KL_TMSG.FEPNAME
      4143**DCL      4804<<ASSIGN
KL_TMSG.FEX
      4137**DCL      4803<<ASSIGN
KL_TMSG.FLAGS
      4124**DCL      4125--REDEF
KL_TMSG.LN#
      4138**DCL      4805<<ASSIGN
KL_TMSG.MSGID
      4120**DCL      4121--REDEF
KL_TMSG.NME
      4141**DCL      4809<<ASSIGN
KL_TMSG.SID
      4139**DCL      4806<<ASSIGN
KL_TMSG.UNM
      4142**DCL      4807<<ASSIGN
KL_TMSG.WSN
      4127**DCL      4128--REDEF    4802<<ASSIGN
M$NXTUSR
       399**DCL-ENT  4737--CALL     4749--CALL     4781--CALL
M$PATHCON
       397**DCL-ENT  4778--CALL
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:312  
M$WRITE
       334**DCL-ENT  4810--CALL
PCD
      4381**DCL         8--PROC     4777--ASSIGN
PCD.ADDD.CINFO
      4431**DCL      4435--REDEF
PCD.ADDD.CINFO.USER
      4432**DCL      4776<<ASSIGN
PCD.ADDD.DEVNM
      4424**DCL      4425--REDEF
PCD.ADDD.FEPNAME
      4409**DCL      4804>>ASSIGN
PCD.ADDD.FEX
      4408**DCL      4760>>ASSIGN   4803>>ASSIGN
PCD.ADDD.NMID
      4438**DCL      4439--REDEF
PCD.ADDD.SPEED
      4417**DCL      4761>>ASSIGN
PCD.ADDD.TERMID.CHAN
      4421**DCL      4766>>ASSIGN   4805>>ASSIGN
PCD.ADDD.TERMID.LEV
      4419**DCL      4762>>ASSIGN
PCD.ADDD.TERMID.SUB
      4422**DCL      4764>>ASSIGN
PCD.ADDD.TERMID.SUBSUB
      4423**DCL      4765>>ASSIGN
PCD.ADDD.TERMID.TTYP
      4420**DCL      4763>>ASSIGN
PCD.TSINFO.ACCT
      4474**DCL      4756>>ASSIGN   4757>>ASSIGN   4808>>ASSIGN
PCD.TSINFO.ATTR
      4482**DCL      4772>>ASSIGN
PCD.TSINFO.HPSN
      4475**DCL      4758>>ASSIGN
PCD.TSINFO.LINES
      4480**DCL      4770>>ASSIGN
PL6.E3A0      #007=KLH$TSTRM File=KLH$HLP.:E05TSI                                WED 07/30/97 00:52 Page:313  
PCD.TSINFO.NOHEADER
      4477**DCL      4769>>ASSIGN
PCD.TSINFO.NOSETUP
      4476**DCL      4768>>ASSIGN
PCD.TSINFO.UNAME
      4473**DCL      4755>>ASSIGN   4809>>ASSIGN
PCD.TSINFO.WIDTH
      4481**DCL      4771>>ASSIGN
PCD.TSINFO.WOO
      4479**DCL      4759>>ASSIGN
PP
      4640**DCL      4747<>CALL     4782<>CALL     4798<>CALL
VLR_NXTUSR
      4652**DCL      4730--DCLINIT
VLR_NXTUSR.ERR
      4652**DCL      4738>>IF       4740>>ASSIGN
VLR_NXTUSR.MODE
      4652**DCL      4736<<ASSIGN   4747<>CALL     4748<<ASSIGN   4748>>ASSIGN   4780<<ASSIGN   4780>>ASSIGN
VLR_NXTUSR.SYSID
      4652**DCL      4754>>ASSIGN   4806>>ASSIGN
VLR_NXTUSR.USR
      4652**DCL      4753>>ASSIGN   4776>>ASSIGN   4807>>ASSIGN
VLR_PATHCON.RLCID
      4631**DCL      4788>>ASSIGN
VLR_PATHCON.RLCID.LDCTX
      4632**DCL      4789<>CALL     4793>>ASSIGN   4794>>ASSIGN
VM_UC$
      4638**DCL      4747<>CALL     4770>>ASSIGN   4771>>ASSIGN   4772>>ASSIGN   4793>>ASSIGN   4794>>ASSIGN
VROSEG$
      4639**DCL      4747<>CALL
