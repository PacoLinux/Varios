

14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          1    
    1      /*M* Static rate table macros for B$RATE tables
    2      */
    3      /*T***********************************************************/
    4      /*T*                                                         */
    5      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    6      /*T*                                                         */
    7      /*T***********************************************************/
    8      /*X* MEC,MOC,EXM=20,CLM=30,CRM=100   */
    9                          /*F* NAME: B$FORM_TBL
   10                          RECORD TYPE FROM B$RATE FILE WHICH CONTAINS FORM
   11                          CHARGING INFORMATION. ITS KEY IS FORM$$$$$$ WHERE $$$$$$ IS
   12                          A LEFT JUSTIFIED, BLANK FILLED ASCII STRING. CHARGE INFORMATION IS
   13                          STORED IN SIGNED, FLOATING POINT, PACKED-DECIMAL FORMAT OF 13
   14                          SIGNIFICANT FIGURES.                                                          */
   15      %MACRO B$FORM_TBL (FPTN  = B$FORM_TBL,
   16                       FORM    = '3'O,
   17                       FMOUNT  = '3'O,
   18                       STCLASS = STATIC);
   19
   20      %LSET LISTDIR='0'B;
   21      %LSET LISTEXP='1'B;
   22      %LSET LISTCOM='0'B;
   23      %LSET LISTSUB='1'B;
   24      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   25      %IF (SUBSTR(STR,0,6)='STATIC') OR
   26       (SUBSTR(STR,0,8)='CONSTANT') OR
   27       (SUBSTR(STR,0,3)='EXT');
   28       %LSET INIT=CHARTEXT('INIT');
   29      %ELSE;
   30       %LSET INIT=CHARTEXT('/*');
   31      %ENDIF;
   32
   33      DCL 1 FPTN DALIGNED STCLASS,
   34            2 FORM# BIT(72) %INIT(FORM)%CHARTEXT('/**/'),
   35                          /*K* FORM = RATE PER UNIT OF THIS FORM                                        */
   36            2 FMOUNT# BIT(72) %INIT(FMOUNT)%CHARTEXT('/**/'),
   37                          /*K* FMOUNT = RATE PER MOUNT OF THIS FORM                                     */
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          2    
   38            2 * BIT(72),            /* UNUSED                                                           */
   39            2 * BIT(72);            /* UNUSED                                                           */
   40      %MEND;
   41                          /*F* NAME: B$PROC_TBL
   42                          RECORD TYPE FROM B$RATE TABLE WHICH CONTAINS PROCESSOR
   43                          ASSOCIATED INFORMATION. ITS KEY IS FORMED AS PROC$$$$$$ WHERE $$$$$$
   44                          IS A LEFT JUSTIFIED, BLANK FILLED ASCII STRING.                               */
   45      %MACRO B$PROC_TBL (FPTN  = B$PROC_TBL,
   46                       RTABLE  = ' ',
   47                       INSPEC1 = ' ',
   48                       INSPEC2 = ' ',
   49                       INSPEC3 = ' ',
   50                       STCLASS = STATIC);
   51
   52      %LSET LISTDIR='0'B;
   53      %LSET LISTEXP='1'B;
   54      %LSET LISTCOM='0'B;
   55      %LSET LISTSUB='1'B;
   56      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   57      %IF (SUBSTR(STR,0,6)='STATIC') OR
   58       (SUBSTR(STR,0,8)='CONSTANT') OR
   59       (SUBSTR(STR,0,3)='EXT');
   60       %LSET INIT=CHARTEXT('INIT');
   61      %ELSE;
   62       %LSET INIT=CHARTEXT('/*');
   63      %ENDIF;
   64
   65      DCL 1 FPTN DALIGNED STCLASS,
   66            2 RTABLE# CHAR(6) %INIT(RTABLE)%CHARTEXT('/**/'),
   67                          /*K* RTABLE = QUALIFIER OF ASSOCIATED RATE TABLE
   68                          STORED AS 6 CHARACTER LEFT JUSTIFIED, BLANK FILLED
   69                          STRING.                                                                       */
   70            2 * CHAR(2) %INIT(' ')%CHARTEXT('/**/'), /* UNUSED                                          */
   71            2 INSPEC#(0:2) CHAR(16)
   72                          /*K* INSPEC = INSTALLATION SPECIFIC FIELD. THE
   73                          INSTALLATION MAY USE THESE FIELDS FOR ANYTHING THEY
   74                          WISH. CP6 WILL NOT USE THESE FIELDS.                                          */
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          3    
   75              %INIT(INSPEC1,
   76              INSPEC2,
   77              INSPEC3)%CHARTEXT('/**/');
   78      %MEND;
   79                          /*F* NAME: B$SCHED_TBL
   80                          B$RATE RECORD TYPE WHICH CONTAINS SCHEDULE
   81                          ASSOCIATED INFORMATION. ITS KEY IS FORMED AS SCHEDnnn WHERE nnn
   82                          IS A RIGHT JUSTIFIED, ASCII ZERO FILLED ASCII DECIMAL STRING.                 */
   83      %MACRO B$SCHED_TBL (FPTN = B$SCHED_TBL,
   84                       RTABLE  = ' ',
   85                       INSPEC1 = ' ',
   86                       INSPEC2 = ' ',
   87                       INSPEC3 = ' ',
   88                       STCLASS = STATIC);
   89
   90      %LSET LISTDIR='0'B;
   91      %LSET LISTEXP='1'B;
   92      %LSET LISTCOM='0'B;
   93      %LSET LISTSUB='1'B;
   94      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   95      %IF (SUBSTR(STR,0,6)='STATIC') OR
   96       (SUBSTR(STR,0,8)='CONSTANT') OR
   97       (SUBSTR(STR,0,3)='EXT');
   98       %LSET INIT=CHARTEXT('INIT');
   99      %ELSE;
  100       %LSET INIT=CHARTEXT('/*');
  101      %ENDIF;
  102
  103      DCL 1 FPTN DALIGNED STCLASS,
  104            2 RTABLE# CHAR(6) %INIT(RTABLE)%CHARTEXT('/**/'),
  105                          /*K* RTABLE = QUALIFIER OF ASSOCIATED RATE TABLE
  106                          STORED AS 6 CHARACTER LEFT JUSTIFIED, BLANK FILLED
  107                          STRING.                                                                       */
  108            2 * CHAR(2) %INIT(' ')%CHARTEXT('/**/'),
  109            2 INSPEC#(0:2) CHAR(16)
  110                          /*K* INSPEC = INSTALLATION SPECIFIC FIELD. THE
  111                          INSTALLATION MAY USE THESE FIELDS FOR ANYTHING THEY
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          4    
  112                          WISH. CP6 WILL NOT USE THESE FIELDS.                                          */
  113              %INIT(INSPEC1,
  114              INSPEC2,
  115              INSPEC3)%CHARTEXT('/**/');
  116      %MEND;
  117                          /*F* NAME: B$RATE_TBL
  118                          B$RATE RECORD TYPE WHICH CONTAINS GENERAL RATE
  119                          INFORMATION. ITS KEY IS FORMED AS RATEnnn WHERE nnn IS A RIGHT
  120                          JUSTIFIED, ASCII ZERO FILLED ASCII DECIMAL STRING. RATE VALUES ARE
  121                          STORED IN SIGNED, FLOATING POINT, PACKED DECIMAL FORMAT OF
  122                          13 SIGNIFICANT FIGURES.                                                       */
  123      %MACRO B$RATE_TBL (FPTN  = B$RATE_TBL,
  124                       PERCENT = '0'B,
  125                       LCP6    = '0'B,
  126                       J1NAME  = ' ',
  127                       J1RATE  = '3'O,
  128                       J2NAME  = ' ',
  129                       J2RATE  = '3'O,
  130                       J3NAME  = ' ',
  131                       J3RATE  = '3'O,
  132                       J4NAME  = ' ',
  133                       J4RATE  = '3'O,
  134                       S1NAME  = ' ',
  135                       S1RATE  = '3'O,
  136                       S2NAME  = ' ',
  137                       S2RATE  = '3'O,
  138                       S3NAME  = ' ',
  139                       S3RATE  = '3'O,
  140                       S4NAME  = ' ',
  141                       S4RATE  = '3'O,
  142                       CMULT   = '3'O,
  143                       JSTEPS  = '3'O,
  144                       TINTER  = '3'O,
  145                       FEPINT  = '3'O,
  146                       FMOUNT  = '3'O,
  147                       TMOUNT  = '3'O,
  148                       OMOUNT  = '3'O,
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          5    
  149                       PMMES   = '3'O,
  150                       FACCESS = '3'O,
  151                       TACCESS = '3'O,
  152                       OACCESS = '3'O,
  153                       PEXEC   = '3'O,
  154                       PSTIME  = '3'O,
  155                       UEXEC   = '3'O,
  156                       USTIME  = '3'O,
  157                       FCPU    = '3'O,
  158                       TCPU    = '3'O,
  159                       OCPU    = '3'O,
  160                       FCLOCK  = '3'O,
  161                       TCLOCK  = '3'O,
  162                       OCLOCK  = '3'O,
  163                       PMEM    = '3'O,
  164                       UMEM    = '3'O,
  165                       CONNECT = '3'O,
  166                       TPACK   = '3'O,
  167                       STCLASS = STATIC);
  168
  169      %LSET LISTDIR='0'B;
  170      %LSET LISTEXP='1'B;
  171      %LSET LISTCOM='0'B;
  172      %LSET LISTSUB='1'B;
  173      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  174      %IF (SUBSTR(STR,0,6)='STATIC') OR
  175       (SUBSTR(STR,0,8)='CONSTANT') OR
  176       (SUBSTR(STR,0,3)='EXT');
  177       %LSET INIT=CHARTEXT('INIT');
  178      %ELSE;
  179       %LSET INIT=CHARTEXT('/*');
  180      %ENDIF;
  181
  182      DCL 1 FPTN DALIGNED STCLASS,
  183            2 PERCENT# BIT(1) %INIT(PERCENT)%CHARTEXT('/**/'),
  184                          /*K* PERCENT = FLAG TO SPECIFY THAT THIS IS A PERCENT
  185                          OR NON-PERCENT TYPE RATE TABLE. NO SIGNIFIES NON-PERCENT
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          6    
  186                          TYPE TABLE.                                                                   */
  187            2 LCP6# BIT(1) %INIT(LCP6)%CHARTEXT('/**/'),
  188                          /*K* LCP6 = FLAG TO INDICATE THIS IS AN LCP6 TABLE.
  189                          */
  190            2 JUNIT(0:3) ALIGNED,
  191                          /*K* JUNIT = JOB UNIT. ASSOCIATED WITH FOUR CELLS IN THE
  192                          JIT WHICH ACCUMULATE NUMBER OF WHATEVER FOR THE ENTIRE
  193                          JOB                                                                           */
  194              3 NAME# CHAR(16)
  195                          /*K* NAME = 16 CHARACTER FIELD USED TO STORE ASSOCIATED
  196                          NAME FOR THIS JOB UNIT.                                                       */
  197                %INIT(J1NAME,
  198                J2NAME,
  199                J3NAME,
  200                J4NAME)%CHARTEXT('/**/'),
  201              3 RATE# BIT(72)
  202                          /*K* RATE = RATE ASSOCIATED WITH THIS JOB UNIT.                               */
  203                %INIT(J1RATE,
  204                J2RATE,
  205                J3RATE,
  206                J4RATE)%CHARTEXT('/**/'),
  207            2 SUNIT(0:3),
  208                          /*K* SUNIT = STEP UNIT. ONE OF FOUR FIELDS IN THE JIT USED
  209                          TO ACCUMULATE WAHTEVER FOR EACH JOB STEP. THESE FOUR JIT
  210                          FIELDS ARE CLEARED EACH JOB STEP.                                             */
  211              3 NAME# CHAR(16)
  212                          /*K* NAME = 16 CHARACTER NAME FIELD ASSOCIATED WITH THIS
  213                          STEP UNIT.                                                                    */
  214                %INIT(S1NAME,
  215                S2NAME,
  216                S3NAME,
  217                S4NAME)%CHARTEXT('/**/'),
  218              3 RATE# BIT(72)
  219                          /*K* RATE = RATE ASSOCIATED WITH THIS STEP UNIT.                              */
  220                %INIT(S1RATE,
  221                S2RATE,
  222                S3RATE,
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          7    
  223                S4RATE)%CHARTEXT('/**/'),
  224            2 CMULT# BIT(72) %INIT(CMULT)%CHARTEXT('/**/'),
  225                          /*K* CMULT = CURRENCY MULTIPLIER USED TO MULTIPLY ANY
  226                          RESULTS OBTAINED FROM THIS TABLE BY. USED TO CONVERT CHARGE
  227                          UNITS INTO DOLLARS AND CENTS(SHILLINGS AND PENCE?)                            */
  228            2 JSTEPS# BIT(72) %INIT(JSTEPS)%CHARTEXT('/**/'),
  229                          /*K* JSTEPS = CHARGE PER JOB STEP.                                            */
  230            2 TINTER# BIT(72) %INIT(TINTER)%CHARTEXT('/**/'),
  231                          /*K* TINTER = CHARGE PER TERMINAL INTERACTION.                                */
  232            2 FEPINT# BIT(72) %INIT(FEPINT)%CHARTEXT('/**/'),
  233                          /*K* FEPINT = CHARGE PRE FEP INTERRUPT LEVEL.
  234                          */
  235            2 FMOUNT# BIT(72) %INIT(FMOUNT)%CHARTEXT('/**/'),
  236                          /*K* FMOUNT = CHARGE PER PACK MOUNT.                                          */
  237            2 TMOUNT# BIT(72) %INIT(TMOUNT)%CHARTEXT('/**/'),
  238                          /*K* TMOUNT = CHARGE PER TAPE MOUNT.                                          */
  239            2 OMOUNT# BIT(72) %INIT(OMOUNT)%CHARTEXT('/**/'),
  240                          /*K* OMOUNT = CHARGE PER OTHER MOUNT.                                         */
  241            2 PMMES# BIT(72)  %INIT(PMMES)%CHARTEXT('/**/'),
  242                          /*K* PMMES = CHARGE PER PMME.                                                 */
  243            2 FACCESS# BIT(72) %INIT(FACCESS)%CHARTEXT('/**/'),
  244                          /*K* FACCESS = CHARGE PER FILE ACCESS.                                        */
  245            2 TACCESS# BIT(72) %INIT(TACCESS)%CHARTEXT('/**/'),
  246                          /*K* TACCESS = CHARGE PER TAPE ACCESS.                                        */
  247            2 OACCESS# BIT(72) %INIT(OACCESS)%CHARTEXT('/**/'),
  248                          /*K* OACCESS = CHARGE PER OTHER ACCESS.                                       */
  249            2 PEXEC# BIT(72) %INIT(PEXEC)%CHARTEXT('/**/'),
  250                          /*K* PEXEC = CHARGE PER MINUTE OF PROCESSOR EXECUTION TIME                    */
  251            2 PSTIME# BIT(72) %INIT(PSTIME)%CHARTEXT('/**/'),
  252                          /*K* PSTIME = CHARGE PER MINUTE OF MONITOR SERVICE TIME FOR
  253                          SHARED PROCESSORS.                                                            */
  254            2 UEXEC# BIT(72) %INIT(UEXEC)%CHARTEXT('/**/'),
  255                          /*K* UEXEC = CHARGE PER MINUTE OF USER EXECUTION TIME.                        */
  256            2 USTIME# BIT(72) %INIT(USTIME)%CHARTEXT('/**/'),
  257                          /*K* USTIME = CHARGE PER MINUTE OF MONITOR SERVICE TIME
  258                          FOR OTHER THAN SHARED PROCESSORS.                                             */
  259            2 FCPU# BIT(72) %INIT(FCPU)%CHARTEXT('/**/'),
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          8    
  260                          /*K* FPCU = CHARGE PER CPU MINUTE FOR PACK USAGE.                             */
  261            2 TCPU# BIT(72) %INIT(TCPU)%CHARTEXT('/**/'),
  262                          /*K* TPCU = CHARGE PER CPU MINUTE FOR TAPE USAGE.                             */
  263            2 OCPU# BIT(72) %INIT(OCPU)%CHARTEXT('/**/'),
  264                          /*K* OCPU = Charge per CPU minute for "other" usage.
  265                          */
  266            2 FCLOCK# BIT(72) %INIT(FCLOCK)%CHARTEXT('/**/'),
  267                          /*K* FCLOCK = Charge per clock minute for pack usage.
  268                          */
  269            2 TCLOCK# BIT(72) %INIT(TCLOCK)%CHARTEXT('/**/'),
  270                          /*K* TCLOCK = Charge per clock minute for tape usage.
  271                          */
  272            2 OCLOCK# BIT(72) %INIT(OCLOCK)%CHARTEXT('/**/'),
  273                          /*K* OCLOCK = Charge per clock minute for "other" usage.
  274                          */
  275            2 PMEM# BIT(72) %INIT(PMEM)%CHARTEXT('/**/'),
  276                          /*K* PMEM = CHARGE PER CPU PAGE-MINUTE OF PROCESSOR MEMORY                    */
  277            2 UMEM# BIT(72) %INIT(UMEM)%CHARTEXT('/**/'),
  278                          /*K* UMEM = CHARGE PER CPU PAGE-MINUTE OF USER      MEMORY                    */
  279            2 CONNECT# BIT(72) %INIT(CONNECT)%CHARTEXT('/**/'),
  280                          /*K* CONNECT = CHARGE PER MINUTE OF CONNECT TIME.                             */
  281            2 TPACK# BIT(72) %INIT(TPACK)%CHARTEXT('/**/');
  282                          /*K* TPACK = CHARGE PER CLOCK GRANULE-MINUTE OF TEMPORARY PACK SPACE          */
  283      %MEND;
  284
  285
  286
  287
  288
  289                          /*F* NAME: B$LCP6_TBL
  290                          The B$LCP6_TBL record contains rate information for
  291                          LCP-6 usage.  Its key is formed as LCP6nnn where nnn
  292                          is a right justified, ASCII zero filled, ASCII decimal
  293                          string.  Rate values are stored in signed, floating
  294                          point, packed decimal format of 13 significant figures.
  295                          */
  296      %MACRO B$LCP6_TBL (FPTN  = B$LCP6_TBL,
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          9    
  297                       PERCENT = '0'B,
  298                       J1NAME  = ' ',
  299                       J1RATE  = '3'O,
  300                       J2NAME  = ' ',
  301                       J2RATE  = '3'O,
  302                       J3NAME  = ' ',
  303                       J3RATE  = '3'O,
  304                       J4NAME  = ' ',
  305                       J4RATE  = '3'O,
  306                       S1NAME  = ' ',
  307                       S1RATE  = '3'O,
  308                       S2NAME  = ' ',
  309                       S2RATE  = '3'O,
  310                       S3NAME  = ' ',
  311                       S3RATE  = '3'O,
  312                       S4NAME  = ' ',
  313                       S4RATE  = '3'O,
  314                       CMULT   = '3'O,
  315                       JSTEPS  = '3'O,
  316                       MCLS    = '3'O,
  317                       PEXEC   = '3'O,
  318                       PSTIME  = '3'O,
  319                       PMEM    = '3'O,
  320                       UEXEC   = '3'O,
  321                       USTIME  = '3'O,
  322                       UMEM    = '3'O,
  323                       INTS    = '3'O,
  324                       CONNECT = '3'O,
  325                       HOACCESS = '3'O,
  326                       UCACCESS = '3'O,
  327                       STCLASS = STATIC);
  328
  329      %LSET LISTDIR='0'B;
  330      %LSET LISTEXP='1'B;
  331      %LSET LISTCOM='0'B;
  332      %LSET LISTSUB='1'B;
  333      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          10   
  334      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
  335      %LSET INIT=CHARTEXT(' INIT');
  336      %LSET EINIT=CHARTEXT('');
  337      %ELSE;
  338      %LSET INIT=CHARTEXT('/*');
  339      %LSET EINIT=CHARTEXT('*/');
  340      %ENDIF;
  341
  342         %B$RATE_TBL (FPTN=FPTN,
  343                      LCP6='1'B,
  344                      STCLASS=STCLASS,
  345                      PERCENT=PERCENT,
  346                      J1NAME=J1NAME,
  347                      J2NAME=J2NAME,
  348                      J3NAME=J3NAME,
  349                      J4NAME=J4NAME,
  350                      J1RATE=J1RATE,
  351                      J2RATE=J2RATE,
  352                      J3RATE=J3RATE,
  353                      J4RATE=J4RATE,
  354                      S1NAME=S1NAME,
  355                      S2NAME=S2NAME,
  356                      S3NAME=S3NAME,
  357                      S4NAME=S4NAME,
  358                      S1RATE=S1RATE,
  359                      S2RATE=S2RATE,
  360                      S3RATE=S3RATE,
  361                      S4RATE=S4RATE,
  362                      CMULT=CMULT,
  363                      JSTEPS=JSTEPS,
  364                      PMMES=MCLS,
  365                      PEXEC=PEXEC,
  366                      PSTIME=PSTIME,
  367                      PMEM=PMEM,
  368                      UEXEC=UEXEC,
  369                      USTIME=USTIME,
  370                      UMEM=UMEM,
14:06 JUL 28 '97 AR_TBLS_C.:E05SI                                          11   
  371                      FEPINT=INTS,
  372                      OACCESS=HOACCESS,
  373                      TINTER=UCACCESS,
  374                      CONNECT=CONNECT);
  375      %MEND;
  376
  377
  378
  379
  380                          /*F* NAME:  B$COMM_TBL
  381                          The B$COMM_TBL record contains rate information for
  382                          communications usage.
  383
  384                          */
  385      %MACRO B$COMM_TBL (FPTN  = B$COMM_TBL,
  386                        STCLASS=STATIC);
  387
  388
  389      %LSET LISTDIR='0'B;
  390      %LSET LISTEXP='1'B;
  391      %LSET LISTCOM='0'B;
  392      %LSET LISTSUB='1'B;
  393      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
  394      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
  395      %LSET INIT=CHARTEXT(' INIT');
  396      %LSET EINIT=CHARTEXT('');
  397      %ELSE;
  398      %LSET INIT=CHARTEXT('/*');
  399      %LSET EINIT=CHARTEXT('*/');
  400      %ENDIF;
  401
  402      DCL 1 FPTN DALIGNED STCLASS,
  403            2 * SBIN;
  404      %MEND;

