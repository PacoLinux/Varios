

14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         1    
    1      /*M* AZ_MACRO_C contains macros used for accounting                    */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* MEC,MOC,EXM=20,CLM=20,CRM=100   */
    8
    9                          /*F* NAME: Accounting
   10
   11                          This appendix describes the records in
   12                          the :ACCTLG file and the records and keys
   13                          in the *S file.
   14                          */
   15
   16                          /*F* NAME:  ACCTLG - :ACCTLG File Accounting Structures
   17
   18                          The file :ACCTLG in the :SYS account contains the accounting
   19                          records.  This is a consecutive file containing records of
   20                          variable length.
   21                          The AZ_MACRO_C file contains macros that may be used
   22                          to generate a structure for each of the records in
   23                          :ACCTLG.
   24                          Each record in the file is identified by the
   25                          first byte in the record, which will contain one of the
   26                          following equated values from the AZ_SUBS_C include file:
   27
   28                          .fif
   29                          EQU         Value   macro name     record description
   30                          ----------- -----   ------------   -------------------------------
   31                          AZ$JSP          1   AZ_CP6_JSP     CP6 user accounting information
   32                          AZ$PGRANS       2   AZ_PGRANS      Disk space storage usage
   33                          AZ$COMACCTNG    3   AZ_COMACCTNG   Communications device usage
   34                          AZ$GACID        4   AZ_GACID       PIG granule accounting
   35                          AZ$CG           5   AZ_COMGRP      Comgroup accounting
   36                          AZ$SERV_GHOST   6   AZ_SERV_GHOST  System service ghosts accounting
   37                          AZ$LCP6         7   AZ_LCP6_JSP    LCP6 user accounting information
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         2    
   38                          .fin
   39
   40                          A description of each of these records follows.
   41                          */
   42
   43                          /*F* NAME:  D_AZ_CP6_JSP
   44                          .IBL D_AZ_CP6_JSP
   45                          */
   46                          /*F* NAME:  D_AZ_PSEUDO
   47                          .IBL D_AZ_PSEUDO
   48                          */
   49                          /*F* NAME:  D_AZ_RESOURCE
   50                          .IBL D_AZ_RESOURCE
   51                          */
   52                          /*F* NAME:  D_AZ_FORMS
   53                          .IBL D_AZ_FORMS
   54                          */
   55                          /*F* NAME:  D_AZ_PGRANS
   56                          .IBL D_AZ_PGRANS
   57                          */
   58                          /*F* NAME:  D_AZ_COMACCTNG
   59                          .IBL D_AZ_COMACCTNG
   60                          */
   61                          /*F* NAME:  D_AZ_GACID
   62                          .IBL D_AZ_GACID
   63                          */
   64                          /*F* NAME:  D_AZ_COMGRP
   65                          .IBL D_AZ_COMGRP
   66                          */
   67                          /*F* NAME:  D_AZ_SERV_GHOST
   68                          .IBL D_AZ_SERV_GHOST
   69                          */
   70                          /*F* NAME:  D_AZ_LCP6_JSP
   71                          .IBL D_AZ_LCP6_JSP
   72                          */
   73                          /*F* NAME:  D_AZ_ACCTKEY
   74                          .IBL D_AZ_ACCTKEY
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         3    
   75                          */
   76                          /*F* NAME:  D_AZ_STAR_KEY
   77                          .IBL D_AZ_STAR_KEY
   78                          */
   79                          /*F* NAME:  D_AZ_FORM_KEY
   80                          .IBL D_AZ_FORM_KEY
   81                          */
   82                          /*F* NAME:  D_AZ_FORM_REC
   83                          .IBL D_AZ_FORM_REC
   84                          */
   85                          /*F* NAME:  D_AZ_RES_KEY
   86                          .IBL D_AZ_RES_KEY
   87                          */
   88                          /*F* NAME:  D_AZ_RES_TIME
   89                          .IBL D_AZ_RES_TIME
   90                          */
   91                          /*F* NAME:  D_AZ_SEUDO_TIME
   92                          .IBL D_AZ_SEUDO_TIME
   93                          */
   94                          /*F* NAME:  AZ_CP6_JSP - CP-6 Job/Step/Processor Record
   95
   96                          The AZ_CP6_JSP macro may be used to generate the structure
   97                          for the record written to :ACCTLG which describes the
   98                          resource usage for CP-6 users.  The record is written
   99                          at job step if step accounting is in effect,
  100                          when a proprietary processor is terminated,
  101                          and
  102                          when a CP-6 user is logged off the system.
  103
  104                          This macro is also to be used to define the buffer
  105                          for the information that is returned by the M$ACCT
  106                          monitor service.
  107
  108                          This record contains the following fields:
  109                          */
  110
  111      %MACRO AZ_CP6_JSP (NAME=AZ_CP6_JSP, STCLASS = STATIC);
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         4    
  112
  113      %LSET LISTDIR='0'B;
  114      %LSET LISTEXP='1'B;
  115      %LSET LISTCOM='0'B;
  116      %LSET LISTSUB='1'B;
  117      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
  118      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
  119      %LSET INIT=CHARTEXT('INIT');
  120      %LSET EINIT=CHARTEXT('');
  121      %ELSE;
  122      %LSET INIT=CHARTEXT('/*');
  123      %LSET EINIT=CHARTEXT('*/');
  124      %ENDIF;
  125
  126      DCL 1 NAME STCLASS ALIGNED,
  127            2 CODE UBIN BYTE ALIGNED,
  128                          /*K* CODE - UBIN BYTE.
  129                          Denotes the record type.
  130                          Always AZ$JSP (1) for this record.
  131                          */
  132            2 ACCN CHAR(8),
  133            2 ACCT REDEF ACCN CHAR(8),
  134                          /*K* ACCN - CHAR(8).
  135                          .XEQ B$JIT_C B$JIT ACCN
  136                          */
  137                          /*K* ACCT is a REDEF of ACCN.
  138                          */
  139            2 UNAME CHAR(12),
  140            2 USERNAME REDEF UNAME CHAR(12),
  141                          /*K* UNAME - CHAR(12).
  142                          .XEQ B$JIT_C B$JIT UNAME
  143                          */
  144                          /*K* USERNAME is a REDEF of UNAME.
  145                          */
  146            2 JOBNAME,
  147                          /*K* JOBNAME - CHAR(1-31).
  148                          .XEQ B$JIT_C B$JIT JOBNAME
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         5    
  149                          */
  150              3 L UBIN BYTE UNAL,
  151              3 C CHAR(31),
  152            2 WOO CHAR(8),
  153                          /*K* WOO - CHAR(8).
  154                          .XEQ B$JIT_C B$JIT WOO
  155                          */
  156            2 ATITLE CHAR(32),
  157                          /*K* ATITLE - CHAR(32).
  158                          Contains the ATITLE from
  159                          the *S file. All blanks denotes no ATITLE.
  160                          */
  161            2 SUBMIT UBIN WORD,
  162                          /*K* SUBMIT - UBIN WORD.
  163                          Contains the UTS of job submission
  164                          for batch, logon time for all others. Not available
  165                          for batch if AZ_CP6_JSP.TYPE is AZ$RECOVERY.
  166                          */
  167            2 START UBIN WORD,
  168                          /*K* START - UBIN WORD.
  169                          Contains the UTS from when the job, step or
  170                          proprietary accounting period began execution.
  171
  172                          Valid from M$ACCT on JOBEND, RCVRY, SSTART and
  173                          the first PSTART for a proprietary processor in
  174                          a step.
  175                          */
  176            2 ELAPSED UBIN WORD,
  177                          /*K* ELAPSED - UBIN WORD.
  178                          Contains the elapsed real time for
  179                          this step or job to complete in units of
  180                          hundredths of seconds.
  181
  182                          Not valid from M$ACCT.
  183                          */
  184            2 HOLD_UTS UBIN WORD,
  185                          /*K* HOLD_UTS - UBIN WORD.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         6    
  186                          Contains the UTS after which the job may run.
  187                          This field is valid for batch jobs only.
  188                          Not available if AZ_CP6_JSP.TYPE is AZ$RECOVERY.
  189                          */
  190            2 CUR_UTS UBIN WORD,
  191                          /*K* CUR_UTS - UBIN WORD.
  192                          Contains the CURrent UTS.
  193                          If the record was created by M$ACCT, it is the UTS
  194                          from the time the record was built if AZ_CP6_JSP.TYPE is
  195                          AZ$JOBEND, AZ$STEP or AZ$PROC (or the passed UTS
  196                          if AZ_CP6_JSP.TYPE is AZ$RECOVERY).
  197                          */
  198            2 PRIO UBIN BYTE UNAL,
  199                          /*K* PRIO - UBIN BYTE.
  200                          Contains the priority at which the job was
  201                          submitted. Valid for batch jobs only.
  202                          Not available if AZ_CP6_JSP.TYPE is AZ$RECOVERY.
  203                          */
  204            2 PART# UBIN BYTE UNAL,
  205                          /*K* PART# - UBIN BYTE.
  206                          Contains the partition is which the job ran.
  207                          Valid for batch jobs only. Not available if
  208                          AZ_CP6_JSP.TYPE is AZ$RECOVERY.
  209                          */
  210            2 PART_MASK BIT(16),
  211                          /*K* PART_MASK - BIT(16).
  212                          Contains the PARTition eligibility MASK.
  213                          Valid for batch jobs only.  Not available
  214                          if AZ_CP6_JSP.TYPE is AZ$RECOVERY.
  215                          */
  216            2 * BIT(2),
  217            2 MODE UBIN BYTE UNAL,
  218                          /*K* MODE - UBIN BYTE.
  219                          .XEQ B$JIT_C B$JIT MODE
  220
  221                          Equates are from the INCLUDE file B$JIT.
  222                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         7    
  223            2 TYPE UBIN BYTE UNAL,
  224                          /*K* TYPE - UBIN BYTE.
  225                          Contains the type of CP6 user accounting record.
  226                          This field will contain one of the following
  227                          equated values from the AZ_SUBS_C include file:
  228                          }
  229                          }   AZ$RECOVERY   1
  230                          }   AZ$JOBEND     2
  231                          }   AZ$STEP       4
  232                          }   AZ$PROC       5
  233                          }
  234                          When using the M$ACCT service the following
  235                          mapping from FPT_ACCT.V.TYP# to TYPE will occur:
  236                          }
  237                          }   PSTART -> AZ$PROC
  238                          }   PSTOP  -> AZ$PROC
  239                          }   SSTART -> AZ$STEP
  240                          }   SSTOP  -> AZ$STEP
  241                          }   JOBEND -> AZ$JOBEND
  242                          }   RCVRY  -> AZ$RECOVERY
  243                          }
  244                          */
  245            2 SYSID UBIN(18)  UNAL,
  246                          /*K* SYSID - UBIN HALF.
  247                          .XEQ B$JIT_C B$JIT SYSID
  248                          */
  249            2 PROCNAME,
  250                          /*K* PROCNAME - CHAR(1-31).
  251                          Contains the name of the executing processor if
  252                          AZ_CP6_JSP.TYPE is AZ$PROC or AZ$STEP.
  253                          Valid from M$ACCT only on SSTART or PSTART.
  254                          */
  255              3 L UBIN BYTE UNAL,
  256              3 C CHAR(31),
  257            2 RATETBLE,
  258                          /*K* RATETBLE - CHAR(1-31).
  259                          Contains the key of the rate table in TEXTC format
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         8    
  260                          if one was used to calculate the charges; RATETBLE.L
  261                          (key length) is 0 otherwise.
  262
  263                          Not valid from M$ACCT.
  264                          */
  265              3 L UBIN BYTE UNAL,
  266              3 C CHAR(10),
  267            2 PRATETBLE,
  268                          /*K* PRATETBLE - CHAR(1-31).
  269                          Contains the key of the processor rate table in TEXTC format
  270                          if one was used to calculate the charges; PRATETBLE.L
  271                          (key length) is 0 otherwise.
  272                          This field is valid only when AZ_CP6_JSP.TYPE is AZ$PROC.
  273
  274                          Not valid from M$ACCT.
  275                          */
  276              3 L UBIN BYTE UNAL,
  277              3 C CHAR(10),
  278            2 ORIGINATOR_MODE UBIN(4) UNAL,
  279                          /*K* ORIGINATOR_MODE - UBIN(4).
  280                          Specifies the mode of the originator of the job stream
  281                          to which this job belongs.  One of the following EQUs
  282                          will be contained in this field:
  283                          }
  284                          } M_BATCH#   Originator was a card reader:
  285                          }            B$JIT.ORIGINATOR_PORT.FROM_CR contains the
  286                          }            device name and TNAME of the originator.
  287                          }
  288                          } M_GHOST#   Originator was a ghost user:
  289                          }            B$JIT.ORIGINATOR_PORT.FROM_GHOST contains the
  290                          }            SYSID of the originator.
  291                          }
  292                          } M_INT#     Originator was an interactive user:
  293                          }            B$JIT.ORIGINATOR_PORT.FROM_INT contains the
  294                          }            TSLINE of the originator.
  295                          }
  296                          See B$JIT.MODE, B$JIT.ORIGINATOR_PORT.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         9    
  297                          */
  298            2 * BIT(14),
  299            2 RESPEAK SBIN HALF UNAL,
  300                          /*K* RESPEAK - SBIN HALF.
  301                          Contains the value of B$JIT.SRESPEAK if AZ_CP6_JSP.TYPE
  302                          is AZ$STEP;
  303                          contains the value of B$JIT.JRESPEAK is AZ_CP6_JSP.TYPE
  304                          is AZ$JOBEND or AZ$RECOVERY.
  305
  306                          Valid from M$ACCT on JOBEND, RCVRY and SSTOP only.
  307                          */
  308            2 JSPEAK SBIN HALF UNAL,
  309            2 PKCO REDEF JSPEAK SBIN HALF UNAL,
  310                          /*K* JSPEAK - SBIN HALF.
  311                          Indicates peak memory usage for the job or job step.
  312                          Contains the value of B$JIT.SPEAK if AZ_CP6_JSP.TYPE
  313                          is AZ$STEP;
  314                          contains the value of B$JIT.JPEAK is AZ_CP6_JSP.TYPE
  315                          is AZ$JOBEND or AZ$RECOVERY.
  316
  317                          Valid from M$ACCT on JOBEND, RCVRY and SSTOP only.
  318                          */
  319                          /*K* PKCO is a REDEF of JSPEAK.
  320                          */
  321            2 STEP SBIN HALF UNAL,
  322                          /*K* STEP - SBIN HALF.
  323                          Contains the number of the job step if AZ_CP6_JSP.TYPE
  324                          is AZ$STEP or AZ$PROC;
  325                          contains the total number of job steps if AZ_CP6_JSP.TYPE
  326                          is AZ$JOBEND or AZ$RECOVERY.
  327                          */
  328            2 JORG UBIN(18)  UNAL,
  329                          /*N* JORG - DEC. Origin of job.
  330                          */
  331            2 STEPCC UBIN BYTE UNAL,
  332                          /*K* STEPCC - UBIN BYTE.
  333                          .XEQ B$JIT_C B$JIT STEPCC
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         10   
  334
  335                          The equated values are from the file B$JIT.
  336
  337                          Not valid from M$ACCT on SSTART or PSTART.
  338                          */
  339            2 RNST BIT(9) UNAL,
  340                          /*K* RNST - BIT(9).
  341                          .XEQ B$JIT_C B$JIT RNST
  342
  343                          The equated values are from the file B$JIT.
  344
  345                          This field is not valid from M$ACCT on SSTART or PSTART.
  346                          */
  347            2 XLIMFLG BIT(9) UNAL,
  348                          /*K* XLIMFLG - BIT(9).
  349                          .XEQ B$JIT_C B$JIT XLIMFLG
  350
  351                          The equated values are from the file B$JIT.
  352
  353                          Not valid from M$ACCT on SSTART or PSTART.
  354                          */
  355            2 FLG,
  356                          /*K* FLG - BIT(9).
  357                          FLaGs contains scheduling information.
  358                          This field is valid only if AZ_CP6_JSP.MODE is M_BATCH#
  359                          and AZ_CP6_JSP.TYPE is not AZ$RECOVERY.
  360                          */
  361              3 O1 BIT(1) UNAL,
  362                          /*K* FLG.O1 - BIT(1). Set if ORDER was specified for the job.
  363                          */
  364              3 * BIT(1) UNAL,
  365              3 O3 BIT(1) UNAL,
  366                          /*K* FLG.O3 - BIT(1). Set if FOLLOW was specified for the job.
  367                          */
  368              3 ACC BIT(1) UNAL,
  369                          /*K* FLG.ACC - BIT(1). Set if ACCOUNT was specified for the job.
  370                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         11   
  371              3 RR BIT(1) UNAL,
  372                          /*K* FLG.RR - BIT(1). Set if RERUN was specified for the job.
  373                          */
  374              3 RR2 BIT(1) UNAL,
  375                          /*K* FLG.RR2 - BIT(1). Set if this is a RERUN.
  376                          */
  377              3 NPI BIT(1) UNAL,
  378                          /*K* FLG.NPI - BIT(1). Set if NPI was specified for the job.
  379                          */
  380              3 RA BIT(1) UNAL,
  381                          /*K* FLG.RA - BIT(1). Set if DEFER was specified for the job.
  382                          */
  383              3 * BIT(1) UNAL,
  384            2 TSLINE,
  385                          /*K* TSLINE.
  386                          .XEQ B$JIT_C B$JIT TSLINE
  387                          */
  388              3 FEX UBIN(9) UNAL,
  389                          /*K* TSLINE.FEX - UBIN(9).
  390                          .XEQ B$JIT_C B$JIT TSLINE.FEX
  391                          */
  392              3 SPEED UBIN(9) UNAL,
  393                          /*K* TSLINE.SPEED - UBIN(9).
  394                          .XEQ B$JIT_C B$JIT TSLINE.SPEED
  395                          */
  396              3 PORT UBIN(18) UNAL,
  397                          /*K* TSLINE.PORT - UBIN(18).
  398                          .XEQ B$JIT_C B$JIT TSLINE.PORT
  399                          */
  400              3 LEV UBIN BYTE UNAL,
  401                          /*K* TSLINE.LEV - UBIN (9).
  402                          The LEV defines what level of the line is valid. Values:
  403                               1 - Only the PORT is valid.
  404                               2 - The PORT-SUBDEVICE is valid.
  405                               3 - The PORT-SUBDEVICE-SUBSUBDEVICE is valid.
  406                           */
  407              3 TTYP UBIN BYTE UNAL,
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         12   
  408                          /*K* TSLINE.TTYP - UBIN(9).
  409                          The TTYP field defines what type of device the connection is to.
  410                           */
  411              3 SUBDEVICE UBIN(18) UNAL,
  412                          /*K* TSLINE.SUBDEVICE - UBIN(18).
  413                          The SUBDEVICE field identifies the subdevice for a given channel to
  414                          which this user's terminal is connected.
  415                           */
  416              3 SUBSUBDEVICE UBIN(18) UNAL,
  417                          /*K* TSLINE.SUBSUBDEVICE - UBIN(18).
  418                          The SUBSUBDEVICE field identifies the subsubdevice for a given channel to
  419                          which this user's terminal is connected.
  420                           */
  421              3 * UBIN(18) UNAL,
  422            2 ORIGINATOR_PORT REDEF TSLINE,
  423                          /*K* ORIGINATOR_PORT.
  424                          The ORIGINATOR_PORT field contains information concerning
  425                          the originator of the job stream to which this job belongs.
  426                          This field is a REDEF of the TSLINE field.
  427                          */
  428              3 FROM_CR,
  429                          /*K* ORIGINATOR_PORT.FROM_CR.
  430                          The ORIGINATOR_PORT.FROM_CR field contains information concerning
  431                          the originator of the job stream to which this job belongs,
  432                          if B$JIT.ORIGINATOR_MODE is M_BATCH#.
  433                          */
  434                4 DEVICE CHAR(4),
  435                          /*K* ORIGINATOR_PORT.FROM_CR.DEVICE - CHAR(4).
  436                          Contains the device name of the card reader of origin.
  437                          */
  438                4 TNAME CHAR(8),
  439                          /*K* ORIGINATOR_PORT.FROM_CR.TNAME - CHAR(8).
  440                          Contains the TNAME of the card reader of origin.
  441                          */
  442              3 FROM_GHOST REDEF FROM_CR,
  443                          /*K* ORIGINATOR_PORT.FROM_GHOST.
  444                          The ORIGINATOR_PORT.FROM_GHOST field contains information concerning
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         13   
  445                          the originator of the job stream to which this job belongs,
  446                          if B$JIT.ORIGINATOR_MODE is M_GHOST#.
  447                          This field is a REDEF of the ORIGINATOR_PORT.FROM_CR field.
  448                          */
  449                4 SYSID UBIN HALF UNAL,
  450                          /*K* ORIGINATOR_PORT.FROM_GHOST.SYSID - UBIN HALF.
  451                          Contains the SYSID of the originating ghost user.
  452                          */
  453                4 * CHAR(10),
  454              3 FROM_INT REDEF FROM_CR,
  455                          /*K* ORIGINATOR_PORT.FROM_INT.
  456                          The ORIGINATOR_PORT.FROM_INT field contains information concerning
  457                          the originator of the job stream to which this job belongs,
  458                          if B$JIT.ORIGINATOR_MODE is M_INT#.
  459                          This field is a REDEF of the ORIGINATOR_PORT.FROM_CR field.
  460                          */
  461                4 TSLINE,
  462                          /*K* ORIGINATOR_PORT.FROM_INT.TSLINE.
  463                          The ORIGINATOR_PORT.FROM_INT.TSLINE field is a REDEF of the
  464                          TSLINE field.
  465                          */
  466                  5 * CHAR(12),
  467            2 TMDPPK SBIN,
  468                          /*K* TMDPPK - SBIN.
  469                          The TeMp Disk Pack PeaK field contains the maximum
  470                          amount of temporary disk storage allocated during
  471                          this job or job step.
  472                          Contains the value of B$JIT.JTMPDPPK if AZ_CP6_JSP.TYPE
  473                          is AZ$STEP;
  474                          contains the value of B$JIT.JTMDPPK is AZ_CP6_JSP.TYPE
  475                          is AZ$JOBEND or AZ$RECOVERY.
  476
  477                          Valid from M$ACCT on RCVRY, JOBEND and SSTOP only.
  478                          */
  479            2 PRDPUSED SBIN,
  480                          /*K* PRDPUSED - SBIN.
  481                          The PeRmanent Disk Pack USED field contains the maximum
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         14   
  482                          amount of permanent disk storage allocated during
  483                          this job or job step.
  484
  485                          Valid from M$ACCT on RCVRY, JOBEND and SSTOP only.
  486                          */
  487            2 CHG SBIN,
  488                          /*K* CHG - SBIN.
  489                          Contains the total CHarGe in hundredths
  490                          of pennies for this record.
  491
  492                          Not valid from M$ACCT.
  493                          */
  494            2 PCHG SBIN,
  495                          /*K* PCHG - SBIN.
  496                          Contains the portion of CHG attributable
  497                          to proprietary processors for this record.
  498
  499                          Not valid from M$ACCT.
  500                          */
  501            2 UFTPS BIT(36),
  502                          /*K* UFTPS - BIT(36).
  503                          Contains the temporary pack usage factor
  504                          which is expressed as the number of
  505                          (granules in use * ten-milliseconds in use)
  506                          in floating point.
  507                          */
  508            2 PMEMTIM SBIN,
  509                          /*K* PMEMTIM - SBIN.
  510                          .XEQ B$JIT_C B$JIT PMEMTIM
  511
  512                          Not available from M$ACCT.
  513                          */
  514            2 UMEMTIM SBIN,
  515                          /*K* UMEMTIM - SBIN.
  516                          .XEQ B$JIT_C B$JIT UMEMTIM
  517
  518                          Not available from M$ACCT.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         15   
  519                          */
  520            2 MTTIM_CLK SBIN,
  521                          /*K* MTTIM_CLK - SBIN.
  522                          Contains the magnetic tape drive
  523                          allocation time in units of hundredths of seconds
  524                          of clock time.
  525                          */
  526            2 DPTIM_CLK SBIN,
  527                          /*K* DPTIM_CLK - SBIN.
  528                          Contains the disk spindle
  529                          allocation time in units of hundredths of seconds
  530                          of clock time.
  531                          */
  532            2 ORTIM_CLK SBIN,
  533                          /*K* ORTIM_CLK - SBIN.
  534                          Contains the other direct connected
  535                          resource allocation time in units of hundredths
  536                          of seconds of clock time.
  537                          */
  538            2 MTTIM_CPU SBIN,
  539                          /*K* MTTIM_CPU - SBIN.
  540                          Contains the magnetic tape drive
  541                          allocation time in units of hundredths of seconds
  542                          of CPU time.
  543                          */
  544            2 DPTIM_CPU SBIN,
  545                          /*K* DPTIM_CPU - SBIN.
  546                          Contains the disk spindle
  547                          allocation time in units of hundredths of seconds
  548                          of CPU time.
  549                          */
  550            2 ORTIM_CPU SBIN,
  551                          /*K* ORTIM_CPU - SBIN.
  552                          Contains the other direct connected
  553                          resource allocation time in units of hundredths
  554                          of seconds of CPU time.
  555                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         16   
  556            2 CONNECT SBIN,
  557                          /*K* CONNECT - SBIN.
  558                          Contains the connect time in units of
  559                          hundredths of seconds. Valid only if MODE is M_INT#.
  560
  561                          Not valid from M$ACCT.
  562                          */
  563            2 ACCESS_TAPE SBIN,
  564            2 MTACCESS REDEF ACCESS_TAPE SBIN,
  565                          /*K* ACCESS_TAPE - SBIN.
  566                          .XEQ B$JIT_C B$JIT ACCESS.TAPES
  567                          */
  568                          /*K* MTACCESS is a REDEF of ACCESS_TAPE.
  569                          */
  570            2 ACCESS_PACKS SBIN,
  571            2 DPACCESS REDEF ACCESS_PACKS SBIN,
  572                          /*K* ACCESS_PACKS - SBIN.
  573                          .XEQ B$JIT_C B$JIT ACCESS.PACKS
  574                          */
  575                          /*K* DPACCESS is a REDEF of ACCESS_PACKS.
  576                          */
  577            2 ACCESS_FORM SBIN,
  578            2 ORACCESS REDEF ACCESS_FORM SBIN,
  579                          /*K* ACCESS_FORM - SBIN.
  580                          .XEQ B$JIT_C B$JIT ACCESS.FORMS
  581                          */
  582                          /*K* ORACCESS is a REDEF of ACCESS_FORM.
  583                          */
  584            2 MTMOUNT SBIN,
  585                          /*K* MTMOUNT - SBIN.
  586                          Contains the number of operator mounts required
  587                          for magnetic tapes.
  588                          */
  589            2 DPMOUNT SBIN,
  590                          /*K* DPMOUNT - SBIN.
  591                          Contains the number of operator mounts required
  592                          for disk packs.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         17   
  593                          */
  594            2 ORMOUNT SBIN,
  595                          /*K* ORMOUNT - SBIN.
  596                          Contains the number of operator mounts required
  597                          for resources other than tape or disk pack.
  598                          */
  599            2 TINTER SBIN WORD,
  600                          /*K* TINTER - SBIN.
  601                          Contains the number of Terminal INTERactions.
  602                          */
  603            2 PMMES SBIN,
  604                          /*K* PMMES - SBIN.
  605                          Contains the number of monitor service requests
  606                          issued.
  607                          */
  608            2 PEXEC SBIN,
  609                          /*K* PEXEC - SBIN WORD.
  610                          Contains the Processor EXECution time
  611                          in units of hundredths of seconds.
  612                          */
  613            2 UEXEC SBIN,
  614                          /*K* UEXEC - SBIN.
  615                          Contains the User EXECution time
  616                          in units of hundredths of seconds.
  617                          */
  618            2 PSTIME SBIN,
  619                          /*K* PSTIME - SBIN.
  620                          Contains the Processor Service TIME
  621                          in units of hundredths of seconds.
  622                          */
  623            2 USTIME SBIN,
  624                          /*K* USTIME - SBIN.
  625                          Contains the User Service TIME
  626                          in units of hundredths of seconds.
  627                          */
  628            2 JSUNITS(0:3) SBIN HALF UNAL,
  629                          /*K* JSUNITS - ARRAY(0:3) SBIN HALF.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         18   
  630                          Contains STEP UNIT if TYPE is AZ$PROC or AZ$JOBEND;
  631                          contains JOB UNIT if TYPE is AZ$JOBEND.
  632
  633                          .XEQ B$JIT_C B$JIT STEPUNIT
  634
  635                          .XEQ B$JIT_C B$JIT JOBUNIT
  636                          */
  637            2 SUNIT_CHG(0:3) SBIN,
  638                          /*K* SUNIT_CHG - SBIN.
  639                          Contains the SUNIT charges
  640                          in hundredths of pennies. Valid if AZ_CP6_JSP.TYPE is
  641                          AZ$JOBEND or AZ$RECOVERY only.
  642
  643                          Not valid from M$ACCT.
  644                          */
  645            2 INST(0:7) SBIN,
  646                          /*K* INST - ARRAY(0:7) SBIN.
  647                          These eight words in the AZ_CP6_JSP record are reserved
  648                          for exclusive use by installation routines.
  649                          */
  650            2 SUDOX SBIN,
  651                          /*K* SUDOX - SBIN.
  652                          Contains the word offset to the SUDO
  653                          section of this record. 0 denotes no SUDO section.
  654                          See the description of the AZ_PSEUDO macro.
  655                          */
  656            2 SUDO_CNT SBIN,
  657                          /*K* SUDO_CNT - SBIN.
  658                          Contains the number of SUDO entries located by
  659                          SUDOX.
  660                          */
  661            2 RESX SBIN,
  662                          /*K* RESX - SBIN.
  663                          Contains the word offset to the RES
  664                          section of this record. 0 denotes no RES section.
  665                          See the description of the AZ_RESOURCE macro.
  666                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         19   
  667            2 RES_CNT SBIN,
  668                          /*K* RES_CNT - SBIN.
  669                          Contains the number of RES entries located by
  670                          RESX.
  671                          */
  672            2 FORMX SBIN,
  673                          /*K* FORMX - SBIN.
  674                          Contains the word offset to the FORM
  675                          section of this record. 0 denotes no FORM section.
  676                          See the description of the FORM macro.
  677                          */
  678            2 FORM_CNT SBIN;
  679                          /*K* FORM_CNT - SBIN.
  680                          Contains the number of FORM entries located by
  681                          FORMX.
  682                          */
  683      %MEND;
  684
  685
  686      /*P* NAME: JSP
  687
  688      The JSP macro has been replaced by AZ_CP6_JSP and is
  689      only maintained for compatablibty with pre-C00 code.
  690      This macro is used by AFA$ACCT and AZA$LOGOFF.
  691      */
  692      %MACRO JSP(NAME = JSP, STCLASS = BASED);
  693      %AZ_CP6_JSP (NAME=NAME,STCLASS=STCLASS);
  694      %MEND;
  695
  696
  697
  698
  699                          /*F* NAME:  AZ_PSEUDO - Pseudo resources in AZ_CP6_JSP
  700
  701                          The AZ_PSEUDO macro generates an array of pseudo resource
  702                          usage for the accounting period.
  703
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         20   
  704                          This is the section of a AZ_CP6_JSP record that is
  705                          located by AZ_CP6_JSP.SUDOX.  The number of entries
  706                          in the array is determined by AZ_CP6_JSP.SUDO_CNT.
  707                          */
  708
  709      %MACRO AZ_PSEUDO(NAME = AZ_PSEUDO, STCLASS = STATIC);
  710
  711      %LSET LISTDIR='0'B;
  712      %LSET LISTEXP='1'B;
  713      %LSET LISTCOM='0'B;
  714      %LSET LISTSUB='1'B;
  715
  716      DCL 1 NAME(0:0) STCLASS ALIGNED,
  717            2 NAM CHAR(8),
  718                          /*K* NAM - CHAR(8).
  719                          Contains the name of this pseudo resource.
  720                          */
  721            2 MAX UBIN BYTE UNAL,
  722                          /*K* MAX - UBIN BYTE.
  723                          Contains the maximum number of this
  724                          resource used this job or step.
  725                          */
  726            2 * BIT(27),
  727            2 CPU SBIN,
  728                          /*K* CPU - SBIN.
  729                          Contains the resource usage factor in
  730                          units of resource units * hundredths of CPU
  731                          seconds.
  732                          */
  733            2 CLOCK SBIN;
  734                          /*K* CLOCK - SBIN.
  735                          Contains the resource usage factor in
  736                          units of resource units * hundredths of real
  737                          seconds.
  738                          */
  739      %MEND;
  740
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         21   
  741      /*P* NAME: SUDO
  742
  743      The SUDO macro has been replaced by AZ_PSEUDO and is
  744      only maintained for compatablibty with pre-C00 code.
  745      This macro is used by AFA$ACCT and AZA$LOGOFF.
  746      */
  747      %MACRO SUDO(NAME = SUDO, STCLASS = BASED);
  748      %AZ_PSEUDO (NAME=NAME,STCLASS=STCLASS);
  749      %MEND;
  750
  751
  752                          /*F* NAME:  AZ_RESOURCE - Resource statistics in AZ_CP6_JSP
  753
  754                          The AZ_RESOURCE macro generates an array of non-pseudo resource
  755                          usage for the accounting period.
  756
  757                          This is the section of a AZ_CP6_JSP record that is
  758                          located by AZ_CP6_JSP.RESX.  The number of entries
  759                          in the array is determined by AZ_CP6_JSP.RES_CNT.
  760                          */
  761
  762      %MACRO AZ_RESOURCE(NAME = AZ_RESOURCE, STCLASS = STATIC);
  763
  764      %LSET LISTDIR='0'B;
  765      %LSET LISTEXP='1'B;
  766      %LSET LISTCOM='0'B;
  767      %LSET LISTSUB='1'B;
  768
  769      DCL 1 NAME(0:0) STCLASS ALIGNED,
  770            2 TYPE UBIN,
  771                          /*K* TYPE - UBIN.
  772                          Contains a value to indicate the type of resource.
  773                          This field will contain one of the following values:
  774                          }
  775                          }  0   Disk pack
  776                          }  1   Magnetic Tape
  777                          }  2   Any other resource
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         22   
  778                          }
  779                          */
  780            2 CLOCK SBIN,
  781                          /*K* CLOCK - SBIN.
  782                          Contains the elapsed time this
  783                          resource has been used in units of real
  784                          hundredths of seconds.
  785                          */
  786            2 CPU SBIN,
  787                          /*K* CPU - SBIN.
  788                          Contains the elapsed time this
  789                          resource has been used in units of CPU
  790                          hundredths of seconds.
  791                          */
  792            2 WSN CHAR(8),
  793                          /*K* WSN - CHAR(8).
  794                          Contains the WSN under which this
  795                          resource was requested.
  796                          */
  797            2 LOGNAME CHAR(4),
  798                          /*K* LOGNAME - CHAR(4).
  799                          Contains the logical name of the resource.
  800                          */
  801            2 PHYSNAME CHAR(8),
  802                          /*K* PHYSNAME - CHAR(8).
  803                          Contains the physical name of the resource.
  804
  805                          Valid if AZ_CP6_JSP.TYPE is AZ$JOBEND only.
  806                          */
  807            2 ATTR,
  808              3 M1 BIT(18),
  809                          /*K* ATTR.M1 - BIT(18).
  810                          Contains the device attributes
  811                          received by the user.
  812
  813                          Valid if AZ_CP6_JSP.TYPE is AZ$JOBEND only.
  814                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         23   
  815              3 MTWO BIT(18);
  816                          /*K* ATTR.MTWO - BIT(18).
  817                          Contains the device attributes
  818                          requested by the user.
  819                          */
  820      %MEND;
  821
  822
  823      /*P* NAME: RES
  824
  825      The RES macro has been replaced by AZ_RESOURCE and is
  826      only maintained for compatablibty with pre-C00 code.
  827      This macro is used by AFA$ACCT and AZA$LOGOFF.
  828      */
  829      %MACRO RES(NAME = RES, STCLASS = BASED);
  830      %AZ_RESOURCE (NAME=NAME,STCLASS=STCLASS);
  831      %MEND;
  832
  833                          /*F* NAME:  AZ_FORMS - Form Statistics in AZ_CP6_JSP
  834
  835                          The AZ_FORMS macro generates an array of form usage for the
  836                          accounting period.
  837                          There is one entry in the forms section of a
  838                          AZ_CP6_JSP record for each unique FORMNAME used.
  839
  840                          This is the section of a AZ_CP6_JSP record that is
  841                          located by AZ_CP6_JSP.FORMX.  The number of entries
  842                          in the array is determined by AZ_CP6_JSP.FORM_CNT.
  843                          */
  844
  845      %MACRO AZ_FORMS(NAME = AZ_FORMS, STCLASS = STATIC);
  846
  847      %LSET LISTDIR='0'B;
  848      %LSET LISTEXP='1'B;
  849      %LSET LISTCOM='0'B;
  850      %LSET LISTSUB='1'B;
  851
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         24   
  852      DCL 1 NAME(0:0) STCLASS ALIGNED,
  853            2 FORMS SBIN,
  854                          /*K* FORMS - SBIN.
  855                          Contains the number of forms to which this record
  856                          applies.
  857                          */
  858            2 MOUNTS SBIN,
  859                          /*K* MOUNTS - SBIN.
  860                          Contains the number of mounts for which the user
  861                          is being charged;  1 for first symbiont usage
  862                          of this form and 1 for each form
  863                          change to this form for directly-connected
  864                          usage.
  865                          */
  866            2 S1,
  867              3 FORMNAME CHAR(12),
  868                          /*K* S1.FORMNAME - CHAR(12).
  869                          .XEQ AZ_MACRO_C FORM$REC S1.FORMNAME
  870                          */
  871              3 DD CHAR(2),
  872                          /*K* S1.DD - CHAR(2).
  873                          Contains the device name of the destination device.
  874                          */
  875              3 WSN CHAR(8),
  876                          /*K* WSN - CHAR(8).
  877                          Contains the work station of the
  878                          destination device.
  879                          */
  880            2 * BIT(18),
  881            2 RATETBLE,
  882                          /*K* RATETBLE - CHAR(1-16).
  883                          Contains the key of the rate table in TEXTC format
  884                          if one was used to calculate the charges; RATETBLE.L
  885
  886                          (key length) is 0 if a form rate table was not used.
  887                          Not valid from M$ACCT.
  888                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         25   
  889              3 L UBIN BYTE UNAL,
  890              3 C CHAR(16);
  891      %MEND;
  892
  893      /*P* NAME: FORM
  894
  895      The FORM macro has been replaced by AZ_FORMS and is
  896      only maintained for compatablibty with pre-C00 code.
  897      This macro is used by AFA$ACCT and AZA$LOGOFF.
  898      */
  899
  900      %MACRO FORM(NAME = FORM, STCLASS = BASED);
  901      %AZ_FORMS (NAME=NAME,STCLASS=STCLASS);
  902      %MEND;
  903
  904
  905
  906
  907
  908                          /*F* NAME:  AZ_PGRANS - Granule Usage Record
  909
  910                          The AZ_PGRANS macro may be used to generate the structure
  911                          that is written to :ACCTLG which contains the disk
  912                          space storage charges.
  913
  914                          This record contains the following fields:
  915                          */
  916
  917      %MACRO AZ_PGRANS(NAME = AZ_PGRANS, STCLASS = STATIC);
  918
  919      %LSET LISTDIR='0'B;
  920      %LSET LISTEXP='1'B;
  921      %LSET LISTCOM='0'B;
  922      %LSET LISTSUB='1'B;
  923
  924      DCL 1 NAME STCLASS,
  925            2 CODE UBIN(9) UNAL,
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         26   
  926                          /*K* CODE - UBIN(9).
  927                          Denotes type of record.
  928                          Always AZ$PGRANS (2) for this record.
  929                          */
  930            2 * UBIN(9) UNAL,
  931            2 SYSID UBIN(18) UNAL,
  932                          /*K* SYSID - UBIN(18).
  933                          If zero, this is
  934                          a valid record created when a file was
  935                          deleted.  If non-zero, it was created by
  936                          a GAC run and is valid only if it is
  937                          followed by a type AZ$GACID record
  938                          indicating successful completion of the
  939                          GAC run.
  940                          */
  941            2 CREATOR,
  942              3 ACCT CHAR(8),
  943                          /*K* CREATOR.ACCT - CHAR(8).
  944                          Contains the creator's account.
  945                          */
  946              3 UNAME CHAR(12),
  947                          /*K* CREATOR.UNAME - CHAR(12).
  948                          Contains the creator's name.
  949                          */
  950            2 FMACCT CHAR(8),
  951                          /*K* FMACCT - CHAR(8).
  952                          Contains the file management
  953                          account to which these charges apply.
  954                          */
  955            2 PSN CHAR(6),
  956                          /*K* PSN - CHAR(6).
  957                          Contains the packset on which
  958                          the granules being charged for exist.  Note that
  959                          for granules released from files that exist in
  960                          the user's logon account and for which the user
  961                          is the creator, this field is the
  962                          user's HPSN, which should but does not necessarily
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         27   
  963                          match the pack set on which the granules reside.
  964                          */
  965            2 * UBIN(18) UNAL,
  966            2 SHELF(0:2) UBIN,
  967                          /*K* SHELF(0:2) - UBIN-FLOATING-PT.
  968                          Contains the shelf-time
  969                          storage integrals for three types of files -
  970                          those eligible for backup, those not
  971                          eligible, and those that are active stowed.
  972                          The indices are AZ$GACBACKUP, AZ$GACNOBACKUP
  973                          and AZ$GACSTOWACT.
  974                          The storage integral is number of granules
  975                          times time in hundredths of a second
  976                          (standard system time units).
  977                          */
  978            2 ONLINE(0:2) UBIN;
  979                          /*K* ONLINE(0:2) - UBIN-FLOATING-PT.
  980                          Contains the online-time storage integrals.
  981                          */
  982      %MEND;
  983
  984
  985      /*P* NAME: PGRANS
  986
  987      The PGRAN macro has been replaced by AZ_PGRAN and is
  988      only maintained for compatablibty with pre-C00 code.
  989      This macro is used by AZA$LOGOFF, FAG$GEXT and FGG$GAC.
  990      */
  991      %MACRO PGRANS(NAME = PGRANS, STCLASS = BASED);
  992      %AZ_PGRANS (NAME=NAME,STCLASS=STCLASS);
  993      %MEND;
  994
  995
  996
  997
  998
  999                          /*F* NAME:  AZ_COMACCTNG - Communications Device Record
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         28   
 1000
 1001                          The AZ_COMACCTNG macro may be used to generate the structure
 1002                          for the record that is written to :ACCTLG which describes
 1003                          communications device usage.
 1004
 1005                          This record contains the following fields:
 1006                          */
 1007
 1008      %MACRO AZ_COMACCTNG (NAME = AZ_COMACCTNG, STCLASS = BASED);
 1009
 1010      %LSET LISTDIR='0'B;
 1011      %LSET LISTEXP='1'B;
 1012      %LSET LISTCOM='0'B;
 1013      %LSET LISTSUB='1'B;
 1014
 1015      DCL 1 NAME STCLASS DALIGNED,
 1016            2 CODE UBIN BYTE ALIGNED,
 1017                          /*K* CODE - UBIN BYTE.  Contains the type of record.  CODE is always
 1018                          AZ$COMACCTNG (3).
 1019                          */
 1020            2 REASON UBIN(9) UNAL,
 1021                          /*K* REASON - UBIN(9).  Contains a value that
 1022                          describes the reason for disconnection.  The following
 1023                          substitution strings from KL_SUBS_C may be used when
 1024                          examining this field:
 1025
 1026                          .fif
 1027                          .brn 12
 1028                          Substitution
 1029                          String            Meaning
 1030                          .spf
 1031                          KLDR_LINE         Line dropped
 1032                          KLDR_OFF          Disk requested by owner in host
 1033                          KLDR_FROG         Disk requested by FROG
 1034                          KLDR_FCRSH        FEP crash
 1035                          KLDR_HCRSH        Host crash
 1036                          KLDR_HDWE         Hardware error
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         29   
 1037                          KLDR_SFWE         Software error
 1038                          KLDR_PROT         Protocol error
 1039                          KLDR_RES          Resource shortage
 1040                          .fin
 1041                          */
 1042            2 ACTYP UBIN(9) UNAL,
 1043                          /*K* ACTYP - UBIN(9).  Contains a value that
 1044                          describes the accounting type.  The following substitution
 1045                          strings from KL_SUBS_C may be used when examining this field:
 1046
 1047                          .fif
 1048                          .brn 6
 1049                          Substitution
 1050                          String            Meaning
 1051                          .spf
 1052                          KLAC_DEV          Single device
 1053                          KLAC_TRM          Multi-device terminal
 1054                          KLAC_TDEV         Device from multi-device terminal
 1055                          .fin
 1056                          */
 1057            2 ATYP UBIN(9) UNAL,
 1058                          /*K* ATYP - UBIN(9).  Contains a value that
 1059                          describes attachment type.  The following substitution
 1060                          strings from KL_SUPER_C may be used when examining this
 1061                          field:
 1062
 1063                          .fif
 1064                          .brn 9
 1065                          Substitution
 1066                          String            Meaning
 1067                          .spf
 1068                          KLAT_CG#          Comgroup
 1069                          KLAT_RES#         Resource
 1070                          KLAT_TRM#         Terminal
 1071                          KLAT_LINE#        Polled line (3270-like)
 1072                          KLAT_NET#         Network line (HDLC-like)
 1073                          KLAT_FEP#         Remote FEP
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         30   
 1074                          .fin
 1075                          */
 1076            2 TTYP UBIN(9) UNAL,
 1077                          /*K* TTYP - UBIN(9).  Contains a value that
 1078                          describes terminal type.  The following substitution
 1079                          strings from KL_SUPER_C may be used when examining this
 1080                          field:
 1081
 1082                          .fif
 1083                          .brn 9
 1084                          Substitution
 1085                          String            Meaning
 1086                          .spf
 1087                          KLTY_SDEV#        Synchronous device
 1088                          KLTY_TTY#         Asynchronous terminal
 1089                          KLTY_STRM#        Synchronous terminal
 1090                          KLTY_HDLC#        Polled line
 1091                          KLTY_FEP#         Remote FEP
 1092                          KLTY_URP#         Unit record peripheral
 1093                          .fin
 1094                          */
 1095            2 FEX UBIN(9) UNAL,
 1096
 1097                          /*K* FEX - UBIN(9).  Contains the FEP number.
 1098                          */
 1099            2 SPEED UBIN(9) UNAL,
 1100                          /*K* SPEED - UBIN(9).  Contains a value that
 1101                          represents line speed:
 1102
 1103                          .fif
 1104                          } 0         50 bits per second
 1105                          } 1         75
 1106                          } 2        110   (10 CPS)
 1107                          } 3        134
 1108                          } 4        150   (15 CPS)
 1109                          } 5        200
 1110                          } 6        300   (30 CPS)
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         31   
 1111                          } 7        600
 1112                          } 8       1050
 1113                          } 9       1200   (120 CPS)
 1114                          }10       1800
 1115                          }11       2000
 1116                          }12       2400
 1117                          }13       4800
 1118                          }14       9600
 1119                          }15      19200
 1120                          .fin
 1121                          */
 1122            2 TERMID UNAL,
 1123              3 LEV UBIN BYTE UNAL,
 1124                          /*K* TERMID.LEV - UBIN BYTE.  Contains the level
 1125                          of this channel.  See B$TERMINAL_ID which is
 1126                          described in FEP Monitor Services Reference (CE66).
 1127                          */
 1128              3 TTYP UBIN BYTE UNAL,
 1129                          /*K* TERMID.TTYP - UBIN BYTE.  Contains the TTYP
 1130                          of this channel.  See B$TERMINAL_ID which is
 1131                          described in FEP Monitor Services Reference (CE66).
 1132                          */
 1133              3 CHANNEL UBIN HALF UNAL,
 1134                          /*K* TERMID.CHANNEL - UBIN HALF.  Contains the
 1135                          channel address in the FEP.
 1136                          */
 1137              3 SUBDEVICE UBIN HALF UNAL,
 1138                          /*K* TERMID.SUBDEVICE - UBIN HALF.  Contains the
 1139                          subdevice number.
 1140                          */
 1141              3 SUBSUBDEVICE UBIN HALF UNAL,
 1142                          /*K* TERMID.SUBSUBDEVICE - UBIN HALF.  Contains
 1143                          the subsubdevice number.
 1144                          */
 1145            2 DEVNM CHAR(8),
 1146                          /*K* DEVNM - CHAR(8).  Contains the internal
 1147                          device name.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         32   
 1148                          */
 1149            2 DTW REDEF DEVNM,
 1150              3 D CHAR(4),
 1151              3 TW CHAR(4),
 1152            2 TWSN CHAR(4),
 1153                          /*K* TWSN - CHAR(4).  Contains the TWSN of
 1154                          this entry, that
 1155                          is the number of the associated station.
 1156                          */
 1157            2 TNAME CHAR(8),
 1158                          /*K* TNAME - CHAR(8).  Contains the name of
 1159                          the terminal or station.
 1160                          */
 1161            2 ASSOCTRM CHAR(8),
 1162                          /*K* ASSOCTRM - CHAR(8).  Contains the
 1163                          accounting name of the logged
 1164                          on entity.  For example, the terminal name if
 1165                          the entity is a device at a multi-device terminal.
 1166                          */
 1167            2 USEAGE UBIN(9) UNAL,
 1168                          /*K* USEAGE - UBIN(9).  Specifies the usage of the
 1169                          terminal or device.  The following substitution strings
 1170                          from AZ_SUBS_C may be used to examine this field:
 1171
 1172                          .fif
 1173                          .brn 13
 1174                          Substitution
 1175                          String           Meaning
 1176                          .spf
 1177                          AZ_USETRM#        Communication terminal
 1178                          AZ_USEOCCG#       Console
 1179                          AZ_USEISCG#       Input symbiont comgroup
 1180                          AZ_USEOSCG#       Output symbiont comgroup
 1181                          AZ_USECG#         Comgroup station
 1182                          AZ_USETP#         TP station
 1183                          AZ_USERES#        Assignable resource
 1184                          AZ_USELINE#       3270-like polled line
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         33   
 1185                          AZ_USENET#        HDLC-like line
 1186                          AZ_USEFEP#        Remote FEP
 1187                          .fin
 1188                          */
 1189            2 ACTIVE BIT(1),
 1190            2 * BIT(26),
 1191            2 UTS UBIN WORD,
 1192                          /*K* UTS - UBIN WORD.  Contains the time stamp at
 1193                          at connect time.
 1194                          */
 1195            2 LASTUP,
 1196                          /*K* LASTUP.  Contains the value at the last
 1197                          update.  LASTUP is useful if
 1198                          disconnection resulted from crash of the FEP or
 1199                          host when FINAL cannot be set.
 1200                          */
 1201              3 UTS UBIN WORD,
 1202                          /*K* LASTUP.UTS - UBIN WORD.  Contains the time stamp.
 1203                          */
 1204            2 FINAL,
 1205                          /*K* FINAL.  Contains values at disconnection.
 1206                          */
 1207              3 UTS UBIN WORD,
 1208                          /*K* FINAL.UTS - UBIN WORD.  Contains the time stamp.
 1209                          */
 1210              3 CHARIN UBIN WORD,
 1211                          /*K* FINAL.CHARIN - UBIN WORD.  Contains the
 1212                          number of characters
 1213                          input.
 1214                          */
 1215              3 CHAROUT UBIN WORD,
 1216                          /*K* FINAL.CHAROUT - UBIN WORD.  Contains the
 1217                          number of characters
 1218                          output.
 1219                          */
 1220              3 RECIN UBIN WORD,
 1221                          /*K* FINAL.RECIN - UBIN WORD.  Contains the number
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         34   
 1222                          of records
 1223                          input.
 1224                          */
 1225              3 RECOUT UBIN WORD,
 1226                          /*K* FINAL.RECOUT - UBIN WORD.  Contains the
 1227                          number of records
 1228                          output.
 1229                          */
 1230            2 CGNAME,
 1231              3 CNT UBIN BYTE UNAL,
 1232              3 TXT CHAR(31),
 1233                          /*K* CGNAME.  Contains the TEXTC comgroup name, if
 1234                          ATYP specifies comgroup.
 1235                          */
 1236            2 CGACCT CHAR(8),
 1237                          /*K* CGACCT - CHAR(8).  Contains the comgroup
 1238                          account, if ATYP specifies
 1239                          comgroup.
 1240                          */
 1241            2 INSTANCE REDEF CGACCT CHAR(8),
 1242            2 CGPSN CHAR(6),
 1243                          /*K* CGPSN - CHAR(6).  Contains the comgroup
 1244                          packset name, if ATYP
 1245                          specifies comgroup.
 1246                          */
 1247            2 * CHAR(2),
 1248            2 FEPNAME CHAR(8),
 1249                          /*K* FEPNAME - CHAR(8).  Contains
 1250                          the node name of the FEP.
 1251                          */
 1252            2 *(0:2) UBIN WORD;
 1253      %MEND;
 1254
 1255
 1256
 1257
 1258
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         35   
 1259      /*P* NAME: COMACCTNG
 1260
 1261      The PGRAN macro has been replaced by AZ_COMACCTNG and is
 1262      only maintained for compatablibty with pre-C00 code.
 1263      This macro is used only by AZC$ACCTNG.
 1264      */
 1265      %MACRO COMACCTNG(NAME = COMACCTNG, STCLASS = BASED);
 1266      %AZ_COMACCTNG (NAME=NAME,STCLASS=STCLASS);
 1267      %MEND;
 1268
 1269
 1270
 1271
 1272                          /*F* NAME:  AZ_GACID - PIG Accounting Record
 1273
 1274                          The AZ_GACID macro may be used to generate the structure
 1275                          that is written to :ACCTLG as the result of a
 1276                          PIG ACCOUNT run.
 1277
 1278                          This record contains the following fields:
 1279                          */
 1280
 1281      %MACRO AZ_GACID (NAME=AZ_GACID,STCLASS = STATIC);
 1282
 1283      %LSET LISTDIR='0'B;
 1284      %LSET LISTEXP='1'B;
 1285      %LSET LISTCOM='0'B;
 1286      %LSET LISTSUB='1'B;
 1287
 1288      DCL 1 NAME STCLASS,
 1289            2 CODE UBIN(9) UNAL,
 1290                          /*K* CODE - UBIN(9).
 1291                          Denotes the accounting record type.
 1292                          Always AZ$GACID (4) for this record.
 1293                          */
 1294            2 FLAG BIT(1),
 1295                          /*K* FLAG - BIT(1).
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         36   
 1296                          Reset if this is
 1297                          the beginning of a GAC run, set to indicate
 1298                          a successful completion.
 1299                          */
 1300            2 * BIT(8),
 1301            2 SYSID UBIN HALF UNAL,
 1302                          /*K* SYSID - UBIN HALF.
 1303                          Contains the SYSID of the user running GAC.
 1304                          */
 1305            2 ACCT CHAR(8),
 1306                          /*K* ACCT - CHAR(8).
 1307                          Contains the account of the user running GAC.
 1308                          */
 1309            2 UNAME CHAR(12);
 1310                          /*K* UNAME - CHAR(12).
 1311                          Contains the name of the user running GAC.
 1312                          */
 1313      %MEND;
 1314
 1315
 1316
 1317      /*P* NAME: GACID
 1318
 1319      The GACID macro has been replaced by AZ_GACID and is
 1320      only maintained for compatablibty with pre-C00 code.
 1321      This macro is used only by FGG$GAC.  The record
 1322      is written using M$WRSYSLOG.
 1323      */
 1324
 1325      %MACRO GACID(NAME = GACID, STCLASS = BASED);
 1326      %AZ_GACID (NAME=NAME,STCLASS=STCLASS);
 1327      %MEND;
 1328
 1329
 1330                          /*F* NAME:  AZ_COMGRP - Comgroup Accounting Record
 1331
 1332                          The AZ_COMGRP macro may be used to generate the structure
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         37   
 1333                          that is written to :ACCTLG which contains accounting
 1334                          information about a comgroup.
 1335                          This record is written whenever a comgroup is
 1336                          closed.
 1337
 1338                          This record contains the following fields:
 1339                          */
 1340
 1341      %MACRO AZ_COMGRP (NAME=AZ_COMGRP, STCLASS = STATIC);
 1342
 1343      %LSET LISTDIR='0'B;
 1344      %LSET LISTEXP='1'B;
 1345      %LSET LISTCOM='0'B;
 1346      %LSET LISTSUB='1'B;
 1347
 1348      DCL 1 NAME STCLASS ALIGNED,
 1349            2 CODE UBIN(9) UNAL,
 1350                          /*K* CODE - UBIN(9).
 1351                          Denotes type of record.
 1352                          Always AZ$CG (5) for this record.
 1353                          */
 1354            2 RCVR BIT(1),
 1355                          /*K* RVCR - BIT(1).
 1356                          Set if comgroup was closed by recovery.
 1357                          */
 1358            2 NORCVR BIT(1),
 1359                          /*K* NORCVR - BIT(1).
 1360                          Set if comgroup was
 1361                          open when the system failed, but did not get
 1362                          closed by recovery.  In this case there is no
 1363                          useful accounting information in the record.
 1364                          */
 1365            2 * BIT(7),
 1366            2 SN CHAR(6),
 1367                          /*K* SN - CHAR(6).
 1368                          Contains the pack set name of comgroup.
 1369                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         38   
 1370            2 ACCT CHAR(8),
 1371                          /*K* ACCT - CHAR(8).
 1372                          Contains the account of the comgroup.
 1373                          */
 1374            2 NAM,
 1375              3 L UBIN(9) UNAL,
 1376                          /*K* NAM.L - UBIN(9).
 1377                          Contains the length of comgroup name, NAM.C.
 1378                          */
 1379              3 C CHAR(31),
 1380                          /*K* NAM.C - CHAR(31).
 1381                          Contains the name of comgroup.
 1382                          */
 1383            %VLR_CGSTATS (LVL=2,STCLASS=STCLASS,FPTN=STATS,LAST=",");
 1384                          /*K* STATS is a structure defined by VLR_CGSTATS
 1385                          (from CP_6) that contains the statistics information
 1386                          for the comgroup:
 1387                          */
 1388                          /*K* STATS.READS - SBIN.
 1389                          .XEQ KC_CP6_C VLR_CGSTATS READS
 1390                          */
 1391                          /*K* STATS.WRITES - SBIN.
 1392                          .XEQ KC_CP6_C VLR_CGSTATS WRITES
 1393                          */
 1394                          /*K* STATS.GETS - SBIN.
 1395                          .XEQ KC_CP6_C VLR_CGSTATS GETS
 1396                          */
 1397                          /*K* STATS.PUTS - SBIN.
 1398                          .XEQ KC_CP6_C VLR_CGSTATS PUTS
 1399                          */
 1400                          /*K* STATS.CCMQ - SBIN.
 1401                          .XEQ KC_CP6_C VLR_CGSTATS CCMQ
 1402                          */
 1403                          /*K* STATS.CCMS - SBIN.
 1404                          .XEQ KC_CP6_C VLR_CGSTATS CCMS
 1405                          */
 1406                          /*K* STATS.NUMDCBS - SBIN.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         39   
 1407                          .XEQ KC_CP6_C VLR_CGSTATS NUMDCBS
 1408                          */
 1409                          /*K* STATS.NUMTERMS - SBIN.
 1410                          .XEQ KC_CP6_C VLR_CGSTATS NUMTERMS
 1411                          */
 1412                          /*K* STATS.DISCRDS - SBIN.
 1413                          .XEQ KC_CP6_C VLR_CGSTATS DISCRDS
 1414                          */
 1415                          /*K* STATS.DISCWRS - SBIN.
 1416                          .XEQ KC_CP6_C VLR_CGSTATS DISCWRS
 1417                          */
 1418                          /*K* STATS.PGSI - UBIN.
 1419                          .XEQ KC_CP6_C VLR_CGSTATS PGSI
 1420                          */
 1421                          /*K* STATS.GARBCOLLS - UBIN.
 1422                          .XEQ KC_CP6_C VLR_CGSTATS GARBCOLLS
 1423                          */
 1424                          /*K* STATS.NODFRS - SBIN.
 1425                          .XEQ KC_CP6_C VLR_CGSTATS NODFRS
 1426                          */
 1427            2 *(0:5) UBIN;
 1428      %MEND;
 1429
 1430      /*P* NAME: COMGRP
 1431
 1432      The COMGRP macro has been replaced by AZ_COMGRP and is
 1433      only maintained for compatablibty with pre-C00 code.
 1434
 1435      This macro is used only by KCO$OPCG.
 1436      The record is written by calling ELA$SYSLOG.
 1437      */
 1438
 1439      %MACRO COMGRP(NAME = COMGRP, STCLASS = BASED);
 1440      %AZ_COMGRP (NAME=NAME,STCLASS=STCLASS);
 1441      %MEND;
 1442
 1443
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         40   
 1444
 1445                          /*F* NAME:  AZ_SERV_GHOST - System Ghost Usage Record
 1446                          The AZ_SERV_GHOST macro is used to generate a record
 1447                          for :ACCTLG which describes the usage transactions
 1448                          for certain system service ghosts. This is used to
 1449                          charge users for discrete actions which are directly
 1450                          attributable to a specific user. Examples of its
 1451                          use are by MAILMAN to charge postage for delivery
 1452                          of mail, and by SCOTTY to charge for file transfer
 1453                          services.
 1454
 1455                          The service ghost will initially open
 1456                          :ACCTLG as a journal and keep it open as long as
 1457                          it is operational, and write one of these records
 1458                          for each identifiable operation. For example, one
 1459                          record might describe a letter delivered to a
 1460                          distribution list, or a set of files transported
 1461                          to another site.
 1462                          */
 1463
 1464      %MACRO AZ_SERV_GHOST (NAME = AZ_SERV_GHOST, STCLASS = STATIC);
 1465
 1466      %LSET LISTDIR='0'B;
 1467      %LSET LISTEXP='1'B;
 1468      %LSET LISTCOM='0'B;
 1469      %LSET LISTSUB='1'B;
 1470
 1471      DCL 1 NAME STCLASS ALIGNED,
 1472            2 CODE UBIN BYTE,
 1473                          /*K* CODE - UBIN BYTE.
 1474                          Denotes type of record.
 1475                          Always AZ$SERV_GHOST (6) for this record.
 1476                          */
 1477            2 ACCT CHAR(8),
 1478                          /*K* ACCT - CHAR(8).
 1479                          Contains the logon account of
 1480                          the user for whom the service was done.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         41   
 1481                          */
 1482            2 USERNAME CHAR(12),
 1483                          /*K* USERNAME - CHAR(12).
 1484                          Contains the logon name of
 1485                          the user for whom the service was done.
 1486                          */
 1487            2 TRAN1 UBIN,
 1488                          /*K* TRAN1 - UBIN.
 1489                          Contains the number of type 1
 1490                          transactions performed for this user. For example,
 1491                          the number of copies of a letter delivered by
 1492                          MAILMAN.
 1493                          */
 1494            2 TRAN2 UBIN,
 1495                          /*K* TRAN2 - UBIN.
 1496                          Contains the number of type 2
 1497                          transactions performed by this user. For example,
 1498                          the total number of records delivered in the
 1499                          operation described by this record by MAILMAN or
 1500                          SCOTTY.
 1501                          */
 1502            2 TRAN3 UBIN,
 1503                          /*K* TRANn - UBIN.  Where n is 3 to 8.
 1504                          Contains the number of type n transactions
 1505                          performed by this user.
 1506                          */
 1507            2 TRAN4 UBIN,
 1508            2 TRAN5 UBIN,
 1509            2 TRAN6 UBIN,
 1510            2 TRAN7 UBIN,
 1511            2 TRAN8 UBIN,
 1512            2 PROCNAME,
 1513              3 L UBIN BYTE CALIGNED,
 1514              3 C CHAR(31);
 1515                          /*K* PROCNAME - CHAR(31).
 1516                          Contains the name of the
 1517                          service ghost writing this record in TEXTC format.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         42   
 1518                          */
 1519      %MEND;
 1520
 1521
 1522      /*P* NAME: SERV_GHOST
 1523
 1524      The SERV_GHOST macro has been replaced by JSP$SERV_GHOST and is
 1525      only maintained for compatablibty with pre-C00 code.
 1526      */
 1527
 1528      %MACRO SERV_GHOST(NAME=SERV_GHOST, STCLASS = BASED);
 1529      %AZ_SERV_GHOST (NAME=NAME,STCLASS=STCLASS);
 1530      %MEND;
 1531
 1532
 1533
 1534                          /*F* NAME:  AZ_LCP6_JSP - LCP-6 Job/Step/Processor Record
 1535
 1536                          The AZ_LCP6_JSP macro may be used to generate a structure
 1537                          for the record written to :ACCTLG which describes the
 1538                          resource usage for LCP-6 users.  The record is written
 1539                          at job step if the STEPUNIT counters in the JIT have
 1540                          have been incremented (see M$CHGUNIT in the LCP-6 Monitor
 1541                          Services Reference Manual), if FEP job step accounting
 1542                          is in effect (see the FESTEPACCNT option of SUPER),
 1543                          when a proprietary FPRG is terminated (see the SURCHARGE option
 1544                          of FEPLINK),
 1545                          and
 1546                          when a LCP-6 user is terminated.
 1547
 1548                          Use of this macro will cause the G_JIT_M macro file to
 1549                          be included with the source program as the G$ACC macro
 1550                          from this file is required to generate the structure for
 1551                          AZ_LCP6_JSP.
 1552                          If the generation of this INCLUDE statement is to be
 1553                          inhibited, i.e. the file has already been included, or there
 1554                          are multiple invocations of the AZ_LCP6_JSP macro within
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         43   
 1555                          the same compilation, "INCLUDE_GJIT=NO" should be
 1556                          specified when the macro is invoked.
 1557
 1558                          To generate the EQUs that may be used to refer to the
 1559                          contents of some of the fields that are described below,
 1560                          invoke the G$JIT_E macro.  This macro is contained in
 1561                          the G_JIT_M macro file.
 1562
 1563                          This record contains the following fields:
 1564                          */
 1565
 1566      %MACRO AZ_LCP6_JSP (NAME=AZ_LCP6_JSP, STCLASS = STATIC,
 1567                         INCLUDE_GJIT(YES=1,NO=0,ANY)=1);
 1568
 1569      %LSET LISTDIR='0'B;
 1570      %LSET LISTEXP='1'B;
 1571      %LSET LISTCOM='0'B;
 1572      %LSET LISTSUB='1'B;
 1573
 1574      %IF INCLUDE_GJIT = 1;
 1575      %INCLUDE G_JIT_M;
 1576      %ENDIF;
 1577
 1578      %G$ACC (FPTN=NAME,STCLASS=STCLASS,HOST_TYPE=0,LAST=NO);
 1579                          /*K* CODE - UBIN BYTE.
 1580                          .XEQ G_JIT_M G$ACC CODE
 1581                          */
 1582                          /*K* TYPE - UBIN BYTE.
 1583                          .XEQ G_JIT_M G$ACC TYPE
 1584                          */
 1585                          /*K* STEP - UBIN BYTE.
 1586                          .XEQ G_JIT_M G$ACC STEP
 1587                          */
 1588                          /*K* PROG_ENTRY.
 1589                          .XEQ G_JIT_M G$ACC PROG_ENTRY
 1590                          */
 1591                          /*K* MODE - UBIN BYTE.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         44   
 1592                          .XEQ G_JIT_M G$ACC MODE
 1593                          */
 1594                          /*K* USR# - UBIN BYTE.
 1595                          .XEQ G_JIT_M G$ACC USR#
 1596                          */
 1597                          /*K* SYSID - UBIN HALF.
 1598                          .XEQ G_JIT_M G$ACC SYSID
 1599                          */
 1600                          /*K* ACCN - CHAR(8).
 1601                          .XEQ G_JIT_M G$ACC ACCN
 1602                          */
 1603                          /*K* UNAME - CHAR(12).
 1604                          .XEQ G_JIT_M G$ACC UNAME
 1605                          */
 1606                          /*K* PROCNAME - TEXTC(31).
 1607                          .XEQ G_JIT_M G$ACC PROCNAME
 1608                          See the SURCHARGE option of FEPLINK.
 1609                          This field is valid only when AZ_LCP6_JSP.TYPE is AZ$PROC.
 1610                          */
 1611                          /*K* START - UBIN WORD.
 1612                          .XEQ G_JIT_M G$ACC START
 1613                          */
 1614                          /*K* STOP - UBIN WORD.
 1615                          .XEQ G_JIT_M G$ACC STOP
 1616                          */
 1617                          /*K* USER_EXTIME - UBIN WORD.
 1618                          .XEQ G_JIT_M G$ACC USER_EXTIME
 1619                          */
 1620                          /*K* USER_SVTIME - UBIN WORD.
 1621                          .XEQ G_JIT_M G$ACC USER_SVTIME
 1622                          */
 1623                          /*K* USER_MEMTIME - UBIN WORD.
 1624                          .XEQ G_JIT_M G$ACC USER_MEMTIME
 1625                          */
 1626                          /*K* PROC_EXTIME - UBIN WORD.
 1627                          .XEQ G_JIT_M G$ACC PROC_EXTIME
 1628                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         45   
 1629                          /*K* PROC_SVTIME - UBIN WORD.
 1630                          .XEQ G_JIT_M G$ACC PROC_SVTIME
 1631                          */
 1632                          /*K* PROC_MEMTIME - UBIN WORD.
 1633                          .XEQ G_JIT_M G$ACC PROC_MEMTIME
 1634                          */
 1635                          /*K* PEAK_SUDO - ARRAY(0:7) UBIN BYTE.
 1636                          .XEQ G_JIT_M G$ACC PEAK_SUDO
 1637                          */
 1638                          /*K* PEAK_MEM - UBIN HALF.
 1639                          .XEQ G_JIT_M G$ACC PEAK_MEM
 1640                          */
 1641                          /*K* PEAK_LVLS - UBIN HALF.
 1642                          .XEQ G_JIT_M G$ACC PEAK_LVLS
 1643                          */
 1644                          /*K* CALCNT - UBIN HALF.
 1645                          .XEQ G_JIT_M G$ACC CALCNT
 1646                          */
 1647                          /*K* JSUNIT - ARRAY(0:3) UBIN HALF.
 1648                          .XEQ G_JIT_M G$ACC JSUNIT
 1649                          */
 1650                          /*K* ERR.
 1651                          Contains the error code that reflects the exit condition of the
 1652                          user program.
 1653                          The error code is in VLP_ERRCODE format.
 1654                          */
 1655                          /*K* FRS - Final Run Status.
 1656                          .XEQ G_JIT_M G$JIT RNST
 1657                          */
 1658                          /*N* FRS.XKEY - BIT(1).
 1659                          .XEQ GU_LCP6_M G_RNST XKEY
 1660                          */
 1661                          /*K* FRS.DSC - BIT(1).
 1662                          .XEQ GU_LCP6_M G_RNST DSC
 1663                          */
 1664                          /*K* FRS.OFF - BIT(1).
 1665                          .XEQ GU_LCP6_M G_RNST OFF
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         46   
 1666                          */
 1667                          /*K* FRS.LIMX - BIT(1).
 1668                          .XEQ GU_LCP6_M G_RNST LIMX
 1669                          */
 1670                          /*N* FRS.EKEY - BIT(1).
 1671                          .XEQ GU_LCP6_M G_RNST EKEY
 1672                          */
 1673                          /*K* FRS.SSP - BIT(1).
 1674                          .XEQ GU_LCP6_M G_RNST SSP
 1675                          */
 1676                          /*K* FRS.INTABRT - BIT(1).
 1677                          .XEQ GU_LCP6_M G_RNST INTABRT
 1678                          */
 1679                          /*K* FRS.ABRT - BIT(1).
 1680                          .XEQ GU_LCP6_M G_RNST ABRT
 1681                          */
 1682                          /*K* STEPCC - UBIN BYTE.
 1683                          .XEQ G_JIT_M G$ACC STEPCC
 1684                          */
 1685                          /*K* XLIMFLG.
 1686                          .XEQ G_JIT_M G$ACC XLIMFLG
 1687                          */
 1688                          /*K* XLIMFLG.TIME - BIT(1).
 1689                          .XEQ G_JIT_M G$ACC XLIMFLG.TIME
 1690                          */
 1691                          /*K* BILL - CHAR(6).
 1692                          .XEQ G_JIT_M G$ACC BILL
 1693                          */
 1694                          /*K* READS_HOST - UBIN WORD.
 1695                          .XEQ G_JIT_M G$ACC READS_HOST
 1696                          */
 1697                          /*K* WRITES_HOST - UBIN WORD.
 1698                          .XEQ G_JIT_M G$ACC WRITES_HOST
 1699                          */
 1700                          /*K* READS_UC - UBIN WORD.
 1701                          .XEQ G_JIT_M G$ACC READS_UC
 1702                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         47   
 1703                          /*K* WRITES_UC - UBIN WORD.
 1704                          .XEQ G_JIT_M G$ACC WRITES_UC
 1705                          */
 1706                          /*K* INST_ACC - ARRAY(0:14) SBIN(18).
 1707                          This area in the AZ_LCP6_JSP record are reserved for
 1708                          the exclusive use by installation routines.
 1709                          */
 1710              2 CHG SBIN;
 1711                          /*K* CHG - SBIN.
 1712                          Contains the total CHarGe, in hundredths,
 1713                          for this record.
 1714                          */
 1715      %MEND;
 1716
 1717                          /*F* NAME:  STAR_S - *S File Accounting Structures
 1718
 1719                          The *S file is a keyed file that contains
 1720                          accounting records written by the monitor.
 1721                          The keys of the file are of variable length
 1722                          as are the records in the file.
 1723
 1724                          The keys are
 1725                          in TEXTC format, with the first byte containing
 1726                          the length of the key.  The second byte of the
 1727                          key contains a code to indicate the type of
 1728                          record as follows:
 1729                          }
 1730                          }  a - record written by the M$ACCT monitor service.
 1731                          }      The record format is defined by the AZ_CP6_JSP
 1732                          }      macro.  The key for this record is defined by
 1733                          }      the AZ_ACCTKEY macro.
 1734                          }
 1735                          }  b - record is a duplicate of that written to :ACCTLG.
 1736                          }      The record format is defined by the AZ_CP6_JSP
 1737                          }      macro.  The key for this record is defined by
 1738                          }      the AZ_STAR_KEY macro.
 1739                          }
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         48   
 1740                          }  f - record contains form accounting information.
 1741                          }      The record format is defined by the AZ_FORM_REC
 1742                          }      macro.  The key for this record is defined by
 1743                          }      the AZ_FORM_KEY macro.
 1744                          }
 1745                          }  r - record contains resource accounting information.
 1746                          }      The record will be in the format defined by the
 1747                          }      AZ_RES_TIME or AZ_SEUDO_TIME macro.  The
 1748                          }      key for these records is defined by the
 1749                          }      AZ_RES_KEY macro.
 1750                          }
 1751                          */
 1752
 1753                          /*F* NAME:  AZ_ACCTKEY
 1754
 1755                          This macro defines the key of records written
 1756                          to the *S file via the M$ACCT monitor service.
 1757                          */
 1758      %MACRO AZ_ACCTKEY(NAME = AZ_ACCTKEY, STCLASS = STATIC,
 1759                      STEP = 0,
 1760                      PROC = 0,
 1761                      UTS = 0,
 1762                      TYPE(PSTART=1,PSTOP=2,SSTART=3,SSTOP=4,JOBEND=5,RCVRY=6,ANY)=5);
 1763
 1764      %LSET LISTDIR='0'B;
 1765      %LSET LISTEXP='1'B;
 1766      %LSET LISTCOM='0'B;
 1767      %LSET LISTSUB='1'B;
 1768      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
 1769      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
 1770      %LSET INIT=CHARTEXT('INIT');
 1771      %LSET EINIT=CHARTEXT('');
 1772      %ELSE;
 1773      %LSET INIT=CHARTEXT('/*');
 1774      %LSET EINIT=CHARTEXT('*/');
 1775      %ENDIF;
 1776
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         49   
 1777      DCL 1 NAME STCLASS,
 1778            2 L UBIN BYTE UNAL %INIT(9)%EINIT,
 1779            2 AREC_TYPE CHAR(1) %INIT('a')%EINIT,
 1780            2 ACCT# REDEF AREC_TYPE CHAR(1),
 1781                          /*K* AREC_TYPE - CHAR(1).
 1782                          Contains  'a' denoting that this is a AZ_CP6_JSP
 1783                          record that has been written to the *S file by
 1784                          M$ACCT.
 1785                          */
 1786                          /*K* ACCT# is a REDEF of AREC_TYPE.
 1787                          */
 1788            2 STEP# UBIN HALF UNAL %INIT(STEP)%EINIT,
 1789                          /*K* STEP# - UBIN HALF.
 1790                          Contains the number of the job step if this is a
 1791                          JOBSTEP or PROC record; contains zero if this a
 1792                          JOBEND record.
 1793                          */
 1794            2 PROC# UBIN BYTE UNAL %INIT(PROC)%EINIT,
 1795                          /*K* PROC# - UBIN BYTE.
 1796                          Denotes the Run Unit sequence
 1797                          number of this step. That is, PROC=3 means that this record
 1798                          describes the 4th Run Unit invoked this step. The value
 1799                          510 is reserved for SSTART and SSTOP records;
 1800                          511 is reserved for JOBEND and RCVRY records.
 1801                          */
 1802            2 UTS# UBIN WORD UNAL %INIT(UTS)%EINIT,
 1803                          /*K* UTS# - UBIN WORD.
 1804                          Denotes the 'current UTS' of the
 1805                          record. This is the system UTS for all TYPEs except RCVRY
 1806                          where it is the UTS passed in via the FPT_ACCT.V.UTS# field.
 1807                          */
 1808            2 TYPE# UBIN BYTE UNAL %INIT(TYPE)%EINIT;
 1809                          /*K* TYPE# - UBIN BYTE.
 1810                          Contains the value passed via the
 1811                          FPT_ACCT.V.TYP# field to describe the type of
 1812                          accounting record:
 1813                          }
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         50   
 1814                          }  1   PSTART
 1815                          }  2   PSTOP
 1816                          }  3   SSTART
 1817                          }  4   SSTOP
 1818                          }  5   JOBEND
 1819                          }  6   RECOVERY
 1820                          */
 1821      %MEND;
 1822
 1823      /*P* NAME: ACCT_KEY
 1824
 1825      The ACCT_KEY macro has been replaced by AZ_ACCTKEY and is
 1826      only maintained for compatablibty with pre-C00 code.
 1827      This macro is used by AFA$ACCT and AZA$LOGOFF.
 1828      */
 1829
 1830      %MACRO ACCT_KEY(NAME = ACCT_KEY, STCLASS = STATIC,
 1831                      STEP = 0, PROC = 0, UTS = 0,
 1832                      TYPE(PSTART=1,PSTOP=2,SSTART=3,SSTOP=4,JOBEND=5,RCVRY=6,ANY)=5);
 1833      %AZ_ACCTKEY (NAME=NAME,STCLASS=STCLASS,STEP=STEP,PROC=PROC,UTS=UTS,TYPE=TYPE);
 1834      %MEND;
 1835
 1836
 1837
 1838                          /*F* NAME:  AZ_STAR_KEY
 1839
 1840                          This macro defines the key required to access
 1841                          accounting records written to the *S file as
 1842                          duplicates of those records written to :ACCTLG.
 1843
 1844                          Such records are written as a result of the SUPER
 1845                          option *S_ACCOUNTING being specified for the user.
 1846                          */
 1847
 1848      %MACRO AZ_STAR_KEY(NAME=AZ_STAR_KEY, STCLASS = STATIC);
 1849
 1850      %LSET LISTDIR='0'B;
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         51   
 1851      %LSET LISTEXP='1'B;
 1852      %LSET LISTCOM='0'B;
 1853      %LSET LISTSUB='1'B;
 1854
 1855      DCL 1 NAME STCLASS,
 1856            2 LEN UBIN BYTE UNAL,
 1857            2 AREC_TYPE CHAR(1),
 1858            2 ACCT REDEF AREC_TYPE CHAR(1),
 1859                          /*K* AREC_TYPE - CHAR(1).
 1860                          Contains 'b' which denotes that this is a AZ_CP6_JSP
 1861                          record in the *S file that is a duplicate of that
 1862                          written to :ACCTLG.
 1863                          */
 1864                          /*K* ACCT is a REDEF of AREC_TYPE.
 1865                          */
 1866            2 STEP UBIN HALF UNAL,
 1867                          /*K* STEP - UBIN HALF.
 1868                          Contains the number of the job step if this is a
 1869                          JOBSTEP or PROC record; contains zero if this a
 1870                          JOBEND record.
 1871                          */
 1872            2 NUM UBIN BYTE UNAL;
 1873                          /*K* NUM - UBIN BYTE.
 1874                          Contains a unique number used to order
 1875                          and separate records with the same STEP value.
 1876                          511 is unused; 510 denotes a STEPEND record;
 1877                          0 is used for jobend records. The
 1878                          rest denote PROPRIETARY ACCOUNTING records. The
 1879                          values for NUM within a given STEP need not be
 1880                          consecutive.  For example, there may be records
 1881                          containing NUM values of 1, 2, and 4 for a
 1882                          given step.
 1883                          */
 1884      %MEND;
 1885
 1886
 1887      /*P* NAME: STARSACC$KEY
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         52   
 1888
 1889      The STARSACC$KEY macro has been replaced by AZ_STARSACC$KEY.
 1890      and is only maintained for compatablibty with pre-C00 code.
 1891      This macro is used only by AZA$LOGOFF.
 1892      */
 1893
 1894      %MACRO STARSACC$KEY(NAME = STARSACC$KEY, STCLASS = BASED);
 1895      %AZ_STAR_KEY (NAME=NAME,STCLASS=STCLASS);
 1896      %MEND;
 1897
 1898
 1899                          /*F* NAME:  AZ_FORM_KEY
 1900                          The AZ_FORM_KEY macro generates a structure for the
 1901                          key of a AZ_FORM_REC record in the *S file.  The
 1902                          key contains the following fields:
 1903                          */
 1904
 1905      %MACRO AZ_FORM_KEY(NAME = AZ_FORM_KEY, STCLASS = STATIC);
 1906
 1907      %LSET LISTDIR='0'B;
 1908      %LSET LISTEXP='1'B;
 1909      %LSET LISTCOM='0'B;
 1910      %LSET LISTSUB='1'B;
 1911      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
 1912      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
 1913      %LSET INIT=CHARTEXT('INIT');
 1914      %LSET EINIT=CHARTEXT('');
 1915      %ELSE;
 1916      %LSET INIT=CHARTEXT('/*');
 1917      %LSET EINIT=CHARTEXT('*/');
 1918      %ENDIF;
 1919
 1920      DCL 1 NAME STCLASS,
 1921            2 LEN UBIN BYTE UNAL %INIT(5)%EINIT,
 1922            2 AREC_TYPE CHAR(1) %INIT('f')%EINIT,
 1923            2 FORM_ID REDEF AREC_TYPE CHAR(1),
 1924                          /*K* AREC_TYPE - CHAR(1).
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         53   
 1925                          Contains 'f', which denotes that this is a
 1926                          FORM$REC accounting record.
 1927                          */
 1928            2 STEP UBIN(18)  UNAL %INIT(0)%EINIT,
 1929                          /*K* STEP - UBIN(18).
 1930                          Contains the step number for
 1931                          this record. Obtained from B$JIT.STEPS.
 1932                          */
 1933            2 UNIQUE UBIN(18)  UNAL %INIT(0)%EINIT;
 1934                          /*K* UNIQUE - UBIN(18).
 1935                          Contains a unique identifier for FORM$REC
 1936                          accounting records.  Obtained from B$JIT.ARECX.
 1937                          record.
 1938                          */
 1939      %MEND;
 1940
 1941      /*P* NAME: FORM_KEY and FORM$KEY
 1942
 1943      These macros have been replaced by AZ_FORM_KEY and
 1944      are only maintained for compatablibty with pre-C00 source code.
 1945
 1946      FORM_KEY is used by AFA$ACCT and FSL$LDEV.
 1947      FORM$KEY is used only by FSL$LDEV.
 1948      */
 1949
 1950      %MACRO FORM_KEY(NAME = FORM_KEY, STCLASS = STATIC);
 1951      %AZ_FORM_KEY (NAME=NAME,STCLASS=STCLASS);
 1952      %MEND;
 1953      %MACRO FORM$KEY(NAME = FORM$KEY, STCLASS = BASED);
 1954      %AZ_FORM_KEY (NAME=NAME,STCLASS=STCLASS);
 1955      %MEND;
 1956
 1957
 1958                          /*F* NAME:  AZ_FORM_REC
 1959
 1960                          The AZ_FORM_REC macro generates a structure for the
 1961                          record that is written to the *S file containing
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         54   
 1962                          form usage accounting information.
 1963
 1964                          This record contains the following:
 1965                          */
 1966
 1967      %MACRO AZ_FORM_REC(NAME = AZ_FORM_REC, STCLASS = STATIC);
 1968
 1969      %LSET LISTDIR='0'B;
 1970      %LSET LISTEXP='1'B;
 1971      %LSET LISTCOM='0'B;
 1972      %LSET LISTSUB='1'B;
 1973
 1974      DCL 1 NAME STCLASS,
 1975            2 MOUNTS SBIN,
 1976                          /*K* MOUNTS - SBIN.
 1977                          Contains the number of mounts
 1978                          performed this step. May be -1(on a !LDEV ERASE),
 1979                          0, or 1.
 1980                          */
 1981            2 RECS SBIN,
 1982                          /*K* RECS - SBIN.
 1983                          Contains the number of records this step.
 1984                          */
 1985            2 PAGES SBIN HALF UNAL,
 1986                          /*K* PAGES - SBIN HALF.
 1987                          Contains the number of pages this step.
 1988                          */
 1989            2 COPIES UBIN HALF UNAL,
 1990                          /*K* COPIES - UBIN HALF.
 1991                          Contains the number of copies. Defined
 1992                          as 1 for DIRECT=YES.
 1993                          */
 1994            2 DDEV,
 1995                          /*K* DDEV - BIT(18).
 1996                          Copied from DDEV in
 1997                          the DCB used to output to this FORM.
 1998                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         55   
 1999              3 LP BIT(1),
 2000                          /*K* DDEV.LP - BIT(1).
 2001                          Used to decide whether to use RECS or PAGES in charging.
 2002                          If set, PAGES will be used.
 2003                          */
 2004              3 * BIT(17),
 2005            2 S1,
 2006              3 FORMNAME CHAR(12),
 2007                          /*K* S1.FORMNAME - CHAR(12).
 2008                          Contains the name of the form.  This field may be
 2009                          used as a key qualifier to find correct FORM
 2010                          record in the :RATES file.
 2011                          */
 2012              3 DD CHAR(2),
 2013                          /*K* S1.DD - CHAR(2).
 2014                          Contains the device name of the destination device.
 2015                          */
 2016              3 WSN CHAR(8);
 2017                          /*K* WSN - CHAR(8).
 2018                          Contains the work station of the destination device.
 2019                          */
 2020      %MEND;
 2021
 2022
 2023      /*P* NAME: FORM$REC
 2024
 2025      The FORM$REC macro has been replaced by AZ_FORM_REC.
 2026      This macro is maintained for compatablibty with pre-C00 code.
 2027
 2028      This macro is used by AFA$ACCT and FSL$LDEV.
 2029      */
 2030      %MACRO FORM$REC(NAME = FORM$REC, STCLASS = BASED);
 2031      %AZ_FORM_REC (NAME=NAME,STCLASS=STCLASS);
 2032      %MEND;
 2033
 2034
 2035
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         56   
 2036
 2037                          /*F* NAME:  AZ_RES_KEY
 2038
 2039                          The AZ_RES_KEY macro generates a structure for the
 2040                          key of a AZ_RES_TIME or AZ_SEUDO_TIME record in the
 2041                          *S file.  The key contains the following fields:
 2042                          */
 2043
 2044      %MACRO AZ_RES_KEY(NAME = AZ_RES_KEY, STCLASS = STATIC);
 2045
 2046      %LSET LISTDIR='0'B;
 2047      %LSET LISTEXP='1'B;
 2048      %LSET LISTCOM='0'B;
 2049      %LSET LISTSUB='1'B;
 2050      %LSET STR=SUBSTR(CONCAT(TEXTCHAR(STCLASS),'   '),0,3);
 2051      %IF (STR='STA') OR (STR='CON') OR STR='EXT';
 2052      %LSET INIT=CHARTEXT('INIT');
 2053      %LSET EINIT=CHARTEXT('');
 2054      %ELSE;
 2055      %LSET INIT=CHARTEXT('/*');
 2056      %LSET EINIT=CHARTEXT('*/');
 2057      %ENDIF;
 2058
 2059      DCL 1 NAME STCLASS,
 2060            2 LEN UBIN BYTE UNAL %INIT(3)%EINIT,
 2061            2 AREC_TYPE CHAR(1) %INIT('r')%EINIT,
 2062            2 RES_ID REDEF AREC_TYPE CHAR(1),
 2063                          /*K* AREC_TYPE - CHAR(1).
 2064                          Contains 'r', which denotes that this is a
 2065                          AZ_RES_TIME or AZ_SEUDO_TIME accounting record.
 2066                          */
 2067            2 UNIQUE UBIN(18)  UNAL %INIT(0)%EINIT;
 2068                          /*K* UNIQUE - UBIN(18).
 2069                          Contains a unique identifier for resource allocation
 2070                          accounting records.  Obtained from B$JIT.ARECX.
 2071
 2072                          This is always '777777'O for pseudo resource
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         57   
 2073                          record.
 2074                          */
 2075      %MEND;
 2076
 2077      /*P* NAME: RES_KEY and RES$KEY
 2078
 2079      These macros have been replaced by AZ_RES_KEY and are
 2080      only maintained for compatablibty with pre-C00 code.
 2081      RES_KEY is used by AFA$ACCT and FRS$ACCTNG.
 2082      */
 2083      %MACRO RES_KEY(NAME = RES_KEY, STCLASS = STATIC);
 2084      %AZ_RES_KEY (NAME=NAME,STCLASS=STCLASS);
 2085      %MEND;
 2086      %MACRO RES$KEY (NAME=RES$KEY,STCLASS = BASED);
 2087      %AZ_RES_KEY (NAME=NAME,STCLASS=STCLASS);
 2088      %MEND;
 2089
 2090
 2091
 2092
 2093                          /*F* NAME:  AZ_RES_TIME
 2094
 2095                          The AZ_RES_TIME macro generates a structure for the
 2096                          record that is written to the *S file containing
 2097                          resource usage accounting information.
 2098
 2099                          This record contains the following:
 2100                          */
 2101
 2102      %MACRO AZ_RES_TIME(NAME = AZ_RES_TIME, STCLASS = STATIC);
 2103
 2104      %LSET LISTDIR='0'B;
 2105      %LSET LISTEXP='1'B;
 2106      %LSET LISTCOM='0'B;
 2107      %LSET LISTSUB='1'B;
 2108
 2109      DCL 1 NAME STCLASS,
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         58   
 2110            2 TYPE UBIN ,
 2111                          /*K* TYPE - UBIN.
 2112                          .XEQ AZ_MACRO_C AZ_RESOURCE TYPE
 2113                          */
 2114            2 START,
 2115              3 CLOCK SBIN WORD,
 2116                          /*K* START.CLOCK - SBIN.
 2117                          Contains the UTS at time of resource acquisition.
 2118                          */
 2119              3 CPU SBIN WORD,
 2120                          /*K* START.CPU - SBIN.
 2121                          Contains the CPU elapsed time at resource acquisition.
 2122                          */
 2123            2 REL,
 2124              3 CLOCK SBIN WORD,
 2125                          /*K* REL.CLOCK - SBIN.
 2126                          Contains the UTS at resource release.
 2127                          Zero until resource released.
 2128                          */
 2129              3 CPU SBIN WORD,
 2130                          /*K* REL.CPU - SBIN.
 2131                          Contains the elapsed CPU time at resource
 2132                          release. Zero until resource released.
 2133                          */
 2134            2 WSN CHAR(8),
 2135                          /*K* WSN - CHAR(8).
 2136                          Contains the WSN under which this
 2137                          resource was requested.
 2138                          */
 2139            2 LOGNAME CHAR(4),
 2140                          /*K* LOGNAME - CHAR(4).
 2141                          Contains the logical name of the resource.
 2142                          */
 2143            2 LGNM REDEF LOGNAME,
 2144              3 TYPE CHAR(2),
 2145              3 NUM CHAR(2),
 2146            2 PHYSNAME CHAR(8),
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         59   
 2147                          /*K* PHYSNAME - CHAR(8).
 2148                          Contains the physical name of
 2149                          the resource. Valid for non-zero REL only.
 2150                          */
 2151            2 ATTR,
 2152              3 M1 BIT(18),
 2153                          /*K* ATTR.M1 - BIT(18).
 2154                          Contains the device attributes
 2155                          received by the user. Valid for non-zero REL only.
 2156                          */
 2157              3 MTWO BIT(18);
 2158                          /*K* ATTR.MTWO - BIT(18).
 2159                          Contains the device attributes requested by the user.
 2160                          */
 2161      %MEND;
 2162
 2163      /*P* NAME: RES$TIME
 2164
 2165      The RES$TIME macro has been replaced by AZ_RES_TIME and
 2166      is only maintained for compatablibty with pre-C00 code.
 2167      source code.
 2168
 2169      This macro is used by AFA$ACCT and FRS$ACCTNG..
 2170      */
 2171      %MACRO RES$TIME(NAME = RES$TIME, STCLASS = BASED);
 2172      %AZ_RES_TIME (NAME=NAME,STCLASS=STCLASS);
 2173      %MEND;
 2174
 2175
 2176                          /*F* NAME:  AZ_SEUDO_TIME
 2177
 2178                          The AZ_SEUDO_TIME macro generates a structure for the
 2179                          record that is written to the *S file containing
 2180                          pseudo resource usage accounting information.
 2181
 2182                          This record contains the following:
 2183                          */
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         60   
 2184
 2185      %MACRO AZ_SEUDO_TIME (NAME = AZ_SEUDO_TIME, STCLASS = STATIC);
 2186
 2187      %LSET LISTDIR='0'B;
 2188      %LSET LISTEXP='1'B;
 2189      %LSET LISTCOM='0'B;
 2190      %LSET LISTSUB='1'B;
 2191
 2192      DCL 1 NAME(0:7) STCLASS,
 2193            2 NAM  CHAR(8),
 2194                          /*K* NAM  - CHAR(8).
 2195                          Contains the name of this pseudo resource.
 2196                          */
 2197            2 ACTIVE UBIN WORD,
 2198                          /*K* ACTIVE - UBIN.
 2199                          Contains the number of this
 2200                          pseudo-resource currently active.
 2201                          */
 2202            2 JMAX UBIN WORD,
 2203                          /*K* JMAX - UBIN.
 2204                          Contains the maximum number of this
 2205                          pseudo-resource ever active this job.
 2206                          */
 2207            2 CPU,
 2208              3 INTEGRAL UBIN,
 2209                          /*K* CPU.INTEGRAL - UBIN.
 2210                          Contains the integral of resource*time
 2211                          in units of hundredths of CPU seconds * number of
 2212                          resource units.
 2213                          */
 2214              3 LAST UBIN,
 2215                          /*K* CPU.LAST - UBIN.
 2216                          Contains the elapsed job CPU time at
 2217                          last INTEGRAL update in hundredths of CPU seconds.
 2218                          */
 2219            2 CLOCK,
 2220              3 INTEGRAL UBIN,
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         61   
 2221                          /*K* CLOCK.INTEGRAL - UBIN.
 2222                          Contains the same information as CPU.INTEGRAL but
 2223                          time in units of real hundredths of seconds.
 2224                          */
 2225              3 LAST UBIN;
 2226                          /*K* CLOCK.LAST - UBIN.
 2227                          Contains the same information as CPU.LAST but in units
 2228                          of real hundredths of seconds.
 2229                          */
 2230      %MEND;
 2231
 2232      /*P* NAME: SUDO$TIME
 2233
 2234      The SUDO$TIME macro has been replaced by AZ_SEUDO_TIME
 2235      and is only maintained for compatablibty with pre-C00 code.
 2236
 2237      This macro is used by AFA$ACCT and FRS$ACCTNG.
 2238      */
 2239
 2240      %MACRO SUDO$TIME(NAME = SUDO$TIME, STCLASS = BASED);
 2241      %AZ_SEUDO_TIME (NAME=NAME,STCLASS=STCLASS);
 2242      %MEND;
 2243
 2244
 2245      /*P* NAME: SUDO_KEY
 2246      This macro is used by AFA$ACCT and FRS$ACCTNG.
 2247      */
 2248      %MACRO SUDO_KEY(NAME = SUDO_KEY, STCLASS = STATIC);
 2249      DCL 1 NAME STCLASS,
 2250            2 LEN UBIN BYTE UNAL INIT(3),
 2251            2 RES_ID CHAR(1) INIT('r'),
 2252                          /*K* RES_ID = VALUE-CHAR(1). Denotes a
 2253                          resource allocation time record.
 2254                          */
 2255            2 UNIQUE UBIN(18)  UNAL INIT(262143);
 2256                          /*K* UNIQUE = VALUE-DEC. A unique
 2257                          identifier for resource allocation records.
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         62   
 2258                          Always '777777'O for the pseudo-resource
 2259                          record.
 2260                          */
 2261      %MEND;
 2262
 2263
 2264
 2265      /*F* NAME: LOGOFF$PARAMS
 2266
 2267      The LOGOFF$PARAMS macro generates the structure
 2268      that contains the parameters for the AZA$LOGOFF
 2269      routine.
 2270      */
 2271      /* This macro is used by:  AZA$LOGOFF
 2272                                 CPA$CMDS
 2273                                 CPA$IBEX
 2274                                 CPB$IBEX1
 2275                                 IGR$RECOVER
 2276                                 QXA$TPCP
 2277      */
 2278      %MACRO LOGOFF$PARAM(NAME = LOGOFF$PARAM, STCLASS = BASED);
 2279
 2280      %LSET LISTDIR='0'B;
 2281      %LSET LISTEXP='1'B;
 2282      %LSET LISTCOM='0'B;
 2283      %LSET LISTSUB='1'B;
 2284
 2285      DCL 1 NAME STCLASS,
 2286            2 CODE SBIN,
 2287                          /*K* CODE = VALUE-DEC. Determines what sort of
 2288                          call to LOGOFF this is. Possible CODE values
 2289                          are: AZ$RECOVERY, AZ$JOBEND, AZ$STATUS and AZ$STEP.
 2290                          */
 2291            2 ERR SBIN,
 2292                          /*K* ERR = VALUE-DEC. Error code if LOGOFF altreturns.
 2293                          Possible errors are AZ$LOGOFERR, AZ$BUDLIM, or
 2294                          AZ$STATSERR. The causing monitor error for AZ$LOGOFFERR
14:08 JUL 28 '97 AZ_MACRO_C.:E05SI                                         63   
 2295                          or AZ$STATSERR will be found in B$JIT.USRERR
 2296                          */
 2297            2 DCB1 UBIN HALF UNAL,
 2298                          /*K* DCB1 = VALUE-DEC. DCB number of a DCB available
 2299                          for LOGOFF use. It will not be intact upon return.
 2300                          */
 2301            2 DCB_LL UBIN HALF UNAL,
 2302                          /*K* DCB_LL = VALUE-DEC. DCB number of a DCB named M$LL
 2303                          for LOGOFF to write statistics through. It will not be
 2304                          OPENed or CLOSEd. Just written through.
 2305                          */
 2306            2 UTS UBIN WORD,
 2307                          /*K* UTS = VALUE-DEC. For use only if CODE=AZ$RECOVERY.
 2308                          This is the value to use for current UTS and should
 2309                          be the UTS at the time of the SCREECH.
 2310                          */
 2311            2 JIT$ PTR,
 2312                          /*K* JIT$ = VALUE-PTR. Pointer to the user's JIT.
 2313                          Valid only if AZ_CP6_JSP.CODE is AZ$RECOVERY.
 2314                          */
 2315            2 ACCUM_CHG UBIN WORD;
 2316                          /*K* ACCUM_CHG = VALUE-DEC. The accumulated charges for
 2317                          this user.  LOGOFF returns this value to the calling
 2318                          routine.
 2319                          */
 2320      %MEND;
 2321
 2322

