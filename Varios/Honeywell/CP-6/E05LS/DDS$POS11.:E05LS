VERSION E05

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:1    
        1        1        /*M* DDS$POS11 EVALUATE "POS11" NODE ROUTINE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$POS11
        9        9             PURPOSE: TO EVALUATE THE NODE "POS11".
       10       10             DESCRIPTION: RUNS (OR WALKS AS THE CASE MAY BE) THROUGH THE
       11       11             NODES RETURNED BY M$PARSE. IF SCHEMAS ARE AVAILABLE THEN DOES
       12       12             DIFFERENT EVALUATION THAN IF SCHEMAS ARE NOT AVAILABLE. CHECKS
       13       13             FOR SEMANTIC ERRORS BASED UPON SCHEMA AVAILABILITY. ASSUMES THAT
       14       14             M$PARSE CAUGHT ANY SYNTACTIC ERRORS. RETURNS IF SUCCESSFUL, ELSE
       15       15             ALTRETURNS. */
       16       16        /*D* NAME: DDS$POS11
       17       17             CALL: CALL DDS$POS11(NODE$,IC) ALTRET(NOT FOUND);
       18       18             INTERFACE: DDS$PD_SRCH - FINDS PRIMARY ENTDEF.
       19       19                        DDS$ED_SRCH - FINDS ENTDEFS.
       20       20                        DDS$QUAL_SRCH - EVALUATES "QUAL" NODE.
       21       21                        DDS$ST_SRCH - FINDS STATEMENT LABELS.
       22       22                        DDS$SD_SRCH - FINDS SYMDEFS
       23       23                        DDS$ES_INQ - ESTABLISHES SCHEMA IN "Q"
       24       24                        DDS$IC2ST - FINDS STATEMENT LABELS FROM IC.
       25       25                        DDS$LN_SRCH - FINDS STATEMENT LINE NUMBERS.
       26       26                        DDS$IE_SRCH - FINDS INTERNAL ENTRYS.
       27       27                        DDD$SIMEXP - EVALUATES "SIMEXP" NODE.
       28       28                        DDS$LA_SRCH - FINDS STATEMENT LABEL ARRAY.
       29       29                        DDS$UD_SRCH - FINDS USER DEFINED SYMBOLS.
       30       30                        DDS$POS_SP - EVALUATES SPECIAL SYMBOLS.
       31       31                        DDS$SIMEXP - EVALUATES "SIMEXP" NODE.
       32       32                        DDS$EQCS# - ESTABLISHES CURRENT QUALIFIED SCHEMA.
       33       33                        DDS$DECIMAL - "DECIMALS" NODE TO BINARY NUMBER.
       34       34                        DDS$POSIMX - EVALUATES "SIMX" | "SUBSTMT2" NODES.
       35       35             ENVIRONMENT: DDS$SCAN ACTIVE.
       36       36             INPUT: NODE$ - POINTER TO "POS11" NODE.
       37       37                    S_D.GOTQUAL3 - Set if "QUAL3" node encountered.
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:2    
       38       38             OUTPUT: IC - IS ADDRESS IF POSITION FOUND.
       39       39             SCRATCH: LOCAL AUTO ONLY.
       40       40             DESCRIPTION: RUNS (OR WALKS AS THE CASE MAY BE) THROUGH THE
       41       41             NODES RETURNED BY M$PARSE. IF SCHEMAS ARE AVAILABLE THEN DOES
       42       42             DIFFERENT EVALUATION THAN IF SCHEMAS ARE NOT AVAILABLE. CHECKS
       43       43             FOR SEMANTIC ERRORS BASED UPON SCHEMA AVAILABILITY. ASSUMES THAT
       44       44             M$PARSE CAUGHT ANY SYNTACTIC ERRORS. RETURNS IF SUCCESSFUL, ELSE
       45       45             ALTRETURNS. */
       46       46                                                /**/
       47       47        DDS$POS11: PROC(NODE$,IC) ALTRET;
       48       48                                                /**/
       49       49    1   DCL NODE$ PTR;                          /* POINTER TO NODE INPUT */
       50       50    1   DCL IC SBIN;                            /* IS ADDRESS OUTPUT */
       51       51    1   DCL TCODE SBIN;                         /* TEMP FOR CODE */
       52       52    1   DCL NUMSB SBIN;                         /* CURRENT NODE NUMBER OF SUBNODES */
       53       53    1   DCL NC$ PTR;                            /* CURRENT NODE POINTER */
       54       54    1   DCL NCC$ PTR;                           /* TEMP FOR NODE$ */
       55       55    1   DCL IX SBIN;                            /* DO LOOP INDEX */
       56       56    1   DCL SCHEMA_USED BIT(1) ALIGNED;         /* SCHEMA USED FLAG */
       57       57    1   DCL TIC SBIN;                           /* TEMP FOR IC ACCUMUATION */
       58       58    1   DCL TNUM SBIN;                     /* TEMP FOR NUMBER OF NODES TO PROCESS */
       59       59    1   DCL ENTRY$ PTR;               /* POINTER INTO EXECUTABLE STATEMENTS TABLE */
       60       60                                                /**/
       61       61             %INCLUDE DD_PSUBS_C;               /* PARSE %SUBS */
       62      536             %INCLUDE DD_SUBS_C;                /* COMMON SUBS */
       63      807             %INCLUDE XU_MACRO_C;               /* M$PARSE MACROS */
       64     3913             %INCLUDE XU_SUBS_C;                /* M$PARSE %SUBs */
       65     4005             %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
       66     4050             %INCLUDE DD_ERR_C;                 /* ERROR CODE %SUBS */
       67     4447             %INCLUDE DD$BASED;                 /* BASED STRUCTURES */
       68     5750             %TEXT$C;
       69     5755             %INCLUDE B$OBJECT_C;               /* OBJECT LANGUAGE STUFF */
       70     9185             %B$EDEF;
       71     9255             %B$SDEF;
       72     9309             %B$EXST;
       73     9416             %B$INTNTRY;
       74     9474             %INCLUDE XUH_MACRO_C;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:3    
       75     9558             %INCLUDE DD_SD_M;                  /* "STATIC DATA" */
       76    10894             %S_D;
       77    12212    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       78    12213                                                /**/
       79    12214    1   DCL DDS$ED_SRCH ENTRY(2) ALTRET;        /* FINDS ENTDEFS */
       80    12215    1   DCL DDS$SD_SRCH ENTRY(2) ALTRET;        /* FINDS SYMDEFS */
       81    12216    1   DCL DDS$ES_INQ ENTRY(1) ALTRET;         /* ESTABLISHES SCHEMA IN "Q" */
       82    12217    1   DCL DDS$QUAL_SRCH ENTRY(1) ALTRET;      /* EVALUATES "QUAL" NODE */
       83    12218    1   DCL DDS$ST_SRCH ENTRY(2) ALTRET;        /* FINDS STATEMENT LABELS */
       84    12219    1   DCL DDS$IC2ST ENTRY(2) ALTRET;          /* FINDS STATEMENT LABELS FROM IC */
       85    12220    1   DCL DDS$LN_SRCH ENTRY(3) ALTRET;        /* FINDS STATEMENT LINE NUMBERS */
       86    12221    1   DCL DDS$IE_SRCH ENTRY(2) ALTRET;        /* FINDS INTERNAL ENTRYS */
       87    12222    1   DCL DDS$UD_SRCH ENTRY(2) ALTRET;        /* FINDS USER DEFINED SYMBOLS */
       88    12223    1   DCL DDS$POS_SP ENTRY(3) ALTRET;         /* FINDS SPECIAL SYMBOLS FOR POSITION */
       89    12224    1   DCL DDS$LA_SRCH ENTRY(2) ALTRET;        /* FINDS LABELED ARRAY */
       90    12225    1   DCL DDS$SIMEXP ENTRY(2) ALTRET;         /* EVALUATES "SIMEXP" NODE */
       91    12226    1   DCL DDS$EQCS# ENTRY(1) ALTRET;     /* ESTABLISHES QUALIFIED CURRENT SCHEMA */
       92    12227    1   DCL DDS$DECIMAL ENTRY(2) ALTRET;        /* "DECIMALS" NODE TO BINARY NUMBER. */
       93    12228    1   DCL DDS$POSIMX ENTRY(2) ALTRET;    /* "SIMX" OR "SUBSTMT2" NODES TO VALUE */
       94    12229                                                /**/
       95    12230        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:4    
       96    12231    1        S_D.OFFSET_REF = '0'B;             /* ASSUME LINE NUMBER ONLY */
       97    12232    1        TIC = 0;
       98    12233                            /* PICK UP EACH NODE HUNG OFF OF "POS11" & PROCESS IT */
       99    12234    1        NCC$ = NODE$;                      /* GET CURRENT NODE */
      100    12235    1        TNUM = NCC$ -> POB.NSB -1;
      101    12236                                                /* FIRST SETUP SCHEMA ALLOWED FLAG */
      102    12237    1        IF ( NCC$ -> POB.SUBLK$( TNUM ) -> POB.CODE = C@SUBSTMT2 ) /* C@SUBSTMT2 */
      103    12238    1          OR ( NOT D_SYMBOLS)
      104    12239    1          OR ( NOT S_D.SCHEMA )
      105    12240    1        THEN SCHEMA_USED = '0'B;           /* DON'T ALLOW "SUBSTMT1" */
      106    12241    1        ELSE SCHEMA_USED = '1'B;
      107    12242    2        DO IX = 0 TO TNUM;
      108    12243    2             NC$ = NCC$ -> POB.SUBLK$(IX); /* GET NEW CURRENT NODE */
      109    12244    2             TCODE = NC$ -> POB.CODE;      /* GET CURRENT NODE'S CODE */
      110    12245    2             NUMSB = NC$ -> POB.NSB;       /* GET NUMBER OF SUBNODES */
      111    12246    3             DO CASE (TCODE) ;
      112    12247    3               CASE (C@QUAL); CALL DDS$QUAL_SRCH( NC$ ) ALTRET( ALTRT );
      113    12248    3               CASE (DEC_CODE); CALL DECIMALS ALTRET( ALTRT );
      114    12249    3               CASE (C@STMT_SPEC1); CALL STMT_SPEC1 ALTRET( ALTRT );
      115    12250    3               CASE (C@SUBSTMT1); CALL SUBSTMT1 ALTRET( ALTRT );
      116    12251    3               CASE (C@SUBSTMT2); CALL SUBSTMT2 ALTRET( ALTRT );
      117    12252    3               CASE (ELSE);                /* UNKNOWN CODE FROM X$PARSE */
      118    12253    3                  S_D.ERROR = E@DERR1;     /* E@DERR1 */
      119    12254    3                  GOTO ALTRT;              /* SPLIT */
      120    12255    3               END;                        /* case (TCODE) */
      121    12256    2           END;                            /* "DO IX" */
      122    12257    1        IF S_D.GOTQUAL3 AND NOT SCHEMA_USED
      123    12258    2        THEN DO;
      124    12259    2             S_D.ERROR = E@UERR9;          /* E@UERR9 */
      125    12260    2             GOTO ALTRT;
      126    12261    2           END;
      127    12262                                                /**/
      128    12263    1        IC = TIC;
      129    12264    1        RETURN;
      130    12265                                                /**/
      131    12266    1   ALTRT:
      132    12267    1        IF S_D.ERROR = 0
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:5    
      133    12268    1        THEN S_D.ERROR = E@UERR10;         /* E@UERR10 */
      134    12269    1        ALTRETURN;
      135    12270        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:6    
      136    12271        /*F* NAME: DECIMALS
      137    12272             PURPOSE: TO EVALUATE DECIMALS NODE REFERENCE.
      138    12273             DESCRIPTION: IF SCHEMA IS AROUND, USE DDS$LN_SRCH TO EVALUATE LINE
      139    12274             NUMBER REFERENCE, ELSE REFERENCE IS ISR RELATIVE. */
      140    12275        /*D* NAME: DECIMALS
      141    12276             CALL: CALL DECIMALS ALTRET(CANT EVALUATE);
      142    12277             INTERFACE: SCHEMA_USED FLAG
      143    12278             ENVIRONMENT: DDS$POS11 ACTIVE
      144    12279             INPUT: NC$ - POINTER TO "DECIMALS" NODE
      145    12280             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      146    12281                     ENTRY$ - POINTER INTO EXECUTABLE STATEMENTS TABLE
      147    12282                     SCHEMA_USED - RESET IF ISR RELATIVE REFERENCE.
      148    12283             SCRATCH: LOCAL AUTO ONLY.
      149    12284             DESCRIPTION: IF SCHEMA IS AROUND, USE DDS$LN_SRCH TO EVALUATE LINE
      150    12285             NUMBER REFERENCE, ELSE REFERENCE IS ISR RELATIVE. */
      151    12286                                                /**/
      152    12287    1   DECIMALS: PROC ALTRET;
      153    12288                                                /**/
      154    12289    2   DCL LINE SBIN;                          /* TEMP FOR LINE NUMBER */
      155    12290                                                /**/
      156    12291    2        CALL DDS$DECIMAL(NC$,LINE) ALTRET(ALTRT);
      157    12292    2        IF ( S_D.QUALIFIED OR S_D.QSCH.OK OR S_D.GOTQUAL3 ) AND ( SCHEMA_USED )
      158    12293    3        THEN DO;                           /* LINE NUMBER DIRECTLY */
      159    12294    3             IF NOT S_D.QSCH.OK
      160    12295    4             THEN DO;
      161    12296    4                  S_D.ERROR = E@UERR9;     /* E@UERR9 */
      162    12297    4                  GOTO ALTRT;
      163    12298    4                END;
      164    12299    3             CALL DDS$LN_SRCH(LINE,ENTRY$) ALTRET(LN_FOUND);
      165    12300    3             S_D.ERROR = E@LINE#;          /* E@LINE# */
      166    12301    3             GOTO ALTRT;
      167    12302    3   LN_FOUND:
      168    12303    3             TIC = ENTRY$ -> B$EXST.ISADDR;
      169    12304    3           END;
      170    12305    3        ELSE DO;                           /* ISR RELATIVE */
      171    12306    3             TIC = LINE;
      172    12307    3             SCHEMA_USED = '0'B;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:7    
      173    12308    3             S_D.OFFSET_REF = '1'B;
      174    12309    3           END;
      175    12310                                                /**/
      176    12311    2        RETURN;
      177    12312                                                /**/
      178    12313    2   ALTRT: ALTRETURN;
      179    12314                                                /**/
      180    12315    2   END DECIMALS;
      181    12316        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:8    
      182    12317        /*F* NAME: STMT_SPEC1
      183    12318             PURPOSE: TO EVALUATE STMT_SPEC1 NODE REFERENCE.
      184    12319             DESCRIPTION: */
      185    12320        /*D* NAME: STMT_SPEC1
      186    12321             CALL: CALL STMT_SPEC1 ALTRET(CANT EVALUATE);
      187    12322             INTERFACE: SCHEMA_USED FLAG
      188    12323             ENVIRONMENT: DDS$POS11 ACTIVE
      189    12324             INPUT: NC$ - POINTER TO "STMT_SPEC1" NODE
      190    12325             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      191    12326                     ENTRY$ - POINTER INTO EXECUTABLE STATEMENTS TABLE
      192    12327                     SCHEMA_USED - RESET IF ISR RELATIVE REFERENCE.
      193    12328             SCRATCH: LOCAL AUTO ONLY.
      194    12329             DESCRIPTION: */
      195    12330                                                /**/
      196    12331    1   STMT_SPEC1: PROC ALTRET;
      197    12332                                                /**/
      198    12333    2   DCL LINE SBIN;                          /* TEMP FOR LINE NUMBER */
      199    12334    2   DCL SYM$ PTR;                           /* CURRENT NODE POINTER */
      200    12335    2   DCL CDX SBIN;                           /* CODE OF SYM$ */
      201    12336    2   DCL LA_ALLOWED BIT(1) ALIGNED;          /* LABEL ARRAY CONTROL FLAG */
      202    12337    2   DCL ERROR BIT(1) ALIGNED;          /* SP FOUND BUT COULDNT GET VALUE FLAG */
      203    12338    2   DCL SUBSCRIPT SBIN;                     /* LABEL ARRAY TEMP */
      204    12339                                                /**/
      205    12340    2        S_D.OFFSET_REF = '1'B;   /* ALL LABEL REFERENCES TREATED LIKE OFFSET */
      206    12341    2        IF NUMSB = 3 THEN GOTO SYNSEM_ERR;
      207    12342    2        SYM$ = NC$ -> POB.SUBLK$( 0 );
      208    12343    2        CDX = SYM$ -> POB.CODE;            /* GET CODE - SIMBLE */
      209    12344    2        SYM$ = SYM$ -> POB.SUBLK$( 0 );
      210    12345    2        S_D.ERROR_SYM$ = SYM$;             /* JUST IN CASE */
      211    12346    2        LA_ALLOWED = '0'B;                 /* ASSUME NO LABEL ARRAY REFERENCE */
      212    12347    2        IF NOT S_D.QUALIFIED
      213    12348    3        THEN DO;                           /* NON-QUALIFIED REFERENCE */
      214    12349    3             CALL DDS$UD_SRCH(SYM$,TIC) ALTRET(UD_FOUND);
      215    12350    3             IF CDX = SYM_CODE             /* SYM_CODE */
      216    12351    4             THEN DO;
      217    12352    4                  CALL DDS$POS_SP( SYM$, TIC, ERROR ) ALTRET( SP_FOUND );
      218    12353    4                  IF ERROR THEN GOTO ALTRT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:9    
      219    12354    4                END;
      220    12355    3             ELSE ;              /* BYPASS SPECIAL SYMBOL CHECK IF QTSTRINGS */
      221    12356    3             IF ( S_D.SCHEMA AND SCHEMA_USED )
      222    12357    4             THEN DO;
      223    12358    4                  IF S_D.QSCH.OK
      224    12359    5                  THEN DO;
      225    12360    5                       CALL DDS$ST_SRCH( SYM$, ENTRY$ ) ALTRET( ST_FOUND );
      226    12361    5                       CALL DDS$IE_SRCH( SYM$, ENTRY$ ) ALTRET( IE_FOUND );
      227    12362    5                     END;
      228    12363    4                  CALL POS3SET ALTRET( P3_FOUND ); /* TRY FOR ENTDEF */
      229    12364    4                END;
      230    12365    3             ELSE CALL DDS$ED_SRCH(SYM$,ENTRY$) ALTRET(ED_FOUND_NS);
      231    12366    3             CALL DDS$SD_SRCH( SYM$, ENTRY$ ) ALTRET( SD_FOUND_NS );
      232    12367    3           END;                            /* NON-QUALIFIED REFERENCE */
      233    12368    3        ELSE DO;                           /* QUALIFIED REFERENCE CHECKS */
      234    12369    3             IF NOT SCHEMA_USED THEN GOTO SYNSEM_ERR;
      235    12370    3             CALL DDS$ST_SRCH(SYM$,ENTRY$) ALTRET(ST_FOUND);
      236    12371    3             CALL DDS$IE_SRCH(SYM$,ENTRY$) ALTRET(IE_FOUND);
      237    12372    3           END;                            /* QUALIFIED REFERENCE */
      238    12373    2        GOTO ALTRT;                        /* SPLIT */
      239    12374    2   UD_FOUND: ;
      240    12375    2   SP_FOUND:
      241    12376    2        SCHEMA_USED = '0'B;
      242    12377    2        GOTO SIMBLEND;
      243    12378    2   IE_FOUND:
      244    12379    2        TIC = ENTRY$ -> B$INTNTRY.ISADDR;
      245    12380    2        CALL DDS$IC2ST( TIC, ENTRY$ ) ALTRET( INTNERR );
      246    12381    2        GOTO SIMBLEND;
      247    12382    2   ED_FOUND_NS:
      248    12383    2        TIC = ENTRY$ -> B$EDEF.ISADDR;
      249    12384    2        SCHEMA_USED = '0'B;
      250    12385    2        GOTO SIMBLEND;
      251    12386    2   SD_FOUND_NS:
      252    12387    2        SCHEMA_USED = '0'B;
      253    12388    2        IF ENTRY$ -> B$SDEF.CONSTNT
      254    12389    3        THEN DO;
      255    12390    3             S_D.ERROR = E@SDEF;           /* E@SDEF */
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:10   
      256    12391    3             GOTO ALTRT;
      257    12392    3           END;
      258    12393    2        ELSE TIC = ENTRY$ -> B$SDEF.AD.ISADDR;
      259    12394    2        GOTO SIMBLEND;
      260    12395    2   ST_FOUND:
      261    12396    2        TIC = ENTRY$ -> B$EXST.ISADDR;
      262    12397    2        IF ENTRY$ -> B$EXST.LA             /* LABELED ARRAY CHECK */
      263    12398    2        THEN LA_ALLOWED = '1'B;
      264    12399    2        GOTO SIMBLEND;
      265    12400    2   P3_FOUND: ;
      266    12401    2   SIMBLEND:
      267    12402                                                /**/
      268    12403    2        IF NUMSB = 2
      269    12404    2        THEN IF LA_ALLOWED
      270    12405    3             THEN DO;                      /* LABELED ARRAY REFERENCE OK */
      271    12406    3                  LA_ALLOWED = '0'B;       /* SET AS REFERENCE SATISFIED */
      272    12407    3                  SUBSCRIPT = 0;           /* For DDS$POSIMX */
      273    12408    3                  CALL DDS$POSIMX( NC$ -> POB.SUBLK$( 1 ), SUBSCRIPT ) ALTRET( ALTRT );
      274    12409    3                  CALL DDS$LA_SRCH( SUBSCRIPT, ENTRY$ ) ALTRET( LA_FOUND );
      275    12410    3                  S_D.ERROR = E@LBL_ARRAY_FIND; /* E@LBL_ARRAY_FIND */
      276    12411    3                  GOTO ALTRT;
      277    12412    3   LA_FOUND:
      278    12413    3                  TIC = ENTRY$ -> B$EXST.ISADDR;
      279    12414    3                END;
      280    12415    2             ELSE GOTO LARERR;
      281    12416                                                /**/
      282    12417    2        IF LA_ALLOWED THEN GOTO LARERR;
      283    12418                                                /**/
      284    12419    2   RETN: RETURN;
      285    12420                                                /**/
      286    12421    2   LARERR:
      287    12422    2        S_D.ERROR = E@LBL_ARRAY_NOT;       /* E@LBL_ARRAY_NOT */
      288    12423    2        GOTO ALTRT;
      289    12424    2   INTNERR:
      290    12425    2        S_D.ERROR = E@UERR11;              /* E@UERR11 - SCHEMA BAD */
      291    12426    2        GOTO ALTRT;
      292    12427    2   SYNSEM_ERR:
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:11   
      293    12428    2        S_D.ERROR = E@SYNTAX;              /* E@SYNTAX */
      294    12429                                                /**/
      295    12430    2   ALTRT: ALTRETURN;
      296    12431        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:12   
      297    12432        /*F* NAME: POS3SET
      298    12433             PURPOSE: TO EVALUATE ENTDEF REFERENCE WITH SCHEMA AVAILABLE.
      299    12434             DESCRIPTION: FINDS PRIMARY ENTDEF, ESTABLISHES QUALIFIED SCHEMA,
      300    12435             AND GETS ENTRY IN EXECUTABLE STATEMENTS TABLE. IF ENTDEF WAS FOUND
      301    12436             BUT SCHEMA NOT AVAILABLE, THEN RESETS SCHEMA_USED FLAG. RETURNS
      302    12437             IF ENTDEF COULD NOT BE FOUND, ELSE ALTRETURNS. */
      303    12438        /*D* NAME: POS3SET
      304    12439             CALL: CALL DDS$POS3SET ALTRET( FOUND );
      305    12440             ENVIRONMENT: STMT_SPEC1 ACTIVE.
      306    12441             INPUT: SYM$ - POINTER TO SIBMLE TEXTC.
      307    12442             OUTPUT: ENTRY$ - POINTER TO EXECUTABLE STATEMENTS ENTRY.
      308    12443                     TIC - IS ADDRESS @ ENTRY$.
      309    12444                     SCHEMA_USED - RESET IF ENTDEF FOUND BUT SCHEMA NOT AVAILABLE.
      310    12445             SCRATCH: LOCAL AUTO ONLY.
      311    12446             DESCRIPTION: FINDS PRIMARY ENTDEF, ESTABLISHES QUALIFIED SCHEMA,
      312    12447             AND GETS ENTRY IN EXECUTABLE STATEMENTS TABLE. IF ENTDEF WAS FOUND
      313    12448             BUT SCHEMA NOT AVAILABLE, THEN RESETS SCHEMA_USED FLAG. RETURNS
      314    12449             IF ENTDEF COULD NOT BE FOUND, ELSE ALTRETURNS. */
      315    12450                                                /**/
      316    12451    2   POS3SET: PROC ALTRET;
      317    12452                                                /**/
      318    12453    3   DCL PNTRY# UBIN;                        /* TEMP PRIMARY ENTDEF NUMBER */
      319    12454                                                /**/
      320    12455    3        CALL DDS$ED_SRCH(SYM$,ENTRY$) ALTRET(ED_FOUND);
      321    12456    3   ALTRT:
      322    12457    3        RETURN;
      323    12458    3   NOSCHEMA:
      324    12459    3        SCHEMA_USED = '0'B;
      325    12460    3        GOTO RETN;
      326    12461    3   ED_FOUND:
      327    12462    3        TIC = ENTRY$ -> B$EDEF.ISADDR;
      328    12463    3        IF ENTRY$ -> B$EDEF.PRI
      329    12464    4        THEN DO;
      330    12465    4             PNTRY# = POFFW( ENTRY$, S_D.EDEF$ ) / SIZEW( B$EDEF );
      331    12466    4             CALL DDS$EQCS#( PNTRY# ) ALTRET( NOSCHEMA );
      332    12467    4           END;
      333    12468    4        ELSE DO;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:13   
      334    12469    4             CALL DDS$ES_INQ( TIC ) ALTRET( NOSCHEMA );
      335    12470    4           END;
      336    12471    3        CALL DDS$IC2ST( TIC, ENTRY$ ) ALTRET( NOSCHEMA );
      337    12472    3   RETN:
      338    12473    3        ALTRETURN;
      339    12474                                                /**/
      340    12475    3   END POS3SET;
      341    12476                                                /**/
      342    12477    2   END STMT_SPEC1;
      343    12478        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:14   
      344    12479        /*F* NAME: SUBSTMT1
      345    12480             PURPOSE: TO EVALUATE SUBSTMT1 NODE REFERENCE.
      346    12481             DESCRIPTION: */
      347    12482        /*D* NAME: SUBSTMT1
      348    12483             CALL: CALL SUBSTMT1 ALTRET(CANT EVALUATE);
      349    12484             INTERFACE: SCHEMA_USED FLAG
      350    12485             ENVIRONMENT: DDS$POS11 ACTIVE
      351    12486             INPUT: NC$ - POINTER TO "SUBSTMT1" NODE
      352    12487             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      353    12488                     ENTRY$ - POINTER INTO EXECUTABLE STATEMENTS TABLE
      354    12489                     SCHEMA_USED - RESET IF ISR RELATIVE REFERENCE.
      355    12490             SCRATCH: LOCAL AUTO ONLY.
      356    12491             DESCRIPTION: */
      357    12492                                                /**/
      358    12493    1   SUBSTMT1: PROC ALTRET;
      359    12494                                                /**/
      360    12495    2   DCL IXX SBIN;
      361    12496    2   DCL N$ PTR;
      362    12497    2   DCL NCODEX SBIN;
      363    12498    2   DCL OFFSET SBIN;
      364    12499                                                /**/
      365    12500    2        S_D.OFFSET_REF = '1'B;   /* ALL LABEL REFERENCES TREATED LIKE OFFSET */
      366    12501    2        IF NOT SCHEMA_USED THEN GOTO SYNSEM_ERR;
      367    12502    2        IF NUMSB = 0 THEN GOTO SYNSEM_ERR; /* TRAILING COMMA ERROR */
      368    12503    3        DO IXX = 0 TO NUMSB-1;
      369    12504    3             N$ = NC$ -> POB.SUBLK$( IXX );
      370    12505    3             NCODEX = N$ -> POB.CODE;
      371    12506    3             IF NCODEX = DEC_CODE          /* DEC_CODE */
      372    12507    4             THEN DO;
      373    12508    4                  CALL DDS$DECIMAL( N$, OFFSET ) ALTRET( ALTRT );
      374    12509    4                  CALL DDS$LN_SRCH( OFFSET, ENTRY$, ENTRY$ ) ALTRET( LN_FOUND );
      375    12510    4                  S_D.ERROR = E@SUBST_OFF; /* E@SUBST_OFF */
      376    12511    4                  GOTO ALTRT;              /* OFFSET NOT FOUND */
      377    12512    4   LN_FOUND:
      378    12513    4                  TIC = ENTRY$ -> B$EXST.ISADDR;
      379    12514    4                END;
      380    12515    4             ELSE DO;                      /* ASSUME "SIMX" ENCOUNTERED */
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:15   
      381    12516    4                  CALL DDS$POSIMX( N$, TIC ) ALTRET( ALTRT );
      382    12517    4                END;
      383    12518    3           END;                            /* "DO IXX" */
      384    12519                                                /**/
      385    12520    2        RETURN;
      386    12521                                                /**/
      387    12522    2   SYNSEM_ERR: S_D.ERROR = E@SYNTAX;       /* E@SYNTAX */
      388    12523                                                /**/
      389    12524    2   ALTRT: ALTRETURN;
      390    12525                                                /**/
      391    12526    2   END SUBSTMT1;
      392    12527        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:16   
      393    12528        /*F* NAME: SUBSTMT2
      394    12529             PURPOSE: TO EVALUATE SUBSTMT2 NODE REFERENCE.
      395    12530             DESCRIPTION: IF SCHEMA WAS USED THEN ALTRETURNS, ELSE LETS DDS$POSIMX
      396    12531             DO THE WORK, AND RETURNS. */
      397    12532        /*D* NAME: SUBSTMT2
      398    12533             CALL: CALL SUBSTMT2 ALTRET(CANT EVALUATE);
      399    12534             INTERFACE: SCHEMA_USED FLAG
      400    12535             ENVIRONMENT: DDS$POS11 ACTIVE
      401    12536             INPUT: NC$ - POINTER TO "SUBSTMT2" NODE
      402    12537             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      403    12538             SCRATCH: LOCAL AUTO ONLY.
      404    12539             DESCRIPTION: IF SCHEMA WAS USED THEN ALTRETURNS, ELSE LETS DDS$POSIMX
      405    12540             DO THE WORK, AND RETURNS. */
      406    12541                                                /**/
      407    12542    1   SUBSTMT2: PROC ALTRET;
      408    12543                                                /**/
      409    12544    2        S_D.OFFSET_REF = '1'B;   /* ALL LABEL REFERENCES TREATED LIKE OFFSET */
      410    12545    2        IF SCHEMA_USED THEN GOTO SYNSEM_ERR;
      411    12546    2        CALL DDS$POSIMX( NC$, TIC ) ALTRET( ALTRT );
      412    12547                                                /**/
      413    12548    2        RETURN;
      414    12549                                                /**/
      415    12550    2   SYNSEM_ERR: S_D.ERROR = E@SYNTAX;       /* E@SYNTAX */
      416    12551                                                /**/
      417    12552    2   ALTRT: ALTRETURN;
      418    12553                                                /**/
      419    12554    2   END SUBSTMT2;
      420    12555                                                /**/
      421    12556    1   END DDS$POS11;

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:17   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$POS11.

   Procedure DDS$POS11 requires 487 words for executable code.
   Procedure DDS$POS11 requires 28 words of local(AUTO) storage.

    No errors detected in file DDS$POS11.:E05TSI    .

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:18   

 Object Unit name= DDS$POS11                                  File name= DDS$POS11.:E05TOU
 UTS= JUL 29 '97 14:18:41.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   487    747  DDS$POS11

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$POS11

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DDS$QUAL_SRCH
 yes     yes           Std       2 DDS$DECIMAL
 yes     yes           Std       3 DDS$LN_SRCH
 yes     yes           Std       2 DDS$UD_SRCH
 yes     yes           Std       3 DDS$POS_SP
 yes     yes           Std       2 DDS$IE_SRCH
 yes     yes           Std       2 DDS$IC2ST
 yes     yes           Std       2 DDS$SD_SRCH
 yes     yes           Std       2 DDS$ST_SRCH
 yes     yes           Std       2 DDS$ED_SRCH
 yes     yes           Std       2 DDS$POSIMX
 yes     yes           Std       2 DDS$LA_SRCH
 yes     yes           Std       1 DDS$ES_INQ
 yes     yes           Std       1 DDS$EQCS#
                       nStd      0 X66_AUTO_2
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:19   
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  D_SYMBOLS                             B_VECTNIL
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:20   


        1        1        /*M* DDS$POS11 EVALUATE "POS11" NODE ROUTINE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$POS11
        9        9             PURPOSE: TO EVALUATE THE NODE "POS11".
       10       10             DESCRIPTION: RUNS (OR WALKS AS THE CASE MAY BE) THROUGH THE
       11       11             NODES RETURNED BY M$PARSE. IF SCHEMAS ARE AVAILABLE THEN DOES
       12       12             DIFFERENT EVALUATION THAN IF SCHEMAS ARE NOT AVAILABLE. CHECKS
       13       13             FOR SEMANTIC ERRORS BASED UPON SCHEMA AVAILABILITY. ASSUMES THAT
       14       14             M$PARSE CAUGHT ANY SYNTACTIC ERRORS. RETURNS IF SUCCESSFUL, ELSE
       15       15             ALTRETURNS. */
       16       16        /*D* NAME: DDS$POS11
       17       17             CALL: CALL DDS$POS11(NODE$,IC) ALTRET(NOT FOUND);
       18       18             INTERFACE: DDS$PD_SRCH - FINDS PRIMARY ENTDEF.
       19       19                        DDS$ED_SRCH - FINDS ENTDEFS.
       20       20                        DDS$QUAL_SRCH - EVALUATES "QUAL" NODE.
       21       21                        DDS$ST_SRCH - FINDS STATEMENT LABELS.
       22       22                        DDS$SD_SRCH - FINDS SYMDEFS
       23       23                        DDS$ES_INQ - ESTABLISHES SCHEMA IN "Q"
       24       24                        DDS$IC2ST - FINDS STATEMENT LABELS FROM IC.
       25       25                        DDS$LN_SRCH - FINDS STATEMENT LINE NUMBERS.
       26       26                        DDS$IE_SRCH - FINDS INTERNAL ENTRYS.
       27       27                        DDD$SIMEXP - EVALUATES "SIMEXP" NODE.
       28       28                        DDS$LA_SRCH - FINDS STATEMENT LABEL ARRAY.
       29       29                        DDS$UD_SRCH - FINDS USER DEFINED SYMBOLS.
       30       30                        DDS$POS_SP - EVALUATES SPECIAL SYMBOLS.
       31       31                        DDS$SIMEXP - EVALUATES "SIMEXP" NODE.
       32       32                        DDS$EQCS# - ESTABLISHES CURRENT QUALIFIED SCHEMA.
       33       33                        DDS$DECIMAL - "DECIMALS" NODE TO BINARY NUMBER.
       34       34                        DDS$POSIMX - EVALUATES "SIMX" | "SUBSTMT2" NODES.
       35       35             ENVIRONMENT: DDS$SCAN ACTIVE.
       36       36             INPUT: NODE$ - POINTER TO "POS11" NODE.
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:21   
       37       37                    S_D.GOTQUAL3 - Set if "QUAL3" node encountered.
       38       38             OUTPUT: IC - IS ADDRESS IF POSITION FOUND.
       39       39             SCRATCH: LOCAL AUTO ONLY.
       40       40             DESCRIPTION: RUNS (OR WALKS AS THE CASE MAY BE) THROUGH THE
       41       41             NODES RETURNED BY M$PARSE. IF SCHEMAS ARE AVAILABLE THEN DOES
       42       42             DIFFERENT EVALUATION THAN IF SCHEMAS ARE NOT AVAILABLE. CHECKS
       43       43             FOR SEMANTIC ERRORS BASED UPON SCHEMA AVAILABILITY. ASSUMES THAT
       44       44             M$PARSE CAUGHT ANY SYNTACTIC ERRORS. RETURNS IF SUCCESSFUL, ELSE
       45       45             ALTRETURNS. */
       46       46                                                /**/
       47       47        DDS$POS11: PROC(NODE$,IC) ALTRET;

     47  0 000000   000000 700200 xent  DDS$POS11    TSX0  ! X66_AUTO_2
         0 000001   000034 000002                    ZERO    28,2

       48       48                                                /**/
       49       49    1   DCL NODE$ PTR;                          /* POINTER TO NODE INPUT */
       50       50    1   DCL IC SBIN;                            /* IS ADDRESS OUTPUT */
       51       51    1   DCL TCODE SBIN;                         /* TEMP FOR CODE */
       52       52    1   DCL NUMSB SBIN;                         /* CURRENT NODE NUMBER OF SUBNODES */
       53       53    1   DCL NC$ PTR;                            /* CURRENT NODE POINTER */
       54       54    1   DCL NCC$ PTR;                           /* TEMP FOR NODE$ */
       55       55    1   DCL IX SBIN;                            /* DO LOOP INDEX */
       56       56    1   DCL SCHEMA_USED BIT(1) ALIGNED;         /* SCHEMA USED FLAG */
       57       57    1   DCL TIC SBIN;                           /* TEMP FOR IC ACCUMUATION */
       58       58    1   DCL TNUM SBIN;                     /* TEMP FOR NUMBER OF NODES TO PROCESS */
       59       59    1   DCL ENTRY$ PTR;               /* POINTER INTO EXECUTABLE STATEMENTS TABLE */
       60       60                                                /**/
       61       61             %INCLUDE DD_PSUBS_C;               /* PARSE %SUBS */
       62      536             %INCLUDE DD_SUBS_C;                /* COMMON SUBS */
       63      807             %INCLUDE XU_MACRO_C;               /* M$PARSE MACROS */
       64     3913             %INCLUDE XU_SUBS_C;                /* M$PARSE %SUBs */
       65     4005             %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
       66     4050             %INCLUDE DD_ERR_C;                 /* ERROR CODE %SUBS */
       67     4447             %INCLUDE DD$BASED;                 /* BASED STRUCTURES */
       68     5750             %TEXT$C;
       69     5755             %INCLUDE B$OBJECT_C;               /* OBJECT LANGUAGE STUFF */
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:22   
       70     9185             %B$EDEF;
       71     9255             %B$SDEF;
       72     9309             %B$EXST;
       73     9416             %B$INTNTRY;
       74     9474             %INCLUDE XUH_MACRO_C;
       75     9558             %INCLUDE DD_SD_M;                  /* "STATIC DATA" */
       76    10894             %S_D;
       77    12212    1   DCL D_SYMBOLS BIT(1) ALIGNED SYMREF;
       78    12213                                                /**/
       79    12214    1   DCL DDS$ED_SRCH ENTRY(2) ALTRET;        /* FINDS ENTDEFS */
       80    12215    1   DCL DDS$SD_SRCH ENTRY(2) ALTRET;        /* FINDS SYMDEFS */
       81    12216    1   DCL DDS$ES_INQ ENTRY(1) ALTRET;         /* ESTABLISHES SCHEMA IN "Q" */
       82    12217    1   DCL DDS$QUAL_SRCH ENTRY(1) ALTRET;      /* EVALUATES "QUAL" NODE */
       83    12218    1   DCL DDS$ST_SRCH ENTRY(2) ALTRET;        /* FINDS STATEMENT LABELS */
       84    12219    1   DCL DDS$IC2ST ENTRY(2) ALTRET;          /* FINDS STATEMENT LABELS FROM IC */
       85    12220    1   DCL DDS$LN_SRCH ENTRY(3) ALTRET;        /* FINDS STATEMENT LINE NUMBERS */
       86    12221    1   DCL DDS$IE_SRCH ENTRY(2) ALTRET;        /* FINDS INTERNAL ENTRYS */
       87    12222    1   DCL DDS$UD_SRCH ENTRY(2) ALTRET;        /* FINDS USER DEFINED SYMBOLS */
       88    12223    1   DCL DDS$POS_SP ENTRY(3) ALTRET;         /* FINDS SPECIAL SYMBOLS FOR POSITION */
       89    12224    1   DCL DDS$LA_SRCH ENTRY(2) ALTRET;        /* FINDS LABELED ARRAY */
       90    12225    1   DCL DDS$SIMEXP ENTRY(2) ALTRET;         /* EVALUATES "SIMEXP" NODE */
       91    12226    1   DCL DDS$EQCS# ENTRY(1) ALTRET;     /* ESTABLISHES QUALIFIED CURRENT SCHEMA */
       92    12227    1   DCL DDS$DECIMAL ENTRY(2) ALTRET;        /* "DECIMALS" NODE TO BINARY NUMBER. */
       93    12228    1   DCL DDS$POSIMX ENTRY(2) ALTRET;    /* "SIMX" OR "SUBSTMT2" NODES TO VALUE */
       94    12229                                                /**/
       95    12230        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:23   
       96    12231    1        S_D.OFFSET_REF = '0'B;             /* ASSUME LINE NUMBER ONLY */

  12231  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000714 450100                    STZ     460,,PR0

       97    12232    1        TIC = 0;

  12232  0 000004   200013 450100                    STZ     TIC,,AUTO

       98    12233                            /* PICK UP EACH NODE HUNG OFF OF "POS11" & PROCESS IT */
       99    12234    1        NCC$ = NODE$;                      /* GET CURRENT NODE */

  12234  0 000005   200003 471500                    LDP1    @NODE$,,AUTO
         0 000006   100000 236100                    LDQ     0,,PR1
         0 000007   200010 756100                    STQ     NCC$,,AUTO

      100    12235    1        TNUM = NCC$ -> POB.NSB -1;

  12235  0 000010   200010 473500                    LDP3    NCC$,,AUTO
         0 000011   300001 236100                    LDQ     1,,PR3
         0 000012   000022 772000                    QRL     18
         0 000013   000001 136007                    SBLQ    1,DL
         0 000014   200014 756100                    STQ     TNUM,,AUTO

      101    12236                                                /* FIRST SETUP SCHEMA ALLOWED FLAG */
      102    12237    1        IF ( NCC$ -> POB.SUBLK$( TNUM ) -> POB.CODE = C@SUBSTMT2 ) /* C@SUBSTMT2 */

  12237  0 000015   300003 474506                    LDP4    3,QL,PR3
         0 000016   400000 720100                    LXL0    0,,PR4
         0 000017   000025 100003                    CMPX0   21,DU
         0 000020   000025 600000 0                  TZE     s:12240
         0 000021   000000 234000 xsym               SZN     D_SYMBOLS
         0 000022   000025 605000 0                  TPL     s:12240
         0 000023   000052 234100                    SZN     42,,PR0
         0 000024   000027 604000 0                  TMI     s:12241

      103    12238    1          OR ( NOT D_SYMBOLS)
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:24   
      104    12239    1          OR ( NOT S_D.SCHEMA )
      105    12240    1        THEN SCHEMA_USED = '0'B;           /* DON'T ALLOW "SUBSTMT1" */

  12240  0 000025   200012 450100                    STZ     SCHEMA_USED,,AUTO
         0 000026   000031 710000 0                  TRA     s:12242

      106    12241    1        ELSE SCHEMA_USED = '1'B;

  12241  0 000027   400000 236003                    LDQ     -131072,DU
         0 000030   200012 756100                    STQ     SCHEMA_USED,,AUTO

      107    12242    2        DO IX = 0 TO TNUM;

  12242  0 000031   200011 450100                    STZ     IX,,AUTO
         0 000032   000123 710000 0                  TRA     s:12256+1

      108    12243    2             NC$ = NCC$ -> POB.SUBLK$(IX); /* GET NEW CURRENT NODE */

  12243  0 000033   200010 470500                    LDP0    NCC$,,AUTO
         0 000034   200011 720100                    LXL0    IX,,AUTO
         0 000035   000003 236110                    LDQ     3,X0,PR0
         0 000036   200007 756100                    STQ     NC$,,AUTO

      109    12244    2             TCODE = NC$ -> POB.CODE;      /* GET CURRENT NODE'S CODE */

  12244  0 000037   200007 471500                    LDP1    NC$,,AUTO
         0 000040   100000 236100                    LDQ     0,,PR1
         0 000041   777777 376007                    ANQ     -1,DL
         0 000042   200005 756100                    STQ     TCODE,,AUTO

      110    12245    2             NUMSB = NC$ -> POB.NSB;       /* GET NUMBER OF SUBNODES */

  12245  0 000043   100001 236100                    LDQ     1,,PR1
         0 000044   000022 772000                    QRL     18
         0 000045   200006 756100                    STQ     NUMSB,,AUTO

      111    12246    3             DO CASE (TCODE) ;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:25   

  12246  0 000046   200005 235100                    LDA     TCODE,,AUTO
         0 000047   000010 135007                    SBLA    8,DL
         0 000050   000020 115007                    CMPA    16,DL
         0 000051   000053 602005 0                  TNC     s:12246+5,AL
         0 000052   000116 710000 0                  TRA     s:12253
         0 000053   000102 710000 0                  TRA     s:12248
         0 000054   000116 710000 0                  TRA     s:12253
         0 000055   000116 710000 0                  TRA     s:12253
         0 000056   000116 710000 0                  TRA     s:12253
         0 000057   000116 710000 0                  TRA     s:12253
         0 000060   000116 710000 0                  TRA     s:12253
         0 000061   000116 710000 0                  TRA     s:12253
         0 000062   000116 710000 0                  TRA     s:12253
         0 000063   000105 710000 0                  TRA     s:12249
         0 000064   000116 710000 0                  TRA     s:12253
         0 000065   000116 710000 0                  TRA     s:12253
         0 000066   000116 710000 0                  TRA     s:12253
         0 000067   000110 710000 0                  TRA     s:12250
         0 000070   000113 710000 0                  TRA     s:12251
         0 000071   000116 710000 0                  TRA     s:12253
         0 000072   000073 710000 0                  TRA     s:12247

      112    12247    3               CASE (C@QUAL); CALL DDS$QUAL_SRCH( NC$ ) ALTRET( ALTRT );

  12247  0 000073   200007 633500                    EPPR3   NC$,,AUTO
         0 000074   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000075   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000077   000000 701000 xent               TSX1    DDS$QUAL_SRCH
         0 000100   000142 702000 0                  TSX2    ALTRT
         0 000101   000122 710000 0                  TRA     s:12256

      113    12248    3               CASE (DEC_CODE); CALL DECIMALS ALTRET( ALTRT );

  12248  0 000102   000150 701000 0                  TSX1    DECIMALS
         0 000103   000142 702000 0                  TSX2    ALTRT
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:26   
         0 000104   000122 710000 0                  TRA     s:12256

      114    12249    3               CASE (C@STMT_SPEC1); CALL STMT_SPEC1 ALTRET( ALTRT );

  12249  0 000105   000231 701000 0                  TSX1    STMT_SPEC1
         0 000106   000142 702000 0                  TSX2    ALTRT
         0 000107   000122 710000 0                  TRA     s:12256

      115    12250    3               CASE (C@SUBSTMT1); CALL SUBSTMT1 ALTRET( ALTRT );

  12250  0 000110   000622 701000 0                  TSX1    SUBSTMT1
         0 000111   000142 702000 0                  TSX2    ALTRT
         0 000112   000122 710000 0                  TRA     s:12256

      116    12251    3               CASE (C@SUBSTMT2); CALL SUBSTMT2 ALTRET( ALTRT );

  12251  0 000113   000723 701000 0                  TSX1    SUBSTMT2
         0 000114   000142 702000 0                  TSX2    ALTRT
         0 000115   000122 710000 0                  TRA     s:12256

      117    12252    3               CASE (ELSE);                /* UNKNOWN CODE FROM X$PARSE */

      118    12253    3                  S_D.ERROR = E@DERR1;     /* E@DERR1 */

  12253  0 000116   000765 235007                    LDA     501,DL
         0 000117   000000 473400 xsym               LDP3    S_D$
         0 000120   300013 755100                    STA     11,,PR3

      119    12254    3                  GOTO ALTRT;              /* SPLIT */

  12254  0 000121   000142 710000 0                  TRA     ALTRT

      120    12255    3               END;                        /* case (TCODE) */

      121    12256    2           END;                            /* "DO IX" */

  12256  0 000122   200011 054100                    AOS     IX,,AUTO
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:27   
         0 000123   200011 236100                    LDQ     IX,,AUTO
         0 000124   200014 116100                    CMPQ    TNUM,,AUTO
         0 000125   000033 604400 0                  TMOZ    s:12243

      122    12257    1        IF S_D.GOTQUAL3 AND NOT SCHEMA_USED

  12257  0 000126   000000 470400 xsym               LDP0    S_D$
         0 000127   004773 234100                    SZN     2555,,PR0
         0 000130   000136 605000 0                  TPL     s:12263
         0 000131   200012 234100                    SZN     SCHEMA_USED,,AUTO
         0 000132   000136 604000 0                  TMI     s:12263

      123    12258    2        THEN DO;

      124    12259    2             S_D.ERROR = E@UERR9;          /* E@UERR9 */

  12259  0 000133   000024 235007                    LDA     20,DL
         0 000134   000013 755100                    STA     11,,PR0

      125    12260    2             GOTO ALTRT;

  12260  0 000135   000142 710000 0                  TRA     ALTRT

      126    12261    2           END;
      127    12262                                                /**/
      128    12263    1        IC = TIC;

  12263  0 000136   200004 471500                    LDP1    @IC,,AUTO
         0 000137   200013 235100                    LDA     TIC,,AUTO
         0 000140   100000 755100                    STA     0,,PR1

      129    12264    1        RETURN;

  12264  0 000141   000000 702200 xent               TSX2  ! X66_ARET

      130    12265                                                /**/
      131    12266    1   ALTRT:
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:28   
      132    12267    1        IF S_D.ERROR = 0

  12267  0 000142   000000 470400 xsym  ALTRT        LDP0    S_D$
         0 000143   000013 235100                    LDA     11,,PR0
         0 000144   000147 601000 0                  TNZ     s:12269

      133    12268    1        THEN S_D.ERROR = E@UERR10;         /* E@UERR10 */

  12268  0 000145   000025 236007                    LDQ     21,DL
         0 000146   000013 756100                    STQ     11,,PR0

      134    12269    1        ALTRETURN;

  12269  0 000147   000000 702200 xent               TSX2  ! X66_AALT

      135    12270        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:29   
      136    12271        /*F* NAME: DECIMALS
      137    12272             PURPOSE: TO EVALUATE DECIMALS NODE REFERENCE.
      138    12273             DESCRIPTION: IF SCHEMA IS AROUND, USE DDS$LN_SRCH TO EVALUATE LINE
      139    12274             NUMBER REFERENCE, ELSE REFERENCE IS ISR RELATIVE. */
      140    12275        /*D* NAME: DECIMALS
      141    12276             CALL: CALL DECIMALS ALTRET(CANT EVALUATE);
      142    12277             INTERFACE: SCHEMA_USED FLAG
      143    12278             ENVIRONMENT: DDS$POS11 ACTIVE
      144    12279             INPUT: NC$ - POINTER TO "DECIMALS" NODE
      145    12280             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      146    12281                     ENTRY$ - POINTER INTO EXECUTABLE STATEMENTS TABLE
      147    12282                     SCHEMA_USED - RESET IF ISR RELATIVE REFERENCE.
      148    12283             SCRATCH: LOCAL AUTO ONLY.
      149    12284             DESCRIPTION: IF SCHEMA IS AROUND, USE DDS$LN_SRCH TO EVALUATE LINE
      150    12285             NUMBER REFERENCE, ELSE REFERENCE IS ISR RELATIVE. */
      151    12286                                                /**/
      152    12287    1   DECIMALS: PROC ALTRET;

  12287  0 000150   200016 741300       DECIMALS     STX1  ! ENTRY$+1,,AUTO

      153    12288                                                /**/
      154    12289    2   DCL LINE SBIN;                          /* TEMP FOR LINE NUMBER */
      155    12290                                                /**/
      156    12291    2        CALL DDS$DECIMAL(NC$,LINE) ALTRET(ALTRT);

  12291  0 000151   200017 630500                    EPPR0   LINE,,AUTO
         0 000152   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000153   200007 631500                    EPPR1   NC$,,AUTO
         0 000154   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000155   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000157   000000 701000 xent               TSX1    DDS$DECIMAL
         0 000160   000227 702000 0                  TSX2    ALTRT

      157    12292    2        IF ( S_D.QUALIFIED OR S_D.QSCH.OK OR S_D.GOTQUAL3 ) AND ( SCHEMA_USED )

  12292  0 000161   000000 470400 xsym               LDP0    S_D$
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:30   
         0 000162   000712 234100                    SZN     458,,PR0
         0 000163   000170 604000 0                  TMI     s:12292+7
         0 000164   000733 234100                    SZN     475,,PR0
         0 000165   000170 604000 0                  TMI     s:12292+7
         0 000166   004773 234100                    SZN     2555,,PR0
         0 000167   000220 605000 0                  TPL     s:12306
         0 000170   200012 234100                    SZN     SCHEMA_USED,,AUTO
         0 000171   000220 605000 0                  TPL     s:12306

      158    12293    3        THEN DO;                           /* LINE NUMBER DIRECTLY */

      159    12294    3             IF NOT S_D.QSCH.OK

  12294  0 000172   000733 234100                    SZN     475,,PR0
         0 000173   000177 604000 0                  TMI     s:12299

      160    12295    4             THEN DO;

      161    12296    4                  S_D.ERROR = E@UERR9;     /* E@UERR9 */

  12296  0 000174   000024 235007                    LDA     20,DL
         0 000175   000013 755100                    STA     11,,PR0

      162    12297    4                  GOTO ALTRT;

  12297  0 000176   000227 710000 0                  TRA     ALTRT

      163    12298    4                END;
      164    12299    3             CALL DDS$LN_SRCH(LINE,ENTRY$) ALTRET(LN_FOUND);

  12299  0 000177   200015 631500                    EPPR1   ENTRY$,,AUTO
         0 000200   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000201   200017 633500                    EPPR3   LINE,,AUTO
         0 000202   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000203   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000204   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000205   000000 701000 xent               TSX1    DDS$LN_SRCH
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:31   
         0 000206   000213 702000 0                  TSX2    LN_FOUND

      165    12300    3             S_D.ERROR = E@LINE#;          /* E@LINE# */

  12300  0 000207   000036 235007                    LDA     30,DL
         0 000210   000000 470400 xsym               LDP0    S_D$
         0 000211   000013 755100                    STA     11,,PR0

      166    12301    3             GOTO ALTRT;

  12301  0 000212   000227 710000 0                  TRA     ALTRT

      167    12302    3   LN_FOUND:
      168    12303    3             TIC = ENTRY$ -> B$EXST.ISADDR;

  12303  0 000213   200015 470500       LN_FOUND     LDP0    ENTRY$,,AUTO
         0 000214   000000 236100                    LDQ     0,,PR0
         0 000215   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000216   200013 756100                    STQ     TIC,,AUTO

      169    12304    3           END;

  12304  0 000217   000225 710000 0                  TRA     s:12311

      170    12305    3        ELSE DO;                           /* ISR RELATIVE */

      171    12306    3             TIC = LINE;

  12306  0 000220   200017 235100                    LDA     LINE,,AUTO
         0 000221   200013 755100                    STA     TIC,,AUTO

      172    12307    3             SCHEMA_USED = '0'B;

  12307  0 000222   200012 450100                    STZ     SCHEMA_USED,,AUTO

      173    12308    3             S_D.OFFSET_REF = '1'B;

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:32   
  12308  0 000223   400000 236003                    LDQ     -131072,DU
         0 000224   000714 756100                    STQ     460,,PR0

      174    12309    3           END;

      175    12310                                                /**/
      176    12311    2        RETURN;

  12311  0 000225   200016 221300                    LDX1  ! ENTRY$+1,,AUTO
         0 000226   000001 702211                    TSX2  ! 1,X1

      177    12312                                                /**/
      178    12313    2   ALTRT: ALTRETURN;

  12313  0 000227   200016 221300       ALTRT        LDX1  ! ENTRY$+1,,AUTO
         0 000230   000000 702211                    TSX2  ! 0,X1

      179    12314                                                /**/
      180    12315    2   END DECIMALS;
      181    12316        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:33   
      182    12317        /*F* NAME: STMT_SPEC1
      183    12318             PURPOSE: TO EVALUATE STMT_SPEC1 NODE REFERENCE.
      184    12319             DESCRIPTION: */
      185    12320        /*D* NAME: STMT_SPEC1
      186    12321             CALL: CALL STMT_SPEC1 ALTRET(CANT EVALUATE);
      187    12322             INTERFACE: SCHEMA_USED FLAG
      188    12323             ENVIRONMENT: DDS$POS11 ACTIVE
      189    12324             INPUT: NC$ - POINTER TO "STMT_SPEC1" NODE
      190    12325             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      191    12326                     ENTRY$ - POINTER INTO EXECUTABLE STATEMENTS TABLE
      192    12327                     SCHEMA_USED - RESET IF ISR RELATIVE REFERENCE.
      193    12328             SCRATCH: LOCAL AUTO ONLY.
      194    12329             DESCRIPTION: */
      195    12330                                                /**/
      196    12331    1   STMT_SPEC1: PROC ALTRET;

  12331  0 000231   200016 741300       STMT_SPEC1   STX1  ! ENTRY$+1,,AUTO

      197    12332                                                /**/
      198    12333    2   DCL LINE SBIN;                          /* TEMP FOR LINE NUMBER */
      199    12334    2   DCL SYM$ PTR;                           /* CURRENT NODE POINTER */
      200    12335    2   DCL CDX SBIN;                           /* CODE OF SYM$ */
      201    12336    2   DCL LA_ALLOWED BIT(1) ALIGNED;          /* LABEL ARRAY CONTROL FLAG */
      202    12337    2   DCL ERROR BIT(1) ALIGNED;          /* SP FOUND BUT COULDNT GET VALUE FLAG */
      203    12338    2   DCL SUBSCRIPT SBIN;                     /* LABEL ARRAY TEMP */
      204    12339                                                /**/
      205    12340    2        S_D.OFFSET_REF = '1'B;   /* ALL LABEL REFERENCES TREATED LIKE OFFSET */

  12340  0 000232   400000 236003                    LDQ     -131072,DU
         0 000233   000000 470400 xsym               LDP0    S_D$
         0 000234   000714 756100                    STQ     460,,PR0

      206    12341    2        IF NUMSB = 3 THEN GOTO SYNSEM_ERR;

  12341  0 000235   200006 235100                    LDA     NUMSB,,AUTO
         0 000236   000003 115007                    CMPA    3,DL
         0 000237   000532 600000 0                  TZE     SYNSEM_ERR
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:34   

      207    12342    2        SYM$ = NC$ -> POB.SUBLK$( 0 );

  12342  0 000240   200007 471500                    LDP1    NC$,,AUTO
         0 000241   100003 236100                    LDQ     3,,PR1
         0 000242   200020 756100                    STQ     SYM$,,AUTO

      208    12343    2        CDX = SYM$ -> POB.CODE;            /* GET CODE - SIMBLE */

  12343  0 000243   200020 473500                    LDP3    SYM$,,AUTO
         0 000244   300000 236100                    LDQ     0,,PR3
         0 000245   777777 376007                    ANQ     -1,DL
         0 000246   200021 756100                    STQ     CDX,,AUTO

      209    12344    2        SYM$ = SYM$ -> POB.SUBLK$( 0 );

  12344  0 000247   300003 236100                    LDQ     3,,PR3
         0 000250   200020 756100                    STQ     SYM$,,AUTO

      210    12345    2        S_D.ERROR_SYM$ = SYM$;             /* JUST IN CASE */

  12345  0 000251   000032 756100                    STQ     26,,PR0

      211    12346    2        LA_ALLOWED = '0'B;                 /* ASSUME NO LABEL ARRAY REFERENCE */

  12346  0 000252   200022 450100                    STZ     LA_ALLOWED,,AUTO

      212    12347    2        IF NOT S_D.QUALIFIED

  12347  0 000253   000712 234100                    SZN     458,,PR0
         0 000254   000357 604000 0                  TMI     s:12369

      213    12348    3        THEN DO;                           /* NON-QUALIFIED REFERENCE */

      214    12349    3             CALL DDS$UD_SRCH(SYM$,TIC) ALTRET(UD_FOUND);

  12349  0 000255   200013 633500                    EPPR3   TIC,,AUTO
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:35   
         0 000256   200031 453500                    STP3    PNTRY#+2,,AUTO
         0 000257   200020 634500                    EPPR4   SYM$,,AUTO
         0 000260   200030 454500                    STP4    PNTRY#+1,,AUTO
         0 000261   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000262   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000263   000000 701000 xent               TSX1    DDS$UD_SRCH
         0 000264   000402 702000 0                  TSX2    UD_FOUND

      215    12350    3             IF CDX = SYM_CODE             /* SYM_CODE */

  12350  0 000265   200021 235100                    LDA     CDX,,AUTO
         0 000266   000016 115007                    CMPA    14,DL
         0 000267   000304 601000 0                  TNZ     s:12356

      216    12351    4             THEN DO;

      217    12352    4                  CALL DDS$POS_SP( SYM$, TIC, ERROR ) ALTRET( SP_FOUND );

  12352  0 000270   200023 630500                    EPPR0   ERROR,,AUTO
         0 000271   200032 450500                    STP0    PNTRY#+3,,AUTO
         0 000272   200013 631500                    EPPR1   TIC,,AUTO
         0 000273   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000274   200020 633500                    EPPR3   SYM$,,AUTO
         0 000275   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000276   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000277   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000300   000000 701000 xent               TSX1    DDS$POS_SP
         0 000301   000402 702000 0                  TSX2    UD_FOUND

      218    12353    4                  IF ERROR THEN GOTO ALTRT;

  12353  0 000302   200023 234100                    SZN     ERROR,,AUTO
         0 000303   000534 604000 0                  TMI     ALTRT

      219    12354    4                END;

      220    12355    3             ELSE ;              /* BYPASS SPECIAL SYMBOL CHECK IF QTSTRINGS */
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:36   
      221    12356    3             IF ( S_D.SCHEMA AND SCHEMA_USED )

  12356  0 000304   000000 470400 xsym               LDP0    S_D$
         0 000305   000052 234100                    SZN     42,,PR0
         0 000306   000336 605000 0                  TPL     s:12365
         0 000307   200012 234100                    SZN     SCHEMA_USED,,AUTO
         0 000310   000336 605000 0                  TPL     s:12365

      222    12357    4             THEN DO;

      223    12358    4                  IF S_D.QSCH.OK

  12358  0 000311   000733 234100                    SZN     475,,PR0
         0 000312   000333 605000 0                  TPL     s:12363

      224    12359    5                  THEN DO;

      225    12360    5                       CALL DDS$ST_SRCH( SYM$, ENTRY$ ) ALTRET( ST_FOUND );

  12360  0 000313   200015 631500                    EPPR1   ENTRY$,,AUTO
         0 000314   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000315   200020 633500                    EPPR3   SYM$,,AUTO
         0 000316   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000317   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000320   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000321   000000 701000 xent               TSX1    DDS$ST_SRCH
         0 000322   000444 702000 0                  TSX2    ST_FOUND

      226    12361    5                       CALL DDS$IE_SRCH( SYM$, ENTRY$ ) ALTRET( IE_FOUND );

  12361  0 000323   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000324   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000325   200020 631500                    EPPR1   SYM$,,AUTO
         0 000326   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000327   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000330   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000331   000000 701000 xent               TSX1    DDS$IE_SRCH
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:37   
         0 000332   000404 702000 0                  TSX2    IE_FOUND

      227    12362    5                     END;

      228    12363    4                  CALL POS3SET ALTRET( P3_FOUND ); /* TRY FOR ENTDEF */

  12363  0 000333   000536 701000 0                  TSX1    POS3SET
         0 000334   000455 702000 0                  TSX2    P3_FOUND

      229    12364    4                END;

  12364  0 000335   000346 710000 0                  TRA     s:12366

      230    12365    3             ELSE CALL DDS$ED_SRCH(SYM$,ENTRY$) ALTRET(ED_FOUND_NS);

  12365  0 000336   200015 631500                    EPPR1   ENTRY$,,AUTO
         0 000337   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000340   200020 633500                    EPPR3   SYM$,,AUTO
         0 000341   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000342   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000343   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000344   000000 701000 xent               TSX1    DDS$ED_SRCH
         0 000345   000421 702000 0                  TSX2    ED_FOUND_NS

      231    12366    3             CALL DDS$SD_SRCH( SYM$, ENTRY$ ) ALTRET( SD_FOUND_NS );

  12366  0 000346   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000347   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000350   200020 631500                    EPPR1   SYM$,,AUTO
         0 000351   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000352   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000353   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000354   000000 701000 xent               TSX1    DDS$SD_SRCH
         0 000355   000427 702000 0                  TSX2    SD_FOUND_NS

      232    12367    3           END;                            /* NON-QUALIFIED REFERENCE */

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:38   
  12367  0 000356   000401 710000 0                  TRA     s:12373

      233    12368    3        ELSE DO;                           /* QUALIFIED REFERENCE CHECKS */

      234    12369    3             IF NOT SCHEMA_USED THEN GOTO SYNSEM_ERR;

  12369  0 000357   200012 234100                    SZN     SCHEMA_USED,,AUTO
         0 000360   000532 605000 0                  TPL     SYNSEM_ERR

      235    12370    3             CALL DDS$ST_SRCH(SYM$,ENTRY$) ALTRET(ST_FOUND);

  12370  0 000361   200015 633500                    EPPR3   ENTRY$,,AUTO
         0 000362   200031 453500                    STP3    PNTRY#+2,,AUTO
         0 000363   200020 634500                    EPPR4   SYM$,,AUTO
         0 000364   200030 454500                    STP4    PNTRY#+1,,AUTO
         0 000365   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000366   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000367   000000 701000 xent               TSX1    DDS$ST_SRCH
         0 000370   000444 702000 0                  TSX2    ST_FOUND

      236    12371    3             CALL DDS$IE_SRCH(SYM$,ENTRY$) ALTRET(IE_FOUND);

  12371  0 000371   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000372   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000373   200020 631500                    EPPR1   SYM$,,AUTO
         0 000374   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000375   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000376   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000377   000000 701000 xent               TSX1    DDS$IE_SRCH
         0 000400   000404 702000 0                  TSX2    IE_FOUND

      237    12372    3           END;                            /* QUALIFIED REFERENCE */

      238    12373    2        GOTO ALTRT;                        /* SPLIT */

  12373  0 000401   000534 710000 0                  TRA     ALTRT

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:39   
  12370  0 000402                       UD_FOUND     null
      239    12374    2   UD_FOUND: ;
      240    12375    2   SP_FOUND:
      241    12376    2        SCHEMA_USED = '0'B;

  12376  0 000402   200012 450100       SP_FOUND     STZ     SCHEMA_USED,,AUTO

      242    12377    2        GOTO SIMBLEND;

  12377  0 000403   000455 710000 0                  TRA     P3_FOUND

      243    12378    2   IE_FOUND:
      244    12379    2        TIC = ENTRY$ -> B$INTNTRY.ISADDR;

  12379  0 000404   200015 470500       IE_FOUND     LDP0    ENTRY$,,AUTO
         0 000405   000000 236100                    LDQ     0,,PR0
         0 000406   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000407   200013 756100                    STQ     TIC,,AUTO

      245    12380    2        CALL DDS$IC2ST( TIC, ENTRY$ ) ALTRET( INTNERR );

  12380  0 000410   200015 631500                    EPPR1   ENTRY$,,AUTO
         0 000411   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000412   200013 633500                    EPPR3   TIC,,AUTO
         0 000413   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000414   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000415   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000416   000000 701000 xent               TSX1    DDS$IC2ST
         0 000417   000526 702000 0                  TSX2    INTNERR

      246    12381    2        GOTO SIMBLEND;

  12381  0 000420   000455 710000 0                  TRA     P3_FOUND

      247    12382    2   ED_FOUND_NS:
      248    12383    2        TIC = ENTRY$ -> B$EDEF.ISADDR;

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:40   
  12383  0 000421   200015 470500       ED_FOUND_NS  LDP0    ENTRY$,,AUTO
         0 000422   000000 236100                    LDQ     0,,PR0
         0 000423   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000424   200013 756100                    STQ     TIC,,AUTO

      249    12384    2        SCHEMA_USED = '0'B;

  12384  0 000425   200012 450100                    STZ     SCHEMA_USED,,AUTO

      250    12385    2        GOTO SIMBLEND;

  12385  0 000426   000455 710000 0                  TRA     P3_FOUND

      251    12386    2   SD_FOUND_NS:
      252    12387    2        SCHEMA_USED = '0'B;

  12387  0 000427   200012 450100       SD_FOUND_NS  STZ     SCHEMA_USED,,AUTO

      253    12388    2        IF ENTRY$ -> B$SDEF.CONSTNT

  12388  0 000430   200015 470500                    LDP0    ENTRY$,,AUTO
         0 000431   000001 236100                    LDQ     1,,PR0
         0 000432   400000 316007                    CANQ    -131072,DL
         0 000433   000440 600000 0                  TZE     s:12393

      254    12389    3        THEN DO;

      255    12390    3             S_D.ERROR = E@SDEF;           /* E@SDEF */

  12390  0 000434   000005 235007                    LDA     5,DL
         0 000435   000000 471400 xsym               LDP1    S_D$
         0 000436   100013 755100                    STA     11,,PR1

      256    12391    3             GOTO ALTRT;

  12391  0 000437   000534 710000 0                  TRA     ALTRT

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:41   
      257    12392    3           END;
      258    12393    2        ELSE TIC = ENTRY$ -> B$SDEF.AD.ISADDR;

  12393  0 000440   000000 236100                    LDQ     0,,PR0
         0 000441   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000442   200013 756100                    STQ     TIC,,AUTO

      259    12394    2        GOTO SIMBLEND;

  12394  0 000443   000455 710000 0                  TRA     P3_FOUND

      260    12395    2   ST_FOUND:
      261    12396    2        TIC = ENTRY$ -> B$EXST.ISADDR;

  12396  0 000444   200015 470500       ST_FOUND     LDP0    ENTRY$,,AUTO
         0 000445   000000 236100                    LDQ     0,,PR0
         0 000446   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000447   200013 756100                    STQ     TIC,,AUTO

      262    12397    2        IF ENTRY$ -> B$EXST.LA             /* LABELED ARRAY CHECK */

  12397  0 000450   000000 234100                    SZN     0,,PR0
         0 000451   000454 605000 0                  TPL     s:12399

      263    12398    2        THEN LA_ALLOWED = '1'B;

  12398  0 000452   400000 236003                    LDQ     -131072,DU
         0 000453   200022 756100                    STQ     LA_ALLOWED,,AUTO

      264    12399    2        GOTO SIMBLEND;

  12399  0 000454   000455 710000 0                  TRA     P3_FOUND

  12397  0 000455                       P3_FOUND     null
      265    12400    2   P3_FOUND: ;
      266    12401    2   SIMBLEND:
      267    12402                                                /**/
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:42   
      268    12403    2        IF NUMSB = 2

  12403  0 000455   200006 235100       SIMBLEND     LDA     NUMSB,,AUTO
         0 000456   000002 115007                    CMPA    2,DL
         0 000457   000516 601000 0                  TNZ     s:12417

      269    12404    2        THEN IF LA_ALLOWED

  12404  0 000460   200022 234100                    SZN     LA_ALLOWED,,AUTO
         0 000461   000522 605000 0                  TPL     LARERR

      270    12405    3             THEN DO;                      /* LABELED ARRAY REFERENCE OK */

      271    12406    3                  LA_ALLOWED = '0'B;       /* SET AS REFERENCE SATISFIED */

  12406  0 000462   200022 450100                    STZ     LA_ALLOWED,,AUTO

      272    12407    3                  SUBSCRIPT = 0;           /* For DDS$POSIMX */

  12407  0 000463   200024 450100                    STZ     SUBSCRIPT,,AUTO

      273    12408    3                 CALL DDS$POSIMX( NC$ -> POB.SUBLK$( 1 ), SUBSCRIPT ) ALTRET( ALTRT );

  12408  0 000464   200024 630500                    EPPR0   SUBSCRIPT,,AUTO
         0 000465   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000466   200007 236100                    LDQ     NC$,,AUTO
         0 000467   000004 036003                    ADLQ    4,DU
         0 000470   200030 756100                    STQ     PNTRY#+1,,AUTO
         0 000471   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000472   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000473   000000 701000 xent               TSX1    DDS$POSIMX
         0 000474   000534 702000 0                  TSX2    ALTRT

      274    12409    3                  CALL DDS$LA_SRCH( SUBSCRIPT, ENTRY$ ) ALTRET( LA_FOUND );

  12409  0 000475   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000476   200031 450500                    STP0    PNTRY#+2,,AUTO
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:43   
         0 000477   200024 631500                    EPPR1   SUBSCRIPT,,AUTO
         0 000500   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000501   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000502   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000503   000000 701000 xent               TSX1    DDS$LA_SRCH
         0 000504   000511 702000 0                  TSX2    LA_FOUND

      275    12410    3                  S_D.ERROR = E@LBL_ARRAY_FIND; /* E@LBL_ARRAY_FIND */

  12410  0 000505   000035 235007                    LDA     29,DL
         0 000506   000000 470400 xsym               LDP0    S_D$
         0 000507   000013 755100                    STA     11,,PR0

      276    12411    3                  GOTO ALTRT;

  12411  0 000510   000534 710000 0                  TRA     ALTRT

      277    12412    3   LA_FOUND:
      278    12413    3                  TIC = ENTRY$ -> B$EXST.ISADDR;

  12413  0 000511   200015 470500       LA_FOUND     LDP0    ENTRY$,,AUTO
         0 000512   000000 236100                    LDQ     0,,PR0
         0 000513   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000514   200013 756100                    STQ     TIC,,AUTO

      279    12414    3                END;

  12414  0 000515   000516 710000 0                  TRA     s:12417

      280    12415    2             ELSE GOTO LARERR;
      281    12416                                                /**/
      282    12417    2        IF LA_ALLOWED THEN GOTO LARERR;

  12417  0 000516   200022 234100                    SZN     LA_ALLOWED,,AUTO
         0 000517   000522 604000 0                  TMI     LARERR

      283    12418                                                /**/
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:44   
      284    12419    2   RETN: RETURN;

  12419  0 000520   200016 221300       RETN         LDX1  ! ENTRY$+1,,AUTO
         0 000521   000001 702211                    TSX2  ! 1,X1

      285    12420                                                /**/
      286    12421    2   LARERR:
      287    12422    2        S_D.ERROR = E@LBL_ARRAY_NOT;       /* E@LBL_ARRAY_NOT */

  12422  0 000522   000034 235007       LARERR       LDA     28,DL
         0 000523   000000 470400 xsym               LDP0    S_D$
         0 000524   000013 755100                    STA     11,,PR0

      288    12423    2        GOTO ALTRT;

  12423  0 000525   000534 710000 0                  TRA     ALTRT

      289    12424    2   INTNERR:
      290    12425    2        S_D.ERROR = E@UERR11;              /* E@UERR11 - SCHEMA BAD */

  12425  0 000526   000026 235007       INTNERR      LDA     22,DL
         0 000527   000000 470400 xsym               LDP0    S_D$
         0 000530   000013 755100                    STA     11,,PR0

      291    12426    2        GOTO ALTRT;

  12426  0 000531   000534 710000 0                  TRA     ALTRT

      292    12427    2   SYNSEM_ERR:
      293    12428    2        S_D.ERROR = E@SYNTAX;              /* E@SYNTAX */

  12428  0 000532   000065 236007       SYNSEM_ERR   LDQ     53,DL
         0 000533   000013 756100                    STQ     11,,PR0

      294    12429                                                /**/
      295    12430    2   ALTRT: ALTRETURN;

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:45   
  12430  0 000534   200016 221300       ALTRT        LDX1  ! ENTRY$+1,,AUTO
         0 000535   000000 702211                    TSX2  ! 0,X1

      296    12431        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:46   
      297    12432        /*F* NAME: POS3SET
      298    12433             PURPOSE: TO EVALUATE ENTDEF REFERENCE WITH SCHEMA AVAILABLE.
      299    12434             DESCRIPTION: FINDS PRIMARY ENTDEF, ESTABLISHES QUALIFIED SCHEMA,
      300    12435             AND GETS ENTRY IN EXECUTABLE STATEMENTS TABLE. IF ENTDEF WAS FOUND
      301    12436             BUT SCHEMA NOT AVAILABLE, THEN RESETS SCHEMA_USED FLAG. RETURNS
      302    12437             IF ENTDEF COULD NOT BE FOUND, ELSE ALTRETURNS. */
      303    12438        /*D* NAME: POS3SET
      304    12439             CALL: CALL DDS$POS3SET ALTRET( FOUND );
      305    12440             ENVIRONMENT: STMT_SPEC1 ACTIVE.
      306    12441             INPUT: SYM$ - POINTER TO SIBMLE TEXTC.
      307    12442             OUTPUT: ENTRY$ - POINTER TO EXECUTABLE STATEMENTS ENTRY.
      308    12443                     TIC - IS ADDRESS @ ENTRY$.
      309    12444                     SCHEMA_USED - RESET IF ENTDEF FOUND BUT SCHEMA NOT AVAILABLE.
      310    12445             SCRATCH: LOCAL AUTO ONLY.
      311    12446             DESCRIPTION: FINDS PRIMARY ENTDEF, ESTABLISHES QUALIFIED SCHEMA,
      312    12447             AND GETS ENTRY IN EXECUTABLE STATEMENTS TABLE. IF ENTDEF WAS FOUND
      313    12448             BUT SCHEMA NOT AVAILABLE, THEN RESETS SCHEMA_USED FLAG. RETURNS
      314    12449             IF ENTDEF COULD NOT BE FOUND, ELSE ALTRETURNS. */
      315    12450                                                /**/
      316    12451    2   POS3SET: PROC ALTRET;

  12451  0 000536   200026 741300       POS3SET      STX1  ! SUBSCRIPT+2,,AUTO

      317    12452                                                /**/
      318    12453    3   DCL PNTRY# UBIN;                        /* TEMP PRIMARY ENTDEF NUMBER */
      319    12454                                                /**/
      320    12455    3        CALL DDS$ED_SRCH(SYM$,ENTRY$) ALTRET(ED_FOUND);

  12455  0 000537   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000540   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000541   200020 631500                    EPPR1   SYM$,,AUTO
         0 000542   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000543   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000544   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000545   000000 701000 xent               TSX1    DDS$ED_SRCH
         0 000546   000553 702000 0                  TSX2    ED_FOUND

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:47   
      321    12456    3   ALTRT:
      322    12457    3        RETURN;

  12457  0 000547   200026 221300       ALTRT        LDX1  ! SUBSCRIPT+2,,AUTO
         0 000550   000001 702211                    TSX2  ! 1,X1

      323    12458    3   NOSCHEMA:
      324    12459    3        SCHEMA_USED = '0'B;

  12459  0 000551   200012 450100       NOSCHEMA     STZ     SCHEMA_USED,,AUTO

      325    12460    3        GOTO RETN;

  12460  0 000552   000620 710000 0                  TRA     RETN

      326    12461    3   ED_FOUND:
      327    12462    3        TIC = ENTRY$ -> B$EDEF.ISADDR;

  12462  0 000553   200015 470500       ED_FOUND     LDP0    ENTRY$,,AUTO
         0 000554   000000 236100                    LDQ     0,,PR0
         0 000555   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000556   200013 756100                    STQ     TIC,,AUTO

      328    12463    3        IF ENTRY$ -> B$EDEF.PRI

  12463  0 000557   000001 236100                    LDQ     1,,PR0
         0 000560   400000 316007                    CANQ    -131072,DL
         0 000561   000602 600000 0                  TZE     s:12469

      329    12464    4        THEN DO;

      330    12465    4             PNTRY# = POFFW( ENTRY$, S_D.EDEF$ ) / SIZEW( B$EDEF );

  12465  0 000562   000000 471400 xsym               LDP1    S_D$
         0 000563   101042 236100                    LDQ     546,,PR1
         0 000564   000022 772000                    QRL     18
         0 000565   200030 756100                    STQ     PNTRY#+1,,AUTO
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:48   
         0 000566   200015 236100                    LDQ     ENTRY$,,AUTO
         0 000567   000022 772000                    QRL     18
         0 000570   200030 136100                    SBLQ    PNTRY#+1,,AUTO
         0 000571   000002 506007                    DIV     2,DL
         0 000572   200027 756100                    STQ     PNTRY#,,AUTO

      331    12466    4             CALL DDS$EQCS#( PNTRY# ) ALTRET( NOSCHEMA );

  12466  0 000573   200027 633500                    EPPR3   PNTRY#,,AUTO
         0 000574   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000575   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000576   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000577   000000 701000 xent               TSX1    DDS$EQCS#
         0 000600   000551 702000 0                  TSX2    NOSCHEMA

      332    12467    4           END;

  12467  0 000601   000610 710000 0                  TRA     s:12471

      333    12468    4        ELSE DO;

      334    12469    4             CALL DDS$ES_INQ( TIC ) ALTRET( NOSCHEMA );

  12469  0 000602   200013 631500                    EPPR1   TIC,,AUTO
         0 000603   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000604   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000605   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000606   000000 701000 xent               TSX1    DDS$ES_INQ
         0 000607   000551 702000 0                  TSX2    NOSCHEMA

      335    12470    4           END;

      336    12471    3        CALL DDS$IC2ST( TIC, ENTRY$ ) ALTRET( NOSCHEMA );

  12471  0 000610   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000611   200031 450500                    STP0    PNTRY#+2,,AUTO
         0 000612   200013 631500                    EPPR1   TIC,,AUTO
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:49   
         0 000613   200030 451500                    STP1    PNTRY#+1,,AUTO
         0 000614   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000615   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000616   000000 701000 xent               TSX1    DDS$IC2ST
         0 000617   000551 702000 0                  TSX2    NOSCHEMA

      337    12472    3   RETN:
      338    12473    3        ALTRETURN;

  12473  0 000620   200026 221300       RETN         LDX1  ! SUBSCRIPT+2,,AUTO
         0 000621   000000 702211                    TSX2  ! 0,X1

      339    12474                                                /**/
      340    12475    3   END POS3SET;
      341    12476                                                /**/
      342    12477    2   END STMT_SPEC1;
      343    12478        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:50   
      344    12479        /*F* NAME: SUBSTMT1
      345    12480             PURPOSE: TO EVALUATE SUBSTMT1 NODE REFERENCE.
      346    12481             DESCRIPTION: */
      347    12482        /*D* NAME: SUBSTMT1
      348    12483             CALL: CALL SUBSTMT1 ALTRET(CANT EVALUATE);
      349    12484             INTERFACE: SCHEMA_USED FLAG
      350    12485             ENVIRONMENT: DDS$POS11 ACTIVE
      351    12486             INPUT: NC$ - POINTER TO "SUBSTMT1" NODE
      352    12487             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      353    12488                     ENTRY$ - POINTER INTO EXECUTABLE STATEMENTS TABLE
      354    12489                     SCHEMA_USED - RESET IF ISR RELATIVE REFERENCE.
      355    12490             SCRATCH: LOCAL AUTO ONLY.
      356    12491             DESCRIPTION: */
      357    12492                                                /**/
      358    12493    1   SUBSTMT1: PROC ALTRET;

  12493  0 000622   200016 741300       SUBSTMT1     STX1  ! ENTRY$+1,,AUTO

      359    12494                                                /**/
      360    12495    2   DCL IXX SBIN;
      361    12496    2   DCL N$ PTR;
      362    12497    2   DCL NCODEX SBIN;
      363    12498    2   DCL OFFSET SBIN;
      364    12499                                                /**/
      365    12500    2        S_D.OFFSET_REF = '1'B;   /* ALL LABEL REFERENCES TREATED LIKE OFFSET */

  12500  0 000623   400000 236003                    LDQ     -131072,DU
         0 000624   000000 470400 xsym               LDP0    S_D$
         0 000625   000714 756100                    STQ     460,,PR0

      366    12501    2        IF NOT SCHEMA_USED THEN GOTO SYNSEM_ERR;

  12501  0 000626   200012 234100                    SZN     SCHEMA_USED,,AUTO
         0 000627   000717 605000 0                  TPL     SYNSEM_ERR

      367    12502    2        IF NUMSB = 0 THEN GOTO SYNSEM_ERR; /* TRAILING COMMA ERROR */

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:51   
  12502  0 000630   200006 235100                    LDA     NUMSB,,AUTO
         0 000631   000717 600000 0                  TZE     SYNSEM_ERR

      368    12503    3        DO IXX = 0 TO NUMSB-1;

  12503  0 000632   200017 450100                    STZ     IXX,,AUTO
         0 000633   000712 710000 0                  TRA     s:12518+1

      369    12504    3             N$ = NC$ -> POB.SUBLK$( IXX );

  12504  0 000634   200007 470500                    LDP0    NC$,,AUTO
         0 000635   200017 720100                    LXL0    IXX,,AUTO
         0 000636   000003 236110                    LDQ     3,X0,PR0
         0 000637   200020 756100                    STQ     N$,,AUTO

      370    12505    3             NCODEX = N$ -> POB.CODE;

  12505  0 000640   200020 471500                    LDP1    N$,,AUTO
         0 000641   100000 236100                    LDQ     0,,PR1
         0 000642   777777 376007                    ANQ     -1,DL
         0 000643   200021 756100                    STQ     NCODEX,,AUTO

      371    12506    3             IF NCODEX = DEC_CODE          /* DEC_CODE */

  12506  0 000644   000010 116007                    CMPQ    8,DL
         0 000645   000701 601000 0                  TNZ     s:12516

      372    12507    4             THEN DO;

      373    12508    4                  CALL DDS$DECIMAL( N$, OFFSET ) ALTRET( ALTRT );

  12508  0 000646   200022 633500                    EPPR3   OFFSET,,AUTO
         0 000647   200031 453500                    STP3    PNTRY#+2,,AUTO
         0 000650   200020 634500                    EPPR4   N$,,AUTO
         0 000651   200030 454500                    STP4    PNTRY#+1,,AUTO
         0 000652   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000653   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:52   
         0 000654   000000 701000 xent               TSX1    DDS$DECIMAL
         0 000655   000721 702000 0                  TSX2    ALTRT

      374    12509    4                  CALL DDS$LN_SRCH( OFFSET, ENTRY$, ENTRY$ ) ALTRET( LN_FOUND );

  12509  0 000656   200015 630500                    EPPR0   ENTRY$,,AUTO
         0 000657   200032 450500                    STP0    PNTRY#+3,,AUTO
         0 000660   200015 631500                    EPPR1   ENTRY$,,AUTO
         0 000661   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000662   200022 633500                    EPPR3   OFFSET,,AUTO
         0 000663   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000664   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000665   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000666   000000 701000 xent               TSX1    DDS$LN_SRCH
         0 000667   000674 702000 0                  TSX2    LN_FOUND

      375    12510    4                  S_D.ERROR = E@SUBST_OFF; /* E@SUBST_OFF */

  12510  0 000670   000037 235007                    LDA     31,DL
         0 000671   000000 470400 xsym               LDP0    S_D$
         0 000672   000013 755100                    STA     11,,PR0

      376    12511    4                  GOTO ALTRT;              /* OFFSET NOT FOUND */

  12511  0 000673   000721 710000 0                  TRA     ALTRT

      377    12512    4   LN_FOUND:
      378    12513    4                  TIC = ENTRY$ -> B$EXST.ISADDR;

  12513  0 000674   200015 470500       LN_FOUND     LDP0    ENTRY$,,AUTO
         0 000675   000000 236100                    LDQ     0,,PR0
         0 000676   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000677   200013 756100                    STQ     TIC,,AUTO

      379    12514    4                END;

  12514  0 000700   000711 710000 0                  TRA     s:12518
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:53   

      380    12515    4             ELSE DO;                      /* ASSUME "SIMX" ENCOUNTERED */

      381    12516    4                  CALL DDS$POSIMX( N$, TIC ) ALTRET( ALTRT );

  12516  0 000701   200013 633500                    EPPR3   TIC,,AUTO
         0 000702   200031 453500                    STP3    PNTRY#+2,,AUTO
         0 000703   200020 634500                    EPPR4   N$,,AUTO
         0 000704   200030 454500                    STP4    PNTRY#+1,,AUTO
         0 000705   200030 630500                    EPPR0   PNTRY#+1,,AUTO
         0 000706   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000707   000000 701000 xent               TSX1    DDS$POSIMX
         0 000710   000721 702000 0                  TSX2    ALTRT

      382    12517    4                END;

      383    12518    3           END;                            /* "DO IXX" */

  12518  0 000711   200017 054100                    AOS     IXX,,AUTO
         0 000712   200017 236100                    LDQ     IXX,,AUTO
         0 000713   200006 116100                    CMPQ    NUMSB,,AUTO
         0 000714   000634 604000 0                  TMI     s:12504

      384    12519                                                /**/
      385    12520    2        RETURN;

  12520  0 000715   200016 221300                    LDX1  ! ENTRY$+1,,AUTO
         0 000716   000001 702211                    TSX2  ! 1,X1

      386    12521                                                /**/
      387    12522    2   SYNSEM_ERR: S_D.ERROR = E@SYNTAX;       /* E@SYNTAX */

  12522  0 000717   000065 235007       SYNSEM_ERR   LDA     53,DL
         0 000720   000013 755100                    STA     11,,PR0

      388    12523                                                /**/
      389    12524    2   ALTRT: ALTRETURN;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:54   

  12524  0 000721   200016 221300       ALTRT        LDX1  ! ENTRY$+1,,AUTO
         0 000722   000000 702211                    TSX2  ! 0,X1

      390    12525                                                /**/
      391    12526    2   END SUBSTMT1;
      392    12527        %EJECT;
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:55   
      393    12528        /*F* NAME: SUBSTMT2
      394    12529             PURPOSE: TO EVALUATE SUBSTMT2 NODE REFERENCE.
      395    12530             DESCRIPTION: IF SCHEMA WAS USED THEN ALTRETURNS, ELSE LETS DDS$POSIMX
      396    12531             DO THE WORK, AND RETURNS. */
      397    12532        /*D* NAME: SUBSTMT2
      398    12533             CALL: CALL SUBSTMT2 ALTRET(CANT EVALUATE);
      399    12534             INTERFACE: SCHEMA_USED FLAG
      400    12535             ENVIRONMENT: DDS$POS11 ACTIVE
      401    12536             INPUT: NC$ - POINTER TO "SUBSTMT2" NODE
      402    12537             OUTPUT: TIC - IS ADDRESS OF REFERENCE
      403    12538             SCRATCH: LOCAL AUTO ONLY.
      404    12539             DESCRIPTION: IF SCHEMA WAS USED THEN ALTRETURNS, ELSE LETS DDS$POSIMX
      405    12540             DO THE WORK, AND RETURNS. */
      406    12541                                                /**/
      407    12542    1   SUBSTMT2: PROC ALTRET;

  12542  0 000723   200016 741300       SUBSTMT2     STX1  ! ENTRY$+1,,AUTO

      408    12543                                                /**/
      409    12544    2        S_D.OFFSET_REF = '1'B;   /* ALL LABEL REFERENCES TREATED LIKE OFFSET */

  12544  0 000724   400000 236003                    LDQ     -131072,DU
         0 000725   000000 470400 xsym               LDP0    S_D$
         0 000726   000714 756100                    STQ     460,,PR0

      410    12545    2        IF SCHEMA_USED THEN GOTO SYNSEM_ERR;

  12545  0 000727   200012 234100                    SZN     SCHEMA_USED,,AUTO
         0 000730   000743 604000 0                  TMI     SYNSEM_ERR

      411    12546    2        CALL DDS$POSIMX( NC$, TIC ) ALTRET( ALTRT );

  12546  0 000731   200013 631500                    EPPR1   TIC,,AUTO
         0 000732   200031 451500                    STP1    PNTRY#+2,,AUTO
         0 000733   200007 633500                    EPPR3   NC$,,AUTO
         0 000734   200030 453500                    STP3    PNTRY#+1,,AUTO
         0 000735   200030 630500                    EPPR0   PNTRY#+1,,AUTO
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:56   
         0 000736   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000737   000000 701000 xent               TSX1    DDS$POSIMX
         0 000740   000745 702000 0                  TSX2    ALTRT

      412    12547                                                /**/
      413    12548    2        RETURN;

  12548  0 000741   200016 221300                    LDX1  ! ENTRY$+1,,AUTO
         0 000742   000001 702211                    TSX2  ! 1,X1

      414    12549                                                /**/
      415    12550    2   SYNSEM_ERR: S_D.ERROR = E@SYNTAX;       /* E@SYNTAX */

  12550  0 000743   000065 235007       SYNSEM_ERR   LDA     53,DL
         0 000744   000013 755100                    STA     11,,PR0

      416    12551                                                /**/
      417    12552    2   ALTRT: ALTRETURN;

  12552  0 000745   200016 221300       ALTRT        LDX1  ! ENTRY$+1,,AUTO
         0 000746   000000 702211                    TSX2  ! 0,X1
      418    12553                                                /**/
      419    12554    2   END SUBSTMT2;
      420    12555                                                /**/
      421    12556    1   END DDS$POS11;

PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:57   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_PSUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$POS11.

   Procedure DDS$POS11 requires 487 words for executable code.
   Procedure DDS$POS11 requires 28 words of local(AUTO) storage.

    No errors detected in file DDS$POS11.:E05TSI    .
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:58   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:59   
          MINI XREF LISTING

ALTRT
     12267**LABEL   12247--CALLALT 12248--CALLALT 12249--CALLALT 12250--CALLALT 12251--CALLALT 12254--GOTO
     12260--GOTO
ALTRT IN PROCEDURE DECIMALS
     12313**LABEL   12291--CALLALT 12297--GOTO    12301--GOTO
ALTRT IN PROCEDURE STMT_SPEC1
     12430**LABEL   12353--GOTO    12373--GOTO    12391--GOTO    12408--CALLALT 12411--GOTO    12423--GOTO
     12426--GOTO
ALTRT IN PROCEDURE SUBSTMT1
     12524**LABEL   12508--CALLALT 12511--GOTO    12516--CALLALT
ALTRT IN PROCEDURE SUBSTMT2
     12552**LABEL   12546--CALLALT
B$EDEF
      9186**DCL     12465--ASSIGN
B$EDEF.ISADDR
      9209**DCL     12383>>ASSIGN  12462>>ASSIGN
B$EDEF.OU
      9203**DCL      9209--REDEF
B$EDEF.PRI
      9214**DCL     12463>>IF
B$EXST.ISADDR
      9325**DCL     12303>>ASSIGN  12396>>ASSIGN  12413>>ASSIGN  12513>>ASSIGN
B$EXST.LA
      9311**DCL     12397>>IF
B$EXST.OU
      9319**DCL      9325--REDEF
B$INTNTRY.ISADDR
      9428**DCL     12379>>ASSIGN
B$INTNTRY.OU
      9421**DCL      9428--REDEF
B$SDEF.AD.ISADDR
      9282**DCL     12393>>ASSIGN
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:60   
B$SDEF.AD.OU
      9276**DCL      9282--REDEF
B$SDEF.CONSTNT
      9287**DCL     12388>>IF
B$SDEF.VALUE
      9257**DCL      9260--REDEF
CDX IN PROCEDURE STMT_SPEC1
     12335**DCL     12343<<ASSIGN  12350>>IF
DDS$DECIMAL
     12227**DCL-ENT 12291--CALL    12508--CALL
DDS$ED_SRCH
     12214**DCL-ENT 12365--CALL    12455--CALL
DDS$EQCS#
     12226**DCL-ENT 12466--CALL
DDS$ES_INQ
     12216**DCL-ENT 12469--CALL
DDS$IC2ST
     12219**DCL-ENT 12380--CALL    12471--CALL
DDS$IE_SRCH
     12221**DCL-ENT 12361--CALL    12371--CALL
DDS$LA_SRCH
     12224**DCL-ENT 12409--CALL
DDS$LN_SRCH
     12220**DCL-ENT 12299--CALL    12509--CALL
DDS$POSIMX
     12228**DCL-ENT 12408--CALL    12516--CALL    12546--CALL
DDS$POS_SP
     12223**DCL-ENT 12352--CALL
DDS$QUAL_SRCH
     12217**DCL-ENT 12247--CALL
DDS$SD_SRCH
     12215**DCL-ENT 12366--CALL
DDS$ST_SRCH
     12218**DCL-ENT 12360--CALL    12370--CALL
DDS$UD_SRCH
     12222**DCL-ENT 12349--CALL
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:61   
DECIMALS
     12287**PROC    12248--CALL
D_SYMBOLS
     12212**DCL     12237>>IF
ED_FOUND IN PROCEDURE POS3SET
     12462**LABEL   12455--CALLALT
ED_FOUND_NS IN PROCEDURE STMT_SPEC1
     12383**LABEL   12365--CALLALT
ENTRY$
        59**DCL     12299<>CALL    12303>>ASSIGN  12360<>CALL    12361<>CALL    12365<>CALL    12366<>CALL
     12370<>CALL    12371<>CALL    12379>>ASSIGN  12380<>CALL    12383>>ASSIGN  12388>>IF      12393>>ASSIGN
     12396>>ASSIGN  12397>>IF      12409<>CALL    12413>>ASSIGN  12455<>CALL    12462>>ASSIGN  12463>>IF
     12465>>ASSIGN  12471<>CALL    12509<>CALL    12509<>CALL    12513>>ASSIGN
ERROR IN PROCEDURE STMT_SPEC1
     12337**DCL     12352<>CALL    12353>>IF
IC
        50**DCL        47--PROC    12263<<ASSIGN
IE_FOUND IN PROCEDURE STMT_SPEC1
     12379**LABEL   12361--CALLALT 12371--CALLALT
INTNERR IN PROCEDURE STMT_SPEC1
     12425**LABEL   12380--CALLALT
IX
        55**DCL     12242<<DOINDEX 12243>>ASSIGN
IXX IN PROCEDURE SUBSTMT1
     12495**DCL     12503<<DOINDEX 12504>>ASSIGN
LARERR IN PROCEDURE STMT_SPEC1
     12422**LABEL   12415--GOTO    12417--GOTO
LA_ALLOWED IN PROCEDURE STMT_SPEC1
     12336**DCL     12346<<ASSIGN  12398<<ASSIGN  12404>>IF      12406<<ASSIGN  12417>>IF
LA_FOUND IN PROCEDURE STMT_SPEC1
     12413**LABEL   12409--CALLALT
LINE IN PROCEDURE DECIMALS
     12289**DCL     12291<>CALL    12299<>CALL    12306>>ASSIGN
LN_FOUND IN PROCEDURE DECIMALS
     12303**LABEL   12299--CALLALT
LN_FOUND IN PROCEDURE SUBSTMT1
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:62   
     12513**LABEL   12509--CALLALT
N$ IN PROCEDURE SUBSTMT1
     12496**DCL     12504<<ASSIGN  12505>>ASSIGN  12508<>CALL    12516<>CALL
NC$
        53**DCL     12243<<ASSIGN  12244>>ASSIGN  12245>>ASSIGN  12247<>CALL    12291<>CALL    12342>>ASSIGN
     12408>>CALL    12504>>ASSIGN  12546<>CALL
NCC$
        54**DCL     12234<<ASSIGN  12235>>ASSIGN  12237>>IF      12243>>ASSIGN
NCODEX IN PROCEDURE SUBSTMT1
     12497**DCL     12505<<ASSIGN  12506>>IF
NODE$
        49**DCL        47--PROC    12234>>ASSIGN
NOSCHEMA IN PROCEDURE POS3SET
     12459**LABEL   12466--CALLALT 12469--CALLALT 12471--CALLALT
NUMSB
        52**DCL     12245<<ASSIGN  12341>>IF      12403>>IF      12502>>IF      12503>>DOINDEX
OFFSET IN PROCEDURE SUBSTMT1
     12498**DCL     12508<>CALL    12509<>CALL
P3_FOUND IN PROCEDURE STMT_SPEC1
     12397**LABEL   12363--CALLALT
PNTRY# IN PROCEDURE POS3SET
     12453**DCL     12465<<ASSIGN  12466<>CALL
POB.CODE
      4019**DCL     12237>>IF      12244>>ASSIGN  12343>>ASSIGN  12505>>ASSIGN
POB.NSB
      4023**DCL     12235>>ASSIGN  12245>>ASSIGN
POB.SUBLK$
      4044**DCL     12237>>IF      12243>>ASSIGN  12342>>ASSIGN  12344>>ASSIGN  12408<>CALL    12504>>ASSIGN
POS3SET IN PROCEDURE STMT_SPEC1
     12451**PROC    12363--CALL
RETN IN PROCEDURE POS3SET
     12473**LABEL   12460--GOTO
SCHEMA_USED
        56**DCL     12240<<ASSIGN  12241<<ASSIGN  12257>>IF      12292>>IF      12307<<ASSIGN  12356>>IF
     12369>>IF      12376<<ASSIGN  12384<<ASSIGN  12387<<ASSIGN  12459<<ASSIGN  12501>>IF      12545>>IF
SD_FOUND_NS IN PROCEDURE STMT_SPEC1
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:63   
     12387**LABEL   12366--CALLALT
SIMBLEND IN PROCEDURE STMT_SPEC1
     12403**LABEL   12377--GOTO    12381--GOTO    12385--GOTO    12394--GOTO    12399--GOTO
SP_FOUND IN PROCEDURE STMT_SPEC1
     12376**LABEL   12352--CALLALT
STMT_SPEC1
     12331**PROC    12249--CALL
ST_FOUND IN PROCEDURE STMT_SPEC1
     12396**LABEL   12360--CALLALT 12370--CALLALT
SUBSCRIPT IN PROCEDURE STMT_SPEC1
     12338**DCL     12407<<ASSIGN  12408<>CALL    12409<>CALL
SUBSTMT1
     12493**PROC    12250--CALL
SUBSTMT2
     12542**PROC    12251--CALL
SYM$ IN PROCEDURE STMT_SPEC1
     12334**DCL     12342<<ASSIGN  12343>>ASSIGN  12344<<ASSIGN  12344>>ASSIGN  12345>>ASSIGN  12349<>CALL
     12352<>CALL    12360<>CALL    12361<>CALL    12365<>CALL    12366<>CALL    12370<>CALL    12371<>CALL
     12455<>CALL
SYNSEM_ERR IN PROCEDURE STMT_SPEC1
     12428**LABEL   12341--GOTO    12369--GOTO
SYNSEM_ERR IN PROCEDURE SUBSTMT1
     12522**LABEL   12501--GOTO    12502--GOTO
SYNSEM_ERR IN PROCEDURE SUBSTMT2
     12550**LABEL   12545--GOTO
S_D.CURRENT_CHANNEL
     11846**DCL     11848--REDEF
S_D.DEBUGA
     10998**DCL     11000--REDEF
S_D.EDEF$
     11342**DCL     12465>>ASSIGN
S_D.EIS
     11956**DCL     11985--REDEF
S_D.ERROR
     10927**DCL     12253<<ASSIGN  12259<<ASSIGN  12267>>IF      12268<<ASSIGN  12296<<ASSIGN  12300<<ASSIGN
     12390<<ASSIGN  12410<<ASSIGN  12422<<ASSIGN  12425<<ASSIGN  12428<<ASSIGN  12510<<ASSIGN  12522<<ASSIGN
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:64   
     12550<<ASSIGN
S_D.ERROR_SYM$
     10951**DCL     12345<<ASSIGN
S_D.GOTQUAL3
     11574**DCL     12257>>IF      12292>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
     11889**DCL     11890--REDEF   11904--REDEF
S_D.JDE
     11503**DCL     11504--REDEF
S_D.L$.VALUE
     11056**DCL     11062--REDEF   11070--REDEF   11073--REDEF   11076--REDEF   11079--REDEF
S_D.L$.VALUE.L
     11057**DCL     11058--REDEF   11059--REDEF
S_D.L6_MESSAGE_BUF
     11910**DCL     11912--REDEF
S_D.OFFSET_REF
     11169**DCL     12231<<ASSIGN  12308<<ASSIGN  12340<<ASSIGN  12500<<ASSIGN  12544<<ASSIGN
S_D.OUTPUT
     11876**DCL     11878--REDEF
S_D.QSCH.OK
     11202**DCL     12292>>IF      12294>>IF      12358>>IF
S_D.QUALIFIED
     11165**DCL     12292>>IF      12347>>IF
S_D.REMOTE_MSG.FNCC
     11895**DCL     11896--REDEF
S_D.REMOTE_MSG.STXC
     11891**DCL     11892--REDEF
S_D.REMOTE_MSG.SUBFNCC
     11899**DCL     11900--REDEF
S_D.SCHEMA
     10996**DCL     12237>>IF      12356>>IF
S_D.SV
     10955**DCL     10976--REDEF
S_D$
     12207**DCL     10903--IMP-PTR 12231>>ASSIGN  12237>>IF      12253>>ASSIGN  12257>>IF      12259>>ASSIGN
     12267>>IF      12268>>ASSIGN  12292>>IF      12292>>IF      12292>>IF      12294>>IF      12296>>ASSIGN
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:65   
     12300>>ASSIGN  12308>>ASSIGN  12340>>ASSIGN  12345>>ASSIGN  12347>>IF      12356>>IF      12358>>IF
     12390>>ASSIGN  12410>>ASSIGN  12422>>ASSIGN  12425>>ASSIGN  12428>>ASSIGN  12465>>ASSIGN  12500>>ASSIGN
     12510>>ASSIGN  12522>>ASSIGN  12544>>ASSIGN  12550>>ASSIGN
TCODE
        51**DCL     12244<<ASSIGN  12246>>DOCASE
TEXT$C.SIZE
      5752**DCL      5753--IMP-SIZ
TIC
        57**DCL     12232<<ASSIGN  12263>>ASSIGN  12303<<ASSIGN  12306<<ASSIGN  12349<>CALL    12352<>CALL
     12379<<ASSIGN  12380<>CALL    12383<<ASSIGN  12393<<ASSIGN  12396<<ASSIGN  12413<<ASSIGN  12462<<ASSIGN
     12469<>CALL    12471<>CALL    12513<<ASSIGN  12516<>CALL    12546<>CALL
TNUM
        58**DCL     12235<<ASSIGN  12237>>IF      12242>>DOINDEX
UD_FOUND IN PROCEDURE STMT_SPEC1
     12370**LABEL   12349--CALLALT
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:66   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$POS11 File=DDS$POS11.:E05TSI                              TUE 07/29/97 14:18 Page:67   
              MINI UREF LISTING

ALTRT IN PROCEDURE POS3SET  12457**LABEL
DDS$POS11      47**PROC
DDS$SIMEXP   12225**DCL-ENT
LINE IN PROCEDURE STMT_SPEC1  12333**DCL
RETN IN PROCEDURE STMT_SPEC1  12419**LABEL
