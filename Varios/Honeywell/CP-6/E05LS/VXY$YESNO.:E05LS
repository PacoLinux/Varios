VERSION E05

PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:1    
        1        1        /*M* VXY$YESNO - To obtain a yes or no response from a terminal user*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC  */
        8        8        /*F* NAME:        VXY$YESNO
        9        9             PURPOSE:     To obtain a yes or no response from a terminal user.
       10       10             DESCRIPTION: VXY$YESNO writes the string "(Y/N)?" and issues a read through
       11       11                          M$UC.  If the first non-blank character is a "Y" then
       12       12                          RESPONSE is set to 1 and a return is made.  If the character
       13       13                          is a "N" then RESPONSE is set to 0 and a return is made.
       14       14                          Otherwise, the process is repeated.
       15       15
       16       16
       17       17
       18       18                                                                        */
       19       19        VXY$YESNO: PROC( RESPONSE );
       20       20
       21       21        %INCLUDE CP_6;
       22      102        %FPT_READ( FPTN=VX_UC_FPT_READ, STCLASS="SYMREF");
       23      141    1   DCL ANS(0:139) CHAR( 1) UNAL  AUTO;
       24      142    1   DCL RESPONSE             UBIN(36) ALIGNED;
       25      143    1   DCL I          UBIN(36)  ALIGNED AUTO;
       26      144    1   DCL SIZE       UBIN(36)  ALIGNED AUTO;
       27      145    1   DCL VXR$READ        ENTRY(3);
       28      146    1   DCL VXW$WRITE       ENTRY(3);
       29      147    1   DCL YESNO           CHAR(6)   STATIC ALIGNED INIT('(Y/N)?');
       30      148        %EJECT;
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:2    
       31      149    1   AGAIN:
       32      150    1         CALL VXW$WRITE( YESNO, 6, 0 );
       33      151    1         VX_UC_FPT_READ.BUF_   = VECTOR( ANS );
       34      152    1         CALL M$READ( VX_UC_FPT_READ );
       35      153    1         I = 0;
       36      154    2         DO WHILE( ANS(I) =  ' ' );
       37      155    2             I = I + 1;
       38      156    2             IF I > 139 THEN GOTO AGAIN;
       39      157    2            END;
       40      158    1         IF ANS(I) = 'Y' THEN RESPONSE = 1;
       41      159    1         ELSE IF ANS(I) = 'N' THEN RESPONSE = 0;
       42      160    1             ELSE GOTO AGAIN;
       43      161    1   END VXY$YESNO;

PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:3    
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXY$YESNO.

   Procedure VXY$YESNO requires 45 words for executable code.
   Procedure VXY$YESNO requires 44 words of local(AUTO) storage.

    No errors detected in file VXY$YESNO.:E05TSI    .

PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:4    

 Object Unit name= VXY$YESNO                                  File name= VXY$YESNO.:E05TOU
 UTS= JUL 30 '97 08:48:39.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none     2      2  VXY$YESNO
    2   Proc  even  none    45     55  VXY$YESNO
    3  RoData even  none     6      6  VXY$YESNO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  VXY$YESNO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 VXW$WRITE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VX_UC_FPT_READ                        B_VECTNIL
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:6    


        1        1        /*M* VXY$YESNO - To obtain a yes or no response from a terminal user*/
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=6,IND=4,CSU=2,EXM=0,ECU=2,MOC,DCI=4,CRT=4,CTI=8,CCC  */
        8        8        /*F* NAME:        VXY$YESNO
        9        9             PURPOSE:     To obtain a yes or no response from a terminal user.
       10       10             DESCRIPTION: VXY$YESNO writes the string "(Y/N)?" and issues a read through
       11       11                          M$UC.  If the first non-blank character is a "Y" then
       12       12                          RESPONSE is set to 1 and a return is made.  If the character
       13       13                          is a "N" then RESPONSE is set to 0 and a return is made.
       14       14                          Otherwise, the process is repeated.
       15       15
       16       16
       17       17
       18       18                                                                        */
       19       19        VXY$YESNO: PROC( RESPONSE );

     19  2 000000   000000 700200 xent  VXY$YESNO    TSX0  ! X66_AUTO_1
         2 000001   000054 000001                    ZERO    44,1

       20       20
       21       21        %INCLUDE CP_6;
       22      102        %FPT_READ( FPTN=VX_UC_FPT_READ, STCLASS="SYMREF");
       23      141    1   DCL ANS(0:139) CHAR( 1) UNAL  AUTO;
       24      142    1   DCL RESPONSE             UBIN(36) ALIGNED;
       25      143    1   DCL I          UBIN(36)  ALIGNED AUTO;
       26      144    1   DCL SIZE       UBIN(36)  ALIGNED AUTO;
       27      145    1   DCL VXR$READ        ENTRY(3);
       28      146    1   DCL VXW$WRITE       ENTRY(3);
       29      147    1   DCL YESNO           CHAR(6)   STATIC ALIGNED INIT('(Y/N)?');
       30      148        %EJECT;
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:7    
       31      149    1   AGAIN:
       32      150    1         CALL VXW$WRITE( YESNO, 6, 0 );

    150  2 000002   000000 630400 3     AGAIN        EPPR0   0
         2 000003   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000004   000000 701000 xent               TSX1    VXW$WRITE
         2 000005   000000 011000                    NOP     0

       33      151    1         VX_UC_FPT_READ.BUF_   = VECTOR( ANS );

    151  2 000006   000003 235000 3                  LDA     3
         2 000007   200052 452500                    STP2    I+3,,AUTO
         2 000010   200052 236100                    LDQ     I+3,,AUTO
         2 000011   000004 036003                    ADLQ    4,DU
         2 000012   000004 757000 xsym               STAQ    VX_UC_FPT_READ+4

       34      152    1         CALL M$READ( VX_UC_FPT_READ );

    152  2 000013   000000 630400 xsym               EPPR0   VX_UC_FPT_READ
         2 000014   040000 713400                    CLIMB   read
         2 000015   401400 401760                    pmme    nvectors=4

       35      153    1         I = 0;

    153  2 000016   200047 450100                    STZ     I,,AUTO

       36      154    2         DO WHILE( ANS(I) =  ' ' );

    154  2 000017   200047 235100                    LDA     I,,AUTO
         2 000020   040000 106505                    CMPC    fill='040'O
         2 000021   200004 000001                    ADSC9   ANS,A,AUTO               cn=0,n=1
         2 000022   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000023   000035 601000 2                  TNZ     s:158

       37      155    2             I = I + 1;

    155  2 000024   200047 235100                    LDA     I,,AUTO
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:8    
         2 000025   000001 035007                    ADLA    1,DL
         2 000026   200047 755100                    STA     I,,AUTO

       38      156    2             IF I > 139 THEN GOTO AGAIN;

    156  2 000027   000214 115007                    CMPA    140,DL
         2 000030   000002 603000 2                  TRC     AGAIN

       39      157    2            END;

    157  2 000031   040000 106505                    CMPC    fill='040'O
         2 000032   200004 000001                    ADSC9   ANS,A,AUTO               cn=0,n=1
         2 000033   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000034   000024 600000 2                  TZE     s:155

       40      158    1         IF ANS(I) = 'Y' THEN RESPONSE = 1;

    158  2 000035   040000 106505                    CMPC    fill='040'O
         2 000036   200004 000001                    ADSC9   ANS,A,AUTO               cn=0,n=1
         2 000037   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000040   000045 601000 2                  TNZ     s:159

    158  2 000041   000001 236007                    LDQ     1,DL
         2 000042   200003 470500                    LDP0    @RESPONSE,,AUTO
         2 000043   000000 756100                    STQ     0,,PR0
         2 000044   000054 710000 2                  TRA     s:161

       41      159    1         ELSE IF ANS(I) = 'N' THEN RESPONSE = 0;

    159  2 000045   040000 106505                    CMPC    fill='040'O
         2 000046   200004 000001                    ADSC9   ANS,A,AUTO               cn=0,n=1
         2 000047   000005 000001 3                  ADSC9   5                        cn=0,n=1
         2 000050   000002 601000 2                  TNZ     AGAIN

    159  2 000051   200003 470500                    LDP0    @RESPONSE,,AUTO
         2 000052   000000 450100                    STZ     0,,PR0
         2 000053   000054 710000 2                  TRA     s:161
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:9    

       42      160    1             ELSE GOTO AGAIN;
       43      161    1   END VXY$YESNO;

    161  2 000054   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:10   
--  Include file information  --

   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VXY$YESNO.
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:11   

 **** Variables and constants ****

  ****  Section 001  Data  VXY$YESNO

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(6)     r     1 YESNO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RESPONSE                  4-0-0/c CHAR        r     1 ANS(0:139)
    47-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 RESPONSE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(504)   r     1 VX_UC_FPT_READ


   Procedure VXY$YESNO requires 45 words for executable code.
   Procedure VXY$YESNO requires 44 words of local(AUTO) storage.

    No errors detected in file VXY$YESNO.:E05TSI    .
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VXY$YESNO File=VXY$YESNO.:E05TSI                              WED 07/30/97 08:48 Page:13   
          MINI XREF LISTING

AGAIN
       150**LABEL     156--GOTO      160--GOTO
ANS
       141**DCL       151--ASSIGN    154>>DOWHILE   158>>IF        159>>IF
I
       143**DCL       153<<ASSIGN    154>>DOWHILE   155<<ASSIGN    155>>ASSIGN    156>>IF        158>>IF
       159>>IF
M$READ
        31**DCL-ENT   152--CALL
RESPONSE
       142**DCL        19--PROC      158<<ASSIGN    159<<ASSIGN
VXW$WRITE
       146**DCL-ENT   150--CALL
VX_UC_FPT_READ
       119**DCL       152<>CALL
VX_UC_FPT_READ.BUF_
       121**DCL       151<<ASSIGN
VX_UC_FPT_READ.STATION_
       122**DCL       123--REDEF
VX_UC_FPT_READ.V.DVBYTE.REREAD#
       134**DCL       134--REDEF
VX_UC_FPT_READ.V.INDX#
       132**DCL       132--REDEF
YESNO
       147**DCL       150<>CALL
