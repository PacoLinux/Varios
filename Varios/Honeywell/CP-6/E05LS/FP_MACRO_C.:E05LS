

14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         1    
    1      /*M*  Macros for Optical Disc Controller interface  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7
    8
    9
   10
   11      /*    Controller message header           */
   12      /*    This macro defines the fixed portion of every message
   13            sent to and recieved from the OSAR.                       */
   14
   15
   16
   17      %MACRO FPP$MHDR (NAME=FPP$MHDR,STCLASS="",LAST=";");
   18       %LSET LISTDIR='0'B;
   19       %LSET LISTEXP='1'B;
   20       %LSET LISTCOM='0'B;
   21       %LSET LISTSUB='1'B;
   22      DCL 1 NAME STCLASS,
   23            2 FNC UBIN BYTE UNAL,        /* Indicates the message type */
   24            2 STT UBIN BYTE UNAL,        /* Status                     */
   25            2 DEV# UBIN BYTE UNAL,       /* Destination device number */
   26            2 * UBIN BYTE UNAL,
   27            2 DCTX,                      /* Resource DCT index        */
   28               3 HI UBIN BYTE UNAL,
   29               3 LO UBIN BYTE UNAL LAST
   30      %MEND;
   31
   32
   33      /*    Error log message from OD controller                       */
   34
   35      %MACRO FPP$ERRMSG (NAME=FPP$ERRMSG,STCLASS=BASED);
   36            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST=",");
   37            2 ERRNUM UBIN BYTE CALIGNED,
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         2    
   38            2 * UBIN BYTE CALIGNED,  /* Need because of c alignment */
   39            2 VALUES(0:3) CALIGNED,
   40               3 * BIT(1) UNAL,
   41               3 V2 UBIN(8) UNAL,
   42               3 * BIT(1) UNAL,
   43               3 V1 UBIN(8) UNAL,
   44            2 DYMDATA CHAR(100);
   45      %MEND;
   46
   47      /*    Mount request message        */
   48
   49      %MACRO FPP$MNTREQ (NAME=FPP$MNTREQ,STCLASS=BASED);
   50            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS,LAST=",");
   51            2 SER CHAR(6) CALIGNED,      /* volume serial number      */
   52            2 SYSCON UBIN BYTE CALIGNED; /* partition bits 0-3 */
   53      %MEND;
   54
   55      /*    Mount acknowlgement message from OSAR       */
   56
   57      %MACRO FPP$MNTACK (NAME=FPP$MNTACK,STCLASS=BASED);
   58            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST=",");
   59            2 FSECT CHAR(6) CALIGNED,
   60            2 FSEQU_NUM CHAR(6) CALIGNED,
   61            2 VOL1 CHAR(80) CALIGNED;   /* Volume labels              */
   62      %MEND;
   63
   64      /*    Dismount request message              */
   65
   66      %MACRO FPP$DSMNTREQ (NAME=FPP$DSMNTREQ,STCLASS=BASED);
   67            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST=",");
   68            2 DSMNTDEV UBIN BYTE UNAL;   /* dismount device number   */
   69      %MEND;
   70
   71      /*    Dismount device completed         */
   72
   73      %MACRO FPP$DSMNTACK (NAME=FPP$DSMNTACK,STCLASS=BASED);
   74            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ";");
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         3    
   75      %MEND;
   76
   77      /*    Write label request              */
   78
   79      %MACRO FPP$WRITELBLREQ (NAME=FPP$WRITELBLREQ,STCLASS=BASED);
   80            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
   81            2 HDR1 CHAR(80),
   82            2 HDR2 CHAR(80);
   83      %MEND;
   84
   85      /*    Write label completed            */
   86
   87      %MACRO FPP$WRITELBLACK (NAME=FPP$WRITELBLACK,STCLASS=BASED);
   88            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ";");
   89      %MEND;
   90
   91      /*    Position to end of volume               */
   92
   93      %MACRO FPP$PEOVREQ (NAME=FPP$PEOVREQ,STCLASS=BASED);
   94            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
   95            2 DIR CHAR(1) CALIGNED;   /* Direction to position  */
   96      %MEND;
   97
   98      %MACRO FPP$PEOVACK (NAME=FPP$PEOVACK,STCLASS=BASED);
   99            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  100            2 TYPE CHAR(4) CALIGNED,     /* "EOV1" or "EOF1"   */
  101            2 FSEQU_NUM CHAR(6) CALIGNED; /* seq number of last file */
  102      %MEND;
  103
  104      /*    Get EOF1/EOV1 label from current file  */
  105
  106      %MACRO FPP$RDEOFREQ (NAME=FPP$RDEOFREQ,STCLASS=BASED);
  107            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ";");
  108      %MEND;
  109
  110      %MACRO FPP$RDEOFACK (NAME=FPP$RDEOFACK,STCLASS=BASED);
  111            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         4    
  112            2 LBL CHAR(80) CALIGNED;     /* "EOV1" or "EOF1" label data  */
  113      %MEND;
  114
  115      /*    Find file by sequence number           */
  116
  117      %MACRO FPP$FNDSQREQ (NAME=FPP$FNDSQREQ,STCLASS=BASED);
  118            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  119            2 FSN CHAR(6) CALIGNED;  /* requested file sequence number */
  120      %MEND;
  121
  122
  123      %MACRO FPP$FNDACK (NAME=FPP$FNDACK,STCLASS=BASED);
  124            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  125            2 HDRS CHAR(160) CALIGNED;   /* HDR1 and HDR2 Labels from file */
  126      %MEND;
  127
  128      /*    Find file by name                      */
  129
  130      %MACRO FPP$FNDFLREQ (NAME=FPP$FNDFLREQ,STCLASS=BASED);
  131            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  132            2 NM,
  133               3 L UBIN BYTE CALIGNED,
  134               3 C CHAR(31);
  135      %MEND;
  136
  137      /*    Write/read data block                       */
  138
  139      %MACRO FPP$XFERREQ (NAME=FPP$XFERREQ,STCLASS=BASED);
  140            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  141            2 ADR,
  142               3 B1 UBIN BYTE UNAL,
  143               3 B2 UBIN BYTE UNAL,
  144               3 B3 UBIN BYTE UNAL,
  145               3 B4 UBIN BYTE UNAL,
  146            2 SIZE,
  147               3 B1 UBIN BYTE UNAL,
  148               3 B2 UBIN BYTE UNAL,
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         5    
  149               3 B3 UBIN BYTE UNAL,
  150               3 B4 UBIN BYTE UNAL,
  151            2 USRNO,                     /* user number for this request*/
  152               3 B1 UBIN BYTE UNAL,
  153               3 B2 UBIN BYTE UNAL;
  154      %MEND;
  155
  156      %MACRO FPP$XFERACK (NAME=FPP$XFERACK,STCLASS=BASED);
  157            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  158               2 SIZE,
  159                  3 * UBIN(1) UNAL,
  160                  3 B1 UBIN(8)  UNAL,
  161                  3 * UBIN(1) UNAL,
  162                  3 B2 UBIN(8)  UNAL,
  163                  3 * UBIN(1) UNAL,
  164                  3 B3 UBIN(8)  UNAL,
  165                  3 * UBIN(1) UNAL,
  166                  3 B4 UBIN(8)  UNAL,
  167               2 USRNO,                  /* user number for this request*/
  168                  3 * UBIN(1) UNAL,      /* Used on device type requests */
  169                  3 B1 UBIN(8) UNAL,
  170                  3 * UBIN(1) UNAL,
  171                  3 B2 UBIN(8) UNAL;
  172      %MEND;
  173
  174      /*    Operator keyin for VOLINIT AND UNLOADS        */
  175
  176      %MACRO FPP$OCKEYNREQ (NAME=FPP$OCKEYNREQ,STCLASS=BASED);
  177            %FPP$MHDR (NAME = NAME,STCLASS = STCLASS, LAST = ",");
  178            2 SER CHAR(6) CALIGNED,
  179            2 TYPE UBIN BYTE UNAL;
  180      %MEND;
  181
  182
  183      /*    OC output request            */
  184
  185      %MACRO FPP$OCREQ (NAME=FPP$OCREQ,STCLASS=BASED);
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         6    
  186            %FPP%MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  187            2 NUM UBIN BYTE CALIGNED,
  188            2 VALUES CHAR(4) CALIGNED;
  189      %MEND;
  190
  191      /*    Copy disc request                                            */
  192      /*    Returns LABELACK for acknowledgement                         */
  193
  194      %MACRO FPP$COPYREQ (NAME=FPP$COPYREQ,STCLASS=BASED);
  195            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST = ",");
  196            2 SER CHAR(6) CALIGNED;
  197      %MEND;
  198
  199      /*    Label volume message        */
  200
  201      %MACRO FPP$LABELREQ (NAME=FPP$LABELREQ,STCLASS=BASED);
  202            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS,LAST=",");
  203            2 VOL1 CHAR(80) CALIGNED;      /* The new VOL1 to use      */
  204      %MEND;
  205
  206      /*    Label acknowledgement message from OSAR       */
  207
  208      %MACRO FPP$LABELACK (NAME=FPP$LABELACK,STCLASS=BASED);
  209            %FPP$MHDR (NAME = NAME, STCLASS = STCLASS, LAST=";");
  210      %MEND;
  211
  212      %MACRO FP$OPCI (FPTN=FP$OPCI,STCLASS="");
  213       %LSET LISTDIR='0'B;
  214       %LSET LISTEXP='1'B;
  215       %LSET LISTCOM='0'B;
  216       %LSET LISTSUB='1'B;
  217      DCL 1 FPTN STCLASS,
  218            2 LNK$ PTR,
  219            2 FEI# UBIN,
  220            2 LDCTX UBIN;
  221      %MEND;
  222
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         7    
  223      %EQU FP_FNC_MOUNT = 1;             /* mount request  */
  224      %EQU FP_FNC_MOUNT_ACK = 2;         /* mount ack from OSAR  */
  225      %EQU FP_FNC_DISMOUNT = 3;
  226      %EQU FP_FNC_DISMOUNT_ACK =4;
  227      %EQU FP_FNC_POSEOV = 5;            /* Position to end of volume */
  228      %EQU FP_FNC_POSEOV_ACK = 6;        /* Acknowledge PEOV          */
  229      %EQU FP_FNC_WRITELBL = 7;          /* Write label             */
  230      %EQU FP_FNC_WRITELBL_ACK = 8;      /* Write label completed        */
  231      %EQU FP_FNC_TRUNC = 9;             /* Truncate buffer           */
  232      %EQU FP_FNC_TRUNC_ACK = 10;        /* Truncte buffer completed   */
  233      %EQU FP_FNC_RDEOF = 11;            /* Read EOF label           */
  234      %EQU FP_FNC_RDEOF_ACK = 12;        /* Read EOF label completed */
  235      %EQU FP_FNC_FNDSEQ = 13;           /* Position to file number n */
  236      %EQU FP_FNC_FND_ACK = 14;          /* Position completed        */
  237      %EQU FP_FNC_FNDFIL = 15;           /* Position to file name xxx */
  238      %EQU FP_FNC_WR = 16;               /* Write block               */
  239      %EQU FP_FNC_RD = 17;               /* Read block                */
  240      %EQU FP_FNC_RDWR_ACK = 18;         /* Read write completed      */
  241      %EQU FP_FNC_MOUNTDEV = 19;         /* device mount for label   */
  242      %EQU FP_FNC_MOUNTBRK = 20;         /* break hit during mount    */
  243      %EQU FP_FNC_LABEL = 21;            /* Write VOL1 label on cartridge */
  244      %EQU FP_FNC_LABEL_ACK = 22;        /* Acknowledge label operation */
  245      %EQU FP_FNC_MAP = 23;              /* Get Osar Library Map        */
  246      %EQU FP_FNC_MAP_ACK = 24;          /* Map Completed               */
  247      %EQU FP_FNC_UNLOADSN = 25;         /* Unload labeled cartridge    */
  248      %EQU FP_FNC_UNLOADID = 26;        /* Unload unlabeled cartridge    */
  249      %EQU FP_FNC_UNTRUNC = 27;          /* Untruncate buffer           */
  250      %EQU FP_FNC_UNTRUNC_ACK = 28;      /* Untruncate completed        */
  251      %EQU FP_FNC_ERRLOG = 29;           /* Message with errorlog data */
  252      %EQU FP_FNC_OPENIN = 30;           /* Open positioned-to file for input */
  253      %EQU FP_FNC_OPENIN_ACK = 31;       /* Acknowledgement            */
  254      %EQU FP_FNC_CLOSEIN = 32;          /* Close input file            */
  255      %EQU FP_FNC_CLOSEIN_ACK = 33;      /* Acknowledge that.           */
  256      %EQU FP_FNC_OCMSG = 34;            /* Operator Console            */
  257      %EQU FP_FNC_VOLINIT = 35;          /* Write cartridge label        */
  258      %EQU FP_FNC_COPY = 36;             /* Copy disc                    */
  259      %EQU FP_FNC_COPY_ACK = 37;         /* Copy response                */
14:28 JUL 28 '97 FP_MACRO_C.:E05SI                                         8    
  260      %EQU FP_SYSCONPARTREQ = 38;
  261      %EQU FP_SYSCONRETREQ = 39;
  262      %EQU FP_SYSCON_ACK = 40;
  263
  264      /*    error codes returned from the controller                 */
  265
  266      %EQU FP_ERR_EOV = 3;               /* end of volume                */
  267      %EQU FP_ERR_BOT = 1;               /* beginning of disk        */
  268      %EQU FP_ERR_EOT = 2;               /* indicates end of disk    */
  269      %EQU FP_ERR_NOFSN = 4;             /* nonexistant FSN          */
  270      %EQU FP_ERR_IOERR = 5;            /* couldn't read disk directory */
  271      %EQU FP_ERR_LABEL = 3;             /* Platter already had a VOL1 */

