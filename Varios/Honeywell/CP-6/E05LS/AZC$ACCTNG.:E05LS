VERSION E05

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:1    
        1        1        /*M* AZC$ACCTNG An ELF module which performs communications accounting */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8        AZC$ACCTNG: PROC(RECVEC,FCN) ALTRET;
        9        9        /*D* NAME: AZC$ACCTNG
       10       10             CALL: CALL AZC$ACCTNG(RECVEC,FCN) ALTRET;
       11       11                    where RECVEC is a vector framing an input record from ELF
       12       12                    and FCN is a word determining what function to perform.
       13       13                        FCN determines whether RECVEC is from a KEYIN or an M$WRSYSLOG.
       14       14             DESCRIPTION: AZC$ACCTNG performs communications accounting functions
       15       15                          for the ELF system ghost. These functions include:
       16       16                            1) Informing the operator(s) of terminal, device and
       17       17                               sub-device connects and of terminal and device
       18       18                               disconnects
       19       19                            2) Maintaining accounting information on all terminals and
       20       20                               devices logged on to the system.
       21       21                            3) Writing an accounting record, COMACCTNG, to
       22       22                               :ACCTLG.:SYS for all terminals and devices upon
       23       23                               disconnect. This disconnect may take the form of
       24       24                               either a 'normal' disconnect, an FEP crash, or a
       25       25                               host crash.
       26       26                            4) M$EXHUMEing any communications devices attached
       27       27                               to a now available comgroup -or-
       28       28                               a communications device being unpartitioned
       29       29                          If any unexpected ALTRET occurs, AZC$ACCTNG will ALTRET
       30       30                          immediately.
       31       31        */
       32       32        %INCLUDE AZ_MACRO_C;
       33     2619        %INCLUDE AZ_SUBS_C;
       34     2688        %INCLUDE B_ERRORS_C;
       35     3815 S      %INCLUDE B$JIT_C;
       36     3816        %INCLUDE CP_6;
       37     3897        %INCLUDE CP_6_SUBS;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:2    
       38     4437        %INCLUDE EL_DATA_C;
       39     4449        %INCLUDE EL_MACRO_C;
       40     4618        %INCLUDE EL_SUBS_C;
       41     4702        %INCLUDE EL$TABLES;
       42     5025        %INCLUDE JC_MACRO_C;
       43     5139        %INCLUDE JG_EVID_C;
       44     5364        %INCLUDE JG_GHOSTS_C;
       45     5454        %INCLUDE KC$CGBLK;
       46     5502        %INCLUDE KI_SUBS_C;
       47     5638        %INCLUDE KL_MACRO_C;
       48     8990        %INCLUDE KL_SUBS_C;
       49     9044        %INCLUDE KL_SUPER_C;
       50    11946        %INCLUDE OC_MESSHD_C;
       51    11999        %INCLUDE OC_SUBS_C;
       52    12730        /**/
       53    12731        %SUB DSP_DEV_SUBD#=0;                   /* DISPLAY DEVICES AND SUB-DEVICES    */
       54    12732        %SUB DSP_DEV#=1;                        /* DISPLAY DEVICES ONLY               */
       55    12733        %SUB DSP_SUBD#=2;                       /* DISPLAY SUB-DEVICES ONLY           */
       56    12734        /**/
       57    12735        /**/
       58    12736        %SUB CGNMI#=13;                    /* CGNAME MUST BE LAST PARM - 13 TO KEYIN  */
       59    12737        /**/
       60    12738        /**/
       61    12739    1   DCL B$TCB$ PTR SYMREF;
       62    12740    1   DCL B$JIT$ PTR SYMREF;
       63    12741        %B$TCB(STCLASS="BASED(B$TCB$)");
       64    12744        %B$ALT;
       65    12752        %B$JIT0(STCLASS="BASED(B$JIT$)");
       66    12841        %U$JIT1;
       67    12915        %M$JIT2X;
       68    12918        %F$JIT3X;
       69    12921        %S$JIT4X;
       70    12924        %J$JIT5;
       71    13012        %A$JIT6X;
       72    13015    1   DCL F$ACCTNG DCB;
       73    13016    1   DCL F$COMAC DCB;                        /* To :COMAC.:SYS                     */
       74    13017    1   DCL F$CSCG DCB;                         /* To CG/CSCG.:SYS                    */
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:3    
       75    13018    1   DCL 1 RECVEC,
       76    13019    1         2 * BIT(36),
       77    13020    1         2 HDR$ PTR;
       78    13021    1   DCL FCN UBIN;
       79    13022    1   DCL REC$ PTR;
       80    13023    1   DCL DSPTYP UBIN WORD;
       81    13024    1   DCL NDFEX UBIN WORD;
       82    13025    1   DCL ENTX SBIN;
       83    13026    1   DCL PREVX SBIN;
       84    13027    1   DCL RSN SBIN;
       85    13028    1   DCL PREV$ PTR;
       86    13029    1   DCL MSG_COUNT UBIN WORD;
       87    13030        %FPT_WRITE (FPTN=FPT_WRLOG,WAIT=YES,DCB=F$ACCTNG);
       88    13061        %FPT_USRFIELD(FPTN=FPT_USRFIELD,STCLASS=CONSTANT,USER=YES,FIELD0=1);
       89    13078        %FPT_WRITE (FPTN=FPT_WR_SLUG,STCLASS=CONSTANT,DCB=F$CSCG,
       90    13079                 BUF=JC_CITE,STATION=SLUG_STA);
       91    13110        %VLP_STATION (FPTN=SLUG_STA,STCLASS=CONSTANT,STATION='SLUG');
       92    13137        %JC_CITE (FPTN=JC_CITE,STCLASS=CONSTANT,
       93    13138                    TYP=PCMP,COD=JCEV_PCMP#,USR=JG_ELF#);
       94    13188        %FPT_WRITE (FPTN = FPT_WR_CSCG,STCLASS = CONSTANT,
       95    13189                    BUF  = OCMESSHD,
       96    13190                    DCB  = F$CSCG);
       97    13221        %FPT_WRITE (FPTN = FPT_WRCOM,
       98    13222                    DCB  = F$COMAC,
       99    13223                    BUF  = COM_BUF,
      100    13224                    KEY  = COM_KEY,
      101    13225                    ONEWKEY = YES,
      102    13226                    STCLASS = CONSTANT);
      103    13257        %FPT_WRITE (FPTN=FPT_WRTRM,DCB=F$COMAC,KEY=TRD_KEY,
      104    13258                    ONEWKEY=YES,STCLASS=STATIC);
      105    13289        %FPT_WRITE (FPTN=FPT_WRCGR,DCB=F$COMAC,KEY=CGRD_KEY,
      106    13290                    ONEWKEY=YES,STCLASS=STATIC);
      107    13321        %FPT_READ (FPTN = FPT_RDCOM,
      108    13322                   DCB  = F$COMAC,
      109    13323                   BUF  = COM_BUF,
      110    13324                   KEY  = COM_KEY,
      111    13325                   KEYS = YES,
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:4    
      112    13326                   STCLASS = CONSTANT);
      113    13365        %FPT_READ (FPTN=FPT_RDCOMN,DCB=F$COMAC,BUF=COM_BUF,KEY=BIGKEY,
      114    13366                   KEYR=YES,STCLASS=CONSTANT);
      115    13405        %FPT_READ (FPTN=FPT_RDTRM,DCB=F$COMAC,KEY=TRD_KEY,
      116    13406                   KEYS=YES,STCLASS=STATIC);
      117    13445        %FPT_READ (FPTN=FPT_RDTRMN,DCB=F$COMAC,KEY=BIGKEY,
      118    13446                   KEYR=YES,STCLASS=STATIC);
      119    13485        %FPT_READ (FPTN=FPT_RDCGR,DCB=F$COMAC,KEY=CGRD_KEY,
      120    13486                   KEYS=YES,STCLASS=STATIC);
      121    13525        %FPT_PRECORD (FPTN = FPT_PRECORD,
      122    13526                      DCB  = F$COMAC,
      123    13527                      KEY  = COM_KEY,
      124    13528                      KEYS = YES,
      125    13529                      N = 0,
      126    13530                      STCLASS = CONSTANT);
      127    13551        %FPT_PRECORD (FPTN=FPT_PRCTRM,STCLASS=STATIC,DCB=F$COMAC,KEYS=YES,
      128    13552                      KEY=TCUR_KEY);
      129    13573        %FPT_DELREC (FPTN = FPT_DELREC,
      130    13574                     DCB  = F$COMAC,
      131    13575                     KEY  = COM_KEY,
      132    13576                     STCLASS = CONSTANT);
      133    13595        %FPT_DELREC(FPTN = FPT_TRMDEL,STCLASS = CONSTANT,
      134    13596                    DCB = F$COMAC,KEY = TRD_KEY);
      135    13615        %FPT_DELREC(FPTN = FPT_CGDEL,STCLASS = CONSTANT,
      136    13616                    DCB = F$COMAC,KEY = CGRD_KEY);
      137    13635        %FPT_EXHUME (FPTN=FPT_EXHUME,STCLASS=CONSTANT,
      138    13636                    CGID=EXHUME_CGID,RENT=EXHUME_RENT);
      139    13650        %FPT_GDS(FPTN = FPT_TRMGDS,STCLASS = CONSTANT,
      140    13651                 SEGSIZE = 1024,RESULTS = TRM_);
      141    13667        %FPT_GDS(FPTN = FPT_CGGDS,STCLASS = CONSTANT,
      142    13668                 SEGSIZE = 1024,RESULTS = CG_);
      143    13684        %VLP_VECTOR(FPTN = TRM_,STCLASS = STATIC,
      144    13685                    SEGID = '0'B);
      145    13700        %VLP_VECTOR(FPTN = CG_,STCLASS = STATIC,
      146    13701                      SEGID = '0'B);
      147    13716        %FPT_FDS (FPTN = FPT_FDS,STCLASS = STATIC);
      148    13731        %EL$DRKEY (FPTN=COM_KEY,STCLASS=STATIC);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:5    
      149    13758        %EL$TRKEY (FPTN=TRD_KEY,STCLASS=STATIC);
      150    13777        %EL$TRKEY (FPTN=TCUR_KEY,STCLASS=STATIC);
      151    13796        %EL$CGKEY (FPTN=CGRD_KEY,STCLASS=STATIC);
      152    13841        %EL$CGKEY (FPTN=CGCUR_KEY,STCLASS=STATIC);
      153    13886        %EL$CGKEY (FPTN=BIGKEY,STCLASS=STATIC);
      154    13931        %EL$TREC (FPTN=TRM_BUF,STCLASS="BASED(TRM_.PTR$)");
      155    13965        %EL$TREC (FPTN=EL$TREC,STCLASS=BASED);
      156    13999        %EL$CGREC (FPTN=CG_BUF,STCLASS="BASED(CG_.PTR$)");
      157    14058        %KC$CGID (FPTN=OCCGID,NAME='OCCG',STCLASS=CONSTANT);
      158    14084        %KC$CGID (FPTN=OSCGID,NAME='OSCG',STCLASS=CONSTANT);
      159    14110        %KC$CGID (FPTN=ISCGID,NAME='ISCG',STCLASS=CONSTANT);
      160    14136        %KC$CGID (FPTN=KC$CGID,STCLASS="BASED(REC$)");
      161    14162        %KC$CGID (FPTN=EXHUME_CGID,STCLASS=STATIC,ALIGNED=DALIGNED);
      162    14188        %EL$RENT (FPTN=EXHUME_RENT,STCLASS=STATIC,ALIGNED=DALIGNED);
      163    14245        %EL$RENT (FPTN=EL$RENT,STCLASS=BASED);
      164    14302        %KC$CGID (FPTN=UPRT,STCLASS="BASED(REC$)",LAST=",");
      165    14328    1      2 STATION CHAR(8);
      166    14329        %EL$TERM(NAME = EL$TERM,STCLASS="BASED(REC$)");
      167    14335        %EL$CGKYN (FPTN=EL$CGKYN,STCLASS="BASED(REC$)");
      168    14366        %AZ_COMACCTNG (NAME = COM_BUF,STCLASS = STATIC);
      169    14603        %EL$ENTRY (NAME = EL$ENTRY,STCLASS="BASED(RECVEC.HDR$)");
      170    14607        %KL_ADDD (NAME = KL$ADDD,STCLASS="BASED(REC$)",LAST=",",DALIGNED=ALIGNED);
      171    14666        %KC$CGID (FPTN=CGID,STCLASS=BASED,LVL=2,LAST=",");
      172    14692        %B$CGAUCI (FPTN=CGINFO,STCLASS=BASED,LAST=",",LVL=2);
      173    14714    1           3 INFO CHAR(128);
      174    14715        %KL_ACCTNG (NAME = KL$ACCTNG,STCLASS="BASED(REC$)");
      175    14729        %EL$SCREECH (NAME = EL$SCREECH,STCLASS="BASED(REC$)");
      176    14735        %OC_MESSHD_W (NAME = OCMESSHD,
      177    14736                      NPARMS = 14 ,
      178    14737                      FUNC = WR,
      179    14738                      STCLASS = STATIC);
      180    14751    1      2 LEN(0:CGNMI#) UBIN BYTE UNAL INIT(1,8,2,1,8,4,4,1,1,8,1,8,6,32),
      181    14752    1        2 FEX UBIN BYTE UNAL,
      182    14753    1        2 FEPNAME CHAR(8) UNAL,
      183    14754    1        2 PORT UBIN(18) UNAL,
      184    14755    1        2 USEAGE UBIN BYTE UNAL,
      185    14756    1        2 ASSOCTRM CHAR(8) UNAL,
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:6    
      186    14757    1        2 DEVNM CHAR(8),
      187    14758    1        2 DTW REDEF DEVNM,
      188    14759    1        3 D CHAR(4),
      189    14760    1        3 TW CHAR(4),
      190    14761    1        2 CER REDEF DEVNM,
      191    14762    1        3 CACER BIT(36),
      192    14763    1        3 * BIT(36),
      193    14764    1        2 CONNECT UBIN BYTE UNAL,
      194    14765    1        2 DISCRSN UBIN BYTE UNAL,
      195    14766    1        2 TNAME CHAR(8),
      196    14767    1        2 ACTIVE UBIN BYTE UNAL,
      197    14768    1        2 CGACCT CHAR(8),
      198    14769    1        2 CGPSN CHAR(6),
      199    14770    1        2 CGNAME CHAR(32);
      200    14771        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:7    
      201    14772        /*******************************************
      202    14773         **** Code starts here
      203    14774         *******************************************/
      204    14775    2      DO CASE(FCN);
      205    14776    2       CASE(EL_ACCTNG);
      206    14777    2         REC$ = ADDR(EL$ENTRY.INFO);
      207    14778    3         DO CASE(EL$ENTRY.TYPE);
      208    14779    3          CASE(EL_CONN);                   /* Connect                            */
      209    14780    3            CALL CONNECT ALTRET(ERR);
      210    14781    3          CASE(EL_DISC,EL_UPAC,EL_ACTIVE,EL_NOTACTIVE);
             14781                   /* Disconnect, Update Accounting, Active */
      211    14782    3            COM_KEY.L = LENGTHC(COM_KEY.DKY);
      212    14783    3            COM_KEY.DKY.FEX = KL$ACCTNG.FEX;
      213    14784    3            COM_KEY.DKY.DEVNM=KL$ACCTNG.DEVNM;
      214    14785    3            COM_KEY.DKY.LDX=KL$ACCTNG.LDCTX;
      215    14786    3            CALL M$READ(FPT_RDCOM) ALTRET(CONS_ERR);
      216    14787    3            COM_BUF.LASTUP.UTS = EL$ENTRY.UTS;
      217    14788    3            COM_BUF.FINAL.CHARIN = KL$ACCTNG.CHARIN;
      218    14789    3            COM_BUF.FINAL.CHAROUT = KL$ACCTNG.CHAROUT;
      219    14790    3            COM_BUF.FINAL.RECIN = KL$ACCTNG.RECIN;
      220    14791    3            COM_BUF.FINAL.RECOUT = KL$ACCTNG.RECOUT;
      221    14792    3            IF EL$ENTRY.TYPE=EL_DISC
      222    14793    4            THEN DO;
      223    14794    4                 COM_BUF.REASON = KL$ACCTNG.REASON;
      224    14795    4                 CALL DISCONNECT ALTRET(ERR);
      225    14796    4                 END;
      226    14797    4            ELSE DO;
      227    14798    4                 IF EL$ENTRY.TYPE = EL_ACTIVE
      228    14799    5                 THEN DO;
      229    14800    5                      COM_BUF.ACTIVE = '1'B;
      230    14801    5                      OCMESSHD.CONNECT = 8;
      231    14802    5                      CALL WR_KEYINCD;
      232    14803    5                      END;
      233    14804    4                 IF EL$ENTRY.TYPE = EL_NOTACTIVE
      234    14805    5                 THEN DO;
      235    14806    5                      COM_BUF.ACTIVE = '0'B;
      236    14807    5                      OCMESSHD.CONNECT = 9;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:8    
      237    14808    5                      CALL WR_KEYINCD;
      238    14809    5                      END;
      239    14810    4                 CALL M$WRITE(FPT_WRCOM) ALTRET(CONS_ERR);
      240    14811    4                 END;
      241    14812    3          CASE(EL_ACCTLG);                 /* Just write to :ACCTLG              */
      242    14813
      243    14814        /*
      244    14815             All sorts of records come here to be just written to the
      245    14816             accounting log.
      246    14817         */
      247    14818
      248    14819    3            FPT_WRLOG.BUF_ = VECTOR(EL$ENTRY.INFO);
      249    14820    3            FPT_WRLOG.BUF_.BOUND = (EL$ENTRY.SIZE-HDRWDS#)*4-1;
      250    14821    3            CALL M$WRITE(FPT_WRLOG) ALTRET(CONS_ERR);
      251    14822
      252    14823    3          CASE(EL_RESET);                  /* Host crash                         */
      253    14824    3            COM_KEY.DKY.FEX=0;
      254    14825    3            NDFEX=0;
      255    14826    3            CALL CRASH(%KLDR_HCRSH) ALTRET(ERR);
      256    14827                                 /* Log off all LOCAL devices only. We'll get the     */
      257    14828                                 /* rest after SLUG comes up and we have all the old  */
      258    14829                                                /* ERRLOG buffers cleaned out.        */
      259    14830    3          CASE(EL_SLUGUP);                 /* SLUG is now up (and we've cleaned  */
      260    14831                                                /* out the old ERRLOG buffers)        */
      261    14832    3            CALL M$USRFIELD(FPT_USRFIELD); /* Set JIT.USERWORD(0)                */
      262    14833                                                /* meaning that we are all the way up */
      263    14834    3            COM_KEY.DKY.FEX=1;
      264    14835    3            NDFEX=KI_FEMAX#;
      265    14836    3            CALL CRASH(%KLDR_HCRSH) ALTRET(ERR);
      266    14837                                                /* Log off all non-LOCAL devices left */
      267    14838                                                /* over from before the last crash    */
      268    14839    3          CASE(EL_FEGN);                   /* Front End Gone (crash)             */
      269    14840    3            COM_KEY.DKY.FEX=KL$ACCTNG.FEX;
      270    14841    3            NDFEX=KL$ACCTNG.FEX;
      271    14842    3            RSN = KL$ACCTNG.REASON;
      272    14843    3            IF NDFEX ~= 0
      273    14844    3            THEN
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:9    
      274    14845    3                 CALL CRASH(RSN) ALTRET(ERR);
      275    14846    3          CASE(EL_CGTOK,EL_UPRT);          /* OK to connect to CG, UnPaRTition   */
      276    14847    3            IF B$JIT.USERWORD(0)=0 THEN RETURN;
      277    14848                                                /* Not ready yet (No SLUGUP message)  */
      278    14849    3            CALL FILL_CGRD_KEY(KC$CGID);
      279    14850    3            CALL READCG ALTRET (ERR);
      280    14851    3            EXHUME_CGID=KC$CGID;
      281    14852    3            ENTX = 0;
      282    14853    4            DO WHILE (ENTX<CG_BUF.CNT);
      283    14854    4                 IF EL$ENTRY.TYPE=EL_CGTOK
      284    14855    4                   OR CG_BUF.ENT.DKEY.DEVNM(ENTX)=UPRT.STATION
      285    14856    5                 THEN DO;
      286    14857    5                      EXHUME_RENT=CG_BUF.ENT(ENTX);
      287    14858    5                      CALL M$EXHUME (FPT_EXHUME) ALTRET (EXHUME_ALT);
      288    14859    6                      DO WHILE('0'B);
      289    14860    6   EXHUME_ALT:             IF B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOCG
      290    14861    6                           THEN CALL CONSERR;
      291    14862    6                           END;
      292    14863    5                      IF EL$ENTRY.TYPE=EL_UPRT
      293    14864    5                      THEN RETURN;
      294    14865    5                      END;
      295    14866    4                 ENTX = ENTX+1;
      296    14867    4                 END;
      297    14868        /**/
      298    14869        /* If OCCG is being started, tell SLUG that ELF has completed initialization */
      299    14870        /* That is, the HOG is up.                                                   */
      300    14871        /**/
      301    14872    3            IF EXHUME_CGID=OCCGID
      302    14873    3            THEN CALL M$WRITE(FPT_WR_SLUG) ALTRET(CONS_ERR);
      303    14874    3            END;                           /* End DO CASE(EL$ENTRY.TYPE);        */
      304    14875    2       CASE(EL_TERMKEYIN);
      305    14876    2         CALL TERMKEYIN ALTRET(ERR);
      306    14877    2         END;                              /* End DO CASE(FCN);                  */
      307    14878    2      DO WHILE('0'B);
      308    14879    2   CONS_ERR: CALL CONSERR;
      309    14880    2   ERR:    END;
      310    14881    1      CALL CLEANUP;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:10   
      311    14882    1      RETURN;
      312    14883        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:11   
      313    14884    1   AZC$INIT: ENTRY ALTRET;
      314    14885        /*D* NAME: AZC$INIT
      315    14886             PURPOSE: To initialize the communications accounting portion of ELF
      316    14887             DESCRIPTION: AZC$INIT initializes all data which needs initializing
      317    14888             for communications accounting.
      318    14889        */
      319    14890    1      CGCUR_KEY = '0'B;
      320    14891    1      TCUR_KEY = '0'B;
      321    14892    1      CALL M$GDS(FPT_CGGDS) ALTRET(CNS_ERR);
      322    14893    1      CG_BUF.CNT = 0;
      323    14894    1      CALL M$GDS(FPT_TRMGDS) ALTRET(CNS_ERR);
      324    14895    1      TRM_BUF.CNT = 0;
      325    14896    2      DO WHILE('0'B);
      326    14897    2   CNS_ERR: CALL CONSERR;
      327    14898    2           ALTRETURN;
      328    14899    2           END;
      329    14900    1      RETURN;
      330    14901        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:12   
      331    14902    1   CONNECT: PROC ALTRET;
      332    14903        /*I* NAME: CONNECT
      333    14904             PURPOSE: To handle connect messages to ELF
      334    14905             DESCRIPTION: CONNECT fills in the DEVICE record, COM_BUF, and causes
      335    14906             it to be written to :COMAC.:SYS. It also adds the device to the
      336    14907             TERMINAL record in :COMAC which owns this device and if this device
      337    14908             is a COMGROUP STATION, adds it to the COMGROUP record in :COMAC
      338    14909             onto which this device is connecting.
      339    14910        */
      340    14911    2      COM_BUF = '0'B;
      341    14912    2      COM_BUF.CODE = %AZ$COMACCTNG;
      342    14913    2      COM_BUF.ACTYP = KL$ADDD.ACTYP;
      343    14914    2      COM_BUF.ATYP = KL$ADDD.ATYP;
      344    14915    2      COM_BUF.TTYP = KL$ADDD.TERMID.TTYP;
      345    14916    2      COM_BUF.FEX = KL$ADDD.FEX;
      346    14917    2      COM_BUF.SPEED = KL$ADDD.SPEED;
      347    14918    2      COM_BUF.TERMID = KL$ADDD.TERMID;
      348    14919    2      COM_BUF.TWSN = KL$ADDD.TWSN;
      349    14920    2      COM_BUF.DEVNM = KL$ADDD.DEVNM;
      350    14921    2      COM_BUF.TNAME=KL$ADDD.TNAME;
      351    14922    2      COM_BUF.ASSOCTRM = KL$ADDD.ASSOCTRM;
      352    14923    2      COM_BUF.FEPNAME = KL$ADDD.FEPNAME;
      353    14924    2      COM_BUF.LASTUP.UTS= EL$ENTRY.UTS;
      354    14925    2      COM_BUF.UTS = EL$ENTRY.UTS;
      355    14926    3      DO CASE(COM_BUF.ATYP);
      356    14927    3       CASE(%KLAT_CG#/*,%KLAT_FEP#*/);
      357    14928    3         COM_BUF.CGACCT=KL$ADDD.CGID.ACCT#;
      358    14929    3         COM_BUF.CGPSN=KL$ADDD.CGID.PSN#;
      359    14930    3         COM_BUF.CGNAME.CNT=KL$ADDD.CGID.NAME#.CNT;
      360    14931    3         COM_BUF.CGNAME.TXT=KL$ADDD.CGID.NAME#.TXT;
      361    14932    3         IF COM_BUF.ATYP=%KLAT_NETWORK#
      362    14933    3         THEN COM_BUF.USEAGE=%AZ_USEFEP#; ELSE
      363    14934    3              IF KL$ADDD.USETP
      364    14935    3              THEN COM_BUF.USEAGE=%AZ_USETP#;
      365    14936    3              ELSE IF KL$ADDD.CGID=OCCGID
      366    14937    3                   THEN COM_BUF.USEAGE=%AZ_USEOCCG#;
      367    14938    3                   ELSE IF KL$ADDD.CGID=ISCGID
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:13   
      368    14939    3                        THEN COM_BUF.USEAGE=%AZ_USEISCG#;
      369    14940    3                        ELSE IF KL$ADDD.CGID=OSCGID
      370    14941    3                             THEN COM_BUF.USEAGE=%AZ_USEOSCG#;
      371    14942    3                             ELSE COM_BUF.USEAGE=%AZ_USECG#;
      372    14943    3       CASE(%KLAT_TRM#);
      373    14944    3         COM_BUF.USEAGE = %AZ_USETRM#;
      374    14945    3       CASE(%KLAT_RES#);
      375    14946    3         COM_BUF.USEAGE = %AZ_USERES#;
      376    14947    3       CASE(%KLAT_LINE#);
      377    14948    3         COM_BUF.USEAGE = %AZ_USELINE#;
      378    14949    3       CASE(%KLAT_LNKLINE#);
      379    14950    3         COM_BUF.USEAGE = %AZ_USENET#;
      380    14951    3         END;                              /* End case                           */
      381    14952    2      IF COM_BUF.ACTYP~=%KLAC_NONE
      382    14953    3      THEN DO;
      383    14954    3           OCMESSHD.CONNECT=1;
      384    14955    3           CALL WR_KEYINCD;
      385    14956    3           END;
      386    14957    2      COM_KEY.L = LENGTHC(COM_KEY.DKY);
      387    14958    2      COM_KEY.DKY.FEX = COM_BUF.FEX;
      388    14959    2      COM_KEY.DKY.DEVNM=COM_BUF.DEVNM;
      389    14960    2      COM_KEY.DKY.LDX=KL$ADDD.LDINFO.LDCTX;
      390    14961    2      CALL M$WRITE(FPT_WRCOM) ALTRET(CONS_ERR);
      391    14962    2      IF COM_BUF.TNAME~=' *FEP*' AND COM_BUF.TNAME~=' *NOTRM*'
      392    14963    3      THEN DO;
      393    14964    3           TRD_KEY.L = LENGTHC(TRD_KEY)-1;
      394    14965    3           TRD_KEY.UFEX = %AZ_TRFEX#;
      395    14966    3           TRD_KEY.TNAME=COM_BUF.TNAME;
      396    14967    3           CALL READTRM ALTRET (ERR);
      397    14968    3           CALL GETENT(%AZ_TRFEX#) ALTRET(ERR);
      398    14969    3           TRM_BUF.ENT.ACTYP(TRM_BUF.CNT-1) = COM_BUF.ACTYP;
      399    14970    3           TRM_BUF.ENT.DKEY(TRM_BUF.CNT-1) = COM_KEY.DKY;
      400    14971    3           CALL WRTRM ALTRET(ERR);
      401    14972    3           END;
      402    14973    2      IF COM_BUF.ATYP=%KLAT_CG#            /* OR COM_BUF.ATYP=%KLAT_FEP#         */
      403    14974    3      THEN DO;
      404    14975    3           CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:14   
      405    14976    3           CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;
      406    14977    3           CGRD_KEY.CGK.CGID=KL$ADDD.CGID;
      407    14978    3           CALL READCG ALTRET (ERR);
      408    14979    3           CALL GETENT(%AZ_CGFEX#) ALTRET(ERR);
      409    14980    3           CG_BUF.ENT.ACTYP(CG_BUF.CNT-1) = COM_BUF.ACTYP;
      410    14981    3           CG_BUF.ENT.DKEY(CG_BUF.CNT-1) = COM_KEY.DKY;
      411    14982    3           CG_BUF.ENT.NOCGINF(CG_BUF.CNT-1)=KL$ADDD.NOCGINF;
      412    14983    3           CG_BUF.ENT.CGINF(CG_BUF.CNT-1)=KL$ADDD.CGINFO;
      413    14984    3           CG_BUF.ENT.LDKEY(CG_BUF.CNT-1)=KL$ADDD.LDINFO.LDCTKEY;
      414    14985    3           CALL WRCGR ALTRET(ERR);
      415    14986    3           END;
      416    14987    3      DO WHILE('0'B);
      417    14988    3   CONS_ERR: CALL CONSERR;
      418    14989    3   ERR:    ALTRETURN;
      419    14990    3           END;
      420    14991    2      RETURN;
      421    14992    2   END CONNECT;
      422    14993        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:15   
      423    14994    1   TERMKEYIN: PROC ALTRET;
      424    14995        /*I* NAME: TERMKEYIN
      425    14996             PURPOSE: To handle any KEYINs requesting information about communications
      426    14997             DESCRIPTION: TERMKEYIN reads in the TERMINAL or COMGROUP record(s)
      427    14998             which the operator requested information on and calls TRMOUT to
      428    14999             output the information.
      429    15000             If no information is found to report, TERMKEYIN outputs an appropriate
      430    15001             message to that effect.
      431    15002        */
      432    15003    2      REC$ = RECVEC.HDR$;
      433    15004    2      MSG_COUNT=0;
      434    15005    3      DO CASE (EL$TERM.KEYIN);
      435    15006    3       CASE(ELSE);
      436    15007    3         RETURN;
      437    15008    3       CASE (KEY_TERMCG#);
      438    15009    3         OCMESSHD.CONNECT=6;
      439    15010    3         CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);
      440    15011    3         CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;
      441    15012    3         CGRD_KEY.CGK.CGID=EL$CGKYN.CGID;
      442    15013    3         CALL READCG ALTRET (ERR);
      443    15014    3         DSPTYP=DSP_DEV_SUBD#;
      444    15015    3         CALL TRMOUT(%AZ_CGFEX#);
      445    15016    3       CASE (KEY_TERMSTERM#,KEY_TERMSTERMF#,KEY_STATION#);
      446    15017    3         IF EL$TERM.KEYIN=KEY_TERMSTERM#
      447    15018    4         THEN DO;
      448    15019    4              DSPTYP=DSP_SUBD#;
      449    15020    4              OCMESSHD.CONNECT=5;
      450    15021    4              END;
      451    15022    4         ELSE DO;
      452    15023    4              DSPTYP=DSP_DEV_SUBD#;
      453    15024    4              OCMESSHD.CONNECT=4;
      454    15025    4              END;
      455    15026    3         TRD_KEY.L = LENGTHC(TRD_KEY)-1;
      456    15027    3         TRD_KEY.UFEX = %AZ_TRFEX#;
      457    15028    3         TRD_KEY.TNAME=EL$TERM.TNAME;
      458    15029    3         IF TRD_KEY.TNAME=' ' THEN TRD_KEY.TNAME='LOCAL';
      459    15030    3         CALL READTRM ALTRET (ERR);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:16   
      460    15031    3         CALL TRMOUT(%AZ_TRFEX#);
      461    15032    3       CASE (KEY_TERMS#);
      462    15033    3         OCMESSHD.CONNECT=3;
      463    15034    3         DSPTYP=DSP_DEV#;
      464    15035    3         TCUR_KEY.L = LENGTHC(TCUR_KEY)-1;
      465    15036    3         TCUR_KEY.UFEX = %AZ_TRFEX#;
      466    15037    3         TCUR_KEY.TNAME=' ';
      467    15038    3         FPT_PRCTRM.V.N# = 0;
      468    15039    3         CALL M$PRECORD (FPT_PRCTRM) ALTRET (IGNOR1);
      469    15040    3   IGNOR1: FPT_PRCTRM.V.N# = 1;
      470    15041    3         FPT_RDTRMN.BUF_ = TRM_;
      471    15042    3         CALL M$READ (FPT_RDTRMN) ALTRET (RD_ALT);
      472    15043    3         TCUR_KEY = BIGKEY;
      473    15044    4         DO WHILE(TCUR_KEY.UFEX=%AZ_TRFEX#);
      474    15045    4              CALL TRMOUT(%AZ_TRFEX#);
      475    15046    4              CALL M$PRECORD (FPT_PRCTRM) ALTRET (IGNOR2);
      476    15047    5   IGNOR2:    DO WHILE('0'B);
      477    15048    5   RD_ALT:         IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
      478    15049    5                   THEN CALL M$GDS(FPT_TRMGDS) ALTRET(CONS_ERR);
      479    15050    5                   ELSE IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
      480    15051    5                        THEN GOTO NOTRM;
      481    15052    6                        ELSE DO;
      482    15053    6   CONS_ERR:                 CALL CONSERR;
      483    15054    6   ERR:                      ALTRETURN;
      484    15055    6                             END;
      485    15056    5                   END;
      486    15057    4              FPT_RDTRMN.BUF_ = TRM_;
      487    15058    4              CALL M$READ (FPT_RDTRMN) ALTRET (RD_ALT);
      488    15059    4              TCUR_KEY = BIGKEY;
      489    15060    4              END;
      490    15061    3         END;                              /* End case                           */
      491    15062    2   NOTRM: IF MSG_COUNT=0
      492    15063    3      THEN DO;
      493    15064    3           OCMESSHD.MSG#=EMPTY_TERM_MSG#;
      494    15065    3           IF EL$TERM.KEYIN=KEY_TERMCG#
      495    15066    4           THEN DO;
      496    15067    4                OCMESSHD.CGACCT=EL$CGKYN.CGID.ACCT#;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:17   
      497    15068    4                IF EL$CGKYN.CGID.ACCT#=SUBSTR(EL$CGKYN.CGID.NAME#.TXT,0,
      498    15069    4                  EL$CGKYN.CGID.NAME#.CNT)
      499    15070    4                THEN OCMESSHD.CONNECT=7;
      500    15071    5                ELSE DO;
      501    15072    5                     OCMESSHD.CGPSN=EL$CGKYN.CGID.PSN#;
      502    15073    5                     OCMESSHD.CGNAME=EL$CGKYN.CGID.NAME#.TXT;
      503    15074    5                     OCMESSHD.LEN(CGNMI#)=EL$CGKYN.CGID.NAME#.CNT;
      504    15075    5                     END;
      505    15076    4                END;
      506    15077    3           ELSE OCMESSHD.TNAME=EL$TERM.TNAME;
      507    15078    3           OCMESSHD.CADDR=EL$TERM.CADDR;
      508    15079    3           CALL M$WRITE (FPT_WR_CSCG) ALTRET (CONS_ERR);
      509    15080    3           END;
      510    15081    2      RETURN;
      511    15082        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:18   
      512    15083    2   TRMOUT: PROC(TYPE);
      513    15084        /*I* NAME: TRMOUT
      514    15085             PURPOSE: To report on the device(s) on a TERMINAL or COMGROUP
      515    15086             DESCRIPTION: TRMOUT uses type(%AZ_TRFEX# or %AZ_CGFEX#) to determine
      516    15087             which record, COMGROUP record CG_BUF or TERMINAL record TRM_BUF,
      517    15088             to report on and then reports on the devices attached to that record.
      518    15089             DSPTYP has been previously set up to describe which classes of
      519    15090             devices to report on.
      520    15091             TRMOUT then reads in the necessary DEVICE records and reports on
      521    15092             that device.
      522    15093        */
      523    15094    3   DCL TYPE SBIN;
      524    15095    3   DCL IDX SBIN;
      525    15096    3   DCL ACTYP SBIN;
      526    15097    3   DCL BLK$ PTR;
      527    15098    3      IF TYPE=%AZ_TRFEX#
      528    15099    3      THEN IDX=TRM_BUF.CNT-1;
      529    15100    3      ELSE IDX=CG_BUF.CNT-1;
      530    15101    4      DO WHILE(IDX>=0);
      531    15102    4           IF TYPE=%AZ_TRFEX#
      532    15103    4           THEN BLK$ = ADDR(TRM_BUF.ENT(IDX));
      533    15104    4           ELSE BLK$ = ADDR(CG_BUF.ENT(IDX));
      534    15105    4           ACTYP = BLK$->EL$RENT.ACTYP;
      535    15106    4           OCMESSHD.MSG# = 0;
      536    15107    5           DO CASE(DSPTYP);
      537    15108    5            CASE(DSP_DEV_SUBD#);
      538    15109    5              IF ACTYP=%KLAC_TDEV OR ACTYP=%KLAC_NONE
      539    15110    5              THEN OCMESSHD.MSG# = SUBDEV_INFO_MSG#;
      540    15111    5              ELSE OCMESSHD.MSG# = DEV_INFO_MSG#;
      541    15112    5            CASE(DSP_DEV#);
      542    15113    5              IF ACTYP=%KLAC_DEV OR ACTYP=%KLAC_TRM
      543    15114    5              THEN OCMESSHD.MSG# = DEV_INFO_MSG#;
      544    15115    5            CASE(DSP_SUBD#);
      545    15116    5              IF ACTYP=%KLAC_TRM
      546    15117    5              THEN OCMESSHD.MSG# = DEV_INFO_MSG#;
      547    15118    5              ELSE IF ACTYP~=%KLAC_DEV
      548    15119    5                   THEN OCMESSHD.MSG# = SUBDEV_INFO_MSG#;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:19   
      549    15120    5              END;
      550    15121    4           IF OCMESSHD.MSG#~=0
      551    15122    5           THEN DO;
      552    15123    5                COM_KEY.L = LENGTHC(COM_KEY.DKY);
      553    15124    5                COM_KEY.DKY = BLK$->EL$RENT.DKEY;
      554    15125    5                CALL M$READ(FPT_RDCOM) ALTRET(CONS_ERR);
      555    15126    5                OCMESSHD.CADDR=EL$TERM.CADDR;
      556    15127    5                CALL WR_KEYIN;
      557    15128    6                DO WHILE('0'B);
      558    15129    6   CONS_ERR:         CALL CONSERR;
      559    15130    6                     END;
      560    15131    5                END;
      561    15132    4           IDX = IDX-1;
      562    15133    4           END;
      563    15134    3      RETURN;
      564    15135    3   END TRMOUT;
      565    15136    2   END TERMKEYIN;
      566    15137        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:20   
      567    15138    1   CRASH: PROC(REASON) ALTRET;
      568    15139        /*I* NAME: CRASH
      569    15140             PURPOSE: To handle an FEP crash or a HOST crash by logging of devices
      570    15141             DESCRIPTION: CRASH reads in all DEVICE records for either the crashed
      571    15142             FEP or all FEPs in the event of a host crash. For each DEVICE record
      572    15143             read, CRASH calls DISCONNECT to disconnect the device and remove it
      573    15144             from its owning TERMINAL record and from its owning COMGROUP record
      574    15145             if it is a comgroup device(station). CRASH uses NDFEX as the highest
      575    15146             FEP number to disconnect devices from. Upon entry, CRASH assumes that
      576    15147             COM_KEY.FEX has been set up with the FEP number of the crashed FEP
      577    15148             or 0 if a host crash. All FEPs from COM_KEY.FEX through NDFEX are
      578    15149             affected.
      579    15150        */
      580    15151    2   DCL REASON SBIN;
      581    15152    2      COM_KEY.L = LENGTHC(COM_KEY.DKY);
      582    15153    2      COM_KEY.DKY.DEVNM=' ';
      583    15154    3      DO WHILE ('1'B);
      584    15155    3           CALL M$PRECORD(FPT_PRECORD) ALTRET(IGNORE);
      585    15156    3   IGNORE: CALL M$READ(FPT_RDCOMN) ALTRET(RD_ALT);
      586    15157    4           DO WHILE('0'B);
      587    15158    4   RD_ALT:      IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF
      588    15159    4                  OR B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
      589    15160    4                THEN RETURN;
      590    15161    4                CALL CONSERR;
      591    15162    4   ERR:         ALTRETURN;
      592    15163    4                END;
      593    15164    3           COM_KEY = BIGKEY;
      594    15165    3           IF COM_KEY.DKY.FEX>NDFEX
      595    15166    3           THEN RETURN;
      596    15167    3           COM_BUF.REASON=REASON;
      597    15168    3           CALL DISCONNECT ALTRET(ERR);
      598    15169    3           END;
      599    15170    2   END CRASH;
      600    15171        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:21   
      601    15172    1   FILL_CGRD_KEY: PROC(KC_CGID);
      602    15173        /*I* NAME: FILL_CGRD_KEY
      603    15174             PURPOSE: To fill the CGRD_KEY with info from KC_CGID
      604    15175             DESCRIPTION: FILL_CGRD_KEY takes the info in KC_CGID and places
      605    15176             it into CGRD_KEY while preserving blanks in the unused portion of
      606    15177             NAME and '0'B in the unused portion of the key
      607    15178        */
      608    15179        %KC$CGID (FPTN=KC_CGID,STCLASS=" ");
      609    15205    2      CGRD_KEY = '0'B;
      610    15206    2      CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);
      611    15207    2      CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;
      612    15208    2      CGRD_KEY.CGK.CGID.ACCT# = KC_CGID.ACCT#;
      613    15209    2      CGRD_KEY.CGK.CGID.PSN# = KC_CGID.PSN#;
      614    15210    2      CGRD_KEY.CGK.CGID.NAME#.CNT = KC_CGID.NAME#.CNT;
      615    15211    2      CGRD_KEY.CGK.CGID.NAME#.TXT = SUBSTR(KC_CGID.NAME#.TXT,0,
      616    15212    2        KC_CGID.NAME#.CNT);
      617    15213    2      RETURN;
      618    15214    2   END FILL_CGRD_KEY;
      619    15215        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:22   
      620    15216    1   READTRM: PROC ALTRET;
      621    15217        /*I* NAME: READTRM
      622    15218             PURPOSE: To read in the TERMINAL record specified by TRD_KEY
      623    15219             DESCRIPTION: READTRM reads in the TERMINAL record of key, TRD_KEY,
      624    15220             into TRM_BUF. If TCUR_KEY=TRD_KEY, no read is needed and READTRM does
      625    15221             not bother. If more space is needed in which to hold TRM_BUF, READTRM
      626    15222             acquires it.
      627    15223        */
      628    15224    2      IF TRD_KEY=TCUR_KEY
      629    15225    2      THEN RETURN;
      630    15226    2   READIT: FPT_RDTRM.BUF_ = TRM_;
      631    15227    2      CALL M$READ (FPT_RDTRM) ALTRET (RD_ALT);
      632    15228    3      DO WHILE('0'B);
      633    15229    3   RD_ALT: IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
      634    15230    4           THEN DO;
      635    15231    4   GDS:         CALL M$GDS(FPT_TRMGDS) ALTRET(CONS_ERR);
      636    15232    4                GOTO READIT;
      637    15233    4                END;
      638    15234    3           IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$NOKEY
      639    15235    3           THEN TRM_BUF.CNT = 0;           /* Empty record                       */
      640    15236    4           ELSE DO;
      641    15237    4   CONS_ERR:    TCUR_KEY = '0'B;           /* No current record                  */
      642    15238    4                CALL CONSERR;
      643    15239    4                ALTRETURN;
      644    15240    4                END;
      645    15241    3           END;
      646    15242    2      TCUR_KEY=TRD_KEY;
      647    15243    2      RETURN;
      648    15244    2   END READTRM;
      649    15245        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:23   
      650    15246    1   READCG: PROC ALTRET;
      651    15247        /*I* NAME: READCG
      652    15248             PURPOSE: To read in the COMGROUP record specified by CG_KEY
      653    15249             DESCRIPTION: READCG reads in the COMGROUP record of key, CG_KEY,
      654    15250             into CG_BUF. If CGCUR_KEY=CG_KEY, no read is needed and READCG does
      655    15251             not bother. If more space is needed in which to hold CG_BUF, READCG
      656    15252             acquires it.
      657    15253        */
      658    15254        %FPT_MADMUCK(ACCT=MADACCT,
      659    15255                     READ=YES,
      660    15256                     SN=MADSN);
      661    15272        %VLP_ACCT(FPTN=MADACCT,
      662    15273                  ACCT='        ');             /* FILLED IN BELOW                    */
      663    15286        %VLP_SN(FPTN=MADSN,
      664    15287                N=1,
      665    15288                SN='      ');                   /* FILLED IN ON CALL                  */
      666    15301    2   DCL TEMP BIT(1) AUTO;
      667    15302
      668    15303    2      TEMP = '1'B;
      669    15304    2      IF CGRD_KEY=CGCUR_KEY
      670    15305    2      THEN RETURN;
      671    15306    2   READIT: FPT_RDCGR.BUF_ = CG_;
      672    15307    2      CALL M$READ (FPT_RDCGR) ALTRET (RD_ALT);
      673    15308    3      DO WHILE('0'B);
      674    15309    3   RD_ALT: IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
      675    15310    4           THEN DO;
      676    15311    4   GDS:         CALL M$GDS(FPT_CGGDS) ALTRET(CONS_ERR);
      677    15312    4                GOTO READIT;
      678    15313    4                END;
      679    15314    4           IF TEMP THEN DO ;               /* DO THIS ONLY ONCE                  */
      680    15315    4                TEMP = '0'B;
      681    15316    4                MADACCT.ACCT#=CGRD_KEY.CGK.CGID.ACCT#;
      682    15317    4                CALL M$MADMUCK(FPT_MADMUCK) ALTRET(MADERR);
      683    15318    4                CGRD_KEY.CGK.CGID.PSN#=MADSN.SN#(0);
      684    15319    4   MADERR:      GOTO READIT;
      685    15320    4                END;
      686    15321
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:24   
      687    15322    3           IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$NOKEY
      688    15323    3           THEN CG_BUF.CNT = 0;            /* Empty record                       */
      689    15324    4           ELSE DO;
      690    15325    4   CONS_ERR:    CGCUR_KEY = '0'B;          /* No current record                  */
      691    15326    4                CALL CONSERR;
      692    15327    4                ALTRETURN;
      693    15328    4                END;
      694    15329    3           END;
      695    15330    2      CGCUR_KEY=CGRD_KEY;
      696    15331    2      RETURN;
      697    15332    2   END READCG;
      698    15333        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:25   
      699    15334    1   WRTRM: PROC ALTRET;
      700    15335        /*I* NAME: WRTRM
      701    15336             PURPOSE: To write TRM_BUF to :COMAC.:SYS or delete it from :COMAC.:SYS
      702    15337             DESCRIPTION: WRTRM writes TRM_BUF to :COMAC.:SYS using the key, TRM_KEY.
      703    15338             If TRM_BUF is empty, WRTRM will try to delete the record instead.
      704    15339        */
      705    15340    2      IF TRM_BUF.CNT>0
      706    15341    3      THEN DO;
      707    15342    3           FPT_WRTRM.BUF_ = TRM_;
      708    15343    3           FPT_WRTRM.BUF_.BOUND = 3 + TRM_BUF.CNT*SIZEC(TRM_BUF.ENT(0));
      709    15344    3           CALL M$WRITE(FPT_WRTRM) ALTRET(CONS_ERR);
      710    15345    3           END;
      711    15346    2      ELSE CALL M$DELREC(FPT_TRMDEL) ALTRET(DEL_ERR);
      712    15347    3      DO WHILE('0'B);
      713    15348    3   DEL_ERR: IF B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOKEY
      714    15349    4           THEN DO;
      715    15350    4   CONS_ERR:    CALL CONSERR;
      716    15351    4                ALTRETURN;
      717    15352    4                END;
      718    15353    3           END;
      719    15354    2      RETURN;
      720    15355    2   END WRTRM;
      721    15356        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:26   
      722    15357    1   WRCGR: PROC ALTRET;
      723    15358        /*I* NAME: WRCGR
      724    15359             PURPOSE: To write CG_BUF to :COMAC.:SYS or delete it from :COMAC.:SYS
      725    15360             DESCRIPTION: WRCGR writes CG_BUF to :COMAC.:SYS using the key, CG_KEY.
      726    15361             If CG_BUF is empty, WRCGR will try to delete the record instead.
      727    15362        */
      728    15363    2      IF CG_BUF.CNT>0
      729    15364    3      THEN DO;
      730    15365    3           FPT_WRCGR.BUF_ = CG_;
      731    15366    3           FPT_WRCGR.BUF_.BOUND = 3 + CG_BUF.CNT*SIZEC(CG_BUF.ENT(0));
      732    15367    3           CALL M$WRITE(FPT_WRCGR) ALTRET(CONS_ERR);
      733    15368    3           END;
      734    15369    2      ELSE CALL M$DELREC(FPT_CGDEL) ALTRET(DEL_ERR);
      735    15370    3      DO WHILE('0'B);
      736    15371    3   DEL_ERR: IF B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOKEY
      737    15372    4           THEN DO;
      738    15373    4   CONS_ERR:    CALL CONSERR;
      739    15374    4                ALTRETURN;
      740    15375    4                END;
      741    15376    3           END;
      742    15377    2      RETURN;
      743    15378    2   END WRCGR;
      744    15379        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:27   
      745    15380    1   GETENT: PROC(TYPE) ALTRET;
      746    15381        /*I* NAME: GETENT
      747    15382             PURPOSE: To get another entry into TRM_BUF or CG_BUF depending on TYPE
      748    15383             DESCRIPTION: GETENT assures that there is room available at the end
      749    15384             of either TRM_BUF or CG_BUF in which to place another device entr.
      750    15385             If more space is needed, GETENT performs the necessary M$GDS pmme to
      751    15386             obtain it. Either TRM_BUF.CNT or CG_BUF.CNT is incremented to reflect
      752    15387             the changed size. GETENT also zeroes out the new entry in preparation
      753    15388             for the calling procedure to fill it in. TYPE is used to determine
      754    15389             which of the two records to enlarge and may have the values %AZ_TRFEX#
      755    15390             or %AZ_CGFEX#.
      756    15391        */
      757    15392    2   DCL TYPE SBIN;
      758    15393    2      IF TYPE=%AZ_CGFEX#
      759    15394    2      THEN IF (3 + (CG_BUF.CNT+1)*SIZEC(CG_BUF.ENT(0))) > CG_.W1.VSIZE#
      760    15395    2           THEN CALL M$GDS(FPT_CGGDS) ALTRET(CONS_ERR);
      761    15396    2           ELSE ;
      762    15397    2      ELSE IF (3 + (TRM_BUF.CNT+1)*SIZEC(TRM_BUF.ENT(0))) > TRM_.W1.VSIZE#
      763    15398    2           THEN CALL M$GDS(FPT_TRMGDS) ALTRET(CONS_ERR);
      764    15399    2      IF TYPE=%AZ_CGFEX#
      765    15400    3      THEN DO;
      766    15401    3           CG_BUF.ENT(CG_BUF.CNT) = '0'B;  /* Clear out the new entry            */
      767    15402    3           CG_BUF.CNT = CG_BUF.CNT+1;
      768    15403    3           END;
      769    15404    3      ELSE DO;
      770    15405    3           TRM_BUF.ENT(TRM_BUF.CNT) = '0'B; /* Clear it out                      */
      771    15406    3           TRM_BUF.CNT = TRM_BUF.CNT+1;
      772    15407    3           END;
      773    15408    3      DO WHILE('0'B);
      774    15409    3   CONS_ERR: CALL CONSERR;
      775    15410    3           ALTRETURN;
      776    15411    3           END;
      777    15412    2      RETURN;
      778    15413    2   END GETENT;
      779    15414        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:28   
      780    15415    1   WR_KEYINCD: PROC;
      781    15416        /*I* NAME: WR_KEYINCD
      782    15417             PURPOSE: To write an informational message to the console(s)
      783    15418             DESCRIPTION: WR_KEYINCD first sets up the CADDR for a message to be
      784    15419             sent out and then sets up its MSG#. For the rest, see *I* for
      785    15420             WR_KEYIN.
      786    15421        */
      787    15422    2      IF COM_BUF.ACTYP=%KLAC_TDEV
      788    15423    3      THEN DO;
      789    15424    3           OCMESSHD.MSG#=SUBDEV_CON_MSG#;
      790    15425    3           OCMESSHD.CADDR=M_COMM|M_NONSYS;
      791    15426    3           END;
      792    15427    3      ELSE DO;
      793    15428    3           OCMESSHD.MSG#=DEV_CON_MSG#;
      794    15429    3           OCMESSHD.CADDR=M_COMM;
      795    15430    3           END;
      796    15431    2   WR_KEYIN: ENTRY;
      797    15432        /*I* NAME: WR_KEYIN
      798    15433             PURPOSE: To write a message to the console(s)
      799    15434             DESCRIPTION: WR_KEYIN fills in OCMESSHD from COM_BUF and then
      800    15435             writes this message to KEYIN. It is assumed that CADDR and MSG#
      801    15436             have been previously set up.
      802    15437        */
      803    15438    2      MSG_COUNT = MSG_COUNT+1;
      804    15439    2      OCMESSHD.DEVNM = COM_BUF.DEVNM;
      805    15440    2      OCMESSHD.ASSOCTRM = COM_BUF.ASSOCTRM;
      806    15441    2      OCMESSHD.WSN = COM_BUF.ASSOCTRM;
      807    15442    2      OCMESSHD.FEX      = COM_BUF.FEX;
      808    15443    2      OCMESSHD.FEPNAME = COM_BUF.FEPNAME;
      809    15444    2      OCMESSHD.PORT     = COM_BUF.TERMID.CHANNEL;
      810    15445    2      OCMESSHD.USEAGE=COM_BUF.USEAGE;
      811    15446    2      OCMESSHD.DISCRSN = COM_BUF.REASON;
      812    15447    2      OCMESSHD.TNAME=COM_BUF.TNAME;
      813    15448    2      IF COM_BUF.ACTIVE
      814    15449    2      THEN
      815    15450    2           OCMESSHD.ACTIVE = 1;
      816    15451    2      ELSE
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:29   
      817    15452    2           OCMESSHD.ACTIVE = 0;
      818    15453    2      OCMESSHD.CGACCT=COM_BUF.CGACCT;
      819    15454    2      OCMESSHD.CGPSN=COM_BUF.CGPSN;
      820    15455    2      OCMESSHD.CGNAME=COM_BUF.CGNAME.TXT;
      821    15456    2      OCMESSHD.LEN(CGNMI#)=COM_BUF.CGNAME.CNT;
      822    15457    2      CALL M$WRITE(FPT_WR_CSCG) ALTRET(RTN);
      823    15458    2   RTN: RETURN;
      824    15459    2   END WR_KEYINCD;
      825    15460        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:30   
      826    15461    1   DISCONNECT: PROC ALTRET;
      827    15462        /*I* NAME: DISCONNECT
      828    15463             PURPOSE: To disconnect the device of COM_BUF from the system
      829    15464             DESCRIPTION: A disconnect message is written via WR_KEYINCD.
      830    15465             The device is removed from the owning TERMINAL record
      831    15466             and if this is a COMGROUP device, it is removed from the owning
      832    15467             COMGROUP record also.
      833    15468             Finally, the COM_BUF record is deleted from the :COMAC file (it
      834    15469             is assumed that COM_KEY contains the key of COM_BUF for this to
      835    15470             work).
      836    15471        */
      837    15472    2      IF COM_BUF.ACTYP~=%KLAC_NONE
      838    15473    3      THEN DO;
      839    15474    3           IF COM_BUF.REASON~=%KLDR_HCRSH
      840    15475    4           THEN DO;
      841    15476    4                OCMESSHD.CONNECT=2;
      842    15477    4                CALL WR_KEYINCD;
      843    15478    4                END;
      844    15479    3           COM_BUF.FINAL.UTS = EL$ENTRY.UTS;
      845    15480    3           FPT_WRLOG.BUF_ = VECTOR(COM_BUF);
      846    15481    3           CALL M$WRITE (FPT_WRLOG) ALTRET(CONS_ERR);
      847    15482    3           END;
      848    15483    2      IF COM_BUF.TNAME~=' *FEP*' AND COM_BUF.TNAME~=' *NOTRM*'
      849    15484    3      THEN DO;
      850    15485    3           TRD_KEY.L = LENGTHC(TRD_KEY)-1;
      851    15486    3           TRD_KEY.UFEX = %AZ_TRFEX#;
      852    15487    3           TRD_KEY.TNAME=COM_BUF.TNAME;
      853    15488    3           CALL READTRM ALTRET (ERR);
      854    15489    3           CALL DELDEVTRM;
      855    15490    3           CALL WRTRM ALTRET(ERR);
      856    15491    3           END;
      857    15492    2      IF COM_BUF.ATYP=%KLAT_CG#            /* OR COM_BUF.ATYP=%KLAT_FEP#         */
      858    15493    3      THEN DO;
      859    15494    3           CGRD_KEY = '0'B;
      860    15495    3           CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);
      861    15496    3           CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;
      862    15497    3           CGRD_KEY.CGK.CGID.ACCT#=COM_BUF.CGACCT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:31   
      863    15498    3           CGRD_KEY.CGK.CGID.PSN#=COM_BUF.CGPSN;
      864    15499    3           CGRD_KEY.CGK.CGID.NAME#=COM_BUF.CGNAME;
      865    15500    3           CALL READCG ALTRET (ERR);
      866    15501    3           CALL DELDEVCG;
      867    15502    3           CALL WRCGR ALTRET(ERR);
      868    15503    3           END;
      869    15504    2      CALL M$DELREC(FPT_DELREC) ALTRET(CONS_ERR);
      870    15505    3      DO WHILE('0'B);
      871    15506    3   CONS_ERR: CALL CONSERR;
      872    15507    3   ERR:    ALTRETURN;
      873    15508    3           END;
      874    15509    2      RETURN;
      875    15510        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:32   
      876    15511    2   DELDEVCG: PROC;
      877    15512        /*I* NAME: DELDEVCG
      878    15513             PURPOSE: To remove the device of COM_KEY from CG_BUF
      879    15514             DESCRIPTION: DELDEVCG searches through CG_BUF for any occurrences
      880    15515             of the device of COM_KEY and removes them from CG_BUF. It is assumed
      881    15516             that the correct COM_KEY and CG_BUF have been set up previous to
      882    15517             this call.
      883    15518        */
      884    15519    3   DCL I SBIN;
      885    15520    3      I = 0;
      886    15521    4      DO WHILE(I<CG_BUF.CNT);
      887    15522    4           IF CG_BUF.ENT.DKEY(I)=COM_KEY.DKY
      888    15523    5           THEN DO;
      889    15524    5                CG_BUF.CNT = CG_BUF.CNT-1;
      890    15525    5                CG_BUF.ENT(I) = CG_BUF.ENT(CG_BUF.CNT);
      891    15526    5                END;
      892    15527    4           ELSE I = I+1;
      893    15528    4           END;
      894    15529    3      RETURN;
      895    15530    3   END DELDEVCG;
      896    15531        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:33   
      897    15532    2   DELDEVTRM: PROC;
      898    15533        /*I* NAME: DELDEVTRM
      899    15534             PURPOSE: To remove the device of COM_KEY from TRM_BUF
      900    15535             DESCRIPTION: DELDEVTRM searches through TRM_BUF for any occurrences
      901    15536             of the device of COM_KEY and removes them from TRM_BUF. It is assumed
      902    15537             that the correct COM_KEY and TRM_BUF have been set up previous to
      903    15538             this call.
      904    15539        */
      905    15540    3   DCL I SBIN;
      906    15541    3      I = 0;
      907    15542    4      DO WHILE(I<TRM_BUF.CNT);
      908    15543    4           IF TRM_BUF.ENT.DKEY(I)=COM_KEY.DKY
      909    15544    5           THEN DO;
      910    15545    5                TRM_BUF.CNT = TRM_BUF.CNT-1;
      911    15546    5                TRM_BUF.ENT(I) = TRM_BUF.ENT(TRM_BUF.CNT);
      912    15547    5                END;
      913    15548    4           ELSE I = I+1;
      914    15549    4           END;
      915    15550    3      RETURN;
      916    15551    3   END DELDEVTRM;
      917    15552    2   END DISCONNECT;
      918    15553        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:34   
      919    15554    1   CONSERR: PROC;
      920    15555        /*I* NAME: CONSERR
      921    15556             PURPOSE: To put out error messages to the SYSTEM console(s)
      922    15557             DESCRIPTION: CONSERR formats a message for KEYIN which contains
      923    15558             B$ALT.ERR destined for the SYSTEM console(s). This is intended as
      924    15559             an informational path for any unforseen problems AZC$ACCTNG may encounter.
      925    15560        */
      926    15561    2      OCMESSHD.CER.CACER=B$TCB.ALT$->B$ALT.ERR;
      927    15562    2      OCMESSHD.MSG#=BAD_COMAC_MSG#;
      928    15563    2      OCMESSHD.CADDR=M_SYS;
      929    15564        /*N* CALL M$WRITE (FPT_WR_CSCG) ALTRET (IGNORE);*/
      930    15565    2   IGNORE: RETURN;
      931    15566    2   END CONSERR;
      932    15567        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:35   
      933    15568    1   CLEANUP: PROC;
      934    15569        /*I* NAME: CLEANUP
      935    15570             PURPOSE: To do any cleanup necessary before returning from AZC$ACCTNG
      936    15571             DESCRIPTION: CLEANUP releases excess memory pages held by CG_ and
      937    15572             TRM_. At least 1 page apiece is retained (if it exists already).
      938    15573        */
      939    15574    2      CALL DUMPMEM(TRM_,4+TRM_BUF.CNT*SIZEC(TRM_BUF.ENT(0)));
      940    15575    2      CALL DUMPMEM(CG_,4+CG_BUF.CNT*SIZEC(CG_BUF.ENT(0)));
      941    15576        /**/
      942    15577        /**/
      943    15578    2   DUMPMEM: PROC(VEC_,SIZ);
      944    15579        /*I* NAME: DUMPMEM
      945    15580             PURPOSE: To dump any excess memory from VEC_
      946    15581             DESCRIPTION: DUMPMEM calls M$FDS to release any memory from VEC_ in
      947    15582             excess of the number pages needed to hold SIZ characters while not
      948    15583             completely releasing the area.
      949    15584        */
      950    15585        %VLP_VECTOR(FPTN = VEC_,STCLASS=" ");
      951    15600    3   DCL SIZ SBIN;
      952    15601    3   DCL XPGS SBIN;
      953    15602    3   DCL CURPGS SBIN;
      954    15603    3      CURPGS = (VEC_.W1.VSIZE#+4096)/4096;
      955    15604    3      XPGS = CURPGS - (SIZ+4095)/4096;
      956    15605    3      IF CURPGS-XPGS=0
      957    15606    3      THEN XPGS=XPGS-1;                    /* Don't release all memory           */
      958    15607    3      IF XPGS>0
      959    15608    4      THEN DO;                             /* Excess pages to release            */
      960    15609    4           FPT_FDS.RESULTS_ = VECTOR(VEC_);
      961    15610    4           FPT_FDS.V.SEGSIZE# = XPGS*1024;
      962    15611    4           CALL M$FDS(FPT_FDS) ALTRET(CONS_ERR);
      963    15612    4           END;
      964    15613    4      DO WHILE('0'B);
      965    15614    4   CONS_ERR: CALL CONSERR;
      966    15615    4           END;
      967    15616    3      RETURN;
      968    15617    3   END DUMPMEM;
      969    15618    2   END CLEANUP;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:36   
      970    15619    1   END AZC$ACCTNG;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:37   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL_MACRO_C.:E05TOU  is referenced.
   EL_DATA_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure AZC$ACCTNG.

   Procedure AZC$ACCTNG requires 1377 words for executable code.
   Procedure AZC$ACCTNG requires 28 words of local(AUTO) storage.

    No errors detected in file AZC$ACCTNG.:E05TSI    .

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:38   

 Object Unit name= AZC$ACCTNG                                 File name= AZC$ACCTNG.:E05TOU
 UTS= JUL 29 '97 11:04:39.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  F$ACCTNG
    2   DCB   even  none     0      0  F$COMAC
    3   DCB   even  none     0      0  F$CSCG
    4   Data  even  none   292    444  AZC$ACCTNG
    5  RoData even  UTS    182    266  AZC$ACCTNG
    6   Proc  even  none  1377   2541  AZC$ACCTNG
    7  RoData even  none    13     15  AZC$ACCTNG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes    yes     yes      Std        2  AZC$ACCTNG
     6    354          yes     yes      Std        0  AZC$INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:39   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                B$JIT$
     F$ACCTNG                              F$COMAC                               F$CSCG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:40   


        1        1        /*M* AZC$ACCTNG An ELF module which performs communications accounting */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8        AZC$ACCTNG: PROC(RECVEC,FCN) ALTRET;

      8  6 000000   000000 700200 xent  AZC$ACCTNG   TSX0  ! X66_AUTO_2
         6 000001   000034 000002                    ZERO    28,2

        9        9        /*D* NAME: AZC$ACCTNG
       10       10             CALL: CALL AZC$ACCTNG(RECVEC,FCN) ALTRET;
       11       11                    where RECVEC is a vector framing an input record from ELF
       12       12                    and FCN is a word determining what function to perform.
       13       13                        FCN determines whether RECVEC is from a KEYIN or an M$WRSYSLOG.
       14       14             DESCRIPTION: AZC$ACCTNG performs communications accounting functions
       15       15                          for the ELF system ghost. These functions include:
       16       16                            1) Informing the operator(s) of terminal, device and
       17       17                               sub-device connects and of terminal and device
       18       18                               disconnects
       19       19                            2) Maintaining accounting information on all terminals and
       20       20                               devices logged on to the system.
       21       21                            3) Writing an accounting record, COMACCTNG, to
       22       22                               :ACCTLG.:SYS for all terminals and devices upon
       23       23                               disconnect. This disconnect may take the form of
       24       24                               either a 'normal' disconnect, an FEP crash, or a
       25       25                               host crash.
       26       26                            4) M$EXHUMEing any communications devices attached
       27       27                               to a now available comgroup -or-
       28       28                               a communications device being unpartitioned
       29       29                          If any unexpected ALTRET occurs, AZC$ACCTNG will ALTRET
       30       30                          immediately.
       31       31        */
       32       32        %INCLUDE AZ_MACRO_C;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:41   
       33     2619        %INCLUDE AZ_SUBS_C;
       34     2688        %INCLUDE B_ERRORS_C;
       35     3815 S      %INCLUDE B$JIT_C;
       36     3816        %INCLUDE CP_6;
       37     3897        %INCLUDE CP_6_SUBS;
       38     4437        %INCLUDE EL_DATA_C;
       39     4449        %INCLUDE EL_MACRO_C;
       40     4618        %INCLUDE EL_SUBS_C;
       41     4702        %INCLUDE EL$TABLES;
       42     5025        %INCLUDE JC_MACRO_C;
       43     5139        %INCLUDE JG_EVID_C;
       44     5364        %INCLUDE JG_GHOSTS_C;
       45     5454        %INCLUDE KC$CGBLK;
       46     5502        %INCLUDE KI_SUBS_C;
       47     5638        %INCLUDE KL_MACRO_C;
       48     8990        %INCLUDE KL_SUBS_C;
       49     9044        %INCLUDE KL_SUPER_C;
       50    11946        %INCLUDE OC_MESSHD_C;
       51    11999        %INCLUDE OC_SUBS_C;
       52    12730        /**/
       53    12731        %SUB DSP_DEV_SUBD#=0;                   /* DISPLAY DEVICES AND SUB-DEVICES    */
       54    12732        %SUB DSP_DEV#=1;                        /* DISPLAY DEVICES ONLY               */
       55    12733        %SUB DSP_SUBD#=2;                       /* DISPLAY SUB-DEVICES ONLY           */
       56    12734        /**/
       57    12735        /**/
       58    12736        %SUB CGNMI#=13;                    /* CGNAME MUST BE LAST PARM - 13 TO KEYIN  */
       59    12737        /**/
       60    12738        /**/
       61    12739    1   DCL B$TCB$ PTR SYMREF;
       62    12740    1   DCL B$JIT$ PTR SYMREF;
       63    12741        %B$TCB(STCLASS="BASED(B$TCB$)");
       64    12744        %B$ALT;
       65    12752        %B$JIT0(STCLASS="BASED(B$JIT$)");
       66    12841        %U$JIT1;
       67    12915        %M$JIT2X;
       68    12918        %F$JIT3X;
       69    12921        %S$JIT4X;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:42   
       70    12924        %J$JIT5;
       71    13012        %A$JIT6X;
       72    13015    1   DCL F$ACCTNG DCB;
       73    13016    1   DCL F$COMAC DCB;                        /* To :COMAC.:SYS                     */
       74    13017    1   DCL F$CSCG DCB;                         /* To CG/CSCG.:SYS                    */
       75    13018    1   DCL 1 RECVEC,
       76    13019    1         2 * BIT(36),
       77    13020    1         2 HDR$ PTR;
       78    13021    1   DCL FCN UBIN;
       79    13022    1   DCL REC$ PTR;
       80    13023    1   DCL DSPTYP UBIN WORD;
       81    13024    1   DCL NDFEX UBIN WORD;
       82    13025    1   DCL ENTX SBIN;
       83    13026    1   DCL PREVX SBIN;
       84    13027    1   DCL RSN SBIN;
       85    13028    1   DCL PREV$ PTR;
       86    13029    1   DCL MSG_COUNT UBIN WORD;
       87    13030        %FPT_WRITE (FPTN=FPT_WRLOG,WAIT=YES,DCB=F$ACCTNG);
       88    13061        %FPT_USRFIELD(FPTN=FPT_USRFIELD,STCLASS=CONSTANT,USER=YES,FIELD0=1);
       89    13078        %FPT_WRITE (FPTN=FPT_WR_SLUG,STCLASS=CONSTANT,DCB=F$CSCG,
       90    13079                 BUF=JC_CITE,STATION=SLUG_STA);
       91    13110        %VLP_STATION (FPTN=SLUG_STA,STCLASS=CONSTANT,STATION='SLUG');
       92    13137        %JC_CITE (FPTN=JC_CITE,STCLASS=CONSTANT,
       93    13138                    TYP=PCMP,COD=JCEV_PCMP#,USR=JG_ELF#);
       94    13188        %FPT_WRITE (FPTN = FPT_WR_CSCG,STCLASS = CONSTANT,
       95    13189                    BUF  = OCMESSHD,
       96    13190                    DCB  = F$CSCG);
       97    13221        %FPT_WRITE (FPTN = FPT_WRCOM,
       98    13222                    DCB  = F$COMAC,
       99    13223                    BUF  = COM_BUF,
      100    13224                    KEY  = COM_KEY,
      101    13225                    ONEWKEY = YES,
      102    13226                    STCLASS = CONSTANT);
      103    13257        %FPT_WRITE (FPTN=FPT_WRTRM,DCB=F$COMAC,KEY=TRD_KEY,
      104    13258                    ONEWKEY=YES,STCLASS=STATIC);
      105    13289        %FPT_WRITE (FPTN=FPT_WRCGR,DCB=F$COMAC,KEY=CGRD_KEY,
      106    13290                    ONEWKEY=YES,STCLASS=STATIC);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:43   
      107    13321        %FPT_READ (FPTN = FPT_RDCOM,
      108    13322                   DCB  = F$COMAC,
      109    13323                   BUF  = COM_BUF,
      110    13324                   KEY  = COM_KEY,
      111    13325                   KEYS = YES,
      112    13326                   STCLASS = CONSTANT);
      113    13365        %FPT_READ (FPTN=FPT_RDCOMN,DCB=F$COMAC,BUF=COM_BUF,KEY=BIGKEY,
      114    13366                   KEYR=YES,STCLASS=CONSTANT);
      115    13405        %FPT_READ (FPTN=FPT_RDTRM,DCB=F$COMAC,KEY=TRD_KEY,
      116    13406                   KEYS=YES,STCLASS=STATIC);
      117    13445        %FPT_READ (FPTN=FPT_RDTRMN,DCB=F$COMAC,KEY=BIGKEY,
      118    13446                   KEYR=YES,STCLASS=STATIC);
      119    13485        %FPT_READ (FPTN=FPT_RDCGR,DCB=F$COMAC,KEY=CGRD_KEY,
      120    13486                   KEYS=YES,STCLASS=STATIC);
      121    13525        %FPT_PRECORD (FPTN = FPT_PRECORD,
      122    13526                      DCB  = F$COMAC,
      123    13527                      KEY  = COM_KEY,
      124    13528                      KEYS = YES,
      125    13529                      N = 0,
      126    13530                      STCLASS = CONSTANT);
      127    13551        %FPT_PRECORD (FPTN=FPT_PRCTRM,STCLASS=STATIC,DCB=F$COMAC,KEYS=YES,
      128    13552                      KEY=TCUR_KEY);
      129    13573        %FPT_DELREC (FPTN = FPT_DELREC,
      130    13574                     DCB  = F$COMAC,
      131    13575                     KEY  = COM_KEY,
      132    13576                     STCLASS = CONSTANT);
      133    13595        %FPT_DELREC(FPTN = FPT_TRMDEL,STCLASS = CONSTANT,
      134    13596                    DCB = F$COMAC,KEY = TRD_KEY);
      135    13615        %FPT_DELREC(FPTN = FPT_CGDEL,STCLASS = CONSTANT,
      136    13616                    DCB = F$COMAC,KEY = CGRD_KEY);
      137    13635        %FPT_EXHUME (FPTN=FPT_EXHUME,STCLASS=CONSTANT,
      138    13636                    CGID=EXHUME_CGID,RENT=EXHUME_RENT);
      139    13650        %FPT_GDS(FPTN = FPT_TRMGDS,STCLASS = CONSTANT,
      140    13651                 SEGSIZE = 1024,RESULTS = TRM_);
      141    13667        %FPT_GDS(FPTN = FPT_CGGDS,STCLASS = CONSTANT,
      142    13668                 SEGSIZE = 1024,RESULTS = CG_);
      143    13684        %VLP_VECTOR(FPTN = TRM_,STCLASS = STATIC,
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:44   
      144    13685                    SEGID = '0'B);
      145    13700        %VLP_VECTOR(FPTN = CG_,STCLASS = STATIC,
      146    13701                      SEGID = '0'B);
      147    13716        %FPT_FDS (FPTN = FPT_FDS,STCLASS = STATIC);
      148    13731        %EL$DRKEY (FPTN=COM_KEY,STCLASS=STATIC);
      149    13758        %EL$TRKEY (FPTN=TRD_KEY,STCLASS=STATIC);
      150    13777        %EL$TRKEY (FPTN=TCUR_KEY,STCLASS=STATIC);
      151    13796        %EL$CGKEY (FPTN=CGRD_KEY,STCLASS=STATIC);
      152    13841        %EL$CGKEY (FPTN=CGCUR_KEY,STCLASS=STATIC);
      153    13886        %EL$CGKEY (FPTN=BIGKEY,STCLASS=STATIC);
      154    13931        %EL$TREC (FPTN=TRM_BUF,STCLASS="BASED(TRM_.PTR$)");
      155    13965        %EL$TREC (FPTN=EL$TREC,STCLASS=BASED);
      156    13999        %EL$CGREC (FPTN=CG_BUF,STCLASS="BASED(CG_.PTR$)");
      157    14058        %KC$CGID (FPTN=OCCGID,NAME='OCCG',STCLASS=CONSTANT);
      158    14084        %KC$CGID (FPTN=OSCGID,NAME='OSCG',STCLASS=CONSTANT);
      159    14110        %KC$CGID (FPTN=ISCGID,NAME='ISCG',STCLASS=CONSTANT);
      160    14136        %KC$CGID (FPTN=KC$CGID,STCLASS="BASED(REC$)");
      161    14162        %KC$CGID (FPTN=EXHUME_CGID,STCLASS=STATIC,ALIGNED=DALIGNED);
      162    14188        %EL$RENT (FPTN=EXHUME_RENT,STCLASS=STATIC,ALIGNED=DALIGNED);
      163    14245        %EL$RENT (FPTN=EL$RENT,STCLASS=BASED);
      164    14302        %KC$CGID (FPTN=UPRT,STCLASS="BASED(REC$)",LAST=",");
      165    14328    1      2 STATION CHAR(8);
      166    14329        %EL$TERM(NAME = EL$TERM,STCLASS="BASED(REC$)");
      167    14335        %EL$CGKYN (FPTN=EL$CGKYN,STCLASS="BASED(REC$)");
      168    14366        %AZ_COMACCTNG (NAME = COM_BUF,STCLASS = STATIC);
      169    14603        %EL$ENTRY (NAME = EL$ENTRY,STCLASS="BASED(RECVEC.HDR$)");
      170    14607        %KL_ADDD (NAME = KL$ADDD,STCLASS="BASED(REC$)",LAST=",",DALIGNED=ALIGNED);
      171    14666        %KC$CGID (FPTN=CGID,STCLASS=BASED,LVL=2,LAST=",");
      172    14692        %B$CGAUCI (FPTN=CGINFO,STCLASS=BASED,LAST=",",LVL=2);
      173    14714    1           3 INFO CHAR(128);
      174    14715        %KL_ACCTNG (NAME = KL$ACCTNG,STCLASS="BASED(REC$)");
      175    14729        %EL$SCREECH (NAME = EL$SCREECH,STCLASS="BASED(REC$)");
      176    14735        %OC_MESSHD_W (NAME = OCMESSHD,
      177    14736                      NPARMS = 14 ,
      178    14737                      FUNC = WR,
      179    14738                      STCLASS = STATIC);
      180    14751    1      2 LEN(0:CGNMI#) UBIN BYTE UNAL INIT(1,8,2,1,8,4,4,1,1,8,1,8,6,32),
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:45   
      181    14752    1        2 FEX UBIN BYTE UNAL,
      182    14753    1        2 FEPNAME CHAR(8) UNAL,
      183    14754    1        2 PORT UBIN(18) UNAL,
      184    14755    1        2 USEAGE UBIN BYTE UNAL,
      185    14756    1        2 ASSOCTRM CHAR(8) UNAL,
      186    14757    1        2 DEVNM CHAR(8),
      187    14758    1        2 DTW REDEF DEVNM,
      188    14759    1        3 D CHAR(4),
      189    14760    1        3 TW CHAR(4),
      190    14761    1        2 CER REDEF DEVNM,
      191    14762    1        3 CACER BIT(36),
      192    14763    1        3 * BIT(36),
      193    14764    1        2 CONNECT UBIN BYTE UNAL,
      194    14765    1        2 DISCRSN UBIN BYTE UNAL,
      195    14766    1        2 TNAME CHAR(8),
      196    14767    1        2 ACTIVE UBIN BYTE UNAL,
      197    14768    1        2 CGACCT CHAR(8),
      198    14769    1        2 CGPSN CHAR(6),
      199    14770    1        2 CGNAME CHAR(32);
      200    14771        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:46   
      201    14772        /*******************************************
      202    14773         **** Code starts here
      203    14774         *******************************************/
      204    14775    2      DO CASE(FCN);

  14775  6 000002   200004 470500                    LDP0    @FCN,,AUTO
         6 000003   000000 235100                    LDA     0,,PR0
         6 000004   000003 115007                    CMPA    3,DL
         6 000005   000007 602005 6                  TNC     s:14775+5,AL
         6 000006   000346 710000 6                  TRA     s:14878
         6 000007   000346 710000 6                  TRA     s:14878
         6 000010   000344 710000 6                  TRA     s:14876
         6 000011   000012 710000 6                  TRA     s:14777

      205    14776    2       CASE(EL_ACCTNG);

      206    14777    2         REC$ = ADDR(EL$ENTRY.INFO);

  14777  6 000012   200003 471500                    LDP1    @RECVEC,,AUTO
         6 000013   100001 473500                    LDP3    1,,PR1
         6 000014   300005 634500                    EPPR4   5,,PR3
         6 000015   200005 454500                    STP4    REC$,,AUTO

      207    14778    3         DO CASE(EL$ENTRY.TYPE);

  14778  6 000016   300000 236100                    LDQ     0,,PR3
         6 000017   000033 772000                    QRL     27
         6 000020   000014 116007                    CMPQ    12,DL
         6 000021   000023 602006 6                  TNC     s:14778+5,QL
         6 000022   000346 710000 6                  TRA     s:14878
         6 000023   000343 710000 6                  TRA     s:14874
         6 000024   000037 710000 6                  TRA     s:14780
         6 000025   000042 710000 6                  TRA     s:14782
         6 000026   000042 710000 6                  TRA     s:14782
         6 000027   000212 710000 6                  TRA     s:14840
         6 000030   000143 710000 6                  TRA     s:14819
         6 000031   000233 710000 6                  TRA     s:14847
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:47   
         6 000032   000233 710000 6                  TRA     s:14847
         6 000033   000166 710000 6                  TRA     s:14824
         6 000034   000176 710000 6                  TRA     s:14832
         6 000035   000042 710000 6                  TRA     s:14782
         6 000036   000042 710000 6                  TRA     s:14782

      208    14779    3          CASE(EL_CONN);                   /* Connect                            */

      209    14780    3            CALL CONNECT ALTRET(ERR);

  14780  6 000037   000405 701000 6                  TSX1    CONNECT
         6 000040   000351 702000 6                  TSX2    ERR
         6 000041   000346 710000 6                  TRA     s:14878

      210    14781    3          CASE(EL_DISC,EL_UPAC,EL_ACTIVE,EL_NOTACTIVE);
             14781                   /* Disconnect, Update Accounting, Active */

      211    14782    3            COM_KEY.L = LENGTHC(COM_KEY.DKY);

  14782  6 000042   013000 236003                    LDQ     5632,DU
         6 000043   000142 552040 4                  STBQ    COM_KEY,'40'O

      212    14783    3            COM_KEY.DKY.FEX = KL$ACCTNG.FEX;

  14783  6 000044   400000 236100                    LDQ     0,,PR4
         6 000045   000011 772000                    QRL     9
         6 000046   000142 552020 4                  STBQ    COM_KEY,'20'O

      213    14784    3            COM_KEY.DKY.DEVNM=KL$ACCTNG.DEVNM;

  14784  6 000047   040000 100500                    MLR     fill='040'O
         6 000050   400001 000010                    ADSC9   1,,PR4                   cn=0,n=8
         6 000051   000142 400010 4                  ADSC9   COM_KEY                  cn=2,n=8

      214    14785    3            COM_KEY.DKY.LDX=KL$ACCTNG.LDCTX;

  14785  6 000052   400000 720100                    LXL0    0,,PR4
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:48   
         6 000053   000144 440000 4                  SXL0    COM_KEY+2

      215    14786    3            CALL M$READ(FPT_RDCOM) ALTRET(CONS_ERR);

  14786  6 000054   000064 630400 5                  EPPR0   FPT_RDCOM
         6 000055   440000 713400                    CLIMB   alt,read
         6 000056   401400 401760                    pmme    nvectors=4
         6 000057   000347 702000 6                  TSX2    CONS_ERR

      216    14787    3            COM_BUF.LASTUP.UTS = EL$ENTRY.UTS;

  14787  6 000060   200003 470500                    LDP0    @RECVEC,,AUTO
         6 000061   000001 471500                    LDP1    1,,PR0
         6 000062   100000 235100                    LDA     0,,PR1
         6 000063   100001 236100                    LDQ     1,,PR1
         6 000064   000011 773000                    LRL     9
         6 000065   000340 756000 4                  STQ     COM_BUF+14

      217    14788    3            COM_BUF.FINAL.CHARIN = KL$ACCTNG.CHARIN;

  14788  6 000066   200005 471500                    LDP1    REC$,,AUTO
         6 000067   100003 235100                    LDA     3,,PR1
         6 000070   000342 755000 4                  STA     COM_BUF+16

      218    14789    3            COM_BUF.FINAL.CHAROUT = KL$ACCTNG.CHAROUT;

  14789  6 000071   100004 235100                    LDA     4,,PR1
         6 000072   000343 755000 4                  STA     COM_BUF+17

      219    14790    3            COM_BUF.FINAL.RECIN = KL$ACCTNG.RECIN;

  14790  6 000073   100005 235100                    LDA     5,,PR1
         6 000074   000344 755000 4                  STA     COM_BUF+18

      220    14791    3            COM_BUF.FINAL.RECOUT = KL$ACCTNG.RECOUT;

  14791  6 000075   100006 235100                    LDA     6,,PR1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:49   
         6 000076   000345 755000 4                  STA     COM_BUF+19

      221    14792    3            IF EL$ENTRY.TYPE=EL_DISC

  14792  6 000077   000001 473500                    LDP3    1,,PR0
         6 000100   300000 236100                    LDQ     0,,PR3
         6 000101   777000 376003                    ANQ     -512,DU
         6 000102   002000 116003                    CMPQ    1024,DU
         6 000103   000112 601000 6                  TNZ     s:14798

      222    14793    4            THEN DO;

      223    14794    4                 COM_BUF.REASON = KL$ACCTNG.REASON;

  14794  6 000104   100000 236100                    LDQ     0,,PR1
         6 000105   000011 736000                    QLS     9
         6 000106   000323 552040 4                  STBQ    COM_BUF+1,'40'O

      224    14795    4                 CALL DISCONNECT ALTRET(ERR);

  14795  6 000107   002202 701000 6                  TSX1    DISCONNECT
         6 000110   000351 702000 6                  TSX2    ERR

      225    14796    4                 END;

  14796  6 000111   000346 710000 6                  TRA     s:14878

      226    14797    4            ELSE DO;

      227    14798    4                 IF EL$ENTRY.TYPE = EL_ACTIVE

  14798  6 000112   012000 116003                    CMPQ    5120,DU
         6 000113   000122 601000 6                  TNZ     s:14804

      228    14799    5                 THEN DO;

      229    14800    5                      COM_BUF.ACTIVE = '1'B;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:50   

  14800  6 000114   000400 236007                    LDQ     256,DL
         6 000115   000335 256000 4                  ORSQ    COM_BUF+11

      230    14801    5                      OCMESSHD.CONNECT = 8;

  14801  6 000116   010000 236007                    LDQ     4096,DL
         6 000117   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      231    14802    5                      CALL WR_KEYINCD;

  14802  6 000120   002072 701000 6                  TSX1    WR_KEYINCD
         6 000121   000000 011000                    NOP     0

      232    14803    5                      END;

      233    14804    4                 IF EL$ENTRY.TYPE = EL_NOTACTIVE

  14804  6 000122   200003 470500                    LDP0    @RECVEC,,AUTO
         6 000123   000001 471500                    LDP1    1,,PR0
         6 000124   100000 236100                    LDQ     0,,PR1
         6 000125   777000 376003                    ANQ     -512,DU
         6 000126   013000 116003                    CMPQ    5632,DU
         6 000127   000136 601000 6                  TNZ     s:14810

      234    14805    5                 THEN DO;

      235    14806    5                      COM_BUF.ACTIVE = '0'B;

  14806  6 000130   000000 236000 7                  LDQ     0
         6 000131   000335 356000 4                  ANSQ    COM_BUF+11

      236    14807    5                      OCMESSHD.CONNECT = 9;

  14807  6 000132   011000 236007                    LDQ     4608,DL
         6 000133   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:51   
      237    14808    5                      CALL WR_KEYINCD;

  14808  6 000134   002072 701000 6                  TSX1    WR_KEYINCD
         6 000135   000000 011000                    NOP     0

      238    14809    5                      END;

      239    14810    4                 CALL M$WRITE(FPT_WRCOM) ALTRET(CONS_ERR);

  14810  6 000136   000050 630400 5                  EPPR0   FPT_WRCOM
         6 000137   440001 713400                    CLIMB   alt,write
         6 000140   401400 401760                    pmme    nvectors=4
         6 000141   000347 702000 6                  TSX2    CONS_ERR

      240    14811    4                 END;

  14811  6 000142   000346 710000 6                  TRA     s:14878

      241    14812    3          CASE(EL_ACCTLG);                 /* Just write to :ACCTLG              */

      242    14813
      243    14814        /*
      244    14815             All sorts of records come here to be just written to the
      245    14816             accounting log.
      246    14817         */
      247    14818
      248    14819    3            FPT_WRLOG.BUF_ = VECTOR(EL$ENTRY.INFO);

  14819  6 000143   777640 235007                    LDA     -96,DL
         6 000144   200030 453500                    STP3    CURPGS+4,,AUTO
         6 000145   200030 236100                    LDQ     CURPGS+4,,AUTO
         6 000146   000005 036003                    ADLQ    5,DU
         6 000147   000004 757000 4                  STAQ    FPT_WRLOG+4

      249    14820    3            FPT_WRLOG.BUF_.BOUND = (EL$ENTRY.SIZE-HDRWDS#)*4-1;

  14820  6 000150   100001 473500                    LDP3    1,,PR1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:52   
         6 000151   300000 236100                    LDQ     0,,PR3
         6 000152   000007 772000                    QRL     7
         6 000153   000001 376000 7                  ANQ     1
         6 000154   000025 136007                    SBLQ    21,DL
         6 000155   000020 736000                    QLS     16
         6 000156   000004 676000 4                  ERQ     FPT_WRLOG+4
         6 000157   000034 376000 xsym               ANQ     B_VECTNIL+28
         6 000160   000004 656000 4                  ERSQ    FPT_WRLOG+4

      250    14821    3            CALL M$WRITE(FPT_WRLOG) ALTRET(CONS_ERR);

  14821  6 000161   000000 630400 4                  EPPR0   FPT_WRLOG
         6 000162   440001 713400                    CLIMB   alt,write
         6 000163   401400 401760                    pmme    nvectors=4
         6 000164   000347 702000 6                  TSX2    CONS_ERR
         6 000165   000346 710000 6                  TRA     s:14878

      251    14822
      252    14823    3          CASE(EL_RESET);                  /* Host crash                         */

      253    14824    3            COM_KEY.DKY.FEX=0;

  14824  6 000166   000000 236003                    LDQ     0,DU
         6 000167   000142 552020 4                  STBQ    COM_KEY,'20'O

      254    14825    3            NDFEX=0;

  14825  6 000170   200007 450100                    STZ     NDFEX,,AUTO

      255    14826    3            CALL CRASH(%KLDR_HCRSH) ALTRET(ERR);

  14826  6 000171   000002 236000 7                  LDQ     2
         6 000172   200017 756100                    STQ     MSG_COUNT+3,,AUTO
         6 000173   001414 701000 6                  TSX1    CRASH
         6 000174   000351 702000 6                  TSX2    ERR
         6 000175   000346 710000 6                  TRA     s:14878

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:53   
      256    14827                                 /* Log off all LOCAL devices only. We'll get the     */
      257    14828                                 /* rest after SLUG comes up and we have all the old  */
      258    14829                                                /* ERRLOG buffers cleaned out.        */
      259    14830    3          CASE(EL_SLUGUP);                 /* SLUG is now up (and we've cleaned  */

      260    14831                                                /* out the old ERRLOG buffers)        */
      261    14832    3            CALL M$USRFIELD(FPT_USRFIELD); /* Set JIT.USERWORD(0)                */

  14832  6 000176   000000 630400 5                  EPPR0   FPT_USRFIELD
         6 000177   020017 713400                    CLIMB   8207
         6 000200   400000 401760                    pmme    nvectors=1

      262    14833                                                /* meaning that we are all the way up */
      263    14834    3            COM_KEY.DKY.FEX=1;

  14834  6 000201   000001 236003                    LDQ     1,DU
         6 000202   000142 552020 4                  STBQ    COM_KEY,'20'O

      264    14835    3            NDFEX=KI_FEMAX#;

  14835  6 000203   000143 235007                    LDA     99,DL
         6 000204   200007 755100                    STA     NDFEX,,AUTO

      265    14836    3            CALL CRASH(%KLDR_HCRSH) ALTRET(ERR);

  14836  6 000205   000002 236000 7                  LDQ     2
         6 000206   200017 756100                    STQ     MSG_COUNT+3,,AUTO
         6 000207   001414 701000 6                  TSX1    CRASH
         6 000210   000351 702000 6                  TSX2    ERR
         6 000211   000346 710000 6                  TRA     s:14878

      266    14837                                                /* Log off all non-LOCAL devices left */
      267    14838                                                /* over from before the last crash    */
      268    14839    3          CASE(EL_FEGN);                   /* Front End Gone (crash)             */

      269    14840    3            COM_KEY.DKY.FEX=KL$ACCTNG.FEX;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:54   
  14840  6 000212   400000 236100                    LDQ     0,,PR4
         6 000213   000011 772000                    QRL     9
         6 000214   000142 552020 4                  STBQ    COM_KEY,'20'O

      270    14841    3            NDFEX=KL$ACCTNG.FEX;

  14841  6 000215   400000 236100                    LDQ     0,,PR4
         6 000216   000033 772000                    QRL     27
         6 000217   200007 756100                    STQ     NDFEX,,AUTO

      271    14842    3            RSN = KL$ACCTNG.REASON;

  14842  6 000220   400000 236100                    LDQ     0,,PR4
         6 000221   000022 772000                    QRL     18
         6 000222   000777 376007                    ANQ     511,DL
         6 000223   200012 756100                    STQ     RSN,,AUTO

      272    14843    3            IF NDFEX ~= 0

  14843  6 000224   200007 235100                    LDA     NDFEX,,AUTO
         6 000225   000346 600000 6                  TZE     s:14878

      273    14844    3            THEN
      274    14845    3                 CALL CRASH(RSN) ALTRET(ERR);

  14845  6 000226   200012 633500                    EPPR3   RSN,,AUTO
         6 000227   200017 453500                    STP3    MSG_COUNT+3,,AUTO
         6 000230   001414 701000 6                  TSX1    CRASH
         6 000231   000351 702000 6                  TSX2    ERR
         6 000232   000346 710000 6                  TRA     s:14878

      275    14846    3          CASE(EL_CGTOK,EL_UPRT);          /* OK to connect to CG, UnPaRTition   */

      276    14847    3            IF B$JIT.USERWORD(0)=0 THEN RETURN;

  14847  6 000233   000000 475400 xsym               LDP5    B$JIT$
         6 000234   500133 220100                    LDX0    91,,PR5
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:55   
         6 000235   000237 601000 6                  TNZ     s:14849

  14847  6 000236   000000 702200 xent               TSX2  ! X66_ARET

      277    14848                                                /* Not ready yet (No SLUGUP message)  */
      278    14849    3            CALL FILL_CGRD_KEY(KC$CGID);

  14849  6 000237   200005 236100                    LDQ     REC$,,AUTO
         6 000240   200017 756100                    STQ     MSG_COUNT+3,,AUTO
         6 000241   001473 701000 6                  TSX1    FILL_CGRD_KEY
         6 000242   000000 011000                    NOP     0

      279    14850    3            CALL READCG ALTRET (ERR);

  14850  6 000243   001575 701000 6                  TSX1    READCG
         6 000244   000351 702000 6                  TSX2    ERR

      280    14851    3            EXHUME_CGID=KC$CGID;

  14851  6 000245   200005 470500                    LDP0    REC$,,AUTO
         6 000246   000000 100500                    MLR     fill='000'O
         6 000247   000000 000060                    ADSC9   0,,PR0                   cn=0,n=48
         6 000250   000230 000060 4                  ADSC9   EXHUME_CGID              cn=0,n=48

      281    14852    3            ENTX = 0;

  14852  6 000251   200010 450100                    STZ     ENTX,,AUTO

      282    14853    4            DO WHILE (ENTX<CG_BUF.CNT);

  14853  6 000252   000133 471400 4                  LDP1    CG_+1
         6 000253   200010 236100                    LDQ     ENTX,,AUTO
         6 000254   100000 116100                    CMPQ    0,,PR1
         6 000255   000333 605000 6                  TPL     s:14872

      283    14854    4                 IF EL$ENTRY.TYPE=EL_CGTOK

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:56   
  14854  6 000256   200003 470500                    LDP0    @RECVEC,,AUTO
         6 000257   000001 471500                    LDP1    1,,PR0
         6 000260   100000 236100                    LDQ     0,,PR1
         6 000261   777000 376003                    ANQ     -512,DU
         6 000262   006000 116003                    CMPQ    3072,DU
         6 000263   000274 600000 6                  TZE     s:14857
         6 000264   200010 236100                    LDQ     ENTX,,AUTO
         6 000265   000264 402007                    MPY     180,DL
         6 000266   000133 473400 4                  LDP3    CG_+1
         6 000267   200005 474500                    LDP4    REC$,,AUTO
         6 000270   040100 106506                    CMPC    fill='040'O
         6 000271   300001 600010                    ADSC9   1,Q,PR3                  cn=3,n=8
         6 000272   400014 000010                    ADSC9   12,,PR4                  cn=0,n=8
         6 000273   000326 601000 6                  TNZ     s:14866

      284    14855    4                   OR CG_BUF.ENT.DKEY.DEVNM(ENTX)=UPRT.STATION
      285    14856    5                 THEN DO;

      286    14857    5                      EXHUME_RENT=CG_BUF.ENT(ENTX);

  14857  6 000274   200010 236100                    LDQ     ENTX,,AUTO
         6 000275   000264 402007                    MPY     180,DL
         6 000276   000133 473400 4                  LDP3    CG_+1
         6 000277   000000 100506                    MLR     fill='000'O
         6 000300   300001 000264                    ADSC9   1,Q,PR3                  cn=0,n=180
         6 000301   000244 000264 4                  ADSC9   EXHUME_RENT              cn=0,n=180

      287    14858    5                      CALL M$EXHUME (FPT_EXHUME) ALTRET (EXHUME_ALT);

  14858  6 000302   000170 630400 5                  EPPR0   FPT_EXHUME
         6 000303   530001 713400                    CLIMB   alt,+45057
         6 000304   401000 401760                    pmme    nvectors=3
         6 000305   000307 702000 6                  TSX2    EXHUME_ALT

      288    14859    6                      DO WHILE('0'B);

  14859  6 000306   000317 710000 6                  TRA     s:14863
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:57   

      289    14860    6   EXHUME_ALT:             IF B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOCG

  14860  6 000307   000000 470400 xsym  EXHUME_ALT   LDP0    B$TCB$
         6 000310   000000 471500                    LDP1    0,,PR0
         6 000311   100102 236100                    LDQ     66,,PR1
         6 000312   377770 376007                    ANQ     131064,DL
         6 000313   015400 116007                    CMPQ    6912,DL
         6 000314   000317 600000 6                  TZE     s:14863

      290    14861    6                           THEN CALL CONSERR;

  14861  6 000315   002426 701000 6                  TSX1    CONSERR
         6 000316   000000 011000                    NOP     0

      291    14862    6                           END;

      292    14863    5                      IF EL$ENTRY.TYPE=EL_UPRT

  14863  6 000317   200003 470500                    LDP0    @RECVEC,,AUTO
         6 000320   000001 471500                    LDP1    1,,PR0
         6 000321   100000 236100                    LDQ     0,,PR1
         6 000322   777000 376003                    ANQ     -512,DU
         6 000323   007000 116003                    CMPQ    3584,DU
         6 000324   000326 601000 6                  TNZ     s:14866

      293    14864    5                      THEN RETURN;

  14864  6 000325   000000 702200 xent               TSX2  ! X66_ARET

      294    14865    5                      END;
      295    14866    4                 ENTX = ENTX+1;

  14866  6 000326   200010 054100                    AOS     ENTX,,AUTO

      296    14867    4                 END;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:58   
  14867  6 000327   000133 473400 4                  LDP3    CG_+1
         6 000330   200010 236100                    LDQ     ENTX,,AUTO
         6 000331   300000 116100                    CMPQ    0,,PR3
         6 000332   000256 604000 6                  TMI     s:14854

      297    14868        /**/
      298    14869        /* If OCCG is being started, tell SLUG that ELF has completed initialization */
      299    14870        /* That is, the HOG is up.                                                   */
      300    14871        /**/
      301    14872    3            IF EXHUME_CGID=OCCGID

  14872  6 000333   000000 106400                    CMPC    fill='000'O
         6 000334   000230 000060 4                  ADSC9   EXHUME_CGID              cn=0,n=48
         6 000335   000214 000060 5                  ADSC9   OCCGID                   cn=0,n=48
         6 000336   000346 601000 6                  TNZ     s:14878

      302    14873    3            THEN CALL M$WRITE(FPT_WR_SLUG) ALTRET(CONS_ERR);

  14873  6 000337   000006 630400 5                  EPPR0   FPT_WR_SLUG
         6 000340   440001 713400                    CLIMB   alt,write
         6 000341   401400 401760                    pmme    nvectors=4
         6 000342   000347 702000 6                  TSX2    CONS_ERR

      303    14874    3            END;                           /* End DO CASE(EL$ENTRY.TYPE);        */

  14874  6 000343   000346 710000 6                  TRA     s:14878

      304    14875    2       CASE(EL_TERMKEYIN);

      305    14876    2         CALL TERMKEYIN ALTRET(ERR);

  14876  6 000344   000775 701000 6                  TSX1    TERMKEYIN
         6 000345   000351 702000 6                  TSX2    ERR

      306    14877    2         END;                              /* End DO CASE(FCN);                  */

      307    14878    2      DO WHILE('0'B);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:59   

  14878  6 000346   000351 710000 6                  TRA     ERR

      308    14879    2   CONS_ERR: CALL CONSERR;

  14879  6 000347   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 000350   000000 011000                    NOP     0

      309    14880    2   ERR:    END;

  14880  6 000351                       ERR          null
      310    14881    1      CALL CLEANUP;

  14881  6 000351   002441 701000 6                  TSX1    CLEANUP
         6 000352   000000 011000                    NOP     0

      311    14882    1      RETURN;

  14882  6 000353   000000 702200 xent               TSX2  ! X66_ARET

      312    14883        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:60   
      313    14884    1   AZC$INIT: ENTRY ALTRET;

  14884  6 000354   000000 700200 xent  AZC$INIT     TSX0  ! X66_AUTO_2
         6 000355   000034 000002                    ZERO    28,2

      314    14885        /*D* NAME: AZC$INIT
      315    14886             PURPOSE: To initialize the communications accounting portion of ELF
      316    14887             DESCRIPTION: AZC$INIT initializes all data which needs initializing
      317    14888             for communications accounting.
      318    14889        */
      319    14890    1      CGCUR_KEY = '0'B;

  14890  6 000356   000000 100400                    MLR     fill='000'O
         6 000357   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000360   000174 000062 4                  ADSC9   CGCUR_KEY                cn=0,n=50

      320    14891    1      TCUR_KEY = '0'B;

  14891  6 000361   000000 100400                    MLR     fill='000'O
         6 000362   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000363   000152 000012 4                  ADSC9   TCUR_KEY                 cn=0,n=10

      321    14892    1      CALL M$GDS(FPT_CGGDS) ALTRET(CNS_ERR);

  14892  6 000364   000206 630400 5                  EPPR0   FPT_CGGDS
         6 000365   430001 713400                    CLIMB   alt,gds
         6 000366   400400 401760                    pmme    nvectors=2
         6 000367   000401 702000 6                  TSX2    CNS_ERR

      322    14893    1      CG_BUF.CNT = 0;

  14893  6 000370   000133 470400 4                  LDP0    CG_+1
         6 000371   000000 450100                    STZ     0,,PR0

      323    14894    1      CALL M$GDS(FPT_TRMGDS) ALTRET(CNS_ERR);

  14894  6 000372   000200 630400 5                  EPPR0   FPT_TRMGDS
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:61   
         6 000373   430001 713400                    CLIMB   alt,gds
         6 000374   400400 401760                    pmme    nvectors=2
         6 000375   000401 702000 6                  TSX2    CNS_ERR

      324    14895    1      TRM_BUF.CNT = 0;

  14895  6 000376   000131 470400 4                  LDP0    TRM_+1
         6 000377   000000 450100                    STZ     0,,PR0

      325    14896    2      DO WHILE('0'B);

  14896  6 000400   000404 710000 6                  TRA     s:14900

      326    14897    2   CNS_ERR: CALL CONSERR;

  14897  6 000401   002426 701000 6     CNS_ERR      TSX1    CONSERR
         6 000402   000000 011000                    NOP     0

      327    14898    2           ALTRETURN;

  14898  6 000403   000000 702200 xent               TSX2  ! X66_AALT

      328    14899    2           END;

      329    14900    1      RETURN;

  14900  6 000404   000000 702200 xent               TSX2  ! X66_ARET

      330    14901        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:62   
      331    14902    1   CONNECT: PROC ALTRET;

  14902  6 000405   200016 741300       CONNECT      STX1  ! MSG_COUNT+2,,AUTO

      332    14903        /*I* NAME: CONNECT
      333    14904             PURPOSE: To handle connect messages to ELF
      334    14905             DESCRIPTION: CONNECT fills in the DEVICE record, COM_BUF, and causes
      335    14906             it to be written to :COMAC.:SYS. It also adds the device to the
      336    14907             TERMINAL record in :COMAC which owns this device and if this device
      337    14908             is a COMGROUP STATION, adds it to the COMGROUP record in :COMAC
      338    14909             onto which this device is connecting.
      339    14910        */
      340    14911    2      COM_BUF = '0'B;

  14911  6 000406   000000 100400                    MLR     fill='000'O
         6 000407   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000410   000322 000224 4                  ADSC9   COM_BUF                  cn=0,n=148

      341    14912    2      COM_BUF.CODE = %AZ$COMACCTNG;

  14912  6 000411   003000 236003                    LDQ     1536,DU
         6 000412   000322 756000 4                  STQ     COM_BUF

      342    14913    2      COM_BUF.ACTYP = KL$ADDD.ACTYP;

  14913  6 000413   200005 470500                    LDP0    REC$,,AUTO
         6 000414   000000 236100                    LDQ     0,,PR0
         6 000415   000011 772000                    QRL     9
         6 000416   000323 552020 4                  STBQ    COM_BUF+1,'20'O

      343    14914    2      COM_BUF.ATYP = KL$ADDD.ATYP;

  14914  6 000417   000000 236100                    LDQ     0,,PR0
         6 000420   000011 772000                    QRL     9
         6 000421   000323 552010 4                  STBQ    COM_BUF+1,'10'O

      344    14915    2      COM_BUF.TTYP = KL$ADDD.TERMID.TTYP;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:63   

  14915  6 000422   000003 236100                    LDQ     3,,PR0
         6 000423   000323 552004 4                  STBQ    COM_BUF+1,'04'O

      345    14916    2      COM_BUF.FEX = KL$ADDD.FEX;

  14916  6 000424   000000 236100                    LDQ     0,,PR0
         6 000425   000033 736000                    QLS     27
         6 000426   000324 552040 4                  STBQ    COM_BUF+2,'40'O

      346    14917    2      COM_BUF.SPEED = KL$ADDD.SPEED;

  14917  6 000427   000003 236100                    LDQ     3,,PR0
         6 000430   000324 552020 4                  STBQ    COM_BUF+2,'20'O

      347    14918    2      COM_BUF.TERMID = KL$ADDD.TERMID;

  14918  6 000431   000000 100500                    MLR     fill='000'O
         6 000432   000003 400010                    ADSC9   3,,PR0                   cn=2,n=8
         6 000433   000324 400010 4                  ADSC9   COM_BUF+2                cn=2,n=8

      348    14919    2      COM_BUF.TWSN = KL$ADDD.TWSN;

  14919  6 000434   040000 100500                    MLR     fill='040'O
         6 000435   000013 400004                    ADSC9   11,,PR0                  cn=2,n=4
         6 000436   000330 400004 4                  ADSC9   COM_BUF+6                cn=2,n=4

      349    14920    2      COM_BUF.DEVNM = KL$ADDD.DEVNM;

  14920  6 000437   040000 100500                    MLR     fill='040'O
         6 000440   000005 400010                    ADSC9   5,,PR0                   cn=2,n=8
         6 000441   000326 400010 4                  ADSC9   COM_BUF+4                cn=2,n=8

      350    14921    2      COM_BUF.TNAME=KL$ADDD.TNAME;

  14921  6 000442   040000 100500                    MLR     fill='040'O
         6 000443   000007 400010                    ADSC9   7,,PR0                   cn=2,n=8
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:64   
         6 000444   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8

      351    14922    2      COM_BUF.ASSOCTRM = KL$ADDD.ASSOCTRM;

  14922  6 000445   040000 100500                    MLR     fill='040'O
         6 000446   000011 400010                    ADSC9   9,,PR0                   cn=2,n=8
         6 000447   000333 400010 4                  ADSC9   COM_BUF+9                cn=2,n=8

      352    14923    2      COM_BUF.FEPNAME = KL$ADDD.FEPNAME;

  14923  6 000450   040000 100500                    MLR     fill='040'O
         6 000451   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         6 000452   000362 000010 4                  ADSC9   COM_BUF+32               cn=0,n=8

      353    14924    2      COM_BUF.LASTUP.UTS= EL$ENTRY.UTS;

  14924  6 000453   200003 471500                    LDP1    @RECVEC,,AUTO
         6 000454   100001 473500                    LDP3    1,,PR1
         6 000455   300000 235100                    LDA     0,,PR3
         6 000456   300001 236100                    LDQ     1,,PR3
         6 000457   000011 773000                    LRL     9
         6 000460   000340 756000 4                  STQ     COM_BUF+14

      354    14925    2      COM_BUF.UTS = EL$ENTRY.UTS;

  14925  6 000461   100001 473500                    LDP3    1,,PR1
         6 000462   300000 235100                    LDA     0,,PR3
         6 000463   300001 236100                    LDQ     1,,PR3
         6 000464   000011 773000                    LRL     9
         6 000465   000337 756000 4                  STQ     COM_BUF+13

      355    14926    3      DO CASE(COM_BUF.ATYP);

  14926  6 000466   000323 236000 4                  LDQ     COM_BUF+1
         6 000467   000011 772000                    QRL     9
         6 000470   000777 376007                    ANQ     511,DL
         6 000471   000007 116007                    CMPQ    7,DL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:65   
         6 000472   000474 602006 6                  TNC     s:14926+6,QL
         6 000473   000576 710000 6                  TRA     s:14952
         6 000474   000576 710000 6                  TRA     s:14952
         6 000475   000576 710000 6                  TRA     s:14952
         6 000476   000503 710000 6                  TRA     s:14928
         6 000477   000566 710000 6                  TRA     s:14946
         6 000500   000563 710000 6                  TRA     s:14944
         6 000501   000571 710000 6                  TRA     s:14948
         6 000502   000574 710000 6                  TRA     s:14950

      356    14927    3       CASE(%KLAT_CG#/*,%KLAT_FEP#*/);

      357    14928    3         COM_BUF.CGACCT=KL$ADDD.CGID.ACCT#;

  14928  6 000503   040000 100500                    MLR     fill='040'O
         6 000504   000017 000010                    ADSC9   15,,PR0                  cn=0,n=8
         6 000505   000356 000010 4                  ADSC9   COM_BUF+28               cn=0,n=8

      358    14929    3         COM_BUF.CGPSN=KL$ADDD.CGID.PSN#;

  14929  6 000506   040000 100500                    MLR     fill='040'O
         6 000507   000021 000006                    ADSC9   17,,PR0                  cn=0,n=6
         6 000510   000360 000006 4                  ADSC9   COM_BUF+30               cn=0,n=6

      359    14930    3         COM_BUF.CGNAME.CNT=KL$ADDD.CGID.NAME#.CNT;

  14930  6 000511   000023 236100                    LDQ     19,,PR0
         6 000512   000346 552040 4                  STBQ    COM_BUF+20,'40'O

      360    14931    3         COM_BUF.CGNAME.TXT=KL$ADDD.CGID.NAME#.TXT;

  14931  6 000513   040000 100500                    MLR     fill='040'O
         6 000514   000023 200037                    ADSC9   19,,PR0                  cn=1,n=31
         6 000515   000346 200037 4                  ADSC9   COM_BUF+20               cn=1,n=31

      361    14932    3         IF COM_BUF.ATYP=%KLAT_NETWORK#

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:66   
  14932  6 000516   000323 236000 4                  LDQ     COM_BUF+1
         6 000517   777000 376007                    ANQ     -512,DL
         6 000520   007000 116007                    CMPQ    3584,DL
         6 000521   000525 601000 6                  TNZ     s:14934

      362    14933    3         THEN COM_BUF.USEAGE=%AZ_USEFEP#; ELSE

  14933  6 000522   011000 236007                    LDQ     4608,DL
         6 000523   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000524   000576 710000 6                  TRA     s:14952

      363    14934    3              IF KL$ADDD.USETP

  14934  6 000525   000003 236100                    LDQ     3,,PR0
         6 000526   004000 316003                    CANQ    2048,DU
         6 000527   000533 600000 6                  TZE     s:14936

      364    14935    3              THEN COM_BUF.USEAGE=%AZ_USETP#;

  14935  6 000530   005000 236007                    LDQ     2560,DL
         6 000531   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000532   000576 710000 6                  TRA     s:14952

      365    14936    3              ELSE IF KL$ADDD.CGID=OCCGID

  14936  6 000533   000000 106500                    CMPC    fill='000'O
         6 000534   000017 000060                    ADSC9   15,,PR0                  cn=0,n=48
         6 000535   000214 000060 5                  ADSC9   OCCGID                   cn=0,n=48
         6 000536   000542 601000 6                  TNZ     s:14938

      366    14937    3                   THEN COM_BUF.USEAGE=%AZ_USEOCCG#;

  14937  6 000537   001000 236007                    LDQ     512,DL
         6 000540   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000541   000576 710000 6                  TRA     s:14952

      367    14938    3                   ELSE IF KL$ADDD.CGID=ISCGID
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:67   

  14938  6 000542   000000 106500                    CMPC    fill='000'O
         6 000543   000017 000060                    ADSC9   15,,PR0                  cn=0,n=48
         6 000544   000244 000060 5                  ADSC9   ISCGID                   cn=0,n=48
         6 000545   000551 601000 6                  TNZ     s:14940

      368    14939    3                        THEN COM_BUF.USEAGE=%AZ_USEISCG#;

  14939  6 000546   002000 236007                    LDQ     1024,DL
         6 000547   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000550   000576 710000 6                  TRA     s:14952

      369    14940    3                        ELSE IF KL$ADDD.CGID=OSCGID

  14940  6 000551   000000 106500                    CMPC    fill='000'O
         6 000552   000017 000060                    ADSC9   15,,PR0                  cn=0,n=48
         6 000553   000230 000060 5                  ADSC9   OSCGID                   cn=0,n=48
         6 000554   000560 601000 6                  TNZ     s:14942

      370    14941    3                             THEN COM_BUF.USEAGE=%AZ_USEOSCG#;

  14941  6 000555   003000 236007                    LDQ     1536,DL
         6 000556   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000557   000576 710000 6                  TRA     s:14952

      371    14942    3                             ELSE COM_BUF.USEAGE=%AZ_USECG#;

  14942  6 000560   004000 236007                    LDQ     2048,DL
         6 000561   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000562   000576 710000 6                  TRA     s:14952

      372    14943    3       CASE(%KLAT_TRM#);

      373    14944    3         COM_BUF.USEAGE = %AZ_USETRM#;

  14944  6 000563   000000 236003                    LDQ     0,DU
         6 000564   000335 552010 4                  STBQ    COM_BUF+11,'10'O
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:68   
         6 000565   000576 710000 6                  TRA     s:14952

      374    14945    3       CASE(%KLAT_RES#);

      375    14946    3         COM_BUF.USEAGE = %AZ_USERES#;

  14946  6 000566   006000 236007                    LDQ     3072,DL
         6 000567   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000570   000576 710000 6                  TRA     s:14952

      376    14947    3       CASE(%KLAT_LINE#);

      377    14948    3         COM_BUF.USEAGE = %AZ_USELINE#;

  14948  6 000571   007000 236007                    LDQ     3584,DL
         6 000572   000335 552010 4                  STBQ    COM_BUF+11,'10'O
         6 000573   000576 710000 6                  TRA     s:14952

      378    14949    3       CASE(%KLAT_LNKLINE#);

      379    14950    3         COM_BUF.USEAGE = %AZ_USENET#;

  14950  6 000574   010000 236007                    LDQ     4096,DL
         6 000575   000335 552010 4                  STBQ    COM_BUF+11,'10'O

      380    14951    3         END;                              /* End case                           */

      381    14952    2      IF COM_BUF.ACTYP~=%KLAC_NONE

  14952  6 000576   000323 236000 4                  LDQ     COM_BUF+1
         6 000577   000777 316003                    CANQ    511,DU
         6 000600   000605 600000 6                  TZE     s:14957

      382    14953    3      THEN DO;

      383    14954    3           OCMESSHD.CONNECT=1;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:69   
  14954  6 000601   001000 236007                    LDQ     512,DL
         6 000602   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      384    14955    3           CALL WR_KEYINCD;

  14955  6 000603   002072 701000 6                  TSX1    WR_KEYINCD
         6 000604   000000 011000                    NOP     0

      385    14956    3           END;

      386    14957    2      COM_KEY.L = LENGTHC(COM_KEY.DKY);

  14957  6 000605   013000 236003                    LDQ     5632,DU
         6 000606   000142 552040 4                  STBQ    COM_KEY,'40'O

      387    14958    2      COM_KEY.DKY.FEX = COM_BUF.FEX;

  14958  6 000607   000324 236000 4                  LDQ     COM_BUF+2
         6 000610   000011 772000                    QRL     9
         6 000611   000142 552020 4                  STBQ    COM_KEY,'20'O

      388    14959    2      COM_KEY.DKY.DEVNM=COM_BUF.DEVNM;

  14959  6 000612   040000 100400                    MLR     fill='040'O
         6 000613   000326 400010 4                  ADSC9   COM_BUF+4                cn=2,n=8
         6 000614   000142 400010 4                  ADSC9   COM_KEY                  cn=2,n=8

      389    14960    2      COM_KEY.DKY.LDX=KL$ADDD.LDINFO.LDCTX;

  14960  6 000615   200005 470500                    LDP0    REC$,,AUTO
         6 000616   000014 720100                    LXL0    12,,PR0
         6 000617   000144 440000 4                  SXL0    COM_KEY+2

      390    14961    2      CALL M$WRITE(FPT_WRCOM) ALTRET(CONS_ERR);

  14961  6 000620   000050 630400 5                  EPPR0   FPT_WRCOM
         6 000621   440001 713400                    CLIMB   alt,write
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:70   
         6 000622   401400 401760                    pmme    nvectors=4
         6 000623   000767 702000 6                  TSX2    CONS_ERR

      391    14962    2      IF COM_BUF.TNAME~=' *FEP*' AND COM_BUF.TNAME~=' *NOTRM*'

  14962  6 000624   040000 106400                    CMPC    fill='040'O
         6 000625   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
         6 000626   000260 000006 5                  ADSC9   ISCGID+12                cn=0,n=6
         6 000627   000671 600000 6                  TZE     s:14973
         6 000630   040000 106400                    CMPC    fill='040'O
         6 000631   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
         6 000632   000262 000010 5                  ADSC9   ISCGID+14                cn=0,n=8
         6 000633   000671 600000 6                  TZE     s:14973

      392    14963    3      THEN DO;

      393    14964    3           TRD_KEY.L = LENGTHC(TRD_KEY)-1;

  14964  6 000634   011000 236003                    LDQ     4608,DU
         6 000635   000146 552040 4                  STBQ    TRD_KEY,'40'O

      394    14965    3           TRD_KEY.UFEX = %AZ_TRFEX#;

  14965  6 000636   000776 236003                    LDQ     510,DU
         6 000637   000146 552020 4                  STBQ    TRD_KEY,'20'O

      395    14966    3           TRD_KEY.TNAME=COM_BUF.TNAME;

  14966  6 000640   040000 100400                    MLR     fill='040'O
         6 000641   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
         6 000642   000146 400010 4                  ADSC9   TRD_KEY                  cn=2,n=8

      396    14967    3           CALL READTRM ALTRET (ERR);

  14967  6 000643   001524 701000 6                  TSX1    READTRM
         6 000644   000771 702000 6                  TSX2    ERR

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:71   
      397    14968    3           CALL GETENT(%AZ_TRFEX#) ALTRET(ERR);

  14968  6 000645   000004 236000 7                  LDQ     4
         6 000646   200021 756100                    STQ     @KC_CGID+2,,AUTO
         6 000647   001774 701000 6                  TSX1    GETENT
         6 000650   000771 702000 6                  TSX2    ERR

      398    14969    3           TRM_BUF.ENT.ACTYP(TRM_BUF.CNT-1) = COM_BUF.ACTYP;

  14969  6 000651   000131 470400 4                  LDP0    TRM_+1
         6 000652   000000 235100                    LDA     0,,PR0
         6 000653   000002 735000                    ALS     2
         6 000654   000323 236000 4                  LDQ     COM_BUF+1
         6 000655   077775 676105                    ERQ     -3,AL,PR0
         6 000656   000777 376003                    ANQ     511,DU
         6 000657   077775 656105                    ERSQ    -3,AL,PR0

      399    14970    3           TRM_BUF.ENT.DKEY(TRM_BUF.CNT-1) = COM_KEY.DKY;

  14970  6 000660   000131 470400 4                  LDP0    TRM_+1
         6 000661   000000 235100                    LDA     0,,PR0
         6 000662   000002 735000                    ALS     2
         6 000663   000002 735000                    ALS     2
         6 000664   000105 100400                    MLR     fill='000'O
         6 000665   000142 200013 4                  ADSC9   COM_KEY                  cn=1,n=11
         6 000666   077775 400013                    ADSC9   -3,A,PR0                 cn=2,n=11

      400    14971    3           CALL WRTRM ALTRET(ERR);

  14971  6 000667   001666 701000 6                  TSX1    WRTRM
         6 000670   000771 702000 6                  TSX2    ERR

      401    14972    3           END;

      402    14973    2      IF COM_BUF.ATYP=%KLAT_CG#            /* OR COM_BUF.ATYP=%KLAT_FEP#         */

  14973  6 000671   000323 236000 4                  LDQ     COM_BUF+1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:72   
         6 000672   777000 376007                    ANQ     -512,DL
         6 000673   002000 116007                    CMPQ    1024,DL
         6 000674   000766 601000 6                  TNZ     s:14987

      403    14974    3      THEN DO;

      404    14975    3           CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);

  14975  6 000675   061000 236003                    LDQ     25088,DU
         6 000676   000156 552040 4                  STBQ    CGRD_KEY,'40'O

      405    14976    3           CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;

  14976  6 000677   000777 236003                    LDQ     511,DU
         6 000700   000156 552020 4                  STBQ    CGRD_KEY,'20'O

      406    14977    3           CGRD_KEY.CGK.CGID=KL$ADDD.CGID;

  14977  6 000701   200005 470500                    LDP0    REC$,,AUTO
         6 000702   000000 100500                    MLR     fill='000'O
         6 000703   000017 000060                    ADSC9   15,,PR0                  cn=0,n=48
         6 000704   000156 400060 4                  ADSC9   CGRD_KEY                 cn=2,n=48

      407    14978    3           CALL READCG ALTRET (ERR);

  14978  6 000705   001575 701000 6                  TSX1    READCG
         6 000706   000771 702000 6                  TSX2    ERR

      408    14979    3           CALL GETENT(%AZ_CGFEX#) ALTRET(ERR);

  14979  6 000707   000006 236000 7                  LDQ     6
         6 000710   200021 756100                    STQ     @KC_CGID+2,,AUTO
         6 000711   001774 701000 6                  TSX1    GETENT
         6 000712   000771 702000 6                  TSX2    ERR

      409    14980    3           CG_BUF.ENT.ACTYP(CG_BUF.CNT-1) = COM_BUF.ACTYP;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:73   
  14980  6 000713   000133 470400 4                  LDP0    CG_+1
         6 000714   000000 236100                    LDQ     0,,PR0
         6 000715   000055 402007                    MPY     45,DL
         6 000716   000000 620006                    EAX0    0,QL
         6 000717   000323 236000 4                  LDQ     COM_BUF+1
         6 000720   077724 676110                    ERQ     -44,X0,PR0
         6 000721   000777 376003                    ANQ     511,DU
         6 000722   077724 656110                    ERSQ    -44,X0,PR0

      410    14981    3           CG_BUF.ENT.DKEY(CG_BUF.CNT-1) = COM_KEY.DKY;

  14981  6 000723   000133 470400 4                  LDP0    CG_+1
         6 000724   000000 236100                    LDQ     0,,PR0
         6 000725   000055 402007                    MPY     45,DL
         6 000726   000002 736000                    QLS     2
         6 000727   000106 100400                    MLR     fill='000'O
         6 000730   000142 200013 4                  ADSC9   COM_KEY                  cn=1,n=11
         6 000731   077724 400013                    ADSC9   -44,Q,PR0                cn=2,n=11

      411    14982    3           CG_BUF.ENT.NOCGINF(CG_BUF.CNT-1)=KL$ADDD.NOCGINF;

  14982  6 000732   000133 470400 4                  LDP0    CG_+1
         6 000733   000000 236100                    LDQ     0,,PR0
         6 000734   000055 402007                    MPY     45,DL
         6 000735   200005 471500                    LDP1    REC$,,AUTO
         6 000736   000000 620006                    EAX0    0,QL
         6 000737   100003 236100                    LDQ     3,,PR1
         6 000740   000010 736000                    QLS     8
         6 000741   077724 676110                    ERQ     -44,X0,PR0
         6 000742   400000 376003                    ANQ     -131072,DU
         6 000743   077724 656110                    ERSQ    -44,X0,PR0

      412    14983    3           CG_BUF.ENT.CGINF(CG_BUF.CNT-1)=KL$ADDD.CGINFO;

  14983  6 000744   000133 470400 4                  LDP0    CG_+1
         6 000745   000000 236100                    LDQ     0,,PR0
         6 000746   000055 402007                    MPY     45,DL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:74   
         6 000747   000002 736000                    QLS     2
         6 000750   000106 100500                    MLR     fill='000'O
         6 000751   100033 000244                    ADSC9   27,,PR1                  cn=0,n=164
         6 000752   077730 000244                    ADSC9   -40,Q,PR0                cn=0,n=164

      413    14984    3           CG_BUF.ENT.LDKEY(CG_BUF.CNT-1)=KL$ADDD.LDINFO.LDCTKEY;

  14984  6 000753   000133 470400 4                  LDP0    CG_+1
         6 000754   000000 236100                    LDQ     0,,PR0
         6 000755   000055 402007                    MPY     45,DL
         6 000756   000000 620006                    EAX0    0,QL
         6 000757   100015 236100                    LDQ     13,,PR1
         6 000760   000011 772000                    QRL     9
         6 000761   077727 676110                    ERQ     -41,X0,PR0
         6 000762   000007 376000 7                  ANQ     7
         6 000763   077727 656110                    ERSQ    -41,X0,PR0

      414    14985    3           CALL WRCGR ALTRET(ERR);

  14985  6 000764   001731 701000 6                  TSX1    WRCGR
         6 000765   000771 702000 6                  TSX2    ERR

      415    14986    3           END;

      416    14987    3      DO WHILE('0'B);

  14987  6 000766   000773 710000 6                  TRA     s:14991

      417    14988    3   CONS_ERR: CALL CONSERR;

  14988  6 000767   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 000770   000000 011000                    NOP     0

      418    14989    3   ERR:    ALTRETURN;

  14989  6 000771   200016 221300       ERR          LDX1  ! MSG_COUNT+2,,AUTO
         6 000772   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:75   

      419    14990    3           END;

      420    14991    2      RETURN;

  14991  6 000773   200016 221300                    LDX1  ! MSG_COUNT+2,,AUTO
         6 000774   000001 702211                    TSX2  ! 1,X1

      421    14992    2   END CONNECT;
      422    14993        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:76   
      423    14994    1   TERMKEYIN: PROC ALTRET;

  14994  6 000775   200016 741300       TERMKEYIN    STX1  ! MSG_COUNT+2,,AUTO

      424    14995        /*I* NAME: TERMKEYIN
      425    14996             PURPOSE: To handle any KEYINs requesting information about communications
      426    14997             DESCRIPTION: TERMKEYIN reads in the TERMINAL or COMGROUP record(s)
      427    14998             which the operator requested information on and calls TRMOUT to
      428    14999             output the information.
      429    15000             If no information is found to report, TERMKEYIN outputs an appropriate
      430    15001             message to that effect.
      431    15002        */
      432    15003    2      REC$ = RECVEC.HDR$;

  15003  6 000776   200003 470500                    LDP0    @RECVEC,,AUTO
         6 000777   000001 236100                    LDQ     1,,PR0
         6 001000   200005 756100                    STQ     REC$,,AUTO

      433    15004    2      MSG_COUNT=0;

  15004  6 001001   200014 450100                    STZ     MSG_COUNT,,AUTO

      434    15005    3      DO CASE (EL$TERM.KEYIN);

  15005  6 001002   200005 471500                    LDP1    REC$,,AUTO
         6 001003   100000 220100                    LDX0    0,,PR1
         6 001004   000006 100003                    CMPX0   6,DU
         6 001005   001007 602010 6                  TNC     s:15005+5,X0
         6 001006   001015 710000 6                  TRA     s:15007
         6 001007   001015 710000 6                  TRA     s:15007
         6 001010   001076 710000 6                  TRA     s:15033
         6 001011   001037 710000 6                  TRA     s:15017
         6 001012   001037 710000 6                  TRA     s:15017
         6 001013   001037 710000 6                  TRA     s:15017
         6 001014   001016 710000 6                  TRA     s:15009

      435    15006    3       CASE(ELSE);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:77   

      436    15007    3         RETURN;

  15007  6 001015   000001 702211                    TSX2  ! 1,X1

      437    15008    3       CASE (KEY_TERMCG#);

      438    15009    3         OCMESSHD.CONNECT=6;

  15009  6 001016   006000 236007                    LDQ     3072,DL
         6 001017   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      439    15010    3         CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);

  15010  6 001020   061000 236003                    LDQ     25088,DU
         6 001021   000156 552040 4                  STBQ    CGRD_KEY,'40'O

      440    15011    3         CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;

  15011  6 001022   000777 236003                    LDQ     511,DU
         6 001023   000156 552020 4                  STBQ    CGRD_KEY,'20'O

      441    15012    3         CGRD_KEY.CGK.CGID=EL$CGKYN.CGID;

  15012  6 001024   000000 100500                    MLR     fill='000'O
         6 001025   100001 000060                    ADSC9   1,,PR1                   cn=0,n=48
         6 001026   000156 400060 4                  ADSC9   CGRD_KEY                 cn=2,n=48

      442    15013    3         CALL READCG ALTRET (ERR);

  15013  6 001027   001575 701000 6                  TSX1    READCG
         6 001030   001165 702000 6                  TSX2    ERR

      443    15014    3         DSPTYP=DSP_DEV_SUBD#;

  15014  6 001031   200006 450100                    STZ     DSPTYP,,AUTO

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:78   
      444    15015    3         CALL TRMOUT(%AZ_CGFEX#);

  15015  6 001032   000006 236000 7                  LDQ     6
         6 001033   200021 756100                    STQ     @KC_CGID+2,,AUTO
         6 001034   001256 701000 6                  TSX1    TRMOUT
         6 001035   000000 011000                    NOP     0
         6 001036   001204 710000 6                  TRA     NOTRM

      445    15016    3       CASE (KEY_TERMSTERM#,KEY_TERMSTERMF#,KEY_STATION#);

      446    15017    3         IF EL$TERM.KEYIN=KEY_TERMSTERM#

  15017  6 001037   000002 100003                    CMPX0   2,DU
         6 001040   001046 601000 6                  TNZ     s:15023

      447    15018    4         THEN DO;

      448    15019    4              DSPTYP=DSP_SUBD#;

  15019  6 001041   000002 235007                    LDA     2,DL
         6 001042   200006 755100                    STA     DSPTYP,,AUTO

      449    15020    4              OCMESSHD.CONNECT=5;

  15020  6 001043   005000 236007                    LDQ     2560,DL
         6 001044   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      450    15021    4              END;

  15021  6 001045   001051 710000 6                  TRA     s:15026

      451    15022    4         ELSE DO;

      452    15023    4              DSPTYP=DSP_DEV_SUBD#;

  15023  6 001046   200006 450100                    STZ     DSPTYP,,AUTO

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:79   
      453    15024    4              OCMESSHD.CONNECT=4;

  15024  6 001047   004000 236007                    LDQ     2048,DL
         6 001050   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      454    15025    4              END;

      455    15026    3         TRD_KEY.L = LENGTHC(TRD_KEY)-1;

  15026  6 001051   011000 236003                    LDQ     4608,DU
         6 001052   000146 552040 4                  STBQ    TRD_KEY,'40'O

      456    15027    3         TRD_KEY.UFEX = %AZ_TRFEX#;

  15027  6 001053   000776 236003                    LDQ     510,DU
         6 001054   000146 552020 4                  STBQ    TRD_KEY,'20'O

      457    15028    3         TRD_KEY.TNAME=EL$TERM.TNAME;

  15028  6 001055   040000 100500                    MLR     fill='040'O
         6 001056   100001 000010                    ADSC9   1,,PR1                   cn=0,n=8
         6 001057   000146 400010 4                  ADSC9   TRD_KEY                  cn=2,n=8

      458    15029    3         IF TRD_KEY.TNAME=' ' THEN TRD_KEY.TNAME='LOCAL';

  15029  6 001060   040000 106400                    CMPC    fill='040'O
         6 001061   000146 400010 4                  ADSC9   TRD_KEY                  cn=2,n=8
         6 001062   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 001063   001067 601000 6                  TNZ     s:15030

  15029  6 001064   040000 100400                    MLR     fill='040'O
         6 001065   000264 000005 5                  ADSC9   ISCGID+16                cn=0,n=5
         6 001066   000146 400010 4                  ADSC9   TRD_KEY                  cn=2,n=8

      459    15030    3         CALL READTRM ALTRET (ERR);

  15030  6 001067   001524 701000 6                  TSX1    READTRM
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:80   
         6 001070   001165 702000 6                  TSX2    ERR

      460    15031    3         CALL TRMOUT(%AZ_TRFEX#);

  15031  6 001071   000004 236000 7                  LDQ     4
         6 001072   200021 756100                    STQ     @KC_CGID+2,,AUTO
         6 001073   001256 701000 6                  TSX1    TRMOUT
         6 001074   000000 011000                    NOP     0
         6 001075   001204 710000 6                  TRA     NOTRM

      461    15032    3       CASE (KEY_TERMS#);

      462    15033    3         OCMESSHD.CONNECT=3;

  15033  6 001076   003000 236007                    LDQ     1536,DL
         6 001077   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      463    15034    3         DSPTYP=DSP_DEV#;

  15034  6 001100   000001 235007                    LDA     1,DL
         6 001101   200006 755100                    STA     DSPTYP,,AUTO

      464    15035    3         TCUR_KEY.L = LENGTHC(TCUR_KEY)-1;

  15035  6 001102   011000 236003                    LDQ     4608,DU
         6 001103   000152 552040 4                  STBQ    TCUR_KEY,'40'O

      465    15036    3         TCUR_KEY.UFEX = %AZ_TRFEX#;

  15036  6 001104   000776 236003                    LDQ     510,DU
         6 001105   000152 552020 4                  STBQ    TCUR_KEY,'20'O

      466    15037    3         TCUR_KEY.TNAME=' ';

  15037  6 001106   040000 100400                    MLR     fill='040'O
         6 001107   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 001110   000152 400010 4                  ADSC9   TCUR_KEY                 cn=2,n=8
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:81   

      467    15038    3         FPT_PRCTRM.V.N# = 0;

  15038  6 001111   000125 450000 4                  STZ     FPT_PRCTRM+7

      468    15039    3         CALL M$PRECORD (FPT_PRCTRM) ALTRET (IGNOR1);

  15039  6 001112   000116 630400 4                  EPPR0   FPT_PRCTRM
         6 001113   440003 713400                    CLIMB   alt,+16387
         6 001114   401000 401760                    pmme    nvectors=3
         6 001115   001116 702000 6                  TSX2    IGNOR1

      469    15040    3   IGNOR1: FPT_PRCTRM.V.N# = 1;

  15040  6 001116   000001 235007       IGNOR1       LDA     1,DL
         6 001117   000125 755000 4                  STA     FPT_PRCTRM+7

      470    15041    3         FPT_RDTRMN.BUF_ = TRM_;

  15041  6 001120   000130 237000 4                  LDAQ    TRM_
         6 001121   000066 757000 4                  STAQ    FPT_RDTRMN+4

      471    15042    3         CALL M$READ (FPT_RDTRMN) ALTRET (RD_ALT);

  15042  6 001122   000062 630400 4                  EPPR0   FPT_RDTRMN
         6 001123   440000 713400                    CLIMB   alt,read
         6 001124   401400 401760                    pmme    nvectors=4
         6 001125   001146 702000 6                  TSX2    RD_ALT

      472    15043    3         TCUR_KEY = BIGKEY;

  15043  6 001126   000000 100400                    MLR     fill='000'O
         6 001127   000212 000012 4                  ADSC9   BIGKEY                   cn=0,n=10
         6 001130   000152 000012 4                  ADSC9   TCUR_KEY                 cn=0,n=10

      473    15044    4         DO WHILE(TCUR_KEY.UFEX=%AZ_TRFEX#);

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:82   
  15044  6 001131   000152 236000 4                  LDQ     TCUR_KEY
         6 001132   000777 376003                    ANQ     511,DU
         6 001133   000776 116003                    CMPQ    510,DU
         6 001134   001204 601000 6                  TNZ     NOTRM

      474    15045    4              CALL TRMOUT(%AZ_TRFEX#);

  15045  6 001135   000004 236000 7                  LDQ     4
         6 001136   200021 756100                    STQ     @KC_CGID+2,,AUTO
         6 001137   001256 701000 6                  TSX1    TRMOUT
         6 001140   000000 011000                    NOP     0

      475    15046    4              CALL M$PRECORD (FPT_PRCTRM) ALTRET (IGNOR2);

  15046  6 001141   000116 630400 4                  EPPR0   FPT_PRCTRM
         6 001142   440003 713400                    CLIMB   alt,+16387
         6 001143   401000 401760                    pmme    nvectors=3
         6 001144   001145 702000 6                  TSX2    IGNOR2

      476    15047    5   IGNOR2:    DO WHILE('0'B);

  15047  6 001145   001167 710000 6     IGNOR2       TRA     s:15057

      477    15048    5   RD_ALT:         IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD

  15048  6 001146   000000 470400 xsym  RD_ALT       LDP0    B$TCB$
         6 001147   000000 471500                    LDP1    0,,PR0
         6 001150   100102 236100                    LDQ     66,,PR1
         6 001151   377770 376007                    ANQ     131064,DL
         6 001152   000070 116007                    CMPQ    56,DL
         6 001153   001161 601000 6                  TNZ     s:15050

      478    15049    5                   THEN CALL M$GDS(FPT_TRMGDS) ALTRET(CONS_ERR);

  15049  6 001154   000200 630400 5                  EPPR0   FPT_TRMGDS
         6 001155   430001 713400                    CLIMB   alt,gds
         6 001156   400400 401760                    pmme    nvectors=2
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:83   
         6 001157   001163 702000 6                  TSX2    CONS_ERR
         6 001160   001167 710000 6                  TRA     s:15057

      479    15050    5                   ELSE IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF

  15050  6 001161   000060 116007                    CMPQ    48,DL
         6 001162   001204 600000 6                  TZE     NOTRM

      480    15051    5                        THEN GOTO NOTRM;
      481    15052    6                        ELSE DO;

      482    15053    6   CONS_ERR:                 CALL CONSERR;

  15053  6 001163   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 001164   000000 011000                    NOP     0

      483    15054    6   ERR:                      ALTRETURN;

  15054  6 001165   200016 221300       ERR          LDX1  ! MSG_COUNT+2,,AUTO
         6 001166   000000 702211                    TSX2  ! 0,X1

      484    15055    6                             END;
      485    15056    5                   END;

      486    15057    4              FPT_RDTRMN.BUF_ = TRM_;

  15057  6 001167   000130 237000 4                  LDAQ    TRM_
         6 001170   000066 757000 4                  STAQ    FPT_RDTRMN+4

      487    15058    4              CALL M$READ (FPT_RDTRMN) ALTRET (RD_ALT);

  15058  6 001171   000062 630400 4                  EPPR0   FPT_RDTRMN
         6 001172   440000 713400                    CLIMB   alt,read
         6 001173   401400 401760                    pmme    nvectors=4
         6 001174   001146 702000 6                  TSX2    RD_ALT

      488    15059    4              TCUR_KEY = BIGKEY;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:84   

  15059  6 001175   000000 100400                    MLR     fill='000'O
         6 001176   000212 000012 4                  ADSC9   BIGKEY                   cn=0,n=10
         6 001177   000152 000012 4                  ADSC9   TCUR_KEY                 cn=0,n=10

      489    15060    4              END;

  15060  6 001200   000152 236000 4                  LDQ     TCUR_KEY
         6 001201   000777 376003                    ANQ     511,DU
         6 001202   000776 116003                    CMPQ    510,DU
         6 001203   001135 600000 6                  TZE     s:15045

      490    15061    3         END;                              /* End case                           */

      491    15062    2   NOTRM: IF MSG_COUNT=0

  15062  6 001204   200014 235100       NOTRM        LDA     MSG_COUNT,,AUTO
         6 001205   001254 601000 6                  TNZ     s:15081

      492    15063    3      THEN DO;

      493    15064    3           OCMESSHD.MSG#=EMPTY_TERM_MSG#;

  15064  6 001206   000422 220003                    LDX0    274,DU
         6 001207   000370 440000 4                  SXL0    OCMESSHD

      494    15065    3           IF EL$TERM.KEYIN=KEY_TERMCG#

  15065  6 001210   200005 470500                    LDP0    REC$,,AUTO
         6 001211   000000 221100                    LDX1    0,,PR0
         6 001212   000005 101003                    CMPX1   5,DU
         6 001213   001243 601000 6                  TNZ     s:15077

      495    15066    4           THEN DO;

      496    15067    4                OCMESSHD.CGACCT=EL$CGKYN.CGID.ACCT#;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:85   
  15067  6 001214   040000 100500                    MLR     fill='040'O
         6 001215   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         6 001216   000412 200010 4                  ADSC9   OCMESSHD+18              cn=1,n=8

      497    15068    4                IF EL$CGKYN.CGID.ACCT#=SUBSTR(EL$CGKYN.CGID.NAME#.TXT,0,

  15068  6 001217   000005 236100                    LDQ     5,,PR0
         6 001220   000033 772000                    QRL     27
         6 001221   000000 621006                    EAX1    0,QL
         6 001222   040140 106500                    CMPC    fill='040'O
         6 001223   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         6 001224   000005 200011                    ADSC9   5,,PR0                   cn=1,n=*X1
         6 001225   001231 601000 6                  TNZ     s:15072

      498    15069    4                  EL$CGKYN.CGID.NAME#.CNT)
      499    15070    4                THEN OCMESSHD.CONNECT=7;

  15070  6 001226   007000 236007                    LDQ     3584,DL
         6 001227   000407 552010 4                  STBQ    OCMESSHD+15,'10'O
         6 001230   001246 710000 6                  TRA     s:15078

      500    15071    5                ELSE DO;

      501    15072    5                     OCMESSHD.CGPSN=EL$CGKYN.CGID.PSN#;

  15072  6 001231   040000 100500                    MLR     fill='040'O
         6 001232   000003 000006                    ADSC9   3,,PR0                   cn=0,n=6
         6 001233   000414 200006 4                  ADSC9   OCMESSHD+20              cn=1,n=6

      502    15073    5                     OCMESSHD.CGNAME=EL$CGKYN.CGID.NAME#.TXT;

  15073  6 001234   040000 100500                    MLR     fill='040'O
         6 001235   000005 200037                    ADSC9   5,,PR0                   cn=1,n=31
         6 001236   000415 600040 4                  ADSC9   OCMESSHD+21              cn=3,n=32

      503    15074    5                     OCMESSHD.LEN(CGNMI#)=EL$CGKYN.CGID.NAME#.CNT;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:86   
  15074  6 001237   000005 236100                    LDQ     5,,PR0
         6 001240   000011 772000                    QRL     9
         6 001241   000400 552020 4                  STBQ    OCMESSHD+8,'20'O

      504    15075    5                     END;

      505    15076    4                END;

  15076  6 001242   001246 710000 6                  TRA     s:15078

      506    15077    3           ELSE OCMESSHD.TNAME=EL$TERM.TNAME;

  15077  6 001243   040000 100500                    MLR     fill='040'O
         6 001244   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
         6 001245   000410 000010 4                  ADSC9   OCMESSHD+16              cn=0,n=8

      507    15078    3           OCMESSHD.CADDR=EL$TERM.CADDR;

  15078  6 001246   000000 721100                    LXL1    0,,PR0
         6 001247   000370 741000 4                  STX1    OCMESSHD

      508    15079    3           CALL M$WRITE (FPT_WR_CSCG) ALTRET (CONS_ERR);

  15079  6 001250   000034 630400 5                  EPPR0   FPT_WR_CSCG
         6 001251   440001 713400                    CLIMB   alt,write
         6 001252   401400 401760                    pmme    nvectors=4
         6 001253   001163 702000 6                  TSX2    CONS_ERR

      509    15080    3           END;

      510    15081    2      RETURN;

  15081  6 001254   200016 221300                    LDX1  ! MSG_COUNT+2,,AUTO
         6 001255   000001 702211                    TSX2  ! 1,X1

      511    15082        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:87   
      512    15083    2   TRMOUT: PROC(TYPE);

  15083  6 001256   200020 741300       TRMOUT       STX1  ! @KC_CGID+1,,AUTO

      513    15084        /*I* NAME: TRMOUT
      514    15085             PURPOSE: To report on the device(s) on a TERMINAL or COMGROUP
      515    15086             DESCRIPTION: TRMOUT uses type(%AZ_TRFEX# or %AZ_CGFEX#) to determine
      516    15087             which record, COMGROUP record CG_BUF or TERMINAL record TRM_BUF,
      517    15088             to report on and then reports on the devices attached to that record.
      518    15089             DSPTYP has been previously set up to describe which classes of
      519    15090             devices to report on.
      520    15091             TRMOUT then reads in the necessary DEVICE records and reports on
      521    15092             that device.
      522    15093        */
      523    15094    3   DCL TYPE SBIN;
      524    15095    3   DCL IDX SBIN;
      525    15096    3   DCL ACTYP SBIN;
      526    15097    3   DCL BLK$ PTR;
      527    15098    3      IF TYPE=%AZ_TRFEX#

  15098  6 001257   200021 470500                    LDP0    @TYPE,,AUTO
         6 001260   000000 235100                    LDA     0,,PR0
         6 001261   000776 115007                    CMPA    510,DL
         6 001262   001270 601000 6                  TNZ     s:15100

      528    15099    3      THEN IDX=TRM_BUF.CNT-1;

  15099  6 001263   000131 471400 4                  LDP1    TRM_+1
         6 001264   100000 235100                    LDA     0,,PR1
         6 001265   000001 135007                    SBLA    1,DL
         6 001266   200022 755100                    STA     IDX,,AUTO
         6 001267   001274 710000 6                  TRA     s:15101

      529    15100    3      ELSE IDX=CG_BUF.CNT-1;

  15100  6 001270   000133 471400 4                  LDP1    CG_+1
         6 001271   100000 235100                    LDA     0,,PR1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:88   
         6 001272   000001 135007                    SBLA    1,DL
         6 001273   200022 755100                    STA     IDX,,AUTO

      530    15101    4      DO WHILE(IDX>=0);

  15101  6 001274   001412 604000 6                  TMI     s:15134

      531    15102    4           IF TYPE=%AZ_TRFEX#

  15102  6 001275   200021 470500                    LDP0    @TYPE,,AUTO
         6 001276   000000 235100                    LDA     0,,PR0
         6 001277   000776 115007                    CMPA    510,DL
         6 001300   001307 601000 6                  TNZ     s:15104

      532    15103    4           THEN BLK$ = ADDR(TRM_BUF.ENT(IDX));

  15103  6 001301   200022 236100                    LDQ     IDX,,AUTO
         6 001302   000024 736000                    QLS     20
         6 001303   000001 036003                    ADLQ    1,DU
         6 001304   000131 036000 4                  ADLQ    TRM_+1
         6 001305   200024 756100                    STQ     BLK$,,AUTO
         6 001306   001314 710000 6                  TRA     s:15105

      533    15104    4           ELSE BLK$ = ADDR(CG_BUF.ENT(IDX));

  15104  6 001307   200022 236100                    LDQ     IDX,,AUTO
         6 001310   000055 402003                    MPY     45,DU
         6 001311   000001 036003                    ADLQ    1,DU
         6 001312   000133 036000 4                  ADLQ    CG_+1
         6 001313   200024 756100                    STQ     BLK$,,AUTO

      534    15105    4           ACTYP = BLK$->EL$RENT.ACTYP;

  15105  6 001314   200024 471500                    LDP1    BLK$,,AUTO
         6 001315   100000 236100                    LDQ     0,,PR1
         6 001316   000022 772000                    QRL     18
         6 001317   000777 376007                    ANQ     511,DL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:89   
         6 001320   200023 756100                    STQ     ACTYP,,AUTO

      535    15106    4           OCMESSHD.MSG# = 0;

  15106  6 001321   000000 220003                    LDX0    0,DU
         6 001322   000370 440000 4                  SXL0    OCMESSHD

      536    15107    5           DO CASE(DSPTYP);

  15107  6 001323   200006 235100                    LDA     DSPTYP,,AUTO
         6 001324   000003 115007                    CMPA    3,DL
         6 001325   001327 602005 6                  TNC     s:15107+4,AL
         6 001326   001364 710000 6                  TRA     s:15121
         6 001327   001332 710000 6                  TRA     s:15109
         6 001330   001344 710000 6                  TRA     s:15113
         6 001331   001353 710000 6                  TRA     s:15116

      537    15108    5            CASE(DSP_DEV_SUBD#);

      538    15109    5              IF ACTYP=%KLAC_TDEV OR ACTYP=%KLAC_NONE

  15109  6 001332   000003 116007                    CMPQ    3,DL
         6 001333   001336 600000 6                  TZE     s:15110
         6 001334   000000 116003                    CMPQ    0,DU
         6 001335   001341 601000 6                  TNZ     s:15111

      539    15110    5              THEN OCMESSHD.MSG# = SUBDEV_INFO_MSG#;

  15110  6 001336   000421 221003                    LDX1    273,DU
         6 001337   000370 441000 4                  SXL1    OCMESSHD
         6 001340   001364 710000 6                  TRA     s:15121

      540    15111    5              ELSE OCMESSHD.MSG# = DEV_INFO_MSG#;

  15111  6 001341   000417 221003                    LDX1    271,DU
         6 001342   000370 441000 4                  SXL1    OCMESSHD
         6 001343   001364 710000 6                  TRA     s:15121
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:90   

      541    15112    5            CASE(DSP_DEV#);

      542    15113    5              IF ACTYP=%KLAC_DEV OR ACTYP=%KLAC_TRM

  15113  6 001344   000001 116007                    CMPQ    1,DL
         6 001345   001350 600000 6                  TZE     s:15114
         6 001346   000002 116007                    CMPQ    2,DL
         6 001347   001364 601000 6                  TNZ     s:15121

      543    15114    5              THEN OCMESSHD.MSG# = DEV_INFO_MSG#;

  15114  6 001350   000417 221003                    LDX1    271,DU
         6 001351   000370 441000 4                  SXL1    OCMESSHD
         6 001352   001364 710000 6                  TRA     s:15121

      544    15115    5            CASE(DSP_SUBD#);

      545    15116    5              IF ACTYP=%KLAC_TRM

  15116  6 001353   000002 116007                    CMPQ    2,DL
         6 001354   001360 601000 6                  TNZ     s:15118

      546    15117    5              THEN OCMESSHD.MSG# = DEV_INFO_MSG#;

  15117  6 001355   000417 221003                    LDX1    271,DU
         6 001356   000370 441000 4                  SXL1    OCMESSHD
         6 001357   001364 710000 6                  TRA     s:15121

      547    15118    5              ELSE IF ACTYP~=%KLAC_DEV

  15118  6 001360   000001 116007                    CMPQ    1,DL
         6 001361   001364 600000 6                  TZE     s:15121

      548    15119    5                   THEN OCMESSHD.MSG# = SUBDEV_INFO_MSG#;

  15119  6 001362   000421 221003                    LDX1    273,DU
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:91   
         6 001363   000370 441000 4                  SXL1    OCMESSHD

      549    15120    5              END;

      550    15121    4           IF OCMESSHD.MSG#~=0

  15121  6 001364   000370 721000 4                  LXL1    OCMESSHD
         6 001365   001407 600000 6                  TZE     s:15132

      551    15122    5           THEN DO;

      552    15123    5                COM_KEY.L = LENGTHC(COM_KEY.DKY);

  15123  6 001366   013000 236003                    LDQ     5632,DU
         6 001367   000142 552040 4                  STBQ    COM_KEY,'40'O

      553    15124    5                COM_KEY.DKY = BLK$->EL$RENT.DKEY;

  15124  6 001370   000000 100500                    MLR     fill='000'O
         6 001371   100000 400013                    ADSC9   0,,PR1                   cn=2,n=11
         6 001372   000142 200013 4                  ADSC9   COM_KEY                  cn=1,n=11

      554    15125    5                CALL M$READ(FPT_RDCOM) ALTRET(CONS_ERR);

  15125  6 001373   000064 630400 5                  EPPR0   FPT_RDCOM
         6 001374   440000 713400                    CLIMB   alt,read
         6 001375   401400 401760                    pmme    nvectors=4
         6 001376   001405 702000 6                  TSX2    CONS_ERR

      555    15126    5                OCMESSHD.CADDR=EL$TERM.CADDR;

  15126  6 001377   200005 470500                    LDP0    REC$,,AUTO
         6 001400   000000 720100                    LXL0    0,,PR0
         6 001401   000370 740000 4                  STX0    OCMESSHD

      556    15127    5                CALL WR_KEYIN;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:92   
  15127  6 001402   002111 701000 6                  TSX1    WR_KEYIN
         6 001403   000000 011000                    NOP     0

      557    15128    6                DO WHILE('0'B);

  15128  6 001404   001407 710000 6                  TRA     s:15132

      558    15129    6   CONS_ERR:         CALL CONSERR;

  15129  6 001405   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 001406   000000 011000                    NOP     0

      559    15130    6                     END;

      560    15131    5                END;

      561    15132    4           IDX = IDX-1;

  15132  6 001407   000001 336007                    LCQ     1,DL
         6 001410   200022 056100                    ASQ     IDX,,AUTO

      562    15133    4           END;

  15133  6 001411   001275 605000 6                  TPL     s:15102

      563    15134    3      RETURN;

  15134  6 001412   200020 221300                    LDX1  ! @KC_CGID+1,,AUTO
         6 001413   000001 702211                    TSX2  ! 1,X1

      564    15135    3   END TRMOUT;
      565    15136    2   END TERMKEYIN;
      566    15137        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:93   
      567    15138    1   CRASH: PROC(REASON) ALTRET;

  15138  6 001414   200016 741300       CRASH        STX1  ! MSG_COUNT+2,,AUTO

      568    15139        /*I* NAME: CRASH
      569    15140             PURPOSE: To handle an FEP crash or a HOST crash by logging of devices
      570    15141             DESCRIPTION: CRASH reads in all DEVICE records for either the crashed
      571    15142             FEP or all FEPs in the event of a host crash. For each DEVICE record
      572    15143             read, CRASH calls DISCONNECT to disconnect the device and remove it
      573    15144             from its owning TERMINAL record and from its owning COMGROUP record
      574    15145             if it is a comgroup device(station). CRASH uses NDFEX as the highest
      575    15146             FEP number to disconnect devices from. Upon entry, CRASH assumes that
      576    15147             COM_KEY.FEX has been set up with the FEP number of the crashed FEP
      577    15148             or 0 if a host crash. All FEPs from COM_KEY.FEX through NDFEX are
      578    15149             affected.
      579    15150        */
      580    15151    2   DCL REASON SBIN;
      581    15152    2      COM_KEY.L = LENGTHC(COM_KEY.DKY);

  15152  6 001415   013000 236003                    LDQ     5632,DU
         6 001416   000142 552040 4                  STBQ    COM_KEY,'40'O

      582    15153    2      COM_KEY.DKY.DEVNM=' ';

  15153  6 001417   040000 100400                    MLR     fill='040'O
         6 001420   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 001421   000142 400010 4                  ADSC9   COM_KEY                  cn=2,n=8

      583    15154    3      DO WHILE ('1'B);

      584    15155    3           CALL M$PRECORD(FPT_PRECORD) ALTRET(IGNORE);

  15155  6 001422   000120 630400 5                  EPPR0   FPT_PRECORD
         6 001423   440003 713400                    CLIMB   alt,+16387
         6 001424   401000 401760                    pmme    nvectors=3
         6 001425   001426 702000 6                  TSX2    IGNORE

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:94   
      585    15156    3   IGNORE: CALL M$READ(FPT_RDCOMN) ALTRET(RD_ALT);

  15156  6 001426   000102 630400 5     IGNORE       EPPR0   FPT_RDCOMN
         6 001427   440000 713400                    CLIMB   alt,read
         6 001430   401400 401760                    pmme    nvectors=4
         6 001431   001433 702000 6                  TSX2    RD_ALT

      586    15157    4           DO WHILE('0'B);

  15157  6 001432   001451 710000 6                  TRA     s:15164

      587    15158    4   RD_ALT:      IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$EOF

  15158  6 001433   000000 470400 xsym  RD_ALT       LDP0    B$TCB$
         6 001434   000000 471500                    LDP1    0,,PR0
         6 001435   100102 236100                    LDQ     66,,PR1
         6 001436   377770 376007                    ANQ     131064,DL
         6 001437   000060 116007                    CMPQ    48,DL
         6 001440   001443 600000 6                  TZE     s:15160
         6 001441   000070 116007                    CMPQ    56,DL
         6 001442   001445 601000 6                  TNZ     s:15161

      588    15159    4                  OR B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD
      589    15160    4                THEN RETURN;

  15160  6 001443   200016 221300                    LDX1  ! MSG_COUNT+2,,AUTO
         6 001444   000001 702211                    TSX2  ! 1,X1

      590    15161    4                CALL CONSERR;

  15161  6 001445   002426 701000 6                  TSX1    CONSERR
         6 001446   000000 011000                    NOP     0

      591    15162    4   ERR:         ALTRETURN;

  15162  6 001447   200016 221300       ERR          LDX1  ! MSG_COUNT+2,,AUTO
         6 001450   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:95   

      592    15163    4                END;

      593    15164    3           COM_KEY = BIGKEY;

  15164  6 001451   000000 100400                    MLR     fill='000'O
         6 001452   000212 000014 4                  ADSC9   BIGKEY                   cn=0,n=12
         6 001453   000142 000014 4                  ADSC9   COM_KEY                  cn=0,n=12

      594    15165    3           IF COM_KEY.DKY.FEX>NDFEX

  15165  6 001454   000142 236000 4                  LDQ     COM_KEY
         6 001455   000022 772000                    QRL     18
         6 001456   000777 376007                    ANQ     511,DL
         6 001457   200007 116100                    CMPQ    NDFEX,,AUTO
         6 001460   001464 602000 6                  TNC     s:15167
         6 001461   001464 600000 6                  TZE     s:15167

      595    15166    3           THEN RETURN;

  15166  6 001462   200016 221300                    LDX1  ! MSG_COUNT+2,,AUTO
         6 001463   000001 702211                    TSX2  ! 1,X1

      596    15167    3           COM_BUF.REASON=REASON;

  15167  6 001464   200017 470500                    LDP0    @REASON,,AUTO
         6 001465   000000 236100                    LDQ     0,,PR0
         6 001466   000033 736000                    QLS     27
         6 001467   000323 552040 4                  STBQ    COM_BUF+1,'40'O

      597    15168    3           CALL DISCONNECT ALTRET(ERR);

  15168  6 001470   002202 701000 6                  TSX1    DISCONNECT
         6 001471   001447 702000 6                  TSX2    ERR

      598    15169    3           END;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:96   
  15169  6 001472   001422 710000 6                  TRA     s:15155

      599    15170    2   END CRASH;
      600    15171        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:97   
      601    15172    1   FILL_CGRD_KEY: PROC(KC_CGID);

  15172  6 001473   200016 741300       FILL_CGRD_K* STX1  ! MSG_COUNT+2,,AUTO

      602    15173        /*I* NAME: FILL_CGRD_KEY
      603    15174             PURPOSE: To fill the CGRD_KEY with info from KC_CGID
      604    15175             DESCRIPTION: FILL_CGRD_KEY takes the info in KC_CGID and places
      605    15176             it into CGRD_KEY while preserving blanks in the unused portion of
      606    15177             NAME and '0'B in the unused portion of the key
      607    15178        */
      608    15179        %KC$CGID (FPTN=KC_CGID,STCLASS=" ");
      609    15205    2      CGRD_KEY = '0'B;

  15205  6 001474   000000 100400                    MLR     fill='000'O
         6 001475   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 001476   000156 000062 4                  ADSC9   CGRD_KEY                 cn=0,n=50

      610    15206    2      CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);

  15206  6 001477   061000 236003                    LDQ     25088,DU
         6 001500   000156 552040 4                  STBQ    CGRD_KEY,'40'O

      611    15207    2      CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;

  15207  6 001501   000777 236003                    LDQ     511,DU
         6 001502   000156 552020 4                  STBQ    CGRD_KEY,'20'O

      612    15208    2      CGRD_KEY.CGK.CGID.ACCT# = KC_CGID.ACCT#;

  15208  6 001503   200017 470500                    LDP0    @KC_CGID,,AUTO
         6 001504   040000 100500                    MLR     fill='040'O
         6 001505   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         6 001506   000156 400010 4                  ADSC9   CGRD_KEY                 cn=2,n=8

      613    15209    2      CGRD_KEY.CGK.CGID.PSN# = KC_CGID.PSN#;

  15209  6 001507   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:98   
         6 001510   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6
         6 001511   000160 400006 4                  ADSC9   CGRD_KEY+2               cn=2,n=6

      614    15210    2      CGRD_KEY.CGK.CGID.NAME#.CNT = KC_CGID.NAME#.CNT;

  15210  6 001512   000004 236100                    LDQ     4,,PR0
         6 001513   000022 772000                    QRL     18
         6 001514   000162 552010 4                  STBQ    CGRD_KEY+4,'10'O

      615    15211    2      CGRD_KEY.CGK.CGID.NAME#.TXT = SUBSTR(KC_CGID.NAME#.TXT,0,

  15211  6 001515   000004 236100                    LDQ     4,,PR0
         6 001516   000033 772000                    QRL     27
         6 001517   000000 620006                    EAX0    0,QL
         6 001520   040000 100540                    MLR     fill='040'O
         6 001521   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         6 001522   000162 600037 4                  ADSC9   CGRD_KEY+4               cn=3,n=31

      616    15212    2        KC_CGID.NAME#.CNT);
      617    15213    2      RETURN;

  15213  6 001523   000001 702211                    TSX2  ! 1,X1

      618    15214    2   END FILL_CGRD_KEY;
      619    15215        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:99   
      620    15216    1   READTRM: PROC ALTRET;

  15216  6 001524   200022 741300       READTRM      STX1  ! IDX,,AUTO

      621    15217        /*I* NAME: READTRM
      622    15218             PURPOSE: To read in the TERMINAL record specified by TRD_KEY
      623    15219             DESCRIPTION: READTRM reads in the TERMINAL record of key, TRD_KEY,
      624    15220             into TRM_BUF. If TCUR_KEY=TRD_KEY, no read is needed and READTRM does
      625    15221             not bother. If more space is needed in which to hold TRM_BUF, READTRM
      626    15222             acquires it.
      627    15223        */
      628    15224    2      IF TRD_KEY=TCUR_KEY

  15224  6 001525   000000 106400                    CMPC    fill='000'O
         6 001526   000146 000012 4                  ADSC9   TRD_KEY                  cn=0,n=10
         6 001527   000152 000012 4                  ADSC9   TCUR_KEY                 cn=0,n=10
         6 001530   001532 601000 6                  TNZ     READIT

      629    15225    2      THEN RETURN;

  15225  6 001531   000001 702211                    TSX2  ! 1,X1

      630    15226    2   READIT: FPT_RDTRM.BUF_ = TRM_;

  15226  6 001532   000130 237000 4     READIT       LDAQ    TRM_
         6 001533   000050 757000 4                  STAQ    FPT_RDTRM+4

      631    15227    2      CALL M$READ (FPT_RDTRM) ALTRET (RD_ALT);

  15227  6 001534   000044 630400 4                  EPPR0   FPT_RDTRM
         6 001535   440000 713400                    CLIMB   alt,read
         6 001536   401400 401760                    pmme    nvectors=4
         6 001537   001541 702000 6                  TSX2    RD_ALT

      632    15228    3      DO WHILE('0'B);

  15228  6 001540   001570 710000 6                  TRA     s:15242
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:100  

      633    15229    3   RD_ALT: IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD

  15229  6 001541   000000 470400 xsym  RD_ALT       LDP0    B$TCB$
         6 001542   000000 471500                    LDP1    0,,PR0
         6 001543   100102 236100                    LDQ     66,,PR1
         6 001544   377770 376007                    ANQ     131064,DL
         6 001545   000070 116007                    CMPQ    56,DL
         6 001546   001554 601000 6                  TNZ     s:15234

      634    15230    4           THEN DO;

      635    15231    4   GDS:         CALL M$GDS(FPT_TRMGDS) ALTRET(CONS_ERR);

  15231  6 001547   000200 630400 5     GDS          EPPR0   FPT_TRMGDS
         6 001550   430001 713400                    CLIMB   alt,gds
         6 001551   400400 401760                    pmme    nvectors=2
         6 001552   001561 702000 6                  TSX2    CONS_ERR

      636    15232    4                GOTO READIT;

  15232  6 001553   001532 710000 6                  TRA     READIT

      637    15233    4                END;
      638    15234    3           IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$NOKEY

  15234  6 001554   001020 116007                    CMPQ    528,DL
         6 001555   001561 601000 6                  TNZ     CONS_ERR

      639    15235    3           THEN TRM_BUF.CNT = 0;           /* Empty record                       */

  15235  6 001556   000131 473400 4                  LDP3    TRM_+1
         6 001557   300000 450100                    STZ     0,,PR3
         6 001560   001570 710000 6                  TRA     s:15242

      640    15236    4           ELSE DO;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:101  
      641    15237    4   CONS_ERR:    TCUR_KEY = '0'B;           /* No current record                  */

  15237  6 001561   000000 100400       CONS_ERR     MLR     fill='000'O
         6 001562   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 001563   000152 000012 4                  ADSC9   TCUR_KEY                 cn=0,n=10

      642    15238    4                CALL CONSERR;

  15238  6 001564   002426 701000 6                  TSX1    CONSERR
         6 001565   000000 011000                    NOP     0

      643    15239    4                ALTRETURN;

  15239  6 001566   200022 221300                    LDX1  ! IDX,,AUTO
         6 001567   000000 702211                    TSX2  ! 0,X1

      644    15240    4                END;
      645    15241    3           END;

      646    15242    2      TCUR_KEY=TRD_KEY;

  15242  6 001570   000000 100400                    MLR     fill='000'O
         6 001571   000146 000012 4                  ADSC9   TRD_KEY                  cn=0,n=10
         6 001572   000152 000012 4                  ADSC9   TCUR_KEY                 cn=0,n=10

      647    15243    2      RETURN;

  15243  6 001573   200022 221300                    LDX1  ! IDX,,AUTO
         6 001574   000001 702211                    TSX2  ! 1,X1

      648    15244    2   END READTRM;
      649    15245        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:102  
      650    15246    1   READCG: PROC ALTRET;

  15246  6 001575   200022 741300       READCG       STX1  ! IDX,,AUTO

      651    15247        /*I* NAME: READCG
      652    15248             PURPOSE: To read in the COMGROUP record specified by CG_KEY
      653    15249             DESCRIPTION: READCG reads in the COMGROUP record of key, CG_KEY,
      654    15250             into CG_BUF. If CGCUR_KEY=CG_KEY, no read is needed and READCG does
      655    15251             not bother. If more space is needed in which to hold CG_BUF, READCG
      656    15252             acquires it.
      657    15253        */
      658    15254        %FPT_MADMUCK(ACCT=MADACCT,
      659    15255                     READ=YES,
      660    15256                     SN=MADSN);
      661    15272        %VLP_ACCT(FPTN=MADACCT,
      662    15273                  ACCT='        ');             /* FILLED IN BELOW                    */
      663    15286        %VLP_SN(FPTN=MADSN,
      664    15287                N=1,
      665    15288                SN='      ');                   /* FILLED IN ON CALL                  */
      666    15301    2   DCL TEMP BIT(1) AUTO;
      667    15302
      668    15303    2      TEMP = '1'B;

  15303  6 001576   400000 236003                    LDQ     -131072,DU
         6 001577   200023 756100                    STQ     TEMP,,AUTO

      669    15304    2      IF CGRD_KEY=CGCUR_KEY

  15304  6 001600   000000 106400                    CMPC    fill='000'O
         6 001601   000156 000062 4                  ADSC9   CGRD_KEY                 cn=0,n=50
         6 001602   000174 000062 4                  ADSC9   CGCUR_KEY                cn=0,n=50
         6 001603   001605 601000 6                  TNZ     READIT

      670    15305    2      THEN RETURN;

  15305  6 001604   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:103  
      671    15306    2   READIT: FPT_RDCGR.BUF_ = CG_;

  15306  6 001605   000132 237000 4     READIT       LDAQ    CG_
         6 001606   000104 757000 4                  STAQ    FPT_RDCGR+4

      672    15307    2      CALL M$READ (FPT_RDCGR) ALTRET (RD_ALT);

  15307  6 001607   000100 630400 4                  EPPR0   FPT_RDCGR
         6 001610   440000 713400                    CLIMB   alt,read
         6 001611   401400 401760                    pmme    nvectors=4
         6 001612   001614 702000 6                  TSX2    RD_ALT

      673    15308    3      DO WHILE('0'B);

  15308  6 001613   001661 710000 6                  TRA     s:15330

      674    15309    3   RD_ALT: IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$LD

  15309  6 001614   000000 470400 xsym  RD_ALT       LDP0    B$TCB$
         6 001615   000000 471500                    LDP1    0,,PR0
         6 001616   100102 236100                    LDQ     66,,PR1
         6 001617   377770 376007                    ANQ     131064,DL
         6 001620   000070 116007                    CMPQ    56,DL
         6 001621   001627 601000 6                  TNZ     s:15314

      675    15310    4           THEN DO;

      676    15311    4   GDS:         CALL M$GDS(FPT_CGGDS) ALTRET(CONS_ERR);

  15311  6 001622   000206 630400 5     GDS          EPPR0   FPT_CGGDS
         6 001623   430001 713400                    CLIMB   alt,gds
         6 001624   400400 401760                    pmme    nvectors=2
         6 001625   001652 702000 6                  TSX2    CONS_ERR

      677    15312    4                GOTO READIT;

  15312  6 001626   001605 710000 6                  TRA     READIT
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:104  

      678    15313    4                END;
      679    15314    4           IF TEMP THEN DO ;               /* DO THIS ONLY ONCE                  */

  15314  6 001627   200023 234100                    SZN     TEMP,,AUTO
         6 001630   001645 605000 6                  TPL     s:15322

      680    15315    4                TEMP = '0'B;

  15315  6 001631   200023 450100                    STZ     TEMP,,AUTO

      681    15316    4                MADACCT.ACCT#=CGRD_KEY.CGK.CGID.ACCT#;

  15316  6 001632   040000 100400                    MLR     fill='040'O
         6 001633   000156 400010 4                  ADSC9   CGRD_KEY                 cn=2,n=8
         6 001634   000436 000010 4                  ADSC9   MADACCT                  cn=0,n=8

      682    15317    4                CALL M$MADMUCK(FPT_MADMUCK) ALTRET(MADERR);

  15317  6 001635   000426 630400 4                  EPPR0   FPT_MADMUCK
         6 001636   460005 713400                    CLIMB   alt,+24581
         6 001637   401000 401760                    pmme    nvectors=3
         6 001640   001644 702000 6                  TSX2    MADERR

      683    15318    4                CGRD_KEY.CGK.CGID.PSN#=MADSN.SN#(0);

  15318  6 001641   040000 100400                    MLR     fill='040'O
         6 001642   000441 000006 4                  ADSC9   MADSN+1                  cn=0,n=6
         6 001643   000160 400006 4                  ADSC9   CGRD_KEY+2               cn=2,n=6

      684    15319    4   MADERR:      GOTO READIT;

  15319  6 001644   001605 710000 6     MADERR       TRA     READIT

      685    15320    4                END;
      686    15321
      687    15322    3           IF B$TCB.ALT$->B$ALT.ERR.CODE=%E$NOKEY
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:105  

  15322  6 001645   001020 116007                    CMPQ    528,DL
         6 001646   001652 601000 6                  TNZ     CONS_ERR

      688    15323    3           THEN CG_BUF.CNT = 0;            /* Empty record                       */

  15323  6 001647   000133 473400 4                  LDP3    CG_+1
         6 001650   300000 450100                    STZ     0,,PR3
         6 001651   001661 710000 6                  TRA     s:15330

      689    15324    4           ELSE DO;

      690    15325    4   CONS_ERR:    CGCUR_KEY = '0'B;          /* No current record                  */

  15325  6 001652   000000 100400       CONS_ERR     MLR     fill='000'O
         6 001653   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 001654   000174 000062 4                  ADSC9   CGCUR_KEY                cn=0,n=50

      691    15326    4                CALL CONSERR;

  15326  6 001655   002426 701000 6                  TSX1    CONSERR
         6 001656   000000 011000                    NOP     0

      692    15327    4                ALTRETURN;

  15327  6 001657   200022 221300                    LDX1  ! IDX,,AUTO
         6 001660   000000 702211                    TSX2  ! 0,X1

      693    15328    4                END;
      694    15329    3           END;

      695    15330    2      CGCUR_KEY=CGRD_KEY;

  15330  6 001661   000000 100400                    MLR     fill='000'O
         6 001662   000156 000062 4                  ADSC9   CGRD_KEY                 cn=0,n=50
         6 001663   000174 000062 4                  ADSC9   CGCUR_KEY                cn=0,n=50

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:106  
      696    15331    2      RETURN;

  15331  6 001664   200022 221300                    LDX1  ! IDX,,AUTO
         6 001665   000001 702211                    TSX2  ! 1,X1

      697    15332    2   END READCG;
      698    15333        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:107  
      699    15334    1   WRTRM: PROC ALTRET;

  15334  6 001666   200022 741300       WRTRM        STX1  ! IDX,,AUTO

      700    15335        /*I* NAME: WRTRM
      701    15336             PURPOSE: To write TRM_BUF to :COMAC.:SYS or delete it from :COMAC.:SYS
      702    15337             DESCRIPTION: WRTRM writes TRM_BUF to :COMAC.:SYS using the key, TRM_KEY.
      703    15338             If TRM_BUF is empty, WRTRM will try to delete the record instead.
      704    15339        */
      705    15340    2      IF TRM_BUF.CNT>0

  15340  6 001667   000131 470400 4                  LDP0    TRM_+1
         6 001670   000000 235100                    LDA     0,,PR0
         6 001671   001710 604400 6                  TMOZ    s:15346

      706    15341    3      THEN DO;

      707    15342    3           FPT_WRTRM.BUF_ = TRM_;

  15342  6 001672   000130 237000 4                  LDAQ    TRM_
         6 001673   000020 757000 4                  STAQ    FPT_WRTRM+4

      708    15343    3           FPT_WRTRM.BUF_.BOUND = 3 + TRM_BUF.CNT*SIZEC(TRM_BUF.ENT(0));

  15343  6 001674   000000 236100                    LDQ     0,,PR0
         6 001675   000004 736000                    QLS     4
         6 001676   000003 036007                    ADLQ    3,DL
         6 001677   000020 736000                    QLS     16
         6 001700   000020 676000 4                  ERQ     FPT_WRTRM+4
         6 001701   000034 376000 xsym               ANQ     B_VECTNIL+28
         6 001702   000020 656000 4                  ERSQ    FPT_WRTRM+4

      709    15344    3           CALL M$WRITE(FPT_WRTRM) ALTRET(CONS_ERR);

  15344  6 001703   000014 630400 4                  EPPR0   FPT_WRTRM
         6 001704   440001 713400                    CLIMB   alt,write
         6 001705   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:108  
         6 001706   001723 702000 6                  TSX2    CONS_ERR

      710    15345    3           END;

  15345  6 001707   001714 710000 6                  TRA     s:15347

      711    15346    2      ELSE CALL M$DELREC(FPT_TRMDEL) ALTRET(DEL_ERR);

  15346  6 001710   000144 630400 5                  EPPR0   FPT_TRMDEL
         6 001711   440002 713400                    CLIMB   alt,+16386
         6 001712   401400 401760                    pmme    nvectors=4
         6 001713   001715 702000 6                  TSX2    DEL_ERR

      712    15347    3      DO WHILE('0'B);

  15347  6 001714   001727 710000 6                  TRA     s:15354

      713    15348    3   DEL_ERR: IF B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOKEY

  15348  6 001715   000000 470400 xsym  DEL_ERR      LDP0    B$TCB$
         6 001716   000000 471500                    LDP1    0,,PR0
         6 001717   100102 236100                    LDQ     66,,PR1
         6 001720   377770 376007                    ANQ     131064,DL
         6 001721   001020 116007                    CMPQ    528,DL
         6 001722   001727 600000 6                  TZE     s:15354

      714    15349    4           THEN DO;

      715    15350    4   CONS_ERR:    CALL CONSERR;

  15350  6 001723   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 001724   000000 011000                    NOP     0

      716    15351    4                ALTRETURN;

  15351  6 001725   200022 221300                    LDX1  ! IDX,,AUTO
         6 001726   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:109  

      717    15352    4                END;
      718    15353    3           END;

      719    15354    2      RETURN;

  15354  6 001727   200022 221300                    LDX1  ! IDX,,AUTO
         6 001730   000001 702211                    TSX2  ! 1,X1

      720    15355    2   END WRTRM;
      721    15356        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:110  
      722    15357    1   WRCGR: PROC ALTRET;

  15357  6 001731   200022 741300       WRCGR        STX1  ! IDX,,AUTO

      723    15358        /*I* NAME: WRCGR
      724    15359             PURPOSE: To write CG_BUF to :COMAC.:SYS or delete it from :COMAC.:SYS
      725    15360             DESCRIPTION: WRCGR writes CG_BUF to :COMAC.:SYS using the key, CG_KEY.
      726    15361             If CG_BUF is empty, WRCGR will try to delete the record instead.
      727    15362        */
      728    15363    2      IF CG_BUF.CNT>0

  15363  6 001732   000133 470400 4                  LDP0    CG_+1
         6 001733   000000 235100                    LDA     0,,PR0
         6 001734   001753 604400 6                  TMOZ    s:15369

      729    15364    3      THEN DO;

      730    15365    3           FPT_WRCGR.BUF_ = CG_;

  15365  6 001735   000132 237000 4                  LDAQ    CG_
         6 001736   000034 757000 4                  STAQ    FPT_WRCGR+4

      731    15366    3           FPT_WRCGR.BUF_.BOUND = 3 + CG_BUF.CNT*SIZEC(CG_BUF.ENT(0));

  15366  6 001737   000000 236100                    LDQ     0,,PR0
         6 001740   000264 402007                    MPY     180,DL
         6 001741   000003 036007                    ADLQ    3,DL
         6 001742   000020 736000                    QLS     16
         6 001743   000034 676000 4                  ERQ     FPT_WRCGR+4
         6 001744   000034 376000 xsym               ANQ     B_VECTNIL+28
         6 001745   000034 656000 4                  ERSQ    FPT_WRCGR+4

      732    15367    3           CALL M$WRITE(FPT_WRCGR) ALTRET(CONS_ERR);

  15367  6 001746   000030 630400 4                  EPPR0   FPT_WRCGR
         6 001747   440001 713400                    CLIMB   alt,write
         6 001750   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:111  
         6 001751   001766 702000 6                  TSX2    CONS_ERR

      733    15368    3           END;

  15368  6 001752   001757 710000 6                  TRA     s:15370

      734    15369    2      ELSE CALL M$DELREC(FPT_CGDEL) ALTRET(DEL_ERR);

  15369  6 001753   000156 630400 5                  EPPR0   FPT_CGDEL
         6 001754   440002 713400                    CLIMB   alt,+16386
         6 001755   401400 401760                    pmme    nvectors=4
         6 001756   001760 702000 6                  TSX2    DEL_ERR

      735    15370    3      DO WHILE('0'B);

  15370  6 001757   001772 710000 6                  TRA     s:15377

      736    15371    3   DEL_ERR: IF B$TCB.ALT$->B$ALT.ERR.CODE~=%E$NOKEY

  15371  6 001760   000000 470400 xsym  DEL_ERR      LDP0    B$TCB$
         6 001761   000000 471500                    LDP1    0,,PR0
         6 001762   100102 236100                    LDQ     66,,PR1
         6 001763   377770 376007                    ANQ     131064,DL
         6 001764   001020 116007                    CMPQ    528,DL
         6 001765   001772 600000 6                  TZE     s:15377

      737    15372    4           THEN DO;

      738    15373    4   CONS_ERR:    CALL CONSERR;

  15373  6 001766   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 001767   000000 011000                    NOP     0

      739    15374    4                ALTRETURN;

  15374  6 001770   200022 221300                    LDX1  ! IDX,,AUTO
         6 001771   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:112  

      740    15375    4                END;
      741    15376    3           END;

      742    15377    2      RETURN;

  15377  6 001772   200022 221300                    LDX1  ! IDX,,AUTO
         6 001773   000001 702211                    TSX2  ! 1,X1

      743    15378    2   END WRCGR;
      744    15379        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:113  
      745    15380    1   GETENT: PROC(TYPE) ALTRET;

  15380  6 001774   200020 741300       GETENT       STX1  ! @KC_CGID+1,,AUTO

      746    15381        /*I* NAME: GETENT
      747    15382             PURPOSE: To get another entry into TRM_BUF or CG_BUF depending on TYPE
      748    15383             DESCRIPTION: GETENT assures that there is room available at the end
      749    15384             of either TRM_BUF or CG_BUF in which to place another device entr.
      750    15385             If more space is needed, GETENT performs the necessary M$GDS pmme to
      751    15386             obtain it. Either TRM_BUF.CNT or CG_BUF.CNT is incremented to reflect
      752    15387             the changed size. GETENT also zeroes out the new entry in preparation
      753    15388             for the calling procedure to fill it in. TYPE is used to determine
      754    15389             which of the two records to enlarge and may have the values %AZ_TRFEX#
      755    15390             or %AZ_CGFEX#.
      756    15391        */
      757    15392    2   DCL TYPE SBIN;
      758    15393    2      IF TYPE=%AZ_CGFEX#

  15393  6 001775   200021 470500                    LDP0    @TYPE,,AUTO
         6 001776   000000 235100                    LDA     0,,PR0
         6 001777   000777 115007                    CMPA    511,DL
         6 002000   002017 601000 6                  TNZ     s:15397

      759    15394    2      THEN IF (3 + (CG_BUF.CNT+1)*SIZEC(CG_BUF.ENT(0))) > CG_.W1.VSIZE#

  15394  6 002001   000133 471400 4                  LDP1    CG_+1
         6 002002   100000 236100                    LDQ     0,,PR1
         6 002003   000264 402007                    MPY     180,DL
         6 002004   000267 036007                    ADLQ    183,DL
         6 002005   200030 756100                    STQ     CURPGS+4,,AUTO
         6 002006   000132 236000 4                  LDQ     CG_
         6 002007   000020 772000                    QRL     16
         6 002010   200030 116100                    CMPQ    CURPGS+4,,AUTO
         6 002011   002034 605000 6                  TPL     s:15399

      760    15395    2           THEN CALL M$GDS(FPT_CGGDS) ALTRET(CONS_ERR);

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:114  
  15395  6 002012   000206 630400 5                  EPPR0   FPT_CGGDS
         6 002013   430001 713400                    CLIMB   alt,gds
         6 002014   400400 401760                    pmme    nvectors=2
         6 002015   002064 702000 6                  TSX2    CONS_ERR
         6 002016   002034 710000 6                  TRA     s:15399

      761    15396    2           ELSE ;
      762    15397    2      ELSE IF (3 + (TRM_BUF.CNT+1)*SIZEC(TRM_BUF.ENT(0))) > TRM_.W1.VSIZE#

  15397  6 002017   000131 471400 4                  LDP1    TRM_+1
         6 002020   100000 235100                    LDA     0,,PR1
         6 002021   000004 735000                    ALS     4
         6 002022   000023 035007                    ADLA    19,DL
         6 002023   200030 755100                    STA     CURPGS+4,,AUTO
         6 002024   000130 236000 4                  LDQ     TRM_
         6 002025   000020 772000                    QRL     16
         6 002026   200030 116100                    CMPQ    CURPGS+4,,AUTO
         6 002027   002034 605000 6                  TPL     s:15399

      763    15398    2           THEN CALL M$GDS(FPT_TRMGDS) ALTRET(CONS_ERR);

  15398  6 002030   000200 630400 5                  EPPR0   FPT_TRMGDS
         6 002031   430001 713400                    CLIMB   alt,gds
         6 002032   400400 401760                    pmme    nvectors=2
         6 002033   002064 702000 6                  TSX2    CONS_ERR

      764    15399    2      IF TYPE=%AZ_CGFEX#

  15399  6 002034   200021 470500                    LDP0    @TYPE,,AUTO
         6 002035   000000 235100                    LDA     0,,PR0
         6 002036   000777 115007                    CMPA    511,DL
         6 002037   002052 601000 6                  TNZ     s:15405

      765    15400    3      THEN DO;

      766    15401    3           CG_BUF.ENT(CG_BUF.CNT) = '0'B;  /* Clear out the new entry            */

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:115  
  15401  6 002040   000133 471400 4                  LDP1    CG_+1
         6 002041   100000 236100                    LDQ     0,,PR1
         6 002042   000055 402007                    MPY     45,DL
         6 002043   000002 736000                    QLS     2
         6 002044   000106 100400                    MLR     fill='000'O
         6 002045   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 002046   100001 000264                    ADSC9   1,Q,PR1                  cn=0,n=180

      767    15402    3           CG_BUF.CNT = CG_BUF.CNT+1;

  15402  6 002047   000133 471400 4                  LDP1    CG_+1
         6 002050   100000 054100                    AOS     0,,PR1

      768    15403    3           END;

  15403  6 002051   002063 710000 6                  TRA     s:15408

      769    15404    3      ELSE DO;

      770    15405    3           TRM_BUF.ENT(TRM_BUF.CNT) = '0'B; /* Clear it out                      */

  15405  6 002052   000131 471400 4                  LDP1    TRM_+1
         6 002053   100000 235100                    LDA     0,,PR1
         6 002054   000002 735000                    ALS     2
         6 002055   000002 735000                    ALS     2
         6 002056   000105 100400                    MLR     fill='000'O
         6 002057   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 002060   100001 000015                    ADSC9   1,A,PR1                  cn=0,n=13

      771    15406    3           TRM_BUF.CNT = TRM_BUF.CNT+1;

  15406  6 002061   000131 471400 4                  LDP1    TRM_+1
         6 002062   100000 054100                    AOS     0,,PR1

      772    15407    3           END;

      773    15408    3      DO WHILE('0'B);
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:116  

  15408  6 002063   002070 710000 6                  TRA     s:15412

      774    15409    3   CONS_ERR: CALL CONSERR;

  15409  6 002064   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 002065   000000 011000                    NOP     0

      775    15410    3           ALTRETURN;

  15410  6 002066   200020 221300                    LDX1  ! @KC_CGID+1,,AUTO
         6 002067   000000 702211                    TSX2  ! 0,X1

      776    15411    3           END;

      777    15412    2      RETURN;

  15412  6 002070   200020 221300                    LDX1  ! @KC_CGID+1,,AUTO
         6 002071   000001 702211                    TSX2  ! 1,X1

      778    15413    2   END GETENT;
      779    15414        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:117  
      780    15415    1   WR_KEYINCD: PROC;

  15415  6 002072   200026 741300       WR_KEYINCD   STX1  ! CURPGS+2,,AUTO

      781    15416        /*I* NAME: WR_KEYINCD
      782    15417             PURPOSE: To write an informational message to the console(s)
      783    15418             DESCRIPTION: WR_KEYINCD first sets up the CADDR for a message to be
      784    15419             sent out and then sets up its MSG#. For the rest, see *I* for
      785    15420             WR_KEYIN.
      786    15421        */
      787    15422    2      IF COM_BUF.ACTYP=%KLAC_TDEV

  15422  6 002073   000323 236000 4                  LDQ     COM_BUF+1
         6 002074   000777 376003                    ANQ     511,DU
         6 002075   000003 116003                    CMPQ    3,DU
         6 002076   002104 601000 6                  TNZ     s:15428

      788    15423    3      THEN DO;

      789    15424    3           OCMESSHD.MSG#=SUBDEV_CON_MSG#;

  15424  6 002077   000420 220003                    LDX0    272,DU
         6 002100   000370 440000 4                  SXL0    OCMESSHD

      790    15425    3           OCMESSHD.CADDR=M_COMM|M_NONSYS;

  15425  6 002101   004040 222003                    LDX2    2080,DU
         6 002102   000370 742000 4                  STX2    OCMESSHD

      791    15426    3           END;

  15426  6 002103   002110 710000 6                  TRA     s:15430

      792    15427    3      ELSE DO;

      793    15428    3           OCMESSHD.MSG#=DEV_CON_MSG#;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:118  
  15428  6 002104   000416 220003                    LDX0    270,DU
         6 002105   000370 440000 4                  SXL0    OCMESSHD

      794    15429    3           OCMESSHD.CADDR=M_COMM;

  15429  6 002106   004000 222003                    LDX2    2048,DU
         6 002107   000370 742000 4                  STX2    OCMESSHD

      795    15430    3           END;

  15430  6 002110   002112 710000 6                  TRA     s:15438

      796    15431    2   WR_KEYIN: ENTRY;

  15431  6 002111   200026 741300       WR_KEYIN     STX1  ! CURPGS+2,,AUTO

      797    15432        /*I* NAME: WR_KEYIN
      798    15433             PURPOSE: To write a message to the console(s)
      799    15434             DESCRIPTION: WR_KEYIN fills in OCMESSHD from COM_BUF and then
      800    15435             writes this message to KEYIN. It is assumed that CADDR and MSG#
      801    15436             have been previously set up.
      802    15437        */
      803    15438    2      MSG_COUNT = MSG_COUNT+1;

  15438  6 002112   200014 235100                    LDA     MSG_COUNT,,AUTO
         6 002113   000001 035007                    ADLA    1,DL
         6 002114   200014 755100                    STA     MSG_COUNT,,AUTO

      804    15439    2      OCMESSHD.DEVNM = COM_BUF.DEVNM;

  15439  6 002115   040000 100400                    MLR     fill='040'O
         6 002116   000326 400010 4                  ADSC9   COM_BUF+4                cn=2,n=8
         6 002117   000405 400010 4                  ADSC9   OCMESSHD+13              cn=2,n=8

      805    15440    2      OCMESSHD.ASSOCTRM = COM_BUF.ASSOCTRM;

  15440  6 002120   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:119  
         6 002121   000333 400010 4                  ADSC9   COM_BUF+9                cn=2,n=8
         6 002122   000403 400010 4                  ADSC9   OCMESSHD+11              cn=2,n=8

      806    15441    2      OCMESSHD.WSN = COM_BUF.ASSOCTRM;

  15441  6 002123   040000 100400                    MLR     fill='040'O
         6 002124   000333 400010 4                  ADSC9   COM_BUF+9                cn=2,n=8
         6 002125   000373 000010 4                  ADSC9   OCMESSHD+3               cn=0,n=8

      807    15442    2      OCMESSHD.FEX      = COM_BUF.FEX;

  15442  6 002126   000324 236000 4                  LDQ     COM_BUF+2
         6 002127   000022 772000                    QRL     18
         6 002130   000400 552010 4                  STBQ    OCMESSHD+8,'10'O

      808    15443    2      OCMESSHD.FEPNAME = COM_BUF.FEPNAME;

  15443  6 002131   040000 100400                    MLR     fill='040'O
         6 002132   000362 000010 4                  ADSC9   COM_BUF+32               cn=0,n=8
         6 002133   000400 600010 4                  ADSC9   OCMESSHD+8               cn=3,n=8

      809    15444    2      OCMESSHD.PORT     = COM_BUF.TERMID.CHANNEL;

  15444  6 002134   000000 100400                    MLR     fill='000'O
         6 002135   000325 000002 4                  ADSC9   COM_BUF+3                cn=0,n=2
         6 002136   000402 600002 4                  ADSC9   OCMESSHD+10              cn=3,n=2

      810    15445    2      OCMESSHD.USEAGE=COM_BUF.USEAGE;

  15445  6 002137   000335 236000 4                  LDQ     COM_BUF+11
         6 002140   000011 736000                    QLS     9
         6 002141   000403 552020 4                  STBQ    OCMESSHD+11,'20'O

      811    15446    2      OCMESSHD.DISCRSN = COM_BUF.REASON;

  15446  6 002142   000323 236000 4                  LDQ     COM_BUF+1
         6 002143   000033 772000                    QRL     27
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:120  
         6 002144   000407 552004 4                  STBQ    OCMESSHD+15,'04'O

      812    15447    2      OCMESSHD.TNAME=COM_BUF.TNAME;

  15447  6 002145   040000 100400                    MLR     fill='040'O
         6 002146   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
         6 002147   000410 000010 4                  ADSC9   OCMESSHD+16              cn=0,n=8

      813    15448    2      IF COM_BUF.ACTIVE

  15448  6 002150   000335 236000 4                  LDQ     COM_BUF+11
         6 002151   000400 316007                    CANQ    256,DL
         6 002152   002156 600000 6                  TZE     s:15452

      814    15449    2      THEN
      815    15450    2           OCMESSHD.ACTIVE = 1;

  15450  6 002153   001000 236003                    LDQ     512,DU
         6 002154   000412 552040 4                  STBQ    OCMESSHD+18,'40'O
         6 002155   002160 710000 6                  TRA     s:15453

      816    15451    2      ELSE
      817    15452    2           OCMESSHD.ACTIVE = 0;

  15452  6 002156   000000 236003                    LDQ     0,DU
         6 002157   000412 552040 4                  STBQ    OCMESSHD+18,'40'O

      818    15453    2      OCMESSHD.CGACCT=COM_BUF.CGACCT;

  15453  6 002160   040000 100400                    MLR     fill='040'O
         6 002161   000356 000010 4                  ADSC9   COM_BUF+28               cn=0,n=8
         6 002162   000412 200010 4                  ADSC9   OCMESSHD+18              cn=1,n=8

      819    15454    2      OCMESSHD.CGPSN=COM_BUF.CGPSN;

  15454  6 002163   040000 100400                    MLR     fill='040'O
         6 002164   000360 000006 4                  ADSC9   COM_BUF+30               cn=0,n=6
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:121  
         6 002165   000414 200006 4                  ADSC9   OCMESSHD+20              cn=1,n=6

      820    15455    2      OCMESSHD.CGNAME=COM_BUF.CGNAME.TXT;

  15455  6 002166   040000 100400                    MLR     fill='040'O
         6 002167   000346 200037 4                  ADSC9   COM_BUF+20               cn=1,n=31
         6 002170   000415 600040 4                  ADSC9   OCMESSHD+21              cn=3,n=32

      821    15456    2      OCMESSHD.LEN(CGNMI#)=COM_BUF.CGNAME.CNT;

  15456  6 002171   000346 236000 4                  LDQ     COM_BUF+20
         6 002172   000011 772000                    QRL     9
         6 002173   000400 552020 4                  STBQ    OCMESSHD+8,'20'O

      822    15457    2      CALL M$WRITE(FPT_WR_CSCG) ALTRET(RTN);

  15457  6 002174   000034 630400 5                  EPPR0   FPT_WR_CSCG
         6 002175   440001 713400                    CLIMB   alt,write
         6 002176   401400 401760                    pmme    nvectors=4
         6 002177   002200 702000 6                  TSX2    RTN

      823    15458    2   RTN: RETURN;

  15458  6 002200   200026 221300       RTN          LDX1  ! CURPGS+2,,AUTO
         6 002201   000001 702211                    TSX2  ! 1,X1

      824    15459    2   END WR_KEYINCD;
      825    15460        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:122  
      826    15461    1   DISCONNECT: PROC ALTRET;

  15461  6 002202   200020 741300       DISCONNECT   STX1  ! @KC_CGID+1,,AUTO

      827    15462        /*I* NAME: DISCONNECT
      828    15463             PURPOSE: To disconnect the device of COM_BUF from the system
      829    15464             DESCRIPTION: A disconnect message is written via WR_KEYINCD.
      830    15465             The device is removed from the owning TERMINAL record
      831    15466             and if this is a COMGROUP device, it is removed from the owning
      832    15467             COMGROUP record also.
      833    15468             Finally, the COM_BUF record is deleted from the :COMAC file (it
      834    15469             is assumed that COM_KEY contains the key of COM_BUF for this to
      835    15470             work).
      836    15471        */
      837    15472    2      IF COM_BUF.ACTYP~=%KLAC_NONE

  15472  6 002203   000323 236000 4                  LDQ     COM_BUF+1
         6 002204   000777 316003                    CANQ    511,DU
         6 002205   002232 600000 6                  TZE     s:15483

      838    15473    3      THEN DO;

      839    15474    3           IF COM_BUF.REASON~=%KLDR_HCRSH

  15474  6 002206   000323 236000 4                  LDQ     COM_BUF+1
         6 002207   777000 376003                    ANQ     -512,DU
         6 002210   005000 116003                    CMPQ    2560,DU
         6 002211   002216 600000 6                  TZE     s:15479

      840    15475    4           THEN DO;

      841    15476    4                OCMESSHD.CONNECT=2;

  15476  6 002212   002000 236007                    LDQ     1024,DL
         6 002213   000407 552010 4                  STBQ    OCMESSHD+15,'10'O

      842    15477    4                CALL WR_KEYINCD;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:123  

  15477  6 002214   002072 701000 6                  TSX1    WR_KEYINCD
         6 002215   000000 011000                    NOP     0

      843    15478    4                END;

      844    15479    3           COM_BUF.FINAL.UTS = EL$ENTRY.UTS;

  15479  6 002216   200003 470500                    LDP0    @RECVEC,,AUTO
         6 002217   000001 471500                    LDP1    1,,PR0
         6 002220   100000 235100                    LDA     0,,PR1
         6 002221   100001 236100                    LDQ     1,,PR1
         6 002222   000011 773000                    LRL     9
         6 002223   000341 756000 4                  STQ     COM_BUF+15

      845    15480    3           FPT_WRLOG.BUF_ = VECTOR(COM_BUF);

  15480  6 002224   000010 237000 7                  LDAQ    8
         6 002225   000004 757000 4                  STAQ    FPT_WRLOG+4

      846    15481    3           CALL M$WRITE (FPT_WRLOG) ALTRET(CONS_ERR);

  15481  6 002226   000000 630400 4                  EPPR0   FPT_WRLOG
         6 002227   440001 713400                    CLIMB   alt,write
         6 002230   401400 401760                    pmme    nvectors=4
         6 002231   002316 702000 6                  TSX2    CONS_ERR

      847    15482    3           END;

      848    15483    2      IF COM_BUF.TNAME~=' *FEP*' AND COM_BUF.TNAME~=' *NOTRM*'

  15483  6 002232   040000 106400                    CMPC    fill='040'O
         6 002233   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
         6 002234   000260 000006 5                  ADSC9   ISCGID+12                cn=0,n=6
         6 002235   002257 600000 6                  TZE     s:15492
         6 002236   040000 106400                    CMPC    fill='040'O
         6 002237   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:124  
         6 002240   000262 000010 5                  ADSC9   ISCGID+14                cn=0,n=8
         6 002241   002257 600000 6                  TZE     s:15492

      849    15484    3      THEN DO;

      850    15485    3           TRD_KEY.L = LENGTHC(TRD_KEY)-1;

  15485  6 002242   011000 236003                    LDQ     4608,DU
         6 002243   000146 552040 4                  STBQ    TRD_KEY,'40'O

      851    15486    3           TRD_KEY.UFEX = %AZ_TRFEX#;

  15486  6 002244   000776 236003                    LDQ     510,DU
         6 002245   000146 552020 4                  STBQ    TRD_KEY,'20'O

      852    15487    3           TRD_KEY.TNAME=COM_BUF.TNAME;

  15487  6 002246   040000 100400                    MLR     fill='040'O
         6 002247   000331 400010 4                  ADSC9   COM_BUF+7                cn=2,n=8
         6 002250   000146 400010 4                  ADSC9   TRD_KEY                  cn=2,n=8

      853    15488    3           CALL READTRM ALTRET (ERR);

  15488  6 002251   001524 701000 6                  TSX1    READTRM
         6 002252   002320 702000 6                  TSX2    ERR

      854    15489    3           CALL DELDEVTRM;

  15489  6 002253   002366 701000 6                  TSX1    DELDEVTRM
         6 002254   000000 011000                    NOP     0

      855    15490    3           CALL WRTRM ALTRET(ERR);

  15490  6 002255   001666 701000 6                  TSX1    WRTRM
         6 002256   002320 702000 6                  TSX2    ERR

      856    15491    3           END;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:125  

      857    15492    2      IF COM_BUF.ATYP=%KLAT_CG#            /* OR COM_BUF.ATYP=%KLAT_FEP#         */

  15492  6 002257   000323 236000 4                  LDQ     COM_BUF+1
         6 002260   777000 376007                    ANQ     -512,DL
         6 002261   002000 116007                    CMPQ    1024,DL
         6 002262   002311 601000 6                  TNZ     s:15504

      858    15493    3      THEN DO;

      859    15494    3           CGRD_KEY = '0'B;

  15494  6 002263   000000 100400                    MLR     fill='000'O
         6 002264   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 002265   000156 000062 4                  ADSC9   CGRD_KEY                 cn=0,n=50

      860    15495    3           CGRD_KEY.L = LENGTHC(CGRD_KEY.CGK);

  15495  6 002266   061000 236003                    LDQ     25088,DU
         6 002267   000156 552040 4                  STBQ    CGRD_KEY,'40'O

      861    15496    3           CGRD_KEY.CGK.UFEX = %AZ_CGFEX#;

  15496  6 002270   000777 236003                    LDQ     511,DU
         6 002271   000156 552020 4                  STBQ    CGRD_KEY,'20'O

      862    15497    3           CGRD_KEY.CGK.CGID.ACCT#=COM_BUF.CGACCT;

  15497  6 002272   040000 100400                    MLR     fill='040'O
         6 002273   000356 000010 4                  ADSC9   COM_BUF+28               cn=0,n=8
         6 002274   000156 400010 4                  ADSC9   CGRD_KEY                 cn=2,n=8

      863    15498    3           CGRD_KEY.CGK.CGID.PSN#=COM_BUF.CGPSN;

  15498  6 002275   040000 100400                    MLR     fill='040'O
         6 002276   000360 000006 4                  ADSC9   COM_BUF+30               cn=0,n=6
         6 002277   000160 400006 4                  ADSC9   CGRD_KEY+2               cn=2,n=6
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:126  

      864    15499    3           CGRD_KEY.CGK.CGID.NAME#=COM_BUF.CGNAME;

  15499  6 002300   000000 100400                    MLR     fill='000'O
         6 002301   000346 000040 4                  ADSC9   COM_BUF+20               cn=0,n=32
         6 002302   000162 400040 4                  ADSC9   CGRD_KEY+4               cn=2,n=32

      865    15500    3           CALL READCG ALTRET (ERR);

  15500  6 002303   001575 701000 6                  TSX1    READCG
         6 002304   002320 702000 6                  TSX2    ERR

      866    15501    3           CALL DELDEVCG;

  15501  6 002305   002324 701000 6                  TSX1    DELDEVCG
         6 002306   000000 011000                    NOP     0

      867    15502    3           CALL WRCGR ALTRET(ERR);

  15502  6 002307   001731 701000 6                  TSX1    WRCGR
         6 002310   002320 702000 6                  TSX2    ERR

      868    15503    3           END;

      869    15504    2      CALL M$DELREC(FPT_DELREC) ALTRET(CONS_ERR);

  15504  6 002311   000132 630400 5                  EPPR0   FPT_DELREC
         6 002312   440002 713400                    CLIMB   alt,+16386
         6 002313   401400 401760                    pmme    nvectors=4
         6 002314   002316 702000 6                  TSX2    CONS_ERR

      870    15505    3      DO WHILE('0'B);

  15505  6 002315   002322 710000 6                  TRA     s:15509

      871    15506    3   CONS_ERR: CALL CONSERR;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:127  
  15506  6 002316   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 002317   000000 011000                    NOP     0

      872    15507    3   ERR:    ALTRETURN;

  15507  6 002320   200020 221300       ERR          LDX1  ! @KC_CGID+1,,AUTO
         6 002321   000000 702211                    TSX2  ! 0,X1

      873    15508    3           END;

      874    15509    2      RETURN;

  15509  6 002322   200020 221300                    LDX1  ! @KC_CGID+1,,AUTO
         6 002323   000001 702211                    TSX2  ! 1,X1

      875    15510        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:128  
      876    15511    2   DELDEVCG: PROC;

  15511  6 002324   200022 741300       DELDEVCG     STX1  ! IDX,,AUTO

      877    15512        /*I* NAME: DELDEVCG
      878    15513             PURPOSE: To remove the device of COM_KEY from CG_BUF
      879    15514             DESCRIPTION: DELDEVCG searches through CG_BUF for any occurrences
      880    15515             of the device of COM_KEY and removes them from CG_BUF. It is assumed
      881    15516             that the correct COM_KEY and CG_BUF have been set up previous to
      882    15517             this call.
      883    15518        */
      884    15519    3   DCL I SBIN;
      885    15520    3      I = 0;

  15520  6 002325   200023 450100                    STZ     I,,AUTO

      886    15521    4      DO WHILE(I<CG_BUF.CNT);

  15521  6 002326   000133 470400 4                  LDP0    CG_+1
         6 002327   200023 236100                    LDQ     I,,AUTO
         6 002330   000000 116100                    CMPQ    0,,PR0
         6 002331   002364 605000 6                  TPL     s:15529

      887    15522    4           IF CG_BUF.ENT.DKEY(I)=COM_KEY.DKY

  15522  6 002332   200023 236100                    LDQ     I,,AUTO
         6 002333   000264 402007                    MPY     180,DL
         6 002334   000133 470400 4                  LDP0    CG_+1
         6 002335   000000 106506                    CMPC    fill='000'O
         6 002336   000001 400013                    ADSC9   1,Q,PR0                  cn=2,n=11
         6 002337   000142 200013 4                  ADSC9   COM_KEY                  cn=1,n=11
         6 002340   002357 601000 6                  TNZ     s:15527

      888    15523    5           THEN DO;

      889    15524    5                CG_BUF.CNT = CG_BUF.CNT-1;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:129  
  15524  6 002341   000001 336007                    LCQ     1,DL
         6 002342   000000 056100                    ASQ     0,,PR0

      890    15525    5                CG_BUF.ENT(I) = CG_BUF.ENT(CG_BUF.CNT);

  15525  6 002343   000133 470400 4                  LDP0    CG_+1
         6 002344   000000 236100                    LDQ     0,,PR0
         6 002345   000055 402007                    MPY     45,DL
         6 002346   000002 736000                    QLS     2
         6 002347   200030 756100                    STQ     CURPGS+4,,AUTO
         6 002350   200023 236100                    LDQ     I,,AUTO
         6 002351   000264 402007                    MPY     180,DL
         6 002352   200030 235100                    LDA     CURPGS+4,,AUTO
         6 002353   000106 100505                    MLR     fill='000'O
         6 002354   000001 000264                    ADSC9   1,A,PR0                  cn=0,n=180
         6 002355   000001 000264                    ADSC9   1,Q,PR0                  cn=0,n=180

      891    15526    5                END;

  15526  6 002356   002360 710000 6                  TRA     s:15528

      892    15527    4           ELSE I = I+1;

  15527  6 002357   200023 054100                    AOS     I,,AUTO

      893    15528    4           END;

  15528  6 002360   000133 470400 4                  LDP0    CG_+1
         6 002361   200023 236100                    LDQ     I,,AUTO
         6 002362   000000 116100                    CMPQ    0,,PR0
         6 002363   002332 604000 6                  TMI     s:15522

      894    15529    3      RETURN;

  15529  6 002364   200022 221300                    LDX1  ! IDX,,AUTO
         6 002365   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:130  
      895    15530    3   END DELDEVCG;
      896    15531        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:131  
      897    15532    2   DELDEVTRM: PROC;

  15532  6 002366   200022 741300       DELDEVTRM    STX1  ! IDX,,AUTO

      898    15533        /*I* NAME: DELDEVTRM
      899    15534             PURPOSE: To remove the device of COM_KEY from TRM_BUF
      900    15535             DESCRIPTION: DELDEVTRM searches through TRM_BUF for any occurrences
      901    15536             of the device of COM_KEY and removes them from TRM_BUF. It is assumed
      902    15537             that the correct COM_KEY and TRM_BUF have been set up previous to
      903    15538             this call.
      904    15539        */
      905    15540    3   DCL I SBIN;
      906    15541    3      I = 0;

  15541  6 002367   200023 450100                    STZ     I,,AUTO

      907    15542    4      DO WHILE(I<TRM_BUF.CNT);

  15542  6 002370   000131 470400 4                  LDP0    TRM_+1
         6 002371   200023 236100                    LDQ     I,,AUTO
         6 002372   000000 116100                    CMPQ    0,,PR0
         6 002373   002424 605000 6                  TPL     s:15550

      908    15543    4           IF TRM_BUF.ENT.DKEY(I)=COM_KEY.DKY

  15543  6 002374   200023 235100                    LDA     I,,AUTO
         6 002375   000004 735000                    ALS     4
         6 002376   000131 470400 4                  LDP0    TRM_+1
         6 002377   000000 106505                    CMPC    fill='000'O
         6 002400   000001 400013                    ADSC9   1,A,PR0                  cn=2,n=11
         6 002401   000142 200013 4                  ADSC9   COM_KEY                  cn=1,n=11
         6 002402   002417 601000 6                  TNZ     s:15548

      909    15544    5           THEN DO;

      910    15545    5                TRM_BUF.CNT = TRM_BUF.CNT-1;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:132  
  15545  6 002403   000001 336007                    LCQ     1,DL
         6 002404   000000 056100                    ASQ     0,,PR0

      911    15546    5                TRM_BUF.ENT(I) = TRM_BUF.ENT(TRM_BUF.CNT);

  15546  6 002405   000131 470400 4                  LDP0    TRM_+1
         6 002406   000000 235100                    LDA     0,,PR0
         6 002407   000002 735000                    ALS     2
         6 002410   000002 735000                    ALS     2
         6 002411   200023 236100                    LDQ     I,,AUTO
         6 002412   000004 736000                    QLS     4
         6 002413   000106 100505                    MLR     fill='000'O
         6 002414   000001 000015                    ADSC9   1,A,PR0                  cn=0,n=13
         6 002415   000001 000015                    ADSC9   1,Q,PR0                  cn=0,n=13

      912    15547    5                END;

  15547  6 002416   002420 710000 6                  TRA     s:15549

      913    15548    4           ELSE I = I+1;

  15548  6 002417   200023 054100                    AOS     I,,AUTO

      914    15549    4           END;

  15549  6 002420   000131 470400 4                  LDP0    TRM_+1
         6 002421   200023 236100                    LDQ     I,,AUTO
         6 002422   000000 116100                    CMPQ    0,,PR0
         6 002423   002374 604000 6                  TMI     s:15543

      915    15550    3      RETURN;

  15550  6 002424   200022 221300                    LDX1  ! IDX,,AUTO
         6 002425   000001 702211                    TSX2  ! 1,X1

      916    15551    3   END DELDEVTRM;
      917    15552    2   END DISCONNECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:133  
      918    15553        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:134  
      919    15554    1   CONSERR: PROC;

  15554  6 002426   200026 741300       CONSERR      STX1  ! CURPGS+2,,AUTO

      920    15555        /*I* NAME: CONSERR
      921    15556             PURPOSE: To put out error messages to the SYSTEM console(s)
      922    15557             DESCRIPTION: CONSERR formats a message for KEYIN which contains
      923    15558             B$ALT.ERR destined for the SYSTEM console(s). This is intended as
      924    15559             an informational path for any unforseen problems AZC$ACCTNG may encounter.
      925    15560        */
      926    15561    2      OCMESSHD.CER.CACER=B$TCB.ALT$->B$ALT.ERR;

  15561  6 002427   000000 470400 xsym               LDP0    B$TCB$
         6 002430   000000 471500                    LDP1    0,,PR0
         6 002431   000000 100500                    MLR     fill='000'O
         6 002432   100102 000004                    ADSC9   66,,PR1                  cn=0,n=4
         6 002433   000405 400004 4                  ADSC9   OCMESSHD+13              cn=2,n=4

      927    15562    2      OCMESSHD.MSG#=BAD_COMAC_MSG#;

  15562  6 002434   000423 220003                    LDX0    275,DU
         6 002435   000370 440000 4                  SXL0    OCMESSHD

      928    15563    2      OCMESSHD.CADDR=M_SYS;

  15563  6 002436   200000 222003                    LDX2    65536,DU
         6 002437   000370 742000 4                  STX2    OCMESSHD

      929    15564        /*N* CALL M$WRITE (FPT_WR_CSCG) ALTRET (IGNORE);*/
      930    15565    2   IGNORE: RETURN;

  15565  6 002440   000001 702211       IGNORE       TSX2  ! 1,X1

      931    15566    2   END CONSERR;
      932    15567        %EJECT;
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:135  
      933    15568    1   CLEANUP: PROC;

  15568  6 002441   200016 741300       CLEANUP      STX1  ! MSG_COUNT+2,,AUTO

      934    15569        /*I* NAME: CLEANUP
      935    15570             PURPOSE: To do any cleanup necessary before returning from AZC$ACCTNG
      936    15571             DESCRIPTION: CLEANUP releases excess memory pages held by CG_ and
      937    15572             TRM_. At least 1 page apiece is retained (if it exists already).
      938    15573        */
      939    15574    2      CALL DUMPMEM(TRM_,4+TRM_BUF.CNT*SIZEC(TRM_BUF.ENT(0)));

  15574  6 002442   000131 470400 4                  LDP0    TRM_+1
         6 002443   000000 235100                    LDA     0,,PR0
         6 002444   000004 735000                    ALS     4
         6 002445   000004 035007                    ADLA    4,DL
         6 002446   200031 755100                    STA     CURPGS+5,,AUTO
         6 002447   200031 631500                    EPPR1   CURPGS+5,,AUTO
         6 002450   200022 451500                    STP1    IDX,,AUTO
         6 002451   000012 236000 7                  LDQ     10
         6 002452   200021 756100                    STQ     @TYPE,,AUTO
         6 002453   002471 701000 6                  TSX1    DUMPMEM
         6 002454   000000 011000                    NOP     0

      940    15575    2      CALL DUMPMEM(CG_,4+CG_BUF.CNT*SIZEC(CG_BUF.ENT(0)));

  15575  6 002455   000133 470400 4                  LDP0    CG_+1
         6 002456   000000 236100                    LDQ     0,,PR0
         6 002457   000264 402007                    MPY     180,DL
         6 002460   000004 036007                    ADLQ    4,DL
         6 002461   200032 756100                    STQ     CURPGS+6,,AUTO
         6 002462   200032 631500                    EPPR1   CURPGS+6,,AUTO
         6 002463   200022 451500                    STP1    IDX,,AUTO
         6 002464   000013 236000 7                  LDQ     11
         6 002465   200021 756100                    STQ     @TYPE,,AUTO
         6 002466   002471 701000 6                  TSX1    DUMPMEM
         6 002467   000000 011000                    NOP     0
         6 002470   002537 710000 6                  TRA     s:15618
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:136  

      941    15576        /**/
      942    15577        /**/
      943    15578    2   DUMPMEM: PROC(VEC_,SIZ);

  15578  6 002471   200020 741300       DUMPMEM      STX1  ! @KC_CGID+1,,AUTO

      944    15579        /*I* NAME: DUMPMEM
      945    15580             PURPOSE: To dump any excess memory from VEC_
      946    15581             DESCRIPTION: DUMPMEM calls M$FDS to release any memory from VEC_ in
      947    15582             excess of the number pages needed to hold SIZ characters while not
      948    15583             completely releasing the area.
      949    15584        */
      950    15585        %VLP_VECTOR(FPTN = VEC_,STCLASS=" ");
      951    15600    3   DCL SIZ SBIN;
      952    15601    3   DCL XPGS SBIN;
      953    15602    3   DCL CURPGS SBIN;
      954    15603    3      CURPGS = (VEC_.W1.VSIZE#+4096)/4096;

  15603  6 002472   200021 470500                    LDP0    @VEC_,,AUTO
         6 002473   000000 236100                    LDQ     0,,PR0
         6 002474   000020 772000                    QRL     16
         6 002475   010000 036007                    ADLQ    4096,DL
         6 002476   000014 772000                    QRL     12
         6 002477   200024 756100                    STQ     CURPGS,,AUTO

      955    15604    3      XPGS = CURPGS - (SIZ+4095)/4096;

  15604  6 002500   200022 471500                    LDP1    @SIZ,,AUTO
         6 002501   100000 236100                    LDQ     0,,PR1
         6 002502   007777 036007                    ADLQ    4095,DL
         6 002503   010000 506007                    DIV     4096,DL
         6 002504   200030 756100                    STQ     CURPGS+4,,AUTO
         6 002505   200024 236100                    LDQ     CURPGS,,AUTO
         6 002506   200030 136100                    SBLQ    CURPGS+4,,AUTO
         6 002507   200023 756100                    STQ     XPGS,,AUTO

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:137  
      956    15605    3      IF CURPGS-XPGS=0

  15605  6 002510   200024 236100                    LDQ     CURPGS,,AUTO
         6 002511   200023 136100                    SBLQ    XPGS,,AUTO
         6 002512   002515 601000 6                  TNZ     s:15607

      957    15606    3      THEN XPGS=XPGS-1;                    /* Don't release all memory           */

  15606  6 002513   000001 336007                    LCQ     1,DL
         6 002514   200023 056100                    ASQ     XPGS,,AUTO

      958    15607    3      IF XPGS>0

  15607  6 002515   200023 235100                    LDA     XPGS,,AUTO
         6 002516   002532 604400 6                  TMOZ    s:15613

      959    15608    4      THEN DO;                             /* Excess pages to release            */

      960    15609    4           FPT_FDS.RESULTS_ = VECTOR(VEC_);

  15609  6 002517   000014 235000 7                  LDA     12
         6 002520   200021 236100                    LDQ     @VEC_,,AUTO
         6 002521   000136 757000 4                  STAQ    FPT_FDS+2

      961    15610    4           FPT_FDS.V.SEGSIZE# = XPGS*1024;

  15610  6 002522   200023 235100                    LDA     XPGS,,AUTO
         6 002523   000012 735000                    ALS     10
         6 002524   000000 620005                    EAX0    0,AL
         6 002525   000140 440000 4                  SXL0    FPT_FDS+4

      962    15611    4           CALL M$FDS(FPT_FDS) ALTRET(CONS_ERR);

  15611  6 002526   000134 630400 4                  EPPR0   FPT_FDS
         6 002527   430002 713400                    CLIMB   alt,fds
         6 002530   400400 401760                    pmme    nvectors=2
         6 002531   002533 702000 6                  TSX2    CONS_ERR
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:138  

      963    15612    4           END;

      964    15613    4      DO WHILE('0'B);

  15613  6 002532   002535 710000 6                  TRA     s:15616

      965    15614    4   CONS_ERR: CALL CONSERR;

  15614  6 002533   002426 701000 6     CONS_ERR     TSX1    CONSERR
         6 002534   000000 011000                    NOP     0

      966    15615    4           END;

      967    15616    3      RETURN;

  15616  6 002535   200020 221300                    LDX1  ! @KC_CGID+1,,AUTO
         6 002536   000001 702211                    TSX2  ! 1,X1

      968    15617    3   END DUMPMEM;
      969    15618    2   END CLEANUP;

  15618  6 002537   200016 221300                    LDX1  ! MSG_COUNT+2,,AUTO
         6 002540   000001 702211                    TSX2  ! 1,X1
      970    15619    1   END AZC$ACCTNG;

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:139  
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_SUBS_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KI_SUBS_C.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL_MACRO_C.:E05TOU  is referenced.
   EL_DATA_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure AZC$ACCTNG.
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:140  

 **** Variables and constants ****

  ****  Section 004  Data  AZC$ACCTNG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   212-0-0/d STRC(450)   r     1 BIGKEY                   174-0-0/d STRC(450)   r     1 CGCUR_KEY
   156-0-0/d STRC(450)   r     1 CGRD_KEY                 132-0-0/d STRC(72)    r     1 CG_
   322-0-0/d STRC(1332)  r     1 COM_BUF                  142-0-0/d STRC(108)   r     1 COM_KEY
   230-0-0/d STRC(432)   r     1 EXHUME_CGID              244-0-0/d STRC(1620)  r     1 EXHUME_RENT
   134-0-0/d STRC(216)   r     1 FPT_FDS                  426-0-0/d STRC(288)   r     1 FPT_MADMUCK
   116-0-0/d STRC(360)   r     1 FPT_PRCTRM               100-0-0/d STRC(504)   r     1 FPT_RDCGR
    44-0-0/d STRC(504)   r     1 FPT_RDTRM                 62-0-0/d STRC(504)   r     1 FPT_RDTRMN
    30-0-0/d STRC(432)   r     1 FPT_WRCGR                  0-0-0/d STRC(432)   r     1 FPT_WRLOG
    14-0-0/d STRC(432)   r     1 FPT_WRTRM                436-0-0/c STRC(72)    r     1 MADACCT
   440-0-0/d STRC(90)    r     1 MADSN                    370-0-0/c STRC(1071)  r     1 OCMESSHD
   152-0-0/d STRC(90)    r     1 TCUR_KEY                 146-0-0/d STRC(90)    r     1 TRD_KEY
   130-0-0/d STRC(72)    r     1 TRM_

  ****  Section 005 RoData AZC$ACCTNG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   156-0-0/d STRC(360)   r     1 FPT_CGDEL                206-0-0/d STRC(216)   r     1 FPT_CGGDS
   132-0-0/d STRC(360)   r     1 FPT_DELREC               170-0-0/d STRC(288)   r     1 FPT_EXHUME
   120-0-0/d STRC(360)   r     1 FPT_PRECORD               64-0-0/d STRC(504)   r     1 FPT_RDCOM
   102-0-0/d STRC(504)   r     1 FPT_RDCOMN               144-0-0/d STRC(360)   r     1 FPT_TRMDEL
   200-0-0/d STRC(216)   r     1 FPT_TRMGDS                 0-0-0/d STRC(216)   r     1 FPT_USRFIELD
    50-0-0/d STRC(432)   r     1 FPT_WRCOM                 34-0-0/d STRC(432)   r     1 FPT_WR_CSCG
     6-0-0/d STRC(432)   r     1 FPT_WR_SLUG              244-0-0/w STRC(432)   r     1 ISCGID
    32-0-0/w STRC(54)    r     1 JC_CITE                  214-0-0/w STRC(432)   r     1 OCCGID
   230-0-0/w STRC(432)   r     1 OSCGID                    22-0-0/w STRC(288)   r     1 SLUG_STA

  ****  Auto variables  ****

PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:141  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FCN                      17-0-0/w PTR         r     1 @KC_CGID
    17-0-0/w PTR         r     1 @REASON                    3-0-0/w PTR         r     1 @RECVEC
    22-0-0/w PTR         r     1 @SIZ                      21-0-0/w PTR         r     1 @TYPE
    21-0-0/w PTR         r     1 @TYPE                     21-0-0/w PTR         r     1 @VEC_
    23-0-0/w SBIN        r     1 ACTYP                     24-0-0/w PTR         r     1 BLK$
    24-0-0/w SBIN        r     1 CURPGS                     6-0-0/w UBIN        r     1 DSPTYP
    10-0-0/w SBIN        r     1 ENTX                      *0-0-0/w UBIN        r     1 FCN
    23-0-0/w SBIN        r     1 I                         23-0-0/w SBIN        r     1 I
    22-0-0/w SBIN        r     1 IDX                       *0-0-0/w STRC(432)   r     1 KC_CGID
    14-0-0/w UBIN        r     1 MSG_COUNT                  7-0-0/w UBIN        r     1 NDFEX
    *0-0-0/w SBIN        r     1 REASON                     5-0-0/w PTR         r     1 REC$
    *0-0-0/w STRC(72)    r     1 RECVEC                    12-0-0/w SBIN        r     1 RSN
    *0-0-0/w SBIN        r     1 SIZ                       23-0-0/b BIT         r     1 TEMP
    *0-0-0/w SBIN        r     1 TYPE                      *0-0-0/w SBIN        r     1 TYPE
    *0-0-0/d STRC(72)    r     1 VEC_                      23-0-0/w SBIN        r     1 XPGS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/w STRC(1656)  r     1 CG_BUF
     0-0-0/w STRC(468)   r     1 EL$CGKYN                   0-0-0/w STRC(216)   r     1 EL$ENTRY
     0-0-0/w STRC(1620)  r     1 EL$RENT                    0-0-0/w STRC(108)   r     1 EL$TERM
     0-0-0N  NULL        r     1 F$ACCTNG                   0-0-0N  NULL        r     1 F$COMAC
     0-0-0N  NULL        r     1 F$CSCG                     0-0-0/w STRC(432)   r     1 KC$CGID
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:142  
     0-0-0/w STRC(252)   r     1 KL$ACCTNG                  0-0-0/w STRC(2448)  r     1 KL$ADDD
     0-0-0/w STRC(180)   r     1 TRM_BUF                    0-0-0/w STRC(504)   r     1 UPRT


   Procedure AZC$ACCTNG requires 1377 words for executable code.
   Procedure AZC$ACCTNG requires 28 words of local(AUTO) storage.

    No errors detected in file AZC$ACCTNG.:E05TSI    .
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:143  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:144  
          MINI XREF LISTING

ACTYP IN PROCEDURE TRMOUT
     15096**DCL     15105<<ASSIGN  15109>>IF      15109>>IF      15113>>IF      15113>>IF      15116>>IF
     15118>>IF
B$ALT.CODE
     12746**DCL     12746--REDEF   12747--REDEF   12747--REDEF
B$ALT.ERR
     12747**DCL     15561>>ASSIGN
B$ALT.ERR.CODE
     12748**DCL     14860>>IF      15048>>IF      15050>>IF      15158>>IF      15158>>IF      15229>>IF
     15234>>IF      15309>>IF      15322>>IF      15348>>IF      15371>>IF
B$ALT.ERR.ERR#
     12748**DCL     12748--REDEF
B$ALT.EVID
     12747**DCL     12747--REDEF   12747--REDEF
B$JIT.CPFLAGS1.SLEAZE
     12852**DCL     12852--REDEF
B$JIT.ERR.MID
     12759**DCL     12759--REDEF
B$JIT.USERWORD
     12846**DCL     14847>>IF
B$JIT$
     12740**DCL     12753--IMP-PTR 14847>>IF
B$TCB.ALT$
     12742**DCL     14860>>IF      15048>>IF      15050>>IF      15158>>IF      15158>>IF      15229>>IF
     15234>>IF      15309>>IF      15322>>IF      15348>>IF      15371>>IF      15561>>ASSIGN
B$TCB$
     12739**DCL     12742--IMP-PTR 14860>>IF      15048>>IF      15050>>IF      15158>>IF      15158>>IF
     15229>>IF      15234>>IF      15309>>IF      15322>>IF      15348>>IF      15371>>IF      15561>>ASSIGN
BIGKEY
     13899**DCL     13383--DCLINIT 13384--DCLINIT 13463--DCLINIT 13464--DCLINIT 15043>>ASSIGN  15059>>ASSIGN
     15164>>ASSIGN
BIGKEY.CGK
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:145  
     13901**DCL     13900--DCLINIT
BIGKEY.CGK.XFEX
     13902**DCL     13903--REDEF
BLK$ IN PROCEDURE TRMOUT
     15097**DCL     15103<<ASSIGN  15104<<ASSIGN  15105>>ASSIGN  15124>>ASSIGN
CGCUR_KEY
     13854**DCL     14890<<ASSIGN  15304>>IF      15325<<ASSIGN  15330<<ASSIGN
CGCUR_KEY.CGK
     13856**DCL     13855--DCLINIT
CGCUR_KEY.CGK.XFEX
     13857**DCL     13858--REDEF
CGRD_KEY
     13809**DCL     13307--DCLINIT 13503--DCLINIT 13504--DCLINIT 13627--DCLINIT 13628--DCLINIT 15205<<ASSIGN
     15304>>IF      15330>>ASSIGN  15494<<ASSIGN
CGRD_KEY.CGK
     13811**DCL     13810--DCLINIT 14975--ASSIGN  15010--ASSIGN  15206--ASSIGN  15495--ASSIGN
CGRD_KEY.CGK.CGID
     13831**DCL     14977<<ASSIGN  15012<<ASSIGN
CGRD_KEY.CGK.CGID.ACCT#
     13833**DCL     15208<<ASSIGN  15316>>ASSIGN  15497<<ASSIGN
CGRD_KEY.CGK.CGID.NAME#
     13836**DCL     15499<<ASSIGN
CGRD_KEY.CGK.CGID.NAME#.CNT
     13837**DCL     15210<<ASSIGN
CGRD_KEY.CGK.CGID.NAME#.TXT
     13838**DCL     15211<<ASSIGN
CGRD_KEY.CGK.CGID.PSN#
     13834**DCL     15209<<ASSIGN  15318<<ASSIGN  15498<<ASSIGN
CGRD_KEY.CGK.UFEX
     13813**DCL     14976<<ASSIGN  15011<<ASSIGN  15207<<ASSIGN  15496<<ASSIGN
CGRD_KEY.CGK.XFEX
     13812**DCL     13813--REDEF
CGRD_KEY.L
     13810**DCL     14975<<ASSIGN  15010<<ASSIGN  15206<<ASSIGN  15495<<ASSIGN
CG_
     13712**DCL     13679--DCLINIT 15306>>ASSIGN  15365>>ASSIGN  15575<>CALL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:146  
CG_.PTR$
     13714**DCL     14000--IMP-PTR 14853>>DOWHILE 14854>>IF      14857>>ASSIGN  14893>>ASSIGN  14980>>ASSIGN
     14980>>ASSIGN  14981>>ASSIGN  14981>>ASSIGN  14982>>ASSIGN  14982>>ASSIGN  14983>>ASSIGN  14983>>ASSIGN
     14984>>ASSIGN  14984>>ASSIGN  15100>>ASSIGN  15104>>ASSIGN  15323>>ASSIGN  15363>>IF      15366>>ASSIGN
     15394>>IF      15401>>ASSIGN  15401>>ASSIGN  15402>>ASSIGN  15402>>ASSIGN  15521>>DOWHILE 15522>>IF
     15524>>ASSIGN  15524>>ASSIGN  15525>>ASSIGN  15525>>ASSIGN  15525>>ASSIGN  15575>>CALL
CG_.W1.VSIZE#
     13712**DCL     15394>>IF
CG_.W2
     13713**DCL     13714--REDEF
CG_BUF.CNT
     14001**DCL     14853>>DOWHILE 14893<<ASSIGN  14980>>ASSIGN  14981>>ASSIGN  14982>>ASSIGN  14983>>ASSIGN
     14984>>ASSIGN  15100>>ASSIGN  15323<<ASSIGN  15363>>IF      15366>>ASSIGN  15394>>IF      15401>>ASSIGN
     15402<<ASSIGN  15402>>ASSIGN  15521>>DOWHILE 15524<<ASSIGN  15524>>ASSIGN  15525>>ASSIGN  15575>>CALL
CG_BUF.ENT
     14002**DCL     14857>>ASSIGN  15104--ASSIGN  15366--ASSIGN  15394--IF      15401<<ASSIGN  15525<<ASSIGN
     15525>>ASSIGN  15575--CALL
CG_BUF.ENT.ACTYP
     14005**DCL     14980<<ASSIGN
CG_BUF.ENT.CGINF
     14048**DCL     14983<<ASSIGN
CG_BUF.ENT.CGINF.ATTR
     14053**DCL     14053--REDEF
CG_BUF.ENT.DKEY
     14026**DCL     14981<<ASSIGN  15522>>IF
CG_BUF.ENT.DKEY.DEVNM
     14030**DCL     14854>>IF
CG_BUF.ENT.LDKEY
     14033**DCL     14984<<ASSIGN
CG_BUF.ENT.NOCGINF
     14003**DCL     14982<<ASSIGN
CLEANUP
     15568**PROC    14881--CALL
CNS_ERR
     14897**LABEL   14892--CALLALT 14894--CALLALT
COM_BUF
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:147  
     14371**DCL     13244--DCLINIT 13245--DCLINIT 13345--DCLINIT 13346--DCLINIT 13385--DCLINIT 13386--DCLINIT
     14911<<ASSIGN  15480--ASSIGN
COM_BUF.ACTIVE
     14538**DCL     14800<<ASSIGN  14806<<ASSIGN  15448>>IF
COM_BUF.ACTYP
     14397**DCL     14913<<ASSIGN  14952>>IF      14969>>ASSIGN  14980>>ASSIGN  15422>>IF      15472>>IF
COM_BUF.ASSOCTRM
     14511**DCL     14922<<ASSIGN  15440>>ASSIGN  15441>>ASSIGN
COM_BUF.ATYP
     14411**DCL     14914<<ASSIGN  14926>>DOCASE  14932>>IF      14973>>IF      15492>>IF
COM_BUF.CGACCT
     14585**DCL     14590--REDEF   14928<<ASSIGN  15453>>ASSIGN  15497>>ASSIGN
COM_BUF.CGNAME
     14579**DCL     15499>>ASSIGN
COM_BUF.CGNAME.CNT
     14580**DCL     14930<<ASSIGN  15456>>ASSIGN
COM_BUF.CGNAME.TXT
     14581**DCL     14931<<ASSIGN  15455>>ASSIGN
COM_BUF.CGPSN
     14591**DCL     14929<<ASSIGN  15454>>ASSIGN  15498>>ASSIGN
COM_BUF.CODE
     14372**DCL     14912<<ASSIGN
COM_BUF.DEVNM
     14495**DCL     14499--REDEF   14920<<ASSIGN  14959>>ASSIGN  15439>>ASSIGN
COM_BUF.FEPNAME
     14597**DCL     14923<<ASSIGN  15443>>ASSIGN
COM_BUF.FEX
     14447**DCL     14916<<ASSIGN  14958>>ASSIGN  15442>>ASSIGN
COM_BUF.FINAL.CHARIN
     14559**DCL     14788<<ASSIGN
COM_BUF.FINAL.CHAROUT
     14564**DCL     14789<<ASSIGN
COM_BUF.FINAL.RECIN
     14569**DCL     14790<<ASSIGN
COM_BUF.FINAL.RECOUT
     14574**DCL     14791<<ASSIGN
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:148  
COM_BUF.FINAL.UTS
     14556**DCL     15479<<ASSIGN
COM_BUF.LASTUP.UTS
     14550**DCL     14787<<ASSIGN  14924<<ASSIGN
COM_BUF.REASON
     14376**DCL     14794<<ASSIGN  15167<<ASSIGN  15446>>ASSIGN  15474>>IF
COM_BUF.SPEED
     14450**DCL     14917<<ASSIGN
COM_BUF.TERMID
     14472**DCL     14918<<ASSIGN
COM_BUF.TERMID.CHANNEL
     14483**DCL     15444>>ASSIGN
COM_BUF.TNAME
     14507**DCL     14921<<ASSIGN  14962>>IF      14962>>IF      14966>>ASSIGN  15447>>ASSIGN  15483>>IF
     15483>>IF      15487>>ASSIGN
COM_BUF.TTYP
     14429**DCL     14915<<ASSIGN
COM_BUF.TWSN
     14502**DCL     14919<<ASSIGN
COM_BUF.USEAGE
     14517**DCL     14933<<ASSIGN  14935<<ASSIGN  14937<<ASSIGN  14939<<ASSIGN  14941<<ASSIGN  14942<<ASSIGN
     14944<<ASSIGN  14946<<ASSIGN  14948<<ASSIGN  14950<<ASSIGN  15445>>ASSIGN
COM_BUF.UTS
     14540**DCL     14925<<ASSIGN
COM_KEY
     13746**DCL     13243--DCLINIT 13343--DCLINIT 13344--DCLINIT 13541--DCLINIT 13542--DCLINIT 13587--DCLINIT
     13588--DCLINIT 15164<<ASSIGN
COM_KEY.DKY
     13748**DCL     13747--DCLINIT 14782--ASSIGN  14957--ASSIGN  14970>>ASSIGN  14981>>ASSIGN  15123--ASSIGN
     15124<<ASSIGN  15152--ASSIGN  15522>>IF      15543>>IF
COM_KEY.DKY.DEVNM
     13755**DCL     14784<<ASSIGN  14959<<ASSIGN  15153<<ASSIGN
COM_KEY.DKY.FEX
     13754**DCL     14783<<ASSIGN  14824<<ASSIGN  14834<<ASSIGN  14840<<ASSIGN  14958<<ASSIGN  15165>>IF
COM_KEY.DKY.LDX
     13756**DCL     14785<<ASSIGN  14960<<ASSIGN
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:149  
COM_KEY.L
     13747**DCL     14782<<ASSIGN  14957<<ASSIGN  15123<<ASSIGN  15152<<ASSIGN
CONNECT
     14902**PROC    14780--CALL
CONSERR
     15554**PROC    14861--CALL    14879--CALL    14897--CALL    14988--CALL    15053--CALL    15129--CALL
     15161--CALL    15238--CALL    15326--CALL    15350--CALL    15373--CALL    15409--CALL    15506--CALL
     15614--CALL
CONS_ERR
     14879**LABEL   14786--CALLALT 14810--CALLALT 14821--CALLALT 14873--CALLALT
CONS_ERR IN PROCEDURE CONNECT
     14988**LABEL   14961--CALLALT
CONS_ERR IN PROCEDURE DISCONNECT
     15506**LABEL   15481--CALLALT 15504--CALLALT
CONS_ERR IN PROCEDURE DUMPMEM
     15614**LABEL   15611--CALLALT
CONS_ERR IN PROCEDURE GETENT
     15409**LABEL   15395--CALLALT 15398--CALLALT
CONS_ERR IN PROCEDURE READCG
     15325**LABEL   15311--CALLALT
CONS_ERR IN PROCEDURE READTRM
     15237**LABEL   15231--CALLALT
CONS_ERR IN PROCEDURE TERMKEYIN
     15053**LABEL   15049--CALLALT 15079--CALLALT
CONS_ERR IN PROCEDURE TRMOUT
     15129**LABEL   15125--CALLALT
CONS_ERR IN PROCEDURE WRCGR
     15373**LABEL   15367--CALLALT
CONS_ERR IN PROCEDURE WRTRM
     15350**LABEL   15344--CALLALT
CRASH
     15138**PROC    14826--CALL    14836--CALL    14845--CALL
CURPGS IN PROCEDURE DUMPMEM
     15602**DCL     15603<<ASSIGN  15604>>ASSIGN  15605>>IF
DELDEVCG IN PROCEDURE DISCONNECT
     15511**PROC    15501--CALL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:150  
DELDEVTRM IN PROCEDURE DISCONNECT
     15532**PROC    15489--CALL
DEL_ERR IN PROCEDURE WRCGR
     15371**LABEL   15369--CALLALT
DEL_ERR IN PROCEDURE WRTRM
     15348**LABEL   15346--CALLALT
DISCONNECT
     15461**PROC    14795--CALL    15168--CALL
DSPTYP
     13023**DCL     15014<<ASSIGN  15019<<ASSIGN  15023<<ASSIGN  15034<<ASSIGN  15107>>DOCASE
DUMPMEM IN PROCEDURE CLEANUP
     15578**PROC    15574--CALL    15575--CALL
EL$CGKYN.CGID
     14356**DCL     15012>>ASSIGN
EL$CGKYN.CGID.ACCT#
     14358**DCL     15067>>ASSIGN  15068>>IF
EL$CGKYN.CGID.NAME#.CNT
     14362**DCL     15068>>IF      15074>>ASSIGN
EL$CGKYN.CGID.NAME#.TXT
     14363**DCL     15068>>IF      15073>>ASSIGN
EL$CGKYN.CGID.PSN#
     14359**DCL     15072>>ASSIGN
EL$ENTRY.INFO
     14605**DCL     14777--ASSIGN  14819--ASSIGN
EL$ENTRY.SIZE
     14604**DCL     14820>>ASSIGN
EL$ENTRY.TYPE
     14604**DCL     14604--REDEF   14778>>DOCASE  14792>>IF      14798>>IF      14804>>IF      14854>>IF
     14863>>IF
EL$ENTRY.UTS
     14604**DCL     14787>>ASSIGN  14924>>ASSIGN  14925>>ASSIGN  15479>>ASSIGN
EL$RENT.ACTYP
     14249**DCL     15105>>ASSIGN
EL$RENT.CGINF.ATTR
     14297**DCL     14297--REDEF
EL$RENT.DKEY
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:151  
     14270**DCL     15124>>ASSIGN
EL$TERM.CADDR
     14332**DCL     15078>>ASSIGN  15126>>ASSIGN
EL$TERM.KEYIN
     14331**DCL     15005>>DOCASE  15017>>IF      15065>>IF
EL$TERM.TNAME
     14333**DCL     15028>>ASSIGN  15077>>ASSIGN
ENTX
     13025**DCL     14852<<ASSIGN  14853>>DOWHILE 14854>>IF      14857>>ASSIGN  14866<<ASSIGN  14866>>ASSIGN
ERR
     14880**LABEL   14780--CALLALT 14795--CALLALT 14826--CALLALT 14836--CALLALT 14845--CALLALT 14850--CALLALT
     14876--CALLALT
ERR IN PROCEDURE CONNECT
     14989**LABEL   14967--CALLALT 14968--CALLALT 14971--CALLALT 14978--CALLALT 14979--CALLALT 14985--CALLALT
ERR IN PROCEDURE CRASH
     15162**LABEL   15168--CALLALT
ERR IN PROCEDURE DISCONNECT
     15507**LABEL   15488--CALLALT 15490--CALLALT 15500--CALLALT 15502--CALLALT
ERR IN PROCEDURE TERMKEYIN
     15054**LABEL   15013--CALLALT 15030--CALLALT
EXHUME_ALT
     14860**LABEL   14858--CALLALT
EXHUME_CGID
     14177**DCL     13648--DCLINIT 14851<<ASSIGN  14872>>IF
EXHUME_RENT
     14189**DCL     13647--DCLINIT 14857<<ASSIGN
EXHUME_RENT.CGINF.ATTR
     14240**DCL     14240--REDEF
FCN
     13021**DCL         8--PROC    14775>>DOCASE
FILL_CGRD_KEY
     15172**PROC    14849--CALL
FPT_CGDEL
     13627**DCL     15369<>CALL
FPT_CGDEL.V
     13630**DCL     13627--DCLINIT
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:152  
FPT_CGGDS
     13679**DCL     14892<>CALL    15311<>CALL    15395<>CALL
FPT_CGGDS.V
     13679**DCL     13679--DCLINIT
FPT_DELREC
     13587**DCL     15504<>CALL
FPT_DELREC.V
     13590**DCL     13587--DCLINIT
FPT_EXHUME
     13647**DCL     14858<>CALL
FPT_EXHUME.V
     13648**DCL     13647--DCLINIT
FPT_FDS
     13727**DCL     15611<>CALL
FPT_FDS.RESULTS_
     13727**DCL     15609<<ASSIGN
FPT_FDS.V
     13727**DCL     13727--DCLINIT
FPT_FDS.V.SEGSIZE#
     13729**DCL     15610<<ASSIGN
FPT_MADMUCK IN PROCEDURE READCG
     15267**DCL     15317<>CALL
FPT_MADMUCK.V IN PROCEDURE READCG
     15268**DCL     15267--DCLINIT
FPT_PRCTRM
     13563**DCL     15039<>CALL    15046<>CALL
FPT_PRCTRM.V
     13565**DCL     13563--DCLINIT
FPT_PRCTRM.V.N#
     13569**DCL     15038<<ASSIGN  15040<<ASSIGN
FPT_PRECORD
     13541**DCL     15155<>CALL
FPT_PRECORD.V
     13543**DCL     13541--DCLINIT
FPT_RDCGR
     13503**DCL     15307<>CALL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:153  
FPT_RDCGR.BUF_
     13505**DCL     15306<<ASSIGN
FPT_RDCGR.STATION_
     13506**DCL     13507--REDEF
FPT_RDCGR.V
     13507**DCL     13503--DCLINIT
FPT_RDCGR.V.DVBYTE.REREAD#
     13518**DCL     13518--REDEF
FPT_RDCGR.V.INDX#
     13516**DCL     13516--REDEF
FPT_RDCOM
     13343**DCL     14786<>CALL    15125<>CALL
FPT_RDCOM.STATION_
     13346**DCL     13347--REDEF
FPT_RDCOM.V
     13347**DCL     13343--DCLINIT
FPT_RDCOM.V.DVBYTE.REREAD#
     13358**DCL     13358--REDEF
FPT_RDCOM.V.INDX#
     13356**DCL     13356--REDEF
FPT_RDCOMN
     13383**DCL     15156<>CALL
FPT_RDCOMN.STATION_
     13386**DCL     13387--REDEF
FPT_RDCOMN.V
     13387**DCL     13383--DCLINIT
FPT_RDCOMN.V.DVBYTE.REREAD#
     13398**DCL     13398--REDEF
FPT_RDCOMN.V.INDX#
     13396**DCL     13396--REDEF
FPT_RDTRM
     13423**DCL     15227<>CALL
FPT_RDTRM.BUF_
     13425**DCL     15226<<ASSIGN
FPT_RDTRM.STATION_
     13426**DCL     13427--REDEF
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:154  
FPT_RDTRM.V
     13427**DCL     13423--DCLINIT
FPT_RDTRM.V.DVBYTE.REREAD#
     13438**DCL     13438--REDEF
FPT_RDTRM.V.INDX#
     13436**DCL     13436--REDEF
FPT_RDTRMN
     13463**DCL     15042<>CALL    15058<>CALL
FPT_RDTRMN.BUF_
     13465**DCL     15041<<ASSIGN  15057<<ASSIGN
FPT_RDTRMN.STATION_
     13466**DCL     13467--REDEF
FPT_RDTRMN.V
     13467**DCL     13463--DCLINIT
FPT_RDTRMN.V.DVBYTE.REREAD#
     13478**DCL     13478--REDEF
FPT_RDTRMN.V.INDX#
     13476**DCL     13476--REDEF
FPT_TRMDEL
     13607**DCL     15346<>CALL
FPT_TRMDEL.V
     13610**DCL     13607--DCLINIT
FPT_TRMGDS
     13662**DCL     14894<>CALL    15049<>CALL    15231<>CALL    15398<>CALL
FPT_TRMGDS.V
     13662**DCL     13662--DCLINIT
FPT_USRFIELD
     13072**DCL     14832<>CALL
FPT_USRFIELD.V
     13072**DCL     13072--DCLINIT
FPT_WRCGR
     13307**DCL     15367<>CALL
FPT_WRCGR.BUF_
     13307**DCL     15365<<ASSIGN
FPT_WRCGR.BUF_.BOUND
     13307**DCL     15366<<ASSIGN
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:155  
FPT_WRCGR.STATION_
     13309**DCL     13309--REDEF
FPT_WRCGR.V
     13310**DCL     13307--DCLINIT
FPT_WRCGR.V.DVBYTE.VFC#
     13316**DCL     13316--REDEF
FPT_WRCOM
     13243**DCL     14810<>CALL    14961<>CALL
FPT_WRCOM.STATION_
     13245**DCL     13245--REDEF
FPT_WRCOM.V
     13246**DCL     13243--DCLINIT
FPT_WRCOM.V.DVBYTE.VFC#
     13252**DCL     13252--REDEF
FPT_WRLOG
     13047**DCL     14821<>CALL    15481<>CALL
FPT_WRLOG.BUF_
     13047**DCL     14819<<ASSIGN  15480<<ASSIGN
FPT_WRLOG.BUF_.BOUND
     13047**DCL     14820<<ASSIGN
FPT_WRLOG.STATION_
     13049**DCL     13049--REDEF
FPT_WRLOG.V
     13050**DCL     13047--DCLINIT
FPT_WRLOG.V.DVBYTE.VFC#
     13056**DCL     13056--REDEF
FPT_WRTRM
     13275**DCL     15344<>CALL
FPT_WRTRM.BUF_
     13275**DCL     15342<<ASSIGN
FPT_WRTRM.BUF_.BOUND
     13275**DCL     15343<<ASSIGN
FPT_WRTRM.STATION_
     13277**DCL     13277--REDEF
FPT_WRTRM.V
     13278**DCL     13275--DCLINIT
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:156  
FPT_WRTRM.V.DVBYTE.VFC#
     13284**DCL     13284--REDEF
FPT_WR_CSCG
     13207**DCL     15079<>CALL    15457<>CALL
FPT_WR_CSCG.STATION_
     13209**DCL     13209--REDEF
FPT_WR_CSCG.V
     13210**DCL     13207--DCLINIT
FPT_WR_CSCG.V.DVBYTE.VFC#
     13216**DCL     13216--REDEF
FPT_WR_SLUG
     13096**DCL     14873<>CALL
FPT_WR_SLUG.STATION_
     13098**DCL     13098--REDEF
FPT_WR_SLUG.V
     13099**DCL     13096--DCLINIT
FPT_WR_SLUG.V.DVBYTE.VFC#
     13105**DCL     13105--REDEF
GETENT
     15380**PROC    14968--CALL    14979--CALL
I IN PROCEDURE DELDEVCG
     15519**DCL     15520<<ASSIGN  15521>>DOWHILE 15522>>IF      15525>>ASSIGN  15527<<ASSIGN  15527>>ASSIGN
I IN PROCEDURE DELDEVTRM
     15540**DCL     15541<<ASSIGN  15542>>DOWHILE 15543>>IF      15546>>ASSIGN  15548<<ASSIGN  15548>>ASSIGN
IDX IN PROCEDURE TRMOUT
     15095**DCL     15099<<ASSIGN  15100<<ASSIGN  15101>>DOWHILE 15103>>ASSIGN  15104>>ASSIGN  15132<<ASSIGN
     15132>>ASSIGN
IGNOR1 IN PROCEDURE TERMKEYIN
     15040**LABEL   15039--CALLALT
IGNOR2 IN PROCEDURE TERMKEYIN
     15047**LABEL   15046--CALLALT
IGNORE IN PROCEDURE CRASH
     15156**LABEL   15155--CALLALT
ISCGID
     14125**DCL     14938>>IF
JC_CITE
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:157  
     13151**DCL     13097--DCLINIT 13098--DCLINIT
KC$CGID
     14151**DCL     14849<>CALL    14851>>ASSIGN
KC_CGID IN PROCEDURE FILL_CGRD_KEY
     15194**DCL     15172--PROC
KC_CGID.ACCT# IN PROCEDURE FILL_CGRD_KEY
     15198**DCL     15208>>ASSIGN
KC_CGID.NAME#.CNT IN PROCEDURE FILL_CGRD_KEY
     15202**DCL     15210>>ASSIGN  15211>>ASSIGN
KC_CGID.NAME#.TXT IN PROCEDURE FILL_CGRD_KEY
     15203**DCL     15211>>ASSIGN
KC_CGID.PSN# IN PROCEDURE FILL_CGRD_KEY
     15199**DCL     15209>>ASSIGN
KL$ACCTNG.CHARIN
     14724**DCL     14788>>ASSIGN
KL$ACCTNG.CHAROUT
     14725**DCL     14789>>ASSIGN
KL$ACCTNG.DEVNM
     14720**DCL     14721--REDEF   14784>>ASSIGN
KL$ACCTNG.FEX
     14717**DCL     14783>>ASSIGN  14840>>ASSIGN  14841>>ASSIGN
KL$ACCTNG.LDCTX
     14719**DCL     14785>>ASSIGN
KL$ACCTNG.REASON
     14718**DCL     14794>>ASSIGN  14842>>ASSIGN
KL$ACCTNG.RECIN
     14726**DCL     14790>>ASSIGN
KL$ACCTNG.RECOUT
     14727**DCL     14791>>ASSIGN
KL$ADDD.ACTYP
     14627**DCL     14913>>ASSIGN
KL$ADDD.ASSOCTRM
     14651**DCL     14922>>ASSIGN
KL$ADDD.ATYP
     14628**DCL     14914>>ASSIGN
KL$ADDD.CGID
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:158  
     14683**DCL     14936>>IF      14938>>IF      14940>>IF      14977>>ASSIGN
KL$ADDD.CGID.ACCT#
     14685**DCL     14928>>ASSIGN
KL$ADDD.CGID.NAME#.CNT
     14689**DCL     14930>>ASSIGN
KL$ADDD.CGID.NAME#.TXT
     14690**DCL     14931>>ASSIGN
KL$ADDD.CGID.PSN#
     14686**DCL     14929>>ASSIGN
KL$ADDD.CGINFO
     14706**DCL     14983>>ASSIGN
KL$ADDD.CGINFO.ATTR
     14711**DCL     14711--REDEF
KL$ADDD.CINFO
     14653**DCL     14657--REDEF
KL$ADDD.DEVNM
     14646**DCL     14647--REDEF   14920>>ASSIGN
KL$ADDD.FEPNAME
     14631**DCL     14923>>ASSIGN
KL$ADDD.FEX
     14630**DCL     14916>>ASSIGN
KL$ADDD.LDINFO.LDCTKEY
     14659**DCL     14984>>ASSIGN
KL$ADDD.LDINFO.LDCTX
     14658**DCL     14960>>ASSIGN
KL$ADDD.NMID
     14660**DCL     14661--REDEF
KL$ADDD.NOCGINF
     14638**DCL     14982>>ASSIGN
KL$ADDD.SPEED
     14639**DCL     14917>>ASSIGN
KL$ADDD.TERMID
     14640**DCL     14918>>ASSIGN
KL$ADDD.TERMID.TTYP
     14642**DCL     14915>>ASSIGN
KL$ADDD.TNAME
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:159  
     14650**DCL     14921>>ASSIGN
KL$ADDD.TWSN
     14652**DCL     14919>>ASSIGN
KL$ADDD.USETP
     14636**DCL     14934>>IF
M$DELREC
      3827**DCL-ENT 15346--CALL    15369--CALL    15504--CALL
M$EXHUME
      3889**DCL-ENT 14858--CALL
M$FDS
      3860**DCL-ENT 15611--CALL
M$GDS
      3860**DCL-ENT 14892--CALL    14894--CALL    15049--CALL    15231--CALL    15311--CALL    15395--CALL
     15398--CALL
M$MADMUCK
      3833**DCL-ENT 15317--CALL
M$PRECORD
      3829**DCL-ENT 15039--CALL    15046--CALL    15155--CALL
M$READ
      3826**DCL-ENT 14786--CALL    15042--CALL    15058--CALL    15125--CALL    15156--CALL    15227--CALL
     15307--CALL
M$USRFIELD
      3885**DCL-ENT 14832--CALL
M$WRITE
      3826**DCL-ENT 14810--CALL    14821--CALL    14873--CALL    14961--CALL    15079--CALL    15344--CALL
     15367--CALL    15457--CALL    15481--CALL
MADACCT IN PROCEDURE READCG
     15284**DCL     15267--DCLINIT
MADACCT.ACCT# IN PROCEDURE READCG
     15284**DCL     15316<<ASSIGN
MADERR IN PROCEDURE READCG
     15319**LABEL   15317--CALLALT
MADSN IN PROCEDURE READCG
     15299**DCL     15268--DCLINIT
MADSN.SN# IN PROCEDURE READCG
     15299**DCL     15318>>ASSIGN
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:160  
MSG_COUNT
     13029**DCL     15004<<ASSIGN  15062>>IF      15438<<ASSIGN  15438>>ASSIGN
NDFEX
     13024**DCL     14825<<ASSIGN  14835<<ASSIGN  14841<<ASSIGN  14843>>IF      15165>>IF
NOTRM IN PROCEDURE TERMKEYIN
     15062**LABEL   15051--GOTO
OCCGID
     14073**DCL     14872>>IF      14936>>IF
OCMESSHD
     14739**DCL     13208--DCLINIT 13209--DCLINIT
OCMESSHD.ACTIVE
     14767**DCL     15450<<ASSIGN  15452<<ASSIGN
OCMESSHD.ASSOCTRM
     14756**DCL     15440<<ASSIGN
OCMESSHD.CADDR
     14740**DCL     15078<<ASSIGN  15126<<ASSIGN  15425<<ASSIGN  15429<<ASSIGN  15563<<ASSIGN
OCMESSHD.CER.CACER
     14762**DCL     15561<<ASSIGN
OCMESSHD.CGACCT
     14768**DCL     15067<<ASSIGN  15453<<ASSIGN
OCMESSHD.CGNAME
     14770**DCL     15073<<ASSIGN  15455<<ASSIGN
OCMESSHD.CGPSN
     14769**DCL     15072<<ASSIGN  15454<<ASSIGN
OCMESSHD.CONNECT
     14764**DCL     14801<<ASSIGN  14807<<ASSIGN  14954<<ASSIGN  15009<<ASSIGN  15020<<ASSIGN  15024<<ASSIGN
     15033<<ASSIGN  15070<<ASSIGN  15476<<ASSIGN
OCMESSHD.DEVNM
     14757**DCL     14758--REDEF   14761--REDEF   15439<<ASSIGN
OCMESSHD.DISCRSN
     14765**DCL     15446<<ASSIGN
OCMESSHD.FEPNAME
     14753**DCL     15443<<ASSIGN
OCMESSHD.FEX
     14752**DCL     15442<<ASSIGN
OCMESSHD.FLAGS
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:161  
     14746**DCL     14747--REDEF
OCMESSHD.LEN
     14751**DCL     15074<<ASSIGN  15456<<ASSIGN
OCMESSHD.MSG#
     14741**DCL     15064<<ASSIGN  15106<<ASSIGN  15110<<ASSIGN  15111<<ASSIGN  15114<<ASSIGN  15117<<ASSIGN
     15119<<ASSIGN  15121>>IF      15424<<ASSIGN  15428<<ASSIGN  15562<<ASSIGN
OCMESSHD.MSGID
     14742**DCL     14743--REDEF
OCMESSHD.PORT
     14754**DCL     15444<<ASSIGN
OCMESSHD.TNAME
     14766**DCL     15077<<ASSIGN  15447<<ASSIGN
OCMESSHD.USEAGE
     14755**DCL     15445<<ASSIGN
OCMESSHD.WSN
     14749**DCL     15441<<ASSIGN
OSCGID
     14099**DCL     14940>>IF
RD_ALT IN PROCEDURE CRASH
     15158**LABEL   15156--CALLALT
RD_ALT IN PROCEDURE READCG
     15309**LABEL   15307--CALLALT
RD_ALT IN PROCEDURE READTRM
     15229**LABEL   15227--CALLALT
RD_ALT IN PROCEDURE TERMKEYIN
     15048**LABEL   15042--CALLALT 15058--CALLALT
READCG
     15246**PROC    14850--CALL    14978--CALL    15013--CALL    15500--CALL
READIT IN PROCEDURE READCG
     15306**LABEL   15312--GOTO    15319--GOTO
READIT IN PROCEDURE READTRM
     15226**LABEL   15232--GOTO
READTRM
     15216**PROC    14967--CALL    15030--CALL    15488--CALL
REASON IN PROCEDURE CRASH
     15151**DCL     15138--PROC    15167>>ASSIGN
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:162  
REC$
     13022**DCL     14151--IMP-PTR 14317--IMP-PTR 14330--IMP-PTR 14336--IMP-PTR 14623--IMP-PTR 14716--IMP-PTR
     14730--IMP-PTR 14777<<ASSIGN  14783>>ASSIGN  14784>>ASSIGN  14785>>ASSIGN  14788>>ASSIGN  14789>>ASSIGN
     14790>>ASSIGN  14791>>ASSIGN  14794>>ASSIGN  14840>>ASSIGN  14841>>ASSIGN  14842>>ASSIGN  14849>>CALL
     14851>>ASSIGN  14854>>IF      14913>>ASSIGN  14914>>ASSIGN  14915>>ASSIGN  14916>>ASSIGN  14917>>ASSIGN
     14918>>ASSIGN  14919>>ASSIGN  14920>>ASSIGN  14921>>ASSIGN  14922>>ASSIGN  14923>>ASSIGN  14928>>ASSIGN
     14929>>ASSIGN  14930>>ASSIGN  14931>>ASSIGN  14934>>IF      14936>>IF      14938>>IF      14940>>IF
     14960>>ASSIGN  14977>>ASSIGN  14982>>ASSIGN  14983>>ASSIGN  14984>>ASSIGN  15003<<ASSIGN  15005>>DOCASE
     15012>>ASSIGN  15017>>IF      15028>>ASSIGN  15065>>IF      15067>>ASSIGN  15068>>IF      15068>>IF
     15068>>IF      15072>>ASSIGN  15073>>ASSIGN  15074>>ASSIGN  15077>>ASSIGN  15078>>ASSIGN  15126>>ASSIGN
RECVEC
     13018**DCL         8--PROC
RECVEC.HDR$
     13020**DCL     14604--IMP-PTR 14777>>ASSIGN  14778>>DOCASE  14787>>ASSIGN  14792>>IF      14798>>IF
     14804>>IF      14819>>ASSIGN  14820>>ASSIGN  14854>>IF      14863>>IF      14924>>ASSIGN  14925>>ASSIGN
     15003>>ASSIGN  15479>>ASSIGN
RSN
     13027**DCL     14842<<ASSIGN  14845<>CALL
RTN IN PROCEDURE WR_KEYINCD
     15458**LABEL   15457--CALLALT
SIZ IN PROCEDURE DUMPMEM
     15600**DCL     15578--PROC    15604>>ASSIGN
SLUG_STA
     13122**DCL     13098--DCLINIT
SLUG_STA.MSGIDXT
     13132**DCL     13135--REDEF
TCUR_KEY
     13790**DCL     13563--DCLINIT 13564--DCLINIT 14891<<ASSIGN  15035--ASSIGN  15043<<ASSIGN  15059<<ASSIGN
     15224>>IF      15237<<ASSIGN  15242<<ASSIGN
TCUR_KEY.L
     13791**DCL     15035<<ASSIGN
TCUR_KEY.TNAME
     13794**DCL     15037<<ASSIGN
TCUR_KEY.UFEX
     13793**DCL     15036<<ASSIGN  15044>>DOWHILE
TCUR_KEY.XFEX
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:163  
     13792**DCL     13793--REDEF
TEMP IN PROCEDURE READCG
     15301**DCL     15303<<ASSIGN  15314>>IF      15315<<ASSIGN
TERMKEYIN
     14994**PROC    14876--CALL
TRD_KEY
     13771**DCL     13275--DCLINIT 13423--DCLINIT 13424--DCLINIT 13607--DCLINIT 13608--DCLINIT 14964--ASSIGN
     15026--ASSIGN  15224>>IF      15242>>ASSIGN  15485--ASSIGN
TRD_KEY.L
     13772**DCL     14964<<ASSIGN  15026<<ASSIGN  15485<<ASSIGN
TRD_KEY.TNAME
     13775**DCL     14966<<ASSIGN  15028<<ASSIGN  15029>>IF      15029<<ASSIGN  15487<<ASSIGN
TRD_KEY.UFEX
     13774**DCL     14965<<ASSIGN  15027<<ASSIGN  15486<<ASSIGN
TRD_KEY.XFEX
     13773**DCL     13774--REDEF
TRMOUT IN PROCEDURE TERMKEYIN
     15083**PROC    15015--CALL    15031--CALL    15045--CALL
TRM_
     13696**DCL     13662--DCLINIT 15041>>ASSIGN  15057>>ASSIGN  15226>>ASSIGN  15342>>ASSIGN  15574<>CALL
TRM_.PTR$
     13698**DCL     13932--IMP-PTR 14895>>ASSIGN  14969>>ASSIGN  14969>>ASSIGN  14970>>ASSIGN  14970>>ASSIGN
     15099>>ASSIGN  15103>>ASSIGN  15235>>ASSIGN  15340>>IF      15343>>ASSIGN  15397>>IF      15405>>ASSIGN
     15405>>ASSIGN  15406>>ASSIGN  15406>>ASSIGN  15542>>DOWHILE 15543>>IF      15545>>ASSIGN  15545>>ASSIGN
     15546>>ASSIGN  15546>>ASSIGN  15546>>ASSIGN  15574>>CALL
TRM_.W1.VSIZE#
     13696**DCL     15397>>IF
TRM_.W2
     13697**DCL     13698--REDEF
TRM_BUF.CNT
     13933**DCL     14895<<ASSIGN  14969>>ASSIGN  14970>>ASSIGN  15099>>ASSIGN  15235<<ASSIGN  15340>>IF
     15343>>ASSIGN  15397>>IF      15405>>ASSIGN  15406<<ASSIGN  15406>>ASSIGN  15542>>DOWHILE 15545<<ASSIGN
     15545>>ASSIGN  15546>>ASSIGN  15574>>CALL
TRM_BUF.ENT
     13934**DCL     15103--ASSIGN  15343--ASSIGN  15397--IF      15405<<ASSIGN  15546<<ASSIGN  15546>>ASSIGN
     15574--CALL
PL6.E3A0      #001=AZC$ACCTNG File=AZC$ACCTNG.:E05TSI                            TUE 07/29/97 11:04 Page:164  
TRM_BUF.ENT.ACTYP
     13936**DCL     14969<<ASSIGN
TRM_BUF.ENT.DKEY
     13957**DCL     14970<<ASSIGN  15543>>IF
TYPE IN PROCEDURE GETENT
     15392**DCL     15380--PROC    15393>>IF      15399>>IF
TYPE IN PROCEDURE TRMOUT
     15094**DCL     15083--PROC    15098>>IF      15102>>IF
UPRT.STATION
     14328**DCL     14854>>IF
VEC_ IN PROCEDURE DUMPMEM
     15596**DCL     15578--PROC    15609--ASSIGN
VEC_.W1.VSIZE# IN PROCEDURE DUMPMEM
     15596**DCL     15603>>ASSIGN
VEC_.W2 IN PROCEDURE DUMPMEM
     15597**DCL     15598--REDEF
WRCGR
     15357**PROC    14985--CALL    15502--CALL
WRTRM
     15334**PROC    14971--CALL    15490--CALL
WR_KEYIN IN PROCEDURE WR_KEYINCD
     15431**ENTRY   15127--CALL
WR_KEYINCD
     15415**PROC    14802--CALL    14808--CALL    14955--CALL    15477--CALL
XPGS IN PROCEDURE DUMPMEM
     15601**DCL     15604<<ASSIGN  15605>>IF      15606<<ASSIGN  15606>>ASSIGN  15607>>IF      15610>>ASSIGN
